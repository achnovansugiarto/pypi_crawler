{
  "info": {
    "author": "Doug Burke",
    "author_email": "dburke.gw@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Astronomy",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# Parsing XSPEC files\n\nThis is a **highly experimental** package to support parsing\n[XSPEC](https://heasarc.gsfc.nasa.gov/xanadu/xspec/) files - at\npresent only the\n\"[model.dat](https://heasarc.gsfc.nasa.gov/xanadu/xspec/manual/XSappendixLocal.html)\"\nformat - into a structured form. It has been extracted from code\nwritten by SDS at [CXC](https://cxc.harvard.edu/) to support XSPEC\nusers, and which has recently been added to\n[Sherpa](https://github.com/sherpa/sherpa) in\nhttps://github.com/sherpa/sherpa/pull/1260\n\n# Installation\n\nHopefully it's as simple as\n\n    pip install parse_xspec\n\not you can try installing directly from [GitHub](https://github.com/cxcsds/parse_xspec).\n\n# Aim\n\n```\n>>> from io import StringIO\n>>> from parse_xspec.models import parse_xspec_model_description\n>>> model = StringIO(\"\"\"agauss         2   0.         1.e20          C_agauss  add  0\nLineE   A      10.0   0.      0.      1.e6      1.e6      0.01\nSigma   A      1.0    0.      0.      1.e6      1.e6      0.01\n\n\"\"\")\n>>> parsed = parse_xspec_model_description(model)\n>>> len(parsed)\n1\n>>> parsed[0]\nAddModelDefinition('agauss','C_agauss',[0],0.0,1e+20,[BasicParameterDefinition('LineE', 10.0, units='A', softmin=0.0, softmax=1000000.0, hardmin=0.0, hardmax=1000000.0, delta=0.01), BasicParameterDefinition('Sigma', 1.0, units='A', softmin=0.0, softmax=1000000.0, hardmin=0.0, hardmax=1000000.0, delta=0.01)])\n>>> parsed[0].name\n'agauss'\n>>> parsed[0].funcname\n'agauss'\n>>> parsed[0].language\n'C++ style'\n>>> parsed[0].modeltype\n'Add'\n>>> parsed[0].flags\n[0]\n>>> parsed[0].initString is None\nTrue\n>>> parsed[0].pars\n[BasicParameterDefinition('LineE', 10.0, units='A', softmin=0.0, softmax=1000000.0, hardmin=0.0, hardmax=1000000.0, delta=0.01), BasicParameterDefinition('Sigma', 1.0, units='A', softmin=0.0, softmax=1000000.0, hardmin=0.0, hardmax=1000000.0, delta=0.01)]\n>>> parsed[0].pars[0].paramtype\n'Basic'\n>>> parsed[0].pars[0].name\n'LineE'\n>>> parsed[0].pars[0].units\n'A'\n>>> parsed[0].pars[0].default\n10.0\n>>> parsed[0].pars[0].softmin\n0.0\n>>> parsed[0].pars[0].hardmax\n1000000.0\n>>> parsed[0].pars[0].delta\n0.01\n>>> parsed[0].pars[0].frozen\nFalse\n```\n\nThe idea is that we have a structured representation of the data.\n\nLet's see what happens when we querh the HEASOFT 6.29 model.dat file\n(you can just use a string but I want to check out the pathlib\nhandling):\n\n```\n>>> import os\n>>> from pathlib import Path\n>>> headas = os.getenv('HEADAS')\n>>> p = headas\n>>> models = p / '..' / 'spectral' / 'manager' / 'model.dat'\n>>> parsed = parse_xspec_model_description(models)\nmodel=vvwdem re-uses parameter name p\nmodel=ismabs re-uses parameter name sii\nmodel=ismabs re-uses parameter name siii\n>>> len(parsed)\n232\n```\n\nSo, this has reported three cases where the parameter names are the\nsame, **if** you ignore the case of the parameters (which is a feature\nof the Sherpa model interface). The\n[ISMABS](https://heasarc.gsfc.nasa.gov/xanadu/xspec/manual/XSmodelIsmabs.html)\ncase is a fun one because we have `SiI` and `SII` as well as `SiII`\nand `SiIII`.\n\nOne bug I found and reported in an old version of XSPEC was that\nthe same function was being used for multiple models (this is technically\npossible but it seems unlikely to be what was meant). We can check\nwith code like the following:\n\n```\n>>> ctr = Counter([p.funcname for p in parsed])\n>>> [n for n, c in ctr.items() if c > 1]\n[]\n```\n\nWhat is the most-popular parameter name? Is it `nH` or `He`?\n\n```\n>>> pnames = []\n>>> for model in parsed:\n...     for par in model.pars:\n...         pnames.append(par.name)\n...\n>>> ctr = Counter(pnames)\n>>> ctr.most_common(5)\n[('Redshift', 100), ('kT', 49), ('Fe', 42), ('O', 41), ('He', 40)]\n```\n\nIt's not really different if we ignore case:\n\n```\n>>> lnames = []\n>>> for model in parsed:\n...     for par in model.pars:\n...         lnames.append(par.name.lower())\n...\n>>> ctr = Counter(lnames)\n>>> ctr.most_common(5)\n[('redshift', 124), ('kt', 49), ('fe', 42), ('n', 41), ('o', 41)]\n```\n\nHow many convolution models are there?\n\n```\n>>> ctr = Counter([p.modeltype for p in parsed])\n>>> ctr\nCounter({'Add': 148, 'Mul': 61, 'Con': 22, 'Acn': 1})\n```\n\nWhat is the break-down of model \"interfaces\" (that is C vs C++ vs\nFORTRAN)?\n\n```\n>>> ctr = Counter([p.language for p in parsed])\n>>> ctr\nCounter({'C++ style': 135, 'Fortran - single precision': 89, 'C style': 8})\n```\n\nThe use of a string rather than an enumeration bugs me and I may\nchange it!\n\nWhat \"special\" parameters are used (that is scale or switch):\n\n```\n>>> for model in parsed:\n...     for par in model.pars:\n...         if par.paramtype == 'Basic':\n...             continue\n...         print(par)\n...\nswitch = 1\nswitch = 1\nswitch = 1\nswitch = 1\nswitch = 1\nswitch = 1\nswitch = 1\nenergy00 = 0.5 units=keV\nenergy01 = 1.0 units=keV\nenergy02 = 1.5 units=keV\nenergy03 = 2.0 units=keV\nenergy04 = 3.0 units=keV\nenergy05 = 4.0 units=keV\nenergy06 = 5.0 units=keV\nenergy07 = 6.0 units=keV\nenergy08 = 7.0 units=keV\nenergy09 = 8.0 units=keV\nswitch = 2\nmodel = 1\nrflag = 1\nlflag = 0\npivotE = 1.0 units=keV\nswitch = 1\nswitch = 1\nspecfile = 1200\nspecfile = 1200\nspecfile = 6\nnmax = 1.0\nFAST = 0.0\nlflag = 1\nvflag = 1\nswitch = 1\nswitch = 2\nswitch = 1\nswitch = 1\nswitch = 2\nswitch = 2\nswitch = 2\nrflag = 1\nlflag = 1\npivotE = 1.0 units=keV\nDustModel = 1\nmethod = 1\nredshift = 0.0\nmodel = 0\nlyman_limit = 1\nnregions = 1.0\nfracexpo = 1.0\n```\n\nHow many parameters have a hard maximum different to their soft\nmaximum (skipping scale and switch parameters)?\n\n```\n>>> count = 0\n>>> for model in parsed:\n...     for par in model.pars:\n...         if par.paramtype != 'Basic':\n...             continue\n...         if par.hardmax == par.softmax:\n...             continue\n...         count += 1\n...\n>>> count\n391\n```\n\nHow many parameters start at their hard-minimum value?\n\n```\n>>> count = 0\n>>> for model in parsed:\n...     for par in model.pars:\n...         if par.paramtype != 'Basic' or par.default > par.hardmin:\n...             continue\n...         count += 1\n...\n>>> count\n117\n```\n\nIf you use `softmin` instead you get 124.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cxcsds/parse_xspec",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parse-xspec",
    "package_url": "https://pypi.org/project/parse-xspec/",
    "platform": "",
    "project_url": "https://pypi.org/project/parse-xspec/",
    "project_urls": {
      "Bug Tracker": "https://github.com/cxcsds/parse_xspec/issues",
      "Homepage": "https://github.com/cxcsds/parse_xspec"
    },
    "release_url": "https://pypi.org/project/parse-xspec/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Parse files used by XSPEC (highly experimental)",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11419001,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d9e2720861052005c718422e809558f007937ed2092d0d305284b831a2b037f",
          "md5": "0548f5baf4fba03b82d29c70d15681fe",
          "sha256": "ec5fcbfb355c98235b3131690ade1754e70fb8748c95fb504b69aed6f996bea5"
        },
        "downloads": -1,
        "filename": "parse_xspec-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0548f5baf4fba03b82d29c70d15681fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22051,
        "upload_time": "2021-09-10T19:28:51",
        "upload_time_iso_8601": "2021-09-10T19:28:51.152753Z",
        "url": "https://files.pythonhosted.org/packages/5d/9e/2720861052005c718422e809558f007937ed2092d0d305284b831a2b037f/parse_xspec-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04d4c948d79a1283a9b6639603ddd273d443aeeddcc720032c8dbd59381f3412",
          "md5": "bca582c5cbb59595c38252b3066fc2cd",
          "sha256": "d8deb4195cf9d8a6bc9313235c276af4203b2ff21c6b8a26488e4cc50c09aa8f"
        },
        "downloads": -1,
        "filename": "parse-xspec-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bca582c5cbb59595c38252b3066fc2cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23269,
        "upload_time": "2021-09-10T19:28:52",
        "upload_time_iso_8601": "2021-09-10T19:28:52.894160Z",
        "url": "https://files.pythonhosted.org/packages/04/d4/c948d79a1283a9b6639603ddd273d443aeeddcc720032c8dbd59381f3412/parse-xspec-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d9e2720861052005c718422e809558f007937ed2092d0d305284b831a2b037f",
        "md5": "0548f5baf4fba03b82d29c70d15681fe",
        "sha256": "ec5fcbfb355c98235b3131690ade1754e70fb8748c95fb504b69aed6f996bea5"
      },
      "downloads": -1,
      "filename": "parse_xspec-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0548f5baf4fba03b82d29c70d15681fe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 22051,
      "upload_time": "2021-09-10T19:28:51",
      "upload_time_iso_8601": "2021-09-10T19:28:51.152753Z",
      "url": "https://files.pythonhosted.org/packages/5d/9e/2720861052005c718422e809558f007937ed2092d0d305284b831a2b037f/parse_xspec-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "04d4c948d79a1283a9b6639603ddd273d443aeeddcc720032c8dbd59381f3412",
        "md5": "bca582c5cbb59595c38252b3066fc2cd",
        "sha256": "d8deb4195cf9d8a6bc9313235c276af4203b2ff21c6b8a26488e4cc50c09aa8f"
      },
      "downloads": -1,
      "filename": "parse-xspec-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bca582c5cbb59595c38252b3066fc2cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23269,
      "upload_time": "2021-09-10T19:28:52",
      "upload_time_iso_8601": "2021-09-10T19:28:52.894160Z",
      "url": "https://files.pythonhosted.org/packages/04/d4/c948d79a1283a9b6639603ddd273d443aeeddcc720032c8dbd59381f3412/parse-xspec-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}