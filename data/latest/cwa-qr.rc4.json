{
  "info": {
    "author": "Peter Körner",
    "author_email": "peter@mazdermind.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Python implementation of the Corona-Warn-App (CWA) Event Registration\n===================================================================\n\n[![GitHub](https://img.shields.io/github/license/MaZderMind/cwa-qr)](https://github.com/MaZderMind/cwa-qr/blob/main/LICENSE.txt)\n[![PyPI](https://img.shields.io/pypi/v/cwa-qr)](https://pypi.org/project/cwa-qr/)\n\nThis is an implementation of the Protocol used to generate event and location QR codes for the Corona-Warn-App (CWA) as described in [\nCorona-Warn-App: Documentation – Event Registration - Summary](https://github.com/corona-warn-app/cwa-documentation/blob/master/event_registration.md).\n\n**This is not an official implementation – use it at your own risk** (as far as that's possible, these days…).\n\nState\n-----\nThe Interface described in the Document is implemented, the undocumented pieces (Public Key Value, Seed Length, Versions etc.) have been taken from the Open Source iOS Client Application. As far as I know the interface has been fully implemented, but without an actual positive Corona Test there is no way to do an End-to-End verification.\n\nUsage\n-----\nUse as follows:\n\n```py\n#!/usr/bin/env python3\n\nfrom datetime import datetime, time, timezone\n\nimport cwa_qr\n\n# Construct Event-Descriptor\nevent_description = cwa_qr.CwaEventDescription()\nevent_description.location_description = 'Zuhause'\nevent_description.location_address = 'Gau-Odernheim'\nevent_description.start_date_time = datetime(2021, 4, 25, 8, 0).astimezone(timezone.utc)\nevent_description.end_date_time = datetime(2021, 4, 25, 18, 0).astimezone(timezone.utc)\nevent_description.location_type = cwa_qr.CwaLocation.permanent_workplace\nevent_description.default_check_in_length_in_minutes = 4 * 60\n\n# Renew QR-Code every night at 4:00\nseed_date = event_description.seed = cwa_qr.rollover_date(datetime.now(), time(4, 0))\nprint(\"seedDate\", seed_date)\nevent_description.seed = \"Some Secret\" + str(seed_date)\n\n# Generate QR-Code\nqr = cwa_qr.generate_qr_code(event_description)\n\n# Save as PNG\nimg = qr.make_image(fill_color=\"black\", back_color=\"white\")\nimg.save('example.png')\nprint(\"generated example.png\")\n```\n\nSee [example_full.py](example_full.py) for an example using all features.\n\nCwaEventDescription\n-------------------\n- `location_description`: Description of the Location, Optional, String, max 100 Characters\n- `location_address`: Address of the Location, Optional, String, max 100 Characters\n- `start_date_time`: Start of the Event, Optional, datetime in UTC\n- `end_date_time`: End of the Event, Optional, datetime in UTC\n  **Caution**, QR-Codes generated with different start/end times will have different Event-IDs and not warn users that\n  have checked in with the other Code. **Do not use `datetime.now()`** for start/end-date. For repeating Events use\n  `cwa_qr.rollover_date` to get a defined rollover.\n- `location_type`: Type of the Location, Optional, one of\n  - `cwa.CwaLocation.unspecified`\n  - `cwa.CwaLocation.permanent_other`\n  - `cwa.CwaLocation.temporary_other`\n  - `cwa.CwaLocation.permanent_retail`\n  - `cwa.CwaLocation.permanent_food_service`\n  - `cwa.CwaLocation.permanent_craft`\n  - `cwa.CwaLocation.permanent_workplace`\n  - `cwa.CwaLocation.permanent_educational_institution`\n  - `cwa.CwaLocation.permanent_public_building`\n  - `cwa.CwaLocation.temporary_cultural_event`\n  - `cwa.CwaLocation.temporary_club_activity`\n  - `cwa.CwaLocation.temporary_private_event`\n  - `cwa.CwaLocation.temporary_worship_service`\n- `default_check_in_length_in_minutes`: Default Check-out time in minutes, Optional\n- `seed`: Seed to rotate the QR-Code, Optional, `[str, bytes, int, float, date, datetime]` or `None` (Default).\n  **Use with caution & read below!** If unsure, leave blank.\n\nRotating QR-Codes\n-----------------\nFrom the [Documentation](https://github.com/corona-warn-app/cwa-documentation/blob/master/event_registration.md):\n> Profiling of Venues\n>\n> An adversary can collect this information for a single venue by scanning the QR code and extracting and storing the\n> data. To mitigate the risk, CWA encourages owners to regularly generate new QR codes for their venues. The more\n> frequent QR codes are updated, the more difficult it is to keep a central database with venue data up-to-date.\n> **However**, a new QR code should only be generated **when no visitor is at the event or location**, because\n> visitors can only warn each other **with the same QR code**.\n\nFrom an Application-Developers point of view, special care must be taken to decide if and when QR codes should be\nchanged. A naive approach, i.e. changing the QR-Code on every call, would render the complete Warning-Chain totally\nuseless **without anyone noticing**. Therefore, the Default of this Library as of 2021/04/26 is to **not seed the\nQR-Codes with random values**. This results in every QR-Code being generated without an explicit Seed to be identical,\nwhich minimizes the Risk of having QR-Codes that do not warn users as expected at the increased risk of profiling of\nVenues.\n\nAs an Application-Developer you are encouraged to **ask you user if and when they want their QR-Codes to change** and\nexplain to them that they should only rotate their Codes **when they are sure that nobody is at the location or in the\nvenue** for at least 30 Minutes, to allow airborne particles to settle or get filtered out. Do **not make assumptions**\nregarding a good time to rotate QR-Codes (i.e. always at 4:00 am) because they will fail so warn people in some\nimportant Situations (nightclubs, hotels, night-shift working) **without anyone noticing**.\n\nTo disable rotation of QR-Codes, specify None as the Seed (Default behaviour).\n\nThe Library also gives you a utility to allow rotating QR-Codes at a given time of the day. Please make\nsure to also integrate some kind of Secret into the seed, to prevent an adversary from calculating  future QR-Codes.\nThe Secret *must stay constant* over time, or the resulting QR-Codes will not correctly trigger warnings.\n\n```py\nimport io\nfrom datetime import datetime, time\n\nimport cwa_qr\n\n# Construct Event-Descriptor\nevent_description = cwa_qr.CwaEventDescription()\n# …\nseed_date = cwa_qr.rollover_date(datetime.now(), time(4, 0))\nevent_description.seed = \"Some Secret\" + str(seed_date)\n```\n\nthis will keep the date-based seed until 4:00 am on the next day and only then roll over to the next day.\nSee [test_rollover.py](cwa_qr/test_rollover.py) for an in-depth look at the rollover code.\n\nPosters\n-------\nThis Library has Support for compositing the QR-Code with a Poster, explaining its usage:\n\"Checken Sie ein, stoppen Sie das Virus\". The Poster-Functionality works by composing the QR-Code SVG with the\nPoster-SVG and thus only supports SVG-Output. Both Landscape and Portrait-Posters are supported.\n\nYou can use [pyrsvg](https://www.cairographics.org/cookbook/pyrsvg/) if you need to convert the poster to a PNG\nor [svglib](https://pypi.org/project/svglib/) to convert it to a PDF.\n\nSee [example_full.py](example_full.py) for an Example on how to use the Poster-Functionality.\n\nPython 2/3\n----------\nThis library supports Python 3.7+, however there is a backport to Python 2 available at https://github.com/MaZderMind/cwa-qr/tree/py2\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MaZderMind/cwa-qr",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cwa-qr",
    "package_url": "https://pypi.org/project/cwa-qr/",
    "platform": null,
    "project_url": "https://pypi.org/project/cwa-qr/",
    "project_urls": {
      "Bug Tracker": "https://github.com/MaZderMind/cwa-qr/issues",
      "Homepage": "https://github.com/MaZderMind/cwa-qr"
    },
    "release_url": "https://pypi.org/project/cwa-qr/1.2.2/",
    "requires_dist": [
      "Pillow",
      "protobuf",
      "qrcode",
      "six (>=1.15.0)",
      "svgutils"
    ],
    "requires_python": "",
    "summary": "Python Implementation of the CoronaWarnApp (CWA) Event Registration",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15316220,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60f90ca7e24b65762b3eef1950722b5955a545deb7fc759ff6bdfe2345f8f767",
          "md5": "fe49095af1e1aa8372422eb2dcd1bf6a",
          "sha256": "9ae0b725c820ecfb1fbd63966a2292809875f34b3eb24bdadf558e8cf9aa5596"
        },
        "downloads": -1,
        "filename": "cwa_qr-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe49095af1e1aa8372422eb2dcd1bf6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11466,
        "upload_time": "2021-04-25T19:59:31",
        "upload_time_iso_8601": "2021-04-25T19:59:31.338698Z",
        "url": "https://files.pythonhosted.org/packages/60/f9/0ca7e24b65762b3eef1950722b5955a545deb7fc759ff6bdfe2345f8f767/cwa_qr-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "509aadca2b67d3df139ed4d3aca5766f40c6d40253fe7b76afa680ac1904180d",
          "md5": "bb19c70e51bd5caaa24098dc0396e350",
          "sha256": "c0c1a3d7d5a69f281888bc3f1443bed82f9d3e87e3241ac85156eb71281e7cd4"
        },
        "downloads": -1,
        "filename": "cwa_qr-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bb19c70e51bd5caaa24098dc0396e350",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12936,
        "upload_time": "2021-04-25T19:59:32",
        "upload_time_iso_8601": "2021-04-25T19:59:32.687147Z",
        "url": "https://files.pythonhosted.org/packages/50/9a/adca2b67d3df139ed4d3aca5766f40c6d40253fe7b76afa680ac1904180d/cwa_qr-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "723a8fe30f2fa91d65a509bc56f1c8072b3294b8833cfff7a1c65173e698a3e0",
          "md5": "0239724b0e26a44578d8a5c84729ba43",
          "sha256": "4acd86ae3b6354645d4888a08eafaa7239ccf8c56ecdd2b5747eb2828a3f8bf5"
        },
        "downloads": -1,
        "filename": "cwa_qr-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0239724b0e26a44578d8a5c84729ba43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13601,
        "upload_time": "2021-05-05T19:37:47",
        "upload_time_iso_8601": "2021-05-05T19:37:47.302783Z",
        "url": "https://files.pythonhosted.org/packages/72/3a/8fe30f2fa91d65a509bc56f1c8072b3294b8833cfff7a1c65173e698a3e0/cwa_qr-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11ea638bcd1e0e76a98e15ff47ef4f169e05035722a52dba57e4ba1e1d9e7cac",
          "md5": "0a019974e82d590c9e42d521d2b6283a",
          "sha256": "13d8e5139d195fb3476d8a13add5ef5beddad6f0621e08396413db5c3c5366a4"
        },
        "downloads": -1,
        "filename": "cwa_qr-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a019974e82d590c9e42d521d2b6283a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14694,
        "upload_time": "2021-05-05T19:37:49",
        "upload_time_iso_8601": "2021-05-05T19:37:49.370779Z",
        "url": "https://files.pythonhosted.org/packages/11/ea/638bcd1e0e76a98e15ff47ef4f169e05035722a52dba57e4ba1e1d9e7cac/cwa_qr-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3db878dd2a34bae02946c9ccbb86c6c5228cd7d9c210c95c10b175d1b4f91d4",
          "md5": "1aea9b6c209c0c6c99a00fcb2b5b5f39",
          "sha256": "528dcab93aa516d970aefb8d7195c947c3894ae18657f514bc46559d0f48ae9e"
        },
        "downloads": -1,
        "filename": "cwa_qr-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1aea9b6c209c0c6c99a00fcb2b5b5f39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13638,
        "upload_time": "2021-09-17T16:48:44",
        "upload_time_iso_8601": "2021-09-17T16:48:44.754956Z",
        "url": "https://files.pythonhosted.org/packages/e3/db/878dd2a34bae02946c9ccbb86c6c5228cd7d9c210c95c10b175d1b4f91d4/cwa_qr-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2864f9c773d9ca35605143561a1f60739e76bfefa9bff4c8f2489422fe3a6ca6",
          "md5": "6c6d824d8a62884a692dbc1166492d94",
          "sha256": "62a3a0ed350660f23e44b0ffc380dd06801377b3763de7c737b3def61dea1cdc"
        },
        "downloads": -1,
        "filename": "cwa_qr-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6c6d824d8a62884a692dbc1166492d94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14239,
        "upload_time": "2021-09-17T16:48:47",
        "upload_time_iso_8601": "2021-09-17T16:48:47.175827Z",
        "url": "https://files.pythonhosted.org/packages/28/64/f9c773d9ca35605143561a1f60739e76bfefa9bff4c8f2489422fe3a6ca6/cwa_qr-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5ba9cd2472e92a80d52cb4df607d9b3a248b34683cd3730ba8d23a41a11204f",
          "md5": "d725ff17951c0dd6520348ccd8ded858",
          "sha256": "499c2b94aad09c21f6882f655f0b08b2c02c23078e3f68a6a4e452ca6058fb63"
        },
        "downloads": -1,
        "filename": "cwa_qr-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d725ff17951c0dd6520348ccd8ded858",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12479,
        "upload_time": "2022-10-05T20:58:55",
        "upload_time_iso_8601": "2022-10-05T20:58:55.190581Z",
        "url": "https://files.pythonhosted.org/packages/a5/ba/9cd2472e92a80d52cb4df607d9b3a248b34683cd3730ba8d23a41a11204f/cwa_qr-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "354a4427fd8638699c4694692ca710e941d6db3784876ef74f50e41948a5cfdc",
          "md5": "2ec87140f060d389620b1633951d9f68",
          "sha256": "881261f94bc636dccc9365d5e67e3e2ead0191f1a836e28534f9a21899c0625a"
        },
        "downloads": -1,
        "filename": "cwa_qr-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2ec87140f060d389620b1633951d9f68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12941,
        "upload_time": "2022-10-05T20:58:57",
        "upload_time_iso_8601": "2022-10-05T20:58:57.503438Z",
        "url": "https://files.pythonhosted.org/packages/35/4a/4427fd8638699c4694692ca710e941d6db3784876ef74f50e41948a5cfdc/cwa_qr-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5ba9cd2472e92a80d52cb4df607d9b3a248b34683cd3730ba8d23a41a11204f",
        "md5": "d725ff17951c0dd6520348ccd8ded858",
        "sha256": "499c2b94aad09c21f6882f655f0b08b2c02c23078e3f68a6a4e452ca6058fb63"
      },
      "downloads": -1,
      "filename": "cwa_qr-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d725ff17951c0dd6520348ccd8ded858",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12479,
      "upload_time": "2022-10-05T20:58:55",
      "upload_time_iso_8601": "2022-10-05T20:58:55.190581Z",
      "url": "https://files.pythonhosted.org/packages/a5/ba/9cd2472e92a80d52cb4df607d9b3a248b34683cd3730ba8d23a41a11204f/cwa_qr-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "354a4427fd8638699c4694692ca710e941d6db3784876ef74f50e41948a5cfdc",
        "md5": "2ec87140f060d389620b1633951d9f68",
        "sha256": "881261f94bc636dccc9365d5e67e3e2ead0191f1a836e28534f9a21899c0625a"
      },
      "downloads": -1,
      "filename": "cwa_qr-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2ec87140f060d389620b1633951d9f68",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12941,
      "upload_time": "2022-10-05T20:58:57",
      "upload_time_iso_8601": "2022-10-05T20:58:57.503438Z",
      "url": "https://files.pythonhosted.org/packages/35/4a/4427fd8638699c4694692ca710e941d6db3784876ef74f50e41948a5cfdc/cwa_qr-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}