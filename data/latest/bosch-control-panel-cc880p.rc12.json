{
  "info": {
    "author": "Hugo Gomes",
    "author_email": "hgomes88@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div id=\"top\"></div>\n\n\n<!-- PROJECT SHIELDS -->\n\n[![Release][release-shield]][release-url]\n[![Build][build-shield]][build-url]\n[![MIT License][license-shield]][license-url]\n\n[![Contributors][contributors-shield]][contributors-url]\n[![Forks][forks-shield]][forks-url]\n[![Stargazers][stars-shield]][stars-url]\n[![Issues][issues-shield]][issues-url]\n\n[![LinkedIn][linkedin-shield]][linkedin-url]\n\n\n<!-- PROJECT LOGO -->\n<br />\n<div align=\"center\">\n  <a href=\"https://github.com/hgomes88/bosch-control-panel-cc880p\">\n    <img src=\"images/cc880p.png\" alt=\"CC880P\" width=\"\" height=\"\">\n  </a>\n\n  <h3 align=\"center\">Bosch Control Panel CC880P</h3>\n\n  <p align=\"center\">\n    Library to interface with the old CC880P Bosch Alarm Control Panels\n    <br />\n    <a href=\"https://github.com/hgomes88/bosch-control-panel-cc880p\"><strong>Explore the docs »</strong></a>\n    <br />\n    <br />\n    <a href=\"https://github.com/hgomes88/bosch-control-panel-cc880p\">View Demo</a>\n    ·\n    <a href=\"https://github.com/hgomes88/bosch-control-panel-cc880p/issues\">Report Bug</a>\n    ·\n    <a href=\"https://github.com/hgomes88/bosch-control-panel-cc880p/issues\">Request Feature</a>\n  </p>\n</div>\n\n\n<!-- TABLE OF CONTENTS -->\n<details>\n  <summary>Table of Contents</summary>\n  <ol>\n    <li>\n      <a href=\"#about-the-project\">About The Project</a>\n      <ul>\n        <li><a href=\"#the-reason-behind\">The Reason Behind</a></li>\n        <li><a href=\"#interface\">Interface</a></li>\n        <ul>\n            <li><a href=\"#wiring\">Wiring</a></li>\n            <ul>\n                <li><a href=\"#uart-pinout-and-configuration\">Uart Pinout and Configuration</a></li>\n            </ul>\n            <li><a href=\"#protocol\">Protocol</a></li>\n            <ul>\n                <li><a href=\"#frames\">Frames</a></li>\n            </ul>\n        </ul>\n      </ul>\n    </li>\n    <li>\n      <a href=\"#getting-started\">Getting Started</a>\n      <ul>\n        <li><a href=\"#prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#installation\">Installation</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#usage\">Usage</a></li>\n    <li><a href=\"#roadmap\">Roadmap</a></li>\n    <li><a href=\"#contributing\">Contributing</a></li>\n    <li><a href=\"#license\">License</a></li>\n    <li><a href=\"#contact\">Contact</a></li>\n    <li><a href=\"#acknowledgments\">Acknowledgments</a></li>\n  </ol>\n</details>\n\n\n<!-- ABOUT THE PROJECT -->\n## About the Project\n\n### The Reason Behind\n\nThe reason behind the the development of this library, was the need turn the old Bosch Control Panel into a smart device without the need to replace it.\n\nHome Assistant is the home automation I use, and I wanted to integrate also the Bosch control panel into it.\n\nBecause there wasn't any integration I could use for that purpose, I decided to implement the library myself and use it as dependency for the custom component [bosch_control_panel_cc880](https://github.com/hgomes88/homeassistant/tree/main/custom_components/bosch_control_panel_cc880) also developed by me for Home Assistant.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n### Interface\n\nThanks to [this][yes-thomas] webpage, it was possible to figure out that the interface with the control panel can be done through the UART accessible through the auxiliary module pins (see the [UART Pinout](#uart-pinout-and-configuration)).\nAs mentioned in the website, it is possible to completely replace the [direct link][direct-link-cable] cable usually needed to configure the control panel through the computer using the [A Link Plus][a-link-plus-sw] software.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n#### Wiring\n\nTo sniff and decode the packets supported by the control panel, it was followed the wiring as in the following diagram:\n\n![a-link-plus-usb-diagram]\n\nThe information about A-Link Plus can be found [here][a-link-plus-sw].\nThe USB-TTL converter can be a device similar to [this][usb-ttl-dev].\n\nTo make the alarm remotely accessible, it was used a TCP/IP to UART bridge.\nThe current and tested solution was wired as following:\n\n![esp8266-diagram]\n\nThe library `bosch-control-panel-cc880p` is part of this repository.\nThe `ESP8266` represents any device using that chip such as [ESP1][esp1-dev].\nNote that it should be flashed with a software like [ESP-Link][esp-link-sw] to create a bridge between TCP/IP and UART.\nSince `ESP1` operates at `3.3V` and `CC880P` control panel operates at `5V`, there's the need to use a level shifter, or something similar (see [this][level-shifter-website] site for examples).\n\n\nA better solution would be wiring the system as the diagram below:\n\n![elfin-ew10-diagram]\n\nUsing a device like [Elfin-EW10][elfin-ew10-dev] would prevent the usage of level shifter as it also operates at `5V`, as well as remove the need to flash any firmware as the device already provides everything needed.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n##### UART Pinout and Configuration\n\nThe pinout of the `CC880P` control panel is:\n- `TX`: Auxiliary Module `Pin3` (***Note:*** The [website][yes-thomas] describes the `Pin7` by mistake)\n- `RX`: Auxiliary Module `Pin7` (***Note:*** The [website][yes-thomas] describes the `Pin3` by mistake)\n- `GND`: Auxiliary Module `Pin4`\n- `VCC(5V)`: Auxiliary Module `Pin6`\n\nThe baud rate the control panel operates is `300`.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n#### Protocol\n\nSince there was no information about the protocol used to send commands to the control panel and receive the corresponding responses, the approach was to connect the control panel using the [A Link Plus][a-link-plus-sw] and then sniff and decode the packets being transferred back and forth.\nthe following steps were followed:\n\n1. Wiring (see [Wiring](#wiring) chapter)\n2. Execute the A Link Plus and connect the Alarm (see A Link Plus manual [here][a-link-plus-manual])\n3. Monitor and decode the packets (using a software similar to [this][device-monitoring-studio-sw] )\n\nThe result is presented in the [frames](#frames) section.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n##### Frames\n\nBelow are presented the decoded frames that are used by this library so far:\n\n###### Send Keys Command\n\nCommand used to send keys to the control panel simulating the pressing of the keypad keys.\n\n```\n'Send Keys' Command\n\nC0 <k1> <k2> <k3> <k4> <k5> <k6> <k7> <area> <nKeys> <crc>\n\nByte    Identifier  Comments\n-------------------------------------------------------------------------------\n1       C0          Hexadecimal representation of the 'Send Key' command\n2-8     k<n>        Each byte is represents the key of the keypad. Can be sent\n                        from 1 up to 7 keys in a single command\n                        Note: Because it was not possible to determine the\n                        checksum algorithm, the keys can only be sent one at a\n                        time. Below is the list of the frames corresponding to\n                        all the keys available:\n                            '0': 0C 00 00 00 00 00 00 00 00 01 16\n                            '1': 0C 01 00 00 00 00 00 00 00 01 16\n                            '2': 0C 02 00 00 00 00 00 00 00 01 17\n                            '3': 0C 03 00 00 00 00 00 00 00 01 19\n                            '4': 0C 04 00 00 00 00 00 00 00 01 19\n                            '5': 0C 05 00 00 00 00 00 00 00 01 1B\n                            '6': 0C 06 00 00 00 00 00 00 00 01 1C\n                            '7': 0C 07 00 00 00 00 00 00 00 01 1C\n                            '8': 0C 08 00 00 00 00 00 00 00 01 1D\n                            '9': 0C 09 00 00 00 00 00 00 00 01 1F\n                            '#': 0C 1A 00 00 00 00 00 00 00 01 2F\n                            '*': 0C 1B 00 00 00 00 00 00 00 01 31\n9       area        If the alarm is configured to have multiple areas, then\n                        this byte identifies the target area that the key(s)\n                        will be sent to. Otherwise set it to '00'.\n10      nKeys       Number of keys being sent in this command\n11      crc         Frame checksum\n                        Note: The checksum is not recognized so far, and thus\n                        it should be manually set\n```\n\n###### Set Siren Command\n\nCommand used to enable/disable the siren\n\n```\n'Set Siren On ' Command\n0E 05 00 00 00 00 00 00 00 00 1C\n\n'Set Siren Off' Command\n0E 06 00 00 00 00 00 00 00 00 1D\n\n```\n\n###### Set Arm Command\n\nCommand used to arm/disarm the alarm\n\n```\n'Arm' Command\n0E 01 00 00 00 00 00 00 00 00 17\n\n'Disarm' Command\n0E 02 00 00 00 00 00 00 00 00 18\n\n```\n\n###### Set Output Command\n\nCommand used to set (enable/disable) outputs of the control panel.\n\n```\n'Set Output' Command\n\n0E <on> <out> 00 00 00 00 00 00 00 <crc>\n\nByte    Identifier  Comments\n-------------------------------------------------------------------------------\n1       0E          Hexadecimal representation of special functions\n2       on          Special function to be executed:\n                        Set Output On: Set this byte to 03\n                        Set Output Off: Set this byte to 04\n3       out         This byte represents the index of the target output.\n                      Supports setting the outputs 1-5, which values in this\n                      byte are 0-4 respectively.\n                      Here is the list of commands for each single output:\n\n                            '1 On':   0E 03 00 00 00 00 00 00 00 00 1A\n                            '1 Off':  0E 04 00 00 00 00 00 00 00 00 1A\n                            '2 On':   0C 03 01 00 00 00 00 00 00 00 1A\n                            '2 Off':  0C 04 01 00 00 00 00 00 00 00 1A\n                            '3 On':   0C 03 02 00 00 00 00 00 00 00 1B\n                            '3 Off':  0C 04 02 00 00 00 00 00 00 00 1B\n                            '4 On':   0C 03 03 00 00 00 00 00 00 00 1D\n                            '4 Off':  0C 04 03 00 00 00 00 00 00 00 1D\n                            '5 On':   0C 03 04 00 00 00 00 00 00 00 1D\n                            '5 Off':  0C 04 04 00 00 00 00 00 00 00 1D\n4-10    XX          All those bytes should be settled to 00.\n11      crc         Frame checksum\n                        Note: The checksum is not recognized so far, and thus\n                        it should be manually set\n```\n\n###### Get Status Command\n\nCommand used to request the overall status of the control panel.\nAfter sending this command is expected the control panel to answer with the [`Get Status Response`](#get-status-response).\n\n```\n'Get Status' Command\n\n01 00 00 00 91 30 19 0F 00 00 F1\n\nByte   Identifier   Comments\n----------------------------\n1       01          Hexadecimal representation of the 'Get Status' command.\n2-10    XX          The meaning of those bytes are unknown, and thus should be\n                        always sent shown above.\n11      F1          Frame Checksum. Since the checksum algorithm is unknown and\n                        this bytes of this command have always the same value,\n                        the checksum value should always be 'F1'\n```\n\n###### Get Status Response\n\nResponse of [`Get Status Command`](#get-status-command). This frame contains all the relevant information about the status of the control panel.\n\n```\n'Get Status' Response\n\n04 <out> <out> <zone> <zone> <en> <en> XX XX <area> <s/h> <m>\n\nByte   Identifier   Comments\n----------------------------\n1       04      :   Hexadecimal representation of the 'Get Status' response\n2-3     out     :   Each bit set indicates whether an output is on.\n                        Maximum number of outputs is 14.\n                        Bits 1-8 of byte 3 correspond to the outputs 1-8 of the\n                        control panel.\n                        Bits 1-6 of byte 2 correspond to the outputs 9-14 of the\n                        control panel.\n                        Bits 7-8 of byte 2 are not used.\n4-5     zone    :   Each bit set indicates whether a zone is triggered.\n                        Maximum number of zones is 16.\n                        Bits 1-8 of byte 4 correspond to the zones 1-8 of the\n                        control panel.\n                        Bits 1-8 of byte 5 correspond to the zones 9-16 of the\n                        control panel.\n6-7     en      :   Each bit set indicates whether a zone is enabled (only\n                        applied when the mode of the alarm is set to `STAY`, as\n                        in this mode is possible to have only a subset of zones\n                        enabled).\n                        Bits 1-8 of byte 6 correspond to the zones 1-8 of the\n                        control panel.\n                        Bits 1-8 of byte 7 correspond to the zones 9-16 of the\n                        control panel.\n8-9     XX      :   Unknown and not used bytes.\n10      area    :   Indicates whether the stay status as well as the away\n                        status of the control panel is enabled for each area.\n                        Maximum number if areas is 4.\n                        Bits 1-4 correspond to the away status of the areas 1-4\n                        Bits 5-8 correspond to the stay status of the areas 5-8\n11      s/h   :   Indicate the status of the siren (1 bit) + the current hours.\n                        Bit 6 if set mean the siren is triggered.\n                        Bits 0-4 represents the hours (0h-23h)\n                        Other bits are not used and thus unknown.\n12      m   :   Indicate the current minutes.\n                        Bits 0-5 represents the minutes (0m-59m).\n                        Other bits are not used and thus unknown.\n```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n<!-- GETTING STARTED -->\n## Getting Started\n\nThis library provides a CLI (Command Line Interface) to interact with the\ncontrol panel.\n\n### Prerequisites\n\n### Installation\n\nThe installation of the library, including the CLI, is as simple as run:\n```\n$ pip install .\n```\n\nAfter that, the library is ready to be used, and now the CLI can be used.\nTo get help how to use it type in the terminal the following:\n\n```\n$ control_panel -h\n```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n<!-- USAGE EXAMPLES -->\n## Usage\n\nAfter following the [`Installation`](#installation) section, now the usage of\nthe CLI can be found by running:\n```\n$ control_panel -h\nusage: control_panel [-h] [-v] -c IP -p PORT {cmd} ...\n\nConnects to the Control Panel\n\npositional arguments:\n  {cmd}\n    cmd                 Execute a command\n\noptions:\n  -h, --help            show this help message and exit\n  -v, --version         Gets the current version\n  -c IP, --connect IP   the host ip\n  -p PORT, --port PORT  the host port\n```\n\nThere are 2 options to run the CLI as shown in the following sections.\n\n### Run in Listen Mode\n\nIn this mode, the script will connect to the control panel in listening only mode, where it will output any kind of change on the control panel.\n\nTo run it the minimum should be:\n\n```\n$ control_panel -c 192.168.1.22 -p 23\n```\n\n### Run in Commanding Mode\n\nThis mode, allows the user to send commands to the control panel.\nTo see the list of available commands the user can do:\n```\n$ control_panel -c <ip> -p <port> cmd -h\nusage: control_panel cmd [-h]  {sendKeys,setMode,setSiren,setOut} ...\n\npositional arguments:\n  cmd\n  {sendKeys,setMode,setSiren,setOut}\n    sendKeys            Sends a set of keys to the control panel. Currently supports the following: [0-9*#]{1,7}\n    setMode             Change the control panel mode like arm, disarm, etc\n    setSiren            Change the control panel siren status\n    setOut              Change the output status of the control panel\n\noptions:\n  -h, --help            show this help message and exit\n```\n\nThe following are some examples:\n\n```\n$ control_panel -c <ip> -p <port> cmd setSiren off\nBefore: Siren(on=True)\nAfter: Siren(on=False)\n```\n\n```\n$ control_panel -c <ip> -p <port> cmd setSiren 1\nBefore: Siren(on=False)\nAfter: Siren(on=True)\n```\n\n```\n$ control_panel -c <ip> -p <port> cmd setSiren 1\nBefore: Siren(on=False)\nAfter: Siren(on=True)\n```\n\n```\n$ control_panel -c <ip> -p <port> cmd setOut 3 on\nBefore: Output(on=False)\nAfter: Output(on=True)\n```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n<!-- ROADMAP -->\n## Roadmap\n\n- [ ] Complete documentation:\n  - [X] Hardware Used\n  - [X] Block diagram of the involved hardware\n  - [X] Table of the packets (commands and responses)\n  - [ ] Other\n- [X] Configure precommit and linter\n- [ ] Implement the battery of unit/integration tests\n- [X] Implement a commandline interface\n- [ ] Gracefully shutdown when a signal is received (e.g. A keyboard Interrupt)\n\nSee the [open issues](https://github.com/hgomes88/bosch-control-panel-cc880p/issues) for a full list of proposed features (and known issues).\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nTo contribute to this project, you need to execute the following steps:\n\n1. Install\n    1. Create a virtual environment (see how to [here][venv-website]):\n\n    2. Activate the virtual environment (see how to [here][venv-website]):\n\n    3. Install all the requirements for development:\n\n        `pip install -e \".[dev]\"`\n\n    4. Install pre-commit:\n\n        `pre-commit install`\n\n2. Create new feature and commit the changes\n\n    1. Create a new feature branch based from the main branch:\n\n        `git checkout -b feature/<feature_name>`\n\n    2. Implement the changes for the feature\n\n    3. Run formatters/linters:\n\n        1. Autopep8:\n\n            `autopep8 src/ tests/`\n\n        1. Flake8:\n\n            `flake8 src/ tests/`\n\n        1. Mypy:\n\n            `mypy src/ tests/`\n\n    4. Commit the changes (this should run pre-commit to format/lint anyway)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n<!-- LICENSE -->\n## License\n\nDistributed under the Apache License Version 2.0. See `LICENSE.txt` for more information.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n<!-- CONTACT -->\n## Contact\n\nHugo Gomes - hgomes88@gmail.com\n\nProject Link: [https://github.com/hgomes88/bosch-control-panel-cc880p](https://github.com/hgomes88/bosch-control-panel-cc880p)\n\nPipy Releases: [https://pypi.org/project/bosch-control-panel-cc880p](https://pypi.org/project/bosch-control-panel-cc880p)\n\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n<!-- ACKNOWLEDGMENTS -->\n## Acknowledgments\n\n* [[othneildrew] Best Readme Template](https://github.com/othneildrew/Best-README-Template/blob/master/README.md)\n* [[Yes Thomas] Programming Bosh Alarm Panel without direct link cable](https://yesthomas.com/Electronics/201607%20Bosch%20Alarm%20panel%20programming%20without%20Direct%20Link%20cable.html)\n\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- MARKDOWN LINKS & IMAGES -->\n\n[build-shield]: https://img.shields.io/github/workflow/status/hgomes88/bosch-control-panel-cc880p/Test/main?style=for-the-badge\n[build-url]: https://github.com/hgomes88/bosch-control-panel-cc880p/actions/workflows/on-push.yml\n\n[release-shield]:https://img.shields.io/pypi/v/bosch-control-panel-cc880p?label=Release&style=for-the-badge\n[release-url]: https://pypi.org/project/bosch-control-panel-cc880p/\n\n[contributors-shield]: https://img.shields.io/github/contributors/hgomes88/bosch-control-panel-cc880p.svg?style=for-the-badge\n[contributors-url]: https://github.com/hgomes88/bosch-control-panel-cc880p/graphs/contributors\n\n[forks-shield]: https://img.shields.io/github/forks/hgomes88/bosch-control-panel-cc880p.svg?style=for-the-badge\n[forks-url]: https://github.com/hgomes88/bosch-control-panel-cc880p/network/members\n\n[stars-shield]: https://img.shields.io/github/stars/hgomes88/bosch-control-panel-cc880p.svg?style=for-the-badge\n[stars-url]: https://github.com/hgomes88/bosch-control-panel-cc880p/stargazers\n\n[issues-shield]: https://img.shields.io/github/issues/hgomes88/bosch-control-panel-cc880p.svg?style=for-the-badge\n[issues-url]: https://github.com/hgomes88/bosch-control-panel-cc880p/issues\n\n[license-shield]: https://img.shields.io/github/license/hgomes88/bosch-control-panel-cc880p.svg?style=for-the-badge\n[license-url]: https://github.com/hgomes88/bosch-control-panel-cc880p/blob/master/LICENSE.txt\n\n[linkedin-shield]: https://img.shields.io/badge/-LinkedIn-black.svg?style=for-the-badge&logo=linkedin&colorB=555\n[linkedin-url]: https://linkedin.com/in/hugohomes\n\n[venv-website]: https://docs.python.org/3/library/venv.html\n\n[yes-thomas]: https://yesthomas.com/Electronics/201607%20Bosch%20Alarm%20panel%20programming%20without%20Direct%20Link%20cable.html\n[a-link-plus-sw]: https://boschsecurityaustralia.freshdesk.com/support/solutions/articles/35000134094-a-link-plus-downloads-\n[a-link-plus-manual]: https://resources-boschsecurity-cdn.azureedge.net/public/documents/Operation_Manual_Operation_Manual_enUS_2599016459.pdf\n[direct-link-cable]: https://commerce.boschsecurity.com/sg/en/DIRECT-LINK-CABLE-SOL-16/p/4.998.800.022/\n[device-monitoring-studio-sw]: https://www.hhdsoftware.com/device-monitoring-studio\n[usb-ttl-dev]: https://5.imimg.com/data5/XL/VE/MY-1833510/ft232rl-usb-to-ttl-5v-3-3v-convertor.pdf\n[esp1-dev]: https://en.wikipedia.org/wiki/ESP8266#/media/File:ESP-01.jpg\n[esp-link-sw]: https://github.com/jeelabs/esp-link\n[level-shifter-website]: https://randomnerdtutorials.com/how-to-level-shift-5v-to-3-3v/\n[elfin-ew10-dev]: http://www.hi-flying.com/elfin-ew10-elfin-ew11\n\n[product-screenshot]: images/screenshot.png\n[a-link-plus-usb-diagram]: images/a-link-plus-usb-diagram.png\n[elfin-ew10-diagram]: images/elfin-ew10-diagram.png\n[esp8266-diagram]: images/esp8266-diagram.png\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hgomes88/bosch-control-panel-cc880p",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bosch-control-panel-cc880p",
    "package_url": "https://pypi.org/project/bosch-control-panel-cc880p/",
    "platform": null,
    "project_url": "https://pypi.org/project/bosch-control-panel-cc880p/",
    "project_urls": {
      "Download": "https://pypi.org/project/bosch-control-panel-cc880p/",
      "Homepage": "https://github.com/hgomes88/bosch-control-panel-cc880p",
      "Tracker": "https://github.com/hgomes88/bosch-control-panel-cc880p/issues"
    },
    "release_url": "https://pypi.org/project/bosch-control-panel-cc880p/2.3.0/",
    "requires_dist": [
      "twine (==4.0.0) ; extra == 'dev'",
      "build (==0.7.0) ; extra == 'dev'",
      "pytest (==7.1.1) ; extra == 'dev'",
      "pytest-asyncio (==0.18.3) ; extra == 'dev'",
      "pre-commit (==2.18.1) ; extra == 'dev'",
      "autopep8 (==1.6.0) ; extra == 'dev'",
      "flake8 (==4.0.1) ; extra == 'dev'",
      "mypy (==0.942) ; extra == 'dev'"
    ],
    "requires_python": ">=3.8",
    "summary": "Library to interface with the old CC880p Bosch COntrol Panels",
    "version": "2.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13524141,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fa600d99574e646e30ef75545c4022053e0e1c1aa13b4e39b6c65d79928100c",
          "md5": "8ca552154b1a8b0981e2a952b864535d",
          "sha256": "f736f54aed5b73886fd34dbdac593aadf202728d3682655c03e0649d97f3c560"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ca552154b1a8b0981e2a952b864535d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10571,
        "upload_time": "2022-04-08T19:12:53",
        "upload_time_iso_8601": "2022-04-08T19:12:53.059487Z",
        "url": "https://files.pythonhosted.org/packages/3f/a6/00d99574e646e30ef75545c4022053e0e1c1aa13b4e39b6c65d79928100c/bosch_control_panel_cc880p-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97ecd0fb18db871941be79a7974ab70f6ea205e669c0f1b795e99ae09203f4e3",
          "md5": "9074386a233a531a4c1108cdd89e5f10",
          "sha256": "924c47ab10d7fea957f128484a2dfcfe6430aae6da44fb7eeb1e3a52145f8322"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9074386a233a531a4c1108cdd89e5f10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9895,
        "upload_time": "2022-04-08T19:12:54",
        "upload_time_iso_8601": "2022-04-08T19:12:54.752907Z",
        "url": "https://files.pythonhosted.org/packages/97/ec/d0fb18db871941be79a7974ab70f6ea205e669c0f1b795e99ae09203f4e3/bosch-control-panel-cc880p-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21c74b010beee705648bef1ea5bc20967ff6e80a49caab41938dff27240502bd",
          "md5": "0b10be595b15f9cc22b3e9cf567ac644",
          "sha256": "8c8deac552edf2582a4b82d1e97b8aac8f05a7ef190c8dc0cb8d905b31114c25"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b10be595b15f9cc22b3e9cf567ac644",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10600,
        "upload_time": "2022-04-08T22:53:18",
        "upload_time_iso_8601": "2022-04-08T22:53:18.644800Z",
        "url": "https://files.pythonhosted.org/packages/21/c7/4b010beee705648bef1ea5bc20967ff6e80a49caab41938dff27240502bd/bosch_control_panel_cc880p-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f015324c9b6193a24823ebc0971431cb1376a2d891e1c25412a7368dab8bff9",
          "md5": "aaf98e154af25fd66ba21ffc50804fed",
          "sha256": "5e35ed46dd249f33d976cbd96ad9debac870d39b2f4207d14134f20b400f19f2"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aaf98e154af25fd66ba21ffc50804fed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9935,
        "upload_time": "2022-04-08T22:53:20",
        "upload_time_iso_8601": "2022-04-08T22:53:20.187380Z",
        "url": "https://files.pythonhosted.org/packages/5f/01/5324c9b6193a24823ebc0971431cb1376a2d891e1c25412a7368dab8bff9/bosch-control-panel-cc880p-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3a2e1e470fb10bdead1f82605ce41703667adee81b63c8d3b28aa3d4f976569",
          "md5": "9e08236a1fca056b513355ec9b234879",
          "sha256": "d4b809293e021386cf70b0b2e7ac23e73451a997ea74f6d120b437b418bb3938"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e08236a1fca056b513355ec9b234879",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10797,
        "upload_time": "2022-04-09T14:10:33",
        "upload_time_iso_8601": "2022-04-09T14:10:33.291054Z",
        "url": "https://files.pythonhosted.org/packages/f3/a2/e1e470fb10bdead1f82605ce41703667adee81b63c8d3b28aa3d4f976569/bosch_control_panel_cc880p-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0745de4a5557defce58043a1e97cf7e15cb52ae948e6cd403cb17af34a00d7b",
          "md5": "7ec020ba28a7621b8857c486c5e41f49",
          "sha256": "ae5c23ac2e922415cbefc151a7b88767694a2e51dca23f4f4a4a85c0bad87a6f"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7ec020ba28a7621b8857c486c5e41f49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10116,
        "upload_time": "2022-04-09T14:10:34",
        "upload_time_iso_8601": "2022-04-09T14:10:34.874577Z",
        "url": "https://files.pythonhosted.org/packages/a0/74/5de4a5557defce58043a1e97cf7e15cb52ae948e6cd403cb17af34a00d7b/bosch-control-panel-cc880p-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e68883111dedde9d3aa07c0cd79a8243cf08ef619b690dde398983f34a17707",
          "md5": "98744217b9092f86a8c9aac5249b8b26",
          "sha256": "9cc1c59fb88c67d6b280e492ead5132a550441149b85591fa779aab21a9375f1"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98744217b9092f86a8c9aac5249b8b26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 12279,
        "upload_time": "2022-04-09T18:49:04",
        "upload_time_iso_8601": "2022-04-09T18:49:04.152558Z",
        "url": "https://files.pythonhosted.org/packages/7e/68/883111dedde9d3aa07c0cd79a8243cf08ef619b690dde398983f34a17707/bosch_control_panel_cc880p-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e32fa527e9cb93bfbc1458b88cc2f90f04687f8388fa70eca4d000194695c77f",
          "md5": "a13dfb6558b1e624dbcac325e21338e6",
          "sha256": "975a9d433e3cc7cf0954dc37ed9e23f88dcc62cec8d0ea6069054419b7d4a55b"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a13dfb6558b1e624dbcac325e21338e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13134,
        "upload_time": "2022-04-09T18:49:05",
        "upload_time_iso_8601": "2022-04-09T18:49:05.563869Z",
        "url": "https://files.pythonhosted.org/packages/e3/2f/a527e9cb93bfbc1458b88cc2f90f04687f8388fa70eca4d000194695c77f/bosch-control-panel-cc880p-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d66d478058fafb0c0c480d0e741bf7af67ebe569a5c0cb47cc8cdb1ae30468b",
          "md5": "9ae0bd48e4b7e431b6546644483f44ef",
          "sha256": "4551b183e716d5e007bb3016bac83da04e9cb1c6a4b57acbdd78f3f1a8275eaf"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-1.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ae0bd48e4b7e431b6546644483f44ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 12266,
        "upload_time": "2022-04-09T18:58:27",
        "upload_time_iso_8601": "2022-04-09T18:58:27.900426Z",
        "url": "https://files.pythonhosted.org/packages/1d/66/d478058fafb0c0c480d0e741bf7af67ebe569a5c0cb47cc8cdb1ae30468b/bosch_control_panel_cc880p-1.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ba3907a474dbe82b3bad0882705a93b2782e6e99c83508a83310e59ba0e160f",
          "md5": "08316fbd66cc7f654ae0212f53ebdc25",
          "sha256": "d7e52a7c2f8a97511c54f5e52eab0e6682cf07b6be175a187fdae14e729e58ce"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "08316fbd66cc7f654ae0212f53ebdc25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13107,
        "upload_time": "2022-04-09T18:58:29",
        "upload_time_iso_8601": "2022-04-09T18:58:29.146177Z",
        "url": "https://files.pythonhosted.org/packages/7b/a3/907a474dbe82b3bad0882705a93b2782e6e99c83508a83310e59ba0e160f/bosch-control-panel-cc880p-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "481f305e80d1c7e37e0481e55fe838d1d077c870bd869b4131718e8e0b317734",
          "md5": "cf5e12d4f9990c51f80d5cc63940d7e7",
          "sha256": "8464d3d59ea744218ead4c7d9a9782a0edb11c9900799c6400f00982d88f6230"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf5e12d4f9990c51f80d5cc63940d7e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 15980,
        "upload_time": "2022-04-12T00:33:39",
        "upload_time_iso_8601": "2022-04-12T00:33:39.953004Z",
        "url": "https://files.pythonhosted.org/packages/48/1f/305e80d1c7e37e0481e55fe838d1d077c870bd869b4131718e8e0b317734/bosch_control_panel_cc880p-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1c0b8a2d37cd5a605284fcd66eab7447e93386d67e734e4923faf86126eb32f",
          "md5": "1a5b799331992df68ee4dda4b7386ce8",
          "sha256": "8058e21ae8514928f410f5b83b359b15b3481584cb7f6def56d9df494214972d"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1a5b799331992df68ee4dda4b7386ce8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20558,
        "upload_time": "2022-04-12T00:33:41",
        "upload_time_iso_8601": "2022-04-12T00:33:41.047640Z",
        "url": "https://files.pythonhosted.org/packages/a1/c0/b8a2d37cd5a605284fcd66eab7447e93386d67e734e4923faf86126eb32f/bosch-control-panel-cc880p-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4c7e4eb99a5ad8afbff2ac829151dbdabf9f9d157165ad7404cb8712dc16c6a",
          "md5": "417063a266898f4f8b0097ba48a89a9d",
          "sha256": "2eeb8725d2032d5f6497b2fa79e47d800d1c5122bd6c33be43cddb7b8b95b63d"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "417063a266898f4f8b0097ba48a89a9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21896,
        "upload_time": "2022-04-14T00:48:10",
        "upload_time_iso_8601": "2022-04-14T00:48:10.923639Z",
        "url": "https://files.pythonhosted.org/packages/d4/c7/e4eb99a5ad8afbff2ac829151dbdabf9f9d157165ad7404cb8712dc16c6a/bosch_control_panel_cc880p-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17f1562471939996f8c732e53403d62944730584ebc11d5b0ac296d3059b14c1",
          "md5": "7a4374a666789648a0482889831f8f82",
          "sha256": "9838b5249f60e04917b01fca826dd8487113e6e4e2d02c1f132262db533a4024"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7a4374a666789648a0482889831f8f82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26378,
        "upload_time": "2022-04-14T00:48:12",
        "upload_time_iso_8601": "2022-04-14T00:48:12.179780Z",
        "url": "https://files.pythonhosted.org/packages/17/f1/562471939996f8c732e53403d62944730584ebc11d5b0ac296d3059b14c1/bosch-control-panel-cc880p-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a80360334e81253b5cc3031fd727c66f7986925574cd2a986c9e2b6d02d4bc7",
          "md5": "0c31da3976852b42fcc146a8a02c6db1",
          "sha256": "aae2ffe9c7ce2105936188a95f1d7f849072838607afd21a00301ffb09673da8"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c31da3976852b42fcc146a8a02c6db1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21895,
        "upload_time": "2022-04-14T02:34:43",
        "upload_time_iso_8601": "2022-04-14T02:34:43.688568Z",
        "url": "https://files.pythonhosted.org/packages/4a/80/360334e81253b5cc3031fd727c66f7986925574cd2a986c9e2b6d02d4bc7/bosch_control_panel_cc880p-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d35a7e6f073f8b1b0244ed427df2620c90888898703c800e17c57e531cfb662",
          "md5": "6a5902fb7c5f5333805b53b9d89ccdee",
          "sha256": "715bf5941b832dadf8e881ca51b2148a9f65ac62c0798f880f3ba16ef601e57c"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6a5902fb7c5f5333805b53b9d89ccdee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26383,
        "upload_time": "2022-04-14T02:34:45",
        "upload_time_iso_8601": "2022-04-14T02:34:45.047756Z",
        "url": "https://files.pythonhosted.org/packages/7d/35/a7e6f073f8b1b0244ed427df2620c90888898703c800e17c57e531cfb662/bosch-control-panel-cc880p-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab7128982fd29640db1807b6f882a887a01bee195ab3fb4d46f0145883ee8455",
          "md5": "b3cb8181d047ebae7eea87ee36528938",
          "sha256": "5786eef2ad37c3e3813c26ed91f64cf631160f5454d176e53c67f556a97ff963"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3cb8181d047ebae7eea87ee36528938",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21894,
        "upload_time": "2022-04-14T03:29:03",
        "upload_time_iso_8601": "2022-04-14T03:29:03.100899Z",
        "url": "https://files.pythonhosted.org/packages/ab/71/28982fd29640db1807b6f882a887a01bee195ab3fb4d46f0145883ee8455/bosch_control_panel_cc880p-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6323af6e5d172c4d24c37886e6a4622ddba2dbd714e86edcef10411196c1b7d",
          "md5": "268124fd99c5fd26c3531414ed0a0c68",
          "sha256": "44e0a32268d672c6b8dd6ea7b44fd035c392e0003e6433d6e93745e2d98b2bb6"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "268124fd99c5fd26c3531414ed0a0c68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26349,
        "upload_time": "2022-04-14T03:29:04",
        "upload_time_iso_8601": "2022-04-14T03:29:04.479326Z",
        "url": "https://files.pythonhosted.org/packages/a6/32/3af6e5d172c4d24c37886e6a4622ddba2dbd714e86edcef10411196c1b7d/bosch-control-panel-cc880p-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b01c199da9be76f5da3f776b769858dbc75bad362dd2dce1bb75b92580cb751",
          "md5": "e68cdcd72aeed6919c8926aae6cc5306",
          "sha256": "03f6a7b18bd787663a82a25fc1992d121fc253b9636a30b6ba31702fdcca65b4"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e68cdcd72aeed6919c8926aae6cc5306",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21926,
        "upload_time": "2022-04-14T22:46:27",
        "upload_time_iso_8601": "2022-04-14T22:46:27.574013Z",
        "url": "https://files.pythonhosted.org/packages/8b/01/c199da9be76f5da3f776b769858dbc75bad362dd2dce1bb75b92580cb751/bosch_control_panel_cc880p-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a17c8f8e7e245339122850b5c5f3324d75882ebada0d51efc42697ad9907400",
          "md5": "432ba593e042db7736bfa1f9e4839e7f",
          "sha256": "147ec809724baddc4be083040a77117f7ef5e9fdf3d718966f4a6048d28f5c8b"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "432ba593e042db7736bfa1f9e4839e7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26388,
        "upload_time": "2022-04-14T22:46:28",
        "upload_time_iso_8601": "2022-04-14T22:46:28.793203Z",
        "url": "https://files.pythonhosted.org/packages/7a/17/c8f8e7e245339122850b5c5f3324d75882ebada0d51efc42697ad9907400/bosch-control-panel-cc880p-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ddcdf2756efe625620670519ccf3b5d43c7c6377064aa9b5834f85a2729f0c3",
          "md5": "b7513e70b899656a9b96a1e6310134bf",
          "sha256": "048630bd81d5b82d441ffc3e011aafea4c73ca5fa49af2bdbb18ecbf4682fd45"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7513e70b899656a9b96a1e6310134bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 22093,
        "upload_time": "2022-04-15T02:21:12",
        "upload_time_iso_8601": "2022-04-15T02:21:12.204976Z",
        "url": "https://files.pythonhosted.org/packages/7d/dc/df2756efe625620670519ccf3b5d43c7c6377064aa9b5834f85a2729f0c3/bosch_control_panel_cc880p-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09f24d9fe596f77cf201505e1cd2d2bb480943193956ea046f15cfb2b8a29d58",
          "md5": "28da95cf381d5149e4c4988da3f7b9d6",
          "sha256": "f59d50b6ebfe9f6b9fd6d70aa228081e788217e09b2a9773f596dbede42f1794"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "28da95cf381d5149e4c4988da3f7b9d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26554,
        "upload_time": "2022-04-15T02:21:13",
        "upload_time_iso_8601": "2022-04-15T02:21:13.775793Z",
        "url": "https://files.pythonhosted.org/packages/09/f2/4d9fe596f77cf201505e1cd2d2bb480943193956ea046f15cfb2b8a29d58/bosch-control-panel-cc880p-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "354ce0693eb9ed9bf5725ca796594715c3bdae7404bd2b794e578feb4070e762",
          "md5": "792c23313ac01816d9f4ea5ee9387fa2",
          "sha256": "914900b67516ab8d175f2b0c53760994bf949c0078249b7aab61f6a339ef615e"
        },
        "downloads": -1,
        "filename": "bosch_control_panel_cc880p-2.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "792c23313ac01816d9f4ea5ee9387fa2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21902,
        "upload_time": "2022-04-15T11:45:23",
        "upload_time_iso_8601": "2022-04-15T11:45:23.178265Z",
        "url": "https://files.pythonhosted.org/packages/35/4c/e0693eb9ed9bf5725ca796594715c3bdae7404bd2b794e578feb4070e762/bosch_control_panel_cc880p-2.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a371c0fe43e61d3bb7cfdeaafe4dfdc8c6a7f3a197bece9e7cb45276a72da49",
          "md5": "8063852bea9da86403bca35e455b2982",
          "sha256": "666f38fa3cb96174785418aa3b82233024eef4977ec1a703d25ebf2758b3a02c"
        },
        "downloads": -1,
        "filename": "bosch-control-panel-cc880p-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8063852bea9da86403bca35e455b2982",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26371,
        "upload_time": "2022-04-15T11:45:24",
        "upload_time_iso_8601": "2022-04-15T11:45:24.514108Z",
        "url": "https://files.pythonhosted.org/packages/5a/37/1c0fe43e61d3bb7cfdeaafe4dfdc8c6a7f3a197bece9e7cb45276a72da49/bosch-control-panel-cc880p-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "354ce0693eb9ed9bf5725ca796594715c3bdae7404bd2b794e578feb4070e762",
        "md5": "792c23313ac01816d9f4ea5ee9387fa2",
        "sha256": "914900b67516ab8d175f2b0c53760994bf949c0078249b7aab61f6a339ef615e"
      },
      "downloads": -1,
      "filename": "bosch_control_panel_cc880p-2.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "792c23313ac01816d9f4ea5ee9387fa2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 21902,
      "upload_time": "2022-04-15T11:45:23",
      "upload_time_iso_8601": "2022-04-15T11:45:23.178265Z",
      "url": "https://files.pythonhosted.org/packages/35/4c/e0693eb9ed9bf5725ca796594715c3bdae7404bd2b794e578feb4070e762/bosch_control_panel_cc880p-2.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a371c0fe43e61d3bb7cfdeaafe4dfdc8c6a7f3a197bece9e7cb45276a72da49",
        "md5": "8063852bea9da86403bca35e455b2982",
        "sha256": "666f38fa3cb96174785418aa3b82233024eef4977ec1a703d25ebf2758b3a02c"
      },
      "downloads": -1,
      "filename": "bosch-control-panel-cc880p-2.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8063852bea9da86403bca35e455b2982",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 26371,
      "upload_time": "2022-04-15T11:45:24",
      "upload_time_iso_8601": "2022-04-15T11:45:24.514108Z",
      "url": "https://files.pythonhosted.org/packages/5a/37/1c0fe43e61d3bb7cfdeaafe4dfdc8c6a7f3a197bece9e7cb45276a72da49/bosch-control-panel-cc880p-2.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}