{
  "info": {
    "author": "aimkiray",
    "author_email": "root@meowwoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n## Overview\nSince web3 applications usually need to operate wallets (such as metamask), this tool can automate the operation of the metamask part to facilitate developers to test the application.\n\n## Installation\nauto-metamask can be installed using pip:\n\n```shell\n$ pip install auto-metamask\n```\n\n## Usage Examples\n\n```python\nimport os\nimport sys\nimport time\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom auto_metamask import *\n\nif __name__ == '__main__':\n\n    metamask_path = downloadMetamask(\n        'https://github.com/MetaMask/metamask-extension/releases/download/v10.11.2/metamask-chrome-10.11.2.zip')\n    driver = setupWebdriver(metamask_path)\n    # Test account, please do not use for production environment\n    setupMetamask(\n        'whip squirrel shine cabin access spell arrow review spread code fire marine', 'testtest')\n    addNetwork('BSC', 'https://bsc-dataseed1.binance.org', '56', 'BNB')\n    changeNetwork('BSC')\n    # Test account, please do not use for production environment\n    importPK(\"bb334564f93fc3a40a3b6a89e0560101bb86e5b75c773381f1e6d2f37fc5c5ba\")\n\n    driver.switch_to.new_window()\n    driver.get('https://metamask.github.io/test-dapp/')\n\n    wait = WebDriverWait(driver, 20, 1)\n    wait.until(EC.element_to_be_clickable(\n        (By.XPATH, '//button[text()=\"Connect\"]'))).click()\n    connectWallet()\n\n    time.sleep(6)\n    driver.quit()\n```\n\n## API Reference\n\n<a id=\"auto_metamask.core\"></a>\n\n### auto\\_metamask.core\n\n<a id=\"auto_metamask.core.downloadMetamask\"></a>\n\n#### downloadMetamask\n\n```python\ndef downloadMetamask(url)\n```\n\nDownload the metamask extension\n\n**Arguments**:\n\n- `url` (`String`): Metamask extension download address (.zip)\n\n**Returns**:\n\n`String`: Extension file path\n\n<a id=\"auto_metamask.core.setupWebdriver\"></a>\n\n#### setupWebdriver\n\n```python\ndef setupWebdriver(metamask_path)\n```\n\nInitialize chrome browser and install metamask extension\n\n**Arguments**:\n\n- `metamask_path` (`String`): Extension file path\n\n**Returns**:\n\n`WebDriver`: Selenium Chrome WebDriver\n\n<a id=\"auto_metamask.core.setupMetamask\"></a>\n\n#### setupMetamask\n\n```python\n@switchPage\ndef setupMetamask(recovery_phrase, password)\n```\n\nAutocomplete metamask welcome page\n\n**Arguments**:\n\n- `recovery_phrase` (`String`): Recovery phrase\n- `password` (`String`): Wallet password (minimum 8 characters)\n\n<a id=\"auto_metamask.core.addNetwork\"></a>\n\n#### addNetwork\n\n```python\n@switchPage\ndef addNetwork(network_name, rpc_url, chain_id, currency_symbol)\n```\n\nAdd new network\n\n**Arguments**:\n\n- `network_name` (`String`): Network name\n- `rpc_url` (`String`): RPC URL\n- `chain_id` (`String`): Chain ID\n- `currency_symbol` (`String`): Currency symbol\n\n<a id=\"auto_metamask.core.changeNetwork\"></a>\n\n#### changeNetwork\n\n```python\n@switchPage\ndef changeNetwork(network_name)\n```\n\nChange network\n\n**Arguments**:\n\n- `network_name` (`String`): Network name\n\n<a id=\"auto_metamask.core.importPK\"></a>\n\n#### importPK\n\n```python\n@switchPage\ndef importPK(priv_key)\n```\n\nImport private key\n\n**Arguments**:\n\n- `priv_key` (`String`): private key\n\n<a id=\"auto_metamask.core.connectWallet\"></a>\n\n#### connectWallet\n\n```python\n@switchPage\ndef connectWallet()\n```\n\nConnect wallet\n\n<a id=\"auto_metamask.core.signWallet\"></a>\n\n#### signWallet\n\n```python\n@switchPage\ndef signWallet()\n```\n\nSign wallet\n\n<a id=\"auto_metamask.core.confirmTransaction\"></a>\n\n#### confirmTransaction\n\n```python\n@switchPage\ndef confirmTransaction()\n```\n\nConfirm transaction\n\n## Credits\n\n* [metamask-extension](https://github.com/MetaMask/metamask-extension)\n* [selenium](https://github.com/SeleniumHQ/selenium)\n* [selenium-stealth](https://github.com/diprajpatra/selenium-stealth)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aimkiray/auto-metamask",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "auto-metamask",
    "package_url": "https://pypi.org/project/auto-metamask/",
    "platform": null,
    "project_url": "https://pypi.org/project/auto-metamask/",
    "project_urls": {
      "Homepage": "https://github.com/aimkiray/auto-metamask"
    },
    "release_url": "https://pypi.org/project/auto-metamask/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Web3 automation testing tool.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14943512,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b21b43cd46ec7c25650cbb91e0264aee50572901b9abc6f5d98f872a0456db55",
          "md5": "ecc6562c638e462f0c0864203468bffb",
          "sha256": "62a275e2ae211c877b2e20b811b5d6e25fa8a566619a8bc4f5647a6b5977be91"
        },
        "downloads": -1,
        "filename": "auto-metamask-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ecc6562c638e462f0c0864203468bffb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 7168,
        "upload_time": "2022-08-30T05:57:57",
        "upload_time_iso_8601": "2022-08-30T05:57:57.596690Z",
        "url": "https://files.pythonhosted.org/packages/b2/1b/43cd46ec7c25650cbb91e0264aee50572901b9abc6f5d98f872a0456db55/auto-metamask-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a5161da9540102060c62889a2096b31524663b545d79f05174ce3e2b394236f",
          "md5": "619176bae9e64e75874f66bbf1a5e30a",
          "sha256": "7383c2463ec40c3dbb622bec459ea98dd056bd6105d4d2639d37d635fc688ca6"
        },
        "downloads": -1,
        "filename": "auto-metamask-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "619176bae9e64e75874f66bbf1a5e30a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 7014,
        "upload_time": "2022-08-31T03:25:05",
        "upload_time_iso_8601": "2022-08-31T03:25:05.478402Z",
        "url": "https://files.pythonhosted.org/packages/7a/51/61da9540102060c62889a2096b31524663b545d79f05174ce3e2b394236f/auto-metamask-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a5161da9540102060c62889a2096b31524663b545d79f05174ce3e2b394236f",
        "md5": "619176bae9e64e75874f66bbf1a5e30a",
        "sha256": "7383c2463ec40c3dbb622bec459ea98dd056bd6105d4d2639d37d635fc688ca6"
      },
      "downloads": -1,
      "filename": "auto-metamask-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "619176bae9e64e75874f66bbf1a5e30a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 7014,
      "upload_time": "2022-08-31T03:25:05",
      "upload_time_iso_8601": "2022-08-31T03:25:05.478402Z",
      "url": "https://files.pythonhosted.org/packages/7a/51/61da9540102060c62889a2096b31524663b545d79f05174ce3e2b394236f/auto-metamask-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}