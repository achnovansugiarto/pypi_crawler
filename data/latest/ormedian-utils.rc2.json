{
  "info": {
    "author": "",
    "author_email": "Samuel Adebayo <samueladebayo@ieee.org>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "https://user-images.githubusercontent.com/73752977/188218332-96f6766d-3f7f-4eb0-89f2-c2b58a08c375.mp4\n\n\nThis package contains the following utilities\n\n**ðŸš€Frame Saver** - save frames from video, folders containing videos or camera feed/livefeed.\\\n**ðŸš€Image Resizer** - Resize image while retaining the quality\\\n**ðŸš€File mover** - move specific file types from thousands/myriads of files.\n\n\nMore utility functions to be added subsequently.\n\n\n\nI hope you find this package useful\n\n\nTo install:\n\n``\npip3 install ormedian-utils\n``\n\n<br>\n\n> ### FRAME SAVER                   ``collect_frames()``\nSave frames from video, camera feed, video folder containing multiple videos.\n\n```\ncollect_frames(num, video_format='mp4', image_name='frame', image_format='jpg', view=True)\n```\n`num`: **could be camera id, path to video, or a folder contain a number of videos**\\\n`video_format`: **format of output video if saving video, default format is set to mp4**\\\n`image_name`: **name of frame files, numbers will be appended at the back in the form of frames_1, frames_2...frames_n, could be changed to wheveter you want**\\\n`image_format`: **extension of image/frames to be saved, default format is 'jpg', could be any image format, e.g 'png', 'bmp' etc**\n\nThis package has 3 methods:\n\n<br>\n\n> 1. **camera** \n    \nfor saving frames from camera feed\n   \n **USAGE**:\n\n````\nfrom ormedian_utils import collect_frames\ncamera_id =0\nframes = collect_frames(camera_id)\nframes.camera(camera_id, save_video=True)\n````\n``save_video=True`` saves video from camera feed into the same folder as the collected frames. You may set ``save_video`` to ``False`` to not save video. \n<br>\n\n> 2. **videofolder** \n\nfor saving frames from videos in a folder(s)\n\n**USAGE**:\n````\nfrom ormedian_utils import collect_frames\nvideo_folder_path ='path/to/foldercontaining/videos\nframes = collect_frames(video_folder_path)\nImage_folder = 'Image Folder' \nframes.videofolder(video_folder_path, Image_folder=Image_folder)\n````\n\n``Image_folder``: Where Frames will be saved. defaults to ``Image Folder`` unless otherwise changed\\\nA new folder will be created for each video, and corresponding frames will be saved in this folder.\n\n<br>\n\n> 3. **videofile** \n\nfor saving frames from a single video file\n\n**USAGE**:\n````\nfrom ormedian_utils import collect_frames\nvideo_path = 'path/to/a/singlevideo'\nframes = collect_frames(video_path)\nframes.videofile()\n````\n\n<br>\n\n> ### IMAGE RESIZER ``image_resizer()``\n\n\nResize images in a folder or in multiple folders \n\n\nhttps://user-images.githubusercontent.com/73752977/187389467-3e4c8e8f-bab9-433f-9e0a-e80dca32037b.mp4\n\n\n```\nimage_resizer (new_size: tuple,\n                  image_path: str,\n                  n_f=True, new_folder='ResizedImages',\n                  view=True, multiple_folders=False):\n```\n```new_size:``` **expected New Image size e.g (224, 224)**\n\n```image_path:``` **'/path/to/where/images/are**\n\n```n_f: ``` **set to True if resized images be saved in new_folder, set to True by default**\nNOTE: if resizing multiple folders (``multiple_folders=True``) and  ``n_f`` is set ``True`` \nThis will create a separate folder for each folder (``Parent_folder of image_path/ResizedImages/subfolders``) in the parent directory of ``image_path``.\nSetting ``n_f`` to ``False`` when resizing ``multiple_folders`` will override the existing ``image_path`` and overwrite the images in the subfolders.\n\n```new_folder:``` **Name of new folder to save resized images, accepts strings, default value is set to 'ResizedImages'**\n\n```view:``` **default value is set to True, this would display window showing resized images**\n\n```multiple_folders:``` **Set to True if image_path contains more than one image folder, default is False**\n\n\n**USAGE:**\n```\nfrom ormedian_utils import  image_resizer\n\nnew_size = (100, 100)\nimages_folder = '/path/to/images/folder' \nquality =100\n```\nIn this case ``images_folder contains multiple image folders``. Hence we set ``multiple_folders`` to ``True`` below.\n```\nimage_resizer(new_size,\n              images_folder,\n              n_f=True,\n              quality, multiple_folders=True)\n```\n\n<br>\n\n> ### FILE MOVER ``filemover()``\n\n\nMove files from one folder to another \n\n```filemover(folder_path: str, file_ext: str, new_folder: str)```\n\n``folder_path:`` **path to files, e.g /path/to/folder/files/**\n\n``file_ext:`` **file extension of files to move e.g 'json'**\n\n``new_folder:`` **folder name of where to move files to, creates directory in parent directory if it does not already exist**\n\n\n**USAGE:** \n```\nfrom ormedian_utils import filemover\n\nfolder_path = /path/to/different/files     #contains json, csv, jpg, and docs files\nfile_ext = 'json'\nnew_folder = 'MovedFiles'\n\nfilemover(folder_path, file_ext, new_folder)\n\n```\n\n### Todo\n- [ ] **Image Converter**\n- [ ] **Video Converter**\n- [ ] **Audio Parser**\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "AIN'T NO LICENSE BRUV! USE AS IS",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ormedian-utils",
    "package_url": "https://pypi.org/project/ormedian-utils/",
    "platform": null,
    "project_url": "https://pypi.org/project/ormedian-utils/",
    "project_urls": {
      "Bug Tracker": "https://github.com/exponentialR/ormedian-utils/issues",
      "Homepage": "https://github.com/exponentialR/ormedian-utils"
    },
    "release_url": "https://pypi.org/project/ormedian-utils/0.2/",
    "requires_dist": [
      "colorama",
      "opencv-python==4.5.4.58",
      "tqdm"
    ],
    "requires_python": "<=3.10.0",
    "summary": "Utilities for Computer Vision Tasks",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15017715,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8072d2e13c0d8b733f0a13bd019a9ecb3f2b864aac3cdfd603717d526a5f0671",
          "md5": "dbcb85a62bcb164d80ed93d4b07a940b",
          "sha256": "8dd7dfa87dc476deb9b05991835107af69f4b702cf50818d491468b69890aaef"
        },
        "downloads": -1,
        "filename": "ormedian_utils-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dbcb85a62bcb164d80ed93d4b07a940b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "<=3.8.9",
        "size": 21725,
        "upload_time": "2022-09-02T17:19:33",
        "upload_time_iso_8601": "2022-09-02T17:19:33.473955Z",
        "url": "https://files.pythonhosted.org/packages/80/72/d2e13c0d8b733f0a13bd019a9ecb3f2b864aac3cdfd603717d526a5f0671/ormedian_utils-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfd6d038810acd15ad470c4e7c4e4338ff1623e2dbe8feb2ea829e46a3a6d4ad",
          "md5": "9d5922204f1b90d7d1145b2c14aeb680",
          "sha256": "76e59b1cf6f16d978e2d5ffec2ae6f21f1b2c717afe2f9289b79d23db85117ab"
        },
        "downloads": -1,
        "filename": "ormedian_utils-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d5922204f1b90d7d1145b2c14aeb680",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<=3.8.9",
        "size": 22797,
        "upload_time": "2022-09-02T17:19:35",
        "upload_time_iso_8601": "2022-09-02T17:19:35.812886Z",
        "url": "https://files.pythonhosted.org/packages/cf/d6/d038810acd15ad470c4e7c4e4338ff1623e2dbe8feb2ea829e46a3a6d4ad/ormedian_utils-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c86cbecd088ed24a8457f0c33a00d72e59e115353c1af9e22d618eb4ea528f35",
          "md5": "a7ad0432908c4b694a4f8e05e21a1854",
          "sha256": "47b8b74ddaa8eed825d63822bf4dd963f13b5007568c0735765f709deb4268ad"
        },
        "downloads": -1,
        "filename": "ormedian_utils-0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7ad0432908c4b694a4f8e05e21a1854",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "<=3.10.0",
        "size": 15701,
        "upload_time": "2022-09-07T10:28:32",
        "upload_time_iso_8601": "2022-09-07T10:28:32.452295Z",
        "url": "https://files.pythonhosted.org/packages/c8/6c/becd088ed24a8457f0c33a00d72e59e115353c1af9e22d618eb4ea528f35/ormedian_utils-0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d81951e12ee4fea45f91a07677931e2069a1ae36791a42873b83a6b72b0647f5",
          "md5": "362091f93ce4c31d9f7913596e80ef15",
          "sha256": "45aab3c25075971be39cc7a95c24249f61009824d4673c96bb467a5c376cd310"
        },
        "downloads": -1,
        "filename": "ormedian_utils-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "362091f93ce4c31d9f7913596e80ef15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<=3.10.0",
        "size": 60516,
        "upload_time": "2022-09-07T10:28:34",
        "upload_time_iso_8601": "2022-09-07T10:28:34.319677Z",
        "url": "https://files.pythonhosted.org/packages/d8/19/51e12ee4fea45f91a07677931e2069a1ae36791a42873b83a6b72b0647f5/ormedian_utils-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c86cbecd088ed24a8457f0c33a00d72e59e115353c1af9e22d618eb4ea528f35",
        "md5": "a7ad0432908c4b694a4f8e05e21a1854",
        "sha256": "47b8b74ddaa8eed825d63822bf4dd963f13b5007568c0735765f709deb4268ad"
      },
      "downloads": -1,
      "filename": "ormedian_utils-0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a7ad0432908c4b694a4f8e05e21a1854",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": "<=3.10.0",
      "size": 15701,
      "upload_time": "2022-09-07T10:28:32",
      "upload_time_iso_8601": "2022-09-07T10:28:32.452295Z",
      "url": "https://files.pythonhosted.org/packages/c8/6c/becd088ed24a8457f0c33a00d72e59e115353c1af9e22d618eb4ea528f35/ormedian_utils-0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d81951e12ee4fea45f91a07677931e2069a1ae36791a42873b83a6b72b0647f5",
        "md5": "362091f93ce4c31d9f7913596e80ef15",
        "sha256": "45aab3c25075971be39cc7a95c24249f61009824d4673c96bb467a5c376cd310"
      },
      "downloads": -1,
      "filename": "ormedian_utils-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "362091f93ce4c31d9f7913596e80ef15",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<=3.10.0",
      "size": 60516,
      "upload_time": "2022-09-07T10:28:34",
      "upload_time_iso_8601": "2022-09-07T10:28:34.319677Z",
      "url": "https://files.pythonhosted.org/packages/d8/19/51e12ee4fea45f91a07677931e2069a1ae36791a42873b83a6b72b0647f5/ormedian_utils-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}