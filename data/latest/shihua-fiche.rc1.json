{
  "info": {
    "author": "shihua",
    "author_email": "15021408795@163.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Fiche-元数据信息管理工具\n\n![shields_version](/static/shields_version.svg)    ![shields_license](/static/shields_license.svg)    ![shields_author](/static/shields_author.svg)    ![shiedls_python](/static/shields_python.svg)\n\n![fichesymbol](/static/fichesymbol.JPG)\n\n## 介绍\n+ Fiche是一个元数据信息管理工具，主要功能提供元数据信息的管理，包括算法信息、模型信息、参数信息、应用信息和数据信息五大类信息；主要设计采用将信息卡片化，存储为一个个json字符串文档，采用主从推送模型实现观察者模式，便于信息中心化；主要技术采用MongoDB作为后端信息数据的中心存储，基于FastAPI实现的http服务使得该工具提供python-sdk的同时也与语言无关。\n\n\n## 安装\nfiche采用Python开发，得益于Python良好的社区环境，安装支持Pythonic风格的各种管理器。\n```\n\t$ pip install fiche-0.1-xxxxxxxxxxxx.whl\n```\n\n\n## 快速指南\n\n### 服务端使用\n+ 对于服务端数据服务启动，使用fiche命令开启后台服务。注意，后端mongodb的配置需要在安装包内的fiche_config.yaml中配置。以下是fichectl命令行示例：\n\n```bash\n\t$ fichectl start-service \n````\n\n### 客户端使用\n+ 对于客户端，fiche支持http协议的接口和python-sdk两种方式。\n\n+ http接口使用\n  1.添加观察者\n```bash\n  \t$ curl http://127.0.0.1:11811/observer/add_observer?observer_name=test007&observer_version=v007\n```\n  2.查询观察者\n```bash\n  \t$ curl http://127.0.0.1:11811/observer/add_observer?observer_name=test007&observer_version=v0076\n```\n  3.删除观察者\n```bash\n  \t$ curl http://127.0.0.1:11811/observer/remove_observer?observer_name=test004&observer_version=v004\n```\n  4.保存算法信息\n```bash\n  \t$ curl http://127.0.0.1:11811/info_manager/save_algorithm_info?name=test007&version=v007&summary=test&config=test&remark=test&homepage=test&author=shihua&authoremail=150214087952163.com&license=MIT&requires=numpy,tensorflow&requiredby=wpfsystem\n```\n  5.查询算法信息\n```bash\n  \t$ curl http://127.0.0.1:11811/info_manager/query_algorithm_info?algorithm_name=test007&algorithm_version=v007\n```\n  6.保存模型信息\n```bash\n  \t$ curl http://127.0.0.1:11811/info_manager/save_model_info?name=test007&version=v007&summary=test&config=test&remark=test&requires=test&data=test&algorithm=test005\n```\n  7.查询模型信息\n```bash\n  \t$ curl http://127.0.0.1:11811/info_manager/query_model_info?model_name=test007&model_version=v007\n```\n  8.保存参数信息\n```bash\n  \t$ curl http://127.0.0.1:11811/info_manager/save_parameter_info?name=test007&version=v007&summary=test&config=test&remark=test&datatype=test&requiredby=wpfsystem\n```\n  9.查询参数信息\n```bash\n  \t$ curl http://127.0.0.1:11811/info_manager/query_parameter_info?parameter_name=test007&parameter_version=v007\n```\n  10.保存应用信息\n```bash\n  \t$ curl http://127.0.0.1:11811/info_manager/save_application_info?name=test007&version=v007&summary=test&config=test&remark=test&requires=test&project=wpfsystem\n```\n  11.查询应用信息\n```bash\n  \t$ curl http://127.0.0.1:11811/info_manager/query_application_info?application_name=test007&application_version=v007\n```\n  12.保存数据信息\n```bash\n  \t$ curl http://127.0.0.1:11811/info_manager/save_dataset_info?name=test007&version=v007&summary=test&config=test&remark=test&requiredby=wpfsystem&datatype=test&project=test\n```\n  13.查询数据信息\n```bash\n  \t$ curl http://127.0.0.1:11811/info_manager/query_dataset_info?dataset_name=test007&dataset_version=v007\n```\n+ python-sdk使用,以下是fiche主程脚本代码示例：\n```python\n\tfrom fiche.data import *\n\n\n\tfiche = FicheData(host='192.168.0.111',\n\t                  port=27017,\n\t                  username='admin',\n\t                  password='123456',\n\t                  database='fiche')\n\n\n\t### 增加观察者\n\tfiche.add_observer(observer_name='test008',observer_version='v008')\n\t# fiche.add_observer(observer_name='test002',observer_version='v002')\n\t# fiche.add_observer(observer_name='test_remove',observer_version='test_remove001')\n\n\t### 查询观察者\n\ttmp_observer_info_query = fiche.query_observer_info(observer_name='test007',observer_version='v007')\n\tprint(tmp_observer_info_query)\n\n\t### 获取观察者列表\n\ttmp_observers_list = fiche.show_obervers()\n\tprint(tmp_observers_list) \n\n\t### 删除观察者\n\tfiche.remove_observer(observer_name='test',observer_version='001')\n\n\t## 保存算法信息\n\tfiche.save_algorithm_info(name = 'test008',\n\t                          version = 'v008',\n\t                          summary = 'this is a test algorithm package',\n\t                          config = 'bash xxxxx.sh',\n\t                          remark = 'test algorithm remark',\n\t                          homepage = 'xxx.xxx.xxx.xxx/xxxx',\n\t                          author = 'shihua',\n\t                          authoremail = '15021408795@163.com',\n\t                          license = 'MIT',\n\t                          requires = 'numpy,sklearn,tensorflow',\n\t                          requiredby = 'WPFsystem')\n\n\t### 查询算法信息\n\ttmp_algorithm_info_query = fiche.query_algorithm_info(algorithm_name='test008',algorithm_version='v008')\n\tprint(tmp_algorithm_info_query)\n\n\t### 保存模型信息\n\tfiche.save_model_info(name = 'test008',\n\t                      version = 'v008',\n\t                      summary = 'this is a test model',\n\t                      config = 'bash xxxxxxx.sh',\n\t                      remark = 'test model remark',\n\t                      requires = 'test',\n\t                      data = 'test data set',\n\t                      algorithm = 'test algorithm')\n\n\t### 查询模型信息\n\ttmp_model_info_query = fiche.query_model_info(model_name='test008',model_version='v008')\n\tprint(tmp_model_info_query)\n\n\t### 保存参数信息\n\tfiche.save_parameter_info(name = 'test008',\n\t                          version = 'v008',\n\t                          summary = 'this is a test parameter',\n\t                          config = 'bash xxxxxxxxxxx.sh',\n\t                          remark = 'test parameter remark',\n\t                          datatype = 'test datatype',\n\t                          requiredby = 'test model')\n\n\t### 查询参数信息\n\ttmp_parameter_info_query = fiche.query_parameter_info(parameter_name='test008',parameter_version='v008')\n\tprint(tmp_parameter_info_query)\n\n\t### 保存应用信息\n\tfiche.save_application_info(name = 'test008',\n\t                            version = 'v008',\n\t                            summary = 'this is a test application',\n\t                            config = 'bash xxxxxxxxxxxxx.sh',\n\t                            remark = 'test application remark',\n\t                            requires = 'xxx algorithm,xxxxx data',\n\t                            project = 'wpf system')\n\n\t### 查询应用信息\n\ttmp_application_info_query = fiche.query_application_info(application_name='test008',application_version='v008')\n\tprint(tmp_application_info_query)\n\n\t### 保存数据信息\n\tfiche.save_dataset_info(name = 'test008',\n\t                        version = 'v008',\n\t                        summary = 'this is a test dataset',\n\t                        config = 'bash xxxxxxxxxxxxx.sh',\n\t                        remark = 'test dataset',\n\t                        requiredby = 'test model,test application',\n\t                        datatype = 'test datatype',\n\t                        project = 'pv system')\n\n\t### 查询数据信息\n\ttmp_dataset_info_query = fiche.query_dataset_info(dataset_name='test008',dataset_version='v008')\n\tprint(tmp_dataset_info_query)\n```\n\n## 设计\n+ 采用推送模型的观察者模式\n+ 服务端使用HTTP协议构建操作服务\n+ 信息卡片化，中心化\n+  MongoDB文档型存储\n\n### 技术列表\n+ 元编程技术-type元类技术\n+ 元编程技术-__getattr__技术\n+ 元编程技术-__setattr__技术\n+ 元编程技术-__new__技术\n+ 微服务-FastAPI\n+ 配置文件-yaml技术\n+ 数据库-MongoDB\n+ 设计模式-观察者模式\n\n\n### 设计UML图\n以下是设计的UML图：\n![dashareuml](/static/FicheUML.png)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/redblue0216/Fiche",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "shihua-fiche",
    "package_url": "https://pypi.org/project/shihua-fiche/",
    "platform": null,
    "project_url": "https://pypi.org/project/shihua-fiche/",
    "project_urls": {
      "Homepage": "https://github.com/redblue0216/Fiche"
    },
    "release_url": "https://pypi.org/project/shihua-fiche/0.1/",
    "requires_dist": null,
    "requires_python": ">=3.9.12",
    "summary": "Fiche is a metadata management tool with MongoDB about algorithm info,model info,parameter info,application info,dataset info and more;supporting http interface and python sdk.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17285327,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eb34c65f8f0a42e645cf9ee596c9499f494c3064243fcd97a882a2cf26fbb30",
          "md5": "4ec9d37a7a2a5a45b4b07231fac12ee0",
          "sha256": "399164cc60bebff3e68b329c7334784fd7b373094d046bd7bd8a27867522c595"
        },
        "downloads": -1,
        "filename": "shihua_fiche-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ec9d37a7a2a5a45b4b07231fac12ee0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9.12",
        "size": 21295,
        "upload_time": "2023-03-14T10:08:58",
        "upload_time_iso_8601": "2023-03-14T10:08:58.222353Z",
        "url": "https://files.pythonhosted.org/packages/2e/b3/4c65f8f0a42e645cf9ee596c9499f494c3064243fcd97a882a2cf26fbb30/shihua_fiche-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ceb3016810576b28333e3e43515b30d1d8fb24b8f4fcdc6613bdc4e271e7d7dc",
          "md5": "28f798c352d5f8d67cec13cc3577edac",
          "sha256": "0ba85053f5da01032d81363b8bcf4758d7ea8d082c9d72f44d25e3745c9f6713"
        },
        "downloads": -1,
        "filename": "shihua-fiche-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "28f798c352d5f8d67cec13cc3577edac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9.12",
        "size": 17972,
        "upload_time": "2023-03-14T10:09:00",
        "upload_time_iso_8601": "2023-03-14T10:09:00.702368Z",
        "url": "https://files.pythonhosted.org/packages/ce/b3/016810576b28333e3e43515b30d1d8fb24b8f4fcdc6613bdc4e271e7d7dc/shihua-fiche-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2eb34c65f8f0a42e645cf9ee596c9499f494c3064243fcd97a882a2cf26fbb30",
        "md5": "4ec9d37a7a2a5a45b4b07231fac12ee0",
        "sha256": "399164cc60bebff3e68b329c7334784fd7b373094d046bd7bd8a27867522c595"
      },
      "downloads": -1,
      "filename": "shihua_fiche-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4ec9d37a7a2a5a45b4b07231fac12ee0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9.12",
      "size": 21295,
      "upload_time": "2023-03-14T10:08:58",
      "upload_time_iso_8601": "2023-03-14T10:08:58.222353Z",
      "url": "https://files.pythonhosted.org/packages/2e/b3/4c65f8f0a42e645cf9ee596c9499f494c3064243fcd97a882a2cf26fbb30/shihua_fiche-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ceb3016810576b28333e3e43515b30d1d8fb24b8f4fcdc6613bdc4e271e7d7dc",
        "md5": "28f798c352d5f8d67cec13cc3577edac",
        "sha256": "0ba85053f5da01032d81363b8bcf4758d7ea8d082c9d72f44d25e3745c9f6713"
      },
      "downloads": -1,
      "filename": "shihua-fiche-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "28f798c352d5f8d67cec13cc3577edac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9.12",
      "size": 17972,
      "upload_time": "2023-03-14T10:09:00",
      "upload_time_iso_8601": "2023-03-14T10:09:00.702368Z",
      "url": "https://files.pythonhosted.org/packages/ce/b3/016810576b28333e3e43515b30d1d8fb24b8f4fcdc6613bdc4e271e7d7dc/shihua-fiche-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}