{
  "info": {
    "author": "Javier Llopis",
    "author_email": "javier@llopis.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Database"
    ],
    "description": "=======\npgusers\n=======\n\nUser authentication and session management based on PostgreSQL\n\nInstallation\n------------\n\nJust download it from PYPI using pip::\n\n    pip install pgusers\n\nUsage\n-----\n\nIn order to use this module, you instantiate a ``UserSpace`` object:\n\n.. code-block:: python\n\n    import pgusers\n\n    usp = pgusers.UserSpace(\"userlist\", host=\"dbhost.domain.com\",\n                            port=5432, user=\"dbuser\")\n\nWhere ``userlist`` must be the name of an existing database instance on\nthe PostgreSQL host. The rest of the keyword arguments are those needed to\ncreate a connection to the database server and are passed straight to\nthe ``psycopg2`` module.\n\nRepeated connections to the same userspace return the same object.\n\nThe following are the methods available to ``UserSpace`` instances.\n\n``create_user(self, username, password, email, admin=False, extra_data=None)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nCreates a new user. Returns a numeric userid for the user created.\n\n:username:\n  The username to be created, if there is already a record with that username, a ``BadCallError`` exception is raised.\n:password:\n  The user's password in cleartext.\n:email:\n  Email for notifications or password recovery. ``BadCallError`` is raised if the email exists in the database.\n:admin:\n  A boolean value indicating whether the user is an administrator.\n:extra_data:\n  Any data that will be attached to the record. This can be anything that can be serialised using the ``pickle``  module from the standard library.\n\n\n``validate_user(self, username, password, extra_data=None)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nValidates (or logs in) a user. Returns a tuple with a string\ncontaining a session key, a boolean value indicating whether the user is\nan admin, and the numeric userid. If the user was not found, the returned\ntuple would be ``(\"\", False, None)``\n\n:username:\n  The username to be authenticated.\n:password:\n  The password in clear text.\n:extra_data:\n  Optional data that will be attached to the session. This can be anything that can be serialised using the ``pickle`` module from the standard library.\n\n\n``delete_user(self, username=None, userid=None)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nDelete a user given either its username or userid. Either username or userid\nmust be specified. Returns ``OK`` if deleted, ``NOT_FOUND`` if not found.\n\n:username:\n    The username.\n:userid:\n  The numeric userid.\n\n``change_password(self, userid, newpassword, oldpassword=None)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nChange a user's password. Returns either ``OK``, ``NOT_FOUND`` or ``REJECTED``\nThrows BadCallError if neither username or userid are specified.\n\n:userid:\n  The numeric user id, as returned by ``create_user()``\n:newpassword:\n  The new password, in cleartext.\n:oldpassword:\n  The current password, in cleartext. If specified, oldpassword is checked against the current password and the call will fail if they don't match. If ``oldpassword`` is not specified, the password will be changed unconditionally.\n\n``check_key(self, key)``\n~~~~~~~~~~~~~~~~~~~~~~~~\nReset the session timeout. Resets the key's Time To Live to the default value.\nReturns a tuple of the form *(rc, username, userid, extra_data)* where rc\ncan be either ``OK``, ``NOT_FOUND`` or ``EXPIRED``. If ``NOT_FOUND`` or ``EXPIRED``, username\nand userid will be ``None``.\n\n:key:\n  The session key as returned by ``validate_user()``\n\n``set_session_TTL(self, secs)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSets the TTL for all sessions. All new sessions or checked sessions will\nbe set to this new TTL value.\n\n:secs:\n  The number of seconds of Time To Live. The default TTL for a session is currently 864000 seconds, or 10 days. This might change in future releases.\n\n\n``find_user(self, username=None, email=None, userid=None)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFind a user given either its username, its email or its userid. At least\none of those must be supplied.\n\nThis method\ndoes not validate the user or any session. It is used to retrieve information\nabout a user in the database.\n\nReturns a dictionary with fields ``userid``, ``username``, ``email``, ``admin``,\nand ``extra_data``. ``None`` if the user was not found.\n\n:username:\n  The username.\n:email:\n  The email.\n:userid:\n  The numeric userid.\n\n``modify_user(self, userid, username=None, email=None, extra_data=None)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nModify user data. Returns ``OK`` if successful ``NOT_FOUND`` if not.\n\n:userid:\n  The user id as returned by ``create_user()``\n:username:\n  The new username to change, if specified.\n:email:\n  The new email to change, if specified.\n:extra_data:\n  The new extra_data to change, if specified.\n\n``is_admin(self, userid)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~\nChecks whether the user is admin. Returns ``True`` if it is, ``False`` if not.\n\n:userid:\n  The user id as returned by ``create_user()``\n\n``set_admin(self, userid, admin=True)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nGrant or revoke admin privileges to the user. To revoke, call with admin set to ``False``\n\n:userid:\n  The user id as returned by ``create_user()``\n:admin:\n  If set to ``True`` or not specified, mark the user as administrator. If set to ``False``, revokes administrator rights.\n\n``all_users(self)``\n~~~~~~~~~~~~~~~~~~~\nGenerator yielding (userid, username, email, admin) tuples for all users\nin the userspace.\n\n``list_sessions(self, uid, expired=False)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nGenerator yielding all sessions for a user or for all users (i.e. all sessions) if uid is 0. If\nexpired is set to ``True``, yield only the sessions that have expired.\nYields tuples of the form ``(username, key, expiration)``\n\n:userid:\n  The user id as returned by ``create_user()``, or 0 to return all sessions.\n:expired:\n  Boolean indicating whether the method should only return expired sessions.\n\n``kill_sessions(self, uid, expired=False)``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nKill the sessions for a user or for all users (i.e. all sessions) if uid is 0. If\nexpired is set to ``True``, kill only the sessions that have expired. *Killing* a\nsession removes it from the database, efectively invalidating it.\n\n\n:userid:\n  The user id as returned by ``create_user()``, or 0 to kill all sessions.\n:expired:\n  Boolean indicating whether the method should only kill the expired sessions.\n\nLicense\n-------\nThis software is licensed under the terms of the **MIT license**.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/destrangis/pgusers",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pgusers",
    "package_url": "https://pypi.org/project/pgusers/",
    "platform": null,
    "project_url": "https://pypi.org/project/pgusers/",
    "project_urls": {
      "Homepage": "https://github.com/destrangis/pgusers"
    },
    "release_url": "https://pypi.org/project/pgusers/0.9.3/",
    "requires_dist": [
      "psycopg2"
    ],
    "requires_python": "",
    "summary": "user and session management on postgresql database",
    "version": "0.9.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13713374,
  "releases": {
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eedfc4875717330f9cd93c5a667cfe8b67bfcadd11c0a9ebbb268e936cf106d9",
          "md5": "99e1eac83fccb972a8dbb852325b6ebf",
          "sha256": "67fc6bf5b46c8fb8a0a6d3a6661a2e55862f378626e3dfa83ceb17820f3434df"
        },
        "downloads": -1,
        "filename": "pgusers-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99e1eac83fccb972a8dbb852325b6ebf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10755,
        "upload_time": "2022-04-05T23:35:48",
        "upload_time_iso_8601": "2022-04-05T23:35:48.191288Z",
        "url": "https://files.pythonhosted.org/packages/ee/df/c4875717330f9cd93c5a667cfe8b67bfcadd11c0a9ebbb268e936cf106d9/pgusers-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "780505dd2dd45bdf4d93c3bd3723c01b2cca24a1e8c685ffca006d89109aad0c",
          "md5": "ed3281284ae15b8724ee1dcffd6f5ea8",
          "sha256": "c9eebb44667c8e2c6e813eb9b32d58a688b86666712871a3edd995dbee4bb47c"
        },
        "downloads": -1,
        "filename": "pgusers-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ed3281284ae15b8724ee1dcffd6f5ea8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11273,
        "upload_time": "2022-04-05T23:35:50",
        "upload_time_iso_8601": "2022-04-05T23:35:50.358317Z",
        "url": "https://files.pythonhosted.org/packages/78/05/05dd2dd45bdf4d93c3bd3723c01b2cca24a1e8c685ffca006d89109aad0c/pgusers-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36ae3512ce02e71c63345f18eb599384d46b4f984717e46965de24c179013eec",
          "md5": "6054dcb8fe4d69b32044c1a5199f533d",
          "sha256": "764206fc0b018712854dda45351474b1f69f22741a896d78af6c488e9abcaa8f"
        },
        "downloads": -1,
        "filename": "pgusers-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6054dcb8fe4d69b32044c1a5199f533d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10751,
        "upload_time": "2022-04-19T19:43:13",
        "upload_time_iso_8601": "2022-04-19T19:43:13.878983Z",
        "url": "https://files.pythonhosted.org/packages/36/ae/3512ce02e71c63345f18eb599384d46b4f984717e46965de24c179013eec/pgusers-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67b36d8810c4ee897cf84f60e96370e5dbe04d7d3694f1b35669f1f98a8ee2ea",
          "md5": "7c9196d845bed3b07ab2d4710105c3e8",
          "sha256": "90919f7bd208845ed57c8eb3e1283237f6d7f2783b92545a7093a3114024b795"
        },
        "downloads": -1,
        "filename": "pgusers-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7c9196d845bed3b07ab2d4710105c3e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11284,
        "upload_time": "2022-04-19T19:43:15",
        "upload_time_iso_8601": "2022-04-19T19:43:15.485716Z",
        "url": "https://files.pythonhosted.org/packages/67/b3/6d8810c4ee897cf84f60e96370e5dbe04d7d3694f1b35669f1f98a8ee2ea/pgusers-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1493b8dcbd649317baa020963b9e9c613054064b98aeb02967b1ae5ac2c1845b",
          "md5": "2bb2847e8045088b7447ec809104f463",
          "sha256": "f2016d27b0c3e531b381a3efd5c27fcb90f63dba1aec221119638a27d1d21307"
        },
        "downloads": -1,
        "filename": "pgusers-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bb2847e8045088b7447ec809104f463",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10827,
        "upload_time": "2022-05-04T19:37:25",
        "upload_time_iso_8601": "2022-05-04T19:37:25.597173Z",
        "url": "https://files.pythonhosted.org/packages/14/93/b8dcbd649317baa020963b9e9c613054064b98aeb02967b1ae5ac2c1845b/pgusers-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15d2b5e077169ef5747f4a201c500045a2c211ebd96f2fd8aec266a7278dcd78",
          "md5": "fde8b40782fafef7faf0ad681e4c747e",
          "sha256": "3b02375f2e302dc70f8f8552118b13979eddbfee7c6d36081af75c0dc48a86ff"
        },
        "downloads": -1,
        "filename": "pgusers-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fde8b40782fafef7faf0ad681e4c747e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11386,
        "upload_time": "2022-05-04T19:37:27",
        "upload_time_iso_8601": "2022-05-04T19:37:27.973882Z",
        "url": "https://files.pythonhosted.org/packages/15/d2/b5e077169ef5747f4a201c500045a2c211ebd96f2fd8aec266a7278dcd78/pgusers-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1493b8dcbd649317baa020963b9e9c613054064b98aeb02967b1ae5ac2c1845b",
        "md5": "2bb2847e8045088b7447ec809104f463",
        "sha256": "f2016d27b0c3e531b381a3efd5c27fcb90f63dba1aec221119638a27d1d21307"
      },
      "downloads": -1,
      "filename": "pgusers-0.9.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2bb2847e8045088b7447ec809104f463",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10827,
      "upload_time": "2022-05-04T19:37:25",
      "upload_time_iso_8601": "2022-05-04T19:37:25.597173Z",
      "url": "https://files.pythonhosted.org/packages/14/93/b8dcbd649317baa020963b9e9c613054064b98aeb02967b1ae5ac2c1845b/pgusers-0.9.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15d2b5e077169ef5747f4a201c500045a2c211ebd96f2fd8aec266a7278dcd78",
        "md5": "fde8b40782fafef7faf0ad681e4c747e",
        "sha256": "3b02375f2e302dc70f8f8552118b13979eddbfee7c6d36081af75c0dc48a86ff"
      },
      "downloads": -1,
      "filename": "pgusers-0.9.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fde8b40782fafef7faf0ad681e4c747e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11386,
      "upload_time": "2022-05-04T19:37:27",
      "upload_time_iso_8601": "2022-05-04T19:37:27.973882Z",
      "url": "https://files.pythonhosted.org/packages/15/d2/b5e077169ef5747f4a201c500045a2c211ebd96f2fd8aec266a7278dcd78/pgusers-0.9.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}