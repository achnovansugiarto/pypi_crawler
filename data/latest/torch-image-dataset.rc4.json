{
  "info": {
    "author": "Andrea Maracani",
    "author_email": "<andrea.maracani@iit.it>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Education",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "# torch image dataset\nInstall:\n```\n  pip install torch-image-dataset\n```\n\n## Requirements:\n```\n  pip install torch torchvision pillow opencv-python\n```\n\n### Additional requirements (optional)\n\nFor saving/loading the dataset in a database:\n```\n  conda install -c conda-forge python-lmdb\n```\n\nFor fast image loaders:\n```\n  conda install -c conda-forge pyturbojpeg\n  conda install -c conda-forge accimage\n```\n\n### Image Loaders\nImageLoaders are objects that can load an image from a path and decode it (additionally they can resize the image).\nThe image loaders available are: ```LoaderPIL``` (from pillow), ```LoaderOpenCV``` (from opencv), ```LoaderAccImage``` (from accimage) and ```LoaderTurboJPEG``` (from turbojpeg).\nTo initialize a loader:\n\n```\n  from imagedataset import LoaderOpenCV, Interpolation\n  \n  size = (224, 224)\n  loader = LoaderOpenCV(size=size, interpolation=Interpolation.CV_AREA)\n```\n\nIf the size is ```None``` there won't be any resize at loading time. The interpolation methods available are:\n\n```\n    CV_BILINEAR         (cv2.INTER_LINEAR)\n    CV_BILINEAR_EXACT   (cv2.INTER_LINEAR_EXACT)\n    CV_NEAREST          (cv2.INTER_NEAREST)\n    CV_BICUBIC          (cv2.INTER_CUBIC)\n    CV_LANCZOS          (cv2.INTER_LANCZOS4)\n    CV_AREA             (cv2.INTER_AREA)\n\n    PIL_NEAREST         (PIL Image.NEAREST)\n    PIL_BICUBIC         (PIL Image.BICUBIC)\n    PIL_BILINEAR        (PIL Image.BILINEAR\n    PIL_LANCZOS         (PIL Image.LANCZOS)\n    ACCIMAGE_BUILDIN    (interpolation of AccImage)\n```\nNot all loaders support all interpolations, but the opencv interpolations are accepted by all loaders (for example it is possible to use the CV_BILINEAR interpolation even in a LoaderPIL).\n\n### Image Decoders\nImageDecoders are very similar to ImageLoaders but their ```__call__``` function accepts a ```bytes``` object and decodes to an image (and eventually resize it).\nThere is one decoder for each loader introduced before.\nTo create a decoder:\n```\n  decoder = DecoderPIL(size=(224,224), interpolation=Interpolation.CV_BICUBIC)\n```\n\n### Datasets\n\n### AdvanceImageFolder\n**Use case**: \n- keep track of pseudolabels (read/update).\n- load full dataset into RAM to speed up training when disk memory access is slow.\n- save and read the full dataset into a database to speed up training when the whole dataset cannot be stored in RAM.\n- easy subsetting/splitting keeping the possibility to update and read pseudolabels.\n\nImport:\n```\n  import imagedataset as id\n```\n\nThe folder structure required is similar to the one of ``` torchvision.datasets.ImageFolder```:\n```\n  root\\\n    class1\\\n      img1\n      img2\n      ...\n    class2\\\n      img1\n      img2\n      ...\n    ...   \n```\n\nThe dataset is initialized by indicating the root directory.\nAdditionally, the name of the dataset can be indicated and it is possible to load just a subset of the dataset. ```load_percentage``` specifies the percentage of images to load (randomly picked without repetitions) or ```indices``` can be used to select specific indices of the dataset.\n\n```\n  dataset = id.AdvanceImageFolder(root=\"path/to/mydataset/\",\n                                  name=\"incredible_dataset\",\n                                  load_percentage=1.,\n                                  indices=None)\n```\n\nThe return type of the dataset is ```types.SimpleNamespace``` with the following fields:\n- image\n- id\n- index\n- label\n- pseudolabel\n\nFor example you can:\n\n```\n  item = dataset.__getitem__(0)\n  image = item.image\n  label = item.label\n  pseudolabel = item.pseudolabel\n  ...\n```\n\nTo use a dataloader it is possible to use:\n```\n  loader = dataset.dataloader(batch_size=10)\n```\nActually the dataloader function accepts the same arguments as ```torch.utils.data.DataLoader``` and returns a proper ```DataLoader``` with the appropriate ```collate_fn``` for batching.\n\n**Note**: every tensor in the batch is of type int64 (classification labels) or uint8 (images or label arrays).\n\nTo speed up the training it is possible to use a ```CudaLoader``` that pre-fatches the samples:\n\n```\n  loader = dataset.cudaloader(batch_size=10)\n```\n**Note**: the CudaLoader convers images to floats but do not scale them, so they are still in range [0,255]. Additionally the CudaLoader can perform normalization, for instance to bring images in range [0,1] it is possible:\n```\n  loader = dataset.cudaloader(batch_size=10, mean=(0,0,0), std=(255, 255, 255))\n```\n\nTo subset a dataset:\n```\n    my_subset = dataset.subset(indices=[0,1,2], ids=None)\n```\nIt is possible to select the indices or the ids of images. The indices are the positions of images in the sequence from 0 to len(dataset)-1.\nIds are initialized as indices but they are kept constant while subsetting and splitting and, for this reason, it is possible to get the index of an image in the original dataset.\n\nTo split a dataset:\n\n```\n    train_d, val_d, test_d = dataset.random_split(percentages=[0.5, 0.3, 0.2])\n```\n\nTo drop a random part of the dataset, let say we want to keep just 50% of dataset:\n```\n    dataset = datset.random_split(percentages=[0.5])\n```  \n\nTo load the dataset into RAM just use:\n```\n  dataset.load_ram()\n```\nTo write the dataset into a LMDB database:\n```\n  dataset.write_database(\"mydb/path/\")\n```\n\nThen, to get a dataset that reads the database:\n```\n  dataset = id.from_database(\"mydb/path/\")\n```\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andreamaracani/torch-image-dataset",
    "keywords": "python,pytorch,dataset,image",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torch-image-dataset",
    "package_url": "https://pypi.org/project/torch-image-dataset/",
    "platform": null,
    "project_url": "https://pypi.org/project/torch-image-dataset/",
    "project_urls": {
      "Bug Tracker": "https://github.com/andreamaracani/torch-image-dataset/issues",
      "Homepage": "https://github.com/andreamaracani/torch-image-dataset"
    },
    "release_url": "https://pypi.org/project/torch-image-dataset/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Image datasets for Pytorch.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13303138,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d812ebcc388a301d216ce9314d4e073703efada973843c16f89e1e623d5be471",
          "md5": "e8fd7c69738c815c6279d09a6a675ec7",
          "sha256": "34ea2b351a0f7f6cf766df2e793f40571ac174d9e8375499057fcf61f5cf93ae"
        },
        "downloads": -1,
        "filename": "torch_image_dataset-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8fd7c69738c815c6279d09a6a675ec7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10180,
        "upload_time": "2022-03-02T14:05:04",
        "upload_time_iso_8601": "2022-03-02T14:05:04.501075Z",
        "url": "https://files.pythonhosted.org/packages/d8/12/ebcc388a301d216ce9314d4e073703efada973843c16f89e1e623d5be471/torch_image_dataset-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d2f6b21c02ab20d973a929a9c438b396139371ec585245c9b5f71f2ec3a9b28",
          "md5": "aebf4eafe8382fb2979f9940b5522831",
          "sha256": "dfd27bb6788191ad46da4f92476f399c31a4767d6b7c8893929b2c5d9f3a483f"
        },
        "downloads": -1,
        "filename": "torch-image-dataset-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aebf4eafe8382fb2979f9940b5522831",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11150,
        "upload_time": "2022-03-02T14:05:06",
        "upload_time_iso_8601": "2022-03-02T14:05:06.373079Z",
        "url": "https://files.pythonhosted.org/packages/8d/2f/6b21c02ab20d973a929a9c438b396139371ec585245c9b5f71f2ec3a9b28/torch-image-dataset-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "035772cfd3cd1e7aaef7fbe901d074a920ce19bb8c22421ef31181f771421f62",
          "md5": "756bbfe8d890ded2054dd36d9f1f3184",
          "sha256": "f4f53c670981d8522877697c943db85009f427a01695f076dfd0d559fc2b1434"
        },
        "downloads": -1,
        "filename": "torch_image_dataset-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "756bbfe8d890ded2054dd36d9f1f3184",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11250,
        "upload_time": "2022-03-02T15:21:34",
        "upload_time_iso_8601": "2022-03-02T15:21:34.494072Z",
        "url": "https://files.pythonhosted.org/packages/03/57/72cfd3cd1e7aaef7fbe901d074a920ce19bb8c22421ef31181f771421f62/torch_image_dataset-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "436df1a4e68e10472530dc8a35b8fb7f1c08409ebebd4eaa0ba19c1fcea7b6d3",
          "md5": "6a243e294b74960df8bdb5838eb93ed5",
          "sha256": "b74d028b989085e1effadc92e26a86d9a72e4487c9897d57fff45aa861ec9e99"
        },
        "downloads": -1,
        "filename": "torch-image-dataset-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6a243e294b74960df8bdb5838eb93ed5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12148,
        "upload_time": "2022-03-02T15:21:36",
        "upload_time_iso_8601": "2022-03-02T15:21:36.355823Z",
        "url": "https://files.pythonhosted.org/packages/43/6d/f1a4e68e10472530dc8a35b8fb7f1c08409ebebd4eaa0ba19c1fcea7b6d3/torch-image-dataset-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef2c2de8d6283efc93ce7a33dc11551a80e10f5d8da8e794c04526a4a0be83b2",
          "md5": "74dedca049da1719a3dc3ea1f05e1ab5",
          "sha256": "bcbc3d65d2b6c9707a1986d3d3783cb8409d9343c9f1dd23889628c683faf6a3"
        },
        "downloads": -1,
        "filename": "torch_image_dataset-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74dedca049da1719a3dc3ea1f05e1ab5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22632,
        "upload_time": "2022-03-10T21:05:18",
        "upload_time_iso_8601": "2022-03-10T21:05:18.957819Z",
        "url": "https://files.pythonhosted.org/packages/ef/2c/2de8d6283efc93ce7a33dc11551a80e10f5d8da8e794c04526a4a0be83b2/torch_image_dataset-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a2655b0d96a4b4a333b44133802688ab1d4736294b00c02bc14abe963a921ed",
          "md5": "98ce13a58de3bb1423eaf1f19dd2db35",
          "sha256": "7bf8e1d456710226346102cecc02d6ea99d26511db6a86f1a5b6e7f9765eddc1"
        },
        "downloads": -1,
        "filename": "torch-image-dataset-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "98ce13a58de3bb1423eaf1f19dd2db35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22003,
        "upload_time": "2022-03-10T21:05:20",
        "upload_time_iso_8601": "2022-03-10T21:05:20.621895Z",
        "url": "https://files.pythonhosted.org/packages/9a/26/55b0d96a4b4a333b44133802688ab1d4736294b00c02bc14abe963a921ed/torch-image-dataset-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1481b425fd1fa85273678be8a596c63828cb891c6bafbdc46a3769cb350e35a3",
          "md5": "7b391acdd08b6fe8e70f1caee18eeb1b",
          "sha256": "2f063f71bbc7f2fec6d1ca24994d9d529eba61eeee53364a1d55c4d0826b13d7"
        },
        "downloads": -1,
        "filename": "torch_image_dataset-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b391acdd08b6fe8e70f1caee18eeb1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31392,
        "upload_time": "2022-03-26T16:10:35",
        "upload_time_iso_8601": "2022-03-26T16:10:35.120788Z",
        "url": "https://files.pythonhosted.org/packages/14/81/b425fd1fa85273678be8a596c63828cb891c6bafbdc46a3769cb350e35a3/torch_image_dataset-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec92140d6077148dd1d03787706daff5d9f588b3d96dde0c32ac043eaa22b8b7",
          "md5": "6a56b9788fc310123e12126aa713f846",
          "sha256": "523ca6a18bbf8643b32253cec986dd94df7bd2aa51c1bd5b3a05d1836eeace09"
        },
        "downloads": -1,
        "filename": "torch-image-dataset-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6a56b9788fc310123e12126aa713f846",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29152,
        "upload_time": "2022-03-26T16:10:36",
        "upload_time_iso_8601": "2022-03-26T16:10:36.615269Z",
        "url": "https://files.pythonhosted.org/packages/ec/92/140d6077148dd1d03787706daff5d9f588b3d96dde0c32ac043eaa22b8b7/torch-image-dataset-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1481b425fd1fa85273678be8a596c63828cb891c6bafbdc46a3769cb350e35a3",
        "md5": "7b391acdd08b6fe8e70f1caee18eeb1b",
        "sha256": "2f063f71bbc7f2fec6d1ca24994d9d529eba61eeee53364a1d55c4d0826b13d7"
      },
      "downloads": -1,
      "filename": "torch_image_dataset-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7b391acdd08b6fe8e70f1caee18eeb1b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 31392,
      "upload_time": "2022-03-26T16:10:35",
      "upload_time_iso_8601": "2022-03-26T16:10:35.120788Z",
      "url": "https://files.pythonhosted.org/packages/14/81/b425fd1fa85273678be8a596c63828cb891c6bafbdc46a3769cb350e35a3/torch_image_dataset-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec92140d6077148dd1d03787706daff5d9f588b3d96dde0c32ac043eaa22b8b7",
        "md5": "6a56b9788fc310123e12126aa713f846",
        "sha256": "523ca6a18bbf8643b32253cec986dd94df7bd2aa51c1bd5b3a05d1836eeace09"
      },
      "downloads": -1,
      "filename": "torch-image-dataset-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "6a56b9788fc310123e12126aa713f846",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 29152,
      "upload_time": "2022-03-26T16:10:36",
      "upload_time_iso_8601": "2022-03-26T16:10:36.615269Z",
      "url": "https://files.pythonhosted.org/packages/ec/92/140d6077148dd1d03787706daff5d9f588b3d96dde0c32ac043eaa22b8b7/torch-image-dataset-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}