{
  "info": {
    "author": "Gaurav Mishra",
    "author_email": "mishra.gaurav@siemens.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: System Administrators",
      "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: System :: Recovery Tools",
      "Topic :: Utilities"
    ],
    "description": "# snap_to_bucket\n\n![snap_to_bucket docs](https://github.com/siemens/snap-to-bucket/workflows/snap_to_bucket%20docs/badge.svg)\n[![PyPI version](https://badge.fury.io/py/snap-to-bucket.svg)](https://badge.fury.io/py/snap-to-bucket)\n\nThis tool allows to move data from AWS snapshots to S3 buckets.\n\n### Installation\n\n#### Local installation\n```console\n$ git clone https://github.com/siemens/snap-to-bucket.git\n$ cd snap-to-bucket\n$ python3 -m pip install -U pipenv\n$ pipenv install --dev --editable .\n```\n\n#### PyPi\n```console\n$ python3 -m pip install -U snap-to-bucket\n```\n\n### Requirements\n\n1. The script needs to be running on an EC2 instance.\n2. Minimum RAM 2 GB, recommend RAM > 6 GB.\n3. The instance running the script must have IAM role attached with privileges\n   to perform following operations:\n    - List snapshot\n    - Create volume\n    - Attach volume\n    - Delete volume\n    - List S3 objects\n    - Upload to S3\n    - Download from S3\n\n### Sample IAM policy\n\nYou can create an IAM role and attach following policy:\n\n```json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DetachVolume\",\n                \"ec2:AttachVolume\",\n                \"ec2:ModifyVolume\",\n                \"ec2:DeleteSnapshot\",\n                \"ec2:ModifyVolumeAttribute\",\n                \"ec2:DescribeVolumesModifications\",\n                \"ec2:DescribeSnapshots\",\n                \"ec2:DescribeVolumeAttribute\",\n                \"ec2:CreateVolume\",\n                \"ec2:DeleteVolume\",\n                \"ec2:DescribeVolumeStatus\",\n                \"ec2:ModifySnapshotAttribute\",\n                \"ec2:DescribeVolumes\",\n                \"ec2:CreateTags\",\n                \"s3:PutObject\",\n                \"s3:GetObject\",\n                \"s3:GetObjectVersion\",\n                \"s3:ListBucket\",\n                \"s3:ListBucketMultipartUploads\",\n                \"s3:AbortMultipartUpload\",\n                \"s3:GetObjectTagging\",\n                \"s3:PutObjectTagging\",\n                \"s3:HeadBucket\",\n                \"s3:ListMultipartUploadParts\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n```\n\n### Tag the snapshots to migrate\n\nThe script fetches the snapshots which requires to be migrated using the tags.\nThe default tag used is `snap-to-bucket` but can be overridden using the\n`-t/--tag` from the inputs.\n\nThe tags should hold the value `migrate` to be picked by the script.\n\nOnce the snapshot is moved, the tag's value will be replaced with `transferred`.\n\n### Disclaimer\n\nThe tool works for snapshots with only one Linux partition. If there are more\nthan partition, only the first partition will be picked.\nSimilarly, only one partition will be created while restoring.\n\nThe script also does not encrypt your data explicitly. So, make sure the S3\nbucket is secure enough and it is advisable to enable server-side encryption\nwith AES-256.\n\n### Backup\n\nMake sure to tag the snapshots and run the script with root privileges as the\nscript needs to mount/unmount volumes.\n\n- Runing from source\n```console\n# pipenv run snap2bucket --bucket <bucket>\n```\n- Runing from install\n```console\n# snap2bucket --bucket <bucket>\n```\n\nIf you have used different tags on snapshots, use `-t\\--tag` option.\n\nIf you want to mount the devices on different location, use `-m\\--mount` option.\n\nTo change the type of volume, use `--type` option (like `io1` for higher\nthroughput).\n\nThe script can also compress the tar with gzip. Use the `--gzip` option.\n\nThe default storage class used for S3 objects will be STANDARD. To use other\nclasses like STANDARD_IA or even GLACIER, use `--storage-class` option.\n\nIf you want to delete the snapshot once they are transferred, use `-d\\--delete`\noption. Use this option with caution as this step cannot be undone.\n\nMake sure to run as root user as several permissions are required to mount a\ndevice.\n\n#### Backup huge data\n\nThe tool allows you to split the resultant tar into smaller tars. To do so, use\nthe `-s/--split` flag and define the size of each part. While restoring, the\nscript can list all of the tars in the given folder and reassemble based on\npart number.\n\nSince the S3 has a limit on object size, a single split can not be larger than\n5TB (the default value).\n\n### Options\n\n```\nUsage: snap2bucket [OPTIONS]\n\n  snap2bucket is a simple tool based on boto3 to move snapshots to S3 buckets.\n\nOptions:\n  --version                       Show the version and exit.\n  -v, --verbose                   increase output verbosity (-vvv for more\n                                  verbosity)  [x>=0]\n  --proxy http_proxy              proxy to be used\n  --noproxy no_proxy              comma separated list of domains which do not\n                                  require proxy\n  -b, --bucket BUCKET             S3 bucket to push snaps in  [required]\n  -t, --tag TAG                   tag on snapshots  [default: snap-to-bucket]\n  --type [standard|io1|io2|gp2|gp3|sc1|st1]\n                                  volume type  [default: gp2]\n  --iops INTEGER                  volume IOPS, valid only for gp3, io1 and io2\n  --throughput THROUGHPUT         volume throughput in MiB/s. Valid only for\n                                  gp3 volumes  [125<=x<=1000]\n  --storage-class [STANDARD|REDUCED_REDUNDANCY|STANDARD_IA|ONEZONE_IA|GLACIER|INTELLIGENT_TIERING|DEEP_ARCHIVE]\n                                  storage class for S3 objects  [default:\n                                  STANDARD]\n  -m, --mount DIR                 mount point for disks  [default: /mnt/snaps]\n  -d, --delete                    delete snapshot after transfer. Use with\n                                  caution!  [default: False]\n  -s, --split SIZE                split tar in chunks no bigger than (allowed\n                                  suffix b,k,m,g,t)  [default: 5t]\n  -g, --gzip                      compress tar with gzip\n  -r, --restore                   restore a snapshot\n  -k, --key TEXT                  key of the snapshot folder to restore\n                                  (required if restoring)\n  --boot                          was the snapshot a bootable volume?\n  --restore-dir DIRECTORY         directory to store S3 objects for restoring\n                                  [default: /tmp/snap-to-bucket]\n  -h, --help                      Show this message and exit.\n```\n\n### Files on S3\n\nThe script will store snapshots with following structure in S3:\n```\nsnap/<snapshot-name>/<snapshot-id>-<creation-time>-<now-time>.tar\n```\n\nThe snaphost name gets spaces ` ` and `/` replaces as `+` and `_` respectively.\nAnd the date/time is in ISO 8601 format.\n\nThis section is controlled by `get_key_for_upload()` of `S3Handler`.\n\n### Recovery\n\n#### Manually\n\n1. Create a new volume of the desired size in AWS and attach to an instance.\n    - You can also check for `x-amz-meta-disc-size` metadata attached to the S3\n      object to get the estimated size of unpacked files.\n    - The meta tag `snap-volume-size` also stores the size of volume from which\n      the snapshot was created.\n2. Download the snapshot from S3 to the instance.\n    1. If the upload was splitted, all the parts must be combined into one.\n        - `cat <downloaded_parts> > <single_huge>.tar`\n3. Partition the disk\n    - `printf \"label: dos\\ntype=83\\n\" | sudo sfdisk <device>` if the snapshot\n      was not bootable.\n    - `printf \"label: dos\\ntype=83, bootable\\n\" | sudo sfdisk <device>` if the\n      snapshot was bootable.\n    - `# partprobe <device>` to let know the kernel of new partition table.\n4. Format the disk\n    - `# mke2fs -t ext4 <device_partition>`\n5. Mount the partition\n    - `# mount <device_partition> /mnt/snapshot`\n6. Untar the downloaded file\n    - `# tar --extract --verbose --file <tar_location> -C /mnt/snapshot --preserve`\n7. Update the fstab\n    1. Check the fstab from `/mnt/snapshot/etc/fstab`\n    2. If disk was mounted from `Label`\n        - Update the label of new partition `# e2label <device> <label>`\n        - Check if the label was updated `# e2label <device>`\n    3. If the disk was mounted using UUID\n        - Get the UUID of the new device `# blkid`\n        - Edit the `/mnt/snapshot/etc/fstab`\n8. Update the grub if snapshot was bootable\n    1. Mount the required devices\n```shell\nfor i in /sys /proc /run /dev; do sudo mount --bind $i /mnt/snapshot$i; done\n```\n    2. ChRoot to mounted location\n```console\n# chroot /mnt/snapshot\n```\n    3. Reinstall and update grub\n```console\n# grub-install <device>\n# update-grub\n```\n    4. Unmount the devices\n```shell\nfor i in /sys /proc /run /dev; do sudo umount /mnt/snapshot$i; done\n```\n9. Unmount and detach the volume.\n\n#### From script (experimental)\n\nRun the script with `-r\\--restore` flag and provide the bucket and the key.\n- Runing from source\n```console\n# pipenv run snap2bucket --restore --bucket <bucket> --key <key>\n```\n- Runing from install\n```console\n# snap2bucket --restore --bucket <bucket> --key <key>\n```\n\n**Note:** The script will create new volume of size 25% more than the size of\ntar or `x-amz-meta-disc-size` metadata (if available).\n\nThe value for `--key` should be the logical folder holding the tars. For example\n`snap/<snapshot-name>`. The scipt will handle single file upload and split\nuploads accordingly.\n\nUse `--boot` flag if the snapshot to be restored was a bootable volume.\n\nRestore accepts other options `--type` and `-m\\--mount`.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/siemens/snap-to-bucket/",
    "keywords": "aws,snapshot,bucket,ebs,s3",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "snap-to-bucket",
    "package_url": "https://pypi.org/project/snap-to-bucket/",
    "platform": null,
    "project_url": "https://pypi.org/project/snap-to-bucket/",
    "project_urls": {
      "Homepage": "https://github.com/siemens/snap-to-bucket/"
    },
    "release_url": "https://pypi.org/project/snap-to-bucket/1.0.4/",
    "requires_dist": [
      "boto3",
      "psutil",
      "Click"
    ],
    "requires_python": ">=3.5",
    "summary": "Move AWS EBS Snapshots to S3 Buckets",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14293778,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "310daca34aca8a91ddcd8cf9379b897b8f4e82543df603687944b4d37d38c318",
          "md5": "1ec7488e62a10d449cda205a78663ec8",
          "sha256": "250d8896620cb0d8af867ab2726f8003c8102bc04741c2e2a7009be0d724b438"
        },
        "downloads": -1,
        "filename": "snap_to_bucket-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ec7488e62a10d449cda205a78663ec8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 22855,
        "upload_time": "2022-01-27T11:08:16",
        "upload_time_iso_8601": "2022-01-27T11:08:16.897212Z",
        "url": "https://files.pythonhosted.org/packages/31/0d/aca34aca8a91ddcd8cf9379b897b8f4e82543df603687944b4d37d38c318/snap_to_bucket-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a6ca9e23bf598d5ee9e740c9f10c33b91cd95c4b439897273aa193840840ccf",
          "md5": "0668ddddbe2d257fdc06c3c5c68066e8",
          "sha256": "59970213d8ad9b8d6e5db732d1728e7c1c1d26bd9ffccb783f62f5268a5cff44"
        },
        "downloads": -1,
        "filename": "snap_to_bucket-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0668ddddbe2d257fdc06c3c5c68066e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 23341,
        "upload_time": "2022-01-27T11:08:18",
        "upload_time_iso_8601": "2022-01-27T11:08:18.377602Z",
        "url": "https://files.pythonhosted.org/packages/5a/6c/a9e23bf598d5ee9e740c9f10c33b91cd95c4b439897273aa193840840ccf/snap_to_bucket-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06c7d3f748b05ba09d1c8a9a9a0f96116f8917916e727d2e376c304927f2649e",
          "md5": "2608c5be403f81bc229bb2fd777e8faf",
          "sha256": "463fd3c33a3dea8abb04be13ead3c8208efd6757f17a201518562c24843dbb1c"
        },
        "downloads": -1,
        "filename": "snap_to_bucket-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2608c5be403f81bc229bb2fd777e8faf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 23960,
        "upload_time": "2022-06-30T08:57:08",
        "upload_time_iso_8601": "2022-06-30T08:57:08.899318Z",
        "url": "https://files.pythonhosted.org/packages/06/c7/d3f748b05ba09d1c8a9a9a0f96116f8917916e727d2e376c304927f2649e/snap_to_bucket-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "373d38bcda59d77d81e380fdf4ff67cd25f208d023b0025bd6bd33154fa265bd",
          "md5": "e663ce3c98090d7a2fb7e116d98684e2",
          "sha256": "a58831a9d20271a2b37c14d2adfd1bb254e66a9f0c203a68a7e20fec19232ef2"
        },
        "downloads": -1,
        "filename": "snap_to_bucket-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e663ce3c98090d7a2fb7e116d98684e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 20339,
        "upload_time": "2022-06-30T08:57:10",
        "upload_time_iso_8601": "2022-06-30T08:57:10.046552Z",
        "url": "https://files.pythonhosted.org/packages/37/3d/38bcda59d77d81e380fdf4ff67cd25f208d023b0025bd6bd33154fa265bd/snap_to_bucket-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06c7d3f748b05ba09d1c8a9a9a0f96116f8917916e727d2e376c304927f2649e",
        "md5": "2608c5be403f81bc229bb2fd777e8faf",
        "sha256": "463fd3c33a3dea8abb04be13ead3c8208efd6757f17a201518562c24843dbb1c"
      },
      "downloads": -1,
      "filename": "snap_to_bucket-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2608c5be403f81bc229bb2fd777e8faf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 23960,
      "upload_time": "2022-06-30T08:57:08",
      "upload_time_iso_8601": "2022-06-30T08:57:08.899318Z",
      "url": "https://files.pythonhosted.org/packages/06/c7/d3f748b05ba09d1c8a9a9a0f96116f8917916e727d2e376c304927f2649e/snap_to_bucket-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "373d38bcda59d77d81e380fdf4ff67cd25f208d023b0025bd6bd33154fa265bd",
        "md5": "e663ce3c98090d7a2fb7e116d98684e2",
        "sha256": "a58831a9d20271a2b37c14d2adfd1bb254e66a9f0c203a68a7e20fec19232ef2"
      },
      "downloads": -1,
      "filename": "snap_to_bucket-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e663ce3c98090d7a2fb7e116d98684e2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 20339,
      "upload_time": "2022-06-30T08:57:10",
      "upload_time_iso_8601": "2022-06-30T08:57:10.046552Z",
      "url": "https://files.pythonhosted.org/packages/37/3d/38bcda59d77d81e380fdf4ff67cd25f208d023b0025bd6bd33154fa265bd/snap_to_bucket-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}