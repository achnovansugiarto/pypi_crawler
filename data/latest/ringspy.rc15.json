{
  "info": {
    "author": "Hao Yin",
    "author_email": "haoyin2022@u.northwestern.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# RingsPy\n[![Python 3](https://img.shields.io/static/v1?label=Python&logo=Python&color=3776AB&message=3)](https://www.python.org/)\n[![PyPI version](https://badge.fury.io/py/ringspy.svg)](https://badge.fury.io/py/ringspy)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/ringspy/badges/version.svg)](https://anaconda.org/conda-forge/ringspy)\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0.html)\n[![Tests](https://github.com/kingyin3613/ringspy/actions/workflows/tests.yml/badge.svg)](https://github.com/kingyin3613/ringspy/actions/workflows/tests.yml)\n[![codecov](https://codecov.io/gh/kingyin3613/ringspy/branch/main/graph/badge.svg?token=4AZN3HGGET)](https://codecov.io/gh/kingyin3613/ringspy)\n[![status](https://joss.theoj.org/papers/3dd05ca1103829e7620731845b0d2472/status.svg)](https://joss.theoj.org/papers/3dd05ca1103829e7620731845b0d2472)\n\nRingsPy is a Voronoi diagrams-based geometric generation tool that generates 3D meshes and models of prismatic cellular solids with radial growth rules.\n\n## Dependencies and Installation\nRingsPy depends on mainstream Python libraries ``numpy`` and ``scipy``, and optionally depends on library ``hexalattice``, if the regular hexagonal lattice (e.g. honeycomb) is wanted; also ``vtk``, if the 3D STL files are also wanted.\n### 1. pip install\nTo install RingsPy, one may use `pip`:\n```bash\npip install ringspy\n``` \nor use:\n```bash\npip install git+https://github.com/kingyin3613/ringspy.git\n``` \nto get updates beyond the latest release. \n\n### 2. conda install\nIf you are on Linux or Mac, you can also use `conda-forge` channel:\n```bash\nconda install -c conda-forge ringspy\n``` \n\n### 3. Installation Check\n\nThere are some unit tests in [tests](https://github.com/kingyin3613/ringspy/tree/main/tests/). One can use ``pytest`` to check whether the installation is successful by firstly moving to ``pytest`` directory and then running this command:\n\n```bash\npytest .\n```\n\n## Getting Started (Current version: v1.0.2)\nOnce all required components are installed and one is ready to begin, a path forward should be established for generating the mesh. The basic steps for running/viewing a cellular mesh are listed as the following:\n\n    1. Edit geometry and algorithm parameters\n    2. Generate mesh using Mesh Generation Tools\n    3. Visualize 2D view using Matplotlib or 3D model in `ParaView`\n    4. (Optional) Export 3D STL model for 3D editing and/or printing\n\t5. (Optional) Export input file for numerical simulations with software `Abaqus`\n\n### 1. Geometry and Parameters\nThe first step to generate a cellular geometry is selecting geometry and appropriate parameters. \n\n### 1.1. Geometry\nA template file, for example, `test_wood_cube.py` located in the [tests](https://github.com/kingyin3613/ringspy/tree/main/tests/) directory acts as both the parameter input file, and main executable for the generation of a cubic wood specimen.\n\n*Note: The Mesh Generation Tool by now only accepts many of pre-defined boundary geometries (for v1.0.x, the following 3 shapes are supported: triangle, square, hexagon), importing of CAD and/or other 3D model files will be implemented in subsequent versions.*\n\n*Note: for greatest compatibility create the geometry using all millimeters.*\n\n### 1.2. Parameters\n\n\nBy opening a input file, e.g., `tests/test_wood_cube.py` in any text editor, a file format similar to what is shown below will be displayed:\n```\ngeoName = 'wood_cube'\npath = 'meshes'\n\nradial_growth_rule = 'binary'\niter_max = 500 # increase this number to achieve a more regular geometry\nprint_interval = 500 # interval for printing prgress info\n\n# Radial cell growth parameters\n# length unit: mm\nr_min = 0   # inner radius of generation domain\nr_max = 4   # outer radius of generation domain\nnrings = 4 # number of rings\nwidth_heart = 0.3*(r_max-r_min)/nrings # ring width for the innermost ring\nwidth_sparse = 0.7*(r_max-r_min)/nrings # ring width for rings with sparse cells\nwidth_dense = 0.3*(r_max-r_min)/nrings # ring width for rings with dense cells\ngeneration_center = (0,0) # coordinates of generation domain center\n\ncellsize_sparse = 0.02\ncellsize_dense = 0.01\ncellwallthickness_sparse = 0.010\ncellwallthickness_dense = 0.006\n\n# clipping box parameters\nboundaryFlag = 'on'\nbox_shape = 'square'\nbox_center = (0,0) # coordinates of clipping box center\nbox_size = 4.0 # side length\n\t\n# longitudinal direction parameters\nnsegments = 2 # increase this number to achieve a smoother transition in longitudinal direction if theta is large\ntheta_min = 0 # unit: radian\ntheta_max = 0.05 # unit: radian\nz_min = 0\nz_max = box_size # segment_length = (z_max - z_min) / nsegments\nlong_connector_ratio = 0.02 # longitudinal joint length = ratio * segment_length\n\n# material parameters\nskeleton_density = 1.5e-9 # unit: tonne/mm3\n\n# generation parameters\nmerge_operation = 'on'\nmerge_tol = 0.01\n\nprecrackFlag = 'off'\nprecrack_widths = 0.1\n\nstlFlag = 'on'\n\ninpFlag = 'on'\ninpType = 'Abaqus'\n```\n\n- `geoName` is the geometry name, `path` is the folder where the mesh files will be generated.\n- `radial_growth_rule` is the radial growth rule for cell placement. When a file name with extension`.npy` is specified, a saved cell data file will be loaded (for v1.0.x, choose one of these rules: `binary`, `binary_lloyd`, `regular_hexagonal`, or a file name with extension `.npy`).\n- `iter_max` is the max number of iteration for randomly placing non-overlapping cell particles in the 2D toroidal cell placement region. Noticing that, larger `iter_max` leads to more centroidal Voronoi cells, for more reference, see [Wiki - Centroidal Voronoi Tessellation](https://en.wikipedia.org/wiki/Centroidal_Voronoi_tessellation/).\n- `print_interval` is the print interval when every n cell particles are placed in the placement region.\n- `r_min` and `r_max` are the upper and lower bounds of radii of toroidal cell placement regions (generation rings), `nrings` is the total number of rings.\n- `width_heart`, `width_sparse`, and `width_dense`, are ring widths for innermost ring, rings with sparse cells, and rings with dense cells, respectively, which all together determine the morphology of the cellular structure.\n- `generation_center` is the location of the placement region.\n- `cellsize_sparse`,`cellsize_dense`, `cellwallthickness_sparse`, and `cellwallthickness_dense` are parameters for the sparse and dense cells.\n- `boundaryFlag` flag can be turned on/off for generating neat boundaries consisting of grains.\n- `box_shape` is the shape of cutting box (for v1.0.x, choose one of following shapes: `triangle`, `square`, or `hexagon`).\n- `box_center`, and `box_size` are for describing the cutting box.\n- `nsegments` is the number of segments consisting the prismatic cells during the z- (longitudinal) extrusion, with `segment_length = (z_max - z_min) / nsegments`.\n- `theta_min` and `theta_max` determine the twisting angles (unit: radian) of the 2D mesh around the `generation_center`, during the spiral z-extrusion.\n- `z_min` and `z_max` determine the boundaries of prismatic cells in z- (longitudinal) direction.\n- `long_connector_ratio` is the length of longitudinal joints, with `longitudinal joint length = ratio * segment_length`.\n- `skeleton_density` is the density of the skeleton (substance) material, e.g. density of wood cell walls in the wood microstructure. \n- `merge_operation` flag can be turned on/off for the merging operation, when flag is on, cell ridges that are shorter than the threshold `merge_tol` in the 2D mesh will be deleted, and their vertices will be merged respectively, the mesh will be reconstructed. This is designed for eliminating small cell ridges/walls which fall out of the resolution range of the 3D printing and for avoiding having elements with too small stable time increments in numerical simulations. \n- `precrackFlag` flag is for inserting a pre-crack, for the notched specimens (for v1.0.x, only a single line pre-crack with the length of `precrack_widths` is supported).\n- `stlFlag` flag can be turned on/off for generating 3D STL files.\n- `inpFlag` flag can be turned on/off for generating input files for numerical simulations.\n- `inpType` indicates the software(s) that the mesh generation should generate input files for.\n\n![growth_rule_binary](<./contents/growth_rule_binary.png>)\n### 2.1. Run Mesh Generation\nOpen a Command Prompt or Terminal window and set the current directory to [tests](https://github.com/kingyin3613/ringspy/tree/main/tests/) or any other directory, then run the command:\n```\npython test_wood_cube.py\n```\nFunctions in `MeshGenTools` library will be called to create the initial mesh, wood cell particles following certain cell size distribution will be placed, then `Scipy.voronoi` function will be called to form the initial 2D Voronoi tessellation, additional code reforms the tesselation and generates the desired files. A successful generation will end with the line \"Files generated ...\" in the Terminal window.\n\nA new folder should have been created in the `.\\meshes` directory with the same name as the `geoName` in `test_wood_cube.py`.\n\n${\\color{red}\\textbf{(New feature in version v0.4.x)}}$\n\nThe Lloyd's relaxation (a.k.a. Lloyd's algorithm) has been integrated with the mesh generation, one may use this approach by changing the following line in the input file:\n```\nradial_growth_rule = binary_lloyd\n``` \nThis allows a rapid radial generation of more regular centroidal Voronoi cells from the `generation_center` (see the difference between `wood_binary` and `wood_binary_lloyd` in the preview of 2D cross-sections in section 2.2). For more detail of the algorithm, see [Wiki - Lloyd's algorithm](https://en.wikipedia.org/wiki/Lloyd's_algorithm)).\n\n![lloyd](<./contents/lloyd.gif>)\n\n### 2.2. Check Mesh and 3D Model Files\n\nThe following files should be generated in the `.\\meshes\\geoName` directory with a successful run:\n- Log file\n    - Log file for model generation: `wood_cube-report.log`\n- Mesh files\n    - Non-Uniform Rational B-Splines (NURBS) beam file: `wood_cubeIGA.txt`\n    - connector data file: `wood_cube-mesh.txt`\n    - Grain-ridge data file: `wood_cube-vertex.mesh`\n    - Ridge data file: `wood_cube-ridge.mesh`\n- Visualization files\n    - Cross-sectional image file for initial 2D configuration: `wood_cube.png`\n    - Paraview vtk file for initial vertex configuration: `wood_cube_vertices.vtu`\n    - Paraview vtk file for initial grain solid configuration: `wood_cube_beams.vtu`\n    - Paraview vtk file of initial cell ridge configuration: `wood_cube_conns.vtu`\n    - Paraview vtk file of initial connector (volume) configuration: `wood_cube_conns_vol.vtu`\n- (Optional) 3D model files\n    - STL file of initial cellular solid configuration: `wood_cube.stl`\n- (Optional) Abaqus input files\n    - INP file of simulation input of initial cellular solid configuration in `Abaqus`: `wood_cube.inp`\n\n\n![Model2DPreview](<./contents/Model2DPreview.png>)\n\t\n### 3. Visualization\nA scientific visualization application `ParaView` can directly visualize the generated vtk files; It can also visualize generated 3D model STL files if the STL flag is on. `Paraview` is a free software, it can be downloaded from its official website: [https://www.paraview.org/download/](https://www.paraview.org/download/), latest version is recommeded.\n\n### 3.1. Visualize Components of the 3D Model in ParaView\n    1. Open ParaView\n    2. Recommeded to temporarily turn off ray tracing\n        - Uncheck \"Enable Ray Tracing\" (bottom left)\n    3. Open File Sets in `.\\meshes\\geoName`\n        - File > Open...\n    4. Select the visualization files containing: `_vertices.vtu`, `_beams.vtu`, `_conns.vtu`\n    5. Apply to visualize\n        - Press Apply (left side, center)\n    6. Turn on color plotting\n        - Left click `_conns.vtu`, then select coloring (mid/lower left) > Connector_width\n    7. Scale and position the image as desired\n    8. Turn back on Ray Tracing\n    9. Adjust Ray Tracing lighting and settings as desired\n    10. Export Image\n        - File > Save Screenshot\n        - Enter a file name > OK\n        - Leave new window as-is or increase resolution > OK\n\n### 3.2. Visualize Volumes of the 3D Model in ParaView\n    1. Open Paraview\n    2. Recommeded to temporarily turn off ray tracing\n        - Uncheck \"Enable Ray Tracing\" (bottom left)\n    3. Open File Sets in `.\\meshes\\geoName`\n        - File > Open...\n    4. Select the newly created visualization files containing: `_conns_vol.vtu`\n    5. Apply to visualize\n        - Press Apply (left side, center)\n    6. Turn on color plotting\n        - Left click `_conns_vol.vtu`, then select coloring (mid/lower left) > Connector_width\n    7. Scale and position the image as desired\n    8. Turn back on Ray Tracing\n    9. Adjust Ray Tracing lighting and settings as desired\n    10. Export Image\n        - File > Save Screenshot\n        - Enter a file name > OK\n        - Leave new window as-is or increase resolution > OK\n![ModelVisualization](<./contents/ModelVisualization.png>)\n\n### 4. (Optional) Numerical Simulation\nThe mesh generation tool can also prepare the input files for the numerical simulations of the cellular solid in other softwares. By now (version 1.0.0), the input file format, `.inp`, that is used in a finite element method (FEM) software `Abaqus` is supported, if the INP flag is on. `Abaqus` is a commerical software suite for integrated computer-aided engineering (CAE) and finite element analysis, own by `Dassault Systèmes`. One may refer to its [Wiki](https://en.wikipedia.org/wiki/Abaqus) for more about `Abaqus`, and to [Introduction](https://bertoldi.seas.harvard.edu/files/bertoldi/files/abaqusinputfilemanualv1.pdf?m=1444417191) for the introduction of Abaqus input files.\n\nAll steps for the model setup can be accomplished through manually coding the Abaqus input file in a text editor. The method used in the example procedure shown below requires access to the Abaqus GUI.\n\n### 4.1 Create New Model\n    1. Open Abaqus CAE\n    2. Create a new model\n        -\tFile > New Model Database > With Standard/Explicit Model\n\n### 4.2 Import Meshed Part\n\n    1. Import the meshed part\n        - File > Import > Part\n        - Select the newly created file which ends in `.inp` (note: you may need to change the File Filter to see this file)\n        - Click OK\n    2. Rename part\n        - Under the model tree (left) expand `Parts`\n        - Right click on the part > Rename...\n        - Enter a new name less than 14 characters, no special symbols, and easily recognizable (i.e. \"WoodCube\")\n\n*Note: if FEM parts will be added to the model, this RingsPy generated part must come first alphabetically. Also recommended not to include numbers in the name.*\n\n![ModelNumericalSimulation](<./contents/ModelNumericalSimulation.png>)\n\n## Contributing\n\nContributions are always welcome!\n\nIf you wish to contribute code/algorithms to this project, or to propose a collaboration study, please send an email to haoyin2022 [at] u.northwestern.edu .\n\n## License\n![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)\n\nDistributed under the GPL v3 license. Copyright 2023 Hao Yin.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kingyin3613/ringspy/",
    "keywords": "",
    "license": "GPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ringspy",
    "package_url": "https://pypi.org/project/ringspy/",
    "platform": "unix",
    "project_url": "https://pypi.org/project/ringspy/",
    "project_urls": {
      "Homepage": "https://github.com/kingyin3613/ringspy/"
    },
    "release_url": "https://pypi.org/project/ringspy/1.0.2/",
    "requires_dist": [
      "requests (>=2)",
      "numpy",
      "scipy",
      "matplotlib (>=3.2.2)",
      "hexalattice (==1.2.1)",
      "vtk",
      "pytest (>=6.0) ; extra == 'testing'",
      "pytest-cov (>=2.0) ; extra == 'testing'",
      "pytest-datafiles (>=2.0) ; extra == 'testing'",
      "tox (>=3.24) ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "A geometric generation tool for prismatic cellular solids",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17185020,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a56dfe5be62c0c7df006fa8d1e0004e64ca23274cb509ad4dd462f635d4c22a",
          "md5": "f8f087a60a66e1bcb8d28107c88cd0e8",
          "sha256": "11d600bb56b09876b3ee1709dbf09c744afb52c6bdf348ef9584ee4120d04436"
        },
        "downloads": -1,
        "filename": "RingsPy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8f087a60a66e1bcb8d28107c88cd0e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 36564,
        "upload_time": "2022-09-27T20:13:31",
        "upload_time_iso_8601": "2022-09-27T20:13:31.950618Z",
        "url": "https://files.pythonhosted.org/packages/6a/56/dfe5be62c0c7df006fa8d1e0004e64ca23274cb509ad4dd462f635d4c22a/RingsPy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7570d62cefee1413b6cd84cd1b2b1dfa47716f6d8ffcbb1bdd32d7de23fe389",
          "md5": "9d5a8c473cc04c0cd38959c3e123b6b9",
          "sha256": "44fcfb60fd141c03bed97f748a93d482fe01df6e683455e8279b3fd576e8f4b1"
        },
        "downloads": -1,
        "filename": "RingsPy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9d5a8c473cc04c0cd38959c3e123b6b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 39051,
        "upload_time": "2022-09-27T20:13:33",
        "upload_time_iso_8601": "2022-09-27T20:13:33.989615Z",
        "url": "https://files.pythonhosted.org/packages/a7/57/0d62cefee1413b6cd84cd1b2b1dfa47716f6d8ffcbb1bdd32d7de23fe389/RingsPy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e439d1e33d4529203857903f2120093a3345b5304e76854e2081eb92c64ad361",
          "md5": "077a7f189d43f0fac6fe47cf66e55b76",
          "sha256": "05060cda158ff55539281a8cb0108bf05c519b6481768461f4330620062aa876"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "077a7f189d43f0fac6fe47cf66e55b76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32327,
        "upload_time": "2022-10-08T21:53:22",
        "upload_time_iso_8601": "2022-10-08T21:53:22.069803Z",
        "url": "https://files.pythonhosted.org/packages/e4/39/d1e33d4529203857903f2120093a3345b5304e76854e2081eb92c64ad361/RingsPy-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33741f1be02fc198fb6abd56919cb3191641897298ee3e377ab70e0457c52db9",
          "md5": "b7655cffba761524360911cfbbccc727",
          "sha256": "8fea1c9a9ea418e59ad041b94c9403efc1e3af9628a8455211e83c31856b22ca"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b7655cffba761524360911cfbbccc727",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35878,
        "upload_time": "2022-10-08T21:53:23",
        "upload_time_iso_8601": "2022-10-08T21:53:23.731917Z",
        "url": "https://files.pythonhosted.org/packages/33/74/1f1be02fc198fb6abd56919cb3191641897298ee3e377ab70e0457c52db9/RingsPy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9075314b6e9fe579383c205dcea7bcfe3c7fbbd9dc837a88192155b19b52942a",
          "md5": "d2b8a4d8f42717a18013b40222079ac0",
          "sha256": "fafefd2750a7597aa530da5860e05db1ffdefaff721cdbc3cd892c5cbe05e822"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2b8a4d8f42717a18013b40222079ac0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35380,
        "upload_time": "2022-10-08T22:00:21",
        "upload_time_iso_8601": "2022-10-08T22:00:21.424899Z",
        "url": "https://files.pythonhosted.org/packages/90/75/314b6e9fe579383c205dcea7bcfe3c7fbbd9dc837a88192155b19b52942a/RingsPy-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "134040f503754df4346946d051c5b3b81fc0c45972479ffad38169e3c59da335",
          "md5": "06a9d034959dd7fbfdcb0a084fbfb22b",
          "sha256": "9b426986cf81b3f118e27115561ddb7c041428024710bda584a3497b271382a3"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "06a9d034959dd7fbfdcb0a084fbfb22b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39444,
        "upload_time": "2022-10-08T22:00:22",
        "upload_time_iso_8601": "2022-10-08T22:00:22.978253Z",
        "url": "https://files.pythonhosted.org/packages/13/40/40f503754df4346946d051c5b3b81fc0c45972479ffad38169e3c59da335/RingsPy-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aea424992eaca51533684a06d2467fcfe14068bb37e992b5b53d9ba4d174ea2",
          "md5": "383d6d421848d71f5d780979c5e06bf8",
          "sha256": "c27100ead0731ff96d676cb1f63b03d7480d1217949335a9f21d8137a9a315dd"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "383d6d421848d71f5d780979c5e06bf8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35539,
        "upload_time": "2022-10-10T22:52:11",
        "upload_time_iso_8601": "2022-10-10T22:52:11.697219Z",
        "url": "https://files.pythonhosted.org/packages/1a/ea/424992eaca51533684a06d2467fcfe14068bb37e992b5b53d9ba4d174ea2/RingsPy-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bedfdec9cdab9e54d9e12fe857c854af39e21c6c47b632d64576a2d59d901d05",
          "md5": "6d13442bc17041ba4345eb2e42ca2a21",
          "sha256": "20ed49a72d0422e2ef08a1a5e50cf38c6bcdc7f8cdedb120f05260a4955378a9"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6d13442bc17041ba4345eb2e42ca2a21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39825,
        "upload_time": "2022-10-10T22:52:13",
        "upload_time_iso_8601": "2022-10-10T22:52:13.214056Z",
        "url": "https://files.pythonhosted.org/packages/be/df/dec9cdab9e54d9e12fe857c854af39e21c6c47b632d64576a2d59d901d05/RingsPy-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "398fd049806daa63aa125fac3a0b1fef0c0b33e4a5ce149bdb0a5a0a60d9e80d",
          "md5": "dc4dea6adb8754096f82ac67a6d12375",
          "sha256": "72bf08df6b4379a05b34ee27461302c1fbc189bb6ee1488b25d3e5677797163b"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc4dea6adb8754096f82ac67a6d12375",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35543,
        "upload_time": "2022-10-10T23:05:33",
        "upload_time_iso_8601": "2022-10-10T23:05:33.260909Z",
        "url": "https://files.pythonhosted.org/packages/39/8f/d049806daa63aa125fac3a0b1fef0c0b33e4a5ce149bdb0a5a0a60d9e80d/RingsPy-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9142289aab5dca497fa20a973c6857baf88d3fdaff0001f70a3c2ac065d3c5b",
          "md5": "808a75bf2d14848ec8de2ef8c8f02647",
          "sha256": "357fc5cfe7b71afc9c77a231cbc032d5c9e189031d04540cde9333a00d71c28a"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "808a75bf2d14848ec8de2ef8c8f02647",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39830,
        "upload_time": "2022-10-10T23:05:34",
        "upload_time_iso_8601": "2022-10-10T23:05:34.689943Z",
        "url": "https://files.pythonhosted.org/packages/d9/14/2289aab5dca497fa20a973c6857baf88d3fdaff0001f70a3c2ac065d3c5b/RingsPy-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57108503bb8a59715eaa7b6c5fe022b3e3cf67ae7d337dd0802b51457f40535b",
          "md5": "9bf21c5be2793a6de3189fe1680e7880",
          "sha256": "55ac187a4ff44d7dda05b6da7612b8ac91527a2852cad712be81dd23fdb4a344"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bf21c5be2793a6de3189fe1680e7880",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35541,
        "upload_time": "2022-10-10T23:37:26",
        "upload_time_iso_8601": "2022-10-10T23:37:26.309590Z",
        "url": "https://files.pythonhosted.org/packages/57/10/8503bb8a59715eaa7b6c5fe022b3e3cf67ae7d337dd0802b51457f40535b/RingsPy-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c9eb614c2b5dc81bb6e4e0ed4c542638d74deb0818944ea9311dd8c50eb13ed",
          "md5": "fa289896d61cc2d2617c9b88daace70b",
          "sha256": "ddf15cff3b50235ab98e4d1c2b273c78a90334bd5f175e6da6f141d42a21c5fa"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fa289896d61cc2d2617c9b88daace70b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39820,
        "upload_time": "2022-10-10T23:37:27",
        "upload_time_iso_8601": "2022-10-10T23:37:27.459617Z",
        "url": "https://files.pythonhosted.org/packages/4c/9e/b614c2b5dc81bb6e4e0ed4c542638d74deb0818944ea9311dd8c50eb13ed/RingsPy-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31788c505533d059af6bd4f85f431a20f1f3f9997618858923533d6f405e58aa",
          "md5": "4c4039e77efd51d5702867ed3e30be12",
          "sha256": "206fef253fbf6759ddaf0b1b8b37f7b3d7c0d9f8d5854f4ac95322534bca5f6d"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c4039e77efd51d5702867ed3e30be12",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35547,
        "upload_time": "2022-10-11T01:39:50",
        "upload_time_iso_8601": "2022-10-11T01:39:50.916805Z",
        "url": "https://files.pythonhosted.org/packages/31/78/8c505533d059af6bd4f85f431a20f1f3f9997618858923533d6f405e58aa/RingsPy-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d3b5effa431fd7b32da4a07a0539ae35cdaf4a723c08b7ba99c2f242ad7f422",
          "md5": "eb76d43a63f30837420e5a71f018a1c2",
          "sha256": "945b4cc01babcb9fda4ecaf4ba2bb12d855af412f76a20fcb405bf1565c2617e"
        },
        "downloads": -1,
        "filename": "RingsPy-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "eb76d43a63f30837420e5a71f018a1c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39820,
        "upload_time": "2022-10-11T01:39:52",
        "upload_time_iso_8601": "2022-10-11T01:39:52.246880Z",
        "url": "https://files.pythonhosted.org/packages/6d/3b/5effa431fd7b32da4a07a0539ae35cdaf4a723c08b7ba99c2f242ad7f422/RingsPy-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d21e64a273dd1eed2c5fdd11852100c8365de6d4c315cbf690e3f4966298259",
          "md5": "574c0228578294e34f8f862bd116e710",
          "sha256": "a9a2e686a7cfacb9ffa8842c2bcce10ce970e9f552806164a316925a31971b4d"
        },
        "downloads": -1,
        "filename": "RingsPy-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "574c0228578294e34f8f862bd116e710",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49335,
        "upload_time": "2022-11-03T17:07:33",
        "upload_time_iso_8601": "2022-11-03T17:07:33.202025Z",
        "url": "https://files.pythonhosted.org/packages/9d/21/e64a273dd1eed2c5fdd11852100c8365de6d4c315cbf690e3f4966298259/RingsPy-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4c8fe2e8d133ccd8e586deeda022a19569633a7ca5ab48e861fbd5aee82656c",
          "md5": "e96d352a2780556bed2a86e709cddbea",
          "sha256": "ebd262c73994c983ce7aaffff441dfc97f5930050c0e4ba0f0f2eb8253d12afe"
        },
        "downloads": -1,
        "filename": "RingsPy-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e96d352a2780556bed2a86e709cddbea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54530,
        "upload_time": "2022-11-03T17:07:34",
        "upload_time_iso_8601": "2022-11-03T17:07:34.811518Z",
        "url": "https://files.pythonhosted.org/packages/e4/c8/fe2e8d133ccd8e586deeda022a19569633a7ca5ab48e861fbd5aee82656c/RingsPy-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8441656841eadce4e525545d0c9afdb1eca3de4ac3fe25893a2503defe7a2f5",
          "md5": "1e5710bf796b7224d58285aff601489d",
          "sha256": "323b7792e4b30dd5302b0dc78b73e853767bac90afcb567cc38b6e17552b3192"
        },
        "downloads": -1,
        "filename": "RingsPy-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e5710bf796b7224d58285aff601489d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49548,
        "upload_time": "2022-11-17T17:19:25",
        "upload_time_iso_8601": "2022-11-17T17:19:25.798982Z",
        "url": "https://files.pythonhosted.org/packages/c8/44/1656841eadce4e525545d0c9afdb1eca3de4ac3fe25893a2503defe7a2f5/RingsPy-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bc3b044c3e80f5f442c5fb7f01d37fb0982369c61ae4ec1a475f11eee335352",
          "md5": "cb59b0653234c1d127209604bf750fcc",
          "sha256": "bc95707e5e5daa16e5495bfcd1144ccda22c1a870654b50b285999b547046c3f"
        },
        "downloads": -1,
        "filename": "RingsPy-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cb59b0653234c1d127209604bf750fcc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54851,
        "upload_time": "2022-11-17T17:19:27",
        "upload_time_iso_8601": "2022-11-17T17:19:27.735787Z",
        "url": "https://files.pythonhosted.org/packages/4b/c3/b044c3e80f5f442c5fb7f01d37fb0982369c61ae4ec1a475f11eee335352/RingsPy-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faef6faff36729d5243d9990547fcf355d93631d5fe0361227a749976da1f759",
          "md5": "38473f707743c4a7d0193e2c15c8496b",
          "sha256": "1bbc297f07f8461a33302901e8cb032f84c83afdf4af3f0537fd585e2a39af9b"
        },
        "downloads": -1,
        "filename": "ringspy-0.3.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38473f707743c4a7d0193e2c15c8496b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49902,
        "upload_time": "2023-02-06T04:32:22",
        "upload_time_iso_8601": "2023-02-06T04:32:22.169291Z",
        "url": "https://files.pythonhosted.org/packages/fa/ef/6faff36729d5243d9990547fcf355d93631d5fe0361227a749976da1f759/ringspy-0.3.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2268732fe94d3bd45b198b9a5c82b820a275f036204563b78df0183b7a9e265",
          "md5": "5487e4ebfa38e0d7bd34bf8883b9e7e7",
          "sha256": "21e09f5375091cd18ff15b5fb6c3f771c05d36e565183e9ee760f1ce8211c7d0"
        },
        "downloads": -1,
        "filename": "ringspy-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5487e4ebfa38e0d7bd34bf8883b9e7e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54565,
        "upload_time": "2023-02-06T04:32:24",
        "upload_time_iso_8601": "2023-02-06T04:32:24.289227Z",
        "url": "https://files.pythonhosted.org/packages/d2/26/8732fe94d3bd45b198b9a5c82b820a275f036204563b78df0183b7a9e265/ringspy-0.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9637d1e0a4fc2edb3142a998b747adb392bd8614915f3ffced22f9c82d94f38",
          "md5": "6d2d6dbe0a889ee1aa2d52182ec8f54f",
          "sha256": "c0fe4002853d897922b4dcee1af5b470f08346cde6d23db76c60094e6b7adc9f"
        },
        "downloads": -1,
        "filename": "ringspy-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d2d6dbe0a889ee1aa2d52182ec8f54f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 45002,
        "upload_time": "2023-02-17T22:32:22",
        "upload_time_iso_8601": "2023-02-17T22:32:22.421404Z",
        "url": "https://files.pythonhosted.org/packages/e9/63/7d1e0a4fc2edb3142a998b747adb392bd8614915f3ffced22f9c82d94f38/ringspy-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "541d6314143966dc2d751470928a19aaf055b8ea965123bafb0b48a1cbbb2fed",
          "md5": "1e866617ff38e9dadbf0654492c9bdf1",
          "sha256": "f5ab7d8be2d3dcf2092a8ad360bef07c1f3ca1afa340f5008387cf5ca6ef8f6c"
        },
        "downloads": -1,
        "filename": "ringspy-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1e866617ff38e9dadbf0654492c9bdf1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50973,
        "upload_time": "2023-02-17T22:32:24",
        "upload_time_iso_8601": "2023-02-17T22:32:24.116712Z",
        "url": "https://files.pythonhosted.org/packages/54/1d/6314143966dc2d751470928a19aaf055b8ea965123bafb0b48a1cbbb2fed/ringspy-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d99df20e26be5e3823a96dfd640e295326f057c8ab5177ce6eb79c0d8573780",
          "md5": "c3e2d78520483a9dfb973e96e0ce5e7e",
          "sha256": "dad217550195e04ab456f75b8ec388b3484b48b4ff3f11b5acdec162fb3c7a14"
        },
        "downloads": -1,
        "filename": "ringspy-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3e2d78520483a9dfb973e96e0ce5e7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 45021,
        "upload_time": "2023-02-20T05:27:46",
        "upload_time_iso_8601": "2023-02-20T05:27:46.610447Z",
        "url": "https://files.pythonhosted.org/packages/2d/99/df20e26be5e3823a96dfd640e295326f057c8ab5177ce6eb79c0d8573780/ringspy-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "332a81ee4cc9f5acf4017f2660824bbfceb8bb3f3ea33c80c9dcdbc80e3358e1",
          "md5": "f435ccbdac23ab5651c299883f609649",
          "sha256": "78754dcd7270821d7cd86dc40fabb84ca8e1877bee06fa363bf56a997bcc218d"
        },
        "downloads": -1,
        "filename": "ringspy-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f435ccbdac23ab5651c299883f609649",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 51003,
        "upload_time": "2023-02-20T05:27:47",
        "upload_time_iso_8601": "2023-02-20T05:27:47.972589Z",
        "url": "https://files.pythonhosted.org/packages/33/2a/81ee4cc9f5acf4017f2660824bbfceb8bb3f3ea33c80c9dcdbc80e3358e1/ringspy-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d523a11d651c2153012cb19230afe9d5fefdee022280704c96915444b50218a",
          "md5": "a891eab7a7d910dc6f3366132564d6cc",
          "sha256": "c2802b15d01953d69fc57e2190853ff603f5b4382ed6df6add33ee50045d9c86"
        },
        "downloads": -1,
        "filename": "ringspy-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a891eab7a7d910dc6f3366132564d6cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 45545,
        "upload_time": "2023-02-27T17:49:05",
        "upload_time_iso_8601": "2023-02-27T17:49:05.414832Z",
        "url": "https://files.pythonhosted.org/packages/2d/52/3a11d651c2153012cb19230afe9d5fefdee022280704c96915444b50218a/ringspy-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56c87970e23213e1ebb068567cc0683c70d14f699dfbdecb614d818e07a31519",
          "md5": "0067b69d1e78391f4b1aef861f0933db",
          "sha256": "e9e486c0c812848e20e17127c019e66d63160bfa7b519f38e9ccd71e54e152a6"
        },
        "downloads": -1,
        "filename": "ringspy-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0067b69d1e78391f4b1aef861f0933db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 51533,
        "upload_time": "2023-02-27T17:49:06",
        "upload_time_iso_8601": "2023-02-27T17:49:06.668523Z",
        "url": "https://files.pythonhosted.org/packages/56/c8/7970e23213e1ebb068567cc0683c70d14f699dfbdecb614d818e07a31519/ringspy-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36409133bd72bbd77cd0c655a6d3c1cce5dfefe75c4cb4318924820b32de3898",
          "md5": "eeeba28963bb18cfc0224640fc354aaf",
          "sha256": "fb086560b61dfbb95b69820a5d8a43d6377496cde5df55c5d423a999717c63c6"
        },
        "downloads": -1,
        "filename": "ringspy-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eeeba28963bb18cfc0224640fc354aaf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 45559,
        "upload_time": "2023-03-06T23:36:49",
        "upload_time_iso_8601": "2023-03-06T23:36:49.983439Z",
        "url": "https://files.pythonhosted.org/packages/36/40/9133bd72bbd77cd0c655a6d3c1cce5dfefe75c4cb4318924820b32de3898/ringspy-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97aa55962dfdbf5dba9b8cafb2091277c88d4a4353256ddfea2077ce8d2bacd7",
          "md5": "c3136c264f1681fcc8433003d707dc68",
          "sha256": "9f3de072d614d51508f128219a539b388229b58c28a8cb23e6677de7ffb9b59f"
        },
        "downloads": -1,
        "filename": "ringspy-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c3136c264f1681fcc8433003d707dc68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 51575,
        "upload_time": "2023-03-06T23:36:51",
        "upload_time_iso_8601": "2023-03-06T23:36:51.602719Z",
        "url": "https://files.pythonhosted.org/packages/97/aa/55962dfdbf5dba9b8cafb2091277c88d4a4353256ddfea2077ce8d2bacd7/ringspy-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a45d21ed70a9f63700c0a2b2f946f708b4b810cf393c246f7ffe38a09b2178d9",
          "md5": "52d0d8030c3bfebe4dde3b085ca0eda6",
          "sha256": "87720d5a7286aa1feaebe175bae9fd444abecc8ebbbeeb428e698ca3cb8a9375"
        },
        "downloads": -1,
        "filename": "ringspy-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52d0d8030c3bfebe4dde3b085ca0eda6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 45586,
        "upload_time": "2023-03-07T02:23:40",
        "upload_time_iso_8601": "2023-03-07T02:23:40.782887Z",
        "url": "https://files.pythonhosted.org/packages/a4/5d/21ed70a9f63700c0a2b2f946f708b4b810cf393c246f7ffe38a09b2178d9/ringspy-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "404770badcd408afb23ff0f590987c28c3e4eed2cda4f0f3a2a081e481576fb5",
          "md5": "86d79c805f70b6bcafacc21d748e9349",
          "sha256": "3acfa4f50507cacafa79e49a37907fe5c7b9246cfb76030de257807a50374a4e"
        },
        "downloads": -1,
        "filename": "ringspy-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "86d79c805f70b6bcafacc21d748e9349",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55003,
        "upload_time": "2023-03-07T02:23:41",
        "upload_time_iso_8601": "2023-03-07T02:23:41.942634Z",
        "url": "https://files.pythonhosted.org/packages/40/47/70badcd408afb23ff0f590987c28c3e4eed2cda4f0f3a2a081e481576fb5/ringspy-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a45d21ed70a9f63700c0a2b2f946f708b4b810cf393c246f7ffe38a09b2178d9",
        "md5": "52d0d8030c3bfebe4dde3b085ca0eda6",
        "sha256": "87720d5a7286aa1feaebe175bae9fd444abecc8ebbbeeb428e698ca3cb8a9375"
      },
      "downloads": -1,
      "filename": "ringspy-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "52d0d8030c3bfebe4dde3b085ca0eda6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 45586,
      "upload_time": "2023-03-07T02:23:40",
      "upload_time_iso_8601": "2023-03-07T02:23:40.782887Z",
      "url": "https://files.pythonhosted.org/packages/a4/5d/21ed70a9f63700c0a2b2f946f708b4b810cf393c246f7ffe38a09b2178d9/ringspy-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "404770badcd408afb23ff0f590987c28c3e4eed2cda4f0f3a2a081e481576fb5",
        "md5": "86d79c805f70b6bcafacc21d748e9349",
        "sha256": "3acfa4f50507cacafa79e49a37907fe5c7b9246cfb76030de257807a50374a4e"
      },
      "downloads": -1,
      "filename": "ringspy-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "86d79c805f70b6bcafacc21d748e9349",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 55003,
      "upload_time": "2023-03-07T02:23:41",
      "upload_time_iso_8601": "2023-03-07T02:23:41.942634Z",
      "url": "https://files.pythonhosted.org/packages/40/47/70badcd408afb23ff0f590987c28c3e4eed2cda4f0f3a2a081e481576fb5/ringspy-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}