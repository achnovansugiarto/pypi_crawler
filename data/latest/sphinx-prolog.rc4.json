{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![Licence][licence-badge]][licence-link]\n[![Python][python-badge]][python-link]\n[![PyPI][pypi-badge]][pypi-link]\n[![Documentation][doc-badge]][doc-link]\n\n[licence-badge]: https://img.shields.io/github/license/simply-logical/sphinx-prolog.svg\n[licence-link]: https://github.com/simply-logical/sphinx-prolog/blob/master/LICENCE\n[python-badge]: https://img.shields.io/badge/python-3.5-blue.svg\n[python-link]: https://github.com/simply-logical/sphinx-prolog\n[pypi-badge]: https://img.shields.io/pypi/v/sphinx-prolog.svg\n[pypi-link]: https://pypi.org/project/sphinx-prolog\n[doc-badge]: https://img.shields.io/badge/read-documentation-blue.svg\n[doc-link]: https://book-template.simply-logical.space\n\n# :open_book: Simply Logical extensions for Jupyter Book (Sphinx) #\n\nThis repository holds a collection of [Sphinx] extensions designed for the\n[Jupyter Book] platform.\nIt implements the following functionality:\n\n* **information boxes** -- admonition-like blocks with *title* and *content*;\n* **exercise and solution boxes** -- *numbered* admonition-like blocks holding\n  *exercises* and their *solutions*; and\n* **interactive Prolog code blocks** -- [SWI Prolog] code blocks that can be\n  executed directly in the browser with [SWISH].\n\n**This readme file holds a technical documentation of the `sphinx-prolog`\nextension.\nWe also publish a [Jupyter Book] template for authoring interactive Prolog\ncontent that simultaneously serves as a _user guide_ to the functionality\nimplemented by this extension.\nThe template is available in the [simply-logical/prolog-book-template] GitHub\nrepository and the built guide can be found at\n<https://book-template.simply-logical.space/>;\nthe \"`sphinx-prolog` Extension\" section should be of particular interest.**\n\n> This *readme* file uses [Jupyter Book]'s [MyST Markdown] syntax for **roles**\n  and **directives** -- see [MyST overview] for more details.\n  For use with [Sphinx], please refer to the [reStructuredText] syntax.\n\n---\n\nTo get started with `sphinx-prolog`, first install it with `pip`:\n```bash\npip install sphinx-prolog\n```\nthen, add desired `sphinx_prolog` extensions to the Sphinx `extensions` list\nin your `conf.py`\n```Python\n...\nextensions = ['sphinx_prolog.infobox',\n              'sphinx_prolog.solex',\n              'sphinx_prolog.swish',\n              'sphinx_prolog.pprolog',\n              ]\n...\n```\n\n## :information_source: Infobox directive ##\n\nThe [`sphinx_prolog.infobox`](sphinx_prolog/infobox.py) module defines the\n`infobox` directive used for building *information boxes*.\n\n### Usage ###\n\nAn *information box* is included with the `infobox` directive:\n\n````text\n```{infobox} ibox:4.2\n---\ntitle: Title of my infobox\n---\nContent of my information box.\n```\n````\n\n> Note that if the content of an information box includes directives\n  introduced with a **triple** backtick, the `infobox` directive itself should\n  be introduced with a **quadruple** backtick.\n  This logic applies to all nested directives.\n\n### Arguments, parameters and content ###\n\nThe `infobox` directive has one **optional** argument that specifies the\nreferenceable label of this box.\nThe label must be prefixed with `ibox:`.\nThen, the box can be referenced with the standard `ref` role, e.g.,\n`` {ref}`ibox:4.2` ``, which will produce a hyper-link with the title of the\ninformation box.\n\nAdditionally, the `infobox` directive has one **required** parameter:\n\n* `title` -- specifies the title of the information box.\n\nThe `infobox` directive also requires a non-empty content.\n\n## :trophy: Exercise and Solution directives ##\n\nThe [`sphinx_prolog.solex`](sphinx_prolog/solex.py) module defines the\n`exercise` and `solution` directives used for building **numbered** *exercise*\nand *solution* boxes.\nThese elements can be referenced with the standard `ref` and `numref` roles.\n\n### Usage ###\n\n#### Exercise ####\n\nAn *exercise box* is included with the `exercise` directive:\n\n````text\n```{exercise} ex:2.9\nContent of my exercise box.\n```\n````\n\nEach exercise can be referenced with its name using the `ref` role, e.g.,\n`` {ref}`ex:2.9` ``, which produces *exercise* hyper-link;\nor with a `numref` role, e.g., `` {numref}`ex:2.9` ``, to get a numbered\nhyper-link reference such as *Exercise #*.\n\n> Note that the display text of the hyper-link produced with the `ref` role can\n  be altered with the following syntax: `` {ref}`custom hyper-link<ex:2.9>` ``.\n  The format string of the numbered reference can also be changed individually\n  for each reference using the following syntax:\n  `` {numref}`Task %s<ex:2.9>` ``, where `%s` will be replaced with the\n  exercise number.\n  Alternatively, the format string for the numbered references can be changed\n  globally with the corresponding [Sphinx] configuration parameter -- see the\n  following section for more details.\n\n#### Solution ####\n\nA *solution box* is included with the `solution` directive:\n\n````text\n```{solution} ex:2.9\nContent of my solution box.\n```\n````\n\nNote that each solution **must** be linked to an existing exercise, hence the\n`ex:2.9` argument.\nThis syntax ensures that the solution has the same sequential number as the\nunderlying exercise.\nSimilar to exercises, solutions can be referenced with the `ref` and `numref`\nroles, with the corresponding hyper-links formatted as *solution* and\n*Solution #* respectively.\nThe reference id of each solution box is generated automatically and derived\nfrom the corresponding exercise id by replacing `ex` with `sol`, e.g., a\nsolution to an exercise with id `ex:2.9` can be referenced with `sol:2.9`.\n\n### Configuration parameters ###\n\nThe `solex` extension uses the following [Sphinx] configuration parameters:\n\n* `sp_exercise_directory` -- defines the path to a directory holding files with\n  content of each exercise;\n* `numfig_format.exercise` -- defines a custom formatter of the exercise\n  `numref` role, e.g., `\"Question %s\"` where `%s` will be automatically\n  replaced with the exercise number (`\"Exercise %s\"` by default); and\n* `numfig_format.solution` -- defines a custom formatter of the solution\n  `numref` role, e.g., `\"Answer %s\"` where `%s` will be automatically replaced\n  with the solution number derived from the corresponding exercise\n  (`\"Solution %s\"` by default).\n\n### Arguments, parameters and content ###\n\nEach exercise and solution has one **required** argument that **must** start\nwith `ex:...` and specifies the *unique* id of this particular exercise.\nIt is used to link a solution to an exercise and to reference it (the solution\nis referenced with the corresponding `sol:...` id, which is generated\nautomatically).\n\nThe content of an exercise or a solution directive **can be empty**, in which\ncase the `solex` extension looks for a content file whose name is derived from\nthe exercise id and which should be located in the directory specified with the\n`sp_exercise_directory` configuration parameter.\nThe exercise file name is expected to be the exercise id without the `ex:`\nprefix and with the `.md` extension.\nFor example, for an exercise with `ex:my_exercise` id, the content file should\nbe named `my_exercise.md`.\nIf both the exercise content file exist and the directive is explicitly filled\nwith content, the latter takes precedence.\nSolutions behave in the same way -- their content is sourced from the\n**linked exercise file** or is provided directly within the directive.\n\nThe `solex` [Sphinx] extension *monitors* the exercise content files for\nchanges and automatically regenerates the affected pages.\n\n## :floppy_disk: SWISH directive ##\n\nThe [`sphinx_prolog.swish`](sphinx_prolog/swish.py) module defines the `swish`\nand `swish-query` directives, as well as the `swish-query` role, all of which\nare used for building *interactive [SWI Prolog] boxes* executed directly in the\nbrowser with [SWISH].\n\n### Usage ###\n\n#### Code box ####\n\nA *[SWISH] code box* is included with the `swish` directive:\n\n````text\n```{swish} swish:1.2.3\n---\nquery-text: ?-linked(a,b,X). ?-linked(X,a,Y).\nquery-id: swishq:1.1.1 swishq:1.1.2 swishq:1.1.3\ninherit-id: swish:4.5.6 swish:4.5.7 swish:4.5.8\nsource-text-start: 4.5.6-start\nsource-text-end: 4.5.6-end\nhide-examples: true\nbuild-file: false\n---\noptional :- content.\n```\n````\n\nEach [SWISH] code box can be referenced with its name using the `ref`\nrole, e.g., `` {ref}`swish:1.2.3` ``, which produces *SWISH code box*\nhyper-link.\n\n#### Query box ####\n\nA **display** *[SWISH] query box* is included with the `swish-query`\n*directive*:\n\n````text\n```{swish-query} swishq:1.2.3\n---\nsource-id: swish:1.0.0 swish:1.0.1 swish:1.0.2\n---\n?-my_query(a,X).\n```\n````\n\nAn **inline** *[SWISH] query box* is included with the `swish-query` *role*:\n\n```text\n{swish-query}`?-my_query(a,X). <swishq:1.2.3>`\n```\n\nEach [SWISH] query box can be referenced with its name using the `ref`\nrole, e.g., `` {ref}`swishq:1.2.3` ``, which produces *SWISH query box*\nhyper-link for display queries and *SWISH query listing* for inline queries.\n\n### Configuration parameters ###\n\nThe `swish` extension uses the following [Sphinx] configuration parameters:\n\n* `sp_code_directory` (**required** when loading the box content from a file,\n  or using *source text start* or *source text start*) -- defines\n  the path to a directory holding files with content ([SWI Prolog] code) of\n  each [SWISH] code box; and\n* `sp_swish_url` -- specifies the URL of the [SWISH] execution server\n  (`https://swish.swi-prolog.org/` by default, which is hard-coded in the\n  Simply Logical SWISH JavaScript\n  [`lpn.js`](sphinx_prolog/_static/lpn.js)).\n* `sp_swish_hide_examples` (*optional*, default `False`) -- **globally**\n  toggles visibility of the `/** <examples> ... */` block in SWISH code boxes.\n  This behaviour can also be changed *locally* for each individual code box\n  with the `hide-examples` parameter of the `swish` directive (see below).\n* `sp_swish_book_url` (**required** when using [SWISH] code boxes with the\n  `build-file` parameter set to `true`) -- a *base URL* under which the book\n  will be deployed.\n  It is used to compose links to Prolog code files that need to be accessed\n  by file-based [SWISH] boxes.\n  (See the description of the `build-file` parameter for more details.)\n\n### Arguments, parameters and content ###\n\n#### Code box ####\n\nEach [SWISH] code box has one **required** argument that\nspecifies the *unique* id of this particular interactive code block.\nThis id **must** start with the `swish:` prefix.\nThe content of a [SWISH] box can **either** be provided explicitly within the\ndirective, **or** -- when the content is left empty -- it is pulled from a code\nfile whose name is derived from the code box id and which should be located in\nthe directory specified via the `sp_code_directory` configuration parameter.\nThe code file name is expected to be the code block id **without** the `swish:`\nprefix and **with** the `.pl` extension.\nFor example, for a code block with `swish:my_code` id, the code file should be\nnamed `my_code.pl`.\nThe `swish` [Sphinx] extension *monitors* the code files for\nchanges and automatically regenerates the affected pages.\n\n[SWISH] code blocks also have a number of **optional** parameters:\n\n* `query-text` -- specifies a collection of queries to be implicitly embedded\n  in the [SWISH] box (handled by the [`lpn.js`](sphinx_prolog/_static/lpn.js)\n  JavaScript).\n  If both the `/** <examples> ... */` block (in the [SWISH] box content) and\n  the `query-text` parameter are provided, the latter takes precedence.\n  However, the `query-text` parameter works in conjunction with the\n  *code box*'s `query-id` and *query box*'s `source-id` parameters.\n* `query-id` -- specifies (space separated) **id(s)** of query block(s) whose\n  content will be used to populate the queries of this [SWISH] box\n  (handled by the [`lpn.js`](sphinx_prolog/_static/lpn.js) JavaScript).\n  A [SWISH] code box can import a single (e.g., `query-id: swishq:4.5.6`) or\n  multiple (e.g., `query-id: swishq:4.5.6 swishq:4.5.7 swishq:4.5.8`) query\n  blocks.\n  Each [SWISH] query box **must** be placed on the same page (the same\n  document) as the code block that uses it.\n  The `query-id` parameter takes precedence over the `/** <examples> ... */`\n  block (in the [SWISH] box content), but it works in conjunction with the\n  *code box*'s `query-text` and *query box*'s `source-id` parameters.\n* `inherit-id` -- specifies (space separated) **id(s)** of code block(s) whose\n  content will be inherited into this particular [SWISH] box.\n  The inherited code block(s) **must** be placed on the same page (the same\n  document) as the code block that inherits them.\n  A [SWISH] box can inherit from a single (e.g., `inherit-id: swish:4.5.6`) or\n  multiple (e.g., `inherit-id: swish:4.5.6 swish:4.5.7 swish:4.5.8`) code\n  blocks.\n  (The inheritance logic is handled by the\n  [`lpn.js`](sphinx_prolog/_static/lpn.js) JavaScript.)\n* `source-text-start` -- specifies the code **file name** without the `.pl`\n  extension whose content will be (implicitly) prepended to the main code of\n  this code block (e.g., `source-text-start: 4.5.6-start`).\n  (The prefix logic is handled by the [`lpn.js`](sphinx_prolog/_static/lpn.js)\n  JavaScript.)\n* `source-text-end` -- specifies the code **file name** without the `.pl`\n  extension whose content will be (implicitly) appended to the main code of\n  this code block (e.g., `source-text-end: 4.5.6-end`).\n  (The suffix logic is handled by the [`lpn.js`](sphinx_prolog/_static/lpn.js)\n  JavaScript.)\n* `hide-examples` (*not set*, `true` or `false`) -- prevents the\n  `/** <examples> ... */` block from being displayed (when not set, it is\n  controlled by the `sp_swish_hide_examples` configuration parameter).\n* `build-file` (*not set*, `true` or `false`) -- long Prolog scripts cannot be\n  loaded into [SWISH] boxes since URL requests have 2048 character limit.\n  To allow for long Prolog scripts, all of the relevant code fragments are\n  processed by this Python extension and placed in a single Prolog file.\n  This file is then loaded into a [SWISH] box by its URL, which is composed\n  from the book deployment URL provided by the user via the `sp_swish_book_url`\n  configuration parameter and the Prolog script storage directory\n  (`_sources/prolog_build_files/...`).\n  The built Prolog files are stored under `src/code/temp` and then copied to\n  the target directory (`_sources/prolog_build_files` located, for example,\n  under `_build/html` for *html* builds) -- you may need to explicitly exclude\n  this path in the Sphinx configuration file by adding it to\n  `exclude_patterns`.\n  This functionality has to be **explicitly** enabled by setting the\n  `build-file` parameter to `true`.\n  **Note: such [SWISH] boxes will not work when browsing local\n  documentation/book builds since the code files must be hosted on a server\n  accessible by [SWISH].**\n\n#### Query box ####\n\nEach [SWISH] query *directive* has one **required** argument that\nspecifies the *unique* id of this particular query block (which can be\nreferenced by the `query-id` parameter of the [SWISH] code boxes).\nThis id **must** start with the `swishq:` prefix.\nSimilar, `swish-query` *roles* must contain their unique ids placed at the end\nof the role text and wrapped within angle brackets, e.g.,\n`` {swish-query}`?-my_prolog_query(a, B). <swishq:my_id>` ``.\n\nAdditionally, the [SWISH] query block **directive** has one **optional**\nparameter:\n\n* `source-id` -- specifies (space separated) **id(s)** of code block(s) that\n  will be injected with this particular query (handled by the\n  [`lpn.js`](sphinx_prolog/_static/lpn.js) JavaScript).\n  A [SWISH] query box can indicate a single (e.g., `source-id: swish:1.0.0`) or\n  multiple (e.g., `source-id: swish:1.0.0 swish:1.0.1 swish:1.0.2`) code\n  blocks.\n  Each referenced [SWISH] code box **must** be placed on the same page (the\n  same document) as the query box.\n  The `source-id` parameter takes precedence over the `/** <examples> ... */`\n  block (in the [SWISH] box content), but it works in conjunction with the\n  `query-id` and `query-text` parameters of the [SWISH] code blocks.\n\n## :test_tube: pseudo Prolog syntax highlighting ##\n\nThe [`sphinx_prolog.pprolog`](sphinx_prolog/pprolog.py) module defines code\nblock syntax highlighting for *pseudo Prolog* (`pProlog`).\n\n### Usage ###\n\nA *pseudo Prolog* (`pProlog`) code box with appropriate syntax highlighting is\nincluded with the standard *backtick fence* syntax (` ``` `) indicating\n`pProlog` programming language:\n\n````\n```pProlog\nmy,pseudo,prolog;-code.\n```\n````\n\n---\n\n> The CSS and JS files used by this [Sphinx] extension (namely\n  [`sphinx-prolog.css`](sphinx_prolog/_static/sphinx-prolog.css),\n  [`lpn.css`](sphinx_prolog/_static/lpn.css) and\n  [`lpn.js`](sphinx_prolog/_static/lpn.js), as well as their dependencies\n  [`jquery-ui.min.css`](sphinx_prolog/_static/jquery-ui.min.css) and\n  [`jquery-ui.min.js`](sphinx_prolog/_static/jquery-ui.min.js),\n  and their auxiliary files\n  [`lpn-run.png`](sphinx_prolog/_static/lpn/lpn-run.png) and\n  [`lpn-close.png`](sphinx_prolog/_static/lpn/lpn-close.png))\n  can be found in the [`sphinx_prolog/_static`](sphinx_prolog/_static)\n  directory of this repository.\n\n[sphinx]: https://www.sphinx-doc.org/\n[jupyter book]: https://jupyterbook.org/\n[swish]: https://swish.swi-prolog.org/\n[swi prolog]: https://www.swi-prolog.org/\n[myst markdown]: https://myst-parser.readthedocs.io/\n[reStructuredText]: https://docutils.sourceforge.io/rst.html\n[myst overview]: https://jupyterbook.org/content/myst.html\n[simply-logical/simply-logical]: https://github.com/simply-logical/simply-logical\n[simply-logical/prolog-book-template]: https://github.com/simply-logical/prolog-book-template\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/sphinx-prolog/#files",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/simply-logical/sphinx-prolog",
    "keywords": "",
    "license": "new BSD",
    "maintainer": "Kacper Sokol",
    "maintainer_email": "k.sokol@bristol.ac.uk",
    "name": "sphinx-prolog",
    "package_url": "https://pypi.org/project/sphinx-prolog/",
    "platform": "",
    "project_url": "https://pypi.org/project/sphinx-prolog/",
    "project_urls": {
      "Download": "https://pypi.org/project/sphinx-prolog/#files",
      "Homepage": "https://github.com/simply-logical/sphinx-prolog"
    },
    "release_url": "https://pypi.org/project/sphinx-prolog/0.5/",
    "requires_dist": [
      "docutils",
      "pygments",
      "sphinx (>=3)"
    ],
    "requires_python": "~=3.5",
    "summary": "A collection of Sphinx (and Jupyter Book) extensions for authoring interactive SWI Prolog code blocks.",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9483948,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "363e2e4444e7a2a12892c338f018c5870c849eb04e4ed0f255e06e38c7ee4544",
          "md5": "3ef4b498dbd66c8563956587777fa6af",
          "sha256": "edfb1a483266da6940892bf719ac54715e43d88ebb9e85bd2e3940807a454843"
        },
        "downloads": -1,
        "filename": "sphinx_prolog-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ef4b498dbd66c8563956587777fa6af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 122588,
        "upload_time": "2021-02-08T21:53:07",
        "upload_time_iso_8601": "2021-02-08T21:53:07.333157Z",
        "url": "https://files.pythonhosted.org/packages/36/3e/2e4444e7a2a12892c338f018c5870c849eb04e4ed0f255e06e38c7ee4544/sphinx_prolog-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "344750ee8bd384c1cab2c75f169eae5b28e5434e6807d1b39b67b14171682f77",
          "md5": "b532df600fa93bc7c1ef4986578cce9f",
          "sha256": "8f27675463c0eaa36e6b30be3546ff9ad3717ab0cc8e48dcc6bee50dc02aa979"
        },
        "downloads": -1,
        "filename": "sphinx-prolog-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b532df600fa93bc7c1ef4986578cce9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 123844,
        "upload_time": "2021-02-08T21:53:21",
        "upload_time_iso_8601": "2021-02-08T21:53:21.344475Z",
        "url": "https://files.pythonhosted.org/packages/34/47/50ee8bd384c1cab2c75f169eae5b28e5434e6807d1b39b67b14171682f77/sphinx-prolog-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82f12947c26fe842cd6e3f97aa2a6c376835b58d313c0c43b664e58c0116ee25",
          "md5": "bd38ffb9235737d50e74fb331cb5706d",
          "sha256": "f23045fb87646c3d9162ebf44c42d011cdf447ff4578e2a5f3f43d21920b1d7d"
        },
        "downloads": -1,
        "filename": "sphinx_prolog-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd38ffb9235737d50e74fb331cb5706d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 124869,
        "upload_time": "2021-02-10T17:47:28",
        "upload_time_iso_8601": "2021-02-10T17:47:28.322882Z",
        "url": "https://files.pythonhosted.org/packages/82/f1/2947c26fe842cd6e3f97aa2a6c376835b58d313c0c43b664e58c0116ee25/sphinx_prolog-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5afcc7f16fd865d29b914b4ba2a49bc4faeb3005b89fd5908a4696d209dfb270",
          "md5": "99adca9274cb087295c828ec4de9350a",
          "sha256": "fa53892ccfc03ae1965cd6f834811a7d3d7dfe29ae32cc38ec2b7552a6c00aad"
        },
        "downloads": -1,
        "filename": "sphinx-prolog-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "99adca9274cb087295c828ec4de9350a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 126729,
        "upload_time": "2021-02-10T17:47:29",
        "upload_time_iso_8601": "2021-02-10T17:47:29.516143Z",
        "url": "https://files.pythonhosted.org/packages/5a/fc/c7f16fd865d29b914b4ba2a49bc4faeb3005b89fd5908a4696d209dfb270/sphinx-prolog-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "537609012dace5fec6c76eec48c96851525b8d187ea8d281ea6a90e451c28b23",
          "md5": "98e1ab3038c3b28e70f1e6b2c94e1886",
          "sha256": "81f9f132873efa068cfacdf54107dcd51ea9a59bb065c029d596903ab05d5c17"
        },
        "downloads": -1,
        "filename": "sphinx_prolog-0.4.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98e1ab3038c3b28e70f1e6b2c94e1886",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 125178,
        "upload_time": "2021-02-13T16:28:45",
        "upload_time_iso_8601": "2021-02-13T16:28:45.333977Z",
        "url": "https://files.pythonhosted.org/packages/53/76/09012dace5fec6c76eec48c96851525b8d187ea8d281ea6a90e451c28b23/sphinx_prolog-0.4.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfd2d0b1c5b3abe3eeab1926b32019cac1ca126c161e689503005dd848d541c4",
          "md5": "ade694316be7c1b7f980b194af9afcca",
          "sha256": "a389e76c20ca03ad0b36f96dc74deda8ea31027d5b8f28d0bc723e8c9dce8f9b"
        },
        "downloads": -1,
        "filename": "sphinx-prolog-0.4.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "ade694316be7c1b7f980b194af9afcca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 127242,
        "upload_time": "2021-02-13T16:28:46",
        "upload_time_iso_8601": "2021-02-13T16:28:46.784044Z",
        "url": "https://files.pythonhosted.org/packages/df/d2/d0b1c5b3abe3eeab1926b32019cac1ca126c161e689503005dd848d541c4/sphinx-prolog-0.4.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47565d9cb46344a4706a8250c21e238d0ebc20e8f96df7509d0402664539ca13",
          "md5": "0604e4fb7a64a8d2b966523593c223bc",
          "sha256": "37f6519ca0c7bcc6f26422dfd1f5348b0e23b649bc18ced94f651801c1d25afc"
        },
        "downloads": -1,
        "filename": "sphinx_prolog-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0604e4fb7a64a8d2b966523593c223bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 127701,
        "upload_time": "2021-02-21T22:36:37",
        "upload_time_iso_8601": "2021-02-21T22:36:37.953005Z",
        "url": "https://files.pythonhosted.org/packages/47/56/5d9cb46344a4706a8250c21e238d0ebc20e8f96df7509d0402664539ca13/sphinx_prolog-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10e61115f8caa4e3990b7b70b3a847a338a398afefedcea6c330595c5863be70",
          "md5": "a2e25d29118372701a2120784da2860e",
          "sha256": "01ac9fa92ea353f9a3ddaa97046b765d9c2bbe4d3084bf0515f7937f647300ed"
        },
        "downloads": -1,
        "filename": "sphinx-prolog-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a2e25d29118372701a2120784da2860e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 129922,
        "upload_time": "2021-02-21T22:36:39",
        "upload_time_iso_8601": "2021-02-21T22:36:39.141411Z",
        "url": "https://files.pythonhosted.org/packages/10/e6/1115f8caa4e3990b7b70b3a847a338a398afefedcea6c330595c5863be70/sphinx-prolog-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47565d9cb46344a4706a8250c21e238d0ebc20e8f96df7509d0402664539ca13",
        "md5": "0604e4fb7a64a8d2b966523593c223bc",
        "sha256": "37f6519ca0c7bcc6f26422dfd1f5348b0e23b649bc18ced94f651801c1d25afc"
      },
      "downloads": -1,
      "filename": "sphinx_prolog-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0604e4fb7a64a8d2b966523593c223bc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.5",
      "size": 127701,
      "upload_time": "2021-02-21T22:36:37",
      "upload_time_iso_8601": "2021-02-21T22:36:37.953005Z",
      "url": "https://files.pythonhosted.org/packages/47/56/5d9cb46344a4706a8250c21e238d0ebc20e8f96df7509d0402664539ca13/sphinx_prolog-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10e61115f8caa4e3990b7b70b3a847a338a398afefedcea6c330595c5863be70",
        "md5": "a2e25d29118372701a2120784da2860e",
        "sha256": "01ac9fa92ea353f9a3ddaa97046b765d9c2bbe4d3084bf0515f7937f647300ed"
      },
      "downloads": -1,
      "filename": "sphinx-prolog-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "a2e25d29118372701a2120784da2860e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.5",
      "size": 129922,
      "upload_time": "2021-02-21T22:36:39",
      "upload_time_iso_8601": "2021-02-21T22:36:39.141411Z",
      "url": "https://files.pythonhosted.org/packages/10/e6/1115f8caa4e3990b7b70b3a847a338a398afefedcea6c330595c5863be70/sphinx-prolog-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}