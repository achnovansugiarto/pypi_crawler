{
  "info": {
    "author": "Data Automation Team",
    "author_email": "ddoyle@motoinsight.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "### MOTO CUSTOM SOLUTIONS\n### V 1.0\n\n-----------------------\n--> INSTALLING LIBRARY\n-----------------------\n\n- pip install motolibrary\n- (For Updates) pip install motolibrary --upgrade\n\n---------------------\n--> IMPORTING MODULE\n---------------------\n\n- import motolib\n- from motolib.(FileName.py) import (Function or \\*)\n\n----------------\n||    DOCS    ||\n----------------\n\nThe following is documentation for each of the library's functions:\n\n---------------------\n---> 1. dir\\_clean.py\n---------------------\n\ndir\\_clean(...): Removes all excel and csv files from a given directory.\n\nParameters:\n  folder\\_path : string\n    (Optional) Path to directory containing files to delete.\n    If not specified, deletes from current inventory.\n\nReturns: None\n\nSide Effects:\n  Deletes all .xlsx and .csv files from specified local directory\n\nTest Files for Function: test\\_dir\\_clean.py\n\n------------------\n---> 2. errors.py\n------------------\n\nFunctionality: Defines errors for library use.\n\nClasses:\n  CustomError(Exception)\n  DataError(CustomError)\n  FTPConnectionError(CustomError)\n  FTPUploadError(CustomError)\n  FTPEncodingError(CustomError)\n  RedashAPIError(CustomError)\n\n-----------------------\n---> 3. ftp\\_cleanse.py\n-----------------------\n\nftp\\_cleanse(...): Fills a dataframe with dummy values in each of the columns of which the original dataframe had data in.\n\nParameters:\n  ftp\\_df : pandas.DataFrame\n    DataFrame with data that will be closed.\n    All columns filled in this DataFrame will be replaced with dummy values in the returned DataFrame.\n\nReturns:\n  dummy\\_df : pandas.DataFrame\n    Dummy DataFrame containing only one row, of dummy values filled in the same columns as those that were filled in the original DF.\n\nEx. A DataFrame is passed with 3 columns, #1 and #3 are filled and #2 is not. The return would be a DF with the same\ncolumns as the original, containing only one row with columns #1 and #3 would be filled with garbage text and #2 empty.\n\nTest Files for Function: test\\_ftp\\_cleanse.py\n\n--------------------\n---> 4. ftp\\_down.py\n--------------------\n\nftp\\_download(...): Downloads a file from an FTP server to a specified directory on the local machine.\n\nParameters:\n  hostname : String\n    FTP Host Name\n  username : String\n    FTP Login Username\n  password : String\n    FTP Login Password\n  filename\\_filter : String\n    Name of file to download from FTP\n  download\\_name : String\n    (Optional) File will be downloaded locally with this name. Default is filename_filter.\n  download\\_directory : String \n    (Optional) Directory to download file to. Default is CWD.\n\nReturns: None\n\nTest Files for Function: test\\_ftp\\_down.py\n\n------------------\n---> 5. ftp\\_up.py\n------------------\n\nftp\\_upload\\_file(...): Uploads a file from the local machine to a specified FTP server with an optional specified upload name.\n\nParameters:\n  hostname : String\n    FTP Host Name\n  username : String\n    FTP Login Username\n  file\\_name : String\n    FTP Login Password\n  upload\\_name : String\n    !! MUST INCLUDE EXTENSION !!\n    (Optional) Specifies name of FTP Upload\n      ie. Can be uploaded with a different name than local file.\n\n\nNotes: File name must include its extension. So must the optional upload name.\n\nReturns:\n  True if supplement has been uploaded to FTP\n  False if supplement did not upload to FTP\n\nTest Files for Function: test\\_ftp\\_up.py\n\n---------------------------\n---> 6. redash\\_download.py\n---------------------------\n\nredash\\_download(...): Downloads data from a Redash query (with optional additional params) to the local machine as a .csv file.\n\nParameters:\n  query\\_id : String\n    ID of Redash Query\n  api\\_key : String\n    User API Key\n  region : String\n    Country for Redash (ie. CA or US)\n  file\\_name : String\n    File will be downloaded and saved locally as a .csv with this name\n  params : Dictionary\n    (Optional) Dictionary of query params -- Default = {} (empty)\n\nNotes: The file name parameter should not include an extension. All query data will be processed & downloaded as a .csv file.\nFor example, if one calls the function with \"redash\\_data\" as the file\\_name argument, the query will be saved under \"redash\\_data.csv\".\n\nThe region argument must be one of the following strings: ca, us, usa (capitalization does not matter... CA, US, USA will work).\n\nReturns: None\n\nPotential Errors Raised:\n- ValueError (indicates invalid region code)\n- RedashAPIError (connection issue with Redash API or invalid query info)\n\nTest Files for Function: test\\_redash\\_download.py\n\n-----------------------\n---> 7. slack\\_funcs.py\n-----------------------\n\nslack\\_send\\_file(...): Send files to a list of Slack channels.\n\nParameters:\n  slackbot\\_token : String\n    Token for SlackBot Usage\n  channels : List\n    Contains list of channels to send to\n  files : List\n    Contains list of files to send\n  titles : List\n    Contains list of titles of files; titles should correspond to the same\n    order of items in the files list.\n\nNotes: The Titles list argument must perfectly match up to the Files list argument.\n\nReturns: None\n\nslack\\_send\\_message(...): Send messages to a list of Slack channels.\n\nParameters:\n  slackbot\\_token : String\n    Token for SlackBot Usage\n  channels : List\n    Contains list of channels to send messages to via slack\n  messages : List\n    Contains list of messages to send\n\nReturns: None\n\nTest Files for Functions: test\\_slack\\_funcs.py    !! These are not automated tests - Manual checking of slack channels is needed !!\n\n-----------------------\n---> 8. supp\\_create.py\n-----------------------\n\nsupplement\\_create(...): Creates a standard supplement file from a DataFrame whose columns are mapped to the supplement at the user's discretion. \n\nParameters:\n  df : pandas.DataFrame\n    Pandas DataFrame containing data needed to be mapped into a supplement\n  dealership\\_col : String\n    Name of column from df to map to Dealership UID column of Supplement\n  vin\\_col : String\n    Name of column from df to map to VIN columnt of Supplement\n  stock\\_col : String\n    Name of column from df to map to Stock column of Supplement\n  trim\\_col : String\n    Name of column from df to map to Trim column of Supplement\n  jato\\_col : String\n    (Optional) Name of column from df to map to JATO column of Supplement\n  chrmstyle\\_col : String\n    (Optional) Name of column from df to map to Chrmstyle_ID column of Supplement\n  discount\\_col : String\n    (Optional) Name of column from df to map to Discounts column of Supplement\n  misc1\\_col : String\n    (Optional) Name of column from df to map to Misc 1 column of Supplement\n  misc2\\_col : String\n    (Optional) Name of column from df to map to Misc 2 column of Supplement\n\nReturns:\n  supp\\_df : pandas.DataFrame\n    Supplement-style DataFrame with newly mapped data.\n\nEx. If one passes \"my-dealerships\" as the dealership\\_col parameter, the supplement's Dealership UID column will contain data from the original file's \"my-dealerships\" column.\n\nTest Files for Functions: test\\_supp\\_create.py",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/motoinsight-data-ops/motolibrary",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "motolibrary",
    "package_url": "https://pypi.org/project/motolibrary/",
    "platform": "",
    "project_url": "https://pypi.org/project/motolibrary/",
    "project_urls": {
      "Homepage": "https://www.github.com/motoinsight-data-ops/motolibrary"
    },
    "release_url": "https://pypi.org/project/motolibrary/1.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Library of useful functions for custom solutions.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9457370,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6916315c4fecf13d6fc6a88cad9797212af5333d58ff50d94b5507b7f5ddc1f2",
          "md5": "77ba7504752d4fc1efa49fa21a315b95",
          "sha256": "65bb801f8fe53d8108803d080d04482f069e21a282a362cb4e8f418a78053b7d"
        },
        "downloads": -1,
        "filename": "motolibrary-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77ba7504752d4fc1efa49fa21a315b95",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8624,
        "upload_time": "2021-02-06T16:30:29",
        "upload_time_iso_8601": "2021-02-06T16:30:29.975513Z",
        "url": "https://files.pythonhosted.org/packages/69/16/315c4fecf13d6fc6a88cad9797212af5333d58ff50d94b5507b7f5ddc1f2/motolibrary-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "114765c6171d8cd08bee47df8433721a9cf4570a9e32e1ac4452844d8546151c",
          "md5": "b97bbd27cf60c1d73a88b6bacc059724",
          "sha256": "ab778cec8bc449e6dcf68949c1cc92d763cbb4689249b02866892b89d352876c"
        },
        "downloads": -1,
        "filename": "motolibrary-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b97bbd27cf60c1d73a88b6bacc059724",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6049,
        "upload_time": "2021-02-06T16:30:30",
        "upload_time_iso_8601": "2021-02-06T16:30:30.898451Z",
        "url": "https://files.pythonhosted.org/packages/11/47/65c6171d8cd08bee47df8433721a9cf4570a9e32e1ac4452844d8546151c/motolibrary-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbb36eba2f8178f32e36617db0fb637405bfe1f07014eaf638a82137c7ccac68",
          "md5": "d34f526658ae69ec29eea30cf5e27567",
          "sha256": "04466bcbdb12a3509b6fe0fb981efaa2b266e8ec7bdabdbb75e4bf888114d089"
        },
        "downloads": -1,
        "filename": "motolibrary-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d34f526658ae69ec29eea30cf5e27567",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9927,
        "upload_time": "2021-02-11T18:57:57",
        "upload_time_iso_8601": "2021-02-11T18:57:57.536691Z",
        "url": "https://files.pythonhosted.org/packages/fb/b3/6eba2f8178f32e36617db0fb637405bfe1f07014eaf638a82137c7ccac68/motolibrary-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "081440b2304c83c9a7d7cebc41884ccf315b55753ebcee611d60146801dbb4f5",
          "md5": "009e70491757901c49c774b007d76449",
          "sha256": "fecf6193deed2111acb3b806b608bb818536957000a4b416ce8a7e02ba9b6035"
        },
        "downloads": -1,
        "filename": "motolibrary-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "009e70491757901c49c774b007d76449",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9930,
        "upload_time": "2021-02-18T15:13:28",
        "upload_time_iso_8601": "2021-02-18T15:13:28.881171Z",
        "url": "https://files.pythonhosted.org/packages/08/14/40b2304c83c9a7d7cebc41884ccf315b55753ebcee611d60146801dbb4f5/motolibrary-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "754d6fe6770eaa5ab12adcbc39fd7b522b85437cb49cf82d4a2736102a561f6b",
          "md5": "29dc19504a82c6f229264cfb826e925d",
          "sha256": "21583eabc87347c0c5302121f807e6d5b7ca3b792647029c20c84c7942249f87"
        },
        "downloads": -1,
        "filename": "motolibrary-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "29dc19504a82c6f229264cfb826e925d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9982,
        "upload_time": "2021-02-18T16:52:19",
        "upload_time_iso_8601": "2021-02-18T16:52:19.302859Z",
        "url": "https://files.pythonhosted.org/packages/75/4d/6fe6770eaa5ab12adcbc39fd7b522b85437cb49cf82d4a2736102a561f6b/motolibrary-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad45b616698b247feacf89c891092b70ab28548ceaa2cd2154328362e7079e52",
          "md5": "30f44174dcb0020c79e1a41a454f0732",
          "sha256": "4a1d0d174dae9ba1d2bbe55e13a39a2bb51e630678a06a18c94558d23a9243f1"
        },
        "downloads": -1,
        "filename": "motolibrary-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "30f44174dcb0020c79e1a41a454f0732",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10067,
        "upload_time": "2021-02-18T17:09:25",
        "upload_time_iso_8601": "2021-02-18T17:09:25.523552Z",
        "url": "https://files.pythonhosted.org/packages/ad/45/b616698b247feacf89c891092b70ab28548ceaa2cd2154328362e7079e52/motolibrary-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85542fe64eebd7968c08994b5f7c00c183274d4cb0935c9614c21ccfabbe19c1",
          "md5": "d307706dc07f00d1ffec537fd54c011f",
          "sha256": "ee178eccfb2726a2ed7289bbcfb7e56e51e1a283e1c35d16acbfb4cde657e529"
        },
        "downloads": -1,
        "filename": "motolibrary-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d307706dc07f00d1ffec537fd54c011f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10072,
        "upload_time": "2021-02-18T17:28:39",
        "upload_time_iso_8601": "2021-02-18T17:28:39.865475Z",
        "url": "https://files.pythonhosted.org/packages/85/54/2fe64eebd7968c08994b5f7c00c183274d4cb0935c9614c21ccfabbe19c1/motolibrary-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85542fe64eebd7968c08994b5f7c00c183274d4cb0935c9614c21ccfabbe19c1",
        "md5": "d307706dc07f00d1ffec537fd54c011f",
        "sha256": "ee178eccfb2726a2ed7289bbcfb7e56e51e1a283e1c35d16acbfb4cde657e529"
      },
      "downloads": -1,
      "filename": "motolibrary-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "d307706dc07f00d1ffec537fd54c011f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10072,
      "upload_time": "2021-02-18T17:28:39",
      "upload_time_iso_8601": "2021-02-18T17:28:39.865475Z",
      "url": "https://files.pythonhosted.org/packages/85/54/2fe64eebd7968c08994b5f7c00c183274d4cb0935c9614c21ccfabbe19c1/motolibrary-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}