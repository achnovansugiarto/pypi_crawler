{
  "info": {
    "author": "breezedeus",
    "author_email": "breezedeus@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "<div align=\"center\">\n  <img src=\"./docs/figs/p2t.jpg\" width=\"250px\"/>\n  <div>&nbsp;</div>\n\n[![Downloads](https://static.pepy.tech/personalized-badge/pix2text?period=total&units=international_system&left_color=grey&right_color=orange&left_text=Downloads)](https://pepy.tech/project/pix2text)\n[![license](https://img.shields.io/github/license/breezedeus/pix2text)](./LICENSE)\n[![PyPI version](https://badge.fury.io/py/pix2text.svg)](https://badge.fury.io/py/pix2text)\n[![forks](https://img.shields.io/github/forks/breezedeus/pix2text)](https://github.com/breezedeus/pix2text)\n[![stars](https://img.shields.io/github/stars/breezedeus/pix2text)](https://github.com/breezedeus/pix2text)\n![last-release](https://img.shields.io/github/release-date/breezedeus/pix2text)\n![last-commit](https://img.shields.io/github/last-commit/breezedeus/pix2text)\n[![Twitter](https://img.shields.io/twitter/url?url=https%3A%2F%2Ftwitter.com%2Fbreezedeus)](https://twitter.com/breezedeus)\n\n[👩🏻‍💻网页版](https://p2t.behye.com) |\n[💬 交流群](https://cnocr.readthedocs.io/zh/latest/contact/)\n\n</div>\n\n<div align=\"center\">\n\n[English](./README_en.md) | 中文\n</div>\n\n# Pix2Text (P2T)\n\n\n【Update 2023.02.10： **[P2T网页版](https://p2t.behye.com)** 开放免费使用】\n\n* P2T作为Python包，对于不熟悉Python的朋友还是太不友好，所以我们也开发了 [P2T网页版](https://p2t.behye.com)，可直接免费使用，欢迎帮忙推荐分享。\n* 视频介绍：[Pix2Text 新版和网页版发布，离Mathpix又近了一大步_bilibili](https://www.bilibili.com/video/BV1U24y1q7n3) 。\n* 文字版介绍：[Pix2Text (P2T) 新版发布，离Mathpix又近了一大步 - 知乎](https://zhuanlan.zhihu.com/p/604999678) 。\n\n【Update 2023.02.03：**V0.2** 发布】\n\n* 利用 **[CnSTD](https://github.com/breezedeus/cnstd)** 新版的**数学公式检测**（**Mathematical Formula Detection**，简称 **MFD**）能力，**P2T V0.2** 支持**识别既包含文字又包含公式的混合图片**。\n\n了解更多：[RELEASE.md](./RELEASE.md) 。\n\n---\n\n\n\n**Pix2Text** 期望成为 **[Mathpix](https://mathpix.com/)** 的**免费开源 Python **替代工具，目前已经可以完成 **Mathpix** 的核心功能。**Pix2Text (P2T)** 自 **V0.2** 开始，支持识别**既包含文字又包含公式的混合图片**，返回效果类似于 **Mathpix**。P2T 的核心原理见下图（文字识别支持**中文**和**英文**）：\n\n<div align=\"center\">\n  <img src=\"./docs/figs/arch-flow2.jpg\" alt=\"Pix2Text流程\" width=\"600px\"/>\n</div>\n\n\n\n**P2T** 使用开源工具  **[CnSTD](https://github.com/breezedeus/cnstd)** 检测出图片中**数学公式**所在位置，再交由 **[LaTeX-OCR](https://github.com/lukas-blecher/LaTeX-OCR)** 识别出各对应位置数学公式的Latex表示。图片的剩余部分再交由 **[CnOCR](https://github.com/breezedeus/cnocr)** 进行文字检测和文字识别。最后 P2T 合并所有识别结果，获得最终的图片识别结果。感谢这些开源工具。\n\n\n\nP2T 作为Python3工具包，对于不熟悉Python的朋友不太友好，我们近期也会发布 **P2T网页版**，直接把图片丢进网页就能输出P2T的解析结果。\n\n网页版会提供一些**免费名额**供有需要的朋友使用，优先在校学生（**[MathPix](https://link.zhihu.com/?target=https%3A//mathpix.com/)** 每月要5美元，对在校生来说还是蛮贵的）。\n\n\n\n感兴趣的朋友欢迎扫码加小助手为好友，备注 `p2t`，小助手会定期统一邀请大家入群。群内会发布P2T相关工具的最新进展：\n\n<div align=\"center\">\n  <img src=\"./docs/figs/wx-qr-code.JPG\" alt=\"微信群二维码\" width=\"300px\"/>\n</div>\n\n\n\n作者也维护 **知识星球** [**P2T/CnOCR/CnSTD私享群**](https://t.zsxq.com/FEYZRJQ) ，这里面的提问会较快得到作者的回复，欢迎加入。**知识星球私享群**也会陆续发布一些P2T/CnOCR/CnSTD相关的私有资料，包括[**更详细的训练教程**](https://articles.zsxq.com/id_u6b4u0wrf46e.html)，**未公开的模型**，**不同应用场景的调用代码**，使用过程中遇到的难题解答等。本群也会发布OCR/STD相关的最新研究资料。\n\n\n\n## 使用说明\n\n\n调用很简单，以下是示例：\n\n```python\nfrom pix2text import Pix2Text\n\nimg_fp = './docs/examples/formula.jpg'\np2t = Pix2Text(analyzer_config=dict(model_name='mfd'))\nouts = p2t(img_fp, resized_shape=600)  # 也可以使用 `p2t.recognize(img_fp)` 获得相同的结果\nprint(outs)\n# 如果只需要识别出的文字和Latex表示，可以使用下面行的代码合并所有结果\nonly_text = '\\n'.join([out['text'] for out in outs])\n```\n\n\n\n返回结果 `out_text` 是个 `dict`，其中 key `position` 表示位置信息，`type` 表示类别信息，而 `text` 表示识别的结果。具体见下面的[接口说明](#接口说明)。\n\n\n\n## 示例\n\n<table>\n<tr>\n<th> 图片 </th> \n<th> Pix2Text识别结果 </th>\n</tr>\n<tr>\n<td>\n<img src=\"./docs/examples/mixed.jpg\" alt=\"mixed\"> \n\n</td>\n<td>\n\n```python\n[{\"position\": array([[         22,          29],\n       [       1055,          29],\n       [       1055,          56],\n       [         22,          56]], dtype=float32),\n  \"text\": \"JVAE的训练loss和VQ-VAE类似，只是使用了KL距离来让分布尽量分散\",\n  \"type\": \"text\"},\n {\"position\": array([[        629,         124],\n       [       1389,         124],\n       [       1389,         183],\n       [        629,         183]]),\n  \"text\": \"$$\\n\"\n          \"-{\\\\cal E}_{z\\\\sim q(z|x)}[\\\\log(p(x\\\\mid z))]\"\n          \"+{\\\\cal K}{\\\\cal L}(q(z\\\\mid x)||p(z))\\n\"\n          \"$$\",\n  \"type\": \"isolated\"},\n {\"position\": array([[         20,         248],\n       [       1297,         248],\n       [       1297,         275],\n       [         20,         275]], dtype=float32),\n  \"text\": \"其中之利用 Gumbel-Softmax从 $z\\\\sim q(z|x)$ 中抽样得到，\"\n  \" $p(z)$ 是个等概率的多项式分布。\",\n  \"type\": \"text-embed\"}]\n```\n\n</td>\n</tr>\n<tr>\n<td>\n\n<img src=\"./docs/examples/formula.jpg\" alt=\"formula\"> \n</td>\n<td>\n\n```python\n[{\"position\": array([[         12,          19],\n       [        749,          19],\n       [        749,         150],\n       [         12,         150]]),\n  \"text\": \"$$\\n\"\n          \"\\\\mathcal{L}_{\\\\mathrm{eyelid}}~\\\\equiv~\"\n          \"\\\\sum_{t=1}^{T}\\\\sum_{v=1}^{V}\"\n          \"\\\\mathcal{N}_{U}^{\\\\mathrm{(eyelid)}}\"\n          \"\\\\left(\\\\left|\\\\left|\\\\hat{h}_{t,v}\\\\,-\\\\,\"\n          \"\\\\mathcal{x}_{t,v}\\\\right|\\\\right|^{2}\\\\right)\\n\"\n          \"$$\",\n  \"type\": \"isolated\"}]\n```\n</div>\n</td>\n</tr>\n<tr>\n<td>\n\n <img src=\"./docs/examples/english.jpg\" alt=\"english\"> \n</td>\n<td>\n\n```python\n[{\"position\": array([[          0,           0],\n       [        710,           0],\n       [        710,         116],\n       [          0,         116]]),\n  \"text\": \"python scripts/screenshot_daemon_with_server\\n\"\n          \"2-get_model:178usemodel:/Users/king/.cr\\n\"\n          \"enet_lite_136-fc-epoch=039-complete_match_er\",\n  \"type\": \"english\"}]\n```\n</td>\n</tr>\n<tr>\n<td>\n\n <img src=\"./docs/examples/general.jpg\" alt=\"general\"  width=\"300px\"> \n</td>\n<td>\n\n```python\n[{\"position\": array([[          0,           0],\n       [        800,           0],\n       [        800,         800],\n       [          0,         800]]),\n  \"text\": \"618\\n开门红提前购\\n很贵\\n买贵返差\"\n  \"\\n终于降价了\\n100%桑蚕丝\\n要买趁早\\n今日下单188元\\n仅限一天\",\n  \"type\": \"general\"}]\n```\n</td>\n</tr>\n</table>\n\n\n\n## 模型下载\n\n安装好 Pix2Text 后，首次使用时系统会**自动下载** 模型文件，并存于 `~/.pix2text`目录（Windows下默认路径为 `C:\\Users\\<username>\\AppData\\Roaming\\pix2text`）。\n\n\n\n> **Note**\n>\n> 如果已成功运行上面的示例，说明模型已完成自动下载，可忽略本节后续内容。\n\n\n\n对于**分类模型**，系统会自动下载模型`mobilenet_v2.zip`文件并对其解压，然后把解压后的模型相关目录放于`~/.pix2text`目录中。如果系统无法自动成功下载`mobilenet_v2.zip`文件，则需要手动从 **[cnstd-cnocr-models/pix2text](https://huggingface.co/breezedeus/cnstd-cnocr-models/tree/main/models/pix2text/0.2)** 下载此zip文件并把它放于 `~/.pix2text`目录。如果下载太慢，也可以从 [百度云盘](https://pan.baidu.com/s/1kubZF4JGE19d98NDoPHJzQ?pwd=p2t0) 下载， 提取码为 ` p2t0`。\n\n对于  **[LaTeX-OCR](https://github.com/lukas-blecher/LaTeX-OCR)** ，系统同样会自动下载模型文件并把它们存放于`~/.pix2text/formula`目录中。如果系统无法自动成功下载这些模型文件，则需从  [百度云盘](https://pan.baidu.com/s/1kubZF4JGE19d98NDoPHJzQ?pwd=p2t0) 下载文件 `weights.pth` 和 `image_resizer.pth`， 并把它们存放于`~/.pix2text/formula`目录中；提取码为 ` p2t0`。\n\n\n\n## 安装\n\n嗯，顺利的话一行命令即可。\n\n```bash\npip install pix2text\n```\n\n安装速度慢的话，可以指定国内的安装源，如使用豆瓣源：\n\n```bash\npip install pix2text -i https://pypi.doubanio.com/simple\n```\n\n\n\n如果是初次使用**OpenCV**，那估计安装都不会很顺利，bless。\n\n**Pix2Text** 主要依赖 [**CnSTD>=1.2.1**](https://github.com/breezedeus/cnstd)、[**CnOCR>=2.2.2.1**](https://github.com/breezedeus/cnocr) ，以及 [**LaTeX-OCR**](https://github.com/lukas-blecher/LaTeX-OCR) 。如果安装过程遇到问题，也可参考它们的安装说明文档。\n\n\n\n> **Warning** \n>\n> 如果电脑中从未安装过 `PyTorch`，`OpenCV` python包，初次安装可能会遇到不少问题，但一般都是常见问题，可以自行百度/Google解决。\n\n\n\n## 接口说明\n\n### 类初始化\n\n主类为 [**Pix2Text**](pix2text/pix_to_text.py) ，其初始化函数如下：\n\n```python\nclass Pix2Text(object):\n\n    def __init__(\n        self,\n        *,\n        analyzer_config: Dict[str, Any] = None,\n        clf_config: Dict[str, Any] = None,\n        general_config: Dict[str, Any] = None,\n        english_config: Dict[str, Any] = None,\n        formula_config: Dict[str, Any] = None,\n        thresholds: Dict[str, Any] = None,\n        device: str = 'cpu',  # ['cpu', 'cuda', 'gpu']\n        **kwargs,\n    ):\n```\n\n其中的各参数说明如下：\n* `analyzer_config` (dict): 分类模型对应的配置信息；默认为 `None`，表示使用默认配置（使用**MFD** Analyzer）：\n\n  ```python\n  {\n        'model_name': 'mfd'  # 可以取值为 'mfd'（MFD），或者 'layout'（版面分析）\n\t}\n\t```\n\n* `clf_config` (dict): 分类模型对应的配置信息；默认为 `None`，表示使用默认配置：\n\t```python\n  {\n        'base_model_name': 'mobilenet_v2',\n        'categories': IMAGE_TYPES,\n        'transform_configs': {\n            'crop_size': [150, 450],\n            'resize_size': 160,\n            'resize_max_size': 1000,\n        },\n        'model_dir': Path(data_dir()) / 'clf',\n        'model_fp': None  # 如果指定，直接使用此模型文件\n  }\n\t```\n\n* `general_config` (dict): 通用模型对应的配置信息；默认为 `None`，表示使用默认配置：\n\n  ```python\n  {}\n  ```\n\n* `english_config` (dict): 英文模型对应的配置信息；默认为 `None`，表示使用默认配置：\n\n  ```py\n  {'det_model_name': 'en_PP-OCRv3_det', 'rec_model_name': 'en_PP-OCRv3'}\n  ```\n\n* `formula_config` (dict): 公式识别模型对应的配置信息；默认为 `None`，表示使用默认配置：\n\n  ```python\n  {\n      'config': LATEX_CONFIG_FP,\n      'checkpoint': Path(data_dir()) / 'formular' / 'weights.pth',\n      'no_resize': False\n  }\n  ```\n\n* `thresholds` (dict): 识别阈值对应的配置信息；默认为 `None`，表示使用默认配置：\n\n  ```py\n  {\n      'formula2general': 0.65,  # 如果识别为 `formula` 类型，但得分小于此阈值，则改为 `general` 类型\n      'english2general': 0.75,  # 如果识别为 `english` 类型，但得分小于此阈值，则改为 `general` 类型\n  }\n  ```\n\n* `device` (str): 使用什么资源进行计算，支持 `['cpu', 'cuda', 'gpu']`；默认为 `cpu`\n\n* `**kwargs` (): 预留的其他参数；目前未被使用\n\n\n\n### 识别类函数\n\n通过调用类 **`Pix2Text`** 的类函数 `.recognize()` 完成对指定图片进行识别。类函数 `.recognize()` 说明如下：\n\n```python\n    def recognize(\n        self, img: Union[str, Path, Image.Image], use_analyzer: bool = True, **kwargs\n    ) -> List[Dict[str, Any]]:\n```\n\n\n\n其中的输入参数说明如下：\n\n* `img` (`str` or `Image.Image`)：待识别图片的路径，或者利用 `Image.open()` 已读入的图片 `Image` 。\n* `use_analyzer` (`bool`)：是否使用 Analyzer (**MFD** or **Layout**); `False` 表示把图片看成纯文本或者纯图片处理，相当于 **P2T V0.1.*** 的效果。Default: `True`。\n* `kwargs`: 保留字段，可以包含以下值，\n  * `resized_shape` (`int`): 把图片宽度resize到此大小再进行处理；默认值为 `700`；\n  * `save_analysis_res` (`str`): 把解析结果图片存在此文件中；默认值为 `None`，表示不存储；\n  * `embed_sep` (`tuple`): embedding latex的前后缀；只针对使用 `MFD` 时才有效；默认值为 `(' $', '$ ')`；\n  * `isolated_sep` (`tuple`): isolated latex的前后缀；只针对使用 `MFD` 时才有效；默认值为 `('$$\\n', '\\n$$')`。\n\n\n\n返回结果为列表（`list`），列表中的每个元素为`dict`，包含如下 `key`：\n\n* `type`：识别出的图像类别；\n  * 当开启Analyzer时（`use_analyzer==True`），取值为 `text`（纯文本）、`isolated`（独立行的数学公式） 或者 `text-embed`（文本行中包含了嵌入式的数学公式）；\n  * 当未开启Analyzer时（`use_analyzer==False`），取值为`formula`（纯数学公式）、`english`（纯英文文字）、`general`（纯文字，可能包含中英文）；\n\n* `text`：识别出的文字或Latex表达式；\n* `position`：所在块的位置信息，`np.ndarray`, with shape of `[4, 2]`。\n\n\n\n`Pix2Text` 类也实现了 `__call__()` 函数，其功能与 `.recognize()` 函数完全相同。所以才会有以下的调用方式：\n\n```python\nfrom pix2text import Pix2Text\n\nimg_fp = './docs/examples/formula.jpg'\np2t = Pix2Text(analyzer_config=dict(model_name='mfd'))\nouts = p2t(img_fp, resized_shape=600)  # 也可以使用 `p2t.recognize(img_fp)` 获得相同的结果\nprint(outs)\n# 如果只需要识别出的文字和Latex表示，可以使用下面行的代码合并所有结果\nonly_text = '\\n'.join([out['text'] for out in outs])\n```\n\n\n\n## 脚本使用\n\n**P2T** 包含了以下命令行工具。\n\n\n\n### 对单张图片或单个文件夹中的图片进行识别\n\n使用命令 **`p2t predict`** 预测单个文件或文件夹中所有图片，以下是使用说明：\n\n```bash\n$ p2t predict -h\nUsage: p2t predict [OPTIONS]\n\n  模型预测\n\nOptions:\n  --use-analyzer / --no-use-analyzer\n                                  是否使用 MFD 或者版面分析 Analyzer  [default: use-\n                                  analyzer]\n  -a, --analyzer-name [mfd|layout]\n                                  使用哪个Analyzer，MFD还是版面分析  [default: mfd]\n  -t, --analyzer-type TEXT        Analyzer使用哪个模型，'yolov7_tiny' or 'yolov7'\n                                  [default: yolov7_tiny]\n  -d, --device TEXT               使用 `cpu` 还是 `gpu` 运行代码，也可指定为特定gpu，如`cuda:0`\n                                  [default: cpu]\n  --resized-shape INTEGER         把图片宽度resize到此大小再进行处理  [default: 600]\n  -i, --img-file-or-dir TEXT      输入图片的文件路径或者指定的文件夹  [required]\n  --save-analysis-res TEXT        把解析结果存储到此文件或目录中（如果'--img-file-or-\n                                  dir'为文件/文件夹，则'--save-analysis-\n                                  res'也应该是文件/文件夹）。取值为 `None` 表示不存储\n  -l, --log-level TEXT            Log Level, such as `INFO`, `DEBUG`\n                                  [default: INFO]\n  -h, --help                      Show this message and exit.\n```\n\n\n\n## HTTP服务\n\n **Pix2Text** 加入了基于 FastAPI 的HTTP服务。开启服务需要安装几个额外的包，可以使用以下命令安装：\n\n```bash\n$ pip install pix2text[serve]\n```\n\n\n\n安装完成后，可以通过以下命令启动HTTP服务（**`-p`** 后面的数字是**端口**，可以根据需要自行调整）：\n\n```bash\n$ p2t serve -p 8503\n```\n\n\n\n`p2t serve` 命令使用说明：\n\n```bash\n$ p2t serve -h\nUsage: p2t serve [OPTIONS]\n\n  开启HTTP服务。\n\nOptions:\n  -H, --host TEXT     server host  [default: 0.0.0.0]\n  -p, --port INTEGER  server port  [default: 8503]\n  --reload            whether to reload the server when the codes have been\n                      changed\n  -h, --help          Show this message and exit.\n```\n\n\n\n服务开启后，可以使用以下方式调用服务。\n\n\n\n### 命令行\n\n比如待识别文件为 `docs/examples/mixed.jpg`，如下使用 `curl` 调用服务：\n\n```bash\n$ curl -F image=@docs/examples/mixed.jpg --form 'use_analyzer=true' --form 'resized_shape=600' http://0.0.0.0:8503/pix2text\n```\n\n\n\n### Python\n\n使用如下方式调用服务，参考文件 [scripts/try_service.py](scripts/try_service.py)：\n\n```python\nimport requests\n\nurl = 'http://0.0.0.0:8503/pix2text'\n\nimage_fp = 'docs/examples/mixed.jpg'\ndata = {\n    \"use_analyzer\": True,\n    \"resized_shape\": 600,\n    \"embed_sep\": \" $,$ \",\n    \"isolated_sep\": \"$$\\n, \\n$$\"\n}\nfiles = {\n    \"image\": (image_fp, open(image_fp, 'rb'))\n}\n\nr = requests.post(url, data=data, files=files)\n\nouts = r.json()['results']\nonly_text = '\\n'.join([out['text'] for out in outs])\nprint(f'{only_text=}')\n```\n\n\n\n### 其他语言\n\n请参照 `curl` 的调用方式自行实现。\n\n\n\n## 脚本运行\n\n脚本 [scripts/screenshot_daemon.py](scripts/screenshot_daemon.py) 实现了自动对截屏图片调用 Pixe2Text 进行公式或者文字识别。这个功能是如何实现的呢？\n\n\n\n**以下是具体的运行流程（请先安装好 Pix2Text）：**\n\n1. 找一个喜欢的截屏软件，这个软件只要**支持把截屏图片存储在指定文件夹**即可。比如Mac下免费的 **Xnip** 就很好用。\n\n2. 除了安装Pix2Text外，还需要额外安装一个Python包 **pyperclip**，利用它把识别结果复制进系统的剪切板：\n\n   ```bash\n   $ pip install pyperclip\n   ```\n\n3. 下载脚本文件 [scripts/screenshot_daemon.py](scripts/screenshot_daemon.py) 到本地，编辑此文件 `\"SCREENSHOT_DIR\"` 所在行（第 `17` 行），把路径改为你的截屏图片所存储的目录。\n\n4. 运行此脚本：\n\n   ```bash\n   $ python scripts/screenshot_daemon.py\n   ```\n\n好了，现在就用你的截屏软件试试效果吧。截屏后的识别结果会写入电脑剪切板，直接 **Ctrl-V** / **Cmd-V** 即可粘贴使用。\n\n\n\n更详细使用介绍可参考视频：《[Pix2Text: 替代 Mathpix 的免费 Python 开源工具](https://www.bilibili.com/video/BV12e4y1871U)》。\n\n\n\n\n## 给作者来杯咖啡\n\n开源不易，如果此项目对您有帮助，可以考虑 [给作者加点油🥤，鼓鼓气💪🏻](https://cnocr.readthedocs.io/zh/latest/buymeacoffee/) 。\n\n---\n\n官方代码库：[https://github.com/breezedeus/pix2text](https://github.com/breezedeus/pix2text)。\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/breezedeus/pix2text",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pix2text",
    "package_url": "https://pypi.org/project/pix2text/",
    "platform": "Mac",
    "project_url": "https://pypi.org/project/pix2text/",
    "project_urls": {
      "Homepage": "https://github.com/breezedeus/pix2text"
    },
    "release_url": "https://pypi.org/project/pix2text/0.2.2.1/",
    "requires_dist": [
      "click",
      "tqdm",
      "numpy (<1.24)",
      "opencv-python",
      "cnocr (>=2.2.2.2)",
      "cnstd (>=1.2.2)",
      "torch",
      "torchvision",
      "pix2tex",
      "pip-tools ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "uvicorn[standard] ; extra == 'serve'",
      "fastapi ; extra == 'serve'",
      "python-multipart ; extra == 'serve'",
      "pydantic ; extra == 'serve'"
    ],
    "requires_python": "",
    "summary": "Python3 package to extract text information from images",
    "version": "0.2.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16928177,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f7b653de1708640fa0a8cbd5f1470b61221794962b35de9365572ff5808be48",
          "md5": "14795c78dc798c58625561644181a0ab",
          "sha256": "fd99e309fb2c08342bcb66f895af20290282e36aeb3216743c6391055abcd0d4"
        },
        "downloads": -1,
        "filename": "pix2text-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14795c78dc798c58625561644181a0ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18204,
        "upload_time": "2022-09-07T15:36:40",
        "upload_time_iso_8601": "2022-09-07T15:36:40.014563Z",
        "url": "https://files.pythonhosted.org/packages/5f/7b/653de1708640fa0a8cbd5f1470b61221794962b35de9365572ff5808be48/pix2text-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9b37e425e7d705a3c3a5bcd71fb4abe7ac72ed014375dd12584e9267b9e8d62",
          "md5": "a95e6861785b9b94ac710f6d235e0df9",
          "sha256": "f385d4864a3479e39c79613d91ee398a96f551ac6d66eaf2c3118cc0e81b7372"
        },
        "downloads": -1,
        "filename": "pix2text-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a95e6861785b9b94ac710f6d235e0df9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14385,
        "upload_time": "2022-09-07T15:36:42",
        "upload_time_iso_8601": "2022-09-07T15:36:42.667540Z",
        "url": "https://files.pythonhosted.org/packages/a9/b3/7e425e7d705a3c3a5bcd71fb4abe7ac72ed014375dd12584e9267b9e8d62/pix2text-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c91c0d429374b979fa35958f1daccd6857fd2419a500b90110b045743370f9a5",
          "md5": "47c9af83972183a6e99423996af503bd",
          "sha256": "7e269bc02e0db1774ef77ad961e96539ee2a053cde8dfc33af987cb926177f99"
        },
        "downloads": -1,
        "filename": "pix2text-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47c9af83972183a6e99423996af503bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32597,
        "upload_time": "2022-09-10T15:57:04",
        "upload_time_iso_8601": "2022-09-10T15:57:04.792488Z",
        "url": "https://files.pythonhosted.org/packages/c9/1c/0d429374b979fa35958f1daccd6857fd2419a500b90110b045743370f9a5/pix2text-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "043de4a73e7420c46c94597d914822d3e7a6a902df8be4d06ba593f56faa05e2",
          "md5": "3b0283c821056c1ac96c214483f55e18",
          "sha256": "9026be8cc3ddde1b08f0cbf1d99acab0613366cbb91d24b19e58e5f2d21f8e49"
        },
        "downloads": -1,
        "filename": "pix2text-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3b0283c821056c1ac96c214483f55e18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26894,
        "upload_time": "2022-09-10T15:57:06",
        "upload_time_iso_8601": "2022-09-10T15:57:06.967218Z",
        "url": "https://files.pythonhosted.org/packages/04/3d/e4a73e7420c46c94597d914822d3e7a6a902df8be4d06ba593f56faa05e2/pix2text-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "243cbc815e4557bc298fd42d67fe481dc214a216e8033313cbee2757d09045d4",
          "md5": "09a6882897b4d00a6eb66ca26da56334",
          "sha256": "ab9e28f6983a32711044fed43a0efb042831387207d5554cbafb7240f9abc319"
        },
        "downloads": -1,
        "filename": "pix2text-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09a6882897b4d00a6eb66ca26da56334",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36496,
        "upload_time": "2022-10-21T04:58:00",
        "upload_time_iso_8601": "2022-10-21T04:58:00.144650Z",
        "url": "https://files.pythonhosted.org/packages/24/3c/bc815e4557bc298fd42d67fe481dc214a216e8033313cbee2757d09045d4/pix2text-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e562926b211482acab5838fd3edea000645402976e83064527ec3b45bdd97229",
          "md5": "f9eb9ebaf116b5550d293bcf1386b0a2",
          "sha256": "edf6a387d7933123dd8f79f6b3a2ac78fdc89fe579ee8a7722061904583ea98c"
        },
        "downloads": -1,
        "filename": "pix2text-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f9eb9ebaf116b5550d293bcf1386b0a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34120,
        "upload_time": "2022-10-21T04:58:02",
        "upload_time_iso_8601": "2022-10-21T04:58:02.487697Z",
        "url": "https://files.pythonhosted.org/packages/e5/62/926b211482acab5838fd3edea000645402976e83064527ec3b45bdd97229/pix2text-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e80a7641db3cade49f88fc48d31211126742075553e84410c9af97adee4c1c45",
          "md5": "b15a9187bb9cb959a119f4b90f6bf1e1",
          "sha256": "9581e8472e65e97f5f584b146fb05c3528021133ee45daac79eb1b57bd0835d8"
        },
        "downloads": -1,
        "filename": "pix2text-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b15a9187bb9cb959a119f4b90f6bf1e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42036,
        "upload_time": "2023-02-03T11:28:15",
        "upload_time_iso_8601": "2023-02-03T11:28:15.696270Z",
        "url": "https://files.pythonhosted.org/packages/e8/0a/7641db3cade49f88fc48d31211126742075553e84410c9af97adee4c1c45/pix2text-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "748fd702c02ea61a05696da87d394b50a413517fa2c3f986c46e33e0aa6ebb0d",
          "md5": "23caec24b862ea08b3894be2bc95f17e",
          "sha256": "5f51078b31415456d177aef1776d74fe40c8ecca0de777a4b31ddc4e493ead8f"
        },
        "downloads": -1,
        "filename": "pix2text-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "23caec24b862ea08b3894be2bc95f17e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43023,
        "upload_time": "2023-02-03T11:28:22",
        "upload_time_iso_8601": "2023-02-03T11:28:22.093582Z",
        "url": "https://files.pythonhosted.org/packages/74/8f/d702c02ea61a05696da87d394b50a413517fa2c3f986c46e33e0aa6ebb0d/pix2text-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4047c827f09cbadb2e7c7cc5f91d336be677bdc18bc74482f8cde572226e5e9",
          "md5": "84b92faea393146222fd98bac0edb104",
          "sha256": "46405a6fa2003d243a29a9ecec59d5f77e0b8ea7918decddb8b3d395f9bac66e"
        },
        "downloads": -1,
        "filename": "pix2text-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84b92faea393146222fd98bac0edb104",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42300,
        "upload_time": "2023-02-19T07:39:41",
        "upload_time_iso_8601": "2023-02-19T07:39:41.430763Z",
        "url": "https://files.pythonhosted.org/packages/f4/04/7c827f09cbadb2e7c7cc5f91d336be677bdc18bc74482f8cde572226e5e9/pix2text-0.2.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "bug: including `breakpoint()`"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a885fd6ce6fc4fe0e17c2088f12ff75acc10694b72963adf275db59dc38b7427",
          "md5": "6e908d84b3a69bf9968a71deb7d5d9b4",
          "sha256": "6e79baa797bee829339ec5197117ed7050251ef184f35f3cb45cbe79ce694407"
        },
        "downloads": -1,
        "filename": "pix2text-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6e908d84b3a69bf9968a71deb7d5d9b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43374,
        "upload_time": "2023-02-19T07:39:44",
        "upload_time_iso_8601": "2023-02-19T07:39:44.191088Z",
        "url": "https://files.pythonhosted.org/packages/a8/85/fd6ce6fc4fe0e17c2088f12ff75acc10694b72963adf275db59dc38b7427/pix2text-0.2.1.tar.gz",
        "yanked": true,
        "yanked_reason": "bug: including `breakpoint()`"
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fab8228e28b2d9858838bbca4c62fc59fd012628b1d67db3a30e8761afe7deb",
          "md5": "6cf8ccd5c353000c2a4e20422cecd68c",
          "sha256": "376e7a2b275bfb3b5bb3eafeb07886b5833cb18abee1bc7b1ff9a2dc9fefbdb4"
        },
        "downloads": -1,
        "filename": "pix2text-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6cf8ccd5c353000c2a4e20422cecd68c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42743,
        "upload_time": "2023-02-19T11:08:33",
        "upload_time_iso_8601": "2023-02-19T11:08:33.971251Z",
        "url": "https://files.pythonhosted.org/packages/4f/ab/8228e28b2d9858838bbca4c62fc59fd012628b1d67db3a30e8761afe7deb/pix2text-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75ab939e383a5b81a3d53af480dbc7abf33a14287c5c6f49482db510f148cadd",
          "md5": "00df01a7099b3615ab1b1e0582fb2c8d",
          "sha256": "92ade4d875596042ed133fe4224aa7d92152ad00013436685f61b41e4df57b87"
        },
        "downloads": -1,
        "filename": "pix2text-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "00df01a7099b3615ab1b1e0582fb2c8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43771,
        "upload_time": "2023-02-19T11:08:36",
        "upload_time_iso_8601": "2023-02-19T11:08:36.678421Z",
        "url": "https://files.pythonhosted.org/packages/75/ab/939e383a5b81a3d53af480dbc7abf33a14287c5c6f49482db510f148cadd/pix2text-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6486214888c2a7ae141818ca012d6785d59e010a0026a93bd98d2a641590c7ad",
          "md5": "79d62328d1087caa3a023d9fc2e718ee",
          "sha256": "a0212badd449a120db8f1fcbcfbfccf59c51e06f1e695231b7f5bae614daf2d3"
        },
        "downloads": -1,
        "filename": "pix2text-0.2.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79d62328d1087caa3a023d9fc2e718ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42791,
        "upload_time": "2023-02-19T12:08:16",
        "upload_time_iso_8601": "2023-02-19T12:08:16.692272Z",
        "url": "https://files.pythonhosted.org/packages/64/86/214888c2a7ae141818ca012d6785d59e010a0026a93bd98d2a641590c7ad/pix2text-0.2.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "031daae5c591903814f9e60fe78f459c51f50c90a7b404de3f8350f7a8d63927",
          "md5": "6701bd6d61e952b88296042607a48d62",
          "sha256": "5767aabd57bc0e7276f560bf3758c1afbaf5fd152bb6a78e4ce26a50757e4469"
        },
        "downloads": -1,
        "filename": "pix2text-0.2.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6701bd6d61e952b88296042607a48d62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43779,
        "upload_time": "2023-02-19T12:08:18",
        "upload_time_iso_8601": "2023-02-19T12:08:18.842851Z",
        "url": "https://files.pythonhosted.org/packages/03/1d/aae5c591903814f9e60fe78f459c51f50c90a7b404de3f8350f7a8d63927/pix2text-0.2.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6486214888c2a7ae141818ca012d6785d59e010a0026a93bd98d2a641590c7ad",
        "md5": "79d62328d1087caa3a023d9fc2e718ee",
        "sha256": "a0212badd449a120db8f1fcbcfbfccf59c51e06f1e695231b7f5bae614daf2d3"
      },
      "downloads": -1,
      "filename": "pix2text-0.2.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "79d62328d1087caa3a023d9fc2e718ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 42791,
      "upload_time": "2023-02-19T12:08:16",
      "upload_time_iso_8601": "2023-02-19T12:08:16.692272Z",
      "url": "https://files.pythonhosted.org/packages/64/86/214888c2a7ae141818ca012d6785d59e010a0026a93bd98d2a641590c7ad/pix2text-0.2.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "031daae5c591903814f9e60fe78f459c51f50c90a7b404de3f8350f7a8d63927",
        "md5": "6701bd6d61e952b88296042607a48d62",
        "sha256": "5767aabd57bc0e7276f560bf3758c1afbaf5fd152bb6a78e4ce26a50757e4469"
      },
      "downloads": -1,
      "filename": "pix2text-0.2.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6701bd6d61e952b88296042607a48d62",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 43779,
      "upload_time": "2023-02-19T12:08:18",
      "upload_time_iso_8601": "2023-02-19T12:08:18.842851Z",
      "url": "https://files.pythonhosted.org/packages/03/1d/aae5c591903814f9e60fe78f459c51f50c90a7b404de3f8350f7a8d63927/pix2text-0.2.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}