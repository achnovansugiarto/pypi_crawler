{
  "info": {
    "author": "Sinisa Seslak",
    "author_email": "seslaks@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CredPy\nCredit risk library for python enabling basic and advanced manipulation and\ncalculation of financial statements of datasets with companies.\n\n## Installation\n\nInstallation can be done from te PyPi index:\n\n`pip install credpy`\n\nOr you can grab the source from GitHub and append it to your project:\n\n`https://github.com/seslak/CredPy/`\n\n## Usage\nFor the library to correctly calculate position from dataset firstly the\ndataset has to be assigned to the class:\n\n`import credpy as crp`\n`x = crp.company(DATASET, [DATASET2], [DATASET3], ...)`\n\nwhere _DATASET_ is the dataset passed to the class with the financial positions\nof companies as follows: \n\nCash and Cash equivalents, Receivables, Inventory, Other short-term assets, Equipment,  Buildings and machinery, Land, Other long-term assets, Deffered Taxes, Loss above equity level, Payables, Shor-term loans, Long-term loans part maturing within a year, Other short-term obligations, Long-term loans, Other long-term obligations, Paid in capital, Retained earnings, Other capital, Total revenues, Costs of goods sold, General and administration costs, Total salaries, Amortization, Other operating expenses, Interest expanses, Other revenues, Other expenses, Taxes, Other P&L Changes\n\nFollowing the above instructions it is important for the library to be able to\nmanipulate balance positions correctly. Additional csv file with frame is in the examples folder.\n\nYou can serv csv file or dataset with lists and tupels, as long as it is a 1D set. It can have multiple dimesions within itself.\n\nAdding _DATASET2_, _DATASET3_ etc. is adding time series into the company's information.\n\nFunctions available:\n\n- **position** - Retrieves designated balance sheet position.\n\n`\nx.position('equity', 1)\n`\n\nNumber one means it will use only second year from the dataset.\n0 is the first year. Leaving blank calculates all the years.\n\nPositions are labeled as follows (in square brakets are the labels for function):\n\n            - Balance sheet\n            Cash and Cash equivalents [cash]\n            Receivables [receivables]\n            Inventory [inventory]\n            Other short-term assets [otherstassets]\n            Equipment [equipment]\n            Buildings and machinery [buildings]\n            Land [land]\n            Other long-term assets [otherltassets]\n            Deffered Taxes [defferedtax]\n            Loss above equity level [lossaboveq]\n            Payables [payables]\n            Shor-term loans [stloans]\n            Long-term loans part maturing within a year [ltloansyear]\n            Other short-term obligations [otherstobl]\n            Long-term loans [ltloans]\n            Other long-term obligations [otherltobl]\n            Paid in capital [paidincap]\n            Retained earnings [retainedear]\n            Other capital [othcap]\n\n            - Profit and loss                             \n            Total revenues [revenues]\n            Costs of goods sold [cogs]\n            General and administration costs [gna]\n            Total salaries [salaries]\n            Amortization [amortization]\n            Other operating expenses [othopexp]\n            Interest expanses [interest]\n            Other revenues [othrev]\n            Other expenses [othexp]\n            Taxes [taxes]\n            Other P&L Changes [othchg]\n\n\nAdditional positions are:\n\n            Total long-term assets [tlta]\n            Total short-term assets [tsta]\n            Total assets [ta]\n            Total short-term obligations [tso]\n            Total liabilites [tli]\n            Equity [equity]\n\n            Total costs [totalcosts]\n            EBITDAR [ebitdar]\n            EBITDA [ebitda]\n            EBIT [ebit]\n            EBT [ebt]\n            Net Income [netincome]\n\n- **weights** - Weights function is used for calculating weights in dataset.\n\n`\nx.weights('inventory', 80000, 'equity', 'ta', 'cash')\n`\n\nIt calculates weights on datasets for all of the years.\n\nRetrieves weights fot equity, total assets, and cash for the inventory to be over the 80.000.\n\nFor its usage it needs to have the target value (can be any of the dataset, but only one), and weighted value (can be any of the dataset, and as many as wanted).\n\n\n- **ratio** - Retrieves designated ratio\n\n`\nx.ratio('current', n=1)\n`\n\nNumber one (n) means it will use only second year from the dataset.\n0 is the first year. Leaving blank calculates all the years.\n\n`\nx.ratio(\"dayssales\", 0, days=360)\n`\n\nRatios are labeled as follows (in square brakets are the labels for function):\n\n            Current ratio [current]\n            Quick ratio [quick]\n            Cash ratio [cashr]\n            Net-working capital [nwr]\n            Cash to total assets ratio [cashta]\n            Sales to receivables (or turnover ratio) [salestor]\n            Days sales outstanding [dayssales] {'days' is optional variable which can be defined, default is 365}\n            Cost of sales [costsales]\n            Cash turnover [ctr]\n\n            Debt to equity ratio [debtequ]\n            Debt ratio [debt]\n            Fixed-assets to net-worth [fatonw]\n            Interest coverage [ebitint]\n            Retained earnings ratio compared to equity [earnings]\n            Equity ratio  [equityr]\n\n            Inventory turnover [invtr]\n            Inventory holding period [invhp]\n            Inventory to assets ratio [invta]\n            Accounts receivable turnover [acctr]\n            Accounts receivable collection period [acccp]\n            Days payable outstanding [dpo]\n\n\n- **score** - Applies designated scoring model to the dataset\n\n`\nx.score('altman', 'revised', 1)\n`\n\nNumber one (n) means it will use only second year from the dataset.\n0 is the first year. Leaving blank calculates all the years.\n\nYou can also edit weights in scoring models.\n\n`\nx.score('fulmer', 1.1, 2.2, 0.5, 0.9, 5, 2.8)\n`\n\nScoring models are labeled as follows (in square brakets are the labels for functions):\n\n        Altman's z-score [altman]\n            Original (default model if not defined) [altman, original]\n            Updated [altman, updated]\n            Revised [altman, revised]\n            Taffler's and Tisshaw's  [altman, tntmodel]\n            Non-manufacturing [altman, non-man]\n            Emerging markets [altman, emerging]\n        Bathory model [bathory]\n        Springate model [springate]\n        Zmijewski model [zmijewski]\n        Kralicek DF indicator [kralicek]\n        Grover model [grover]\n        Fulmer model [fulmer]\n\n- **ml** - Basic machine learning calculations on prepared dataset\n\nMachine learning methods are meant to easily use some of the popular statistical libraries and frameworks on financial datasets.\nThis is more because CredPy has someone specific data structure so it is meant to make the work easier for the end user.\n\n`\nx.ml(['linreg'], DATASETFORTESTING, 1, 'netincome','ebt', 'gna')\n`\n\nThe following is the Simple linear regression for appended _DATASET2_ (because of number 1 in arguments) as a training set, where the targeted value is netincome and variables are EBT and GNA.\nAfter that the predictions are applied on the _DATASETFORTESTING_ and returned. Because of that _DATASETFORTESTING_ has to comply to the CredPy data structure instructions.\n\nIt is possible to pass additional arguments into the functions:\n\n`\nx.ml(['linreg'], DATASETFORTESTING, 1, 'netincome','ebt', 'gna', fit_intercept=True, normalize=True, n_jobs=4)\n`\n\nAll of the additional arguments are the ones available over the scikit-learn library so please see their documentation for additional info. If not specified, they are set to the defaults.\n\nCurrently suported modelling functions are:\n\n        Simple linear regression [linreg] {it becomes multiple by adding more variables into the model, no need for different wording}\n        Polynomial regression [polyreg]\n        Support Vector Regression (SVR) [SVR]\n        Decision Tree Regression [decision_tree_reg]\n        Random Forest Regression [random_forest_reg]\n\n\n## Contributing\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request :D\n\n## History\n\n0.9.1 - Time series datasets enabled,\n\t\tMultiprocessing support re-coded for Linux (not tested on MAC OS, it should work), it is yet not implemented on Windows based systems,\n\t\tFirst machine learning functions incorporated into the ML framework,\n\t\tLoads of typos corrected. :)\n\n0.9.0 - First public release\n\n## License\nApache License, Version 2.0\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/credpy/",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "credpy",
    "package_url": "https://pypi.org/project/credpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/credpy/",
    "project_urls": {
      "Homepage": "https://pypi.org/project/credpy/"
    },
    "release_url": "https://pypi.org/project/credpy/0.9.1/",
    "requires_dist": [
      "pandas",
      "scikit-learn"
    ],
    "requires_python": ">=3.6",
    "summary": "Credit risk library for Python",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8309055,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3ea06ebe9bc5d8fbf71bfb18a8b461e8933f3346514758da0a6a2faa694d8e9",
          "md5": "b795051b0cf4695eaeabe1266a700223",
          "sha256": "21f9576458c2e8310e96c200c04238fb8aebfbdd554dafd39a5a8c569a512d7f"
        },
        "downloads": -1,
        "filename": "credpy-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b795051b0cf4695eaeabe1266a700223",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7299,
        "upload_time": "2020-03-21T22:39:47",
        "upload_time_iso_8601": "2020-03-21T22:39:47.499700Z",
        "url": "https://files.pythonhosted.org/packages/d3/ea/06ebe9bc5d8fbf71bfb18a8b461e8933f3346514758da0a6a2faa694d8e9/credpy-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc060a3fec4fc7e96a52c8644b77aa7427be4fd039126a0ea00d3e5d7c87a932",
          "md5": "69cdd928b5a61340fc9c762485c4db86",
          "sha256": "22fa02bbe724017a7ad523a7353ac23f85d7b0fb4863437e10208bba28a12ae8"
        },
        "downloads": -1,
        "filename": "credpy-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69cdd928b5a61340fc9c762485c4db86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3958,
        "upload_time": "2020-03-21T22:39:49",
        "upload_time_iso_8601": "2020-03-21T22:39:49.727497Z",
        "url": "https://files.pythonhosted.org/packages/bc/06/0a3fec4fc7e96a52c8644b77aa7427be4fd039126a0ea00d3e5d7c87a932/credpy-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ca67ea4c2f8a32ebf7871bb0c907e1c11663f13286a990153287ad0dc084ef6",
          "md5": "ec426561165f4f47ca08e5cc918f72d4",
          "sha256": "28fbd487f619523c46ff61552e75ccb475cf9c713eda6be9d9948b9ab1fc047b"
        },
        "downloads": -1,
        "filename": "credpy-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec426561165f4f47ca08e5cc918f72d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8438,
        "upload_time": "2020-09-30T18:06:18",
        "upload_time_iso_8601": "2020-09-30T18:06:18.004336Z",
        "url": "https://files.pythonhosted.org/packages/5c/a6/7ea4c2f8a32ebf7871bb0c907e1c11663f13286a990153287ad0dc084ef6/credpy-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab90416dcc0ec66286c627bffa362504c28cc1718871dac8ec2c6e352a2a8003",
          "md5": "3fa6ee2564d717df15523c3903fbf4c8",
          "sha256": "7d54bba83e3201b56186ccfc27404ad2db9dbb20aa1bb051a3ba35862bf7e5d7"
        },
        "downloads": -1,
        "filename": "credpy-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3fa6ee2564d717df15523c3903fbf4c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5374,
        "upload_time": "2020-09-30T18:06:19",
        "upload_time_iso_8601": "2020-09-30T18:06:19.051614Z",
        "url": "https://files.pythonhosted.org/packages/ab/90/416dcc0ec66286c627bffa362504c28cc1718871dac8ec2c6e352a2a8003/credpy-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ca67ea4c2f8a32ebf7871bb0c907e1c11663f13286a990153287ad0dc084ef6",
        "md5": "ec426561165f4f47ca08e5cc918f72d4",
        "sha256": "28fbd487f619523c46ff61552e75ccb475cf9c713eda6be9d9948b9ab1fc047b"
      },
      "downloads": -1,
      "filename": "credpy-0.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ec426561165f4f47ca08e5cc918f72d4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8438,
      "upload_time": "2020-09-30T18:06:18",
      "upload_time_iso_8601": "2020-09-30T18:06:18.004336Z",
      "url": "https://files.pythonhosted.org/packages/5c/a6/7ea4c2f8a32ebf7871bb0c907e1c11663f13286a990153287ad0dc084ef6/credpy-0.9.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab90416dcc0ec66286c627bffa362504c28cc1718871dac8ec2c6e352a2a8003",
        "md5": "3fa6ee2564d717df15523c3903fbf4c8",
        "sha256": "7d54bba83e3201b56186ccfc27404ad2db9dbb20aa1bb051a3ba35862bf7e5d7"
      },
      "downloads": -1,
      "filename": "credpy-0.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3fa6ee2564d717df15523c3903fbf4c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5374,
      "upload_time": "2020-09-30T18:06:19",
      "upload_time_iso_8601": "2020-09-30T18:06:19.051614Z",
      "url": "https://files.pythonhosted.org/packages/ab/90/416dcc0ec66286c627bffa362504c28cc1718871dac8ec2c6e352a2a8003/credpy-0.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}