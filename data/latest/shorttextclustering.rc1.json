{
  "info": {
    "author": "Ajay Chatterjee",
    "author_email": "ajay.chatt03@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Overview (Intent Mining from past conversations for Conversational Agent)\nITER-DBSCAN implementation for unbalanced data clustering. The algorithm is \nis tested on short text dataset (conversational intent mining from utterances) \nand achieve state-of-the art result. The work in accepted in COLING-2020.\nAll the dataset and results are shared for future evaluation. \n\nPlease note, we have only shared the base ITER-DBSCAN implementation. The\nparallelized implementation of ITER-DBSCAN is not shared. \n\nAll the raw and processed dataset is shared for future research in **Data** and \n**ProcessedData** folder. \n\nThe result of ITER-DBSCAN and parallelized ITER-DBSCAN evaluation on the dataset\nis shared in **NewResults** and **publishedResults** folder.\n\n# Code (API Reference)\nAPI Reference :\nITER-DBSCAN Implementation - Iteratively adapt dbscan parameters for unbalanced data (text) clustering\n    The change of core parameters of DBSCAN i.e. distance and minimum samples parameters are changed smoothly to\n    find high to low density clusters. At each iteration distance parameter is increased by 0.01 and minimum samples\n    are decreased by 1. The algorithm uses cosine distance for cluster creation.\n\n**ITER-DBSCAN(initial_distance, initial_minimum_samples, delta_distance, delta_minimum_samples, max_iteration, threshold, features)**\nParameters:\n- initial_distance: initial distance for initial cluster creation (default: 0.10)\n- initial_minimum_samples: initial minimum sample count for initial cluster creation (default: 20)\n- delta_distance: change in distance parameter at each iteration(default: 0.01)\n- delta_minimum_samples: change in minimum sample parameter (of DBSCAN) at each iteration(default: 0.01)\n- max_iteration : maximum number of iteration the DBSCAN algorithm will run for cluster creation(default: 5)\n- threshold: threshold parameter controls the size of the cluster, any cluster contains more than threshold parameter\n- will be discarded. (default: 300)\n- features: default values is None, the algorithm expects a list of short texts. In case the representation is pre-computed for text or data sources (pass features values as \"precomputed\"). default: None\n\nIn our experiments, delta_distance and delta_minimum_samples changed constantly by\na factor of 0.01 and 1 respectively.\n\n# Usages\n\n# Load Packages\n\n\n```python\nimport pandas as pd\nfrom ShortTextClustering.ITER_DBSCAN import ITER_DBSCAN\nfrom ShortTextClustering.evaluation import EvaluateDataset\n```\n\n# Load Dataset\n\n\n```python\ndf = pd.read_excel(\"WebApplicationsCorpus.xlsx\")\n```\n\n\n```python\ndf.head(5)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>data</th>\n      <th>intent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Alternative to Facebook</td>\n      <td>Find Alternative</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>How do I delete my Facebook account?</td>\n      <td>Delete Account</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Are there any good Pandora alternatives with g...</td>\n      <td>Find Alternative</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Is it possible to export my data from Trello t...</td>\n      <td>Export Data</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Is there an online alternative to iGoogle</td>\n      <td>Find Alternative</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n# Distribution of intents\n\n\n```python\ndf.intent.value_counts()\n```\n\n\n\n\n    Find Alternative    23\n    Filter Spam         20\n    Delete Account      17\n    Sync Accounts        9\n    Change Password      8\n    None                 6\n    Export Data          5\n    Name: intent, dtype: int64\n\n\n\n# Remove Intent type \"None\"\n\n\n```python\nprint('Before: ', len(df))\ndf = df.loc[df.intent != 'None']\nprint('After: ', len(df))\ndf = df.reset_index()\ndel df['index']\n```\n\n    Before:  88\n    After:  82\n\n\n\n```python\ndf.intent.value_counts()\n```\n\n\n\n\n    Find Alternative    23\n    Filter Spam         20\n    Delete Account      17\n    Sync Accounts        9\n    Change Password      8\n    Export Data          5\n    Name: intent, dtype: int64\n\n\n\n# Generate cluster labels for short text dataset\n\n\n```python\ndataset = df.data.values.tolist()\n```\n\n\n```python\n%%time\nmodel = ITER_DBSCAN(initial_distance=0.3, initial_minimum_samples=16, delta_distance=0.01, delta_minimum_samples=1, max_iteration=15)\n```\n\n    Wall time: 0 ns\n\n\n\n```python\n%%time\nlabels = model.fit_predict(dataset)\n```\n\n    Wall time: 48 ms\n\n\n\n```python\ndf['cluster_ids'] = labels\n```\n\n# Cluster distribution\nNoisy points are marked as -1\n\n\n```python\ndf.cluster_ids.value_counts()\n```\n\n\n\n\n    -1    33\n     0    13\n     1    12\n     3     5\n     2     5\n     6     4\n     4     4\n     7     3\n     5     3\n    Name: cluster_ids, dtype: int64\n\n\n\n# Clustered Data result\n\n\n```python\ndf.loc[df.cluster_ids == 0]\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>data</th>\n      <th>intent</th>\n      <th>cluster_ids</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>How do I delete my Facebook account?</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>How can I delete my 160by2 account?</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>How can I permanently delete my Yahoo mail acc...</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>How to delete my imgur account?</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>How to delete a Sify Mail account</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>How to permanently delete a 37signals ID</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>How can I delete my Hunch account?</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>How can I delete my Twitter account?</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>How do I delete my LinkedIn account?</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>How do I delete my Gmail account?</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>How do I delete my Experts Exchange account?</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>How do I delete my Ohloh profile?</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>How can I permanently delete my MySpace account?</td>\n      <td>Delete Account</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n# Evaluate ITER-DBSCAN performance on a dataset with different parameters\n\n\n```python\nevaluate_dataset = EvaluateDataset(filename='WebApplicationsCorpus.xlsx', filetype='xlsx', text_column='data', \n                                   target_column='intent')\n```\n\n\n```python\nparameters = [\n             {\n               \"distance\":0.3, \n               \"minimum_samples\":16, \n               \"delta_distance\":0.01, \n               \"delta_minimum_samples\":1, \n               \"max_iteration\":15\n             },\n             {\n               \"distance\":0.25, \n               \"minimum_samples\":14, \n               \"delta_distance\":0.01, \n               \"delta_minimum_samples\":1, \n               \"max_iteration\":12\n             }, \n             {\n               \"distance\":0.28, \n               \"minimum_samples\":12, \n               \"delta_distance\":0.01, \n               \"delta_minimum_samples\":1, \n               \"max_iteration\":12\n             }\n             ]\n```\n\n# Generate different metrics of parameter evaluation with ITER-DBSCAN\n\n\n```python\n%%time\nresults = evaluate_dataset.evaulate_iter_dbscan(parameters)\n```\n\n    100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 3/3 [00:00<00:00, 14.10it/s]\n\n    Wall time: 229 ms\n\n\n\n\n\n\n```python\nresult_df = pd.DataFrame.from_dict(results)\n```\n\n\n```python\nresult_df\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>distance</th>\n      <th>minimum_samples</th>\n      <th>delta_distance</th>\n      <th>delta_minimum_samples</th>\n      <th>max_iteration</th>\n      <th>time</th>\n      <th>percentage_labelled</th>\n      <th>clusters</th>\n      <th>noisy_clusters</th>\n      <th>homogeneity_score</th>\n      <th>completeness_score</th>\n      <th>normalized_mutual_info_score</th>\n      <th>adjusted_mutual_info_score</th>\n      <th>adjusted_rand_score</th>\n      <th>accuracy</th>\n      <th>precision</th>\n      <th>recall</th>\n      <th>f1</th>\n      <th>intents</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.30</td>\n      <td>16</td>\n      <td>0.01</td>\n      <td>1</td>\n      <td>15</td>\n      <td>0.06</td>\n      <td>56.82</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0.76</td>\n      <td>0.88</td>\n      <td>0.81</td>\n      <td>0.79</td>\n      <td>0.81</td>\n      <td>0.852273</td>\n      <td>75.0</td>\n      <td>85.2</td>\n      <td>79.7</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.25</td>\n      <td>14</td>\n      <td>0.01</td>\n      <td>1</td>\n      <td>12</td>\n      <td>0.03</td>\n      <td>42.05</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0.70</td>\n      <td>0.82</td>\n      <td>0.76</td>\n      <td>0.73</td>\n      <td>0.74</td>\n      <td>0.818182</td>\n      <td>72.4</td>\n      <td>81.8</td>\n      <td>76.6</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.28</td>\n      <td>12</td>\n      <td>0.01</td>\n      <td>1</td>\n      <td>12</td>\n      <td>0.04</td>\n      <td>46.59</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0.73</td>\n      <td>0.85</td>\n      <td>0.79</td>\n      <td>0.77</td>\n      <td>0.78</td>\n      <td>0.840909</td>\n      <td>74.1</td>\n      <td>84.1</td>\n      <td>78.7</td>\n      <td>5</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\n\n```\n\n\n# Citation\nThe work is accepted in COLING 2020.\nIf you are using this code in your work, please cite this paper:\n\n> @misc{chatterjee2020intent,\n      title={Intent Mining from past conversations for Conversational Agent}, \n      author={Ajay Chatterjee and Shubhashis Sengupta},\n      year={2020},\n      eprint={2005.11014},\n      archivePrefix={arXiv},\n      primaryClass={cs.CL}\n>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ajaychatterjee/IntentMining/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ShortTextClustering",
    "package_url": "https://pypi.org/project/ShortTextClustering/",
    "platform": "",
    "project_url": "https://pypi.org/project/ShortTextClustering/",
    "project_urls": {
      "Homepage": "https://github.com/ajaychatterjee/IntentMining/"
    },
    "release_url": "https://pypi.org/project/ShortTextClustering/0.1/",
    "requires_dist": [
      "tensorflow (==2.3.1)",
      "tensorflow-hub (==0.10.0)",
      "scikit-learn (==0.23.2)",
      "hdbscan (==0.8.26)",
      "pandas (==1.1.4)",
      "xlrd (==1.2.0)",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "ITER-DBSCAN Implementation for unbalanced short text and numerical data clustering",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8621160,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "928bfa02af07fa86b1a2d2ae4525cf49d69f7d6381f3450e84ad46baf123ab93",
          "md5": "7df72d827bb2d66be941f40e71d61a83",
          "sha256": "e5ea6a60fa97985e460e28aebffd8c37552fa26c0da952c4c5618abdedb1a4ed"
        },
        "downloads": -1,
        "filename": "ShortTextClustering-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7df72d827bb2d66be941f40e71d61a83",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9317,
        "upload_time": "2020-11-10T08:08:34",
        "upload_time_iso_8601": "2020-11-10T08:08:34.655637Z",
        "url": "https://files.pythonhosted.org/packages/92/8b/fa02af07fa86b1a2d2ae4525cf49d69f7d6381f3450e84ad46baf123ab93/ShortTextClustering-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "928bfa02af07fa86b1a2d2ae4525cf49d69f7d6381f3450e84ad46baf123ab93",
        "md5": "7df72d827bb2d66be941f40e71d61a83",
        "sha256": "e5ea6a60fa97985e460e28aebffd8c37552fa26c0da952c4c5618abdedb1a4ed"
      },
      "downloads": -1,
      "filename": "ShortTextClustering-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7df72d827bb2d66be941f40e71d61a83",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9317,
      "upload_time": "2020-11-10T08:08:34",
      "upload_time_iso_8601": "2020-11-10T08:08:34.655637Z",
      "url": "https://files.pythonhosted.org/packages/92/8b/fa02af07fa86b1a2d2ae4525cf49d69f7d6381f3450e84ad46baf123ab93/ShortTextClustering-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}