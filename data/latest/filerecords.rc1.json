{
  "info": {
    "author": "Noah H. Kleinschmidt",
    "author_email": "noah.kleinschmidt@students.unibe.ch",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n![](docs/source/logo_black.png)\n\n[![CodeFactor](https://www.codefactor.io/repository/github/noahhenrikkleinschmidt/filerecords/badge)](https://www.codefactor.io/repository/github/noahhenrikkleinschmidt/filerecords)\n[![Documentation Status](https://readthedocs.org/projects/filerecords/badge/?version=latest)](https://filerecords.readthedocs.io/en/latest/?badge=latest)\n\n`filerecords` is a python command line tool to better keep track of files and directories for data science projects (or any kind of big directory structure). \nIt works similar to GIT but instead of keeping track of the actual file contents it keeps a registry of comments and flags. This allows users to comment their important files and directories to add more detailed descriptions than just a good file name or directory name. \n\n![example](https://user-images.githubusercontent.com/89252165/188868989-3d9b0682-c455-4ff2-a36e-0113d7049c3a.gif)\n\n## Short overview\n\nThis is a brief listing of all commands. More details on their use can be found in the [documentation on readthedocs](https://filerecords.readthedocs.io/en/latest/).\n\nTo create a new registry within a directory use:\n\n```\nrecords init \n```\n\nTo add a comment about a file or directory use:\nThis will add *new* comments to file entries while preserving the old ones.\n\n```\nrecords comment the_file -c \"the comment\" -f flag1 flag2 ...\n```\n\nTo remove a file or directory from the registry use:\n(by default this will also remove the file in the filesystem!)\n\n```\nrecords rm the_file\n```\n\nTo move a file or directory while keeping the records use:\n(by default this will also move the file in the filesystem!)\n\n```\nrecords mv the_current_path the_new_path\n```\n\nTo remove/undo the last comment from a file or directory use:\n\n```\nrecords undo the_file\n```\n\nThis also works for flags:\n\n```\nrecords undo the_file -f the_flag_to_remove \n```\n\nTo get a file's records use:\n\n```\nrecords lookup the_file\n```\n\nthis will print the latest comment to the terminal.\n\nTo read the entire records of a file use:\n\n```\nrecord read the_file\n```\n\nTo search for files and directories based on flags or regex patterns use:\n\n```\nrecords list -f flag1 -e the_regex_pattern\n```\n\nThis can be restricted to files in the current working directory by:\n\n```\nrecords ls \n```\n\ninstead of the full `list` command.\n\nTo only add a flag (but no comment) to a file use:\n\n```\nrecords flag the_file -f flag1 \n```\n\n> This could also be achieved using\n>\n> ```\n> records comment the_file -f flag1 \n> ```\n\nTo define new flag groups to the registry use:\n\n```\nrecords flag -g group1 : flag1 flag2 -g group2 : flag3 flag4\n```\n\nTo remove all file records from the registry use:\n\n```\nrecords clear\n```\n\nTo completely remove a registry use:\n\n```\nrecords destroy\n```\n\nTo export the registry either in YAML or markdown format use:\n\n```\nrecords export yaml|md|both\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NoahHenrikKleinschmidt/filerecords",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "filerecords",
    "package_url": "https://pypi.org/project/filerecords/",
    "platform": null,
    "project_url": "https://pypi.org/project/filerecords/",
    "project_urls": {
      "Homepage": "https://github.com/NoahHenrikKleinschmidt/filerecords"
    },
    "release_url": "https://pypi.org/project/filerecords/0.0.1/",
    "requires_dist": [
      "pandas",
      "PyYAML"
    ],
    "requires_python": ">=3.6",
    "summary": "A command-line toolbox to keep file metadata in an organized and easily accessible way through comments and flags.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15143457,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ac1b99dafe6d94af2d78ec6f8472cb18a9dc1561c5b7cf3b52e08e98fa41714",
          "md5": "efb05565c498728d10b575fcb632fe07",
          "sha256": "1985a0150e4cccfaa52d5371efea08188f5e4c07415d258c0c415ead0a54293f"
        },
        "downloads": -1,
        "filename": "filerecords-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "efb05565c498728d10b575fcb632fe07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41241,
        "upload_time": "2022-09-19T13:24:21",
        "upload_time_iso_8601": "2022-09-19T13:24:21.578831Z",
        "url": "https://files.pythonhosted.org/packages/5a/c1/b99dafe6d94af2d78ec6f8472cb18a9dc1561c5b7cf3b52e08e98fa41714/filerecords-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "175ca4969c357113169c1a9d6140ef2299b7dcc35509f3eef14c4cec9b3bd3c4",
          "md5": "42678ed92562660a8a8875ab7eb40dc7",
          "sha256": "6fb9df45d057794f1b796a001c83170537bb9d77475076a1f04ba4ed288efce6"
        },
        "downloads": -1,
        "filename": "filerecords-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "42678ed92562660a8a8875ab7eb40dc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32308,
        "upload_time": "2022-09-19T13:24:23",
        "upload_time_iso_8601": "2022-09-19T13:24:23.979006Z",
        "url": "https://files.pythonhosted.org/packages/17/5c/a4969c357113169c1a9d6140ef2299b7dcc35509f3eef14c4cec9b3bd3c4/filerecords-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ac1b99dafe6d94af2d78ec6f8472cb18a9dc1561c5b7cf3b52e08e98fa41714",
        "md5": "efb05565c498728d10b575fcb632fe07",
        "sha256": "1985a0150e4cccfaa52d5371efea08188f5e4c07415d258c0c415ead0a54293f"
      },
      "downloads": -1,
      "filename": "filerecords-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "efb05565c498728d10b575fcb632fe07",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 41241,
      "upload_time": "2022-09-19T13:24:21",
      "upload_time_iso_8601": "2022-09-19T13:24:21.578831Z",
      "url": "https://files.pythonhosted.org/packages/5a/c1/b99dafe6d94af2d78ec6f8472cb18a9dc1561c5b7cf3b52e08e98fa41714/filerecords-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "175ca4969c357113169c1a9d6140ef2299b7dcc35509f3eef14c4cec9b3bd3c4",
        "md5": "42678ed92562660a8a8875ab7eb40dc7",
        "sha256": "6fb9df45d057794f1b796a001c83170537bb9d77475076a1f04ba4ed288efce6"
      },
      "downloads": -1,
      "filename": "filerecords-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "42678ed92562660a8a8875ab7eb40dc7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 32308,
      "upload_time": "2022-09-19T13:24:23",
      "upload_time_iso_8601": "2022-09-19T13:24:23.979006Z",
      "url": "https://files.pythonhosted.org/packages/17/5c/a4969c357113169c1a9d6140ef2299b7dcc35509f3eef14c4cec9b3bd3c4/filerecords-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}