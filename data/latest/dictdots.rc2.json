{
  "info": {
    "author": "Alex Lambson",
    "author_email": "support@alexlambson.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Utilities"
    ],
    "description": "# Python Dict Dots\n\n---\n\nA way access values in nested key-value dicts using dot notation, e.g.\n\nBefore:\n\n```python\ndata = None\nif needle in haystack:\n    if nested_needle in haystack[needle]:\n        data = haystack[needle][nested_needle]\n\nif not data:\n    data = default_data\n```\n\nAfter:\n\n```python\nfrom dictdots import DictDots\n\ndata = DictDots.get(\n    \"needle.nested_needle\", haystack, default=default_data\n)\n```\n\n# How to\n\n---\n\n- Run `pip install DictDots`\n- `from dictdots import DictDots`\n- `DictDots.get(\"needle\", haystack_dict, default=default_value)`\n\nDictDots supports `List` and `Dict`.\n\nFor example\n\n```python\nfrom dictdots import DictDots\nhaystack = [\n    {\n        \"needle\": {\n            \"nested\": \"you found me\",\n        },\n    },\n]\n\nvalue = DictDots.get(haystack, \"0.needle.nested\")\n\nprint(value)\n```\n\nWould output `you found me`.\n\nA valid query string is a string of keys and/or indicies, separated by periods.\nStrings can only contain alphanumeric characters, periods, and underscores.\nStrings can not contain double-or-more dots.\nStrings can not begin or end with a dot.\nEach period in the string will tell DictDots to dig another layer into your nested data structure.\nDict dots does not hold your hand, if you give it a bad string, e.g `_hello...world`, \nthen it will just raise an `InvalidQueryString`.\n\n# Future\n\n---\n\n[Query Language wishlist](docs/ddql.md)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alexlambson/python-dict-dots/",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DictDots",
    "package_url": "https://pypi.org/project/DictDots/",
    "platform": "",
    "project_url": "https://pypi.org/project/DictDots/",
    "project_urls": {
      "Homepage": "https://github.com/alexlambson/python-dict-dots/"
    },
    "release_url": "https://pypi.org/project/DictDots/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "DictDots is a tool to access nested dictionaries without long if-else chains.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12428169,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "316e98e00b084edbbe333d3c1ae48ea170e558e5e83b5745ddd0ce406090e91a",
          "md5": "19ff39ad3c660fdd4ce0f1d9369257bd",
          "sha256": "7dd7751086eedcdd2d0adeb2073ba7b3155367f486ed400114d726086c9373bb"
        },
        "downloads": -1,
        "filename": "DictDots-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "19ff39ad3c660fdd4ce0f1d9369257bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4612,
        "upload_time": "2021-12-21T19:59:27",
        "upload_time_iso_8601": "2021-12-21T19:59:27.558465Z",
        "url": "https://files.pythonhosted.org/packages/31/6e/98e00b084edbbe333d3c1ae48ea170e558e5e83b5745ddd0ce406090e91a/DictDots-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8b6321a33a278606ad02551c4ce964c8fc02620da254615542b549ea8105740",
          "md5": "8333d5d9fd369da06ed4621c2a592d5c",
          "sha256": "46eb7e904cb9ff0b8a7195e1f6a932afeb51d739e046cad2a6a13a494adef2d4"
        },
        "downloads": -1,
        "filename": "DictDots-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8333d5d9fd369da06ed4621c2a592d5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4785,
        "upload_time": "2021-12-29T03:20:04",
        "upload_time_iso_8601": "2021-12-29T03:20:04.430070Z",
        "url": "https://files.pythonhosted.org/packages/f8/b6/321a33a278606ad02551c4ce964c8fc02620da254615542b549ea8105740/DictDots-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8b6321a33a278606ad02551c4ce964c8fc02620da254615542b549ea8105740",
        "md5": "8333d5d9fd369da06ed4621c2a592d5c",
        "sha256": "46eb7e904cb9ff0b8a7195e1f6a932afeb51d739e046cad2a6a13a494adef2d4"
      },
      "downloads": -1,
      "filename": "DictDots-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8333d5d9fd369da06ed4621c2a592d5c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4785,
      "upload_time": "2021-12-29T03:20:04",
      "upload_time_iso_8601": "2021-12-29T03:20:04.430070Z",
      "url": "https://files.pythonhosted.org/packages/f8/b6/321a33a278606ad02551c4ce964c8fc02620da254615542b549ea8105740/DictDots-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}