{
  "info": {
    "author": "Guido Ferri",
    "author_email": "guido.ferri@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Fortune Cat\n\nLike the cow, but it's a cat (and has many more options). You can change the animal in a config file (to specify with -c) or with a dedicated file (-d).  \n\nTake a look [here](https://github.com/GuidoFe/bashCatWithKitten) if you would like to have a cat to decor your `cat` command.\n## Requirements\n\nPython 3.0+, necessary for a simpler unicode manipulation.\n\n## Examples\n\n![screen1](https://raw.githubusercontent.com/GuidoFe/fortune-cat/main/screen1.png)\n![screen2](https://github.com/GuidoFe/fortune-cat/blob/main/screen2.png)\n![screen3](https://raw.githubusercontent.com/GuidoFe/fortune-cat/main/screen3.png)\n\n## How to use\n\nBe sure to have Python3 and to make the script executable (`chmod +x ./catfortune.py`)\n\nYou can use it\n* With a pipe: `fortune | ./catfortune.py [OPTIONS]`\n* With a string: `./catfortune.py [OPTIONS] \"Hello\"`\n\n## Options\n\nUsage: `catfortune.py OPTIONS [text]`\n\nYou can rename the file and/or remove the extension if you want\n\n### File Options\n\n| Command                   | Description                                  |\n|---------------------------|----------------------------------------------|\n| `-d, --drawing-file FILE` | File with a custom cat/animal/thinghy        |\n| `-c, --config-file FILE`  | Custom config file.                          |\n\n### Drawing Options\n\n| Command                     | Description                                                                                                  |\n|-----------------------------|--------------------------------------------------------------------------------------------------------------|\n| `-tl, --top-left STR`       | Top left corner character                                                                                    |\n| `-tr, --top-right STR`      | Top right corner char                                                                                        |\n| `-bl, --bottom-left STR`    | Bottom left corner char                                                                                      |\n| `-br, --bottom-right STR`   | Bottom right corner char                                                                                     |\n| `-l, --left STR`            | Left box char                                                                                                |\n| `-r, --right STR`           | Right box char                                                                                               |\n| `-t, --top STR`             | Top box char                                                                                                 |\n| `-b, --bottom STR`          | Bottom box char                                                                                              |\n| `-p, --padding INT`         | Vertical padding of the entire output                                                                        |\n| `-cp, --cat-position FLOAT` | Position from 0 to 1 of the cat relative to the box. 0 = all to the left, 1 = all to the right, 0.5 = center |  \n| `-gp, --global-position INT`| Position like --cat-position, but of the entire output relative to the terminal   \n\n### Text Options\n\n| Command                       | Description                                                                                    |\n|-------------------------------|------------------------------------------------------------------------------------------------|\n| `-tph, --text-padding-h INT`  | Horizontal text padding                                                                        |\n| `-tpv, --text-padding-v INT`  | Vertical text padding                                                                          |\n| `-tb, --tab-length INT`       | How many spaces a tab in the input text should be. Default = 2                                 |\n| `-mtl, --max-text-length INT` | Set a maximum length for the text. Default is 0, that means it will only adapt to the terminal |\n\n### Other\n\n| Command           | Description                   |\n|-------------------|-------------------------------|\n| `-h, --help`      | Print a guide to the script   |\n\n\n## Configuration files\n\n### Drawing file\n\nIt's the file where you can create a custom cat. Specify its path with the option `-d`.  \n\n- The first line must be the number of characters of the longest line of the drawing.\n- The orher lines are those of the drawing. **There must be `OUTPUT` as one of the lines**: it separates the top and the bottom part of the ASCII art.\n\nExample:\n\n```\n8\n  ∧＿∧\n ( ･ω･)\n─∪────∪─\nOUTPUT\n━┯━━━━┯━\n |    |\n |    |\n  U  U\n```\n\n### Config File\n\nSpecify its path with `-c`. It contains the same arguments as the command line options. You must specify them in a single line.  \nYou can optionally specify a custom drawing after the first line, with the same format as the drawing file. The latter will have precedence over the ASCII art in the config file.\n\nExample:\n```\n-tl ┌ -tph 3 -tpv 5 -l |\n8\n  ∧＿∧\n ( -.-)\n─∪────∪─\nOUTPUT\n━┯━━━━┯━\n |    |\n |    |\n  U  U\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GuidoFe/fortune-cat",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fortune-cat",
    "package_url": "https://pypi.org/project/fortune-cat/",
    "platform": "",
    "project_url": "https://pypi.org/project/fortune-cat/",
    "project_urls": {
      "Homepage": "https://github.com/GuidoFe/fortune-cat"
    },
    "release_url": "https://pypi.org/project/fortune-cat/1.1/",
    "requires_dist": null,
    "requires_python": ">=3.0",
    "summary": "A cat that will show a fortune message when piped to it.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8854066,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25e7d266636f1ad672dc4ff8fcae102e8bc07de5f46b1452e1b9798395933077",
          "md5": "ec3947020cccb25526d26e6eccad44f4",
          "sha256": "fe8c6bf9dfbb9df3fd58056f3dac21d01d2dbb2e7005eb73964cdb362880c239"
        },
        "downloads": -1,
        "filename": "fortune_cat-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec3947020cccb25526d26e6eccad44f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 18146,
        "upload_time": "2020-12-09T00:47:43",
        "upload_time_iso_8601": "2020-12-09T00:47:43.984307Z",
        "url": "https://files.pythonhosted.org/packages/25/e7/d266636f1ad672dc4ff8fcae102e8bc07de5f46b1452e1b9798395933077/fortune_cat-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "beb49c37b79cbe7662823b3942fcf0ca738182dd6dc48b79d3e10a2fd6e094ef",
          "md5": "c8166a966b6ab425b6b8ed34d50c2c0c",
          "sha256": "40c5c6446dec8cc0b6e9f93aa0ef0314cb0ae51d4cd69d1e67be60c67c11f787"
        },
        "downloads": -1,
        "filename": "fortune-cat-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c8166a966b6ab425b6b8ed34d50c2c0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 5535,
        "upload_time": "2020-12-09T00:47:46",
        "upload_time_iso_8601": "2020-12-09T00:47:46.671392Z",
        "url": "https://files.pythonhosted.org/packages/be/b4/9c37b79cbe7662823b3942fcf0ca738182dd6dc48b79d3e10a2fd6e094ef/fortune-cat-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25e7d266636f1ad672dc4ff8fcae102e8bc07de5f46b1452e1b9798395933077",
        "md5": "ec3947020cccb25526d26e6eccad44f4",
        "sha256": "fe8c6bf9dfbb9df3fd58056f3dac21d01d2dbb2e7005eb73964cdb362880c239"
      },
      "downloads": -1,
      "filename": "fortune_cat-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ec3947020cccb25526d26e6eccad44f4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 18146,
      "upload_time": "2020-12-09T00:47:43",
      "upload_time_iso_8601": "2020-12-09T00:47:43.984307Z",
      "url": "https://files.pythonhosted.org/packages/25/e7/d266636f1ad672dc4ff8fcae102e8bc07de5f46b1452e1b9798395933077/fortune_cat-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "beb49c37b79cbe7662823b3942fcf0ca738182dd6dc48b79d3e10a2fd6e094ef",
        "md5": "c8166a966b6ab425b6b8ed34d50c2c0c",
        "sha256": "40c5c6446dec8cc0b6e9f93aa0ef0314cb0ae51d4cd69d1e67be60c67c11f787"
      },
      "downloads": -1,
      "filename": "fortune-cat-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c8166a966b6ab425b6b8ed34d50c2c0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 5535,
      "upload_time": "2020-12-09T00:47:46",
      "upload_time_iso_8601": "2020-12-09T00:47:46.671392Z",
      "url": "https://files.pythonhosted.org/packages/be/b4/9c37b79cbe7662823b3942fcf0ca738182dd6dc48b79d3e10a2fd6e094ef/fortune-cat-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}