{
  "info": {
    "author": "Ashton Szabo",
    "author_email": "ashton.szabo@rakuten.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# API automated testing in Python\nThis is a starting point for automating API's in Python using the pytest and the AIOHTTP or HTTPX libraries on macOS.\n\n## Required dependencies\nIn the terminal run\n\n1. `/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"`\n2. `brew install pyenv`\n3. `PYTHON_CONFIGURE_OPTS=\"--enable-framework\" pyenv install 3.10.3 && pyenv global 3.10.3 && echo export PATH=\"$(pyenv root)/shims:$PATH\" >> ~/.bash_profile && . ~/.bash_profile && pip install pipenv`\n\n## Pip Installation\nIn the terminal\n\n1. Cd into the root of your test project\n2. Run [`pip install api-automation-tools`](https://pypi.org/project/api-automation-tools/)\n\n## Local Setup\nIn the terminal\n\n1. Fork and clone this repository\n2. Cd into the root of your test project\n3. Run `pip install -e path_to_apiautomationtools`\n\n## Usage\n### Helpers\n```\nimport apiautomationtools.helpers.dictionary_helpers as dh\nimport apiautomationtools.helpers.directory_helpers as dh\nimport apiautomationtools.helpers.json_helpers as js\n```\n\n### Pytest\nThis class setup creates boilerplate data directories for tests and credentials. The teardown performs \nvalidations and organizational restructuring on any test generated data.\n```\nimport pytest\nfrom apiautomationtools.pytest import ApiPytestHelper\n\nclass SomeBasePytest(ApiPytestHelper):\n\n    @pytest.fixture\n    def test_app(self, ...):\n        ...\n```\n\n### Requests with AIOHTTP or HTTPX\nThese classes wrap easy to use methods for making async requests. All the standard requests request\narguments are still applicable. As requests are completed, their data is saved in two csv files. One \ncsv file contains the actual data sent, while the other contains a scrubbed set of data. The scrubbed \ncsv file can be stored and used for reference validation of subsequent runs.\n```\nfrom apiautomationtools.client import AsyncRequests, HttpxRequests\n\naiohttp_requests = AsyncRequests()\nhttpx_requests = HttpxRequests()\n\nbatch = {'method': 'get', 'headers': {...}, 'url': '...', ...any classic requests arguments}\nresponse = aiohttp_requests.request(batch)\nresponse = httpx_requests.request(batch)\n\nor\n\nbatch = [{'method': 'get', ...}, ...]\nresponses = aiohttp_requests.request(batch)\nresponses = httpx_requests.request(batch)\n\nor \n\nbatch = generate_batch(\"get\", {...}, \"https://httpbin.org/get\")\nresponse = aiohttp_requests.request(batch)\nresponse = httpx_requests.request(batch)\n\nNote: You can indicate where the batch generator will start looking for path parameters by placing\n      a semicolon (;) where the path parameters start e.g. https://httpbin.org/get;/param/value.\n```\n\n### Validations\nThis class performs a difference between scrubbed csv files of the stored and live data generated from \nthe responses of the request method. Any mismatches can be raised as errors.\n```\nfrom apiautomationtools.validations import Validations\n\nvalidations = Validations()\nmismatches = validations.validate_references()\nmismatches = validations.validate_references(actual_refs={...})\nmismatches => [{'keys': ..., 'actual_refs': {...}, 'expected_refs': {...}, 'unscrubbed_refs': {...}}, ...]\n```\n\n### Examples\nAn example of a test illustrating single and batch style requests - \n[test_get_example.py](examples/test_get_example.py)\n\nAn example of a base class showing setups and teardowns - \n[api_base_pytest_example.py](examples/api_base_pytest_example.py)\n\nAn example of the csv report file generated from running the test - \n[get_example.csv](examples/run_info/run_logs/pass/get_example.csv)\n\nAn example of the scrubbed csv report file generated from running the test - \n[get_example_scrubbed.csv](examples/run_info/run_logs/pass/get_example_scrubbed.csv)\n\nAn example of the log file generated from running the test - \n[get_example.log](examples/run_info/run_logs/pass/get_example.log)\n\nAn example of the error csv report file generated from running the test - \n[get_example_errors.csv](examples/run_info/run_errors/get_example_errors.csv)\n\n### Directory structure\nThis package requires the following base structure for the project.\n```\n.\n├── credentials                         # Optional - credentials\n│   └── credentials.json                # Optional - credentials as json\n├── tests                               # Required - test files\n│   ├── data                            # Optional - test data\n│   │   └── data.json                   # Optional - test data as json\n│   └── test_file.py                    # Required - pytest test\n└── validations                         # Optional - validation data\n    └── file.json                       # Optional - validation data as json (The validation file's are scrubbed files \n                                                     autogenerated from test runs. However, the validation files \n                                                     organizational structure much match the structure of the test \n                                                     files in the tests directory.)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rakutentech/api-automation-tools",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "api-automation-tools",
    "package_url": "https://pypi.org/project/api-automation-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/api-automation-tools/",
    "project_urls": {
      "Homepage": "https://github.com/rakutentech/api-automation-tools"
    },
    "release_url": "https://pypi.org/project/api-automation-tools/2.0.0/",
    "requires_dist": [
      "pytest",
      "pytest-xdist",
      "aiohttp",
      "pypeln",
      "numpy",
      "orjson",
      "httpx",
      "pytest-asyncio"
    ],
    "requires_python": ">=3.10",
    "summary": "Tools for API automation",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14420051,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ec43b4df884d8ffe72aa8fc257321869ad779215159d75e7fd4a1a7eab2cef6",
          "md5": "4ceb27b21e9bbb3ea173445e6552bfbd",
          "sha256": "4ef181c9da2d00a236a7066181a3e620d00dbdae66012db9abdc3795e7c601f1"
        },
        "downloads": -1,
        "filename": "api_automation_tools-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ceb27b21e9bbb3ea173445e6552bfbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21273,
        "upload_time": "2022-03-10T02:30:47",
        "upload_time_iso_8601": "2022-03-10T02:30:47.003684Z",
        "url": "https://files.pythonhosted.org/packages/1e/c4/3b4df884d8ffe72aa8fc257321869ad779215159d75e7fd4a1a7eab2cef6/api_automation_tools-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "900363be0f75f42cff7120fc91d1c76d276ec37111189851cf529d13a3a2dc10",
          "md5": "70c6b09639b83492ccd1d9e8d553e201",
          "sha256": "e1b0a694139b48e9542c7b66d2bfa6f2563867fe54bc08fc94c9014e96db0515"
        },
        "downloads": -1,
        "filename": "api-automation-tools-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "70c6b09639b83492ccd1d9e8d553e201",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17087,
        "upload_time": "2022-03-10T02:30:49",
        "upload_time_iso_8601": "2022-03-10T02:30:49.046130Z",
        "url": "https://files.pythonhosted.org/packages/90/03/63be0f75f42cff7120fc91d1c76d276ec37111189851cf529d13a3a2dc10/api-automation-tools-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49e23c6254fce47038b25dcd87ff9f853ef6112db04888481a03f760d38370da",
          "md5": "71bdad88bba777348c184603c3e6fd3c",
          "sha256": "3e273c4d08e7573ebfc6850b9bf3fca462178a0464d90a8a2267b26111401f24"
        },
        "downloads": -1,
        "filename": "api_automation_tools-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71bdad88bba777348c184603c3e6fd3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 43116,
        "upload_time": "2022-07-13T08:50:02",
        "upload_time_iso_8601": "2022-07-13T08:50:02.980833Z",
        "url": "https://files.pythonhosted.org/packages/49/e2/3c6254fce47038b25dcd87ff9f853ef6112db04888481a03f760d38370da/api_automation_tools-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7bc778e66e1f6633667165447b270f752554ad4e5247e29babaa628e9af70c4",
          "md5": "0053be9e3ea5a0f826bf685aa112ab0c",
          "sha256": "89e1167f9c8f1ef6977697c89cb6210efb77f516d9aa37c1ddc9e7664cbbac6c"
        },
        "downloads": -1,
        "filename": "api-automation-tools-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0053be9e3ea5a0f826bf685aa112ab0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 27658,
        "upload_time": "2022-07-13T08:50:04",
        "upload_time_iso_8601": "2022-07-13T08:50:04.540365Z",
        "url": "https://files.pythonhosted.org/packages/a7/bc/778e66e1f6633667165447b270f752554ad4e5247e29babaa628e9af70c4/api-automation-tools-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49e23c6254fce47038b25dcd87ff9f853ef6112db04888481a03f760d38370da",
        "md5": "71bdad88bba777348c184603c3e6fd3c",
        "sha256": "3e273c4d08e7573ebfc6850b9bf3fca462178a0464d90a8a2267b26111401f24"
      },
      "downloads": -1,
      "filename": "api_automation_tools-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "71bdad88bba777348c184603c3e6fd3c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 43116,
      "upload_time": "2022-07-13T08:50:02",
      "upload_time_iso_8601": "2022-07-13T08:50:02.980833Z",
      "url": "https://files.pythonhosted.org/packages/49/e2/3c6254fce47038b25dcd87ff9f853ef6112db04888481a03f760d38370da/api_automation_tools-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7bc778e66e1f6633667165447b270f752554ad4e5247e29babaa628e9af70c4",
        "md5": "0053be9e3ea5a0f826bf685aa112ab0c",
        "sha256": "89e1167f9c8f1ef6977697c89cb6210efb77f516d9aa37c1ddc9e7664cbbac6c"
      },
      "downloads": -1,
      "filename": "api-automation-tools-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0053be9e3ea5a0f826bf685aa112ab0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 27658,
      "upload_time": "2022-07-13T08:50:04",
      "upload_time_iso_8601": "2022-07-13T08:50:04.540365Z",
      "url": "https://files.pythonhosted.org/packages/a7/bc/778e66e1f6633667165447b270f752554ad4e5247e29babaa628e9af70c4/api-automation-tools-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}