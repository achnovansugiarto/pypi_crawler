{
  "info": {
    "author": "Artyom Viktorovich Kozyrev",
    "author_email": "kozirev8@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Internet",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n[![UNITTESTS](https://github.com/ArtyomKozyrev8/BucketRateLimiter/actions/workflows/unittests.yml/badge.svg)](https://github.com/ArtyomKozyrev8/BucketRateLimiter/actions/workflows/unittests.yml)\n[![codecov](https://codecov.io/gh/ArtyomKozyrev8/BucketRateLimiter/branch/main/graph/badge.svg?token=7LHFJ0UJYQ)](https://codecov.io/gh/ArtyomKozyrev8/BucketRateLimiter)\n[![MyPy](https://github.com/ArtyomKozyrev8/BucketRateLimiter/actions/workflows/mypy.yml/badge.svg)](https://github.com/ArtyomKozyrev8/BucketRateLimiter/actions/workflows/mypy.yml)\n\n# BucketRateLimiter\n\n**bucketratelimiter** is the collection of rate limiters, which are based on **Bucket** conception.\n\n\n### How to install:\n\n`pip install bucketratelimiter`\n\n### Examples:\n\nYou can find complete examples on how to use `AsyncioBucketTimeRateLimiter` and `MThreadedBucketTimeRateLimiter` in\nfolder **examples** of this repository. Also you can check **tests** folder and get some tricks from unittests.\n\n### How to use:\n\n##### Create rate limiter:\n\n```python\nfrom bucketratelimiter import AsyncioBucketTimeRateLimiter\n\n# max_size = 4 and recovery_time = 1.0\n# means that we would like to limit something to 4 attempts per second\n# max_size - is a size of internal bucket\n# recovery_time - time to make bucket full again\n# rest_time - is the time to sleep for workers which can not proceed further due to rate limiter\n# callback - is a function which should be called after task will be completed\nASYNC_LIMITER = AsyncioBucketTimeRateLimiter(\n    max_size=4,\n    recovery_time=1.0,\n    rest_time=0.2,\n    callback=None,\n)\n``` \n\n```python\nfrom bucketratelimiter import MThreadedBucketTimeRateLimiter\n\nASYNC_LIMITER = MThreadedBucketTimeRateLimiter(\n    max_size=4,\n    recovery_time=1.0,\n    rest_time=0.2,\n    callback=None,\n)\n``` \n\n##### \"Wrap\" some function in ratelimiter:\n\n```python\nimport asyncio\nfrom bucketratelimiter import AsyncioBucketTimeRateLimiter\n\nlimiter = AsyncioBucketTimeRateLimiter()\n\n@limiter # we use decorator to limit the function to a certain number of attempts per second\nasync def some_func_to_limit(sleep_time: float = 1.0) -> None:\n    await asyncio.sleep(sleep_time)\n```\n\n\n```python\nimport time\nfrom bucketratelimiter import MThreadedBucketTimeRateLimiter\n\nlimiter = MThreadedBucketTimeRateLimiter()\n\n@limiter # we use decorator to limit the function to a certain number of attempts per second\ndef some_func_to_limit(sleep_time: float = 1.0) -> None:\n    time.sleep(sleep_time)\n```\n\n##### Activate ratelimiter logic:\n\n```python\nlimiter = AsyncioBucketTimeRateLimiter()\n\nasync def main_entry_point() -> None:\n    \"\"\"Main entry point of our asyncio app.\"\"\"\n    q = asyncio.Queue()\n    for task in TASKS_TO_COMPLETE:\n        await q.put(task)\n\n    # use LIMITER as context manager to ensure its correct activation and end of work\n    async with limiter:\n        for w in [worker(q) for _ in range(1, WORKER_NUM + 1)]:\n            asyncio.create_task(w)\n\n        await q.join()\n```\n\n```python\nlimiter = MThreadedBucketTimeRateLimiter()\n\ndef main_entry_point() -> None:\n    \"\"\"Main entry point of our multithreading app.\"\"\"\n    q = Queue()\n    for task in TASKS_TO_COMPLETE:\n        q.put(task)\n\n    # use LIMITER as context manager to ensure its correct activation and end of work\n    with LIMITER:\n        for _ in range(1, WORKER_NUM + 1):\n            Thread(target=worker, args=(q, ), daemon=True).start()\n\n        q.join()\n```\n\n### HOW TO USE LOW LEVEL API:\n\n##### Use without context manager:\n\n```python\n# Use RateLimiter's method to activate and deactivate it's inner logic\n# instead of using context managers\ntry:\n    limiter.activate()\nfinally:\n    limiter.deactivate()\n```\n\n##### Use without functions decoration:\n\n```python\nimport asyncio\nfrom bucketratelimiter import AsyncioBucketTimeRateLimiter\n\nlimiter = AsyncioBucketTimeRateLimiter()\n\nasync def some_func_to_limit(sleep_time: float = 1.0) -> None:\n    await asyncio.sleep(sleep_time)\n...\nasync with limiter:\n    await limiter.wrap_operation(some_func_to_limit, sleep_time=1.0)\n\n# ATTENTION !\n# Do not use wrap_operation to some function more than once\n# Do not apply decorator to some function if you use wrap_operation\n# It can lead to unexpected results\n```\n\n```python\nimport time\nfrom bucketratelimiter import MThreadedBucketTimeRateLimiter\n\nlimiter = MThreadedBucketTimeRateLimiter()\n\ndef some_func_to_limit(sleep_time: float = 1.0) -> None:\n    time.sleep(sleep_time)\n...\nwith limiter:\n    limiter.wrap_operation(some_func_to_limit, sleep_time=1.0)\n```\n\n### FOR CONTRIBUTORS:\n\nClone the project:\n```commandline\nhttps://github.com/ArtyomKozyrev8/BucketRateLimiter.git\ncd BucketRateLimiter\n```\nCreate a new virtualenv:\n```commandline\npython3 -m venv env\nsource env/bin/activate\n```\nInstall all requirements:\n```commandline\npip install -e '.[develop]'\n```\n\n**Run Tests:**\n\n\n```commandline\nmypy --strict bucketratelimiter\n\npytest --cov=bucketratelimiter tests/\n\ncoverage report\n\ncoverage html\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GNU GENERAL PUBLIC LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bucketratelimiter",
    "package_url": "https://pypi.org/project/bucketratelimiter/",
    "platform": "all",
    "project_url": "https://pypi.org/project/bucketratelimiter/",
    "project_urls": {
      "Documentation": "https://github.com/ArtyomKozyrev8/BucketRateLimiter/",
      "Source": "https://github.com/ArtyomKozyrev8/BucketRateLimiter/"
    },
    "release_url": "https://pypi.org/project/bucketratelimiter/1.0.0/",
    "requires_dist": [
      "mypy ; extra == 'develop'",
      "pytest-cov ; extra == 'develop'",
      "pytest-asyncio ; extra == 'develop'"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Collection of BucketRateLimiters. Allows to limit number of ops to the certain number.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14882788,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a7268df824bf715cffca853ca5d184bb5c8980bfd35486d3fcdd0cece8d0095",
          "md5": "fd58f02d8efd25deb080f4b9e3fde444",
          "sha256": "55d7f254358eba56c202d172a9f69ee69f8d1615722aa5e7b9d6424679ab7059"
        },
        "downloads": -1,
        "filename": "bucketratelimiter-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd58f02d8efd25deb080f4b9e3fde444",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 20044,
        "upload_time": "2022-08-25T17:36:04",
        "upload_time_iso_8601": "2022-08-25T17:36:04.145652Z",
        "url": "https://files.pythonhosted.org/packages/0a/72/68df824bf715cffca853ca5d184bb5c8980bfd35486d3fcdd0cece8d0095/bucketratelimiter-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aafe5200530eee2a6b41e5fbbc711f1556dab732aba086497d19e2d7e734122e",
          "md5": "66c04ed7801cc1ce9debb6d5c219ef4d",
          "sha256": "9a30bd9622f23f0e5aab7fe2a3904f5a44aa2051254eb49d8ead490265f56341"
        },
        "downloads": -1,
        "filename": "bucketratelimiter-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "66c04ed7801cc1ce9debb6d5c219ef4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 19553,
        "upload_time": "2022-08-25T17:36:06",
        "upload_time_iso_8601": "2022-08-25T17:36:06.275808Z",
        "url": "https://files.pythonhosted.org/packages/aa/fe/5200530eee2a6b41e5fbbc711f1556dab732aba086497d19e2d7e734122e/bucketratelimiter-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b69f4acc9a6427f71b6c2425ef2c1824f678354575605799e71d7282142baab2",
          "md5": "c267871231265294402ca2503429fdce",
          "sha256": "fc3b003318efaf5db6fd30552c21bf57efb0bf675d1579b2af81e527d9e4c301"
        },
        "downloads": -1,
        "filename": "bucketratelimiter-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c267871231265294402ca2503429fdce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 19961,
        "upload_time": "2022-08-25T18:10:02",
        "upload_time_iso_8601": "2022-08-25T18:10:02.085315Z",
        "url": "https://files.pythonhosted.org/packages/b6/9f/4acc9a6427f71b6c2425ef2c1824f678354575605799e71d7282142baab2/bucketratelimiter-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a83a0620e53e12b449f523c08b890ed57aed26ac15bbe11dbb500fd2b7a361b",
          "md5": "e3d85c0a34701984c07b4afa478f31df",
          "sha256": "b8fa596ad9549affc3f666280a33c9c8afaa5d103ae17c072d0dc7ec0e4aa79d"
        },
        "downloads": -1,
        "filename": "bucketratelimiter-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3d85c0a34701984c07b4afa478f31df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 19434,
        "upload_time": "2022-08-25T18:10:03",
        "upload_time_iso_8601": "2022-08-25T18:10:03.695634Z",
        "url": "https://files.pythonhosted.org/packages/2a/83/a0620e53e12b449f523c08b890ed57aed26ac15bbe11dbb500fd2b7a361b/bucketratelimiter-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b69f4acc9a6427f71b6c2425ef2c1824f678354575605799e71d7282142baab2",
        "md5": "c267871231265294402ca2503429fdce",
        "sha256": "fc3b003318efaf5db6fd30552c21bf57efb0bf675d1579b2af81e527d9e4c301"
      },
      "downloads": -1,
      "filename": "bucketratelimiter-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c267871231265294402ca2503429fdce",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 19961,
      "upload_time": "2022-08-25T18:10:02",
      "upload_time_iso_8601": "2022-08-25T18:10:02.085315Z",
      "url": "https://files.pythonhosted.org/packages/b6/9f/4acc9a6427f71b6c2425ef2c1824f678354575605799e71d7282142baab2/bucketratelimiter-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a83a0620e53e12b449f523c08b890ed57aed26ac15bbe11dbb500fd2b7a361b",
        "md5": "e3d85c0a34701984c07b4afa478f31df",
        "sha256": "b8fa596ad9549affc3f666280a33c9c8afaa5d103ae17c072d0dc7ec0e4aa79d"
      },
      "downloads": -1,
      "filename": "bucketratelimiter-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e3d85c0a34701984c07b4afa478f31df",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 19434,
      "upload_time": "2022-08-25T18:10:03",
      "upload_time_iso_8601": "2022-08-25T18:10:03.695634Z",
      "url": "https://files.pythonhosted.org/packages/2a/83/a0620e53e12b449f523c08b890ed57aed26ac15bbe11dbb500fd2b7a361b/bucketratelimiter-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}