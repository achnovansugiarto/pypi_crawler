{
  "info": {
    "author": "jisaacstone",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Linter and parser for .sfz files\n\nCLI programs are mostly done.\n\nIncludes the `sfzlint` and `sfzlist` command line utilities\n`sfzlint` will parse and validate sfzfiles. If a directory is passed it will be recursivly searched for sfz files.\n\n    $ sfzlint path/to/file.sfz\n    path/to/file.sfz:60:11:W continuous not one of ['no_loop', 'one_shot', 'loop_continuous', 'loop_sustain'] (loop_mode)\n    path/to/file.sfz:98:18:W 8400 not in range -1 to 1 (fileg_depthccN)\n    path/to/file.sfz:107:12:E expected integer got 0.1 (lfoN_freq)\n    path/to/file.sfz:240:1:W unknown opcode (ampeg_sustain_curveccN)\n\n`sfzlist` will print a list of known opcodes and metadata to stdout. Callig with `--path` will cause it to print opcodes found in that path\n\n    $ sfzlist --path /sfz/instra/Scarypiano/\n    amplitude_onccN aria Range(0,100) modulates=amplitude\n    lokey v1 Range(0,127)\n    ampeg_release_onccN v2 Alias(ampeg_releaseccN)\n    label_ccN aria Any()\n    bend_up v1 Range(-9600,9600)\n\nOpcode data is from [sfzformat.com](https://sfzformat.com/). If you see a bug in `syntax.yml` consider putting you PR\nagainst [the source](https://github.com/sfzformat/sfzformat.github.io/blob/source/_data/sfz/syntax.yml)\n\n## Features\n\n* syntax validation\n* checks opcodes against known opcodes on sfzformat.com\n* validates opcode values when min or max or type are defined in the spec\n* validates `*_curvecc` values above 7 have a corresponding `<curve>` header\n* checks that sample files exists, also checks that case matches for portability with case-sensitive filesystems\n* pulls in #includes and replaces vars from #defines\n* validation based on aria .xml files\n\n### HowTo\n\nIf you have a project that is seperated into several `.sfz` files using `#include` macros\nExample:\n\n    instra.sfz\n    samples/\n       a#1.wav\n       b1.wav\n       ...\n    includes/\n       piano.sfz\n       forte.sfz\n       ...\n\nTo validate the whole project you can use `sfzlint --check-includes instra.sfz`.\nRunning sfzlint against a program `.xml` file will check includes by default.\nIf you run `sfzlint includes/piano.sfz` and `piano.sfz` has some sample opcodes you may get file not found errors.\nTo fix this run with `--rel-path`\n\n`sfzlint includes/piano.sfz --rel-path .`\n\n## Installing\n\nI've not put this on pypi yet. You can install with pip\n\n    pip install pyyaml\n    pip install git+git://github.com/jisaacstone/sfzlint.git\n\nOr clone the repo and use `python setup.py install`\n\nBoth methods require python version >= 3.6\n\n## To use with vim/neomake:\n\n(This is what I built this thing for)\n\nput the following in your .vimrc:\n\n    au BufNewFile,BufRead *.sfz set filetype=sfz\n    let g:neomake_sfz_enabled_makers=['sfzlint']\n    let g:neomake_sfzlint_maker = {'exe': 'sfzlint', 'errorformat': '%f:%l:%c:%t %m'}\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jisaacstone/sfzlint",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sfzlint",
    "package_url": "https://pypi.org/project/sfzlint/",
    "platform": null,
    "project_url": "https://pypi.org/project/sfzlint/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jisaacstone/sfzlint/issues",
      "Homepage": "https://github.com/jisaacstone/sfzlint"
    },
    "release_url": "https://pypi.org/project/sfzlint/0.1.4/",
    "requires_dist": [
      "appdirs",
      "lark-parser (>=0.7.8)",
      "pyyaml (>=6.0.0)"
    ],
    "requires_python": ">3.6",
    "summary": "parser and linter for sfz files written in python",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13261643,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a92a1af32468aa0adc931cc7d48d07287a893ee49596ad597eda2a56b1f6948f",
          "md5": "5ee8b60112eca3a1e3d3187c2f920786",
          "sha256": "079f0cab084869e746d65c244b730921f3993fd827116d0aeedfda8ecc8d0b81"
        },
        "downloads": -1,
        "filename": "sfzlint-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ee8b60112eca3a1e3d3187c2f920786",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 32207,
        "upload_time": "2022-03-23T01:22:34",
        "upload_time_iso_8601": "2022-03-23T01:22:34.124838Z",
        "url": "https://files.pythonhosted.org/packages/a9/2a/1af32468aa0adc931cc7d48d07287a893ee49596ad597eda2a56b1f6948f/sfzlint-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38406e8794f3e79ab85dda6b1b2ab3376fdf8f1f9737eb53430f3c238e3b0e51",
          "md5": "1b0d86ff574c8d4d49cf870b74ebdc36",
          "sha256": "d9fdf7549288868d6b9a51489b163c06d733dceca904a3a1059abb455cd8e60f"
        },
        "downloads": -1,
        "filename": "sfzlint-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1b0d86ff574c8d4d49cf870b74ebdc36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 30913,
        "upload_time": "2022-03-23T01:22:35",
        "upload_time_iso_8601": "2022-03-23T01:22:35.719439Z",
        "url": "https://files.pythonhosted.org/packages/38/40/6e8794f3e79ab85dda6b1b2ab3376fdf8f1f9737eb53430f3c238e3b0e51/sfzlint-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a92a1af32468aa0adc931cc7d48d07287a893ee49596ad597eda2a56b1f6948f",
        "md5": "5ee8b60112eca3a1e3d3187c2f920786",
        "sha256": "079f0cab084869e746d65c244b730921f3993fd827116d0aeedfda8ecc8d0b81"
      },
      "downloads": -1,
      "filename": "sfzlint-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5ee8b60112eca3a1e3d3187c2f920786",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.6",
      "size": 32207,
      "upload_time": "2022-03-23T01:22:34",
      "upload_time_iso_8601": "2022-03-23T01:22:34.124838Z",
      "url": "https://files.pythonhosted.org/packages/a9/2a/1af32468aa0adc931cc7d48d07287a893ee49596ad597eda2a56b1f6948f/sfzlint-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38406e8794f3e79ab85dda6b1b2ab3376fdf8f1f9737eb53430f3c238e3b0e51",
        "md5": "1b0d86ff574c8d4d49cf870b74ebdc36",
        "sha256": "d9fdf7549288868d6b9a51489b163c06d733dceca904a3a1059abb455cd8e60f"
      },
      "downloads": -1,
      "filename": "sfzlint-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "1b0d86ff574c8d4d49cf870b74ebdc36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.6",
      "size": 30913,
      "upload_time": "2022-03-23T01:22:35",
      "upload_time_iso_8601": "2022-03-23T01:22:35.719439Z",
      "url": "https://files.pythonhosted.org/packages/38/40/6e8794f3e79ab85dda6b1b2ab3376fdf8f1f9737eb53430f3c238e3b0e51/sfzlint-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}