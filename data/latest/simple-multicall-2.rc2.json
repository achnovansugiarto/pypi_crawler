{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Simple Web3 Multicall\n\nA multicall for use with pure Web3.py library.\nIt uses MakerDao Multicall smart contract by default,\nbut also can use any custom multicall smart contract\nthat implements \"tryBlockAndAggregate\" function.\n\nMain urge for developmenet such a package was when I was needed to use multicall in my project\nbased on Web3.py, but found only libraries which work with Brownie, not on pure Web3.py.\n\n    pip install simple-multicall-2\n\n## Package Content\n\n- class Multicall - The main multicall class that executes a multicall itself.\n\n- constants file makerdao_multicall - contains a default MakerDao multicall smart contract ABI and a dictionary of addresses of multicall contracts deployed on different chains.\n\n### class Multicall\n\nThe main multicall class. Should be initialized by passing a Web3 instance with specified chain RPC provider.\n\nHas two methods:\n\n_call_ - executes a multicall\n\n_create_call_ - prepare a tuple for a list of calls to be passed to a _call_ method\n\n**Attributes**\n\n_w3_ : Web3 class instanse\n\n_chain_: str\nThe name of one of defined chains\nwhere MakerDao Multicall smart contract is deployed.\nCan be one of the followings\n\n- 'mainnet'\n- 'kovan'\n- 'rinkeby'\n- 'goerli'\n- 'ropsten'\n\n_custom_address_: str - An address of custom multicall smart contract.\nIf specified, MakerDao Multicall smart contract will be omited.\n\n_custom_abi_: str - An ABI of custom multicall smart contract.\nIf omited, MakerDao Multicall smart contract ABI will be used.\n\n**Methods**\n\n_call()_ - Executes multicall for specified list of smart contracts functions.\n\nParameters:\n\ncalls: list(tuple) - list of tuples (target contract address, encoded function name with parameters)\nCan be easy prepared via using Multicall.create_cal' method.\n\nReturns:\n\ntuple(block number, list(results)) for default MakerDao multicall. May vary for custom multicalls.\n\n_create_call()_ - Prepares a tuple for passing to Multicall.call list.\n\nParameters:\n\ncontract: web3.eth.Contract - A web3.eth.Contract instance of a contract\nthat is to be called via multicall.\n\nfn_name: str - The name of a contract function to be called.\n\nargs: list - a list of arguments to be passed to a called contract function.\n\nReturns:\n\ntuple(target contract address, encoded function name with parameters)\n\n## Example\n\nMulticall of three ERC20 tokens of a specified EthDev _address_.\n\nImporting Web3\n\n    >>> from web3 import Web3\n\nDefining constants: ERC20 token ABI token mainnet addresses.\n\n    # ERC20 ABI string is cropped for readability\n    >>> ERC20_ABI = '[{\"constant\":true,\"inputs\":[],\"name\":\"name\", ...\n\n    >>> USDT_ADDRESS = Web3.toChecksumAddress('0xdAC17F958D2ee523a2206206994597C13D831ec7')\n    >>> USDC_ADDRESS = Web3.toChecksumAddress('0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48')\n    >>> BNB_ADDRESS = Web3.toChecksumAddress('0xB8c77482e45F1F44dE1745F52C74426C631bDD52')\n\nInitializing web3 instance.\n\n    >>> ETH_PROVIDER_URL = 'https://rpc.ankr.com/eth'\n    >>> w3 = Web3(Web3.HTTPProvider(ETH_PROVIDER_URL))\n\nCreating token Web3 contracts.\n\n    >>> USDT = w3.eth.contract(address=USDT_ADDRESS, abi=ERC20_ABI)\n    >>> USDC = w3.eth.contract(address=USDC_ADDRESS, abi=ERC20_ABI)\n    >>> BNB = w3.eth.contract(address=BNB_ADDRESS, abi=ERC20_ABI)\n\nTarget user address.\n\n    >>> address = '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'\n\nInitializing Multicall for mainnet.\n\n    >>> from simple_multicall import Multicall\n    >>>\n    >>> multicall = Multicall(w3, 'mainnet')\n\nCreating a list of calls via 'Multicall.create_call()' method.\n\n    >>> calls = [\n    ...     multicall.create_call(USDT, 'balanceOf', [address]),\n    ...     multicall.create_call(USDC, 'balanceOf', [address]),\n    ...     multicall.create_call(BNB, 'balanceOf', [address])\n    ... ]\n\nExecuting multicall.\n\n    >>> result= multicall.call(false, calls)\n\n    >>> result\n    [15442332, [b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00?D#\\xde' b'\\x00\\x00\\x00\\x00\\x00\\\n    x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n    x00\\x00\\x00;\\x9a\\xf1\\x10', b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0\n    0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02HA>\\xf1\\xd3\\xf2\\x00\\x00']]\n\nInterpreting results.\n\n    >>> print('Block number: ', result[0])\n    Block number:  15442332\n\n    >>> print('USDT: ', int(result[1][0].hex(), 16) / 10 ** 6)\n    USDT:  1061.430238\n\n    >>> print('USDC: ', int(result[1][1].hex(), 16) / 10 ** 6)\n    USDC:  1000.01\n\n    >>> print('BNB: ', int(result[1][2].hex(), 16) / 10 ** 18)\n    BNB:  42.1\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "multicall,web3,multicall2",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simple-multicall-2",
    "package_url": "https://pypi.org/project/simple-multicall-2/",
    "platform": null,
    "project_url": "https://pypi.org/project/simple-multicall-2/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/simple-multicall-2/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple Web3 multicall 2",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15132673,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50ac21656290352f8042691c23f44ec15d267a90360b0df88025f59b7ad64c6e",
          "md5": "71205c5b27f44b5ab7c7543da1d38c89",
          "sha256": "fa7616344531844e8c02f9a471f8b0d549ff42eebd0e3c0013c9e4017b431f5d"
        },
        "downloads": -1,
        "filename": "simple_multicall_2-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71205c5b27f44b5ab7c7543da1d38c89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6098,
        "upload_time": "2022-09-18T10:28:06",
        "upload_time_iso_8601": "2022-09-18T10:28:06.407211Z",
        "url": "https://files.pythonhosted.org/packages/50/ac/21656290352f8042691c23f44ec15d267a90360b0df88025f59b7ad64c6e/simple_multicall_2-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "196187c55cc09c20cd58f46b4c4773d55d359454ce0ed2e44f49a7929c62ba50",
          "md5": "5c66ece97c6bb487d776b8f0e3ef305f",
          "sha256": "f783b621e3db0a91a033ca49ae4818ad8cc5d3b741b99eb2d6efff81554bda7f"
        },
        "downloads": -1,
        "filename": "simple_multicall_2-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5c66ece97c6bb487d776b8f0e3ef305f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5267,
        "upload_time": "2022-09-18T10:28:08",
        "upload_time_iso_8601": "2022-09-18T10:28:08.702764Z",
        "url": "https://files.pythonhosted.org/packages/19/61/87c55cc09c20cd58f46b4c4773d55d359454ce0ed2e44f49a7929c62ba50/simple_multicall_2-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c281c938792b00df4e3ed10be8101c7f1d71d1318849a7052aedc6b0c7b20ae",
          "md5": "b443911d945078972429d8442cc3886d",
          "sha256": "3c3f97bc487b6e7305a03e8433ca5c4e37fef37ee65f0ce8629d8cb17298479f"
        },
        "downloads": -1,
        "filename": "simple_multicall_2-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b443911d945078972429d8442cc3886d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6066,
        "upload_time": "2022-09-18T10:36:00",
        "upload_time_iso_8601": "2022-09-18T10:36:00.624462Z",
        "url": "https://files.pythonhosted.org/packages/5c/28/1c938792b00df4e3ed10be8101c7f1d71d1318849a7052aedc6b0c7b20ae/simple_multicall_2-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cc1440942c42d22fb469b65758fb3d5f05f70e032305af91909e20b7de2567e",
          "md5": "85b404c3687afde77373cc66f0df7eeb",
          "sha256": "a86529be432fe2a8b3ded29c39fbdc18dd03a87be8eae508ac4ae0a896392190"
        },
        "downloads": -1,
        "filename": "simple_multicall_2-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "85b404c3687afde77373cc66f0df7eeb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5226,
        "upload_time": "2022-09-18T10:36:02",
        "upload_time_iso_8601": "2022-09-18T10:36:02.510999Z",
        "url": "https://files.pythonhosted.org/packages/5c/c1/440942c42d22fb469b65758fb3d5f05f70e032305af91909e20b7de2567e/simple_multicall_2-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c281c938792b00df4e3ed10be8101c7f1d71d1318849a7052aedc6b0c7b20ae",
        "md5": "b443911d945078972429d8442cc3886d",
        "sha256": "3c3f97bc487b6e7305a03e8433ca5c4e37fef37ee65f0ce8629d8cb17298479f"
      },
      "downloads": -1,
      "filename": "simple_multicall_2-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b443911d945078972429d8442cc3886d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6066,
      "upload_time": "2022-09-18T10:36:00",
      "upload_time_iso_8601": "2022-09-18T10:36:00.624462Z",
      "url": "https://files.pythonhosted.org/packages/5c/28/1c938792b00df4e3ed10be8101c7f1d71d1318849a7052aedc6b0c7b20ae/simple_multicall_2-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cc1440942c42d22fb469b65758fb3d5f05f70e032305af91909e20b7de2567e",
        "md5": "85b404c3687afde77373cc66f0df7eeb",
        "sha256": "a86529be432fe2a8b3ded29c39fbdc18dd03a87be8eae508ac4ae0a896392190"
      },
      "downloads": -1,
      "filename": "simple_multicall_2-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "85b404c3687afde77373cc66f0df7eeb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5226,
      "upload_time": "2022-09-18T10:36:02",
      "upload_time_iso_8601": "2022-09-18T10:36:02.510999Z",
      "url": "https://files.pythonhosted.org/packages/5c/c1/440942c42d22fb469b65758fb3d5f05f70e032305af91909e20b7de2567e/simple_multicall_2-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}