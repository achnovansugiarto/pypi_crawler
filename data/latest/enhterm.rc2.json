{
  "info": {
    "author": "Nicu Tofan",
    "author_email": "nicu.tofan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n# enhterm\n\nenhterm is an [open source](https://github.com/pyl1b/enhterm.git),\nMIT licensed, [Cmd-based](https://docs.python.org/3/library/cmd.html)\nframework for writing command interpreters.\n\n[![Build Status](https://travis-ci.org/pyl1b/enhterm.svg?branch=master)](https://travis-ci.org/pyl1b/enhterm)\n[![Documentation Status](https://readthedocs.org/projects/enhterm/badge/?version=latest)](https://enhterm.readthedocs.io/en/latest/?badge=latest)\n\nenhterm provides a class that extends \n[cmd.Cmd](https://docs.python.org/3/library/cmd.html) \nand which is also intended to be inherited by a user class,\nwith the end purpose being to create a shell.\n\nFunctionality provided by this package is split among mixins, allowing you\nto construct your own base class if EnhTerm is not suitable.\n\nAs with [cmd.Cmd](https://docs.python.org/3/library/cmd.html), the class\nconstructed as described above can be used like so:\n\n\n    from enhterm import EnhTerm\n\n    from enhterm.provider.parser.argparser import ArgParser\n    from enhterm.provider.parser.argparser.commands import register_commands\n    from enhterm.provider.stream_provider import StreamProvider\n\n    # The stream provider by default reads the input from console.\n    provider = StreamProvider()\n\n    # The text entered by the user then needs to be interpreted.\n    # Here we use an interpreter based on argparse.\n    provider.parser = ArgParser(provider=provider)\n    subparsers = provider.parser.add_subparsers()\n\n    # Add built-in commands.\n    register_commands(subparsers)\n\n    # Define you own handler.\n    def do_add(command, integers):\n        return sum(integers)\n\n    # Add this command to the argparse library.\n    parser_add = subparsers.add_parser('add')\n    parser_add.add_argument(\n         'integers', metavar='int', nargs='+', type=int,\n         help='integers to be summed (space separated list)')\n    parser_add.set_defaults(func=do_add)\n\n\n    # Construct the terminal.\n    class MyShell(EnhTerm):\n        \"\"\"\n        Simple terminal.\n\n        Has a command that can add integers and another one\n        that quits the interpreter.\n        \"\"\"\n        def __init__(self):\n            super().__init__(providers=provider)\n\n\n    if __name__ == '__main__':\n        print(\"Type 'add 1 2 3 4 5 6 7 8 9' and you should get back 45\")\n        print(\"Type '-h' to get back the usage\")\n        MyShell().cmd_loop()\n\n\nInstall\n-------\n\n    pip install enhterm\n\nYou can also download/clone the source, in which case you have to:\n\n    git clone https://github.com/pyl1b/enhterm.git\n    python setup.py install\n\nTo contribute a patch clone the repo, create a new branch, install in\ndevelop mode:\n\n    python setup.py develop\n\nWhat is included\n----------------\n\nEach of the elements below are implemented in a distinct \"mixin\" class,\nwhich mean that you can create your own combination using EnhTerm class as\na template.\n\n### Command\n\nAllows python strings to be executed as if the user typed the input at the\nprompt. This is the base for executing commands in a file.\n\n### Exit\n\nProvides the `exit` command that terminates command loop.\n\n### Help\n\nProvides the `help` command which prints information about\nthe use of the command while accounting for custom commands \nand shortcuts.\n\n### Log Level\n\nAllows changing logging verbosity by issuing commands like \n`set loglevel debug`. \n\n### Macro\n\nCan record, remove, list and execute previously recorded commands.\n\n### Messages\n\nDoes not expose any commands but provides the class with a standardized\nway of issuing messages distinct from the logging mechanism.\n\n### Run\n\nAllows executing multiple commands from a string or from a file.\n\n### Sub-commands\n\nCommands are usually identified by using the first word the user types.\nThis mixin allows for a more natural way of issuing commands like \n`new macro` instead of `macro new`. Other mixins then add subcommands\nin their `__init__` method.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/pyl1b/enhterm/archive/v0.2.1.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pyl1b/enhterm",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "enhterm",
    "package_url": "https://pypi.org/project/enhterm/",
    "platform": "",
    "project_url": "https://pypi.org/project/enhterm/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pyl1b/enhterm/issues",
      "Documentation": "https://readthedocs.org/projects/enhterm/",
      "Download": "https://github.com/pyl1b/enhterm/archive/v0.2.1.zip",
      "Homepage": "https://github.com/pyl1b/enhterm",
      "Source Code": "https://github.com/pyl1b/enhterm"
    },
    "release_url": "https://pypi.org/project/enhterm/0.2.1/",
    "requires_dist": [
      "u-msgpack-python",
      "nose ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "recommonmark ; extra == 'dev'",
      "m2r ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "argparse ; extra == 'dev'",
      "appupup ; extra == 'dev'",
      "p2p0mq ; extra == 'dev'",
      "argparse ; extra == 'full'",
      "mock ; extra == 'tests'",
      "nose ; extra == 'tests'",
      "argparse ; extra == 'tests'",
      "appupup ; extra == 'tests'",
      "p2p0mq ; extra == 'tests'"
    ],
    "requires_python": ">=3.6.0",
    "summary": "A Cmd-based framework for writing line-oriented command interpreters.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12076401,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bc7e0f2c616510afbbd4c4f27d80eedb762559c20c1659211b10466c2e112ab",
          "md5": "12845d3c22fe99c73f55008f5c509c1c",
          "sha256": "bc2a9d12ace73e73a5757d5ea762813670cd4ecc11f46a22b51545a363605aff"
        },
        "downloads": -1,
        "filename": "enhterm-0.1.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "12845d3c22fe99c73f55008f5c509c1c",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6.0",
        "size": 29022,
        "upload_time": "2019-11-09T10:25:53",
        "upload_time_iso_8601": "2019-11-09T10:25:53.258891Z",
        "url": "https://files.pythonhosted.org/packages/4b/c7/e0f2c616510afbbd4c4f27d80eedb762559c20c1659211b10466c2e112ab/enhterm-0.1.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "880e6c7da819eecfd93df831c1b61f16383c0f134cdf0c170981156842f0ba02",
          "md5": "6a955a040785e3c3a1a3196152a62e4d",
          "sha256": "9210760b20d0eeda912ba5c70046e5b3d051ade4a3d25016730dedcc6c7da7a5"
        },
        "downloads": -1,
        "filename": "enhterm-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6a955a040785e3c3a1a3196152a62e4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 11620,
        "upload_time": "2019-11-09T10:25:55",
        "upload_time_iso_8601": "2019-11-09T10:25:55.656202Z",
        "url": "https://files.pythonhosted.org/packages/88/0e/6c7da819eecfd93df831c1b61f16383c0f134cdf0c170981156842f0ba02/enhterm-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5313ce1630e16a8056d81a091302a3631a49992d91d8cef185e3454e5fb309a8",
          "md5": "aae167322d904e791df189a9ad359603",
          "sha256": "cc7be84716bf58816727d72fcc02107344d95b7241fbb87e1fa749f96d5a1430"
        },
        "downloads": -1,
        "filename": "enhterm-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aae167322d904e791df189a9ad359603",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 57540,
        "upload_time": "2021-11-20T06:20:27",
        "upload_time_iso_8601": "2021-11-20T06:20:27.049328Z",
        "url": "https://files.pythonhosted.org/packages/53/13/ce1630e16a8056d81a091302a3631a49992d91d8cef185e3454e5fb309a8/enhterm-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6534a160d19ededfaef61410c53df2eaf36fde9e59058efc79d424dedc989c89",
          "md5": "3fad20a645637288d61e66a10f092c10",
          "sha256": "b15a151b6e6a5f5c9ad963ff4e48ba22eee33262760b3b0c2e0cb94150f66e16"
        },
        "downloads": -1,
        "filename": "enhterm-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3fad20a645637288d61e66a10f092c10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 38804,
        "upload_time": "2021-11-20T06:20:28",
        "upload_time_iso_8601": "2021-11-20T06:20:28.886586Z",
        "url": "https://files.pythonhosted.org/packages/65/34/a160d19ededfaef61410c53df2eaf36fde9e59058efc79d424dedc989c89/enhterm-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5313ce1630e16a8056d81a091302a3631a49992d91d8cef185e3454e5fb309a8",
        "md5": "aae167322d904e791df189a9ad359603",
        "sha256": "cc7be84716bf58816727d72fcc02107344d95b7241fbb87e1fa749f96d5a1430"
      },
      "downloads": -1,
      "filename": "enhterm-0.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aae167322d904e791df189a9ad359603",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 57540,
      "upload_time": "2021-11-20T06:20:27",
      "upload_time_iso_8601": "2021-11-20T06:20:27.049328Z",
      "url": "https://files.pythonhosted.org/packages/53/13/ce1630e16a8056d81a091302a3631a49992d91d8cef185e3454e5fb309a8/enhterm-0.2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6534a160d19ededfaef61410c53df2eaf36fde9e59058efc79d424dedc989c89",
        "md5": "3fad20a645637288d61e66a10f092c10",
        "sha256": "b15a151b6e6a5f5c9ad963ff4e48ba22eee33262760b3b0c2e0cb94150f66e16"
      },
      "downloads": -1,
      "filename": "enhterm-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3fad20a645637288d61e66a10f092c10",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 38804,
      "upload_time": "2021-11-20T06:20:28",
      "upload_time_iso_8601": "2021-11-20T06:20:28.886586Z",
      "url": "https://files.pythonhosted.org/packages/65/34/a160d19ededfaef61410c53df2eaf36fde9e59058efc79d424dedc989c89/enhterm-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}