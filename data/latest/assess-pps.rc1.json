{
  "info": {
    "author": "Olha Alieinik",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Time-Dependent Metrics to Assess Performance Prediction Systems\n\n\n\n### Installation\n\n````\n\npip install assess_pps\n\n````\n\n\n\n### Get started\n\n```Python\n\n# Importing our library\n\nfrom assess_pps import metrics as m\n\n\n\n# for working with data we need pandas\n\nimport pandas as pd\n\n\n\n# implementing csv files\n\nectel = pd.read_csv(\"D:/path\")  # put your link here\n\nectelsys2 = pd.read_csv(\"D:/path\")\n\n\n\n# We use the file ectel.csv for testing.\n\nprediction_time = 35  # till which week we should search the overall stability value\n\nectel_temp = ectel.loc[ectel.weeknumber <= prediction_time]  # dataframe with all data till predicted time\n\nS = ectel_temp['idUser'].unique()  # list with student indexes\n\nY = [0, 1, 2]  # list of classes\n\nx = 10  # x  earliest times of correct predictions\n\n\n\n# Stability \n\nstability = m.Stability(ectel_temp, S)\n\nprint(\"Stability: \", stability)\n\n\n\n# Accuracy\n\naccuracy = m.Accuracy(ectel_temp, S)\n\nprint(\"Accuracy: \", accuracy)\n\n\n\n# Earliness \n\nearliness = m.Earliness_Total(S, Y, x, ectel_temp)\n\nprint(\"Earliness: \", earliness)\n\n\n\n# ESS \n\n# for ESS we need to know stability and earliness\n\nESS = m.ESS(stability, earliness)\n\nprint(\"ESS of average earliness: \", ESS)\n\n\n\n# EAS \n\n# for EAS we need to know accuracy and earliness\n\nEAS = m.EAS(accuracy, earliness)\n\nprint(\"EAS of average earliness: \", EAS)\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "assess-pps",
    "package_url": "https://pypi.org/project/assess-pps/",
    "platform": null,
    "project_url": "https://pypi.org/project/assess-pps/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/assess-pps/0.1.1/",
    "requires_dist": [
      "pandas"
    ],
    "requires_python": "",
    "summary": "Library for calculating time-depending metrics for pps",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16251110,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "613f9ba61dd34a56a0caf0552f3dd056dfc75c6905a27b17d91dd709510f8a39",
          "md5": "4f5f7fe1f429161bc29db5652d2990cf",
          "sha256": "77e3555463a8dfea8ea19c3b659bc131beb6572ee8c797f1d99e573a4b298d0c"
        },
        "downloads": -1,
        "filename": "assess_pps-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f5f7fe1f429161bc29db5652d2990cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3352,
        "upload_time": "2022-12-29T18:34:13",
        "upload_time_iso_8601": "2022-12-29T18:34:13.955049Z",
        "url": "https://files.pythonhosted.org/packages/61/3f/9ba61dd34a56a0caf0552f3dd056dfc75c6905a27b17d91dd709510f8a39/assess_pps-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ea08f9cf2e481fd24d9e20bdc4307d39e32faa59a5606afdba0405f8d2bd2e5",
          "md5": "86c7513cccdb150cb1810200e6fa153b",
          "sha256": "d55c7941d5d96d241e3f4bafe2b0a0460db8de6b1fa53a66cd4b4b0267ef9fa3"
        },
        "downloads": -1,
        "filename": "assess_pps-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "86c7513cccdb150cb1810200e6fa153b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3513,
        "upload_time": "2022-12-29T18:34:15",
        "upload_time_iso_8601": "2022-12-29T18:34:15.896556Z",
        "url": "https://files.pythonhosted.org/packages/3e/a0/8f9cf2e481fd24d9e20bdc4307d39e32faa59a5606afdba0405f8d2bd2e5/assess_pps-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "613f9ba61dd34a56a0caf0552f3dd056dfc75c6905a27b17d91dd709510f8a39",
        "md5": "4f5f7fe1f429161bc29db5652d2990cf",
        "sha256": "77e3555463a8dfea8ea19c3b659bc131beb6572ee8c797f1d99e573a4b298d0c"
      },
      "downloads": -1,
      "filename": "assess_pps-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4f5f7fe1f429161bc29db5652d2990cf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3352,
      "upload_time": "2022-12-29T18:34:13",
      "upload_time_iso_8601": "2022-12-29T18:34:13.955049Z",
      "url": "https://files.pythonhosted.org/packages/61/3f/9ba61dd34a56a0caf0552f3dd056dfc75c6905a27b17d91dd709510f8a39/assess_pps-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ea08f9cf2e481fd24d9e20bdc4307d39e32faa59a5606afdba0405f8d2bd2e5",
        "md5": "86c7513cccdb150cb1810200e6fa153b",
        "sha256": "d55c7941d5d96d241e3f4bafe2b0a0460db8de6b1fa53a66cd4b4b0267ef9fa3"
      },
      "downloads": -1,
      "filename": "assess_pps-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "86c7513cccdb150cb1810200e6fa153b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3513,
      "upload_time": "2022-12-29T18:34:15",
      "upload_time_iso_8601": "2022-12-29T18:34:15.896556Z",
      "url": "https://files.pythonhosted.org/packages/3e/a0/8f9cf2e481fd24d9e20bdc4307d39e32faa59a5606afdba0405f8d2bd2e5/assess_pps-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}