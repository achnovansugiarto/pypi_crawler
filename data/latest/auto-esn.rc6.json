{
  "info": {
    "author": "Robert Wcislo",
    "author_email": "robert.wcislo1995@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "This is the repository connected to the paper [\"Grouped Multi-Layer Echo State Networks with Self-Normalizing Activations\"](https://www.springerprofessional.de/grouped-multi-layer-echo-state-networks-with-self-normalizing-ac/19248614) (pdf available [here](https://www.iccs-meeting.org/archive/iccs2021/papers/127420093.pdf)). Below, we present additional information and experiments that were performed.\r\n\r\n- [Usage](#usage)\r\n- [Architecture overview](#architecture-overview)\r\n  * [Deep ESN](#deep-esn)\r\n  * [Grouped ESN](#grouped-esn)\r\n  * [Grouped Deep ESN](#grouped-deep-esn)\r\n- [Grid Search Configuration](#grid-search-configuration)\r\n- [Best Architecture Configuration](#best-architecture-configuration)\r\n  * [ESN](#esn)\r\n  * [LSTM](#lstm)\r\n- [Memory Capacity](#memory-capacity)\r\n  * [Input scaling vs Activation Radius](#input-scaling-vs-activation-radius)\r\n\r\n## Usage\r\nMake sure you have torch installed from https://pytorch.org/get-started/locally/\r\n\r\nRun\r\n```sh\r\npip install auto-esn\r\n```\r\nThen navigate to [simple example](https://github.com/Ro6ertWcislo/AutoESN/blob/master/src/auto_esn/examples/easiest_example_mg.py), read descriptions, copy code to your project and run!\r\nFor more complex examples explore [examples](https://github.com/Ro6ertWcislo/AutoESN/blob/master/src/auto_esn/examples/) folder.\r\nMore \"formal\" documentation is undergo. In the meantime, if you have any questions or requests don't hesitate to raise an [issue](https://github.com/Ro6ertWcislo/AutoESN/issues).\r\n\r\n\r\n\r\n## Architecture overview\r\nFour different types of Echo State Networks were tested: shallow ESN, deep ESN(*dESN*), grouped ESN(*gESN*) and the generalisation of all of them which is grouped deep Echo State Network (*gdESN*).\r\n\r\n### Deep ESN\r\nBriefly, Deep Echo State Network stacks several reservoirs one on top of another. The difference to classical deep neural network is that the output of all intermediate layers is concatenated giving the final result.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/32894690/113476313-0c1c4680-947b-11eb-9d57-83485a946f65.png\" width=\"400\">\r\n\r\n### Grouped ESN\r\nGrouped ESN consist of a group of shallow ESNs whose outputs are concatenated to create final output.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/32894690/113476317-163e4500-947b-11eb-9eb4-9827d691c0e7.png\" width=\"200\">\r\n\r\n### Grouped Deep ESN\r\nGrouped Deep ESN puts both these approaches together by creating a group of Deep ESNs. The output of *gdESN* is concatenated output of all its reservoirs.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/32894690/113476592-b5b00780-947c-11eb-93b0-d312c8accb41.png\" width=\"400\">\r\n\r\n\r\n## Grid Search Configuration\r\nTanh activation function highly  depends  on  input  scaling,  while  for  SNA(self-normalizing activation) its  effect  is  reduced  due  to  normalization  factor. This is why we used two different hyperparameter setups as an input to grid search. For each configuration, 5 concrete models were generated with different random seeds applied for weight initialization. For *gESN* and *dESN* architectures N<sub>g</sub>,N<sub>l</sub>∈ {2,3,4,5,10}, where N<sub>g</sub> is number of groups and N<sub>l</sub> number of layers. For *gdESN* architectures each of{(2,2),(2,3),(2,4),(2,5),(3,2),(3,3),(3,4),(4,2),(4,3),(5,2)}configurations of (groups, layers) was used.Each  tested  model,  shallow  or  decoupled  had  the  total  number  of  1000  neurons  (with  the  small deviations  resulting  from  subreservoir  integer  sizes).  Grid  search  optimization  was  performed  on all these hyperparameters and architectures. The best configuration was selected based on minimal NRMSE score obtained on validation set. In the main part of experiment, which includes 1-step ahead  prediction  of  time-series,  the  average and minimal NRMSE  on  the  test  set  was calculated for each architecture and the target hyperparameter set.\r\n\r\n<table>\r\n    <tr>\r\n        <td><b>Hyperparameter</b></td>\r\n        <td><b>tanh</b></td>\r\n        <td><b>SNA</b></td>\r\n    </tr>\r\n    <tr>\r\n        <td>Input Scaling s</td>\r\n        <td>{0.1,0.5,1.0,10}</td>\r\n        <td>1.0</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Spectral Radius ρ</td>\r\n        <td>{0.7,0.8,0.9,1.0}</td>\r\n        <td>1.0</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Leaking Rate α</td>\r\n        <td>{0.7,0.8,0.9,1.0}</td>\r\n        <td>1.0</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Regularization β</td>\r\n        <td>{0.5,1,2}</td>\r\n        <td>{0.5,1,2}</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Actiation Radius r</td>\r\n        <td>-</td>\r\n        <td>{50k | k&#8712;1,2,3...30}</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Washout</td>\r\n        <td colspan=\"2\" style=\"text-align: center; vertical-align: middle;\">100</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Total neurons</td>\r\n       <td colspan=\"2\">1000</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Sparsity</td>\r\n        <td colspan=\"2\">10%</td>\r\n    </tr>\r\n    <tr>\r\n        <td>Weight distribution</td>\r\n        <td colspan=\"2\">uniform, centered around 0</td>\r\n    </tr>\r\n</table>\r\n\r\n## Best Architecture configuration\r\n### ESN\r\n\r\nHyperparameter sets for best results in different tasks are listed below:\r\n\r\nMackeyGlass Series one step ahead prediction:\r\n| Architecture         | Layers | Groups | Activation Radius | Regularization |\r\n|----------------------|--------|--------|-------------------|----------------|\r\n| *ESN tanh*           | 1      | 1      | None              | 0.5            |\r\n| *dESN tanh*           | 4      | 1      | None              | 0.5            |\r\n|  *gESN tanh*              | 1      | 2      | None              | 0.5            |\r\n|  *gdESN tanh*       | 2      | 4      | None              | 0.5            |\r\n|----------------------|--------|--------|-------------------|----------------|\r\n| *ESN SNA*                  | 1      | 1      | 100               | 0.5            |\r\n| *dESN SNA*         | 3      | 1      | 100               | 0.5            |\r\n| *gESN SNA*      | 1      | 10     | 200               | 0.5            |\r\n| *gdESN SNA* | 3      | 3      | 50                | 0.5            |\r\n\r\n\r\n\r\nMultiple Superimposed Oscillators one step ahead prediction:\r\n| Architecture                 | Layers | Groups | Activation Radius | Regularization |\r\n|------------------------------|--------|--------|-------------------|----------------|\r\n| *ESN tanh*                    | 1      | 1      | None              | 0.5            |\r\n|*dESN tanh*                  | 2      | 1      | None              | 0.5            |\r\n| *gESN tanh*                  | 1      | 2      | None              | 0.5            |\r\n| *gdESN tanh*            | 3      | 3      | None              | 0.5            |\r\n|----------------------|--------|--------|-------------------|----------------|\r\n| *ESN SNA*                           | 1      | 1      | 1400              | 0.5            |\r\n| *dESN SNA*                  | 4      | 1      | 1200              | 1.0            |\r\n| *gESN SNA*             | 1      | 3      | 1300              | 1.0            |\r\n| \t*gdESN SNA*  | 3      | 2      | 1400              | 1.0            |\r\n\r\nSunspot Series one step ahead prediction:\r\n\r\n| Architecture                    | Layers | Groups | Activation Radius | Regularization |\r\n|---------------------------------|--------|--------|-------------------|----------------|\r\n|*ESN tanh*                      | 1      | 1      | None              | 2.0            |\r\n| *dESN tanh*                    | 2      | 1      | None              | 2.0            |\r\n| *gESN tanh*                   | 1      | 20     | None              | 1.0            |\r\n|*gdESN tanh*             | 3      | 3      | None              | 2.0            |\r\n|----------------------|--------|--------|-------------------|----------------|\r\n| *ESN SNA*                           | 1      | 1      | 850               | 1.0            |\r\n|*dESN SNA*           | 3      | 1      | 1400              | 1.0            |\r\n| *gESN SNA*                 | 1      | 8      | 400               | 2.0            |\r\n| *gdESN SNA*   | 3      | 2      | 1450              | 1.0            |\r\n\r\n\r\n### LSTM\r\n\r\nAdditionally, several experiments with moving average and LSTM networks were performed.\r\n\r\nFor LSTM 4 architectures were tested\r\n\r\nArchitecture 1\r\n\r\n![m1](https://user-images.githubusercontent.com/32894690/113422089-71fdc500-93cc-11eb-8d12-3ed92ae2e03a.png)\r\n\r\n\r\nArchitecture 2\r\n\r\n![m2](https://user-images.githubusercontent.com/32894690/113422180-8d68d000-93cc-11eb-8e64-1f9eb0c481ca.png)\r\n\r\n\r\nArchitecture 3\r\n\r\n![m3](https://user-images.githubusercontent.com/32894690/113422194-93f74780-93cc-11eb-8276-869f084d0d43.png)\r\n\r\n\r\nArchitecture 4\r\n\r\n![m4](https://user-images.githubusercontent.com/32894690/113422210-99549200-93cc-11eb-9a68-d2fdad84116d.png)\r\n\r\n\r\nEach architecture was trained for 100 epochs with Adam optimiser.\r\nEach model was trained 5 times for each learning rate of [0.001, 0.002, 0.0005,0.005].\r\n\r\nBest results were obtained with:\r\n* Architecture 2 and learning rate 0.002 for MackeGlass\r\n* Architecture 3 and learning rate 0.002 for Sunspot\r\n* Architecture 4 and learning rate 0.005 for Multiple Superimposed oscillators\r\n\r\n## Memory Capacity\r\nThe objective of this experiment was to measure how ESN models can recall past input seen by reservoir *N* steps ago, where N∈{1,5,10,15,...100}. In particular, we compare different  decoupled  SNA  architectures based  on  the  hyperparameter  configuration established in the one step ahead preadiction for MG dataset. For each *N* , N steps behind NRMSE was averaged over 10 trials. Several phenomena observed in the results of the experiment are depicted in Figures below.\r\n\r\nIn case of *dESN* SNA architecture, memory capacity decreases faster for bigger number of layers. It is important to note that the total number of neurons remains the same(1000).\r\n\r\n<img src=\"https://user-images.githubusercontent.com/32894690/113477510-7ab0d280-9482-11eb-9101-aed40795e49b.png\" width=\"400\">\r\n\r\nSimilar observation can be done for *gESN* SNA architecture, however here, the influence of adding more groups on the memory is lower.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/32894690/113477554-ea26c200-9482-11eb-9e97-1f624281bf54.png\" width=\"400\">\r\n\r\n\r\nThese conclusions find further confirmation for *gdESN*, where the smaller the product of layers and groups, the better the memory capacity. In case of *gdESN* SNA, we observe that two-dimensional configuration of layers and groups (e.g. (2,4) vs. (4,2)) affects memory characteristics and can be used to find trade-off between memory and representational power.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/32894690/113477564-01fe4600-9483-11eb-8714-ce6e2e98a5b2.png\" width=\"400\">\r\n\r\n\r\nIn general, two clean patterns emerge - one bigger reservoir has better Memory Capacity than two either stacked or grouped as long as total number of neurons stays the same.\r\nGrouped reservoirs have better memory capacity than Deep ones for the same configuration, eg. 2 layers 500 neurons each vs two groups 500 neurons each.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/32894690/113477573-16dad980-9483-11eb-9c7c-74b8509c2ab9.png\" width=\"400\">\r\n\r\n### Input scaling vs Activation Radius\r\n\r\nFor SNA architectures only the one hyperparameter from the set: {Input scaling *s*, Acativation radius *r*, Spectral radius *ρ*} can be adjusted. The others can be fixed with no negative influence on the model memory. This  conclusion  comes  from  normalization  effect  of  activation  radius *r* and  is  confirmed  by  the empirical results presented below and obtained for SNA ESN, with div<sub>sr</sub>∈ {10,20,30,40}, where div<sub>sr</sub>=*s*/*r*. For each div<sub>sr</sub>, 20 different values of *s* and *r* were selected. For each of these configurations, the models with the same initial weights were trained in 10 trials. As presented in Figure below the models with the same div<sub>sr</sub> exhibit practically the same memory capacity.\r\n\r\nThe figure below presents Memory  Capacity  NRMSE  scores for recalling input seen 30 steps before for ESN  with  fixed  ratio  of div<sub>sr</sub>,  where div<sub>sr</sub>∈ {10,20,30,40}.  For  each div<sub>sr</sub>,  20  different  values  of *s* and *r* were  chosen.  All experiments were conducted on SNA ESN with fixed weights (s and r were changing at the begging of the training but not the weights!). 10 diferent SNA ESNs were initialized with different weights and the results were averaged for each configuration.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/32894690/113477802-ce242000-9484-11eb-8c35-b3ee36a4b394.png\" width=\"700\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Ro6ertWcislo/AutoESN",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "auto-esn",
    "package_url": "https://pypi.org/project/auto-esn/",
    "platform": null,
    "project_url": "https://pypi.org/project/auto-esn/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Ro6ertWcislo/AutoESN/issues",
      "Homepage": "https://github.com/Ro6ertWcislo/AutoESN"
    },
    "release_url": "https://pypi.org/project/auto-esn/0.0.7/",
    "requires_dist": [
      "numpy (==1.20.2)",
      "pandas (==1.2.4)",
      "matplotlib (==3.4.2)",
      "networkx (==2.5.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "A modular Reservoir Computing library. Using Echo State Networks. Built in PyTorch.",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16077478,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d45a9ab8a2fa10f8e9755256c6e99420de7eea497e480f557a687c2ec6c0cc54",
          "md5": "bf2af23d76a159f8041111b89bf8acc4",
          "sha256": "a258a363b655669acd7bf5f9ea2ea3ccc1b3b64ea794dfd79b33c24c7d5478fa"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf2af23d76a159f8041111b89bf8acc4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21195,
        "upload_time": "2021-06-16T06:29:45",
        "upload_time_iso_8601": "2021-06-16T06:29:45.834600Z",
        "url": "https://files.pythonhosted.org/packages/d4/5a/9ab8a2fa10f8e9755256c6e99420de7eea497e480f557a687c2ec6c0cc54/auto_esn-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d1e646664a63d48211942f9f27423fda27afc64c475a2e4cddb7b367abe435f",
          "md5": "fcb51d2f97b701e7f04ddcb5f650f9c6",
          "sha256": "621996e30399a363c5f93de5e7871f9e2508b07a5e3b22e23309e6a611538ff6"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fcb51d2f97b701e7f04ddcb5f650f9c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20146,
        "upload_time": "2021-06-16T06:29:48",
        "upload_time_iso_8601": "2021-06-16T06:29:48.237400Z",
        "url": "https://files.pythonhosted.org/packages/3d/1e/646664a63d48211942f9f27423fda27afc64c475a2e4cddb7b367abe435f/auto_esn-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a6a165ebafce7f0b84e7e2efe215a30ae85c81a9b6d030831703187530d9b8c",
          "md5": "3da744506490041caff88b3eace12e72",
          "sha256": "0867d1098ebb8443aa53261146fbeacd94e0d85c7b1b9ef49907196e93486087"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3da744506490041caff88b3eace12e72",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23900,
        "upload_time": "2021-06-16T07:34:26",
        "upload_time_iso_8601": "2021-06-16T07:34:26.445334Z",
        "url": "https://files.pythonhosted.org/packages/0a/6a/165ebafce7f0b84e7e2efe215a30ae85c81a9b6d030831703187530d9b8c/auto_esn-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "407eb8e421c3274946d06419bb47163bc01bf24d1501038b4072240d838c343c",
          "md5": "f8df873c728f6016700ccb6b9816630a",
          "sha256": "77d4d41db58517f9c28bf37bc796a03336d848f192e7a1988b55d3e75a9684cc"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f8df873c728f6016700ccb6b9816630a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17542,
        "upload_time": "2021-06-16T07:34:29",
        "upload_time_iso_8601": "2021-06-16T07:34:29.278524Z",
        "url": "https://files.pythonhosted.org/packages/40/7e/b8e421c3274946d06419bb47163bc01bf24d1501038b4072240d838c343c/auto_esn-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dccef3ef9347332cb64678adb3693629ba6e8450bca3cb35991c3ac7376039a",
          "md5": "46e7193336795a70389f7aa51d67b6c8",
          "sha256": "55a87df399386d904f778f4ebb6d8dda2a310d8f0036e7b144fc9653926cd9da"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46e7193336795a70389f7aa51d67b6c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23895,
        "upload_time": "2021-06-16T07:54:38",
        "upload_time_iso_8601": "2021-06-16T07:54:38.707641Z",
        "url": "https://files.pythonhosted.org/packages/4d/cc/ef3ef9347332cb64678adb3693629ba6e8450bca3cb35991c3ac7376039a/auto_esn-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be0aaf77ab9a5f4e81eac1ce588936f0c2c354717fd6d0202cd2090acfacf92b",
          "md5": "ad00b8f6c47ea78250564d90ed28ed1d",
          "sha256": "d4e93eaca78fa491e5c6f7c4c82d13b1c31b1fc4986a620a140340180ddb8b82"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ad00b8f6c47ea78250564d90ed28ed1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17520,
        "upload_time": "2021-06-16T07:54:40",
        "upload_time_iso_8601": "2021-06-16T07:54:40.481425Z",
        "url": "https://files.pythonhosted.org/packages/be/0a/af77ab9a5f4e81eac1ce588936f0c2c354717fd6d0202cd2090acfacf92b/auto_esn-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16d4793829edf8a650a1ce6d58ec1db163c36da9861d35702d530fec936c35a4",
          "md5": "d10a71175ced532fce7d4d11180a927d",
          "sha256": "97f02efb9154656e933121d91e40d94e24dda75c2645c16846b8ee55e3d1bff9"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d10a71175ced532fce7d4d11180a927d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 302669,
        "upload_time": "2021-06-16T09:15:33",
        "upload_time_iso_8601": "2021-06-16T09:15:33.142580Z",
        "url": "https://files.pythonhosted.org/packages/16/d4/793829edf8a650a1ce6d58ec1db163c36da9861d35702d530fec936c35a4/auto_esn-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c091da0faa07c6ed4aa0304a1dfef3d4146b80d23534b750dd867e74b8ce2126",
          "md5": "2bd694a247d44bcf25032ef958c4e20f",
          "sha256": "d9d7db094b5f0e3566bbf40d3432571c8479497d5454747a17381ab95e3baf15"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2bd694a247d44bcf25032ef958c4e20f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 281580,
        "upload_time": "2021-06-16T09:15:34",
        "upload_time_iso_8601": "2021-06-16T09:15:34.688613Z",
        "url": "https://files.pythonhosted.org/packages/c0/91/da0faa07c6ed4aa0304a1dfef3d4146b80d23534b750dd867e74b8ce2126/auto_esn-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24bed21b92454d5f0623d6e6cedd89c901fab0d23dd29cd4cbc0c1ab7848424a",
          "md5": "588c8181c7431f10123e1baf38e79aed",
          "sha256": "bed90e8125bfc30bd9b2547548f7d0ee9902a9c1b4fce0c53d622ba9ef55ece4"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "588c8181c7431f10123e1baf38e79aed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 303556,
        "upload_time": "2021-06-16T09:28:57",
        "upload_time_iso_8601": "2021-06-16T09:28:57.077376Z",
        "url": "https://files.pythonhosted.org/packages/24/be/d21b92454d5f0623d6e6cedd89c901fab0d23dd29cd4cbc0c1ab7848424a/auto_esn-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5386fd4e98adce171a3dc8ed2dd440de772ed0d4ce614858e75084a833c09d73",
          "md5": "d37b5336f32e696db2a89a6cd3a89f34",
          "sha256": "bbbc64812d76d15497f2f29ecdc2e44f9ed9209be0c8a7d82c2efb195d9ae7ff"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d37b5336f32e696db2a89a6cd3a89f34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 282506,
        "upload_time": "2021-06-16T09:29:00",
        "upload_time_iso_8601": "2021-06-16T09:29:00.111179Z",
        "url": "https://files.pythonhosted.org/packages/53/86/fd4e98adce171a3dc8ed2dd440de772ed0d4ce614858e75084a833c09d73/auto_esn-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8f4327f2cdfd37a62371a4144cdd2d320120591d292687edf7e2aeb0f883cc3",
          "md5": "b4fc94daf7f0d7e5b0401b29d4d5ed0e",
          "sha256": "845981c30c5eb2995d8516659b18426a74c23af56557f709f56479abcb760e6c"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4fc94daf7f0d7e5b0401b29d4d5ed0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 295106,
        "upload_time": "2022-12-12T18:27:03",
        "upload_time_iso_8601": "2022-12-12T18:27:03.709023Z",
        "url": "https://files.pythonhosted.org/packages/f8/f4/327f2cdfd37a62371a4144cdd2d320120591d292687edf7e2aeb0f883cc3/auto_esn-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bcccd6f96b4aa7b86d7285079c12bc0c612129714add40090d14dff5e53adc3",
          "md5": "08b89a7f668c73a1efe91a29eb00c633",
          "sha256": "0a321eaa474bb77459959c7e43645a4d97b50f76a60d643b215debc266b8df2e"
        },
        "downloads": -1,
        "filename": "auto_esn-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "08b89a7f668c73a1efe91a29eb00c633",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 287858,
        "upload_time": "2022-12-12T18:27:05",
        "upload_time_iso_8601": "2022-12-12T18:27:05.977667Z",
        "url": "https://files.pythonhosted.org/packages/9b/cc/cd6f96b4aa7b86d7285079c12bc0c612129714add40090d14dff5e53adc3/auto_esn-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8f4327f2cdfd37a62371a4144cdd2d320120591d292687edf7e2aeb0f883cc3",
        "md5": "b4fc94daf7f0d7e5b0401b29d4d5ed0e",
        "sha256": "845981c30c5eb2995d8516659b18426a74c23af56557f709f56479abcb760e6c"
      },
      "downloads": -1,
      "filename": "auto_esn-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b4fc94daf7f0d7e5b0401b29d4d5ed0e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 295106,
      "upload_time": "2022-12-12T18:27:03",
      "upload_time_iso_8601": "2022-12-12T18:27:03.709023Z",
      "url": "https://files.pythonhosted.org/packages/f8/f4/327f2cdfd37a62371a4144cdd2d320120591d292687edf7e2aeb0f883cc3/auto_esn-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9bcccd6f96b4aa7b86d7285079c12bc0c612129714add40090d14dff5e53adc3",
        "md5": "08b89a7f668c73a1efe91a29eb00c633",
        "sha256": "0a321eaa474bb77459959c7e43645a4d97b50f76a60d643b215debc266b8df2e"
      },
      "downloads": -1,
      "filename": "auto_esn-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "08b89a7f668c73a1efe91a29eb00c633",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 287858,
      "upload_time": "2022-12-12T18:27:05",
      "upload_time_iso_8601": "2022-12-12T18:27:05.977667Z",
      "url": "https://files.pythonhosted.org/packages/9b/cc/cd6f96b4aa7b86d7285079c12bc0c612129714add40090d14dff5e53adc3/auto_esn-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}