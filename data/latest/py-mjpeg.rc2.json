{
  "info": {
    "author": "Jan Janak",
    "author_email": "jan@janakj.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MJPEG Streaming Utilities for Python 3.x\n\nThis library provides utility functions for working with MJPEG streams.\nMJPEG is a simple streaming protocol running on top of HTTP that is used by many existing webcams.\nThe library provides a threaded client and a streaming generator for Flask based servers.\n\nThe library is only compatible with Python 3.x (tested on Python 3.4 and 3.5).\nIt was tested with [mjpg_streamer](https://github.com/jacksonliam/mjpg-streamer).\n\n## Installation\n```sh\npip3 install py-mjpeg\n```\n\n## Client API\n\nThe library provides a simple threaded streaming client in the file `mjpeg/client.py`.\nThe client is designed to run in a separate background thread to ensure that it can continue reading from the stream\nwhile the main thread is blocked.\nThe client automatically reconnects to the server if it gets disconnected.\n\nHere is a simple example:\n```python\nfrom mjpeg.client import MJPEGClient\n\nurl='http://example.com:8080/?action=stream'\n\n# Create a new client thread\nclient = MJPEGClient(url)\n\n# Allocate memory buffers for frames\nbufs = client.request_buffers(65536, 50)\nfor b in bufs:\n    client.enqueue_buffer(b)\n    \n# Start the client in a background thread\nclient.start()\n```\nTo obtain frame data, the application creates a list of memory buffers via `client.request_buffers`.\nEach buffer holds exactly one JPEG frame.\nThe application then requests the buffers to be filled by calling `client.enqueue_buffer`.\nOnce a buffer is enqueued, the application must no longer touch it.\n\nTo received finished frames, the application calls `client.dequeue_buffer()` repeatedly:\n\n```python\nwhile True:\n    buf = client.dequeue_buffer()\n    <do some work>\n    client.enqueue_buffer(buf)\n```\n\nThe call to `dequeue_buffer` is blocking.\nEach buffer object provides the following attributes:\n\n- **length**: The total number of bytes that can fit into the data portion of the buffer\n- **used**: The number of bytes occupied by frame data in this buffer\n- **timestamp**: The timestamp of the first byte within this buffers (obtained via time.time())\n- **sequence**: Frame's sequence number\n- **data**: Thea actual frame data\n\nYou can use a memory view to obtain frame data from the buffer:\n```python\ndata = memoryview(buf.data)[:buf.used]\n```\n\nWhen the client runs out of buffers to store frames, it will continue receiving the stream, but any frame data will be discarded.\nIf the connection is disconnected or if the client detects a protocol error, it will try to reconnect the stream automatically.\nIf the client receives a frame that is larger than the destination buffer, the frame will be discarded.\n\nThe client can be stopped via its stop() method:\n```\nclient.stop()\n```\n\nIf the client shall be restarted after calling stop() one must create a new instance as threads can only be started once:\n```\n# Create a new client thread\nclient = MJPEGClient(url)\n``` \n\nThe client provides a method called `print_stats` which can be used for debugging:\n```\nMJPEGClient:\n  URL:            : http://example.com:8080/?action=stream\n  FPS             : 30\n  Buffer overruns : 2\n  Reconnects      : 0\n  Total frames    : 2984\n  Discarded frames: 704\n  Buffer queue    : 0\n```\n\n## Server API\nThe file `mjpeg/server.py` provides a generator for Flask that can be used to generate a MJPEG stream from iterator data.\n\nHere is a simple \"echo\" example which just sends any frames received from a client back to the client:\n```python\nfrom Flask import Flask, Response\nfrom mjpeg.server import MJPEGResponse\n\ndef relay():\n    while True:\n        buf = client.dequeue_buffer()\n        yield memoryview(buf.data)[:buf.used]\n        client.enqueue_buffer(buf)\n\n@app.route('/')\ndef stream():\n    return MJPEGResponse(relay())\n\nif __name__ == '__main__':\n    app = Flask(__name__)\n    app.run(host='0.0.0.0', port=8080)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/janakj/py-mjpeg",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-mjpeg",
    "package_url": "https://pypi.org/project/py-mjpeg/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-mjpeg/",
    "project_urls": {
      "Homepage": "https://github.com/janakj/py-mjpeg"
    },
    "release_url": "https://pypi.org/project/py-mjpeg/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "MJPEG Streaming Tools",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15482235,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b27bbf5540706933c06684f173da59102eec16fcff1e6d81b1d4c42b30c9ebfc",
          "md5": "ecfb98091ab7af0a5e9e2c6cad4fd59b",
          "sha256": "aa8ef4b4655d74887e2e725106a97eb5dfddb6c4ba3dd939c1666003bdfb8447"
        },
        "downloads": -1,
        "filename": "py_mjpeg-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ecfb98091ab7af0a5e9e2c6cad4fd59b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 7708,
        "upload_time": "2020-11-28T15:31:55",
        "upload_time_iso_8601": "2020-11-28T15:31:55.758884Z",
        "url": "https://files.pythonhosted.org/packages/b2/7b/bf5540706933c06684f173da59102eec16fcff1e6d81b1d4c42b30c9ebfc/py_mjpeg-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d55650f6eaf3cc8d0e8d44c4bc8da71e5a16fdf21bd7e2921e7da233307e7670",
          "md5": "4016d8b3f4256d39ed07c60a6b4ec953",
          "sha256": "abd7401a5d5426dee90d07f5cd5d4778788c87158ecc0e636bd9ab533d1c916e"
        },
        "downloads": -1,
        "filename": "py-mjpeg-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4016d8b3f4256d39ed07c60a6b4ec953",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6458,
        "upload_time": "2020-11-28T15:31:57",
        "upload_time_iso_8601": "2020-11-28T15:31:57.240840Z",
        "url": "https://files.pythonhosted.org/packages/d5/56/50f6eaf3cc8d0e8d44c4bc8da71e5a16fdf21bd7e2921e7da233307e7670/py-mjpeg-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f23555b6843a53c9c80209d6aff5154cbe277c5b51490c2455a6de39c0176aba",
          "md5": "dc3cfc2560e7324e6ba36042f2980ab7",
          "sha256": "3ee431681858aa143e1d7866612bc91e00bb465d009a048cc1bb839addf1e1bc"
        },
        "downloads": -1,
        "filename": "py_mjpeg-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc3cfc2560e7324e6ba36042f2980ab7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 7843,
        "upload_time": "2022-10-21T03:18:35",
        "upload_time_iso_8601": "2022-10-21T03:18:35.955724Z",
        "url": "https://files.pythonhosted.org/packages/f2/35/55b6843a53c9c80209d6aff5154cbe277c5b51490c2455a6de39c0176aba/py_mjpeg-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51acb6290270824da9f6bf0b1b58a056bddb0ba6b592af827988f7eb108aefba",
          "md5": "0a652a53e1e488bc4d86e5afd50b27c2",
          "sha256": "037474d24e4a5eb17be3999a271369263e71ff058d8730f6cdd3aa629a756cef"
        },
        "downloads": -1,
        "filename": "py-mjpeg-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0a652a53e1e488bc4d86e5afd50b27c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 7028,
        "upload_time": "2022-10-21T03:18:37",
        "upload_time_iso_8601": "2022-10-21T03:18:37.676498Z",
        "url": "https://files.pythonhosted.org/packages/51/ac/b6290270824da9f6bf0b1b58a056bddb0ba6b592af827988f7eb108aefba/py-mjpeg-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f23555b6843a53c9c80209d6aff5154cbe277c5b51490c2455a6de39c0176aba",
        "md5": "dc3cfc2560e7324e6ba36042f2980ab7",
        "sha256": "3ee431681858aa143e1d7866612bc91e00bb465d009a048cc1bb839addf1e1bc"
      },
      "downloads": -1,
      "filename": "py_mjpeg-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dc3cfc2560e7324e6ba36042f2980ab7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 7843,
      "upload_time": "2022-10-21T03:18:35",
      "upload_time_iso_8601": "2022-10-21T03:18:35.955724Z",
      "url": "https://files.pythonhosted.org/packages/f2/35/55b6843a53c9c80209d6aff5154cbe277c5b51490c2455a6de39c0176aba/py_mjpeg-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51acb6290270824da9f6bf0b1b58a056bddb0ba6b592af827988f7eb108aefba",
        "md5": "0a652a53e1e488bc4d86e5afd50b27c2",
        "sha256": "037474d24e4a5eb17be3999a271369263e71ff058d8730f6cdd3aa629a756cef"
      },
      "downloads": -1,
      "filename": "py-mjpeg-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0a652a53e1e488bc4d86e5afd50b27c2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 7028,
      "upload_time": "2022-10-21T03:18:37",
      "upload_time_iso_8601": "2022-10-21T03:18:37.676498Z",
      "url": "https://files.pythonhosted.org/packages/51/ac/b6290270824da9f6bf0b1b58a056bddb0ba6b592af827988f7eb108aefba/py-mjpeg-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}