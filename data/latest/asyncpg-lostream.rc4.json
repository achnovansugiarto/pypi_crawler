{
  "info": {
    "author": "Red Hat, Inc.",
    "author_email": "info@ansible.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# asyncpg-lostream\n\nCRUD on PostgreSQL large objects using async drivers and asyncio. It is tested against SQLAlchemy.\n\n## Purpose\n\nSynchronous drivers such as `psycopg2` support large objects via a file-like interface utilizing libpg. Unfortunately, async drivers such as `asyncpg` do not support large objects at all (at this time). This module is designed to provide an interface for PostgreSQL large objects that is compatible with asyncio and async database drivers. This interface is achieved by calling the supporting PostgreSQL stored functions that are an interface to the large object store.\n\nThis interface is designed to operate on data by reading and writing in chunks so as to stream the data to and from the large object store.\n\nThis codebase is not tied or affiliated with asyncpg. It does utilize SQLAlchemy's AsyncConnection class in its typing.\n\n## PostgreSQL Large Objects\n\nA large object is a special store in PostgreSQL that operates similarly to a file. The large object itself is the record. The database data type is `bytea` (`bytes` in Python). The interface operates as a read and write to the allocated large object via read and write functions. (There are more, but they are out of scope for this project.) The data type of the large object id is `oid`. The tables used by PostgreSQL are `pg_largeobject` and `pg_largeobject_metadata`. The `pg_largeobject` table holds the data itself. The `pg_largeobject_metadata` has a link to the owner oid. These two tables are linked by the `oid` reference.\n\nWhen assiciating the large object to a table record, add an `oid` type column to hold the allocated large object `oid` value from a created large object.\n\nSee the PostgreSQL documentation [here](https://www.postgresql.org/docs/current/largeobjects.html).\n\n## Utilization\n\n### Explicit Create\n\n```python\nfrom asyncpg_lostream.lostream import PGLargeObject\n\n# It is the responsibility of the caller to resolve how an\n# AsyncEngine is created and how an AsyncConnection is created.\n\n# Create a large object\nlob_oid = await PGLargeObject.create_large_object(db)\n\n# Open a large object for read and write\npgl = PGLargeObject(async_connection, lob_oid, mode=\"rw\")\n\nwith open(\"my_data.txt\", \"r\") as data:\n    for buff in data.read(pgl.chunk_size):\n        await pgl.write(buff.encode)\n\npgl.close()\n```\n\n### Context Manager Create\n\n```python\nfrom asyncpg_lostream.lostream import PGLargeObject\n\n# It is the responsibility of the caller to resolve how an\n# AsyncEngine is created and how an AsyncConnection is created.\n\nwith open(\"my_data.txt\", \"r\") as data:\n    async with PGLargeObject(async_connection, 0, \"w\") as pgl:\n        for buff in data.read(pgl.chunk_size):\n            await pgl.write(buff.encode())\n```\n\n### Context manager read\n\n```python\nfrom asyncpg_lostream.lostream import PGLargeObject\n\n# It is the responsibility of the caller to resolve how an\n# AsyncEngine is created and how an AsyncConnection is created.\n\nasync with PGLargeObject(async_connection, existing_lob_oid, \"r\") as pgl:\n    async for buff in pgl:\n        print(buff.decode())\n```\n\n## Development\n\n### Environment\n\n1. Create a virtual environment\n    ```bash\n    python -m venv /path/to/venv\n    ```\n2. Activate the virtual environment\n    ```bash\n    source /path/to/venv/bin/activate\n    ```\n3. Ensure pip is up to date\n    ```bash\n    pip install --upgrade pip\n    ```\n4. Install packages from `requirements.txt`\n    ```bash\n    pip install -r requirements.txt\n    ```\n5. Install `pre-config`\n   ```bash\n   pre-config install\n   ```\n\n### Development\n\n`make`, `docker-compose` and `docker` are required for development.\n\nTo list the make targets, use `make help`\n\nTo start a local PostgreSQL 13 container: `make start_db`\n\nTo shutdown the local PostgreSQL 13 container: `make stop_db`\n\nAfter making changes, create your unit tests in the `asyncpg-lostream/tests` directory.\n\nTest your changes with the command `make test`\n\n## Packaging\n\nIf you intend to make a releaase, change the version in the `setup.cfg` file. This value will be copied to the module's `__version__` file.\n\nBuild the package using `make build`. This will run the tests and then build the artifacts. These will be put into the `dist/` directory.\n\nFor instructions on upload to PyPI, see the [Packaging Python Projects Dcoumentation](https://packaging.python.org/en/latest/tutorials/packaging-projects/#uploading-the-distribution-archives)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Red-HAP/asyncpg-lostream",
    "keywords": "asyncio,asyncpg,SQLAlchemy",
    "license": "Apache-2.0",
    "maintainer": "HAP",
    "maintainer_email": "hproctor@redhat.com",
    "name": "asyncpg-lostream",
    "package_url": "https://pypi.org/project/asyncpg-lostream/",
    "platform": null,
    "project_url": "https://pypi.org/project/asyncpg-lostream/",
    "project_urls": {
      "Homepage": "https://github.com/Red-HAP/asyncpg-lostream",
      "issues": "https://github.com/Red-HAP/asyncpg-lostream/issues",
      "wiki": "https://github.com/Red-HAP/asyncpg-lostream/wiki"
    },
    "release_url": "https://pypi.org/project/asyncpg-lostream/0.1.2/",
    "requires_dist": [
      "sqlalchemy[asyncio] (>=1.4)",
      "asyncpg"
    ],
    "requires_python": ">=3.9",
    "summary": "CRUD on PostgreSQL large objects using async drivers and asyncio. Data are read and written in chunks.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16004202,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f5f0180982f824c8e426fd65d6f28c242b453f140d44156a98aea87d2c769a3",
          "md5": "a31c9da81c71c3e85930df044a238dd7",
          "sha256": "28cb968a0e5f2db3d7731e38a5cbfe0d013181dfe3f4a7395a90a2cb71895c48"
        },
        "downloads": -1,
        "filename": "asyncpg_lostream-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a31c9da81c71c3e85930df044a238dd7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7109,
        "upload_time": "2022-11-22T22:46:13",
        "upload_time_iso_8601": "2022-11-22T22:46:13.626453Z",
        "url": "https://files.pythonhosted.org/packages/4f/5f/0180982f824c8e426fd65d6f28c242b453f140d44156a98aea87d2c769a3/asyncpg_lostream-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d234afb04752563f746724a6318d4bca4f7c85c9948ea81abb37c337956c3445",
          "md5": "1aa2eb76f094aff05ff4d42be6db511c",
          "sha256": "6bd58ab9c3f33e9f12e20f835d04096ac082ea982e6d8b0e6b1e10c242971ff0"
        },
        "downloads": -1,
        "filename": "asyncpg-lostream-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1aa2eb76f094aff05ff4d42be6db511c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 7338,
        "upload_time": "2022-11-22T22:46:15",
        "upload_time_iso_8601": "2022-11-22T22:46:15.260925Z",
        "url": "https://files.pythonhosted.org/packages/d2/34/afb04752563f746724a6318d4bca4f7c85c9948ea81abb37c337956c3445/asyncpg-lostream-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aa09cb883bfa18623a2d946af4a7722b17733cc6de7ab78db2630b2bc202250",
          "md5": "2f8129526de9a75b697dc4a5baef413f",
          "sha256": "a841839b77b87a9fdb5c54e1d8ae7f7c3735742bedb49feff5f02a6b69c5caa7"
        },
        "downloads": -1,
        "filename": "asyncpg_lostream-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f8129526de9a75b697dc4a5baef413f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10471,
        "upload_time": "2022-11-22T23:06:11",
        "upload_time_iso_8601": "2022-11-22T23:06:11.248182Z",
        "url": "https://files.pythonhosted.org/packages/6a/a0/9cb883bfa18623a2d946af4a7722b17733cc6de7ab78db2630b2bc202250/asyncpg_lostream-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0bd4bae1d22cfb919ed9b76a1e25a529f929798dd47cfa6028fec5b5f2985df",
          "md5": "643915f242cfc59d4955d3641a6ff240",
          "sha256": "972c0cb4b4c01616277c85d02ce64efeb07d85171d0bf00ece808b679b510c87"
        },
        "downloads": -1,
        "filename": "asyncpg-lostream-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "643915f242cfc59d4955d3641a6ff240",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10220,
        "upload_time": "2022-11-22T23:06:12",
        "upload_time_iso_8601": "2022-11-22T23:06:12.734634Z",
        "url": "https://files.pythonhosted.org/packages/e0/bd/4bae1d22cfb919ed9b76a1e25a529f929798dd47cfa6028fec5b5f2985df/asyncpg-lostream-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc0e252c207751dc1b4b78a51ec3da366c35ca6d17979da20049aa79f229d885",
          "md5": "673a20e006d6e54a081ef233bdf341ad",
          "sha256": "9db9e2d1652b5c63032634ae97c9cbc1574a606e09af7679d8d0a57e3b7218d8"
        },
        "downloads": -1,
        "filename": "asyncpg_lostream-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "673a20e006d6e54a081ef233bdf341ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10933,
        "upload_time": "2022-12-06T05:18:43",
        "upload_time_iso_8601": "2022-12-06T05:18:43.886001Z",
        "url": "https://files.pythonhosted.org/packages/fc/0e/252c207751dc1b4b78a51ec3da366c35ca6d17979da20049aa79f229d885/asyncpg_lostream-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93174dbab3eec41efde274b7903abad9bdea2db144fe77a2eeb370e805d62003",
          "md5": "b6a674f71ceb814df57db35b869aa030",
          "sha256": "fd911c1bb4e843b048bfaf87890d41a58167eef69385b9719f478472052723ee"
        },
        "downloads": -1,
        "filename": "asyncpg-lostream-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b6a674f71ceb814df57db35b869aa030",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 10636,
        "upload_time": "2022-12-06T05:18:45",
        "upload_time_iso_8601": "2022-12-06T05:18:45.930636Z",
        "url": "https://files.pythonhosted.org/packages/93/17/4dbab3eec41efde274b7903abad9bdea2db144fe77a2eeb370e805d62003/asyncpg-lostream-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8056b6fbc6ced24fb7242aa160df94b59ee3359cbea9d65e8c32fe4e16dc50da",
          "md5": "b098b94929cd020056b88660006f731f",
          "sha256": "9d8db7ea85cf3a2293dd5801d0a10abd9454bbf08db16b1a5fb6b79cb6f2eb10"
        },
        "downloads": -1,
        "filename": "asyncpg_lostream-0.1.2b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b098b94929cd020056b88660006f731f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 11001,
        "upload_time": "2022-12-06T04:29:20",
        "upload_time_iso_8601": "2022-12-06T04:29:20.499378Z",
        "url": "https://files.pythonhosted.org/packages/80/56/b6fbc6ced24fb7242aa160df94b59ee3359cbea9d65e8c32fe4e16dc50da/asyncpg_lostream-0.1.2b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a55ec5f6e584b18c2f65d0e34bad0acda7b276ef98cbb766005a2dbdd8e4b9a8",
          "md5": "69ba6e40fba8ccf21df82707e0b51943",
          "sha256": "0bd49a4b228f6703bab21e737d0dd4016a344b5da1b26a8884f8595b8be8b9ad"
        },
        "downloads": -1,
        "filename": "asyncpg-lostream-0.1.2b1.tar.gz",
        "has_sig": false,
        "md5_digest": "69ba6e40fba8ccf21df82707e0b51943",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 11993,
        "upload_time": "2022-12-06T04:29:21",
        "upload_time_iso_8601": "2022-12-06T04:29:21.959782Z",
        "url": "https://files.pythonhosted.org/packages/a5/5e/c5f6e584b18c2f65d0e34bad0acda7b276ef98cbb766005a2dbdd8e4b9a8/asyncpg-lostream-0.1.2b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc0e252c207751dc1b4b78a51ec3da366c35ca6d17979da20049aa79f229d885",
        "md5": "673a20e006d6e54a081ef233bdf341ad",
        "sha256": "9db9e2d1652b5c63032634ae97c9cbc1574a606e09af7679d8d0a57e3b7218d8"
      },
      "downloads": -1,
      "filename": "asyncpg_lostream-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "673a20e006d6e54a081ef233bdf341ad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 10933,
      "upload_time": "2022-12-06T05:18:43",
      "upload_time_iso_8601": "2022-12-06T05:18:43.886001Z",
      "url": "https://files.pythonhosted.org/packages/fc/0e/252c207751dc1b4b78a51ec3da366c35ca6d17979da20049aa79f229d885/asyncpg_lostream-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93174dbab3eec41efde274b7903abad9bdea2db144fe77a2eeb370e805d62003",
        "md5": "b6a674f71ceb814df57db35b869aa030",
        "sha256": "fd911c1bb4e843b048bfaf87890d41a58167eef69385b9719f478472052723ee"
      },
      "downloads": -1,
      "filename": "asyncpg-lostream-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b6a674f71ceb814df57db35b869aa030",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 10636,
      "upload_time": "2022-12-06T05:18:45",
      "upload_time_iso_8601": "2022-12-06T05:18:45.930636Z",
      "url": "https://files.pythonhosted.org/packages/93/17/4dbab3eec41efde274b7903abad9bdea2db144fe77a2eeb370e805d62003/asyncpg-lostream-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}