{
  "info": {
    "author": "Eduardo Avelar",
    "author_email": "eavelardev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# novation-launchpad\nA Python library for launchpad mini, mk2 and pro devices with examples.\n\nThis library is based on the wonderful [launchpad.py][20] library by FMMT666. The only difference between this library and the other version is that this one uses [python-rtmidi][21] instead of PyGame.\n\nIt is also based on [launchpad_rtmidi.py][22] library by dhilowitz. The differences between this library and the other version is that this one uses callback function instead of poll for read data and support Python 3.\n\nTested on Launchpad Mk2 device.\n\n## Install\n\n```\npip install -U novation-launchpad\n```\n\nor clone de repo and install with\n\n```\npip install -e .\n```\n\n## Use\n\nShow the [exmaples](https://github.com/eavelardev/novation-launchpad/tree/master/examples) folder.\n\n* Use the Launchpad like a Piano\n* Show 8x8 rgb images\n* Get the firmware version\n* Create a fake Launchpad MIDI ports\n\nI don't pretend update the repo, It is a simple project that I made playing with my Launchpad and I just decided to share it ;), but pull requests are welcome.\n\nI add the content of the original README file for more information.\n\nlaunchpad.py\n============\n\nA [Novation Launchpad][1] control suite for [Python][2].\n\nIf you ever dreamed of using your Launchpad for completely other stuff than music: Welcome !-)\n\nCompatible with most [tm] single board computers.\n\nWatch a 6s video [here][7].  \nOr take a look at [that one][8].  \nWhat about the brand new Launchpad Pro support? [Right][9]!\n\nHey - and the Mac? Yep, that finally works too. [Look][12] \\o/  \n\nUpcoming attraction: [Launch Control XL][15].\n\nOh, don't let us forget the [Dicer][16].\n\nOlder Launchpads might be documented [here][10].\n\nDid we mention [Python 3][18] yet?\n\n\n---\n## STATUS 2018/10/xx:\n\nWhat's hot, what's not?  \n\n### Devices\n\n    Launchpad Mk1     - class \"Launchpad()\"       LEDs and buttons\n    Launchpad/S       - class \"Launchpad()\"       LEDs and buttons\n    Launchpad Mini    - class \"Launchpad()\"       LEDs and buttons\n\n    Launchpad Mk2     - class \"LaunchpadMk2()\"    LEDs and buttons\n\n    Launchpad Pro     - class \"LaunchpadPro()\"    LEDs and buttons (digitally only (yet))\n\n    Launch Control XL - class \"LaunchControlXL()\" LEDs, buttons and potentiometers\n\n    LaunchKey (Mini)  - class \"LaunchKeyMini()\"   Buttons, keys and potentiometers (sliders for big KBs), no LEDs\n\n    Dicer             - class \"Dicer()\"           LEDs and buttons\n\n\n### Python\n\nNow with Python 3 support \\o/\n\n\n### OS\n\nNow full functionality also on Windows 10 and macOS based systems.  \nSuccessfully tested with Ubuntu 18.04-LTS+. Requires compiling your own PyGame though (which is actually very easy; see below...).\n\n\n---\n## NEWS\n\n\n### CHANGES 2018/10/XX:\n\n    - added PRO/Mk2 LedCtrlPulseByCode(), pulse LEDs by color code (RGB not supported)\n    - added PRO/Mk2 LedCtrlFlashByCode(), LED dual color flash by color codes (RGB not supported)\n    - added PRO/Mk2 LedCtrlBpm(), set pulsing/flashing rate\n    - updated PyGame compilation instructions\n    - added PRO/MK2 LedCtrlPulseXYByCode(), pulse LEDs by color code and X/Y position\n    - added PRO/MK2 LedCtrlFlashXYByCode(), flash LEDs by color code and X/Y position\n    - added PRO/MK2 flashing/pulsing example file\n    - changed version and tag to v0.8.1\n    - uploaded v0.8.1 to PyPI \\o\\\\o//o/\n\n### CHANGES 2018/06/XX:\n\n    - added notes on how to compile your own PyGame (trouble solving)\n\n### CHANGES 2018/02/XX:\n\n    - added experimental (aka \"seems quite good\") support for Python 3\n    - added Pro example/test file \"launchpad_pro.py\"\n    - improving the doc, letter by letter\n    - added Mk2 example/test file \"launchpad_mk2.py\"\n    - removed the \"Python 2 only\" restriction from the setup file\n    - changed the imports in __init__.py to work with Python 3\n    - launchpad_py now ready for installations on Python 2 and 3\n    - updated \"launchpad_pro.py\" example/test; LedCtrlChar() positioning\n    - changed version and tag to v0.8.0\n    - uploaded v0.8.0 to PyPI \\o\\\\o//o/\n    - added \"launchpad_pro-fire.py\" example; just a simple fire animation\n\n### CHANGES 2017/09/XX:\n\n    - added notes for Ubuntu 17.04 systems and /etc/alsa/alsa.conf issues\n    - added experimental 'Bad Pointer' fix upon exiting (needs more testing (w/ multiple LPads))\n\n### CHANGES 2017/08/XX:\n\n    - changed DCR; renamed InputStateRaw() to ButtonStateRaw()\n    - added DCR LedCtrlRaw()\n    - added DCR Reset()\n    - added DCR LedAllOff()\n    - added DCR \"shift-lock\" support (holding down mode buttons for additional 3*5 button events (per Dicer)\n    - added DCR ModeSet()\n    - added DCR \"one page mode\" support for buttons and LEDs\n    - added DCR support in hello.py demo\n\n### CHANGES 2017/07/29:\n\n    - added a class for the Dicer\n    - added DCR InputStateRaw() with coolest button mapping ever <3\n    - added DCR LedSetLightShow()\n\n### CHANGES 2017/06/XX:\n\n    - added support for the Launch Control XL pad\n    - added XL LedCtrlXY()\n    - added XL ButtonStateRaw(), later renamed to InputStateRaw()\n    - added XL TemplateSet()\n    - added XL potentiometer support (via InputStateRaw())\n    - added XL InputChanged()\n    - added XL InputFlush()\n    - added XL docs\n    - updated \"hello.py\" example to work with Control XL\n    - added EventRaw() for all devices\n    - added preliminary support for the LaunchKey (Mini)\n    - changed XL InputStateRaw(); added 3rd \"velocity\" field [<number>, <True/False or value>, <velocity> ]\n    - changed LaunchKey device search name from \"Launchkey Mini\" to just \"Launchkey\"\n    - added LKM InputFlush() and InputChanged() for LaunchKey(Mini)\n    - added LKM docs\n    - added LKM to the hello.py test file\n\n### CHANGES 2017/04/30:\n\n    - launchpad.py is now available via PyPI, the Python Package Index.\n\n### CHANGES 2017/04/09:\n\n    - Windows 10 and macOS SysEx issues are fixed \\o\\ \\o/ /o/\n\n### CHANGES 2017/01/XX:\n\n    - launchpad.py is now available as an [optionally] installable package;\n    - fixed unintentional installs under Python 3 dist-packages\n    - added ButtonFlush() method to empty the button buffer\n    - added Pro LedAllOn() and Mk2 Reset()\n    - added macOS notes\n    - some minor tweaks for the Mk2\n\n### CHANGES 2016/12/XX:\n\n    - added \"fireworks demo\" note (device not recognized)\n    - reworked string scrolling for Mk1 and Mk2 Launchpads:\n      - characters now adjacent\n      - no artifacts left on screen (right to left scrolling)\n      - scrolling from left to right still has some issues (\"quick hack drawback\" :)\n    - implemented same scrolling behaviour for the Pro Launchpad\n    - Mk2 LedCtrlXY() now does nothing if x/y are out of range (were clamped to 0 or 8 before)\n    - Mk2 LedCtrlXYByCode() now also exits if x/y values are out of range\n    - added LedCtrlXYByRGB() for Mk2/Pro; pass color arguments as list [r,g,b]\n    - tried to clarify \"Mk1\" color and x/y origin mode for Pro pads in the doc\n    - added ButtonStateXY() for Mk2 and Pro\n    - device name search patterns now are case insensitive\n\n### CHANGES 2016/11/XX:\n\n    - added notes about how to use it on macOS\n\n### CHANGES 2016/01/XX:\n\n    - Support for Launchpad Pro now built in (only a few functions, so far).\n      Please notice the new class for the Pro:\n        lp_pro = LaunchpadPro()\n      Except for a few, low level functions (e.g. \"LedCtrlRaw()\"), this and\n      probably all future classes will remain compatible to the good, old\n      \"Classic\" Launchpad (Mk1).\n    - added method Check(); Checks whether a device is attached.\n    - added demo code for Pro (including automatic device recognition)\n    - added Pro RGB LED control\n    - added Pro X/Y LED control for RGB and color code mode\n    - added Pro character display incl. left/right shift\n    - added Pro string scrolling\n    - Support for Launchpad Mk2 now built in\n      Please notice the new class for the Mk2:\n        lp_pro = LaunchpadMk2()\n    - classes for \"Pro\" and \"Mk2\" now with default names for Open() and Check();\n    - \"Pro\" now automatically put in \"Ableton Live mode\" after opening it.\n      No need to push \"Setup - Live\" button anymore.\n    - added Mk2 LedCtrlRawByCode() and LedCtrlXYByCode()\n    - added Pro ButtonStateRaw(); first *damn fast* button reads \\o/\n\n### CHANGES 2016/01/10:\n\n    - The current version does not work with Mac OS X.\n      Regarding that, as well as the fact that PyGame somehow reached its\n      end of life, I am currently looking for other Midi libraries or implementations.\n    - I bought a Launchpad Pro. Time to implement this, although I am not sure\n      what will come first, building a new Midi system or implementing the Pro.\n\n### CHANGES 2015/02/21:\n\n    - Support for multiple Launchpads now finally built in. Use 'em all:\n        lp1 = launchpad.Launchpad()\n        lp2 = launchpad.Launchpad()\n        lp1.Open(0)\n        lp2.Open(1)\n\n### CHANGES 2015/02/18:\n\n    - Added option to select a Launchpad if more than one is attached.\n      Also supports search for a device string, e.g. \"Mini\".\n    - Added optional parameters <number> and <name> to Open()\n\n\n---\n## Upcoming attractions, notes and thoughts\n\n  - \"All\": either remove or add the (non-) optional \\<colorcode\\> argument to all methods\n  - \"All\": RGB to color code approximation (for flash/pulse and color code methods)\n  - \"DCR\": query mode\n  - \"CXL\": x/y support (if it makes sense...)\n  - \"All\": LedCtrlChar() make y-offset work\n  - \"Pro\": change ButtonStateXY() to return True/False + velocity, as in the LaunchKeyMini\n  - \"Pro\": remove the \"Mk1\" compatibility from the \"Pro\" functions (blue LEDs and intensity values)\n  - \"All\": [r,g,b] lists for colors, instead of single args (might affect compatibility)\n  - \"Pro\": implement native text scrolling\n  - \"Pro\": support full analog reads (button already pressed, but intensity changes)\n  - \"Doc\": split installation and usage (and condense that a little)\n  - \"All\": fix manual text scrolling\n  - \"All\": replace MIDI cmd numbers with sth human readable (144->Note On; 176->Control Change, etc...)\n  - \"All\": custom bitmaps and graphics\n  - \"All\": event system\n  - \"All\": better custom font support\n  - \"All\": [r,g,b] lists for colors, instead of single args (might affect compatibility)\n  - ...\n\n\n---\n## Installation/Usage\n\n### Install as Python package\n\n#### Via pip from PyPI\n\nPlease notice that the PyPI version is not always up to date!  \nSimply execute\n\n    pip install launchpad_py\n\nor\n\n    sudo pip install launchpad_py\n\n(in case you need superuser rights) to install it.  \nNotice that the required dependencies (see below) are not automatically resolved and you need to install PyGame separately.\n\nAlso make sure that you're using the right \"pip\", matching your Python 2 or 3 preference.  \nCheck with\n\n    pip --version\n\nWhich should bring up somewthing like:\n\n    pip 9.0.1 from /usr/lib/python2.7/dist-packages (python 2.7)\n\nFor explicitly installing this in an Python 3 environment, use\n\n    pip3 install launchpad_py\n\n\n#### From local file system\n\nIf you downloaded the Launchpad.py source package, simply execute the command\n\n      python setup.py install\n\nfrom the base directory or \n\n      sudo python setup.py install\n\nif superuser access is required.\n\nLoad and use the module with\n\n      import launchpad_py\n      ...\n      ...\n      # Mk1 Launchpad:\n      lp = launchpad_py.Launchpad()\n      # Mk2 Launchpad:\n      lp = launchpad_py.LaunchpadMk2()\n      # Pro Launchpad:\n      lp = launchpad_py.LaunchpadPro()\n      # Control XL:\n      lp = launchpad_py.LaunchControlXL()\n      # LaunchKey Mini:\n      lp = launchpad_py.LaunchKeyMini()\n      # Dicer:\n      lp = launchpad_py.Dicer()\n\nor if you dislike typing that much, use\n\n      import launchpad_py as lppy\n      ...\n      ...\n      lp = lppy.Launchpad()\n      lp = lppy.LaunchpadMk2()\n      lp = lppy.LaunchpadPro()\n      lp = lppy.LaunchControlXL()\n      lp = lppy.LaunchKeyMini()\n      lp = lppy.Dicer()\n\nFor compatibility with existing code, use\n\n      import launchpad_py as launchpad\n\n\n#### Install directly from Github\n\nInstead of downloading the source distribution, you can directly install it from Github\nby executing\n\n      pip install git+https://github.com/FMMT666/launchpad.py\n\n\n#### Via your system's package manager, e.g. on Raspbian\n\n    ATTENTION Raspberry Pi Raspbian user. This is for you!\n\nSome Linux distributions come with their own PyGame package.  \nCheck your manual :)\n\nWith \"apt\", for example, you could either try\n\n    apt search pygame\n\nor\n\n    apt-cache search pygame\n    apt-cache search pygame | grep pygame\n\nMake sure to install the right PyGame version, matching your Python 2 or 3 prefewrence.  \nSample output from a Raspbian Jesse:\n\n    python-pygame - SDL bindings for games development in Python (Python 2)\n    python3-pygame - SDL bindings for games development in Python (Python 3)\n\nAn Ubuntu 17.0.1, which comes with Python 3 as default, outputs\n\n    python-pygame - SDL bindings for games development in Python\n    python-pygame-sdl2 - reimplementation of the Pygame API using SDL2\n\nbut this is only a Python 2 installation of PyGame.\n\n\n### Direct usage\n\nIf you don't want to or cannot install the package on your system, simply\ncopy the two files\n\n      launchpad.py\n      charset.py\n\nto your working directory.  \nUse those files as described above, but without the \"_py\":\n\n      import launchpad\n      ...\n      ...\n      # Mk1 Launchpad:\n      lp = launchpad.Launchpad()\n      ...\n\nor\n\n      import launchpad as LP\n      ...\n      ...\n      lp = LP.Launchpad()\n      ...\n\n### Universal loading template code\n\n#### Checks for an installed version first, loads local one as the last resort\n\n      import sys\n\n      try:\n        import launchpad_py as launchpad\n      except ImportError:\n        try:\n          import launchpad\n        except ImportError:\n          sys.exit(\"error loading lauchpad.py\")\n\n#### Checks for a local version first (file in same folder), uses the installed one secondary\n\n      import sys\n\n      try:\n        import launchpad as launchpad\n      except ImportError:\n        try:\n          import launchpad_py\n        except ImportError:\n          sys.exit(\"error loading lauchpad.py\")\n\n\n---\n## License\n\n[CC BY 4.0, Attribution 4.0 International][11]\n\nYou are free to:\n\nShare — copy and redistribute the material in any medium or format  \nAdapt — remix, transform, and build upon the material for any purpose, even commercially.\n\nThe licensor cannot revoke these freedoms as long as you follow the license terms.\n\n\n---\n## Requirements\n\n  - [Python][2] 2, 3\n  - [Pygame][3] v1.9.1, (v1.9.2), v1.9.3, v1.9.4-XX\n\nSome Pygame versions do not work on some OSes (e.g. v1.9.2 might cause trouble\nwith Windows 7/10). I cannot tell you any more than just \"try!\".  \nThe latest fixes (4/2017) were tested with v1.9.3 (via pip from Python 2.7.13)\nand Windows 10 (x64). That seems to work fine again...\n\nAs of 2/2018, launchpad.py comes with Python 3 support.  \nTested, so far:  \n\n  - Windows 10, Python 3.6.4, PyGame 1.9.3 (via pip), MK2 Pad\n  - macOS Sierra, Python 3.6 (Macports), PyGame 1.9.3 (via pip), Pro Pad\n  - Raspbian Jessy, RPi3, Python 3.4.2, PyGame 1.9.2a0 (via apt), Mini Pad\n\nPython 3 might not (yet and out-of-the-box) work for:  \n\n  - stock Ubuntu 16.04.3-LTS (requires building PyGame from sources)\n  - stock Ubuntu 17.04       (same)\n  - stock Ubuntu 17.10       (same)\n  - stock Ubuntu 18.04       (workaround available)\n\nSee below for instructions on how to compile PyGame on your own...\n\n\nPreviously, launchpad.py was tested under\n\n  - Linux, 32 bit, 64 bit\n  - Windows XP, 32 bit\n  - Windows 7, 32 bit, 64 bit\n  - Windows 10, 64 bit\n  - macOS Sierra\n  - [Raspberry-Pi 1/2/3][4]\n  - Beagle Bone (Black)\n  - Banana Pi (Pro/M2/R1)\n  - pcDuino V3\n  - ...\n\nSupported and tested red/green LED Launchpad devices, here referred  to as \"Classic\" or \"Mk1\":\n\n  - Launchpad (the original, old \"Mk1\")\n  - Launchpad S\n  - Launchpad Mini (Mk1)\n\nSupported and tested full RGB Launchpad devices:\n\n  - Launchpad Pro\n  - Launchpad Mk2\n\nSupported completely different stuff:\n\n  - Launch Control XL\n  - LaunchKey (Mini)\n  - Dicer\n\nNotice that Novation now (1/2016) sells an RGB Launchpad under the same\nname it once shipped the first red/green LED with!\n\n---\n## Compiling your own PyGame\n\n If you have problems with errors like \"alsa.conf\" or the ListAll() method\n not recognizing any attached Launchpads on newer systems, especially Ubuntu 17/18,\n you might consider compiling your own PyGame version.\n\n This explanation is for Ubuntu 18.04-LTS and Python 3, but it should work [tm] for most other systems too.\n\n Additional package requirements, install them with\n\n    sudo apt-get install <package name>\n\n I recommend installing these one after another (for easy \"debugging\")\n\n    git\n    automake\n    cmake\n    libsdl1.2-dev\n    libportmidi-dev\n    python3-setuptools\n    python3-dev\n    ...\n\n### Compile via \"setup.py\"\n\n Find the complete compilation instructions [here][19].\n\n Download the PyGame source code.  \n Notice that this will create a sub-folder named \"pygame\":\n\n    git clone https://github.com/pygame/pygame\n\n Enter that directory and type\n\n     python3 setup.py build\n\n which results in something like:\n\n    ...\n    No package 'freetype2' found\n    WARNING: \"pkg-config freetype2\" failed!\n    SDL     : found 1.2.15\n    FONT    : not found\n    IMAGE   : not found\n    MIXER   : not found\n    PNG     : found\n    JPEG    : not found\n    SCRAP   : found\n    PORTMIDI: found\n    PORTTIME: found\n    FREETYPE: not found\n\n    Warning, some of the pygame dependencies were not found. Pygame can still\n    compile and install, but games that depend on those missing dependencies\n    will not run. Would you like to continue the configuration? [Y/n]\n\n If you need a fully working PyGame, with all features, I leave it up to you,\n to resolve the remaining \"not found\" issues, but they're not required by Launchpad.py\n\n Make sure PORTMIDI and PORTTIME are marked with \"found\", then continue the build process.\n After a hopfully error-free build, execute (Ubuntu example for superuser access)\n\n    sudo python3 setup.py install\n\n  After a short time, you now should have PyGame in the default path\n\n    /usr/local/lib/python3.6/dist-packages/\n\n ...\n\n\n### Compile via \"configure\" (old)\n\n Newer Python variants come with a fully functional setup.py (see above).  \n I just leave the old compiling instructions here...\n\n Download the PyGame source code.  \n Notice that this will create a sub-folder named \"pygame\":\n\n    git clone https://github.com/pygame/pygame\n\n Enter that directory and type\n\n     ./configure\n\n which results in something like:\n\n    ...\n    No package 'freetype2' found\n    WARNING: \"pkg-config freetype2\" failed!\n    SDL     : found 1.2.15\n    FONT    : not found\n    IMAGE   : not found\n    MIXER   : not found\n    PNG     : found\n    JPEG    : not found\n    SCRAP   : found\n    PORTMIDI: found\n    PORTTIME: found\n    FREETYPE: not found\n\n If you need a fully working PyGame, with all features, I leave it up to you,\n to resolve the remaining \"not found\" issues, but they're not required by Launchpad.py\n\n Next, type\n\n    make\n\n to create the build files, followed by a\n\n    sudo python3 setup.py install\n\n After a short time, you now should have PyGame in the default path\n\n    /usr/local/lib/python3.6/dist-packages/\n\n ...\n\n\n---\n## Random Notes\n\n### Button, value and potentiometer polling\n\n Until now (6/2017), Launchpad.py does not have an event system built in. You need to poll the buttons' or\n potentiometer's values manually.  \n Notice that actually nothing will get lost, but every event you create will be buffered (until you run out\n or memory :). If you don't poll the buttons or potentiometers regulary, your might end up with thousands\n of old states and values, blocking the current input.  \n Especially rotating a potentiometer or pushing a slider, creates an event for each single value that\n was sampled. This can easily be hundreds of messages in a few seconds.\n\n So either poll regulary or use the ButtonFlush()/InputFlush() method to clear everything.\n\n Also notice that the buffer might be filled right after you started your application...\n\n\n### For Launchpad Mk1 users (the original \"Classic\" Launchpad):\n\n      USE CLASS \"Launchpad\":\n\n        lp = launchpad.Launchpad()\n\n### For Launchpad Pro users\n\n      USE CLASS \"LaunchpadPro\":\n\n        lp = launchpad.LaunchpadPro()\n\n      As of 2016/01/24, the \"Pro\" is now automatically set to \"Ableton Live mode\",\n      which is required for launchpad.py to work.\n\n### For Launchpad Mk2 users\n\n      USE CLASS \"LaunchpadMk2\":\n\n        lp = launchpad.LaunchpadMk2()\n\n### For Launch Control XL users\n\n      USE CLASS \"LaunchControlXL\":\n\n        lp = launchpad.LaunchControlXL()\n\n### For LaunchKey (Mini) users\n\nEven it is named \"Mini\", it also supports most of the bigger keyboards' functionalities.  \nNotice that some of the button and key numbers collide and cannot be differed.\n\n      USE CLASS \"LaunchKeyMini\":\n\n        lp = launchpad.LaunchKeyMini()\n\n### For Dicer users\n\n      USE CLASS \"Dicer\":\n\n        lp = launchpad.Dicer()\n\nThe Dicer uses \"page\" mode by default. The three small buttons \"cue\", \"loop\" and \"auto loop\"\nselect six different pages (per Dicer module) and each of those can be handled independently.\n\nThe first set of the six mode is enabled by simply pushing (and releasing) on of the three mode\nbuttons, the second set, \"shift-mode\" is activated by holding down one of the mode buttons while\npushing a number button.\n\nSo, if the \"cue\" page is active and you try to activate an LED in the \"loop\" page, that\nwill not be visible until you activate that page.\n\n\n### alsa.conf issues\n\nSeveral users reported errors because of a missing alsa.conf file, e.g.:\n\n    ALSA lib conf.c:3009:(snd_config_update_r) Cannot access file /etc/alsa/alsa.conf\n    ALSA lib seq.c:935:(snd_seq_open_noupdate) Unknown SEQ default\n\nIf /etc/alsa/alsa.conf does not exist, you can create a symbolic link to where it resides on\nyour system. Find it with:\n\n    find /etc /usr -name \"alsa.conf\"\n\nIf that command can _not_ find \"alsa.conf\" (a common place is /usr/share/alsa/alsa.conf), you\nprobably don't have Alsa installed at all.\n\nIn all other cases, you can create a symbolic link from /etc/alsa/alsa.conf to the real, existing file\n(assuming /usr/share/alsa/alsa.conf here).  \nWarning: Double check whether /etc/alsa/alsa.conf _really_ does not exist first!\n\n    sudo mkdir /etc/alsa\n    sudo ln -s /usr/share/alsa/alsa.conf /etc/alsa/alsa.conf\n\nAfter that, you still might experience that Launchpad.py cannot find any MIDI devices.  \nThe output from \"lp.ListAll()\" does not return anything and executing the \"hello.py\" example just shows\nsomething like:\n\n    Exception AttributeError: \"'NoneType' object has no attribute 'quit'\" in <bound method __Midi.__del__\n    ... of <launchpad_py.launchpad.__Midi instance at 0x7f0860cb3128>> ignored\n\nIn this case, the default sequencer entries might be missing in your alsa.conf.  \nYou might wish to add this to your alsa.conf:\n\n    #\n    #  Sequencer interface\n    #\n\n    seq.default {\n      type hw\n      hint.description \"Added by experts. Source: Internet \\o/\"\n    }\n\n    seq.hw {\n    type hw\n    }\n\nThanks to [MartinPaulEve][17] for pointing that out.  \nPlease notice that this \"fix\" won't work on all systems. While it does, for example,\nwork with Ubuntu 17.04, the same error usually just indicates that your system was not\nbuilt with a PyGame compatible ALSA (PortMidi) version.  \nThere is no easy fix for this (unless you wish to spend a lot of time completely recompiling your system...)\n\n\n### For Mac users\n\n#### Mac Python and Pygame\n\nGood news, everybody. It now works with macOS Sierra \\o/  \nBest part: It even works with the stock \"Apple Python\".\n\nPygame can be installed via \"pip\". Just enter \"pip\" on the console\nto see whether it is installed:\n\n        pip\n\nIf it isn't, you can install it with:\n\n        sudo easy_install pip\n\nIf pip is working, search for Pygame via pip (console command):\n\n        sudo pip search pygame\n\nSomewhere in the list, you should see something like\n\n        Pygame (1.9.2b8)   - Python Game Development\n\nInstall that with:\n\n        sudo pip install pygame\n\n#### Hardware\n\nNotice that the original Launchpad Mk1 requires an USB driver. Thanks, [Stewart!][13].  \nGet it from [here][14] (Novation USB Driver-2.7.dmg).\n\nAs it seems, all newer Launchpads work right out of the box, no driver required.\n\n### For Raspberry Pi users\n\nPlease notice that some the newer RGB LED Launchpads consume more current than a\nRaspberry Pi can deliver. If you turn on a lot of LEDs, the Launchpad will just reset and show the fireworks demo.  \nAt least for the Launchpad Pro, you could use an external power supply adapter. For the Mk2, you\nwould need a an \"USB-Y\" cable, with the \"power plug\" connected to an external power supply (or other PC).\n\nAs written somewhere above, at least for Raspbian (Jesse), you should install Raspbian's PyGame version\nvia the package manager or apt. The PyPI version (installation via \"pip\") will not work due to some missing SDL components.  \n\nBtw, you can check your Raspbian version with the console command\n\n    cat /etc/os-release\n\nWhich outputs something comparable to\n\n    PRETTY_NAME=\"Raspbian GNU/Linux 8 (jessie)\"\n    NAME=\"Raspbian GNU/Linux\"\n    VERSION_ID=\"8\"\n    VERSION=\"8 (jessie)\"\n    ...\n\n\n### For Windows users\n\n      MIDI implementation in PyGame 1.9.2+ is broken and running this might\n      bring up an 'insufficient memory' error ( pygame.midi.Input() ).\n\n      SOLUTION: use v1.9.1 or try v1.9.3\n\n### For Linux and especially Raspberry-Pi users:\n\n      Due to some bugs in PyGame's MIDI implementation, the buttons of the Launchpad Mk1\n      won't work after you restarted a program (LEDs are not affected).\n\n      WORKAROUND #2: Simply hit one of the AUTOMAP keys (the topmost 8 buttons).\n                     For whatever reason, this makes the MIDI button events\n                     appearing again...\n\n      WORKAROUND #1: Pull the Launchpad's plug out and restart... (annoying).\n\n### Other Notes\n\n#### Launchpad (Pro) not recognized, playing fireworks demo\n\nJust discovered another oddity...\n\nI attached a Launchpad Pro to my Linux box, as many times before, to finally add the\nbutton methods, but it refused to show up as an USB device. Instead of the \"note mode\",\nindicated by a turquoise/pink colour pattern, it played that \"fireworks animation\" and\ndid nothing...\n\nThe first time I discovered that, I blamed it on an attached FTDI UART chip, but as it\nturned out, that was not the reason it didn't work.\n\nIt simply was a power issue.\n\nSo, if your Launchpad Pro shows that firework demo, check your USB cable!  \nSeriously. That thing draws a lot of current and most USB cables simply\ndo not conform to the USB standard (or your USB port isn't, e.g. Raspberry Pi).\n\nOn Linux, you can check that via the console command \"dmesg\".  \nIf the output contains hundreds of \"urb status -32\" errors, followed by\n\n    ...\n    [ 1414.983069] usb 1-1.5: urb status -32\n    [ 1414.983232] usb 1-1.5: urb status -32\n    [ 1414.983345] usb 1-1.5: urb status -32\n    [ 1414.983456] usb 1-1.5: urb status -32\n    [ 1414.983495] usb 1-1.5: USB disconnect, device number 8\n    [ 1414.983568] usb 1-1.5: urb status -32\n    [ 1414.983692] usb 1-1.5: urb status -32\n    [ 1415.288539] usb 1-1.5: new full-speed USB device number 9 using dwc_otg\n    [ 1415.445968] usb 1-1.5: New USB device found, idVendor=1235, idProduct=0051\n    [ 1415.445984] usb 1-1.5: New USB device strings: Mfr=1, Product=2, SerialNumber=3\n    [ 1415.445992] usb 1-1.5: Product: Launchpad Pro\n    [ 1415.446000] usb 1-1.5: Manufacturer: Focusrite A.E. Ltd\n    [ 1415.446009] usb 1-1.5: SerialNumber: Launchpad Pro\n    ...\n\nMy USB cable \"looked quite good\" from the outside.  \nWith its ~5.5mm diameter, I assumed it had AWG 22 (~60mOhm/m) or better, but it in fact\nhas ~drumroll~ AWG 28 (~240mOhm/m) and two thick plastic strings to fill the gaps.\n\nWell, we all know that companies try to save money wherever they can, but that's just\nfraud...\n\nBtw, the fireworks demo will play whenever the Launchpad cannot be enumerated (configured).  \n[...]\n\n---\n## Common class methods overview (valid for all devices)\n\n### Device control functions\n\n    Open( [name], [number], [template (*1*)] )\n    Close()\n    Reset()\n    ButtonFlush()\n\n    (*1*) Control XL only\n\n\n### Utility functions\n\n    ListAll()\n    EventRaw()\n\n\n---\n## Launchpad Mk1 \"Classic\" class methods overview (valid for green/red LED devices)\n\n### LED functions\n\n    LedGetColor( red, green )\n    LedCtrlRaw( number, red, green )\n    LedCtrlXY( x, y, red, green )\n    LedCtrlRawRapid( allLeds )\n    LedCtrlAutomap( number, red, green )\n    LedAllOn()\n    LedCtrlChar( char, red, green, offsx = 0, offsy = 0 )\n    LedCtrlString( str, red, green, dir = 0 )\n\n### Button functions\n\n    ButtonChanged()\n    ButtonStateRaw()\n    ButtonStateXY()\n    ButtonFlush()\n\n\n---\n## Launchpad \"Mk2\" and \"Pro\" class methods overview (valid for RGB LED devices)\n\n### LED functions\n\n    LedSetMode( mode )\n    LedGetColorByName( name )\n    LedCtrlRaw( number, red, green, [blue] )\n    LedCtrlRawByCode( number, [colorcode] )\n    LedCtrlPulseByCode( number, colorcode )\n    LedCtrlPulseXYByCode( x, y, colorcode )\n    LedCtrlFlashByCode( number, colorcode )\n    LedCtrlFlashXYByCode( x, y, colorcode )\n    LedCtrlBpm( bpm )\n    LedCtrlXY( x, y, red, green, [blue] )\n    LedCtrlXYByCode( x, y, colorcode )\n    LedCtrlXYByRGB( x, y, colorlist )\n    LedCtrlChar( char, red, green, [blue], [offsx], [offsy] )\n    LedCtrlString( string, red, green, [blue], [direction], [waitms] )\n    LedAllOn( [colorcode] )\n\n\n### Button functions\n\n    ButtonStateRaw()\n    ButtonStateXY()\n    ButtonFlush()\n\n\n### Color codes\n\nAll RGB Launchpads have a 128 color palette built-in.  \nControlling LEDs with colors from the palette is about three times faster than\nusing the, indeed much more comfortable, RGB notation.\n\nFunctions requiring a color code have a \"...ByCode\" naming style.\n\n![RGB color palette](/images/lppro_colorcodes.png)\n\n\n\n---\n## Launch Control XL class methods overview\n\n*WORK IN PROGESS*\n\n### Device\n    TemplateSet( template )\n\n\n### LED functions\n\n    LedGetColor( red, green )\n    LedCtrlRaw( number, red, gree )\n    LedCtrlXY( x, y, red, green )\n    LedAllOn( [colorcode] )\n\n\n### Input functions\n\n    InputChanged()\n    InputFlush()\n    InputStateRaw()\n\n\n\n---\n## LaunchKey Mini class methods overview\n\n*WORK IN PROGESS*\n\n### LED functions\n\n    TODO\n\n\n### Input functions\n\n    InputChanged()\n    InputFlush()\n    InputStateRaw()\n\n\n---\n## Dicer class methods overview\n\n*WORK IN PROGESS*\n\n### LED functions\n\n    LedSetLightshow()\n    LedCtrlRaw()\n    LedAllOff()\n\n\n### Button functions\n\n    ButtonStateRaw()\n\n\n\n---\n## Detailed description of common Launchpad methods\n\n### Open( [number], [name], [template (1)] )\n\n    Opens the a Launchpad and initializes it.  \n    Please notice that some devices have up to six MIDI entries!.\n\n    (1) Notice that <template> is only valid for the Launch Control XL pad.\n    A number of 1..8 selects and activates a user template (1 by default)\n    or 9..16 a factory one.\n    This corresponds to holding down one of the \"Template buttons\" and\n    selecting the template number via the bottom button row.\n\n    A dump by ListAll(), with a \"Pro\", a Mk1 \"Mini\" and a \"Mk2\" might look like:\n\n        ('ALSA', 'Midi Through Port-0', 0, 1, 0)\n        ('ALSA', 'Midi Through Port-0', 1, 0, 0)\n        ('ALSA', 'Launchpad Pro MIDI 1', 0, 1, 1)\n        ('ALSA', 'Launchpad Pro MIDI 1', 1, 0, 1)\n        ('ALSA', 'Launchpad Pro MIDI 2', 0, 1, 0)\n        ('ALSA', 'Launchpad Pro MIDI 2', 1, 0, 0)\n        ('ALSA', 'Launchpad Pro MIDI 3', 0, 1, 0)\n        ('ALSA', 'Launchpad Pro MIDI 3', 1, 0, 0)\n        ('ALSA', 'Launchpad Mini MIDI 1', 0, 1, 0)\n        ('ALSA', 'Launchpad Mini MIDI 1', 1, 0, 0)\n        ('ALSA', 'Launchpad MK2 MIDI 1', 0, 1, 0)\n        ('ALSA', 'Launchpad MK2 MIDI 1', 1, 0, 0)\n        ('ALSA', 'Launch Control XL MIDI 1', 0, 1, 1)\n        ('ALSA', 'Launch Control XL MIDI 1', 1, 0, 1)\n\n    You'll only need to count the entries if you have two or more identical Launchpads attached.\n\n      PARAMS: <number>   OPTIONAL, number of Launchpad to open.\n                         1st device = 0, 2nd device = 1, ...\n                         Defaults to 0, the 1st device, if not given.\n              <name>     OPTIONAL, only consider devices whose names contain\n                         the string <name>. The default names for the classes are:\n                           Launchpad()       -> \"Launchpad\"\n                           LaunchpadMk2()    -> \"Mk2\"\n                           LaunchpadPro()    -> \"Pro\"\n                           LaunchControlXL() -> \"Control XL\"\n                           LaunchKeyMini()   -> \"Launchkey\" (should work for all variants)\n                         It is sufficient to search for a part of the string, e.g.\n                         \"chpad S\" will find a device named \"Launchpad S\" or even\n                         \"Novation Launchpad S\"\n              <template> OPTIONAL, ONLY CONTROL XL\n                         The Launch Control XL supports eight user and eight factory settings,\n                         selectable via the two \"Template\" burrons on the top right.\n                         By default, Launchpad.py uses the template \"User 1\".\n                         1.. 8 -> select user template    1..8\n                         9..16 -> select factory template 1..8\n\n      RETURN: True     success\n              False    error\n\n\tAs of 12/2016, the name search patterns are case insensitive, hence strings like \"mk2\", \"pRo\"\n\tor even \"lAunCHpAd MiNI\" are valid too.\n\n    Notice that the default name for the class Launchpad(), the \"Mk1\" or \"Classic\" Launchpads,\n    will also react to an attached \"Pro\" or \"Mk2\" model. In that case, it's required to either\n    enter the complete name (as shown by \"ListAll()\").\n\n\n      EXAMPLES:\n              # Open the first device attached:\n              lp.Open()\n\n              # Open the 2nd Launchpad:\n              lp.Open( 1 )\n\n              # Open the 3rd Launchpad Mini:\n              lp.Open( 2, \"Launchpad Mini\")\n\n              # alternative:\n              lp.Open( name = \"Launchpad Mini\", number = 0)\n\n              # open the 1st \"Mk2\"\n              lp = launchpad.LaunchpadMk2()    # notice the \"Mk2\" class!\n              lp.Open()                        # equals Open( 0, \"Mk2\" )\n\n              # open the 1st \"Pro\"\n              lp = launchpad.LaunchpadPro()    # notice the \"Pro\" class!\n              lp.Open()                        # equals Open( 0, \"Pro\" )\n\n              # open the 1st \"XL\" with user template 3\n              lp = launchpad.LaunchControlXL( template = 3 )\n              lp.Open()\n\n              # open the 1st \"XL\" with factory template 2\n              lp = launchpad.LaunchControlXL( template = 10 )\n              lp.Open()\n\n\n\n### Check( [number], [name] )\n\n    Checks if a device is attached.\n    Uses exactly the same notation as Open(), but only returns True or False,\n    without opening anything.\n\n    Like Open(), this method uses different default names for the different classes:\n      Launchpad()        -> \"Launchpad\"\n      LaunchpadMk2()     -> \"Mk2\"\n      LaunchpadPro()     -> \"Pro\"\n      LaunchControlXL()  -> \"Control XL\"\n      LaunchKeyMini()    -> \"Launchkey\"\n\n    Notice that it's absolutely safe to query for an \"Pro\" or \"Mk2\" from all classes, e.g.:\n\n      lp = lauchpad.Launchpad()        # Launchpad \"Mk1\" or \"Classic\" class\n      if lp.Check( 0, \"Pro\" ):         # check for \"Pro\"\n        lp = launchpad.LaunchpadPro()  # \"reload\" the new class for the \"Pro\"\n        lp.Open()                      # equals lp.Open( 0, \"Pro\" )\n\n    Search patterns are case insensitive.  \n\n      PARAMS: see Open()\n\n      RETURN: True     device exists\n              False    device does not exist\n\n\n### Close()\n\n    Bug in PyGame. Don't call it (yet)...\n\n      PARAMS:\n      RETURN:\n\n\n### ButtonFlush()\n\n    Flushes the Launchpads button buffer.\n    If you do not poll the buttons frequently or even if your software is not running,\n    the Launchpad will store each button event in its buffer.\n    This function can be used to clear all button events.\n\n      PARAMS:\n      RETURN:\n\n\n### ListAll()\n\n    Debug function.\n    Can be called any time and does not even require Open().\n    Prints a list of all detected MIDI devices and addresses.\n\n      PARAMS:\n      RETURN:\n\n\n### EventRaw()\n\n    Debug function.\n    Returns an unprocessed list of all MIDI events.\n\n\n      PARAMS:\n      RETURN: []  an empty list if nothing happened or this MIDI message:\n              [[[ <cmd>, <data1>, <data2>, <res> ], <timestamp> ]] \n\n\n---\n## Detailed description of Launchpad Mk1 \"Classic\" only methods\n\n\n### Reset()\n\n    Resets the Launchpad and (quickly) turns off all LEDs.\n    Notice that only the Mk1 performs a \n\n      PARAMS:\n      RETURN:\n\n\n### LedGetColor( red, green )\n\n    Returns a the special Launchpad color coding format, calculated\n    from a red and green intensity value.\n\n      PARAMS: <red>    red   LED intensity 0..3\n              <green>  green LED intensity 0..3\n      RETURN: number   Launchpad color code\n\n\n### LedCtrlRaw( number, red, green )\n\n    Controls an LED via its number (see table somewhere below)\n\n      PARAMS: <number> number of the LED to control\n              <red>    red   LED intensity 0..3\n              <green>  green LED intensity 0..3\n      RETURN:\n\n\n### LedCtrlXY( x, y, red, green )\n\n    Controls an LED via its coordinates.\n\n      PARAMS: <x>      x coordinate of the LED to control\n              <y>      y coordinate of the LED to control\n              <red>    red   LED intensity 0..3\n              <green>  green LED intensity 0..3\n      RETURN:\n\n\n### LedCtrlRawRapid( allLeds )\n\n    Sends a list of consecutive, special color values to the Launchpad.\n    Requires (less than) half of the commands to update all buttons:\n    [ LED1, LED2, LED3, ... LED80 ]\n    First, the 8x8 matrix is updated, left to right, top to bottom.\n    Afterwards, the algorithm continues with the rightmost buttons and\n    the top \"automap\" buttons.\n\n    LEDn color format: 00gg00rr <- 2 bits green, 2 bits red (0..3)\n    Function LedGetColor() will do the coding for you...\n\n    Notice that the amount of LEDs needs to be even.\n    If an odd number of values is sent, the next, following LED is\n    turned off!\n\n      PARAMS: <allLeds> A list of up to 80 Launchpad color codes.\n      RETURN:\n\n\n### LedCtrlAutomap( number, red, green )\n\n    Control one of the \"automap\" buttons (top row).\n    Legacy function, provided for compatibility.\n\n      PARAMS: <number> number of the LED to control\n              <red>    red   LED intensity 0..3\n              <green>  green LED intensity 0..3\n\n### LedAllOn()\n\n    Turns on all LEDs.\n\n      PARAMS: \n      RETURN:\n\n\n### LedCtrlChar( char, red, green, offsx = 0, offsy = 0 )\n\n    Sends character <char> in colors <red/green> (0..3 each) and\n    lateral offset <offsx> (-8..8) to the Launchpad.\n    <offsy> does not have yet any function.\n\n    It is highly recommended to use <offsx> and <offsy> as\n    named parameters, for compatible code with the RGB Launchpads, e.g.:\n\n      lp.LedCtrlChar( 'a', 3, 2, offsx = xvar )\n\n      PARAMS: <char>   one field string to display; e.g.: 'A'\n              <red>    red   LED intensity 0..3\n              <green>  green LED intensity 0..3\n              <offsx>  x offset of the character on the main, 8x8 matrix (-8..8)\n                       Negative is left and positive right.\n              <offsy>  no function\n      RETURN:\n\n      EXAMPLES:\n              # scroll a red 'A' from left to right\n              for x in range( -8, 9 ):\n                lp.LedCtrlChar( 'A', 3, 0, offsx = x )\n                time.wait( 100 )\n\n\n### LedCtrlString( string, red, green, direction = 0, waitms = 150 )\n\n    Scrolls <string> across the Launchpad's main, 8x8 matrix.\n    <red/green> specify the color and intensity (0..3 each).\n    <direction> determines the direction of scrolling.\n    Dirty hack: <waitms>, by default 150, delays the scrolling speed.\n\n    WARNING:\n    Too short times will overflow the Launchpad's buffer and mess up\n    the screen.\n\n    For future compatibility, it is highly recommended to use\n    <direction> and <waitms> as a named arguments, e.g.:\n\n      lp.LedCtrlString( \"Hello\", 3,1, direction = -1, waitms = 100 )\n\n\n      PARAMS: <string>     a string to display; e.g.: 'Hello'\n              <red>        red   LED intensity 0..3\n              <green>      green LED intensity 0..3\n              <direction> -1 -> scroll right to left\n                           0 -> do not scroll, just show the character\n                           1 -> scroll left to right\n              <waitms>     OPTIONAL: delay for scrolling speed, default 150\n      RETURN:\n\n\n### ButtonChanged()\n\n    Returns True if a button event occured. False otherwise.\n\n      PARAMS:\n      RETURN: True/False\n\n\n### ButtonStateRaw()\n\n    Returns the state of the buttons in RAW mode.\n\n      PARAMS:\n      RETURN: [ ]                        An empty list if no event occured, otherwise...\n              [ <button>, <True/False> ] ... a list with two fields:\n              <button> is the RAW button number, the second field determines\n              if the button was pressed <True> or released <False>.\n\n\n### ButtonStateXY()\n\n    Returns the state of buttons in X/Y mode.\n\n      PARAMS:\n      RETURN: [ ]                        An empty list if no event occured, otherwise...\n              [ <x>, <y>, <True/False> ] ... a list with three fields:\n              <x> is the x coordinate of the button, <y>, guess what, the\n              y coordinate. The third field reveals if the button was pressed\n              <True> or released <False>.\n\n\n---\n## Detailed description of Launchpad \"Pro\" or \"Mk2\" only methods\n\n### LedSetMode( mode ) *>>> PRO ONLY <<<*\n\n    Sets the Launchpad's mode.\n    For proper operation with launchpad.py, the \"Pro\" must be set to \"Ableton Live\" mode.\n    There is no need to call this method as it is automatically executed within Open().\n\n      PARAMS: <mode>   0 selects \"Ableton Live mode\" (what we need)\n                       1 selects \"Standalone mode\"   (power-up default)\n      RETURN:\n\n\n### LedGetColorByName( name )\n\n    WORK IN PROGRESS! ONLY A FEW COLORS, SO FAR!\n\n    Returns a color in the special Launchpad Pro color code format, derived\n    from a color name, in the string <name>.\n    [...]\n\n      PARAMS: <name>   a name of a color in lower caps, \"red\", \"green\"...\n      RETURN: number   Launchpad Pro color code\n\n      EXAMPLES:\n              colorRed = LP.LedGetColorByName( \"red\" )\n\n    Supported, so far:\n      off, black, white, red, green\n\n\n### LedCtrlRaw( number, red, green, [blue] )\n\n    +++ NOTICE:\n    +++   It is recommended to always call this with a \"blue\" parameter.\n    +++   The compatibility mode will be removed soon. \n\n    Controls an LED via its number and red, green and blue intensity values.\n\n    This method uses system-exclusive MIDI messages, which require 10 bytes to\n    be sent for each message. For a faster version, hence less comfortable version,\n    see LedCtrlRawByCode() below (though even sending 10 bytes is pretty fast on the Pro).\n\n    If <blue> is omitted, this method runs in \"Mk1\" compatibility mode, which only\n    had red/green LEDs and intensities ranging from 0..3. In that mode, the input\n    arguments are multiplied by 21, to map 0..3 to 0..63.\n\n    Notice that the \"Pro\" and \"Mk2\" have different LED number layouts.\n    Please see tables, somewhere below.\n\n      PARAMS: <number>    number of the LED to control\n              <red>       a number from 0..63\n              <green>     a number from 0..63\n              <blue>      OPTIONAL, a number from 0..63\n      RETURN:\n\n\n### LedCtrlRawByCode( number, [colorcode] )\n\n    Controls an LED via its number and color code.\n    If <colorcode> is omitted, 'white' is used.\n    This is about three times faster than the comfortable RGB method LedCtrlRaw().\n\n      PARAMS: <number>     number of the LED to control\n              <colorcode>  a number from 0..127 (see image; white if omitted)\n      RETURN:\n\n\n### LedCtrlPulseByCode( number, colorcode )\n\n    Controls an LED via its number and color code, as \"LedCtrlRawByCode()\" does,\n    but pulsing the LED instead of just turning it on or off.\n    If <colorcode> is omitted, 'white' is used.\n    Pulsing can be turned off by simply sending another on/off command.\n    The pulsing rate can be (roughly) set by LedCtrlBpm()\n\n    Notice that there is no RGB control variant of this method (not supported by Launchpad).\n\n      PARAMS: <number>     number of the LED to control\n              <colorcode>  a number from 0..127 (see image)\n      RETURN:\n\n\n### LedCtrlPulseXYByCode( x, y, colorcode, [mode] )\n\n    Pulses an LED via its x/y coordinates and color codes.\n    An additional <mode> parameter determines the origin of the x-axis.\n\n    For \"Pro\" only:\n      By default, if <mode> is omitted, the origin of the x axis is the left side\n      of the 8x8 matrix, like in the \"Mk1\" mode (those devices had no round buttons\n      on the left).\n      If <mode> is set to \"pro\" (string), x=0 will light up the round buttons on the\n      left side. Please also see the table for X/Y modes somewhere at the end of this\n      document.\n\n      PARAMS: <x>          x coordinate of the LED to control\n              <y>          y coordinate of the LED to control\n              <colorcode>  a number from 0..127 (see image)\n              <mode>       OPTIONAL: \"pro\" selects new x/y origin >>> PRO ONLY <<<\n      RETURN:\n\n\n### LedCtrlFlashByCode( number, colorcode )\n\n    Flashes an LED between two colors or on/off.\n    The first color can be set by any \"LedCtrl...()\" command, the second color and the\n    activation of the flashing is then done by this method.\n    Flashing can be turned off by simply sending another on/off/color command.\n    The flashing rate can be (roughly) set by LedCtrlBpm()\n\n    Notice that there is no RGB control variant of this method (not supported by Launchpad).\n\n      PARAMS: <number>     number of the LED to control\n              <colorcode>  a number from 0..127 (see image)\n      RETURN:\n\n      EXAMPLES:\n              LP.LedCtrlRawByCode( 81, 16 )      # set top left LED (#81) to green (\"16\") (Mk2)\n              LP.LedCtrlFlashByCode( 81, 6 )     # now set 2nd color to red (\"6\") and flash LED #81\n\n              LP.LedCtrlXY( 0, 1, 63, 63, 63 )   # set top left LED to white (Mk2)\n              LP.LedCtrlFlashByCode( 81, 6 )     # now set 2nd color to red (\"6\") and flash LED #81\n\n\n### LedCtrlFlashXYByCode( x, y, colorcode, [mode] )\n\n    Flashes an LED via its x/y coordinates and color codes.\n    An additional <mode> parameter determines the origin of the x-axis.\n\n    For \"Pro\" only:\n      By default, if <mode> is omitted, the origin of the x axis is the left side\n      of the 8x8 matrix, like in the \"Mk1\" mode (those devices had no round buttons\n      on the left).\n      If <mode> is set to \"pro\" (string), x=0 will light up the round buttons on the\n      left side. Please also see the table for X/Y modes somewhere at the end of this\n      document.\n\n      PARAMS: <x>          x coordinate of the LED to control\n              <y>          y coordinate of the LED to control\n              <colorcode>  a number from 0..127 (see image)\n              <mode>       OPTIONAL: \"pro\" selects new x/y origin >>> PRO ONLY <<<\n      RETURN:\n\n\n### LedCtrlBpm( bpm )\n\n    EXPERIMENTAL/PRELIMINARY\n\n    Sets the LED's pulsing or flashing frequency in beats per minute (bpm).\n    By default, the Launchpads are set to 120 bpm.\n\n    Notice that this comes with several restrictions (yet):\n\n     - This function blocks for 67.5 / bpm seconds, e.g.:\n          40 bpm - 1688 ms\n         100 bpm -  675 ms\n         240 bpm -  281 ms\n        so it should only be called if absolutely necessary, preferably right in the beginning.\n\n      - Due to the shortest time step of 1ms and the way the Launchpads handle the timing settings,\n        the bpm values are restricted to:\n\n          10 ms - 250 bpm     23 ms - 108 bpm     36 ms -  69 bpm     49 ms -  51 bpm\n          11 ms - 227 bpm     24 ms - 104 bpm     37 ms -  67 bpm     50 ms -  50 bpm\n          12 ms - 208 bpm     25 ms - 100 bpm     38 ms -  65 bpm     51 ms -  49 bpm\n          13 ms - 192 bpm     26 ms -  96 bpm     39 ms -  64 bpm     52 ms -  48 bpm\n          14 ms - 178 bpm     27 ms -  92 bpm     40 ms -  62 bpm     53 ms -  47 bpm\n          15 ms - 166 bpm     28 ms -  89 bpm     41 ms -  60 bpm     54 ms -  46 bpm\n          16 ms - 156 bpm     29 ms -  86 bpm     42 ms -  59 bpm     55 ms -  45 bpm\n          17 ms - 147 bpm     30 ms -  83 bpm     43 ms -  58 bpm     56 ms -  44 bpm\n          18 ms - 138 bpm     31 ms -  80 bpm     44 ms -  56 bpm     57 ms -  43 bpm\n          19 ms - 131 bpm     32 ms -  78 bpm     45 ms -  55 bpm     58 ms -  43 bpm\n          20 ms - 125 bpm     33 ms -  75 bpm     46 ms -  54 bpm     59 ms -  42 bpm\n          21 ms - 119 bpm     34 ms -  73 bpm     47 ms -  53 bpm     60 ms -  41 bpm\n          22 ms - 113 bpm     35 ms -  71 bpm     48 ms -  52 bpm     61 ms -  40 bpm\n\n      PARAMS: <bpm>     beats per minute, 40..240\n      RETURN:\n\n      EXAMPLES:\n              LP.LedCtrlBpm( 100 )      # set LED flashing/pulsing to ~100 beats per minute\n\n\n\n### LedCtrlXY( x, y, red, green, [blue], [mode] )\n\n    +++ NOTICE:\n    +++   It is recommended to always call this with a \"blue\" parameter.\n    +++   The compatibility mode will be removed soon. \n\n    Controls an LED via its x/y coordinates and red, green or blue intensity values.\n    An additional <mode> parameter determines the origin of the x-axis.\n\n    If <blue> is omitted, this method operates in \"Mk1\" compatibility mode.\n    The Mk1 Launchpad only had 2 bit intensity values (0..3). In compatibility\n    mode, these values are now multiplied by 21, to extend the range to 0..63.\n    That way, old, existing code, written for the classic Launchpads does not\n    need to be changed.\n\n    For \"Pro\" only:\n      By default, if <mode> is omitted, the origin of the x axis is the left side\n      of the 8x8 matrix, like in the \"Mk1\" mode (those devices had no round buttons\n      on the left).\n      If <mode> is set to \"pro\" (string), x=0 will light up the round buttons on the\n      left side. Please also see the table for X/Y modes somewhere at the end of this\n      document.\n\n    This method uses system-exclusive MIDI messages, which require 10 bytes to\n    be sent for each message. For a faster version, hence less comfortable version,\n    see LedCtrlXYByCode() below.\n\n      PARAMS: <x>      x coordinate of the LED to control\n              <y>      y coordinate of the LED to control\n              <red>    red   LED intensity 0..63 (or 0..3 in \"Mk1\" mode)\n              <green>  green LED intensity 0..63 (or 0..3 in \"Mk1\" mode)\n              <blue>   blue  LED intensity 0..63 (omit  for  \"Mk1\" mode)\n              <mode>   OPTIONAL: \"pro\" selects new x/y origin >>> PRO ONLY <<<\n      RETURN:\n\n\n### LedCtrlXYByCode( x, y, colorcode, [mode] )\n\n    Controls an LED via its x/y coordinates and a color from the color palette.\n\n    Except for the color code, this function does the same as LedCtrlXY() does,\n    but about 3 times faster.\n\n      PARAMS: <x>          x coordinate of the LED to control\n              <y>          y coordinate of the LED to control\n              <colorcode>  a number from 0..127\n              <mode>       OPTIONAL: \"pro\" selects new x/y origin >>> PRO ONLY <<<\n      RETURN:\n\n\n### LedCtrlXYByRGB( x, y, colorlist, [mode] )\n\n    Controls an LED via its x/y coordinates and a list of colors in RGB format.\n\n    This function does the same as LedCtrlXY() does, except that the color information\n    is now passed in as list [R,G,B].\n\n      PARAMS: <x>          x coordinate of the LED to control\n              <y>          y coordinate of the LED to control\n              <colorlist>  a list with [ R, G, B ] color codes; each from 0..63\n              <mode>       OPTIONAL: \"pro\" selects new x/y origin >>> PRO ONLY <<<\n      RETURN:\n\n      EXAMPLES:\n              LP.LedCtrlXYByRGB( 3, 7, [63, 42, 0] )\n\n\n### LedCtrlChar( char, red, green, [blue], offsx = 0, offsy = 0 )\n\n    +++ NOTICE:\n    +++   It is recommended to always call this with a \"blue\" parameter.\n    +++   The compatibility mode will be removed soon.\n\n    Sends character <char> in colors <red/green/blue> (0..63 each) and\n    lateral offset <offsx> (-8..8) to the Launchpad.\n    <offsy> does not have yet any function.\n\n    It is highly recommended to use <offsx> and <offsy> as\n    named parameters, for compatible code with the RGB Launchpads, e.g.:\n\n      lp.LedCtrlChar( 'a', 3, 2, offsx = xvar )\n\n    If <blue> is ommited, this methods runs in \"Mk1\" compatibility\n    mode and multiplies the <red> and <green> intensity values with 21, to\n    adapt the old 0..3 range to the new 0..63 one of the \"Pro\" mode.\n    That way, it is compatible to old, existing \"Mk1\" code.\n\n      PARAMS: <char>   one field string to display; e.g.: 'A'\n              <red>    red   LED intensity 0..63 (or 0..3 in \"Mk1\" mode)\n              <green>  green LED intensity 0..63 (or 0..3 in \"Mk1\" mode)\n              <blue>   blue  LED intensity 0..63 (omit  for  \"Mk1\" mode)\n              <offsx>  x offset of the character on the main, 8x8 matrix (-8..8)\n                       Negative is left and positive right.\n              <offsy>  no function\n      RETURN:\n\n      EXAMPLES:\n              # scroll a purple 'A' from left to right\n              for x in range( -8, 9 ):\n                lp.LedCtrlChar( 'A', 63, 0, 63, offsx = x )\n                time.wait( 100 )\n\n\n### LedCtrlString( string, red, green, [blue], direction = 0, waitms = 150 )\n\n    +++ NOTICE:\n    +++   It is recommended to always call this with a \"blue\" parameter.\n    +++   The compatibility mode will be removed soon (and the output on\n    +++   Mk2 and Pro pads might be messed up).\n\n    Notice that the Launchpad Pro has string scrolling capabilities built in, but\n    this function provides the old, Mk1 compatible functionality. Advantages\n    are custom fonts and symbols (in the future).\n\n    Scrolls a string <str> across the Launchpad's main, 8x8 matrix.\n    <red/green/blue> specify the color and intensity (0..63 each).\n    <direction> determines the direction of scrolling.\n    Dirty hack: <waitms>, by default 150, delays the scrolling speed.\n\n    If <blue> is omitted, \"Mk1\" compatibility mode is turned on and the old\n    0..3 <red/green> intensity values are strechted to 0..63.\n\n    For future compatibility, it is highly recommended to use\n    <direction> and <waitms> as a named arguments, e.g.:\n\n      lp.LedCtrlString( \"Hello\", 3,1, direction = -1, waitms = 100 )\n\n\n      PARAMS: <string>     a string to display; e.g.: 'Hello'\n              <red>        red   LED intensity 0..63 (or 0..3 in \"Mk1\" mode)\n              <green>      green LED intensity 0..63 (or 0..3 in \"Mk1\" mode)\n              <blue>       green LED intensity 0..63 (omit  for  \"Mk1\" mode)\n              <direction> -1 -> scroll right to left\n                           0 -> do not scroll, just show the character\n                           1 -> scroll left to right\n              <waitms>     OPTIONAL: delay for scrolling speed, default 150\n      RETURN:\n\n\n### LedAllOn( [colorcode] )\n\n    Quickly sets all LEDs to the color code given by <colorcode>.\n    If <colorcode> is omitted, 'white' is used.\n\n      PARAMS: <colorcode>   OPTIONAL, a number from 0..127\n      RETURN:\n\n\n### ButtonStateRaw()\n\n    Returns the state of the buttons in RAW mode.\n\n    Notice that this is not directly compatible with the \"Mk1\" ButtonStateRaw()\n    method, which returns [ <button>, <True/False> ].\n\n      PARAMS:\n      RETURN: [ ]                    An empty list if no event occured, otherwise...\n              [ <button>, <value> ]  ... a list with two fields:\n              <button> is the button number, the second field, <value> determines\n              the intensity (0..127) with which the button was pressed.\n              0 means that the button was released.\n\n\n### ButtonStateXY( [mode] )\n\n    Returns the state of the buttons in X/Y mode.\n\n    Notice that this is not directly compatible with the \"Mk1\" ButtonStateRaw()\n    method, which returns [ <button>, <True/False> ].\n\n      PARAMS: <mode>       OPTIONAL: \"pro\" selects new x/y origin >>> PRO ONLY <<<\n      RETURN: [ ]                    An empty list if no event occured, otherwise...\n              [ <x>, <y>, <value> ]  ... a list with three fields:\n              <x> and <y> are the button's coordinates. The third field, <value> determines\n              the intensity (0..127) with which the button was pressed.\n              0 means that the button was released.\n              Notice that \"Mk2\" Pads will only return either 0 or 127.\n              They don't have the full analog mode like the \"Pro\" has.\n\n\n\n---\n## Detailed description of Launch Control XL specific methods\n\n*WORK IN PROGRESS*\n\n\n### TemplateSet( template )\n\n    Activates one of the user or factory templates, as specified by <template>.\n\n      PARAMS: 1.. 8    activate user template    1..8\n              9..16    activate factory template 1..8\n\n      RETURN:\n\n\n### Reset()\n\n    Resets the Launchpad and (quickly) turns off all LEDs.\n    Notice that only the Mk1 performs a \n\n      PARAMS:\n      RETURN:\n\n\n### LedGetColor( red, green )\n\n    Returns a the special Launchpad color coding format, calculated\n    from a red and green intensity value.\n\n      PARAMS: <red>    red   LED intensity 0..3\n              <green>  green LED intensity 0..3\n      RETURN: number   Launchpad color code\n\n\n### LedCtrlRaw( number, red, green )\n\n    Controls an LED via its number (see table somewhere below)\n\n      PARAMS: <number> number of the LED to control\n              <red>    red   LED intensity 0..3\n              <green>  green LED intensity 0..3\n      RETURN:\n\n\n### LedCtrlXY( x, y, red, green )\n\n    Controls an LED via its coordinates.\n\n      PARAMS: <x>      x coordinate of the LED to control\n              <y>      y coordinate of the LED to control\n              <red>    red   LED intensity 0..3\n              <green>  green LED intensity 0..3\n      RETURN:\n\n\n### InputChanged()\n\n    Returns True if a button or potentiometer event occured. False otherwise.\n\n      PARAMS:\n      RETURN: True/False\n\n\n### InputFlush()\n\n    Flushes the Launch Control XL's input buffer.\n    If you do not poll the buttons or potentiometer values frequently or even if your software\n    is not running, the Launch Control XL will store each event in its buffer.\n    This function can be used to clear all button and potentiometer events.\n\n      PARAMS:\n      RETURN:\n\n\n### InputStateRaw()\n\n    Returns the state of the buttons or the value of the last potentiometer change in RAW mode.\n\n    In case the last event was caused by a button being pressed or released, this function\n    returns the button number and either \"True\" or \"False\" or if a potentiometer was rotated\n    or a slider moved, its value (0..127).\n\n    Notice that this is different from other's Launchpad \"ButtonStateRaw()\" methods, as it\n    forces you to check whether the 2nd field is a number or a boolean value.\n\n    Notice that the Control XL buttons do not support an analog velocity value.\n    For compatibility, either \"0\" or \"127\" are returned in the third list field, corresponding\n    to \"False\" (0) or \"True\" (127).\n\n      PARAMS:\n      RETURN: [ ]                               An empty list if no event occured, otherwise either\n              [ <button>, <True/False>, 0/127 ] the button number, True or False and the velocity\n              [ <potnum>, <value>     , 0     ] the potentiometer number and its value 0..127\n              <button> and <potnum> are the RAW button or potentiometer numbers, the second field\n              either determines the state of the button (\"True\" if pressed, \"False\" if released) or\n              returns the value of the potentiometer that was changed.\n\n      EXAMPLES:\n\n        xlEvent = lp.InputStateRaw()\n        if xlEvent != []:\n          if xlEvent[1] is True or xlEvent[1] is False:\n            print( \"Button        \", xlEvent[0], xlEvent[1] )\n          else:\n            print( \"Potentiometer \", xlEvent[0], xlEvent[1] )\n\n\n---\n## Detailed description of LaunchKey (Mini) specific methods\n\n\n### InputChanged()\n\n    Returns True if a button, key or potentiometer event occured. False otherwise.\n\n      PARAMS:\n      RETURN: True/False\n\n\n### InputFlush()\n\n    Flushes the buffer of the LaunchKey (Mini)'s.\n    If you do not poll the buttons, keys or potentiometer values frequently or even if your software\n    is not running, the Launch Control XL will store each event in its buffer.\n    This function can be used to clear all button and potentiometer events.\n\n      PARAMS:\n      RETURN:\n\n\n### InputStateRaw()\n\n    Returns the state of the buttons, keys or the value of the last potentiometer change in RAW mode.\n\n    In case the last event was caused by a button being pressed or released, this function\n    returns the button number and either \"True\" or \"False\" or if a potentiometer was rotated\n    or a slider moved, its value (0..127).\n\n    Notice that this is different from other's Launchpad \"ButtonStateRaw()\" methods, as it\n    forces you to check whether the 2nd field is a number or a boolean value.\n\n      PARAMS:\n      RETURN: [ ]                                    An empty list if no event occured, otherwise either\n              [ <button>, <True/False>, <velocity> ] the button number, True or False and the velocity\n              [ <key>,    <True/False>, <velocity> ] the key number and its velocity 0..127\n              [ <potnum>, <value>     , 0          ] the potentiometer number and its value 0..127\n              <button>, <key> and <potnum> are the RAW button, key or potentiometer numbers, the second\n              field either determines the state of the button or key (\"True\" if pressed, \"False\" if released)\n              or returns the value of the potentiometer that was changed.\n\n      EXAMPLES:\n\n        lkEvent = lp.InputStateRaw()\n        if lkEvent != []:\n          if lkEvent[1] is True or lkEvent[1] is False:\n            print( \"Button/Key    \", lkEvent[0], lkEvent[1], lkEvent[2] )\n          else:\n            print( \"Potentiometer \", lkEvent[0], lkEvent[1] )\n\n\n\n---\n## Detailed description of Dicer specific methods\n\n\n### Reset()\n\n    Resets the Dicer, (quickly) turns off all LEDs and restores the power-on defaults.\n    Notice that an enabled light show will *not* be stopped.\n\n      PARAMS:\n      RETURN:\n\n\n### ModeSet( device, mode )\n\n    Enables on of the seven modes (or button and LED \"pages\") of the Dicer:\n\n      0  cue\n      1  cue + shift\n      2  loop\n      3  loop + shift\n      4  auto loop \n      5  auto loop + shift\n      6  one page mode\n\n    See ButtonStateRaw(), LedCtrlRaw() or the Dicer's button and LED table at the end of this\n    document to see how mode 0..5 work.\n\n    If the \"one page mode\" is enabled, the mode buttons themselves do not select a bank anymore,\n    but return a value instead.\n\n      PARAMS: <device>     0 = master, 1 = slave\n              <mode>       0..6 as specifies above\n      RETURN:\n\n\n### ButtonStateRaw()\n\n    Returns the state of the buttons in (an already nicely mapped :) RAW mode.\n    The returned numbers of the buttons equal the labels on the Dicer's buttons, with\n    the following extension (also see the LED/button mapping ASCII drawing somewhere below):\n\n    The three mode buttons \"cue\", \"loop\" and \"auto loop\" act as a modifier and add the following\n    numbers to the button value.\n    For \"shift\" operation, continue to hold down one of the three mode buttons while pressing a number.\n\n      Master, \"cue\":        01 ..  05  +shift:  06 ..  10\n      Master, \"loop\":       11 ..  15  +shift:  16 ..  20\n      Master, \"auto loop\":  21 ..  25  +shift:  26 ..  30\n\n      Slave,  \"cue\":       101 .. 105  +shift: 106 .. 110\n      Slave,  \"loop:       111 .. 115  +shift: 116 .. 120\n      Slave,  \"auto loop\": 121 .. 115  +shift: 126 .. 130\n\n    In \"one page mode\", the mode buttons do not have a special function but return a value upon being pressed:\n\n      Master, \"cue\":         6\n      Master, \"loop\":        7\n      Master, \"auto loop\":   8\n\n      Slave,  \"cue\":       106\n      Slave,  \"loop:       107\n      Slave,  \"auto loop\": 108\n\n    The mode can either be set by pushing/holding down the corresponding buttons\n    or via ModeSet( <device>, <mode> ).\n\n      PARAMS:\n      RETURN: [ ]                                 An empty list if no event occured, otherwise\n              [ <button>, <True/False>, <0/127> ] the button number, True or False and the velocity (only 0 or 127).\n\n\n\n### LedSetLightshow( device, enable )\n\n    Enables or disables the built-in LED light show of the Dicer.\n    Notice that the dicer will do nothing (else) during the light show.\n\n      PARAMS: <device>    0 selects master, 1 selects slave\n              <enable>    True turns the light show on, False off\n      RETURN:\n\n\n### LedCtrlRaw( number, hue, intensity )\n\n    Control an LED via its number, a hue and intensity information.\n    The number of the LED to control corresponds to the button's labels 1..5,\n    with the following modifiers:\n\n      Master, \"cue\":        01 ..  05  +shift:  06 ..  10\n      Master, \"loop\":       11 ..  15  +shift:  16 ..  20\n      Master, \"auto loop\":  21 ..  25  +shift:  26 ..  30\n\n      Slave,  \"cue\":       101 .. 105  +shift: 106 .. 110\n      Slave,  \"loop:       111 .. 115  +shift: 116 .. 120\n      Slave,  \"auto loop\": 121 .. 115  +shift: 126 .. 130\n\n    In \"one page mode\", the mode LEDs can be controlled via:\n\n      Master, \"cue\":         6\n      Master, \"loop\":        7\n      Master, \"auto loop\":   8\n\n      Slave,  \"cue\":       106\n      Slave,  \"loop:       107\n      Slave,  \"auto loop\": 108\n\n    The mode can either be set by pushing/holding down the corresponding buttons\n    or via ModeSet( <device>, <mode> ).\n\n    The color shade can be controlled with <hue>, avalue from 0..7:\n\n      0  red\n      1  red-orange\n      2  orange\n      3  orange-amber\n      4  amber\n      5  yellow\n      6  yellow-green\n      7  green\n\n    I just leave that as it is. Complaints can be sent to Novation :'-)\n\n\n      PARAMS: <number>     number of the LED (see Dicer mapping table somewhere below)\n              <hue>        0..7 hue value (see text above)\n              <intensity>  LED intensity value 0..15\n      RETURN:\n\n\n### LedAllOff()\n\n    Quickly turns off all LEDs on all Dicers.\n    No other settings are affected.\n\n\n      PARAMS:\n      RETURN:\n\n\n---\n## Button and LED codes, Launchpad Mk1 \"Classic\" (red/green LEDs)\n\n### RAW mode\n\n    +---+---+---+---+---+---+---+---+ \n    |200|201|202|203|204|205|206|207| < or 0..7 with LedCtrlAutomap()\n    +---+---+---+---+---+---+---+---+   \n\n    +---+---+---+---+---+---+---+---+  +---+\n    |  0|...|   |   |   |   |   |  7|  |  8|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 16|...|   |   |   |   |   | 23|  | 24|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 32|...|   |   |   |   |   | 39|  | 40|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 48|...|   |   |   |   |   | 55|  | 56|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 64|...|   |   |   |   |   | 71|  | 72|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 80|...|   |   |   |   |   | 87|  | 88|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 96|...|   |   |   |   |   |103|  |104|\n    +---+---+---+---+---+---+---+---+  +---+\n    |112|...|   |   |   |   |   |119|  |120|\n    +---+---+---+---+---+---+---+---+  +---+\n\n### X/Y mode\n\n      0   1   2   3   4   5   6   7      8   \n    +---+---+---+---+---+---+---+---+ \n    |0/0|1/0|   |   |   |   |   |   |         0\n    +---+---+---+---+---+---+---+---+ \n\n    +---+---+---+---+---+---+---+---+  +---+\n    |0/1|   |   |   |   |   |   |   |  |   |  1\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |   |   |   |  |   |  2\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |5/3|   |   |  |   |  3\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |   |   |   |  |   |  4\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |   |   |   |  |   |  5\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |4/6|   |   |   |  |   |  6\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |   |   |   |  |   |  7\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |   |   |   |  |8/8|  8\n    +---+---+---+---+---+---+---+---+  +---+\n\n\n---\n## Button and LED codes, Launchpad \"Mk2\" (RGB LEDs)\n\n### RAW mode\n\n    +---+---+---+---+---+---+---+---+ \n    |104|   |106|   |   |   |   |111|\n    +---+---+---+---+---+---+---+---+ \n\n    +---+---+---+---+---+---+---+---+  +---+\n    | 81|   |   |   |   |   |   |   |  | 89|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 71|   |   |   |   |   |   |   |  | 79|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 61|   |   |   |   |   | 67|   |  | 69|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 51|   |   |   |   |   |   |   |  | 59|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 41|   |   |   |   |   |   |   |  | 49|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 31|   |   |   |   |   |   |   |  | 39|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 21|   | 23|   |   |   |   |   |  | 29|\n    +---+---+---+---+---+---+---+---+  +---+\n    | 11|   |   |   |   |   |   |   |  | 19|\n    +---+---+---+---+---+---+---+---+  +---+\n\n\n### X/Y mode\n\n      0   1   2   3   4   5   6   7      8   \n    +---+---+---+---+---+---+---+---+ \n    |0/0|   |2/0|   |   |   |   |   |         0\n    +---+---+---+---+---+---+---+---+ \n\n    +---+---+---+---+---+---+---+---+  +---+\n    |0/1|   |   |   |   |   |   |   |  |   |  1\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |   |   |   |  |   |  2\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |5/3|   |   |  |   |  3\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |   |   |   |  |   |  4\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |   |   |   |  |   |  5\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |4/6|   |   |   |  |   |  6\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |   |   |   |  |   |  7\n    +---+---+---+---+---+---+---+---+  +---+\n    |   |   |   |   |   |   |   |   |  |8/8|  8\n    +---+---+---+---+---+---+---+---+  +---+\n\n\n---\n## Button and LED codes, Launchpad \"Pro\" (RGB LEDs)\n\n### RAW mode\n\n           +---+---+---+---+---+---+---+---+ \n           | 91|   |   |   |   |   |   | 98|\n           +---+---+---+---+---+---+---+---+ \n\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    | 80|  | 81|   |   |   |   |   |   |   |  | 89|\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    | 70|  |   |   |   |   |   |   |   |   |  | 79|\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    | 60|  |   |   |   |   |   |   | 67|   |  | 69|\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    | 50|  |   |   |   |   |   |   |   |   |  | 59|\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    | 40|  |   |   |   |   |   |   |   |   |  | 49|\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    | 30|  |   |   |   |   |   |   |   |   |  | 39|\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    | 20|  |   |   | 23|   |   |   |   |   |  | 29|\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    | 10|  |   |   |   |   |   |   |   |   |  | 19|\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n\n           +---+---+---+---+---+---+---+---+ \n           |  1|  2|   |   |   |   |   |  8|\n           +---+---+---+---+---+---+---+---+ \n\n### X/Y \"Classic\" mode\n\n      9      0   1   2   3   4   5   6   7      8   \n           +---+---+---+---+---+---+---+---+ \n           |0/0|   |2/0|   |   |   |   |   |         0\n           +---+---+---+---+---+---+---+---+ \n\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |0/1|   |   |   |   |   |   |   |  |   |  1\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |9/2|  |   |   |   |   |   |   |   |   |  |   |  2\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |   |   |   |   |   |5/3|   |   |  |   |  3\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |   |   |   |   |   |   |   |   |  |   |  4\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |   |   |   |   |   |   |   |   |  |   |  5\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |   |   |   |   |4/6|   |   |   |  |   |  6\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |   |   |   |   |   |   |   |   |  |   |  7\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |9/8|  |   |   |   |   |   |   |   |   |  |8/8|  8\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n\n           +---+---+---+---+---+---+---+---+ \n           |   |1/9|   |   |   |   |   |   |         9\n           +---+---+---+---+---+---+---+---+ \n\n### X/Y \"Pro\" mode\n\n      0      1   2   3   4   5   6   7   8      9\n           +---+---+---+---+---+---+---+---+ \n           |1/0|   |3/0|   |   |   |   |   |         0\n           +---+---+---+---+---+---+---+---+ \n\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |1/1|   |   |   |   |   |   |   |  |   |  1\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |0/2|  |   |   |   |   |   |   |   |   |  |   |  2\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |   |   |   |   |   |6/3|   |   |  |   |  3\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |   |   |   |   |   |   |   |   |  |   |  4\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |   |   |   |   |   |   |   |   |  |   |  5\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |   |   |   |   |5/6|   |   |   |  |   |  6\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |   |  |   |   |   |   |   |   |   |   |  |   |  7\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n    |0/8|  |   |   |   |   |   |   |   |   |  |9/8|  8\n    +---+  +---+---+---+---+---+---+---+---+  +---+\n\n           +---+---+---+---+---+---+---+---+ \n           |   |2/9|   |   |   |   |   |   |         9\n           +---+---+---+---+---+---+---+---+ \n\n\n\n---\n## Buttons, LED and potentiometer codes, Launch Control XL\n\nNotice that the two \"template\" buttons on the top right cannot be controlled (NOP).\n\n\n### RAW mode\n\n        +---+---+---+---+---+---+---+---+  +---++---+\n        | 13| 29| 45| 61| 77| 93|109|125|  |NOP||NOP| \n        +---+---+---+---+---+---+---+---+  +---++---+\n        | 14| 30| 46| 62| 78| 94|110|126|  |104||105| \n        +---+---+---+---+---+---+---+---+  +---++---+\n        | 15| 31| 47| 63| 79| 95|111|127|  |106||107| \n        +---+---+---+---+---+---+---+---+  +---++---+\n\n        +---+---+---+---+---+---+---+---+     +---+\n        |   |   |   |   |   |   |   |   |     |105| \n        |   |   |   |   |   |   |   |   |     +---+\n        |   |   |   |   |   |   |   |   |     |106| \n        | 77| 78| 79| 80| 81| 82| 83| 84|     +---+\n        |   |   |   |   |   |   |   |   |     |107| \n        |   |   |   |   |   |   |   |   |     +---+\n        |   |   |   |   |   |   |   |   |     |108| \n        +---+---+---+---+---+---+---+---+     +---+\n\n        +---+---+---+---+---+---+---+---+  \n        | 41| 42| 43| 44| 57| 58| 59| 60| \n        +---+---+---+---+---+---+---+---+  \n        | 73| 74| 75| 76| 89| 90| 91| 92| \n        +---+---+---+---+---+---+---+---+  \n\n\n### X/Y mode\n\n*PRELIMINARY*\n\n          0   1   2   3   4   5   6   7      8    9\n\n        +---+---+---+---+---+---+---+---+  +---++---+\n     0  |0/1|   |   |   |   |   |   |   |  |NOP||NOP|  0\n        +---+---+---+---+---+---+---+---+  +---++---+\n     1  |   |   |   |   |   |   |   |   |  |   ||   |  1\n        +---+---+---+---+---+---+---+---+  +---++---+\n     2  |   |   |   |   |   |5/2|   |   |  |   ||   |  2\n        +---+---+---+---+---+---+---+---+  +---++---+\n                                               8/9\n        +---+---+---+---+---+---+---+---+     +---+\n        |   |   |   |   |   |   |   |   |     |   |    3(!)\n        |   |   |   |   |   |   |   |   |     +---+\n        |   |   |   |   |   |   |   |   |     |   |    4(!)\n     3  |   |   |2/3|   |   |   |   |   |     +---+\n        |   |   |   |   |   |   |   |   |     |   |    5(!)\n        |   |   |   |   |   |   |   |   |     +---+\n        |   |   |   |   |   |   |   |   |     |   |    6\n        +---+---+---+---+---+---+---+---+     +---+\n\n        +---+---+---+---+---+---+---+---+  \n     4  |   |   |   |   |   |   |   |   |              4(!)\n        +---+---+---+---+---+---+---+---+  \n     5  |   |   |   |3/4|   |   |   |   |              5(!)\n        +---+---+---+---+---+---+---+---+  \n\n\n\n---\n## Buttons, LED and potentiometer codes, LaunchKey Mini\n\nNotice that the two \"Octave\" and the \"INCONTROL\" buttons cannot be controlled (NOP).\n\n                   +---+---+---+---+---+---+---+---+\n                   | 21| 22|...|   |   |   |   | 28|\n     +---+---+---+ +---+---+---+---+---+---+---+---+ +---+  +---+\n     |106|107|NOP| | 40| 41| 42| 43| 48| 49| 50| 51| |108|  |104| \n     +---+---+---+ +---+---+---+---+---+---+---+---+ +---+  +---+\n     |NOP|NOP|     | 36| 37| 38| 39| 44| 45| 46| 47| |109|  |105| \n     +---+---+     +---+---+---+---+---+---+---+---+ +---+  +---+\n\n     +--+-+-+-+--+--+-+-+-+-+-+--+--+-+-+-+--+--+-+-+-+-+-+--+---+\n     |  | | | |  |  | | | | | |  |  | | | |  |  | | | | | |  |   |\n     |  |4| |5|  |  | | | | | |  |  |6| | |  |  | | | | |7|  |   |\n     |  |9| |1|  |  | | | | | |  |  |1| | |  |  | | | | |0|  |   |\n     |  +-+ +-+  |  +-+ +-+ +-+  |  +-+ +-+  |  +-+ +-+ +-+  |   |\n     | 48| 50| 52|   |   |   |   | 60|   |   |   |   |   | 71| 72|\n     |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n     | C | D | E |...|   |   |   | C2| D2|...|   |   |   |   | C3|\n     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\n\n---\n## Buttons and LED codes, Dicer\n\n### Standard Mode\n\nButton numbers equal the labels on the buttons, plus a number, \nas specified by the mode buttons.\n\nFor \"shift-lock\" operation, continue to hold down one of the\nthree mode buttons while pressing a number button.\n\n    Master, \"cue\":        01 ..  05  +shift:  06 ..  10\n    Master, \"loop\":       11 ..  15  +shift:  16 ..  20\n    Master, \"auto loop\":  21 ..  25  +shift:  26 ..  30\n\n    Slave,  \"cue\":       101 .. 105  +shift: 106 .. 110\n    Slave,  \"loop:       111 .. 115  +shift: 116 .. 120\n    Slave,  \"auto loop\": 121 .. 115  +shift: 126 .. 130\n\n\n              MASTER                            SLAVE\n     +-----+  +-----+  +-----+        +-----+  +-----+  +-----+\n     |#    |  |#    |  |     |        |#   #|  |#   #|  |    #|\n     |  #  |  |     |  |  #  |        |  #  |  |     |  |  #  |\n     |    #|  |    #|  |     |        |#   #|  |#   #|  |#    |\n     +-----+  +-----+  +-----+        +-----+  +-----+  +-----+\n\n     +-----+            +---+          +----+           +-----+\n     |#   #|            | +0|          |  +0|           |    #|\n     |     |            +---+          +----+           |     |\n     |#   #|       +---+                    +----+      |#    |\n     +-----+       |+10|                    |+110|      +-----+\n                   +---+                    +----+\n     +-----+  +---+                             +----+  +-----+\n     |#   #|  |+20|                             |+100|  |     |\n     |  #  |  +---+                             +----+  |  #  |\n     |#   #|                                            |     |\n     +-----+                                            +-----+\n\n\n### One Page Mode\n\nButton numbers equal the labels on the buttons.\nThe mode keys return:\n\n    Master, \"cue\":         6\n    Master, \"loop\":        7\n    Master, \"auto loop\":   8\n\n    Slave,  \"cue\":       106\n    Slave,  \"loop:       107\n    Slave,  \"auto loop\": 108\n\n\n              MASTER                            SLAVE\n     +-----+  +-----+  +-----+        +-----+  +-----+  +-----+\n     |#    |  |#    |  |     |        |#   #|  |#   #|  |    #|\n     |  #  |  |     |  |  #  |        |  #  |  |     |  |  #  |\n     |    #|  |    #|  |     |        |#   #|  |#   #|  |#    |\n     +-----+  +-----+  +-----+        +-----+  +-----+  +-----+\n\n     +-----+            +---+          +----+           +-----+\n     |#   #|            | 6 |          | 108|           |    #|\n     |     |            +---+          +----+           |     |\n     |#   #|       +---+                    +----+      |#    |\n     +-----+       | 7 |                    | 107|      +-----+\n                   +---+                    +----+\n     +-----+  +---+                             +----+  +-----+\n     |#   #|  | 8 |                             | 106|  |     |\n     |  #  |  +---+                             +----+  |  #  |\n     |#   #|                                            |     |\n     +-----+                                            +-----+\n\n\n\n\n---\nHave fun  \nFMMT666(ASkr)  \n\n\n\n[1]: https://global.novationmusic.com/launch/launchpad\n[2]: http://www.python.org\n[3]: http://www.pygame.org\n[4]: http://www.raspberrypi.org\n[5]: http://pi.minecraft.net/\n[6]: http://www.askrproject.net\n[7]: https://mtc.cdn.vine.co/r/videos/5B6AFA722E1181009294682988544_30ec8c83a82.1.5.18230528301682594589.mp4\n[8]: https://mtc.cdn.vine.co/r/videos/B02C20F7301181005332596555776_3da8b2c29ec.1.5.3791810774169827111.mp4\n[9]: https://mtc.cdn.vine.co/r/videos/EFB02602EF1300276501647966208_4cce4117438.5.1.10016548273760817556.mp4\n[10]: https://novationmusic.de/launch/launchpad-mk1\n[11]: https://creativecommons.org/licenses/by/4.0/\n[12]: https://twitter.com/FMMT666/status/802869723910275072/video/1\n[13]: https://github.com/FMMT666/launchpad.py/issues/9\n[14]: https://novationmusic.de/support/product-downloads?product=Launchpad+MK1\n[15]: https://twitter.com/FMMT666/status/871094540140240896\n[16]: https://twitter.com/FMMT666/status/891077439023087618\n[17]: https://github.com/FMMT666/launchpad.py/issues/24\n[18]: https://twitter.com/FMMT666/status/967551405644025857\n[19]: https://www.pygame.org/wiki/Compilation\n[20]: https://pypi.python.org/pypi/python-rtmidi/\n[21]: https://github.com/FMMT666/launchpad.py\n[22]: https://github.com/dhilowitz/launchpad_rtmidi.py\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eavelardev/novation-launchpad",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "novation-launchpad",
    "package_url": "https://pypi.org/project/novation-launchpad/",
    "platform": "",
    "project_url": "https://pypi.org/project/novation-launchpad/",
    "project_urls": {
      "Homepage": "https://github.com/eavelardev/novation-launchpad"
    },
    "release_url": "https://pypi.org/project/novation-launchpad/1.0.0/",
    "requires_dist": [
      "python-rtmidi"
    ],
    "requires_python": "",
    "summary": "A Python library for launchpad mini, mk2 and pro devices with examples.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5207256,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7aececeb6664d7f35b4d5e6ebcbb1062d9bbc8fe594d0bfad63e463e4f4e071f",
          "md5": "3bdaa221f0d950b02d9d2c8a6b05a71e",
          "sha256": "c2503cb022d56b233ce7c944a8a62786c32e8f92d3641ccf373185062b9234a1"
        },
        "downloads": -1,
        "filename": "novation_launchpad-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3bdaa221f0d950b02d9d2c8a6b05a71e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 51334,
        "upload_time": "2019-04-30T08:53:50",
        "upload_time_iso_8601": "2019-04-30T08:53:50.442784Z",
        "url": "https://files.pythonhosted.org/packages/7a/ec/eceb6664d7f35b4d5e6ebcbb1062d9bbc8fe594d0bfad63e463e4f4e071f/novation_launchpad-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1583f0c23a6b801ddd097880ad97c0e645cdaf77176fa226cda952aa9859213d",
          "md5": "6cb88e1343e8492ad38682b8c78287b4",
          "sha256": "6bafc26e1e39ad4afe9bf54407243338a9a79397083495c2e85905e5766e9cab"
        },
        "downloads": -1,
        "filename": "novation-launchpad-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6cb88e1343e8492ad38682b8c78287b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 80742,
        "upload_time": "2019-04-30T08:54:24",
        "upload_time_iso_8601": "2019-04-30T08:54:24.442786Z",
        "url": "https://files.pythonhosted.org/packages/15/83/f0c23a6b801ddd097880ad97c0e645cdaf77176fa226cda952aa9859213d/novation-launchpad-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7aececeb6664d7f35b4d5e6ebcbb1062d9bbc8fe594d0bfad63e463e4f4e071f",
        "md5": "3bdaa221f0d950b02d9d2c8a6b05a71e",
        "sha256": "c2503cb022d56b233ce7c944a8a62786c32e8f92d3641ccf373185062b9234a1"
      },
      "downloads": -1,
      "filename": "novation_launchpad-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3bdaa221f0d950b02d9d2c8a6b05a71e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 51334,
      "upload_time": "2019-04-30T08:53:50",
      "upload_time_iso_8601": "2019-04-30T08:53:50.442784Z",
      "url": "https://files.pythonhosted.org/packages/7a/ec/eceb6664d7f35b4d5e6ebcbb1062d9bbc8fe594d0bfad63e463e4f4e071f/novation_launchpad-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1583f0c23a6b801ddd097880ad97c0e645cdaf77176fa226cda952aa9859213d",
        "md5": "6cb88e1343e8492ad38682b8c78287b4",
        "sha256": "6bafc26e1e39ad4afe9bf54407243338a9a79397083495c2e85905e5766e9cab"
      },
      "downloads": -1,
      "filename": "novation-launchpad-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6cb88e1343e8492ad38682b8c78287b4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 80742,
      "upload_time": "2019-04-30T08:54:24",
      "upload_time_iso_8601": "2019-04-30T08:54:24.442786Z",
      "url": "https://files.pythonhosted.org/packages/15/83/f0c23a6b801ddd097880ad97c0e645cdaf77176fa226cda952aa9859213d/novation-launchpad-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}