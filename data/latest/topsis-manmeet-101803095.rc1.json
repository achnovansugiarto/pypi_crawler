{
  "info": {
    "author": "Manmeet Kaur",
    "author_email": "manmeetkaur18102000@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# TOPSIS-Manmeet-101803095\n\nTOPSIS-Manmeet-101803095 is a package that will provide feature to do multi-criteria decision making in choosing the best models among the data provided.\n\n  - It will provide with the TOPSIS Score.\n  - It will do Ranking of Models on the basis of the given data.\n\n# What is TOPSIS\n\nTechnique for Order Preference by Similarity to Ideal Solution (TOPSIS) originated in the 1980s as a multi-criteria decision making method. TOPSIS chooses the alternative of shortest Euclidean distance from the ideal solution, and greatest distance from the negative-ideal solution. More details at [wikipedia](https://en.wikipedia.org/wiki/TOPSIS).\n\n\n### Installation\nTOPSIS-Manmeet-101803095 requires [Python](https://www.python.org/) v2.7+ to run.\n\nInstall the package using pip as follows :\n\n```sh\n$ pip install TOPSIS-Manmeet-101803095\n```\n\n### HOW TO USE THIS PACKAGE\n\nTOPSIS-Manmeet-10803095 can be run as in the following examples:\n\n**PRE - PROCESSING OF DATA (REQUIRED) :**\n\nThe data in the csv file should not be non-numeric so, if after reading the data from csv it contains non-numeric values so we need to preprocess it to remove the non-numeric values. So, we will replace first all non-numeric values with NAN values and then check if there is a column with all Nan values, we will drop that column if it exists (NOTE: the first column will be excluded while doing this preprocessing ).\n\nAfter, This we will replace all the Nan values with the mean values of its column. So, now the data is processed and ready to calculate the TOPSIS Score for the pre-processed data\n\n```sh\n>>> def preprocess(dataset):\n>>>     data_columns = dataset.columns[1:]\n>>>     #replacing non-numeric values with the NaN\n>>>     num_dataset = (dataset.drop(data_columns, axis=1)\n            .join(dataset[data_columns].apply(pd.to_numeric, errors='coerce')))\n>>>     #dropping all NaN values columns\n>>>     num_dataset = num_dataset.dropna(how='all', axis=1)\n>>>     data_columns = num_dataset.columns[1:] \n>>>     values = {}\n>>>     for i in data_columns:\n>>>         values[i] = num_dataset[i].mean()\n>>>     dataset = num_dataset.fillna(value=values) #filling nan values with mean of column\n>>>     return dataset\n```\n\n**IN PYTHON IDLE :**\n\nNOTE: \n1. Pre-processing is to be done only in-case of non-numeric data in input file.\n2. Ensure that the number of weights and impacts is equal to the no of columns excluding the first one in the preprocesed data.\n\n```sh\n>>> import pandas as pd\n>>> from topsis import TopsisScore\n>>> dataset = pd.read_csv('data.csv') #data.csv the file containing the input data\n>>> dataset = prepocess(dataset) # Preprocessing as mentioned above of data\n>>> w = [1,1,1,2] \n>>> im = ['+','+','-','+'] \n>>> \"\"\"checking the no of weights and imapcts should be equal to no of columns in dataset  \n>>>    excluding the first column in the preprocessed dataset \"\"\"\n>>> noofparameterreq = len(dataset.columns)-1\n>>> if (len(weights) != noofparameterreq) or (len(impacts) != noofparameterreq) :\n>>>     print(\"The no of parameters required for weights and impacts is : \" +                   \n        str(noofparameterreq))\n        raise Exception('Inavalid no of parameters in weights or impacts')\n>>> dataset = TopsisScore(dataset,w,im)\n>>> print(df) #returns pandas dataframe with rank and topsis score included \n```\n\n### Sample Dataset\nThe decision matrix (a) will be extracted from the csv file as the pandas dataframe which will contain each row representing a Model alternative, and each column representing a criterion like Accuracy, RSeq, Root Mean Squared Error, Correlation, and many more.\n\n| Model | Correlation | RSeq | RMSE | Accuracy\n| ------ | ------ | ----- | ----- | --------\n| M1 | 0.79 | 0.62 | 1.25 | 60.89 \n| M2 | 0.66 | 0.44 | 2.89 | 63.07\n| M3 | 0.56 | 0.31 | 1.57 | 62.87\n| M4 | 0.82 | 0.67 | 2.68 | 70.19\n| M5 | 0.75 | 0.56 | 1.3 | 80.39\n\nWeights (w) is not already normalised will be normalised later in the code.\nInformation of impacts positive(+) or negative(-) impact criteria should be provided in (im).\n\n**No of weights and no of impacts should be equal to no. of columns in dataset excluding the first column** \n\n### Sample Output\n\nThe rankings are displayed in the form of a table, with the 1st rank offering us the best decision, and last rank offering the worst decision making, according to TOPSIS method.\n\n| Model | Correlation | RSeq | RMSE | Accuracy | Topsis Score | Rank\n| ------ | ------ | ----- | ----- | -------- | -------- | --------\n| M1 | 0.79 | 0.62 | 1.25 | 60.89 | 0.639133 | 2\n| M2 | 0.66 | 0.44 | 2.89 | 63.07 | 0.212592 | 5\n| M3 | 0.56 | 0.31 | 1.57 | 62.87 | 0.407846 | 4\n| M4 | 0.82 | 0.67 | 2.68 | 70.19 | 0.519153 | 3\n| M5 | 0.75 | 0.56 | 1.3 | 80.39 | 0.828267 | 1\n\nLicense\n----\n\nMIT License\n\nCopyright (c) 2020 Manmeet Kaur\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n**Free Plugin, Simple Multi-Criteria Decision Making !**\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/manmeet-kaur18/Topsis",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TOPSIS-Manmeet-101803095",
    "package_url": "https://pypi.org/project/TOPSIS-Manmeet-101803095/",
    "platform": "",
    "project_url": "https://pypi.org/project/TOPSIS-Manmeet-101803095/",
    "project_urls": {
      "Homepage": "https://github.com/manmeet-kaur18/Topsis"
    },
    "release_url": "https://pypi.org/project/TOPSIS-Manmeet-101803095/0.0.1/",
    "requires_dist": [
      "pytest (>=3.7) ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Find the Topsis Score Easily as well as preciously - Multiple Criteria Decision Making!",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8606848,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18cf434aa839dfbcd196beefcad38518fe6d9e45b80346db5d8dc3f14500fa37",
          "md5": "31a6b80a331fea26f52a91bac5ee8a67",
          "sha256": "551335d481bf661a5dc701efa16ed6de260eaeb135fe208d7fdb800b7ac41092"
        },
        "downloads": -1,
        "filename": "TOPSIS_Manmeet_101803095-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31a6b80a331fea26f52a91bac5ee8a67",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5642,
        "upload_time": "2020-11-08T09:00:03",
        "upload_time_iso_8601": "2020-11-08T09:00:03.513196Z",
        "url": "https://files.pythonhosted.org/packages/18/cf/434aa839dfbcd196beefcad38518fe6d9e45b80346db5d8dc3f14500fa37/TOPSIS_Manmeet_101803095-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c33ae39dbc7599caf5b5c1aaa9c71dfb6334f1eff669da4ad9411dcc116fef3",
          "md5": "c845369d94593b60cc914f503db7c5b7",
          "sha256": "936a54b05373fe11caef607c648d0515917bdb14a9ad7b2aea82cc17f4fe80dd"
        },
        "downloads": -1,
        "filename": "TOPSIS-Manmeet-101803095-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c845369d94593b60cc914f503db7c5b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5485,
        "upload_time": "2020-11-08T09:00:06",
        "upload_time_iso_8601": "2020-11-08T09:00:06.518164Z",
        "url": "https://files.pythonhosted.org/packages/8c/33/ae39dbc7599caf5b5c1aaa9c71dfb6334f1eff669da4ad9411dcc116fef3/TOPSIS-Manmeet-101803095-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18cf434aa839dfbcd196beefcad38518fe6d9e45b80346db5d8dc3f14500fa37",
        "md5": "31a6b80a331fea26f52a91bac5ee8a67",
        "sha256": "551335d481bf661a5dc701efa16ed6de260eaeb135fe208d7fdb800b7ac41092"
      },
      "downloads": -1,
      "filename": "TOPSIS_Manmeet_101803095-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "31a6b80a331fea26f52a91bac5ee8a67",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5642,
      "upload_time": "2020-11-08T09:00:03",
      "upload_time_iso_8601": "2020-11-08T09:00:03.513196Z",
      "url": "https://files.pythonhosted.org/packages/18/cf/434aa839dfbcd196beefcad38518fe6d9e45b80346db5d8dc3f14500fa37/TOPSIS_Manmeet_101803095-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c33ae39dbc7599caf5b5c1aaa9c71dfb6334f1eff669da4ad9411dcc116fef3",
        "md5": "c845369d94593b60cc914f503db7c5b7",
        "sha256": "936a54b05373fe11caef607c648d0515917bdb14a9ad7b2aea82cc17f4fe80dd"
      },
      "downloads": -1,
      "filename": "TOPSIS-Manmeet-101803095-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c845369d94593b60cc914f503db7c5b7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5485,
      "upload_time": "2020-11-08T09:00:06",
      "upload_time_iso_8601": "2020-11-08T09:00:06.518164Z",
      "url": "https://files.pythonhosted.org/packages/8c/33/ae39dbc7599caf5b5c1aaa9c71dfb6334f1eff669da4ad9411dcc116fef3/TOPSIS-Manmeet-101803095-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}