{
  "info": {
    "author": "Julien Chaumont",
    "author_email": "vtf2img@julienc.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# vtf2img\n\nA Python library to convert [Valve Texture Format (VTF)](https://developer.valvesoftware.com/wiki/Valve_Texture_Format) files to images.\n\n\n## Installation\n\n### With pip\n\n```\n$ pip install vtf2img\n```\n\n### From source\n\n```\n$ git clone https://github.com/julienc91/vtf2img\n$ cd vtf2img\n$ python setup.py install\n```\n\n\n## QuickStart\n\n### As a library\n\n```python\nfrom vtf2img import Parser\n\n\nvtf_file = \"materials/models/weapons/customization/paints/custom/workshop/ak47_asiimov.vtf\"\n\nparser = Parser(vtf_file)\nheader = parser.header\n\nprint(f\"VTF version: {header.version}, Image size: {header.width}x{header.height}\")\n# VTF version: 7.5, Image size: 2048x2048\n\nimage = parser.get_image()\n\nimage.show()\nimage.save(\"ak47_asiimov.png\")\n```\n\nThe result of `get_image` is an instance of [Pillow's `Image` class](https://pillow.readthedocs.io/en/stable/reference/Image.html#the-image-class),\nwhich allows [exporting](https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.Image.save) in many different formats (PNG, JPG, BMP, ...).\n\n\n### As a CLI command\n\nIf you installed the package as instructed in the previous section, a `vtf2img` command should\nbe available.\n\n```\n$ vtf2img dragon_awp.wtf awp_dragon_lore.png\n```\n\nOtherwise, you can execute the package's `__main__.py` file with:\n\n```\n$ python -m vtf2img dragon_awp.wtf awp_dragon_lore.png\n```\n\n\n## Limitations\n\n* many image formats supported by the VTF format are not (yet?) supported by this program (see the section below)\n* this program only considers the hi-res image contained in the VTF file\n* all the flags that might have been set by the VTF's creator are purely ignored\n\n## VTF compatibility\n\nWorks with VTF version 7.2+.\n\nCompatibility of image formats:\n\n| Format            | Supported |\n|-------------------|:---------:|\n| A8                | ✗         |\n| ABGR8888          | ✓         |\n| ARGB8888          | ✓         |\n| BGR565            | ✗         |\n| BGR888            | ✓         |\n| BGR888_BLUESCREEN | ✗         |\n| BGRA4444          | ✗         |\n| BGRA5551          | ✗         |\n| BGRA8888          | ✓         |\n| BGRX5551          | ✗         |\n| BGRX8888          | ✗         |\n| DXT1              | ✓         |\n| DXT1_ONEBITALPHA  | ✗         |\n| DXT3              | ✗         |\n| DXT5              | ✓         |\n| I8                | ✗         |\n| IA88              | ✗         |\n| P8                | ✗         |\n| RGB565            | ✗         |\n| RGB888            | ✓         |\n| RGB888_BLUESCREEN | ✗         |\n| RGBA16161616      | ✗         |\n| RGBA16161616F     | ✗         |\n| RGBA8888          | ✓         |\n| UV88              | ✗         |\n| UVLX8888          | ✗         |\n| UVWQ8888          | ✗         |\n\nMost VTF Files are using either DXT1 or DXT5.\n\n_Note:_ DXT1 and DXT5 decoding algorithms were adapted from [Harry Jeffery](https://github.com/eXeC64/)'s implementation\non [vtf2png](https://github.com/eXeC64/vtf2png).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/julienc91/vtf2img/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vtf2img",
    "package_url": "https://pypi.org/project/vtf2img/",
    "platform": "",
    "project_url": "https://pypi.org/project/vtf2img/",
    "project_urls": {
      "Homepage": "https://github.com/julienc91/vtf2img/"
    },
    "release_url": "https://pypi.org/project/vtf2img/0.1.0/",
    "requires_dist": [
      "Pillow"
    ],
    "requires_python": "",
    "summary": "A library to convert Valve Texture Format (VTF) files into images",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7223570,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78048248534c3b357e0aaceae5b7728ff49e2244bfd8858962cc53ad77716433",
          "md5": "0f9e544027b8394728cedbed8adaf4f5",
          "sha256": "422d5888cf434e30179f0a2068423f1456b4dff2d78a96163afaf2b25195e492"
        },
        "downloads": -1,
        "filename": "vtf2img-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f9e544027b8394728cedbed8adaf4f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11265,
        "upload_time": "2020-05-12T13:00:29",
        "upload_time_iso_8601": "2020-05-12T13:00:29.718165Z",
        "url": "https://files.pythonhosted.org/packages/78/04/8248534c3b357e0aaceae5b7728ff49e2244bfd8858962cc53ad77716433/vtf2img-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b03b848fe1785a358c7e9605e4d11043f9261411a876754705308f835557f75c",
          "md5": "2a059c1128b0418a51c6eb6e98818bd5",
          "sha256": "6265acf3aef777bdb01f89d33973f80051acda0ac8113967e2cd4c0f93df1340"
        },
        "downloads": -1,
        "filename": "vtf2img-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a059c1128b0418a51c6eb6e98818bd5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7234,
        "upload_time": "2020-05-12T13:00:31",
        "upload_time_iso_8601": "2020-05-12T13:00:31.672488Z",
        "url": "https://files.pythonhosted.org/packages/b0/3b/848fe1785a358c7e9605e4d11043f9261411a876754705308f835557f75c/vtf2img-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78048248534c3b357e0aaceae5b7728ff49e2244bfd8858962cc53ad77716433",
        "md5": "0f9e544027b8394728cedbed8adaf4f5",
        "sha256": "422d5888cf434e30179f0a2068423f1456b4dff2d78a96163afaf2b25195e492"
      },
      "downloads": -1,
      "filename": "vtf2img-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0f9e544027b8394728cedbed8adaf4f5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11265,
      "upload_time": "2020-05-12T13:00:29",
      "upload_time_iso_8601": "2020-05-12T13:00:29.718165Z",
      "url": "https://files.pythonhosted.org/packages/78/04/8248534c3b357e0aaceae5b7728ff49e2244bfd8858962cc53ad77716433/vtf2img-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b03b848fe1785a358c7e9605e4d11043f9261411a876754705308f835557f75c",
        "md5": "2a059c1128b0418a51c6eb6e98818bd5",
        "sha256": "6265acf3aef777bdb01f89d33973f80051acda0ac8113967e2cd4c0f93df1340"
      },
      "downloads": -1,
      "filename": "vtf2img-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2a059c1128b0418a51c6eb6e98818bd5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7234,
      "upload_time": "2020-05-12T13:00:31",
      "upload_time_iso_8601": "2020-05-12T13:00:31.672488Z",
      "url": "https://files.pythonhosted.org/packages/b0/3b/848fe1785a358c7e9605e4d11043f9261411a876754705308f835557f75c/vtf2img-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}