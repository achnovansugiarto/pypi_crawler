{
  "info": {
    "author": "Jaya Krishna with Udacity",
    "author_email": "jayakrishnas.work@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\r\nPython Package: â€˜distributions_jksâ€™ Documentation\r\n\r\nIntroduction\r\n\r\nThis python package is an encapsulation of related classes and methods based on distributions in statistics. Distribution in statistics is a mathematical concept that represents how numbers are occurring, their possible values with probabilities.\r\nIn this package there are three classes, each defined in separated modules. They are:\r\n1.\tDistribution\r\n2.\tGaussian\r\n3.\tBinomial\r\nThese classes consist of attributes and methods useful for calculating simple statistical measures. Such as mean, standard deviation and probability density. There are also methods to visualize the distributions in an XY plane.\r\n\r\nDEPENDENCIES\r\nThis package makes use of two more packages/modules. They are:\r\n-\tMatplotlib\r\n-\tMath\r\n\r\n\r\nDistribution\r\n\r\nDistribution class represents a general distribution of numbers. Any distribution consists of two attributes, mean and standard deviation. The Distribution class also provides a method for reading data from a text file.\r\n\r\nATTRIBUTES\r\ndata_list: list of ints - represents a list of numbers read from a data file.\r\nmean: float â€“ represents the mean of a distribution (list of numbers) â€“ default: 0.\r\nstdev: float â€“ represents the standard deviation of a distribution (list of numbers) â€“ default: 1\r\n\r\nMETHODS\r\n__init__()\r\nThis instance initializing method executes at the time of instance creation. This function defines the instance variables mean and stdev. If arguments are provided mean and stdev are initialized with the values. Or else default values are given.\r\nArguments\r\nself: An instance of Distribution class\r\nmean_v: represents the mean of a distribution\r\nstdev_v: represents the standard deviation of a distribution\r\n\r\nread_data_file()\r\nThis method reads a text file consisting of numbers into the data_list attribute as a list of ints. The file should be a text file and formatted in such a way that each line only consists of a single number.\r\nNote: Even if we provide float values in the file, this method truncates the fractional part as it typecasts the values to int values.\r\nArguments\r\nself: An instance of Distribution class\r\nfile_path: The relative or absolute path of the text file where the data is stored.\r\n\r\n\r\nGaussian\r\n\r\nThis class, Gaussian, is a specialized distribution of numbers inheriting the Distribution class. It consists of the same attributes as of Distribution class and extra methods for dealing with new problems.\r\n\r\nATTRIBUTES\r\ndata_list: list of ints - represents a list of numbers read from a data file.\r\nmean: float â€“ represents the mean of a distribution (list of numbers) â€“ default: 0.\r\nstdev: float â€“ represents the standard deviation of a distribution (list of numbers) â€“ default: 1\r\n\r\nMETHODS\r\n__init__() â€“ Same as of Distribution class\r\n\r\nread_data_file_() â€“ Same as of Distribution class\r\n\r\ncalculate_mean()\r\nThis method calculates the mean value of the data_list and returns the same.\r\nArguments\r\nself: An instance of Gaussian class\r\nReturns\r\nfloat â€“ represents the mean value of the data_list\r\n\r\ncalculate_stdev()\r\nThis method calculates the standard deviation value of the data_list and returns the same.\r\nArguments\r\nself: An instance of Gaussian class\r\nsample: boolean â€“ represents whether the data_list is a sample (True) or population (False)\r\nReturns\r\nfloat â€“ represents the standard deviation value of the data_list.\r\n\r\nprobability_density()\r\nThis method calculates the probability density function on the data_list based on point and returns the same.\r\nArguments\r\nself: An instance of Gaussian class\r\npoint: int â€“ represents the point at which the function calculates the probability density.\r\nReturns\r\nfloat â€“ represents the probability density value on the data_list at the point.\r\n\r\nplot_histogram()\r\nThis function outputs a histogram of the instance variable data using matplotlib pyplot library. It takes nothing as an argument except the self and draws the plot based on the data_list itself.\r\n\r\nplot_histogram_probability_density()\r\nThis function plots the normalized histogram of the data and a plot the probability density function along the same range. It take n_spaces as an argument and returns the X and Y axes values for the probability density function plot\r\nArguments\r\nself: An instance of Gaussian class\r\nn_spaces: int â€“ represents number of data points\r\nReturns\r\nlist â€“ X axes values for probability density function plot\r\nlist â€“ Y axes values for probability density function plot\r\n\r\n__add__()\t\r\nThis function adds two Gaussian distribution instances together to create a new Gaussian distribution with different mean and standard deviation (stdev) values based on the given mean and stdev values of the provided two Gaussian instances. It overloads the + operator so that it can work with Gaussian class as a binary operator. It returns the new Gaussian instance.\r\nArguments\r\nself: An instance of Gaussian class\r\nother: Gaussian â€“ represents the other Gaussian instance we are adding the self \r\nReturns\r\nGuassian â€“ A new Gaussian instance obtained from adding the self and other\r\n\r\n__repr__()\r\nThis function represents the Gaussian instances as a string consisting of mean and standard deviation. It can used to directly print the contents of Gaussian instance without directly accessing the attributes.\r\n\r\n\r\nBinomial\r\n\r\nThis class, Binomial, is a specialized distribution of numbers inheriting the Distribution class as well. It consists of the same attributes as of Distribution class and extra methods for dealing with new problems.\r\n\r\nATTRIBUTES\r\ndata_list: list of ints - represents a list of numbers read from a data file.\r\nsize: int â€“ represents the number of values present in the Binomial distribution.\r\nprob: float â€“ represents the probability of the Binomial distribution.\r\nmean: float â€“ represents the mean of a distribution (list of numbers) â€“ default: 0.\r\nstdev: float â€“ represents the standard deviation of a distribution (list of numbers) â€“ default: 1\r\n\r\nMETHODS\r\n__init__()\r\nThis initialization method adds on to the initialization method of Distribution class. It defines two extra instance attributes size and prob.\r\n\r\nread_data_file_() â€“ Same as of Distribution class\r\n\r\ncalculate_mean()\r\nThis method calculates the mean value of the distribution based on size and probability (prob) and returns the same.\r\nArguments\r\nself: An instance of Binomial class\r\nReturns\r\nfloat â€“ represents the mean value of the distribution.\r\n\r\ncalculate_stdev()\r\nThis method calculates the standard deviation value of the distribution based on size and probability (prob) and returns the same.\r\nArguments\r\nself: An instance of Binomial class\r\nReturns\r\nfloat â€“ represents the standard deviation value of the distribution\r\n\r\nreplace_stats_with_data()\r\nThis method calculates the size and probability (prob) of the distribution provided by the text file read  into data_list. \r\nArguments\r\nself: An instance of Binomial class\r\nReturns\r\nint â€“ represents the size of the distribution.\r\nfloat â€“ represents the probability (prob) of the distribution.\r\n\r\nprobability_density()\r\nThis method calculates the probability density function on distribution based on point and returns the same.\r\nArguments\r\nself: An instance of Binomial class\r\npoint: int â€“ represents the point at which the function calculates the probability density.\r\nReturns\r\nfloat â€“ represents the probability density value on the distribution at the point.\r\n\r\nplot_bar()\r\nThis function outputs a bar graph of the instance variable data using matplotlib pyplot library. It takes nothing as an argument except the self and draws the plot based on the data_list itself.\r\n\r\nplot_bar_probability_density()\r\nThis function plots the normalized bar graph of the data and a plot the probability density function along the same range. It returns the X and Y axes values for the probability density function plot\r\nArguments\r\nself: An instance of Binomial class\r\nReturns\r\nlist â€“ X axes values for probability density function plot\r\nlist â€“ Y axes values for probability density function plot\r\n\r\n__add__()\t\r\nThis function adds two Binomial distribution instances together to create a new Binomial distribution with different size and probability (prov) values based on the given size and prob values of the provided two Binomial instances. It overloads the + operator so that it can work with Binomial class as a binary operator. It returns the new Binomial instance.\r\nArguments\r\nself: An instance of Binomial class\r\nother: Binomial â€“ represents the other Binomial instance we are adding the self. \r\nReturns\r\nBinomial â€“ A new Binomial instance obtained from adding the self and other.\r\n\r\n__repr__()\r\nThis function represents the Binomial instances as a string consisting of size, probability, mean and standard deviation.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "distributions-jks",
    "package_url": "https://pypi.org/project/distributions-jks/",
    "platform": null,
    "project_url": "https://pypi.org/project/distributions-jks/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/distributions-jks/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17007221,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b34764e8762e3aa6437803e9588676acacefa807b584cbeee65bac007ee2b2a7",
          "md5": "0d0fc688ed6b20c7052ba9b042d4e7fc",
          "sha256": "ef185533042617cbe0891e6b618817a64577cf6d7ba46b170770ebac96f613b4"
        },
        "downloads": -1,
        "filename": "distributions_jks-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0d0fc688ed6b20c7052ba9b042d4e7fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3496,
        "upload_time": "2023-02-22T04:46:34",
        "upload_time_iso_8601": "2023-02-22T04:46:34.067520Z",
        "url": "https://files.pythonhosted.org/packages/b3/47/64e8762e3aa6437803e9588676acacefa807b584cbeee65bac007ee2b2a7/distributions_jks-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcaad490812c5998c65bd814e57efb545027ad6ee5a968a1e64be339b0ba9d5b",
          "md5": "60f9545b8d7bb1f4bb526fc8ba982491",
          "sha256": "4ba3426eba8881fa0a748178bfb2c89c766caf4ae29a15a248de9b453521529d"
        },
        "downloads": -1,
        "filename": "distributions_jks-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "60f9545b8d7bb1f4bb526fc8ba982491",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3573,
        "upload_time": "2023-02-22T06:24:24",
        "upload_time_iso_8601": "2023-02-22T06:24:24.882767Z",
        "url": "https://files.pythonhosted.org/packages/fc/aa/d490812c5998c65bd814e57efb545027ad6ee5a968a1e64be339b0ba9d5b/distributions_jks-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdaf7f85a170dcef94f3582ed1b9a750ab7acda5a6d366ec5a7cfff4d13eec91",
          "md5": "fc0632f6939176cd9b77361c2a54ac3b",
          "sha256": "2f6117543006d9174fc16329042522cc0732f9134f0061c9a9e426586020d2fc"
        },
        "downloads": -1,
        "filename": "distributions_jks-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fc0632f6939176cd9b77361c2a54ac3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1052,
        "upload_time": "2023-02-23T09:12:45",
        "upload_time_iso_8601": "2023-02-23T09:12:45.036049Z",
        "url": "https://files.pythonhosted.org/packages/bd/af/7f85a170dcef94f3582ed1b9a750ab7acda5a6d366ec5a7cfff4d13eec91/distributions_jks-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62f7abb34b09e89a4de7fc92daace2e474a54bd4e37cfd21655528587d63d4cb",
          "md5": "03c4b42b41e686fc2367b398413de269",
          "sha256": "2cb7f07a87741b3a416d2fe0cd187a562529a7d5ff0f9c5aff7d1302f534ac0a"
        },
        "downloads": -1,
        "filename": "distributions_jks-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "03c4b42b41e686fc2367b398413de269",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3567,
        "upload_time": "2023-02-24T06:58:30",
        "upload_time_iso_8601": "2023-02-24T06:58:30.250159Z",
        "url": "https://files.pythonhosted.org/packages/62/f7/abb34b09e89a4de7fc92daace2e474a54bd4e37cfd21655528587d63d4cb/distributions_jks-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62f7abb34b09e89a4de7fc92daace2e474a54bd4e37cfd21655528587d63d4cb",
        "md5": "03c4b42b41e686fc2367b398413de269",
        "sha256": "2cb7f07a87741b3a416d2fe0cd187a562529a7d5ff0f9c5aff7d1302f534ac0a"
      },
      "downloads": -1,
      "filename": "distributions_jks-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "03c4b42b41e686fc2367b398413de269",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3567,
      "upload_time": "2023-02-24T06:58:30",
      "upload_time_iso_8601": "2023-02-24T06:58:30.250159Z",
      "url": "https://files.pythonhosted.org/packages/62/f7/abb34b09e89a4de7fc92daace2e474a54bd4e37cfd21655528587d63d4cb/distributions_jks-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}