{
  "info": {
    "author": "Lucian Petrica",
    "author_email": "lucianp@amd.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ACCL Python Bindings\n\nThis package provides Python bindings for the [Alveo Collective Communication Library (ACCL)](https://github.com/Xilinx/ACCL).\n\n## Installation\nPyACCL is built and uploaded to PyPI with:\n```sh\npython3 setup.py sdist\npython3 -m twine upload dist/*\n```\n\nInstall it as follows:\n<details>\n  <summary>From PyPI</summary>\n\n  ```sh\n  python3 -m pip install pyaccl\n  ```\n</details>\n<details>\n  <summary>Locally from source distribution</summary>\n\n  ```sh\n  python3 -m pip install dist/*.tar.gz\n  ```\n</details>\n<details>\n  <summary>Locally editable</summary>\n\n  ```sh\n  python3 -m pip install -e .\n  ```\n</details>\n\n\n## Downloading Notebooks and Overlays\n\nPyACCL provides a few Jupyter notebooks and associated FPGA overlays for Alveo boards. After installing the PyACCL package, you can download these with:\n```sh\npynq get-notebooks --from-package pyaccl all\n```\nPynq will automatically download the right overlay for the Alveo device(s) in your system. If you do not have an Alveo board, add `--ignore-overlays` to the above command. The notebooks and overlays will be downloaded to the folder where the command was executed, and a Jupyter notebook server can be started from there.\n\nThere are several notebooks available to get you started with PyACCL:\n* Intros to (Py)ACCL [primitives](src/pyaccl/notebooks/primitives.ipynb) and [collectives](src/pyaccl/notebooks/collectives.ipynb)\n* Short guides to using [compression](src/pyaccl/notebooks/compression.ipynb) and [communicators](src/pyaccl/notebooks/communicators.ipynb)\n* Quick overview of [performance-related flags](src/pyaccl/notebooks/performance.ipynb)\n\n## Running Tests\n\nPyACCL includes tests for single ACCL instances and systems of ACCL instances. The tests are designed to run against ACCL emulator/simulator sessions as well as the single-FPGA ACCL test overlay, which connects 3 ACCL instances on a single Alveo board. \n\nTo run the tests, add the ACCL emulator executable `cclo_emu` to your path and start your emulator/simulator session:\n```sh\npyaccl-emulate -n <NRANKS>\n```\nthen run the following command from the pyaccl root folder:\n```sh\nmpirun -np <NRANKS> python3 -m pytest --with-mpi\n```\nIf your system has an Alveo board and `NRANKS` is less or equal to 3, the test fixture will try and download the appropriate overlay for it, otherwise it will skip hardware testcases. Similarly, the test fixture will attempt to identify a valid emulator/simulator session with the appropriate number of ranks, then run testcases against it. If you omit `--with-mpi`, only single-instance tests will run, i.e. tests for `copy()` and `combine()` primitives.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Xilinx/pyaccl",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyaccl",
    "package_url": "https://pypi.org/project/pyaccl/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pyaccl/",
    "project_urls": {
      "Homepage": "https://github.com/Xilinx/pyaccl"
    },
    "release_url": "https://pypi.org/project/pyaccl/0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python bindings for the Alveo Collectives Communication Library (ACCL)",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14742335,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "233a0b9d95c694fab7cd29ef5bd76b9de57d8bebca330d4a63207f7b1e86946b",
          "md5": "3bd7dd611e886e9d3a1c5edf53cbfc1e",
          "sha256": "b22dad9b2cfb4fcfe941e0a2dfe10e1151eaa4d5d35922df087b7d61a82b491f"
        },
        "downloads": -1,
        "filename": "pyaccl-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3bd7dd611e886e9d3a1c5edf53cbfc1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14470,
        "upload_time": "2022-05-08T15:42:42",
        "upload_time_iso_8601": "2022-05-08T15:42:42.113824Z",
        "url": "https://files.pythonhosted.org/packages/23/3a/0b9d95c694fab7cd29ef5bd76b9de57d8bebca330d4a63207f7b1e86946b/pyaccl-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60d7a7c35730e4e4e38e9a9b954ac939c72a0010f954bd722512c0485f699696",
          "md5": "a9c6593048dccc3bfa57ea2117501632",
          "sha256": "74d5649917064869c16927a324ca67fd414f713b204746e90b82ae64c120b161"
        },
        "downloads": -1,
        "filename": "pyaccl-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a9c6593048dccc3bfa57ea2117501632",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14472,
        "upload_time": "2022-05-08T15:42:44",
        "upload_time_iso_8601": "2022-05-08T15:42:44.350740Z",
        "url": "https://files.pythonhosted.org/packages/60/d7/a7c35730e4e4e38e9a9b954ac939c72a0010f954bd722512c0485f699696/pyaccl-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43523970785c3d0f4479d552c5bdd54e2c6cb09578edbac195180247aa3c07b9",
          "md5": "7c608566f28c12dd1626a70fd4c314c0",
          "sha256": "2ce2af9c02999358f0137e623c7159147fd2d0244c5cd9f6577cc48a1f0c26af"
        },
        "downloads": -1,
        "filename": "pyaccl-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7c608566f28c12dd1626a70fd4c314c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31001,
        "upload_time": "2022-08-12T16:29:56",
        "upload_time_iso_8601": "2022-08-12T16:29:56.772767Z",
        "url": "https://files.pythonhosted.org/packages/43/52/3970785c3d0f4479d552c5bdd54e2c6cb09578edbac195180247aa3c07b9/pyaccl-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43523970785c3d0f4479d552c5bdd54e2c6cb09578edbac195180247aa3c07b9",
        "md5": "7c608566f28c12dd1626a70fd4c314c0",
        "sha256": "2ce2af9c02999358f0137e623c7159147fd2d0244c5cd9f6577cc48a1f0c26af"
      },
      "downloads": -1,
      "filename": "pyaccl-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7c608566f28c12dd1626a70fd4c314c0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 31001,
      "upload_time": "2022-08-12T16:29:56",
      "upload_time_iso_8601": "2022-08-12T16:29:56.772767Z",
      "url": "https://files.pythonhosted.org/packages/43/52/3970785c3d0f4479d552c5bdd54e2c6cb09578edbac195180247aa3c07b9/pyaccl-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}