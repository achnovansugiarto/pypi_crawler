{
  "info": {
    "author": "Fabian Kreutz",
    "author_email": "project+gettex@fabian-kreutz.de",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# gettex - gettext tools for usage with LaTeX\n\n[TOC]\n\n## Overview\n\nThe GNU toolset [gettext](https://www.gnu.org/software/gettext/) is a popular and widely used\nsystem for application translations.\nIt does however not support [LaTeX](https://www.latex-project.org), an strangely even more\nwidely used typesetting language.\n\nThis tool provides drop-ins for the tools `xgettext` (to extract message ids from the source text\ninto a .pot file) and `msgfmt` (to distill the translated .po files into a format that can be\nused in the source).\n\n### Similar projects\n\nA similar project is [tex-gettext](https://github.com/mplucinski/tex-gettext), but with these\nnoteworthy difference of how the translations go into the document:\nIn tex-gettext, the source tex document and the translated .po files are merged into a new\ntex document in which function calls to gettext are replaced with the translated text.\n\nInstead this repository creates a tex library (`.sty`) file, which needs to be imported by\nthe source document, which stays otherwise unchanged.\n\n### gettext complication: plural handling\n\nA common challenge in software applications is to translate messages dependent on a number\nwhich need to adapt to the plural rules of different languages.\n\nI would expect (and it is true for my use case) that a tex document is a rather fixed affair\nand does not require pluralizable messages, but tex is after all a kind of programming\nlanguage, so this issue needs to be solved.\n\nWhen creating a `.po` file via the `msginit` tool from gettext, it will automatically add\na plural specification into the file.  In order to fetch the correct plural form, the\nlibrary must be able to calculate (using tex) the result of a mathmatical formula, which\nis defined in the po.\n\nThe author of tex-gettext, Mariusz Pluciński, created a wonderful parser and tex-generator.\nInstead of using that, however, I changed the logic to produce more concise tex code and\nadded a static mapping from all known plural specs into tex code.\nThis little tool will thus fail, if the spec is unknown, i.e. even if there is only a\nbraketing difference.\n\nAs I don't expect new plural forms to evolve, I suggest you change the unknown spec to a\nknown one (see [sty_renderer.py](src/gettex/sty_renderer.py)).\n\n## Usage\n\n### Add gettext function calls into the tex code\n\nSurround each message text that should be translated with one of these functions:\n\n* `gettext[optional comment]{message}`\n* `pgettext[optional comment]{context}{message}`\n* `ngettext[optional comment]{message}{plural message}{\\integerVariable}`\n* `pngettext[oc]{context}{message}{plural}{\\integerVariable}`\n\nA comment can be a help text for the translator, which has no effect on the translation.\n\nThe context is similarly a help text for the translator, but has the effect of generating\na different message id, even if the message is the same.\n\nEven though it's not necessary yet, you should also add an include statement for the `gettext.sty`.\nExample:\n\n```tex\n\\documentclass[12pt]{article}\n\n\\usepackage[utf8]{inputenc}\n\\usepackage{gettext}\n\\usepackage{sectsty}                   \n\n\\newcommand{\\sacerdos}[1]{%\n\\gettext{Sacerdos}: #1\\\\\n  \\renewcommand{\\sacerdos}[1]{\\pgettext{Sacerdos}{S}: ##1\\\\}\n}\n\\newcommand{\\populo}[1]{%\n\\textbf{\\gettext{Populo}: #1}\\\\\n  \\renewcommand{\\populo}[1]{\\textbf{\\pgettext{Populo}{P}: ##1}\\\\}\n}\n\n\\begin{document}\n\n\\section*{\\gettext{Ritus initiales}}\n\\subsection*{\\gettext{Salutatio}}\n\\sacerdos{\\gettext{In nómine patris, et Fílii, et Spíritus Sancti.}}\n\\populo{\\gettext{Amen.}}\n\\sacerdos{\\gettext{Dóminus vobíscum.}}\n\\populo{\\gettext{Et cum spíritu tuo.}}\n\n\\end{document}                      \n```\n\n### Call xgettext to extract the messages\n\nInstall this tool and call xgettext on your input tex file:\n\n```bash\n$ python -m venv venv\n$ . venv/bin/activate\n[venv]$ pip install gettex\n[venv]$ xgettext ordo.tex\nWrote 10 messages and the header to messages.po\n```\n\nThis will create the messages.po file.\nAt least this is the default behaviour of gettext's xgettext.\nI suggest you rename it to `messages.pot`, because it is the basis for all translation files\nand will be overwritten by future calls to xgettext.\n\nI do try to keep the header comments intact though.\nSo you should take some time to edit this file to add a descriptive title and a package version.\nThese variables can also be set via `xgettext` cli parameters.\n\n### Create .po files for languages\n\nLet's jump straight into the commands:\n\n```bash\ndomain=messages\nfor lang in en_US de_DE pl; do\n  langfile=\"locale/${domain}-${lang}.po\"\n  if ! test -f \"$langfile\"; then\n    msginit -i \"$domain.pot\" -l $lang -o \"$langfile\"\n  else\n    msgmerge \"$langfile\" \"$domain.pot\"\n  fi\ndone\n```\n\nThis is just normal gettext stuff, not using this here project at all.\nBut now you have `.po` files for each wanted language.\n\nEdit those and add the translations.\n\n### Format the translations as tex library\n\nAssuming you have the above virtual environment with the installed gettex package:\n\n```bash\n[venv]$ msgfmt locale/messages-en_US.po -o gettext.sty\n```\n\nThis will create a file `gettext.sty`, which you can now use with the document:\n\n```bash\n$ pdflatex ordo.tex\nThis is pdfTeX, ...\n(/usr/share/texmf-dist/tex/latex/base/inputenc.sty) (./gettext.sty\n...\nOutput written on ordo.pdf (1 page, 25212 bytes).\nTranscript written on ordo.log.\n```\n\n## License\n\nThis project is under the MIT license, Copyright (c) 2022 Fabian Kreutz.\n\nThis is compatible with the only required dependency: [pylatexenc](https://github.com/phfaist/pylatexenc), which is MIT-licensed: Copyright (c) 2015-2019 Philippe Faist\n\n## Open issues\n\n* textdomains\n  * Normally it should be possible from the code to select the catalog with the `bindtextdomain` function, or with an additional parameter in the `d*gettext` functions.\n  * Multiple catalogs can be active at the same time\n* language selection\n  * similarly the language should be selectable in the code with `setlocale`.  Currently the language is determined by which language was used to generate the `.sty`.\n\n# Changelog\n\n* Version 1.0\n  * Initial published version with some known flaws.\n\n# MIT License\n\nCopyright 2022, Fabian Kreutz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gettex",
    "package_url": "https://pypi.org/project/gettex/",
    "platform": null,
    "project_url": "https://pypi.org/project/gettex/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/gettex/1.0/",
    "requires_dist": [
      "pylatexenc"
    ],
    "requires_python": "",
    "summary": "Helper to use gettext on tex files",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15071248,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "773e3fcdc164d8c6e04fdb1412bae254b2b5be3d0fe0123ac328b7e0d8e629cf",
          "md5": "810680be6f43e210fc68e71091798e10",
          "sha256": "94d4123f18a49b349a048ff63688d90ca46889b7f2270deb87a992e5adb30fb2"
        },
        "downloads": -1,
        "filename": "gettex-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "810680be6f43e210fc68e71091798e10",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16409,
        "upload_time": "2022-09-12T19:51:55",
        "upload_time_iso_8601": "2022-09-12T19:51:55.030558Z",
        "url": "https://files.pythonhosted.org/packages/77/3e/3fcdc164d8c6e04fdb1412bae254b2b5be3d0fe0123ac328b7e0d8e629cf/gettex-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2afd8d76c1a3b1140520018d0524ffc153e415e3ce5d3986e6168817a0193b29",
          "md5": "8966386df619ba01316b219ac5159612",
          "sha256": "c1e17df406963c69183f5e4574364e0dec32b5cc8364260c72beaf686e55e2fd"
        },
        "downloads": -1,
        "filename": "gettex-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8966386df619ba01316b219ac5159612",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16832,
        "upload_time": "2022-09-12T19:51:56",
        "upload_time_iso_8601": "2022-09-12T19:51:56.583337Z",
        "url": "https://files.pythonhosted.org/packages/2a/fd/8d76c1a3b1140520018d0524ffc153e415e3ce5d3986e6168817a0193b29/gettex-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "773e3fcdc164d8c6e04fdb1412bae254b2b5be3d0fe0123ac328b7e0d8e629cf",
        "md5": "810680be6f43e210fc68e71091798e10",
        "sha256": "94d4123f18a49b349a048ff63688d90ca46889b7f2270deb87a992e5adb30fb2"
      },
      "downloads": -1,
      "filename": "gettex-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "810680be6f43e210fc68e71091798e10",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16409,
      "upload_time": "2022-09-12T19:51:55",
      "upload_time_iso_8601": "2022-09-12T19:51:55.030558Z",
      "url": "https://files.pythonhosted.org/packages/77/3e/3fcdc164d8c6e04fdb1412bae254b2b5be3d0fe0123ac328b7e0d8e629cf/gettex-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2afd8d76c1a3b1140520018d0524ffc153e415e3ce5d3986e6168817a0193b29",
        "md5": "8966386df619ba01316b219ac5159612",
        "sha256": "c1e17df406963c69183f5e4574364e0dec32b5cc8364260c72beaf686e55e2fd"
      },
      "downloads": -1,
      "filename": "gettex-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8966386df619ba01316b219ac5159612",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16832,
      "upload_time": "2022-09-12T19:51:56",
      "upload_time_iso_8601": "2022-09-12T19:51:56.583337Z",
      "url": "https://files.pythonhosted.org/packages/2a/fd/8d76c1a3b1140520018d0524ffc153e415e3ce5d3986e6168817a0193b29/gettex-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}