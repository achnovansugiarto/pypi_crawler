{
  "info": {
    "author": "Federico Di Marzo",
    "author_email": "mail.federicodimarzo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Introduction\n\nThis python module is designed to offer a collection of functions, classes and data structures that can be used to represent notes, rhythmic figures and melodies. Various parser are available to give a meaningful interpretation of a succession of midi note messages, together with a tool to monitor the evolution of an harmonic state of a musical performance.\n\nThe developement of this project started with the main idea of offering a series of useful tools that can be used to track external midi note messages that form melodies, generating sequences and harmonic information, that could be further processed by some machine learning algorithm (based on Markov models, grammars or similar techniques).\n\nThe output symbols of the parsing are based on the Impro-Visor software notation (https://www.cs.hmc.edu/~keller/jazz/improvisor/) and the theory supporting it can be found at this link https://www.cs.hmc.edu/~keller/jazz/improvisor/papers.html .\n\n## Installation\nThe package can easily be installed using the pip package manager.\n```shell\npip install melodically\n```\n\n## MidiNoteQueue\nTo parse note_on/note_off messages, a particular data structure called MidiQueue is used. This queue stores midi note messages with a timestamp, that is needed to parse the rhythmic structure of a melody. This data structure is supposed to collect only melodies, chords are not supported, if multiple note_on messages are pushed into it with timestamps too close with each other, only the first one will be mantained.\n\n```python\nimport melodically as m\n\nnote_queue = m.MidiNoteQueue()\nnote_queue.push(msg_type='note_on', note=47)\n# some temporal delay...\nnote_queue.push(msg_type='note_off', note=47)\n```\n\nSome other methods are exposed for extra flexibility.\n\n```python\nmsg = note_queue.pop() # gets the oldest note message removing it from the queue\nlist_of_msg = note_queue.get_container() # to deal directly with the data container\nmusical_notes = note_queue.get_notes() # to obtain a list of notes in std notation\nnote_queue.clean_unclosed_note_ons() # removes note_on messages that don't have a corrisponding note_off\nnote_queue.clear() # clears the queue\n```\n\nThe use of the MidiQueue for the melodic and rhythic parsing will be explained in the following sections.\n\n## HarmonicState\nThe HarmonicState class allows to track the harmonic relations of an input melody notes. \n\n```python\nharmonic_state = m.HarmonicState(buffer_size=20)\n```\n\nThe internal buffer is used to store input notes, in order to analyze them when it will be needed.\n\n```python\ndoric_melody = ['C#', 'C#', 'D#', 'E', 'F#', 'G#', 'A#', 'B']\nharmonic_state.push_notes(doric_melody)\n```\n\nThe HarmonicState can be sampled, to return the notes of the closest modal scale, depending on the notes in the input buffer. \n\n```python\ncurrent_scale = harmonic_state.get_mode_notes()\n```\n\nIn order to compute the most affine scale, the notes in the input buffer are compared with a distance function to each possible sequence of notes that composes a modal scale. The modal scale that minimizes this distance is then chosen. \n\nThe state update can also be forced manually if needed.\n\n```python\nharmonic_state.update_scale()\n```\n\n## Parsing single notes\n\nThe note parsing allows to translate a midi note number in a abstract melody notation. This parser supports three different abstract melody symbols.\n\n```\nc: chord tone\nl: color tone\nx: random tone\n```\n\nAn abstract melody can be realized in a particular chord; in order to obtain the correct abstract melody symbol, is necessary to input both a note in standard notation, and a chord. To obtain a note in standard notation from a midi note value, an additional parsing function is needed.\n\n```python\nnote = 'G'\nchord = 'CM' # C major chord\nabstract_note = m.parse_musical_note(note, chord) # from std note notation to abstract note notation\n```\n\nThe notes in standard notation are uppercase letters, and a sharp symbol can be present (an alternative version with flats is also present).\n\n```python\nmusical_notes = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B']\nmusical_notes_b = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B']\n```\n\nThe chord_dict dictionary contains the lists of chord/color tones of each chord.\nAt the moment only few families of chords are supported\n\n```\n# chord notation\nCM: major\nCm: minor\nC7: dominant\nCdim: diminished\n```\n\nExample on how to extract the lists of chord/color tones\n\n```python\n# chord and color tones for the chord C7\nchord_tones = chord_dictionary['C7']['c']\ncolor_tones = chord_dictionary['C7']['l']\n```\n\n## Parsing rhythm\n\nThe rhythmic parsing process, allows to translate a series of notes composing a melody, in multiple symbols describing the duration of each note. These are the symbol used to represent the rhythm, they are related to a certain bpm and they refer to a 4/4 rhythmic signature.\n\n```\n1: whole note\n2: half note\n4: quarter note\n4dot: quarter note dotted\n4t: quarter note triplet\n8: eight note\n8t: eight note triplet\n16: sixteenth note\n16t: sixteenth note triplet\n\nthe rests are indicated with an \"r\" prefix\nex: r4 (quarter note rest)\n```\n\nTo define a rhythmic frame for the analysis, a duration dictionary must be created and updated every time the bpm changes.\n\n```python\nbpm = 120.5\ndurations = amp.get_durations(bpm)\n```\n\nAfter defining the durations from the bpm, the parsing can follow. It will return a list of symbols for all the notes in the melody.\n\n```python\nrhythmic_symbols = amp.parse_rhythm(note_queue, durations)\n```\n\n## Manage rhythmic sequencrs into measures\n\nGiven any rhythmical sequence, the user can verify if it fits inside the '4/4' rhythmical subdivision.\n\n```python\nrhythmic_sequence = ['4', '4', '4', '4', '1']\nmeasures = 1\n\n# example\nif sequence_fit_measures(rhythmic_sequence, measures)\n  # this part of code is never reached \n  print(\"The sequence fits into given measure\")\n  \n\n```\n\nAlternatively, given a specific number of measures, the following method will return a new list of rhythmical symbols that can fit into it.\n\n```python\nrhythmic_sequence = [...]\nmeasures = 3\n\nsymbols = clip_rhythmic_sequence(rhythmic_sequence, measures)\n# [...(result)]\n\n```\n\n## Parsing entire melodies\n\nSometimes the informative content of a melody can only be found in the rhythm or in the armonic relations between the notes and a chord, but in many other occasions, is the underlying relation between the two that really expresses the message that a musitian is trying to share with his/her performance. Following this perspective, it can be useful to perform both melodic and rhythmic parsing from a single MidiQueue, and read the resulting symbols as pairs. Let's suppose to parse a MidiQueue that contains a melody playing on a Dm chord\n\n```python\ncurrent_chord = 'Dm'\nbpm = 125\ndurations = m.get_durations(bpm)\nfull_melody = m.parse_melody(midi_queue, current_chord, durations)\n```\n\nThe output symbols of a melodic parsing, are just a combination of the abstract note symbols and the rhythmic symbols.\n\n``` python\n# example melody\n['c4', 'c4', 'x8', 'x8', 'r4', 'l2', 'r2', 'l1']\n\n```\n\n## Enriching a chord dictionary\n\nDealing with the autogeneration of chords or melodies, the user easily realizes the importance to enrich his dictionary with color chords (chords composed by four notes withspecificintervals). From this concept, we develop a method that returns all the musical connections that a single chord can provide.\n\nThe user can add all the Major, Minor, or Dominant 7th to a given chord dictionary.\n\n```python\nchord_dict = [...]\nupd_chord_dict = m.get_chord_tones(chord_dict)\n\n# example of a new dictionary\nupd_chord_dict = [...]\n```\n\n\n## Handling with MIDI protocol\n\n\nOften, dealing with the MIDI protocol, would be beneficial to have a method that automatically gives all MIDI values of all the notes that compose a single chord.\n\nAn octave parameter can be specified as a integer indicating the octave shared between the notes, as a list of integers, indicating the octave for each note of the chords (in this case, the size of the list must be the same of the number of chord tones of the chord).\n\n```python\nchord = 'Am'\nmidi_chord = m.chord_to_midi(chord, octave=3)\n\n# example for the given chord\nmidi_chord = [...]\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FedericoDiMarzo/melodically",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "melodically",
    "package_url": "https://pypi.org/project/melodically/",
    "platform": "",
    "project_url": "https://pypi.org/project/melodically/",
    "project_urls": {
      "Bug Tracker": "https://github.com/FedericoDiMarzo/melodically/issues",
      "Homepage": "https://github.com/FedericoDiMarzo/melodically"
    },
    "release_url": "https://pypi.org/project/melodically/0.0.13/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A python module that contains various tools to handle melodic representation and parsing.",
    "version": "0.0.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10720397,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e0dae971b70b90c89b739997cdc65051e6f249ac8692bfd618bf03ea36833a1",
          "md5": "6ac0f301c4362ad3f3bf6bcd96a28b5a",
          "sha256": "d60c9625e49f4551512d493ad44ed3d7ed44f3c6fcf69a3edf252fa2052dd6c4"
        },
        "downloads": -1,
        "filename": "melodically-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ac0f301c4362ad3f3bf6bcd96a28b5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12005,
        "upload_time": "2021-05-11T20:46:42",
        "upload_time_iso_8601": "2021-05-11T20:46:42.938784Z",
        "url": "https://files.pythonhosted.org/packages/6e/0d/ae971b70b90c89b739997cdc65051e6f249ac8692bfd618bf03ea36833a1/melodically-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abfcd427e9ca1cd081c5886ab5fcecd56ad09825fe0e88fee474470c3ad57d2b",
          "md5": "50821de93bf9c15240cfdc1e26f2834c",
          "sha256": "a19ebcea21c9a8e7416db6375a9482788c963cd36f61ffa87211c0619ed78b50"
        },
        "downloads": -1,
        "filename": "melodically-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "50821de93bf9c15240cfdc1e26f2834c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12750,
        "upload_time": "2021-05-11T20:46:45",
        "upload_time_iso_8601": "2021-05-11T20:46:45.319850Z",
        "url": "https://files.pythonhosted.org/packages/ab/fc/d427e9ca1cd081c5886ab5fcecd56ad09825fe0e88fee474470c3ad57d2b/melodically-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80b43d7da4490cf6fd5fbe115fee2ae68c2d15c325d33bd3f2d65efb53840f2b",
          "md5": "f07eb392c8023adad814cfd0cc636cf9",
          "sha256": "723d5afc724330376ac257ce78627421b9b3cec4e6abe1adf8305eacb599c6ac"
        },
        "downloads": -1,
        "filename": "melodically-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f07eb392c8023adad814cfd0cc636cf9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13385,
        "upload_time": "2021-05-25T10:20:05",
        "upload_time_iso_8601": "2021-05-25T10:20:05.481937Z",
        "url": "https://files.pythonhosted.org/packages/80/b4/3d7da4490cf6fd5fbe115fee2ae68c2d15c325d33bd3f2d65efb53840f2b/melodically-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "508d0f41729a34683e11d7f9b86065a12f1bb11b28e477221bb189349ee5fdd0",
          "md5": "de5a44d3318fc984636c6dd1841b80f2",
          "sha256": "7756adad41f2d77a3e154aa63a798cff29f825b998a30ee81f5c02793dfd7dc4"
        },
        "downloads": -1,
        "filename": "melodically-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "de5a44d3318fc984636c6dd1841b80f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14120,
        "upload_time": "2021-05-25T10:20:06",
        "upload_time_iso_8601": "2021-05-25T10:20:06.970115Z",
        "url": "https://files.pythonhosted.org/packages/50/8d/0f41729a34683e11d7f9b86065a12f1bb11b28e477221bb189349ee5fdd0/melodically-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dbf7ffa1e41df3273673bb77784f5bd11d7a04e44255541779efd871339a31d",
          "md5": "932ade8f3b442027ac9890652d36d129",
          "sha256": "12db3e8b15daa4430b35426802b89e96d0381668e6639fbcbe5c38d0e07267dd"
        },
        "downloads": -1,
        "filename": "melodically-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "932ade8f3b442027ac9890652d36d129",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13371,
        "upload_time": "2021-06-23T10:16:18",
        "upload_time_iso_8601": "2021-06-23T10:16:18.305316Z",
        "url": "https://files.pythonhosted.org/packages/1d/bf/7ffa1e41df3273673bb77784f5bd11d7a04e44255541779efd871339a31d/melodically-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db387c16ea51ad27b2205a39bc21106c401110f7988adefa5b87062d0728f166",
          "md5": "70dcef790eafb73a27b791b1f07e88c6",
          "sha256": "5f89200c435fb9ceb8b800c182fc41f7f93dc48d0844e4ec9b9e9223a3bf7c46"
        },
        "downloads": -1,
        "filename": "melodically-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "70dcef790eafb73a27b791b1f07e88c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14078,
        "upload_time": "2021-06-23T10:16:20",
        "upload_time_iso_8601": "2021-06-23T10:16:20.389318Z",
        "url": "https://files.pythonhosted.org/packages/db/38/7c16ea51ad27b2205a39bc21106c401110f7988adefa5b87062d0728f166/melodically-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1768c0702f07eb7067134d11af995b2fcbac3330db119ed6ae44fe19f4db8f9a",
          "md5": "b99c7b3c839074ebf40e06aa53462429",
          "sha256": "6b15c2648d23961f01c9e4f58af19ba2145fa85f7a2219aadc78c620264bd505"
        },
        "downloads": -1,
        "filename": "melodically-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b99c7b3c839074ebf40e06aa53462429",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13385,
        "upload_time": "2021-06-23T10:31:07",
        "upload_time_iso_8601": "2021-06-23T10:31:07.958968Z",
        "url": "https://files.pythonhosted.org/packages/17/68/c0702f07eb7067134d11af995b2fcbac3330db119ed6ae44fe19f4db8f9a/melodically-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4c01118fe00fe36deaaed746d97462e4bccb9a1b8c13d38cb11ea6a301d7975",
          "md5": "66da14b1f568c3a96fd09e68862d2a7a",
          "sha256": "5451dded2d75ea928bed9f83dd16289e7e88e24366a403414d0ca574a2d7102f"
        },
        "downloads": -1,
        "filename": "melodically-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "66da14b1f568c3a96fd09e68862d2a7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14088,
        "upload_time": "2021-06-23T10:31:10",
        "upload_time_iso_8601": "2021-06-23T10:31:10.454400Z",
        "url": "https://files.pythonhosted.org/packages/d4/c0/1118fe00fe36deaaed746d97462e4bccb9a1b8c13d38cb11ea6a301d7975/melodically-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9dd0faed55766ec2acd908cad4d8ce083f27685e3369056ba2f10be41ed0571",
          "md5": "712f9e87772f144b160c53ae81f1ea7a",
          "sha256": "aa2602126b5f7754cd1350192df5f3a87dc6f0d4e5f2c682affc13f708d368e3"
        },
        "downloads": -1,
        "filename": "melodically-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "712f9e87772f144b160c53ae81f1ea7a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13384,
        "upload_time": "2021-06-23T11:13:06",
        "upload_time_iso_8601": "2021-06-23T11:13:06.210811Z",
        "url": "https://files.pythonhosted.org/packages/a9/dd/0faed55766ec2acd908cad4d8ce083f27685e3369056ba2f10be41ed0571/melodically-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06325d30c1d1894ef88c93b5f76b130f3ce7c7e74be79d1018c65f1c7c8a0704",
          "md5": "36b48935846aadea2c38e01d95c7c1c3",
          "sha256": "10dbff6c480387c558373a8d11dcd88577b00accc2dd0c0a69f6d1cd85cf1d2d"
        },
        "downloads": -1,
        "filename": "melodically-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "36b48935846aadea2c38e01d95c7c1c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14095,
        "upload_time": "2021-06-23T11:13:07",
        "upload_time_iso_8601": "2021-06-23T11:13:07.777539Z",
        "url": "https://files.pythonhosted.org/packages/06/32/5d30c1d1894ef88c93b5f76b130f3ce7c7e74be79d1018c65f1c7c8a0704/melodically-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e036e914b47b10cbcf2aea406f3a3eefe4aa44e53464185e5aa937b2f711929",
          "md5": "2d0c34bd93b6a0bf3a6522264623e695",
          "sha256": "d8225012ce534f8d8f52ecf1bb1bc59a757a5e58be246b4ac4e055b8a60769ef"
        },
        "downloads": -1,
        "filename": "melodically-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d0c34bd93b6a0bf3a6522264623e695",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12324,
        "upload_time": "2021-05-12T14:18:22",
        "upload_time_iso_8601": "2021-05-12T14:18:22.014104Z",
        "url": "https://files.pythonhosted.org/packages/3e/03/6e914b47b10cbcf2aea406f3a3eefe4aa44e53464185e5aa937b2f711929/melodically-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18965e8d45536fdd7d85ba4282bacb9ec9ce3f5c11cf11bcde3fcb39e1091094",
          "md5": "8a24ef59ad5f46a1feaffeddfab9a297",
          "sha256": "50adeadc1667eec0186f4ba1c3335d2787a2628c265ccc537c12ca3543e18221"
        },
        "downloads": -1,
        "filename": "melodically-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8a24ef59ad5f46a1feaffeddfab9a297",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13064,
        "upload_time": "2021-05-12T14:18:23",
        "upload_time_iso_8601": "2021-05-12T14:18:23.682778Z",
        "url": "https://files.pythonhosted.org/packages/18/96/5e8d45536fdd7d85ba4282bacb9ec9ce3f5c11cf11bcde3fcb39e1091094/melodically-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b7ee531d6243c7efa4171fc75e3cd3fd74c3d93e8979f76e6b5314752cd708e",
          "md5": "835a00af7e6b70ccebb20df403a1d4ba",
          "sha256": "57db0d2b0e8a23d99a7401bae819c28f4aab888841cf3b1169207c82d725467b"
        },
        "downloads": -1,
        "filename": "melodically-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "835a00af7e6b70ccebb20df403a1d4ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12237,
        "upload_time": "2021-05-17T17:43:19",
        "upload_time_iso_8601": "2021-05-17T17:43:19.034452Z",
        "url": "https://files.pythonhosted.org/packages/1b/7e/e531d6243c7efa4171fc75e3cd3fd74c3d93e8979f76e6b5314752cd708e/melodically-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2319b992ca9d35c9b7b8e21d844518ebbbde227113ac94d37e81845783d61af2",
          "md5": "acfbd89c59b810a617ebfb1f5dc66fa4",
          "sha256": "16f89a2790a7cc71bb31c03aa07f99d6a1d8d39408900e526ab7805a0a91bd1e"
        },
        "downloads": -1,
        "filename": "melodically-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "acfbd89c59b810a617ebfb1f5dc66fa4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12943,
        "upload_time": "2021-05-17T17:43:20",
        "upload_time_iso_8601": "2021-05-17T17:43:20.698781Z",
        "url": "https://files.pythonhosted.org/packages/23/19/b992ca9d35c9b7b8e21d844518ebbbde227113ac94d37e81845783d61af2/melodically-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b83be2908338125709c482eb9b35ef8e66edff3e8aa25fd4b04cf023c6556142",
          "md5": "512157dc08f4d4e85c4981b677cc13cf",
          "sha256": "1c3edf9d086d8a9dc1a0eff35c05f44ed1f899ccde5d24f47a4c06186946a245"
        },
        "downloads": -1,
        "filename": "melodically-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "512157dc08f4d4e85c4981b677cc13cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12198,
        "upload_time": "2021-05-18T12:47:25",
        "upload_time_iso_8601": "2021-05-18T12:47:25.143846Z",
        "url": "https://files.pythonhosted.org/packages/b8/3b/e2908338125709c482eb9b35ef8e66edff3e8aa25fd4b04cf023c6556142/melodically-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6525074c337583e463609403da42c0fc99a78cd61facb0cb4d21c10f1691487c",
          "md5": "c169a87199354c2177dd0f03dda44abe",
          "sha256": "0a1180c411079da55e1835152acab0464b769e7c9e94f51e301d9fb3ad76f711"
        },
        "downloads": -1,
        "filename": "melodically-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c169a87199354c2177dd0f03dda44abe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12870,
        "upload_time": "2021-05-18T12:47:27",
        "upload_time_iso_8601": "2021-05-18T12:47:27.500407Z",
        "url": "https://files.pythonhosted.org/packages/65/25/074c337583e463609403da42c0fc99a78cd61facb0cb4d21c10f1691487c/melodically-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e81d26562f74a363830ff1c331ace056136a70fca48f126b35777ccc794307ba",
          "md5": "c37e66a2a22e86ee071e5cc44025b213",
          "sha256": "b78fc2ec1eae8bb8edb3c4e2e3c66eb394c3b90bc2950e95d8cd8577b8a598c8"
        },
        "downloads": -1,
        "filename": "melodically-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c37e66a2a22e86ee071e5cc44025b213",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12373,
        "upload_time": "2021-05-18T13:18:54",
        "upload_time_iso_8601": "2021-05-18T13:18:54.290948Z",
        "url": "https://files.pythonhosted.org/packages/e8/1d/26562f74a363830ff1c331ace056136a70fca48f126b35777ccc794307ba/melodically-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "535da1d21c0f165bea22129f38f7957f80ec7a6295585c7a77c82b53677e27a0",
          "md5": "e21b0ef6c500349644c4de92707141b5",
          "sha256": "3ca8328d5bf3e4499a54e927a8ac1a4a94b910c4df5dae8adbbeb6c684bda18f"
        },
        "downloads": -1,
        "filename": "melodically-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e21b0ef6c500349644c4de92707141b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13030,
        "upload_time": "2021-05-18T13:18:55",
        "upload_time_iso_8601": "2021-05-18T13:18:55.925836Z",
        "url": "https://files.pythonhosted.org/packages/53/5d/a1d21c0f165bea22129f38f7957f80ec7a6295585c7a77c82b53677e27a0/melodically-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cc4d815c79c590c6d671336903177edcf8646213679a6d26ebd96aa4c47b8cb",
          "md5": "6cca87d6cfeba70f88a7d90eeea3d8e2",
          "sha256": "0e8de238026e1c03ddba3ddf45df6d7aa70f630a724f721b61fb2b403dd00710"
        },
        "downloads": -1,
        "filename": "melodically-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6cca87d6cfeba70f88a7d90eeea3d8e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12389,
        "upload_time": "2021-05-18T13:28:59",
        "upload_time_iso_8601": "2021-05-18T13:28:59.809048Z",
        "url": "https://files.pythonhosted.org/packages/1c/c4/d815c79c590c6d671336903177edcf8646213679a6d26ebd96aa4c47b8cb/melodically-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41c9e81350e9ec34596cdc3a87208a51c40ce9926529d75331eadc390a4b8b31",
          "md5": "bf7106860a63cb62ee7d589d6fcbc132",
          "sha256": "ff1732aff8bd1ac0671fdd1dbd7bebdbf65828b6d0e3b6ca339c1de7ba14a7fb"
        },
        "downloads": -1,
        "filename": "melodically-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "bf7106860a63cb62ee7d589d6fcbc132",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13052,
        "upload_time": "2021-05-18T13:29:01",
        "upload_time_iso_8601": "2021-05-18T13:29:01.764488Z",
        "url": "https://files.pythonhosted.org/packages/41/c9/e81350e9ec34596cdc3a87208a51c40ce9926529d75331eadc390a4b8b31/melodically-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38613dce11eda8f2bde6b8790f8d8f5426dc7bd3362937c2e34162aef2b8045c",
          "md5": "11de344dc45b7deca7b48f28a7c7cdb1",
          "sha256": "c08df6834c4c0991f9a6853c4c52dca328890fbf9d8e487bb0396d200006503f"
        },
        "downloads": -1,
        "filename": "melodically-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11de344dc45b7deca7b48f28a7c7cdb1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12475,
        "upload_time": "2021-05-18T13:40:08",
        "upload_time_iso_8601": "2021-05-18T13:40:08.904698Z",
        "url": "https://files.pythonhosted.org/packages/38/61/3dce11eda8f2bde6b8790f8d8f5426dc7bd3362937c2e34162aef2b8045c/melodically-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3885a0864274e62843cd5d9fdf1064faf8ddfe112991daa8deff550064e99a0d",
          "md5": "c3adca66ed29a5d82e16d25090b7b97f",
          "sha256": "185f4eb77d53a6983a8d8bb62db3a5d410e4c5046415a9f7422dc5c36275680c"
        },
        "downloads": -1,
        "filename": "melodically-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "c3adca66ed29a5d82e16d25090b7b97f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13104,
        "upload_time": "2021-05-18T13:40:10",
        "upload_time_iso_8601": "2021-05-18T13:40:10.387750Z",
        "url": "https://files.pythonhosted.org/packages/38/85/a0864274e62843cd5d9fdf1064faf8ddfe112991daa8deff550064e99a0d/melodically-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "752906884f93ab6c069c2da6fb4ebeafae38559fbfeccec79b6aaa8eac7c0aa3",
          "md5": "95833ee06ed7579aebd8d9eddc65891c",
          "sha256": "61efc3d0b07f47341340b0cbb4710e9c07679c32e56aab95d6b7e3be2ae87703"
        },
        "downloads": -1,
        "filename": "melodically-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95833ee06ed7579aebd8d9eddc65891c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12675,
        "upload_time": "2021-05-19T13:17:47",
        "upload_time_iso_8601": "2021-05-19T13:17:47.843996Z",
        "url": "https://files.pythonhosted.org/packages/75/29/06884f93ab6c069c2da6fb4ebeafae38559fbfeccec79b6aaa8eac7c0aa3/melodically-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c916cbbc3d5fd5040e0f1e8855ec8ae9eceff49ad86be2206e4d29118dd2b64",
          "md5": "54df2715a7f516968785c8d7e86e85b2",
          "sha256": "130c5b31482ce1e5caa0add530187f9ddcfafa53a73074f16fdb60c2c64bd157"
        },
        "downloads": -1,
        "filename": "melodically-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "54df2715a7f516968785c8d7e86e85b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13340,
        "upload_time": "2021-05-19T13:17:49",
        "upload_time_iso_8601": "2021-05-19T13:17:49.490780Z",
        "url": "https://files.pythonhosted.org/packages/3c/91/6cbbc3d5fd5040e0f1e8855ec8ae9eceff49ad86be2206e4d29118dd2b64/melodically-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9dd0faed55766ec2acd908cad4d8ce083f27685e3369056ba2f10be41ed0571",
        "md5": "712f9e87772f144b160c53ae81f1ea7a",
        "sha256": "aa2602126b5f7754cd1350192df5f3a87dc6f0d4e5f2c682affc13f708d368e3"
      },
      "downloads": -1,
      "filename": "melodically-0.0.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "712f9e87772f144b160c53ae81f1ea7a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13384,
      "upload_time": "2021-06-23T11:13:06",
      "upload_time_iso_8601": "2021-06-23T11:13:06.210811Z",
      "url": "https://files.pythonhosted.org/packages/a9/dd/0faed55766ec2acd908cad4d8ce083f27685e3369056ba2f10be41ed0571/melodically-0.0.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06325d30c1d1894ef88c93b5f76b130f3ce7c7e74be79d1018c65f1c7c8a0704",
        "md5": "36b48935846aadea2c38e01d95c7c1c3",
        "sha256": "10dbff6c480387c558373a8d11dcd88577b00accc2dd0c0a69f6d1cd85cf1d2d"
      },
      "downloads": -1,
      "filename": "melodically-0.0.13.tar.gz",
      "has_sig": false,
      "md5_digest": "36b48935846aadea2c38e01d95c7c1c3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14095,
      "upload_time": "2021-06-23T11:13:07",
      "upload_time_iso_8601": "2021-06-23T11:13:07.777539Z",
      "url": "https://files.pythonhosted.org/packages/06/32/5d30c1d1894ef88c93b5f76b130f3ce7c7e74be79d1018c65f1c7c8a0704/melodically-0.0.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}