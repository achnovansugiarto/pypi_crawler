{
  "info": {
    "author": "Shahab Tasharrofi",
    "author_email": "shahab.tasharrofi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pytyped-hocon\n\n`pytyped-hocon` is a Python package that enables automatic extraction of HOCON parsers for given Python types.\n`pytyped-hocon` is built on top of [pyhocon](https://pypi.org/project/pyhocon/) and [pytyped-macros](https://pypi.org/project/pytyped-macros/) to automatically parse HOCON config files into native Python types.\n`pytyped-hocon` is a piece of the `pytyped` collection of packages and follows its philosophy of using types to automate mundane and repetitive tasks.\n\n### Installation\n\nYou can install `pytyped-hocon` from [PyPI](https://pypi.org/):\n\n```\npip install pytyped-hocon\n```\n\n`pytyped-hocon` is checked on `Python 3.6+`.\n\n### Why `pytyped-hocon`?\n\nBased on the foundation of `pytyped-macros`, to our knowledge, `pytyped-hocon` is the only Python package that supports type-based HOCON parser extraction for **all typing combinators** including even recursive types that, up to this day, are not even fully supported by Python itself.\nAdditionally, `pytyped-hocon` is designed to be extensible.\nThat is, you can add your own specialized HOCON parsers for either a simple type or even a generic type.\n\nCurrently, `pytyped-hocon` supports the following type driven HOCON parser extractions:\n- HOCON parsers for **basic types** such as `int`, `bool`, `date`, `datetime`, `str`, and `Decimal`.\n- HOCON parsers for **simple type combinators** such as `List[T]` and `Dict[A, B]`.\n- HOCON parsers for **named product types** such as `NamedTuple`s or `dataclass`es.\n- HOCON parsers for **anonymous product types** such as `Tuple[T1, T2, ...]`.\n- HOCON parsers for **anonymous union types** such as `Optional[T]`, `Union[T1, T2, ...]`, etc.\n- HOCON parsers for **named union types** such as class hierarchies (i.e., when a class `A` has several subclasses `A1`, ..., `An`).\n- HOCON parsers for **generic types** and type variables.\n- HOCON parsers for **custom functional types** such as `Set[T]`, `Secret[T]`, etc where a custom function is defined for generic types such as `Set` or `Secret` and that functional is applied to all instantiations of those generic type.\n- HOCON parsers for **recursive types** such as binary trees, etc.\n\n### Using `pytyped-hocon` to extract HOCON decoders\n\nFirst, define your type.\nFor example, the following defines the configuration of a simple new archiver program that connects to a news server, gets today's news and stores it in a database.\n\n```python\nfrom dataclasses import dataclass\nfrom typing import Generic, Optional, TypeVar\n\n\nT = TypeVar(\"T\")\n\n\n@dataclass\nclass Secret(Generic[T]):\n    value: T\n\n    def __str__(self) -> str:\n        return \"<redacted-secret>\"\n\n    def __repr__(self) -> str:\n        return \"<redacted-secret>\"\n\n\n@dataclass\nclass ServerConfig:\n    host: str\n    port: Optional[int]  # If None, use port 80\n    api_key: Secret[str]\n    path: Optional[str]\n\n\n@dataclass\nclass DbConfig:\n    host: str\n    user_name: str\n    password: Secret[str]\n    port: int = 5432  # Default Postgres port\n\n\n@dataclass\nclass ArchiverConfig:\n    news_server: ServerConfig\n    db: DbConfig\n```\n\nSecond, use an instance of `AutoHoconParser` to extract a HOCON parser as below:\n\n```python\nfrom pytyped.hocon.parser import AutoHoconParser, HoconMappedParser, HoconParser\n\n_auto_hocon_parser = AutoHoconParser()\n\n_auto_hocon_parser.add_custom_functional_type(Secret, lambda t_parser: HoconMappedParser(t_parser, lambda s: Secret(s)))\nconfig_parser: HoconParser[ArchiverConfig] = _auto_hocon_parser.extract(ArchiverConfig)\n```\n\nThird, define a file such as `archiver.conf` which contains your program configuration:\n\n```HOCON\narchiver: {\n    news_server: {\n        host: yahoo.com\n        api_key: ${YAHOO_API_KEY}\n        path: \"/news\"\n    }\n    db: {\n        host: localhost\n        user_name: news\n        password: ${DB_PASSWORD}\n    }\n}\n```\n\nFinally, use `config_parser` to parse your config file into your config object:\n\n```python\n>>> import os\n>>> os.environ[\"YAHOO_API_KEY\"] = \"secret-api-key\"\n>>> os.environ[\"DB_PASSWORD\"] = \"ABCD\"\n>>> conf = config_parser.from_file(\"archiver.conf\", root=\"archiver\")\n>>> conf\nArchiverConfig(\n    news_server=ServerConfig(\n        host='yahoo.com',\n        port=None,\n        api_key=<redacted-secret>,\n        path='/news'\n    ),\n    db=DbConfig(\n        host='localhost',\n        user_name='news',\n        password=<redacted-secret>,\n        port=5432\n    )\n)\n>>> conf.news_server.api_key.value\n'secret-api-key'\n>>> conf.db.password.value\n'ABCD'\n```\n\n### Issues\n\nPlease report any issues to the [GitHub repository for this package](https://github.com/stasharrofi/pytyped).\n\n### Contributors\n\n- [Shahab Tasharrofi](mailto:shahab.tasharrofi@gmail.com)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stasharrofi/pytyped/tree/master/pytyped-hocon",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytyped-hocon",
    "package_url": "https://pypi.org/project/pytyped-hocon/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytyped-hocon/",
    "project_urls": {
      "Homepage": "https://github.com/stasharrofi/pytyped/tree/master/pytyped-hocon"
    },
    "release_url": "https://pypi.org/project/pytyped-hocon/0.2.0/",
    "requires_dist": [
      "pyhocon (>=0.3.59)",
      "python-dateutil (>=2.8.1)",
      "pytyped-macros (>=1.0.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Type-Driven Development for Python: Automatic Extraction of HOCON Parsers for Python Types",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13610574,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8942d5ce60b40cb87bae7be6b530aef34758238280633330cc4bf56dd11a7d85",
          "md5": "3259604fa5c05a8237ce6e37decdac96",
          "sha256": "a906c0ad822cd7d0a17bdd56b374b0cedd41d7bf16bb04cf4c5bc75b4bb68b85"
        },
        "downloads": -1,
        "filename": "pytyped_hocon-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3259604fa5c05a8237ce6e37decdac96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6510,
        "upload_time": "2022-04-25T04:06:11",
        "upload_time_iso_8601": "2022-04-25T04:06:11.203371Z",
        "url": "https://files.pythonhosted.org/packages/89/42/d5ce60b40cb87bae7be6b530aef34758238280633330cc4bf56dd11a7d85/pytyped_hocon-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "930c33e11a82d68af36b4102781d109a0914df889c750e1e21a9f9044663ebbd",
          "md5": "61fb27c9717fa0ca64d152ac7fd95e6e",
          "sha256": "7a21101a1feb2ebd56e3f892f983f8eebffd0116118f294e540dc2c6c73e8871"
        },
        "downloads": -1,
        "filename": "pytyped-hocon-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "61fb27c9717fa0ca64d152ac7fd95e6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6490,
        "upload_time": "2022-04-25T04:06:12",
        "upload_time_iso_8601": "2022-04-25T04:06:12.542788Z",
        "url": "https://files.pythonhosted.org/packages/93/0c/33e11a82d68af36b4102781d109a0914df889c750e1e21a9f9044663ebbd/pytyped-hocon-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "beb8efe22b34c0ae59ce2caa66f1fb8a8aa374a75a7201b193b8baf4d20c3899",
          "md5": "95328b0c517f6d68ae7356d43463b886",
          "sha256": "39efcbe3616d329496deb179d08cc693ec859e67bdef6345c04c6a9f62eaf76e"
        },
        "downloads": -1,
        "filename": "pytyped_hocon-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95328b0c517f6d68ae7356d43463b886",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8291,
        "upload_time": "2022-04-25T05:27:26",
        "upload_time_iso_8601": "2022-04-25T05:27:26.598446Z",
        "url": "https://files.pythonhosted.org/packages/be/b8/efe22b34c0ae59ce2caa66f1fb8a8aa374a75a7201b193b8baf4d20c3899/pytyped_hocon-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef1988261d630f3df5d09daffd3e13c6fdb481a96f1235b9e046ee0811c12672",
          "md5": "165c11d631086d649eb950647f6a6584",
          "sha256": "e1488e55de2c94c6f40e19bf01b86986f1aec191f2e179485d52f0a54458fedd"
        },
        "downloads": -1,
        "filename": "pytyped-hocon-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "165c11d631086d649eb950647f6a6584",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9764,
        "upload_time": "2022-04-25T05:27:28",
        "upload_time_iso_8601": "2022-04-25T05:27:28.222950Z",
        "url": "https://files.pythonhosted.org/packages/ef/19/88261d630f3df5d09daffd3e13c6fdb481a96f1235b9e046ee0811c12672/pytyped-hocon-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "beb8efe22b34c0ae59ce2caa66f1fb8a8aa374a75a7201b193b8baf4d20c3899",
        "md5": "95328b0c517f6d68ae7356d43463b886",
        "sha256": "39efcbe3616d329496deb179d08cc693ec859e67bdef6345c04c6a9f62eaf76e"
      },
      "downloads": -1,
      "filename": "pytyped_hocon-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "95328b0c517f6d68ae7356d43463b886",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8291,
      "upload_time": "2022-04-25T05:27:26",
      "upload_time_iso_8601": "2022-04-25T05:27:26.598446Z",
      "url": "https://files.pythonhosted.org/packages/be/b8/efe22b34c0ae59ce2caa66f1fb8a8aa374a75a7201b193b8baf4d20c3899/pytyped_hocon-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef1988261d630f3df5d09daffd3e13c6fdb481a96f1235b9e046ee0811c12672",
        "md5": "165c11d631086d649eb950647f6a6584",
        "sha256": "e1488e55de2c94c6f40e19bf01b86986f1aec191f2e179485d52f0a54458fedd"
      },
      "downloads": -1,
      "filename": "pytyped-hocon-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "165c11d631086d649eb950647f6a6584",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9764,
      "upload_time": "2022-04-25T05:27:28",
      "upload_time_iso_8601": "2022-04-25T05:27:28.222950Z",
      "url": "https://files.pythonhosted.org/packages/ef/19/88261d630f3df5d09daffd3e13c6fdb481a96f1235b9e046ee0811c12672/pytyped-hocon-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}