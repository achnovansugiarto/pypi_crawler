{
  "info": {
    "author": "Tom McTavish",
    "author_email": "tom@spikes.ai",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# matplotlib-publishutil\n\n[![PyPI version](https://badge.fury.io/py/publishutil.svg)](https://badge.fury.io/py/matplotlib-publishutil)\n\n*Utilities to help configure matplotlib figures for publication.*\n\nThis repo contains utility functions to help (re)configure [Matplotlib](https://matplotlib.org/) \nfigures within the formatting constraints of a given \npublication. Example uses include:\n\n  * Toggling figures between slide presentation and print publication formats. \n  * Dynamically rescale figure dimensions to abide by a publication's column \n    or page dimensions while maintaining font sizes and styles.\n  * Labeling panels per the publication's standards.\n\n## Installation\n\nThe easiest way to install matplotlib-publishutil is by using `pip`:\n\n```bash\n# to install the lastest release (from PyPI)\npip install matplotlib-publishutil\n\n# to install the latest commit (from GitHub)\npip install git+https://github.com/tommct/matplotlib-publishutil.git\n```\n\n## Tutorial and Examples\n\n### Figure size by columns\n\nThe following shows how we might scale an image for publication in [Nature](https://www.nature.com/documents/nature-final-artwork.pdf), \npassing in different parameters to `FigureLayout.get_figsize()`.\n\nThe configuration file for *Nature* contains the following values for figsize:\n\n    figsize:\n        column_width: 89\n        gutter_width: 5\n        max_width: 183\n        max_height: 247\n        units: 'mm'\n\nHere are a few scenarios for `FigureLayout.get_figsize()`:\n\n```python\nimport matplotlib.pyplot as plt\nfrom publishutil.figurelayout import FigureLayout\n\nfig_layout = FigureLayout('nature')\nprint(f'Full page: {fig_layout.get_figsize(width_proportion=1., height=1.)}')\nprint(f'Alternative Full page: {fig_layout.get_figsize(n_columns=2, height=1.)}')\nprint(f'Half page: {fig_layout.get_figsize(width_proportion=1., height=.5)}')\nprint(f'One column: Golden Ratio Height: {fig_layout.get_figsize(n_columns=1)}')\nprint(f'One column: 16:9 aspect: {fig_layout.get_figsize(n_columns=1, wh_ratio=16/9)}')\n```\n\nWhich provides the following output:\n\n```\nFull page: (7.204724409448819, 9.724409448818898)\nAlternative Full page: (7.204724409448819, 9.724409448818898)\nHalf page: (7.204724409448819, 4.862204724409449)\nOne column: Golden Ratio Height: (3.5039370078740157, 2.16555216530475)\nOne column: 16:9 aspect: (3.5039370078740157, 1.970964566929134)\n```\n\nAny of these approaches can be passed as the `figsize` arguments when creating\na Matplotlib figure. E.g. \n`fig, ax = plt.subplots(figsize=fig_layout.get_figsize(n_columns=1), constrained_layout=True)`.\n\n> Note: When creating and saving figures, a \n[constrained_layout](https://matplotlib.org/stable/tutorials/intermediate/constrainedlayout_guide.html)\nshould be used over \n[tight_layout](https://matplotlib.org/stable/tutorials/intermediate/tight_layout_guide.html).\nThis helps ensure that the figure size as defined in our parameters file is more accurately adopted.\nAlso, if one is not using the `dpi` as specified in \n[`rcParams`](https://matplotlib.org/stable/api/matplotlib_configuration_api.html#matplotlib.rcParams),\n`dpi` should be sent as an argument to `fig_layout.get_figsize()` with the same value as when the\nfigure is rendered or saved.\n\n### Panel Labels\n\nTo provide panel labels into the figure using our selected style, one has to \nset an axes object to be labeled with a \"panel_label\" attribute, as in:\n\n```python\nax.panel_label = 'A'\n```\n\nThis is an external, unrecognized attribute to matplotlib so calling \n`ax.set({'panel_label': 'A'})` will result in an error and one has to follow \nthe approach above. Also note that it is not necessary to label every axes. \nIf you do not give an axes object a `panel_label` attribute, it will not get \ndrawn.\n\nThe following example comes from [this matplotlib demo](https://matplotlib.org/stable/tutorials/intermediate/gridspec.html):\n\n```python\nfig_layout = FigureLayout('nature')\nfig = plt.figure(figsize=fig_layout.get_figsize(n_columns=2, height=1.), constrained_layout=True)\ngs = fig.add_gridspec(3, 3)\nax1 = fig.add_subplot(gs[0, :])\nax1.set_title('gs[0, :]')\nax2 = fig.add_subplot(gs[1, :-1])\nax2.set_title('gs[1, :-1]')\nax3 = fig.add_subplot(gs[1:, -1])\nax3.set_title('gs[1:, -1]')\nax4 = fig.add_subplot(gs[-1, 0])\nax4.set_title('gs[-1, 0]')\nax5 = fig.add_subplot(gs[-1, -2])\nax5.set_title('gs[-1, -2]')\n\n# Add the panel_label attributes\nax1.panel_label = 'A'\nax2.panel_label = 'B'\nax3.panel_label = 'E'\nax4.panel_label = 'C'\nax5.panel_label = 'D'\n\n# Draw the panel labels\nfig_layout.draw_panel_labels(fig)\n```\n\nAfter exexuting the code above, if for some reason we may want to perform \nfurther editing of the labels, they are available in the `fig.texts` list.\n\nThis particular example is useful as it shows that even though we supplied\nsimply uppercase letters, the *Nature* style makes them 8-point, sans-serif,\nlowercased, bold.\n\nThe placement of each panel label baseline-justified with the top horizontal\naxis and left of each axes [tightbox](https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.get_tightbbox.html). One can adjust these later by obtaining their handles\nwith `fig.texts`:\n\n#### Retrieving rendered formats\n\nIf you want your caption to dynamically change based off the rendering, you can retrieve the\nformatted labels as a dict:\n\n```python\nfrom IPython.display import Markdown as md\npanel_labels = fig_layout.get_formatted_panel_labels(fig, frmt='markdown')\nprint(f'Figure 1. {panel_labels[\"A\"]}, description of panel A...')\n```\n\n### List of available layout styles\n\nTo determine the list of named styles, simply call `FigureLayout.available`.\n\n### Customizing your own layout style\n\nTo add your own style, simply make a YAML file in a format similar to those\nin the *figure_layouts* folder. Supply the full or relative path to this\nfile as the `name` parameter when creating a `FigureLayout` object and you\nshould be good to go.\n\n### Adding your own layout style to the repo\n\nThis tool is generally easy to use, especially if on can simply give a name\nto a layout style file. If you have created a style file (or enhanced an\nexisting one), please add it to the repo! The easiest way is to \n[create an issue](https://github.com/tommct/matplotlib-publishutil/issues) and\npaste in your template file. Alternatively, if you have code changes, feel free\nto fork a branch and create a pull request to merge your changes.\n\n### Using with Matplotlib styles\n\nThis package is independent of other [Matplotlib Styles](https://matplotlib.org/stable/gallery/style_sheets/style_sheets_reference.html).\nHowever, one may find styles such as those in [SciencePlots](https://github.com/garrettj403/SciencePlots) \nto be complementary to the layout styles here. For example, one could use the `nature` layout here\nwhile using the `nature` Matplotlib style for a consistent look.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tommct/matplotlib-publishutil",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "matplotlib-publishutil",
    "package_url": "https://pypi.org/project/matplotlib-publishutil/",
    "platform": "",
    "project_url": "https://pypi.org/project/matplotlib-publishutil/",
    "project_urls": {
      "Bug Tracker": "https://github.com/tommct/matplotlib-publishutil/issues",
      "Homepage": "https://github.com/tommct/matplotlib-publishutil"
    },
    "release_url": "https://pypi.org/project/matplotlib-publishutil/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Utilities to help configure matplotlib figures for publication.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10521823,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d0c5f5cc91dd7341c3374ebc070c489f4b4317b3c4a54ba19d323a383fed64a",
          "md5": "384b2b9c2537c333689c486efab47231",
          "sha256": "720a3f03313133a929ea18b6cfb22e725231fbdb3a0ca46cb5ba89334d68757d"
        },
        "downloads": -1,
        "filename": "matplotlib_publishutil-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "384b2b9c2537c333689c486efab47231",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9150,
        "upload_time": "2021-05-19T14:15:57",
        "upload_time_iso_8601": "2021-05-19T14:15:57.187559Z",
        "url": "https://files.pythonhosted.org/packages/4d/0c/5f5cc91dd7341c3374ebc070c489f4b4317b3c4a54ba19d323a383fed64a/matplotlib_publishutil-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ca7065b91ca09043ec276f605629f2f4384b001ec1ee0e1c23b935a4b4734ba",
          "md5": "f0a1112cb88c819a53fb1baebc22d2ce",
          "sha256": "090bf83c709a3587c102620de423bab4f19b99557db10c90f9974def9fad6f43"
        },
        "downloads": -1,
        "filename": "matplotlib-publishutil-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f0a1112cb88c819a53fb1baebc22d2ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8279,
        "upload_time": "2021-05-19T14:15:58",
        "upload_time_iso_8601": "2021-05-19T14:15:58.628118Z",
        "url": "https://files.pythonhosted.org/packages/7c/a7/065b91ca09043ec276f605629f2f4384b001ec1ee0e1c23b935a4b4734ba/matplotlib-publishutil-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f5eeb2021fea4cd01d207d9984bc2cad29ad2a1097b426fb4e569e2582fb84a",
          "md5": "af1aac06cc05458a77d153f4df39f5f3",
          "sha256": "615500ae4bf558dfff98aec0cdd3049ad2f78789fe0ae2b31da4fff9e2aed2a3"
        },
        "downloads": -1,
        "filename": "matplotlib_publishutil-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af1aac06cc05458a77d153f4df39f5f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11188,
        "upload_time": "2021-05-31T20:31:54",
        "upload_time_iso_8601": "2021-05-31T20:31:54.364056Z",
        "url": "https://files.pythonhosted.org/packages/4f/5e/eb2021fea4cd01d207d9984bc2cad29ad2a1097b426fb4e569e2582fb84a/matplotlib_publishutil-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e24c255c854c10e654b5b4045bfe677829505493799409c310b29980a9c77b8",
          "md5": "4d64a063acdcd6843d7c284d67f8495d",
          "sha256": "187af560911506443a1564076b01db68861dcd62347fc1678e9af04737527619"
        },
        "downloads": -1,
        "filename": "matplotlib-publishutil-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4d64a063acdcd6843d7c284d67f8495d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9058,
        "upload_time": "2021-05-31T20:31:55",
        "upload_time_iso_8601": "2021-05-31T20:31:55.773292Z",
        "url": "https://files.pythonhosted.org/packages/5e/24/c255c854c10e654b5b4045bfe677829505493799409c310b29980a9c77b8/matplotlib-publishutil-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f5eeb2021fea4cd01d207d9984bc2cad29ad2a1097b426fb4e569e2582fb84a",
        "md5": "af1aac06cc05458a77d153f4df39f5f3",
        "sha256": "615500ae4bf558dfff98aec0cdd3049ad2f78789fe0ae2b31da4fff9e2aed2a3"
      },
      "downloads": -1,
      "filename": "matplotlib_publishutil-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "af1aac06cc05458a77d153f4df39f5f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11188,
      "upload_time": "2021-05-31T20:31:54",
      "upload_time_iso_8601": "2021-05-31T20:31:54.364056Z",
      "url": "https://files.pythonhosted.org/packages/4f/5e/eb2021fea4cd01d207d9984bc2cad29ad2a1097b426fb4e569e2582fb84a/matplotlib_publishutil-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e24c255c854c10e654b5b4045bfe677829505493799409c310b29980a9c77b8",
        "md5": "4d64a063acdcd6843d7c284d67f8495d",
        "sha256": "187af560911506443a1564076b01db68861dcd62347fc1678e9af04737527619"
      },
      "downloads": -1,
      "filename": "matplotlib-publishutil-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "4d64a063acdcd6843d7c284d67f8495d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9058,
      "upload_time": "2021-05-31T20:31:55",
      "upload_time_iso_8601": "2021-05-31T20:31:55.773292Z",
      "url": "https://files.pythonhosted.org/packages/5e/24/c255c854c10e654b5b4045bfe677829505493799409c310b29980a9c77b8/matplotlib-publishutil-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}