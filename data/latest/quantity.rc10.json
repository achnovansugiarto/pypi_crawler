{
  "info": {
    "author": "Michael Amrhein",
    "author_email": "michael@adrhinum.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "The package _quantity_ provides classes for unit-safe computations with\nquantities, including money.\n\n### Defining a quantity class\n\nA **basic** type of quantity is declared just by sub-classing _Quantity_:\n\n    >>> class Length(Quantity):\n    ...     pass\n    ...\n\nBut, as long as there is no unit defined for that class, you can not create\nany instance for the new quantity class:\n\n    >>> l = Length(1)\n    Traceback (most recent call last):\n    ValueError: A unit must be given.\n\nIf there is a reference unit, the simplest way to define it is giving a name\nand a symbol for it as keywords. The meta-class of _Quantity_ will\nthen create a unit automatically:\n\n    >>> class Mass(Quantity,\n    ...            ref_unit_name='Kilogram',\n    ...            ref_unit_symbol='kg'):\n    ...     pass\n    ...\n    >>> Mass.ref_unit\n    Unit('kg')\n    >>> class Length(Quantity,\n    ...              ref_unit_name='Metre',\n    ...              ref_unit_symbol='m'):\n    ...     pass\n    ...\n    >>> Length.ref_unit\n    Unit('m')\n\nNow, this unit can be given to create a quantity:\n\n    >>> METRE = Length.ref_unit\n    >>> print(Length(15, METRE))\n    15 m\n\nIf no unit is given, the reference unit is used:\n\n    >>> print(Length(15))\n    15 m\n\nOther units can be derived from the reference unit (or another unit), giving\na definition by multiplying a scaling factor with that unit:\n\n    >>> a_thousandth = Decimal(\"0.001\")\n    >>> KILOGRAM = Mass.ref_unit\n    >>> GRAM = Mass.new_unit('g', 'Gram', a_thousandth * KILOGRAM)\n    >>> MILLIMETRE = Length.new_unit('mm', 'Millimetre', a_thousandth * METRE)\n    >>> MILLIMETRE\n    Unit('mm')\n    >>> KILOMETRE = Length.new_unit('km', 'Kilometre', 1000 * METRE)\n    >>> KILOMETRE\n    Unit('km')\n    >>> CENTIMETRE = Length.new_unit('cm', 'Centimetre', 10 * MILLIMETRE)\n    >>> CENTIMETRE\n    Unit('cm')\n\nInstead of a number a SI prefix can be used as scaling factor. SI prefixes are\nprovided in a sub-module:\n\n    >>> from quantity.si_prefixes import *\n    >>> NANO.abbr, NANO.name, NANO.factor\n    ('n', 'Nano', Decimal('0.000000001'))\n\n    >>> NANOMETRE = Length.new_unit('nm', 'Nanometre', NANO * METRE)\n    >>> NANOMETRE\n    Unit('nm')\n\nUsing one unit as a reference and defining all other units by giving a\nscaling factor is only possible if the units have the same scale. Otherwise,\nunits can just be instantiated without giving a definition:\n\n    >>> class Temperature(Quantity):\n    ...     pass\n    ...\n    >>> CELSIUS = Temperature.new_unit('°C', 'Degree Celsius')\n    >>> FAHRENHEIT = Temperature.new_unit('°F', 'Degree Fahrenheit')\n    >>> KELVIN = Temperature.new_unit('K', 'Kelvin')\n\n**Derived** types of quantities are declared by giving a definition based on\nmore basic types of quantities:\n\n    >>> class Volume(Quantity,\n    ...              define_as=Length ** 3,\n    ...              ref_unit_name='Cubic Metre'):\n    ...     pass\n    ...\n    >>> class Duration(Quantity,\n    ...                ref_unit_name='Second',\n    ...                ref_unit_symbol='s'):\n    ...     pass\n    ...\n    >>> class Velocity(Quantity,\n    ...                define_as=Length / Duration,\n    ...                ref_unit_name='Metre per Second'):\n    ...     pass\n    ...\n\nIf no symbol for the reference unit is given with the class declaration, a\nsymbol is generated from the definition, as long as all types of quantities\nin that definition have a reference unit.\n\n    >>> Volume.ref_unit.symbol\n    'm³'\n    >>> Velocity.ref_unit.symbol\n    'm/s'\n\nOther units have to be defined explicitly. This can be done either as shown\nabove or by deriving them from units of the base quantities:\n\n    >>> CUBIC_CENTIMETRE = Volume.derive_unit_from(CENTIMETRE,\n    ...                                            name='Cubic Centimetre')\n    >>> CUBIC_CENTIMETRE\n    Unit('cm³')\n    >>> HOUR = Duration.new_unit('h', 'Hour', 3600 * Duration.ref_unit)\n    >>> KILOMETRE_PER_HOUR = Velocity.derive_unit_from(KILOMETRE, HOUR)\n    >>> KILOMETRE_PER_HOUR\n    Unit('km/h')\n\n### Instantiating quantities\n\nThe simplest way to create an instance of a class _Quantity_ subclass is to\ncall the class giving an amount and a unit. If the unit is omitted, the\nquantity's reference unit is used (if one is defined):\n\n    >>> Length(15, MILLIMETRE)\n    Length(Decimal(15), Unit('mm'))\n\nAlternatively, an amount and a unit can be multiplied:\n\n    >>> 17.5 * KILOMETRE\n    Length(Decimal('17.5'), Unit('km'))\n\nAlso, it's possible to create a _Quantity_ sub-class instance from a string\nrepresentation:\n\n    >>> Length('17.5 km')\n    Length(Decimal('17.5'), Unit('km'))\n\n### Unit-safe computations\n\nA quantity can be converted to a quantity using a different unit by calling\nthe method _Quantity.convert_:\n\n    >>> l5cm = Length(Decimal(5), CENTIMETRE)\n    >>> l5cm.convert(MILLIMETRE)\n    Length(Decimal(50), Unit('mm'))\n    >>> l5cm.convert(KILOMETRE)\n    Length(Decimal('0.00005'), Unit('km'))\n\nQuantities can be compared to other quantities using all comparison operators\ndefined for numbers. Different units are taken into account automatically, as\nlong as they are compatible, i.e. a conversion is available:\n\n    >>> Length(27) <= Length(91)\n    True\n    >>> Length(27, METRE) <= Length(91, CENTIMETRE)\n    False\n\nQuantities can be added to or subtracted from other quantities …:\n\n    >>> Length(27) + Length(9)\n    Length(Decimal(36))\n    >>> Length(27) - Length(91)\n    Length(Decimal(-64))\n    >>> Length(27) + Length(12, CENTIMETER)\n    Length(Decimal('27.12'))\n    >>> Length(12, CENTIMETER) + Length(17, METER)\n    Length(Decimal('1712'), Length.Unit('cm'))\n\n… as long as they are instances of the same quantity type:\n\n    >>> Length(27) + Duration(9)\n    Traceback (most recent call last):\n    IncompatibleUnitsError: Can't add a 'Length' and a 'Duration'\n\nQuantities can be multiplied or divided by scalars, preserving the unit:\n\n    >>> 7.5 * Length(3, CENTIMETRE)\n    Length(Decimal('22.5'), Unit('cm'))\n    >>> Duration(66, MINUTE) / 11\n    Duration(Decimal(6), Unit('min'))\n\nQuantities can be multiplied or divided by other quantities …:\n\n    >>> Length(15, METRE) / Duration(3, SECOND)\n    Velocity(Decimal(5))\n\n… as long as the resulting type of quantity is defined …:\n\n    >>> Duration(4, SECOND) * Length(7)\n    Traceback (most recent call last):\n    UndefinedResultError: Undefined result: Duration * Length\n\n… or the result is a scalar:\n\n    >>> Duration(2, MINUTE) / Duration(50, SECOND)\n    Decimal('2.4')\n\n### Money\n\n_Money_ is a special type of quantity. Its unit type is known as currency.\n\nMoney differs from physical quantities mainly in two aspects:\n\n* Money amounts are discrete. For each currency there is a smallest fraction\n  that can not be split further.\n\n* The relation between different currencies is not fixed, instead, it varies\n  over time.\n\nThe sub-package _quantity.money_ provides classes and functions to deal\nwith these specifics.\n\nA currency must explicitly be registered as a unit for further use. The\neasiest way to do this is to call _Money.register_currency_. The method\nis backed by a database of currencies defined in ISO 4217. It takes the \n3-character ISO 4217 code as parameter.\n\n_Money_ derives from _Quantity_, so all operations on quantities can also be\napplied to instances of _Money_. But because there is no fixed relation\nbetween currencies, there is no implicit conversion between money amounts of\ndifferent currencies. Resulting values are always quantized to the smallest\nfraction defined with the currency.\n\nA conversion factor between two currencies can be defined by using the\nclass _ExchangeRate_. It is given a unit currency (aka base currency), a unit\nmultiple, a term currency (aka price currency) and a term amount, i.e. the\namount in term currency equivalent to unit multiple in unit currency.\n\nMultiplying an amount in some currency with an exchange rate with the same\ncurrency as unit currency results in the equivalent amount in term currency.\nLikewise, dividing an amount in some currency with an exchange rate with the\nsame currency as term currency results in the equivalent amount in unit\ncurrency.\n\nAs _Money_ derives from _Quantity_, it can be combined with other quantities\nin order to define a new quantity. This is, for example, useful for defining\nprices per quantum.\n\nFor more details see the documentation provided with the source distribution\nor [here](https://quantity.readthedocs.io/).\n",
    "description_content_type": "text/markdown",
    "docs_url": "https://pythonhosted.org/quantity/",
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mamrhein/quantity",
    "keywords": "quantity quantities unit units money currency exchange",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quantity",
    "package_url": "https://pypi.org/project/quantity/",
    "platform": "all",
    "project_url": "https://pypi.org/project/quantity/",
    "project_urls": {
      "Homepage": "https://github.com/mamrhein/quantity"
    },
    "release_url": "https://pypi.org/project/quantity/0.11.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Unit-safe computations with quantities (including money)",
    "version": "0.11.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16503196,
  "releases": {
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c222665a024fdac29a64c28f7d190cc9c5caaaa88d704b8003cf594d5568402",
          "md5": "6928ffb7a0e7888ee0bb5e350bce4dde",
          "sha256": "a8a66d3f07e195a01d02a0dc3474e96f0fb869da8f1c9cc892cc56832f59af25"
        },
        "downloads": -1,
        "filename": "quantity-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6928ffb7a0e7888ee0bb5e350bce4dde",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69954,
        "upload_time": "2020-12-15T15:23:30",
        "upload_time_iso_8601": "2020-12-15T15:23:30.971440Z",
        "url": "https://files.pythonhosted.org/packages/0c/22/2665a024fdac29a64c28f7d190cc9c5caaaa88d704b8003cf594d5568402/quantity-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9f9a415adbcd9879d2ca4ce1ae1255ef2545bce8509bb712aa368e7a32ce479",
          "md5": "0c9a4847c1b78155cb76e195e9dd225b",
          "sha256": "24695f542c0df66a7806ae3a65ff56bdc1cfd638088354386e3f0efb5914d7b9"
        },
        "downloads": -1,
        "filename": "quantity-0.10.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c9a4847c1b78155cb76e195e9dd225b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 50187,
        "upload_time": "2020-12-15T19:50:33",
        "upload_time_iso_8601": "2020-12-15T19:50:33.724093Z",
        "url": "https://files.pythonhosted.org/packages/b9/f9/a415adbcd9879d2ca4ce1ae1255ef2545bce8509bb712aa368e7a32ce479/quantity-0.10.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a850172192da80f3cb757fbe435dabb30d3665bd4970c2b48ca9fe59863a5e07",
          "md5": "c1f01438d72b15f7ac66f376fcbbcc01",
          "sha256": "e4a9c25013ca4d3d292ec4a3153b37250c928cc39c132979dc54036a0fb06b33"
        },
        "downloads": -1,
        "filename": "quantity-0.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c1f01438d72b15f7ac66f376fcbbcc01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 65654,
        "upload_time": "2020-12-15T19:50:21",
        "upload_time_iso_8601": "2020-12-15T19:50:21.086704Z",
        "url": "https://files.pythonhosted.org/packages/a8/50/172192da80f3cb757fbe435dabb30d3665bd4970c2b48ca9fe59863a5e07/quantity-0.10.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57d92864bcd8e634c4a6a4144fd4cd7ad5bf547ecc05ea88b8f11ba3cc6b6231",
          "md5": "0b21e252c0815039fad2612418e863d7",
          "sha256": "626d33aeb1da1c914fe651309bc0cd4912f2fb02fe9b86c016c6f49d958461c7"
        },
        "downloads": -1,
        "filename": "quantity-0.11.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0b21e252c0815039fad2612418e863d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 79870,
        "upload_time": "2021-07-03T21:03:01",
        "upload_time_iso_8601": "2021-07-03T21:03:01.091227Z",
        "url": "https://files.pythonhosted.org/packages/57/d9/2864bcd8e634c4a6a4144fd4cd7ad5bf547ecc05ea88b8f11ba3cc6b6231/quantity-0.11.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ca53f3a7b4ac5e4ffd68168f14704d28a592a071fc3cacb2fc4185ea1d0f722",
          "md5": "6bf3922c88df5fc35ff3d036a9d0d0ba",
          "sha256": "401e2b204cecb91988f84a4a8a5670b27118c411d51c354f1a35e58728b53d4e"
        },
        "downloads": -1,
        "filename": "quantity-0.11.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6bf3922c88df5fc35ff3d036a9d0d0ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 79911,
        "upload_time": "2021-07-04T15:59:05",
        "upload_time_iso_8601": "2021-07-04T15:59:05.322529Z",
        "url": "https://files.pythonhosted.org/packages/0c/a5/3f3a7b4ac5e4ffd68168f14704d28a592a071fc3cacb2fc4185ea1d0f722/quantity-0.11.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48c2da759fdc0d063b1aecc922665af9d921e2493c35dabbd927009f81122fe0",
          "md5": "419b18409a323c65b3d88bca275ff368",
          "sha256": "7f248d9af73c249c77bfca828d0b5fedbf976aff67acfb2c86b97c376a9a9cba"
        },
        "downloads": -1,
        "filename": "quantity-0.11.3.tar.gz",
        "has_sig": false,
        "md5_digest": "419b18409a323c65b3d88bca275ff368",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 80227,
        "upload_time": "2022-05-16T15:45:01",
        "upload_time_iso_8601": "2022-05-16T15:45:01.813668Z",
        "url": "https://files.pythonhosted.org/packages/48/c2/da759fdc0d063b1aecc922665af9d921e2493c35dabbd927009f81122fe0/quantity-0.11.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e04314e1c315ed491c237c30fcebee466b2a3a4a0d86a4d4caf8f6935429dd5",
          "md5": "fb43fb10f5e0d425b6a416bc3b7e9458",
          "sha256": "2d3273d5ac4845b369c8e063ee3c3a11c4ec1491e902e5b6ba78bb56570f57e0"
        },
        "downloads": -1,
        "filename": "quantity-0.11.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fb43fb10f5e0d425b6a416bc3b7e9458",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 79941,
        "upload_time": "2023-01-20T16:25:27",
        "upload_time_iso_8601": "2023-01-20T16:25:27.794562Z",
        "url": "https://files.pythonhosted.org/packages/3e/04/314e1c315ed491c237c30fcebee466b2a3a4a0d86a4d4caf8f6935429dd5/quantity-0.11.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9b6390e3d99b9feb86cbafe54721ff4c0ccc6860f23941093cf4e44d62f930a",
          "md5": "146b8c39d097a9c8ef2c1cb8a361fbda",
          "sha256": "5e5d82178405d54cae619d96ac9d60b2ac7ac823cb80dfaf00645ededd5436fe"
        },
        "downloads": -1,
        "filename": "quantity-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "146b8c39d097a9c8ef2c1cb8a361fbda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 324004,
        "upload_time": "2015-01-12T18:24:51",
        "upload_time_iso_8601": "2015-01-12T18:24:51.141705Z",
        "url": "https://files.pythonhosted.org/packages/e9/b6/390e3d99b9feb86cbafe54721ff4c0ccc6860f23941093cf4e44d62f930a/quantity-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0a866847603142610ce1d5ba3cf48c197fed4cc9df64a512ca33c043b7ed907",
          "md5": "dcb0882a75b2e0322093b4afce36d2d4",
          "sha256": "da6ae5411d3879c1ae8fa53cb0d7e5e85cb794475e9cb6b373be2343f0a316a5"
        },
        "downloads": -1,
        "filename": "quantity-0.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dcb0882a75b2e0322093b4afce36d2d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 428371,
        "upload_time": "2015-04-03T22:21:57",
        "upload_time_iso_8601": "2015-04-03T22:21:57.102168Z",
        "url": "https://files.pythonhosted.org/packages/f0/a8/66847603142610ce1d5ba3cf48c197fed4cc9df64a512ca33c043b7ed907/quantity-0.7.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34af037be2367e757c7812e3de4e84d49083eced4dc62d719bc65e7955139cce",
          "md5": "b488132a9046cb902c642c8f65858fce",
          "sha256": "4025d0d24170ce26c8a0e9f33f8ec16deb8ab359192deadb024bbebaaad7985d"
        },
        "downloads": -1,
        "filename": "quantity-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "b488132a9046cb902c642c8f65858fce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 468204,
        "upload_time": "2015-06-14T13:59:01",
        "upload_time_iso_8601": "2015-06-14T13:59:01.410072Z",
        "url": "https://files.pythonhosted.org/packages/34/af/037be2367e757c7812e3de4e84d49083eced4dc62d719bc65e7955139cce/quantity-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "453b39ed8cf2673c94ed92a50add8e8917e5cf692c76bc614505ab5c95cfecde",
          "md5": "e19eda2963d9b84d2181b4b072a31fc9",
          "sha256": "62eba09eaf5cc61448f9575b7d6a953c32e9634025a86060754cc588ae9b78c4"
        },
        "downloads": -1,
        "filename": "quantity-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "e19eda2963d9b84d2181b4b072a31fc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 288219,
        "upload_time": "2015-12-14T21:40:32",
        "upload_time_iso_8601": "2015-12-14T21:40:32.762197Z",
        "url": "https://files.pythonhosted.org/packages/45/3b/39ed8cf2673c94ed92a50add8e8917e5cf692c76bc614505ab5c95cfecde/quantity-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e04314e1c315ed491c237c30fcebee466b2a3a4a0d86a4d4caf8f6935429dd5",
        "md5": "fb43fb10f5e0d425b6a416bc3b7e9458",
        "sha256": "2d3273d5ac4845b369c8e063ee3c3a11c4ec1491e902e5b6ba78bb56570f57e0"
      },
      "downloads": -1,
      "filename": "quantity-0.11.4.tar.gz",
      "has_sig": false,
      "md5_digest": "fb43fb10f5e0d425b6a416bc3b7e9458",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 79941,
      "upload_time": "2023-01-20T16:25:27",
      "upload_time_iso_8601": "2023-01-20T16:25:27.794562Z",
      "url": "https://files.pythonhosted.org/packages/3e/04/314e1c315ed491c237c30fcebee466b2a3a4a0d86a4d4caf8f6935429dd5/quantity-0.11.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}