{
  "info": {
    "author": "Sanskar Mani",
    "author_email": "mani.1@iitj.ac.in",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Generic Constraint Satisfaction Problem Solver\n\nCSP Solver is a library designed to provide the functionalities to solve contstraint satisfactions problems without the need of going through the hassle of writing the code to do so. As of now, it supports a variety of methods including but not restricted to Hill Climbing with greedy biasing, Arc Consistent backtracking etc. \n\n## Supported Methods!\n> Depth first serch  \n> solve_dfs(self: CSP, timeout: int)\n\n> Backtracking  \n> solve_BackTrack(self: CSP, timeout: int)\n\n> Forward Checking  \n> solve_ForwardChecking(self: CSP, timeout: int)\n\n> Forward Checking with MRV ordering  \n> solve_ForwardChecking_MRV(self: CSP, timeout: int)\n\n> Forward checking with MRV & LCV ordering  \n> solve_ForwardChecking_MRV_LCV(self:CSP, timeout:int)\n\n> Classical Hill Climbing (Taking best available option)  \n> solve_HillClimbing_chooseBest(self:CSP, memoization:bool, iterations:int, allowedSideMoves:int, tabuSize:int, timeout:int)\n\n> Hill Climbing with random choice biased towards better choices  \n> solve_HillClimbing_greedyBias(self:CSP, memoization:bool, iterations:int, allowedSideMoves:int, tabuSize:int, timeout:int)\n\n> Hill Climbing with random choice  \n> solve_HillClimbing_chooseRandom(self:CSP, memoization:bool, iterations:int, allowedSideMoves:int, tabuSize:int, timeout:int)\n\n> Genetic Algorithm  \n> solve_GeneticAlgo(self:CSP, populationSize:int, generations:int, timeout:int)\n\n> Local beam search  \n> solve_local_beam_search(self:CSP, beams:int, timeout:int)\n\n> Simulated Annealing  \n> solve_Simulated_Annealing(self:CSP, iterations:int, initialTemperature:int, cooling_coefficient:int, timeout:int)\n\n> Arc consistent Backtracking  \n> solve_ArcConsistent_BackTracking(self: CSP, timeout: int)\n\n> Novel Approach  \n> solve_novelAlgorithm(self, split:int, allowedSideMoves:int, tabuSize:int, tries:int, timeout:int)\n\n> Run all methods on default parameters  \n> testAllDefaultParams(self: CSP, timeout:int)\n\n### Example\n* *Initializing the class*\n```python\nimport CSP_Solver as CS\ntask = CS.CSP(variables=..., solution_path=..., problem_name=...)\n```\n* *Adding constraints specifying domains*\n```python\n'''\nMake sure that your constraint is python friendly\n'''\ntask.addConstraint('value[1] != value[2]') # Example constraint\n# You may use this if the domain is common for all variables\ntask.commonDomain(domain=[1,2,5,4]) \n# You may want to add constraints sperately\ntask.seperateDomain(variable=1,domain=[1,2]) \n# You may want to set value of some variable\ntask.setValue(variable=1, value=2)\ntask.testAllDefaultParams(timeout=10)\n```\n### Reports\n* [Report](https://drive.google.com/file/d/1MkcQGpeX8d3Qng5sB2CW_B0oS5HVSeKy/view?usp=sharing)\n* [Presentation](https://drive.google.com/file/d/1gMElklxYo2P_uIFUzBrgsuGk1OvaAOQR/view?usp=sharing)\n\n### Installation\nInstall package from Pypi\n```bash\n$ pip install CSP-Solver\n```\n\nTo test examples\n\n```bash\n$ git clone https://github.com/LezendarySandwich/Generic-CSP-Solver.git\n$ cd Generic-CSP-Solver/Examples\n$ python3 [Example]\n```\nLicense\n----\n\nMIT\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LezendarySandwich/Generic-CSP-Solver",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CSP-Solver",
    "package_url": "https://pypi.org/project/CSP-Solver/",
    "platform": "",
    "project_url": "https://pypi.org/project/CSP-Solver/",
    "project_urls": {
      "Homepage": "https://github.com/LezendarySandwich/Generic-CSP-Solver"
    },
    "release_url": "https://pypi.org/project/CSP-Solver/0.1.2/",
    "requires_dist": [
      "numpy",
      "sortedcontainers"
    ],
    "requires_python": ">=3.0.0",
    "summary": "Library to solve Constraint satisfation problems",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9108308,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "738c3efadb7685f659300e9213875b6d80aef44d8dc2276a2e1ca936ba8a23e3",
          "md5": "58f412895d9c3849b4d4dce3859316fa",
          "sha256": "eab19228df88ae4bd30c71d8f51b29e00c2b773910aa014a478b6f052a629f13"
        },
        "downloads": -1,
        "filename": "CSP_Solver-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58f412895d9c3849b4d4dce3859316fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0.0",
        "size": 19137,
        "upload_time": "2021-01-11T18:34:28",
        "upload_time_iso_8601": "2021-01-11T18:34:28.873946Z",
        "url": "https://files.pythonhosted.org/packages/73/8c/3efadb7685f659300e9213875b6d80aef44d8dc2276a2e1ca936ba8a23e3/CSP_Solver-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca55892ba2e8cba10bdccc43f561c5358aa9d8faa9830a6dbe427b15b133c022",
          "md5": "293307961c6278981a027436238c217a",
          "sha256": "a77c3502b4a72c4dde4d5c99a670c42b100d0c59402d2cac5c0b8e61f3108177"
        },
        "downloads": -1,
        "filename": "CSP_Solver-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "293307961c6278981a027436238c217a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0.0",
        "size": 20304,
        "upload_time": "2021-01-11T20:18:31",
        "upload_time_iso_8601": "2021-01-11T20:18:31.015579Z",
        "url": "https://files.pythonhosted.org/packages/ca/55/892ba2e8cba10bdccc43f561c5358aa9d8faa9830a6dbe427b15b133c022/CSP_Solver-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50fe68f8cb84d023d98273920071acebed3cfbe05a74e463ce890bb2dfdd928c",
          "md5": "bd125645494f17352d69e5f6b116bf41",
          "sha256": "00b0689815f25da7fa075305985cd5061fb89579cd03211238872b867ec22bb9"
        },
        "downloads": -1,
        "filename": "CSP_Solver-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd125645494f17352d69e5f6b116bf41",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0.0",
        "size": 20305,
        "upload_time": "2021-01-11T20:47:23",
        "upload_time_iso_8601": "2021-01-11T20:47:23.949377Z",
        "url": "https://files.pythonhosted.org/packages/50/fe/68f8cb84d023d98273920071acebed3cfbe05a74e463ce890bb2dfdd928c/CSP_Solver-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "50fe68f8cb84d023d98273920071acebed3cfbe05a74e463ce890bb2dfdd928c",
        "md5": "bd125645494f17352d69e5f6b116bf41",
        "sha256": "00b0689815f25da7fa075305985cd5061fb89579cd03211238872b867ec22bb9"
      },
      "downloads": -1,
      "filename": "CSP_Solver-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bd125645494f17352d69e5f6b116bf41",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0.0",
      "size": 20305,
      "upload_time": "2021-01-11T20:47:23",
      "upload_time_iso_8601": "2021-01-11T20:47:23.949377Z",
      "url": "https://files.pythonhosted.org/packages/50/fe/68f8cb84d023d98273920071acebed3cfbe05a74e463ce890bb2dfdd928c/CSP_Solver-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}