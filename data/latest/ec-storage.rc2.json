{
  "info": {
    "author": "CAIWEI",
    "author_email": "caiwei-email@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# EC\n[EC存储（ec-storage）](https://pypi.org/project/ec-storage/)\n\n## file\n\n> 源码文件目录（src/ecstorage）：\n>\n> - __init\\_\\_.py                        \n> - mathematics                 数学函数\n>      - __init\\_\\_.py\t\t\t\t\n>      - galois.py              伽罗华域运算\n>      - generator_matrix.py    生成矩阵 \n>      - matrix_optimization.py   矩阵优化\n> - list.py           list格式计算\n> - rdd.py          rdd格式计算\n> - dataframe.py   dataframe格式计算（开发中）\n\n## install\n\n```shell\npip install ec-storage\n```\n\n\n\n## manual\n\n### 导入模块\n\n<kbd>ec-storage</kbd>提供了适合三种数据格式的计算方式，分别为`list`、`rdd`、`dataframe`（开发中），根据需要选择其中一种即可\n\n```python\nimport ecstorage.list as ec\nimport ecstorage.rdd as ec\nimport ecstorage.dataframe as ec\n```\n\n> 为了方便后续的书写，建议将导入ec-storage的list或rdd或dataframe命名为ec，如上述代码块所示\n\n### 生成校验块\n\n```python\ncheck_block = ec.reedsolomon(sc,data,m,generator_matrix)\n```\n\n> \u0011这个ec需要与上面选择的接口一致（选择<kbd>list</kbd>接口则可以去掉sc这个参数）\n\n### 恢复数据\n\n```python\nrecover_data = ec.verify(data,check_block)\n```\n\n> recover_data 与 data 相同\n\n### demo\n\n#### list格式\n\n```python\n# 本地文件夹测试导入\n# import sys\n# sys.path.append(\"/Users/caiwei/Documents/code/EC-dev/src\")\n\n# 导入模块\nimport ecstorage.list as ec\nimport numpy as np\n\nm = 3                       #选择校验块个数\ngenerator_matrix = 'vander' #生成矩阵选择范德蒙德矩阵\n\ndata = [1, 0, 0, 8, 6]\t\t\t#list格式数据\nk = len(data)\n\ncheck_block = ec.reedsolomon(data,m,generator_matrix)\t#生成校验块(list格式)\n\n# 测试（数据缺失个数+校验块缺失个数 <= m）\ndata[0] = None          # 缺失数据\ndata[1] = None\ncheck_block[1] = None\t\t#校验块也可以缺失\nprint(data)\n\n# 恢复数据\nrecover_data = ec.verify(data,check_block,generator_matrix)\t#恢复数据(list格式)\nprint(recover_data)\t\t#[1, 0, 0, 8, 6]\n```\n\n#### RDD格式\n\n```python\n# #本地文件夹测试导入\n# import sys\n# sys.path.append(\"/Users/caiwei/Documents/code/EC-dev/src\")\n\n# #统一python版本(有多个python版本的情况下)\n# import os\n# os.environ[\"PYSPARK_PYTHON\"]=\"/Users/caiwei/opt/anaconda3/bin/python\"\n# os.environ[\"PYSPARK_DRIVER_PYTHON\"]=\"/Users/caiwei/opt/anaconda3/bin/python\"\n\n# 导入必要的模块\nimport ecstorage.rdd as ec\nfrom pyspark import SparkContext\nfrom pyspark.mllib.linalg.distributed import *\nfrom pyspark.sql import SparkSession\nfrom ecstorage.mathematics.matrix_optimization import sparse\nimport numpy as np\n\nm = 3                       #校验块个数\ngenerator_matrix = 'vander' #生成矩阵选择范德蒙德矩阵\n\n# 创建spark session\nsc = SparkContext()\nspark = SparkSession(sc)\n\n# 数据\ndata = np.arange(1,6,1)\ndata = sc.parallelize(data)\t#数据转为rdd格式\n\n# 生成校验块\ncheck_block = ec.reedsolomon(sc,data,m,generator_matrix)\n\n# 测试（数据缺失个数+校验块缺失个数 <= m）\ndata = list(np.arange(1,6,1))\ndata[0] = None          # 缺失数据（缺失个数小于等于m）\ndata[1] = None\n# data[2] = None\n\n\n# 也可以是校验块有缺失数据\ncheck_block = check_block.collect()\ncheck_block[0] = None\ncheck_block = sc.parallelize(check_block)\n\n# 恢复数据\nrecover_data = ec.verify(sc,data,check_block,generator_matrix)  \nprint(recover_data.collect())\n\n```\n\n#### dataframe格式\n\n```python\n\n# 文件夹测试导入\nimport sys\nsys.path.append(\"/Users/caiwei/Documents/code/EC-dev/src\")\n\n# 导入模块\nimport ecstorage.dataframe as ec\nfrom pyspark import SparkContext\nfrom pyspark.mllib.linalg.distributed import *\nfrom pyspark.sql import SparkSession\nfrom ecstorage.mathematics.matrix_optimization import sparse\nimport numpy as np\nimport os\nos.environ[\"PYSPARK_PYTHON\"]=\"/Users/caiwei/opt/anaconda3/bin/python\"\nos.environ[\"PYSPARK_DRIVER_PYTHON\"]=\"/Users/caiwei/opt/anaconda3/bin/python\"\n\nfrom pyspark.sql import SQLContext\nm = 3                       #生成校验块个数\ngenerator_matrix = 'vander' #生成矩阵选择范德蒙德矩阵\n\nsc = SparkContext()\nsqlContext = SQLContext(sc)\n\ndicts = [\n        {'col1':'a', 'col2':1},\n        {'col1':'b', 'col2':2},\n        {'col1':'b', 'col2':3},\n        {'col1':'b', 'col2':4},\n        {'col1':'b', 'col2':5},\n         ]\ndf = sqlContext.createDataFrame(dicts)\ndata = df.select('col2')\n# data.show()\n\ncheck_block = ec.reedsolomon(sc,data,m)\ncheck_block.show()\n\n\n# 测试\ndicts = [\n        {'col1':'a', 'col2':None},\n        {'col1':'b', 'col2':None},\n        {'col1':'b', 'col2':3},\n        {'col1':'b', 'col2':4},\n        {'col1':'b', 'col2':5},\n         ]\n# # data[2] = None\n# check_block = check_block.collect()\n# check_block[0] = None\n# check_block = sc.parallelize(check_block)\ndata = sqlContext.createDataFrame(dicts)\ndata = data.select('col2')\ndata.show()\n# 恢复数据\nrecover_data = ec.verify(sc,data,check_block,generator_matrix)  \nrecover_data.show()\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ChoiNgai/EC",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ec-storage",
    "package_url": "https://pypi.org/project/ec-storage/",
    "platform": "",
    "project_url": "https://pypi.org/project/ec-storage/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ChoiNgai/EC/issues",
      "Homepage": "https://github.com/ChoiNgai/EC"
    },
    "release_url": "https://pypi.org/project/ec-storage/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "ec-storage,it is used to replace the three copy storage strategy of HDFS, so as to save storage space",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13005726,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93751784c93a5d59e5cffd8346d2fe860bd68cde6b42021ab7fd8aada80b306c",
          "md5": "a279db6cd549ae019061cca586593584",
          "sha256": "4f2912d7252d50b701a2aba40494d8288edfa367ada9bb1ead2570ee762997d2"
        },
        "downloads": -1,
        "filename": "ec_storage-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a279db6cd549ae019061cca586593584",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5457,
        "upload_time": "2022-02-11T22:48:51",
        "upload_time_iso_8601": "2022-02-11T22:48:51.638788Z",
        "url": "https://files.pythonhosted.org/packages/93/75/1784c93a5d59e5cffd8346d2fe860bd68cde6b42021ab7fd8aada80b306c/ec_storage-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5843ae81b993f8eccfc4850d95bedeec1d9b5548f52be92a9a9cf3212baf0cb",
          "md5": "76d28f2f98fdd99096820afcd6c79799",
          "sha256": "bd4133acc4d57a8441f40a59f65270959f9e42b4e9f3a1bb671fce11eec25ce1"
        },
        "downloads": -1,
        "filename": "ec-storage-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "76d28f2f98fdd99096820afcd6c79799",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4872,
        "upload_time": "2022-02-11T22:48:53",
        "upload_time_iso_8601": "2022-02-11T22:48:53.085437Z",
        "url": "https://files.pythonhosted.org/packages/e5/84/3ae81b993f8eccfc4850d95bedeec1d9b5548f52be92a9a9cf3212baf0cb/ec-storage-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a91fd27d04b996bab13ead5c2d476a040c91f3ab7a70216d4d88b57a0c6577d7",
          "md5": "706c08d1fdbc3d0ad7a4d842c96fc062",
          "sha256": "80e4ba245006af56d3d58de16dc27250d68c75f4df5836750439a10b3cbbcbae"
        },
        "downloads": -1,
        "filename": "ec_storage-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "706c08d1fdbc3d0ad7a4d842c96fc062",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10483,
        "upload_time": "2022-02-25T03:10:59",
        "upload_time_iso_8601": "2022-02-25T03:10:59.037881Z",
        "url": "https://files.pythonhosted.org/packages/a9/1f/d27d04b996bab13ead5c2d476a040c91f3ab7a70216d4d88b57a0c6577d7/ec_storage-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecddc0eca90414ff556754994117d129ff3273df9a96d85cbe6a7aca7f9e56bf",
          "md5": "5f1446e88703187e0302644ed11cdcb3",
          "sha256": "63d5f5246697089faf1f6f775ee44d13a98cb639dea2ba568eed5463ae0b00ab"
        },
        "downloads": -1,
        "filename": "ec-storage-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5f1446e88703187e0302644ed11cdcb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8165,
        "upload_time": "2022-02-25T03:11:01",
        "upload_time_iso_8601": "2022-02-25T03:11:01.497384Z",
        "url": "https://files.pythonhosted.org/packages/ec/dd/c0eca90414ff556754994117d129ff3273df9a96d85cbe6a7aca7f9e56bf/ec-storage-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a91fd27d04b996bab13ead5c2d476a040c91f3ab7a70216d4d88b57a0c6577d7",
        "md5": "706c08d1fdbc3d0ad7a4d842c96fc062",
        "sha256": "80e4ba245006af56d3d58de16dc27250d68c75f4df5836750439a10b3cbbcbae"
      },
      "downloads": -1,
      "filename": "ec_storage-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "706c08d1fdbc3d0ad7a4d842c96fc062",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10483,
      "upload_time": "2022-02-25T03:10:59",
      "upload_time_iso_8601": "2022-02-25T03:10:59.037881Z",
      "url": "https://files.pythonhosted.org/packages/a9/1f/d27d04b996bab13ead5c2d476a040c91f3ab7a70216d4d88b57a0c6577d7/ec_storage-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ecddc0eca90414ff556754994117d129ff3273df9a96d85cbe6a7aca7f9e56bf",
        "md5": "5f1446e88703187e0302644ed11cdcb3",
        "sha256": "63d5f5246697089faf1f6f775ee44d13a98cb639dea2ba568eed5463ae0b00ab"
      },
      "downloads": -1,
      "filename": "ec-storage-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5f1446e88703187e0302644ed11cdcb3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8165,
      "upload_time": "2022-02-25T03:11:01",
      "upload_time_iso_8601": "2022-02-25T03:11:01.497384Z",
      "url": "https://files.pythonhosted.org/packages/ec/dd/c0eca90414ff556754994117d129ff3273df9a96d85cbe6a7aca7f9e56bf/ec-storage-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}