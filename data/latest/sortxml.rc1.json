{
  "info": {
    "author": "Chris Koch",
    "author_email": "kopachris@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing :: Markup :: XML",
      "Topic :: Utilities"
    ],
    "description": "# sortxml - a simple XML element sorter\n\nThis module can be used by importing `sortxml.sort_xml` or by running standalone from the command-line.\n\n## Using `sort_xml()`:\n\nReturns an ElementTree representing the resulting whole document. ElementTree can easily be converted to string or written to a file like so:\n    \n```python\n    >>> foo_str = ET.tostring(sort_xml(xml_doc, node_path, sort_attr).getroot())\n        # Or...\n    >>> sort_xml(xml_doc, node_path, sort_attr).write('foo.xml')\n```\n\n### Required arguments:\n* `xml_doc` -- a text IO stream (such as an open file object), Path object pointing to an XML\n  file, string representing the file path, or string containing the file contents of a valid XML file. Can't take\n  an ElementTree instance because we need to use our own parser to keep track of namespaces.\n* `node_path` -- a string containing the path to the node you want to sort the children of in the XPath language\n  of the etree module\n* `sort_attr` -- the attribute of the child elements to use as the sort key\n\n### Optional arguments:\n* `use_text` -- use `sort_attr` as the name of a subelement of the path's children whose text will be the\n  sort key (default: False)\n* `sort_as_datetime` -- try to parse the values of the sort key as a datetime using the `dateutil` module and sort\n  chronologically (default: False, mutually exclusive with `sort_as_decimal`)\n* `sort_as_decimal` -- try to parse the values of the sort key as a decimal and sort numerically (useful to keep\n  '10' from showing up right after '1') (default: False, mutually exclusive with `sort_as_datetime`)\n* `descending` -- sort in descending order instead of ascending (default: False)\n\n## Usage on the command line:\n\nRun `python -m sortxml -h` to display this help text.\n\nUsage: sortxml [-h] [-v] [-r] [-t] [--datetime | --decimal] [-o OUTPUT_FILE] input_file sort_xpath sort_attr\n\nA simple XML element sorter.  Will sort the children of selected elements using a given attribute's value or subelement's text as the sort key.  \nExample usage:\n\n        $ python sortxml.py ARForm_orig.rdl \"./DataSets/DataSet[@Name='ARForm']/Fields\" Name -o ARForm.rdl\n\n### Positional arguments:\n* _**input_file**_ – File path to the source xml file.\n* _**sort_xpath**_ – XPath-style selector for elements to sort the children of. This has the same limitations as Python's ElementTree module.\n* _**sort_attr**_ – The name of the attribute to use as the sort key.\n\n### Options:\n* _**-h, --help**_ – show this help message and exit\n* _**-v, --version**_ – show program's version number and exit\n* _**-r, --reverse, --descending**_ – Sort the child elements in reverse (descending) order.\n* _**-t, --text, --use-text**_ – Treat the sort attribute name as the name of a subelement whose text is the sort key.\n* _**--datetime, --as-datetime**_ – Try to parse the sort key as a date/time value. Mutually exclusive with --decimal.\n* _**--decimal, --as-decimal**_ – Try to parse the sort key as a decimal number. Mutually exclusive with --datetime.\n* _**-o OUTPUT_FILE, --output OUTPUT_FILE**_ – File path to the destination file. (Default is to append '_sorted' to the filename before the extension.)\n\n    \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/kopachris/sortxml",
    "keywords": "xml,sort,tool",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sortxml",
    "package_url": "https://pypi.org/project/sortxml/",
    "platform": null,
    "project_url": "https://pypi.org/project/sortxml/",
    "project_urls": {
      "Homepage": "https://www.github.com/kopachris/sortxml"
    },
    "release_url": "https://pypi.org/project/sortxml/0.1.0/",
    "requires_dist": [
      "python-dateutil"
    ],
    "requires_python": "",
    "summary": "A simple XML element sorter",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14782383,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f7af3b53486dc4a8b3719a0a2e92e28fb8f1f5cfbffaab726f78a6f957d684a",
          "md5": "f9eaff09195d7ba420459a5c2a22611f",
          "sha256": "0cd4441b6c30ed4b1ba0c5720164a3ccb934e8467527e03cd1bc319ba19b378b"
        },
        "downloads": -1,
        "filename": "sortxml-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9eaff09195d7ba420459a5c2a22611f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7475,
        "upload_time": "2022-08-16T23:28:44",
        "upload_time_iso_8601": "2022-08-16T23:28:44.625325Z",
        "url": "https://files.pythonhosted.org/packages/3f/7a/f3b53486dc4a8b3719a0a2e92e28fb8f1f5cfbffaab726f78a6f957d684a/sortxml-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42a034b53be7faf96aca13a37b8039e61c8f1af02c27827b6f3bd060d30baa0d",
          "md5": "afc379b366d76f34280f121649ddcc84",
          "sha256": "6479b08e71dce6e23db28242d74b5fb7195ef0aa6c754d921c1e1fa2445b3a6e"
        },
        "downloads": -1,
        "filename": "sortxml-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "afc379b366d76f34280f121649ddcc84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6647,
        "upload_time": "2022-08-16T23:43:55",
        "upload_time_iso_8601": "2022-08-16T23:43:55.762696Z",
        "url": "https://files.pythonhosted.org/packages/42/a0/34b53be7faf96aca13a37b8039e61c8f1af02c27827b6f3bd060d30baa0d/sortxml-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f7af3b53486dc4a8b3719a0a2e92e28fb8f1f5cfbffaab726f78a6f957d684a",
        "md5": "f9eaff09195d7ba420459a5c2a22611f",
        "sha256": "0cd4441b6c30ed4b1ba0c5720164a3ccb934e8467527e03cd1bc319ba19b378b"
      },
      "downloads": -1,
      "filename": "sortxml-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f9eaff09195d7ba420459a5c2a22611f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7475,
      "upload_time": "2022-08-16T23:28:44",
      "upload_time_iso_8601": "2022-08-16T23:28:44.625325Z",
      "url": "https://files.pythonhosted.org/packages/3f/7a/f3b53486dc4a8b3719a0a2e92e28fb8f1f5cfbffaab726f78a6f957d684a/sortxml-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42a034b53be7faf96aca13a37b8039e61c8f1af02c27827b6f3bd060d30baa0d",
        "md5": "afc379b366d76f34280f121649ddcc84",
        "sha256": "6479b08e71dce6e23db28242d74b5fb7195ef0aa6c754d921c1e1fa2445b3a6e"
      },
      "downloads": -1,
      "filename": "sortxml-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "afc379b366d76f34280f121649ddcc84",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6647,
      "upload_time": "2022-08-16T23:43:55",
      "upload_time_iso_8601": "2022-08-16T23:43:55.762696Z",
      "url": "https://files.pythonhosted.org/packages/42/a0/34b53be7faf96aca13a37b8039e61c8f1af02c27827b6f3bd060d30baa0d/sortxml-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}