{
  "info": {
    "author": "",
    "author_email": "lyteloli <me@lyteloli.space>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development"
    ],
    "description": "# NekoGram\r\n###### Creating bots has never been simpler.\r\n##### Join our [Telegram chat @NekoGramDev](https://t.me/NekoGramDev)\r\n![](docs/nekogram-white.png)\r\n\r\n## Overview\r\nThe idea of NekoGram is to let developers write code as little as possible but still be able to implement complex \r\nsolutions.\\\r\nNekoGram is based on [AIOGram](https://github.com/aiogram/aiogram) which means you can combine all its features \r\nwith NekoGram.\r\n\r\n# Quick documentation\r\n> Note: Always read the documentation for the release you are using, NekoGram is constantly evolving and newer \r\n> releases might be incompatible with older ones.\r\n\r\n#### Current version: 2.0\r\n\r\n## Installation\r\nRequired:\r\n```\r\npip install aiogram\r\n```\r\nSpeedups:\r\n```\r\npip install uvloop ujson cchardet aiodns\r\n```\r\nMySQL storage dependencies:\r\n```\r\npip install aiomysql\r\n```\r\nPostgreSQL storage dependencies:\r\n```\r\npip install aiopg\r\n```\r\n\r\n## Structure, brief introduction and a bit of theory\r\n![](docs/update-structure.png)\r\n> [Full image](docs/update-structure.png)\r\n\r\nEverything is quite simple (wow, really..). Let's divide this theory into topics:\r\n#### Idea of Menus\r\nFirstly, what is a Menu? We can imagine it as a class that holds menus that should be displayed to users as they \r\ninteract with your bot. For example you want to display the following menu to a user:\r\n![](docs/menu-example.png)\\\r\nProgrammatically it can be structured in many ways but NekoGram has its own strict Menu format which \r\nwould look like this:\r\n```json\r\n\"start\": {\r\n  \"text\": \"Hi, you have {active_subscriptions} active subscriptions\",\r\n  \"markup\": [\r\n    [{\"text\": \"⚡️Configure preferences\", \"call_data\": \"menu_configure_preferences\"}]\r\n  ]\r\n}\r\n```\r\nLet us go over the structure quickly. You can see a dictionary \"start\" which contains 2 fields: \"text\" and \"markup\".\r\n\"start\" is the name of the menu we want to define, \"text\" is the text that will be displayed to our users. \r\nWithin the value of \"text\" you can see `{active_subscriptions}`, which is a placeholder, you will understand how it \r\nworks later as you progress through the docs. Markup field is the keyboard that will be displayed to users along \r\nwith the text. Its structure is also quite simple, it is a 2 dimensional array of dictionaries. \r\nFirst dimension defines a list of keyboard rows with respect to row position. \r\nSecond dimension defines a keyboard row (each row might have multiple buttons).\r\nDictionaries themselves define button objects, in this case we have an inline button, therefore it has a \"text\" field \r\nand \"call_data\" field which defines the callback your app will get once the button is clicked, this way you can \r\nunderstand which menu our user wants to go to.\r\n\r\n#### How to define Menus?\r\nFor now NekoGram supports only JSON Menus, but you may override BaseProcessor text processor class to make it support \r\nmore formats, if you plan to do so, please share it with others by submitting a pull request!\r\nYou may put the translation files anywhere and anyhow you want, though it is recommended to store them in a \r\n\"translations\" folder under the root folder of your app. \r\nEach file must have an [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) defined like this: \r\n`\"lang\": \"en\"`. Considering the previous Menu example, the whole file would look like this: \r\n```json\r\n{\r\n  \"lang\": \"en\",\r\n  \"start\": {\r\n    \"text\": \"Hi, you have {active_subscriptions} active subscriptions\",\r\n    \"markup\": [\r\n      [{\"text\": \"⚡️Configure preferences\", \"call_data\": \"menu_configure_preferences\"}]\r\n    ]\r\n  }\r\n}\r\n```\r\nNow let us get back to our [scheme](#structure-brief-introduction-and-a-bit-of-theory).\r\n\r\n#### What is an Update?\r\nAn Update is an AIOGram Message or CallbackQuery object, which is being fed to our app via AIOGram handlers.\r\nNekoGram only handles messages when a user is working with a certain menu. As for calls (CallbackQueries) it handles \r\nonly callbacks starting with predefined strings (menu_ and widget_ by default). If an update does not match these \r\ncriteria it is being ignored and AIOGram takes care about it, so you may define \r\nlower-level AIOGram handlers if you need to handle something NekoGram cannot.\r\n\r\n##### Update flow\r\nWhen we have an update that should be handled we have a couple options (refer to the schema above). \r\nIn any case a Menu object is being constructed in the first place. \r\nThis object is a class representing your JSON-defined menu. \r\nIt contains all the data from JSON file and a few useful methods.\r\n\r\n#### What is called a Formatter?\r\nFormatters are crucial part of NekoGram since they allow you to replace placeholders in your Menus with useful \r\ndata for users. Formatter is being called when a menu is being built, which means formatter is called before \r\na menu is being handled. Let us see an example of a Formatter, we will use the Menu we defined previously:\r\n```python\r\nfrom NekoGram import Neko, Menu\r\nfrom aiogram.types import User\r\nimport random\r\nNEKO = Neko(token='YOUR BOT TOKEN')  # Remember to initialize Neko beforehand\r\n\r\n\r\n@NEKO.formatter()\r\nasync def start(data: Menu, _: User, __: Neko):\r\n    await data.build(text_format={'active_subscriptions': random.randint(1, 100)})\r\n```\r\nNote that you do not need to return anything in Formatters, only call build function, which alters the Menu \r\nobject in-place.\r\n\r\n\r\n#### How to Filter?\r\nNekoGram supports AIOGram filters but also has its own, simpler version. Here is an example for better understanding \r\nif you have any experience with AIOGram:\r\n```python\r\nfrom aiogram.types import Message, CallbackQuery\r\nfrom aiogram.dispatcher.filters import Filter\r\nfrom NekoGram.storages import BaseStorage\r\nfrom typing import Dict, Union, Any\r\n\r\n\r\nclass HasMenu(Filter):\r\n    def __init__(self, database: BaseStorage):\r\n        self.database: BaseStorage = database\r\n\r\n    @classmethod\r\n    def validate(cls, _: Dict[str, Any]):\r\n        return {}\r\n\r\n    async def check(self, obj: Union[Message, CallbackQuery]) -> bool:\r\n        return bool((await self.database.get_user_data(user_id=obj.from_user.id)).get('menu', False))\r\n```\r\nThis filter checks if a user is interacting with any Menu at the moment. Let us say you want to use it in your app. \r\nInitialize a Neko like this:\r\n```python\r\nfrom NekoGram import Neko\r\nNEKO: Neko = Neko(token='YOUR BOT TOKEN')\r\n```\r\nNow you may attach the filter in one of the following ways:\r\n`NEKO.add_filter(name='has_menu', callback=HasMenu)`\r\n`NEKO.add_filter(name='has_menu', callback=HasMenu.check)`\r\nWhat if you are not familiar with AIOGram or do not want to write big classes for simple filters? \r\nNot a problem, use a simple version!\r\n```python\r\nfrom aiogram.types import Message, CallbackQuery\r\nfrom typing import Union\r\n\r\n\r\nasync def is_int(obj: Union[Message, CallbackQuery]) -> bool:\r\n    \"\"\"\r\n    Checks if message text can be converted to an integer\r\n    :return: True if so\r\n    \"\"\"\r\n    if isinstance(obj, CallbackQuery):  # Make sure we are working with Message text\r\n        obj = obj.message\r\n    return obj.text and obj.text.isdigit()\r\n```\r\nAnd attach it the following way: `NEKO.add_filter(name='int', callback=is_int)`.\r\nSounds simple, right? You may ask yourself why do you need to attach filters at all, the answer is because NekoGram \r\nvalidates user input automatically so that you do not have to write a ton of code.\r\nNow, how can we make Neko do it for us? Let us define a simple menu:\r\n```json\r\n\"menu_enter_age\": {\r\n  \"text\": \"Please enter your age\",\r\n  \"markup\": [\r\n    [{\"text\": \"⬅️Back\"}]\r\n  ],\r\n  \"filters\": [\"int\"],\r\n  \"validation_error\": \"Entered data is not an integer\"\r\n}\r\n```\r\nIn this example we use a reply keyboard instead of inline, this is more useful when collecting user input.\r\nWe defined our filter by name in \"filters\" field and a \"validation_error\" which will be displayed to users in case \r\ntheir input did not pass our filters.\r\n> Note: filters only apply for messages, not callbacks. Filters are called before functions.\r\n\r\n#### What is a Function?\r\nWell, the naming might be bad, but you will get used to it :)\\\r\nFunctions give you freedom to do whatever, they are termination points of update handling process.\r\nLet us consider an example. Remember the menu we defined to get user's age in the previous section? \r\nNow we will define another Menu where our user will see his age.\r\n```json\r\n\"menu_result\": {\r\n  \"text\": \"Your age is {age}, you look nice today!\",\r\n  \"markup\": [\r\n    [{\"text\": \"🆗\", \"call_data\": \"menu_start\"}]\r\n  ]\r\n}\r\n```\r\nNow we can process the user input, let us define a function for that.\r\n```python\r\nfrom NekoGram import Neko, Menu\r\nfrom aiogram.types import Message, CallbackQuery\r\nfrom typing import Union\r\nNEKO = Neko(token='YOUR BOT TOKEN')  # Remember to initialize a Neko beforehand\r\n\r\n\r\n@NEKO.function()\r\nasync def menu_enter_age(_: Menu, message: Union[Message, CallbackQuery], __: Neko):\r\n    data = await NEKO.build_menu(name='menu_result', obj=message)\r\n    await data.build(text_format={'age': message.text})\r\n```\r\nHere it is, notice how we can perform formatting within functions, but remember, a Menu must have no Formatter to do so.\r\n> There is a special case: \"start\" Menu, which is an entrypoint of your bot. You may define a Function for this menu \r\n> to override default Neko behavior.\r\n\r\n#### Routers\r\nIn order to structure your app better and to avoid circular imports NekoGram provides NekoRouters to register \r\nFunctions and Formatters. It is recommended to use them instead of attaching Formatters and Functions to Neko object.\r\nExample:\r\n```python\r\nfrom NekoGram import NekoRouter, Neko, Menu\r\nfrom aiogram.types import User\r\n\r\nNEKO = Neko(token='YOUR BOT TOKEN')  # Remember to initialize a Neko beforehand\r\nROUTER = NekoRouter()\r\n\r\n\r\n@ROUTER.formatter()\r\nasync def test(data: Menu, user: User, neko: Neko):\r\n    pass\r\n\r\nNEKO.attach_router(ROUTER)  # Attach a router\r\n```\r\n\r\n#### App structure\r\n![](docs/project-structure.png)\r\n\r\nThis is an example project structure, you should structure all your Menus by relevant categories and within each \r\ncategory have separate files for Formatters and Functions. Later on attach the Routers to the Neko object.\r\n\r\n## Deeper understanding of components\r\nNekoGram has a lot of features, and it is always nice to have some reference, there you go.\r\n\r\n#### Storages\r\nJust like AIOGram, NekoGram uses its own storages to store user data. At the moment there are 3 types of \r\nstorages available: MySQLStorage, PGStorage and a MemoryStorage, let us walk through each of them quickly.\r\n##### MemoryStorage\r\nAs the name suggests, it stores data in your machine's memory, once you restart your app, all the data will be gone.\r\nThis storage is useful for tiny projects, testing and playing around with Neko.\r\n##### MySQLStorage\r\nThe most advanced and recommended storage of NekoGram. It checks database structure every time your app launches, \r\nif you do not have a database, it will create it for you. It is recommended to use Widgets only with this storage.\r\n##### PGStorage\r\nA storage for PostgreSQL databases. Has basic features of MySQLStorage but is not tested, may not work.\r\n\r\n#### Menus in depth\r\nHere are all possible properties of a Menu:\r\n```json\r\n\"YOUR_MENU_NAME\": {\r\n  \"text\": \"YOUR TEXT\",\r\n  \"markup\": [\r\n    [{\"text\": \"YOUR TEXT\"}]\r\n  ],\r\n  \"markup_row_width\": 3,\r\n  \"no_preview\": false,\r\n  \"parse_mode\": \"HTML\",\r\n  \"silent\": false,\r\n  \"validation_error\": \"YOUR ERROR TEXT\",\r\n  \"extras\": {\r\n    \"YOUR_CUSTOM_KEY\": \"YOUR CUSTOM VALUE\"\r\n  }\r\n  \"prev_menu\": \"YOUR PREVIOUS MENU NAME\",\r\n  \"next_menu\": \"YOUR NEXT MENU NAME\",\r\n  \"filters\": [\"int\", \"photo\"]\r\n}\r\n```\r\nLet us go over each of them:\r\n- text: text to display to users\r\n- markup: keyboard to display to users\r\n- markup_row_width: row width of markup (max number of buttons per row)\r\n- no_preview: whether to hide webpage previews\r\n- silent: whether to deliver message without a notification\r\n- validation_error: text to display to users in case of input not passing filters\r\n- extras: a dictionary for any extra data\r\n- prev_menu: previous menu in multi-step menus\r\n- next_menu: next menu in multi-step menus\r\n- filters: user input filters\r\n\r\n#### Widgets\r\nWe strive for simplicity. That is why you have Widgets available, both builtin and third-party. \r\nYou may create your own widget by copying the structure of any widget in NekoGram/widgets folder.\r\nSome widgets may require extra database tables and Neko also takes care of that. It is recommended to use MySQLStorage \r\nwhen working with widgets.\r\n##### How to attach a widget?\r\n```python\r\nfrom NekoGram.widgets import broadcast\r\nfrom NekoGram import Neko\r\nNEKO = Neko(token='YOUR BOT TOKEN')  # Remember to initialize Neko beforehand\r\n\r\nasync def _():\r\n    await NEKO.attach_widget(formatters_router=broadcast.FORMATTERS_ROUTER, functions_router=broadcast.FUNCTIONS_ROUTER)\r\n```\r\n##### How to customize widgets?\r\nThere are a few methods that override parts of widget Menus. They are: prev_menu_handlers, next_menu_handlers, \r\nmarkup_overriders.\r\nLet us try to customize the broadcast Widget to make it return user to our own defined menu, not to start Menu.\r\n\r\n```python\r\nfrom NekoGram import Neko, Menu\r\nfrom typing import List, Dict\r\nNEKO = Neko(token='YOUR BOT TOKEN') # Remember to initialize Neko beforehand\r\n\r\n@NEKO.prev_menu_handler()\r\nasync def widget_broadcast(_: Menu) -> str:\r\n    return 'menu_test'\r\n\r\n\r\n@NEKO.markup_overrider()\r\nasync def widget_broadcast_broadcast(_: Menu) -> List[List[Dict[str, str]]]:\r\n    return [[{\"text\": \"🆗\", \"call_data\": \"menu_test\", \"id\": 2}]]\r\n```\r\nIn this way we have overriden the menu to which widget entrypoint should return us \r\n(if a user decided not to perform a broadcast) and the termination point (when a user finished their broadcast).\r\nWe have overridden the Menus that are inside the \r\n[widget folder](https://github.com/lyteloli/NekoGram/blob/master/NekoGram/widgets/broadcast/translations/en.json)\r\n\r\n##### Multi-step menus\r\nNekoGram allows you to reduce the amount of code by implementing multi-step Menus that may have as few as \r\njust one function to process the collected data all together when it is complete. Let us consider the broadcast \r\nwidget as an example:\r\n```json\r\n{\r\n  \"widget_broadcast_add_button_step_1\": {\r\n    \"text\": \"Please enter the button text\",\r\n    \"filters\": [\"text\"],\r\n    \"validation_error\": \"Only text is allowed\",\r\n    \"markup\": [\r\n      [{\"text\": \"⬅️Back\"}]\r\n    ],\r\n    \"markup_type\": \"reply\",\r\n    \"next_menu\": \"widget_broadcast_add_button_step_2\"\r\n  },\r\n  \"widget_broadcast_add_button_step_2\": {\r\n    \"text\": \"Please enter the button URL or mention\",\r\n    \"filters\": [\"url\", \"mention\"],\r\n    \"validation_error\": \"Only URL or mention is allowed\",\r\n    \"markup\": [\r\n      [{\"text\": \"⬅️Back\"}]\r\n    ],\r\n    \"markup_type\": \"reply\",\r\n    \"prev_menu\": \"widget_broadcast_add_button_step_1\"\r\n  }\r\n}\r\n```\r\nAs you can see, these menus are connected with \"prev_menu\" and \"next_menu\" fields and they both have filters defined.\r\nThis means that once input is submitted for the first step of the menu, Neko will write the input to a database and \r\ncontinue to the second step. For the last step of multi-step menus (2nd step in this example) \r\na function has to be defined. The function should process data and redirect our user to another menu.\r\n\r\n\r\n# Afterword\r\nThe documentation is still in-progress so check often for updates. It is also planned to add more widgets and make a \r\nseries of YouTube tutorials. If you have anything to add, comment or complain about, please do so via our \r\n[Telegram chat @NekoGramDev](https://t.me/NekoGramDev).\r\n\r\n### A word from lyteloli\r\nNekoGram is my personal creation, I implemented everything on my own and try to share it with people to build a \r\ncommunity of Telegram bot development enthusiasts, no matter if you're just playing around, doing personal or \r\ncommercial projects. I would be very grateful if you could spread a word about NekoGram, help with its development, \r\n[buy me a coffee](https://www.buymeacoffee.com/lyteloli) or mention NekoGram in one of your apps created with it. \r\nAny kind of support is warmly welcome.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2020 lyteloli  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "NekoGram",
    "package_url": "https://pypi.org/project/NekoGram/",
    "platform": null,
    "project_url": "https://pypi.org/project/NekoGram/",
    "project_urls": {
      "Bug Tracker": "https://github.com/lyteloli/NekoGram/issues",
      "Homepage": "https://github.com/lyteloli/NekoGram"
    },
    "release_url": "https://pypi.org/project/NekoGram/2.1.0/",
    "requires_dist": [
      "aiogram (~=2.23.1)",
      "importlib-resources (~=5.10.0)"
    ],
    "requires_python": ">=3.9",
    "summary": "Creating bots has never been simpler.",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17155913,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ef6521233c35551607849e275d8c28a51a1a67cda2f3081992856fe69ff903e",
          "md5": "48d1d0e60b4f444e6e76ce55b31740d4",
          "sha256": "74581930dd6d895c3702c614632c0e26fdb6653215806a7aa66cce22eb9cb100"
        },
        "downloads": -1,
        "filename": "NekoGram-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48d1d0e60b4f444e6e76ce55b31740d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 34314,
        "upload_time": "2022-11-11T15:47:12",
        "upload_time_iso_8601": "2022-11-11T15:47:12.585977Z",
        "url": "https://files.pythonhosted.org/packages/9e/f6/521233c35551607849e275d8c28a51a1a67cda2f3081992856fe69ff903e/NekoGram-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d74fc0268fc96763fa3bb1b0bb5d8e3cc24f620db9b472fdfc522e11ee06dd65",
          "md5": "123014717e10f4fe40865883c7a43dac",
          "sha256": "81e558d67e0d2a98bf0bc427c06eaab169444c2b971caf20b35a0f11d04098a9"
        },
        "downloads": -1,
        "filename": "NekoGram-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "123014717e10f4fe40865883c7a43dac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31296,
        "upload_time": "2022-11-11T15:47:17",
        "upload_time_iso_8601": "2022-11-11T15:47:17.627961Z",
        "url": "https://files.pythonhosted.org/packages/d7/4f/c0268fc96763fa3bb1b0bb5d8e3cc24f620db9b472fdfc522e11ee06dd65/NekoGram-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b93ff18dcf0d75e47b7887580bb9ee0e141027d88fb049c82fd65322bb02f00",
          "md5": "02a440241a356653a1bf9be797802f1b",
          "sha256": "f7888ebb95a8ca404f410b84c34cea7fb626218dd964a757b399ca160ee11141"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02a440241a356653a1bf9be797802f1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 34313,
        "upload_time": "2022-11-11T15:47:15",
        "upload_time_iso_8601": "2022-11-11T15:47:15.051459Z",
        "url": "https://files.pythonhosted.org/packages/6b/93/ff18dcf0d75e47b7887580bb9ee0e141027d88fb049c82fd65322bb02f00/NekoGram-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4557791d7f98211f371d4fb80f27c0a6f6df46f07f203c23aef951f0fef0076c",
          "md5": "4aa0fb10672a4a812a4473f4ac01ed2e",
          "sha256": "c0bb3a37d17b9d3e47541b16a27a92a3a3925f26325b84f04e3f01c5d17e5fa5"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4aa0fb10672a4a812a4473f4ac01ed2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31299,
        "upload_time": "2022-11-11T15:47:19",
        "upload_time_iso_8601": "2022-11-11T15:47:19.488975Z",
        "url": "https://files.pythonhosted.org/packages/45/57/791d7f98211f371d4fb80f27c0a6f6df46f07f203c23aef951f0fef0076c/NekoGram-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aae2c91ecde14709c33cb98413ddf49f3afa86ee4aa228a850ae9f2a834ed82",
          "md5": "21f046fc5aaa035b9f4cfb9b109c6f64",
          "sha256": "8e987c89f04e822f8098c7cf62b1563db3e7fcdb9707e4b4307ea6a04f7e7f4b"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21f046fc5aaa035b9f4cfb9b109c6f64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 36512,
        "upload_time": "2022-11-11T18:01:12",
        "upload_time_iso_8601": "2022-11-11T18:01:12.264613Z",
        "url": "https://files.pythonhosted.org/packages/6a/ae/2c91ecde14709c33cb98413ddf49f3afa86ee4aa228a850ae9f2a834ed82/NekoGram-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49ed2bb4463d23fb72b32e59230282cce3a341bdb0178a931af1fa1646d1f78d",
          "md5": "f7eac3014d2d1c3dbdaf941cedf5f8cd",
          "sha256": "d4f133aff978029690a4faa805061ab2f2c15ebd4545e917030ae621ee687d24"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f7eac3014d2d1c3dbdaf941cedf5f8cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32201,
        "upload_time": "2022-11-11T18:01:16",
        "upload_time_iso_8601": "2022-11-11T18:01:16.808651Z",
        "url": "https://files.pythonhosted.org/packages/49/ed/2bb4463d23fb72b32e59230282cce3a341bdb0178a931af1fa1646d1f78d/NekoGram-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2062da60c707c78f8d27dec57f5f1c176ec75bdb7caccd5bcb4eb832c673689c",
          "md5": "0a50147fb311fdc3d4befcea42de9fb4",
          "sha256": "8a142c3a0656c494d30a9a4a8f9dcfe86dbe7b8b817ef39ce1284cb37434c310"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a50147fb311fdc3d4befcea42de9fb4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 36823,
        "upload_time": "2022-11-14T13:58:35",
        "upload_time_iso_8601": "2022-11-14T13:58:35.916329Z",
        "url": "https://files.pythonhosted.org/packages/20/62/da60c707c78f8d27dec57f5f1c176ec75bdb7caccd5bcb4eb832c673689c/NekoGram-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aba3077d4c8e26484d1e255749729a6b0c60228b6436cd296df419ec5f102c2",
          "md5": "c2be8d3b6c2efc4e95ba027b863f473e",
          "sha256": "134e32770253b177023e1201e8b4b3bb7977a4824825b7caa1b55c39554de097"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c2be8d3b6c2efc4e95ba027b863f473e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32443,
        "upload_time": "2022-11-14T13:58:38",
        "upload_time_iso_8601": "2022-11-14T13:58:38.359872Z",
        "url": "https://files.pythonhosted.org/packages/5a/ba/3077d4c8e26484d1e255749729a6b0c60228b6436cd296df419ec5f102c2/NekoGram-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e42069576fa3957313e31b955f1cc4a6d8ae28b3cfe85a9ddd973c6e4e4504b4",
          "md5": "d41d8211592e431fb3fe206cbcacc781",
          "sha256": "81b8ae0fe04f87907d97718d6b005c13abb2b764324d3010cec52810acaa0fdd"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d41d8211592e431fb3fe206cbcacc781",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 36871,
        "upload_time": "2022-11-16T06:19:19",
        "upload_time_iso_8601": "2022-11-16T06:19:19.732231Z",
        "url": "https://files.pythonhosted.org/packages/e4/20/69576fa3957313e31b955f1cc4a6d8ae28b3cfe85a9ddd973c6e4e4504b4/NekoGram-2.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d3cbf5b286e52ad4109f15aeb5d1b4fa3ab390176f956fb4a5e4eec483b5fae",
          "md5": "6892a283aebfeab77835489f783deb18",
          "sha256": "91f8cec9b5e4a2d26f57e2888ba79423d4dfa1a12a04e3c14485c64f2dbefe2f"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6892a283aebfeab77835489f783deb18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 32520,
        "upload_time": "2022-11-16T06:19:21",
        "upload_time_iso_8601": "2022-11-16T06:19:21.957346Z",
        "url": "https://files.pythonhosted.org/packages/8d/3c/bf5b286e52ad4109f15aeb5d1b4fa3ab390176f956fb4a5e4eec483b5fae/NekoGram-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31b719cd54f6c241132cdcf8896aede4c98f68c3c2f05739b1dbc9cc141a865f",
          "md5": "816501bbfcb0f6a21aa88bfd4c715c93",
          "sha256": "daa270f2d65f7c79d69772dce33c914b5fca316352d66e6fc348890a04f7515d"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "816501bbfcb0f6a21aa88bfd4c715c93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 37370,
        "upload_time": "2022-11-16T06:35:57",
        "upload_time_iso_8601": "2022-11-16T06:35:57.139444Z",
        "url": "https://files.pythonhosted.org/packages/31/b7/19cd54f6c241132cdcf8896aede4c98f68c3c2f05739b1dbc9cc141a865f/NekoGram-2.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f7273f5954bd905ee38c333f8ed710253cc1ccb8485af1dd81860f1a52e5174",
          "md5": "cc9f0d2142cebe050cb229bb754dd73a",
          "sha256": "4c3a6d907594f2d9b8d1600907f71f975e9a96bf5cd6b12a9de3398bbced6369"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cc9f0d2142cebe050cb229bb754dd73a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 32789,
        "upload_time": "2022-11-16T06:35:59",
        "upload_time_iso_8601": "2022-11-16T06:35:59.002516Z",
        "url": "https://files.pythonhosted.org/packages/9f/72/73f5954bd905ee38c333f8ed710253cc1ccb8485af1dd81860f1a52e5174/NekoGram-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01d7ff790e5e8242aeb9a128fa9e60a4f5bb56d7cfabe4bc01793b94c69e539b",
          "md5": "897bf72667528b3d77c8f442aeb0d9fd",
          "sha256": "2cd7305bdc1ba0ceb5a3bc509a277f06e265020c8118f3820d3ebf74ae6617e4"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "897bf72667528b3d77c8f442aeb0d9fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 37546,
        "upload_time": "2022-11-16T07:52:33",
        "upload_time_iso_8601": "2022-11-16T07:52:33.315956Z",
        "url": "https://files.pythonhosted.org/packages/01/d7/ff790e5e8242aeb9a128fa9e60a4f5bb56d7cfabe4bc01793b94c69e539b/NekoGram-2.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4278f084e5ece073883139d472d0c52886645768e85d93db0be1fe49e1209ca1",
          "md5": "838012acdbdb3fd183ebe8fb66facea4",
          "sha256": "9f089b0939df8628f7eb7200687909873971913862a8c3b6c84086c9ae881815"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "838012acdbdb3fd183ebe8fb66facea4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 32901,
        "upload_time": "2022-11-16T07:52:35",
        "upload_time_iso_8601": "2022-11-16T07:52:35.526811Z",
        "url": "https://files.pythonhosted.org/packages/42/78/f084e5ece073883139d472d0c52886645768e85d93db0be1fe49e1209ca1/NekoGram-2.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "509d0c5b63ce5bfd919ed8cf31acb2d22ddaab44db4f889ce58af0a44d35de91",
          "md5": "68b811b9f30ee8535ab5bee51a6f981b",
          "sha256": "9a0f5f08909d3d578aafe76ed30f0ad3881dbddfab398a95523eebafafce597e"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68b811b9f30ee8535ab5bee51a6f981b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 37585,
        "upload_time": "2022-11-16T08:09:55",
        "upload_time_iso_8601": "2022-11-16T08:09:55.862659Z",
        "url": "https://files.pythonhosted.org/packages/50/9d/0c5b63ce5bfd919ed8cf31acb2d22ddaab44db4f889ce58af0a44d35de91/NekoGram-2.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "623c93799a865fb2f22c1feaa0d5281ad73452c7ebad9333b82c5a497d6a7088",
          "md5": "987989f72b4b11e6189e3900aa2f0546",
          "sha256": "15b9e9fd2524f7ca8d04ee681dee89503ed01e4c0c35ee78f9ae207e12cd5350"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "987989f72b4b11e6189e3900aa2f0546",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 32874,
        "upload_time": "2022-11-16T08:09:57",
        "upload_time_iso_8601": "2022-11-16T08:09:57.902182Z",
        "url": "https://files.pythonhosted.org/packages/62/3c/93799a865fb2f22c1feaa0d5281ad73452c7ebad9333b82c5a497d6a7088/NekoGram-2.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65c18676cefb0593a24a7e572ed84dc0468099d17b6e15ed4f0d1ff4eca63045",
          "md5": "7c201de4c6abcb77931aecf37e065f36",
          "sha256": "c91f1b99d6c346f75ad4dc56d9cb85b21c9b34afbe76e900a68b99f3fb2e4c4b"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c201de4c6abcb77931aecf37e065f36",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 37855,
        "upload_time": "2022-11-18T00:01:29",
        "upload_time_iso_8601": "2022-11-18T00:01:29.783144Z",
        "url": "https://files.pythonhosted.org/packages/65/c1/8676cefb0593a24a7e572ed84dc0468099d17b6e15ed4f0d1ff4eca63045/NekoGram-2.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20619f4ebf9bdb2f0473458dc3aa8157f24f2ca5f924482c5b86a4d363ea1a77",
          "md5": "673f33e0607d1ad5a46487d2dd47e36e",
          "sha256": "d831dd835d888fe1b12167448b3b299c65241d56e1b2d76daa4536dc96a67cc2"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "673f33e0607d1ad5a46487d2dd47e36e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 33180,
        "upload_time": "2022-11-18T00:01:32",
        "upload_time_iso_8601": "2022-11-18T00:01:32.437876Z",
        "url": "https://files.pythonhosted.org/packages/20/61/9f4ebf9bdb2f0473458dc3aa8157f24f2ca5f924482c5b86a4d363ea1a77/NekoGram-2.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c9a2ddb849d9223ef391f2ecf09bd530605fade4c099d071b1e8c0f2926329c",
          "md5": "9d4de1ed9a1591350956030fba89f244",
          "sha256": "61b9154f29147528b219aff314ff454502891606c78a562383eecc0862245bf7"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d4de1ed9a1591350956030fba89f244",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 44558,
        "upload_time": "2022-12-16T02:55:04",
        "upload_time_iso_8601": "2022-12-16T02:55:04.931499Z",
        "url": "https://files.pythonhosted.org/packages/7c/9a/2ddb849d9223ef391f2ecf09bd530605fade4c099d071b1e8c0f2926329c/NekoGram-2.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a59655a2cb4f0ba1a7b0d49fb24bb003b8a238f286ca843c9e476815f75e415e",
          "md5": "8c03401b4a1f4bc5590fc54062264dc6",
          "sha256": "a4c7675ecbe5d61ec9c65d59d471f4fdd27b0dfd655027bc5b2f3d3c0b531686"
        },
        "downloads": -1,
        "filename": "NekoGram-2.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "8c03401b4a1f4bc5590fc54062264dc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 36707,
        "upload_time": "2022-12-16T02:55:06",
        "upload_time_iso_8601": "2022-12-16T02:55:06.752449Z",
        "url": "https://files.pythonhosted.org/packages/a5/96/55a2cb4f0ba1a7b0d49fb24bb003b8a238f286ca843c9e476815f75e415e/NekoGram-2.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fab701c623df9d16f3f5b47058149499c6cb13917a44aa42a8e2824dc6385e2",
          "md5": "ffb27bbf0675b7440fa393dff03c597b",
          "sha256": "6ecd94800938ea17ed9cc100ef0b69033e82b3375515db990576cf6000d7c4ff"
        },
        "downloads": -1,
        "filename": "NekoGram-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffb27bbf0675b7440fa393dff03c597b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 49292,
        "upload_time": "2023-03-04T12:27:39",
        "upload_time_iso_8601": "2023-03-04T12:27:39.373877Z",
        "url": "https://files.pythonhosted.org/packages/9f/ab/701c623df9d16f3f5b47058149499c6cb13917a44aa42a8e2824dc6385e2/NekoGram-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "281be07b36c1b6f639e3cb62383812bb9b3c82567f72bc7910f753fb3d92a562",
          "md5": "6525f147fab8ede58b8d5bb74ec42301",
          "sha256": "88bb0594b411ddfd1154182d482972f29c127b185850a1ee5b6ab069c1211f9c"
        },
        "downloads": -1,
        "filename": "NekoGram-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6525f147fab8ede58b8d5bb74ec42301",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 39580,
        "upload_time": "2023-03-04T12:27:41",
        "upload_time_iso_8601": "2023-03-04T12:27:41.723464Z",
        "url": "https://files.pythonhosted.org/packages/28/1b/e07b36c1b6f639e3cb62383812bb9b3c82567f72bc7910f753fb3d92a562/NekoGram-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9fab701c623df9d16f3f5b47058149499c6cb13917a44aa42a8e2824dc6385e2",
        "md5": "ffb27bbf0675b7440fa393dff03c597b",
        "sha256": "6ecd94800938ea17ed9cc100ef0b69033e82b3375515db990576cf6000d7c4ff"
      },
      "downloads": -1,
      "filename": "NekoGram-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ffb27bbf0675b7440fa393dff03c597b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 49292,
      "upload_time": "2023-03-04T12:27:39",
      "upload_time_iso_8601": "2023-03-04T12:27:39.373877Z",
      "url": "https://files.pythonhosted.org/packages/9f/ab/701c623df9d16f3f5b47058149499c6cb13917a44aa42a8e2824dc6385e2/NekoGram-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "281be07b36c1b6f639e3cb62383812bb9b3c82567f72bc7910f753fb3d92a562",
        "md5": "6525f147fab8ede58b8d5bb74ec42301",
        "sha256": "88bb0594b411ddfd1154182d482972f29c127b185850a1ee5b6ab069c1211f9c"
      },
      "downloads": -1,
      "filename": "NekoGram-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6525f147fab8ede58b8d5bb74ec42301",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 39580,
      "upload_time": "2023-03-04T12:27:41",
      "upload_time_iso_8601": "2023-03-04T12:27:41.723464Z",
      "url": "https://files.pythonhosted.org/packages/28/1b/e07b36c1b6f639e3cb62383812bb9b3c82567f72bc7910f753fb3d92a562/NekoGram-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}