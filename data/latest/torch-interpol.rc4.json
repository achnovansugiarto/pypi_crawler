{
  "info": {
    "author": "Yael Balbastre",
    "author_email": "yael.balbastre@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Medical Science Apps."
    ],
    "description": "# torch-interpol\nHigh-order spline interpolation in PyTorch\n\n## Description\n\nThis package contains a pure python implementation of **high-order spline \ninterpolation** for ND tensors (including 2D and 3D images). It makes use \nof the just-in-time capabilities of TorchScript and explicitly implements\nthe forward and backward passes of all functions, making it **fast** and \n**memory-efficient**. \n\nAll the functions available in this (small) package were originally \nimplemented in [NITorch](https://github/balbasty/nitorch), a larger \nPyTorch-based package dedicated to NeuroImaging and Medical Image Computing.\n\n## Installation\n\n```shell\npip install torch-interpol\n```\n\n## Usage\n\n**See our [example notebooks](examples/)**\n\n## Quick doc\n\n\n```\nNotes\n-----\n\n`interpolation` can be an int, a string or an InterpolationType.\nPossible values are:\n    - 0 or 'nearest'\n    - 1 or 'linear'\n    - 2 or 'quadratic'\n    - 3 or 'cubic'\n    - 4 or 'fourth'\n    - 5 or 'fifth'\n    - etc.\nA list of values can be provided, in the order [W, H, D],\nto specify dimension-specific interpolation orders.\n\n`bound` can be an int, a string or a BoundType.\nPossible values are:\n    - 'replicate'  or 'nearest'     :  a  a  a  |  a  b  c  d  |  d  d  d\n    - 'dct1'       or 'mirror'      :  d  c  b  |  a  b  c  d  |  c  b  a\n    - 'dct2'       or 'reflect'     :  c  b  a  |  a  b  c  d  |  d  c  b\n    - 'dst1'       or 'antimirror'  : -b -a  0  |  a  b  c  d  |  0 -d -c\n    - 'dst2'       or 'antireflect' : -c -b -a  |  a  b  c  d  | -d -c -b\n    - 'dft'        or 'wrap'        :  b  c  d  |  a  b  c  d  |  a  b  c\n    - 'zero'       or 'zeros'       :  0  0  0  |  a  b  c  d  |  0  0  0\nA list of values can be provided, in the order [W, H, D],\nto specify dimension-specific boundary conditions.\nNote that\n- `dft` corresponds to circular padding\n- `dct2` corresponds to Neumann boundary conditions (symmetric)\n- `dst2` corresponds to Dirichlet boundary conditions (antisymmetric)\nSee https://en.wikipedia.org/wiki/Discrete_cosine_transform\n    https://en.wikipedia.org/wiki/Discrete_sine_transform\n```\n\n```python\ninterpol.grid_pull(\n    input,\n    grid,\n    interpolation='linear',\n    bound='zero',\n    extrapolate=False,\n    prefilter=False,\n)\n\"\"\"\nSample an image with respect to a deformation field.\n\nIf the input dtype is not a floating point type, the input image is \nassumed to contain labels. Then, unique labels are extracted \nand resampled individually, making them soft labels. Finally, \nthe label map is reconstructed from the individual soft labels by \nassigning the label with maximum soft value.\n\nParameters\n----------\ninput : (..., [channel], *inshape) tensor\n    Input image.\ngrid : (..., *outshape, dim) tensor\n    Transformation field.\ninterpolation : int or sequence[int], default=1\n    Interpolation order.\nbound : BoundType or sequence[BoundType], default='zero'\n    Boundary conditions.\nextrapolate : bool or int, default=True\n    Extrapolate out-of-bound data.\nprefilter : bool, default=False\n    Apply spline pre-filter (= interpolates the input)\n\nReturns\n-------\noutput : (..., [channel], *outshape) tensor\n    Deformed image.\n\"\"\"\n```\n\n```python\ninterpol.grid_push(\n    input,\n    grid,\n    shape=None,\n    interpolation='linear',\n    bound='zero',\n    extrapolate=False,\n    prefilter=False,\n)\n\"\"\"\nSplat an image with respect to a deformation field (pull adjoint).\n\nParameters\n----------\ninput : (..., [channel], *inshape) tensor\n    Input image.\ngrid : (..., *inshape, dim) tensor\n    Transformation field.\nshape : sequence[int], default=inshape\n    Output shape\ninterpolation : int or sequence[int], default=1\n    Interpolation order.\nbound : BoundType, or sequence[BoundType], default='zero'\n    Boundary conditions.\nextrapolate : bool or int, default=True\n    Extrapolate out-of-bound data.\nprefilter : bool, default=False\n    Apply spline pre-filter.\n\nReturns\n-------\noutput : (..., [channel], *shape) tensor\n    Spatted image.\n\"\"\"\n```\n\n```python\ninterpol.grid_grad(\n    input,\n    grid,\n    interpolation='linear',\n    bound='zero',\n    extrapolate=False,\n    prefilter=False,\n)\n\"\"\"\nSample spatial gradients of an image with respect to a deformation field.\n\nParameters\n----------\ninput : (..., [channel], *inshape) tensor\n    Input image.\ngrid : (..., *inshape, dim) tensor\n    Transformation field.\nshape : sequence[int], default=inshape\n    Output shape\ninterpolation : int or sequence[int], default=1\n    Interpolation order.\nbound : BoundType, or sequence[BoundType], default='zero'\n    Boundary conditions.\nextrapolate : bool or int, default=True\n    Extrapolate out-of-bound data.\nprefilter : bool, default=False\n    Apply spline pre-filter (= interpolates the input)\n\nReturns\n-------\noutput : (..., [channel], *shape, dim) tensor\n    Sampled gradients.\n\"\"\"\n```\n\n```python\ninterpol.spline_coeff_nd(\n    input,\n    interpolation='linear',\n    bound='dct2',\n    dim=None,\n    inplace=False,\n)\n\"\"\"\nCompute the interpolating spline coefficients, for a given spline order\nand boundary conditions, along the last `dim` dimensions.\n\nReferences\n----------\n..[1]  M. Unser, A. Aldroubi and M. Eden.\n       \"B-Spline Signal Processing: Part I-Theory,\"\n       IEEE Transactions on Signal Processing 41(2):821-832 (1993).\n..[2]  M. Unser, A. Aldroubi and M. Eden.\n       \"B-Spline Signal Processing: Part II-Efficient Design and Applications,\"\n       IEEE Transactions on Signal Processing 41(2):834-848 (1993).\n..[3]  M. Unser.\n       \"Splines: A Perfect Fit for Signal and Image Processing,\"\n       IEEE Signal Processing Magazine 16(6):22-38 (1999).\n\nParameters\n----------\ninput : (..., *spatial) tensor\n    Input image.\ninterpolation : int or sequence[int], default=1\n    Interpolation order.\nbound : BoundType or sequence[BoundType], default='dct1'\n    Boundary conditions.\ndim : int, default=-1\n    Number of spatial dimensions\ninplace : bool, default=False\n    Process the volume in place.\n\nReturns\n-------\noutput : (..., *spatial) tensor\n    Coefficient image.\n\"\"\"\n```\n\n```python\ninterpol.resize(\n    image, \n    factor=None, \n    shape=None, \n    anchor='c',\n    interpolation=1, \n    prefilter=True\n)\n\"\"\"Resize an image by a factor or to a specific shape.\n\nNotes\n-----\n.. A least one of `factor` and `shape` must be specified\n.. If `anchor in ('centers', 'edges')`, exactly one of `factor` or\n   `shape must be specified.\n.. If `anchor in ('first', 'last')`, `factor` must be provided even\n   if `shape` is specified.\n.. Because of rounding, it is in general not assured that\n   `resize(resize(x, f), 1/f)` returns a tensor with the same shape as x.\n\n        edges          centers          first           last\n    e - + - + - e   + - + - + - +   + - + - + - +   + - + - + - +\n    | . | . | . |   | c | . | c |   | f | . | . |   | . | . | . |\n    + _ + _ + _ +   + _ + _ + _ +   + _ + _ + _ +   + _ + _ + _ +\n    | . | . | . |   | . | . | . |   | . | . | . |   | . | . | . |\n    + _ + _ + _ +   + _ + _ + _ +   + _ + _ + _ +   + _ + _ + _ +\n    | . | . | . |   | c | . | c |   | . | . | . |   | . | . | l |\n    e _ + _ + _ e   + _ + _ + _ +   + _ + _ + _ +   + _ + _ + _ +\n\nParameters\n----------\nimage : (batch, channel, *inshape) tensor\n    Image to resize\nfactor : float or list[float], optional\n    Resizing factor\n    * > 1 : larger image <-> smaller voxels\n    * < 1 : smaller image <-> larger voxels\nshape : (ndim,) list[int], optional\n    Output shape\nanchor : {'centers', 'edges', 'first', 'last'} or list, default='centers'\n    * In cases 'c' and 'e', the volume shape is multiplied by the\n      zoom factor (and eventually truncated), and two anchor points\n      are used to determine the voxel size.\n    * In cases 'f' and 'l', a single anchor point is used so that\n      the voxel size is exactly divided by the zoom factor.\n      This case with an integer factor corresponds to subslicing\n      the volume (e.g., `vol[::f, ::f, ::f]`).\n    * A list of anchors (one per dimension) can also be provided.\ninterpolation : int or sequence[int], default=1\n    Interpolation order.\nprefilter : bool, default=True\n    Apply spline pre-filter (= interpolates the input)\n\nReturns\n-------\nresized : (batch, channel, *shape) tensor\n    Resized image\n\n\"\"\"\n```\n\n## License\n\ntorch-interpol is released under the MIT license.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torch-interpol",
    "package_url": "https://pypi.org/project/torch-interpol/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/torch-interpol/",
    "project_urls": {
      "Source Code": "https://github.com/balbasty/torch-interpol"
    },
    "release_url": "https://pypi.org/project/torch-interpol/0.2.1/",
    "requires_dist": [
      "torch (>=1.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "High-order spline interpolation in PyTorch",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16304712,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "300c45057e8de87e043f0816a9bcf86670df0144b65cd7bd96b4876f8a1222ca",
          "md5": "4333f50ab14eeb31960705f23d2d29e7",
          "sha256": "8d13477bbf975d8cfd7f846d9684266f743ea358667b9ecdc5964db0f8b1edae"
        },
        "downloads": -1,
        "filename": "torch_interpol-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4333f50ab14eeb31960705f23d2d29e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31311,
        "upload_time": "2022-07-05T14:16:40",
        "upload_time_iso_8601": "2022-07-05T14:16:40.970101Z",
        "url": "https://files.pythonhosted.org/packages/30/0c/45057e8de87e043f0816a9bcf86670df0144b65cd7bd96b4876f8a1222ca/torch_interpol-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6797c85c1362973bae73fc488e255b29f452e26acdc34d814428884621bcb7d7",
          "md5": "cd3fe00f870b4ca95b3c45714ab6628d",
          "sha256": "c9adb6ce9b899571726d29fd9914acee5d7afbca51a45e4d2f1eb08c53e8129b"
        },
        "downloads": -1,
        "filename": "torch-interpol-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cd3fe00f870b4ca95b3c45714ab6628d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45026,
        "upload_time": "2022-07-05T14:16:42",
        "upload_time_iso_8601": "2022-07-05T14:16:42.890521Z",
        "url": "https://files.pythonhosted.org/packages/67/97/c85c1362973bae73fc488e255b29f452e26acdc34d814428884621bcb7d7/torch-interpol-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07ab39d780c4622d6b6cb064be453c73bb44e408fa1f7f45b5034aec796c9b21",
          "md5": "0ab7c04ab15f6fc3b559b1f596efef39",
          "sha256": "0acb695c779ed566b7cd9abbb43f52fc29775e005aa0964865f42fb0c82184c2"
        },
        "downloads": -1,
        "filename": "torch_interpol-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ab7c04ab15f6fc3b559b1f596efef39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31393,
        "upload_time": "2022-07-05T16:37:13",
        "upload_time_iso_8601": "2022-07-05T16:37:13.182772Z",
        "url": "https://files.pythonhosted.org/packages/07/ab/39d780c4622d6b6cb064be453c73bb44e408fa1f7f45b5034aec796c9b21/torch_interpol-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "363cc13a80625daa6da07668104172c9a9e3860c92279d82c534ecee10d2eb2d",
          "md5": "f9988625778dbfbabf8072bbb81dcbd4",
          "sha256": "58a013ba3c7a5078d75b17dab70f186f400d35adca6586123598b3fd1c3b5c16"
        },
        "downloads": -1,
        "filename": "torch-interpol-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f9988625778dbfbabf8072bbb81dcbd4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45107,
        "upload_time": "2022-07-05T16:37:15",
        "upload_time_iso_8601": "2022-07-05T16:37:15.342761Z",
        "url": "https://files.pythonhosted.org/packages/36/3c/c13a80625daa6da07668104172c9a9e3860c92279d82c534ecee10d2eb2d/torch-interpol-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4d2aa9ec5e23a5cd8de8c6e91da12ba3296f05f12e8e237df45ff62d9f70c20",
          "md5": "f3111e17a1a2de3187659a50a93d22e4",
          "sha256": "f2e874d8a579bbf69ee23551563a19e4525c32e2c6d7fbd85f801827e38c98c2"
        },
        "downloads": -1,
        "filename": "torch_interpol-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3111e17a1a2de3187659a50a93d22e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.6",
        "size": 32948,
        "upload_time": "2022-10-21T16:06:00",
        "upload_time_iso_8601": "2022-10-21T16:06:00.556532Z",
        "url": "https://files.pythonhosted.org/packages/a4/d2/aa9ec5e23a5cd8de8c6e91da12ba3296f05f12e8e237df45ff62d9f70c20/torch_interpol-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ac197670be37113a983358039f4e7b1a1ba7c2db90926fce0e4698127501382",
          "md5": "24469bc85292ad6ef482e87b3322f689",
          "sha256": "9004e22522d013402bb757ab782ff01861cd8a0b688fdc479f8f29eca4b76edf"
        },
        "downloads": -1,
        "filename": "torch-interpol-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "24469bc85292ad6ef482e87b3322f689",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 47007,
        "upload_time": "2022-10-21T16:06:02",
        "upload_time_iso_8601": "2022-10-21T16:06:02.032402Z",
        "url": "https://files.pythonhosted.org/packages/7a/c1/97670be37113a983358039f4e7b1a1ba7c2db90926fce0e4698127501382/torch-interpol-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7b6e205b1bbdb990656c7de9decdfdbeca14b3cea298fb46d4bdcf755423338",
          "md5": "e3dd87d04ba4722043989239b4bc93b7",
          "sha256": "8759b838fcc3924d3f0a2a989be0aecfd9f905e84bbf41bd23db894877932eb9"
        },
        "downloads": -1,
        "filename": "torch_interpol-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3dd87d04ba4722043989239b4bc93b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34297,
        "upload_time": "2023-01-04T17:12:46",
        "upload_time_iso_8601": "2023-01-04T17:12:46.186637Z",
        "url": "https://files.pythonhosted.org/packages/f7/b6/e205b1bbdb990656c7de9decdfdbeca14b3cea298fb46d4bdcf755423338/torch_interpol-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0de6fce5d02eec179bb155e89253ca8559954af3e73bb1d6d7bd0083ffcdf8c3",
          "md5": "cabd07f8ec081075a476c23f01a6903f",
          "sha256": "ee08c161b388f70e12e2086a2561677e94d16d6697ee17f872b863a9682c28a8"
        },
        "downloads": -1,
        "filename": "torch-interpol-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cabd07f8ec081075a476c23f01a6903f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 47002,
        "upload_time": "2023-01-04T17:12:47",
        "upload_time_iso_8601": "2023-01-04T17:12:47.626685Z",
        "url": "https://files.pythonhosted.org/packages/0d/e6/fce5d02eec179bb155e89253ca8559954af3e73bb1d6d7bd0083ffcdf8c3/torch-interpol-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7b6e205b1bbdb990656c7de9decdfdbeca14b3cea298fb46d4bdcf755423338",
        "md5": "e3dd87d04ba4722043989239b4bc93b7",
        "sha256": "8759b838fcc3924d3f0a2a989be0aecfd9f905e84bbf41bd23db894877932eb9"
      },
      "downloads": -1,
      "filename": "torch_interpol-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e3dd87d04ba4722043989239b4bc93b7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 34297,
      "upload_time": "2023-01-04T17:12:46",
      "upload_time_iso_8601": "2023-01-04T17:12:46.186637Z",
      "url": "https://files.pythonhosted.org/packages/f7/b6/e205b1bbdb990656c7de9decdfdbeca14b3cea298fb46d4bdcf755423338/torch_interpol-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0de6fce5d02eec179bb155e89253ca8559954af3e73bb1d6d7bd0083ffcdf8c3",
        "md5": "cabd07f8ec081075a476c23f01a6903f",
        "sha256": "ee08c161b388f70e12e2086a2561677e94d16d6697ee17f872b863a9682c28a8"
      },
      "downloads": -1,
      "filename": "torch-interpol-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cabd07f8ec081075a476c23f01a6903f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 47002,
      "upload_time": "2023-01-04T17:12:47",
      "upload_time_iso_8601": "2023-01-04T17:12:47.626685Z",
      "url": "https://files.pythonhosted.org/packages/0d/e6/fce5d02eec179bb155e89253ca8559954af3e73bb1d6d7bd0083ffcdf8c3/torch-interpol-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}