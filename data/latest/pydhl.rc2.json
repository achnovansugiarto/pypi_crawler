{
  "info": {
    "author": "SMACH Team",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "pyDHL\n===\n\nPython module to work with DHL REST Webservice integration.\n\n\n## pyDHL as module\n```\nimport pyDHL\n```\nBy running it as a module pyDHL will expose the following resources.\n\n### Package\n\nInputs:\n* `weight` (Mandatory): Package weight\n* `length` (Mandatory): Package length\n* `width` (Mandatory): Package width\n* `height` (Mandatory): Package height\n* `price` (Optional): Package price\n* `description` (Optional): Package description\n* `reference` (Optional): Package reference\n\n```\nfrom pyDHL import Package\n\npackage = Package(\n        weight=<package_weight>,\n        length=<package_length>,\n        width=<package_width>,\n        height=<package_height>\n    )]\n```\n\n### Person\n\nA person is a combination of a Contact and Address information. This class is used for both sender and recipient of the the package.\n\n> Rate request just needs shipment's Address.\n\n#### Address\nInputs:\n\n * `street_lines` (Mandatory): Person's address first line\n * `city` (Mandatory): Person's city\n * `postal_code` (Mandatory): Person's postal code\n * `country` (Mandatory): Person's country, Must oblige to the DHL's country codes.\n * `street_lines2` (Optional): Person's address second line. `'N/A'` by default.\n * `street_lines3` (Optional): Person's address third line.\n\n\n#### Contact\nInputs:\n* `name` (Mandatory): Person's name\n* `phone` (Mandatory): Person's phone\n* `email` (Optional): Person's email. `'null'` by default\n* `company` (Optional): Person's company. `name` by default\n\n### Shipment\nMandatory inputs:\n* `packages`: A list of Package\n* `sender` and `recipient`: Persons (or Address in rate request)\n\nIn order to build a correct Shipment, please refer to the documentation. Some parameters are set by default and others such as `SERVICE_TYPE` are set following\na set of conditions and properties of the Shipment itself.\n\n### Requests\nAll requests will have as input a valid Shipment object or a dict or dict-like structure.\n\nIn order to send requests to DHL Webservices you must first set credentials:\n```\nfrom pyDHL import requests\n\ncredentials = {\n  'account':  # your account number\n  'username':  # your username\n  'password':  # your password\n}\n\nrequests.set_credentials(credentials)\n```\n\nOptionally it is possible to set the 'sandbox' environment for testing purposes.\n```\nrequests.set_sandbox([True|False])  # use DHL's sandbox endpoints\n```\n\nThe result of every request is either the JSON response of the DHL endpoint or, if the requests was wrong, a JSON-like object if twith `error` and `message` keys describing the error.  \nEvery requests will update the shipment object given by input if the request was successful.\n\n\n#### Rate Request\nRate Request will return DHL’s product capabilities (products, services and estimated delivery time) and prices (where applicable) for a certain set of input data.\n\n* Input: Shipment\n* Output: JSON response. DHL Rate Request\n\n```\nfrom pyDHL.requests import rate\n\n# create a valid shipment\nresponse = rate(shipment)\n```\n\n\n#### Shipment Request\nThe key elements in the response of the Shipment Request will be a base64 encoded PDF label and the Shipment and Piece identification numbers, which you can use for tracking on the DHL web site.\n\n* Input: Shipment\n* Output: JSON response. DHL Shipment Request\n\n```\nfrom pyDHL.requests import shipment\n\n# create a valid shipment\nresponse = shipment(shipment)\n```\n\n\n#### Update Request\nThe updateShipment request allows for additional pieces to be added to a previously created shipment that has not been picked up by DHL Express/had a scan against it.\n\n* Input: Shipment\n* Output: JSON response. DHL Update Request\n\n```\nfrom pyDHL.requests import update\n\n# create a valid shipment\nresponse = update(shipment)\n```\n\n\n#### Tracking Request\nThe resulting response will provide tracking events at both the Shipment and/or Piece events corresponding to the DHL Waybill(s) submitted.\n\n* Input: Shipment\n* Output: JSON response. DHL Tracking Request\n\n```\nfrom pyDHL.requests import tracking\n\n# create a valid shipment\nresponse = tracking(shipment.id, level=[TRACKING_LAST|TRACKING_ALL])\n```\n\n## pyDHL's Command Line interface\n\nUse pyDHL as a command line program to set up a quick shipment\n```\npyDHL <option> <shipment_file> [mode]\n```\n\n\n### Options\nOptions flag gets mapped with each of the available requests:\n\n*   **-r RATE, --rate RATE**: Rate Request will return DHL’s product capabilities (products, services and estimated delivery time) and prices (where applicable) for a certain set of input data.\n\n*  **-s SHIPMENT, --shipment SHIPMENT**: The key elements in the response of the Shipment Request will be a base64 encoded PDF label and the Shipment and Piece identification numbers, which you can use for tracking on the DHL web site.\n\n*  **-u UPDATE, --update UPDATE**: The updateShipment request allows for additional pieces to be added to a previously created shipment that has not been picked up by DHL Express/had a scan against it.\n\n*  **-t TRACK, --track TRACK**: The resulting response will provide tracking events at both the Shipment and/or Piece events corresponding to the submitted DHL Waybill (Shipment id).\n\n*  **-p PICKUP, --pickup PICKUP**: The requestPickup request allows users to request standalone pickup requests for local and remote/import pickups.\n\n*  **-o OUTPUT, --output OUTPUT**: Output File\n\n*  **--sandbox**: Set sandbox mode\n\n\n### Shipment File\nFollowing every option there is a shipment file. This is a file that contains all necessary data to build and send requests to DHL. There is an example in `shipment.json`.\n\n### Mode\nBy default `pyDHL` will use DHL endpoints that will execute real shipments\nand other actions. For testing purposes and development there is a \"sandbox\" mode\nthat can be activated by adding `-snd|--sandbox` at the end of the command\n\n## Testing\nIn order to a successful testing, please edit `tests/config.py` file with valid\nDHL credentials for accessing HTTPS endpoints.\n\npyDHL uses pytest and coverage to execute tests and to check if everything was correctly executed.\n```\ncoverage run -m pytest\n```\n\nTests are separated between different kinds of shipments available:\n* National: Shipments with origin and source in the same country.\n* EU: Shipments coming from an country in Europe and with destination to a country in Europe.\n* International: None of the cases above.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "pablo.riutort@smachteam.com",
    "name": "pyDHL",
    "package_url": "https://pypi.org/project/pyDHL/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyDHL/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pyDHL/0.3/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "DHL REST Webservice integration",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5522767,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fd4f78d5197fe63418b51e854e546f0995a5674b1a607975763c907e2179393",
          "md5": "cf776db09f81fb1320cb506877acb13f",
          "sha256": "28b4f8ae4692a9ebb909339a1fa6de665dd242f5bc71c9a28e94d165bd5194e0"
        },
        "downloads": -1,
        "filename": "pyDHL-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf776db09f81fb1320cb506877acb13f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11393,
        "upload_time": "2019-07-12T11:13:59",
        "upload_time_iso_8601": "2019-07-12T11:13:59.234552Z",
        "url": "https://files.pythonhosted.org/packages/6f/d4/f78d5197fe63418b51e854e546f0995a5674b1a607975763c907e2179393/pyDHL-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51335fda799e780b54cac894136cae666fb02fb42ac2c9959a82f8dc71d10257",
          "md5": "476438708fbacf0256e3c4ecd4a27d24",
          "sha256": "88a2da7a647da1e5dc41abcb8ecddbdd17249ce3925d3343d324b7648c734d96"
        },
        "downloads": -1,
        "filename": "pyDHL-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "476438708fbacf0256e3c4ecd4a27d24",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11373,
        "upload_time": "2019-07-12T11:15:15",
        "upload_time_iso_8601": "2019-07-12T11:15:15.002487Z",
        "url": "https://files.pythonhosted.org/packages/51/33/5fda799e780b54cac894136cae666fb02fb42ac2c9959a82f8dc71d10257/pyDHL-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7e3a02e22d400b25526c0b0b8d3bc5199eba755e0b10fd4d4dba9f2f649df69",
          "md5": "9c7f6557028a730498490900da52f273",
          "sha256": "d2ed4987699732fceb54128ffbbe0fc4205a2b69fda92a06f781b266ebfd2ea3"
        },
        "downloads": -1,
        "filename": "pyDHL-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9c7f6557028a730498490900da52f273",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12679,
        "upload_time": "2019-07-12T11:15:16",
        "upload_time_iso_8601": "2019-07-12T11:15:16.994766Z",
        "url": "https://files.pythonhosted.org/packages/f7/e3/a02e22d400b25526c0b0b8d3bc5199eba755e0b10fd4d4dba9f2f649df69/pyDHL-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51335fda799e780b54cac894136cae666fb02fb42ac2c9959a82f8dc71d10257",
        "md5": "476438708fbacf0256e3c4ecd4a27d24",
        "sha256": "88a2da7a647da1e5dc41abcb8ecddbdd17249ce3925d3343d324b7648c734d96"
      },
      "downloads": -1,
      "filename": "pyDHL-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "476438708fbacf0256e3c4ecd4a27d24",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11373,
      "upload_time": "2019-07-12T11:15:15",
      "upload_time_iso_8601": "2019-07-12T11:15:15.002487Z",
      "url": "https://files.pythonhosted.org/packages/51/33/5fda799e780b54cac894136cae666fb02fb42ac2c9959a82f8dc71d10257/pyDHL-0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7e3a02e22d400b25526c0b0b8d3bc5199eba755e0b10fd4d4dba9f2f649df69",
        "md5": "9c7f6557028a730498490900da52f273",
        "sha256": "d2ed4987699732fceb54128ffbbe0fc4205a2b69fda92a06f781b266ebfd2ea3"
      },
      "downloads": -1,
      "filename": "pyDHL-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "9c7f6557028a730498490900da52f273",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12679,
      "upload_time": "2019-07-12T11:15:16",
      "upload_time_iso_8601": "2019-07-12T11:15:16.994766Z",
      "url": "https://files.pythonhosted.org/packages/f7/e3/a02e22d400b25526c0b0b8d3bc5199eba755e0b10fd4d4dba9f2f649df69/pyDHL-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}