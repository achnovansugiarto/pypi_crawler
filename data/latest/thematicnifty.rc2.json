{
  "info": {
    "author": "Dr. Kumar B V",
    "author_email": "kumar.bv@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Package niftythematic\nDate: 10-Apr-2022\n\n## Installation\n\nUse the following for importing: ```from thematicnifty import tn```\n\n## Prerequisites\nThe ```pandas```  package will be imported as ```pd```.\n\n## Features\nThis is a comprehensive app that will allow you to get the list of stocks in National Stock Exchange (NSE) India that is belonging to different groups of main themes such as Broad Market Indices (```bmi```), or Sectorial Indices (```secti```), Strategy Indices (```strati```) or Thematic Indices (```themei```). From each of the group theme, you can pull different list of stocks from different groups.\n\nFor example, from the ```bmi``` theme, you can get the stocks of the usual groups such as **NIFTY_50**, **NIFTY_100**, **NIFTY_200**, etc. These are the sub-themes of the main ```bmi``` theme. A complete list of themes under ```bmi``` group is provided at the end of this document.\n\n\nFrom ```secti```, you can get the stocks belonging to different sectors such as **NIFTY_AUTO**, **NIFTY_IT**, **NIFTY_PHARMA**, **NIFTY_FMCG**, etc. These are the sub-themes of the main ```secti``` theme. A complete list of themes under ```secti``` group is provided at the end of this document.\n\nFrom ```strati```, you can you can extract stocks belonging to the groups such as **NIFTY50_EQUAL_WEIGHT**, **NIFTY50_VALUE_20**, **NIFTY_ALPHA_50**, etc. These are the sub-themes of the main ```strati``` theme. A complete list of themes under ```strati``` group is provided at the end of this document.\n\nFinally, from ```themei```, you can fetch stocks belonging to groups such as **NIFTY100_LIQUID_15**, **NIFTY_CPSE**, **NIFTY_MIDCAP_LIQUID_15**, **NIFTY_MNC**, etc. These are the sub-themes of the main ```themei``` theme. A complete list of themes under ```themei``` group is provided at the end of this document.\n\n# Method Design\nThis is designed to be simple, and there is a single method with three parameters.\n\n```getThematicNiftyStocks(main_item, sub_item, return_output)```\n\n## Description of the Method\nThe ```getThematicNiftyStocks()``` method takes just 3 string inputs:\n\n*   group_name\n*   group_item\n*   return_type\n\nDescription of each of the above is given hereunder.\n\n### group_name\nThe main item can be one of the following four - ```bmi_group``` (default), ```secti_group```, ```strati_group``` or ```themei_group```. As already indicated, ```bmi``` stands for *Broad Market Indices*, ```secti``` stands for *Sectorial Indices*, ```strati``` stands for *Strategic Indices*, and ```themei``` stands for *Thematic Indices*.\n\n### group_item\nThe sub_items are different for different main_item. For ```bmi```, the sub_item can be one of the following 16. The default value is 'NIFTY_50'.\n\n1.  NIFTY_MIDSMALLCAP_400\n2.  NIFTY_200\n3.  NIFTY_LARGEMIDCAP_250\n4.  NIFTY_TOTAL_MARKET\n5.  *NIFTY_50*           (default)\n6.  NIFTY_SMALLCAP_50\n7.  NIFTY_SMALLCAP_250\n8.  NIFTY_SMALLCAP_100\n9.  NIFTY_100\n10. NIFTY_MIDCAP_150\n11. NIFTY_MIDCAP_SELECT\n12. NIFTY_NEXT_50\n13. NIFTY500_MULTICAP_50_25_25\n14. NIFTY_MICROCAP_250\n15. NIFTY_MIDCAP_50\n16. NIFTY_MIDCAP_100'\n\n\nFor ```secti```, the sub_item can be one of the following 16: The default value is 'NIFTY_BANK'.\n\n1.  NIFTY_PHARMA\n2.  *NIFTY_BANK* (default)\n3.  NIFTY_PSU_BANK\n4.  NIFTY_FMCG\n5.  NIFTY_CONSUMER_DURABLES\n6.  NIFTY_PRIVATE_BANK\n7.  NIFTY_AUTO\n8.  NIFTY_HEALTHCARE_INDEX\n9.  NIFTY_ENERGY\n10. NIFTY_METAL\n11. NIFTY_OIL_and_GAS\n12. NIFTY_REALTY\n13. NIFTY_FINANCIAL_SERVICES_25_50\n14. NIFTY_FINANCIAL_SERVICES\n15. NIFTY_MEDIA\n16. NIFTY_IT\n\n\nFor ```strati```, the sub_item can be one of the following 10: The default is 'NIFTY_ALPHA_50'.\n\n1.  NIFTY100_LOW_VOLATILITY_30\n2.  NIFTY100_QUALITY_30\n3.  NIFTY50_VALUE_20\n4.  NIFTY_MIDCAP150_QUALITY_50\n5.  *NIFTY_ALPHA_50* (default)\n6.  NIFTY200_QUALITY_30\n7.  NIFTY100_EQUAL_WEIGHT\n8.  NIFTY_ALPHA_LOW_VOLATILITY_30\n9.  NIFTY200_MOMENTUM_30\n10. NIFTY_DIVIDEND_OPPORTUNITIES_50\n\n\nFinally, for ```themei```, the sub_item can be one of the following 10: The default value is 'NIFTY100_LIQUID_15'.\n\n1.  NIFTY100_ESG\n2.  NIFTY_INDIA_CONSUMPTION\n3.  NIFTY_SERVICES_SECTOR\n4.  NIFTY_INFRASTRUCTURE\n5.  NIFTY_INDIA_DIGITAL\n6.  NIFTY_PSE\n7.  *NIFTY100_LIQUID_15* (default)\n8.  NIFTY_INDIA_MANUFACTURING\n9.  NIFTY_CPSE\n10. NIFTY_MIDCAP_LIQUID_15\n11. NIFTY_GROWTH_SECTORS_15\n12. NIFTY_COMMODITIES\n13. NIFTY_MNC'\n\n\n### return_type\nAs indicated earlier, return_type can take one of the following options:\n\n1.   ```'as_list'```\n2.   ```'as_list_with_NS'```\n3.   ```'as_text'```\n4.   ```'as_text_with_NS'``` (default)\n\n### Default values for the method parameters\nThe method has been designed with the following default parameters:\n\n1.   group_name = ```'bmi_group'```\n2.   group_item = ```'NIFTY_50'```\n3.   return_type = ```'as_text_with_NS'```\n\n\n# Method Usage\n## Example for ```bmi_group```\n\nRun the getThematicNiftyStocks() method to capture the list of stocks (as a text, as a list, as a text witn .NS and as a text with .NS extension) as follows:\n\n```\nstocks = getThematicNiftyStocks(group_name='secti_group', group_item='NIFTY_IT', return_type='as_text')\n```\n\nThe variable stocks will be either a list or a text based on what you want the list of stocks to be presented with. For example,\nif you run the following method,\n\n```stocks = getThematicNiftyStocks('bmi_group', 'NIFTY_50', 'as_text_with_ns')```\n\nthe output will be the following:\n\nOutput: ```NTPC.NS INDUSINDBK.NS BPCL.NS SBIN.NS POWERGRID.NS HDFCBANK.NS HDFCLIFE.NS ADANIPORTS.NS BAJAJ-AUTO.NS COALINDIA.NS SHREECEM.NS M&M.NS BAJFINANCE.NS HDFC.NS KOTAKBANK.NS ONGC.NS TATACONSUM.NS TATAMOTORS.NS MARUTI.NS LT.NS UPL.NS HINDUNILVR.NS WIPRO.NS BAJAJFINSV.NS ICICIBANK.NS AXISBANK.NS DRREDDY.NS ASIANPAINT.NS EICHERMOT.NS TATASTEEL.NS BRITANNIA.NS ULTRACEMCO.NS NESTLEIND.NS JSWSTEEL.NS TCS.NS RELIANCE.NS HCLTECH.NS GRASIM.NS ITC.NS BHARTIARTL.NS SUNPHARMA.NS INFY.NS HINDALCO.NS TITAN.NS CIPLA.NS APOLLOHOSP.NS DIVISLAB.NS TECHM.NS SBILIFE.NS HEROMOTOCO.NS```\n\n## Example for ```secti_group```\n\n```stocks = getThematicNiftyStocks(group_name='secti_group', group_item='NIFTY_IT', return_type='as_text')```\n\nOutput: ```WIPRO TCS LTTS HCLTECH INFY LTI MINDTREE TECHM MPHASIS COFORGE```\n\n\n## Example for ```strati_group```\n\n```stocks = getThematicNiftyStocks(group_name='strati_group', group_item='NIFTY50_VALUE_20', return_type='as_list_with_NS')```\n\nOutput: ```['NTPC.NS', 'BPCL.NS', 'POWERGRID.NS', 'COALINDIA.NS', 'BAJAJ-AUTO.NS', 'ONGC.NS', 'HINDUNILVR.NS', 'WIPRO.NS', 'LT.NS', 'UPL.NS', 'BRITANNIA.NS', 'GRASIM.NS', 'TCS.NS', 'HCLTECH.NS', 'JSWSTEEL.NS', 'ITC.NS', 'INFY.NS', 'HINDALCO.NS', 'TECHM.NS', 'HEROMOTOCO.NS']```\n\n\n## Example for ```themei_group```\n\n```stocks = getThematicNiftyStocks(group_name='themei_group', group_item='NIFTY_MIDCAP_LIQUID_15', return_type='as_list')```\n\nOutput: ```['FEDERALBNK', 'RECLTD', 'BEL', 'IRCTC', 'AUBANK', 'ZEEL', 'SRTRANSFIN', 'TATAPOWER', 'AUROPHARMA', 'ASHOKLEY', 'TVSMOTOR', 'GODREJPROP', 'BHARATFORG', 'MPHASIS', 'BALKRISIND']```\n\nThis package is designed in such a way that, even if you provide some wrong inputs, the package will provide 'default' for each of the theme, which is mentioned above. It is essential that you capture the return as a 'text' or 'list' (with or without '.NS' extension). So, please note the debug comments while you capture ```stocks``` via the invocation of ```getThematicNiftyStocks() ``` method.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "thematicnifty",
    "package_url": "https://pypi.org/project/thematicnifty/",
    "platform": null,
    "project_url": "https://pypi.org/project/thematicnifty/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/thematicnifty/0.1.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A small package that helps you in fetching list of stocks from National Stock Exchange (NSE) based on main_item, sub_item values and returnOutput.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13479313,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4986e0d850046c793d1d34841b54096a54f4efb7e55d139466df427f272a92f9",
          "md5": "6daf1d494fb77ca1548d19692b1542b1",
          "sha256": "ba0dc48c7dcdc21c5ca0cfde93d64f7d44cf0a8ff126d8d4443270851d49991d"
        },
        "downloads": -1,
        "filename": "thematicnifty-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6daf1d494fb77ca1548d19692b1542b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16598,
        "upload_time": "2022-04-10T14:17:32",
        "upload_time_iso_8601": "2022-04-10T14:17:32.632352Z",
        "url": "https://files.pythonhosted.org/packages/49/86/e0d850046c793d1d34841b54096a54f4efb7e55d139466df427f272a92f9/thematicnifty-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f7f6fbfdf6587230bdfdd818e0d0ad14c59a3b9bdbcc7d3d568fc3979be0ab0",
          "md5": "30c31cac0571270e56c37acd169bcc62",
          "sha256": "1829771be6c9328b27250c9f4da8598a58bd13e5045bf253c8959108bd2ea663"
        },
        "downloads": -1,
        "filename": "thematicnifty-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "30c31cac0571270e56c37acd169bcc62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18373,
        "upload_time": "2022-04-10T14:17:34",
        "upload_time_iso_8601": "2022-04-10T14:17:34.842916Z",
        "url": "https://files.pythonhosted.org/packages/9f/7f/6fbfdf6587230bdfdd818e0d0ad14c59a3b9bdbcc7d3d568fc3979be0ab0/thematicnifty-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51058f00d3273dc3b8576207e5c5f70b8d107f5d7bcf149412e6c8e41de513f7",
          "md5": "18f068b722d8c162d4576dbfd7dfc37f",
          "sha256": "501fd18fedf7f4d845de7331843c5c997a3edd15abf2ec3b12d0baad0ced4eb3"
        },
        "downloads": -1,
        "filename": "thematicnifty-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18f068b722d8c162d4576dbfd7dfc37f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16904,
        "upload_time": "2022-04-11T15:35:18",
        "upload_time_iso_8601": "2022-04-11T15:35:18.289264Z",
        "url": "https://files.pythonhosted.org/packages/51/05/8f00d3273dc3b8576207e5c5f70b8d107f5d7bcf149412e6c8e41de513f7/thematicnifty-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ab7065726494c7d81b26e56991f808977eb4b26780cfd5185b8bf49e1262e3c",
          "md5": "739114cb859508f0b2f6e052536435dd",
          "sha256": "6cc9181972bca4a348aafecba003353df646c215516e0b4f1f389de56776cd6b"
        },
        "downloads": -1,
        "filename": "thematicnifty-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "739114cb859508f0b2f6e052536435dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18974,
        "upload_time": "2022-04-11T15:35:20",
        "upload_time_iso_8601": "2022-04-11T15:35:20.489046Z",
        "url": "https://files.pythonhosted.org/packages/6a/b7/065726494c7d81b26e56991f808977eb4b26780cfd5185b8bf49e1262e3c/thematicnifty-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51058f00d3273dc3b8576207e5c5f70b8d107f5d7bcf149412e6c8e41de513f7",
        "md5": "18f068b722d8c162d4576dbfd7dfc37f",
        "sha256": "501fd18fedf7f4d845de7331843c5c997a3edd15abf2ec3b12d0baad0ced4eb3"
      },
      "downloads": -1,
      "filename": "thematicnifty-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "18f068b722d8c162d4576dbfd7dfc37f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 16904,
      "upload_time": "2022-04-11T15:35:18",
      "upload_time_iso_8601": "2022-04-11T15:35:18.289264Z",
      "url": "https://files.pythonhosted.org/packages/51/05/8f00d3273dc3b8576207e5c5f70b8d107f5d7bcf149412e6c8e41de513f7/thematicnifty-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ab7065726494c7d81b26e56991f808977eb4b26780cfd5185b8bf49e1262e3c",
        "md5": "739114cb859508f0b2f6e052536435dd",
        "sha256": "6cc9181972bca4a348aafecba003353df646c215516e0b4f1f389de56776cd6b"
      },
      "downloads": -1,
      "filename": "thematicnifty-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "739114cb859508f0b2f6e052536435dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 18974,
      "upload_time": "2022-04-11T15:35:20",
      "upload_time_iso_8601": "2022-04-11T15:35:20.489046Z",
      "url": "https://files.pythonhosted.org/packages/6a/b7/065726494c7d81b26e56991f808977eb4b26780cfd5185b8bf49e1262e3c/thematicnifty-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}