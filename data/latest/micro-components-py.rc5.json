{
  "info": {
    "author": "Dan Borufka",
    "author_email": "danborufka@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Topic :: Utilities"
    ],
    "description": "Micro Components for Python\n===========================\n\nLightweight library to create components that can automagically be used as either CLI or as native classes in other programming languages\n\n[![pip][pip-badge]][pip] [![pip][travis-badge]][pip]\n\n[pip]: https://www.pypi.org/project/micro-components\n[pip-badge]: https://badge.fury.io/py/micro-components.svg\n[travis-badge]: https://travis-ci.com/polygoat/micro-components-py.svg?token=Lq7sM5SEXeYPspCGGGdD&branch=main\n\n_The same package is available [for Node][]. [Check it out][] if you want Python and Node components talking to each other!_\n\n[for Node]: https://github.com/polygoat/micro-components-js\n[Check it out]: https://github.com/polygoat/micro-components-js\n\n## Goals & Design\n\nOften times, which programming language I pick is predetermined by technical requirements and the resources available in that language. In many cases I have to use a mixture of nodejs, Python, and bash scripts, and they all have to talk to each other.\n\nThe intent of this library is to provide a utility class turning [Singleton classes][] into command line interfaces and providing an intuitive class interface between different programming languages. Since a lot of the code I produce is either Node or Python, I started by creating components for those two languages.\n\nThe beauty of this is that components have a simple JSON interface to talk to each other, irregardless of the programming language. Any other language implementing the Component interface can now be imported as if it were a native class.\n\n[Singleton classes]: https://python-3-patterns-idioms-test.readthedocs.io/en/latest/Singleton.html\n\n## Installation\n\nIn your terminal run:\n\n```bash\n$ pip install micro-components-py\n```\n\n## Usage\n\nTo run a component from the terminal, you need the following structure at minimum:\n\n```python\nfrom micro_components import Component\n\nclass TaskRunner(Component):\n\tname = 'task_runner'\n\n\tdef run(task_id):\n\t\treturn { 'task_id': task_id, 'status': 'running' }\n\nTaskRunner.export_as_cli();\n```\n\nTo then be able to run one of the following commands from your terminal:\n\n```bash\n$ taskrunner.py run 95\n# output: { \"task_id\": 95, \"status\": \"running\"  }\n```\n\n```bash\n$ taskrunner.py run --task-id=\"hello world\"\n# output: { \"task_id\": \"hello world\", \"status\": \"running\"  }\n```\n\n```bash\n$ taskrunner.py run --task-id=\"[5,9,true]\"\n# output: { \"task_id\": [5, 9, true], \"status\": \"running\"  }\n```\n\n**Example of Python and Node components interacting:**\n\n_Consider this JavaScript component called `task_logger.js`:_\n\n```javascript\nconst fs = require('fs');\nconst { Component } = require('micro-components-js');\n\nconst TaskLogger = Component({\n\tname: 'task_logger',\n\n\tlog(infos) {\n\t\tfs.writeFileSync('log.json', infos);\n\t}\n});\n\nTaskLogger.export_to_cli();\n```\n\nWe can now use TaskLogger from within our `task_runner.py` code:\n\n```python\nfrom micro_components import Component\nTaskLogger = Component.from_cli('./task_logger.js')\n\nclass TaskRunner(Component):\n\tname = 'task_runner'\n\n\trun(task_id):\n\t\tresult = { 'task_id': task_id, 'status': 'running' }\n\t\tTaskLogger.log(result)\n\t\treturn result\n\nTaskRunner.export_as_cli()\n```\n\n## Creation from Terminal\nYou can use the `micro-components` CLI to create a component like so:\n\n**In your terminal:**\n```bash\n$ micro-components create \"My Component\"\n```\n\nThis will create a skeleton component file in your current directory.\n\n## Naming Convention\nComponents have a snake_cased filename and hold the same name as a property at minimum:\n\n```python\nfrom micro-components import Component\n\nclass SomeComponent(Component):\n\tname = 'some_component'\n```\n\nClass names follow usual conventions of StartCase.\n\n```python\nfrom components.intent_matcher import IntentMatcher\n```\n\n## Exporting\nYou can use one of two export methods to either import components as modules \"inline\" or call their methods from the command line.\n\n### As CLI\nTo turn a component into a CLI, use the command `export_as_cli()`:\n\n```python\nSomeComponent.export_as_cli()\n```\n\n## Manual Creation\nIf you create your component by hand, make sure your file is executable by adding a Shebang at the top of it…\n\n```python\n#!/usr/bin/env python3\n```\n\n…and by giving it execution permissions (in your **terminal**)…\n```bash\n$ chmod +x ./components/some_component.py\n```\n\n…to then run the methods:\n```bash\n$ ./components/some_component.py fetch_data \"parameter\" 15 \"{ \\\"sub-param\\\": \\\"value\\\" }\"\n```\n\nThe Component class will automagically look at the parameter defaults of your component's methods and try to parse parameters passed through the CLI accordingly. \n\nConsider the following example component:\n```python\nclass RecipeFetcher(Component):\n\tname = 'recipe_fetcher'\n\tcounts = 0\n\n\tdef get_ingredients(ingredient_name, max_count=10, normalize=True, options={}):\n\t\t...\n\nRecipeFetcher.export_as_cli();\n```\nWe pass the following arguments via CLI:\n```bash\n$ ./components/recipe_fetcher.py get_ingredients \"Onion Soup\" 15 false \"{ \\\"pepper\\\": false }\"\n```\n\nThe component class will automatically parse 15, false, and the passed JSON string as JSON and use the true datatypes.\n\n#### Named Arguments\nYou can pass named arguments by prefixing the parameter names with two hyphens instead:\n\n```bash\n$ /components/recipe_fetcher.py get_ingredients --ingredient_name \"Mangosteen\" --normalize=1\n```\n\nProperties for the component class can be passed the same way. Arguments that don't match method names will be applied as properties. Any hyphens will be replaced by underscores, meaning `--user-id` will be read as `user_id`.\n\n```bash \n$ /components/recipe_fetcher.py get_ingredients --user-id=1337 --ingredient_name=\"Capers\"\n``` \n\n#### Method Chaining\nMethods can be chained using the chain notation (beware that spacing is crucial):\n\n```bash\n$ /components/recipe_fetcher.py [ load_ingredients \"all\" , get_ingredients \"Pepper\" 12 ]\n```\nwill first run ```RecipeFetcher.load_ingredients(\"all\")```, then ```RecipeFetcher.get_ingredients(\"Pepper\", 12)``` and return a dictionary of results for each execution.\n\n### Caching\nBefore using any of the built-in caching functionality, make sure you have a directory called `data/caches` to store those in.\n\n_TODO: add documentation for caching decorators_ \n\nA JSON cache will be auto-generated in `/data/caches/<component_name>.cache.json`.\n\n## API\nComponents provide the following interface:\n\n### Events\nComponents and utility classes all emit events that can be listened to. You can attach event listeners using the `on` method.\n\n```python\nRecipeFetcher.on('spawn', lambda self: print('RecipeFetcher loaded.') or self)\n```\n\nThe following events are available on every component:\n\n| Event Name | Triggered … | passed arguments |\n| ---------- | ----------- | ---------------- |\n| `spawn` | once on initialization | `self` instance, needs to be returned back |\n| `init` | every time the component is being updated using `ComponentName.init(...)` | `self` instance, `options` object  |\n| `cache` | every time a method's cache is being hit | `key` used to retrieve value from cache |\n| `call_from_cli` | once upon calling the component from the command line | `command` is the called method, `args` the passed arguments, `verbose` to turn console output on/off |\n\nTo _trigger_ (e.g. your own) events, use the `trigger` method:\n\n```python\nRecipeFetcher.trigger('recipe_outdated', ['some', 'arguments'])\n\n```\n\nIf the event handler returned something, it will be passed through trigger as return value.\n\n```python\nnew_recipe = RecipeFetcher.trigger('recipe_outdated', [old_recipe])\n\n```\n\n----------\n\n### Properties\nYou can access non-callable properties from the CLI using the component module's built-in get and set methods in your terminal:\n```bash\n$ ./components/recipe_fetcher.py get counts \t# returns 1\n```\n```bash\n$ ./components/recipe_fetcher.py set counts 3\n```\n\n----------\n### Shortcuts\nAll components automatically get a `help` method, so if uncertain about properties run `./components/recipe_fetcher.py help`.\nAll methods automatically get a `--help` directive, so if uncertain about parameters run `./components/recipe_fetcher.py get_ingredients --help`.\n\n### Integration\nYou can call components written in Javascript from Python and vice-versa as if they were written in the same language using the `Component` module.\n\nOur previous _RecipeFetcher_ example was written in Javascript, but now we want to use it in Python. Here's how:\n\n```python\nfrom micro_components import Component\n\nRecipeFetcher = Component.from_cli('./components/recipe_fetcher.js');\ningredients = RecipeFetcher.get_ingredients(\"Onion Soup\", 15, False, { 'pepper': False })\n\n```\n\nTo access properties, use the built-in property getters and setters (see \"Properties\"), like so:\n\n```python\nfrom micro_components import Component\n\nRecipeFetcher = Component.from_cli('./components/recipe_fetcher.py')\ncounts = RecipeFetcher.get(\"counts\")\n\n```\n\n## Testing\n\nThis package comes with a set of standard unittest cases located in `[tests/test_micro-components.py][]`\n\nRun them using:\n```bash\n$ pytest\n```\n\nor\n```bash\n$ python3 ./tests/test_micro-components.py\n```\n\n[tests/test_micro-components.py]: https://github.com/polygoat/micro-components-py/tree/main/tests/test_micro-components.py\n\n\n## Examples\n\nCheckout the [components folder][] in the repo for some examples. The CLI used to create component templates for example is a component itself.\n\n[components folder]: https://github.com/polygoat/micro-components-py/tree/main/components\n\n\nLicense\n-------\n[MIT License][]\n\n[MIT License]: https://github.com/polygoat/micro-components-py/blob/main/LICENSE\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/polygoat/micro-components-py",
    "keywords": "components",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micro-components-py",
    "package_url": "https://pypi.org/project/micro-components-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/micro-components-py/",
    "project_urls": {
      "Homepage": "https://github.com/polygoat/micro-components-py"
    },
    "release_url": "https://pypi.org/project/micro-components-py/0.2.3/",
    "requires_dist": [
      "pydash",
      "termcolor",
      "colorama",
      "mako"
    ],
    "requires_python": "",
    "summary": "Lightweight library to create components that can automagically be used as either CLI or as native classes in other programming languages",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8822571,
  "releases": {
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b5fd3a4229f1a97add3577180a51c1b1756ce5741bd50c7a5fbf075fb96140a",
          "md5": "8cdec3b0a69f3a71c30f739541e794d5",
          "sha256": "b5290e40b9c4d77f27584890eb1894244c5bf532768f74a43f591ed0c5a4d5cc"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.1.8-py3.7.egg",
        "has_sig": false,
        "md5_digest": "8cdec3b0a69f3a71c30f739541e794d5",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 31685,
        "upload_time": "2020-12-02T17:16:15",
        "upload_time_iso_8601": "2020-12-02T17:16:15.783212Z",
        "url": "https://files.pythonhosted.org/packages/1b/5f/d3a4229f1a97add3577180a51c1b1756ce5741bd50c7a5fbf075fb96140a/micro_components_py-0.1.8-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "941453931403b2152c8cadf1c5ac1f33f9b52f5e0d104de24298cd7a0e85175d",
          "md5": "25bd2545bb9742ca5f2d938bb4138549",
          "sha256": "e8073d2a9ec646857f91ff530d048af92b0453ff24409bed2863c32907105af7"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25bd2545bb9742ca5f2d938bb4138549",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15099,
        "upload_time": "2020-12-02T17:16:14",
        "upload_time_iso_8601": "2020-12-02T17:16:14.140889Z",
        "url": "https://files.pythonhosted.org/packages/94/14/53931403b2152c8cadf1c5ac1f33f9b52f5e0d104de24298cd7a0e85175d/micro_components_py-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7f4431d925b4bca9e894bbd5ae8175386bca7af37400a69a94388c5dfcba565",
          "md5": "a4ecfdc83db7b47bb729f7b52630ec7a",
          "sha256": "90efa4e36356169a72165e7df9ebb0555559b5944fcae046dabe0f390c4dc8a7"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "a4ecfdc83db7b47bb729f7b52630ec7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15778,
        "upload_time": "2020-12-02T17:16:17",
        "upload_time_iso_8601": "2020-12-02T17:16:17.199146Z",
        "url": "https://files.pythonhosted.org/packages/d7/f4/431d925b4bca9e894bbd5ae8175386bca7af37400a69a94388c5dfcba565/micro_components_py-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36dd6789956e9c895d449d22c421674935620930aee909a44b5dd6411b2b65ec",
          "md5": "6756ed47c1f747fa9dca4dbcbecad2ef",
          "sha256": "5f36359e3e1e0a3a9ad9c53d6ef74e236bf87df6c821f0995650bf51f1f679db"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.2.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "6756ed47c1f747fa9dca4dbcbecad2ef",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 31881,
        "upload_time": "2020-12-04T15:36:14",
        "upload_time_iso_8601": "2020-12-04T15:36:14.568556Z",
        "url": "https://files.pythonhosted.org/packages/36/dd/6789956e9c895d449d22c421674935620930aee909a44b5dd6411b2b65ec/micro_components_py-0.2.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "725578ac2912c70f4620d349e33aa377137f32691c80c5b0f346f0e39736a175",
          "md5": "8549c8820a531d48fa7d232496ee5280",
          "sha256": "f572b9d4323a59b70ec71eb529a8e7fdba10b923dfb857c6a54c125cae9ea6eb"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8549c8820a531d48fa7d232496ee5280",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15385,
        "upload_time": "2020-12-04T15:36:12",
        "upload_time_iso_8601": "2020-12-04T15:36:12.541326Z",
        "url": "https://files.pythonhosted.org/packages/72/55/78ac2912c70f4620d349e33aa377137f32691c80c5b0f346f0e39736a175/micro_components_py-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79ae036373a56e0e1396f0bda1f46d245bedd87925bb13e43e4103c71254b81d",
          "md5": "80a88d95b0c957a51d613b8f8fb01696",
          "sha256": "139595d8b5ca316bbb589be0d14d97f6cb66703cdda0aab1d25abbc4adc6575b"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "80a88d95b0c957a51d613b8f8fb01696",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15459,
        "upload_time": "2020-12-04T15:36:16",
        "upload_time_iso_8601": "2020-12-04T15:36:16.630539Z",
        "url": "https://files.pythonhosted.org/packages/79/ae/036373a56e0e1396f0bda1f46d245bedd87925bb13e43e4103c71254b81d/micro_components_py-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f391b02011469f42b6a482ae07f7f31ec0b71c5666b7f2addfba6c8de74e9a83",
          "md5": "b14e6b30465870017d1222304d62f951",
          "sha256": "331f535c021fb1b629cdcef5da37b76787c0fe51eb9d6f46024e32605353585d"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b14e6b30465870017d1222304d62f951",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15452,
        "upload_time": "2020-12-04T16:13:12",
        "upload_time_iso_8601": "2020-12-04T16:13:12.401483Z",
        "url": "https://files.pythonhosted.org/packages/f3/91/b02011469f42b6a482ae07f7f31ec0b71c5666b7f2addfba6c8de74e9a83/micro_components_py-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4045ad85071fe0a185ba7df571972569e819a8f5b730fdcb719ff44637d78d2d",
          "md5": "778942aeb0d8486b2b4e36a50512a70f",
          "sha256": "0044aa525f0a1f07b28057a8627b119f80ac687e1e7dcfb3dc0b0ec457640184"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.2.2-py3.7.egg",
        "has_sig": false,
        "md5_digest": "778942aeb0d8486b2b4e36a50512a70f",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 31997,
        "upload_time": "2020-12-04T16:14:06",
        "upload_time_iso_8601": "2020-12-04T16:14:06.474064Z",
        "url": "https://files.pythonhosted.org/packages/40/45/ad85071fe0a185ba7df571972569e819a8f5b730fdcb719ff44637d78d2d/micro_components_py-0.2.2-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1222770e982165991ca7470bac85ac86cb47b9888b5fb106443a992d2a8a1b37",
          "md5": "bdc86bc62704bf40dcae4d5f67e88c01",
          "sha256": "162f4bb59cb07558621516c984b6c68c30125c85ab417c82dc8df34b8f02d77f"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdc86bc62704bf40dcae4d5f67e88c01",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15458,
        "upload_time": "2020-12-04T16:14:02",
        "upload_time_iso_8601": "2020-12-04T16:14:02.775513Z",
        "url": "https://files.pythonhosted.org/packages/12/22/770e982165991ca7470bac85ac86cb47b9888b5fb106443a992d2a8a1b37/micro_components_py-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc6f4fc308589c1d0dd1f5b5f7bddb17e58fef4d358229de8b7402db33af0621",
          "md5": "beb4545f0249af84982e76dfaf6a7bb5",
          "sha256": "1789087141b4a46db843acddf754a40c9fc33be138fab3b579a0e478cadf3dc0"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "beb4545f0249af84982e76dfaf6a7bb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15501,
        "upload_time": "2020-12-04T16:14:07",
        "upload_time_iso_8601": "2020-12-04T16:14:07.896852Z",
        "url": "https://files.pythonhosted.org/packages/cc/6f/4fc308589c1d0dd1f5b5f7bddb17e58fef4d358229de8b7402db33af0621/micro_components_py-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74bdb2cbfe5358268e7ba0b8acc518828b9599a02d8a8ad83d4721605f063965",
          "md5": "357528f0cab26335480351bb85b0156d",
          "sha256": "d4d4aa7b3be35716b6f0f9598da925a922f21eebf5c4a6e8a5bfef77e635fcbe"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.2.3-py3.7.egg",
        "has_sig": false,
        "md5_digest": "357528f0cab26335480351bb85b0156d",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 32005,
        "upload_time": "2020-12-04T16:17:51",
        "upload_time_iso_8601": "2020-12-04T16:17:51.626773Z",
        "url": "https://files.pythonhosted.org/packages/74/bd/b2cbfe5358268e7ba0b8acc518828b9599a02d8a8ad83d4721605f063965/micro_components_py-0.2.3-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03d0b1a4cb42fb601932536ce541072c55733f0c3fe7230d1f5f2373f7014ac0",
          "md5": "66f0ef281e13eb314b1539a48a235510",
          "sha256": "537c1e1b50b9140b2b3eb4ee4ef2fb7e1ba47417c68b1f280f9025aa8bbe8496"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66f0ef281e13eb314b1539a48a235510",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15466,
        "upload_time": "2020-12-04T16:17:45",
        "upload_time_iso_8601": "2020-12-04T16:17:45.790117Z",
        "url": "https://files.pythonhosted.org/packages/03/d0/b1a4cb42fb601932536ce541072c55733f0c3fe7230d1f5f2373f7014ac0/micro_components_py-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "371de555004e6eccf7142154a88d995b6cbbd6984d28c49ed4c855fc95d39de5",
          "md5": "7071f9b790f68209908209f34c32b021",
          "sha256": "323064645a692d12b22ff6d635ee817b316b35f7bc09c2b4a531abc3d08a08e9"
        },
        "downloads": -1,
        "filename": "micro_components_py-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7071f9b790f68209908209f34c32b021",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15504,
        "upload_time": "2020-12-04T16:17:53",
        "upload_time_iso_8601": "2020-12-04T16:17:53.040868Z",
        "url": "https://files.pythonhosted.org/packages/37/1d/e555004e6eccf7142154a88d995b6cbbd6984d28c49ed4c855fc95d39de5/micro_components_py-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74bdb2cbfe5358268e7ba0b8acc518828b9599a02d8a8ad83d4721605f063965",
        "md5": "357528f0cab26335480351bb85b0156d",
        "sha256": "d4d4aa7b3be35716b6f0f9598da925a922f21eebf5c4a6e8a5bfef77e635fcbe"
      },
      "downloads": -1,
      "filename": "micro_components_py-0.2.3-py3.7.egg",
      "has_sig": false,
      "md5_digest": "357528f0cab26335480351bb85b0156d",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": null,
      "size": 32005,
      "upload_time": "2020-12-04T16:17:51",
      "upload_time_iso_8601": "2020-12-04T16:17:51.626773Z",
      "url": "https://files.pythonhosted.org/packages/74/bd/b2cbfe5358268e7ba0b8acc518828b9599a02d8a8ad83d4721605f063965/micro_components_py-0.2.3-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03d0b1a4cb42fb601932536ce541072c55733f0c3fe7230d1f5f2373f7014ac0",
        "md5": "66f0ef281e13eb314b1539a48a235510",
        "sha256": "537c1e1b50b9140b2b3eb4ee4ef2fb7e1ba47417c68b1f280f9025aa8bbe8496"
      },
      "downloads": -1,
      "filename": "micro_components_py-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "66f0ef281e13eb314b1539a48a235510",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15466,
      "upload_time": "2020-12-04T16:17:45",
      "upload_time_iso_8601": "2020-12-04T16:17:45.790117Z",
      "url": "https://files.pythonhosted.org/packages/03/d0/b1a4cb42fb601932536ce541072c55733f0c3fe7230d1f5f2373f7014ac0/micro_components_py-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "371de555004e6eccf7142154a88d995b6cbbd6984d28c49ed4c855fc95d39de5",
        "md5": "7071f9b790f68209908209f34c32b021",
        "sha256": "323064645a692d12b22ff6d635ee817b316b35f7bc09c2b4a531abc3d08a08e9"
      },
      "downloads": -1,
      "filename": "micro_components_py-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "7071f9b790f68209908209f34c32b021",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15504,
      "upload_time": "2020-12-04T16:17:53",
      "upload_time_iso_8601": "2020-12-04T16:17:53.040868Z",
      "url": "https://files.pythonhosted.org/packages/37/1d/e555004e6eccf7142154a88d995b6cbbd6984d28c49ed4c855fc95d39de5/micro_components_py-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}