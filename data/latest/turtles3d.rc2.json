{
  "info": {
    "author": "Eric Nelson",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Turtle3D\nTurtle 3D is designed to be a 3D extension of the python turtle module. It is very limited as far as 3D renderers go, but can be useful for simple 3D modeling.\n\nEffort was made to make this feel as much like the original turtle module as possible, and many functions simply point to the original turtle module. However, due\nto the nature of the approach used and the difficulty of expanding some features to the third dimension, some of the original functions do not exist, and some occasional\nvisual defects do occur. Plans are to continue expanding this module to include more of the functionality the was present in the original turtle module, and hopefully remove\nthe visual defects, although some of these pose particularly difficult challenges. Suggestions or solutions are welcome.\n\n# Installation\n\n```\npip install turtles3D\n```\n\n# Examples\nThe following example shows a demonstration of creating a 3D cube, and then animating its rotation by calling the rotation functions repeatedly.\n\n```\nimport time\nfrom turtles3D import Turtle3D\n\ndef connect(t: Turtle3D, point1, point2):\n    \"\"\"Helper function to draw a connecting line between 2 points\"\"\"\n\n    start = t.pos()\n    d = t.isdown()\n    t.penup()\n    t.goto(point1)\n    t.pendown()\n    t.goto(point2)\n    t.penup()\n    t.goto(start)\n    if d:\n        t.pendown()\n\ndef draw_axes(t: Turtle3D):\n    \"\"\"Helper function to draw the x,y, and z axes in different colors to help visualize where they are\"\"\"\n\n    t.pencolor(\"blue\")\n    t.goto(500, 0, 0)\n    t.write(\"X\")\n    t.goto(-500, 0, 0)\n    t.write(\"-X\")\n    t.home()\n    t.pencolor(\"red\")\n    t.goto(0, 500, 0)\n    t.write(\"Y\")\n    t.goto(0, -500, 0)\n    t.write(\"-Y\")\n    t.home()\n    t.pencolor(\"green\")\n    t.goto(0, 0, 500)\n    t.write(\"Z\")\n    t.goto(0, 0, -500)\n    t.write(\"-Z\")\n    t.home()\n    t.pencolor(\"black\")\n\ndef run(t: Turtle3D):\n    \"\"\"Main function to handle our drawing and animation\"\"\"\n\n    # here we define the eight points that make up the corners of our cube\n    points = [\n        [50, -50, -50],  # bottom-right-front\n        [50, 50, -50],  # top-right-front\n        [-50, 50, -50],  # top-left-front\n        [-50, -50, -50],  # bottom-left-front\n        [50, -50, 50],  # bottom-right-back\n        [50, 50, 50],  # top-right-back\n        [-50, 50, 50],  # top-left-back\n        [-50, -50, 50],  # bottom-left-back\n    ]\n\n    # connecting each of the points to the other points it needs to\n    for i in range(4):\n        connect(t, points[i], points[(i + 1) % 4])\n        connect(t, points[i + 4], points[((i + 1) % 4) + 4])\n        connect(t, points[i], points[i + 4])\n\n\n    # animating 2 degree rotations of each axis 10,000 times\n    angle = 2\n    for i in range(10000):\n\n        t.rotateX(angle, False) # False because we don't want to redraw the lines until the final rotation\n        t.rotateY(angle, False)\n        t.rotateZ(angle)\n\n        time.sleep(1 / 60) # so we are redrawing 60 times per second. not exactly equal to 60fps due draw times, but pretty close.\n\n\nif __name__ == \"__main__\":\n    t = Turtle3D()\n    s = t.getscreen()\n\n    draw_axes(t) # comment out this line for smoother animation\n\n    run(t)\n    s.exitonclick()\n\n```\n# API Reference\n\nSince many of these functions point to or expand on the original turtle functions, view\nhttps://docs.python.org/3/library/turtle.html for more information.\n\n#### Turtle3D.position()\n#### Turtle3D.pos()\nreturns the current x,y,z coordinates of the turtle\n\n\n#### Turtle3D.setpos(x: float | List[], y: float = None, z: float = None) -> None\n#### Turtle3D.setposition(x: float | List[], y: float = None, z: float = None) -> None\n#### Turtle3D.goto(x: float | List[], y: float = None, z: float = None) -> None\nmoves turtle to (x,y,z)\n\n\n#### Turtle3D.fd(distance: float) -> None\n#### Turtle3D.forward(distance: float) -> None\nmoves the turtle distance pixels in the direction it is currently heading\n\n\n#### Turtle3D.back(distance: float) -> None\n#### Turtle3D.backward(distance: float) | Turtle3D.bk() -> None\nmoves the turtle distance pixels in the opposite direction of its current heading\n\n\n#### Turtle3D.rt(angle: float) -> None\n#### Turtle3D.right(angle: float) -> None\nturns the turtle clockwise by angle degrees in the XY plane\n\n\n#### Turtle3D.lt(angle: float) -> None\n#### Turtle3D.left(angle: float) -> None\nturns the turtle counterclockwise by angle degrees in the XY plane\n\n\n#### Turtle3D.seth(XY_angle: float, Z_angle: float = None) -> None\n#### Turtle3D.setheading(XY_angle: float, Z_angle: float = None) -> None\nset the turtle's current heading to be XY_angle in the XY plane, and Z_angle in the XZ plane\n\n\n#### Turtle3D.clone()\nreturns a copy of the turtle with the same heading, position, pensize, fillcolor, and pencolor.\n\n\n#### Turtle3D.heading()\nreturns the turtle's current heading, XY_angle in the XY plane, and Z_angle in the XZ plane\n\n\n#### Turtle3D.stamp()\ncreates an imprint of the turtle at the current location. This will appear the same shape no matter how the axes are rotated.\n\nreturns an id for the stamp created\n\n\n#### Turtle3D.clearstamps(n: int = None) -> None\nDelete all or first/last n of turtle's stamps.\n\nOptional argument   n -- an integer\n\nIf n is None, delete all of pen's stamps, else if n > 0 delete first n stamps else if n < 0 delete last n stamps.\n\n\n#### Turtle3D.clearstamp(stampid: int) -> None\nclears stamp with given stampid\n\n\n#### Turtle3D.yup(angle: float) -> None\nturns the turtle counterclockwise in the XZ plane by angle degrees\n\n\n#### Turtle3D.ydown(angle: float) -> None\nturns the turtle clockwise in the XZ plane by angle degrees\n\n\n#### Turtle3D.xup(angle: float) -> None\nturns the turtle counterclockwise in the YZ plane by angle degrees\n\n\n#### Turtle3D.xdown(angle: float) -> None\nturns the turtle clockwise in the YZ plane by angle degrees\n\n#### Turtle3D.reset() -> None\nDelete the turtle's drawings from the screen, re-center the turtle and set variables to the default values.\n\n\n#### Turtle3D.clear() -> None\nDelete the turtle's drawings from the screen. Do not move turtle. State and position of the turtle as well as drawings of other turtles are not affected.\n\n\n#### Turtle3D.xcor() -> float\nreturns the current X-coordinate of the turtle in the 3D space\n\n\n#### Turtle3D.ycor() -> float\nreturns the current Y-coordinate of the turtle in the 3D space\n\n\n#### Turtle3D.zcor() -> float\nreturns the current Z-coordinate of the turtle in the 3D space\n\n\n#### Turtle3D.setx(x: float) -> None\nmoves the turtle to the given x-position. y and z positions remain unchanged\n\n\n#### Turtle3D.sety(y: float) -> None\nmoves the turtle to the given y-position. x and z positions remain unchanged\n\n\n#### Turtle3D.setz(z: float) -> None\nmoves the turtle to the given z-position. x and y positions remain unchanged\n\n\n#### Turtle3D.undo() -> None\nundoes the last command and removes it from the redraw buffer\n\n\n#### Turtle3D.dot() -> None\nPoints to turtle.dot()\nDue to the 3d nature of the drawing, the dot at this location will appear as an orb in 3d space.\n\n\n#### Turtle3D.write() -> None\nputs the given text on the screen at the current location. text changes position when axes are rotated, but does not itself rotate (i.e. the letter 'E' will always display as an 'E', it will not become skewed or flattened if rotated)\n\n\n#### Turtle3D.home() -> None\nmoves the turtle to (0, 0, 0)\n\n\n#### Turtle3D.rotateZ(angle: float, redraw=True) -> None\nrotate the XY plane angle degrees about the Z axis and redraws the canvas from the new canvas perspective.\n\nif redraw is set to False, the redraw phase is skipped. new lines will be drawn from the new perspective,\nbut on the next redraw all lines will change to the new perspective. setting this to False is only recommended\nwhen doing multiple rotations at once, so that the canvas only needs to be redrawn from the final rotation of\nperspective.\n\n\n#### Turtle3D.rotateX(angle: float, redraw=True) -> None\nrotate the YZ plane angle degrees about the X axis and redraws the canvas from the new canvas perspective.\n\nif redraw is set to False, the redraw phase is skipped. new lines will be drawn from the new perspective,\nbut on the next redraw all lines will change to the new perspective. setting this to False is only recommended\nwhen doing multiple rotations at once, so that the canvas only needs to be redrawn from the final rotation of\nperspective.\n\n\n#### Turtle3D.rotateY(angle: float, redraw=True) -> None\nrotate the XZ plane angle degrees about the Y axis and redraws the canvas from the new canvas perspective.\n\nif redraw is set to False, the redraw phase is skipped. new lines will be drawn from the new perspective,\nbut on the next redraw all lines will change to the new perspective. setting this to False is only recommended\nwhen doing multiple rotations at once, so that the canvas only needs to be redrawn from the final rotation of\nperspective.\n\n\n#### Turtle3D.begin_fill() -> None\npoints to turtle.begin_fill()\n\n\n#### Turtle3D.end_fill() -> None\npoints to turtle.end_fill()\n\n\n#### Turtle3D.filling() -> bool\npoints to turtle.filling()\n\n\n#### Turtle3D.ht() -> None\n#### Turtle3D.hideturtle() -> None\npoints to turtle.hideturtle()\n\n\n#### Turtle3D.st() -> None\n#### Turtle3D.showturtle() -> None\npoints to turtle.showturtle()\n\n\n#### Turtle3D.isvisible() -> bool\npoints to turtle.isvisible()\n\n\n#### Turtle3D.shape()\npoints to turtle.shape()\n\n\n#### Turtle3D.pu() -> None\n#### Turtle3D.penup() -> None\n#### Turtle3D.up() -> None\npoints to turtle.penup()\n\n\n#### Turtle3D.pd() -> None\n#### Turtle3D.down() -> None\n#### Turtle3D.pendown() -> None\npoints to turtle.pendown()\n\n\n#### Turtle3D.width()\n#### Turtle3D.pensize()\npoints to turtle.pensize()\n\n\n#### Turtle3D.isdown()\npoints to turtle.isdown()\n\n\n#### Turtle3D.onclick()\npoints to turtle.onclick()\n\n\n#### Turtle3D.onrelease()\npoints to turtle.onrelease()\n\n\n#### Turtle3D.ondrag()\npoints to turtle.ondrag()\n\n\n#### Turtle3D.speed()\npoints to turtle.speed()\n\n\n#### Turtle3D.getscreen()\npoints to turtle.getscreen()\n\n\n#### Turtle3D.pencolor()\npoints to turtle.pencolor()\n\n\n#### Turtle3D.color()\npoints to turtle.color()\n\n\n#### Turtle3D.fillcolor()\npoints to turtle.fillcolor()\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "turtle,3D,drawing",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "turtles3D",
    "package_url": "https://pypi.org/project/turtles3D/",
    "platform": null,
    "project_url": "https://pypi.org/project/turtles3D/",
    "project_urls": {
      "Homepage": "https://github.com/neric89/3DTurtles"
    },
    "release_url": "https://pypi.org/project/turtles3D/0.9.1/",
    "requires_dist": [
      "numpy",
      "typing",
      "future"
    ],
    "requires_python": ">=3.6",
    "summary": "A 3D extension built on the turtle library",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15917419,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "335b0eb18b61aed9ec98dea575ba13490a869a68849e33a8cda03f23a104babc",
          "md5": "6b6edb047b256e0a2ffbb6de0f01dc4a",
          "sha256": "9696f8dfdf50368097dc99ce881cc314da8eead48d72bebf575e122a5cecbfec"
        },
        "downloads": -1,
        "filename": "turtles3D-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b6edb047b256e0a2ffbb6de0f01dc4a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10052,
        "upload_time": "2022-11-28T17:50:42",
        "upload_time_iso_8601": "2022-11-28T17:50:42.996517Z",
        "url": "https://files.pythonhosted.org/packages/33/5b/0eb18b61aed9ec98dea575ba13490a869a68849e33a8cda03f23a104babc/turtles3D-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f31b775885e833b691eef1d4f5b9e7a852802f7b39829a6d33db367d3fbca3eb",
          "md5": "9a61cd7584a84ddeb31672c95f8134a3",
          "sha256": "245ccaa70b671848c1d85ec16d76dbb2fab48c6c7eb44c8918949d89cded6127"
        },
        "downloads": -1,
        "filename": "turtles3D-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9a61cd7584a84ddeb31672c95f8134a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12593,
        "upload_time": "2022-11-28T17:50:45",
        "upload_time_iso_8601": "2022-11-28T17:50:45.360100Z",
        "url": "https://files.pythonhosted.org/packages/f3/1b/775885e833b691eef1d4f5b9e7a852802f7b39829a6d33db367d3fbca3eb/turtles3D-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52e96a2f8b18b323f57bfbb06ad529c849e829890e025879c7d9465ded661591",
          "md5": "8b9070f11fa19a86d26f8ef989023dbc",
          "sha256": "5439ab1cb1e8998417b75877c45400a3a731cce8ffd2aa41a64195f5ae6b7cf2"
        },
        "downloads": -1,
        "filename": "turtles3D-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b9070f11fa19a86d26f8ef989023dbc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10053,
        "upload_time": "2022-11-28T17:58:19",
        "upload_time_iso_8601": "2022-11-28T17:58:19.761965Z",
        "url": "https://files.pythonhosted.org/packages/52/e9/6a2f8b18b323f57bfbb06ad529c849e829890e025879c7d9465ded661591/turtles3D-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb4ecaed0c004509d042689865143ed5d688aa5dc3251620b4a0f37e2d5d2357",
          "md5": "e2f24730681f96685f584d533456cfd8",
          "sha256": "3ce79b5e55aea224483a05139854453f079e2e8e4d3002c9cd1390510bf53c3e"
        },
        "downloads": -1,
        "filename": "turtles3D-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e2f24730681f96685f584d533456cfd8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9939,
        "upload_time": "2022-11-28T17:58:21",
        "upload_time_iso_8601": "2022-11-28T17:58:21.492484Z",
        "url": "https://files.pythonhosted.org/packages/bb/4e/caed0c004509d042689865143ed5d688aa5dc3251620b4a0f37e2d5d2357/turtles3D-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52e96a2f8b18b323f57bfbb06ad529c849e829890e025879c7d9465ded661591",
        "md5": "8b9070f11fa19a86d26f8ef989023dbc",
        "sha256": "5439ab1cb1e8998417b75877c45400a3a731cce8ffd2aa41a64195f5ae6b7cf2"
      },
      "downloads": -1,
      "filename": "turtles3D-0.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8b9070f11fa19a86d26f8ef989023dbc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10053,
      "upload_time": "2022-11-28T17:58:19",
      "upload_time_iso_8601": "2022-11-28T17:58:19.761965Z",
      "url": "https://files.pythonhosted.org/packages/52/e9/6a2f8b18b323f57bfbb06ad529c849e829890e025879c7d9465ded661591/turtles3D-0.9.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb4ecaed0c004509d042689865143ed5d688aa5dc3251620b4a0f37e2d5d2357",
        "md5": "e2f24730681f96685f584d533456cfd8",
        "sha256": "3ce79b5e55aea224483a05139854453f079e2e8e4d3002c9cd1390510bf53c3e"
      },
      "downloads": -1,
      "filename": "turtles3D-0.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e2f24730681f96685f584d533456cfd8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9939,
      "upload_time": "2022-11-28T17:58:21",
      "upload_time_iso_8601": "2022-11-28T17:58:21.492484Z",
      "url": "https://files.pythonhosted.org/packages/bb/4e/caed0c004509d042689865143ed5d688aa5dc3251620b4a0f37e2d5d2357/turtles3D-0.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}