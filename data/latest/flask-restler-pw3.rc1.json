{
  "info": {
    "author": "Kirill Klenov",
    "author_email": "horneds@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Natural Language :: Russian",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing",
      "Topic :: Utilities"
    ],
    "description": "The Flask RESTler\n#################\n\n.. _badges:\n\n.. image:: http://img.shields.io/travis/klen/falsk-restler.svg?style=flat-square\n    :target: http://travis-ci.org/klen/falsk-restler\n    :alt: Build Status\n\n.. image:: http://img.shields.io/pypi/v/flask-restler.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/flask-restler\n    :alt: Version\n\n.. image:: http://img.shields.io/pypi/dm/flask-restler.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/flask-restler\n    :alt: Downloads\n\n.. _description:\n\nThe Flask RESTler -- Build REST API for Flask_ using Marshmallow_.\n\nHas builded support for SQLAlchemy_, Peewee_ ORM and Pymongo_.\n\nExample \"Hello User\" with the Flask-resler:\n\n.. code-block:: python\n\n    from flask_restler import Api, Resource\n\n\n    # flask_restler.Api is subclass of Flask.Blueprint\n    api = Api('My awesome API', __name__, url_prefix='/api/v1')\n\n    # flask_restler.Resource is subclass of Flask.views.View\n    @api.connect\n    class HelloResource(Resource):\n\n        def get(self, resource=None):\n            return 'Hello World!'\n\n\n    # Register with your application\n    from your_project import app\n\n    app.register_blueprint(api)\n\n    if __name__ == '__main__':\n        app.run()\n\n\nRun the application and open http://localhost:5000/api/v1/ in your browser.\n\n\n.. _contents:\n\n.. contents::\n\nRequirements\n=============\n\n- python 2.7+,3.4+\n\n.. _installation:\n\nInstallation\n=============\n\n**Flask-RESTler** should be installed using pip: ::\n\n    pip install flask-restler\n\n.. _usage:\n\nUsage\n=====\n\nDocs in progress. Would like to help? Create a PR.\n\n\n.. _bugtracker:\n\nBug tracker\n===========\n\nIf you have any suggestions, bug reports or\nannoyances please report them to the issue tracker\nat https://github.com/klen/flask-restler/issues\n\n.. _contributing:\n\nContributing\n============\n\nDevelopment of The Flask-restler happens at: https://github.com/klen/flask-restler\n\n\nContributors\n=============\n\n* `Kirill Klenov <https://github.com/klen>`_\n\n.. _license:\n\nLicense\n========\n\nLicensed under a MIT license (See LICENSE)\n\nIf you wish to express your appreciation for the project, you are welcome to\nsend a postcard to: ::\n\n    Kirill Klenov\n    pos. Severny 8-3\n    MO, Istra, 143500\n    Russia\n\n.. _links:\n\n.. _klen: https://github.com/klen\n.. _Flask: http://flask.pocoo.org/\n.. _Marshmallow: https://marshmallow.readthedocs.org/en/latest/\n.. _Peewee: http://docs.peewee-orm.com/en/latest/\n.. _SQLAlchemy: http://www.sqlalchemy.org/\n.. _Pymongo: https://api.mongodb.com/python/current/",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jianc65/flask-restler",
    "keywords": "flask,marshmallow,rest,api",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flask-restler-pw3",
    "package_url": "https://pypi.org/project/flask-restler-pw3/",
    "platform": "Any",
    "project_url": "https://pypi.org/project/flask-restler-pw3/",
    "project_urls": {
      "Homepage": "https://github.com/jianc65/flask-restler"
    },
    "release_url": "https://pypi.org/project/flask-restler-pw3/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Build REST API for Flask using Marshmallow.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5602489,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcd4fe3b1c807482618f12c9c68035b351adce0dd82c60e243c7fc9ee64b08c8",
          "md5": "4a40dc2ef86c3c710c7a2cb2a041bb4c",
          "sha256": "2fdd44c6d556ea130388f1383e9f95cc55abde7a316bd9f64667f38db101393e"
        },
        "downloads": -1,
        "filename": "flask_restler_pw3-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a40dc2ef86c3c710c7a2cb2a041bb4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17243,
        "upload_time": "2019-07-29T23:31:38",
        "upload_time_iso_8601": "2019-07-29T23:31:38.945406Z",
        "url": "https://files.pythonhosted.org/packages/fc/d4/fe3b1c807482618f12c9c68035b351adce0dd82c60e243c7fc9ee64b08c8/flask_restler_pw3-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcd4fe3b1c807482618f12c9c68035b351adce0dd82c60e243c7fc9ee64b08c8",
        "md5": "4a40dc2ef86c3c710c7a2cb2a041bb4c",
        "sha256": "2fdd44c6d556ea130388f1383e9f95cc55abde7a316bd9f64667f38db101393e"
      },
      "downloads": -1,
      "filename": "flask_restler_pw3-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4a40dc2ef86c3c710c7a2cb2a041bb4c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17243,
      "upload_time": "2019-07-29T23:31:38",
      "upload_time_iso_8601": "2019-07-29T23:31:38.945406Z",
      "url": "https://files.pythonhosted.org/packages/fc/d4/fe3b1c807482618f12c9c68035b351adce0dd82c60e243c7fc9ee64b08c8/flask_restler_pw3-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}