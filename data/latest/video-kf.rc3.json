{
  "info": {
    "author": "Antonio Verdone",
    "author_email": "averdones@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Quick guide\r\n## Installation\r\n    pip install video-kf\r\n## Usage\r\nOpen a command line, or a terminal, from the same directory where your video is located and run:\r\n    \r\n    video-kf \"My_video.mp4\"\r\n    \r\nIf the command line was open in a different directory from where the video is located, then the full path would be \r\nneeded.\r\n\r\n# Extended documentation\r\nVideo-kf is a Python package that can be run either from the command line, or from inside Python, by importing it.\r\nIt extracts the most relevant keyframes of a video, based on different methods.\r\n\r\nAt the moment, there are 3 methods available:\r\n\r\n- **iframes**: it extracts the [iframes](https://en.wikipedia.org/wiki/Video_compression_picture_types) of the video, \r\ncalculated by ffmpeg. This is the default option.\r\n\r\n    Use in the command line:\r\n\r\n    ```\r\n    video-kf \"My_video.mp4\"\r\n    ```\r\n    \r\n    or\r\n    \r\n    ```\r\n    video-kf \"My_video.mp4\" -m \"iframes\"\r\n    ```\r\n        \r\n    Use inside Python:\r\n    \r\n    ```python\r\n    import videokf as vf\r\n    \r\n    vf.extract_keyframes(\"My_video.mp4\")\r\n    ```\r\n    \r\n    or\r\n    \r\n    ```python\r\n    import videokf as vf\r\n    \r\n    vf.extract_keyframes(\"My_video.mp4\", method=\"iframes\")\r\n    ```\r\n\r\n- **color**: it returns the average frame, based on color, of every shot sequence. Shot sequences are group of frames \r\nthat start with an iframe.\r\n\r\n    Use in the command line:\r\n    \r\n    ```\r\n    video-kf \"My_video.mp4\" -m \"color\"\r\n    ```\r\n            \r\n    Use inside Python:\r\n    \r\n    ```python\r\n    import videokf as vf\r\n    \r\n    vf.extract_keyframes(\"My_video.mp4\", method=\"color\")\r\n    ```\r\n\r\n- **flow**: it returns the most still frame with respect of the previous frame of every shot sequence. Shot sequences \r\nare group of frames that start with an iframe.\r\n \r\n    Use in the command line:\r\n    \r\n    ```\r\n    video-kf \"My_video.mp4\" -m \"flow\"\r\n    ```\r\n        \r\n    Use inside Python:\r\n    \r\n    ```python\r\n    import videokf as vf\r\n    \r\n    vf.extract_keyframes(\"My_video.mp4\", method=\"flow\")\r\n    ```\r\n\r\n### Caution\r\n\r\nThe methods *color* and *flow* **will download all the frames** of the video. Keep in mind that if the video is long, \r\nthis will take time, as well as space to save the frames.\r\n\r\nThis is not the case for the method *iframes* that will only download the iframes.\r\n\r\n## Use of Ffmpeg and Ffprobe\r\nVideo-kf automatically downloads the executable files of *ffmpeg* and *ffprobe* and saves them, by default, in a \r\nfolder called \"Ffmpeg\" located in your *home* directory. You can choose to save the executable files in a different \r\nlocation by running:\r\n\r\n```\r\nvideo-kf \"My_video.mp4\" -dir \"PATH_RO_A_DIFFERENT_LOCATION\"\r\n```\r\n\r\nIf you already have *ffmpeg* or *ffprobe* installed, you can also use your own executable files. There are various ways \r\nof doing this, all of them equivalent. Choose the one that best suits you:\r\n\r\n- Using the command line options *ffmpeg* and *ffprobe* (you can choose to use just one of the two):\r\n    \r\n    ```\r\n    video-kf \"My_video.mp4\" -ffmpeg \"PATH_TO_FFMPEG\" -ffprobe \"PATH_TO_FFPROBE\"\r\n    ```\r\n\r\n- Saving *ffmpeg* and *ffprobe* as environmental variables named respectively FFMPEG and FFPROBE.\r\n- Saving manually *ffmpeg* and *ffprobe* in the folder called \"Ffmpeg\", which by default is located in your *home* \r\ndirectory, and running the program normally (either in the command line or inside python). You can also choose a \r\ndifferent directory through the command line with the ```-dir``` option\r\n\r\n# Command line options\r\n    positional arguments:\r\n      video_file            Path to the video file to extract the keyframes from.\r\n    \r\n    optional arguments:\r\n      -h, --help            show this help message and exit\r\n      -m METHOD, --method METHOD\r\n                            Method to extract the keyframes\r\n      -o OUTPUT_DIR_KEYFRAMES, --output_dir_keyframes OUTPUT_DIR_KEYFRAMES\r\n                            Directory where to extract keyframes. If it is a\r\n                            string instead of a directory, keyframes will be saved\r\n                            in a folder named as this string, located in the same\r\n                            directory of the video\r\n      -ffmpeg FFMPEG, --ffmpeg FFMPEG\r\n                            Path to the Ffmpeg executable\r\n      -ffprobe FFPROBE, --ffprobe FFPROBE\r\n                            Path to the Ffprobe executable\r\n      -dir DIR_FFMPEG_FFPROBE, --dir_ffmpeg_ffprobe DIR_FFMPEG_FFPROBE\r\n                            Path to the directory containing both Ffmpeg and\r\n                            Ffprobe executables\r\n      --no-frames-rm        If present, this option will NOT remove the directory\r\n                            with the extracted frames, if they were extracted\r\n                            (only for 'color' and 'flow' methods)\r\n\r\n### References\r\n\r\nFFmpeg Developers. (2016). Ffmpeg tool [Software].\r\nAvailable from http://ffmpeg.org/\r\n\r\nBinaries obtained from: https://ffbinaries.com/readme\r\n \r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/averdones/video-kf",
    "keywords": "keyframes iframes video extractor",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "video-kf",
    "package_url": "https://pypi.org/project/video-kf/",
    "platform": null,
    "project_url": "https://pypi.org/project/video-kf/",
    "project_urls": {
      "Homepage": "https://github.com/averdones/video-kf"
    },
    "release_url": "https://pypi.org/project/video-kf/0.0.4/",
    "requires_dist": [
      "numpy (>=1.17)",
      "opencv-python (>=4)",
      "requests (>=2.22)"
    ],
    "requires_python": ">=3.6",
    "summary": "A keyframes and ffmpeg iframes extractor",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15869671,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21dd30113773f1eb98a7b4b18bfa153c0badcb1c89ab2b3cc56b991ec6890eb5",
          "md5": "7d4665b1166ba1714008de98351554da",
          "sha256": "7c9ca271de831ea67be786553dc5311d580108e4c6dbace2ccd09ecf366c20b2"
        },
        "downloads": -1,
        "filename": "video_kf-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d4665b1166ba1714008de98351554da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14562,
        "upload_time": "2019-09-01T12:56:33",
        "upload_time_iso_8601": "2019-09-01T12:56:33.244631Z",
        "url": "https://files.pythonhosted.org/packages/21/dd/30113773f1eb98a7b4b18bfa153c0badcb1c89ab2b3cc56b991ec6890eb5/video_kf-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a63dbd0d51507668f1cbd659f9f522e45d2627d419354d0b7711eef57d889119",
          "md5": "98f6adcd63b98fda83f78bc4d27c0cbf",
          "sha256": "57bcf11a3da5a002804551527899ff94c0646039d7ee225f39de6302febf2b52"
        },
        "downloads": -1,
        "filename": "video-kf-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "98f6adcd63b98fda83f78bc4d27c0cbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10268,
        "upload_time": "2019-09-01T12:56:34",
        "upload_time_iso_8601": "2019-09-01T12:56:34.831416Z",
        "url": "https://files.pythonhosted.org/packages/a6/3d/bd0d51507668f1cbd659f9f522e45d2627d419354d0b7711eef57d889119/video-kf-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb2b56c48babf39da35c5cc969b6106cf4e355da3577699a8fd7d765546dc1af",
          "md5": "7b3eed96869076be1d239b67afe447ca",
          "sha256": "ade371022a2b38cd831f7097488f2e008a078ff893a2df2f24bf6194c2c2546e"
        },
        "downloads": -1,
        "filename": "video_kf-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b3eed96869076be1d239b67afe447ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14674,
        "upload_time": "2019-09-01T14:14:33",
        "upload_time_iso_8601": "2019-09-01T14:14:33.224745Z",
        "url": "https://files.pythonhosted.org/packages/eb/2b/56c48babf39da35c5cc969b6106cf4e355da3577699a8fd7d765546dc1af/video_kf-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e50748955f621ec2f11d61eff932f8f01df3e4381aee86d29f15b5228e4aadac",
          "md5": "079da387dc50a2c80281e05b380a15d3",
          "sha256": "40c55c2576a6ef4704e7526c1da931b88b910e7ae36a87fa74575f8061165a8b"
        },
        "downloads": -1,
        "filename": "video-kf-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "079da387dc50a2c80281e05b380a15d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10373,
        "upload_time": "2019-09-01T14:14:34",
        "upload_time_iso_8601": "2019-09-01T14:14:34.782333Z",
        "url": "https://files.pythonhosted.org/packages/e5/07/48955f621ec2f11d61eff932f8f01df3e4381aee86d29f15b5228e4aadac/video-kf-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d51cfc162359e5c546dd2ea66f43494465c733451b24483e382aa5618d1fcd2e",
          "md5": "c536fcfb2580626b68112c9e6fa67056",
          "sha256": "f016a3e961f5ca9b6d7c8ea096d8f276f679d73f6c38fca0d337e4362cb5c562"
        },
        "downloads": -1,
        "filename": "video_kf-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c536fcfb2580626b68112c9e6fa67056",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14792,
        "upload_time": "2022-11-23T17:20:35",
        "upload_time_iso_8601": "2022-11-23T17:20:35.813071Z",
        "url": "https://files.pythonhosted.org/packages/d5/1c/fc162359e5c546dd2ea66f43494465c733451b24483e382aa5618d1fcd2e/video_kf-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33a33b8fedd070546bca913a5adf92b148f3919986c5aa330de734f126d21f1a",
          "md5": "ebc95d3109aa57934ecb824035304f55",
          "sha256": "79e97bf7e4c198a44d14308bfedd2d928efaeb11aea8bad0c863c71aa9e22c6e"
        },
        "downloads": -1,
        "filename": "video-kf-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ebc95d3109aa57934ecb824035304f55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11320,
        "upload_time": "2022-11-23T17:20:37",
        "upload_time_iso_8601": "2022-11-23T17:20:37.614745Z",
        "url": "https://files.pythonhosted.org/packages/33/a3/3b8fedd070546bca913a5adf92b148f3919986c5aa330de734f126d21f1a/video-kf-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d51cfc162359e5c546dd2ea66f43494465c733451b24483e382aa5618d1fcd2e",
        "md5": "c536fcfb2580626b68112c9e6fa67056",
        "sha256": "f016a3e961f5ca9b6d7c8ea096d8f276f679d73f6c38fca0d337e4362cb5c562"
      },
      "downloads": -1,
      "filename": "video_kf-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c536fcfb2580626b68112c9e6fa67056",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14792,
      "upload_time": "2022-11-23T17:20:35",
      "upload_time_iso_8601": "2022-11-23T17:20:35.813071Z",
      "url": "https://files.pythonhosted.org/packages/d5/1c/fc162359e5c546dd2ea66f43494465c733451b24483e382aa5618d1fcd2e/video_kf-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33a33b8fedd070546bca913a5adf92b148f3919986c5aa330de734f126d21f1a",
        "md5": "ebc95d3109aa57934ecb824035304f55",
        "sha256": "79e97bf7e4c198a44d14308bfedd2d928efaeb11aea8bad0c863c71aa9e22c6e"
      },
      "downloads": -1,
      "filename": "video-kf-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ebc95d3109aa57934ecb824035304f55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11320,
      "upload_time": "2022-11-23T17:20:37",
      "upload_time_iso_8601": "2022-11-23T17:20:37.614745Z",
      "url": "https://files.pythonhosted.org/packages/33/a3/3b8fedd070546bca913a5adf92b148f3919986c5aa330de734f126d21f1a/video-kf-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}