{
  "info": {
    "author": "Izzudin Hafiz",
    "author_email": "izzudin.hafiz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# PySinger <!-- omit in toc -->\n\n- [Introduction](#introduction)\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Using tap and target names](#using-tap-and-target-names)\n  - [Different executable name](#different-executable-name)\n  - [Defining Tap or Target manually](#defining-tap-or-target-manually)\n\n## Introduction\nA [Singer.io](http://singer.io) wrapper Python library (that's fully type-annotated :D) that makes using Singer taps and targets easy.\n\nThis wrapper creates temporary virtual environment for each tap and target, download the required dependency and executes them. After execution, all environments are torn down and cleaned up.\n\n## Requirements\n- Linux only (Windows in the future? :|)\n- Requires Python 3.7+.\n- PySinger has no dependencies, it uses only Python built-in libraries.\n\n\n## Installation\n`pip install pysinger`\n\n## Usage\n### Using tap and target names\nUse the tap/target names you would use to `pip install` them.\n\nE.g. the tap would be `\"tap-exchangeratehost\"` if you'd used `pip install tap-exchangeratehost` to install it or target `\"singer-target-postgres\"` for `pip install singer-target-postgres`.\n\n```python\nfrom pysinger import Singer\n\ntap_config = {\n    \"base\": \"JPY\",\n    \"start_date\": \"2022-01-01\"\n}\n\ntarget_config = {\n    \"delimiter\": \"\\t\",\n    \"quotechar\": \"'\",\n    \"destination_path\": \"\"\n}\n\nsinger = Singer(\n    \"tap-exchangeratehost\",\n    \"target-csv\",\n    tap_config=tap_config,          # Optional\n    target_config=target_config     # Optional\n)\n\nend_state = singer.run()\n\n# Optionally you can save the state for future use\nsinger.save_state(\"/path/to/state.json\")\n```\n\n### Different executable name\nBy default PySinger executes tap/target by their name, but sometimes the executables are named differently.\n\nFor example `singer-target-postgres` uses a `target-postgres` as its executable. To run these:\n```python\n...\nsinger = Singer(\n    \"tap-exchangeratehost\",\n    \"singer-target-postgres\",\n    tap_config=tap_config,\n    target_config=target_config\n    target_kwargs={\"target_exec\": \"target-postgres\"}\n)\n\n# Similarly there's one for taps called 'tap_exec'\n...\n```\nTo know what the executable name is, see the individual tap/target repo and check their invocation name.\n\nSummary:\n- `tap/target name` is from `pip install tap_or_target`\n- `tap/target_exec` is from `virtualenv/tap_or_target/bin/tap_or_target_exec`\n\n### Defining Tap or Target manually\nYou can also pass Tap or Target instances that were created manually\n```python\nfrom pysinger import Tap, Target, Singer\n\ntap = Tap(\"tap-exchangerates\", config_path=\"/path/to/config.json\")\n\ntarget = Target(\n    \"pipelinewise-target-postgres\",\n    target_exec=\"target-postgres\",\n    config={\"disable_collection\": True}\n    )\n\nsinger = Singer(tap=tap, target=target)\nsinger.run()\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/izzudinhafiz/pysinger",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysinger",
    "package_url": "https://pypi.org/project/pysinger/",
    "platform": "",
    "project_url": "https://pypi.org/project/pysinger/",
    "project_urls": {
      "Homepage": "https://github.com/izzudinhafiz/pysinger"
    },
    "release_url": "https://pypi.org/project/pysinger/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Singer python wrapper for easy execution",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12858100,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e01bb167e2e8d5467b8baf2ca9c121bf3eb5d4c38796cd7e3a1f191f695e0787",
          "md5": "5cffc333bf75aacafb671488e0f559a9",
          "sha256": "9ed0e1c00054efca81810170e5d6b8da01b5e79340457e089a01b2f8e93e08d5"
        },
        "downloads": -1,
        "filename": "pysinger-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cffc333bf75aacafb671488e0f559a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6600,
        "upload_time": "2022-02-11T05:20:46",
        "upload_time_iso_8601": "2022-02-11T05:20:46.069028Z",
        "url": "https://files.pythonhosted.org/packages/e0/1b/b167e2e8d5467b8baf2ca9c121bf3eb5d4c38796cd7e3a1f191f695e0787/pysinger-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "534e62f5fe0d6add59017a6a09891dcce931d1360dd9033f13d792cf1460d128",
          "md5": "e83e3edaa98912248cc477d9020b6bb9",
          "sha256": "0f6a69e098888f7ac93ea8fc5df9f8723b4b495256ed9eddb13a475a07471063"
        },
        "downloads": -1,
        "filename": "pysinger-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e83e3edaa98912248cc477d9020b6bb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4952,
        "upload_time": "2022-02-11T05:20:47",
        "upload_time_iso_8601": "2022-02-11T05:20:47.984707Z",
        "url": "https://files.pythonhosted.org/packages/53/4e/62f5fe0d6add59017a6a09891dcce931d1360dd9033f13d792cf1460d128/pysinger-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e01bb167e2e8d5467b8baf2ca9c121bf3eb5d4c38796cd7e3a1f191f695e0787",
        "md5": "5cffc333bf75aacafb671488e0f559a9",
        "sha256": "9ed0e1c00054efca81810170e5d6b8da01b5e79340457e089a01b2f8e93e08d5"
      },
      "downloads": -1,
      "filename": "pysinger-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5cffc333bf75aacafb671488e0f559a9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6600,
      "upload_time": "2022-02-11T05:20:46",
      "upload_time_iso_8601": "2022-02-11T05:20:46.069028Z",
      "url": "https://files.pythonhosted.org/packages/e0/1b/b167e2e8d5467b8baf2ca9c121bf3eb5d4c38796cd7e3a1f191f695e0787/pysinger-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "534e62f5fe0d6add59017a6a09891dcce931d1360dd9033f13d792cf1460d128",
        "md5": "e83e3edaa98912248cc477d9020b6bb9",
        "sha256": "0f6a69e098888f7ac93ea8fc5df9f8723b4b495256ed9eddb13a475a07471063"
      },
      "downloads": -1,
      "filename": "pysinger-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e83e3edaa98912248cc477d9020b6bb9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4952,
      "upload_time": "2022-02-11T05:20:47",
      "upload_time_iso_8601": "2022-02-11T05:20:47.984707Z",
      "url": "https://files.pythonhosted.org/packages/53/4e/62f5fe0d6add59017a6a09891dcce931d1360dd9033f13d792cf1460d128/pysinger-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}