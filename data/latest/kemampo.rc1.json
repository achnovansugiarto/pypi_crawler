{
  "info": {
    "author": "Erlangga Ibrahim",
    "author_email": "erlanggaibr2@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<h1 align=center> Kemampo </h1>\n<p align=center>\n<img src=\"https://img.shields.io/github/workflow/status/dolano-tours/kemampo/Test%20Kemampo/production?label=production%20build\"/>\n<img src=\"https://img.shields.io/github/workflow/status/dolano-tours/kemampo/Test%20Kemampo/staging?label=staging%20build\"/>\n<img src=\"https://img.shields.io/github/workflow/status/dolano-tours/kemampo/Test%20Kemampo/nightly?label=nightly%20build\"/>\n<img src=\"https://img.shields.io/github/issues-raw/dolano-tours/kemampo?label=issues\"/>\n<img src=\"https://img.shields.io/pypi/pyversions/kemampo?label=PyPI\"/>\n<img src=\"https://img.shields.io/pypi/dm/kemampo\"/>\n<img src=\"https://img.shields.io/github/repo-size/dolano-tours/kemampo?label=lib%20size\"/>\n</p>\n<i><p align=center>Small, Lightweight Library to cut down SQLAlchemy Controllers Boilerplates</p></i>\n\n\n<h2 align=center> Usage </h2>\n\n### Concept\n\n1. First define all of your tables, and all things necessary\n2. instead of implementing custom Controllers that handle errors and what not. you can use Kemampo to cut downs all of the Boilerplates. so all you need to do next is: implement sqlalchemy's `sessionmaker` and pass it into Kemampo intializer\n4. use Kemampo to generate all the basic **_CRUD_** controllers.\n5. Use it as is. or add it to your custom Controller class using `setattr`\n\n### Example\nDefine your table\n```python\nDB_ENGINE = create_engine(\n    \"sqlite:///\",\n    pool_pre_ping=True,\n    echo=False,\n)\n\nDB_BASE = declarative_base(bind=DB_ENGINE)\nmetadata = DB_BASE.metadata\n\nclass User(DB_BASE):\n    __tablename__ = \"user\"\n    id = Column(Integer, primary_key=True)\n    username = Column(String(16), nullable=False, unique=True)\n    password = Column(String(128), nullable=False)\n```\n\nUse Kemampo\n```python\nfrom kemampo import Kemampo\n\nkemampo = Kemampo(sessionmaker(bind=DB_ENGINE))\nUserController = kemampo.generate_controller(User)\n\nuser_data = {\"username\": \"test_new_user\", \"password\": \"a_password_hash\"}\nupdate_user_data = {\"username\": \"updated_username\"}\nstatus, user = UserController.add(**new_user_data)                  # create new user\nstatus, users = UserController.get(id=1)                            # get by id\nstatus, user = UserController.update_by_id(1, **update_user_data)   # update by id\nstatus, users = UserController.get_all()                            # get all\nstatus, user = UserController.delete(1)                             # delete by id\n```\n\n\n\n<h2 align=center> Installation </h2>\n\nYou can install via PyPI\n\n```bash\npython3 -m pip install kemampo\n```\n\n<h2 align=center> API Documentations </h2>\n\n### `kemampo.Kemampo(session_maker, log_callback)`\n- Constructor\n    - `sessionmaker`\n        - Expected Type: `sqlalchemy.orm.session.sessionmaker`\n        - Your own sessionmaker. docs: https://docs.sqlalchemy.org/en/13/orm/session_api.html#session-and-sessionmaker\n    - `log_callback`\n        - Expected Type: `Callbacks` or `function`\n        - put your function here to get kemampo logging output\n- Methods\n    - `Kemampo.generate_controller(target_model)`\n        - The Main feature of kemampo, create a **_CRUD_** controller for `target_model`\n        - `target_model`\n            - Expected Type: _your table_ specifically `sqlalchemy.ext.declarative.DeclarativeMeta` or it's subclass\n            - returns `<table-name>Controller`\n### `<table-name>Controller`\nThe core feature of Kemampo, provide you with basic **_CRUD_** Controller Operations\n- Methods\n    - `add(**table_dict_model)`\n        - Add new row data to database\n        - `table_dict_model`\n            - type: `Dict`\n            - scheme:\n                ```python\n                {table_column_name: column_name_value, ...}\n                ```\n        - returns Tuple of:\n            - (`True`, `added_dict_of_model`) or\n            - (`False`, `ReturnStatus`)\n    - `get(**target_row_column_key_value)`\n        - Get rows data from database, based on column name you give with certain value. support multiple column name and value\n        - `target_row_column_key_value`\n            - type: `Dict`\n            - scheme:\n                ```python\n                {table_column_name: column_name_value, ...}\n                ```\n        - returns Tuple of:\n            - (`True`, `List[dict_of_model]`) or\n            - (`False`, `ReturnStatus`)\n    - `get_all()`\n        - Gather all row values from database\n        - returns Tuple of:\n            - (`True`, `List[dict_of_model]`) or\n            - (`False`, `ReturnStatus`)\n    - `update_by_id(target_id, **updated_row_column_key_value)`\n        - `target_id`\n            - type: `int`\n        - `updated_row_column_key_value`\n            - type: `Dict`\n            - scheme:\n                ```python\n                {table_column_name: column_name_value, ...}\n                ```\n        - returns Tuple of:\n            - (`True`, `dict_of_model`) or\n            - (`False`, `ReturnStatus`)\n    - `delete(**target_row_column_key_value)`\n        - `target_row_column_key_value`\n            - type: `Dict`\n            - scheme:\n                ```python\n                {table_column_name: column_name_value, ...}\n                ```\n        - returns Tuple of:\n            - (`True`, `dict_of_model`) or\n            - (`False`, `ReturnStatus`)\n\n### `ReturnStatus`\n\nan Enumeration of possible Errors happening inside Kemampo\n\n- `ReturnStatus.DatabaseError`\n    - Error happened internally\n    - Values: `str` -> `\"Database Error\"`\n- `ReturnStatus.NotFound`\n    - Targeted row data was not found inside database\n    - Values: `str` -> `\"Row Data Not Found\"`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dolano-tours/kemampo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kemampo",
    "package_url": "https://pypi.org/project/kemampo/",
    "platform": "",
    "project_url": "https://pypi.org/project/kemampo/",
    "project_urls": {
      "Homepage": "https://github.com/dolano-tours/kemampo"
    },
    "release_url": "https://pypi.org/project/kemampo/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A handy, small, library to cut down SQLAlchemy builerplates",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8589302,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a571a9e88b591102ac84219d958446823a9ec2ccdd155891d6df9cbe7c25f738",
          "md5": "399e4390a623699693d757257fe8b672",
          "sha256": "e80b0dceb5518310d1ef4bd2362944f806c36acafbbb61f7f46c879b60815df8"
        },
        "downloads": -1,
        "filename": "kemampo-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "399e4390a623699693d757257fe8b672",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20140,
        "upload_time": "2020-11-05T17:05:49",
        "upload_time_iso_8601": "2020-11-05T17:05:49.878782Z",
        "url": "https://files.pythonhosted.org/packages/a5/71/a9e88b591102ac84219d958446823a9ec2ccdd155891d6df9cbe7c25f738/kemampo-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4679b1a929bb2f8304273891f3a778f2bf46278c0c732b10670660fdc999f78a",
          "md5": "c9cc53e1d8f755b550bd0b5ba36fbfa1",
          "sha256": "c190bfb0164ecd8000d419a04c7280771acbd47662afe2a9ab9a0fe47f99c71c"
        },
        "downloads": -1,
        "filename": "kemampo-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c9cc53e1d8f755b550bd0b5ba36fbfa1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7624,
        "upload_time": "2020-11-05T17:05:56",
        "upload_time_iso_8601": "2020-11-05T17:05:56.474959Z",
        "url": "https://files.pythonhosted.org/packages/46/79/b1a929bb2f8304273891f3a778f2bf46278c0c732b10670660fdc999f78a/kemampo-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a571a9e88b591102ac84219d958446823a9ec2ccdd155891d6df9cbe7c25f738",
        "md5": "399e4390a623699693d757257fe8b672",
        "sha256": "e80b0dceb5518310d1ef4bd2362944f806c36acafbbb61f7f46c879b60815df8"
      },
      "downloads": -1,
      "filename": "kemampo-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "399e4390a623699693d757257fe8b672",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 20140,
      "upload_time": "2020-11-05T17:05:49",
      "upload_time_iso_8601": "2020-11-05T17:05:49.878782Z",
      "url": "https://files.pythonhosted.org/packages/a5/71/a9e88b591102ac84219d958446823a9ec2ccdd155891d6df9cbe7c25f738/kemampo-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4679b1a929bb2f8304273891f3a778f2bf46278c0c732b10670660fdc999f78a",
        "md5": "c9cc53e1d8f755b550bd0b5ba36fbfa1",
        "sha256": "c190bfb0164ecd8000d419a04c7280771acbd47662afe2a9ab9a0fe47f99c71c"
      },
      "downloads": -1,
      "filename": "kemampo-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c9cc53e1d8f755b550bd0b5ba36fbfa1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7624,
      "upload_time": "2020-11-05T17:05:56",
      "upload_time_iso_8601": "2020-11-05T17:05:56.474959Z",
      "url": "https://files.pythonhosted.org/packages/46/79/b1a929bb2f8304273891f3a778f2bf46278c0c732b10670660fdc999f78a/kemampo-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}