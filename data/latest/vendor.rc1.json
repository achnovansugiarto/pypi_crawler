{
  "info": {
    "author": "Joshua Ringer",
    "author_email": "joshringer@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: Public Domain",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development"
    ],
    "description": "\n===============\n Python Vendor\n===============\n\nThis package provides an AWS service API for building compiled Python packages,\nready for use in your own AWS Lambda functions.\n\nRequirements\n============\n\nIn addition to Python package requirements that will automatically be dealt\nwith during package installation, the vendor package assumes that the AWS CLI\nis installed and configured on your system. By default, vendor makes use of\nyour AWS configuration as the ``aws`` command would.\n\nTo install awscli, please refer to the official documentation:\nhttps://docs.aws.amazon.com/cli/latest/userguide/\n\n\nInstallation\n============\n\nProgrammatic Deployment\n-----------------------\n\nThe service package module provides a class for dealing with the Vendor stack\ndeployment. To create the stack using the default settings, simply do the\nfollowing:\n::\n  >>> from vendor.service import VendorService\n  >>> vs = VendorService()\n  >>> vs.service()\n  {'ServiceURL': 'https://abcde01234.execute-api.region.amazonaws.com/api/',\n   'Version': '0.1'}\n\nIf all goes well, you will get back a dictionary containing the service\n``Version`` and the ``ServiceURL``, which can be used to call your newly created\nAPI. If the stacks already exist and are up-to-date, then the function will\nsimply return the information, rather than recreate it all over again.\n\n\nManual Deployment\n-----------------\n\nFirst, deploy the Vendor-deployment stack to prepare a bucket for Serverless\nartifacts.\n::\n  aws cloudformation deploy --stack-name Vendor-deployment --template-file vendor/aws/vendor-deployment.yml\n\nThe deployment bucket name can be found from the stack outputs.\n::\n  aws cloudformation describe-stacks --stack-name Vendor-deployment\n\n\nNext we can package and deploy the Vendor service.\n::\n  aws cloudformation package --template-file vendor/aws/vendor.yml --s3-bucket {Vendor-deployment.BucketName} --output-template-file /tmp/vendorpk.yml\n  aws cloudformation deploy --stack-name Vendor --template-file /tmp/vendorpk.yml --capabilities CAPABILITY_IAM\n\nAgain, the service URL can be found from the stack outputs.\n::\n  aws cloudformation describe-stacks --stack-name Vendor\n\n\n\nDevelopment\n===========\n\nBuild toolchains\n----------------\n\nBecause Lambda runs on a readonly filesystem, building is hard as the build\ntools are not available on the system. Therefore, we have cheated a little and\ninstead spawn our own 'Lambda' on a self-destructing EC2 instance. This is done\nby passing a script into the EC2 user-data and setting the instance to\nterminate on shutdown, which the script does on exit.\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/joshringer/python-vendor",
    "keywords": "aws lambda vendor build binary package wheel",
    "license": "Public Domain",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vendor",
    "package_url": "https://pypi.org/project/vendor/",
    "platform": "",
    "project_url": "https://pypi.org/project/vendor/",
    "project_urls": {
      "Homepage": "https://github.com/joshringer/python-vendor"
    },
    "release_url": "https://pypi.org/project/vendor/0.1/",
    "requires_dist": [
      "boto3 (>=1.4.4)",
      "packaging",
      "requests",
      "six"
    ],
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
    "summary": "Vendor provides an AWS service API for building binary Python packages for use in Lambda functions.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3404983,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21f35719cd2314fd66a0605218929bfda6de4edf4e2450d773b65adade8ce9e3",
          "md5": "41efc44d83f2452961807398b1f98060",
          "sha256": "b3ddb7e0ba334d3e73ed8fbfd437c243526b8dfdd98206e1e1a581361b72a6f1"
        },
        "downloads": -1,
        "filename": "vendor-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41efc44d83f2452961807398b1f98060",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
        "size": 13745,
        "upload_time": "2017-12-10T08:34:29",
        "upload_time_iso_8601": "2017-12-10T08:34:29.737583Z",
        "url": "https://files.pythonhosted.org/packages/21/f3/5719cd2314fd66a0605218929bfda6de4edf4e2450d773b65adade8ce9e3/vendor-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f12383c6fa95f3d9276d837d145bca6739ffa380932b39237ddf6c888f2eeaab",
          "md5": "d23b1b919ff087dd97e61e1593ab8600",
          "sha256": "0b94221531404a04a3cff6b8f2f45a6b6d5a3db6b4ded773ee08f9b111aa65e6"
        },
        "downloads": -1,
        "filename": "vendor-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d23b1b919ff087dd97e61e1593ab8600",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
        "size": 11913,
        "upload_time": "2017-12-10T08:34:31",
        "upload_time_iso_8601": "2017-12-10T08:34:31.586699Z",
        "url": "https://files.pythonhosted.org/packages/f1/23/83c6fa95f3d9276d837d145bca6739ffa380932b39237ddf6c888f2eeaab/vendor-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21f35719cd2314fd66a0605218929bfda6de4edf4e2450d773b65adade8ce9e3",
        "md5": "41efc44d83f2452961807398b1f98060",
        "sha256": "b3ddb7e0ba334d3e73ed8fbfd437c243526b8dfdd98206e1e1a581361b72a6f1"
      },
      "downloads": -1,
      "filename": "vendor-0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "41efc44d83f2452961807398b1f98060",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
      "size": 13745,
      "upload_time": "2017-12-10T08:34:29",
      "upload_time_iso_8601": "2017-12-10T08:34:29.737583Z",
      "url": "https://files.pythonhosted.org/packages/21/f3/5719cd2314fd66a0605218929bfda6de4edf4e2450d773b65adade8ce9e3/vendor-0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f12383c6fa95f3d9276d837d145bca6739ffa380932b39237ddf6c888f2eeaab",
        "md5": "d23b1b919ff087dd97e61e1593ab8600",
        "sha256": "0b94221531404a04a3cff6b8f2f45a6b6d5a3db6b4ded773ee08f9b111aa65e6"
      },
      "downloads": -1,
      "filename": "vendor-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d23b1b919ff087dd97e61e1593ab8600",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*",
      "size": 11913,
      "upload_time": "2017-12-10T08:34:31",
      "upload_time_iso_8601": "2017-12-10T08:34:31.586699Z",
      "url": "https://files.pythonhosted.org/packages/f1/23/83c6fa95f3d9276d837d145bca6739ffa380932b39237ddf6c888f2eeaab/vendor-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}