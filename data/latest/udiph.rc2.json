{
  "info": {
    "author": "Antonio Leitao",
    "author_email": "aleitao@novaims.unl.pt",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Uniform Distributed Persistent Homology (UDiPH)\n\n\n[![Downloads](https://pepy.tech/badge/udiph)](https://pepy.tech/project/udiph) [![PyPI license](https://img.shields.io/pypi/l/ansicolortags.svg)](https://github.com/Antonio-Leitao/dbsampler/blob/main/LICENSE) [![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-03a80e.svg)](https://github.com/Antonio-Leitao) [![version ](https://img.shields.io/badge/release-0.0.2-blue.svg)](https://pypi.org/project/udiph/) [![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)\n\nUDiPH is a package that creates a new metric space where the points are uniformly sampled with respect to a global metric. It is oriented for creating Vietoris-Rips filtrations that are independent of the metric of the initial space. This work is very influced on [UMAP](https://github.com/lmcinnes/umap).\n\nUDiPH excells when comparing homology of spaces with different metrics, for example consider a continuous deformation acting on a set of points:\n<p align=\"center\">\n  <img src=\"images/udiph_readme.png\" width=\"800\"/>\n</p>\n\nStandard Vietoris-Rips filtration:\n<p align=\"center\">\n  <img src=\"images/2filtrations_std.png\" width=\"800\"/>\n</p>\nVietoris-Rips filtration using metric space created by UDiPH is based on local density:\n<p align=\"center\">\n  <img src=\"images/2filtrations_udiph.png\" width=\"800\"/>\n</p>\nSince we are in the presence of a continuous deformation it is excpeted that the homology remains invariant. However due to the difference in metric in the image space, the standard Vietoris-Rips filtration does not accuratly capture this invariance. Notice how a filtration using UDiPH captures manages to capture both homology generators.\n\n## Installation\nDependencies:\n  - Numpy\n  - Scipy\n  - Sklearn\n\nUDIPH is available on PyPI,\n\n```sh\npip install udiph\n```\n## Usage\n```python\nimport udiph\nM = udiph.UDIPH(X=X, n_neighbors=15, distance_matrix=False, return_complex=False)\n```\n**Parameters:**\n-  ``X``: numpy array of shape=(samples,features) or shape=(samples,samples) containing the data. If data is a pairwise distance matrix then ``distance_matrix`` must be set to True.\n -  ``n_neighbors``: This determines the number of points sampled from the decision boundary. More points equates for a denser sample but slows the algorithm. Default is 1000.\n -  ``distance_matrix``: Boolean value indicating if input data is or not a distance_matrix \n -  ``return_complex``: Boolean value indicating whether to return the weighted 1-d simplicial complex instead of a pairwise distance matrix.\n \n**Returns:**\n -  ``M``: numpy array (samples, samples) pairwise distance matrix with respect to new Riemannian metric.\n -  ``A``: (optional) numpy array (samples, samples) adjacency matrix of the weighted 1-d simplicial complex.\n\n## How does it work?\nThe basic assumption on UDiPh relies on the idea that data comes uniformly sampled from an unknown Riemmannian manifold. As a consequence, \"bigger\" holes in the governing manifold are respresented by having a higher number of points sampled from their boundary, and \"small\" holes will have less points sampled.\n\nFor an in-depth explanation look at this [post](https://antonio-leitao.netlify.app/post/ph/). \n \n## Citation\nIf you use UDiPH in your work or parts of the algorithm please consider citing:\n> Paper coming soon",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Antonio-Leitao/udiph",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "udiph",
    "package_url": "https://pypi.org/project/udiph/",
    "platform": "",
    "project_url": "https://pypi.org/project/udiph/",
    "project_urls": {
      "Homepage": "https://github.com/Antonio-Leitao/udiph"
    },
    "release_url": "https://pypi.org/project/udiph/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Uniform distributed persistent homology.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12551011,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ef2b211f6147dba33890292cd715b4b958d2bf110062cccb48efaad80a42fed",
          "md5": "d618e9dbad80ccff9ac83b2fba7f4620",
          "sha256": "50567d02c02aae1564f8d1ebea94ce53ac71bc501c889f4bb163df000caedc1c"
        },
        "downloads": -1,
        "filename": "udiph-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d618e9dbad80ccff9ac83b2fba7f4620",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4449,
        "upload_time": "2022-01-11T17:32:05",
        "upload_time_iso_8601": "2022-01-11T17:32:05.973439Z",
        "url": "https://files.pythonhosted.org/packages/1e/f2/b211f6147dba33890292cd715b4b958d2bf110062cccb48efaad80a42fed/udiph-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "339f43cce3d4a6a3e34700c4a190247f5b71e6f99e942ab22a2b86ca4037e18b",
          "md5": "3e0384083f0d50e23bd7d091362ade82",
          "sha256": "aba8c6eb40fb2141181aedbe1018ad7b4653dfcce5735697c415a7874b72bc4e"
        },
        "downloads": -1,
        "filename": "udiph-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3e0384083f0d50e23bd7d091362ade82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3862,
        "upload_time": "2022-01-12T13:22:29",
        "upload_time_iso_8601": "2022-01-12T13:22:29.776950Z",
        "url": "https://files.pythonhosted.org/packages/33/9f/43cce3d4a6a3e34700c4a190247f5b71e6f99e942ab22a2b86ca4037e18b/udiph-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "339f43cce3d4a6a3e34700c4a190247f5b71e6f99e942ab22a2b86ca4037e18b",
        "md5": "3e0384083f0d50e23bd7d091362ade82",
        "sha256": "aba8c6eb40fb2141181aedbe1018ad7b4653dfcce5735697c415a7874b72bc4e"
      },
      "downloads": -1,
      "filename": "udiph-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3e0384083f0d50e23bd7d091362ade82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3862,
      "upload_time": "2022-01-12T13:22:29",
      "upload_time_iso_8601": "2022-01-12T13:22:29.776950Z",
      "url": "https://files.pythonhosted.org/packages/33/9f/43cce3d4a6a3e34700c4a190247f5b71e6f99e942ab22a2b86ca4037e18b/udiph-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}