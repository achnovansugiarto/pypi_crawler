{
  "info": {
    "author": "Philip Gundy",
    "author_email": "philipgundy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n# Overview\ntldr: Do you hate trying to breakdown which underlying trends or movements are driving topline metric movements? HSA can solve that.\n\nHot Spot Analysis (HSA) is an analytic reporting framework that removes any statitical ambiguity. HSA is meant to enhance reporting, find insights, and easily dive further into the 'why' metrics have shifted. This is done by automatically running all viable cuts within the data across the provided features for any metrics.\n\n## Future updates plan to add the following functionality:\n- multiprocessing to improve module calculation speed\n- support for non-dataframe user functions (graphs, etc.)\n\n\n## Short Theoretical Demonstration:\n\nIf we have 3 columns [a, b, c], and we want to cut our data using those columns we would have to group our data as such to know all of the interactions' impact on our metric of interst. And this problem becomes increasingly complicated as we increase the number of columns. \n\n**Using 3 columns:**\n[a, b, c] -> 7 valid data cuts\n  - @ depth = 1: [a,b,c] <- 3 data cuts\n  - @ depth = 2: [ab,ac,bc] <- 3 data cuts\n  - @ depth = 3: [abc] <- 1 data cuts\n\n**HSA Output Data Structure:**\n\n| index | depth | data_cuts         | data_content        | data_cut_content      | user function output |\n| ----- | ----- | ----------------- | ------------------- | --------------------- | -------------------- |\n| 1     | 1     | [column a]        | [row_value x]       | ['a:x']               | [Int/float/etc.]     |\n| 2     | 1     | [column b]        | [row_value y]       | ['b:y']               | [Int/float/etc.]     |\n| 3     | 1     | [column c]        | [row_value z]       | ['b:y']               | [Int/float/etc.]     |\n| 4     | 2     | [Columns a, b]    | [row_value x, y]    | ['a:x', 'b:y']        | [Int/float/etc.]     |\n| 5     | 2     | [Columns a, c]    | [row_value x, z]    | ['a:x', 'c:z']        | [Int/float/etc.]     |\n| 6     | 2     | [Columns c, b]    | [row_value y, z]    | ['b:y', 'c:z']        | [Int/float/etc.]     |\n| 7     | 3     | [Columns a, b, c] | [row_value x, y, z] | ['a:x', 'b:y', 'c:z'] | [Int/float/etc.]     |\n\n***Note:*** Each column yields X rows equal determined by number of unique values. Thus 'ab' woudl yield a<sub>N</sub> * b<sub>M</sub> rows in the output where column a has N unique values, and column B has M unique values thus ab yields N*M rows.\n\n\n# An Example:\n\nUsing the titanic data from seaborn we can look at a semi-practical example using some data.\n\n| survived | class | adult_male | embark_town |\n| -------- | ----- | ---------- | ----------- |\n| 0        | Third | True       | Southampton |\n| 1        | First | False      | Cherbourg   |\n| 1        | First | False      | Southampton |\n| 0        | Third | True       | Queenstown  |\n*for each of the 891 passengers on the titanic*\n\n\n\n## A Simple Example Using hot_spot_analysis:\n```\nimport numpy as np\nimport pandas as pd\nimport seaborn as sb\nfrom hot_spot_analysis.hot_spot_analysis import HotSpotAnalysis\n\n# Load our data\ndf = sb.load_dataset('titanic')\ntitanic = df[['survived', 'class',  'adult_male', 'embark_town']]\n\n# Define our metric function\ndef survival_rate(data):\n    temp = data.agg(survival_rate = pd.NamedAgg('survived', np.mean))\n    return temp\n\n# Input our data cuts, depth limit, and data\nhsa = HotSpotAnalysis(\n    data_cuts=['class',  'adult_male', 'embark_town'],\n    depth_limit = 3,\n    data = titanic\n)\n\n# Run the hot spot analysis\nhsa.run_hsa(survival_rate)\n\n# Export the data\nhsa_output = hsa.get_hsa_data() # export the analysis results\n\n# Review some of the features\nprint(hsa_output.head())\nprint(hsa_output.tail())\n\n# Or use some of the built in search features\nhsa.search_hsa_data(\n    target_var = 'data_content', \n    search_terms = 'Southampton'\n    )\n\n```\n\n\n## A (mostly) pandas example without hot_spot_analysis:\n\nDoes using hot_spot_analysis actually make life that much easier?\nYES.\n\nLooking at the following for \n\n```\nimport numpy as np\nimport pandas as pd\nimport seaborn as sb\n\ndf = sb.load_dataset('titanic')\ntitanic = df[['survived', 'class',  'adult_male', 'embark_town']]\n\ndef survival_rate(data):\n    temp = data.agg(survival_rate = pd.NamedAgg('survived', np.mean))\n    return temp\n\ntitanic_by_class = survival_rate(titanic.groupby('class'))\ntitanic_by_adult_male = survival_rate(titanic.groupby('adult_male'))\ntitanic_by_embark_town = survival_rate(titanic.groupby('embark_town'))\ntitanic_by_class_adult_male = survival_rate(titanic.groupby(['class', 'adult_male']))\ntitanic_by_class_embark_town = survival_rate(titanic.groupby(['class', 'embark_town']))\ntitanic_by_adult_male_embark_town = survival_rate(titanic.groupby(['adult_male', 'embark_town']))\ntitanic_by_all = survival_rate(titanic.groupby(['class', 'adult_male', 'embark_town']))\n\n# Combine the data frames\ndfs = [\n    titanic_by_class,\n    titanic_by_adult_male,\n    titanic_by_embark_town,\n    titanic_by_class_adult_male,\n    titanic_by_class_embark_town,\n    titanic_by_adult_male_embark_town,\n    titanic_by_all\n]\n\nall_df = pd.concat(dfs, join='outer', axis=1).fillna(np.NaN)\n\n# Review some of the features\nprint(all_df.head())\nprint(all_df.tail())\n\n\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hot-spot-analysis",
    "package_url": "https://pypi.org/project/hot-spot-analysis/",
    "platform": null,
    "project_url": "https://pypi.org/project/hot-spot-analysis/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/hot-spot-analysis/0.1.4/",
    "requires_dist": [
      "pandas (>=1.3.5)",
      "numpy (>=1.21)",
      "seaborn (>=0.12.2,<0.13.0)"
    ],
    "requires_python": ">=3.7.1",
    "summary": "Compute metrics across combinations of features. Stop clicking around in tableau.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17078552,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06b50121695a36d38a0015ac4e917b800994aabe8d9d84015aa2608e58658424",
          "md5": "153954a55a0e0cd132b598abf61a73c6",
          "sha256": "05d30928470ed1a59eb2613f096d98e6f18ab5067a0f5dd98a981f2b2d6ac2b2"
        },
        "downloads": -1,
        "filename": "hot_spot_analysis-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "153954a55a0e0cd132b598abf61a73c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1",
        "size": 8447,
        "upload_time": "2023-02-28T07:36:53",
        "upload_time_iso_8601": "2023-02-28T07:36:53.001857Z",
        "url": "https://files.pythonhosted.org/packages/06/b5/0121695a36d38a0015ac4e917b800994aabe8d9d84015aa2608e58658424/hot_spot_analysis-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ceb760b3c8a6c18b1d24129ad3450894dd197b168ec783d9fc61282762ae8f07",
          "md5": "c6866f05802717c5bf5a471578b8acb4",
          "sha256": "9596369a553a890f45079f86ab560bbcd4d3dd95a6576ffeb62869c82598abfa"
        },
        "downloads": -1,
        "filename": "hot_spot_analysis-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c6866f05802717c5bf5a471578b8acb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1",
        "size": 8748,
        "upload_time": "2023-02-28T07:36:55",
        "upload_time_iso_8601": "2023-02-28T07:36:55.548861Z",
        "url": "https://files.pythonhosted.org/packages/ce/b7/60b3c8a6c18b1d24129ad3450894dd197b168ec783d9fc61282762ae8f07/hot_spot_analysis-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f34d5a28fa0432e1618d466445f39d79fea0cc4aaae55bbb7bb3d3b8daeeeed0",
          "md5": "d87640351f146e27e3d4912b31f7900a",
          "sha256": "80c2e1a6bd99a8aea740bb98911e042aebb6a084fee4faf9836e57587804a33d"
        },
        "downloads": -1,
        "filename": "hot_spot_analysis-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d87640351f146e27e3d4912b31f7900a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1",
        "size": 8550,
        "upload_time": "2023-02-28T07:47:08",
        "upload_time_iso_8601": "2023-02-28T07:47:08.082576Z",
        "url": "https://files.pythonhosted.org/packages/f3/4d/5a28fa0432e1618d466445f39d79fea0cc4aaae55bbb7bb3d3b8daeeeed0/hot_spot_analysis-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f07d7c5b059af9319295531a8231846704332199b02ed57c33d6d815e4cee859",
          "md5": "c7bf2708463d066f7aee834f7c093447",
          "sha256": "b8f8e28451b695dbfd4edc22db8e92a7b27aa3a9f1a8630e3966e8f16618fab2"
        },
        "downloads": -1,
        "filename": "hot_spot_analysis-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c7bf2708463d066f7aee834f7c093447",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1",
        "size": 8872,
        "upload_time": "2023-02-28T07:47:10",
        "upload_time_iso_8601": "2023-02-28T07:47:10.162861Z",
        "url": "https://files.pythonhosted.org/packages/f0/7d/7c5b059af9319295531a8231846704332199b02ed57c33d6d815e4cee859/hot_spot_analysis-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f34d5a28fa0432e1618d466445f39d79fea0cc4aaae55bbb7bb3d3b8daeeeed0",
        "md5": "d87640351f146e27e3d4912b31f7900a",
        "sha256": "80c2e1a6bd99a8aea740bb98911e042aebb6a084fee4faf9836e57587804a33d"
      },
      "downloads": -1,
      "filename": "hot_spot_analysis-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d87640351f146e27e3d4912b31f7900a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.1",
      "size": 8550,
      "upload_time": "2023-02-28T07:47:08",
      "upload_time_iso_8601": "2023-02-28T07:47:08.082576Z",
      "url": "https://files.pythonhosted.org/packages/f3/4d/5a28fa0432e1618d466445f39d79fea0cc4aaae55bbb7bb3d3b8daeeeed0/hot_spot_analysis-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f07d7c5b059af9319295531a8231846704332199b02ed57c33d6d815e4cee859",
        "md5": "c7bf2708463d066f7aee834f7c093447",
        "sha256": "b8f8e28451b695dbfd4edc22db8e92a7b27aa3a9f1a8630e3966e8f16618fab2"
      },
      "downloads": -1,
      "filename": "hot_spot_analysis-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "c7bf2708463d066f7aee834f7c093447",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.1",
      "size": 8872,
      "upload_time": "2023-02-28T07:47:10",
      "upload_time_iso_8601": "2023-02-28T07:47:10.162861Z",
      "url": "https://files.pythonhosted.org/packages/f0/7d/7c5b059af9319295531a8231846704332199b02ed57c33d6d815e4cee859/hot_spot_analysis-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}