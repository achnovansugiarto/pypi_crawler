{
  "info": {
    "author": "F.-X. Pineau <francois-xavier.pineau@astro.unistra.fr>",
    "author_email": "F.-X. Pineau <francois-xavier.pineau@astro.unistra.fr>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# moc-set\n\nA command-line tool to build, update and query a persistent set of\nMulti-Order Coverages maps (MOCs), see [this IVOA standard](https://ivoa.net/documents/MOC).\n\n## About\n\nQuery a set of S-MOCs pre-saved in a single large binary file.  \nThe file can be seen as a persistent cache preventing\nfrom having to open/read/parse a possible large set of FITS files.  \nA `moc-set` can be updated by adding or removing MOCs from it, without having \nto re-build the full binary file (except from time to time using the `purge` command).\nIt is built in such a way that read operations are allowed while updating (add, remove, change status, purge) \nthe binary file, but a write operation immediately fails (return status != 0) if another write operation \nis already ongoing.  \n\n\n## Used by\n\nMOC set in used:\n* in production in [VizieR](https://vizier.u-strasbg.fr/viz-bin/VizieR) when querying a cone\n  on the `> 16_000` catalogues\n* in an ongoing project leading by [@lmichel](https://github.com/lmichel) to look for XMM FOVs intersecting a user define region.\n\n\n## Similar to the [CDS MOC Server](http://alasky.unistra.fr/MocServer/query).  \n\nThe [CDS MOC Server](http://alasky.unistra.fr/MocServer/query) additionally stores metadata information associated \nto each MOC, allows queries with constraints on those metadata, and supports T-MOCs and ST-MOCs in addition to S-MOCs. \n\n\nSo, `moc-set` offers functionalities similar to **a sub-part of** the MOC Server functionalities\n(except for T-MOCs and ST-MOCs, one could build a MOC Server like service based on `moc-set`, \nusing an additional mechanism to store and filter metadata).\n\nThe MOC Server is implemented in Java. All information used by the MOC Server are loaded \nin memory at service startup. To speed up the starting time, the MOC Server also resort on a binary dump, \nneeding synchronisation mechanisms with the running server data when the list of MOCs is updated. \n\n`moc-set` has primarily been developed for VizieR needs: lighter/simpler version of the MOC server, with \nless information needed (VizieR already store catalogues metadata), system programming language with no runtime, \npossibly less memory available, ...\n\n\n## Install\n\n### From pypi for python users\n\nMOCSet is available in [pypi](https://pypi.org/project/moc-set),\nyou can thus install the `mocset` executable using `pip`:\n```bash\npip install -U moc-set\nmocset --help\n```\n\n### Debian package\n\nDownload the last `mocset_vxx_yyy.deb` corresponding to your architecture\n(`x86_64_musl` has the most chances to fit your needs)\nfrom the [github release page](https://github.com/cds-astro/cds-moc-rust/releases).\n\nInstall the `.deb` by clicking on it or using the command line:\n```bash\nsudo dpkg -i mocset_vxx_yyy.deb\nsudo apt-get install -f\n```\n\nThen you can use the tool:\n```bash\nmocset\nman mocset\n```\n\nYou can uninstall using, e.g.:\n```bash\nsudo dpkg -r $(dpkg -f mocset_vxx_yyy.deb Package)\n```\n\n### Pre-compile binaries for MacOS, Linux and Windows\n\nDownload the last `mocset-vxx_yyy.tar.gz` corresponding to your architecture\nfrom the [github release page](https://github.com/cds-astro/cds-moc-rust/releases).\nYou probably want ot use:\n* Linux: `mocset-vxx-x86_64-unknown-linux-musl.tar.gz`\n* MacOS: `mocset-vxx-x86_64-apple-darwin.tar.gz`\n* Windows: `mocset-vxx-.zip`\n\nWARNING: for linux, use [`musl`](https://en.wikipedia.org/wiki/Musl) instead of `gnu` (high chances of incompatibility in the latter case)\n\nThe tar contains a single executable binary file.\n```bash\ntar xzvf mocset-vxx-yyy.tar.gz\n./mocset\n```\n\n### Compile from source code\n\n[Install rust](https://www.rust-lang.org/tools/install)\n(and check that `~/.cargo/bin/` is in your path),\nor update the Rust compiler with:\n```bash\nrustup update\n``` \n\nClone the [moc lib rust](https://github.com/cds-astro/cds-moc-rust) project:\n```dtd\ngit clone https://github.com/cds-astro/cds-moc-rust\n```\nInstall from using `cargo`:\n```bash\ncargo install --path crates/set\n```\n\n\n## Usage\n\nExec `mocset --help` to get the help message:\n```\n> mocset --help\n...\nUSAGE:\n    mocset <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Print help information\n    -V, --version    Print version information\n\nSUBCOMMANDS:\n    append       Append the given MOCs to an existing mocset\n    chgstatus    Change the status flag of the given MOCs identifiers (valid, deprecated,\n                     removed)\n    extract      Extracts a MOC from the given moc-set\n    help         Print this message or the help of the given subcommand(s)\n    list         Provide the list of the MOCs in the mocset and the associated flags\n    make         Make a new mocset\n    purge        Purge the mocset removing physically the MOCs flagged as 'removed'\n    query        Query the mocset\n```\n\n### MOC set creation\n\nSimply list in a csv file a set of identifier (integer in `[0, 281_474_976_710_655]`),\nand MOC FITS file path. See e.g the file [moclist.txt](resources/tests/moclist.txt):\n```bash\n1,data/CDS_B_bax_bax.fits\n2,data/CDS_I_172_irs.fits\n3,data/CDS_I_274_ccdm.fits\n4,data/CDS_I_42_catalog.fits\n5,data/CDS_II_203A_faint.fits\n6,data/CDS_II_261_GOODS_S.fits\n7,data/CDS_II_339_summary.fits\n8,data/CDS_II_97_ans.fits\n9,data/CDS_III_206_orion.fits\n10,data/CDS_III_43_main.fits\n...\n```\n\nThen execute `moc-set` from the `mocset` command:\n```bash\n> mocset make --n128 3 --moc-list moclist.txt --delimiter , mocset.bin\n```\nor from the source code, [installing](https://www.rust-lang.org/tools/install) the Rust compiler (including Cargo):\n```bash\n> cargo run --release -- make --n128 3 --moc-list moclist.txt --delimiter , mocset.bin\n```\nTo build the moc-set binary file `mocset.bin`.\n\nThe total number of MOCs that can be stored in the file equals `n128 * 128 - 1 (so 383 in the example above, since n128=3).\n\n\nSee the help message for more details:\n```\n> mocset make --help\n...\nMake a new mocset\n\nUSAGE:\n    mocset make [OPTIONS] <OUTPUT>\n\nARGS:\n    <OUTPUT>    Output file, storing the MOC set\n\nOPTIONS:\n    -d, --delimiter <SEPARATOR>       Delimiter used to separate the moc identifier from the moc\n                                      path [default: \" \"]\n    -h, --help                        Print help information\n    -l, --moc-list <MOC_LIST_PATH>    Input file containing the 'moc_id moc_path' list (default:\n                                      read from stdin) 'moc_id' must be a positive integer smaller\n                                      than 281_474_976_710_655 (can be stored on 6 bytes). Use a\n                                      negative value to flag as deprecated\n    -n, --n128 <N128>                 n x 128 - 1 = number of MOCs that can be stored in this moc\n                                      set [default: 1]\n```\n\n### List the content of a MOC set\n\nSimply use `mocset list`:\n```\n> mocset list mocset.bin\nid,status,depth,n_ranges,byte_size\n1,valid,11,1673,13384\n2,valid,11,36022,288176\n3,valid,11,55470,443760\n4,valid,11,587,4696\n5,valid,11,534,4272\n6,valid,11,17,136\n...\n```\n* `status`: can be `valid`, `deprecated` or `removed`\n* `n_ranges`: number of ranges in the MOC\n* `byte_size`: size of the MOC stored in the MOC set (in bytes)\n\nSee the help message:\n```\n> mocset list --help\n... \nProvide the list of the MOCs in the mocset and the associated flags\n\nUSAGE:\n    mocset list [OPTIONS] <FILE>\n\nARGS:\n    <FILE>    The moc-set to be read\n\nOPTIONS:\n    -h, --help      Print help information\n    -r, --ranges    Print byte ranges instead of byte_size\n```\n\n\n### Querying a MOC set\n\nSee the help to get the different query modes:\n```\n> mocset query --help\n...\nUSAGE:\n    mocset query [OPTIONS] <FILE> <SUBCOMMAND>\n\nARGS:\n    <FILE>    The moc-set to be read\n\nOPTIONS:\n    -c, --print-coverage    Print in output the sky fraction (in '[0.0, 1.0]') covered by each\n                            selected MOC\n    -d, --add-deprecated    Also selects MOCs flagged as deprecated\n    -h, --help              Print help information\n\nSUBCOMMANDS:\n    cone    A cone, i.e. a position with a small area around (approximated by a MOC)\n    help    Print this message or the help of the given subcommand(s)\n    moc     The given MOC (you create a moc using moc-cli and pipe it into moc-set)\n    pos     Single position\n\n```\n\n#### Query for a single position\n\nTo obtain the list of the MOCs containing a the position 90.0 +0.0 (in decimal degrees), use:\n```bash\n> mocset query moclist.bin pos 90.0 +0.0\nid\n161\n```\nThe result is the list of the identifier of the MOC covering the input position (only one MOC, with identifier 161 in our example).\n\nSee the full help:\n```\n> mocset query pos --help\n...\nSingle position\n\nUSAGE:\n    mocset query <FILE> pos <LON_DEG> <LAT_DEG>\n\nARGS:\n    <LON_DEG>    Longitude of the cone center (in degrees)\n    <LAT_DEG>    Latitude of the cone center (in degrees)\n\nOPTIONS:\n    -h, --help    Print help information\n```\n\n\n#### Query for a cone\n\nTo obtain the list of the MOCs overlapping the cone of center 90.0 +0.0 and having a radius of 320 arcsec, use:\n```bash\n> mocset query mocset.bin cone 90.0 +0.0 320.0 --precision 5\nid\n2\n3\n35\n161\n```\n\n`--precision` is optional, its default value is 2:\n * at a `precision` of 0, `mocset` transforms the input cone in a MOC \ncontaining 1 to 9 values. \n * at a `precision` of 1, `mocset` transforms the input cone in a MOC\ncontaining 1 to `9x4` values.\n * at a `precision` of `n`, `mocset` transforms the input cone in a MOC\ncontaining 1 to `9x4^n` values.\n\nSee the help:\n```\n> mocset query cone --help\n...\nA cone, i.e. a position with a small area around (approximated by a MOC)\n\nUSAGE:\n    mocset query <FILE> cone [OPTIONS] <LON_DEG> <LAT_DEG> <R_ARCSEC>\n\nARGS:\n    <LON_DEG>     Longitude of the cone center (in degrees)\n    <LAT_DEG>     Latitude of the cone center (in degrees)\n    <R_ARCSEC>    Radius of the cone (in arcseconds)\n\nOPTIONS:\n    -h, --help                Print help information\n    -i, --included            Returns MOCs containing the whole cone MOC (instead of overlapping\n                              only)\n    -p, --precision <PREC>    MOC precision; 0: depth 'd' at which the cone is overlapped by 1 to\n                              max 9 cells; 1: depth 'd' + 1; n: depth 'd' + n [default: 2]\n```\n\n#### Query for a MOC\n\nTo obtain the list of the MOCs overlapping the MOC stored in a given FITs file, e.g the MOC of XMM4 DR9, use:\n```\n> mocset query mocset.bin moc YOUR_PATH/CDS_IX_59_xmm4dr9s.fits\nid\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n...\n```\n\nYou may also use a MOC generate on the fly using [moc-cli](https://github.com/cds-astro/cds-moc-rust/tree/main/crates/cli)\n```\n> moc from polygon 5 \"(0.0,0.0),(10.0,0.0),(0.0,10.0)\" ascii | mocset query mocset.bin moc - --format ascii\nid\n1\n2\n3\n4\n7\n8\n13\n26\n27\n35\n36\n60\n63\n...\n```\n\nSee the help\n```\n> mocset query moc --help\n...\nThe given MOC (you create a moc using moc-cli and pipe it into moc-set)\n\nUSAGE:\n    mocset query <FILE> moc [OPTIONS] <INPUT>\n\nARGS:\n    <INPUT>    Path of the input MOC file (or stdin if equals \"-\")\n\nOPTIONS:\n    -f, --format <INPUT_FMT>    Format of the input MOC ('ascii', 'json' or 'fits') [default: guess\n                                from the file extension]\n    -h, --help                  Print help information\n    -i, --included              Returns MOCs containing the whole given MOC (instead of overlapping)\n\n```\n\n#### Generic parameter\n\nFor all queries, the option `--add-deprecated` (or `-d`) add the MOCs flagged as deprecated in\nthe output, e.g.:\n```bash\nmocset query --add-deprecated moclist.bin pos 90.0 +0.0 --precision 5\n```\n\n### Updating a MOC set\n\nYou can:\n* `chgstatus` change the status of a MOC in the MOC set to flag it as `deprecated` or back to `valid`, \n  or as `removed` (WARNING: once removed, a MOC cannot be flagged back as `deprecated` or `valid`)\n* `append` a new MOC at the end of the MOC set, the ID of a removed MOC can be reused\n* `purge` a MOC set to physically remove all MOCs flagged as `removed`.\n  This process basically re-write the whole MOC set file.\n \nExample of usage of `chgstatus`\n```\n> mocset list mocset.bin\nid,status,depth,n_ranges,byte_size\n1,valid,11,1673,13384\n2,valid,11,36022,288176\n...\n> mocset chgstatus mocset.bin 1 deprecated\n> mocset list mocset.bin\nid,status,depth,n_ranges,byte_size\n1,deprecated,11,1673,13384\n2,valid,11,36022,288176\n...\n> mocset chgstatus mocset.bin 1 valid\n> mocset list mocset.bin\nid,status,depth,n_ranges,byte_size\n1,valid,11,1673,13384\n2,valid,11,36022,288176\n...\n> mocset chgstatus mocset.bin 1 removed\n> mocset list mocset.bin\nid,status,depth,n_ranges,byte_size\n1,removed,11,1673,13384\n2,valid,11,36022,288176\n...\n```\n\nExample of usage of `append`:\n```\n> mocset append mocset.bin 3000 MY_PATH/my_new_moc.fits\n```\n\nExample of usage of `purge`:\n```\n> mocset purge mocset.bin\n```\n\nHelp messages:\n```\n> mocset chgstatus --help\n... \nChange the status flag of the given MOCs identifiers (valid, deprecated, removed)\n\nUSAGE:\n    mocset chgstatus <FILE> <ID> <NEW_STATUS>\n\nARGS:\n    <FILE>          The moc-set to be updated\n    <ID>            Identifier of the MOC we want to modify the flag\n    <NEW_STATUS>    New status flag to be set\n\nOPTIONS:\n    -h, --help    Print help information\n```\n\n```\n> mocset append --help\n...\nAppend the given MOCs to an existing mocset\n\nUSAGE:\n    mocset append <FILE> <ID> <MOC_PATH>\n\nARGS:\n    <FILE>        The moc-set to be updated\n    <ID>          Identifier of the MOC we want to append. 'moc_id' must be a positive integer\n                  smaller than 281_474_976_710_655 (can be stored on 6 bytes). Use a negative\n                  value to flag as deprecated\n    <MOC_PATH>    Path of the MOC to be append\n\nOPTIONS:\n    -h, --help    Print help information\n```\n\n\n```\n> mocset purge --help\n...\nPurge the mocset removing physically the MOCs flagged as 'removed'\n\nUSAGE:\n    mocset purge [OPTIONS] <FILE>\n\nARGS:\n    <FILE>    The moc-set file to be purge\n\nOPTIONS:\n    -h, --help           Print help information\n    -n, --n128 <N128>    n x 128 - 1 = number of MOCs that can be stored in this purged moc set, if\n                         larger than the current value\n\n\n```\n\n# Implementation information\n\n## Principle\n\nWe resort on mapped files and the system disk cache.\nAlthough the first `moc-set` query may still be quite long,\nthe performances of subsequent queries will depend on the ability\nof the system to keep the file's data in the disk cache.\n\n### Remark\n\nIf used on a server with a lot of I/O, the data may not stay in the disk cache for long.\nIf we nevertheless want to always answer quickly, there is at least three options:\n* write a daemon loading the full dataset in memory \n* create a VM (or a docker?) containing only the `moc-set` tool\n* my favourite one: use shared memory, resorting e.g. on the [shared_memory crate](https://crates.io/crates/shared_memory)\n\n### File structure\n\nThe structure of the file is made of two main blocks:\n* a fixed length header, made of\n    + a fixed length metadata\n    + a fixed length cumulative byte index\n* a extensible data part\n\n#### Metadata part\n\nA fixed size (chosen at creation) buffer of `n` `u64` elements.\n* the first `u64` contains an indication on the buffer size\n* all other `u64` values, one per MOC in the `moc-set`, are made of 3 components:\n    + a `u8` flag taking 4 possible values (only 2 bits are used, 6 are remaining):\n        - `Valid` MOC\n        - `Deprecated` MOC\n        - `Removed` MOC\n        - `Free` slot\n    + the depth of the MOC, stored on `u8 (max depth = 64, thus 2 bits are remaining and could be used)\n    + the MOC identifier, stored on the 6 remaining bytes.\n\nWe stop reading the metadata when we encounter the first `Free` flag.\n\nThe file can store `n - 1` MOCs.\n\n#### Cumulative byte index\n\nA fixed size (chosen at creation) buffer of `n` `u64` elements.\n* the first `u64` contains the byte size of the header, i.e. the size of the file with no data\n  it also correspond to the starting byte of the first MOC that will be inserted in the `moc-set`; \n* all other elements at index `i` contains the size of the file if only storing the \n  $i+1$ first MOCs.\n\nTo get the size (in bytes) of the MOC at index `i`, we can simply perform the operation:\n`cumulIndex[i + 1] - cumulIndex[i]`.\n\n#### Data part\n\nA simple concatenation of the MOCs ranges.  \nAccording to the depth of each MOC, the ranges are either ranges of `u32` or ranges of `u64`.\n\n### Updates and Reading while writing\n\nThe only MOC information that can be modified (re-written) is its status flag.  \nBut the status flag is coded on a single byte and a CPU read and write single bytes atomically.  \nAlthough, several cores may see the byte in a different state, it is not critical:\na MOC flagged as 'deprecated' or 'deleted' is still physically stored in the `moc-set`,\nand we can accept a small delay in changing its state.\n\n* Read operation order\n    + do not need a read lock\n    + read the metadata part of the header\n    + read the cumulative bytes index in the header\n    + read the MOC(s)\n* Write Operation order\n    + ask for a write lock (create a .lock file)\n    + append the new MOC(s) to the end of the file\n    + append the new entries to the cumulative bytes index\n    + possibly update the flag of existing MOCs and append new entries to the end of the header\n\nThe header, i.e. both the metadata and the cumulative byte index, is of fixed size,\nwith free space reserved at file creation.  \nIf a problem occurs while writing, the update is simply going to be ignored\n(except the part written in the meta): at the next write operation, if the meta\nhas not been written (and it is the last part to be written), the code assumes\nthat the cumulative index beyond the know meta elements is free, the same for the\ndata byte beyond the last known cumulative index byte.\n\nIf a process is reading while another is writing, the newly written part will also\nsimply be ignored if the metadata part has not yet been updated/written.\n\nIt works well because we only append new MOCs (we never delete information), \nwe only update metadata to flag a MOC as removed of deprecated, and we\nrespect the read/write order as described above.\n\n#### Purge\n\nThe purge operation is the only one removing physically stored MOCs.  \nIt actually consists in building a new `moc-set`, removing the MOCs flagged as removed,\nin a temporary file, and then making a move replacing the previous `moc-set`\nby the new one.  \nThe `purge` operation uses a write lock.\n\n## ToDo list\n\n* [ ] Create compact MOCs in which ranges of a single element (at the moc max_order) are replaced by a single value\n      with a flag on the 2 LSB telling if the value id\n    + 0: a single cell\n    + 1: a range starting value\n    + 2: a range ending value\n\n\n## Recall\n\n* Drop linux disk cache, in root mode: `sync; echo 3 > /proc/sys/vm/drop_caches`\n* Build for being compatible with a large range of systems, avoiding the GLIBC version error\n  (see [this post](https://stackoverflow.com/questions/63724484/build-and-bind-against-older-libc-version)):\n> cargo build --target x86_64-unknown-linux-musl\n\n\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/set",
    "keywords": "healpix,moc",
    "license": "MIT OR Apache-2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "moc-set",
    "package_url": "https://pypi.org/project/moc-set/",
    "platform": null,
    "project_url": "https://pypi.org/project/moc-set/",
    "project_urls": {
      "Homepage": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/set",
      "repository": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/set"
    },
    "release_url": "https://pypi.org/project/moc-set/0.6.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "command-line tool to build, update and query a persistent set of HEALPix Multi-Order Coverages maps (MOCs)",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17474220,
  "releases": {
    "0.5.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "a461185d40a140ace76c8c7e4a7b0cadf581fdeafe8d20572c42931f1ed230e6",
          "md5": "5e3d0077e7f9f8bf93277dd4948daa6e",
          "sha256": "d7f140138c067d43522904277871a1dacc8151fa9129109f106551167d7ae118"
        },
        "downloads": -1,
        "filename": "moc_set-0.5.1-py3-none-macosx_10_7_x86_64.whl",
        "has_sig": false,
        "md5_digest": "5e3d0077e7f9f8bf93277dd4948daa6e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 511034,
        "upload_time": "2022-09-10T21:46:54",
        "upload_time_iso_8601": "2022-09-10T21:46:54.907397Z",
        "url": "https://files.pythonhosted.org/packages/a4/61/185d40a140ace76c8c7e4a7b0cadf581fdeafe8d20572c42931f1ed230e6/moc_set-0.5.1-py3-none-macosx_10_7_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "3aabafd331ac7db540b3c412554be2f61feab56dd59786fce262a9951d07f299",
          "md5": "ea6114e3d94c7d5ab9bdf2c5be197233",
          "sha256": "5ce4eaaab37d5c4c7058e9aebb4529a8ebbc996dec23a7821ef88f633b098c40"
        },
        "downloads": -1,
        "filename": "moc_set-0.5.1-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "ea6114e3d94c7d5ab9bdf2c5be197233",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 531571,
        "upload_time": "2022-09-10T21:46:39",
        "upload_time_iso_8601": "2022-09-10T21:46:39.323780Z",
        "url": "https://files.pythonhosted.org/packages/3a/ab/afd331ac7db540b3c412554be2f61feab56dd59786fce262a9951d07f299/moc_set-0.5.1-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "eb071ba614b44c42c9792aebc74a4dc4037ef90be99b822d68738dc1d7b6d7f5",
          "md5": "fe570f94624927650beb3746096e99cf",
          "sha256": "9a190fecb475ee0d87f383ed6bb1e67b4676ae7627972350a180859eb6ce9bed"
        },
        "downloads": -1,
        "filename": "moc_set-0.5.1-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "fe570f94624927650beb3746096e99cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 483648,
        "upload_time": "2022-09-10T21:49:00",
        "upload_time_iso_8601": "2022-09-10T21:49:00.998025Z",
        "url": "https://files.pythonhosted.org/packages/eb/07/1ba614b44c42c9792aebc74a4dc4037ef90be99b822d68738dc1d7b6d7f5/moc_set-0.5.1-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "913678ad180d111998772aa2010704393ee7d960422ee69cfefc0a1d693499ee",
          "md5": "ae6da95a6547a804f07578e612feb32c",
          "sha256": "5f64bfa7187a8221fc3a02f2b3f6580472c3a65e52066bcaae83a646e477c21d"
        },
        "downloads": -1,
        "filename": "moc_set-0.5.2-py3-none-macosx_10_7_x86_64.whl",
        "has_sig": false,
        "md5_digest": "ae6da95a6547a804f07578e612feb32c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 511598,
        "upload_time": "2022-09-12T14:37:46",
        "upload_time_iso_8601": "2022-09-12T14:37:46.975759Z",
        "url": "https://files.pythonhosted.org/packages/91/36/78ad180d111998772aa2010704393ee7d960422ee69cfefc0a1d693499ee/moc_set-0.5.2-py3-none-macosx_10_7_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "fa105e6283b5112f4f5a5ae4c46780b74e604c1b72a5fcdced428e070890d0cd",
          "md5": "6c98a64a2cd12484cf2f48b71f28614c",
          "sha256": "27184cf70862a6b211379f4070a9d466a4ab03343c3c500c6cafcd4d53bb5e12"
        },
        "downloads": -1,
        "filename": "moc_set-0.5.2-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
        "has_sig": false,
        "md5_digest": "6c98a64a2cd12484cf2f48b71f28614c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 981026,
        "upload_time": "2022-10-18T23:43:46",
        "upload_time_iso_8601": "2022-10-18T23:43:46.919524Z",
        "url": "https://files.pythonhosted.org/packages/fa/10/5e6283b5112f4f5a5ae4c46780b74e604c1b72a5fcdced428e070890d0cd/moc_set-0.5.2-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "39da02be9c09ac9d6463b85cc7b948f878551a65f19c785b4e8753f6a9b9d04f",
          "md5": "745161a2e07172f1683da22067a76923",
          "sha256": "ffbed586ef5dba9e428edf2c656d7b27b6bb850cd0c8e0a04bdb61620de8fd6b"
        },
        "downloads": -1,
        "filename": "moc_set-0.5.2-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "745161a2e07172f1683da22067a76923",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 532131,
        "upload_time": "2022-09-12T14:37:20",
        "upload_time_iso_8601": "2022-09-12T14:37:20.468830Z",
        "url": "https://files.pythonhosted.org/packages/39/da/02be9c09ac9d6463b85cc7b948f878551a65f19c785b4e8753f6a9b9d04f/moc_set-0.5.2-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "72f16aa23939995eb61d9e5dbe78a30d34aac4b7d5053b0c576608c2b7c111e5",
          "md5": "1f792261be7f4b290611407b495084b6",
          "sha256": "69040e1940b98a7313944acab4414259872b8d68847773d5f0f5994749d53d01"
        },
        "downloads": -1,
        "filename": "moc_set-0.5.2-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "1f792261be7f4b290611407b495084b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 483941,
        "upload_time": "2022-09-12T14:40:01",
        "upload_time_iso_8601": "2022-09-12T14:40:01.616345Z",
        "url": "https://files.pythonhosted.org/packages/72/f1/6aa23939995eb61d9e5dbe78a30d34aac4b7d5053b0c576608c2b7c111e5/moc_set-0.5.2-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "060f94bac632ee7152ea55114b3f37d1ad5fc519062ecfb13930c2e5c7218ea6",
          "md5": "4e1f381d74f75e8fa0a2609708bf5e0a",
          "sha256": "de7fb4bb8435e2a9e60b2d8fbe6e8cb3528de7fc7057f850bbcf158760ac381a"
        },
        "downloads": -1,
        "filename": "moc_set-0.5.3-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
        "has_sig": false,
        "md5_digest": "4e1f381d74f75e8fa0a2609708bf5e0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 994027,
        "upload_time": "2022-11-10T10:41:33",
        "upload_time_iso_8601": "2022-11-10T10:41:33.613122Z",
        "url": "https://files.pythonhosted.org/packages/06/0f/94bac632ee7152ea55114b3f37d1ad5fc519062ecfb13930c2e5c7218ea6/moc_set-0.5.3-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "7261547da9945e109f1e2c41736ce79d0de155dd8f46962f55daedea9708bcc1",
          "md5": "0a936a94bfb52f861a7b0c6dde2a79d7",
          "sha256": "a340fa8ef979130f4f6ebcf476864756d97b1180e821ec9e235686d0637b08cc"
        },
        "downloads": -1,
        "filename": "moc_set-0.5.3-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "0a936a94bfb52f861a7b0c6dde2a79d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 542605,
        "upload_time": "2022-11-10T10:37:00",
        "upload_time_iso_8601": "2022-11-10T10:37:00.183271Z",
        "url": "https://files.pythonhosted.org/packages/72/61/547da9945e109f1e2c41736ce79d0de155dd8f46962f55daedea9708bcc1/moc_set-0.5.3-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "9e91b263f863f14a6866bcfbd6915689794d923aa1f04a46880be6325bf598a0",
          "md5": "9177cf91ab72e57d1d3b0ceb1012f238",
          "sha256": "595add109f1db5941916ffc860c00215507decc1294eb39b7cdcdf1306666f19"
        },
        "downloads": -1,
        "filename": "moc_set-0.5.3-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "9177cf91ab72e57d1d3b0ceb1012f238",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 490872,
        "upload_time": "2022-11-10T10:38:38",
        "upload_time_iso_8601": "2022-11-10T10:38:38.061757Z",
        "url": "https://files.pythonhosted.org/packages/9e/91/b263f863f14a6866bcfbd6915689794d923aa1f04a46880be6325bf598a0/moc_set-0.5.3-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "4c411c98b27df5d041dedee38c00781d8fcdba0204d6af9290eec61dac54ef0f",
          "md5": "caab97e3f1974c67a266b501b4661f9c",
          "sha256": "0ae847c7ce62efa904b99397a9818454d4b4a334d882853f5f55f494d421c1e3"
        },
        "downloads": -1,
        "filename": "moc_set-0.6.0-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
        "has_sig": false,
        "md5_digest": "caab97e3f1974c67a266b501b4661f9c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1008870,
        "upload_time": "2023-03-28T07:13:18",
        "upload_time_iso_8601": "2023-03-28T07:13:18.516910Z",
        "url": "https://files.pythonhosted.org/packages/4c/41/1c98b27df5d041dedee38c00781d8fcdba0204d6af9290eec61dac54ef0f/moc_set-0.6.0-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "4bdbd859236698f147a0e80b377227036daffcdfb28f414c652029873d866381",
          "md5": "3880f6dbea7838743fa17cff5c992034",
          "sha256": "97c32abd5cf50d56fd33452cf3e2e078955c6134be71c30c972c15bd8635451e"
        },
        "downloads": -1,
        "filename": "moc_set-0.6.0-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "3880f6dbea7838743fa17cff5c992034",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 550405,
        "upload_time": "2023-03-28T07:09:56",
        "upload_time_iso_8601": "2023-03-28T07:09:56.239569Z",
        "url": "https://files.pythonhosted.org/packages/4b/db/d859236698f147a0e80b377227036daffcdfb28f414c652029873d866381/moc_set-0.6.0-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "4b7e605d3c6ae4a0b477223515f11f22a51a62da77e6dc29347e80b2e4fb2e29",
          "md5": "f0fc8970b7f7b309e88956e266a3998b",
          "sha256": "b9e6fc9b4868e38c0ee17a3102d43718ad1901660594656330877b6e4e275606"
        },
        "downloads": -1,
        "filename": "moc_set-0.6.0-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "f0fc8970b7f7b309e88956e266a3998b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 498877,
        "upload_time": "2023-03-28T07:13:06",
        "upload_time_iso_8601": "2023-03-28T07:13:06.721733Z",
        "url": "https://files.pythonhosted.org/packages/4b/7e/605d3c6ae4a0b477223515f11f22a51a62da77e6dc29347e80b2e4fb2e29/moc_set-0.6.0-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "4c411c98b27df5d041dedee38c00781d8fcdba0204d6af9290eec61dac54ef0f",
        "md5": "caab97e3f1974c67a266b501b4661f9c",
        "sha256": "0ae847c7ce62efa904b99397a9818454d4b4a334d882853f5f55f494d421c1e3"
      },
      "downloads": -1,
      "filename": "moc_set-0.6.0-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
      "has_sig": false,
      "md5_digest": "caab97e3f1974c67a266b501b4661f9c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1008870,
      "upload_time": "2023-03-28T07:13:18",
      "upload_time_iso_8601": "2023-03-28T07:13:18.516910Z",
      "url": "https://files.pythonhosted.org/packages/4c/41/1c98b27df5d041dedee38c00781d8fcdba0204d6af9290eec61dac54ef0f/moc_set-0.6.0-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "4bdbd859236698f147a0e80b377227036daffcdfb28f414c652029873d866381",
        "md5": "3880f6dbea7838743fa17cff5c992034",
        "sha256": "97c32abd5cf50d56fd33452cf3e2e078955c6134be71c30c972c15bd8635451e"
      },
      "downloads": -1,
      "filename": "moc_set-0.6.0-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "3880f6dbea7838743fa17cff5c992034",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 550405,
      "upload_time": "2023-03-28T07:09:56",
      "upload_time_iso_8601": "2023-03-28T07:09:56.239569Z",
      "url": "https://files.pythonhosted.org/packages/4b/db/d859236698f147a0e80b377227036daffcdfb28f414c652029873d866381/moc_set-0.6.0-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "4b7e605d3c6ae4a0b477223515f11f22a51a62da77e6dc29347e80b2e4fb2e29",
        "md5": "f0fc8970b7f7b309e88956e266a3998b",
        "sha256": "b9e6fc9b4868e38c0ee17a3102d43718ad1901660594656330877b6e4e275606"
      },
      "downloads": -1,
      "filename": "moc_set-0.6.0-py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "f0fc8970b7f7b309e88956e266a3998b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 498877,
      "upload_time": "2023-03-28T07:13:06",
      "upload_time_iso_8601": "2023-03-28T07:13:06.721733Z",
      "url": "https://files.pythonhosted.org/packages/4b/7e/605d3c6ae4a0b477223515f11f22a51a62da77e6dc29347e80b2e4fb2e29/moc_set-0.6.0-py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}