{
  "info": {
    "author": "Bernd Porr, David Hutchings",
    "author_email": "mail@berndporr.me.uk, David.Hutchings@glasgow.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "Python OFDM transmitter and receiver\n====================================\n\nFeatures: Nyquist quadrature modulator, pilot tones and cyclic prefix.\n\nThe module `codec` contains the class `OFDM` to encode, decode, modulate\ndemodualte and to find the start of the symbol.\n\n\nOFDM class\n----------\n\nConstructor: `OFDM(nFreqSamples=64, pilotIndices=[-21, -7, 7, 21], pilotAmplitude=1, nData=12, fracCyclic=0.25, mQAM=2)`\n\n     OFDM encoder and decoder. The data is encoded as QAM using the komm package. \n     Energy dispersal is done with a pre-seeded random number generator. Both pilot \n     tones and the cyclic prefix are added so that the start of the symbol can be \n     detected at the receiver. \n     The complex time series after the inverse Fourier Transform can be modulated \n     into a real valued stream with a Nyquist quadrature modulator for baseband. \n     On the receiver side the start of the symbol is detected by first doing a \n     coarse search with the cyclic prefix and then a precision alignment with the \n     pilots.\n     \n     nFreqSamples sets the number of frequency coefficients of the FFT. Pilot \n     tones are injected at pilotIndices. The real valued pilot amplitude is \n     pilotAmplitude. For transmission nData bytes are expected in an array. \n     The relative length of the Cyclic prefix is fracCyclic. \n     Number of QAM symbols = 2**mQAM, giving mQAM bits per QAM symbol. Average \n     power is normalised to unity. Default example correspond to 802.11a wifi \n     modulation.\n     \n`decode(self, randomSeed=1)`\n     Decodes one symbol and returns a byte array of the\n     data and the sum of the squares of the imaginary parts\n     of the pilot tones. The smaller that value the better\n     the symbol start detection, the reception and the jitter \n     (theoretically zero at perfect reception).\n     \n`encode(self, data, randomSeed=1)`\n     Creates an OFDM symbol using QAM. \n     The signal is a complex valued numpy array where the\n     encoded data-stream is appended. \n     The data is an array of bytes.\n     The random seed sets the pseudo random number generator for the\n     energy dispersal.\n\n`findSymbolStartIndex(self, signal, searchrangecoarse=None, searchrangefine=25)`\n     Finds the start of the symbol by 1st doing a cross correlation @nIFFT\n     with the cyclic prefix and then it uses the pilot tones.\n     Arguments: the real valued reception signal, the coarse searchrange for\n     the cyclic prefix and the fine one for the pilots.\n     Returns the cross correlation value array from the cyclic prefix,\n     the squared values of the imaginary parts of the pilots and the \n     index of the symbol start relative to the signal.\n     \n`initDecode(self, signal, offset)`\n     Starts a decoding process. The signal is the real valued received\n     signal and the decoding start at the index specified by offset.\n\n\nPeriodic pilots\n---------------\n\nThe module `codec` contains a function which generates evenly spaced pilots.\nCall the function with the same values for `nData` and `mQAM`::\n\n  setpilotindex(nData, mQAM, pilotspacing)\n     \n\nNyquist modulator and demodulator\n---------------------------------\n\nThese are in the module `nyquistmodem` which convert between complex\nand real valued signals. The modulation is at nyquist rate which means\nthat its a quadrature modulator operating at a period of 4 samples for\nthe sine and cosine waves.\n     \n`nyquistdemod(base_signal)`\n     Nyqist demodulator which turns the received real valued signal into a\n     complex valued sequence for the OFDM decoder.\n     \n`nyquistmod(complex_signal)`\n     Nyqist modulator which turns the complex valued base signal into a\n     real valued sequence to be transmitted.\n\n\n     \n\nExamples\n--------\n\nSee https://github.com/dchutchings/py_ofdm for examples.\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dchutchings/py_ofdm",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyofdm",
    "package_url": "https://pypi.org/project/pyofdm/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyofdm/",
    "project_urls": {
      "Homepage": "https://github.com/dchutchings/py_ofdm"
    },
    "release_url": "https://pypi.org/project/pyofdm/2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "OFDM transmitter and receiver",
    "version": "2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11324228,
  "releases": {
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb60bb1fadf163fc3b88ea66ef809542dcf3fc0af4f2c05c4489492ba503fbc3",
          "md5": "e492ec124b1a25831c37ede5c11aea99",
          "sha256": "402765e40548aebdf69b781fd400551eab588ce9691291fc28c9aa01169cbcd3"
        },
        "downloads": -1,
        "filename": "pyofdm-2.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "e492ec124b1a25831c37ede5c11aea99",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 10884,
        "upload_time": "2021-08-31T11:53:30",
        "upload_time_iso_8601": "2021-08-31T11:53:30.537153Z",
        "url": "https://files.pythonhosted.org/packages/fb/60/bb1fadf163fc3b88ea66ef809542dcf3fc0af4f2c05c4489492ba503fbc3/pyofdm-2.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aaa10ff83dd0ef11e9f5aba35b6ad048e74d25c53da8bf361924d9bf7b0dd549",
          "md5": "56f7d5306986d7994dfd3d03ea1b19f8",
          "sha256": "cbfb0c28773f25ceef77cb6d7bb0e6e76d423984eb1a7a5797f2fa0e2687d9f6"
        },
        "downloads": -1,
        "filename": "pyofdm-2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56f7d5306986d7994dfd3d03ea1b19f8",
        "packagetype": "bdist_wheel",
        "python_version": "3.8",
        "requires_python": null,
        "size": 19122,
        "upload_time": "2021-08-31T11:53:37",
        "upload_time_iso_8601": "2021-08-31T11:53:37.654721Z",
        "url": "https://files.pythonhosted.org/packages/aa/a1/0ff83dd0ef11e9f5aba35b6ad048e74d25c53da8bf361924d9bf7b0dd549/pyofdm-2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f5de6f6671d3cdff07398920ccbe8f75de792b68a0404b6f17ae3cfa6c718c9",
          "md5": "d8509a9be9e73fe37332aa478a0247df",
          "sha256": "2abf5c2dd35c530cb83b87e3de78842c3a3a07e3043fed8a23093f8e6eeae833"
        },
        "downloads": -1,
        "filename": "pyofdm-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d8509a9be9e73fe37332aa478a0247df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7476,
        "upload_time": "2021-08-31T11:53:20",
        "upload_time_iso_8601": "2021-08-31T11:53:20.250733Z",
        "url": "https://files.pythonhosted.org/packages/7f/5d/e6f6671d3cdff07398920ccbe8f75de792b68a0404b6f17ae3cfa6c718c9/pyofdm-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb60bb1fadf163fc3b88ea66ef809542dcf3fc0af4f2c05c4489492ba503fbc3",
        "md5": "e492ec124b1a25831c37ede5c11aea99",
        "sha256": "402765e40548aebdf69b781fd400551eab588ce9691291fc28c9aa01169cbcd3"
      },
      "downloads": -1,
      "filename": "pyofdm-2.1-py3.8.egg",
      "has_sig": false,
      "md5_digest": "e492ec124b1a25831c37ede5c11aea99",
      "packagetype": "bdist_egg",
      "python_version": "3.8",
      "requires_python": null,
      "size": 10884,
      "upload_time": "2021-08-31T11:53:30",
      "upload_time_iso_8601": "2021-08-31T11:53:30.537153Z",
      "url": "https://files.pythonhosted.org/packages/fb/60/bb1fadf163fc3b88ea66ef809542dcf3fc0af4f2c05c4489492ba503fbc3/pyofdm-2.1-py3.8.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aaa10ff83dd0ef11e9f5aba35b6ad048e74d25c53da8bf361924d9bf7b0dd549",
        "md5": "56f7d5306986d7994dfd3d03ea1b19f8",
        "sha256": "cbfb0c28773f25ceef77cb6d7bb0e6e76d423984eb1a7a5797f2fa0e2687d9f6"
      },
      "downloads": -1,
      "filename": "pyofdm-2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "56f7d5306986d7994dfd3d03ea1b19f8",
      "packagetype": "bdist_wheel",
      "python_version": "3.8",
      "requires_python": null,
      "size": 19122,
      "upload_time": "2021-08-31T11:53:37",
      "upload_time_iso_8601": "2021-08-31T11:53:37.654721Z",
      "url": "https://files.pythonhosted.org/packages/aa/a1/0ff83dd0ef11e9f5aba35b6ad048e74d25c53da8bf361924d9bf7b0dd549/pyofdm-2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f5de6f6671d3cdff07398920ccbe8f75de792b68a0404b6f17ae3cfa6c718c9",
        "md5": "d8509a9be9e73fe37332aa478a0247df",
        "sha256": "2abf5c2dd35c530cb83b87e3de78842c3a3a07e3043fed8a23093f8e6eeae833"
      },
      "downloads": -1,
      "filename": "pyofdm-2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d8509a9be9e73fe37332aa478a0247df",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7476,
      "upload_time": "2021-08-31T11:53:20",
      "upload_time_iso_8601": "2021-08-31T11:53:20.250733Z",
      "url": "https://files.pythonhosted.org/packages/7f/5d/e6f6671d3cdff07398920ccbe8f75de792b68a0404b6f17ae3cfa6c718c9/pyofdm-2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}