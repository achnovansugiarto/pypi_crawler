{
  "info": {
    "author": "Diego-Zulu",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: Name Service (DNS)"
    ],
    "description": "# orbi-dnsmasq\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-1-orange.svg?style=flat-square)](#contributors-)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\n[![PyPI version](https://badge.fury.io/py/orbi-dnsmasq.svg)](https://badge.fury.io/py/orbi-dnsmasq)\n\nPython command to update dnsmasq configuration file and / or set hosted hosts file on your Netgear Orbi router.\n\n## Description\n\n### Inspiration\n\nIf you own a [Netgear Orbi](https://www.netgear.com/orbi/), you should know that its OS is based on [OpenWrt](https://openwrt.org/).\nThis means that we could use telnet to tap into some of the features that haven't been made available through the web GUI.\nI was really interested in the [`dnsmasq`](https://en.wikipedia.org/wiki/Dnsmasq) capabilities to set up \"Router based \nad-blocking\" to reduce ads on my whole network, so I decided to try and config that into my router after reading about it on \n[hackingthenetgearorbi](https://hackingthenetgearorbi.wordpress.com/).\n\nThere was just one problem: **Configs done to the orbi will be erased when it turns off**.\n\nBecause of this, I wanted to create a \"fire and forget\" command that I could run comfortably whenever I was feeling like it.\nI also thought it would be neat if people without technical knowledge would be able to run it too.\n\nAnd that's the reason I created `orbi-dnsmasq`, and why you are reading this now!\n\n### Steps this command takes\n\n- Asks for router password (note: the password is not stored in any way, you'll need to re-enter it every time).\n- Turns on telnet on the debug Orbi GUI if `-t` flag was supplied.\n- Telnet into Orbi.\n- Replace `/etc/dnsmasq.conf` with a custom configuration file specified by `-c <path>`\n- Downloads hosts file if `-d` was supplied (you can specify a custom url with the `-u <url>` flag, or check the default one I'm using \non [someonewhocares.org](https://someonewhocares.org/hosts/)).\n- Deletes the `no-hosts` line to active dnsmasq.\n- Reboots Orbi's dns.\n- Turns off telnet  on the debug Orbi GUI if `-t` flag was supplied.\n\n## Getting Started\n\n### Running in Docker\n\nThis is the easiest way to run, all you need is Docker installed an run:\n```\ndocker build -t orbi-dnsmasq . && \\\ndocker run -it --rm orbi-dnsmasq <parameters>\n```\nYou only need the first line on the first run or if you change any Python files.\n\nIf you want to upload a custom configuration file, you'll have to expose it as Docker volume, ie:\n```\ndocker run -it --rm -v <full path to dnsmasq.conf>:/tmp/dnsmasq.conf orbi-dnsmasq -p $orbipw -a 192.168.21.1 -t -c /tmp/dnsmasq.conf\n```\n\n\n### Prerequisites (without Docker)\n\nFirst, make sure python is already installed on your system by opening the interactive environment by running on your terminal:\n \n```\npython\n```\n\nI've tested both Python 2.7 and 3.7, so I believe any version from 2.7 onwards should work.\nIf you don't have Python installed, please [download it from the official website](https://www.python.org/downloads/). \n\nAfter that, any terminal or equivalent with telnet and vim should be enough to run this correctly, but do let me know \nif you find any problems!\n\n### Installing\n\nSimply run:\n\n```\npip install orbi-dnsmasq\n```\n\nAnd then if your Orbi has [telnet already on](https://oldwiki.archive.openwrt.org/toh/netgear/telnet.console), just run it with:\n```\norbi-dnsmasq\n```\n\nAfter this, just enter a site which would usually end up filled with ads and see if the config worked. I usually test \nthis step out with [Speedtest by Ookla](https://www.speedtest.net/), but you can use whichever one you want. _Note: \nNot every ad will be blocked, youtube ads still seem to be showing up for example. Nevertheless, a lot of dangerous sites and ads won't\n be shown._\n\nAlso, **don't worry if you end up running this command twice**. I made sure it does not fail if the config was already in place.\n\n#### Auto turn on telnet before command, and turn it off after\n\nIf you don't like leaving telnet port open when not using it, you can use the `-t` parameter to automatically toggle Telnet on and off after work is done.\n\nAfter that, run:\n\n```\norbi-dnsmasq -t\n```\n\n## Known issues\nSometimes authentication will fail and you'll see a `ts not found, retry in a minute or two` error. Normally retrying works.\n\n## Possible things to add:\n\n- ~~Read password from ENV var, don't ask it if already found.~~ You can provide the `admin` password with `-p <password>` parameter (warning: your password may be recorded on your terminal's history, watch out for that).\n- Flag option to set username to connect with, use admin as default (is this even necessary?).\n- Create Telnet object with telnet_write methods, cleaning up the code.\n- Understand why authentication fails every now and then and fix it.\n- Improve `README.md`\n- Unit testing? (does it even makes sense? All telnet communications would need to be mocked)\n\n## Acknowledgments\n\n- This project wouldn't have been possible without [hackingthenetgearorbi](https://hackingthenetgearorbi.wordpress.com/), \nso please show them some love!\n- Also check out [hackingthenetgearorbi creator's github](https://github.com/tumescentrubor/Orbi-s-Non-Sufficit). \nThey are currently doing some really cool stuff with persistent modifications on the Orbi!\n- Thanks [someonewhocares' Dan Pollock](https://someonewhocares.org/hosts/) for the magnificent hosts file. This project \nwouldn't have been able without it.\n- Thanks [Joel Barmettler for teaching me how to upload this to PyPi](https://medium.com/@joel.barmettler/how-to-upload-your-python-package-to-pypi-65edc5fe9c56)!\n- Thanks [PurpleBooth for the README template](https://gist.github.com/PurpleBooth/109311bb0361f32d87a2)!\n\n\n## Contributors âœ¨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/nferro\"><img src=\"https://avatars1.githubusercontent.com/u/2065319?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nuno Ferro</b></sub></a><br /><a href=\"https://github.com/Diego-Zulu/orbi-dnsmasq/commits?author=nferro\" title=\"Code\">ðŸ’»</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Diego-Zulu/orbi-dnsmasq/archive/v1.1.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Diego-Zulu/orbi-dnsmasq",
    "keywords": "orbi,dnsmasq",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "orbi-dnsmasq",
    "package_url": "https://pypi.org/project/orbi-dnsmasq/",
    "platform": "",
    "project_url": "https://pypi.org/project/orbi-dnsmasq/",
    "project_urls": {
      "Download": "https://github.com/Diego-Zulu/orbi-dnsmasq/archive/v1.1.0.tar.gz",
      "Homepage": "https://github.com/Diego-Zulu/orbi-dnsmasq"
    },
    "release_url": "https://pypi.org/project/orbi-dnsmasq/2.0.0/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "Use selenium and telnet to automate orbi router's dnsmasq",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8997779,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a2ce2ac755fa33b5ca3c8ced6995c5e9568c0265dbba91d1e555a72c75acdaa",
          "md5": "3cda32fa0cd3b7b7ee943cb8ba617e9c",
          "sha256": "f928f678c2b5d5139b3ad74305877b861d2f31f576ad4eaee83b54d3a3c32636"
        },
        "downloads": -1,
        "filename": "orbi-dnsmasq-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3cda32fa0cd3b7b7ee943cb8ba617e9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 5574,
        "upload_time": "2019-11-17T23:34:34",
        "upload_time_iso_8601": "2019-11-17T23:34:34.521996Z",
        "url": "https://files.pythonhosted.org/packages/0a/2c/e2ac755fa33b5ca3c8ced6995c5e9568c0265dbba91d1e555a72c75acdaa/orbi-dnsmasq-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f58cd4232def6d9917af8c440c39d7a5d05e010abf8c51ae1eb2b65d7c5c2ca",
          "md5": "0ed48427d800fc1afeaa1fa5d522f26e",
          "sha256": "6cf39c161c01ab2236c9d370d1ace35c3a5c74f5c5c292e3aaf63935dd1fc10f"
        },
        "downloads": -1,
        "filename": "orbi-dnsmasq-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ed48427d800fc1afeaa1fa5d522f26e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 6687,
        "upload_time": "2020-12-28T11:07:58",
        "upload_time_iso_8601": "2020-12-28T11:07:58.231113Z",
        "url": "https://files.pythonhosted.org/packages/9f/58/cd4232def6d9917af8c440c39d7a5d05e010abf8c51ae1eb2b65d7c5c2ca/orbi-dnsmasq-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f58cd4232def6d9917af8c440c39d7a5d05e010abf8c51ae1eb2b65d7c5c2ca",
        "md5": "0ed48427d800fc1afeaa1fa5d522f26e",
        "sha256": "6cf39c161c01ab2236c9d370d1ace35c3a5c74f5c5c292e3aaf63935dd1fc10f"
      },
      "downloads": -1,
      "filename": "orbi-dnsmasq-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0ed48427d800fc1afeaa1fa5d522f26e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 6687,
      "upload_time": "2020-12-28T11:07:58",
      "upload_time_iso_8601": "2020-12-28T11:07:58.231113Z",
      "url": "https://files.pythonhosted.org/packages/9f/58/cd4232def6d9917af8c440c39d7a5d05e010abf8c51ae1eb2b65d7c5c2ca/orbi-dnsmasq-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}