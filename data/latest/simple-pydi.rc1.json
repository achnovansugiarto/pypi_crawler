{
  "info": {
    "author": "Carl.Zhang",
    "author_email": "tasse_00@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Simple-PyDI\n\n## Intro\n\nsimple python dependency injection framwork\n\njust like java spring-framework. \n\n## Install\n\n```shell script\npip install simple-pydi\n```\n\n## Usage\n\n### Components\n\napp.py\n``` python\nclass Engine:\n    pass\n\n\nclass Wheels:\n    def __init__(self, wheels_count: int = 4):\n        self.wheels_count = wheels_count\n\n\nclass Body:\n    pass\n\n\nclass Person:\n    def __init__(self, name: str):\n        self.name = name\n\n\nclass Car:\n    def __init__(self, engine: Engine, wheels: Wheels, body: Body, driver: Person):\n        self.engine = engine\n        self.wheels = wheels\n        self.body = body\n        self.driver = driver\n\n```\n\n### Direct Register\n\nmain.py\n```python\nfrom di import NewContext\n\nfrom app import Car, Engine, Wheels, Body, Person\n\n\nctx = NewContext()\n\n# directly register beans\nctx.register(Car, id='car')\nctx.register(Engine)\nctx.register(Wheels)\nctx.register(Body)\nctx.register(Person, consts={'name': 'Ben'})\n\ncar: Car = ctx.instance_by_id('car')\n\nassert car.driver.name == 'Ben'\nassert car.wheels.wheels_count == 4\n\n# view beans xml definition\nprint(ctx.format_beans_xml())\n```\n\n### Register by XML File\n\nbeans.xml\n```xml\n<?xml version=\"1.0\" ?>\n<beans>\n\t<bean cls=\"app.Car\" id=\"car\" singleton=\"true\">\n\t\t<property name=\"engine\" ref=\"cls:app.Engine\"/>\n\t\t<property name=\"wheels\" ref=\"cls:app.Wheels\"/>\n\t\t<property name=\"body\" ref=\"cls:app.Body\"/>\n\t\t<property name=\"driver\" ref=\"cls:app.Person\"/>\n\t</bean>\n\t<bean cls=\"app.Engine\" id=\"app.Engine\" singleton=\"true\"/>\n\t<bean cls=\"app.Wheels\" id=\"app.Wheels\" singleton=\"true\">\n\t\t<property name=\"wheels_count\" value=\"4\" value-type=\"int\"/>\n\t</bean>\n\t<bean cls=\"app.Body\" id=\"app.Body\" singleton=\"true\"/>\n\t<bean cls=\"app.Person\" id=\"app.Person\" singleton=\"true\">\n\t\t<property name=\"name\" value=\"Ben\" value-type=\"str\"/>\n\t</bean>\n</beans>\n```\n\nmain.py\n```python\nfrom di import NewContext\n\nfrom app import Car\n\n\nctx = NewContext()\n\n# get beans definition from xml file\nctx.register_file('beans.xml')\n\ncar: Car = ctx.instance_by_id('car')\n\nassert car.driver.name == 'Ben'\nassert car.wheels.wheels_count == 4\n\n# view beans xml definition\nprint(ctx.format_beans_xml())\n```\n\n### Use Decorator Definition\n\napp.py\n```python\nfrom di.decorator import bean\n\n\n@bean\nclass Engine:\n    pass\n\n\n@bean\nclass Wheels:\n    def __init__(self, wheels_count: int = 4):\n        self.wheels_count = wheels_count\n\n\n@bean\nclass Body:\n    pass\n\n\n@bean(consts={'name': 'Ben'})\nclass Person:\n    def __init__(self, name: str):\n        self.name = name\n\n\n@bean(id='car')\nclass Car:\n    def __init__(self, engine: Engine, wheels: Wheels, body: Body, driver: Person):\n        self.engine = engine\n        self.wheels = wheels\n        self.body = body\n        self.driver = driver\n```\n\nmain.py\n```python\nfrom di import NewContext\n\nfrom app import Car\n\nctx = NewContext()\n\n# register pre defined group (by decorator) \nctx.register_group()\n\ncar: Car = ctx.instance_by_cls(Car)\n\nassert car.driver.name == 'Ben'\nassert car.wheels.wheels_count == 4\n\n# view beans xml definition\nprint(ctx.format_beans_xml())\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Tasse00/pydi",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "Carl.Zhang",
    "maintainer_email": "tasse_00@163.com",
    "name": "Simple-PyDI",
    "package_url": "https://pypi.org/project/Simple-PyDI/",
    "platform": "all",
    "project_url": "https://pypi.org/project/Simple-PyDI/",
    "project_urls": {
      "Homepage": "https://github.com/Tasse00/pydi"
    },
    "release_url": "https://pypi.org/project/Simple-PyDI/0.9.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "simple di framework like java spring-framework",
    "version": "0.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7579130,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35da6e63363636f81640040543fdff5e467f5f18b7c36f344e2f9e6605608250",
          "md5": "e5fd1fb9ed0c18bfa8c0de7100f7879f",
          "sha256": "61bd0ac4b5109e97f5da4c8f606ab6477fb309b7ebcb2f43658be59becf3a0ea"
        },
        "downloads": -1,
        "filename": "Simple_PyDI-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5fd1fb9ed0c18bfa8c0de7100f7879f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7264,
        "upload_time": "2020-06-28T05:19:31",
        "upload_time_iso_8601": "2020-06-28T05:19:31.573299Z",
        "url": "https://files.pythonhosted.org/packages/35/da/6e63363636f81640040543fdff5e467f5f18b7c36f344e2f9e6605608250/Simple_PyDI-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32bd1268108b4d67e4bb9c5e6d4bef46e7a13328974d0cdda8950ac72202d725",
          "md5": "3c02d130da0a1c6b005689a9b74fef9f",
          "sha256": "f871ca0201d81c7f0908f59703c9da69fcf823273c636f98e7ac779abd3f16c8"
        },
        "downloads": -1,
        "filename": "Simple-PyDI-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3c02d130da0a1c6b005689a9b74fef9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6473,
        "upload_time": "2020-06-28T05:19:33",
        "upload_time_iso_8601": "2020-06-28T05:19:33.624909Z",
        "url": "https://files.pythonhosted.org/packages/32/bd/1268108b4d67e4bb9c5e6d4bef46e7a13328974d0cdda8950ac72202d725/Simple-PyDI-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35da6e63363636f81640040543fdff5e467f5f18b7c36f344e2f9e6605608250",
        "md5": "e5fd1fb9ed0c18bfa8c0de7100f7879f",
        "sha256": "61bd0ac4b5109e97f5da4c8f606ab6477fb309b7ebcb2f43658be59becf3a0ea"
      },
      "downloads": -1,
      "filename": "Simple_PyDI-0.9.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e5fd1fb9ed0c18bfa8c0de7100f7879f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7264,
      "upload_time": "2020-06-28T05:19:31",
      "upload_time_iso_8601": "2020-06-28T05:19:31.573299Z",
      "url": "https://files.pythonhosted.org/packages/35/da/6e63363636f81640040543fdff5e467f5f18b7c36f344e2f9e6605608250/Simple_PyDI-0.9.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32bd1268108b4d67e4bb9c5e6d4bef46e7a13328974d0cdda8950ac72202d725",
        "md5": "3c02d130da0a1c6b005689a9b74fef9f",
        "sha256": "f871ca0201d81c7f0908f59703c9da69fcf823273c636f98e7ac779abd3f16c8"
      },
      "downloads": -1,
      "filename": "Simple-PyDI-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3c02d130da0a1c6b005689a9b74fef9f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6473,
      "upload_time": "2020-06-28T05:19:33",
      "upload_time_iso_8601": "2020-06-28T05:19:33.624909Z",
      "url": "https://files.pythonhosted.org/packages/32/bd/1268108b4d67e4bb9c5e6d4bef46e7a13328974d0cdda8950ac72202d725/Simple-PyDI-0.9.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}