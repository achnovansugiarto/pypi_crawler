{
  "info": {
    "author": "Antti Solonen",
    "author_email": "antti.solonen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# minkf - minimal Kalman filter in Python\nKalman filter/smoother, nothing more. A minimal implementation with only `numpy` dependency. No fancy classes, just simple functions.\n\nEstimates the states of the system\n\n<img src=\"https://latex.codecogs.com/svg.image?\\begin{align*}x_{k}&space;&=&space;M_{k}&space;x_{k-1}&plus;u_k&plus;N(0,Q_k)&space;\\\\y_k&space;&=&space;K_k&space;x_k&space;&plus;&space;N(0,&space;R_k).&space;\\end{align}&space;\" title=\"\\begin{align*}x_{k} &= M_{k} x_{k-1}+u_k+N(0,Q_k) \\\\y_k &= K_k x_k + N(0, R_k) \\end{align} \" />\n\nCalculates also the likelihood of the data, in case one wants to do some hyperparameter tuning. One can also sample from the posterior distribution of the states.\n\n## Installation\n\n`pip install minkf`\n\n## Example\n\nThe example does some plots via `matplotlib`, which is not listed as a dependency in order to keep them minimal. Thus, install `matplotlib` on top of `minkf` to get the plots working.\n\nThe example is about fitting an existing batch of data. For on-line Kalman filtering, check the `minkf.kf_predict` and `minkf.kf_update` functions in the package.\n\nFor more examples as `jupyter` notebooks, check the [demos](https://github.com/solbes/minkf/tree/main/demos) folder.\n\n### Reconstructing random 1d data\n\nThe first example just generates some 1d random walk data and reconstructs it with Kalman filter/smoother. The forward and observation models are just identities. The user can either give the model and error covariance matrices as lists, which enable using different values for each time step. If the matrices are given as constant numpy arrays, the same matrices are used for every time step.\n\n```python\nimport numpy as np\nimport minkf as kf\nimport matplotlib.pyplot as plt\n\ny = np.cumsum(np.random.standard_normal(100))\n\nx0 = np.array([0.0])\nCest0 = 1*np.array([[1.0]])\n\nM = np.array([[1.0]])\nK = np.array([[1.0]])\nQ = 0.1*np.array([[1.0]])\nR = 0.1*np.array([[1.0]])\n\nres = kf.run_filter(y, x0, Cest0, M, K, Q, R, likelihood=True)\nres_smo = kf.run_smoother(y, x0, Cest0, M, K, Q, R)\n\nplt.figure()\nplt.plot(y, 'bo', ms=5)\nplt.plot(res['x'], 'k-')\nplt.plot(res_smo['x'], 'r-')\nplt.grid(True)\nplt.show()\n```\n![simple_demo](https://user-images.githubusercontent.com/6495497/132949472-aaada8ba-d63f-4b47-b1c3-b133ff492914.png)\n\nResult is a dict that contains the estimated states and the filtering/smoothing covariances. If `likelihood=True` is chosen in the filter, the result structure also contains the log-likelihood of the data given the model. This can be useful in, e.g., estimating hyperparameters: one could run the Kalman filter repeatedly via an optimizer or MCMC sampler, for instance.\n\n```python\nres['loglike']\n297.0302824838724\n```\n\nSampling from the posterior of the states given all the data can be done via the `sample` function. Sampling needs the Kalman filter results and the dynamics model matrix and model error covariance.\n\n```python\nsamps = kf.sample(res, M, Q, nsamples=10)\n\nplt.figure()\nplt.plot(np.array(samps).T, 'r-', alpha=0.2)\nplt.plot(y, 'bo', ms=2)\nplt.grid(True)\nplt.show()\n```\n\n![simple_demo_samps](https://user-images.githubusercontent.com/6495497/132949632-d9a18f9e-7140-446c-b6e3-b31726223c32.png)\n\n### Missing observations\n\nIf any element of the observation vector is `np.nan`, the observation is considered missing. Below is the above simple example with some missing observations in the middle.\n\n```python\ny_missing = y.copy()\ny_missing[40:60] = np.nan\n\nres_missing = kf.run_filter(y_missing, x0, Cest0, M, K, Q, R, likelihood=True)\nres_smo_missing = kf.run_smoother(y_missing, x0, Cest0, M, K, Q, R)\n\nplt.figure()\n\nplt.plot(y_missing, 'bo', ms=5)\nplt.plot(res_missing['x'], 'k-')\nplt.plot(res_smo_missing['x'], 'r-')\nplt.grid(True)\nplt.show()\n```\n\n![kf_demo_missing](https://user-images.githubusercontent.com/6495497/160231911-60968d72-b788-4147-9ff3-e27e28152e15.png)\n\n```python\nsamps_missing = kf.sample(res_missing, M, Q, nsamples=10)\n\nplt.figure()\nplt.plot(np.array(samps_missing).T, 'r-', alpha=0.2)\nplt.plot(y_missing, 'bo', ms=2)\nplt.grid(True)\nplt.show()\n```\n\n![kf_demo_samps_missing](https://user-images.githubusercontent.com/6495497/160231955-3e2db6b9-4372-470e-b4d9-e9fa59bfd4d9.png)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/solbes/minkf/archive/refs/tags/0.0.5.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/solbes/minkf",
    "keywords": "kalman filter,state estimation,kalman smoother",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minkf",
    "package_url": "https://pypi.org/project/minkf/",
    "platform": null,
    "project_url": "https://pypi.org/project/minkf/",
    "project_urls": {
      "Download": "https://github.com/solbes/minkf/archive/refs/tags/0.0.5.zip",
      "Homepage": "https://github.com/solbes/minkf"
    },
    "release_url": "https://pypi.org/project/minkf/0.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Kalman filter, nothing more",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13661492,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cc536478c4de1d10722db64687c0ec78468ae9f2e0e24f2091a686c462c0e48",
          "md5": "2c3bf41097e28a7613954f082f9686ed",
          "sha256": "adfadcc65f754bcec006229d6f512b319cea7e68bcbb8dd00557275dd49d77a2"
        },
        "downloads": -1,
        "filename": "minkf-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2c3bf41097e28a7613954f082f9686ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5146,
        "upload_time": "2021-09-20T11:45:42",
        "upload_time_iso_8601": "2021-09-20T11:45:42.035405Z",
        "url": "https://files.pythonhosted.org/packages/9c/c5/36478c4de1d10722db64687c0ec78468ae9f2e0e24f2091a686c462c0e48/minkf-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5329fe7e2abf08a4691de98263fe8a14a31fa96f40376ca179d168468db33b24",
          "md5": "f675b447a47131f972e426373c6c9b18",
          "sha256": "fdec0939f19ccd347469849360343f9adc45e96c03c8513a4c23a3507603ced7"
        },
        "downloads": -1,
        "filename": "minkf-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f675b447a47131f972e426373c6c9b18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5292,
        "upload_time": "2021-12-10T08:40:01",
        "upload_time_iso_8601": "2021-12-10T08:40:01.361195Z",
        "url": "https://files.pythonhosted.org/packages/53/29/fe7e2abf08a4691de98263fe8a14a31fa96f40376ca179d168468db33b24/minkf-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16be5ca26e783fba3713dfdcb89006682ab9a25121e257c89a092059acee6f36",
          "md5": "3d653e7647de7a444abf1a679d502a27",
          "sha256": "e8382223eccd15a4a7576543ee8c7480dfd95ee89906438b046f75174eef8ed8"
        },
        "downloads": -1,
        "filename": "minkf-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3d653e7647de7a444abf1a679d502a27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5288,
        "upload_time": "2021-12-21T06:49:26",
        "upload_time_iso_8601": "2021-12-21T06:49:26.621250Z",
        "url": "https://files.pythonhosted.org/packages/16/be/5ca26e783fba3713dfdcb89006682ab9a25121e257c89a092059acee6f36/minkf-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6b9e81606c25bbb32cab4a83071053b6eb1035a6873e8ba8421674c920d7fdc",
          "md5": "4d9576a7dc8cd2cdb9cda35240f78104",
          "sha256": "a0ac823d796211362b997e1299a468068eb58b1c150fa985a7f8ab5dbb332fe2"
        },
        "downloads": -1,
        "filename": "minkf-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4d9576a7dc8cd2cdb9cda35240f78104",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5749,
        "upload_time": "2022-03-28T15:21:53",
        "upload_time_iso_8601": "2022-03-28T15:21:53.164099Z",
        "url": "https://files.pythonhosted.org/packages/e6/b9/e81606c25bbb32cab4a83071053b6eb1035a6873e8ba8421674c920d7fdc/minkf-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b49b179ff427d3a4ef675d4ceba40883dfa763820dc4fd8672e2dc4ea30f7f89",
          "md5": "eb5452740b6e4319a4d5108b7e5c50fb",
          "sha256": "c9376e9d41a4b12893a13da2a13ce07fc3cbeca8f7cb772df22b05e292ca826e"
        },
        "downloads": -1,
        "filename": "minkf-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "eb5452740b6e4319a4d5108b7e5c50fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5784,
        "upload_time": "2022-04-29T06:12:23",
        "upload_time_iso_8601": "2022-04-29T06:12:23.431900Z",
        "url": "https://files.pythonhosted.org/packages/b4/9b/179ff427d3a4ef675d4ceba40883dfa763820dc4fd8672e2dc4ea30f7f89/minkf-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b49b179ff427d3a4ef675d4ceba40883dfa763820dc4fd8672e2dc4ea30f7f89",
        "md5": "eb5452740b6e4319a4d5108b7e5c50fb",
        "sha256": "c9376e9d41a4b12893a13da2a13ce07fc3cbeca8f7cb772df22b05e292ca826e"
      },
      "downloads": -1,
      "filename": "minkf-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "eb5452740b6e4319a4d5108b7e5c50fb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5784,
      "upload_time": "2022-04-29T06:12:23",
      "upload_time_iso_8601": "2022-04-29T06:12:23.431900Z",
      "url": "https://files.pythonhosted.org/packages/b4/9b/179ff427d3a4ef675d4ceba40883dfa763820dc4fd8672e2dc4ea30f7f89/minkf-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}