{
  "info": {
    "author": "Margaryta Olenchuk",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# deepNeuroSeg\nThere are two different segmentation tasks you can perform with deepNeuroSeg: White Matter Hyperintensities (WMH) and Claustrum Segmentation. To learn details about the used deep-learning models please refer to the publications [1] and [2]. As soon as the underlying models are required, they will be downloaded to your computer and placed in ~/.deepNeuroSeg folder.\n\n## White Matter Hyperintensities (WMH) Segmentation\nWMH segmentation can be performed either using FLAIR only or both FLAIR and T1 scans. The results would be similar to our experience [1], but the default is using both of them.\n\n![](https://github.com/RitaOlenchuk/deepNeuroSeg/blob/main/images/wmh_example.png?raw=true)\nFig.1: Segmentation result on Singapore 34 [1]. From left to right: FLAIR MR image, the associated ground truth, segmentation result using FLAIR modality only and segmentation result using FLAIR and T1 modalities. In column SegF LAIR and SegF LAIR+T1, the green area is the overlap between the segmentation maps and the ground-truth, the red pixels are the false negatives and the black ones are the false positives.\n\n## Claustrum Segmentation\nFor Claustrum Segmentation the T1 scan must be provided. \n\n# How to:\nRun deepNeuroSeg either in command line or Python.\n## Command line\ndeepNeuroSeg performs two different segmentation tasks. The desired task must be specified with <code>--type</code> that is either equals to <code>wmh</code> (White Matter Hyperintensities) or <code>c</code> (Claustrum). For example:\n```bash\ndeepNeuroSeg --type wmh --flair YOUR_PATH.nii.gz --t1 YOUR_PATH.nii.gz --o YOUR_PATH\n```\nOr: \n```bash\ndeepNeuroSeg --type c --t1 YOUR_PATH.nii.gz --o YOUR_PATH\n```\n\nFor more details see:\n```text\ndeepNeuroSeg --help\nOptions:\n  --type [wmh|c]  Either 'wmh' (White Matter Hyperintensities) or 'c'\n                  (Claustrum)\n  --flair PATH    Path to nii.gz file with a FLAIR scan.\n  --t1 PATH       Path to nii.gz file with a T1 scan.\n  --o TEXT        Path where to save the resulting segmentation. Directory path or specific nii.gz file path.\n                  [required]\n  --help          Show this message and exit.\n```\nThe resulting mask will be saved with user-specified .nii.gz file name or in the user-specified directory under the name out_mask.nii.gz.\n\n## Python\nIn Python user will have to follow the next steps:\n\nStep 1: Import <code>deepNeuroSeg</code>\n```python\nfrom deepNeuroSeg import SegmentationFactory, SegmentationType\n```\n\nStep 2: Create a <code>SegmentationFactory</code> object with segmentation type either <code>SegmentationType.Claustrum</code> or <code>SegmentationType.WMH</code>. An example for WMH Segmentation with both FLAIR and T1 modalities:\n```python\nsegmenter = SegmentationFactory.create_segmenter(SegmentationType.WMH, \n                                                    FLAIR_path='YOUR_PATH',\n                                                    T1_path='YOUR_PATH')\n```\nOr claustrum segmentation:\n```python\nsegmenter = SegmentationFactory.create_segmenter(SegmentationType.Claustrum, \n                                                  T1_path='YOUR_PATH')\n```\n\nStep 3: Next the segmentation can be performed.\n   \nOption a: The user can specify the output path directly in <code>perform_segmentation</code> method.\n```python\nprediction = segmenter.perform_segmentation(outputDir='YOUR_PATH')\n```\nOption b: The output numpy array can be inspected first, and then saved with <code>save_segmentation</code> function.\n\n```python\nprediction = segmenter.perform_segmentation()\nsegmenter.save_segmentation(mask=prediction, outputDir='YOUR_PATH')\n```\nIn both cases, the output mask will be saved with user-specified .nii.gz file name or in user-specified directory under the name out_mask.nii.gz.\n\nSee also the [jupyter notebook for a quick start.](https://nbviewer.jupyter.org/github/RitaOlenchuk/deepNeuroSeg/blob/main/deepNeuroSeg_quickstart.ipynb)\n\n**Special feature of Claustrum Segmentation:**\n\nThe user can check the orientation of the coronal and axial images by selecting the special feature in <code>perform_segmentation</code> method:\n```python\nprediction = segmenter.perform_segmentation(check_orientation=True)\n```\n<code>check_orientation=True</code> will save the images of coronal and axial slices under ~/.deepNeuroSeg/images/.\n\n\n# References:\n\n[1]: Li, Hongwei, et al. \"Fully convolutional network ensembles for white matter hyperintensities segmentation in MR images.\" NeuroImage 183 (2018): 650-665.\n\n[2]: Li, Hongwei, et al. \"Complex Grey Matter Structure Segmentation in Brains via Deep Learning: Example of the Claustrum.\" arXiv preprint arXiv:2008.03465 (2020).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/RitaOlenchuk/deepNeuroSeg/archive/refs/tags/v0.4.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RitaOlenchuk/deepNeuroSeg",
    "keywords": "deep-learning,machine-learning,segmentation,MRI,White Matter Lesions,Claustrum",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepNeuroSeg",
    "package_url": "https://pypi.org/project/deepNeuroSeg/",
    "platform": "",
    "project_url": "https://pypi.org/project/deepNeuroSeg/",
    "project_urls": {
      "Download": "https://github.com/RitaOlenchuk/deepNeuroSeg/archive/refs/tags/v0.4.tar.gz",
      "Homepage": "https://github.com/RitaOlenchuk/deepNeuroSeg"
    },
    "release_url": "https://pypi.org/project/deepNeuroSeg/0.4/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Deep-learning Tool for White Matter (WM) lesions and Claustrum structure segmentation in brain magnetic resonance imaging (MRI).",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10826728,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f80c70ea60586156b14d53acf6f1b82ad6e0e31348ef53565fb4b00759152c8",
          "md5": "3cb7e566a23ca7cb745ad8e8bd92ce51",
          "sha256": "b7d8afd509ef18bdb3065ccb4b9f80ffdc71a3cc6446d588561bbaa944bf5c00"
        },
        "downloads": -1,
        "filename": "deepNeuroSeg-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3cb7e566a23ca7cb745ad8e8bd92ce51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 9553,
        "upload_time": "2021-05-23T13:34:54",
        "upload_time_iso_8601": "2021-05-23T13:34:54.314307Z",
        "url": "https://files.pythonhosted.org/packages/7f/80/c70ea60586156b14d53acf6f1b82ad6e0e31348ef53565fb4b00759152c8/deepNeuroSeg-0.1.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e4cce6259c7f7a0916cc8d457aee49bdeb1aa1c65d2e6db5630171d641314ce",
          "md5": "8131d286cc3923a769f1ae18d1183527",
          "sha256": "0fc13e33b889bc093764b1ca3c6c1dbab23707003249269acad6831625fef1ef"
        },
        "downloads": -1,
        "filename": "deepNeuroSeg-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8131d286cc3923a769f1ae18d1183527",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 13064,
        "upload_time": "2021-06-26T17:48:55",
        "upload_time_iso_8601": "2021-06-26T17:48:55.192380Z",
        "url": "https://files.pythonhosted.org/packages/6e/4c/ce6259c7f7a0916cc8d457aee49bdeb1aa1c65d2e6db5630171d641314ce/deepNeuroSeg-0.2.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05e1834c38c2f07fb26459a62e27419ad98e80665716bec3d23e2d9a63862ceb",
          "md5": "07e07016e55bc5bb5aae4a1aa3ebb7cd",
          "sha256": "e21a90df99bd66fb1bc33cf363034de3dd332bd256fca658c9e2da675370d5e5"
        },
        "downloads": -1,
        "filename": "deepNeuroSeg-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "07e07016e55bc5bb5aae4a1aa3ebb7cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 13379,
        "upload_time": "2021-07-05T13:21:07",
        "upload_time_iso_8601": "2021-07-05T13:21:07.774794Z",
        "url": "https://files.pythonhosted.org/packages/05/e1/834c38c2f07fb26459a62e27419ad98e80665716bec3d23e2d9a63862ceb/deepNeuroSeg-0.3.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75485481db4865a2102503bdd2a778a34cc20efa3082a6dc3050d896b9e596ad",
          "md5": "cd5dbfb9f81f53de1587aaf0a4e2130b",
          "sha256": "1ce5ae64d0d7b21457848271144e9d2748b1f1647ceb13f838e9a6813986387d"
        },
        "downloads": -1,
        "filename": "deepNeuroSeg-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cd5dbfb9f81f53de1587aaf0a4e2130b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 13402,
        "upload_time": "2021-07-05T14:27:41",
        "upload_time_iso_8601": "2021-07-05T14:27:41.773514Z",
        "url": "https://files.pythonhosted.org/packages/75/48/5481db4865a2102503bdd2a778a34cc20efa3082a6dc3050d896b9e596ad/deepNeuroSeg-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75485481db4865a2102503bdd2a778a34cc20efa3082a6dc3050d896b9e596ad",
        "md5": "cd5dbfb9f81f53de1587aaf0a4e2130b",
        "sha256": "1ce5ae64d0d7b21457848271144e9d2748b1f1647ceb13f838e9a6813986387d"
      },
      "downloads": -1,
      "filename": "deepNeuroSeg-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "cd5dbfb9f81f53de1587aaf0a4e2130b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 13402,
      "upload_time": "2021-07-05T14:27:41",
      "upload_time_iso_8601": "2021-07-05T14:27:41.773514Z",
      "url": "https://files.pythonhosted.org/packages/75/48/5481db4865a2102503bdd2a778a34cc20efa3082a6dc3050d896b9e596ad/deepNeuroSeg-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}