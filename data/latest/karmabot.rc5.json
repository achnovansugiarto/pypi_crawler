{
  "info": {
    "author": "PyBites",
    "author_email": "info@pybit.es",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications :: Chat"
    ],
    "description": "# PyBites Karmabot - A Python based Slack Chatbot\n\n[![Tests](https://github.com/PyBites-Open-Source/karmabot/workflows/Tests/badge.svg)](https://github.com/PyBites-Open-Source/karmabot/actions?workflow=Tests) [![Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/pre-commit/pre-commit) [![codecov.io](https://codecov.io/github/PyBites-Open-Source/karmabot/coverage.svg?branch=master)](https://codecov.io/github/PyBites-Open-Source/karmabot?branch=master)\n\n**A Python based Slack Chatbot for Community interaction**\n\n## Features\n\nKarmabot's main features is the management of Karma within the slack community server. You can give karma, reduce karma, check your current karma points and manage your karma related username.\n\n![karma example](https://www.pogross.de/uploads/karmabot.png)\n\n[Demo Youtube Video](https://www.youtube.com/watch?v=Yx9qYl6lmzM&amp;t=2s)\n\nAdditional commands / features are:\n\n- Jokes powered by [PyJokes](https://github.com/pyjokes/pyjokes)\n- Overview on top channels of the slack server\n- Random Python tip, quote or nugget from CodeChalleng.es\n- Browse and search python documentation, \"pydoc help\"\n\n## Installation\n\n`pip install karmabot`\n\n## Basic Usage\n\nAfter installing you can start karmabot by using the command\n\n```bash\nkarmabot\n```\n\nHowever, you need to some setup and supply some settings prior to this.\n\n### Setup\n\nFor app creation and tokens please follow the [slack-bolt guide](https://slack.dev/bolt-python/tutorial/getting-started) and enable [socket mode](https://slack.dev/bolt-python/concepts#socket-mode).\n\n#### Settings\n\nBy default we will look for a `.karmabot` file in the directory you used the `karmabot` command. The file should supply the following information.\n\n```env\n# Slack bot app\nKARMABOT_SLACK_BOT_TOKEN=\nKARMABOT_SLACK_APP_TOKEN=\n\n# Workspace\nKARMABOT_SLACK_USER=\nKARMABOT_GENERAL_CHANNEL=\nKARMABOT_ADMINS=\n\n# Backend\nKARMABOT_DATABASE_URL=\n\n# Testing\nKARMABOT_TEST_MODE=\n```\n\nKARMABOT_SLACK_BOT_TOKEN\n:   The [SLACK_BOT_TOKEN](https://slack.dev/bolt-python/tutorial/getting-started) for your bot. You will find it under **OAuth & Permission ðŸ Š Bot User OAuth Access Token** in your [app](https://api.slack.com/apps/). The token starts with `xoxb-`.\n\nKARMABOT_SLACK_APP_TOKEN\n: The SLACK_APP_TOKEN used for running the bot in [Socket Mode](https://slack.dev/bolt-python/concepts#socket-mode). You will find it under **Basic Information ðŸ Š App-Level Tokens** in your [app](https://api.slack.com/apps/).\n  The token starts with `xapp-`.\n\nKARMABOT_SLACK_USER\n: The bot's user id. Initially, you can fill in a placeholder. Once you've run your own Karmabot for the first time, you can ask it as admin in private chat via `@Karmabot your_id`. This will return a value starting with `U`, e.g., `U0123XYZ`. Replace your placeholder with this value.\n\nKARMABOT_GENERAL_CHANNEL\n: The channel id of your main channel in slack. Initially, you can fill in a placeholder. Once you've run your own Karmabot for the first time, you can ask it as admin in private chat via `@Karmabot general_channel_id`. This will return a value starting with `C`, e.g., `C0123XYZ`. Replace your placeholder with this value.\n\nKARMABOT_ADMINS\n: The [slack user ids](https://api.slack.com/methods/users.identity) of the users that should have admin command access separated by commas.\n\nKARMABOT_DATABASE_URL\n  : The database url which should be compatible with SqlAlchemy. For the provided docker file use `postgresql://user42:pw42@localhost:5432/karmabot`.\n  :heavy_exclamation_mark: To start the provided Docker-based Postgres server, be sure you have Docker Compose [installed](https://docs.docker.com/compose/install/) and run `docker-compose up -d` from the karmabot directory.\n\nKARMABOT_TEST_MODE=\n  : Determines if the code is run in test mode. User `KARMABOT_TEST_MODE=true` to enable testing mode. Everything else will default to `false`. This setting has to be provided as `true`, if you want run tests without a valid `KARMABOT_SLACK_BOT_TOKEN`. Otherwise, you will receive an exceptions with `slack_bolt.error.BoltError: token is invalid ...`.\n\nIf you do not want to use a file you have to provide environment variables with the above names. If no file is present we default to environment variables.\n\n#### Permissions\n\nGo to your [slack app](https://api.slack.com/apps/) and click on **Add features and functionality**. Then go into the following categories and set permissions.\n\n- Event Subscriptions\n  - Enable Events ðŸ Š Toggle the slider to on\n  - Subscribe to bot events ðŸ Š Add via the **Add Bot User Event** button\n    - team_join\n    - channel_create\n    - message.channels\n    - message.groups\n    - message.im\n- Permissions\n  - Scopes ðŸ Š Add the following permissions via the **Add an OAuth Scope** button\n    - app_mentions:read\n    - channels:history\n    - channels:join\n    - channels:read\n    - chat:write\n    - groups:history\n    - groups:read\n    - groups:write\n    - im:history\n    - im:read\n    - im:write\n    - users.profile:read\n    - users:read\n\n## Development pattern for contributors\n\nWe use [poetry](https://github.com/python-poetry/poetry) and `pyproject.toml` for managing packages, dependencies and some settings.\n\n### Setup virtual environment for development\n\nYou should follow the [instructions](https://github.com/python-poetry/poetry) to get poetry up and running for your system. We recommend to use a UNIX-based development system (Linux, Mac, WSL). After setting up poetry you can use `poetry install` within the project folder to install all dependencies.\n\nThe poetry virtual environment should be available in the the project folder as `.venv` folder as specified in `poetry.toml`. This helps with `.venv` detection in IDEs.\n\n#### Conda users\n\nIf you use the Anaconda Python distribution (strongly recommended for Windows users) and `conda create` for your virtual environments, then you will not be able to use the `.venv` environment created by poetry because it is not a conda environment. If you want to use `poetry` disable poetry's behavior of creating a new virtual environment with the following command: `poetry config virtualenvs.create false`. You can add `--local` if you don't want to change this setting globally but only for the current project. See the [poetry configuration docs](https://python-poetry.org/docs/configuration/) for more details.\n\nNow, when you run `poetry install`, poetry will install all dependencies to your conda environment. You can verify this by running `pip freeze` after `poetry install`.\n\n### Testing and linting\n\nFor testing you need to install [nox](https://nox.thea.codes/en/stable/) separately from the project venv created by poetry. For testing just use the `nox` command within the project folder. You can run all the nox sessions separately if need, e.g.,\n\n- only linting `nox -rs lint`\n- only testing `nox -rs tests`\n\nIf `nox` cannot be found, use `python -m nox` instead.\n\nFor different sessions see the `nox.py` file. You can run `nox --list` to see a list of all available sessions.\n\nIf you want to run tests locally via `pytest` you have to provide a valid `.karmabot` settings file or the respective enviroment variables.\n\nPlease make sure all tests and checks pass before opening pull requests!\n\n#### Using nox under Windows and Linux (WSL)\n\nMake sure to delete the `.nox` folder when you switch from Windows to WSL and vice versa, because the environments are not compatible.\n\n### [pre-commit](https://pre-commit.com/)\n\nTo ensure consistency you can use pre-commit. `pip install pre-commit` and after cloning the karmabot repo run `pre-commit install` within the project folder.\n\nThis will enable pre-commit hooks for checking before every commit.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PyBites-Open-Source/karmabot",
    "keywords": "karmabot",
    "license": "MIT",
    "maintainer": "Patrick-Oliver GroÃŸ",
    "maintainer_email": "mail@pogross.de",
    "name": "karmabot",
    "package_url": "https://pypi.org/project/karmabot/",
    "platform": "",
    "project_url": "https://pypi.org/project/karmabot/",
    "project_urls": {
      "Homepage": "https://github.com/PyBites-Open-Source/karmabot",
      "Repository": "https://github.com/PyBites-Open-Source/karmabot"
    },
    "release_url": "https://pypi.org/project/karmabot/2.0.1/",
    "requires_dist": [
      "SQLAlchemy (>=1.4.20,<2.0.0)",
      "feedparser (>=6.0.8,<7.0.0)",
      "humanize (>=3.10.0,<4.0.0)",
      "importlib-metadata (>=3.7.3,<4.0.0)",
      "psycopg2-binary (>=2.9.1,<3.0.0)",
      "pyjokes (>=0.6.0,<0.7.0)",
      "python-dotenv (>=0.18.0,<0.19.0)",
      "slack-bolt (>=1.6.1,<2.0.0)",
      "slack-sdk (>=3.7.0,<4.0.0)",
      "freezegun (>=1.1.0,<2.0.0)",
      "requests (>=2.25.1,<3.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "PyBites Karmabot - A Python based Slack Chatbot for Community interaction",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11642131,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fad8da25351dae8fd4099a1e6b5b451725a17051159ce5cfa93ec4d88e1467f0",
          "md5": "80818ca0444dcbbcc44d664b6f273ada",
          "sha256": "fffd821da50f3c5ad60a109607d430c0e4056bebb48d43b37c022b05fe00221e"
        },
        "downloads": -1,
        "filename": "karmabot-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80818ca0444dcbbcc44d664b6f273ada",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.7.8",
        "size": 23554,
        "upload_time": "2020-08-11T20:16:59",
        "upload_time_iso_8601": "2020-08-11T20:16:59.163896Z",
        "url": "https://files.pythonhosted.org/packages/fa/d8/da25351dae8fd4099a1e6b5b451725a17051159ce5cfa93ec4d88e1467f0/karmabot-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac544fec3479eb002026e5f10d267b562d43db5610aa49f29caf4f69b8dfe049",
          "md5": "65c1be50ec8bec545a2793a7eaaebedd",
          "sha256": "825b5ba0a4bd77a658d6b9e6d3372b2f57d98d32339e3b2249dbe5f6d10d5ca1"
        },
        "downloads": -1,
        "filename": "karmabot-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "65c1be50ec8bec545a2793a7eaaebedd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.7.8",
        "size": 19590,
        "upload_time": "2020-08-11T20:17:02",
        "upload_time_iso_8601": "2020-08-11T20:17:02.082161Z",
        "url": "https://files.pythonhosted.org/packages/ac/54/4fec3479eb002026e5f10d267b562d43db5610aa49f29caf4f69b8dfe049/karmabot-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5af677cca94788b27fea87e3587fcb6002cdd39638ddab649776f63b59aa976e",
          "md5": "2dacf69e9e372dc45efd262a6b489517",
          "sha256": "b16411b82bc93c153600e9950e519db506babc7dd555dc25c773d6330ac2b1b8"
        },
        "downloads": -1,
        "filename": "karmabot-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2dacf69e9e372dc45efd262a6b489517",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 23564,
        "upload_time": "2020-09-05T10:10:05",
        "upload_time_iso_8601": "2020-09-05T10:10:05.419935Z",
        "url": "https://files.pythonhosted.org/packages/5a/f6/77cca94788b27fea87e3587fcb6002cdd39638ddab649776f63b59aa976e/karmabot-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "214cc4d481d8bc59e96627c8c71488d79a27b49b1559f6c638d6350e9dd7d1d4",
          "md5": "baff8db639408bb302e47a139ba6b8e3",
          "sha256": "6f70c5056b92dd9f0016ac3e1d566bca6ae1c203ff8e0e07be86cd35fae83c81"
        },
        "downloads": -1,
        "filename": "karmabot-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "baff8db639408bb302e47a139ba6b8e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 19617,
        "upload_time": "2020-09-05T10:10:06",
        "upload_time_iso_8601": "2020-09-05T10:10:06.463794Z",
        "url": "https://files.pythonhosted.org/packages/21/4c/c4d481d8bc59e96627c8c71488d79a27b49b1559f6c638d6350e9dd7d1d4/karmabot-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a865e151776369778e11ef14d020603908ad7e89107ee4e72c89041ac5e694f",
          "md5": "5a0aa6cbd545a9fcae965b83af8bb416",
          "sha256": "acbed3b9d40406329c1077e1edcca04be020fb6a6a9a29e3c1ccca4bd66ea061"
        },
        "downloads": -1,
        "filename": "karmabot-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5a0aa6cbd545a9fcae965b83af8bb416",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 20426,
        "upload_time": "2020-09-09T10:00:29",
        "upload_time_iso_8601": "2020-09-09T10:00:29.638339Z",
        "url": "https://files.pythonhosted.org/packages/7a/86/5e151776369778e11ef14d020603908ad7e89107ee4e72c89041ac5e694f/karmabot-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a5e1cb4f1adc36ff977d52dfabbe23f6a2f5088ef6d69f713fdc278997d11cc",
          "md5": "0c51190f0f60bdae772ca6e47a92bf9a",
          "sha256": "7c28c6f96ba36fd96b8af7e176aab8241ef7978e3eba8520907ef360b46588d9"
        },
        "downloads": -1,
        "filename": "karmabot-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c51190f0f60bdae772ca6e47a92bf9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 26614,
        "upload_time": "2020-12-22T14:13:43",
        "upload_time_iso_8601": "2020-12-22T14:13:43.991681Z",
        "url": "https://files.pythonhosted.org/packages/8a/5e/1cb4f1adc36ff977d52dfabbe23f6a2f5088ef6d69f713fdc278997d11cc/karmabot-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18298a850282821bc982c82aaa1dc3a59bfa77eec6b0c191be36507b92c68bab",
          "md5": "a31caa75842c5002dcb168fdc51c30a7",
          "sha256": "23f212982ac72198cf4757a0c7117f0c157295c160f2aedc65c6484f63be8eda"
        },
        "downloads": -1,
        "filename": "karmabot-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a31caa75842c5002dcb168fdc51c30a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 22663,
        "upload_time": "2020-12-22T14:13:45",
        "upload_time_iso_8601": "2020-12-22T14:13:45.208676Z",
        "url": "https://files.pythonhosted.org/packages/18/29/8a850282821bc982c82aaa1dc3a59bfa77eec6b0c191be36507b92c68bab/karmabot-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b72c356dc714d96a6c6d09cdd68ed09550b82b6b6b42edfe396b0c0f47848b78",
          "md5": "589c395814d69e14e4bc20b43bb0650a",
          "sha256": "1ee02f9a0233854987a68093e9c09f59d41d718bf288f9a837602245da110a1c"
        },
        "downloads": -1,
        "filename": "karmabot-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "589c395814d69e14e4bc20b43bb0650a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 28530,
        "upload_time": "2021-10-06T09:46:07",
        "upload_time_iso_8601": "2021-10-06T09:46:07.365947Z",
        "url": "https://files.pythonhosted.org/packages/b7/2c/356dc714d96a6c6d09cdd68ed09550b82b6b6b42edfe396b0c0f47848b78/karmabot-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef784b6445e11a0bc22ff68d0bf53e4e8575feb15efc18a86c31893aed0ee8dd",
          "md5": "0ba2edead36a3abc8025936e319df46f",
          "sha256": "f80bd2f05eca07be36fc8d321f66fc1d9f1b49accd43db4205b087a55afa5370"
        },
        "downloads": -1,
        "filename": "karmabot-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0ba2edead36a3abc8025936e319df46f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 24825,
        "upload_time": "2021-10-06T09:46:08",
        "upload_time_iso_8601": "2021-10-06T09:46:08.390896Z",
        "url": "https://files.pythonhosted.org/packages/ef/78/4b6445e11a0bc22ff68d0bf53e4e8575feb15efc18a86c31893aed0ee8dd/karmabot-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b72c356dc714d96a6c6d09cdd68ed09550b82b6b6b42edfe396b0c0f47848b78",
        "md5": "589c395814d69e14e4bc20b43bb0650a",
        "sha256": "1ee02f9a0233854987a68093e9c09f59d41d718bf288f9a837602245da110a1c"
      },
      "downloads": -1,
      "filename": "karmabot-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "589c395814d69e14e4bc20b43bb0650a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 28530,
      "upload_time": "2021-10-06T09:46:07",
      "upload_time_iso_8601": "2021-10-06T09:46:07.365947Z",
      "url": "https://files.pythonhosted.org/packages/b7/2c/356dc714d96a6c6d09cdd68ed09550b82b6b6b42edfe396b0c0f47848b78/karmabot-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef784b6445e11a0bc22ff68d0bf53e4e8575feb15efc18a86c31893aed0ee8dd",
        "md5": "0ba2edead36a3abc8025936e319df46f",
        "sha256": "f80bd2f05eca07be36fc8d321f66fc1d9f1b49accd43db4205b087a55afa5370"
      },
      "downloads": -1,
      "filename": "karmabot-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0ba2edead36a3abc8025936e319df46f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 24825,
      "upload_time": "2021-10-06T09:46:08",
      "upload_time_iso_8601": "2021-10-06T09:46:08.390896Z",
      "url": "https://files.pythonhosted.org/packages/ef/78/4b6445e11a0bc22ff68d0bf53e4e8575feb15efc18a86c31893aed0ee8dd/karmabot-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}