{
  "info": {
    "author": "Jordan Cook",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Save Scummer\n**WIP / Incomplete!**\n\n* [Features](#features)\n* [Installation](#installation)\n  * [Autocompletion](#autocompletion--optional-)\n* [Usage](#usage)\n  * [Add](#add)\n  * [Backup](#backup)\n  * [List](#list)\n  * [Restore](#restore)\n    * [Backup specifiers](#backup-specifiers)\n    * [Restore Examples](#restore-examples)\n\n\nSave-Scummer is a simple CLI utility to backup and restore game saves.\nThis was originally intended for rogue-lite games like **Rogue Legacy**, **FTL** and **Don't Starve**,\nbut it could also be easily applied to other games or non-game applications.\n\nI made this because I enjoy roguelike/rogue-lite games, but when one starts to get too difficult,\nI may resort to [save-scumming](https://tvtropes.org/pmwiki/pmwiki.php/Main/SaveScumming) as an\noption to make the game a bit easier. When doing that manually, I find myself wasting precious _seconds_\nof time copying files back and forth, so naturally I decided to waste hours making it (semi-)automated\ninstead.\n\nA full backup utility (like [Duplicati](https://github.com/duplicati/duplicati)) or sync utility\n(like [rsync](https://github.com/WayneD/rsync)) will obviously have _many_ more features, but for the\nrelatively basic case of handling game saves, I wanted something simpler with more concise command\nline usage.\n\n# Features\n* Just provide a save directory (or glob pattern) to configure a new game\n* Easily make backups, and restore them by most recent (default), time expressions\n  (to indicate how far back in time you want to go), or choose from a list\n* Tab autocompletion\n\n# Installation\n```bash\n# Not yet on pypi; will be published when at least basic functionality is working \npip install https://github.com/JWCook/save-scummer\n```\n\n## Autocompletion (optional)\nTab autocompletion is available for most common shells: **bash, fish, zsh** and Windows **PowerShell**.\nTo install, just run `ssc --install [shell name]`\n\n# Usage\nSave-scummer provides the command `save-scummer` (also aliased as `ssc`) with the following subcommands:\n\n```bash\nUsage: ssc COMMAND [ARGS]...\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  add      Add a game and its save directory\n  backup   Create a backup of one, multiple, or all games\n  ls       List all currently configured games\n  restore  Restore a backup of the specified game\n```\n\n## Add\nUse `ssc add` to add (or update) a game and its save directory.\n\nRelative paths, user paths, and [glob patterns](https://en.wikipedia.org/wiki/Glob_(programming))\nare supported:\n```bash\nssc add game1 ~/Games/game1           # Add a dir (including any subdirs)\nssc add game1 '~/Games/game1/**'      # Equivalent glob pattern (quotes required)\nssc add game2 'C:\\Games\\game2\\*.sav'  # Add files ending in .sav\n````\n\n## Backup\nUse `ssc backup` to create a new backup. Just specify the game title, and an optional description:\n```bash\nssc backup game1 -d 'level 10 with full health'\n```\nOr just backup everything:\n```bash\nssc backup --all\n```\n\n## List\nUse `ssc ls` to show a summary of all configured games:\n```bash\n╒════════╤═════════════════╤═════════════════════════════════╕\n│ Title  │ Total backups   │ Last saved                      │\n╞════════╪═════════════════╪═════════════════════════════════╡\n│ game1  │ 0               │ never                           │\n├────────┼─────────────────┼─────────────────────────────────┤\n│ game2  │ 7 (94.96 KB)    │ 2021-01-19 15:20 (23 hours ago) │\n╘════════╧═════════════════╧═════════════════════════════════╛\n```\n\nOr use `ssc ls [game title]` to show more details on a specific game and its backups:\n```bash\nGame:               game2\nTotal backups:      7 (94.96 KB)\nLast saved:         2021-01-19 15:20 (23 hours ago)\nLast backed up:     2021-01-19 16:24 (22 hours ago)\nSource directory:   /home/user/game2/saves\nBackup directory:   /home/user/.local/share/save-scummer/backups/game2\nBackup files: \t\n0:  game2-2021-01-26T19:23:26.zip\n1:  game2-2021-01-20T16:33:42-pre-restore.zip\n2:  game2-2021-01-19T19:26:10.zip\n3:  game2-2021-01-19T18:31:58.zip\n4:  game2-2021-01-18T12:17:52.zip\n5:  game2-2021-01-17T16:18:09.zip\n6:  game2-2021-01-17T15:01:58.zip\n```\n\nNote that \"Last saved\" is the time that the source files were created/modified.\n\n## Restore\n\nUse `ssc restore` to restore a backup. A specific backup can be indicated by backup\n **index, age, date/time, or filename**. Otherwise, the most recent backup is restored.\n\n```bash\nUsage: ssc restore [OPTIONS] [TITLE]\n\nOptions:\n  -i, --index INTEGER  Backup number (starting at 0, from newest to oldest)\n  -a, --age TEXT       Minimum age (relative to current time)\n  -d, --date TEXT      Maximum date/time (absolute)\n  -f TEXT              Backup filename; either absolute or relative to backup\n                       dir\n```\n\n### Backup specifiers\n\n**Index:**\nThe backup index, sorted from newest to oldest, e.g.\n**\"Restore the save from x backups ago.\"** 0 is the latest backup, 1 is the\nbackup made before that, etc.\nNegative values can also be given; -1 would give you the oldest backup.\nSee `ls` command for full list of available backups.\n\n**Age:**\nMinimum age of the save to restore, e.g **\"I want to go back in time by 1 hour.\"**\nAmounts of time can be specified in 'HH:MM' format, or with a number followed by a unit.\nExamples: \n* '1:30' (an hour and a half ago)\n* '30m' (or '30 minutes')\n* '6h' (or '6 hours')\n* '9 hours, 15 minutes' (or '9:15')\n* '2d' (or '2 days')\n* See [pytimeparse](https://github.com/wroberts/pytimeparse) for more formats\n\n**Date/Time:**\nMaximum date/time of the save to restore, e.g., **\"I want to go back in\ntime to 1:30 yesterday.\"** Most date/time formats are supported.\nExamples:\n* '16:30' or '4:30 PM' (today)\n* '2021-01-20'\n* 'August 3 2020'\n* Most date/time formats are supported; see\n[dateutil](https://dateutil.readthedocs.io/en/stable/examples.html#parse-examples)\nfor more examples.\n\n**Filename:**\nEither a full path or just the filename (relative to the backup dir)\n\n### Restore Examples\n\n```bash\n# Just restore the most recent backup\nssc restore game1\n\n# Restore the backup made 2 backups ago (aka the 3rd most recent)\nssc restore game1 -i 2\n\n# Restore a backup from (at least) an hour and a half ago\nssc restore game1 -a '1:30'\n\n# Restore a backup from (at least) 2 days ago\nssc restore game1 -a 2d\n\n# Restore a backup from 4:00 PM today or earlier\nssc restore game1 -d '4:00 PM'\n\n# Restore a backup from March 22 or earlier\nssc restore game1 -d 'Mar 22 2021'\n\n# Restore a backup by filename\nssc restore game1 -f game1-2021-01-20T00:09:10.zip\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JWCook/save-scummer",
    "keywords": "",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "save-scummer",
    "package_url": "https://pypi.org/project/save-scummer/",
    "platform": "",
    "project_url": "https://pypi.org/project/save-scummer/",
    "project_urls": {
      "Homepage": "https://github.com/JWCook/save-scummer"
    },
    "release_url": "https://pypi.org/project/save-scummer/0.0.1/",
    "requires_dist": [
      "appdirs",
      "Click (>=7.0)",
      "click-completion",
      "halo",
      "python-dateutil",
      "pytimeparse",
      "pyyaml (>=5.0)",
      "tabulate",
      "watchdog",
      "coveralls ; extra == 'build'",
      "twine ; extra == 'build'",
      "wheel ; extra == 'build'",
      "black ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "A simple CLI utility to backup and restore game saves",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9282128,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1979ff62bc04249e11382cd77aaf6d96dfb798c1cdd2ebaf853cdd6a59650662",
          "md5": "15145d0dcce7bb2bc56d1a45db79189b",
          "sha256": "2468df5b40e9ab15c6c9ef7118a824bcc3ae13884c676cee06fa519e286eba08"
        },
        "downloads": -1,
        "filename": "save_scummer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15145d0dcce7bb2bc56d1a45db79189b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13125,
        "upload_time": "2021-02-01T03:06:19",
        "upload_time_iso_8601": "2021-02-01T03:06:19.865581Z",
        "url": "https://files.pythonhosted.org/packages/19/79/ff62bc04249e11382cd77aaf6d96dfb798c1cdd2ebaf853cdd6a59650662/save_scummer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7043e84885a6124fe8426b59a53378aeadf7f2f92e36e7de70ca8142387a81a",
          "md5": "9013a25a19e2c1fcd5fe58bb8ff5e9ef",
          "sha256": "93a68932275c8c7738c323b6ef1fcc384f6f11360bb45a5feb91d571a3ddebbe"
        },
        "downloads": -1,
        "filename": "save-scummer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9013a25a19e2c1fcd5fe58bb8ff5e9ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14072,
        "upload_time": "2021-02-01T03:06:21",
        "upload_time_iso_8601": "2021-02-01T03:06:21.015476Z",
        "url": "https://files.pythonhosted.org/packages/d7/04/3e84885a6124fe8426b59a53378aeadf7f2f92e36e7de70ca8142387a81a/save-scummer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1979ff62bc04249e11382cd77aaf6d96dfb798c1cdd2ebaf853cdd6a59650662",
        "md5": "15145d0dcce7bb2bc56d1a45db79189b",
        "sha256": "2468df5b40e9ab15c6c9ef7118a824bcc3ae13884c676cee06fa519e286eba08"
      },
      "downloads": -1,
      "filename": "save_scummer-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "15145d0dcce7bb2bc56d1a45db79189b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13125,
      "upload_time": "2021-02-01T03:06:19",
      "upload_time_iso_8601": "2021-02-01T03:06:19.865581Z",
      "url": "https://files.pythonhosted.org/packages/19/79/ff62bc04249e11382cd77aaf6d96dfb798c1cdd2ebaf853cdd6a59650662/save_scummer-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7043e84885a6124fe8426b59a53378aeadf7f2f92e36e7de70ca8142387a81a",
        "md5": "9013a25a19e2c1fcd5fe58bb8ff5e9ef",
        "sha256": "93a68932275c8c7738c323b6ef1fcc384f6f11360bb45a5feb91d571a3ddebbe"
      },
      "downloads": -1,
      "filename": "save-scummer-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9013a25a19e2c1fcd5fe58bb8ff5e9ef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14072,
      "upload_time": "2021-02-01T03:06:21",
      "upload_time_iso_8601": "2021-02-01T03:06:21.015476Z",
      "url": "https://files.pythonhosted.org/packages/d7/04/3e84885a6124fe8426b59a53378aeadf7f2f92e36e7de70ca8142387a81a/save-scummer-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}