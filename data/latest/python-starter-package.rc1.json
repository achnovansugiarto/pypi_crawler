{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# python-starter\n\n[![GitHub Actions][github-actions-badge]](https://github.com/paulsabyasachi/python-starter/actions/)\n[![Code style: black][black-badge]](https://github.com/psf/black)\n[![Imports: isort][isort-badge]](https://pycqa.github.io/isort/)\n\n[github-actions-badge]: https://github.com/paulsabyasachi/python-starter/workflows/python/badge.svg\n[black-badge]: https://img.shields.io/badge/code%20style-black-000000.svg\n[isort-badge]: https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336\n\nExample Python project that demonstrates how to create a tested Python package using the latest\nPython testing and linting tooling. The project contains a `div` package that provides a simple\nimplementation of division (`div.lib`)\nand a command line interface (`div.cli`).\n\n## Requirements\n\nPython 3.6+.\n\n> **Note**\n>\n> Because [Python 2.7 support ended January 1, 2020](https://pythonclock.org/), new projects \n> should consider supporting Python 3 only, which is simpler than trying to support both. As a \n> result, support for Python 2.7 in this example project has been dropped.\n\n## Running CLI application\n\n- `export PYTHONPATH=\"${PYTHONPATH}:<path_to_directory>/python-starter/src\"`\n- `python cli.py -a 5 -b 2`\n\n## Dependencies\n\nDependencies are defined in:\n\n- `requirements.txt`\n- `dev-requirements.txt`\n\n### Virtual Environments\n\nIt is best practice during development to create an\nisolated [Python virtualenv wrapper](https://www.geeksforgeeks.org/using-mkvirtualenv-to-create-new-virtual-environment-python/) using the `mkvirtualenv`\ncommand. This will keep dependant Python packages from interfering with other\nPython projects on your system.\n\nOn *Nix:\n\n```bash\n$ mkvirtualenv -p python3.x venv\n```\n\nIt is good practice to update core packaging tools (`pip`, `setuptools`,\nand `wheel`) to the latest versions.\n\n```bash\n(venv) $ python -m pip install --upgrade pip setuptools wheel\n```\n\n### Installing Dependencies\n\nTo update dependencies:\n\n```bash\n(venv) $ pip install -r requirements.txt\n(venv) $ pip install -r dev-requirements.txt\n```\n\nAfter upgrading dependencies, run the unit tests as described in the [Unit Testing](#unit-testing)\nsection to ensure that none of the updated packages caused incompatibilities in the current\nproject.\n\n## Packaging\n\nThis project is designed as a Python package, meaning that it can be bundled up and redistributed\nas a single compressed file.\n\nPackaging is configured by:\n\n- `pyproject.toml`\n- `setup.py`\n- `MANIFEST.in`\n\nTo package the project as both a \n[source distribution](https://docs.python.org/3/distutils/sourcedist.html) and\na [wheel](https://wheel.readthedocs.io/en/stable/):\n\n```bash\n(venv) $ python setup.py sdist bdist_wheel\n```\n\nThis will generate `dist/div-1.0.0.tar.gz` and `dist/div-1.0.0-py3-none-any.whl`.\n\nRead more about the [advantages of wheels](https://pythonwheels.com/) to understand why generating\nwheel distributions are important.\n\n### Upload Distributions to PyPI\n\nSource and wheel redistributable packages can\nbe [uploaded to PyPI](https://packaging.python.org/tutorials/packaging-projects/) or installed\ndirectly from the filesystem using `pip`.\n\nTo upload to PyPI:\n\n```bash\n(venv) $ python -m pip install twine\n(venv) $ twine upload dist/*\n```\n\n## Testing\n\nAutomated testing is performed using [tox](https://tox.readthedocs.io/en/latest/index.html). tox\nwill automatically create virtual environments based on `tox.ini` for unit testing, PEP8 style\nguide checking, and documentation generation.\n\n```bash\n# Run all environments.\n#   To only run a single environment, specify it like: -e lint\n# command above.\n(venv) $ tox\n```\n\n### Unit Testing\n\nUnit testing is performed with [pytest](https://pytest.org/). pytest has become the defacto Python\nunit testing framework. Some key advantages over the built\nin [unittest](https://docs.python.org/3/library/unittest.html) module are:\n\n1. Significantly less boilerplate needed for tests.\n2. PEP8 compliant names (e.g. `pytest.raises()` instead of `self.assertRaises()`).\n3. Vibrant ecosystem of plugins.\n\npytest will automatically discover and run tests by recursively searching for folders and `.py`\nfiles prefixed with `test` for any functions prefixed by `test`.\n\nThe `tests` folder is created as a Python package (i.e. there is an `__init__.py` file within it)\nbecause this helps `pytest` uniquely namespace the test files. Without this, two test files cannot\nbe named the same, even if they are in different sub-directories.\n\nCode coverage is provided by the [pytest-cov](https://pytest-cov.readthedocs.io/en/latest/) plugin.\n\nWhen running a unit test tox environment (e.g. `tox -e py36`), an HTML report is generated in\nthe `htmlcov` folder showing each source file and which lines were executed during unit testing.\nOpen `htmlcov/index.html` in a web browser to view the report. Code coverage reports help identify\nareas of the project that are currently not tested.\n\nCode coverage is configured in `pyproject.toml`.\n\nTo pass arguments to `pytest` through `tox`:\n\n```bash\n(venv) $ tox -e py36 -- -k invalid_divide\n```\n\n### Code Style Checking\n\n[PEP8](https://www.python.org/dev/peps/pep-0008/) is the universally accepted style guide for\nPython code. PEP8 code compliance is verified using [flake8](http://flake8.pycqa.org/). flake8 is\nconfigured in the `[flake8]` section of `tox.ini`. Extra flake8 plugins are also included:\n\n- `pep8-naming`: Ensure functions, classes, and variables are named with correct casing.\n\n### Automated Code Formatting\n\nCode is automatically formatted using [black](https://github.com/psf/black). Imports are\nautomatically sorted and grouped using [isort](https://github.com/PyCQA/isort/).\n\nThese tools are configured by:\n\n- `pyproject.toml`\n\nTo automatically format code, run:\n\n```bash\n(venv) $ tox -e fmt\n```\n\nTo verify code has been formatted, such as in a CI job:\n\n```bash\n(venv) $ tox -e fmt-check\n```\n\n### Generated API Documentation\n\n#### Generate a New Sphinx Project\n\nTo generate the Sphinx project shown in this project:\n\n```bash\n(venv) $ mkdir -p docs/api\n(venv) $ cd docs/api\n(venv) $ sphinx-quickstart --no-makefile --no-batchfile --extensions sphinx.ext.napoleon\n# When prompted, select all defaults.\n```\n\nModify `conf.py` appropriately:\n\n```python\n# Add the project's Python package to the path so that autodoc can find it.\nimport os\nimport sys\nsys.path.insert(0, os.path.abspath(\"../../src\"))\n```\n\nYou might also need to add `apidoc/modules.rst` in `index.rst` file (See line number 13). This has already been done for this project but might be helpful if you start a project of your own. \n\nAPI Documentation for the `div` Python project modules is automatically\ngenerated using a [Sphinx](http://sphinx-doc.org/) tox environment. Sphinx is a documentation\ngeneration tool that is the defacto tool for Python API documentation. Sphinx uses\nthe [RST](https://www.sphinx-doc.org/en/latest/usage/restructuredtext/basics.html) markup language.\n\nThis project uses\nthe [napoleon](http://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html) plugin for\nSphinx, which renders Google-style docstrings. Google-style docstrings provide a good mix of\neasy-to-read docstrings in code as well as nicely-rendered output.\n\n```python\n\"\"\"Divides first input with the second input.\n\nArgs:\n    a: Numerator\n    b: Denominator\n\nRaises:\n    InvalidDivideError: If denominator is 0\n\nReturns:\n    Computed division.\n\"\"\"\n```\n\nThe Sphinx project is configured in `docs/api/conf.py`.\n\nThis project uses the [furo](https://pradyunsg.me/furo/) Sphinx theme for its elegant, simple to\nuse, dark theme.\n\nBuild the docs using the `docs-api` tox environment (e.g. `tox` or `tox -e docs-api`). Once built,\nopen `docs/api/_build/index.html` in a web browser.\n\nTo configure Sphinx to automatically rebuild when it detects changes, run `tox -e docs-api-serve`\nand open <http://127.0.0.1:8000> in a browser.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/paulsabyasachi/python-starter",
    "keywords": "python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-starter-package",
    "package_url": "https://pypi.org/project/python-starter-package/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-starter-package/",
    "project_urls": {
      "Homepage": "https://github.com/paulsabyasachi/python-starter"
    },
    "release_url": "https://pypi.org/project/python-starter-package/1.0.0/",
    "requires_dist": [
      "colorama (>=0.4.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Python starter project",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11294128,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5ba1844c255f9211545647c024102da81dcbd3574b5f3162320cdffed3aaabc",
          "md5": "047cdd2b45f6baa6376e67433c313e0f",
          "sha256": "471af2ef4f8c6ba7124036fd639696d7009e91bddb6b2a74ff1696e2504299f0"
        },
        "downloads": -1,
        "filename": "python_starter_package-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "047cdd2b45f6baa6376e67433c313e0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7174,
        "upload_time": "2021-08-27T11:41:40",
        "upload_time_iso_8601": "2021-08-27T11:41:40.121085Z",
        "url": "https://files.pythonhosted.org/packages/b5/ba/1844c255f9211545647c024102da81dcbd3574b5f3162320cdffed3aaabc/python_starter_package-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebf21f3706d426e38c84a6230512dceb9fffd8d256447120bb290b109140a645",
          "md5": "5479923e4d3385628271779434e8e93f",
          "sha256": "efadcf589940b022bbab7721022af700ef73ea963e1e7fbca24388ad9a8416e8"
        },
        "downloads": -1,
        "filename": "python-starter-package-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5479923e4d3385628271779434e8e93f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7309,
        "upload_time": "2021-08-27T11:41:41",
        "upload_time_iso_8601": "2021-08-27T11:41:41.433629Z",
        "url": "https://files.pythonhosted.org/packages/eb/f2/1f3706d426e38c84a6230512dceb9fffd8d256447120bb290b109140a645/python-starter-package-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5ba1844c255f9211545647c024102da81dcbd3574b5f3162320cdffed3aaabc",
        "md5": "047cdd2b45f6baa6376e67433c313e0f",
        "sha256": "471af2ef4f8c6ba7124036fd639696d7009e91bddb6b2a74ff1696e2504299f0"
      },
      "downloads": -1,
      "filename": "python_starter_package-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "047cdd2b45f6baa6376e67433c313e0f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7174,
      "upload_time": "2021-08-27T11:41:40",
      "upload_time_iso_8601": "2021-08-27T11:41:40.121085Z",
      "url": "https://files.pythonhosted.org/packages/b5/ba/1844c255f9211545647c024102da81dcbd3574b5f3162320cdffed3aaabc/python_starter_package-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ebf21f3706d426e38c84a6230512dceb9fffd8d256447120bb290b109140a645",
        "md5": "5479923e4d3385628271779434e8e93f",
        "sha256": "efadcf589940b022bbab7721022af700ef73ea963e1e7fbca24388ad9a8416e8"
      },
      "downloads": -1,
      "filename": "python-starter-package-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5479923e4d3385628271779434e8e93f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7309,
      "upload_time": "2021-08-27T11:41:41",
      "upload_time_iso_8601": "2021-08-27T11:41:41.433629Z",
      "url": "https://files.pythonhosted.org/packages/eb/f2/1f3706d426e38c84a6230512dceb9fffd8d256447120bb290b109140a645/python-starter-package-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}