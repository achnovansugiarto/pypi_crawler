{
  "info": {
    "author": "Liuchun Yuan",
    "author_email": "ylc0003@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## 简介 \n\nmini-socket 提供了一个简易版本的多连接socket. \n\n## 连接\n\n### Basic \n\n简单的连接方式是: \n\nMachine A: 挂服务端;  Machine B: 挂客户端. A/B 属于同局域网.\n\nB 发数据 -> A 收并记录, 告知B已收到 -> 连接关闭\n\nB 请求数据 -> A 收到请求, 查找并发数据 -> B 收到数据, 并告知A已收到 -> 连接关闭\n\n\n### Mid\n\n在一些情况下, 如由于安全问题, 可能没办法暴露相关端口,  导致 A/B 无法连接. \n\n建立一个中间连接, Machine C, 用于连接A B . \n\n中转连接方式: \n\nMachine C: 挂服务端; Machine A/B: 挂客户端. \n\n收发数据和 basic 相同. \n\n一些项目使用的情况不同, 需要解析收发数据的形式. \n\n`server.MidServer` 是为该方法的数据解析方式, 需要别解析方式在`server.py` 里面加. \n\n## Usage\n\n挂服务端: \n\n`python echo_server.py ${IP}$ ${PORT}$`\n\n`IP`: 局域网下ip or localhost 都可以\n\n客户端:\n\n`python echo_client.py ${IP}$ ${PORT}$ ${TYPE}$ ${CONTENT}$ `\n\n`TYPE`:  请求数据 用 `search` ; 发数据 非 `search`  的任何字符都可以. \n\n## 跨机延时测试\n\n例子:  以basic 的方式为例. \n\nmachine A: 挂server,用于测延时\n\n```\n# global vars\nHOST = \"10.130.19.34\" \nPORT = 7788\n```\n\n`python echo_server.py $HOST $PORT.`\n\nA B 能正常通信的情况下:\n\nMachine B: 挂client, 用于跑search代码.\n\n先不管search, 先说一下相关的数据处理. \n\n`python echo_client.py $HOST $PORT net '32_32_32_128_3_3_3_3'`\n\n\nB向A发了网络的结构数据, A中需要测改网络的延时, 在demo中返回了一个随机数, 实际中需要手动改一下相关代码. \n\nA完成了延时测试, B可以query 延时结果.  \n\n`python echo_client.py $HOST $PORT search '32_32_32_128_3_3_3_3'`\n\n以上完成了一次网络延时测试. \n\n在search 中, 基本逻辑也是这样的. \n\n不同的地方在于: 在发送网络后, B不知道A何时完成测试, 会一直query, 如果A没有完成, 返回的字符会带\"NO\", 以此作为是否A是否完成的flag .\n\n```python\nfrom minisocket.client import Client \n# sending\nfor i, net in enumerate(net_list):\n    assert isinstance(net, dict)\n    str_net = dict2str(net)\n    clinet = Client(host, port, 'net', str_net)\n    client.run()\n    # send -> query(waiting) \n    while True:\n        client = Client(host, port, 'search', str_net)\n        client.run()\n        if \"No\" not in client.recv_info:\n            # finished flag\n            lat = client.recv_info\n            net[\"tlats\"] = float(lat)\n            break\n```\n\n## changelog\n\nv0.0.1: demo  使用的版本, 也是detsearch 中使用的版本. <br>\nclient使用 search 来获取信息, 其他关键字来传输信息.\n\nv0.0.2: 当前开发的版本\n\n\n\n   \n## TODO\n\n- [ ] add quiet mode",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LicharYuan/mini-socket",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "minisocket",
    "package_url": "https://pypi.org/project/minisocket/",
    "platform": "",
    "project_url": "https://pypi.org/project/minisocket/",
    "project_urls": {
      "Homepage": "https://github.com/LicharYuan/mini-socket"
    },
    "release_url": "https://pypi.org/project/minisocket/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "socket api",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10389286,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ace7bc7e86537018ea73aa0525f0e2991724e48bf69beccf2bb34ae044ace1c5",
          "md5": "375c510f6a93d5e531fe8fb632cf1107",
          "sha256": "5f1ab9f9e0831c33e333a078603285429bb3169c7e62fd9bf095f7ff619411f7"
        },
        "downloads": -1,
        "filename": "minisocket-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "375c510f6a93d5e531fe8fb632cf1107",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11691,
        "upload_time": "2021-05-18T09:13:51",
        "upload_time_iso_8601": "2021-05-18T09:13:51.264159Z",
        "url": "https://files.pythonhosted.org/packages/ac/e7/bc7e86537018ea73aa0525f0e2991724e48bf69beccf2bb34ae044ace1c5/minisocket-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ace7bc7e86537018ea73aa0525f0e2991724e48bf69beccf2bb34ae044ace1c5",
        "md5": "375c510f6a93d5e531fe8fb632cf1107",
        "sha256": "5f1ab9f9e0831c33e333a078603285429bb3169c7e62fd9bf095f7ff619411f7"
      },
      "downloads": -1,
      "filename": "minisocket-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "375c510f6a93d5e531fe8fb632cf1107",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11691,
      "upload_time": "2021-05-18T09:13:51",
      "upload_time_iso_8601": "2021-05-18T09:13:51.264159Z",
      "url": "https://files.pythonhosted.org/packages/ac/e7/bc7e86537018ea73aa0525f0e2991724e48bf69beccf2bb34ae044ace1c5/minisocket-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}