{
  "info": {
    "author": "Emanuele Bellocchia",
    "author_email": "ebellocchia@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# AES Cipher\n[![PyPI version](https://badge.fury.io/py/aes-cipher.svg)](https://badge.fury.io/py/aes-cipher)\n[![Build Status](https://www.travis-ci.com/ebellocchia/aes_cipher.svg?branch=main)](https://travis-ci.com/ebellocchia/aes_cipher)\n[![codecov](https://codecov.io/gh/ebellocchia/aes_cipher/branch/main/graph/badge.svg)](https://codecov.io/gh/ebellocchia/aes_cipher)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/9afd9788aa0e43faa491edcf6ed29d5e)](https://www.codacy.com/gh/ebellocchia/aes_cipher/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=ebellocchia/aes_cipher&amp;utm_campaign=Badge_Grade)\n[![CodeFactor](https://www.codefactor.io/repository/github/ebellocchia/aes_cipher/badge)](https://www.codefactor.io/repository/github/ebellocchia/aes_cipher)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://raw.githubusercontent.com/ebellocchia/bip_utils/master/LICENSE)\n\n## Introduction\n\nAES cipher is a library to encrypt/decrypt using AES256-CBC. It is possible to encrypt/decrypt both files and raw data (string or bytes).\n\n# How it works\n\n1. A master key and IV are derived from the given password and (optionally) salt using a key derivation function. The key derivation function can be chosen among the provided ones:\n   - PBKDF2-SHA512\n   - Scrypt\n\n    Alternatively, it can also be customized by the user by simply implementing the `IKeyDerivator` interface.\\\n    Salt is randomly generated (16-byte long) if not specified.\n2. A random key and IV are generated and used to encrypt the actual data. In this way, if the same file is encrypted with the same password multiple times, the encrypted file will always be different. \n3. The random key and IV are encrypted with the master key and IV\n4. HMAC-SHA256 of the encrypted key/IV and file data is computed to ensure integrity, using the master key as key\n\nIt is possible to specify either a single password or a list of passwords.\nIn the last case, the file will be encrypted multiple times with a different password each time.\n\n## Installation\n\nThe package requires Python >= 3.7.\\\nTo install it:\n- Using *setuptools*:\n\n        python setup.py install\n\n- Using *pip*:\n\n        pip install aes_cipher\n\nTo run tests:\n\n    python -m unittest discover\n\nOr you can install *tox*:\n\n    pip install tox\n\nAnd then simply run *tox*:\n\n    tox\n\nThis will run code coverage with different Python versions and perform style and code analysis.\\\nFor quick test:\n\n    tox -e unittest\n\n## APIs\n\n### Key derivation\n\n`Pbkdf2Sha512` class: derive keys using PBKDF2-SHA512 algorithm\n  - `Pbkdf2Sha512(itr_num)`: construct the class\n    - `itr_num`: iterations number\n\nFor default values, the `Pbkdf2Sha512Default` class instance can be used:\n\n    Pbkdf2Sha512Default = Pbkdf2Sha512(512 * 1024)\n\n`Scrypt` class: derive keys using Scrypt algorithm\n  - `Scrypt(n, p, r)`: construct the class\n    - `n`: CPU/Memory cost parameter\n    - `p`: block size parameter\n    - `r`: parallelization parameter\n\nFor default values, the `ScryptDefault` class instance can be used:\n\n    ScryptDefault = Scrypt(16384, 8, 8)\n\nTo add a custom key derivation function, the `IKeyDerivator` interface shall be implemented:\n\n    class IKeyDerivator(ABC):\n        @abstractmethod\n        def DeriveKey(self,\n                      password: Union[str, bytes],\n                      salt: Union[str, bytes]) -> bytes:\n            pass\n\nThe only requirement is that the output of the `DeriveKey` method is at least 48-byte long.\\\nA constructor can be added to customize the algorithm.\n\n### Encryption\n\n`DataEncrypter` class: encrypt bytes or string data\n\n- `DataEncrypter(key_derivator)`: construct the class\n  - `key_derivator`: key derivator to be used for master key and IV generation, it shall be an instance of the `IKeyDerivator` interface. Default value: `Pbkdf2Sha512Default`.\n- `DataEncrypter.Encrypt(data, passwords [, salts])`: encrypt data with the specified passwords and salts\n    - `data`: input data (string or bytes)\n    - `passwords`: list of passwords (list of strings)\n    - `salts` (optional): list of salts (list of strings). The number of salts shall be the same of the passwords. If not specified, salts will be randomly generated (16-byte long).\n- `DataEncrypter.GetEncryptedData()`: get encrypted data (bytes)\n\n`FileEncrypter` class: encrypt a file\n\n- `FileEncrypter(key_derivator)`: construct the class\n  - `key_derivator`: see `DataEncrypter` constructor\n- `FileEncrypter.Encrypt(file_in, passwords [, salts])`: encrypt file with the specified passwords and salts\n    - `file_in`: input file\n    - `passwords`: see `DataEncrypter.Encrypt`\n    - `salts`: see `DataEncrypter.Encrypt`\n- `FileEncrypter.GetEncryptedData()`: get encrypted data (bytes)\n- `FileEncrypter.SaveTo(file_out)`: save to file\n    - `file_out`: output file to be saved\n\n### Decryption\n\n`DataDecrypter` class: decrypt bytes or string data\n\n- `DataDecrypter(key_derivator)`: construct the class\n  - `key_derivator`: key derivator to be used for master key and IV generation, it shall be an instance of the `IKeyDerivator` interface. Default value: `Pbkdf2Sha512Default`.\n- `DataDecrypter.Decrypt(data, passwords)`: decrypt data with the specified passwords\n    - `data`: input data (string or bytes)\n    - `passwords`: see `DataEncrypter.Encrypt`\n- `DataDecrypter.GetDecryptedData()`: get decrypted data (bytes)\n\n`FileDecrypter` class: decrypt a file\n\n- `FileDecrypter(key_derivator)`: construct the class\n  - `key_derivator`: see `DataDecrypter` constructor\n- `FileDecrypter.Decrypt(file_in, passwords)`\n    - `file_in`: input file\n    - `passwords`: see `DataDecrypter.Decrypt`\n- `FileDecrypter.GetDecryptedData()`: get decrypted data (bytes)\n- `FileDecrypter.SaveTo(file_out)`: save to file\n    - `file_out`: output file to be saved\n\n## Examples\n\nData encryption with single password and random salt, using PBKDF2-SHA512 algorithm with default values:\n\n    data_encrypter = DataEncrypter(Pbkdf2Sha512Default)\n    data_encrypter.Encrypt(data, \"test_pwd\")\n    enc_data = data_encrypter.GetEncryptedData()\n\nData encryption with single password and custom salt, using PBKDF2-SHA512 algorithm with custom values:\n\n    data_encrypter = DataEncrypter(\n        Pbkdf2Sha512(1024 * 1024)\n    )\n    data_encrypter.Encrypt(data, [\"test_pwd\"], [\"test_salt\"])\n    enc_data = data_encrypter.GetEncryptedData()\n\nData encryption with multiple passwords and custom salts, using Scrypt algorithm with default values:\n\n    data_encrypter = DataEncrypter(ScryptDefault)\n    data_encrypter.Encrypt(data, [\"test_pwd_1\", \"test_pwd_2\"], [\"test_salt_1\", \"test_salt_2\"])\n    enc_data = data_encrypter.GetEncryptedData()\n\nData decryption with single password and random salt:\n\n    data_decrypter = DataDecrypter()\n    data_decrypter.Decrypt(data, [\"test_pwd\"])\n    dec_data = data_decrypter.GetDecryptedData()\n\nData decryption with multiple passwords and custom salts:\n\n    data_decrypter = DataDecrypter()\n    data_decrypter.Decrypt(data, [\"test_pwd_1\", \"test_pwd_2\"], [\"test_salt_1\", \"test_salt_2\"])\n    dec_data = data_decrypter.GetDecryptedData()\n\nFile encryption with single password and random salt:\n\n    file_encrypter = FileEncrypter()\n    file_encrypter.Encrypt(file_in, \"test_pwd\")\n    file_encrypter.SaveTo(file_out)\n\nEnable logging:\n\n    data_encrypter = DataEncrypter()\n    data_encrypter.Logger().SetLevel(logging.INFO)\n\n    data_decrypter = DataDecrypter()\n    data_decrypter.Logger().SetLevel(logging.INFO)\n\n## Sample Application\n\nA sample application based on the library using the PBKDF2-SHA512 algorithm can be found in the *app* folder.\n\nBasic usage:\n\n    python aes_cipher_app.py -m <enc:dec> -p <password1,password2,...> -i <input_files_or_folder> -o <output_folder> [-s <salt1,salt2,...>] [-t <itr_num>] [-v] [-h]\n\nParameters description:\n\n|Short name|Long name| Description                                                                                                                                                                   |\n|---|---|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|`-m`|`--mode`| Operational mode: `enc` for encrypting, `dec` for decrypting                                                                                                                  |\n|`-p`|`--password`| Password used for encrypting/decrypting. It can be a single password or a list of passwords separated by a comma                                                              |\n|`-i`|`--input`| Input to be encrypted/decrypted. It can be a single file, a list of files separated by a comma or a folder (in this case all files in the folder will be encrypted/decrypted) |\n|`-o`|`--output`| Output folder where the encrypted/decrypted files will be saved                                                                                                               |\n|`-s`|`--salt`| Optional: custom salts for master key and IV derivation, random if not specified`                                                                                             |\n|`-t`|`--iteration`| Optional: number of iteration for the PBKDF2-SHA512 algorithm, default value: 524288                                                                                          |\n|`-v`|`--verbose`| Optional: enable verbose mode                                                                                                                                                 |\n|`-h`|`--help`| Optional: print usage and exit                                                                                                                                                |\n\n**NOTE:** the password shall not contain spaces or commas (in this case it will be interpreted as multiple passwords)\n\nExamples:\n\n- Encrypt a file one time with the given password and salt. If *input_file* is a folder, all the files inside the folder will be encrypted:\n\n        python aes_cipher_app.py -m enc -p test_pwd -i input_file -o encrypted -s test_salt\n\n- Decrypt the previous file:\n\n        python aes_cipher_app.py -m dec -p test_pwd -i encrypted -o decrypted -s test_salt\n\n- Encrypt multiple files one time with the given password and salt. If one of the input files is a directory, it will be discarded:\n\n        python aes_cipher_app.py -m enc -p test_pwd -i input_file1,input_file2,input_file3 -o encrypted -s test_salt\n\n- Encrypt a file 3 times using 3 passwords with random salts and custom number of iteration:\n\n        python aes_cipher_app.py -m enc -p test_pwd_1,test_pwd_2,test_pwd_3 -t 131072 -i input_file -o encrypted\n\n- Decrypt the previous file:\n\n        python aes_cipher_app.py -m dec -p test_pwd_1,test_pwd_2,test_pwd_3 -t 131072 -i encrypted -o decrypted\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ebellocchia/aes_cipher/archive/v2.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ebellocchia/aes_cipher",
    "keywords": "cipher,aes,aes256,sha,sha256,sha512,pbkdf2,pbkdf2-sha512,hmac,hmac-sha256",
    "license": "MIT",
    "maintainer": "Emanuele Bellocchia",
    "maintainer_email": "ebellocchia@gmail.com",
    "name": "aes-cipher",
    "package_url": "https://pypi.org/project/aes-cipher/",
    "platform": "any",
    "project_url": "https://pypi.org/project/aes-cipher/",
    "project_urls": {
      "Download": "https://github.com/ebellocchia/aes_cipher/archive/v2.0.0.tar.gz",
      "Homepage": "https://github.com/ebellocchia/aes_cipher"
    },
    "release_url": "https://pypi.org/project/aes-cipher/2.0.0/",
    "requires_dist": [
      "pycryptodome (~=3.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Cipher based on AES256-CBC",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15316440,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8d5d058b8c678569b37b7cc483c62b91a37622436f8b65b9384caf6ba3ca611",
          "md5": "c8511a05e7164a5c5d49bd074852ced8",
          "sha256": "411fa8869b6dc69a673271744d2d037f5fafb14617c1958d97fa5dbcab638177"
        },
        "downloads": -1,
        "filename": "aes_cipher-0.1.0-py3.9.egg",
        "has_sig": false,
        "md5_digest": "c8511a05e7164a5c5d49bd074852ced8",
        "packagetype": "bdist_egg",
        "python_version": "3.9",
        "requires_python": ">=3.7",
        "size": 29909,
        "upload_time": "2021-04-09T20:09:22",
        "upload_time_iso_8601": "2021-04-09T20:09:22.603012Z",
        "url": "https://files.pythonhosted.org/packages/d8/d5/d058b8c678569b37b7cc483c62b91a37622436f8b65b9384caf6ba3ca611/aes_cipher-0.1.0-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "289d30287321d5e329825a137a31f46dcd32111b40361599a1899d5996189e40",
          "md5": "b13f9aab5d4e2c85e22e1f453af840c6",
          "sha256": "33e5db5be24aec48686fc5497d0757e818feb390614e372038a7119e242afd3a"
        },
        "downloads": -1,
        "filename": "aes_cipher-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b13f9aab5d4e2c85e22e1f453af840c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9546,
        "upload_time": "2021-04-09T20:09:24",
        "upload_time_iso_8601": "2021-04-09T20:09:24.106895Z",
        "url": "https://files.pythonhosted.org/packages/28/9d/30287321d5e329825a137a31f46dcd32111b40361599a1899d5996189e40/aes_cipher-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19cc8b08abec4ae6997e36a3698d6354ae3e73459abbc0857a00a03446e28e3b",
          "md5": "6787caa1f9df8e51096362c23c75e50d",
          "sha256": "143ed67016c88b741819ec5a33fb069fe00fcf9c292e2698c18ef59add60ecee"
        },
        "downloads": -1,
        "filename": "aes_cipher-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6787caa1f9df8e51096362c23c75e50d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9621,
        "upload_time": "2021-04-09T21:15:44",
        "upload_time_iso_8601": "2021-04-09T21:15:44.215853Z",
        "url": "https://files.pythonhosted.org/packages/19/cc/8b08abec4ae6997e36a3698d6354ae3e73459abbc0857a00a03446e28e3b/aes_cipher-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d80918a66fcbbf87872b0051fbb07b6b3b8f95ca02728153aa56be32b7b78029",
          "md5": "f3876a1690376291e9b30ecdbdcb6156",
          "sha256": "6e0560b9c891c25804e3ed33a47eba9fe747bd3f5edcd8d0cb372982ec494532"
        },
        "downloads": -1,
        "filename": "aes_cipher-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f3876a1690376291e9b30ecdbdcb6156",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9669,
        "upload_time": "2021-04-10T19:28:20",
        "upload_time_iso_8601": "2021-04-10T19:28:20.794743Z",
        "url": "https://files.pythonhosted.org/packages/d8/09/18a66fcbbf87872b0051fbb07b6b3b8f95ca02728153aa56be32b7b78029/aes_cipher-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "287f30ba3a37cd633982c0d6aab300020bd46bc855cfa4c814b7413dbcacbf1a",
          "md5": "1b5f8e761de867ba5975eff7c91741fa",
          "sha256": "622aac5d1f517c912eac6fa8103be3d9a7e48cff1d03236112202fe98c94195f"
        },
        "downloads": -1,
        "filename": "aes_cipher-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1b5f8e761de867ba5975eff7c91741fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9980,
        "upload_time": "2021-04-11T12:02:11",
        "upload_time_iso_8601": "2021-04-11T12:02:11.828895Z",
        "url": "https://files.pythonhosted.org/packages/28/7f/30ba3a37cd633982c0d6aab300020bd46bc855cfa4c814b7413dbcacbf1a/aes_cipher-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf6eda151c064e574a527c1310d4d82043751cb5a3ee0ec7b5026ab6ca0eb85f",
          "md5": "524f61bd0f128619579bdcab23b847ac",
          "sha256": "1db82259a5e667caa10e6757e87bcdb748e25a70a34b6a4fa49f05ab46ea76e0"
        },
        "downloads": -1,
        "filename": "aes_cipher-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "524f61bd0f128619579bdcab23b847ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10343,
        "upload_time": "2021-04-22T11:24:27",
        "upload_time_iso_8601": "2021-04-22T11:24:27.469976Z",
        "url": "https://files.pythonhosted.org/packages/cf/6e/da151c064e574a527c1310d4d82043751cb5a3ee0ec7b5026ab6ca0eb85f/aes_cipher-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3854918f2aacf31402cb2bb03df60a43edb25095892cd8306b43abe84c2bc9d2",
          "md5": "12426ad3091fed0c53f802c0ec1cd88c",
          "sha256": "70c8e0ded2ec145cded95b96ff257c7cb0070c7c0baabb2d6bcbb758298e05f9"
        },
        "downloads": -1,
        "filename": "aes_cipher-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "12426ad3091fed0c53f802c0ec1cd88c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10593,
        "upload_time": "2021-10-09T12:58:42",
        "upload_time_iso_8601": "2021-10-09T12:58:42.261883Z",
        "url": "https://files.pythonhosted.org/packages/38/54/918f2aacf31402cb2bb03df60a43edb25095892cd8306b43abe84c2bc9d2/aes_cipher-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b0be2e4b9b68412ea8863f8b03cc68e6c329c4fe263d3623007430b9860d7be",
          "md5": "9f77e8c9ea23c3c2e81a7335475e5b62",
          "sha256": "124194f177dd29560a12b926e4caf19cc40b73348ad828da953f3a7144cfdc4d"
        },
        "downloads": -1,
        "filename": "aes_cipher-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9f77e8c9ea23c3c2e81a7335475e5b62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10647,
        "upload_time": "2021-10-18T19:05:07",
        "upload_time_iso_8601": "2021-10-18T19:05:07.768888Z",
        "url": "https://files.pythonhosted.org/packages/2b/0b/e2e4b9b68412ea8863f8b03cc68e6c329c4fe263d3623007430b9860d7be/aes_cipher-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa4fc9459aacf62c64a62be6b4a16a879209f29fc4dd6c0908c5820009f6fd96",
          "md5": "0e86e96ba25c5618db165812572e0359",
          "sha256": "3391d00bd1686dc36d293a7a89146f18a1a3b36a7cf9a0fee6ae5973d93a7290"
        },
        "downloads": -1,
        "filename": "aes_cipher-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0e86e96ba25c5618db165812572e0359",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10901,
        "upload_time": "2022-09-28T12:22:45",
        "upload_time_iso_8601": "2022-09-28T12:22:45.521931Z",
        "url": "https://files.pythonhosted.org/packages/aa/4f/c9459aacf62c64a62be6b4a16a879209f29fc4dd6c0908c5820009f6fd96/aes_cipher-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2a18ac8aec047ca42bc8c662205d341afb5be6401ab01484afe3a9e90c351d9",
          "md5": "7a65050e440c750fe860f86188651c75",
          "sha256": "dadd33e4e570a66ec51c83341fce93c36b2863061c689cc813e32db5f6533230"
        },
        "downloads": -1,
        "filename": "aes_cipher-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a65050e440c750fe860f86188651c75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 24337,
        "upload_time": "2022-10-05T09:39:45",
        "upload_time_iso_8601": "2022-10-05T09:39:45.741773Z",
        "url": "https://files.pythonhosted.org/packages/e2/a1/8ac8aec047ca42bc8c662205d341afb5be6401ab01484afe3a9e90c351d9/aes_cipher-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7495fe3026a5c148e8612e91afdf1b7ae7d7263fbef6073c1e85a43732e68462",
          "md5": "b4f8a8d19c06e8f19f76037f32b5d4c6",
          "sha256": "e9355117903cbd4022484bdcadd84152e87277eaeb63b5e4434d02206d93661b"
        },
        "downloads": -1,
        "filename": "aes_cipher-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b4f8a8d19c06e8f19f76037f32b5d4c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12394,
        "upload_time": "2022-10-05T09:39:47",
        "upload_time_iso_8601": "2022-10-05T09:39:47.616219Z",
        "url": "https://files.pythonhosted.org/packages/74/95/fe3026a5c148e8612e91afdf1b7ae7d7263fbef6073c1e85a43732e68462/aes_cipher-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4daee0dad944c9f9e5528c60a87d794be7945ef95dcf64ae3910947ece9b2837",
          "md5": "73f20fda1ab9fe54edd18ce1f51728c7",
          "sha256": "068012ed954f0b14b4d7c5b42c5e8af633aefa640192dcff88bbbd70b3eeec5b"
        },
        "downloads": -1,
        "filename": "aes_cipher-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73f20fda1ab9fe54edd18ce1f51728c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28991,
        "upload_time": "2022-10-05T21:36:50",
        "upload_time_iso_8601": "2022-10-05T21:36:50.020381Z",
        "url": "https://files.pythonhosted.org/packages/4d/ae/e0dad944c9f9e5528c60a87d794be7945ef95dcf64ae3910947ece9b2837/aes_cipher-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4668b27ed2b9f15bdc992e16c62a3210caabe5e90646524ba811dac8afbd25bb",
          "md5": "2e50128db9ceb06e250dd2f162b4bdd1",
          "sha256": "de2482d7ccec501f746f1878d1ca9793ab3e8698e3f0d984cdc9fc530c44b537"
        },
        "downloads": -1,
        "filename": "aes_cipher-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2e50128db9ceb06e250dd2f162b4bdd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15400,
        "upload_time": "2022-10-05T21:36:52",
        "upload_time_iso_8601": "2022-10-05T21:36:52.098811Z",
        "url": "https://files.pythonhosted.org/packages/46/68/b27ed2b9f15bdc992e16c62a3210caabe5e90646524ba811dac8afbd25bb/aes_cipher-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4daee0dad944c9f9e5528c60a87d794be7945ef95dcf64ae3910947ece9b2837",
        "md5": "73f20fda1ab9fe54edd18ce1f51728c7",
        "sha256": "068012ed954f0b14b4d7c5b42c5e8af633aefa640192dcff88bbbd70b3eeec5b"
      },
      "downloads": -1,
      "filename": "aes_cipher-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "73f20fda1ab9fe54edd18ce1f51728c7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 28991,
      "upload_time": "2022-10-05T21:36:50",
      "upload_time_iso_8601": "2022-10-05T21:36:50.020381Z",
      "url": "https://files.pythonhosted.org/packages/4d/ae/e0dad944c9f9e5528c60a87d794be7945ef95dcf64ae3910947ece9b2837/aes_cipher-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4668b27ed2b9f15bdc992e16c62a3210caabe5e90646524ba811dac8afbd25bb",
        "md5": "2e50128db9ceb06e250dd2f162b4bdd1",
        "sha256": "de2482d7ccec501f746f1878d1ca9793ab3e8698e3f0d984cdc9fc530c44b537"
      },
      "downloads": -1,
      "filename": "aes_cipher-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2e50128db9ceb06e250dd2f162b4bdd1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 15400,
      "upload_time": "2022-10-05T21:36:52",
      "upload_time_iso_8601": "2022-10-05T21:36:52.098811Z",
      "url": "https://files.pythonhosted.org/packages/46/68/b27ed2b9f15bdc992e16c62a3210caabe5e90646524ba811dac8afbd25bb/aes_cipher-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}