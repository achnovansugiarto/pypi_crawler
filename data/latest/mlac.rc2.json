{
  "info": {
    "author": "Joel Hampton",
    "author_email": "joelelihampton@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Overview\nMLAC is available on PyPi and can be installed via\n```none\npip install MLAC\n```\nThis package provides the functionality to quickly compare seven types of feature extraction algorithms and seven types of classifiers. In total there are 49 unique algorithms which can be defined from these FE and classifier algorithms, using the Sci-Kit learn pipeline and grid search functions. Included are two neural networks: an auto-encoder and vanilla fully connected network. The parameters in these are found using the HyperBand algorithm, provided in the KerasTuner package. When a neural network is included in the pipeline, an initial search is performed over the hyper-parameter space using a low number of epochs, patience and factor; this is increased at the end of the search to provide a finer search. This process facilitates quickly determining a good set of hyper-parameters. Included is the ability to see the different hyper-parameter values selected, and whether these are at the bounds of the defined search.    \n\n\n[pypi]:  https://pypi.org/project/MVPR/\n\n# Example\nImport data:\n```\ndata_input = np.random.randn(3000, 1)\nind = np.where(data_input < 0)\ndata_output = np.zeros(np.shape(data_input))\ndata_input = data_input + np.random.randn(3000, 1)*0.2 # add noise\ndata_output[ind] = 1\n\ntest_input = np.random.randn(300, 1)\nind = np.where(test_input < 0)\ntest_output = np.zeros(np.shape(test_input))\ntest_input = test_input + np.random.randn(300, 1)* 0.2 # add noise\ntest_output[ind] = 1\n```\nThis looks like:\n![data](https://user-images.githubusercontent.com/60707891/131995760-2e2734ca-161b-4482-b758-f4c4d03c8858.png)\n\nWe want to find the best ML algorithm that can seperate out this data and classify it:\n\n```\nCD_class = CDA.Parameter_Search(\n            data_input,\n            data_output,\n        )\n```\nTo see the available algorithms:\n```\nkeys_FE = CD_class.keys_FE\nkeys_CA = CD_class.keys_CA\n```\nFinally:\n```\nscore_arr = []\nfor i in keys_FE:\n   for j in keys_CA:\n       CD_class.FE = i\n       CD_class.CA = j\n       CD_class.trained_model()\n       score, predictions = CD_class.predict(test_input, test_output)\n       score_arr.append(score)\n```\nThe results are save automatically for the training data:\n\n![image](https://user-images.githubusercontent.com/60707891/131996611-4167bdc2-4533-401e-aa17-cce9bcb5ac66.png)\n\nWe can see the results of a specific hyper-parameter search:\n\n![image](https://user-images.githubusercontent.com/60707891/131996887-3e7db117-4453-443d-9ae6-8427adb3f1de.png)\n\nIf you want to save the data, you can pull the default filepath:\n\n```\nfilepath = CD_class.filepath\ndf = pd.DataFrame([keys_FE,keys_CA,score_arr]).transpose()\ndf.columns = [\"FE\", \"CA\", \"Accuracy\"]\ndf.to_excel(filepath + \"\\\\algorithm_performance_test.xlsx\", index=False)\n```\n\nsee:\n\n![image](https://user-images.githubusercontent.com/60707891/131998255-f9143ba2-0af8-4385-8715-6d66a8aca74c.png)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Joel-H-dot/MLAC",
    "keywords": "Machine Learning,Binary Classification,SciKit-learn,neural networks",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MLAC",
    "package_url": "https://pypi.org/project/MLAC/",
    "platform": "",
    "project_url": "https://pypi.org/project/MLAC/",
    "project_urls": {
      "Homepage": "https://github.com/Joel-H-dot/MLAC"
    },
    "release_url": "https://pypi.org/project/MLAC/0.2/",
    "requires_dist": [
      "numpy",
      "sklearn",
      "scipy",
      "openpyxl",
      "tensorflow",
      "keras-tuner",
      "scikit-learn",
      "pandas"
    ],
    "requires_python": "",
    "summary": "Code for comparing different machine learning algorithms for binary classification.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11357158,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d37b69fb6e6093d7d0ed8d72efcc95556626b8b8899016bd21bab505c50374db",
          "md5": "5110bd65af1170d2122a69fca65c0835",
          "sha256": "c00706f68fde0da8c3bb16a7300a05e9822b711bcb2f75de82815d0628ab6c34"
        },
        "downloads": -1,
        "filename": "MLAC-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5110bd65af1170d2122a69fca65c0835",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10573,
        "upload_time": "2021-09-03T11:40:36",
        "upload_time_iso_8601": "2021-09-03T11:40:36.322783Z",
        "url": "https://files.pythonhosted.org/packages/d3/7b/69fb6e6093d7d0ed8d72efcc95556626b8b8899016bd21bab505c50374db/MLAC-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "243e3d1aea9ecba8387af86964919ceaf4ec5c82f8aab416b6e12e3799907aa9",
          "md5": "d46587ce538e7576b77021138a383655",
          "sha256": "c5eeb0d7521923b0ca77872d2c51f0677cf6bebd8e4eb73765f893cab4b5554b"
        },
        "downloads": -1,
        "filename": "MLAC-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d46587ce538e7576b77021138a383655",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9474,
        "upload_time": "2021-09-03T11:40:37",
        "upload_time_iso_8601": "2021-09-03T11:40:37.632513Z",
        "url": "https://files.pythonhosted.org/packages/24/3e/3d1aea9ecba8387af86964919ceaf4ec5c82f8aab416b6e12e3799907aa9/MLAC-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bae5d033b4a23147ea384db00fdf3f3d37d57031fefaa4583000389312509b88",
          "md5": "1a39d114abd3a06986f6628707e52220",
          "sha256": "c976920afb979a37534a5e875847a7126224fb775dda24cb0acc9469a59bf20a"
        },
        "downloads": -1,
        "filename": "MLAC-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a39d114abd3a06986f6628707e52220",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10566,
        "upload_time": "2021-09-03T11:46:00",
        "upload_time_iso_8601": "2021-09-03T11:46:00.686170Z",
        "url": "https://files.pythonhosted.org/packages/ba/e5/d033b4a23147ea384db00fdf3f3d37d57031fefaa4583000389312509b88/MLAC-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad83068c4fdcd3e0a34930c96bd276867c7d509a01417bb7d800d8802bc3f5cf",
          "md5": "37fd4125c18890ef4deb46588fe59840",
          "sha256": "b020724007adc1407d87b1f5cd9c96125692d2cb72b3498795afcd8fc52d604c"
        },
        "downloads": -1,
        "filename": "MLAC-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "37fd4125c18890ef4deb46588fe59840",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9444,
        "upload_time": "2021-09-03T11:46:01",
        "upload_time_iso_8601": "2021-09-03T11:46:01.836876Z",
        "url": "https://files.pythonhosted.org/packages/ad/83/068c4fdcd3e0a34930c96bd276867c7d509a01417bb7d800d8802bc3f5cf/MLAC-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bae5d033b4a23147ea384db00fdf3f3d37d57031fefaa4583000389312509b88",
        "md5": "1a39d114abd3a06986f6628707e52220",
        "sha256": "c976920afb979a37534a5e875847a7126224fb775dda24cb0acc9469a59bf20a"
      },
      "downloads": -1,
      "filename": "MLAC-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1a39d114abd3a06986f6628707e52220",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10566,
      "upload_time": "2021-09-03T11:46:00",
      "upload_time_iso_8601": "2021-09-03T11:46:00.686170Z",
      "url": "https://files.pythonhosted.org/packages/ba/e5/d033b4a23147ea384db00fdf3f3d37d57031fefaa4583000389312509b88/MLAC-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad83068c4fdcd3e0a34930c96bd276867c7d509a01417bb7d800d8802bc3f5cf",
        "md5": "37fd4125c18890ef4deb46588fe59840",
        "sha256": "b020724007adc1407d87b1f5cd9c96125692d2cb72b3498795afcd8fc52d604c"
      },
      "downloads": -1,
      "filename": "MLAC-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "37fd4125c18890ef4deb46588fe59840",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9444,
      "upload_time": "2021-09-03T11:46:01",
      "upload_time_iso_8601": "2021-09-03T11:46:01.836876Z",
      "url": "https://files.pythonhosted.org/packages/ad/83/068c4fdcd3e0a34930c96bd276867c7d509a01417bb7d800d8802bc3f5cf/MLAC-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}