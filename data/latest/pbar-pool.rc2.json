{
  "info": {
    "author": "Sid Black",
    "author_email": "sdtblck@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pbar-pool\n\nA straightforward, dependency free way to update multiple progress bars with python's multiprocessing library. \n\nSpecifically designed to work with multiprocessing.Pool - for which I found all other available solutions to be either overcomplicated, or completely broken.\n\n## Installation:\n```bash\npip install pbar-pool\n```\n\n## Usage:\n\n```python\nfrom multiprocessing import Pool, cpu_count\nfrom pbar_pool import PbarPool, Pbar\nimport time, random\n\n\ndef fn(x):\n    for _ in Pbar(x, manager=pbars, name=f'Process {pbars.id()}', color=(255, 0, 0)):\n        time.sleep(random.randint(0, 3))\n\n\nto_process = [list(range(10)) for _ in range(100)]\npbars = PbarPool(width=100)\n\nwith Pool(processes=cpu_count(), initializer=pbars.initializer()) as p:\n    global_pbar = Pbar(p.imap_unordered(fn, to_process), manager=pbars, name='global', total=len(to_process))\n    for _ in global_pbar:\n        pass\n```\n--> \n```\nglobal: 56/100 ████████████████████████████████████████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ 56% 3.9156s/it 02:52 remaining\n Process 4: 5/10 ██████████████████████████████████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ 50% 1.4075s/it 00:07 remaining\n Process 2: 2/10 ████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ 20% 1.5064s/it 00:12 remaining\n Process 3: 0/10 ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ 0% \n Process 1: 1/10 ██████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ 10% 0.0003s/it 00:00 remaining\n```\n\nit's as simple as adding the `initializer=pbars.initializer()` option to your Pool object to give each Pool process access to the global progress bars pool.\n\nThen, in each process, wrap your iterator in a `Pbar()` object, passing in the global PbarPool object as the `manager` argument. \n\nYou can also add a global progress bar to track the progress of the outer function, as seen in the example above.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sdtblck/pbar-pool",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pbar-pool",
    "package_url": "https://pypi.org/project/pbar-pool/",
    "platform": "",
    "project_url": "https://pypi.org/project/pbar-pool/",
    "project_urls": {
      "Homepage": "https://github.com/sdtblck/pbar-pool"
    },
    "release_url": "https://pypi.org/project/pbar-pool/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A straightforward, dependency free way to update multiple progress bars with python's multiprocessing library.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10567011,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "debcd40db21273e1a7880211f9d5cbc0e753b8d7c0c9e4824f2ae4e8a7aaf7bb",
          "md5": "1929e5f3171cbbc2e22a195ec5a5385e",
          "sha256": "2e84af0cb7c64fa68ec3056d11df5ee41e81a57d4bb35a847abf33288c979cc2"
        },
        "downloads": -1,
        "filename": "pbar-pool-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1929e5f3171cbbc2e22a195ec5a5385e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3733,
        "upload_time": "2021-06-05T20:07:15",
        "upload_time_iso_8601": "2021-06-05T20:07:15.371598Z",
        "url": "https://files.pythonhosted.org/packages/de/bc/d40db21273e1a7880211f9d5cbc0e753b8d7c0c9e4824f2ae4e8a7aaf7bb/pbar-pool-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a0f691ecd7f293768774e6ee89604f0c65b70d835391a37ea04a95fcd4794a5",
          "md5": "52166c09a29aebdf3c71a922327878fd",
          "sha256": "74000e0ebf8152038b06e79ea49234df650eb281e0b92a77bb8f42544f71c201"
        },
        "downloads": -1,
        "filename": "pbar-pool-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "52166c09a29aebdf3c71a922327878fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4051,
        "upload_time": "2021-06-05T20:47:25",
        "upload_time_iso_8601": "2021-06-05T20:47:25.678866Z",
        "url": "https://files.pythonhosted.org/packages/9a/0f/691ecd7f293768774e6ee89604f0c65b70d835391a37ea04a95fcd4794a5/pbar-pool-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a0f691ecd7f293768774e6ee89604f0c65b70d835391a37ea04a95fcd4794a5",
        "md5": "52166c09a29aebdf3c71a922327878fd",
        "sha256": "74000e0ebf8152038b06e79ea49234df650eb281e0b92a77bb8f42544f71c201"
      },
      "downloads": -1,
      "filename": "pbar-pool-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "52166c09a29aebdf3c71a922327878fd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4051,
      "upload_time": "2021-06-05T20:47:25",
      "upload_time_iso_8601": "2021-06-05T20:47:25.678866Z",
      "url": "https://files.pythonhosted.org/packages/9a/0f/691ecd7f293768774e6ee89604f0c65b70d835391a37ea04a95fcd4794a5/pbar-pool-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}