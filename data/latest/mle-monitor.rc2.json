{
  "info": {
    "author": "Robert Tjarko Lange",
    "author_email": "robertlange0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Lightweight Experiment & Resource Monitoring 📺\n[![Pyversions](https://img.shields.io/pypi/pyversions/mle-monitor.svg?style=flat-square)](https://pypi.python.org/pypi/mle-monitor)\n[![PyPI version](https://badge.fury.io/py/mle-monitor.svg)](https://badge.fury.io/py/mle-monitor)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![codecov](https://codecov.io/gh/mle-infrastructure/mle-monitor/branch/main/graph/badge.svg?token=75FIYZG8BD)](https://codecov.io/gh/mle-infrastructure/mle-monitor)\n[![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/mle-infrastructure/mle-monitor/blob/main/examples/getting_started.ipynb)\n<a href=\"https://github.com/mle-infrastructure/mle-monitor/blob/main/docs/logo_transparent.png?raw=true\"><img src=\"https://github.com/mle-infrastructure/mle-monitor/blob/main/docs/logo_transparent.png?raw=true\" width=\"200\" align=\"right\" /></a>\n\n\"Did I already run this experiment before? How many resources are currently available on my cluster?\" If these are common questions you encounter during your daily life as a researcher, then `mle-monitor` is made for you. It provides a lightweight API for tracking your experiments using a pickle protocol database (e.g. for hyperparameter searches and/or multi-configuration/multi-seed runs). Furthermore, it comes with built-in resource monitoring on Slurm/Grid Engine clusters and local machines/servers.\n\n`mle-monitor` provides three core functionalities:\n\n- **`MLEProtocol`**: A composable protocol database API for ML experiments.\n- **`MLEResource`**: A tool for obtaining server/cluster usage statistics.\n- **`MLEDashboard`**: A dashboard visualizing resource usage & experiment protocol.\n\nTo get started I recommend checking out the [colab notebook](https://colab.research.google.com/github/mle-infrastructure/mle-monitor/blob/main/examples/getting_started.ipynb) and an [example workflow](https://github.com/mle-infrastructure/mle-monitor/blob/main/examples/run_infrastructure.py).\n\n<img src=\"https://github.com/mle-infrastructure/mle-monitor/blob/main/docs/monitor-promo-gif.gif?raw=true\" alt=\"drawing\" width=\"900\"/>\n\n## `MLEProtocol`: Keeping Track of Your Experiments 📝\n\n```python\nfrom mle_monitor import MLEProtocol\n\n# Load protocol database or create new one -> print summary\nprotocol_db = MLEProtocol(\"mle_protocol.db\", verbose=False)\nprotocol_db.summary(tail=10, verbose=True)\n\n# Draft data to store in protocol & add it to the protocol\nmeta_data = {\n    \"purpose\": \"Grid search\",  # Purpose of experiment\n    \"project_name\": \"MNIST\",  # Project name of experiment\n    \"experiment_type\": \"hyperparameter-search\",  # Type of experiment\n    \"experiment_dir\": \"experiments/logs\",  # Experiment directory\n    \"num_total_jobs\": 10,  # Number of total jobs to run\n    ...\n}\nnew_experiment_id = protocol_db.add(meta_data)\n\n# ... train your 10 (pseudo) networks/complete respective jobs\nfor i in range(10):\n    protocol_db.update_progress_bar(new_experiment_id)\n\n# Wrap up an experiment (store completion time, etc.)\nprotocol_db.complete(new_experiment_id)\n```\n\nThe meta data can contain the following keys:\n\n| Search Type           | Description | Default |\n|----------------------- | ----------- | --------------- |\n| `purpose`          |  Purpose of experiment  | `'None provided'` |\n| `project_name`        |  Project name of experiment  | `'default'` |\n| `exec_resource`    |  Resource jobs are run on | `'local'` |\n| `experiment_dir`  |  Experiment log storage directory   | `'experiments'` |\n| `experiment_type`     | Type of experiment to run | `'single'` |\n| `base_fname`     | Main code script to execute | `'main.py'` |\n| `config_fname`     | Config file path of experiment | `'base_config.yaml'` |\n| `num_seeds`     | Number of evaluations seeds | 1 |\n| `num_total_jobs`     | Number of total jobs to run | 1 |\n| `num_job_batches`     | Number of jobs in single batch | 1 |\n| `num_jobs_per_batch`     | Number of sequential job batches | 1 |\n| `time_per_job`     | Expected duration: days-hours-minutes | `'00:01:00'` |\n| `num_cpus`     | Number of CPUs used in job | 1 |\n| `num_gpus`     | Number of GPUs used in job | 0 |\n\nAdditionally you can synchronize the protocol with a Google Cloud Storage (GCS) bucket by providing `cloud_settings`. In this case also the results stored in `experiment_dir` will be uploaded to the GCS bucket, when you call `protocol.complete()`.\n\n\n```python\n# Define GCS settings - requires 'GOOGLE_APPLICATION_CREDENTIALS' env var.\ncloud_settings = {\n    \"project_name\": \"mle-toolbox\",  # GCP project name\n    \"bucket_name\": \"mle-protocol\",  # GCS bucket name\n    \"use_protocol_sync\": True,  # Whether to sync the protocol to GCS\n    \"use_results_storage\": True,  # Whether to sync experiment_dir to GCS\n}\nprotocol_db = MLEProtocol(\"mle_protocol.db\", cloud_settings, verbose=True)\n```\n\n## The `MLEResource`: Keeping Track of Your Resources 📉\n\n#### On Your Local Machine\n```python\nfrom mle_monitor import MLEResource\n\n# Instantiate local resource and get usage data\nresource = MLEResource(resource_name=\"local\")\nresource_data = resource.monitor()\n```\n\n#### On a Slurm Cluster\n\n```python\nresource = MLEResource(\n    resource_name=\"slurm-cluster\",\n    monitor_config={\"partitions\": [\"<partition-1>\", \"<partition-2>\"]},\n)\n```\n\n#### On a Grid Engine Cluster\n\n```python\nresource = MLEResource(\n    resource_name=\"sge-cluster\",\n    monitor_config={\"queues\": [\"<queue-1>\", \"<queue-2>\"]}\n)\n```\n\n## The `MLEDashboard`: Dashboard Visualization 🎞️\n\n```python\nfrom mle_monitor import MLEDashboard\n\n# Instantiate dashboard with protocol and resource\ndashboard = MLEDashboard(protocol, resource)\n\n# Get a static snapshot of the protocol & resource utilisation printed in console\ndashboard.snapshot()\n\n# Run monitoring in while loop - dashboard\ndashboard.live()\n```\n\n## Installation ⏳\n\nA PyPI installation is available via:\n\n```\npip install mle-monitor\n```\n\nIf you want to get the most recent commit, please install directly from the repository:\n\n```\npip install git+https://github.com/mle-infrastructure/mle-monitor.git@main\n```\n\n### Citing the MLE-Infrastructure ✏️\n\nIf you use `mle-monitor` in your research, please cite it as follows:\n\n```\n@software{mle_infrastructure2021github,\n  author = {Robert Tjarko Lange},\n  title = {{MLE-Infrastructure}: A Set of Lightweight Tools for Distributed Machine Learning Experimentation},\n  url = {http://github.com/mle-infrastructure},\n  year = {2021},\n}\n```\n\n## Development 👷\n\nYou can run the test suite via `python -m pytest -vv tests/`. If you find a bug or are missing your favourite feature, feel free to create an issue and/or start [contributing](CONTRIBUTING.md) 🤗.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/mle-infrastructure/mle-monitor/archive/v0.0.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mle-infrastructure/mle-monitor",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mle-monitor",
    "package_url": "https://pypi.org/project/mle-monitor/",
    "platform": "any",
    "project_url": "https://pypi.org/project/mle-monitor/",
    "project_urls": {
      "Download": "https://github.com/mle-infrastructure/mle-monitor/archive/v0.0.2.tar.gz",
      "Homepage": "https://github.com/mle-infrastructure/mle-monitor"
    },
    "release_url": "https://pypi.org/project/mle-monitor/0.0.2/",
    "requires_dist": [
      "pyyaml",
      "commentjson",
      "dotmap",
      "numpy",
      "pandas",
      "rich",
      "pickledb",
      "plotext (==4.0.0)",
      "Pillow",
      "mle-logging ; extra == 'examples'",
      "mle-hyperopt ; extra == 'examples'",
      "psutil ; extra == 'full'",
      "gputil ; extra == 'full'",
      "google-cloud-storage ; extra == 'full'",
      "GitPython ; extra == 'full'"
    ],
    "requires_python": ">=3.6",
    "summary": "Machine Learning Experiment Resource Monitoring",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17207747,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9f80d0b1656e2ca00e1d2982944d54d4d2afe418028170dee7053de530e0d01",
          "md5": "fc728c7ce5d7c99807b03bc17af7ee64",
          "sha256": "44e26d8634b1c949615ba893ab21c1175d85175c7089e6ed926961e67636840f"
        },
        "downloads": -1,
        "filename": "mle_monitor-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc728c7ce5d7c99807b03bc17af7ee64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34850,
        "upload_time": "2021-12-09T15:01:33",
        "upload_time_iso_8601": "2021-12-09T15:01:33.770892Z",
        "url": "https://files.pythonhosted.org/packages/f9/f8/0d0b1656e2ca00e1d2982944d54d4d2afe418028170dee7053de530e0d01/mle_monitor-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "101c10a68d46cd1413db815fab19debf15dd8d752e6d038b4c18121c0d944279",
          "md5": "76fbd06a2a0ade9c3aa09e4c78aed601",
          "sha256": "d8750475182ac241f50fce179c447bc3fae4a12972ebd165bdebd56bb75db089"
        },
        "downloads": -1,
        "filename": "mle_monitor-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "76fbd06a2a0ade9c3aa09e4c78aed601",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29271,
        "upload_time": "2021-12-09T15:01:35",
        "upload_time_iso_8601": "2021-12-09T15:01:35.372642Z",
        "url": "https://files.pythonhosted.org/packages/10/1c/10a68d46cd1413db815fab19debf15dd8d752e6d038b4c18121c0d944279/mle_monitor-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4121f941fd419f405dcbecbfe89adfe780cd3df69d6bba3baf746373940f0b93",
          "md5": "5fbfbef18cfbec8d84aa1472aebc45ee",
          "sha256": "3b7f907d42730a9b5f191bba5b6c51fb552d20d4d0a40d38cee64a8827a91d11"
        },
        "downloads": -1,
        "filename": "mle_monitor-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fbfbef18cfbec8d84aa1472aebc45ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35469,
        "upload_time": "2023-03-08T14:24:44",
        "upload_time_iso_8601": "2023-03-08T14:24:44.443457Z",
        "url": "https://files.pythonhosted.org/packages/41/21/f941fd419f405dcbecbfe89adfe780cd3df69d6bba3baf746373940f0b93/mle_monitor-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74b6f52c7eb9194633f093e08c4ac449b7804c2294aaf222e182ce1923072d4b",
          "md5": "dbd570708250c80089c004d94306f118",
          "sha256": "95090337f1cdade121e0d4de7413c1b21aae91b916ce1de896c612cf1cafc9ed"
        },
        "downloads": -1,
        "filename": "mle_monitor-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dbd570708250c80089c004d94306f118",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30119,
        "upload_time": "2023-03-08T14:24:46",
        "upload_time_iso_8601": "2023-03-08T14:24:46.615754Z",
        "url": "https://files.pythonhosted.org/packages/74/b6/f52c7eb9194633f093e08c4ac449b7804c2294aaf222e182ce1923072d4b/mle_monitor-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4121f941fd419f405dcbecbfe89adfe780cd3df69d6bba3baf746373940f0b93",
        "md5": "5fbfbef18cfbec8d84aa1472aebc45ee",
        "sha256": "3b7f907d42730a9b5f191bba5b6c51fb552d20d4d0a40d38cee64a8827a91d11"
      },
      "downloads": -1,
      "filename": "mle_monitor-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5fbfbef18cfbec8d84aa1472aebc45ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 35469,
      "upload_time": "2023-03-08T14:24:44",
      "upload_time_iso_8601": "2023-03-08T14:24:44.443457Z",
      "url": "https://files.pythonhosted.org/packages/41/21/f941fd419f405dcbecbfe89adfe780cd3df69d6bba3baf746373940f0b93/mle_monitor-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74b6f52c7eb9194633f093e08c4ac449b7804c2294aaf222e182ce1923072d4b",
        "md5": "dbd570708250c80089c004d94306f118",
        "sha256": "95090337f1cdade121e0d4de7413c1b21aae91b916ce1de896c612cf1cafc9ed"
      },
      "downloads": -1,
      "filename": "mle_monitor-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "dbd570708250c80089c004d94306f118",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 30119,
      "upload_time": "2023-03-08T14:24:46",
      "upload_time_iso_8601": "2023-03-08T14:24:46.615754Z",
      "url": "https://files.pythonhosted.org/packages/74/b6/f52c7eb9194633f093e08c4ac449b7804c2294aaf222e182ce1923072d4b/mle_monitor-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}