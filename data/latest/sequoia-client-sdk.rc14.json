{
  "info": {
    "author": "Piksel",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": ".. image:: https://pikselgroup.com/broadcast/wp-content/uploads/sites/3/2017/09/P-P.png\n    :target: https://piksel.com/product/piksel-palette/\n    :align: center\n    :alt: Piksel Palette\n\n#########################\nPython Sequoia Client SDK\n#########################\nA Python Client SDK for interacting with client services.\n\nThe central idea is that Client SDK allows python application code to communicate with the `Piksel Palette`_ RESTful RESTful services.\nUsers can also search, filter and select their response collections.\n\n.. _Piksel Palette: http://developer.pikselpalette.com/\n\n************\nInstallation\n************\n\n.. code-block:: bash\n\n    pip install sequoia-client-sdk\n\n\n*****\nUsage\n*****\n\n\nCreating a SequoiaClient\n========================\n\nTo create the client it is necessary to provide the url for the service ``registry`` and named arguments specifying the\ncredentials for the auth_type being used. If no auth_type is specified, then the default CLIENT_GRANT is used:\n\n    .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        grant_client_id=\"clientId\",\n                        grant_client_secret=\"clientSecret\")\n\n\nAuthentication types\n====================\n\nWhen creating the client, authentication type can be specified using the parameter ``auth_type``:\n\n    .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        auth_type=AuthType.CLIENT_GRANT,\n                        grant_client_id=\"clientId\",\n                        grant_client_secret=\"clientSecret\")\n\n\nThe Sequoia RESTful services have an OAuth token-based authorisation model, meaning that the Client SDK must first\nacquire a time-limited access token before making further requests. CLIENT_GRANT or BYO_TOKEN types should be used.\n\nIt is also possible to connect to the client via a proxy using two-way TLS authentication. In this case, MUTUAL\nauth_type should be used.\n\n\nThere are four authentication types:\n\nCLIENT_GRANT type\n-----------------\n\nThis is the default type. With CLIENT_GRANT mode ``grant_client_id`` and ``grant_client_secret`` parameters are\nused to get an access token. The access token is refreshed automatically when expired. Optionally, ``byo_token``\nparameter can be provided when instantiating the client, and will be used until it is expired.\nThen the access token is refreshed automatically.\n\n    .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        auth_type=AuthType.CLIENT_GRANT,\n                        grant_client_id=\"clientId\",\n                        grant_client_secret=\"clientSecret\")\n\n\nBYO_TOKEN type\n--------------\n\nWith this method ``byo_token`` is required. That access token will be used to authenticate requests. The access token will\nbe used along the client life and won't be refreshed.\n\n\nNO_AUTH type\n------------\n\nMode used when no authentication is required.\n\n\nMUTUAL type\n------------\n\nMode used when mutual TLS authentication is required. Paths to local client certificate, client key and a server\ncertificate files must be provided in the client_cert, client_key and server_cert arguments respectively.\n\n    .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        auth_type=AuthType.MUTUAL,\n                        client_cert=\"/certs/client_cert.pem\",\n                        client_key=\"/certs/client_key.pem\",\n                        server_cert=\"/certs/server_cert.pem\",\n                        ...\n\n\nContent Type\n====================\n\nBy default the client sets \"Content-Type\" and \"Accept' header values of http requests to  \"application/vnd.piksel+json\".\nA different content type for these headers can be specified in the content_type parameter when creating a client.\n\n .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        auth_type=AuthType.MUTUAL,\n                        client_cert=\"/certs/client_cert.pem\",\n                        client_key=\"/certs/client_key.pem\",\n                        server_cert=\"/certs/server_cert.pem\",\n                        content_type=\"application/json\"\n                        )\n\n\nCreating an endpoint\n====================\n\nAn endpoint defines the resource on which to perform the operations.\n\n    .. code-block:: python\n\n        profile_endpoint = client.workflow.profiles\n        content_endpoint = client.metadata.contents\n\n\nAPI methods\n===========\n\nRead\n----\n\nRetrieves one resource given its reference and owner and returns the response retrieved.\n\n    .. code-block:: python\n\n        endpoint.read(owner, ref)\n\n\nBrowse\n------\n\nRetrieves the list of resources that matches with the criteria and returns the response.\n\n    .. code-block:: python\n\n        endpoint.browse(owner, criteria)\n\nStore\n-----\n\nCreates one or more resources and returns the response retrieved.\n\n    .. code-block:: python\n\n        endpoint.store(owner, json)\n\n\nCriteria API for Requesting Data\n================================\n\nThe SDK supports a fluent criteria API to abstract client code from\nthe details of the Sequoia query syntax.\nThis API allows to provide filters to retrieve the queried data and a way to request for related resources and its fields:\n\nCriterion\n---------\n\nThe way to provide the filter to get specific data is by using the criterion this way.\n\n    .. code-block:: python\n\n        endpoint.browse(\"testmock\",\n            Criteria().add_criterion(StringExpressionFactory.field(\"contentRef\").equal_to(\"testmock:sampleContent\"))\n        )\n\nThis alternative way is also supported:\n\n    .. code-block:: python\n\n        endpoint.browse(\"testmock\",\n            Criteria().add(criterion=StringExpressionFactory.field(\"contentRef\").equal_to(\"testmock:sampleContent\"))\n        )\n\nThe following filtering criteria are supported:\n\nequalTo\n~~~~~~~\n    .. code-block:: python\n\n        StringExpressionFactory.field(\"engine\").equal_to(\"diesel\")\n\nWill generate the criteria expression equivalent to: field=diesel (withEngine=diesel)\n\nInclusion of related documents\n------------------------------\n\nThe SDK support inclusion of related documents up to 1 level (direct relationships).\n\nBoth, direct and indirect relationships, are allowed. In each case resource's *reference* are needed to perform the mapping.\n\n    .. code-block:: python\n\n        Criteria().add_inclusion(Inclusion.resource('assets'))\n\nThis alternative way is also supported:\n\n    .. code-block:: python\n\n        Criteria().add(inclusion=Inclusion.resource('assets'))\n\nSelecting fields\n~~~~~~~~~~~~~~~~\n\nThe SDK allows to specify which fields will be present in the response, discarding the rest of them.\n\nFor now it can be used only for Inclusions\n\n    .. code-block:: python\n\n        Criteria().add(inclusion=Inclusion.resource('assets').fields('name','ref'))\n\n\n\nPaginating results\n==================\n\nIterator\n--------\n\nBrowse responses can be paginated. To paginate results, browse response has to be used as an iterator.\n\n    .. code-block:: python\n\n        for response in endpoint.browse('testmock'):\n            resources = response.resources\n\nNot iterator\n------------\n\nIf browse function is not used as an iterator, only first page is retrieved. i.e:\n\n    .. code-block:: python\n\n        response = endpoint.browse('testmock')\n        resources_in_page_1 = response.resources\n\n\nWith continue\n-------------\n\nSequoia services allow to paginate using the parameter `continue`, which will return the link to get the following page in the `meta` of the response.\nThe `browse` can be call repeatedly while there are pages to be read.\nOptionally, you can set the number of items per page.\n\n    .. code-block:: python\n\n        for response in endpoint.browse('testmock', query_string='continue=true&perPage=2'):\n            resources = response.resources\n\n\nPaginating linked resources\n===========================\n\nInclusion\n---------\n\nWhen doing an inclusion, service returns a list of linked resources. Those resources can be paginated. Let's assume a browse of contents is performed with assets resource as an inclusion. To perform pagination:\n\n    .. code-block:: python\n\n        for linked_assets in endpoint.browse('testmock').linked('assets'):\n            for linked_asset in linked_assets:\n                asset_name = linked_asset['name']\n\nIf linked response is not used as an iterator, only first page of linked resources is retrieved:\n\n    .. code-block:: python\n\n        linked_assets =  endpoint.browse('testmock').linked('assets')\n        for linked_asset in linked_assets.resources:\n            asset_name = linked_asset['name']\n\n\n\nRetrying requests\n=================\nWhen a request is returning a retrievable status code, a retry strategy can be configured with ``backoff_strategy``. By default ``backoff_strategy`` is\n\n  .. code-block:: python\n\n   {'wait_gen': backoff.constant, 'interval': 0, 'max_tries': 10}\n\nWe can set a different backoff strategy.\n\n    .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        grant_client_id=\"clientId\",\n                        grant_client_secret=\"clientSecret\",\n                        backoff_strategy={'wait_gen': backoff.expo, 'max_tries': 5, 'max_time': 300}\n                        )\n\nHere an exponential strategy will be used, set in the constructor.\n\nFor a more fine grain customization the retry policy can also be set for specific requests by passing the parameter\nat method level. This is valid for `read`, `browse`, `get` and `request` methods.\nThe backoff strategy configured in the constructor will be used for all the other queries in which another backoff\nstrategy is not given.\nHere you can see an example:\n\n    .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        grant_client_id=\"clientId\",\n                        grant_client_secret=\"clientSecret\",\n                        backoff_strategy={'wait_gen': backoff.expo, 'max_tries': 5, 'max_time': 300}\n                        )\n        assets_endpoint = client.metadata.contents\n        response1 = assets_endpoint.browse(\n            self.owner,\n            criteria.Criteria()\n                .add_criterion(criteria.StringExpressionFactory.field('ref').equal_to('test:c0007'))\n                .add_inclusion(criteria.Inclusion.resource('assets')),\n            backoff_strategy={'wait_gen': backoff.constant, 'interval': 0, 'max_tries': 20}\n        )\n        response2 = assets_endpoint.browse(\n            self.owner,\n            criteria.Criteria()\n                .add_criterion(criteria.StringExpressionFactory.field('ref').equal_to('test:c02'))\n                .add_inclusion(criteria.Inclusion.resource('categories'))\n        )\n\n\nFor that example, the first browse will retry the query up to 20 times while the second browse will do up to 5\nor until the the max time is reached.\n\n\nRetry when status code\n----------------------\n\nYou can also provide a number of HTTP status codes to perform the retry of the query, this is, when the query you are\nperforming returns one of the status codes you've specified, the query is automatically retried.\nThe key word you have to use for this is `retry_http_status_codes` within the backoff_strategy dictionary.\n\nFor instance:\n\n    .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        grant_client_id=\"clientId\",\n                        grant_client_secret=\"clientSecret\",\n                        backoff_strategy={'wait_gen': backoff.expo, 'max_tries': 5, 'max_time': 300,\n                                          'retry_http_status_codes': [404, 409]}\n                        )\n\n\nWhen `max_time` is set to None or not passed, a default value is automatically set to avoid possible undesired behaviour\nsuch as infinite loops. The default value is set to 120 seconds.\n\nFor more info about backoff strategies https://github.com/litl/backoff\n\nRetry when empty result\n-----------------------\n\nYou can also set up the retries policy for the case in that the resources you are querying for are missing in the\nresponse. This is useful when you are quite sure the data you are querying will eventually exist in the service even\nthough it doesn't exist yet.\n\nThe way to configure this is by using the parameter `retry_when_empty_result` in the method you use to query the\nservice, this is valid for `read`, `browse`, `get` and `request` methods.\n\nThe parameter `retry_when_empty_result` accepts either a **boolean value** to specify all resources are expected,\neither they are the main resources or the linked ones, or a **dictionary** in which you can explicitly specify the\ntype of resources you are expecting to have in the response.\nIn cases these resources are missing the query will be retried.\n\nLet's see an example:\n\n    .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        grant_client_id=\"clientId\",\n                        grant_client_secret=\"clientSecret\",\n                        backoff_strategy={\n                            'retry_when_empty_result': True\n                            }\n                        )\n        assets_endpoint = client.metadata.contents\n        response = assets_endpoint.browse(\n            self.owner,\n            criteria.Criteria()\n                .add_criterion(criteria.StringExpressionFactory.field('ref').equal_to('test:c0007'))\n                .add_inclusion(criteria.Inclusion.resource('categories'))\n                .add_inclusion(criteria.Inclusion.resource('assets')),\n            retry_when_empty_result=True\n        )\n\nThis way you are asking to retry the query when the response has no data for the main resource and for the inclusions\nyou are querying for.\n\nThis is, if your query look like `https://metadata-sandbox.sequoia.piksel.com/data/contents?include=assets,categories&owner=test&withRef=test:c0007`\nthe query will be retried until the content test:c0007 is returned and it has at least one asset and\none category in the response too. Or the retries reach the limit.\n\nA finer configuration using a dictionary is allowed so you can specify which resources have to be checked this way:\n\n    .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        grant_client_id=\"clientId\",\n                        grant_client_secret=\"clientSecret\"\n                        )\n        assets_endpoint = client.metadata.contents\n        response = assets_endpoint.browse(\n            self.owner,\n            criteria.Criteria()\n                .add_criterion(criteria.StringExpressionFactory.field('ref').equal_to('test:c0007'))\n                .add_inclusion(criteria.Inclusion.resource('categories'))\n                .add_inclusion(criteria.Inclusion.resource('assets')),\n            retry_when_empty_result={\n                                'contents': True,\n                                'assets': False,\n                                'categories': True\n                            }\n        )\n\nIn that example both resources contents and categories are checked to be returned, but not assets.\n\nIn case the limit of retries is reached and that condition is not fulfilled the latest response is returned.\nBear in mind that the response can very likely have a status code of 200 and a body with data.\n\nRemember, as specified above a `max_time` is automatically set even though it is not given.\n\nCorrelation ID\n==============\nEvery request to Sequoia RESTful services is added with a unique correlation id in the headers.\n\n .. code-block:: python\n\n        -- request headers --\n            ...\n            x-correlation-id: f0fca55f3da85..6336cb20fda36\n            ...\n\nThe SDK allows to set a correlation id at the client to be added to all the subsequent requests.\n\n .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        ...\n                        correlation_id=\"custom_correlation_id_1234\",\n                        ...\n                        )\n\n        endpoint.browse(owner, criteria)\n\n         -- request headers --\n            ...\n            x-correlation-id: custom_correlation_id_1234\n            ...\n\nIt also allows to provide both an user and an application ids so each operation request will be set with\nan unique generated correlation id having these values as prefix.\nThis correlation id will be shared by all related requests derived by that operation: browse, store, etc\n(e.g. the subsequents paging requests in a browse operation).\n\nBoth parameters `user_id` and `application_id` has to be provided, providing just one\nyou won't have a prefix in the correlation id.\n\n .. code-block:: python\n\n        client = Client(\"https://registry-sandbox.sequoia.piksel.com/services/testmock\",\n                        ...\n                        user_id=\"user123\",\n                        application_id=\"app101\",\n                        ...\n                        )\n\n        endpoint.browse(owner, criteria)\n\n         -- request headers --\n            ...\n            x-correlation-id: user123/app101/cbd05bd7-3099-4dcb-aeff-806ccec3292a\n            ...\n\n        endpoint.browse(owner, criteria)\n\n         -- request headers --\n            ...\n            x-correlation-id: user123/app101/9becd6c7-8ef0-44c4-a240-6c02c583957f\n            ...\n\nThe parameter `correlation_id` has precedence over `user_id` and `application_id`.\n\n\n***********\nDevelopment\n***********\n\nIt has been tested for Python 3.5 and 3.6\n\nYou can use the included command line tool `make <make>`_ to work with this project\n\nPreparing environment\n=====================\n\nCreate new virtualenv\n---------------------\n\nIt's encouraging to create a new virtual environment and install all the dependencies in it.\nYou can use these commands:\n\n.. code-block:: python\n\n    mkdir -p ~/.virtualenvs\n    virtualenv -p python3.6 ~/.virtualenvs/sequoia-python-client-sdk\n    workon sequoia-python-client-sdk\n    pip install -r requirements.txt\n    pip install -r requirements_test.txt\n\n\n\nTesting\n=======\n\nThere are two different ways of running the tests.\n\nRun tests on the current environment\n------------------------------------\n\nUsing ``pytest`` option will run all the unit tests over your environment.\n\n.. code-block:: python\n\n    make test\n\nRun tests on every compatible python version\n--------------------------------------------\n\nWhile using the option ``test`` will set up a virtual environment for the supported version of Python, i.e. 3.5 and 3.6 and will run all the tests on each of them.\n\n.. code-block:: python\n\n    make test-all\n\n\nIf you are using `pyenv` and found issues running this command because tox isn't able to create the virtualenvs, just add the python versions you have installed to the file `.python-version` like this:\n\n.. code-block:: bash\n\n    echo \"3.6.9\" >> .python-version\n    echo \"3.7.7\" >> .python-version\n    echo \"3.8.3\" >> .python-version\n\nLint\n----\n\nTo make sure the code fulfills the format run\n\n.. code-block:: python\n\n    make lint\n\n\n\n*******\nHistory\n*******\n\n1.0.0\n=====\n\n* First release.\n\n\n1.1.0 (2017-10-25)\n==================\n\n* Upgrade to Python 3.6\n\n\n1.2.0 (2019-03-06)\n==================\n\n* Libraries `urllib3` and `requests` upgraded to solve security issues:\n    - `CVE-2018-20060 <https://nvd.nist.gov/vuln/detail/CVE-2018-20060>`_\n    - `CVE-2018-18074 <https://nvd.nist.gov/vuln/detail/CVE-2018-18074>`_\n\n1.2.1 (2019-03-26)\n==================\n\n* Load yaml config file for testing in a safer way as specified in `PyYAML <https://github.com/yaml/pyyaml/wiki/PyYAML-yaml.load(input)-Deprecation>`_.\n\n2.0.0 (2019-06-06)\n==================\n\n* Removing python 2.7 compatibility.\n\n* Adding backoff to http requests. Configurable backoff from client creation.\n\n* Libraries `urllib3` and `requests` upgraded to solve security issues.\n\n2.1.0 (2019-09-30)\n==================\n\n* Modifying setup.cfg to allow different version formats (i.e development versions).\n* Paging with `continue` parameter.\n* When token is expired, it is updated automatically with CLIENT_GRANT auth type.\n\n2.1.1 (2019-10-02)\n==================\n* Token fetching not restarting backoff. Retries continuing its count instead of restarting it when there is a invalid token.\n\n2.2.0 (2020-08-13)\n==================\n* Allowing to provide `correlation_id` value when the client is created.\n* Caching tokens by `grant_client_id` and `token_url` to avoid calling identity in case credentials are cached.\n* PageBrowser keeping a response cache to avoid duplicated requests.\n* Bug fixed when paging main content. Query params should to be added to next url.\n* New `AuthType.MUTUAL`.\n\n3.0.0 (2020-10-06)\n==================\n* Removing `transaction_id` value when the client is created.\n* Allowing to provide `user_id` and `application_id` values as correlation id prefix.\n\n4.0.0 (2020-10-21)\n==================\n* Python 3.5 support removed.\n* Python 3.7 supported.\n* Python 3.8 supported.\n* Pagination with `continue` parameter over linked resources supported.\n* Requirements upgraded.\n\n4.0.1 (2020-12-22)\n==================\n* When token is expired, it is updated automatically with CLIENT_GRANT auth type,\n    the 401 response wasn't managed to do so, only the exception was.\n    Now the 401 response is treated like that.\n\n4.0.2 (2021-03-04)\n==================\n* Two new methods added to Criterion object so the fluent API is easier to use: `add_inclusion` and `add_criterion`.\n\n4.1.0 (2021-04-13)\n==================\n* New keyword `retry_http_status_codes` for the `backoff_strategy` to retry specific http status codes.\n* Prospector version upgraded to 1.3.1 so it works with python versions 3.9.4, 3.8.9, 3.7.10, 3.6.13.\n* Lint issues solved (OAuth2SessionTokenManagementWrapper request method signature).\n* GitHub Actions configured to run lint and unit tests.\n\n4.2.0 (2021-04-13)\n==================\n* Python 3.9 supported.\n* Requirements upgraded.\n* Drop the use of some libraries: jsonpickle, twine.\n* Tox is installed in the Makefile when used.\n\n4.3.0 (2021-04-27)\n==================\n* New parameter `retry_when_empty_result` for the `read`, `browse`, `get` and `request` methods to retry the query when resources are missing in the response.\n\n4.4.0 (2021-05-03)\n==================\n* The `backoff_strategy` can be specified in the `read`, `browse`, `get` and `request` methods so it can be different from the one passed in the constructor.\n* Set up the logger name to allow a better logging configuration\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/pikselpalette/sequoia-python-client-sdk",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pikselpalette/sequoia-python-client-sdk",
    "keywords": "python",
    "license": "Apache",
    "maintainer": "Piksel",
    "maintainer_email": "",
    "name": "sequoia-client-sdk",
    "package_url": "https://pypi.org/project/sequoia-client-sdk/",
    "platform": "",
    "project_url": "https://pypi.org/project/sequoia-client-sdk/",
    "project_urls": {
      "Download": "https://github.com/pikselpalette/sequoia-python-client-sdk",
      "Homepage": "https://github.com/pikselpalette/sequoia-python-client-sdk"
    },
    "release_url": "https://pypi.org/project/sequoia-client-sdk/4.4.0/",
    "requires_dist": [
      "backoff (==1.10.*)",
      "chardet (==4.0.*)",
      "requests (==2.25.*)",
      "requests-oauthlib (==1.3.*)",
      "urllib3 (==1.26.*)"
    ],
    "requires_python": "",
    "summary": "Sequoia Python Client SDK",
    "version": "4.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10239599,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb332c5ecc8103a39dd8e0d2ab5715829ef465bf850a6dcbdd8f487c793160ef",
          "md5": "6eb5ef4ed286ca4bb5d84216089e6507",
          "sha256": "9b5b7e62bcffb7b66997adc8eafbcd938ab28426c235fb10302b91dd4d9433ce"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6eb5ef4ed286ca4bb5d84216089e6507",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18163,
        "upload_time": "2019-02-27T17:55:32",
        "upload_time_iso_8601": "2019-02-27T17:55:32.113996Z",
        "url": "https://files.pythonhosted.org/packages/bb/33/2c5ecc8103a39dd8e0d2ab5715829ef465bf850a6dcbdd8f487c793160ef/sequoia_client_sdk-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dbfd633558f6ee2801088e9726fbe82bd03de809016beb8850d773e6047ea84",
          "md5": "f2e119290784822ea51d59d2720257b2",
          "sha256": "83486f1e2937be75ac988562a03374c2e1ad670989792e01a98aafd476e60a2a"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f2e119290784822ea51d59d2720257b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 148275,
        "upload_time": "2019-02-27T17:55:34",
        "upload_time_iso_8601": "2019-02-27T17:55:34.393470Z",
        "url": "https://files.pythonhosted.org/packages/8d/bf/d633558f6ee2801088e9726fbe82bd03de809016beb8850d773e6047ea84/sequoia-client-sdk-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb7a39522df6e666259211090c6e1378b1f3f06a2edcb91a26a18fb624208d01",
          "md5": "60cb83d49a0cfc7234c137a3e9d951e2",
          "sha256": "ef53b4ec586adebd38a537b69f30cf9684db1b7680e8d772ea18bcbfb97c25de"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60cb83d49a0cfc7234c137a3e9d951e2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18387,
        "upload_time": "2019-03-06T16:35:57",
        "upload_time_iso_8601": "2019-03-06T16:35:57.110937Z",
        "url": "https://files.pythonhosted.org/packages/eb/7a/39522df6e666259211090c6e1378b1f3f06a2edcb91a26a18fb624208d01/sequoia_client_sdk-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edf2d770ed064831787d628fe931df6229e3aca0f4d63870e4f5540621477930",
          "md5": "abc4d341397fbc1d0d0aa6d923b61014",
          "sha256": "2d7788ae59dde7b4cad355fcf268de7c2e7489ff6d4be862a5949ed105bdfa95"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "abc4d341397fbc1d0d0aa6d923b61014",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 148294,
        "upload_time": "2019-03-06T16:35:58",
        "upload_time_iso_8601": "2019-03-06T16:35:58.904816Z",
        "url": "https://files.pythonhosted.org/packages/ed/f2/d770ed064831787d628fe931df6229e3aca0f4d63870e4f5540621477930/sequoia-client-sdk-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46c5f52ccb742be67de917cbc5dd29cf73278eee93a5ce916f721a0ededfc165",
          "md5": "2d2823148ff45883b392b54dc034ea21",
          "sha256": "6bc1fa59e5b770c19ad919a40adee244c682452ddb83a5412789e6e9f215a276"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d2823148ff45883b392b54dc034ea21",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19014,
        "upload_time": "2019-06-06T08:33:25",
        "upload_time_iso_8601": "2019-06-06T08:33:25.769264Z",
        "url": "https://files.pythonhosted.org/packages/46/c5/f52ccb742be67de917cbc5dd29cf73278eee93a5ce916f721a0ededfc165/sequoia_client_sdk-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f0a71100d7383595c41517cc2b7b563c9ca749a032487dc74eac2c1f0c7101c",
          "md5": "30214a041070cbe728395a3a1ede9119",
          "sha256": "dc94b668990a0e222e6820df9877900d34bc1cdfad2fe4125e44a730eb131ffd"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "30214a041070cbe728395a3a1ede9119",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 148121,
        "upload_time": "2019-06-06T08:33:27",
        "upload_time_iso_8601": "2019-06-06T08:33:27.895693Z",
        "url": "https://files.pythonhosted.org/packages/8f/0a/71100d7383595c41517cc2b7b563c9ca749a032487dc74eac2c1f0c7101c/sequoia-client-sdk-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b62d7c4123d89b02a6c7c32df163dcd2badeed6c6dcc925f6c0e99a8b7769745",
          "md5": "5371deba5e21e62f7bb542a65dbd0582",
          "sha256": "5a0d5d892a5bd86b19abac174ce8e3166c48ac0dd9310afde85fe4ff6bd13879"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-2.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5371deba5e21e62f7bb542a65dbd0582",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20534,
        "upload_time": "2019-10-01T06:34:44",
        "upload_time_iso_8601": "2019-10-01T06:34:44.318313Z",
        "url": "https://files.pythonhosted.org/packages/b6/2d/7c4123d89b02a6c7c32df163dcd2badeed6c6dcc925f6c0e99a8b7769745/sequoia_client_sdk-2.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f5408e4f56aab789e6b6fc76009f3d1ed076514d0835cecc669051a5cbd8be9",
          "md5": "be9998c3028dc5af6900bca2ed61977b",
          "sha256": "6a265e47bc4cd3f35bb30e646a76952c4627799b6a7dc7469bb380f6d6995d3e"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "be9998c3028dc5af6900bca2ed61977b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 153358,
        "upload_time": "2019-10-01T06:34:46",
        "upload_time_iso_8601": "2019-10-01T06:34:46.647473Z",
        "url": "https://files.pythonhosted.org/packages/7f/54/08e4f56aab789e6b6fc76009f3d1ed076514d0835cecc669051a5cbd8be9/sequoia-client-sdk-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75ed70fcf8bfebba9b7602732f7b647c45b9433015b46e782341ebd4c5f49845",
          "md5": "2f441eb21cd640bf7a6a393dd2d3bd10",
          "sha256": "597addb5ec620955bdbb59bba1cfafd0745ac9cfb4ba4e617263f4ca11960ec3"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-2.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f441eb21cd640bf7a6a393dd2d3bd10",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20600,
        "upload_time": "2019-10-02T08:22:19",
        "upload_time_iso_8601": "2019-10-02T08:22:19.203294Z",
        "url": "https://files.pythonhosted.org/packages/75/ed/70fcf8bfebba9b7602732f7b647c45b9433015b46e782341ebd4c5f49845/sequoia_client_sdk-2.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "235312b8f5c3696b6fa4f7ce3eab214d320c6ce3c6288d1c9cde2fcd57d2ff32",
          "md5": "bc00cb20647cbb4cd09fdb07af542383",
          "sha256": "e98070de953c71140f674ae6fd9d630b84c94562ab90aa40aa84005ff7908b6d"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bc00cb20647cbb4cd09fdb07af542383",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 153521,
        "upload_time": "2019-10-02T08:22:21",
        "upload_time_iso_8601": "2019-10-02T08:22:21.168245Z",
        "url": "https://files.pythonhosted.org/packages/23/53/12b8f5c3696b6fa4f7ce3eab214d320c6ce3c6288d1c9cde2fcd57d2ff32/sequoia-client-sdk-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b41ed4eb7eb3cb1331df4d5ab803a1de834bb76c8cd91c7bb95177495f74d645",
          "md5": "4f8a39662da6b8af09a361cbd130faae",
          "sha256": "52461df2358a8402ff8db6120214df9bc098e16fc7d15257ded28022a32fdee6"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-2.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f8a39662da6b8af09a361cbd130faae",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21976,
        "upload_time": "2020-08-13T08:53:48",
        "upload_time_iso_8601": "2020-08-13T08:53:48.712082Z",
        "url": "https://files.pythonhosted.org/packages/b4/1e/d4eb7eb3cb1331df4d5ab803a1de834bb76c8cd91c7bb95177495f74d645/sequoia_client_sdk-2.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f428b824a96fbef1ead01271d76fd02b65c633411e3e7b3dd96a96b7833e0aed",
          "md5": "15ad7ba01cada46c761b5d105849f254",
          "sha256": "846c3da3d6f8c92dacfe4952f5ac8a32eb7d2479d94549c0feb5739647cdb2bf"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "15ad7ba01cada46c761b5d105849f254",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 161705,
        "upload_time": "2020-08-13T08:53:50",
        "upload_time_iso_8601": "2020-08-13T08:53:50.509795Z",
        "url": "https://files.pythonhosted.org/packages/f4/28/b824a96fbef1ead01271d76fd02b65c633411e3e7b3dd96a96b7833e0aed/sequoia-client-sdk-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "619907c6b9de25ed718c0ff51c44463bbbb57bec1f2e4a8bafa3e18666eb7805",
          "md5": "4d8daa79c7cf1a4b472fd2988238841f",
          "sha256": "21db1cf7a0df5ab720ec03a1ed7df26e443cc68e16fd2cefbacc76b7dce5eb94"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-3.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d8daa79c7cf1a4b472fd2988238841f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 22615,
        "upload_time": "2020-10-06T16:19:05",
        "upload_time_iso_8601": "2020-10-06T16:19:05.390713Z",
        "url": "https://files.pythonhosted.org/packages/61/99/07c6b9de25ed718c0ff51c44463bbbb57bec1f2e4a8bafa3e18666eb7805/sequoia_client_sdk-3.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "688e490d1fc8dbdcfcc5beebe557688ade7c99c892b6eb85cd38d5dcd3b5d640",
          "md5": "e0e6085fe88062faaadc1bcd7d7844d5",
          "sha256": "2ceabccf1d54ef8f86d521b5c8647c36a1911cc3cc56afe6455bb3a7a1428fa9"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e0e6085fe88062faaadc1bcd7d7844d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 160678,
        "upload_time": "2020-10-06T16:19:07",
        "upload_time_iso_8601": "2020-10-06T16:19:07.349257Z",
        "url": "https://files.pythonhosted.org/packages/68/8e/490d1fc8dbdcfcc5beebe557688ade7c99c892b6eb85cd38d5dcd3b5d640/sequoia-client-sdk-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35f4902a84c7b3ae4a0886688af21fe1496c7f8145e6de91683d67133dc48e19",
          "md5": "8add904d2d2471d82b2685b6e8bb125e",
          "sha256": "a318fa369df1c6515a65caadb0b60d462ee13ccbe48be8404baab532b641ba21"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-4.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8add904d2d2471d82b2685b6e8bb125e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23063,
        "upload_time": "2020-10-21T14:00:20",
        "upload_time_iso_8601": "2020-10-21T14:00:20.243799Z",
        "url": "https://files.pythonhosted.org/packages/35/f4/902a84c7b3ae4a0886688af21fe1496c7f8145e6de91683d67133dc48e19/sequoia_client_sdk-4.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "219aec5d5832f00523dd44404e582e532711660f97494f2fc150603837a6de2c",
          "md5": "a7ff49e0c217f82cd2bb9f26002ce6f9",
          "sha256": "0fd67205bc3afdcb48561ede8ff555a769ca0f304675c3a2acd6829f499a725d"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-4.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7ff49e0c217f82cd2bb9f26002ce6f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 173071,
        "upload_time": "2020-10-21T14:00:22",
        "upload_time_iso_8601": "2020-10-21T14:00:22.060478Z",
        "url": "https://files.pythonhosted.org/packages/21/9a/ec5d5832f00523dd44404e582e532711660f97494f2fc150603837a6de2c/sequoia-client-sdk-4.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d738a2114b6e24cdda2ccb72b8e9be7d3f587b4b56b082365d8036d90c6b3785",
          "md5": "c888b146368f566c587a4165ea0d0660",
          "sha256": "8bcfff3f946b1f2c551ad63bdc0741b718c6c7fbaaf8ad883bc08f2357ae8fbb"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-4.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c888b146368f566c587a4165ea0d0660",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23230,
        "upload_time": "2020-12-22T14:24:32",
        "upload_time_iso_8601": "2020-12-22T14:24:32.029450Z",
        "url": "https://files.pythonhosted.org/packages/d7/38/a2114b6e24cdda2ccb72b8e9be7d3f587b4b56b082365d8036d90c6b3785/sequoia_client_sdk-4.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8591678943dbdf406220f4a9550f1deb968a37a9f3e89ecd0befe8adf19a8d06",
          "md5": "b2c8051c0f882f601c160a7196ac0757",
          "sha256": "3ab648dcb83f76b2852012b306a1d73420e6870f155022dbab9470ead7a59df3"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-4.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b2c8051c0f882f601c160a7196ac0757",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 176758,
        "upload_time": "2020-12-22T14:24:33",
        "upload_time_iso_8601": "2020-12-22T14:24:33.942000Z",
        "url": "https://files.pythonhosted.org/packages/85/91/678943dbdf406220f4a9550f1deb968a37a9f3e89ecd0befe8adf19a8d06/sequoia-client-sdk-4.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b71148696cf6a37d26b1231024f86c690305d59ab3c90c8b361e17de319a4068",
          "md5": "20785b7ddc7e83391886543dd3957a86",
          "sha256": "8c63ea06da07fd5a19c6495374b1e644f8ca79b37d3efd622046b7bbb207b691"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-4.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20785b7ddc7e83391886543dd3957a86",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 23661,
        "upload_time": "2021-03-04T18:04:57",
        "upload_time_iso_8601": "2021-03-04T18:04:57.271762Z",
        "url": "https://files.pythonhosted.org/packages/b7/11/48696cf6a37d26b1231024f86c690305d59ab3c90c8b361e17de319a4068/sequoia_client_sdk-4.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f35eef6073bf67f06757ace73ac299193b9c570a96bae1e3db79fd3545dba0e0",
          "md5": "80610f072b826db1ddd8b93965599450",
          "sha256": "98f05287737e32dd86bab07d79a30480bbab19f16bab23811acd54223ea3371b"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-4.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "80610f072b826db1ddd8b93965599450",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 177642,
        "upload_time": "2021-03-04T18:04:59",
        "upload_time_iso_8601": "2021-03-04T18:04:59.203803Z",
        "url": "https://files.pythonhosted.org/packages/f3/5e/ef6073bf67f06757ace73ac299193b9c570a96bae1e3db79fd3545dba0e0/sequoia-client-sdk-4.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79c5c667431f2fdba794b43044a626d53ab345a0b3177dc5296353d195aa549f",
          "md5": "831295d40d8dc3b927a70f4521173d70",
          "sha256": "37f98ed711a9c56862b495c3f0e3d627246f108561d42b6772ced9a405f5913e"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-4.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "831295d40d8dc3b927a70f4521173d70",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24307,
        "upload_time": "2021-04-13T15:12:27",
        "upload_time_iso_8601": "2021-04-13T15:12:27.010868Z",
        "url": "https://files.pythonhosted.org/packages/79/c5/c667431f2fdba794b43044a626d53ab345a0b3177dc5296353d195aa549f/sequoia_client_sdk-4.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ea8d96da8f90277aefd1d1095b0d369581fcae9bf692037293ba6344bc021bc",
          "md5": "c83f97b7ce306831fb276cbe10bc992d",
          "sha256": "05410e26f7fb6a21476a8e0517a565ad5202028f2c43cb0f785f0e90ceb6e734"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-4.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c83f97b7ce306831fb276cbe10bc992d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 179508,
        "upload_time": "2021-04-13T15:12:29",
        "upload_time_iso_8601": "2021-04-13T15:12:29.232931Z",
        "url": "https://files.pythonhosted.org/packages/2e/a8/d96da8f90277aefd1d1095b0d369581fcae9bf692037293ba6344bc021bc/sequoia-client-sdk-4.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fa9f06bc5f6fea36c3687ca4dadc396d487b5bebe077668544fc0aec1825b18",
          "md5": "4e23966aed75b6da8fd4f9b7af406602",
          "sha256": "cdbb35be73a7f82c6829cc2285e325c1b65891278dc44160774850886b5d3822"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-4.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e23966aed75b6da8fd4f9b7af406602",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 24366,
        "upload_time": "2021-04-13T15:40:04",
        "upload_time_iso_8601": "2021-04-13T15:40:04.724995Z",
        "url": "https://files.pythonhosted.org/packages/9f/a9/f06bc5f6fea36c3687ca4dadc396d487b5bebe077668544fc0aec1825b18/sequoia_client_sdk-4.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1775acc632d7f11b2f3c4c699b82e38182de09647e1706304594b858ac3af4c5",
          "md5": "a91cd0d7cc050852b7a612ad968828c3",
          "sha256": "e4e8124a13187d99232204a116d01363df88db42023b16416e0323a7fc896bae"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-4.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a91cd0d7cc050852b7a612ad968828c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 179658,
        "upload_time": "2021-04-13T15:40:06",
        "upload_time_iso_8601": "2021-04-13T15:40:06.984892Z",
        "url": "https://files.pythonhosted.org/packages/17/75/acc632d7f11b2f3c4c699b82e38182de09647e1706304594b858ac3af4c5/sequoia-client-sdk-4.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3cde7b2a1666cbe1dd2a447b4d33fc52f2c5d49d85793f965168d83b6f87f64",
          "md5": "bfa385ce203e9d23116e6b7295ce8f7d",
          "sha256": "2175b4962991b2569b4ab51466ffc5189f4cc4a710b50bb2a6a348d752e0b0bc"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-4.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfa385ce203e9d23116e6b7295ce8f7d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25457,
        "upload_time": "2021-04-27T19:27:46",
        "upload_time_iso_8601": "2021-04-27T19:27:46.068233Z",
        "url": "https://files.pythonhosted.org/packages/c3/cd/e7b2a1666cbe1dd2a447b4d33fc52f2c5d49d85793f965168d83b6f87f64/sequoia_client_sdk-4.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d34f5a2d23c01077ef3e574ecaf3a117e64a66251b5df51f920def809ef17f9",
          "md5": "0d27bbb95f20299473cc2060ec56611a",
          "sha256": "b37d155c1ed5c9f2e90301ac5e47934800f97a6f99dcd131a0629c15d5030f63"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-4.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0d27bbb95f20299473cc2060ec56611a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 183321,
        "upload_time": "2021-04-27T19:27:47",
        "upload_time_iso_8601": "2021-04-27T19:27:47.624575Z",
        "url": "https://files.pythonhosted.org/packages/3d/34/f5a2d23c01077ef3e574ecaf3a117e64a66251b5df51f920def809ef17f9/sequoia-client-sdk-4.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7da92fa456e087ce7a9c825cbf9f03b7f66d767c0ff9246d8b600705dd036862",
          "md5": "ba1c8c77fb897ce997dd6e49771f49b3",
          "sha256": "a2da9e5bcfb371b8db5e1d05a51055c2549bfc7584108a22748854f4ae1db108"
        },
        "downloads": -1,
        "filename": "sequoia_client_sdk-4.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba1c8c77fb897ce997dd6e49771f49b3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26245,
        "upload_time": "2021-05-03T11:42:30",
        "upload_time_iso_8601": "2021-05-03T11:42:30.423155Z",
        "url": "https://files.pythonhosted.org/packages/7d/a9/2fa456e087ce7a9c825cbf9f03b7f66d767c0ff9246d8b600705dd036862/sequoia_client_sdk-4.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67457220a1e9cdf28c0c4fbcb49caf13c725fb20763da1355e8f88f701b8bec4",
          "md5": "8018781e450722cd0ba6980fb5974332",
          "sha256": "a4c2a9d7567429553426dfea6d7595b4f5452ce8ffbfaa0a3d29d1fbbad04bd1"
        },
        "downloads": -1,
        "filename": "sequoia-client-sdk-4.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8018781e450722cd0ba6980fb5974332",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 185323,
        "upload_time": "2021-05-03T11:42:32",
        "upload_time_iso_8601": "2021-05-03T11:42:32.435216Z",
        "url": "https://files.pythonhosted.org/packages/67/45/7220a1e9cdf28c0c4fbcb49caf13c725fb20763da1355e8f88f701b8bec4/sequoia-client-sdk-4.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7da92fa456e087ce7a9c825cbf9f03b7f66d767c0ff9246d8b600705dd036862",
        "md5": "ba1c8c77fb897ce997dd6e49771f49b3",
        "sha256": "a2da9e5bcfb371b8db5e1d05a51055c2549bfc7584108a22748854f4ae1db108"
      },
      "downloads": -1,
      "filename": "sequoia_client_sdk-4.4.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ba1c8c77fb897ce997dd6e49771f49b3",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 26245,
      "upload_time": "2021-05-03T11:42:30",
      "upload_time_iso_8601": "2021-05-03T11:42:30.423155Z",
      "url": "https://files.pythonhosted.org/packages/7d/a9/2fa456e087ce7a9c825cbf9f03b7f66d767c0ff9246d8b600705dd036862/sequoia_client_sdk-4.4.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67457220a1e9cdf28c0c4fbcb49caf13c725fb20763da1355e8f88f701b8bec4",
        "md5": "8018781e450722cd0ba6980fb5974332",
        "sha256": "a4c2a9d7567429553426dfea6d7595b4f5452ce8ffbfaa0a3d29d1fbbad04bd1"
      },
      "downloads": -1,
      "filename": "sequoia-client-sdk-4.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8018781e450722cd0ba6980fb5974332",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 185323,
      "upload_time": "2021-05-03T11:42:32",
      "upload_time_iso_8601": "2021-05-03T11:42:32.435216Z",
      "url": "https://files.pythonhosted.org/packages/67/45/7220a1e9cdf28c0c4fbcb49caf13c725fb20763da1355e8f88f701b8bec4/sequoia-client-sdk-4.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}