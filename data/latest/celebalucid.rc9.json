{
  "info": {
    "author": "Gergely Papp",
    "author_email": "gergopool@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CelebA & Lucid\n\n![cover_image](https://i.imgur.com/RVzTfhv.png)\n\nThis package is a quick access tool of a research project of Alfred Renyi Institute of Mathematics. In our project we use lucid visualizations to get a better understanding how transfer learning manipulates a neural network. As a baseline we took Clarity's InceptionV1 network trained on imagenet and we further trained the network on the CelebA dataset.\n\nIn our project we also revisit and rethink the comparison of activations and features.\n\n# Networks\n\nWe've trained numerous neural networks. At the first stage, we trained three: one learning 100 epochs with SGD optimizer, one learning 10 epochs with Adam and one learning 100 epochs with Adam. We reference these trainings later as **sgd, adam and adam_overfit**, while the baseline will be referenced as **imagenet**. Then, we took a permuation of some sampling parameters. We defined 3 different gradient noise (the order of batches the neural network is fed) and 3+1 networks. The 3 networks were initialized with 3 different, randomly sampled weights, while the +1 is the network which were pretrained on imagenet.\n\n| | GradNoise1 (gn1) | GradNoise2 (gn2) | GradNoise3 (gn3) |\n| --- | :---: | :---: | :---: |\n| **Imagenet (img)** | &#9745; | &#9745; | &#9745; |\n| **InitNoise1 (in1)** | &#9745; | &#9745; | &#9745; |\n| **InitNoise2 (in2)** | &#9745; | &#9745; | &#9745; |\n| **InitNoise3 (in3)** | &#9745; | &#9745; | &#9745; |\n\n\nDetails of the trainings:\n\n| Name | Epochs | Train loss | Train Acc | Val loss | Val acc |\n| --- | --- | --- | --- | --- | --- |\n| sgd  | 100 | 0.16 | 92.7% | 0.18 | 91.9% |\n| adam  | 10 | 0.16 | 92.9% | 0.18 | 91.9% |\n| adam_overfit  | 100 | 0.01 | 99.3% | 0.93 | 90.8% |\n| img-gn1 | 20 | 0.11 | 94.90% | 0.21 | 91.63% |\n| img-gn2 | 20 | 0.11 | 94.89% | 0.21 | 91.60% |\n| img-gn3 | 20 | 0.11 | 94.88% | 0.21 | 91.49% |\n| in1-gn1 | 20 | 0.17 | 92.33% | 0.18 | 91.70% |\n| in1-gn2 | 20 | 0.17 | 92.32% | 0.19 | 91.56% |\n| in1-gn3 | 20 | 0.17 | 92.29% | 0.19 | 91.53% |\n| in2-gn1 | 20 | 0.17 | 92.36% | 0.18 | 91.73% |\n| in2-gn2 | 20 | 0.17 | 92.35% | 0.19 | 91.60% |\n| in2-gn3 | 20 | 0.17 | 92.33% | 0.19 | 91.56% |\n| in3-gn1 | 20 | 0.17 | 92.32% | 0.18 | 91.69% |\n| in3-gn2 | 20 | 0.17 | 92.32% | 0.19 | 91.59% |\n| in3-gn3 | 20 | 0.17 | 92.32% | 0.19 | 91.60% |\n\n# Setup\n\n## Requirements\n\nPython 3.6+\n\n## Install\n\n```bash\npip install celebalucid\n```\n\n# Usage\n\n## Load\n\nFirst, load either of the networks as\n```python\nfrom celebalucid import load_model\n\n# Choose from \n# 'imagenet', 'sgd', 'adam', 'adam_overfit'\n# 'img-gn1', 'img-gn2', 'img-gn3'\n# 'in1-gn1', 'in1-gn2', 'in1-gn3'\n# 'in2-gn1', 'in2-gn2', 'in2-gn3'\n# 'in3-gn1', 'in3-gn2', 'in3-gn3'\nmodel = load_model('imagenet') \n```\n\n## Change weights\nIn order to avoid the redefinition of models and unnecessary memory usage, you can update the state dictionary of a model.\n```python\nmodel.switch_to('sgd') \n```\n\n\n\n## Layer information\n\nGet accessable layers as\n```python\nmodel.layer_info\n```\nCalling this you will see the list of available layers along with the available number of channels (neurons).\n```bash\nOut: [['conv2d0', 64],\n      ['conv2d1', 64],\n      ['conv2d2', 192],\n      ['mixed3a_1x1', 64],\n      ['mixed3a_3x3_bottleneck', 96],\n      ...]\n```\n\n## Lucid\n\nVisualize a neuron with lucid as\n\n```python\n# Default args: size=224, thresholds=[512], progress=False\nimg = model.lucid('mixed5a_5x5:7', progress=True)\nplt.imshow(img)\n```\n![result_image](https://i.imgur.com/PBBuG1r.png)\n\n## Weights\n\nYou can access the weights of a network as\n\n```python\n# Method 1\nweights = model.weights.mixed3a_3x3_bottleneck.w \nbias = model.weights.mixed3a_3x3_bottleneck.b\n\n# Method 2\nweights = model.weights['mixed3a_3x3_bottleneck'].w \nbias = model.weights['mixed3a_3x3_bottleneck'].b\n```\n\n## Activations\n\nIn order to see activations, you first need to download the test data (~300MB)\n\n```python\nfrom celebalucid import build_generator\n\n# The test data will be downloaded to this folder\nDOWNLOAD_DIR = 'res/images'\n\n# Choose dataset 'celeba' or 'imagenet'\nDATASET = 'imagenet'\n\n# This is a torch.utils.data.DataLoader object\n# If you already have the dataset downloaded\n# to this folder, it will skip the download\ngenerator = build_generator(DOWNLOAD_DIR, DATASET)\n```\n\nNow, utilize the data generator to load images from disk, feed the input with the neural network and then you're free to analyse the activations (aka. neurons.)\n\n```python\nfor x, y in generator:\n    model.stream(x)\n    # Now access neurons the same way as on weights\n    some_operations(model.neurons.conv2d0)\n```\n\n## CKA similarity\n\nThe code provides a centered kernel alignment (CKA) comparison between models. In each epoch, the script runs the models on `n_iters * batch_size` images and then calculates the CKA value for a given layer. It does the same for each epoch and it returns with the mean cka over the epochs.\n\nDefine your CKA analyser as\n\n```python\nfrom celebalucid import CKA\n\n# Args: working_dir, dataset, models_to_compare\n# Default kwargs: n_epochs=10, n_iters=64, batch_size=32\ncka = CKA('res/images', 'celeba', ['imagenet', 'sgd'])\n```\nThen run your comparison on a specific layer\n```python\n# Optional: set verbose=False for no progress bar\ncka('mixed4a_3x3') \n```\n```bash\nOut: 0.95517987\n```\n\nIf you want to choose models, instead of creating a new CKA object set new models in order to be GPU RAM efficient:\n\n```python\ncka.set_models(['imagenet', 'adam']) \n```\n\n# Weight manipulation\n\nYou have the possibility to override a network's weights with constant or another model's weights. \n\n```python\nimagenet = load_model('imagenet')\nsgd = load_model('sgd')\n\n# Change an entire layer to imagenet\nsgd.set_weights('mixed4a_3x3', imagenet)\n\n# Change a single neuron\nsgd.set_weights('mixed4a_3x3:0', imagenet)\n\n# Change to a constant\nsgd.set_weights('mixed4a_3x3', 0)\n```\nIt's good to know that by default both weights an biases change. If you know you need only one of these, you can save a bit of computation.\n```python\n# Default behaviour\nsgd.set_weights('mixed4a_3x3', 0, mode='both')\n\n# Change weights only\nsgd.set_weights('mixed4a_3x3', 0, mode='weight')\n\n# Change bias only\nsgd.set_weights('mixed4a_3x3', 0, mode='bias')\n```\n\n\n\n\n# Credits\n\n```bash\nhttps://github.com/tensorflow/lucid\nhttps://github.com/greentfrapp/lucent\n```\n# References\n```\n@inproceedings{pmlr-v97-kornblith19a,\n  title = {Similarity of Neural Network Representations Revisited},\n  author = {Kornblith, Simon and Norouzi, Mohammad and Lee, Honglak and Hinton, Geoffrey},\n  booktitle = {Proceedings of the 36th International Conference on Machine Learning},\n  pages = {3519--3529},\n  year = {2019},\n  volume = {97},\n  month = {09--15 Jun},\n  publisher = {PMLR}\n}\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/celebalucid/",
    "keywords": "",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "celebalucid",
    "package_url": "https://pypi.org/project/celebalucid/",
    "platform": "",
    "project_url": "https://pypi.org/project/celebalucid/",
    "project_urls": {
      "Homepage": "http://pypi.python.org/pypi/celebalucid/"
    },
    "release_url": "https://pypi.org/project/celebalucid/0.1.5.3/",
    "requires_dist": [
      "torch-lucent",
      "dotmap",
      "numpy",
      "tqdm",
      "opencv-python",
      "pandas"
    ],
    "requires_python": ">=3.6",
    "summary": "Analysing Clarity's InceptionV1 network after transfer learning on CelebA dataset.",
    "version": "0.1.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9116516,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3475f92fa1a781e5fb970e87229c1f185e867657ecfbf98c30efc7729e8db46a",
          "md5": "bb83262bfb91c9c0997d7fefe4d6be38",
          "sha256": "95e51d37062a4803337f2182c6ae2a556fcc297e47fd9e8489b1e78e5c4c52c4"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "bb83262bfb91c9c0997d7fefe4d6be38",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": ">=3.6",
        "size": 17968,
        "upload_time": "2020-12-08T07:05:54",
        "upload_time_iso_8601": "2020-12-08T07:05:54.168714Z",
        "url": "https://files.pythonhosted.org/packages/34/75/f92fa1a781e5fb970e87229c1f185e867657ecfbf98c30efc7729e8db46a/celebalucid-0.1.0-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a56cd7542e442d8d404e57c782fa27c7f765d944d662a04a45e983a0f07d415d",
          "md5": "4625cd6998046e396d9f5b24308d11e6",
          "sha256": "28f3bca93b317817d78b93680459ec489f6201fc04ebb4bb6d2ab83c876ec43c"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4625cd6998046e396d9f5b24308d11e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10248,
        "upload_time": "2020-12-08T07:05:52",
        "upload_time_iso_8601": "2020-12-08T07:05:52.832474Z",
        "url": "https://files.pythonhosted.org/packages/a5/6c/d7542e442d8d404e57c782fa27c7f765d944d662a04a45e983a0f07d415d/celebalucid-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1ffdf0a4b4a9c361bb64084a6997c76102e70663e6fc661ade24d838614faff",
          "md5": "7b9dce75fc1512270d8fa357ffb8eb50",
          "sha256": "91c62972132252d857ac712c8fd7f2d6608474d5dbee5523a4855b4221b34b73"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7b9dce75fc1512270d8fa357ffb8eb50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7169,
        "upload_time": "2020-12-08T07:05:55",
        "upload_time_iso_8601": "2020-12-08T07:05:55.181782Z",
        "url": "https://files.pythonhosted.org/packages/f1/ff/df0a4b4a9c361bb64084a6997c76102e70663e6fc661ade24d838614faff/celebalucid-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df8abce47a6315803f13766c86c6b8279c063d98bcdfa9f0e5ab7cab918a6baa",
          "md5": "e1da3a4a13be03edf286a2acf961be21",
          "sha256": "7270a7a99ad863d2b55e7ee67b54d2e9a4a114c4bca69572d90abf54507f323f"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1da3a4a13be03edf286a2acf961be21",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10119,
        "upload_time": "2020-12-08T08:05:53",
        "upload_time_iso_8601": "2020-12-08T08:05:53.571393Z",
        "url": "https://files.pythonhosted.org/packages/df/8a/bce47a6315803f13766c86c6b8279c063d98bcdfa9f0e5ab7cab918a6baa/celebalucid-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e186920ac3237a37a02f52adc3177a2c8d95cfa0b2ad473c11d5c8c1c02e5725",
          "md5": "451f428ca26de63d2dac29e574027d3b",
          "sha256": "2ffaf711fd9d8741dee338b58e6d1ffd6bf0bfa2fa48542a657b9b24f667be39"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "451f428ca26de63d2dac29e574027d3b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11948,
        "upload_time": "2020-12-08T19:28:30",
        "upload_time_iso_8601": "2020-12-08T19:28:30.799257Z",
        "url": "https://files.pythonhosted.org/packages/e1/86/920ac3237a37a02f52adc3177a2c8d95cfa0b2ad473c11d5c8c1c02e5725/celebalucid-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4218a9895221043bfec3b6d0c0bb1e1999e46df439f56d1ee96ac90adaba2a21",
          "md5": "57835f649ea437b172cfe74f939215b2",
          "sha256": "ad81be902b611ffbb1ae433dd492682e258c7a1b501ddfe1443de96a9efd6f6d"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57835f649ea437b172cfe74f939215b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14809,
        "upload_time": "2020-12-09T15:35:40",
        "upload_time_iso_8601": "2020-12-09T15:35:40.565882Z",
        "url": "https://files.pythonhosted.org/packages/42/18/a9895221043bfec3b6d0c0bb1e1999e46df439f56d1ee96ac90adaba2a21/celebalucid-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c847c7ab24ca2fa98e29090b556483ec07adcb38a003d5720340f59862bb6aa7",
          "md5": "274dda965caa955018a5646d43f1f115",
          "sha256": "58a7484e54cf2aa0b0c7e73de90927f3a5fe21576315f23f9fafc88039c8f7a5"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "274dda965caa955018a5646d43f1f115",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15515,
        "upload_time": "2020-12-10T11:03:13",
        "upload_time_iso_8601": "2020-12-10T11:03:13.227824Z",
        "url": "https://files.pythonhosted.org/packages/c8/47/c7ab24ca2fa98e29090b556483ec07adcb38a003d5720340f59862bb6aa7/celebalucid-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1aca85409a99f64d8e0f22a8c349080a797e610ecf5b1afec282af2dae465cc",
          "md5": "d2c6e3b185c2566ec748bad1397b99ee",
          "sha256": "286318704912bf52b10c8f54acb24bc92ae5faa7119cb56af2aa7f5d8ca0edaf"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2c6e3b185c2566ec748bad1397b99ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15700,
        "upload_time": "2020-12-16T11:05:04",
        "upload_time_iso_8601": "2020-12-16T11:05:04.698852Z",
        "url": "https://files.pythonhosted.org/packages/d1/ac/a85409a99f64d8e0f22a8c349080a797e610ecf5b1afec282af2dae465cc/celebalucid-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "651080be0692c592c2d4e5708feef85b206e79e61fe718c9f72dc00ac1abb88b",
          "md5": "ec7b43a1efa98dcefa38b0b178760c92",
          "sha256": "91a2f34abc6fb328e7aa40c5b3f8bb2a4b7e401aca4f2a44c7680cade1045e72"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ec7b43a1efa98dcefa38b0b178760c92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13725,
        "upload_time": "2020-12-16T11:05:06",
        "upload_time_iso_8601": "2020-12-16T11:05:06.262779Z",
        "url": "https://files.pythonhosted.org/packages/65/10/80be0692c592c2d4e5708feef85b206e79e61fe718c9f72dc00ac1abb88b/celebalucid-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c622c524ecd64d2620103f4e1972a98f68464839bddee1c9a7588a3555b949d2",
          "md5": "1f5e401ad0f185ddba560eff6f00e995",
          "sha256": "80480ae7c3b40e4fcca3a615adbb0487e371711d64a88639d8ad20b4cb8efbf0"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f5e401ad0f185ddba560eff6f00e995",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15764,
        "upload_time": "2020-12-16T11:08:36",
        "upload_time_iso_8601": "2020-12-16T11:08:36.776891Z",
        "url": "https://files.pythonhosted.org/packages/c6/22/c524ecd64d2620103f4e1972a98f68464839bddee1c9a7588a3555b949d2/celebalucid-0.1.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45078e79b09bd436265e7c6d85e1c25064f4e4d612910b1f153a14953b5655d2",
          "md5": "76eaf201fd42b3ef4d9557ea38d04a20",
          "sha256": "7580831fad135a54c7f1c411539f0783bb4e7430a82a313312fb37cd737c45bc"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "76eaf201fd42b3ef4d9557ea38d04a20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13788,
        "upload_time": "2020-12-16T11:08:38",
        "upload_time_iso_8601": "2020-12-16T11:08:38.347470Z",
        "url": "https://files.pythonhosted.org/packages/45/07/8e79b09bd436265e7c6d85e1c25064f4e4d612910b1f153a14953b5655d2/celebalucid-0.1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c67a72473923fbef7b1d9f1af58e6c77aa601f5bed65b73a9c6f4734e54e2a23",
          "md5": "1e14e8c122fbd590bd918a3a5777ed0d",
          "sha256": "0d78fd8577271bd4123d52ada579c1628c6028909b88dd701318ba82d6ad95ed"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e14e8c122fbd590bd918a3a5777ed0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16160,
        "upload_time": "2020-12-16T13:26:50",
        "upload_time_iso_8601": "2020-12-16T13:26:50.173933Z",
        "url": "https://files.pythonhosted.org/packages/c6/7a/72473923fbef7b1d9f1af58e6c77aa601f5bed65b73a9c6f4734e54e2a23/celebalucid-0.1.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0da0e20f28b544902ef40089a017940f2897437e1c4a79fa989dcc81dbfd7d5",
          "md5": "bf907c23b6866bae741db422bce61a54",
          "sha256": "64e691a1c9ba064c289b69c6a5f5e6ad145dac4a47b47923e2e93707f0ebe6cc"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bf907c23b6866bae741db422bce61a54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14283,
        "upload_time": "2020-12-16T13:26:51",
        "upload_time_iso_8601": "2020-12-16T13:26:51.646982Z",
        "url": "https://files.pythonhosted.org/packages/f0/da/0e20f28b544902ef40089a017940f2897437e1c4a79fa989dcc81dbfd7d5/celebalucid-0.1.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf681edb42872c58ff84c22f98ffe04123b8d474aa1d9fce1da2d4a3b9fccc20",
          "md5": "d62a2abdd634e544a9606f8f754999cd",
          "sha256": "5f9db79fbc8921ca3448a6c135196d351e7e2b921b6d56543f251aa35cc8ddba"
        },
        "downloads": -1,
        "filename": "celebalucid-0.1.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d62a2abdd634e544a9606f8f754999cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17501,
        "upload_time": "2021-01-12T19:41:28",
        "upload_time_iso_8601": "2021-01-12T19:41:28.924046Z",
        "url": "https://files.pythonhosted.org/packages/bf/68/1edb42872c58ff84c22f98ffe04123b8d474aa1d9fce1da2d4a3b9fccc20/celebalucid-0.1.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf681edb42872c58ff84c22f98ffe04123b8d474aa1d9fce1da2d4a3b9fccc20",
        "md5": "d62a2abdd634e544a9606f8f754999cd",
        "sha256": "5f9db79fbc8921ca3448a6c135196d351e7e2b921b6d56543f251aa35cc8ddba"
      },
      "downloads": -1,
      "filename": "celebalucid-0.1.5.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d62a2abdd634e544a9606f8f754999cd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17501,
      "upload_time": "2021-01-12T19:41:28",
      "upload_time_iso_8601": "2021-01-12T19:41:28.924046Z",
      "url": "https://files.pythonhosted.org/packages/bf/68/1edb42872c58ff84c22f98ffe04123b8d474aa1d9fce1da2d4a3b9fccc20/celebalucid-0.1.5.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}