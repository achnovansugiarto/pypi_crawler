{
  "info": {
    "author": "Frederic Collonval",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Jupyter",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# jupyter-project\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fcollonval/jupyter-project/master?urlpath=lab)\n[![Github Actions Status](https://github.com/fcollonval/jupyter-project/workflows/Test/badge.svg)](https://github.com/fcollonval/jupyter-project/actions?query=workflow%3ATest)\n[![Coverage Status](https://coveralls.io/repos/github/fcollonval/jupyter-project/badge.svg?branch=master)](https://coveralls.io/github/fcollonval/jupyter-project?branch=master)\n[![Conda (channel only)](https://img.shields.io/conda/vn/conda-forge/jupyter-project)](https://anaconda.org/conda-forge/jupyter-project)\n[![PyPI](https://img.shields.io/pypi/v/jupyter-project)](https://pypi.org/project/jupyter-project/)\n[![npm](https://img.shields.io/npm/v/jupyter-project)](https://www.npmjs.com/package/jupyter-project)\n\nAn JupyterLab extension to handle (a unique) project and files templates. It adds the ability\nto generate projects from a [cookiecutter](https://cookiecutter.readthedocs.io/en/latest/) template as well as generate files\nfrom [Jinja2](https://jinja.palletsprojects.com/en/master/) templates. Those templates can be parametrized directly from\nthe frontend by specifying [JSON schemas](https://json-schema.org/).\n\nThis extension is composed of a Python package named `jupyter_project`\nfor the server extension and a NPM package named `jupyter-project`\nfor the frontend extension.\n\n- [Requirements](#Requirements)\n- [Install](#Install)\n- [Configuration](#Configuring-the-extension)\n  - [File templates](#File-templates)\n  - [Project template](#Project-template)\n    - [Conda integration](#Conda-environment-integration)\n    - [Git integration](#Git-integration)\n  - [Complete configuration](#Full-configuration)\n- [Troubleshoot](#Troubleshoot)\n- [Contributing](#Contributing)\n- [Uninstall](#Uninstall)\n- [Alternatives](#Alternatives)\n\n![screencast](doc/preview-jupyter-project.gif)\n\nTest it with all third-parties extensions: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fcollonval/jupyter-project/master?urlpath=lab)  \nTest it without them: [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/fcollonval/jupyter-project/binder-no-3rd-parties?urlpath=lab)\n\n## Requirements\n\n- Python requirements:\n\n```py\n# setup.py#L63-L66\n\n\"cookiecutter\",\n\"jinja2~=2.9\",\n\"jsonschema\",\n\"jupyterlab~=1.2\"\n```\n\n- Optional Python requirements:\n\n```py\n# setup.py#L69-L72\n\n\"all\": [\n    \"jupyter_conda~=3.3\", \n    \"jupyterlab-git>=0.10,<0.20\"\n],\n```\n\n- Optional JupyterLab extensions:\n\n  - @jupyterlab/git\n  - jupyterlab_conda\n\n## Install\n\n> Note: You will need NodeJS to install the extension.\n\nWith pip:\n\n```bash\npip install jupyter_project\njupyter lab build\n```\n\nOr with conda:\n\n```bash\nconda install -c conda-forge jupyter_project\njupyter lab build\n```\n\n## Configuring the extension\n\nBy default, this extension will not add anything to JupyterLab as the templates must be configured\nas part of the server extension configuration key **JupyterProject** (see [Jupyter server configuration](https://jupyter-notebook.readthedocs.io/en/stable/config_overview.html#) for more information).\n\nThe configuration example for Binder will be described next - this is the file [binder/jupyter_notebook_config.json](binder/jupyter_notebook_config.json).\n\nThe section for this extension must be named **JupyterProject**:\n\n```json5\n// ./binder/jupyter_notebook_config.json#L7-L7\n\n\"JupyterProject\": {\n```\n\nIt accepts to optional keys: _file_templates_ and _project_template_. The first defines a list\nof places containing templated files. And the second describe the project template. They can\nboth exist alone (i.e. only file templates or only the project template).\n\n### File templates\n\nThe file templates can be located in a `location` provided by its fullpath or in a `location`\nwithin a Python `module`. In the Binder example, the template are located in the folder `examples`\npart of the `jupyter_project` Python module:\n\n```json5\n// ./binder/jupyter_notebook_config.json#L8-L12\n\n\"file_templates\": [\n  {\n    \"name\": \"data-sciences\",\n    \"module\": \"jupyter_project\",\n    \"location\": \"examples\",\n```\n\nThe last parameter appearing here is _name_. It described uniquely the source of file templates.\n\nThan comes the list of templated files available in that source. There are three templated\nfile examples. The shortest configuration is:\n\n```json5\n// ./binder/jupyter_notebook_config.json#L14-L16\n\n{\n  \"template\": \"demo.ipynb\"\n},\n```\n\nThis will create a template by copy of the provided file.\n\nBut usually, a template comes with parameters. This extension handles parameters through\na [JSON schema specification](https://json-schema.org/understanding-json-schema/index.html).\nThat schema will be used to prompt the user with a form that will be validated against\nthe schema. Then the form values will be passed to [Jinja2](https://jinja.palletsprojects.com/en/master/)\nto rendered the templates.\n\n> In addition, if a project is active, its properties like name or dirname will be available in\n> the Jinja template as ``jproject.<property>`` (e.g. ``jproject.name`` for the project name).\n\n```json5\n// ./binder/jupyter_notebook_config.json#L74-L92\n\n{\n  \"default_name\": \"{{ modelName }}\",\n  \"destination\": \"src/models\",\n  \"schema\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"authorName\": {\n        \"type\": \"string\"\n      },\n      \"modelName\": {\n        \"type\": \"string\",\n        \"pattern\": \"^[a-zA-Z_]\\\\w*$\"\n      }\n    },\n    \"required\": [\"modelName\"]\n  },\n  \"template_name\": \"Train Model\",\n  \"template\": \"train_model.py\"\n}\n```\n\nIn the settings, you can see three additional entries that have not been explained yet:\n\n- `template_name`: A nicer name for the template to be displayed in the frontend.\n- `default_name`: Default name for the file generated from the template (the string may contain Jinja2 variables defined in the `schema`).\n- `destination`: If you are using the project template, the generated file will be placed\n  within the destination folder inside the active project folder. If no project is active\n  the file will be written in the current folder. It can contain project templated variable:\n\n  - ``{{jproject.name}}``: Project name\n  - ``{{jproject.dirname}}``: Project directory name\n\nThe latest file template example is a complete example of all possibilities (including\ntype of variables that you could used in the schema):\n\n```json5\n// ./binder/jupyter_notebook_config.json#L17-L73\n\n{\n  \"destination\": \"notebooks\",\n  \"icon\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 16 16\\\"> <rect class=\\\"jp-icon3\\\" fill=\\\"#ffffff\\\" width=\\\"16\\\" height=\\\"16\\\" rx=\\\"2\\\" style=\\\"fill-opacity:1\\\" /> <path class=\\\"jp-icon-accent0\\\" fill=\\\"#faff00\\\" d=\\\"m 12.098275,4.7065364 -4.9999997,-0.62651 v 8.9554396 l 4.9999997,-0.32893 v -1.1 l -3.4999997,0.19305 V 8.9065364 h 1.9999997 v -1.1 l -1.9999997,-0.1 V 5.3539365 l 3.4999997,0.3526 z\\\" style=\\\"fill-opacity:1;stroke:none\\\" /> </svg> \",\n  \"template_name\": \"Example\",\n  \"template\": \"example.ipynb\",\n  \"schema\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"exampleBoolean\": {\n        \"default\": false,\n        \"title\": \"A choice\",\n        \"type\": \"boolean\"\n      },\n      \"exampleList\": {\n        \"default\": [1, 2, 3],\n        \"title\": \"A list of number\",\n        \"type\": \"array\",\n        \"items\": {\n          \"default\": 0,\n          \"type\": \"number\"\n        }\n      },\n      \"exampleNumber\": {\n        \"default\": 42,\n        \"title\": \"A number\",\n        \"type\": \"number\",\n        \"minimum\": 0,\n        \"maximum\": 100\n      },\n      \"exampleObject\": {\n        \"default\": {\n          \"number\": 1,\n          \"street_name\": \"Dog\",\n          \"street_type\": \"Street\"\n        },\n        \"title\": \"A object\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"number\": { \"type\": \"integer\" },\n          \"street_name\": { \"type\": \"string\" },\n          \"street_type\": {\n            \"type\": \"string\",\n            \"enum\": [\"Street\", \"Avenue\", \"Boulevard\"]\n          }\n        },\n        \"required\": [\"number\"]\n      },\n      \"exampleString\": {\n        \"default\": \"I_m_Beautiful\",\n        \"title\": \"A string\",\n        \"type\": \"string\",\n        \"pattern\": \"^[a-zA-Z_]\\\\w*$\"\n      }\n    },\n    \"required\": [\"exampleString\"]\n  }\n},\n```\n\nA careful reader may notice the last available setting: `icon`. It is a stringified\nsvg that will be used to set a customized icon in the frontend for the template.\n\nIf you need to set templates from different sources, you can add entry similar to\n`data-sciences` in the `file_templates` list.\n\n### Project template\n\nThe second major configuration section is `project_template`. The template must\nspecified a value for `template` that points to a valid [cookiecutter](https://cookiecutter.readthedocs.io/en/latest/)\ntemplate source:\n\n```json5\n// ./binder/jupyter_notebook_config.json#L96-L97\n\n\"project_template\": {\n  \"template\": \"https://github.com/drivendata/cookiecutter-data-science\",\n```\n\nThe cookiecutter template parameters that you wish the user to be able to change must be\nspecified as a [JSON schema](https://json-schema.org/understanding-json-schema/index.html):\n\n```json5\n// ./binder/jupyter_notebook_config.json#L98-L125\n\n\"schema\": {\n  \"type\": \"object\",\n  \"properties\": {\n    \"project_name\": {\n      \"type\": \"string\",\n      \"default\": \"Project Name\"\n    },\n    \"repo_name\": {\n      \"title\": \"Folder name\",\n      \"type\": \"string\",\n      \"pattern\": \"^[a-zA-Z_]\\\\w*$\",\n      \"default\": \"project_name\"\n    },\n    \"author_name\": {\n      \"type\": \"string\",\n      \"description\": \"Your name (or your organization/company/team)\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"description\": \"A short description of the project.\"\n    },\n    \"open_source_license\": {\n      \"type\": \"string\",\n      \"enum\": [\"MIT\", \"BSD-3-Clause\", \"No license file\"]\n    }\n  },\n  \"required\": [\"project_name\", \"repo_name\"]\n},\n```\n\nThen you need to set `folder_name` as the name of the folder resulting from the cookiecutter\ntemplate. This is a string accepting Jinja2 variables defined in the `schema`.\n\nThe latest option in the example is `default_path`. This is optional and, if set, it should\nprovide the default path (folder or file) to be opened by JupyterLab once the project has\nbeen generated. It can contain project templated variable:\n\n- ``{{jproject.name}}``: Project name\n- ``{{jproject.dirname}}``: Project directory name\n\n```json5\n// ./binder/jupyter_notebook_config.json#L126-L127\n\n\"folder_name\": \"{{ repo_name }}\",\n\"default_path\": \"README.md\",\n```\n\n#### Conda environment integration\n\nIf the [`jupyter_conda`](https://github.com/fcollonval/jupyter_conda) optional extension is installed\nand if `conda_pkgs` is specified in the `project_template` configuration, then a Conda environment\nwill follow the life cycle of the project; i.e. creation of an environment at project creation,\nupdate of the environment when opening a project and changing its packages and deletion at project deletion.\n\nThe `conda_pkgs` setting should be set to a string matching the default environment type of conda environment\nto be created at project creation (see [`jupyter_conda`](https://github.com/fcollonval/jupyter_conda/blob/master/labextension/schema/plugin.json#L13)\nlabextension for more information). You can also set a packages list separated by space.\n\nThe binder example defines:\n\n```json5\n// ./binder/jupyter_notebook_config.json#L128-L128\n\n\"conda_pkgs\": \"awscli click coverage flake8 ipykernel python-dotenv>=0.5.1 sphinx\"\n```\n\n> The default conda packages settings is the fallback if `environment.yml` is absent of the project\n> cookiecutter template.\n\nThere are two configurable options for the project template when using the conda integration:\n\n- `editable_install`: If True, the project folder will be installed in editable mode using `pip` in the conda environment (default: True)\n- `filter_kernel`: If True, the kernel manager [whitelist](https://jupyter-notebook.readthedocs.io/en/stable/search.html?q=whitelist&check_keywords=yes&area=default)\nwill be set dynamically to the one of the project environment\nkernel (i.e. only that kernel will be available when the project is opened) (default: True).\n\n#### Git integration\n\nIf the [`jupyterlab-git`](https://github.com/jupyterlab/jupyterlab-git) optional extension is installed, the following features/behaviors are to be expected:\n\n- When creating a project, it will be initialized as a git repository and a first commit with all produced files will be carried out.\n- When the git HEAD changes (branch changes, pull action,...), the conda environment will be updated if the `environment.yml` file changed.\n\n### Full configuration\n\nHere is the description of all server extension settings:\n\n```json\n{\n  \"JupyterProject\": {\n    \"file_templates\": {\n      \"description\": \"List of file template loaders\",\n      \"type\": \"array\",\n      \"items\": {\n        \"description\": ,\n        \"type\": \"object\",\n        \"properties\": {\n          \"location\": {\n            \"description\": \"Templates path\",\n            \"type\": \"string\"\n          },\n          \"module\": {\n            \"description\": \"Python package containing the templates 'location' [optional]\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"Templates group name\",\n            \"type\": \"string\"\n          },\n          \"files\": {\n            \"description\": \"List of template files\",\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"default_name\": {\n                  \"description\": \"Default file name (without extension; support Jinja2 templating using the schema parameters)\",\n                  \"default\": \"Untitled\",\n                  \"type\": \"string\"\n                },\n                \"destination\": {\n                  \"description\": \"Relative destination folder [optional]\",\n                  \"type\": \"string\"\n                },\n                \"icon\": {\n                  \"description\": \"Template icon to display in the frontend [optional]\",\n                  \"default\": null,\n                  \"type\": \"string\"\n                },\n                \"schema\": {\n                  \"description\": \"JSON schema list describing the templates parameters [optional]\",\n                  \"type\": \"object\"\n                },\n                \"template\": {\n                  \"description\": \"Template path\",\n                  \"type\": \"string\"\n                },\n                \"template_name\" : {\n                  \"description\": \"Template name in the UI [optional]\",\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\"template\"]\n            }\n          }\n        },\n        \"required\": [\"files\", \"location\", \"name\"]\n      }\n    },\n    \"project_template\": {\n      \"description\": \"The project template options\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"configuration_filename\": {\n          \"description\": \"Name of the project configuration JSON file [optional]\",\n          \"default\": \"jupyter-project.json\",\n          \"type\": \"string\"\n        },\n        \"configuration_schema\": {\n          \"description\": \"JSON schema describing the project configuration file [optional]\",\n          \"default\": {\n            \"type\": \"object\",\n            \"properties\": {\"name\": {\"type\": \"string\"}},\n            \"required\": [\"name\"],\n          },\n          \"type\": \"object\"\n        },\n        \"conda_pkgs\": {\n          \"default\": null,\n          \"description\": \"Type of conda environment or space separated list of conda packages (requires `jupyter_conda`) [optional]\",\n          \"type\": \"string\"\n        },\n        \"default_path\": {\n          \"description\": \"Default file or folder to open; relative to the project root [optional]\",\n          \"type\": \"string\"\n        },\n        \"editable_install\": {\n          \"description\": \"Should the project be installed in pip editable mode in the conda environment?\",\n          \"type\": \"boolean\",\n          \"default\": true\n        },\n        \"filter_kernel\": {\n          \"description\": \"Should the kernel be filtered to match only the conda environment?\",\n          \"type\": \"boolean\",\n          \"default\": true\n        },\n        \"folder_name\": {\n          \"description\": \"Project name (support Jinja2 templating using the schema parameters) [optional]\",\n          \"default\": \"{{ name|lower|replace(' ', '_') }}\",\n          \"type\": \"string\"\n        },\n        \"module\": {\n          \"description\": \"Python package containing the template [optional]\",\n          \"type\": \"string\"\n        },\n        \"schema\": {\n          \"description\": \"JSON schema describing the template parameters [optional]\",\n          \"default\": {\n            \"type\": \"object\",\n            \"properties\": {\"name\": {\"type\": \"string\", \"pattern\": \"^[a-zA-Z_]\\\\w*$\"}},\n            \"required\": [\"name\"],\n          },\n          \"type\": \"object\"\n        },\n        \"template\": {\n          \"description\": \"Cookiecutter template source\",\n          \"default\": null,\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\"template\"]\n    }\n  }\n}\n```\n\n## Troubleshoot\n\nIf you are seeing the frontend extension but it is not working, check\nthat the server extension is enabled:\n\n```bash\njupyter serverextension list\n```\n\nIf the server extension is installed and enabled but you are not seeing\nthe frontend, check the frontend is installed:\n\n```bash\njupyter labextension list\n```\n\nIf it is installed, try:\n\n```bash\njupyter lab clean\njupyter lab build\n```\n\n## Contributing\n\nThe frontend extension is based on [uniforms](https://uniforms.tools/) with its\n[material-ui](https://material-ui.com/) flavor to handle and display automatic\nforms from JSON schema.\n\n### Install\n\nThe `jlpm` command is JupyterLab's pinned version of\n[yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use\n`yarn` or `npm` in lieu of `jlpm` below.\n\n```bash\n# Clone the repo to your local environment\n# Move to jupyter-project directory\n\n# Install server extension\npip install -e .[test]\n# Register server extension\njupyter serverextension enable --py jupyter_project\n\n# Install dependencies\njlpm\n# Build Typescript source\njlpm build\n# Link your development version of the extension with JupyterLab\njupyter labextension link .\n# Rebuild Typescript source after making changes\njlpm build\n# Rebuild JupyterLab after making any changes\njupyter lab build\n```\n\nYou can watch the source directory and run JupyterLab in watch mode to watch for changes in the extension's source and automatically rebuild the extension and application.\n\n```bash\n# Watch the source directory in another terminal tab\njlpm watch\n# Run jupyterlab in watch mode in one terminal tab\njupyter lab --watch\n```\n\n> To run with an working example, execute `jupyter lab` from the binder folder to use the local `jupyter_notebook_config.json` as configuration.\n\n## Uninstall\n\nWith pip:\n\n```bash\npip uninstall jupyter-project\njupyter labextension uninstall jupyter-project\n```\n\nOr with pip:\n\n```bash\nconda remove jupyter-project\njupyter labextension uninstall jupyter-project\n```\n\n## Alternatives\n\nDon't like what you see here? Try these other approaches:\n\n- [jupyterlab-starters](https://github.com/deathbeds/jupyterlab-starters)\n- [jupyterlab_templates](https://github.com/timkpaine/jupyterlab_templates)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fcollonval/jupyter-project",
    "keywords": "Jupyter,JupyterLab,template",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jupyter-project",
    "package_url": "https://pypi.org/project/jupyter-project/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/jupyter-project/",
    "project_urls": {
      "Homepage": "https://github.com/fcollonval/jupyter-project"
    },
    "release_url": "https://pypi.org/project/jupyter-project/1.0.1/",
    "requires_dist": [
      "cookiecutter",
      "jinja2 (~=2.9)",
      "jsonschema",
      "jupyterlab (~=1.2)",
      "jupyter-conda (~=3.3) ; extra == 'all'",
      "jupyterlab-git (<0.20,>=0.10) ; extra == 'all'",
      "pytest ; extra == 'test'",
      "pytest-asyncio ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "An JupyterLab extension to handle project and files templates.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7384798,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9eaec167fc75f923b1e94ad4237f282ad19d1aa0690767d6c4102314de897834",
          "md5": "ba4a7c4a47a4ce2268b0906a704bdbd0",
          "sha256": "c4367e8b00933383023add6aadc42c08f909fcffb941cdc4c43a3f361392fd31"
        },
        "downloads": -1,
        "filename": "jupyter_project-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba4a7c4a47a4ce2268b0906a704bdbd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 54831,
        "upload_time": "2020-05-16T15:46:19",
        "upload_time_iso_8601": "2020-05-16T15:46:19.032200Z",
        "url": "https://files.pythonhosted.org/packages/9e/ae/c167fc75f923b1e94ad4237f282ad19d1aa0690767d6c4102314de897834/jupyter_project-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d3fd62f08f2b874544656f3e39165b21567029a0e046cfd4fa1ea4d668102d8",
          "md5": "c383a2e196009e04027a45cd724eeabc",
          "sha256": "379bf82a815c5be5896b8b8103013cae8ba5bd83d738d2d8d3901aa36e49dcf2"
        },
        "downloads": -1,
        "filename": "jupyter_project-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c383a2e196009e04027a45cd724eeabc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 55189,
        "upload_time": "2020-05-16T15:46:21",
        "upload_time_iso_8601": "2020-05-16T15:46:21.657255Z",
        "url": "https://files.pythonhosted.org/packages/3d/3f/d62f08f2b874544656f3e39165b21567029a0e046cfd4fa1ea4d668102d8/jupyter_project-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18855349ee583c31774836cfbd8a489af5cd64633bbbd8b71358e8954cb352f6",
          "md5": "196b93e03e3b50aaa0e150c0fc751ab6",
          "sha256": "e85e806a2728f5059c283d8822100e92f1bdea1c0cdcf89f0427f28af4436a19"
        },
        "downloads": -1,
        "filename": "jupyter_project-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "196b93e03e3b50aaa0e150c0fc751ab6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 80599,
        "upload_time": "2020-05-23T10:38:07",
        "upload_time_iso_8601": "2020-05-23T10:38:07.812501Z",
        "url": "https://files.pythonhosted.org/packages/18/85/5349ee583c31774836cfbd8a489af5cd64633bbbd8b71358e8954cb352f6/jupyter_project-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c23616b86d6501e1aa692fe59a42c4b7a823a8766c65e343b4208db3b82a1ab8",
          "md5": "7717263d63c6209aba1ae06adb040bc1",
          "sha256": "50edad0efa6c7dc26f49fc232d13f06411bc5272d714b260975e8667e082b87c"
        },
        "downloads": -1,
        "filename": "jupyter_project-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7717263d63c6209aba1ae06adb040bc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 73451,
        "upload_time": "2020-05-23T10:38:08",
        "upload_time_iso_8601": "2020-05-23T10:38:08.804948Z",
        "url": "https://files.pythonhosted.org/packages/c2/36/16b86d6501e1aa692fe59a42c4b7a823a8766c65e343b4208db3b82a1ab8/jupyter_project-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "649cbdc84fb0afba1a427717d07c9fdf974a513a5d1037272c8b6edab22af42f",
          "md5": "164961de66a733e07e461c1dee07d424",
          "sha256": "722c4631368d80ad68033eb6f83c3672f8973b1a26242041f3d87e3f047a86de"
        },
        "downloads": -1,
        "filename": "jupyter_project-0.2.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "164961de66a733e07e461c1dee07d424",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 80687,
        "upload_time": "2020-05-23T10:32:36",
        "upload_time_iso_8601": "2020-05-23T10:32:36.982206Z",
        "url": "https://files.pythonhosted.org/packages/64/9c/bdc84fb0afba1a427717d07c9fdf974a513a5d1037272c8b6edab22af42f/jupyter_project-0.2.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73f8ca268c1c618993047db0733899377b2706bbfec9c0f94c7222e8f46604c0",
          "md5": "c5856dfad9aff5fbaf63be62a993e2a1",
          "sha256": "71e886e7f21945767f003c2b33e5bafc18c0819099ba05dc000a124f521ddb4b"
        },
        "downloads": -1,
        "filename": "jupyter_project-0.2.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "c5856dfad9aff5fbaf63be62a993e2a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 73473,
        "upload_time": "2020-05-23T10:32:38",
        "upload_time_iso_8601": "2020-05-23T10:32:38.216429Z",
        "url": "https://files.pythonhosted.org/packages/73/f8/ca268c1c618993047db0733899377b2706bbfec9c0f94c7222e8f46604c0/jupyter_project-0.2.0a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "575ac94847f09135f2154176983c008336ea93a17db3a54938553edf7e3423d0",
          "md5": "e6f81ad562cefb47cb367cc0ab63ec88",
          "sha256": "10d033eb81c9274b3a283e45a1b75f563f4829874803aba3a9bae75bc2705769"
        },
        "downloads": -1,
        "filename": "jupyter_project-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6f81ad562cefb47cb367cc0ab63ec88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 86000,
        "upload_time": "2020-05-30T15:21:40",
        "upload_time_iso_8601": "2020-05-30T15:21:40.158289Z",
        "url": "https://files.pythonhosted.org/packages/57/5a/c94847f09135f2154176983c008336ea93a17db3a54938553edf7e3423d0/jupyter_project-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ab317a2b72490a7ac3b4cea700ef85fe59acf1e6d91bb30fb7d9bc0aab5297e",
          "md5": "647da1fa6c74ac0e2baaf41cde424297",
          "sha256": "9d97f721f0f36ab88ffafc2e05ae24914eaf2c6e8a011bfb37f5b592910569a6"
        },
        "downloads": -1,
        "filename": "jupyter_project-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "647da1fa6c74ac0e2baaf41cde424297",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 78146,
        "upload_time": "2020-05-30T15:21:41",
        "upload_time_iso_8601": "2020-05-30T15:21:41.254139Z",
        "url": "https://files.pythonhosted.org/packages/6a/b3/17a2b72490a7ac3b4cea700ef85fe59acf1e6d91bb30fb7d9bc0aab5297e/jupyter_project-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "754a3a4b413da0882abb9014de7501035aa5eebe887ef358cf837bb453e55fe2",
          "md5": "3a3a2a5443410237fe4e4a319c12a400",
          "sha256": "918480f260e4a4130fc87dbcf2395bfe322cacce9258d332050d7fc3d4a8d96c"
        },
        "downloads": -1,
        "filename": "jupyter_project-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a3a2a5443410237fe4e4a319c12a400",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 90247,
        "upload_time": "2020-06-01T17:54:27",
        "upload_time_iso_8601": "2020-06-01T17:54:27.543664Z",
        "url": "https://files.pythonhosted.org/packages/75/4a/3a4b413da0882abb9014de7501035aa5eebe887ef358cf837bb453e55fe2/jupyter_project-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e9b5b9c45d20eb5a49fbf6594fd14df58a62f4d339f976de283a52db6506e1b",
          "md5": "c37b38a4485f3b05212d70d0262349ab",
          "sha256": "8d498bb52bca8fe9ab2386144215cac99e7989f7529cc1b3510aced7f2404eb2"
        },
        "downloads": -1,
        "filename": "jupyter_project-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c37b38a4485f3b05212d70d0262349ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 82138,
        "upload_time": "2020-06-01T17:54:28",
        "upload_time_iso_8601": "2020-06-01T17:54:28.656038Z",
        "url": "https://files.pythonhosted.org/packages/2e/9b/5b9c45d20eb5a49fbf6594fd14df58a62f4d339f976de283a52db6506e1b/jupyter_project-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c79d727e1bf60957cdc9766cad61b98ce9f5553f326652cabb09e619dcb20ed",
          "md5": "e6f1d2cc59fb416775aa72cef0dc72c1",
          "sha256": "5f2cf44ed01479345e3aa13c995b5777f81842fc375530fbdae1edc017ee2f04"
        },
        "downloads": -1,
        "filename": "jupyter_project-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6f1d2cc59fb416775aa72cef0dc72c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 90611,
        "upload_time": "2020-06-03T07:20:23",
        "upload_time_iso_8601": "2020-06-03T07:20:23.141706Z",
        "url": "https://files.pythonhosted.org/packages/6c/79/d727e1bf60957cdc9766cad61b98ce9f5553f326652cabb09e619dcb20ed/jupyter_project-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6f7d1ddf162b78dbcce8c8c0a0ca7c9a797b0d2128fd94f3eac2a5f135e4d0d",
          "md5": "d32d384fb19021b4b13e3db66ace056e",
          "sha256": "c929f464708a14073fb0cb0631f0e5bf9fff3616465a14e07fdc207473f6883d"
        },
        "downloads": -1,
        "filename": "jupyter_project-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d32d384fb19021b4b13e3db66ace056e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 82456,
        "upload_time": "2020-06-03T07:20:24",
        "upload_time_iso_8601": "2020-06-03T07:20:24.378740Z",
        "url": "https://files.pythonhosted.org/packages/f6/f7/d1ddf162b78dbcce8c8c0a0ca7c9a797b0d2128fd94f3eac2a5f135e4d0d/jupyter_project-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c79d727e1bf60957cdc9766cad61b98ce9f5553f326652cabb09e619dcb20ed",
        "md5": "e6f1d2cc59fb416775aa72cef0dc72c1",
        "sha256": "5f2cf44ed01479345e3aa13c995b5777f81842fc375530fbdae1edc017ee2f04"
      },
      "downloads": -1,
      "filename": "jupyter_project-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e6f1d2cc59fb416775aa72cef0dc72c1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 90611,
      "upload_time": "2020-06-03T07:20:23",
      "upload_time_iso_8601": "2020-06-03T07:20:23.141706Z",
      "url": "https://files.pythonhosted.org/packages/6c/79/d727e1bf60957cdc9766cad61b98ce9f5553f326652cabb09e619dcb20ed/jupyter_project-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6f7d1ddf162b78dbcce8c8c0a0ca7c9a797b0d2128fd94f3eac2a5f135e4d0d",
        "md5": "d32d384fb19021b4b13e3db66ace056e",
        "sha256": "c929f464708a14073fb0cb0631f0e5bf9fff3616465a14e07fdc207473f6883d"
      },
      "downloads": -1,
      "filename": "jupyter_project-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d32d384fb19021b4b13e3db66ace056e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 82456,
      "upload_time": "2020-06-03T07:20:24",
      "upload_time_iso_8601": "2020-06-03T07:20:24.378740Z",
      "url": "https://files.pythonhosted.org/packages/f6/f7/d1ddf162b78dbcce8c8c0a0ca7c9a797b0d2128fd94f3eac2a5f135e4d0d/jupyter_project-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}