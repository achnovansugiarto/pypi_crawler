{
  "info": {
    "author": "Matthias Kestenholz",
    "author_email": "mk@406.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development"
    ],
    "description": "========\nNewswall\n========\n\nThis is my version of a Tumblelog. Why, you might ask? Because I can.\n\n\nInstallation and usage\n======================\n\n1. Add ``newswall`` to ``INSTALLED_APPS``\n2. Run ``./manage.py migrate newswall`` (or ``syncdb``, if you prefer to work\n   without South)\n3. Add the following line to your ``urls.py``::\n\n    url(r'^news/', include('newswall.urls')),\n\n4. Add news providers by create a few ``Source`` objects through Django's\n   admin panel\n5. Create a cronjob running ``./manage.py update_newswall`` periodically (i.e.\n   every hour)\n\n\nProviders\n=========\n\n``newswall`` has a few bundled providers, those being:\n\n\nElephantblog\n------------\n\nAdds news entries for every active entry in a elephantblog installation on the\nsame website. No additional configuration required (or possible). Add the\nfollowing JSON configuration to the ``Source`` entry::\n\n    {\"provider\": \"newswall.providers.elephantblog\"}\n\n\nFacebook Graph Feed\n-------------------\n\nThis provider adds news entries for every wall post on a Facebook page. The\nwall posts are accessed through the Graph API; you'll need a copy of the Python\nFacebook SDK somewhere on your Python path. You'll need an access token with\n``offline_access`` permission for this provider. Required configuration\nfollows::\n\n    {\"provider\": \"newswall.providers.fb_graph_feed\",\n    \"object\": \"FEINHEIT\",      // used to construct the Graph request URL\n    \"from_id\": \"239846135569\", // used to filter stories created by the\n                               // object referenced above, ignores stories\n                               // sent by others\n    \"access_token\": \"...\"\n    }\n\nWe suggest to use App Access Tokens to query the Facebook Page feed, because they don't expire.\nTo get an App Access Token, simply open this URL with your browser, after\nfilling in the required fields (the all caps words)::\n\n    https://graph.facebook.com/oauth/access_token?client_id=YOUR_APP_ID&client_secret=YOUR_APP_SECRET&grant_type=client_credentials\n\nMore infos according the App Access Tokens can be found on the official Facebook documentation:\n<https://developers.facebook.com/docs/opengraph/using-app-tokens/>\n\nTo obtain the \"from_id\" configuration parameter, you can query the Facebook Open Graph\nAPI Backend with your Browser::\n\n    https://graph.facebook.com/OBJECT\n\nf.e.:\n<https://graph.facebook.com/FEINHEIT>\n\nRSS Feed\n--------\n\nThe RSS feed provider can take any RSS or Atom feed (in fact anything parseable\nby ``feedparser`` and turn the stories into news entries::\n\n    {\n    \"provider\": \"newswall.providers.feed\",\n    \"source\": \"http://twitter.com/statuses/user_timeline/unsocialrider.rss\"\n    }\n\n\nTwitter API Feed\n----------------\n\nRequired: tweepy\n\nUsage:\n\nCreate a twitter app.\nYou'll find the consumer_key/secret on the detail page.\nBecause this is a read-only application, you can create\nyour oauth_token/secret directly on the bottom of the app detail page.\n\nRequired configuration keys::\n\n    {\n    \"provider\": \"newswall.providers.twitter\",\n    \"user\": \"feinheit\",\n    \"consumer_key\": \"...\",\n    \"consumer_secret\": \"...\",\n    \"oauth_token\": \"...\",\n    \"oauth_secret\": \"...\"\n    }",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/matthiask/django-newswall",
    "keywords": null,
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-newswall",
    "package_url": "https://pypi.org/project/django-newswall/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/django-newswall/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/matthiask/django-newswall"
    },
    "release_url": "https://pypi.org/project/django-newswall/0.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "My version of a Tumblelog, because I can.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2202869,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c70b750f6c621fcfdb9fe9ee356121a83a96769960643fee7b698be99eed6caf",
          "md5": "b814ff712698c4ca4f4b24679c826678",
          "sha256": "de07ab41e44f0965e91b2e5495346e097a657e044a45ae11b01756e9113e6ce6"
        },
        "downloads": -1,
        "filename": "django-newswall-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "b814ff712698c4ca4f4b24679c826678",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12793,
        "upload_time": "2014-01-11T12:40:07",
        "upload_time_iso_8601": "2014-01-11T12:40:07.205548Z",
        "url": "https://files.pythonhosted.org/packages/c7/0b/750f6c621fcfdb9fe9ee356121a83a96769960643fee7b698be99eed6caf/django-newswall-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c70b750f6c621fcfdb9fe9ee356121a83a96769960643fee7b698be99eed6caf",
        "md5": "b814ff712698c4ca4f4b24679c826678",
        "sha256": "de07ab41e44f0965e91b2e5495346e097a657e044a45ae11b01756e9113e6ce6"
      },
      "downloads": -1,
      "filename": "django-newswall-0.1.0.tar.gz",
      "has_sig": true,
      "md5_digest": "b814ff712698c4ca4f4b24679c826678",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12793,
      "upload_time": "2014-01-11T12:40:07",
      "upload_time_iso_8601": "2014-01-11T12:40:07.205548Z",
      "url": "https://files.pythonhosted.org/packages/c7/0b/750f6c621fcfdb9fe9ee356121a83a96769960643fee7b698be99eed6caf/django-newswall-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}