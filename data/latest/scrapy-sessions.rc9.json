{
  "info": {
    "author": "Thomas Aitken",
    "author_email": "tclaitken@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# scrapy-sessions\nA session-management extension for Scrapy.\n\n[![PyPI Version](https://img.shields.io/pypi/v/scrapy-sessions.svg?color=blue)](https://pypi.org/project/scrapy-sessions)\n\n## Overview\nThis library resolves at least three long-standing issues in Scrapy's session-management system that people have raised concerns about for years:\n1. Scrapy's sessions are effectively a black box. They are difficult to expose and alter within a scrape.\n2. Scrapy makes it very difficult to replace/refresh a session (and/or general 'profile') unilaterally across all requests that are scheduled or enqueued. This is important for engaging with websites that have a session-expiry system based on profile (IP/user-agent) or use short-lived sessions that require a custom renewal logic. Scrapy's cookie system fails to handle such websites.\n3. Scrapy provides no native capability for maintaining distinct profiles (client identities) within a single scrape.\n\nThis library contains a `CookiesMiddleware` that exposes the Scrapy cookie jars in the spider attribute `sessions`. This is an instance of the new `Sessions` class (`objects.Sessions`) that allows one to examine the content of the current sessions and to clear and/or renew a session that is failing. The renewal procedure short-circuits the Scrapy request scheduling process, inducing an immediate download of the request specified, ahead of all others. This does not cause any adverse consequences (for example, scrape statistics are maintained perfectly).\n\nThis library also provides a tool for maintaining and rotating \"profiles\", making it easy to give the appearance that your scrape's requests are being generated by multiple, entirely distinct clients.\n\nAnother use case is for handling session cookies collected outside of Scrapy and fed into your spider. Whenever this external collection is necessary (for websites that require some kind of demonstration of Javascript rendering before they serve a session to an unknown client), this library provides a handy solution for cycling from one session to the next at each point of failure.\n\n--- \n## Relation to the Default Scrapy CookiesMiddleware\nThe **scrapy-sessions** `CookiesMiddleware` is designed to override the default Scrapy `CookiesMiddleware`. It is an *extension* of the default middleware, so there shouldn't be adverse consequences from adopting it. \n\nThe `\"COOKIES_ENABLED\"` and `\"COOKIES_DEBUG\"` settings work exactly as with the default middleware: if `\"COOKIES_ENABLED\"` is disabled, this middleware is disabled, and if `\"COOKIES_DEBUG\"` is enabled, you will get the same debug messages about cookies sent and received.\n\nWith this said, there are some important differences to note. With the default Scrapy middleware, the value of the `\"cookiejar\"` key in your `request.meta` names the session (cookie jar) that the request will use. If the session does not exist, a new session is created. The exact same applies in this library, except that you can now also use the `\"session_id\"` key for this purpose. The default value for this is now `0`, rather than `None`. So, if you don't use either of these keywords in any of your requests, each request will by default send the cookies associated with session `0`, and add any cookies it receives to session `0`. \n\n--- \n## Set up\n### Basic\nOverride the default middleware:\n\n````\nDOWNLOADER_MIDDLEWARES = {\n    'scrapy.downloadermiddlewares.cookies.CookiesMiddleware': None,\n    'scrapy_sessions.CookiesMiddleware': 700,\n}\n````\n\nThis will allow you to interact with the `spider.sessions` attribute, in order to inspect, modify, clear, and renew sessions (see [*usage*](#usage)). It will also give you access to the response cookies via `response.meta[\"cookies\"]`. \n\n### [Profiles](#profiles)\nThis is a separate add-on that hooks onto the sessions.\n\nAfter changing `settings.py` as above, add the following:\n`SESSIONS_PROFILES_SYNC: True`.\n\nThen create a `profiles.py` file at the head of your project similar to the following:\n````\nfrom w3lib.http import basic_auth_header\nPROFILES = [\n    {\"proxy\":['proxy_url', basic_auth_header('username', 'password')], \"user-agent\": \"MY USER AGENT\"},\n    {\"proxy\":['proxy_url', basic_auth_header('username', 'password')], \"user-agent\": \"MY USER AGENT\"}\n]\n````\n(Either the \"proxy\" key or the \"user-agent\" key can be omitted for each profile (but not both).)\n\nFinally, after importing the `load_profiles` function (`from scrapy_sessions.utils import load_profiles`), add the following to your spider settings:\n````\ncustom_settings = {\n  \"SESSIONS_PROFILES\":load_profiles('profiles.py')\n}\n````\nCurrently, this `load_profiles` function fails when trying to deploy on Zyte. I will try to solve this issue when I have time.\n\n--- \n## Methods\nAccess these methods via the `sessions` instance attached to your spider when using this library. For example usage, see the next section.\n### get\n#### Signature\n````\nget(self, session_id=0, mode=None, domain=None)\n````\n#### Description\nFor inspecting your sessions. Two formats toggled by mode: dictionary (name:value) or list of strings (containing the full cookie data for each cookie).  \n\n### get_profile\n#### Signature\n````\nget_profile(self, session_id=0)\n````\n#### Description\nFor inspecting the profile attached to the given session. Only works if `SESSIONS_PROFILES_SYNC` is enabled.  \n\n### add_cookies_manually\n#### Signature\n````\nadd_cookies_manually(self, cookies, url, session_id=0)\n````\n#### Description\nFor explicitly adding a set of cookies to a given session. The cookies must be in the format {name:value}; the url is the url that these cookies would come from conventionally.  \n\n### clear\n#### Signature\n````\nclear(self, session_id=0, renewal_request=None)\n````\n#### Description\nFor clearing a session and/or immediately renewing it with a special one-off request. If you don't specify a renewal_request, the session will be retried with the first new request off the rank.\n\n--- \n## [Usage](#usage)\n### Accessing the cookies received in the last response\n`response.meta[\"cookies\"]`\n\n### Accessing the current session id\n`response.meta[\"session_id\"]`\n<br/><br/><br/>\nIn the below `self` is referring to a `Scrapy.spider` class.\n\n### Viewing a session\n\nThe cookies in the first domain of the default session (session 0):\n`self.sessions.get()`\n\nThe cookies in the first domain of a specified session:\n`self.sessions.get(response.meta[\"session_id\"])`\n\nA specified session with a specified domain:\n`self.sessions.get(response.meta[\"session_id\"], domain='exampledomain.com')`\n\nIn dictionary format:\n`self.sessions.get(session_id, mode=dict)`\n\n### Clearing a session\nThe default session:\n`self.sessions.clear()`\n\nSpecifying a session works the same as in `get`.\n\n### Clearing and immediately renewing a session (instantly downloaded out of sync)\nThe default session:\n`self.sessions.clear(renewal_request=Request(url='renewal_url',callback=self.cb))`\n\nThe callback is optional; if no callback is specified, the session is renewed just the same.\n\n### Viewing a profile\nThe profile for the default session:\n`self.sessions.get_profile()`\n\nSpecifying a session works the same as before.\n\nThis method will only work if `SESSIONS_PROFILES_SYNC` is enabled in the spider settings.\n\n### Explicitly adding cookies to a session\n`self.sessions.add_cookies_manually({name1: val1, name2: val2}, 'https://exampledomain.com/', 0)`\n\n---\n## Session Refresh Motivation\nThere are two use cases for this:\n1. For handling websites that track session usage by some aspect of client identity, such as IP. This is not a common web-security feature but it does exist, and Scrapy can't handle it. By default, Scrapy will send all your requests with the one session, so if you send all your requests with the same identity signatures also, then you will be able to navigate such sites until your session expires due to reaching a time or usage limit. When this session expires, though, you need to refresh it and initiate a new one with a new identity. This library provides two ways of doing this, with and without using the `Profiles` add-on.\n2. For handling the rotation of sessions collected by some process external to Scrapy. You might make use of such an approach whenever you are unable to collect a valid session without being able to render Javascript on a site, as in the case of sites that validate clients based on fingerprinting techniques. However you collect these sessions, it is vital to be able to seamlessly switch from session A to session B as soon as session A starts failing; the clear-and-renew amenity provided by this package is the appropriate solution.\n\n### Session Refresh Implementation\n#### With Profiles\nSet up your profiles, then within some part of an errback function or middleware that only gets activated when a session expires (you may need some custom logic here), clear and renew your session using `sessions.clear`. Because you are using `profiles`, then any `renewal_request` you specify within the `clear` method will automatically get visited by a fresh profile.\n#### Without Profiles\nWithin some part of an errback function or middleware that only gets activated when a session expires, clear and renew your session using `sessions.clear` by specifying a `renewal_request` that uses a fresh proxy and/or user-agent.\n\n---\n## Session Refresh Logic\nSince this is the most complicated part of the library it's worth describing the underlying process. The following is what happens when `clear` is called with a `renewal_request` argument:\n1. The specified session is cleared and the request specified is immediately downloaded, without entering the standard request queue. The way I have achieved this, the logs and statistics are updated as normal and everything seems to go smoothly.\n2. The response derived from the `renewal_request` will reach the `process_response` method of the middleware and therein re-fill the session.\n3. Any other requests/responses that reach the middleware after the `clear` trigger but before the renewal event has occurred are re-scheduled or re-downloaded. To see the manner in which this is achieved, see the code.\n\n--- \n## Profiles\nThe idea of this tool is to manage distinct client identities within a scrape. The identity consists of two or more of the following attributes: session + user agent + proxy.\n\nThe profiles are input via a special `profiles.py` file (see [*setting up profiles*](#profiles)). Once you have these set up (and have tweaked the settings as required), one of these profiles is automatically associated with every new session created in your scrape. If there are more sessions than profiles, the profiles will be automatically recycled from the beginning. When a session is cleared, the profile is also removed.\n\n### How it works\nIndex 0 of any \"proxy\" value is fed into the `request.meta[\"proxy\"]` field in the `process_request` function of the middleware. Index 1 is fed into `request.headers['Proxy-Authorization']`.\n\nSimilarly, the \"user-agent\" value is fed into `request.headers[\"user-agent\"]`.\n\n--- \n## Future Directions\nI am planning to add tests, and then I may at some point submit a pull request on the Scrapy repository proposing this as a replacement for the default Scrapy `CookiesMiddleware`.\n\n---\n## Miscellaneous\nI've noticed what might be described as a bug in the default Scrapy implementation of the cookiejar via the http.cookiejar library. I'm not sure it raises to the level of a bug but either way it's an unexpected behaviour. This library has not addressed it because it would be best addressed within the http.cookiejar library itself. The behaviour is as follows:\n\nIn Scrapy, you can send off a number of cookies with a single request. These get merged with the existing cookies in the session before the request is sent off. One way of adding these cookies to the request is in list format, and within this format, you can specify a domain for each cookie. (e.g. `cookies=[{'name':name','value':value,'domain':domain}]`). If you specify this domain, these cookies will get stored in the session (cookiejar) under that domain except with a leading dot (full stop). It doesn't matter whether you include this leading dot yourself or not. But, by default, any cookies that get added to the session when you make requests to that very same domain without explicit cookies will be added to the session without this leading dot. Therefore, because these two sets of cookies only get merged together if they are filed under an identical domain, the cookies may fail to merge properly in the next request to that domain, so that you end up sending cookies that overlap (with duplicate names or potentially even duplicate names + values).\n\nThis can be resolved either by simply not adding an explicit domain to cookies that you specify in this way, or by using the method `add_cookies_manually` to add these extra cookies to the session before you send off any requests that require them.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ThomasAitken/scrapy-sessions",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scrapy-sessions",
    "package_url": "https://pypi.org/project/scrapy-sessions/",
    "platform": "",
    "project_url": "https://pypi.org/project/scrapy-sessions/",
    "project_urls": {
      "Homepage": "https://github.com/ThomasAitken/scrapy-sessions"
    },
    "release_url": "https://pypi.org/project/scrapy-sessions/0.9/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Session management extension for Scrapy.",
    "version": "0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10982139,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "264ba6d618bf473c84ed6300110d61939e279763f7ed6f3cde8d00548f53b4f5",
          "md5": "b4c134942cacde25a563ec48d7000630",
          "sha256": "b737a24ea3cf0381dbd1e995d7d3f07a2c4f467712e205203a7f60f42f9048e0"
        },
        "downloads": -1,
        "filename": "scrapy_sessions-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4c134942cacde25a563ec48d7000630",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2498,
        "upload_time": "2021-04-29T04:30:52",
        "upload_time_iso_8601": "2021-04-29T04:30:52.645405Z",
        "url": "https://files.pythonhosted.org/packages/26/4b/a6d618bf473c84ed6300110d61939e279763f7ed6f3cde8d00548f53b4f5/scrapy_sessions-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70191918c1d9c08390485f0bbd011bd623ea8a57040e4fa00262ef5344d0dbc4",
          "md5": "38925e6af24bf4058f8c166392c47896",
          "sha256": "ef222262dfb68c0d8d2c6e3e8a81d774f5070abb84f8e021b163d75cd97aadfd"
        },
        "downloads": -1,
        "filename": "scrapy-sessions-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "38925e6af24bf4058f8c166392c47896",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1156,
        "upload_time": "2021-04-29T04:30:53",
        "upload_time_iso_8601": "2021-04-29T04:30:53.885465Z",
        "url": "https://files.pythonhosted.org/packages/70/19/1918c1d9c08390485f0bbd011bd623ea8a57040e4fa00262ef5344d0dbc4/scrapy-sessions-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13d1da97dc86956ebe992be679328b86c07d81d0d2c9b3b5c9670a75fcfdf186",
          "md5": "b6d67c7f245f26fb5da47937510d947f",
          "sha256": "a5f438528704bf8eec1334dbdce3fdc9b8f07e957feed81f0e10a1361f310f64"
        },
        "downloads": -1,
        "filename": "scrapy_sessions-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6d67c7f245f26fb5da47937510d947f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6978,
        "upload_time": "2021-04-29T04:45:53",
        "upload_time_iso_8601": "2021-04-29T04:45:53.974855Z",
        "url": "https://files.pythonhosted.org/packages/13/d1/da97dc86956ebe992be679328b86c07d81d0d2c9b3b5c9670a75fcfdf186/scrapy_sessions-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05fb919d8b3114495a9a704d0d88b6897757ad488ec55a81237af8cf1711cb2d",
          "md5": "0491fec29b9f34bafb484a9645111e8f",
          "sha256": "f2ac74f20137078844a72deb228b5677de4b67d9e3719f2c2d2c09636dd8597d"
        },
        "downloads": -1,
        "filename": "scrapy-sessions-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0491fec29b9f34bafb484a9645111e8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4783,
        "upload_time": "2021-04-29T04:45:55",
        "upload_time_iso_8601": "2021-04-29T04:45:55.138740Z",
        "url": "https://files.pythonhosted.org/packages/05/fb/919d8b3114495a9a704d0d88b6897757ad488ec55a81237af8cf1711cb2d/scrapy-sessions-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e97c67a481e2c88332fcda60c8259ab7f6fbbbd3496df5e5e8b9ee544b0d819",
          "md5": "413b395ddfd69e323454a1006a18d24e",
          "sha256": "0afbf393829c9134dfb16831dc46b5b2cc3a0b97d4065465c9b67188f8e1b8b3"
        },
        "downloads": -1,
        "filename": "scrapy_sessions-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "413b395ddfd69e323454a1006a18d24e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7167,
        "upload_time": "2021-04-30T02:12:18",
        "upload_time_iso_8601": "2021-04-30T02:12:18.583291Z",
        "url": "https://files.pythonhosted.org/packages/0e/97/c67a481e2c88332fcda60c8259ab7f6fbbbd3496df5e5e8b9ee544b0d819/scrapy_sessions-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b801e44cb753a6ea9698f7191d4f722d3a41a038884ba975a1ec7f5705203f6d",
          "md5": "639ac88ef0309a00839f9db0bb23930a",
          "sha256": "2d60247a2a2376314f85ed0f69521c545dde25184d24d86e235dde1b25b0edee"
        },
        "downloads": -1,
        "filename": "scrapy-sessions-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "639ac88ef0309a00839f9db0bb23930a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4916,
        "upload_time": "2021-04-30T02:12:19",
        "upload_time_iso_8601": "2021-04-30T02:12:19.936828Z",
        "url": "https://files.pythonhosted.org/packages/b8/01/e44cb753a6ea9698f7191d4f722d3a41a038884ba975a1ec7f5705203f6d/scrapy-sessions-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "542e37402ace0f04a325f1a6700ddbdd96672bad7820718e7e881cf050799dc7",
          "md5": "f7c8a96c787e8fd912df944677b009f0",
          "sha256": "45c2ee4e7c8090a727dcf72430c25ced3d63e5a7d26bc8a3c3219c691f08d64a"
        },
        "downloads": -1,
        "filename": "scrapy_sessions-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7c8a96c787e8fd912df944677b009f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7211,
        "upload_time": "2021-04-30T04:08:56",
        "upload_time_iso_8601": "2021-04-30T04:08:56.475360Z",
        "url": "https://files.pythonhosted.org/packages/54/2e/37402ace0f04a325f1a6700ddbdd96672bad7820718e7e881cf050799dc7/scrapy_sessions-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be913c37fcc73ce85fd4a4661cf3a790175916e7d2a4923337b0bee6c450e680",
          "md5": "d40ca53e78d68b0fe805bd62a14f2e72",
          "sha256": "d43a34df505cac76e595d3f3f146bc1eba6706ef47fd082a8dabc87ba216c5ec"
        },
        "downloads": -1,
        "filename": "scrapy-sessions-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d40ca53e78d68b0fe805bd62a14f2e72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4928,
        "upload_time": "2021-04-30T04:08:57",
        "upload_time_iso_8601": "2021-04-30T04:08:57.648422Z",
        "url": "https://files.pythonhosted.org/packages/be/91/3c37fcc73ce85fd4a4661cf3a790175916e7d2a4923337b0bee6c450e680/scrapy-sessions-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa66db063ed7db20847ffec7b645e5c1204dd83025889bc05e1f4eaa314f8425",
          "md5": "2bf77409957aa5e106f49be32f55aa65",
          "sha256": "43d3d41cc35b97e0af2dced9133458f5363466d7356454d85732fc69b1c20612"
        },
        "downloads": -1,
        "filename": "scrapy_sessions-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bf77409957aa5e106f49be32f55aa65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9642,
        "upload_time": "2021-04-30T07:35:12",
        "upload_time_iso_8601": "2021-04-30T07:35:12.118742Z",
        "url": "https://files.pythonhosted.org/packages/fa/66/db063ed7db20847ffec7b645e5c1204dd83025889bc05e1f4eaa314f8425/scrapy_sessions-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6c179cdf127ef2090727d816e84c0b2b7e80d95e6970f135d06d7dc9fd97a9a",
          "md5": "47d95c45c21d0160b80c38a64cebc8e6",
          "sha256": "c9be396c222f0f188f8cd91f7236250d74c8cfe0a561ac4504197d232413ba95"
        },
        "downloads": -1,
        "filename": "scrapy-sessions-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "47d95c45c21d0160b80c38a64cebc8e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8227,
        "upload_time": "2021-04-30T07:35:12",
        "upload_time_iso_8601": "2021-04-30T07:35:12.995628Z",
        "url": "https://files.pythonhosted.org/packages/b6/c1/79cdf127ef2090727d816e84c0b2b7e80d95e6970f135d06d7dc9fd97a9a/scrapy-sessions-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53cda85b572b2b4e72f54a06bdf27b36a4e39891b9969cc4a97950bc8216cf30",
          "md5": "45f648b213628787a49733cde5e895e2",
          "sha256": "7c656c6ddd524f1a196b6a7af2f6840978cb5da627373876a36893a752f1b8e4"
        },
        "downloads": -1,
        "filename": "scrapy_sessions-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45f648b213628787a49733cde5e895e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10723,
        "upload_time": "2021-05-27T00:35:07",
        "upload_time_iso_8601": "2021-05-27T00:35:07.642477Z",
        "url": "https://files.pythonhosted.org/packages/53/cd/a85b572b2b4e72f54a06bdf27b36a4e39891b9969cc4a97950bc8216cf30/scrapy_sessions-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e1986107f86eb89fb2a10e9bb9b771f66e810e592ce141280e0603016161242",
          "md5": "2ee12af7a6dc43ab49692316722383a4",
          "sha256": "865667acf438476868d065dedb33b4b5f509a392d428eed61beef44b7b808642"
        },
        "downloads": -1,
        "filename": "scrapy-sessions-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2ee12af7a6dc43ab49692316722383a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13292,
        "upload_time": "2021-05-27T00:35:08",
        "upload_time_iso_8601": "2021-05-27T00:35:08.980110Z",
        "url": "https://files.pythonhosted.org/packages/6e/19/86107f86eb89fb2a10e9bb9b771f66e810e592ce141280e0603016161242/scrapy-sessions-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaf15fb1b738dcd4eaf2387cdc58bafcc91c091020b6b470bf0df88637a0e6f1",
          "md5": "e07784bdf3179dc3eb70df39fb7f2231",
          "sha256": "01599db32438d95d774ccdc7ea643dcf979aadd12495573b7b74ebbd99d181ba"
        },
        "downloads": -1,
        "filename": "scrapy_sessions-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e07784bdf3179dc3eb70df39fb7f2231",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11164,
        "upload_time": "2021-06-11T03:59:34",
        "upload_time_iso_8601": "2021-06-11T03:59:34.896200Z",
        "url": "https://files.pythonhosted.org/packages/ea/f1/5fb1b738dcd4eaf2387cdc58bafcc91c091020b6b470bf0df88637a0e6f1/scrapy_sessions-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80afb720272cccd251c8fc40a51a6c8ec0d82d6207119a7ccffb8dabc460042b",
          "md5": "b10d6396b22054a3f1f54473ba1b60e3",
          "sha256": "b05a886e4af00f164506071b48be4d5d4826e149b13b5c2e43f5da91628debab"
        },
        "downloads": -1,
        "filename": "scrapy-sessions-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b10d6396b22054a3f1f54473ba1b60e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14046,
        "upload_time": "2021-06-11T03:59:36",
        "upload_time_iso_8601": "2021-06-11T03:59:36.014372Z",
        "url": "https://files.pythonhosted.org/packages/80/af/b720272cccd251c8fc40a51a6c8ec0d82d6207119a7ccffb8dabc460042b/scrapy-sessions-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4bb81bc6999de03f050b25047e0fc88be10d372d2060c60bf3e8e993aa628b5",
          "md5": "e2bb4db409f4a42735641e487ef0a24d",
          "sha256": "12f0522f194c8d40b87e67d9af812c22c638f2b8309ba4471e15db11d12488f1"
        },
        "downloads": -1,
        "filename": "scrapy_sessions-0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2bb4db409f4a42735641e487ef0a24d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12585,
        "upload_time": "2021-07-06T02:54:30",
        "upload_time_iso_8601": "2021-07-06T02:54:30.064932Z",
        "url": "https://files.pythonhosted.org/packages/a4/bb/81bc6999de03f050b25047e0fc88be10d372d2060c60bf3e8e993aa628b5/scrapy_sessions-0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61607eaa41afb5a644379990cb013e2209a36d440d95e0fbaa2466aa9b47179f",
          "md5": "37778fb37ba124f84317aad0a87e6454",
          "sha256": "8601cdecb588ce36bce8a48b9f97016c47530df2a035800a8bb5d6f95c3e2c90"
        },
        "downloads": -1,
        "filename": "scrapy-sessions-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "37778fb37ba124f84317aad0a87e6454",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16410,
        "upload_time": "2021-07-06T02:54:31",
        "upload_time_iso_8601": "2021-07-06T02:54:31.258254Z",
        "url": "https://files.pythonhosted.org/packages/61/60/7eaa41afb5a644379990cb013e2209a36d440d95e0fbaa2466aa9b47179f/scrapy-sessions-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "176a5d578c866c650b9e7270e494ba1f3dca01501d1bc1872245b5defbb336b8",
          "md5": "7ec9538f5ffd055210e8cde8a5c1a01c",
          "sha256": "0a6c4c81707d95b0da7ce60ee5e4b27d0f0994428c4a8ed6b569efd4d91ee5ab"
        },
        "downloads": -1,
        "filename": "scrapy_sessions-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ec9538f5ffd055210e8cde8a5c1a01c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12605,
        "upload_time": "2021-07-23T00:08:21",
        "upload_time_iso_8601": "2021-07-23T00:08:21.194928Z",
        "url": "https://files.pythonhosted.org/packages/17/6a/5d578c866c650b9e7270e494ba1f3dca01501d1bc1872245b5defbb336b8/scrapy_sessions-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e794935b1d21e2a44c52e84e8b17e1461d311eb990d4e81e8288522a6af78c78",
          "md5": "01e601a03cc1519290c4b9aa3a314c93",
          "sha256": "593230da566fe98ba80ef45f3f45b565209a116cc0a12432e26a697cf7826297"
        },
        "downloads": -1,
        "filename": "scrapy-sessions-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "01e601a03cc1519290c4b9aa3a314c93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16429,
        "upload_time": "2021-07-23T00:08:22",
        "upload_time_iso_8601": "2021-07-23T00:08:22.932912Z",
        "url": "https://files.pythonhosted.org/packages/e7/94/935b1d21e2a44c52e84e8b17e1461d311eb990d4e81e8288522a6af78c78/scrapy-sessions-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "176a5d578c866c650b9e7270e494ba1f3dca01501d1bc1872245b5defbb336b8",
        "md5": "7ec9538f5ffd055210e8cde8a5c1a01c",
        "sha256": "0a6c4c81707d95b0da7ce60ee5e4b27d0f0994428c4a8ed6b569efd4d91ee5ab"
      },
      "downloads": -1,
      "filename": "scrapy_sessions-0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7ec9538f5ffd055210e8cde8a5c1a01c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12605,
      "upload_time": "2021-07-23T00:08:21",
      "upload_time_iso_8601": "2021-07-23T00:08:21.194928Z",
      "url": "https://files.pythonhosted.org/packages/17/6a/5d578c866c650b9e7270e494ba1f3dca01501d1bc1872245b5defbb336b8/scrapy_sessions-0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e794935b1d21e2a44c52e84e8b17e1461d311eb990d4e81e8288522a6af78c78",
        "md5": "01e601a03cc1519290c4b9aa3a314c93",
        "sha256": "593230da566fe98ba80ef45f3f45b565209a116cc0a12432e26a697cf7826297"
      },
      "downloads": -1,
      "filename": "scrapy-sessions-0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "01e601a03cc1519290c4b9aa3a314c93",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16429,
      "upload_time": "2021-07-23T00:08:22",
      "upload_time_iso_8601": "2021-07-23T00:08:22.932912Z",
      "url": "https://files.pythonhosted.org/packages/e7/94/935b1d21e2a44c52e84e8b17e1461d311eb990d4e81e8288522a6af78c78/scrapy-sessions-0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}