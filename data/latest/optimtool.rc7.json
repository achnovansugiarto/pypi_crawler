{
  "info": {
    "author": "林景",
    "author_email": "linjing010729@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<h1 align=\"center\">optimtool</h1>\r\n\r\n<p align=\"center\">\r\n<b>The fundamental package for scientific research in optimization.<sup><a href=\"https://github.com/linjing-lab/optimtool/tree/master/examples/doc\">[?]</a></sup></b>\r\n</p>\r\n\r\n<p align='center'>\r\n    <a href='https://www.oscs1024.com/cd/1527939640076619776?sign=522150ac'>\r\n        <img src='https://www.oscs1024.com/platform/badge/linjing-lab/optimtool.svg?size=small' alt='OSCS Status' height='20'/>\r\n    </a>\r\n    <a href='https://pepy.tech/project/optimtool'>\r\n        <img src=\"https://pepy.tech/badge/optimtool\" alt=\"Total Downloads\" height=\"20\"/>\r\n    </a>\r\n    <a href='https://pepy.tech/project/optimtool'>\r\n        <img src=\"https://pepy.tech/badge/optimtool/month\" alt=\"Monthly Downloads\" height=\"20\"/> \r\n    </a>\r\n    <a href='https://code.visualstudio.com/'>\r\n        <img src=\"https://pepy.tech/badge/optimtool/week\" alt=\"Weekly Downloads\" height=\"20\"/> \r\n    </a>\r\n</p>\r\n\r\nIf you want to participate in the development, please follow the [baseline](./baseline.md).\r\n\r\n如果你想参与开发，请遵循[baseline](./baseline.md)。\r\n\r\n简体中文 | [English](./README_en.md)\r\n\r\n## 项目介绍\r\n\r\n&emsp;&emsp;optimtool采用了北京大学出版的《最优化：建模、算法与理论》这本书中的部分理论方法框架，运用了 [`Numpy`](https://github.com/numpy/numpy) 包高效处理数组间运算等的特性，巧妙地应用了 [`Sympy`](https://github.com/sympy/sympy) 内部支持的 .jacobian 等方法，并结合 Python 内置函数 dict 与 zip 实现了 Sympy 矩阵到 Numpy 矩阵的转换，最终设计了一个用于最优化科学研究领域的Python工具包。 研究人员可以通过简单的 [`pip`](https://github.com/pypa/pip) 指令进行下载与使用。\r\n\r\n## 项目结构\r\n\r\n```textile\r\n|- optimtool\r\n    |-- constrain\r\n        |-- __init__.py\r\n        |-- equal.py\r\n        |-- mixequal.py\r\n        |-- unequal.py\r\n    |-- example\r\n        |-- __init__.py\r\n        |-- Lasso.py\r\n        |-- WanYuan.py\r\n    |-- hybrid\r\n        |-- __init__.py\r\n        |-- approximate_point_gradient.py\r\n    |-- unconstrain\r\n        |-- __init__.py\r\n        |-- gradient_descent.py\r\n        |-- newton.py\r\n        |-- newton_quasi.py\r\n        |-- nonlinear_least_square.py\r\n        |-- trust_region.py  \r\n    |-- __init__.py\r\n    |-- _convert.py\r\n    |-- _drive.py\r\n    |-- _kernel.py\r\n    |-- _search.py\r\n    |-- _typing.py\r\n    |-- _utils.py\r\n    |-- _version.py\r\n```\r\n&emsp;&emsp;因为在求解不同的目标函数的全局或局部收敛点时，不同的求取收敛点的方法会有不同的收敛效率以及不同的适用范围，而且在研究过程中不同领域的研究方法被不断地提出、修改、完善、扩充，所以这些方法成了现在人们口中的`最优化方法`。 此项目中的所有内部支持的算法，都是在范数、导数、凸集、凸函数、共轭函数、次梯度和最优化理论等基础方法论的基础上进行设计与完善的。\r\n\r\n&emsp;&emsp;optimtool内置了诸如Barzilar Borwein非单调梯度下降法、修正牛顿法、有限内存BFGS方法、截断共轭梯度法-信赖域方法、高斯-牛顿法等无约束优化领域收敛效率与性质较好的算法，以及用于解决约束优化问题的二次罚函数法、增广拉格朗日法等算法。\r\n\r\n## 开始使用\r\n\r\n### 无约束优化算法（unconstrain）\r\n\r\n```python\r\nimport optimtool.unconstrain as ou\r\nou.[方法名].[函数名]([目标函数], [参数表], [初始迭代点])\r\n```\r\n\r\n#### 梯度下降法（gradient_descent）\r\n\r\n```python\r\nou.gradient_descent.[函数名]([目标函数], [参数表], [初始迭代点])\r\n```\r\n\r\n| 方法头                                                                                                                                 | 解释                                   |\r\n| ----------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------ |\r\n| solve(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, epsilon: float=1e-10, k: int=0) -> OutputType                                                             | 通过解方程的方式来求解精确步长                      |\r\n| steepest(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", epsilon: float=1e-10, k: int=0) -> OutputType                                           | 使用线搜索方法求解非精确步长（默认使用wolfe线搜索）         |\r\n| barzilar_borwein(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"Grippo\", c1: float=0.6, beta: float=0.6, alpha: float=1, epsilon: float=1e-10, k: int=0) -> OutputType | 使用Grippo与ZhangHanger提出的非单调线搜索方法更新步长 |\r\n\r\n#### 牛顿法（newton)\r\n\r\n```python\r\nou.newton.[函数名]([目标函数], [参数表], [初始迭代点])\r\n```\r\n\r\n| 方法头                                                                                             | 解释                                |\r\n| ----------------------------------------------------------------------------------------------- | --------------------------------- |\r\n| classic(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, epsilon: float=1e-10, k: int=0) -> OutputType                        | 通过直接对目标函数二阶导矩阵（海瑟矩阵）进行求逆来获取下一步的步长 |\r\n| modified(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", m: int=20, epsilon: float=1e-10, k: int=0) -> OutputType | 修正当前海瑟矩阵保证其正定性（目前只接入了一种修正方法）      |\r\n| CG(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", epsilon: float=1e-6, k: int=0) -> OutputType              | 采用牛顿-共轭梯度法求解梯度（非精确牛顿法的一种）         |\r\n\r\n#### 拟牛顿法（newton_quasi）\r\n\r\n```python\r\nou.newton_quasi.[函数名]([目标函数], [参数表], [初始迭代点])\r\n```\r\n\r\n| 方法头                                                                                          | 解释              |\r\n| -------------------------------------------------------------------------------------------- | --------------- |\r\n| bfgs(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", m: float=20, epsilon: float=1e-10, k: int=0) -> OutputType  | BFGS方法更新海瑟矩阵    |\r\n| dfp(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", m: float=20, epsilon: float=1e-4, k: int=0) -> OutputType    | DFP方法更新海瑟矩阵     |\r\n| L_BFGS(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", m: float=6, epsilon: float=1e-10, k: int=0) -> OutputType | 双循环方法更新BFGS海瑟矩阵 |\r\n\r\n#### 非线性最小二乘法（nonlinear_least_square）\r\n\r\n```python\r\nou.nonlinear_least_square.[函数名]([目标函数], [参数表], [初始迭代点])\r\n```\r\n\r\n| 方法头                                                                                                                                                  | 解释                         |\r\n| ---------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------- |\r\n| gauss_newton(funcr: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", epsilon: float=1e-10, k: int=0) -> OutputType                                                        | 高斯-牛顿提出的方法框架，包括OR分解等操作     |\r\n| levenberg_marquardt(funcr: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, m: float=100, lamk: float=1, eta: float=0.2, p1: float=0.4, p2: float=0.9, gamma1: float=0.7, gamma2: float=1.3, epsilon: float=1e-10, k: int=0) -> OutputType | Levenberg Marquardt提出的方法框架 |\r\n\r\n#### 信赖域方法（trust_region）\r\n\r\n```python\r\nou.trust_region.[函数名]([目标函数], [参数表], [初始迭代点])\r\n```\r\n\r\n| 方法头                                                                                                                                               | 解释                  |\r\n| ------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- |\r\n| steihaug_CG(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, m: float=100, r0: float=1, rmax: float=2, eta: float=0.2, p1: float=0.4, p2: float=0.6, gamma1: float=0.5, gamma2: float=1.5, epsilon: float=1e-6, k: int=0) -> OutputType | 截断共轭梯度法在此方法中被用于搜索步长 |\r\n\r\n### 约束优化算法（constrain）\r\n\r\n```python\r\nimport optimtool.constrain as oc\r\noc.[方法名].[函数名]([目标函数], [参数表], [等式约束表], [不等式约数表], [初始迭代点])\r\n```\r\n\r\n#### 等式约束（equal）\r\n\r\n```python\r\noc.equal.[函数名]([目标函数], [参数表], [等式约束表], [初始迭代点])\r\n```\r\n\r\n| 方法头                                                                                                                                                   | 解释        |\r\n| ----------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |\r\n| penalty_quadratice(funcs: FuncArray, args: FuncArray, cons: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", sigma: float=10, p: float=2, epsilon: float=1e-4, k: int=0) -> OutputType                     | 增加二次罚项    |\r\n| lagrange_augmentede(funcs: FuncArray, args: ArgArray, cons: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", lamk: float=6, sigma: float=10, p: float=2, etak: float=1e-4, epsilon: float=1e-6, k: int=0) -> OutputType | 增广拉格朗日乘子法 |\r\n\r\n#### 不等式约束（unequal）\r\n\r\n```python\r\noc.unequal.[函数名]([目标函数], [参数表], [不等式约束表], [初始迭代点])\r\n```\r\n\r\n| 方法头                                                                                                                                                                      | 解释        |\r\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | --------- |\r\n| penalty_quadraticu(funcs: FuncArray, args: ArgArray, cons: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", sigma: float=10, p: float=0.4, epsilon: float=1e-10, k: int=0) -> OutputType                                     | 增加二次罚项    |\r\n| penalty_interior_fraction(funcs: FuncArray, args: ArgArray, cons: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", sigma: float=12, p: float=0.6, epsilon: float=1e-6, k: int=0) -> OutputType                              | 增加分式函数罚项  |\r\n| lagrange_augmentedu(funcs: FuncArray, args: ArgArray, cons: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", muk: float=10, sigma: float=8, alpha: float=0.2, beta: float=0.7, p: float=2, eta: float=1e-1, epsilon: float=1e-4, k: int=0) -> OutputType | 增广拉格朗日乘子法 |\r\n\r\n#### 混合等式约束（mixequal）\r\n\r\n```python\r\noc.mixequal.[函数名]([目标函数], [参数表], [等式约束表], [不等式约束表], [初始迭代点])\r\n```\r\n\r\n| 方法头                                                                                                                                                                                                  | 解释        |\r\n| ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |\r\n| penalty_quadraticm(funcs: FuncArray, args: ArgArray, cons_equal: FuncArray, cons_unequal: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", sigma: float=10, p: float=0.6, epsilon: float=1e-10, k: int=0) -> OutputType                                             | 增加二次罚项    |\r\n| penalty_L1(funcs: FuncArray, args: ArgArray, cons_equal: FuncArray, cons_unequal: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", sigma: float=1, p: float=0.6, epsilon: float=1e-10, k: int=0) -> OutputType                                                     | L1精确罚函数法  |\r\n| lagrange_augmentedm(funcs: FuncArray, args: ArgArray, cons_equal: FuncArray, cons_unequal: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", lamk: float=6, muk: float=10, sigma: float=8, alpha: float=0.5, beta: float=0.7, p: float=2, eta: float=1e-3, epsilon: float=1e-4, k: int=0) -> OutputType | 增广拉格朗日乘子法 |\r\n\r\n### 方法的应用（example）\r\n\r\n```python\r\nimport optimtool.example as oe\r\n```\r\n\r\n#### Lasso问题（Lasso）\r\n\r\n```python\r\noe.Lasso.[函数名]([矩阵A], [矩阵b], [因子mu], [参数表], [初始迭代点])\r\n```\r\n\r\n| 方法头                                                                                                     | 解释               |\r\n| ------------------------------------------------------------------------------------------------------- | ---------------- |\r\n| gradient(A: NDArray, b: NDArray, mu: float, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, delta: float=10, alp: float=1e-3, epsilon: float=1e-2, k: int=0) -> OutputType | 光滑化Lasso函数法      |\r\n| subgradient(A: NDArray, b: NDArray, mu: float, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, alphak: float=2e-2, epsilon: float=1e-3, k: int=0) -> OutputType             | 次梯度法Lasso避免一阶不可导 |\r\n| penalty(A: NDArray, b: NDArray, mu: float, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, gamma: float=0.01, epsilon: float=1e-6, k: int=0) -> OutputType | 罚函数法 |\r\n| approximate_point(A: NDArray, b: NDArray, mu: float, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, epsilon: float=1e-4, k: int=0) -> OutputType | 邻近算子更新 |\r\n\r\n#### 曲线相切问题（WanYuan）\r\n\r\n```python\r\noe.WanYuan.[函数名]([直线的斜率], [直线的截距], [二次项系数], [一次项系数], [常数项], [圆心横坐标], [圆心纵坐标], [初始迭代点])\r\n```\r\n\r\n问题描述：\r\n\r\n```text\r\n给定直线的斜率和截距，给定一个抛物线函数的二次项系数，一次项系数与常数项。 要求解一个给定圆心的圆，该圆同时与抛物线、直线相切，若存在可行方案，请给出切点的坐标。\r\n```\r\n\r\n| 方法头                                                             | 解释                   |\r\n| --------------------------------------------------------------- | -------------------- |\r\n| solution(m: float, n: float, a: float, b: float, c: float, x3: float, y3: float, x_0: tuple, draw: bool=False, eps: float=1e-10) -> None | 使用高斯-牛顿方法求解构造的7个残差函数 |\r\n\r\n### 混合优化算法（hybrid）\r\n\r\n```python\r\nimport optimtool.hybrid as oh\r\n```\r\n\r\n#### 近似点梯度下降法（approximate_point_gradient）\r\n\r\n## LICENSE\r\n\r\n[MIT LICENSE](./LICENSE)\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/linjing-lab/optimtool/tags",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/linjing-lab/optimtool",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "optimtool",
    "package_url": "https://pypi.org/project/optimtool/",
    "platform": null,
    "project_url": "https://pypi.org/project/optimtool/",
    "project_urls": {
      "Download": "https://github.com/linjing-lab/optimtool/tags",
      "Homepage": "https://github.com/linjing-lab/optimtool",
      "Source": "https://github.com/linjing-lab/optimtool/tree/master/optimtool/",
      "Tracker": "https://github.com/linjing-lab/optimtool/issues"
    },
    "release_url": "https://pypi.org/project/optimtool/2.4.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The fundamental package for scientific research in optimization.",
    "version": "2.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15720901,
  "releases": {
    "2.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de623725c8224ff153cd82c8057f8c1270484cb40d1d8426cd61ca890c0bf38d",
          "md5": "ff4ac6ea0fb0917d6b72c11c277cbc2d",
          "sha256": "0b77f465404bc77c0a2210354fa17f914917066556434abc74af53ae631c528a"
        },
        "downloads": -1,
        "filename": "optimtool-2.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ff4ac6ea0fb0917d6b72c11c277cbc2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9138,
        "upload_time": "2021-12-28T13:26:34",
        "upload_time_iso_8601": "2021-12-28T13:26:34.160206Z",
        "url": "https://files.pythonhosted.org/packages/de/62/3725c8224ff153cd82c8057f8c1270484cb40d1d8426cd61ca890c0bf38d/optimtool-2.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ebfb3dcb05d6df4b047ae8595d02e95b92dbe9b38104f5b0c45d6a6839c0752",
          "md5": "36261e93b1b78bb629ce35ec52536692",
          "sha256": "833102930e4afdbe2ce6b7b769709df865968ae5cc552bb7f2deeb597a7a3381"
        },
        "downloads": -1,
        "filename": "optimtool-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "36261e93b1b78bb629ce35ec52536692",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12863,
        "upload_time": "2021-12-28T17:15:12",
        "upload_time_iso_8601": "2021-12-28T17:15:12.945358Z",
        "url": "https://files.pythonhosted.org/packages/1e/bf/b3dcb05d6df4b047ae8595d02e95b92dbe9b38104f5b0c45d6a6839c0752/optimtool-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.1rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62ef1db68de7280ea9967e8d40426ea3845b4e2a8398d42ccfa9699acba069f0",
          "md5": "98512f5cab817d6970c0787dcf77b0ee",
          "sha256": "77fab0155a10f9013ae75121f53413ea9345cd85833cc3187fa2990f14c54ecd"
        },
        "downloads": -1,
        "filename": "optimtool-2.3.1rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "98512f5cab817d6970c0787dcf77b0ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13288,
        "upload_time": "2021-12-28T21:33:43",
        "upload_time_iso_8601": "2021-12-28T21:33:43.876906Z",
        "url": "https://files.pythonhosted.org/packages/62/ef/1db68de7280ea9967e8d40426ea3845b4e2a8398d42ccfa9699acba069f0/optimtool-2.3.1rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30851a4a947b3b12c11f229957f57876390f2d554e5760e11a9c183f777ac7fc",
          "md5": "b6e0043136c39951ba059f4e0c14e51f",
          "sha256": "03dcf3f8eb2e2dc17650396f7de61e9eb41e516dfd9d4169c0b37381d4fadd11"
        },
        "downloads": -1,
        "filename": "optimtool-2.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b6e0043136c39951ba059f4e0c14e51f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15386,
        "upload_time": "2022-01-09T14:38:11",
        "upload_time_iso_8601": "2022-01-09T14:38:11.428144Z",
        "url": "https://files.pythonhosted.org/packages/30/85/1a4a947b3b12c11f229957f57876390f2d554e5760e11a9c183f777ac7fc/optimtool-2.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad8b7b19a3d2bb50c39e8818403f3ea030cc2c602da526c6fe504d81e58d8788",
          "md5": "6a83ecebab55e55cec6443f38b0fba1d",
          "sha256": "3d836d5c8c8f88d01e9f5dbc659fc485b3bda218211c84a76f2a1d6d0b73b1c1"
        },
        "downloads": -1,
        "filename": "optimtool-2.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6a83ecebab55e55cec6443f38b0fba1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15027,
        "upload_time": "2022-04-25T05:45:06",
        "upload_time_iso_8601": "2022-04-25T05:45:06.021477Z",
        "url": "https://files.pythonhosted.org/packages/ad/8b/7b19a3d2bb50c39e8818403f3ea030cc2c602da526c6fe504d81e58d8788/optimtool-2.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c21de652354cee7569db0242936b5d93bbc5b061682ee1721b0c111f7243235a",
          "md5": "672795265d4d1a64c7b8945ec887bf9e",
          "sha256": "6d619a0828513150b6b73a2904463841267b2f021682d8310336f0ea2013466f"
        },
        "downloads": -1,
        "filename": "optimtool-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "672795265d4d1a64c7b8945ec887bf9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24086,
        "upload_time": "2022-11-08T13:30:14",
        "upload_time_iso_8601": "2022-11-08T13:30:14.650262Z",
        "url": "https://files.pythonhosted.org/packages/c2/1d/e652354cee7569db0242936b5d93bbc5b061682ee1721b0c111f7243235a/optimtool-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cf30e7a71f03a5d89ce0d21db4bd11f5fc342c4b1268fda8d3f1fcd8192aa25",
          "md5": "962853a2708c30e6d607ddb55def1b2f",
          "sha256": "d736d660fcba7738c7df7f65fece7ff16fc72ff219b3974bb7bc7103aa59eba2"
        },
        "downloads": -1,
        "filename": "optimtool-2.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "962853a2708c30e6d607ddb55def1b2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23771,
        "upload_time": "2022-11-10T06:16:18",
        "upload_time_iso_8601": "2022-11-10T06:16:18.021453Z",
        "url": "https://files.pythonhosted.org/packages/5c/f3/0e7a71f03a5d89ce0d21db4bd11f5fc342c4b1268fda8d3f1fcd8192aa25/optimtool-2.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cf30e7a71f03a5d89ce0d21db4bd11f5fc342c4b1268fda8d3f1fcd8192aa25",
        "md5": "962853a2708c30e6d607ddb55def1b2f",
        "sha256": "d736d660fcba7738c7df7f65fece7ff16fc72ff219b3974bb7bc7103aa59eba2"
      },
      "downloads": -1,
      "filename": "optimtool-2.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "962853a2708c30e6d607ddb55def1b2f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23771,
      "upload_time": "2022-11-10T06:16:18",
      "upload_time_iso_8601": "2022-11-10T06:16:18.021453Z",
      "url": "https://files.pythonhosted.org/packages/5c/f3/0e7a71f03a5d89ce0d21db4bd11f5fc342c4b1268fda8d3f1fcd8192aa25/optimtool-2.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}