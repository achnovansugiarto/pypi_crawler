{
  "info": {
    "author": "pv",
    "author_email": "pv@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "FEDOT\n============\n\n.. start-badges\n.. list-table::\n    :stub-columns: 1\n\n    * - package\n      - | |pypi| |py_6| |py_7| |py_8|\n    * - tests\n      - | |build| |coverage|\n    * - docs\n      - |docs|\n    * - license\n      - | |license|\n\n.. end-badges\n\nThis repository contains Fedot - a framework for automated modeling and machine learning. It can build composite models for the different real-world processes in an automated way using an evolutionary approach.\n\nComposite models - the models with heterogeneous graph-based structure, that can consist of ML models, domain-specific models, equation-based models, statistical, and even other composite models. Composite modelling allows obtaining efficient multi-scale solutions for various applied problems.\n\nFedot can be used for classification, regression, clustering, time series forecasting, and other similar tasks. Also, the derived solutions for other problems (e.g. bayesian generation of synthetic data) can be build using Fedot.Core.\n\nThe project is maintained by the research team of Natural Systems Simulation Lab, which is a part of the National Center for Cognitive Research of ITMO University.\n\nInstallation\n============\n\nCommon installation:\n\n.. code-block::\n\n   $ pip install fedot\n\nIn order to work with FEDOT source code:\n\n.. code-block::\n\n    $ git clone https://github.com/nccr-itmo/FEDOT.git\n    $ cd FEDOT\n    $ pip install -r requirements.txt\n    $ pytest -s test\n\n\nFEDOT features\n==============\n- The generation of high-quality variable-shaped machine learning pipelines for various tasks: binary/multiclass classification, regression, clustering, time series forecasting;\n- The structural learning of composite models with different nature (hybrid, bayesian, deep learning, etc) using custom metrics;\n- The seamless integration of the custom models (including domain-specific), frameworks and algorithms into pipelines;\n- Benchmarking utilities that can run real-world cases (the ready-to-use examples are provided for credit scoring, sea surface height forecasting, oil production forecasting, etc), state-of-the-art-datasets (like PMLB) and synthetic data.\n\n\nHow to use\n==========\n\nThe main purpose of FEDOT is to identify a suitable composite model for a given dataset.\nThe model is obtained via optimization process (we also call it 'composing').\\\nFirstly, you need to prepare datasets for fit and validate and specify a task\nthat you going to solve:\n\n.. code-block:: python\n\n  task = Task(TaskTypesEnum.classification)\n  dataset_to_compose = InputData.from_csv(train_file_path, task=task)\n  dataset_to_validate = InputData.from_csv(test_file_path, task=task)\n\nThen, chose a set of models that can be included in the composite model, and the optimized metric function:\n\n.. code-block:: python\n\n  available_model_types, _ = ModelTypesRepository().suitable_model(task_type=task.task_type)\n  metric_function = MetricsRepository().metric_by_id(ClassificationMetricsEnum.ROCAUC)\n\nNext, you need to specify requirements for composer.\nIn this case, GPComposer is chosen that is based on evolutionary algorithm.\n\n.. code-block:: python\n\n  composer_requirements = GPComposerRequirements(\n    primary=available_model_types,\n    secondary=available_model_types, max_arity=3,\n    max_depth=3, pop_size=20, num_of_generations=20,\n    crossover_prob=0.8, mutation_prob=0.8, max_lead_time=20)\n  composer = GPComposer()\n\nNow you can run the optimization and obtain a composite model:\n\n.. code-block:: python\n\n  chain_evo_composed = composer.compose_chain(data=dataset_to_compose,\n                                              initial_chain=None,\n                                              composer_requirements=composer_requirements,\n                                              metrics=metric_function,\n                                              is_visualise=False)\n\nFinally, you can test the resulted model on the validation dataset:\n\n.. code-block:: python\n\n  roc_on_valid_evo_composed = calculate_validation_metric(chain_evo_composed,\n                                                          dataset_to_validate)\n  print(f'Composed ROC AUC is {round(roc_on_valid_evo_composed, 3)}')\n\nExtended examples:\n\n- Credit scoring problem, i.e. `binary classification task <https://github.com/nccr-itmo/FEDOT/blob/master/cases/credit_scoring_problem.py>`__\n- Time series forecasting, i.e. `random process regression <https://github.com/nccr-itmo/FEDOT/blob/master/cases/metocean_forecasting_problem.py>`__\n\nAlso, several video tutorials are `available <https://www.youtube.com/playlist?list=PLlbcHj5ytaFUjAxpZf7FbEaanmqpDYhnc>`__ (in Russian).\n\nProject structure\n=================\n\nThe latest stable release of FEDOT is on the `master branch <https://github.com/nccr-itmo/FEDOT/tree/master>`__. Make sure you are looking at and working on the actual code if you're looking to contribute code.\n\nThe repository includes the following directories:\n\n* Package `core <https://github.com/nccr-itmo/FEDOT/tree/master/core>`__  contains the main classes and scripts. It is a *core* of FEDOT framework\n* Package `examples <https://github.com/nccr-itmo/FEDOT/tree/master/examples>`__ includes several *how-to-use-cases* where you can start to discover how FEDOT works\n* All *unit tests* can be observed in the `test <https://github.com/nccr-itmo/FEDOT/tree/master/test>`__ directory\n* The sources of documentation are in the `docs <https://github.com/nccr-itmo/FEDOT/tree/master/docs>`__\n\nAlso you can check `benchmarking <https://github.com/ITMO-NSS-team/AutoML-benchmark>`__ repository that was developed to\nshow the comparison of FEDOT against the well-known AutoML frameworks.\n\nBasic Concepts\n===============\n\nThe main process of FEDOT work is *composing* leading to the production of the composite models.\n\n**Composer** is a block that takes meta-requirements and the evolutionary algorithm as an optimization one\nand get different chains of models to find the most appropriate solution for the case.\n\nThe result of composing and basic object user works with is the Chain:\n**Chain** is the tree-based structure of any composite model. It keeps the information of nodes relations\nand everything referred to chain properties and restructure.\n\nIn fact, any chain has two kinds of nodes:\n - **Primary nodes** are edge (leaf) nodes of the tree where initial case data is located.\n - **Secondary nodes** are all other nodes which transform data during the composing and fitting, including root node with result data.\n\nMeanwhile, every node holds the *Model* which could be ML or any other kind of model.\n\nThe referenced papers:\n\n- Kalyuzhnaya A. V. et al. Automatic evolutionary learning of composite models with knowledge enrichment //Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion. вЂ“ 2020. вЂ“ P. 43-44.\n- Kovalchuk S. V. et al. A conceptual approach to complex model management with generalized modelling patterns and evolutionary identification //Complexity. вЂ“ 2018. вЂ“ V. 2018.\n- Nikitin N. O. et al. Deadline-driven approach for multi-fidelity surrogate-assisted environmental model calibration: SWAN wind wave model case study //Proceedings of the Genetic and Evolutionary Computation Conference Companion. вЂ“ 2019. вЂ“ РЎ. 1583-1591.\n- Vychuzhanin P., Nikitin N. O., Kalyuzhnaya A. V. Robust Ensemble-Based Evolutionary Calibration of the Numerical Wind Wave Model //International Conference on Computational Science. вЂ“ Springer, Cham, 2019. вЂ“ P. 614-627.\n- Nikitin N. O. et al. Evolutionary ensemble approach for behavioral credit scoring //International Conference on Computational Science. вЂ“ Springer, Cham, 2018. вЂ“ P. 825-831.\n\nCurrent R&D and future plans\n============================\n\nAt the moment, we execute an extensive set of experiments to determine the most suitable approaches for evolutionary chain optimization, hyperparameters tuning, benchmarking, etc.\nThe different case studies from different subject areas (metocean science, oil production, seismic, robotics, economics, etc) are in progress now.\nThe various features are planned to be implemented: multi-data chains, Bayesian networks optimization, domain-specific, equation-based models involvement, model export and atomization, interpretable surrogate models, etc.\n\nAny support and contribution are welcome.\n\nDocumentation\n=============\n\nThe documentation is available in `FEDOT.Docs <https://itmo-nss-team.github.io/FEDOT.Docs>`__ repository.\n\nThe description and source code of underlying algorithms is available in `FEDOT.Algs <https://github.com/ITMO-NSS-team/FEDOT.Algs>`__ repository and its `wiki pages <https://github.com/ITMO-NSS-team/FEDOT.Algs/wiki>`__ (in Russian).\n\nAlso, FEDOT API in `Read the Docs <https://fedot.readthedocs.io/en/latest/>`__.\n\nContribution Guide\n==================\n\n- The contribution guide is available in the `repository <https://github.com/nccr-itmo/FEDOT/blob/master/docs/contributing.rst>`__.\n\nAcknowledgements\n================\n\nWe acknowledge the contributors for their important impact and the participants of the numerous scientific conferences and workshops for their valuable advice and suggestions.\n\nSupported by\n============\n\n- `National Center for Cognitive Research of ITMO University <https://actcognitive.org/>`_\n\nCitation\n========\n\n@inproceedings{kalyuzhnaya2020automatic,\n  title={Automatic evolutionary learning of composite models with knowledge enrichment},\n  author={Kalyuzhnaya, Anna V and Nikitin, Nikolay O and Vychuzhanin, Pavel and Hvatov, Alexander and Boukhanovsky, Alexander},\n  booktitle={Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion},\n  pages={43--44},\n  year={2020}}\n\n.. |docs| image:: https://readthedocs.org/projects/ebonite/badge/?style=flat\n    :target: https://fedot.readthedocs.io/en/latest/\n    :alt: Documentation Status\n\n.. |build| image:: https://github.com/nccr-itmo/FEDOT/workflows/Build/badge.svg?branch=master\n    :alt: Build Status\n    :target: https://github.com/nccr-itmo/FEDOT/actions\n\n.. |coverage| image:: https://codecov.io/gh/nccr-itmo/FEDOT/branch/master/graph/badge.svg\n    :alt: Coverage Status\n    :target: https://codecov.io/gh/nccr-itmo/FEDOT\n\n.. |pypi| image:: https://badge.fury.io/py/fedot.svg\n    :alt: Supported Python Versions\n    :target: https://badge.fury.io/py/fedot\n\n.. |py_6| image:: https://img.shields.io/badge/python_3.6-passing-success\n    :alt: Supported Python Versions\n    :target: https://img.shields.io/badge/python_3.6-passing-success\n\n.. |py_7| image:: https://img.shields.io/badge/python_3.7-passing-success\n    :alt: Supported Python Versions\n    :target: https://img.shields.io/badge/python_3.7-passing-success\n\n.. |py_8| image:: https://img.shields.io/badge/python_3.8-passing-success\n    :alt: Supported Python Versions\n    :target: https://img.shields.io/badge/python_3.8-passing-success\n\n.. |license| image:: https://img.shields.io/github/license/nccr-itmo/FEDOT\n    :alt: Supported Python Versions\n    :target: https://github.com/nccr-itmo/FEDOT/blob/master/LICENSE.md\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nccr-itmo/FEDOT",
    "keywords": "",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fedot-example-test",
    "package_url": "https://pypi.org/project/fedot-example-test/",
    "platform": "",
    "project_url": "https://pypi.org/project/fedot-example-test/",
    "project_urls": {
      "Homepage": "https://github.com/nccr-itmo/FEDOT"
    },
    "release_url": "https://pypi.org/project/fedot-example-test/0.0.4/",
    "requires_dist": [
      "scikit-optimize (==0.7.4)",
      "pandas (==1.1.0)",
      "statsmodels (==0.12.0)",
      "ete3 (==3.1.1)",
      "numpy (==1.18.0)",
      "pytest (==5.2.0)",
      "anytree (==2.8.0)",
      "typing (==3.7.4.1)",
      "scikit-learn (==0.22.1)",
      "matplotlib (==3.0.2)",
      "networkx (==2.4)",
      "xgboost (==1.0.1)",
      "Pillow (==7.1.0)",
      "imageio (==2.8.0)",
      "pydot (==1.4.1)",
      "hyperopt (==0.2.4)",
      "joblib (==0.17.0)",
      "dataclasses (==0.7) ; python_version < \"3.7\"",
      "seaborn (==0.9.0) ; python_version < \"3.7\"",
      "tensorflow (==2.1.0) ; python_version <= \"3.7\"",
      "tensorflow (==2.3.1) ; python_version == \"3.8\""
    ],
    "requires_python": ">=3.6",
    "summary": "Evolutionary structural learning framework FEDOT",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8763562,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81f4774130b999bf86bb02a4d70d73cef44281849c363847832765e292d94fae",
          "md5": "f3c5399907aece3146c76dd0e25b21c0",
          "sha256": "3916f8fa88495babf0e6b2a289037d7446fc7aa50ced65b54ac23056c6076dc3"
        },
        "downloads": -1,
        "filename": "fedot_example_test-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3c5399907aece3146c76dd0e25b21c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6478,
        "upload_time": "2020-11-27T13:12:37",
        "upload_time_iso_8601": "2020-11-27T13:12:37.942419Z",
        "url": "https://files.pythonhosted.org/packages/81/f4/774130b999bf86bb02a4d70d73cef44281849c363847832765e292d94fae/fedot_example_test-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "322d8ae35c41bcc750773c598cfb5abebf960c0d2145d7985a29a971e39b5c54",
          "md5": "570495664f086f52098412cb365c86da",
          "sha256": "0d8bc25510e24a3d044dbeba4b5ceaaa83f1fa2fe31f837d6a5b068176b7a62c"
        },
        "downloads": -1,
        "filename": "fedot_example_test-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "570495664f086f52098412cb365c86da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 65571,
        "upload_time": "2020-11-27T13:12:39",
        "upload_time_iso_8601": "2020-11-27T13:12:39.478780Z",
        "url": "https://files.pythonhosted.org/packages/32/2d/8ae35c41bcc750773c598cfb5abebf960c0d2145d7985a29a971e39b5c54/fedot_example_test-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faedd00fc8e4860020125f34e4a8cc111fd96238c3ddfe5a4f0b175a92742c9f",
          "md5": "ceba083086dd5f29d2297d9ac3c63988",
          "sha256": "b8773e44c35a759aea34e12cff4040cdb59f94b8ab20926d1031cd5c4cbecf48"
        },
        "downloads": -1,
        "filename": "fedot_example_test-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ceba083086dd5f29d2297d9ac3c63988",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 125859,
        "upload_time": "2020-11-27T14:09:31",
        "upload_time_iso_8601": "2020-11-27T14:09:31.044240Z",
        "url": "https://files.pythonhosted.org/packages/fa/ed/d00fc8e4860020125f34e4a8cc111fd96238c3ddfe5a4f0b175a92742c9f/fedot_example_test-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d29fe4cfe85cdec7c9ea7fd4f0d0e2da98f3e8bfc493c3e12aa43cbf0553e2e1",
          "md5": "0866e353d253dfea0fd99fb8b0fd8c25",
          "sha256": "9891d8709a7eb7cb597e85ad7594f78f318f9e1899085d74abdc5bee0ed95564"
        },
        "downloads": -1,
        "filename": "fedot_example_test-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0866e353d253dfea0fd99fb8b0fd8c25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 65595,
        "upload_time": "2020-11-27T14:09:32",
        "upload_time_iso_8601": "2020-11-27T14:09:32.245804Z",
        "url": "https://files.pythonhosted.org/packages/d2/9f/e4cfe85cdec7c9ea7fd4f0d0e2da98f3e8bfc493c3e12aa43cbf0553e2e1/fedot_example_test-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ffece48d452f3ad5f3cdfa10288d8c1daeef946572dff18520ce9c8f35e744d",
          "md5": "1dbcc2151d450248f8f70ab62948b682",
          "sha256": "259737722fd7015d74c290666e391e8f83b151293de3dc85c2c5e6a8cf31d5d3"
        },
        "downloads": -1,
        "filename": "fedot_example_test-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1dbcc2151d450248f8f70ab62948b682",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 90062,
        "upload_time": "2020-11-27T14:49:07",
        "upload_time_iso_8601": "2020-11-27T14:49:07.551176Z",
        "url": "https://files.pythonhosted.org/packages/3f/fe/ce48d452f3ad5f3cdfa10288d8c1daeef946572dff18520ce9c8f35e744d/fedot_example_test-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b8e0e0de33240dd7f43504caf7a92ac314c6d7b63a8c29bb62500c81040a48a",
          "md5": "3c02e3b56c01cc5c1de7bb7eae3585cd",
          "sha256": "fcc9db9319dda632f7dbfa1876df8c0affed369ff158bfbd13fa1c5716ba010b"
        },
        "downloads": -1,
        "filename": "fedot_example_test-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3c02e3b56c01cc5c1de7bb7eae3585cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 67938,
        "upload_time": "2020-11-27T14:49:08",
        "upload_time_iso_8601": "2020-11-27T14:49:08.861901Z",
        "url": "https://files.pythonhosted.org/packages/3b/8e/0e0de33240dd7f43504caf7a92ac314c6d7b63a8c29bb62500c81040a48a/fedot_example_test-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ffece48d452f3ad5f3cdfa10288d8c1daeef946572dff18520ce9c8f35e744d",
        "md5": "1dbcc2151d450248f8f70ab62948b682",
        "sha256": "259737722fd7015d74c290666e391e8f83b151293de3dc85c2c5e6a8cf31d5d3"
      },
      "downloads": -1,
      "filename": "fedot_example_test-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1dbcc2151d450248f8f70ab62948b682",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 90062,
      "upload_time": "2020-11-27T14:49:07",
      "upload_time_iso_8601": "2020-11-27T14:49:07.551176Z",
      "url": "https://files.pythonhosted.org/packages/3f/fe/ce48d452f3ad5f3cdfa10288d8c1daeef946572dff18520ce9c8f35e744d/fedot_example_test-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b8e0e0de33240dd7f43504caf7a92ac314c6d7b63a8c29bb62500c81040a48a",
        "md5": "3c02e3b56c01cc5c1de7bb7eae3585cd",
        "sha256": "fcc9db9319dda632f7dbfa1876df8c0affed369ff158bfbd13fa1c5716ba010b"
      },
      "downloads": -1,
      "filename": "fedot_example_test-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "3c02e3b56c01cc5c1de7bb7eae3585cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 67938,
      "upload_time": "2020-11-27T14:49:08",
      "upload_time_iso_8601": "2020-11-27T14:49:08.861901Z",
      "url": "https://files.pythonhosted.org/packages/3b/8e/0e0de33240dd7f43504caf7a92ac314c6d7b63a8c29bb62500c81040a48a/fedot_example_test-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}