{
  "info": {
    "author": "Ravi Teja",
    "author_email": "ravitejatasubilli@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# devatrans\n\nThis is a simple tool to **transliterate** SANSKRIT text  to IAST, Harvard-Kyoto, ITRANS, Velthuis convention. It can also be used to **back transliterate** from IAST, Harvard-Kyoto, ITRANS, Velthuis convention to Sanskrit. It is can be used to **inter transliterate** from one convention to another.\n\n\n### It works with:\n              International Alphabet of Sanskrit Transliteration(IAST)\n              Indian language transliteration(ITRANS)\n              Harvard-Kyoto(HK)\n              Velthuis\n\n## Code Example\n____\n\n```python\nfrom devatrans import DevaTrans\n\n#create DevaTrans object.\ndt = DevaTrans()\n```\n\ntransliteration of a sentence.\n```python\ntrans = dt.transliterate(input_type = \"sen\", to_convention = \"hk\", sentence = \"नारायणं\")\nprint(trans)\n#output: nArAyaNaM\n```\n\ntransliteration of a text file.\n```python\ndt.transliterate(input_type = \"file\", to_convetion = \"iast\", inp_file_path = \"path_to_inp_file\",\n                  op_file_path = \"path_to_out_file\")\n```    \n\nback transliteration of a sentence.\n```python\nback_trans = dt.back_transliterate(input_type = \"sen\", from_convention = \"hk\", sentence = \"nArAyaNaM\")\nprint(back_trans)\n#output: नारायणं\n```\n\nback transliteration of a text file.\n```python\ndt.back_transliterate(input_type = \"file\", from_convention = \"itrans\",\n                inp_file_path = \"path_to_inp_file\",op_file_path = \"path_to_out_file\")                 \n```\n\ninter transliteration of a sentence\n```python\ninter_trans = dt.inter_transliterate(input_type = \"sen\", from_convention = \"hk\",\n                               to_convention = \"velthuis\", sentence = \"nArAyaNaM\")\n```\n\ninter transliteration of a text file.\n```python\ndt.inter_transliterate(input_type = \"file\", from_convention = \"itrans\",to_convention = \"iast\",\n                      inp_file_path = \"path_to_inp_file\",op_file_path = \"path_to_out_file\")\n ```\n\n\n\n## Installation\n_ _ _ _\n`pip install devatrans`\n\n## How to use?\n_ _ _ _ _\n```python\ntransliterate(input_type, to_convention, inp_file_path=None,\n                      op_file_path=None,  sentence=None)\n ```\n\n >The  `input_type` can  either  be  \"sen\"  or  \"file\",  if  the  `input_type`  is file  then\n >`inp_file_path`  should  be  provided, the `op_file_path` is optional,\n >` if not specified the  transliterated text is  written  back  to  `inp_file_path`.\n >\n > Use  this  method  to  transliterate text  from `SANSKRIT` to `IAST`, `ITRANS`, `HARVARD-KYOTO`, `VELHTUIS`.\n >\n > If  characters  which  are  not  part  of  the  convention  are  encoutered  they  are   left  unchanged.\n\n ```python\n inter_transliterate(input_type, from_convention, to_convention, inp_file_path=None,\n                            op_file_path=None,  sentence=None)\n ```\n\n > The  `input_type` can  either  be  \"sen\"  or  \"file\",  if  the  `input_type`  is file  then\n > `inp_file_path`  should   be   provided,  the  `op_file_path` is optional,\n > ` if not specified the  transliterated text is  written  back  to  `inp_file_path`.\n >\n > Use  this  method to transliterate text  from one convetion to another.\n >\n > If characters which are not part of the convention are encoutered they are  left  unchanged.\n\n ```python\n back_transliterate(input_type, from_convention, inp_file_path=None,\n                           op_file_path=None,  sentence=None):\n ```\n >The  `input_type` can  either  be  \"sen\"  or  \"file\",  if  the  `input_type`  is file  then\n >`inp_file_path`  should  be  provided, the `op_file_path` is optional,\n >` if not specified the  transliterated text is  written  back  to  `inp_file_path`.\n >\n > Use  this  method  to  back transliterate text  from  `IAST`, `ITRANS`, `HARVARD-KYOTO`, `VELHTUIS` to `SANSKRIT`.\n >\n > If  characters  which  are  not  part  of  the  convention  are  encoutered  they  are   left  unchanged.\n\n\n **`to_convention`, `from_convnetion` can take only take values `hk`, `iast`, `itrans`, `velthuis`**\n\n ## Contribute\n _ _ _ _ _ _\n * Currently only `.txt` format is supported, it could be extended to PDF and other file formats.\n * Other conventions like Sanskrit Library Phonetic Basic (SLP1), WX notation could be included.\n\n # Reference\n _ _ _ _\n TY  - BOOK\nAU  - Nair, Jayashree\nAU  - Sadasivan, Anand\nPY  - 2019/03/30\nSP  -\nT1  - A Roman to Devanagari Back-Transliteration Algorithm based on Harvard-Kyoto Convention\nER  -\n\n## Issue\n_ _ _ _ _\nIf a bug encountered please open the issuse [here](https://github.com/RaviTeja51/devatrans/issues).\\\nMy mail ravitejtasubilli@gmail.com\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RaviTeja51/devatrans.git",
    "keywords": "",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "devatrans",
    "package_url": "https://pypi.org/project/devatrans/",
    "platform": "",
    "project_url": "https://pypi.org/project/devatrans/",
    "project_urls": {
      "Homepage": "https://github.com/RaviTeja51/devatrans.git"
    },
    "release_url": "https://pypi.org/project/devatrans/5.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "devatrans is an easy-to-use tool for transliteration, back transliteration, inter transliteration of SANSKRIT.",
    "version": "5.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6603913,
  "releases": {
    "5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57a50d291469eb301448b745b3ffe237a1c52cac857da8c656addad42639cd2b",
          "md5": "b15bf617297e6af22e8fefe4b99fe110",
          "sha256": "2e9c75022ab5d6cb608b81e5acf329faee2468390f68b2a0af2ecb1394c432bb"
        },
        "downloads": -1,
        "filename": "devatrans-5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b15bf617297e6af22e8fefe4b99fe110",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 21293,
        "upload_time": "2020-01-19T19:08:07",
        "upload_time_iso_8601": "2020-01-19T19:08:07.121034Z",
        "url": "https://files.pythonhosted.org/packages/57/a5/0d291469eb301448b745b3ffe237a1c52cac857da8c656addad42639cd2b/devatrans-5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ecb64feeb9cd5865a3cc8e327d56c72a6fbfefffd9db3a6a6349e33d0ed4ea5",
          "md5": "835699fb0d41a9e5eb08669508d62107",
          "sha256": "e7ab0d422cc09656e551416d1ffba9690dbfde6bde95cdfaab566a58fbd3e170"
        },
        "downloads": -1,
        "filename": "devatrans-5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "835699fb0d41a9e5eb08669508d62107",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15096,
        "upload_time": "2020-01-19T19:08:09",
        "upload_time_iso_8601": "2020-01-19T19:08:09.377863Z",
        "url": "https://files.pythonhosted.org/packages/0e/cb/64feeb9cd5865a3cc8e327d56c72a6fbfefffd9db3a6a6349e33d0ed4ea5/devatrans-5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "821380a3422fbfc91ca5a14d8d34b9518ecf7a2629990308521604fb38dc6d88",
          "md5": "c397c2bd01a33870ad2c3934eeb4e0f3",
          "sha256": "3ff034f2c43095e93f4f0b3a0c6573e8209ad42b3adfedb7166f1f7ae113ad98"
        },
        "downloads": -1,
        "filename": "devatrans-5.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c397c2bd01a33870ad2c3934eeb4e0f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 21212,
        "upload_time": "2020-02-10T17:33:42",
        "upload_time_iso_8601": "2020-02-10T17:33:42.263710Z",
        "url": "https://files.pythonhosted.org/packages/82/13/80a3422fbfc91ca5a14d8d34b9518ecf7a2629990308521604fb38dc6d88/devatrans-5.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "096bff5a5da6667e07d531e26af17934c3de389571d5341cd3ae8027c7140de4",
          "md5": "828b4b8c024431d38727d57d660ebd4e",
          "sha256": "3275db7fba59174b8c3042c3f73fee7d599a33d7c73f8c927388793b0e15c7f9"
        },
        "downloads": -1,
        "filename": "devatrans-5.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "828b4b8c024431d38727d57d660ebd4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 15064,
        "upload_time": "2020-02-10T17:33:44",
        "upload_time_iso_8601": "2020-02-10T17:33:44.832984Z",
        "url": "https://files.pythonhosted.org/packages/09/6b/ff5a5da6667e07d531e26af17934c3de389571d5341cd3ae8027c7140de4/devatrans-5.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "821380a3422fbfc91ca5a14d8d34b9518ecf7a2629990308521604fb38dc6d88",
        "md5": "c397c2bd01a33870ad2c3934eeb4e0f3",
        "sha256": "3ff034f2c43095e93f4f0b3a0c6573e8209ad42b3adfedb7166f1f7ae113ad98"
      },
      "downloads": -1,
      "filename": "devatrans-5.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c397c2bd01a33870ad2c3934eeb4e0f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 21212,
      "upload_time": "2020-02-10T17:33:42",
      "upload_time_iso_8601": "2020-02-10T17:33:42.263710Z",
      "url": "https://files.pythonhosted.org/packages/82/13/80a3422fbfc91ca5a14d8d34b9518ecf7a2629990308521604fb38dc6d88/devatrans-5.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "096bff5a5da6667e07d531e26af17934c3de389571d5341cd3ae8027c7140de4",
        "md5": "828b4b8c024431d38727d57d660ebd4e",
        "sha256": "3275db7fba59174b8c3042c3f73fee7d599a33d7c73f8c927388793b0e15c7f9"
      },
      "downloads": -1,
      "filename": "devatrans-5.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "828b4b8c024431d38727d57d660ebd4e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 15064,
      "upload_time": "2020-02-10T17:33:44",
      "upload_time_iso_8601": "2020-02-10T17:33:44.832984Z",
      "url": "https://files.pythonhosted.org/packages/09/6b/ff5a5da6667e07d531e26af17934c3de389571d5341cd3ae8027c7140de4/devatrans-5.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}