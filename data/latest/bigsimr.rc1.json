{
  "info": {
    "author": "Alex Knudson",
    "author_email": "aknudson@nevada.unr.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# bigsimr\n\n`bigsimr` is a Python3 package for simulating high-dimensional multivariate data with a target correlation and arbitrary marginal distributions via Gaussian copula. It utilizes [Bigsimr.jl](https://github.com/adknudson/Bigsimr.jl) for its core routines. For full documentation and examples, please see the [Bigsimr.jl docs](https://adknudson.github.io/Bigsimr.jl/stable/).\n\n## Features\n\n* **Pearson matching** - employs a matching algorithm (Xiao and Zhou 2019) to account for the non-linear transformation in the Normal-to-Anything (NORTA) step\n* **Spearman and Kendall matching** - Use explicit transformations (Lebrun and Dutfoy 2009)\n* **Nearest Correlation Matrix** - Calculate the nearest positive [semi]definite correlation matrix (Qi and Sun 2006)\n* **Fast Approximate Correlation Matrix** - Calculate an approximation to the nearest positive definite correlation matrix\n* **Random Correlation Matrix** - Generate random positive [semi]definite correlation matrices\n* **Fast Multivariate Normal Generation** - Utilize multithreading to generate multivariate normal samples in parallel\n\n## Installation and Setup\n\nInstall the `bigsimr` package from pip using\n\n```\npip install git+https://github.com/SchisslerGroup/python-bigsimr.git\n```\n\nOr install the development version with\n\n```\npip install git+https://github.com/SchisslerGroup/python-bigsimr.git@dev\n```\n\n`bigsimr` relies on the Julia language to execute code through the python `julia` package. Julia can be obtained from [julialang.org](https://julialang.org/downloads/), or it can be detected/installed automatically using the setup function provided by `bigsimr`. The `setup()` function will also install the required Julia packages for bigsimr.\n\n```python\nfrom bigsimr import setup\nsetup(compiled_modules=False)\n```\n\n**Note.** The `compiled_modules=False` argument is necessary for those using Python from a conda environment. There is a known bug where setup fails if `compiled_modules` is set to `True` (the default for the `julia` package).\n\n## Using\n\n```python\nfrom julia.api import Julia\njl = Julia(compiled_modules=False) # conda users -> set to False\n\nfrom julia import Bigsimr as bs\nfrom julia import Distributions as dist\n\nimport numpy as np\n```\n\n### Examples\n\nPearson mathcing\n\n```python\ntarget_corr = bs.cor_randPD(3)\nmargins = [dist.Binomial(20, 0.2), dist.Beta(2, 3), dist.LogNormal(3, 1)]\n\nadjusted_corr = bs.pearson_match(target_corr, margins)\n\nx = bs.rvec(100_000, adjusted_corr, margins)\nbs.cor(x, bs.Pearson)\n```\n\nSpearman/Kendall matching\n\n```python\nspearman_corr = bs.cor_randPD(3)\nadjusted_corr = bs.cor_convert(spearman_corr, bs.Spearman, bs.Pearson)\n\nx = bs.rvec(100_000, adjusted_corr, margins)\nbs.cor(x, bs.Spearman)\n```\n\nNearest correlation matrix\n\n```python\nfrom julia.LinearAlgebra import isposdef\n\ns = bs.cor_randPSD(200)\nr = bs.cor_convert(s, bs.Spearman, bs.Pearson)\nisposdef(r)\n\np = bs.cor_nearPD(r)\nisposdef(p)\n```\n\nFast approximate nearest correlation matrix\n\n```python\ns = bs.cor_randPSD(2000)\nr = bs.cor_convert(s, bs.Spearman, bs.Pearson)\nisposdef(r)\n\np = bs.cor_fastPD(r)\nisposdef(p)\n```\n\n# References\n\n* Xiao, Q., & Zhou, S. (2019). Matching a correlation coefficient by a Gaussian copula. Communications in Statistics-Theory and Methods, 48(7), 1728-1747.\n* Lebrun, R., & Dutfoy, A. (2009). An innovating analysis of the Nataf transformation from the copula viewpoint. Probabilistic Engineering Mechanics, 24(3), 312-320.\n* Qi, H., & Sun, D. (2006). A quadratically convergent Newton method for computing the nearest correlation matrix. SIAM journal on matrix analysis and applications, 28(2), 360-385.\n* amoeba (https://stats.stackexchange.com/users/28666/amoeba), How to generate a large full-rank random correlation matrix with some strong correlations present?, URL (version: 2017-04-13): https://stats.stackexchange.com/q/125020\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SchisslerGroup/python-bigsimr",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bigsimr",
    "package_url": "https://pypi.org/project/bigsimr/",
    "platform": "",
    "project_url": "https://pypi.org/project/bigsimr/",
    "project_urls": {
      "Bug Tracker": "https://github.com/SchisslerGroup/python-bigsimr/issues",
      "Homepage": "https://github.com/SchisslerGroup/python-bigsimr"
    },
    "release_url": "https://pypi.org/project/bigsimr/0.1.0/",
    "requires_dist": [
      "numpy (>=1.19)",
      "julia (>=0.5.6)"
    ],
    "requires_python": ">=3.6",
    "summary": "Simulate high-dimensional multivariate data with arbitrary marginal distributions",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9709690,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e95ad0dd6057801584fee8bc7245848c1ebf98d824b73f6ec720feacaa9e576e",
          "md5": "8b3cd51c8a89c28f86c571f6f3042fff",
          "sha256": "b6be01d1447dcff9f84109dfd9b5aa5dbed5d0e97a0a9456a891bdc4e31570d9"
        },
        "downloads": -1,
        "filename": "bigsimr-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b3cd51c8a89c28f86c571f6f3042fff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4154,
        "upload_time": "2021-03-09T00:50:06",
        "upload_time_iso_8601": "2021-03-09T00:50:06.553977Z",
        "url": "https://files.pythonhosted.org/packages/e9/5a/d0dd6057801584fee8bc7245848c1ebf98d824b73f6ec720feacaa9e576e/bigsimr-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9e8d48c9fe8643b874557109a70f89b60161de834003205ff90f5d5be434ed3",
          "md5": "919d867b5bc74280080d69ba241774ec",
          "sha256": "b3667b961912f9edcacf6ae951276839020a6d3cd3ac0cb44d500370746d2c6c"
        },
        "downloads": -1,
        "filename": "bigsimr-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "919d867b5bc74280080d69ba241774ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3392,
        "upload_time": "2021-03-09T00:50:07",
        "upload_time_iso_8601": "2021-03-09T00:50:07.570893Z",
        "url": "https://files.pythonhosted.org/packages/a9/e8/d48c9fe8643b874557109a70f89b60161de834003205ff90f5d5be434ed3/bigsimr-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e95ad0dd6057801584fee8bc7245848c1ebf98d824b73f6ec720feacaa9e576e",
        "md5": "8b3cd51c8a89c28f86c571f6f3042fff",
        "sha256": "b6be01d1447dcff9f84109dfd9b5aa5dbed5d0e97a0a9456a891bdc4e31570d9"
      },
      "downloads": -1,
      "filename": "bigsimr-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8b3cd51c8a89c28f86c571f6f3042fff",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4154,
      "upload_time": "2021-03-09T00:50:06",
      "upload_time_iso_8601": "2021-03-09T00:50:06.553977Z",
      "url": "https://files.pythonhosted.org/packages/e9/5a/d0dd6057801584fee8bc7245848c1ebf98d824b73f6ec720feacaa9e576e/bigsimr-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9e8d48c9fe8643b874557109a70f89b60161de834003205ff90f5d5be434ed3",
        "md5": "919d867b5bc74280080d69ba241774ec",
        "sha256": "b3667b961912f9edcacf6ae951276839020a6d3cd3ac0cb44d500370746d2c6c"
      },
      "downloads": -1,
      "filename": "bigsimr-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "919d867b5bc74280080d69ba241774ec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3392,
      "upload_time": "2021-03-09T00:50:07",
      "upload_time_iso_8601": "2021-03-09T00:50:07.570893Z",
      "url": "https://files.pythonhosted.org/packages/a9/e8/d48c9fe8643b874557109a70f89b60161de834003205ff90f5d5be434ed3/bigsimr-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}