{
  "info": {
    "author": "",
    "author_email": "K4YT3X <i@k4yt3x.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# wg-meshconf\n\nwg-meshconf is a tool that will help you to generate peer configuration files for WireGuard mesh networks. You can easily and quickly create WireGuard mesh networks using this tool.\n\n## Installation (PyPI)\n\n**This is the recommended way to install wg-meshconf for regular users.** This installation method installs the newest release version of wg-meshconf and all of the required dependencies from PyPI.\n\n```shell\n# installing the program with pip\n# note that Pip for Python3 might be named \"pip3\" on some systems\npip install --user -U wg-meshconf\n\n# running the program\nwg-meshconf showpeers\n```\n\nYou may now run the program by executing the `wg-meshconf` command.\n\n## Installation (GitHub)\n\nAlternatively, if you would like to install the program directly from source code, you can follow the steps below. If you would like to install directly from the Git repository:\n\n```shell\n# install the HEAD (latest) commit\npip install 'wg-meshconf@git+https://github.com/k4yt3x/wg-meshconf.git'\n\n# install from a specific tag or commit\npip install 'wg-meshconf@git+https://github.com/k4yt3x/wg-meshconf.git@2.5.1'\npip install 'wg-meshconf@git+https://github.com/k4yt3x/wg-meshconf.git@aa16407'\n```\n\nYou can also clone it and install it locally.\n\n```shell\n# cloning the repository with git\ngit clone https://github.com/k4yt3x/wg-meshconf.git\n\n# enter the directory\ncd wg-meshconf\n\n# install the program with Pip\n# Pip and PDM will take care of dependency installation\npip install -U .\n```\n\n## Learn by an Example\n\nUsages are dull and boring. Let's see a real-life example of how this tool can be used. This section will demonstrate how to create a simple mesh network with four nodes using wg-meshconf.\n\nFor this example, suppose you have four servers as shown below. These servers can reach each other via the `Endpoint` address. For instance, server `tokyo1` can ping server `shanghai1` with the address `shanghai1.com`.\n\n![image](https://user-images.githubusercontent.com/21986859/99200153-94839e80-279b-11eb-81c9-189b609661ee.png)\n\n### Step 1: Add Basic Peer Information\n\nYou will first need to add the peers' information into the database. There are two ways to do it: via Excel and via the command line interface.\n\n#### Method A: With Excel\n\nwg-meshconf has changed its database format from JSON to CSV and added the `init` command since version 2.4.0. This means that it is now possible for users to directly edit the database file with Excel or other CSV-compatible editors to create/read/update/delete peer information.\n\n> (P.S. I thought about making a fancy GUI for wg-meshconf like the other tools, but then I thought, why do it the complex way when you can simply \"borrow\" Excel's GUI?)\n\nRun the following command to initialize a new database file. By default, the database file is named `database.csv`. You can also specify the file's name via `-d`.\n\n```shell\nwg-meshconf init\n```\n\nOpen the database CSV file with an editor like Excel or LibreOffice Calc. You should see the following column headers.\n\n![image](https://user-images.githubusercontent.com/21986859/120080963-93b4b900-c0aa-11eb-9e40-0da767c1cbfc.png)\n\nYou can then fill in the peers' information. **You will need to fill in at least the peers' `Name`, `Address`, and `Endpoint` values.** These values cannot be automatically generated.\n\n![image](https://user-images.githubusercontent.com/21986859/120081082-2fdec000-c0ab-11eb-90ad-0993a0557e1e.png)\n\nOnce you're done, save the file and execute the `init` command again to automatically generate the rest of the needed information such as peer private keys.\n\n```shell\nwg-meshconf init\n```\n\nIf you check the file again, you'll see the necessary fields getting automatically filed in.\n\n![image](https://user-images.githubusercontent.com/21986859/120081172-a2e83680-c0ab-11eb-963d-b6810a6580a3.png)\n\n#### Method B: With Terminal\n\nIf, for some reason, you don't want to edit the database file directly, you can also use this tool purely through its command line interface.\n\nFirst we need to add all peers in the mesh network into the database. The basic syntax for adding new peers is:\n\n```shell\nwg-meshconf addpeer NAME --address IP_ADDRESS --address IP_ADDRESS_2 --endpoint ENDPOINT\n```\n\n- New private key will be generated automatically if unspecified\n- ListenPort defaults to 51820 per WireGuard standard\n- All other values are left empty by default\n\nThere are more options which you can specify. Use the command `wg-meshconf addpeer -h` for more details.\n\nAfter adding all the peers into the database, you can verify that they have all been added correctly via the `wg-meshconf showpeers` command. The `simplify` switch here omits all columns with only `None`s.\n\n![image](https://user-images.githubusercontent.com/21986859/99202459-1dec9e00-27a7-11eb-8190-a5a3c6644d2a.png)\n\n### Step 2: Export Configuration Files\n\nUse the `genconfig` command to generate configuration files for all peers. You may also export configurations for only one peer by specifying the peer's name.\n\nThe configuration files will be named after the peers' names. By default, all configuration files are exported into a subdirectory named `output`. You can change this by specifying output directory using the `-o` or the `--output` option.\n\n![image](https://user-images.githubusercontent.com/21986859/99202483-352b8b80-27a7-11eb-8479-8749e945a81d.png)\n\n### Step 3: Copy Configuration Files to Peers\n\nCopy each of the configuration files to the corresponding peers.\n\n![image](https://user-images.githubusercontent.com/21986859/99201225-e4fdfa80-27a1-11eb-9b27-6e684d30b784.png)\n\n### Step 4: Start WireGuard Services\n\nStart up the WireGuard interfaces using the `wg-quick` command. It is also possible to control WireGuard interfaces via WireGuard's `wg-quick@` systemd service. WireGuard status can be verified via the `wg` command after WireGuard interfaces are set up.\n\n![image](https://user-images.githubusercontent.com/21986859/99202554-7459dc80-27a7-11eb-9e92-44cd02bdc2f7.png)\n\n### Step 5: Verify Connectivity\n\nVerify that all endpoints have been configured properly and can connect to each other.\n\n![image](https://user-images.githubusercontent.com/21986859/99202822-5e98e700-27a8-11eb-8bb2-3e0d2222258f.png)\n\nDone. Now a mesh network has been created between the four servers.\n\n## Updating Peer Information\n\nIf you would like to update a peer's information, use the `updatepeer` command. The syntax of `updatepeer` is the same as that of the `addpeer` command. Instead of adding a new peer, this command overwrites values in existing entries.\n\nIn the example below, suppose you would like to update `tokyo1`'s endpoint address and change it to `tokyo321.com`. Use the `updatepeer` command and specify the new endpoint to be `tokyo321.com`. This will overwrite `tokyo1`'s existing `Endpoint` value.\n\n![image](https://user-images.githubusercontent.com/21986859/99204025-3a3f0980-27ac-11eb-9159-0e40fc2eefeb.png)\n\n## Show Peer Information\n\nThe `showpeers` command prints all peers' information by default.\n\n![image](https://user-images.githubusercontent.com/21986859/99205966-11ba0e00-27b2-11eb-994a-6d2552ff1ca4.png)\n\nNow that's a lot of info and a lot of unnecessary columns which only have `None`s. Therefore, I added the `-s`/`--simplify` command which omits those useless columns.\n\n![image](https://user-images.githubusercontent.com/21986859/99206017-38784480-27b2-11eb-9022-21ba791ce28c.png)\n\nYou may also query information about a specific peer.\n\n![image](https://user-images.githubusercontent.com/21986859/99206049-547be600-27b2-11eb-89e9-d7c942dfac44.png)\n\nPlaintext mode has a similar usage. It's just a bit harder to read, at least for me.\n\n![image](https://user-images.githubusercontent.com/21986859/99206104-76756880-27b2-11eb-844b-e5197afcbf99.png)\n\n## Deleting Peers\n\nUse the `delpeer` command to delete peers. The syntax is `delpeer PEER_NAME`.\n\nThis example below shows how to delete the peer `tokyo1` from the database.\n\n![image](https://user-images.githubusercontent.com/21986859/99204215-e123a580-27ac-11eb-93b1-d07345004fab.png)\n\n## Database Files\n\nUnlike 1.x.x versions of wg-meshconf, version 2.0.0 does not require the user to save or load profiles. Instead, all add peer, update peer and delete peer operations are file operations. The changes will be saved to the database file immediately. The database file to use can be specified via the `-d` or the `--database` option. If no database file is specified, `database.csv` will be used.\n\nDatabase files are essentially just CSV files (it was JSON before version 2.4.0). Below is an example.\n\n```csv\n\"Name\",\"Address\",\"Endpoint\",\"AllowedIPs\",\"ListenPort\",\"PersistentKeepalive\",\"FwMark\",\"PrivateKey\",\"DNS\",\"MTU\",\"Table\",\"PreUp\",\"PostUp\",\"PreDown\",\"PostDown\",\"SaveConfig\"\n\"tokyo1\",\"10.1.0.1/16\",\"tokyo1.com\",\"\",\"51820\",\"\",\"\",\"yJndNh80ToNWGOfDlbtho1wHAEZGa7ZhNpsHf7AJVUM=\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\n\"germany1\",\"10.2.0.1/16\",\"germany1.com\",\"\",\"51820\",\"\",\"\",\"SEOaOjTrhR4do1iUrTTRRHZs6xCA3Q/H0yHW3ZpkHko=\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\n\"canada1\",\"10.3.0.1/16\",\"canada1.com\",\"\",\"51820\",\"\",\"\",\"2D34jpbTsU+KeBqfItTEbL5m7nYcBomWWJGTYCT6eko=\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\n\"shanghai1\",\"10.4.0.1/16\",\"shanghai1.com\",\"\",\"51820\",\"\",\"\",\"CGyR7goj/uGH3TQHgVknpb9ZBR+/yMfkve+kVNGBYlg=\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"\n```\n\n## Detailed Usages\n\nYou may refer to the program's help page for usages. Use the `-h` switch or the `--help` switch to print the help page.\n\n```shell\n$ wg-meshconf -h\nusage: wg-meshconf [-h] [-d DATABASE] {addpeer,updatepeer,delpeer,showpeers,genconfig} ...\n\npositional arguments:\n  {addpeer,updatepeer,delpeer,showpeers,genconfig}\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DATABASE, --database DATABASE\n                        path where the database file is stored (default: database.json)\n```\n\nSpecify `-h` or `--help` after a command to see this command's usages.\n\n```shell\n$ wg-meshconf addpeer -h\nusage: wg-meshconf addpeer [-h] --address ADDRESS [--endpoint ENDPOINT] [--privatekey PRIVATEKEY] [--listenport LISTENPORT] [--fwmark FWMARK] [--dns DNS] [--mtu MTU] [--table TABLE] [--preup PREUP] [--postup POSTUP] [--predown PREDOWN] [--postdown POSTDOWN] [--saveconfig] name\n\npositional arguments:\n  name                  Name used to identify this node\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --address ADDRESS     address of the server\n  --endpoint ENDPOINT   peer's public endpoint address\n  --privatekey PRIVATEKEY\n                        private key of server interface\n  --listenport LISTENPORT\n                        port to listen on\n  --fwmark FWMARK       fwmark for outgoing packets\n  --dns DNS             server interface DNS servers\n  --mtu MTU             server interface MTU\n  --table TABLE         server routing table\n  --preup PREUP         command to run before interface is up\n  --postup POSTUP       command to run after interface is up\n  --predown PREDOWN     command to run before interface is down\n  --postdown POSTDOWN   command to run after interface is down\n  --saveconfig          save server interface to config upon shutdown\n```\n\n## License\n\nThis project is licensed under the [GNU General Public License Version 3 (GNU GPL v3)](https://www.gnu.org/licenses/gpl-3.0.txt)\\\nCopyright (c) 2018-2023 K4YT3X and contributors.\n\n![GPLv3 Icon](https://www.gnu.org/graphics/gplv3-127x51.png)\n\nThis project includes or dependson the following software and projects:\n\n| **Project**                                          | **License** |\n| ---------------------------------------------------- | ----------- |\n| [Rich](https://github.com/Textualize/rich)           | MIT License |\n| [WireGuard](https://git.zx2c4.com/wireguard)         | MIT License |\n| [cryptography](https://github.com/pyca/cryptography) | BSD License |\n\n## Related Project: `wg-dynamic`\n\n`wg-dynamic` is a tool designed officially by the WireGuard developing team. This new utility will provide a convenient way of configuring networks dynamically, where mesh network being one of the them. If you're interested, check it out at [wg-dynamic@github](https://github.com/WireGuard/wg-dynamic) or [wg-dynamic@official repository](https://git.zx2c4.com/wg-dynamic). You might also want to read this project's [idea page](https://github.com/WireGuard/wg-dynamic/blob/master/docs/idea.md).\n\nThis section used to be on the top of the page, but has been moved since there has been no new commits observed in this project since 2019.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wg-meshconf",
    "package_url": "https://pypi.org/project/wg-meshconf/",
    "platform": null,
    "project_url": "https://pypi.org/project/wg-meshconf/",
    "project_urls": {
      "homepage": "https://github.com/k4yt3x/wg-meshconf"
    },
    "release_url": "https://pypi.org/project/wg-meshconf/2.5.1/",
    "requires_dist": [
      "cryptography>=35.0.0",
      "rich>=12.0.0"
    ],
    "requires_python": ">=3.7",
    "summary": "A tool that helps you to generate peer configuration files for WireGuard mesh networks",
    "version": "2.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16716253,
  "releases": {
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "393bfc3aa3a931da345afa5a93861182f4837fc15fdb89995437bdfba09955c0",
          "md5": "fe0aa21349a92e95e0de212be6166de0",
          "sha256": "33c20ea044ad1a49121a6e02a1922d967542fbcd9ffcdde70fcce3c90bf4e027"
        },
        "downloads": -1,
        "filename": "wg_meshconf-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe0aa21349a92e95e0de212be6166de0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22495,
        "upload_time": "2021-01-13T01:58:28",
        "upload_time_iso_8601": "2021-01-13T01:58:28.181161Z",
        "url": "https://files.pythonhosted.org/packages/39/3b/fc3aa3a931da345afa5a93861182f4837fc15fdb89995437bdfba09955c0/wg_meshconf-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49146dfce53c3ac4ea25bf35713e49eb29b4be47e15ff885ead9bdb93f7fe658",
          "md5": "0dfcc30b0e96e36645b4a4126a146db2",
          "sha256": "d4a060ab20eef597a9095e24cf976173484261d62d8189863a0611dd58de7f88"
        },
        "downloads": -1,
        "filename": "wg-meshconf-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0dfcc30b0e96e36645b4a4126a146db2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13006,
        "upload_time": "2021-01-13T01:58:29",
        "upload_time_iso_8601": "2021-01-13T01:58:29.203855Z",
        "url": "https://files.pythonhosted.org/packages/49/14/6dfce53c3ac4ea25bf35713e49eb29b4be47e15ff885ead9bdb93f7fe658/wg-meshconf-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ac481406b7528e7b0ee3745cd831f33fc8631eaf8d8492ea9637a4e869b8f1a",
          "md5": "eaf791f9aa6ebcafbe1969e64fce0622",
          "sha256": "116477c4bb28ff4c9d84ef1b7a484000c65eebfccb87a5e27528d8d9f226ead7"
        },
        "downloads": -1,
        "filename": "wg_meshconf-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eaf791f9aa6ebcafbe1969e64fce0622",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22535,
        "upload_time": "2021-01-13T02:27:41",
        "upload_time_iso_8601": "2021-01-13T02:27:41.461069Z",
        "url": "https://files.pythonhosted.org/packages/5a/c4/81406b7528e7b0ee3745cd831f33fc8631eaf8d8492ea9637a4e869b8f1a/wg_meshconf-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "baccfcef8a5f63c3b1f753104d9c6bf9b84d5b5d52e1812356fa5fc04ca2e9a4",
          "md5": "e24ca867c508d5dcffd134b35f6eee75",
          "sha256": "e313b97d85cd6f64a69c01516bd492d1ab7a78355ec248b441c7863595514ef5"
        },
        "downloads": -1,
        "filename": "wg-meshconf-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e24ca867c508d5dcffd134b35f6eee75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13086,
        "upload_time": "2021-01-13T02:27:43",
        "upload_time_iso_8601": "2021-01-13T02:27:43.194729Z",
        "url": "https://files.pythonhosted.org/packages/ba/cc/fcef8a5f63c3b1f753104d9c6bf9b84d5b5d52e1812356fa5fc04ca2e9a4/wg-meshconf-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fe0953836baae140ac73d3f65902d058590daab04eb31551797ac1e4a17c40f",
          "md5": "b7b20864b481c6b25b44679591bbc24f",
          "sha256": "d221060c7ea2ea1b881149f6c4fbd892b21549362bedb441609b3d9d97974afe"
        },
        "downloads": -1,
        "filename": "wg_meshconf-2.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7b20864b481c6b25b44679591bbc24f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22639,
        "upload_time": "2021-01-13T02:40:39",
        "upload_time_iso_8601": "2021-01-13T02:40:39.945927Z",
        "url": "https://files.pythonhosted.org/packages/8f/e0/953836baae140ac73d3f65902d058590daab04eb31551797ac1e4a17c40f/wg_meshconf-2.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aad568d8b1f46c664ec3c11036902f9e76513e6cd1aa9477847aedcf1a6f736c",
          "md5": "2ae311b2951cbceba5064e0522593eaf",
          "sha256": "c4f16db23b1793f8096cf290ffd4d4cb439879c36e1a3e26fba505f68e0f5d2f"
        },
        "downloads": -1,
        "filename": "wg-meshconf-2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2ae311b2951cbceba5064e0522593eaf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13170,
        "upload_time": "2021-01-13T02:40:42",
        "upload_time_iso_8601": "2021-01-13T02:40:42.429344Z",
        "url": "https://files.pythonhosted.org/packages/aa/d5/68d8b1f46c664ec3c11036902f9e76513e6cd1aa9477847aedcf1a6f736c/wg-meshconf-2.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ca967679b28a67cbc360ff8cac40ece402063913b3096a9211753119dfe1a24",
          "md5": "1696b3ab69c18e15b18a504ac3da8160",
          "sha256": "d89f1f7fb138183a2d721cc1ee9930f048a85e5e428efca6b50845a515514ca7"
        },
        "downloads": -1,
        "filename": "wg_meshconf-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1696b3ab69c18e15b18a504ac3da8160",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22820,
        "upload_time": "2021-01-27T03:08:22",
        "upload_time_iso_8601": "2021-01-27T03:08:22.274789Z",
        "url": "https://files.pythonhosted.org/packages/1c/a9/67679b28a67cbc360ff8cac40ece402063913b3096a9211753119dfe1a24/wg_meshconf-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf49e040050af8945b28c472b7f10bf2511cbd1daa757dfb2c26fbe7ce027a59",
          "md5": "55745ef8a93ea8b5917b776ca1f462e7",
          "sha256": "9999f0e9d1bc4eac9b52d0662d699cce7429c0a4f01d410f6b0296f3bac736d0"
        },
        "downloads": -1,
        "filename": "wg-meshconf-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "55745ef8a93ea8b5917b776ca1f462e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13513,
        "upload_time": "2021-01-27T03:08:24",
        "upload_time_iso_8601": "2021-01-27T03:08:24.528454Z",
        "url": "https://files.pythonhosted.org/packages/bf/49/e040050af8945b28c472b7f10bf2511cbd1daa757dfb2c26fbe7ce027a59/wg-meshconf-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9b3f3796f177ef7569ad2b5bc3a742b812ce9f5669f31b4da33a4e52985fd24",
          "md5": "ea98ae790025afd780ba0daf5acc8a62",
          "sha256": "02738816340c6c7f80eb2c257b31274d637b42d1a507d8abfeb5026e6d0d46e0"
        },
        "downloads": -1,
        "filename": "wg_meshconf-2.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea98ae790025afd780ba0daf5acc8a62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23096,
        "upload_time": "2021-05-22T21:48:11",
        "upload_time_iso_8601": "2021-05-22T21:48:11.137934Z",
        "url": "https://files.pythonhosted.org/packages/d9/b3/f3796f177ef7569ad2b5bc3a742b812ce9f5669f31b4da33a4e52985fd24/wg_meshconf-2.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5e4b3117b546b437350a814944451e7ac83c283ba88cc09d37d491823fe082a",
          "md5": "5b4e7f90b0e78322deb21a42e69b68cd",
          "sha256": "ec631d65af4efe85b4159fdd7970fb70fb7d24067924b88fe58df3b03e964328"
        },
        "downloads": -1,
        "filename": "wg-meshconf-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5b4e7f90b0e78322deb21a42e69b68cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25653,
        "upload_time": "2021-05-22T21:48:12",
        "upload_time_iso_8601": "2021-05-22T21:48:12.480049Z",
        "url": "https://files.pythonhosted.org/packages/a5/e4/b3117b546b437350a814944451e7ac83c283ba88cc09d37d491823fe082a/wg-meshconf-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e4a0a4a3b87d3a099e9548565edec414f28d67baa8a1dc93128f0fb5b05a9ab",
          "md5": "7924451c750e34ce56302ea23123aedf",
          "sha256": "6f9c58fb5f49f7cfe523d8d26ad1b601a6d3cd280ff0a9359d00a94ad8f4f617"
        },
        "downloads": -1,
        "filename": "wg_meshconf-2.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7924451c750e34ce56302ea23123aedf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24429,
        "upload_time": "2021-05-29T18:46:49",
        "upload_time_iso_8601": "2021-05-29T18:46:49.036735Z",
        "url": "https://files.pythonhosted.org/packages/9e/4a/0a4a3b87d3a099e9548565edec414f28d67baa8a1dc93128f0fb5b05a9ab/wg_meshconf-2.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3872203f633a874ceca767f5cc3807de5b5b28c7ec96dbc01073eab67bc71cfd",
          "md5": "177205f6e7668f2bc49ab0bb8dd2b45b",
          "sha256": "1aab4970d7f87e1ea9bea09263c3cf71e81a0ac557894928ef931c9708e4e9da"
        },
        "downloads": -1,
        "filename": "wg-meshconf-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "177205f6e7668f2bc49ab0bb8dd2b45b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27718,
        "upload_time": "2021-05-29T18:46:50",
        "upload_time_iso_8601": "2021-05-29T18:46:50.269081Z",
        "url": "https://files.pythonhosted.org/packages/38/72/203f633a874ceca767f5cc3807de5b5b28c7ec96dbc01073eab67bc71cfd/wg-meshconf-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3db75c70865e16b948cd022d395c7c263fbde92a025e410d87bb00f5d51ddad4",
          "md5": "3c6f0c78e151f45e9a1c5dbb206dd5ca",
          "sha256": "12cd33b7bdd21cfc944e28bd318883403fc1fb0e5a412115e1cbac24d8df9cdd"
        },
        "downloads": -1,
        "filename": "wg_meshconf-2.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c6f0c78e151f45e9a1c5dbb206dd5ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24548,
        "upload_time": "2021-06-22T07:32:18",
        "upload_time_iso_8601": "2021-06-22T07:32:18.667089Z",
        "url": "https://files.pythonhosted.org/packages/3d/b7/5c70865e16b948cd022d395c7c263fbde92a025e410d87bb00f5d51ddad4/wg_meshconf-2.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0b6242a8bb876d08833a5cc20cb02c9419c1d6c9872f2ec7b5436fadd7deaf8",
          "md5": "15a955300d29a9cb12336b862dfda232",
          "sha256": "7332b8f80a02b11712fe809ff25da1d4d2ca8e9604cdce9b0f2e84eea39d620f"
        },
        "downloads": -1,
        "filename": "wg-meshconf-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "15a955300d29a9cb12336b862dfda232",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27117,
        "upload_time": "2021-06-22T07:32:20",
        "upload_time_iso_8601": "2021-06-22T07:32:20.355231Z",
        "url": "https://files.pythonhosted.org/packages/e0/b6/242a8bb876d08833a5cc20cb02c9419c1d6c9872f2ec7b5436fadd7deaf8/wg-meshconf-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1add534a524e977da9ea1086b940857c9b6e6feaf1042ce2e38c576f5fc730fc",
          "md5": "74c0e3e6013a1a9db281f3c5df6eac26",
          "sha256": "bbfdc104344ec9aacb8cebf612090787cc4e80354586d790a1b28198c5631603"
        },
        "downloads": -1,
        "filename": "wg_meshconf-2.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74c0e3e6013a1a9db281f3c5df6eac26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 24313,
        "upload_time": "2023-02-06T19:28:06",
        "upload_time_iso_8601": "2023-02-06T19:28:06.640740Z",
        "url": "https://files.pythonhosted.org/packages/1a/dd/534a524e977da9ea1086b940857c9b6e6feaf1042ce2e38c576f5fc730fc/wg_meshconf-2.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e927e6c4ed83f23b2825b4bbee1881be0872f7714fc6663046c884ad0d3f804b",
          "md5": "d5f9c8dc71c7f35edc8dfcb8a0c6c170",
          "sha256": "7c73b57b4da0ba9d32835fd4cff8d6fae99c15a50115499c896686b364065650"
        },
        "downloads": -1,
        "filename": "wg-meshconf-2.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d5f9c8dc71c7f35edc8dfcb8a0c6c170",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26272,
        "upload_time": "2023-02-06T19:28:08",
        "upload_time_iso_8601": "2023-02-06T19:28:08.371590Z",
        "url": "https://files.pythonhosted.org/packages/e9/27/e6c4ed83f23b2825b4bbee1881be0872f7714fc6663046c884ad0d3f804b/wg-meshconf-2.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1add534a524e977da9ea1086b940857c9b6e6feaf1042ce2e38c576f5fc730fc",
        "md5": "74c0e3e6013a1a9db281f3c5df6eac26",
        "sha256": "bbfdc104344ec9aacb8cebf612090787cc4e80354586d790a1b28198c5631603"
      },
      "downloads": -1,
      "filename": "wg_meshconf-2.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "74c0e3e6013a1a9db281f3c5df6eac26",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 24313,
      "upload_time": "2023-02-06T19:28:06",
      "upload_time_iso_8601": "2023-02-06T19:28:06.640740Z",
      "url": "https://files.pythonhosted.org/packages/1a/dd/534a524e977da9ea1086b940857c9b6e6feaf1042ce2e38c576f5fc730fc/wg_meshconf-2.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e927e6c4ed83f23b2825b4bbee1881be0872f7714fc6663046c884ad0d3f804b",
        "md5": "d5f9c8dc71c7f35edc8dfcb8a0c6c170",
        "sha256": "7c73b57b4da0ba9d32835fd4cff8d6fae99c15a50115499c896686b364065650"
      },
      "downloads": -1,
      "filename": "wg-meshconf-2.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d5f9c8dc71c7f35edc8dfcb8a0c6c170",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26272,
      "upload_time": "2023-02-06T19:28:08",
      "upload_time_iso_8601": "2023-02-06T19:28:08.371590Z",
      "url": "https://files.pythonhosted.org/packages/e9/27/e6c4ed83f23b2825b4bbee1881be0872f7714fc6663046c884ad0d3f804b/wg-meshconf-2.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}