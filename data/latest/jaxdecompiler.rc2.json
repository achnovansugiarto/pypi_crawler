{
  "info": {
    "author": "",
    "author_email": "Pierrick Pochelu <pierrick.pochelu@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# JaxDecompiler\nJax Decompiler\n\nThe JAX decompiler takes jaxpr code and produces a more readable Python code. Even if some information about the original function is lost (obfuscated code) like variable names being lost, it is an important tool for reverse-engineering.\n\nAssociated pr:\nhttps://github.com/google/jax/issues/13398\n\n## Installation\n\n```bash\npip3 install JaxDecompiler\n```\n\n## Usage example\n\nGiven any jaxpr function, here \"df\", we want to generate the associated Python code.\n\n```python\nimport jax\n\ndef f(x, smooth_rate):\n    local_minimums = (1 - smooth_rate) * jax.numpy.cos(x)\n    global_minimum = smooth_rate * x**2\n    return global_minimum + local_minimums\n\n\ndf = jax.grad(f, (0,))\n```\n\nFunction df is implemented with jaxpr code. You can display it with:\n\n```python\n\nfrom JaxDecompiler import decompiler\n\ndecompiler.display_wrapped_jaxpr(df, (1.0, 1.0))\n```\nreturns:\n```\n===== HEADER =======\ninvars: [a, b]\noutvars: [p]\nconstvars: []\n===== CODE =======\n{ lambda ; a:f32[] b:f32[]. let\n    c:f32[] = sub 1.0 b\n    d:f32[] = cos a\n    e:f32[] = sin a\n[...]\n```\n\nThe below code decompiles it automatically. It generates the python function and its python code as text.\n\n```python\n\nfrom JaxDecompiler import decompiler\n\ndecompiled_df, python_code = decompiler.python_jaxpr_python(\n    df, (1.0, 1.0), is_python_returned=True\n)\n```\n\nLet's check df and decompiled_df behave the same:\n```python\nprint(\"df: \", df(4.0, 0.99)) # ~7.927568\nprint(\"decompiled df: \", decompiled_df(4.0, 0.99))  # ~7.927568\n```\nThey produce the same result in spite to be written in different languages!\n\nNow Let's display what is inside decompiled_df:\n```python\nprint(python_code)\n```\nDisplay:\n```python\ndef f(a, b):\n    c = 1.0 - b\n    d = cos(a)\n    e = sin(a)\n    f = c * d\n    g = a ** 2\n    h = a ** 1\n    i = 2.0 * h\n    j = b * g\n    _ = j + f\n    k = c * 1.0\n    l = -k\n    m = l * e\n    n = b * 1.0\n    o = n * i\n    p = m + o\n    return p\n```\nNow, the user owns its derivative code and may easily refactor/edit it! This is a reverse-engineering tool, for example, we can now improving arithemtic stability, manually optimize the code, ...\n\nNotice: python_jaxpr_python create out/ folder in the current directory.\n\n## Next steps\n\nThere are the next steps:\n* **More operators**. Today ~60 jaxpr operators are implemented ('add', 'mul', 'cos', ...). The exhaustive list of the implemented operators is in the file \"primitive_mapping.py\". This python file aims to map jaxpr operator (the name of the functions) into python code (string returned by the function).\n\n* **Automatic refactoring**. There is room for improvement to make the automatically produced Python code easier to read/maintain. \nAn automatic refactoring tool should be able to translate this low-level Python style into a more readable one for humans.\n\n* **Automatic detection of useless codes**. In the example above, \"j\" variable is useless.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "JaxDecompiler",
    "package_url": "https://pypi.org/project/JaxDecompiler/",
    "platform": null,
    "project_url": "https://pypi.org/project/JaxDecompiler/",
    "project_urls": {
      "Bug Tracker": "https://github.com/PierrickPochelu/JaxDecompiler/issues",
      "Homepage": "https://github.com/PierrickPochelu/JaxDecompiler"
    },
    "release_url": "https://pypi.org/project/JaxDecompiler/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Jax Decompiler",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16702996,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcd04fa6154f94ea67397b2167c73ff36ea0d1a70d616bb6ab57f3626a40bcf5",
          "md5": "2566d6b2780ebf259b2275ad5148cd3f",
          "sha256": "c7d267d226974668207fffdc7bc38c98ce2b8ded97cdf59cdb5ab0bc23d61b9c"
        },
        "downloads": -1,
        "filename": "JaxDecompiler-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2566d6b2780ebf259b2275ad5148cd3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11315,
        "upload_time": "2023-02-05T18:44:01",
        "upload_time_iso_8601": "2023-02-05T18:44:01.201414Z",
        "url": "https://files.pythonhosted.org/packages/fc/d0/4fa6154f94ea67397b2167c73ff36ea0d1a70d616bb6ab57f3626a40bcf5/JaxDecompiler-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9b3b1aabd8057e372f3c3f8da7d9b52d67ebe0d0fcdbea2e12b5e3951cd20fb",
          "md5": "d791fb77e513ccafa229478f78c9d598",
          "sha256": "6da6cd617ae937d9a31328fc88dfb5f41084df14abb0a2ffabc57adc56a510d0"
        },
        "downloads": -1,
        "filename": "JaxDecompiler-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d791fb77e513ccafa229478f78c9d598",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11943,
        "upload_time": "2023-02-05T18:44:03",
        "upload_time_iso_8601": "2023-02-05T18:44:03.600676Z",
        "url": "https://files.pythonhosted.org/packages/a9/b3/b1aabd8057e372f3c3f8da7d9b52d67ebe0d0fcdbea2e12b5e3951cd20fb/JaxDecompiler-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f7ac7f3f16c00e3e2e6fad454374a1d7e53266b0f05082f50bac8752b057d1f",
          "md5": "74799d41c1b9ee0112e392ac0a23cfa1",
          "sha256": "3777dc9000abdc17be3b7c1406998d6c5a2b7f34e67cf1408eda21a1cf1f7194"
        },
        "downloads": -1,
        "filename": "JaxDecompiler-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74799d41c1b9ee0112e392ac0a23cfa1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11325,
        "upload_time": "2023-02-05T18:53:35",
        "upload_time_iso_8601": "2023-02-05T18:53:35.499910Z",
        "url": "https://files.pythonhosted.org/packages/6f/7a/c7f3f16c00e3e2e6fad454374a1d7e53266b0f05082f50bac8752b057d1f/JaxDecompiler-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0aa8fb75a19cf973bb13f01d1889dd5b8599e02e7c449f85979d483c0f823319",
          "md5": "b953912d908c72d2098b099ddd2eb42d",
          "sha256": "99d38c7399ea0b87c846eaceefacda643b2c5e54c1e671e461950f02b28de19f"
        },
        "downloads": -1,
        "filename": "JaxDecompiler-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b953912d908c72d2098b099ddd2eb42d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11921,
        "upload_time": "2023-02-05T18:53:37",
        "upload_time_iso_8601": "2023-02-05T18:53:37.387067Z",
        "url": "https://files.pythonhosted.org/packages/0a/a8/fb75a19cf973bb13f01d1889dd5b8599e02e7c449f85979d483c0f823319/JaxDecompiler-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f7ac7f3f16c00e3e2e6fad454374a1d7e53266b0f05082f50bac8752b057d1f",
        "md5": "74799d41c1b9ee0112e392ac0a23cfa1",
        "sha256": "3777dc9000abdc17be3b7c1406998d6c5a2b7f34e67cf1408eda21a1cf1f7194"
      },
      "downloads": -1,
      "filename": "JaxDecompiler-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "74799d41c1b9ee0112e392ac0a23cfa1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 11325,
      "upload_time": "2023-02-05T18:53:35",
      "upload_time_iso_8601": "2023-02-05T18:53:35.499910Z",
      "url": "https://files.pythonhosted.org/packages/6f/7a/c7f3f16c00e3e2e6fad454374a1d7e53266b0f05082f50bac8752b057d1f/JaxDecompiler-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0aa8fb75a19cf973bb13f01d1889dd5b8599e02e7c449f85979d483c0f823319",
        "md5": "b953912d908c72d2098b099ddd2eb42d",
        "sha256": "99d38c7399ea0b87c846eaceefacda643b2c5e54c1e671e461950f02b28de19f"
      },
      "downloads": -1,
      "filename": "JaxDecompiler-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b953912d908c72d2098b099ddd2eb42d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 11921,
      "upload_time": "2023-02-05T18:53:37",
      "upload_time_iso_8601": "2023-02-05T18:53:37.387067Z",
      "url": "https://files.pythonhosted.org/packages/0a/a8/fb75a19cf973bb13f01d1889dd5b8599e02e7c449f85979d483c0f823319/JaxDecompiler-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}