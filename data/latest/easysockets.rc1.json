{
  "info": {
    "author": "Matthias Wijnsma",
    "author_email": "matthiasx95@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# EasySockets\nA Python module that allows you to create and use simple sockets.\n\n# Installation\nThe easysockets module can be installed using pip.\n```\npip install easysockets\n```\nor\n```\npip install git+https://github.com/Matthias1590/EasySockets.git\n```\n\nYou can also install it by cloning this repository and running the following commands:\n```\npython3 setup.py build\npython3 setup.py install\n```\n\n# Examples\nThe easysockets module contains 3 main classes: `ServerSocket`, `ClientSocket` and `Connection`. Below are examples on how to use each of them.\n\n`ServerSocket`:\n```py\n# The ServerSocket class is used to create a server socket, to create an instance of the ServerSocket class you need a client handler, a client handler is a function that will be passed a connection, the client handler function can then, as the name suggests, handle the client/connection\nserver_socket = ServerSocket(client_handler=lambda connection: connection.send(b\"Hello, world!\"))  # This handler just sends \"Hello, world!\" and then closes the connection\n\n# To make the server socket listen, use the \"listen\" method. You'll have to specify a host and port\nserver_socket.listen(host=\"localhost\", port=8080)\n\n# Now whenever a client connects, the lambda we made earlier will be called and will send \"Hello, world!\" to the client after which it'll close the connection\n```\n`ClientSocket`:\n```py\n# The ClientSocket class is used to connect to server sockets\nclient_socket = ClientSocket()\n\n# To connect to a server, use the \"connect\" method. You'll have to specify the host and port the server is hosted on. This will return a connection that you can then use to communicate with the server\nconnection = client.connect(host=\"localhost\", port=8080)\n\n# Sending \"Hey!\" to the server\nconnection.send(b\"Hey!\")\n\n# Receiving a message and printing it (NOTE: The message will be received as bytes, to turn it into a string you can use the decode method)\nprint(connection.receive().decode())\n\n# Closing the connection (NOTE: This isn't necessary if you end the program but it's good practice to do it anyway)\nconnection.close()\n```\n`Connection`:\n```py\n# Assume that we just connected to a server\n...\n\n# The Connection class is used to communicate to a server/client, whenever you connect to a server or have a client connect to you, you will be given a Connection instance, you cannot create Connections using the constructor\n\n# Send a message (you can only send bytes, if you want to send a string, just encode it)\nconnection.send(\"Hello\".encode())\n# is the same as\nconnection.send(b\"Hello\")\n\n# Receive a message\nmessage = connection.receive()\nprint(message.decode())\n\n# Closing the connection\nconnection.close()\n```\n\nFor more examples, check out `example/client.py` and `example/server.py`\n\n# Downloads\n[![Downloads](https://pepy.tech/badge/easysockets)](https://pepy.tech/project/easysockets) [![Downloads](https://pepy.tech/badge/easysockets/month)](https://pepy.tech/project/easysockets) [![Downloads](https://pepy.tech/badge/easysockets/week)](https://pepy.tech/project/easysockets)\n\n# Supported Operating Systems\nThe easysockets module is supported on every operating system as it only uses the built-in `socket` module.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Matthias1590/EasySockets",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easysockets",
    "package_url": "https://pypi.org/project/easysockets/",
    "platform": "",
    "project_url": "https://pypi.org/project/easysockets/",
    "project_urls": {
      "Homepage": "https://github.com/Matthias1590/EasySockets"
    },
    "release_url": "https://pypi.org/project/easysockets/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Python module that allows you to create and use simple sockets.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12520892,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2587edc12583df14169653f2813ef07aa7e9a98f49a66c5cb056898c2f16c82",
          "md5": "c95cae4f6033b9765496c4204d119965",
          "sha256": "de078be1e615224adf3af571c5488f6c3434fca17ae5b692241ef5cc33952390"
        },
        "downloads": -1,
        "filename": "easysockets-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c95cae4f6033b9765496c4204d119965",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3606,
        "upload_time": "2022-01-09T17:18:33",
        "upload_time_iso_8601": "2022-01-09T17:18:33.504408Z",
        "url": "https://files.pythonhosted.org/packages/c2/58/7edc12583df14169653f2813ef07aa7e9a98f49a66c5cb056898c2f16c82/easysockets-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2587edc12583df14169653f2813ef07aa7e9a98f49a66c5cb056898c2f16c82",
        "md5": "c95cae4f6033b9765496c4204d119965",
        "sha256": "de078be1e615224adf3af571c5488f6c3434fca17ae5b692241ef5cc33952390"
      },
      "downloads": -1,
      "filename": "easysockets-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c95cae4f6033b9765496c4204d119965",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3606,
      "upload_time": "2022-01-09T17:18:33",
      "upload_time_iso_8601": "2022-01-09T17:18:33.504408Z",
      "url": "https://files.pythonhosted.org/packages/c2/58/7edc12583df14169653f2813ef07aa7e9a98f49a66c5cb056898c2f16c82/easysockets-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}