{
  "info": {
    "author": "Jesse Bonanno",
    "author_email": "jessebonanno@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pySlope\n\n\n[![PyPi](https://img.shields.io/pypi/v/pyslope.svg)](https://pypi.org/project/pyslope/)\n[![License](https://img.shields.io/badge/license-MIT-lightgreen.svg)](https://github.com/JesseBonanno/pyslope/blob/main/LICENSE.txt)\n[![CodeFactor](https://www.codefactor.io/repository/github/jessebonanno/pyslope/badge?s=43db3d31fb1ca55747ede7e5205c7d9e0cf37ced)](https://www.codefactor.io/repository/github/jessebonanno/pyslope)\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/JesseBonanno/pyslope/main?filepath=pyslope%2Fexamples%2Freadme_example.ipynb)\n[![Documentation Status](https://readthedocs.org/projects/pyslope/badge/?version=latest)](https://pyslope.readthedocs.io/en/latest)\n[![Code Style](https://img.shields.io/badge/code%20style-black-black)](https://github.com/psf/black)\n[![Downloads](https://pepy.tech/badge/pyslope)](https://pepy.tech/project/pyslope)\n[![codecov](https://codecov.io/gh/JesseBonanno/PySlope/branch/main/graph/badge.svg?token=ASUIW54CXV)](https://codecov.io/gh/JesseBonanno/PySlope)\n[![CI](https://github.com/JesseBonanno/PySlope/actions/workflows/ci.yaml/badge.svg)](https://github.com/JesseBonanno/PySlope/actions/workflows/ci.yaml)\n[![pre-commit](https://github.com/JesseBonanno/PySlope/actions/workflows/pre-commit.yaml/badge.svg)](https://github.com/JesseBonanno/PySlope/actions/workflows/pre-commit.yaml)\n\npySlope is a 2D slope stability module based on bishops method of slices. This module allows for the following parameters:\n   - unlimited horizontal geological units\n   - water table\n   - uniform loads\n   - line loads\n   - slope search limits\n\nThis module can return plots for the critical failure slope or plots for all failure slopes below a certain factor of safety.\n\n## Project Purpose\n\nThe purpose of this project is two fold:\n\n   1. Create a free online slope stability software\n   2. Provide a pythonic solution to implementing Bishop's method based on object oriented coding principles\n\nPerforming a slope stability calculation by hand is extremely uneconimical and time consuming. The problem involves a lot of geometrical mathematics which can make the calculation hard to achieve with only excel. Python packages exist for geometrical mathematics which makes Python well suited for implementing a slope stability analysis package. There is however, no well-documented open-source slope stability software that can currently be found online. This package aims to fill that gap.\n\n## Functionality and usage\n\nA typical use case of the `pySlope` package involves the following steps:\n\n1. Create a `Slope` object\n2. Create `Material` objects and assign to `Slope`\n3. Create `Udl` or `LineLoad` objects and assign to `Slope`\n4. Set water table\n5. Set analysis limits\n6. Analyse slope for critical factor of safety\n7. Create plots\n\nYou can follow along with this example below in this web-based binder jupyter notebook. [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/JesseBonanno/pyslope/main?filepath=pyslope%2Fexamples%2Freadme_example.ipynb)\n\n### Creating a Slope\n\nThe creation of a `Slope` instance involves the input of the:\n\n   - slope height (m) and\n   - angle (deg) or\n   - length (m)\n\nOnly one of the values is used out of the length and angle, the other value should be set to None.\n\n```python\ns = Slope(height=3, angle=30, length=None)\n```\n\n### Defining Materials\n\nThe creation of a `Material` object involves the input of:\n\n   - unit weight (kN/m3)\n   - friction angle\n   - cohesion (kPa)\n   - depth from top of slope to bottom of material layer (m)\n\nOnce a material is defined it can then be assigned to the `Slope` instance.\n\n```python\nm1 = Material(\n    unit_weight=20,\n    friction_angle=45,\n    cohesion=2,\n    depth_to_bottom=2\n)\nm2 = Material(20, 30, 2, 5)    # Material defined with positional arguments\ns.set_materials(m1, m2)        # An unlimited number of materials can be assigned at one time\n```\n\nThe slope will know to order the materials based on the depth to the bottom of the strata so the order that the materials are provided isn't important. It is important that the same depth isnt provided twice for two different materials, and attempting this will raise an error.\n\n### Defining Uniform Loads\n\nThe creation of a `Udl` (uniform distributed load) object involves the input of:\n\n   - magnitude of load (kPa)\n   - offset of load from crest of slope (m) (default 0 m)\n   - length of load (m) (default infinite)\n\n```python\nu1 = Udl(magnitude = 100, offset = 2, length = 1)\n\n# by default offset = 0 (m) and length = None.\nu2 = Udl(magnitude = 20)    \n\n# assign uniform loads to model \ns.set_udls(u1, u2)\n```\n\n### Defining Line Loads\n\nThe creation of a `LineLoad` object involves the input of:\n   - magnitude of load (kN / m)\n   - offset of load from crest of slope (m) (default 0 m)\n\n```python\n\n# define line load, similiar to Udl except there is no length parameter and magnitude is in units (kN/m)\np1 = LineLoad(magnitude = 10, offset = 3)\n\n# assign line loads to slope\ns.set_lls(p1)\n```\n\n### Defining Water Table\n\nBy default there is no water table. The water table is defined by its depth from the top of the slope (m).\n\n```python\ns.set_water_table(4)\n```\n\n### Defining Analysis Limits\n\nAnalysis limits can be specified as a general left and right limit, OR as a set of limits which control the range from which the top of failures can occur and the bottom of failures can occur.\n\nCurrently the model coordinates are dynamic in that the overall model dimensions are based on the size of the slope.\n\nThe `get_top_coordinates` and `get_bottom_coordinates` methods can be useful to help define limits in reference to the top and bottom of the slope. \n\n```python\ns.set_analysis_limits(s.get_top_coordinates()[0] - 5, s.get_bottom_coordinates()[0] + 5)\n```\n\n### Analysing Slope\n\nTo analyse the `Slope` the analyse_slope() method is called. By default 2000 iterations are run with 50 slices per failure plane.\n\n```python\n# The user can change the number of slices and iterations with the method below.\n# The line below is implicitly called and only required by the user if they want to change iterations\ns.update_analysis_options(slices=50, iterations=2500)\n\n# run analysis\ns.analyse_slope()\n```\n\n### Interpretting results\n\nAfter analysing the slope the critical factor of safety can be taken as below.\n\n```python\nprint(s.get_min_FOS())\n```\n\nA more useful output might be a plot. Currently there are 3 main plots that can be called.\n\n```python\ns.plot_boundary()  # plots only the boundary\ns.plot_critical()  # plots the boundary with the critical failure of the slope\ns.plot_all_planes(max_fos=i) # plots boundary with all slope failures below fos i (where i is number)\n```\n\nExamples of the plots are shown below. \n\n![example_1 plot critical](https://github.com/JesseBonanno/pyslope/blob/main/pyslope/examples/readme_example_plot_critical.png)\n![example_1 plot all slopes fos less than 2](https://github.com/JesseBonanno/pyslope/blob/main/pyslope/examples/readme_example_plot_all_maxfos2.png)\n\n### Dynamic Analysis\n\nInstead of standard static analysis the user also has the option to make load objects *dynamic*. The user can then perform a dynamic analysis rather than static, which moves the load in order to determine the required offset for a minimum factor of safety.\n\nConsidering the example above, we can continue and make u1 dynamic.\n\n```python\n# remove udl object load from slope\ns.remove_udls(u1)\n\n# now lets add the udl again but this time set the load as 'dynamic'\n# for all loads and materials we also have the option to set the color ourselves\n# lets try set the color as 'purple'\ns.set_udls(\n    Udl(magnitude=100, length=1, offset=2, dynamic_offset=True, color='purple')\n)\n\n# run dynamic analysis aiming for a FOS of 1.4\ns.analyse_dynamic(critical_fos=1.4)\n\n# get dictionary of all determined minimum FOS with key value pairing of offset : value\ns.get_dynamic_results()\n\n# or can print the values out\ns.print_dynamic_results()\n```\n\nFrom this we get the following output results:\n\n- Offset: 0.000 m, FOS: 1.288\n- Offset: 0.735 m, FOS: 1.402\n- Offset: 1.463 m, FOS: 1.510\n- Offset: 5.186 m, FOS: 1.684\n\nWe can also get a plot as after running dynamic analysis all plots are based on the final iteration of the dynamic analysis.\n\n![example_1 plot all slopes fos less than 2](https://github.com/JesseBonanno/pyslope/blob/main/pyslope/examples/readme_example_plot_dynamic.png)\n\n\n## Installing the package\n\nIf you want to install the `pyslope` package, you run this one-liner:\n\n```shell\npip install pyslope\n```\n\n> **NOTE**: You need Python 3 to install this package (you may need to write `pip3` instead of `pip`).\n\nThe library dependencies are listed in the file `requirements.txt`, but you only need to look at them if you clone the repository.\nIf you install the package via `pip`, the listed dependencies should be installed automatically.\n\n## Testing\n\nThis project uses ``pytest`` to run tests and also to test docstring examples.\n\nInstall the test dependencies.\n\n```shell\npip install -r requirements.txt\n```\n\nRun the tests from the top level directory.\n\n```shell\n$ pytest\n=== 3 passed in 0.13 seconds ===\n```\n\n## Validation\n\nThe results of this project have been validated against Slidev6.0 and Hyrcanv1.75. See the [documentation](https://pyslope.readthedocs.io/en/latest/examples.html#validation-of-results) for more detail \n\n## Future Work\n\nThere is a lot of room for expansion of the project, and the direction of the project will strongly be affected by open-source contribution from the community. Some things in the short to medium term scope of work are:\n\n- better documentation\n- unit testing\n- horizontal loads\n\n## Contributing\n\nThe guidelines for contributing are specified [here](https://github.com/JesseBonanno/pyslope/blob/main/CONTRIBUTING.md).\n\n## Support\n\nThe guidelines for support are specified [here](https://github.com/JesseBonanno/pyslope/blob/main/SUPPORT.md).\n\n\n## Developing\n\nThis project uses ``black`` to format code and ``flake8`` for linting. We also support ``pre-commit`` to ensure\nthese have been run. To configure your local environment please install these development dependencies and set up\nthe commit hooks.\n\n```shell\n$ pip install black flake8 pre-commit\n$ pre-commit install\n```\n\nReleasing\n---------\n\nReleases are published automatically when a tag is pushed to GitHub.\n\n.. code-block:: bash\n\n   # Set next version number\n   export RELEASE=vX.X.X\n\n   # Create tags\n   git commit --allow-empty -m \"Release $RELEASE\"\n   git tag -a $RELEASE -m \"Version $RELEASE\"\n\n   # Push (for working from a fork)\n   git push upstream --tags\n\n   # if not working from fork would instead be\n   # git push origin --tags\n\n## License\n\n[![License](https://img.shields.io/badge/license-MIT-lightgreen.svg)](https://github.com/JesseBonanno/pyslope/blob/main/LICENSE.txt)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/JesseBonanno/pyslope/archive/v1.1.9.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JesseBonanno/pyslope",
    "keywords": "geotechnical,slope,stability,civil,engineering,bishops",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyslope",
    "package_url": "https://pypi.org/project/pyslope/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyslope/",
    "project_urls": {
      "Download": "https://github.com/JesseBonanno/pyslope/archive/v1.1.9.tar.gz",
      "Homepage": "https://github.com/JesseBonanno/pyslope"
    },
    "release_url": "https://pypi.org/project/pyslope/1.1.9/",
    "requires_dist": [
      "colour (>=0.1.5)",
      "tqdm (>=4.54.1)",
      "plotly (>=4.14.1)"
    ],
    "requires_python": "",
    "summary": "A 2D Slope Stability Software using bishops method",
    "version": "1.1.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14079488,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd656a1566c7c54b17e889d9d58a163792e54ade0541c0fdd275ec80d49518fd",
          "md5": "2eb563fa23a844f51d9642372e59ea26",
          "sha256": "db0bac719f08f4a682c98a0ef70e77a6b0e96597c1c8ae5d531a544e555f41d2"
        },
        "downloads": -1,
        "filename": "pyslope-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2eb563fa23a844f51d9642372e59ea26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29179,
        "upload_time": "2022-04-23T00:10:57",
        "upload_time_iso_8601": "2022-04-23T00:10:57.355911Z",
        "url": "https://files.pythonhosted.org/packages/fd/65/6a1566c7c54b17e889d9d58a163792e54ade0541c0fdd275ec80d49518fd/pyslope-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "047a5e6d0a9ec7ee53825abcb24277f9a99869f7b49f7ddc95de30c58c2d1008",
          "md5": "b603b8acf6ceb6f6fcb6492a1fef2764",
          "sha256": "b5757b5d66b1647c119d03274b78f31818ad5ba55ee815188155760e01b0a235"
        },
        "downloads": -1,
        "filename": "pyslope-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b603b8acf6ceb6f6fcb6492a1fef2764",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28825,
        "upload_time": "2022-04-23T00:16:20",
        "upload_time_iso_8601": "2022-04-23T00:16:20.597399Z",
        "url": "https://files.pythonhosted.org/packages/04/7a/5e6d0a9ec7ee53825abcb24277f9a99869f7b49f7ddc95de30c58c2d1008/pyslope-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e25afdf0e52e85a36b24b723793cdd578cd797170630742475cca9057f6852ce",
          "md5": "3f8b753ca05b8be4d3c373dbacb14bc1",
          "sha256": "af83a97308016101a38445ef4aebcdf9c3a2836b79f2c7882e1c62926de060df"
        },
        "downloads": -1,
        "filename": "pyslope-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f8b753ca05b8be4d3c373dbacb14bc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29311,
        "upload_time": "2022-05-03T11:19:46",
        "upload_time_iso_8601": "2022-05-03T11:19:46.444969Z",
        "url": "https://files.pythonhosted.org/packages/e2/5a/fdf0e52e85a36b24b723793cdd578cd797170630742475cca9057f6852ce/pyslope-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5bdab4ee3b67bc1cf1b41e5d7127d736150cd8d0166dc5be714d8e25b5b621e",
          "md5": "25b57bd0480ceedf0d96b6da2379111e",
          "sha256": "929f274e1c83c8fe5f1b774c824cc7fb3e2779b276b85a4ff3ee89a94ad948d8"
        },
        "downloads": -1,
        "filename": "pyslope-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25b57bd0480ceedf0d96b6da2379111e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29362,
        "upload_time": "2022-05-03T11:29:07",
        "upload_time_iso_8601": "2022-05-03T11:29:07.878469Z",
        "url": "https://files.pythonhosted.org/packages/b5/bd/ab4ee3b67bc1cf1b41e5d7127d736150cd8d0166dc5be714d8e25b5b621e/pyslope-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aaa2e3359f5b06821357d00d7321c7db43a9a291fb991e7fbe07ed6f84e5214",
          "md5": "362fa468aa8f058f0e6dbd56987e869e",
          "sha256": "4c830861ce2f8405efec36c2821b2b63a86e68616744fcf8a9da446afafeaefc"
        },
        "downloads": -1,
        "filename": "pyslope-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "362fa468aa8f058f0e6dbd56987e869e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2988912,
        "upload_time": "2022-05-04T11:01:51",
        "upload_time_iso_8601": "2022-05-04T11:01:51.556284Z",
        "url": "https://files.pythonhosted.org/packages/1a/aa/2e3359f5b06821357d00d7321c7db43a9a291fb991e7fbe07ed6f84e5214/pyslope-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d85042cf68c406bb3912d943bff04468011968a97269a48b491e28dffa0132b",
          "md5": "a33970a3f5bf26e0c09789dca80ec1f2",
          "sha256": "68e021f971ccf796ea2793553c980944fcf9782c8e1359629f9b8bcf1b37f41a"
        },
        "downloads": -1,
        "filename": "pyslope-1.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a33970a3f5bf26e0c09789dca80ec1f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28970,
        "upload_time": "2022-06-09T08:18:06",
        "upload_time_iso_8601": "2022-06-09T08:18:06.680135Z",
        "url": "https://files.pythonhosted.org/packages/1d/85/042cf68c406bb3912d943bff04468011968a97269a48b491e28dffa0132b/pyslope-1.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "103231e6d9e4ed42d22e39c2e81654dfc4f86587053a79dc9fd706f0b55eeefc",
          "md5": "f4e94235f7eb72d49e3ca5e191a5f8a2",
          "sha256": "d8d9eb0944995910e2b89ea3e070056e5a64a75c87201d1cedc7a5a3583ce944"
        },
        "downloads": -1,
        "filename": "pyslope-1.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "f4e94235f7eb72d49e3ca5e191a5f8a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5143609,
        "upload_time": "2022-06-09T08:18:08",
        "upload_time_iso_8601": "2022-06-09T08:18:08.056139Z",
        "url": "https://files.pythonhosted.org/packages/10/32/31e6d9e4ed42d22e39c2e81654dfc4f86587053a79dc9fd706f0b55eeefc/pyslope-1.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d85042cf68c406bb3912d943bff04468011968a97269a48b491e28dffa0132b",
        "md5": "a33970a3f5bf26e0c09789dca80ec1f2",
        "sha256": "68e021f971ccf796ea2793553c980944fcf9782c8e1359629f9b8bcf1b37f41a"
      },
      "downloads": -1,
      "filename": "pyslope-1.1.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a33970a3f5bf26e0c09789dca80ec1f2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28970,
      "upload_time": "2022-06-09T08:18:06",
      "upload_time_iso_8601": "2022-06-09T08:18:06.680135Z",
      "url": "https://files.pythonhosted.org/packages/1d/85/042cf68c406bb3912d943bff04468011968a97269a48b491e28dffa0132b/pyslope-1.1.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "103231e6d9e4ed42d22e39c2e81654dfc4f86587053a79dc9fd706f0b55eeefc",
        "md5": "f4e94235f7eb72d49e3ca5e191a5f8a2",
        "sha256": "d8d9eb0944995910e2b89ea3e070056e5a64a75c87201d1cedc7a5a3583ce944"
      },
      "downloads": -1,
      "filename": "pyslope-1.1.9.tar.gz",
      "has_sig": false,
      "md5_digest": "f4e94235f7eb72d49e3ca5e191a5f8a2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5143609,
      "upload_time": "2022-06-09T08:18:08",
      "upload_time_iso_8601": "2022-06-09T08:18:08.056139Z",
      "url": "https://files.pythonhosted.org/packages/10/32/31e6d9e4ed42d22e39c2e81654dfc4f86587053a79dc9fd706f0b55eeefc/pyslope-1.1.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}