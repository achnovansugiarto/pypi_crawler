{
  "info": {
    "author": "Emz D",
    "author_email": "seaworndrift@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# MPESA CONNECT\n\nA wrapper library for the Daraja Mpesa API\n\n[![Language](https://img.shields.io/badge/language-python-green.svg)](https://python.org)\n\n## Features\n\n- Authorization\n- Mpesa Express\n  - STK Push\n  - Query\n- Customer To Business (C2B)\n    - Register URL\n    - Simulate\n- Business To Customer (B2C)\n- Account Balance\n- Transaction Status\n\n## Installation\n\n    $ pip install mpesa-connect\n\n## Usage\n\n*NOTE: Before you start, make sure to go through the official Daraja Mpesa API [documentation](https://developer.safaricom.co.ke/Documentation)* \n\nCreate an app instance. \n\n```python\nfrom mpesa_connect import App\n\n# Sandbox\napp = App.create_sandbox(consumer_key=..., consumer_secret=...)\n\n# Production\napp = App.create_production(consumer_key=..., consumer_secret=...)\n```\n\nGenerate an authorization token.\n\n```python\nfrom mpesa_connect import Authorization\n\nauth = Authorization(app)\nresult = auth.generate_token()\naccess_token = result.access_token\n```\n*You can attach this token to the service instance or include it as an argument to the api methods calls*\n\n### Mpesa Express\n\n**STK Push**\n```python\nfrom mpesa_connect import STKPush\n\nstk = STKPush(app, access_token=access_token)\nresult = stk.process_request(\n    business_short_code=...,\n    phone_number=...,\n    amount=...,\n    call_back_url=...,\n    account_reference=...,\n    transaction_desc=...,\n    password=...,\n    timestamp=...,\n    # access_token=access_token\n)\n```\n\n**Query**\n```python\nresult = stk.query(\n    business_short_code=...,\n    checkout_request_id=...,\n    password=...,\n)\n```\nYou can use the `generate_password` helper to create a password\n\n```python\nfrom mpesa_connect.utils import generate_password\n\npassword = generate_password(\n    business_short_code=....,\n    pass_key=...,\n    timestamp=...,\n)\n```\nAlternatively, you can include the `pass_key` argument in place of `password` to auto generate the password\n\n### Customer To Business (C2B) API\n\n**Register URL**\n```python\nfrom mpesa_connect import C2B\nfrom mpesa_connect.enums import ResponseType, TransactionType\n\nc2b = C2B(app, access_token=access_token)\nresult = c2b.register_url(\n    short_code=...,\n    validation_url=...,\n    confirmation_url=...,\n    response_type=ResponseType.COMPLETED,\n)\n```\n\n**Simulate**\n```python\nresult = c2b.simulate(\n    short_code=...,\n    command_id=TransactionType.CUSTOMER_PAY_BILL_ONLINE,\n    amount=...,\n    msisdn=...,\n    bill_ref_number=...,\n)\n```\n\n### Business To Customer (B2C) API\n\n```python\nfrom mpesa_connect import B2C\nfrom mpesa_connect.enums import TransactionType\n\nb2c = B2C(app, access_token=access_token)\nresult = b2c.payment_request(\n    initiator_name=...,\n    security_credential=...,\n    amount=...,\n    command_id=TransactionType.BUSINESS_PAYMENT,\n    party_a=...,\n    party_b=...,\n    queue_time_out_url=...,\n    result_url=...,\n    remarks=...,\n    occassion=...,\n)\n```\n\n### Account Balance API\n\n```python\nfrom mpesa_connect import AccountBalance\nfrom mpesa_connect.enums import TransactionType, IdentifierType\n\nab = AccountBalance(app, access_token=access_token)\nresult = ab.query(\n    initiator=...,\n    security_credential=...,\n    command_id=TransactionType.ACCOUNT_BALANCE,\n    identifier_type=IdentifierType.ORGANIZATION_SHORT_CODE,\n    party_a=...,\n    queue_time_out_url=...,\n    result_url=...,\n    remarks=...,\n)\n```\n\n### Transaction Status API\n\n```python\nfrom mpesa_connect import TransactionStatus\nfrom mpesa_connect.enums import TransactionType, IdentifierType\n\nts = TransactionStatus(app, access_token=access_token)\nresult = ts.query(\n    initiator=...,\n    security_credential=...,\n    transaction_id=...,\n    command_id=TransactionType.TRANSACTION_STATUS_QUERY,\n    identifier_type=IdentifierType.ORGANIZATION_SHORT_CODE,\n    party_a=...,\n    queue_time_out_url=...,\n    result_url=...,\n    remarks=...,\n    occassion=...,\n)\n```\n\nAll API methods return a result object with a `response` property which is a [`requests.Response`](https://requests.readthedocs.io/en/latest/api/#requests.Response) object, plus various properties corresponding to the json body of the response\n\n## Running Tests\n\nInstall dependencies\n\n    $ poetry install\n\nCreate `.env` file from [.env.example](https://github.com/enwawerueli/mpesa-connect/blob/main/.env.example) then edit it to add your app credentials and test parameters\n\n    $ cp .env.example .env\n\n Run tests\n\n    $ poetry run pytest\n\n## License\n\n[MIT](https://github.com/enwawerueli/mpesa-connect/blob/main/LICENSE)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/enwawerueli/mpesa-connect",
    "keywords": "daraja,mpesa,payment",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mpesa-connect",
    "package_url": "https://pypi.org/project/mpesa-connect/",
    "platform": null,
    "project_url": "https://pypi.org/project/mpesa-connect/",
    "project_urls": {
      "Homepage": "https://github.com/enwawerueli/mpesa-connect",
      "Repository": "https://github.com/enwawerueli/mpesa-connect"
    },
    "release_url": "https://pypi.org/project/mpesa-connect/0.1.1/",
    "requires_dist": [
      "requests (>=2.28.2,<3.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "A wrapper library for the Daraja Mpesa API",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16755237,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0adcef58cf85ef8ce9b8f918cb381a37f1ea4fdd70bf7f9fef0f38251b7ff685",
          "md5": "8680ed344560d225b3bac69362c5a7cb",
          "sha256": "8e07178e5ba4bd3f2ee13e32a22c149e94733024dbdef86cc6bbf6a9ae8748fe"
        },
        "downloads": -1,
        "filename": "mpesa_connect-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8680ed344560d225b3bac69362c5a7cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 11761,
        "upload_time": "2023-02-04T15:08:06",
        "upload_time_iso_8601": "2023-02-04T15:08:06.769174Z",
        "url": "https://files.pythonhosted.org/packages/0a/dc/ef58cf85ef8ce9b8f918cb381a37f1ea4fdd70bf7f9fef0f38251b7ff685/mpesa_connect-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cc18ae2b88c890d7226ab32b8010d9703c0f954d9697f8317911837a1cc25f2",
          "md5": "74e013fca7dbc221d9811c16ca37db0b",
          "sha256": "fbda1ba986b60162e39803cb07915e8d2f3ec45d94ebf76cbc40788409baff35"
        },
        "downloads": -1,
        "filename": "mpesa_connect-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "74e013fca7dbc221d9811c16ca37db0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 10659,
        "upload_time": "2023-02-04T15:08:09",
        "upload_time_iso_8601": "2023-02-04T15:08:09.648409Z",
        "url": "https://files.pythonhosted.org/packages/9c/c1/8ae2b88c890d7226ab32b8010d9703c0f954d9697f8317911837a1cc25f2/mpesa_connect-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdf48da63f9879ce1df95c637110909541f05cb2dce9ffb1eccc34fdad6772f0",
          "md5": "4e93b4723002df8060e045e225bf7615",
          "sha256": "f64a7a36051486243b092e3901c190c4156d22d8259055aa405c4b86c28364be"
        },
        "downloads": -1,
        "filename": "mpesa_connect-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e93b4723002df8060e045e225bf7615",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 11936,
        "upload_time": "2023-02-08T19:37:32",
        "upload_time_iso_8601": "2023-02-08T19:37:32.271596Z",
        "url": "https://files.pythonhosted.org/packages/fd/f4/8da63f9879ce1df95c637110909541f05cb2dce9ffb1eccc34fdad6772f0/mpesa_connect-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "229a5399250813d33efeb64dea5255fef0c86f210df7f6819a1e624d754e2dfe",
          "md5": "bb83028ee3e3c02c545fa2adfb4e00c5",
          "sha256": "624af5ec445dfebbe5169257f2a842668ae2ccab85306308336642a17c139441"
        },
        "downloads": -1,
        "filename": "mpesa_connect-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bb83028ee3e3c02c545fa2adfb4e00c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 10783,
        "upload_time": "2023-02-08T19:37:34",
        "upload_time_iso_8601": "2023-02-08T19:37:34.727468Z",
        "url": "https://files.pythonhosted.org/packages/22/9a/5399250813d33efeb64dea5255fef0c86f210df7f6819a1e624d754e2dfe/mpesa_connect-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fdf48da63f9879ce1df95c637110909541f05cb2dce9ffb1eccc34fdad6772f0",
        "md5": "4e93b4723002df8060e045e225bf7615",
        "sha256": "f64a7a36051486243b092e3901c190c4156d22d8259055aa405c4b86c28364be"
      },
      "downloads": -1,
      "filename": "mpesa_connect-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4e93b4723002df8060e045e225bf7615",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 11936,
      "upload_time": "2023-02-08T19:37:32",
      "upload_time_iso_8601": "2023-02-08T19:37:32.271596Z",
      "url": "https://files.pythonhosted.org/packages/fd/f4/8da63f9879ce1df95c637110909541f05cb2dce9ffb1eccc34fdad6772f0/mpesa_connect-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "229a5399250813d33efeb64dea5255fef0c86f210df7f6819a1e624d754e2dfe",
        "md5": "bb83028ee3e3c02c545fa2adfb4e00c5",
        "sha256": "624af5ec445dfebbe5169257f2a842668ae2ccab85306308336642a17c139441"
      },
      "downloads": -1,
      "filename": "mpesa_connect-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bb83028ee3e3c02c545fa2adfb4e00c5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 10783,
      "upload_time": "2023-02-08T19:37:34",
      "upload_time_iso_8601": "2023-02-08T19:37:34.727468Z",
      "url": "https://files.pythonhosted.org/packages/22/9a/5399250813d33efeb64dea5255fef0c86f210df7f6819a1e624d754e2dfe/mpesa_connect-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}