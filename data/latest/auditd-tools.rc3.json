{
  "info": {
    "author": "Joerg Baach",
    "author_email": "mail@baach.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Auditd Tools\n\n*Python tools to handle auditd events*\n\nExample:\n\n```python\nfrom auditd_tools.event_parser import AuditdEventParser\nimport sys\n\np = AuditdEventParser()\nfor line in sys.stdin:\n    for event in p.parseline(line):\n        print(event['action'])  # -> opened-file\n        print(event['filepath'])  # -> /home/joerg/tmp/hallo\n        print(event['datetime'])  # -> 2022-05-30 13:55:17.020000\n```\n\nThis collection of tools provides:\n\n- An [event_parser](#using-the-parser) (see above), which handles events emitted by `auparse`, and\n  returns python dicts representing these events.\n- An [example plugin](#using-the-plugin) for `audispd`, which writes out filesystem changes in a\n  directory of choice to a logfile.\n- [Command line tools](#command-line-tools) to transform auditd events into more structured\n  formats (and display them)\n\nIf you want you can read some lines about the [background](#background) first.\n\nIt all relies heavily on the work of Steve Grubb, e.g.\n\n- https://security-plus-data-science.blogspot.com/2017/06/using-auparse-in-python.html\n\nAlso, a friend of mine was heavily involved.\n\n## Status\n\nThis is pretty much alpha, but it seems to work. Don't rely on it, better pick it apart and please\ngive\nme feedback about my errors.\n\n## Requirements\n\nYou need to install some packages for your distro:\n\n    sudo apt install auditd ausispd-plugins python3-audit \n\n## Install\n\nThe package can be installed using pip:\n```bash\npip install auditd_plugins\n```\nThen you can use it along these lines:\n\n```python\nimport sys\n\nfrom auditd_tools import event_parser\n\np = event_parser.AuditdEventParser()\n\nfilename = sys.argv[1] if len(sys.argv) > 1 else 'test.log'\nfp = sys.stdin if filename == '-' else open(filename)\n\nfor line in sys.stdin:\n    for e in p.parseline(line):\n        print(e)  \n        # do something useful here\n        ...\n```\n\n### Details\n\nThe parser lives in [event_parser.py](auditd_tools/event_parser.py)\n\nThe [command line tools](#command-line-tools) section give examples of how to use the parser.\nGenerally speaking, you will feed line by line of input to `AuditdEventParser.parse_line`, which\nmight return a list of events or `None`. The events have the following structure:\n\n- event - the event dictionary\n    - **action** - name of a filesystem action if suitable\n    - **datetime** - datetime of the event, derived from the timestamp\n    - **filepath** - the affected filepath (guessed)\n    - **key** - the key that was configured in the `audit.rules`\n    - **serial** - serial number of the event\n    - **timestamp** - the actual timestamp of the event\n    - **normalized** - there seems to be way to normalize the data for the event. That info is in\n      here.\n    - **records** - a list of record dictionaries for this event. Depends on the call what is in it\n        - _**raw** - a dictionary of the raw values as delivered by audit.d\n        - **_other keys_** - record specific data, encoded, interpreted and ints properly cast\n\n## Using the audispd plugin\n\n    git clone https://github.com/jhb/auditd_tools.git\n\nCopy and adapt the `audit.rules` (this might override existing rules, watch out):\n\n    cd auditd_tools\n    sudo cp audit.rules /etc/audit/rules.d\n\n(you could also write the rules to a separate file in that directory, see\nthe [auditd documentation](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/sec-defining_audit_rules_and_controls#sec-Defining_Audit_Rules_and_Controls_in_the_audit.rules_file)\nfor that)\n\nMake sure that the right directory is watched (e.g. replacing `/home/joerg/tmp`), and set the\n(event-)key to whatever you like. For more information on the exclusion of entries, read:\n\n- https://access.redhat.com/solutions/35978\n- https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security_guide/sec-audit_record_types\n\nNext, configure the plugin for `audispd`:\n\n    sudo cp audisp_fsaction_plugin.conf /etc/audisp/plugins.d\n\nAnd adapt the file, especially the paths to the plugin and the logfile.\n\nMake sure the actual plugin is owned by root:\n\n    sudo chown root auditd_tools/audisp_fs_action_plugin.py\n\nRestart the server:\n\n     sudo service auditd restart\n\nIf everything worked out,\n\n    sudo service auditd status\n\nshould give you something like this:\n\n```\n# service auditd status\nauditd.service - Security Auditing Service\n     Loaded: loaded (/lib/systemd/system/auditd.service; enabled; vendor preset: enabled)\n     Active: active (running) since Mon 2022-05-30 12:52:11 CEST; 1s ago\n       Docs: man:auditd(8)\n             https://github.com/linux-audit/audit-documentation\n    Process: 367278 ExecStart=/sbin/auditd (code=exited, status=0/SUCCESS)\n    Process: 367285 ExecStartPost=/sbin/augenrules --load (code=exited, status=0/SUCCESS)\n   Main PID: 367279 (auditd)\n      Tasks: 5 (limit: 37508)\n     Memory: 4.8M\n     CGroup: /system.slice/auditd.service\n             ├─367279 /sbin/auditd\n             ├─367281 /sbin/audispd\n             └─367283 python3 /home/joerg/projects/audit/auditd_tools/audisp_fsaction_plugin.py fsaction /home/joerg/projects/audit/fsaction_plugin.log\n\n```\n\nIf you don't see the `audispd` line or the plugin line, check syslog for messages that will help you\ndebug:\n\n    sudo cat /var/log/syslog | grep audit\n\nNow, if you e.g. `echo 'foo' > bar` in your directory, it should show up in the logfile.\n\n## Command line tools\n\nUse\n\n    sudo ausearch --start today --raw | ./pprint_events.py -\n\nto translate the events to python and have them pretty printed\n\nUse\n\n    sudo ausearch --start today --raw | ./jsonify_events.py -\n\nto translate the events to json, and have them printed line by\nline ([jsonl](https://jsonlines.org/))\n\nUse\n\n    sudo ausearch --start today --raw --key fsaction | ./audisp_fsaction_plugin.py -\n\nto print events as a list of file changes. You can provide an optional key as the second argument to\nif you haven't filtered for it already in the input. (yes, this is the plugin)\n\n## Background\n\nMy use case is to have a full-text search like spotlight in macOS. What is nice there is that\nchanges in the filesystem are reflected in the search after a very short time. For this to happen\non my linux machine or a linux server, I would first need to be notified of the changes in the\nfilesystem, e.g. when a file was written.\n\nI could use `inotify` for the notification, but the directory is very large, and that means that\ninotify will take rather long to set up all watches, and will miss on writes during that period.\n\nThe solution at hand builds on `auditd`, which is a service that can monitor all kind of events.\nIt's standard logfile in `/var/log/audit/audit.log` is rather cryptic. In short, it contains one\nrecord per line, and records with the same event serial are parts of the same event.\nThe records don't come in order, [see below](#order-of-records).\n\nThe idea is to instead use python to parse the events, and write a much smaller \"sane\" logfile\nsomewhere. For this, we use `audispd`, which is an event multiplexer that gets events from auditd,\nand passed them one to multiple plugins (which read from stdin, and do whatever they want).\n\n```mermaid\n\nflowchart TD;\n\nauditd --feeds--> audispd --feeds --> plugin\nauditd --writes--> audit.log\n/etc/audisp/plugins.d/plugin.conf -.config.-> audispd\n/etc/audit/rules.d/audit.rules -. config .-> auditd\nplugin --writes--> shortlog[short logfile]\n\n```\n\nFor this to work, we need to set up `audit.rules` to watch our desired directory, and assign a\nspecific key to mark those events. A suitable `plugin.conf` will then tell `audispd` to feed events\nto the configured plugin.\n\nSee:\n\n- https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/auditing-the-system_security-hardening\n- https://documentation.suse.com/sles/12-SP4/html/SLES-all/cha-audit-comp.html\n\n## Order of records\n\nhttps://manpages.debian.org/testing/auditd/auditd.conf.5.en.html tells us:\n\n> Auditd events are made up of one or more records. The auditd system cannot guarantee that the set\n> of records that make up an event will occur atomically, that is the stream will have interleaved\n> records of different events, IE\n>\n>\n> event0_record0  \n> event1_record0  \n> event2_record0  \n> event1_record3  \n> event2_record1  \n> event1_record4  \n> event3_record0\n>\n> The auditd system does not guarantee that the records that make up an event will appear in order.\n> Thus, when processing event streams, we need to maintain a list of events with their own list of\n> records hence List of List (LOL) event processing.\n>\n> When processing an event stream we define the end of an event via\n>\n> record type = AUDIT_EOE (audit end of event type record), or  \n> record type = AUDIT_PROCTITLE (we note the AUDIT_PROCTITLE is always the last record), or  \n> record type = AUDIT_KERNEL (kernel events are one record events), or  \n> record type < AUDIT_FIRST_EVENT (only single record events appear before this type), or  \n> record type >= AUDIT_FIRST_ANOM_MSG (only single record events appear after this type), or  \n> record type >= AUDIT_MAC_UNLBL_ALLOW && record type <= AUDIT_MAC_CALIPSO_DEL (these are also one\n> record events), or for the stream being processed, the time of the event is over\n> end_of_event_timeout seconds old.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jhb/auditd_tools",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "auditd-tools",
    "package_url": "https://pypi.org/project/auditd-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/auditd-tools/",
    "project_urls": {
      "Homepage": "https://github.com/jhb/auditd_tools"
    },
    "release_url": "https://pypi.org/project/auditd-tools/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python tools to handle auditd events",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14053170,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "130474087f6474adefa46010c85c45b0acf4970e0452fec24181f8a9f546f6c4",
          "md5": "aee1308f5dd5d237e405b50f9089c010",
          "sha256": "42b733dec11865b62bb63dc367a389f8f392ba6ec91f16f61b5ae99158318a47"
        },
        "downloads": -1,
        "filename": "auditd_tools-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aee1308f5dd5d237e405b50f9089c010",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21910,
        "upload_time": "2022-06-06T20:06:22",
        "upload_time_iso_8601": "2022-06-06T20:06:22.516902Z",
        "url": "https://files.pythonhosted.org/packages/13/04/74087f6474adefa46010c85c45b0acf4970e0452fec24181f8a9f546f6c4/auditd_tools-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fefb9a1a1e6a37f2a1b3aaac588d3c01b69cd91ffc56f52880c83bd0ae1939f",
          "md5": "4f3b865a10732be3a80bf44e914c6fbe",
          "sha256": "4b9ea0e9a9e07c6ca45c0514df97e6c8b2c8d09f5d530280da5bab04967553e2"
        },
        "downloads": -1,
        "filename": "auditd-tools-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4f3b865a10732be3a80bf44e914c6fbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20160,
        "upload_time": "2022-06-06T20:06:24",
        "upload_time_iso_8601": "2022-06-06T20:06:24.666771Z",
        "url": "https://files.pythonhosted.org/packages/0f/ef/b9a1a1e6a37f2a1b3aaac588d3c01b69cd91ffc56f52880c83bd0ae1939f/auditd-tools-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c2077c79b0c64da623ef20838fb26cf229952b528e35fe157e6ad623bdf479e",
          "md5": "26e2045620283840eabfca901f26a567",
          "sha256": "6de9cb0c8978bc5bc84b812a1737cdafdaeae85fab068fe240ee8ffc7e614dbb"
        },
        "downloads": -1,
        "filename": "auditd_tools-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26e2045620283840eabfca901f26a567",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19704,
        "upload_time": "2022-06-06T21:43:25",
        "upload_time_iso_8601": "2022-06-06T21:43:25.878723Z",
        "url": "https://files.pythonhosted.org/packages/7c/20/77c79b0c64da623ef20838fb26cf229952b528e35fe157e6ad623bdf479e/auditd_tools-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a666f633d83c3ea95580e35d72b54b1c05dcda422d2878d8069ed75b7ae5f3b",
          "md5": "d36ab4c710d34774053d7b96fefd5351",
          "sha256": "c808d6b97d6857151760fa8fbe392205b973bfc1ebfce2f9d32aab2dc75eebc5"
        },
        "downloads": -1,
        "filename": "auditd-tools-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d36ab4c710d34774053d7b96fefd5351",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22784,
        "upload_time": "2022-06-06T21:43:27",
        "upload_time_iso_8601": "2022-06-06T21:43:27.620303Z",
        "url": "https://files.pythonhosted.org/packages/2a/66/6f633d83c3ea95580e35d72b54b1c05dcda422d2878d8069ed75b7ae5f3b/auditd-tools-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "451f63820c5b166994037bcd8f5eaf692b064b1b4c2bbe47bc3d3e5f18854887",
          "md5": "098fa89418471bdc8618352d5284b6cb",
          "sha256": "a6b539fc94bcedd1f211395ed73b438a6f9faa825a6fd573cef4b8f3f07aa46c"
        },
        "downloads": -1,
        "filename": "auditd_tools-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "098fa89418471bdc8618352d5284b6cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19777,
        "upload_time": "2022-06-07T05:48:27",
        "upload_time_iso_8601": "2022-06-07T05:48:27.048474Z",
        "url": "https://files.pythonhosted.org/packages/45/1f/63820c5b166994037bcd8f5eaf692b064b1b4c2bbe47bc3d3e5f18854887/auditd_tools-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5afea61f75512bb82f0a2e908b644f7de181e5a7ac650c39662f54050c9acfb",
          "md5": "fa1ba9942922e2e5fdfa6b2e1c6f541c",
          "sha256": "47ddafc58d9bba84f4ec158ff598aa22a5f3af1d698292cfdd8860e3f0d4fd91"
        },
        "downloads": -1,
        "filename": "auditd-tools-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fa1ba9942922e2e5fdfa6b2e1c6f541c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19658,
        "upload_time": "2022-06-07T05:48:28",
        "upload_time_iso_8601": "2022-06-07T05:48:28.483352Z",
        "url": "https://files.pythonhosted.org/packages/a5/af/ea61f75512bb82f0a2e908b644f7de181e5a7ac650c39662f54050c9acfb/auditd-tools-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "451f63820c5b166994037bcd8f5eaf692b064b1b4c2bbe47bc3d3e5f18854887",
        "md5": "098fa89418471bdc8618352d5284b6cb",
        "sha256": "a6b539fc94bcedd1f211395ed73b438a6f9faa825a6fd573cef4b8f3f07aa46c"
      },
      "downloads": -1,
      "filename": "auditd_tools-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "098fa89418471bdc8618352d5284b6cb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19777,
      "upload_time": "2022-06-07T05:48:27",
      "upload_time_iso_8601": "2022-06-07T05:48:27.048474Z",
      "url": "https://files.pythonhosted.org/packages/45/1f/63820c5b166994037bcd8f5eaf692b064b1b4c2bbe47bc3d3e5f18854887/auditd_tools-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5afea61f75512bb82f0a2e908b644f7de181e5a7ac650c39662f54050c9acfb",
        "md5": "fa1ba9942922e2e5fdfa6b2e1c6f541c",
        "sha256": "47ddafc58d9bba84f4ec158ff598aa22a5f3af1d698292cfdd8860e3f0d4fd91"
      },
      "downloads": -1,
      "filename": "auditd-tools-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fa1ba9942922e2e5fdfa6b2e1c6f541c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19658,
      "upload_time": "2022-06-07T05:48:28",
      "upload_time_iso_8601": "2022-06-07T05:48:28.483352Z",
      "url": "https://files.pythonhosted.org/packages/a5/af/ea61f75512bb82f0a2e908b644f7de181e5a7ac650c39662f54050c9acfb/auditd-tools-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}