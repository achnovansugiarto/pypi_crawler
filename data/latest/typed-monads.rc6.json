{
  "info": {
    "author": "Correl Roush, Sam Reghenzi",
    "author_email": "correl@gmail.com, sammyrulez@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Type-safe Monads\n\n![Build](https://github.com/sammyrulez/typed-monads/workflows/Build/badge.svg)\n[![PyPI version](https://badge.fury.io/py/typed-monads.svg)](https://badge.fury.io/py/typed-monads)\n[![codecov](https://codecov.io/gh/sammyrulez/typed-monads/branch/main/graph/badge.svg?token=QT40I23UDO)](https://codecov.io/gh/sammyrulez/typed-monads)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nThis is an experiment in building monads in Python supported by strict\ntype annotations. The goal is to be able to compose monads with the\ntype checker ensuring their correctness.\n\n\n## Motivation\n\nI'm a fan of monads, but believe they work best with the support of a\nstrong type system. I've attempted to use libraries like\n[PyMonad](https://pypi.org/project/PyMonad/), but been frustrated by a\nlack of type constraints preventing incorrect usage. I could've\nattempted to add type annotations to one of those libraries, but\nbuilding my own is more fun.\n\nThis is a fork of the original work by  [Correl Roush](http://correl.phoenixinquis.net/)\n\nI added some utility methods to make it easier to use in my day to day code and better interate with the pythonic style ( ie _List Comprehension_ )\n\n## Installation\n\n\n```bash\n$ pip install typed-monads \n```\n\n## Documentation\n\nYou can find [all the docs here](https://samreghenzi.it/typed-monads/)\n\n## Curring\n\nMixing Higher order functions ( functions that return a function ) with moand is a very common programming style other functional programming languages.\nWith _curry_ decorator you can transform a function in a _curried_ function: just apss some positional parameters and get back a function with the remaining ones.\n\n```python\n@curry\ndef power(exp: int, base: int ) -> int:\n    return math.pow(base, exp)\n\nsquare_fn = power(2) # a function that returns the square of the parameter\n\n```\n\n## Base Classes\n\n### Functor\n\n#### map (`*`)\n\nApplies a function to the contents of a functor, transforming it from\none thing to another.\n\nThe `*` operator implements map on functors, and is both left and\nright associative:\n\n```python\ndef wordcount(s: str):\n    return len(s.split())\n\n\nf.map(wordcount) == wordcount * f == f * wordcount\n```\n\n### Applicative\n\n*Extends `Functor`.*\n\n#### pure\n\nWraps a value in an applicative functor.\n\ne.g.:\n\n    Maybe.pure(\"abc\") == Just(\"abc\")\n    Result.pure(123) == Ok(123)\n\n#### apply (`&`)\n\nTransforms the value contained in the instance's functor with a\nfunction wrapped in the same type of functor.\n\nThe `&` operator implements apply on applicatives, and is\nright-associative.\n\ne.g.:\n\n```python\nincrement = lambda x: x + 1\n\nJust(3).apply(Just(increment)) == Just(increment) & Just(3) == Just(4)\n```\n\nThis can be very handily combined with map to apply curried functions\nto multiple arguments:\n\n```python\nsubtract = lambda x: lambda y: x - y\n\nsubtract * Just(10) & Just(4) == Just(6)\n```\n\n### Monad\n\n*Extends `Applicative`.*\n\n#### bind (`>>`)\n\nPasses the value within the monad through an operation returning the\nsame type of monad, allowing multiple operations to be chained.\n\nThe `>>` operator implements bind on monads, and is left-associative.\n\n```python\n@curry\ndef lookup(key: str, dictionary: Dict[str, str]) -> Maybe[str]:\n    try:\n        return Just(dictionary[key])\n    except KeyError:\n        return Nothing()\n\n\nresult = Just({\"hello\": \"world\"}).bind(lookup(\"hello\")).bind(lambda s: s.upper())\nresult = (\n    Just({\"hello\": \"world\"})\n    >> lookup(\"hello\")\n    >> (lambda s: s.upper())\n)\n```\n\n### Monoid\n\n#### mappend (`+`)\n\nDescribes an associative binary operation for a type.\n\n#### mzero\n\nProvides an identity value for the `mappend` operation.\n\n#### mconcat\n\nAccumulates a list of values using `mappend`. Returns the `mzero`\nvalue if the list is empty.\n\n## Monads\n\nWrapped values should be immutable: they are _protected_ from accidental direct writing with *Final* type and the pythonic naming convention.\n\n\n### Maybe[T]\n\nRepresents optional data. A `Maybe` instance of a certain type `T` will\neither be a `Just` object wrapping a value of that type, or `Nothing`.\n\n- Mapping a function over `Nothing` will return `Nothing` without\n  calling the function.\n- Binding an operation with a `Nothing` will return `Nothing` without\n  attempting the operation.\n\n### Result[T, E]\n\nRepresents a state of success or failure, declaring a type for each. A\n`Result` instance will either be an `Ok` object wrapping a value of\nthe success type `T`, or an `Err` object wrapping a value of the\nfailure type `E`.\n\n- Mapping a function over an `Err` will return the `Err` unchanged\n  without calling the function.\n- Binding an operation with an `Err` will return the `Err` unchanged\n  without attempting the operation.\n\n### List[T]\n\nRepresents a ordered sequence of items.\n\n- Also implements `Monoid`.\n\n### Set[T]\n\nRepresents a unordered sequence of unique items.\n\n- Also implements `Monoid`.\n\n### Future[T]\n\nRepresents an asynchronous action.\n\n- Also implements `Awaitable`.\n\n### Reader[T]\n\nRepresents the application of a function to it's argument.\n\n## Monads as iterable\n\nIt is handy to iterate over some monad contents. *List* is obliviously the first candidate:\n```python\n\nm_list: List[int] = List([1, 2, 4, 9])\nfor i in m_list:\n    ...\n\n#Or filter with a generator\n\nevens: List[int] = [k for k in m_list if k % 2 == 0 ]\n\n```\n\nIf you want to something to happen just if a *Maybe* monad is defined\n```python\n\nfor n in Just(\"one\"):\n  ...\n\n```\n\nThe same apply for *Results*\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sammyrulez/typed-monads",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "typed-monads",
    "package_url": "https://pypi.org/project/typed-monads/",
    "platform": null,
    "project_url": "https://pypi.org/project/typed-monads/",
    "project_urls": {
      "Homepage": "https://github.com/sammyrulez/typed-monads"
    },
    "release_url": "https://pypi.org/project/typed-monads/0.4.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Type-annotated monad implementations for Python 3.7+",
    "version": "0.4.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13467530,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fbbdbe29e942ab8ebebcc458b3a5f054c0544c1c8ba99573de2dc69c2082fd6",
          "md5": "6e15e5bb5f456aaf312608eee4c01d7c",
          "sha256": "80dc91b02971a141f34332ea554e586b2445afb727141c50f7575f4e4f7cd4a8"
        },
        "downloads": -1,
        "filename": "typed_monads-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e15e5bb5f456aaf312608eee4c01d7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15218,
        "upload_time": "2021-02-15T14:41:46",
        "upload_time_iso_8601": "2021-02-15T14:41:46.107582Z",
        "url": "https://files.pythonhosted.org/packages/1f/bb/dbe29e942ab8ebebcc458b3a5f054c0544c1c8ba99573de2dc69c2082fd6/typed_monads-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0de6ba1ed3e61ec91bc4b73706a59976ea17820d7e3250960cfb10fd602c2d2",
          "md5": "a14335eafb7a6c7cf67419b4a9e6a53c",
          "sha256": "f7b6ebdbff8c2f67dc7ddeaaab2afcad30e0ed92272b4970df78bbced5bc55f1"
        },
        "downloads": -1,
        "filename": "typed-monads-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a14335eafb7a6c7cf67419b4a9e6a53c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12687,
        "upload_time": "2021-02-15T14:41:47",
        "upload_time_iso_8601": "2021-02-15T14:41:47.568840Z",
        "url": "https://files.pythonhosted.org/packages/e0/de/6ba1ed3e61ec91bc4b73706a59976ea17820d7e3250960cfb10fd602c2d2/typed-monads-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d73a0880167c7578da4686278ec330310f89943e6020011e21666653e0226387",
          "md5": "450558ff2a823c09410cb164a9a9eb09",
          "sha256": "cdc69ebfd213689f4e2e36a9c2800fa93f920204a7d505dadc80a48e4150d904"
        },
        "downloads": -1,
        "filename": "typed_monads-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "450558ff2a823c09410cb164a9a9eb09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15244,
        "upload_time": "2021-02-15T18:06:28",
        "upload_time_iso_8601": "2021-02-15T18:06:28.408320Z",
        "url": "https://files.pythonhosted.org/packages/d7/3a/0880167c7578da4686278ec330310f89943e6020011e21666653e0226387/typed_monads-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "131296c37df4175e02528b8434990d5229c02f0494e9f8710d065fe24bf67db7",
          "md5": "f4cb4ebf32be1fc622d929d8707c6aa0",
          "sha256": "80e0256abc5c33dde2e14a952f5481e9395c611b952e835d9dbe0f2a28bdd6a9"
        },
        "downloads": -1,
        "filename": "typed-monads-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f4cb4ebf32be1fc622d929d8707c6aa0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12776,
        "upload_time": "2021-02-15T18:06:30",
        "upload_time_iso_8601": "2021-02-15T18:06:30.278515Z",
        "url": "https://files.pythonhosted.org/packages/13/12/96c37df4175e02528b8434990d5229c02f0494e9f8710d065fe24bf67db7/typed-monads-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbc384885e6d1b162bde9e8a1958e186251c9935af4fd789c4122d4ec595c041",
          "md5": "ddb3c37ef223096d7c27c1d3f7649ab2",
          "sha256": "388be729af070c5905e9e28e7d7c4e20c1957d57e7b2dd8335b0e5048086b774"
        },
        "downloads": -1,
        "filename": "typed_monads-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddb3c37ef223096d7c27c1d3f7649ab2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15246,
        "upload_time": "2021-02-15T18:18:03",
        "upload_time_iso_8601": "2021-02-15T18:18:03.469378Z",
        "url": "https://files.pythonhosted.org/packages/cb/c3/84885e6d1b162bde9e8a1958e186251c9935af4fd789c4122d4ec595c041/typed_monads-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0056edb78c4d0b0b68d8d18ea635d7faee038520f80dc17953cc1d1b2f322d19",
          "md5": "91b09faa7e3ae773b5e0fcb3c6a46a40",
          "sha256": "1902caa1ae531803e0e29f0ddaae240d2744ec8ce56456dfbc5f388397e826b4"
        },
        "downloads": -1,
        "filename": "typed-monads-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "91b09faa7e3ae773b5e0fcb3c6a46a40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12650,
        "upload_time": "2021-02-15T18:18:04",
        "upload_time_iso_8601": "2021-02-15T18:18:04.515666Z",
        "url": "https://files.pythonhosted.org/packages/00/56/edb78c4d0b0b68d8d18ea635d7faee038520f80dc17953cc1d1b2f322d19/typed-monads-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "742967819f08f4aa9c76e61b1ccceb9c6427677521b3e4e300539b99e19c68ee",
          "md5": "187b68866990e55e4bbfc4dad60abce7",
          "sha256": "f745baa548801a6eff99182802ea4609552bcc89a0be56c887dc51ee65baf5aa"
        },
        "downloads": -1,
        "filename": "typed_monads-0.4.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "187b68866990e55e4bbfc4dad60abce7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16429,
        "upload_time": "2022-04-06T20:46:09",
        "upload_time_iso_8601": "2022-04-06T20:46:09.721877Z",
        "url": "https://files.pythonhosted.org/packages/74/29/67819f08f4aa9c76e61b1ccceb9c6427677521b3e4e300539b99e19c68ee/typed_monads-0.4.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9028b76643b9244df0e88758a8a8556adf1ecf40272f16bdc5528b2085410b83",
          "md5": "3d25a54230693b8db217d1ec0eecb047",
          "sha256": "78e210eb2db583c4c2d4e3e7ccde03cf6b347891cf84f601061625e3b140f1f3"
        },
        "downloads": -1,
        "filename": "typed-monads-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3d25a54230693b8db217d1ec0eecb047",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13606,
        "upload_time": "2022-04-06T20:46:11",
        "upload_time_iso_8601": "2022-04-06T20:46:11.417735Z",
        "url": "https://files.pythonhosted.org/packages/90/28/b76643b9244df0e88758a8a8556adf1ecf40272f16bdc5528b2085410b83/typed-monads-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24c343fc7463647414eeddc39c7ed6e875c67153014f24215ee91d32048ce51c",
          "md5": "a8a3ff24a351c1734449112f8daab6c1",
          "sha256": "c6081a446dd8c6b66839f730dc90a6b923eb5cd2fcf9c85df63c65465f2bd762"
        },
        "downloads": -1,
        "filename": "typed_monads-0.4.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8a3ff24a351c1734449112f8daab6c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16449,
        "upload_time": "2022-04-07T07:21:37",
        "upload_time_iso_8601": "2022-04-07T07:21:37.055688Z",
        "url": "https://files.pythonhosted.org/packages/24/c3/43fc7463647414eeddc39c7ed6e875c67153014f24215ee91d32048ce51c/typed_monads-0.4.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb1af5b7fccebf9bbbf482b404bb875c007bf1b010d31e07a05d6f5b43b7f8cf",
          "md5": "8928d58550450c48e5cb726149dff419",
          "sha256": "a1f7209ff64cf9f55669e09c72e74456c4d2f736193e372cbb62809042bdca55"
        },
        "downloads": -1,
        "filename": "typed-monads-0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8928d58550450c48e5cb726149dff419",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13645,
        "upload_time": "2022-04-07T07:21:38",
        "upload_time_iso_8601": "2022-04-07T07:21:38.229429Z",
        "url": "https://files.pythonhosted.org/packages/cb/1a/f5b7fccebf9bbbf482b404bb875c007bf1b010d31e07a05d6f5b43b7f8cf/typed-monads-0.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de9bcb84ff4d43b96233b8eab2404f41391a2d2ae0672b32b6e7d497b07b4c57",
          "md5": "5b12a36ea35d57ea718c7ed7bb9cb04e",
          "sha256": "2df01e25507afb82c8632da8747a9485308ca362686fa1e256456912e428d57a"
        },
        "downloads": -1,
        "filename": "typed_monads-0.4.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b12a36ea35d57ea718c7ed7bb9cb04e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16460,
        "upload_time": "2022-04-10T08:35:48",
        "upload_time_iso_8601": "2022-04-10T08:35:48.508689Z",
        "url": "https://files.pythonhosted.org/packages/de/9b/cb84ff4d43b96233b8eab2404f41391a2d2ae0672b32b6e7d497b07b4c57/typed_monads-0.4.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93b1d0a4267ae42760337e05cf6f21866976dafb89424ec9aa639b0a1ac381bb",
          "md5": "d6348675a4e93b389e707a60268b6bf2",
          "sha256": "dd01e41d0f64193dad6593c6d671e23a4e4e3eaa6215c48a8c67ed80c123fcb5"
        },
        "downloads": -1,
        "filename": "typed-monads-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d6348675a4e93b389e707a60268b6bf2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13667,
        "upload_time": "2022-04-10T08:35:50",
        "upload_time_iso_8601": "2022-04-10T08:35:50.108519Z",
        "url": "https://files.pythonhosted.org/packages/93/b1/d0a4267ae42760337e05cf6f21866976dafb89424ec9aa639b0a1ac381bb/typed-monads-0.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de9bcb84ff4d43b96233b8eab2404f41391a2d2ae0672b32b6e7d497b07b4c57",
        "md5": "5b12a36ea35d57ea718c7ed7bb9cb04e",
        "sha256": "2df01e25507afb82c8632da8747a9485308ca362686fa1e256456912e428d57a"
      },
      "downloads": -1,
      "filename": "typed_monads-0.4.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5b12a36ea35d57ea718c7ed7bb9cb04e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16460,
      "upload_time": "2022-04-10T08:35:48",
      "upload_time_iso_8601": "2022-04-10T08:35:48.508689Z",
      "url": "https://files.pythonhosted.org/packages/de/9b/cb84ff4d43b96233b8eab2404f41391a2d2ae0672b32b6e7d497b07b4c57/typed_monads-0.4.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93b1d0a4267ae42760337e05cf6f21866976dafb89424ec9aa639b0a1ac381bb",
        "md5": "d6348675a4e93b389e707a60268b6bf2",
        "sha256": "dd01e41d0f64193dad6593c6d671e23a4e4e3eaa6215c48a8c67ed80c123fcb5"
      },
      "downloads": -1,
      "filename": "typed-monads-0.4.6.tar.gz",
      "has_sig": false,
      "md5_digest": "d6348675a4e93b389e707a60268b6bf2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13667,
      "upload_time": "2022-04-10T08:35:50",
      "upload_time_iso_8601": "2022-04-10T08:35:50.108519Z",
      "url": "https://files.pythonhosted.org/packages/93/b1/d0a4267ae42760337e05cf6f21866976dafb89424ec9aa639b0a1ac381bb/typed-monads-0.4.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}