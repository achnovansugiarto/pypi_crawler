{
  "info": {
    "author": "Taux1c",
    "author_email": "taux1c.software@proton.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<h3>Disclaimer added at the request of onlyfans legal council.:</h3>\n\nThis tool is not affiliated, associated, or partnered with OnlyFans in any way. We are not authorized, endorsed, or sponsored by OnlyFans. All OnlyFans trademarks remain the property of Fenix International Limited.\n\n<h1>Locations</h1>\n\n\n\n\nDiscord Server: https://discord.gg/SFmPxnfZ5a\n\n\nIf you're too lazy to read the rest of this someone done you a favor and made a youtube video. \nhttps://www.youtube.com/watch?v=wmC9HOeswvw\n\n\n<img src=\"https://raw.githubusercontent.com/taux1c/onlyfans-scraper/main/media/icon.png\" width=\"100\" align=\"right\">\n\n# onlyfans-scraper\n\n\nThis is a theoritical program only and is for educational purposes. If you choose to use it then it may or may not work. You solely accept full responsability and indemnify the creator, hostors, contributors and all other involved persons from any any all responsability.\nA command-line program to download media, like and unlike posts, and more from creators on OnlyFans. In addition if you do use this program please do not use this program to re-distribute content.\n\n<img src=\"https://raw.githubusercontent.com/taux1c/onlyfans-scraper/main/media/example.png\" width=\"550\">\n\n## Installation\n\nWindows: \n\n```\npip install git+https://github.com/taux1c/onlyfans-scraper\n```\n\nIf you're on macOS/Linux, then do this instead:\n\n```\npip3 install git+https://github.com/taux1c/onlyfans-scraper\n```\n\n## Setup\n\nBefore you can fully use it, you need to fill out some fields in a `auth.json` file. This file will be created for you when you run the program for the first time.\n\nThese are the fields:\n\n```json\n{\n    \"auth\": {\n        \"app-token\": \"33d57ade8c02dbc5a333db99ff9ae26a\",\n        \"sess\": \"\",\n        \"auth_id\": \"\",\n        \"auth_uniq_\": \"\",\n        \"user_agent\": \"\",\n        \"x-bc\": \"\"\n    }\n}\n```\n\nIt's really not that bad. I'll show you in the next sections how to get these bits of info.\n\n\n### Step One: Creating the 'auth.json' File\n\nYou first need to run the program in order for the `auth.json` file to be created. To run it, simply type `onlyfans-scraper` in your terminal and hit enter. Because you don't have an `auth.json` file, the program will create one for you and then ask you to enter some information. Now we need to get that information.\n\n\n### Step Two: Getting Your Auth Info\n\n***If you've already used DIGITALCRIMINAL's OnlyFans script, you can simply copy and paste the auth information from there to here.***\n\nGo to your [notification area](https://onlyfans.com/my/notifications) on OnlyFans. Once you're there, open your browser's developer tools. If you don't know how to do that, consult the following chart:\n\n| Operating System | Keys |\n| :----------------: | :----: |\n| macOS | <kbd>alt</kbd><kbd>cmd</kbd><kbd>i</kbd> |\n| Windows | <kbd>ctrl</kbd><kbd>shift</kbd><kbd>i</kbd> |\n| Linux | <kbd>ctrl</kbd><kbd>shift</kbd><kbd>i</kbd> |\n\nOnce you have your browser's developer tools open, your screen should look like the following:\n\n<img src=\"https://raw.githubusercontent.com/taux1c/onlyfans-scraper/main/media/browser_tools_open.png\">\n\nClick on the `Network` tab at the top of the browser tools:\n\n<img src=\"https://raw.githubusercontent.com/taux1c/onlyfans-scraper/main/media/network_tab.png\">\n\nThen click on `XHR` sub-tab inside of the `Network` tab:\n\n<img src=\"https://raw.githubusercontent.com/taux1c/onlyfans-scraper/main/media/xhr_tab.png\">\n\nOnce you're inside of the `XHR` sub-tab, refresh the page while you have your browser's developer tools open. After the page reloads, you should see a section titled `init` appear:\n\n<img src=\"https://raw.githubusercontent.com/taux1c/onlyfans-scraper/main/media/init.png\">\n\nWhen you click on `init`, you should see a large sidebar appear. Make sure you're in the `Headers` section:\n\n<img src=\"https://raw.githubusercontent.com/taux1c/onlyfans-scraper/main/media/headers.png\">\n\nAfter that, scroll down until you see a subsection called `Request Headers`. You should then see three important fields inside of the `Request Headers` subsection: `Cookie`, `User-Agent`, and `x-bc`\n\n<img src=\"https://raw.githubusercontent.com/taux1c/onlyfans-scraper/main/media/request_headers.png\">\n\nInside of the `Cookie` field, you will see a couple of important bits:\n\n* `sess=`\n* `auth_id=`\n* `auth_uid_=`\n\n*Your* `auth_uid_` *will *only* appear **if you have 2FA (two-factor authentication) enabled**. Also, keep in mind that your* `auth_uid_` *will have numbers after the final underscore and before the equal sign (that's your auth_id).*\n\nYou need everything ***after*** the equal sign and everything ***before*** the semi-colon for all of those bits. \n\nOnce you've copied the value for your `sess` cookie, go back to the program, paste it in, and hit enter. Now go back to your browser, copy the `auth_id` value, and paste it into the program and hit enter. Then go back to your browser, copy the `auth_uid_` value, and paste it into the program and hit enter (**leave this blank if you don't use 2FA!!!**).\n\nOnce you do that, the program will ask for your user agent. You should be able to find your user agent in a field called `User-Agent` below the `Cookie` field. Copy it and paste it into the program and hit enter.\n\nAfter it asks for your user agent, it will ask for your `x-bc` token. You should also be able to find this in the `Request Headers` section.\n\nYou're all set and you can now use `onlyfans-scraper`.\n\n\n## Usage\n\nWhenever you want to run the program, all you need to do is type `onlyfans-scraper` in your terminal:\n\n```\nonlyfans-scraper\n```\n\nThat's it. It's that simple.\n\n Once the program launches, all you need to do is follow the on-screen directions. The first time you run it, it will ask you to fill out your `auth.json` file (directions for that in the section above). \n\nYou will need to use your arrow keys to select an option:\n\n<img src=\"https://raw.githubusercontent.com/taux1c/onlyfans-scraper/main/media/main_menu.png\" width=\"450\">\n\nIf you choose to download content, you will have three options: having a list of all of your subscriptions printed, manually entering a username, or scraping *all* accounts that you're subscribed to.\n\n<img src=\"https://raw.githubusercontent.com/taux1c/onlyfans-scraper/main/media/list_or_username.png\" width=\"550\">\n\n### Liking/Unliking Posts\n\nYou can also use this program to like all of a user's posts or remove your likes from their posts. Just select either option during the main menu screen and enter their username.\n\nThis program will like posts at a rate of around one post per second. This may be reduced in the future but OnlyFans is strict about how quickly you can like posts.\n\nAt the moment, you can only like ~1000 posts per day. That's not *our* restriction, that's OnlyFans's restriction. So choose wisely.\n\n### Migrating Databases\n\nIf you've used DIGITALCRIMINAL's script, you might've liked how his script prevented duplicates from being downloaded each time you ran it on a user. This is done through database files.\n\nThis program also uses a database file to prevent duplicates. In order to make it easier for user's to transition from his program to this one, this program will migrate the data from those databases for you (***only IDs and filenames***). \n\nIn order to use it select the last option (Migrate an old database) and enter the *path* to the directory that contains the database files (*Posts.db, Archived.db, etc.*). \n\nFor example, if you have a directory that looks like the following:\n\n```\nUsers\n|__ home\n    |__ .sites\n        |__ OnlyFans\n            |__ melodyjai\n                |__ Metadata\n                    |__ Archived.db\n                    |__ Messages.db\n                    |__ Posts.db\n```\n\nThen the path you enter should be `/Users/home/.sites/OnlyFans/melodyjai/Metadata`. The program will detect the .db files in the directory and then ask you for the username to whom those .db files belong. The program will then move the relevant data over.\n\n## Bugs/Issues/Suggestions\n\nIf you run into any trouble while using this script, or if you're confused on how to get something running, feel free to [open an issue](https://github.com/taux1c/onlyfans-scraper/issues/new) or [open a discussion](https://github.com/taux1c/onlyfans-scraper/discussions/new). I don't bite :D\n\nIf you would like a feature added to the program or have some ideas, [start a discussion](https://github.com/taux1c/onlyfans-scraper/discussions/new)!\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/taux1c/onlyfans-scraper",
    "keywords": "onlyfans,download,photos,videos,like,scraper,scraping,scraper",
    "license": "GNU General Public License v3 or later (GPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "onlyfans-scraper",
    "package_url": "https://pypi.org/project/onlyfans-scraper/",
    "platform": null,
    "project_url": "https://pypi.org/project/onlyfans-scraper/",
    "project_urls": {
      "Homepage": "https://github.com/taux1c/onlyfans-scraper",
      "Source": "https://github.com/taux1c/onlyfans-scraper"
    },
    "release_url": "https://pypi.org/project/onlyfans-scraper/2.0.1/",
    "requires_dist": [
      "httpx[http2] (~=0.23.3)",
      "InquirerPy (~=0.3.4)",
      "revolution (~=0.3.0)",
      "tqdm (~=4.64.1)",
      "setuptools (~=57.0.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "A command-line program to download media, like posts, and more from creators on OnlyFans.",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17226532,
  "releases": {
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc574e7699497db314fc367929440c1fe2331bd9ae1a7c28d11924069c0e94f0",
          "md5": "a8012491cf30cac360557763edcce15b",
          "sha256": "d6cf26be4d821bb337bf7c45997bf5ce19a00fe0a1af30fa89431bac0d80e5db"
        },
        "downloads": -1,
        "filename": "onlyfans_scraper-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8012491cf30cac360557763edcce15b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 34125,
        "upload_time": "2023-03-09T16:20:14",
        "upload_time_iso_8601": "2023-03-09T16:20:14.100006Z",
        "url": "https://files.pythonhosted.org/packages/dc/57/4e7699497db314fc367929440c1fe2331bd9ae1a7c28d11924069c0e94f0/onlyfans_scraper-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c34b4e8fc351a296015ed74d0fa327a24f0585a7d646cf0d8e50b299d0679578",
          "md5": "92cff011fc8c707c9d5ff4e6ce80e7d7",
          "sha256": "f730140c167b18dcb1010a7d0f18269ae9df1ff1f2312806f55b55677b8b5494"
        },
        "downloads": -1,
        "filename": "onlyfans-scraper-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "92cff011fc8c707c9d5ff4e6ce80e7d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26427,
        "upload_time": "2023-03-09T16:20:16",
        "upload_time_iso_8601": "2023-03-09T16:20:16.551659Z",
        "url": "https://files.pythonhosted.org/packages/c3/4b/4e8fc351a296015ed74d0fa327a24f0585a7d646cf0d8e50b299d0679578/onlyfans-scraper-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc574e7699497db314fc367929440c1fe2331bd9ae1a7c28d11924069c0e94f0",
        "md5": "a8012491cf30cac360557763edcce15b",
        "sha256": "d6cf26be4d821bb337bf7c45997bf5ce19a00fe0a1af30fa89431bac0d80e5db"
      },
      "downloads": -1,
      "filename": "onlyfans_scraper-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a8012491cf30cac360557763edcce15b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 34125,
      "upload_time": "2023-03-09T16:20:14",
      "upload_time_iso_8601": "2023-03-09T16:20:14.100006Z",
      "url": "https://files.pythonhosted.org/packages/dc/57/4e7699497db314fc367929440c1fe2331bd9ae1a7c28d11924069c0e94f0/onlyfans_scraper-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c34b4e8fc351a296015ed74d0fa327a24f0585a7d646cf0d8e50b299d0679578",
        "md5": "92cff011fc8c707c9d5ff4e6ce80e7d7",
        "sha256": "f730140c167b18dcb1010a7d0f18269ae9df1ff1f2312806f55b55677b8b5494"
      },
      "downloads": -1,
      "filename": "onlyfans-scraper-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "92cff011fc8c707c9d5ff4e6ce80e7d7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 26427,
      "upload_time": "2023-03-09T16:20:16",
      "upload_time_iso_8601": "2023-03-09T16:20:16.551659Z",
      "url": "https://files.pythonhosted.org/packages/c3/4b/4e8fc351a296015ed74d0fa327a24f0585a7d646cf0d8e50b299d0679578/onlyfans-scraper-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}