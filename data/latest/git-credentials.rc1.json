{
  "info": {
    "author": "Marco \"Capypara\" KÃ¶pcke",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Git Credentials\n===============\n\nSimple small library to provide an interface around the ``git credential`` Git command.\nNo dependencies but ``git`` must in the PATH.\n\nExample\n-------\n\n.. code-block:: python\n\n    from git_credentials import GitCredentials, GitCredentialDescription, GitCredentialError, GitCredentialNotStoredError\n\n    def test_creds(user, pw):\n        ...\n\n    def ask_for_creds():\n        ...\n\n    cred = GitCredentials(\"/path/to/repo\")\n\n    try:\n        response = cred.fill(GitCredentialDescription(\n            protocol=\"https\",\n            host=\"example.com\",\n            path=\"/\"\n        ))\n        print(f\"Request was successful. Host: {response.host}, User: {response.username}, Password: {response.password}\")\n        # Test the credentials\n        if test_creds(response.username, response.password):\n            # Tell Git the credentials are good.\n            cred.approve(response)\n        else:\n            # Otherwise tell it to reject them.\n            cred.reject(response)\n    except GitCredentialNotStoredError:\n        print(\"Did not know the PW :(\")\n        # Ask user for PW. You can store it then (after testing it) using approve:\n        (user, pw) = ask_for_creds()\n        if test_creds(user, pw):\n            # Tell Git the credentials are good.\n            cred.approve(GitCredentialDescription(\n                protocol=\"https\",\n                host=\"example.com\",\n                path=\"/\",\n                username=user,\n                password=pw\n            ))\n    except GitCredentialError:\n        # Another misc. error. GitCredentialNotStoredError subclasses this.\n        raise\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/theCapypara/python-git-credentials/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "git-credentials",
    "package_url": "https://pypi.org/project/git-credentials/",
    "platform": "",
    "project_url": "https://pypi.org/project/git-credentials/",
    "project_urls": {
      "Homepage": "https://github.com/theCapypara/python-git-credentials/"
    },
    "release_url": "https://pypi.org/project/git-credentials/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple library to interact with Git Credentials",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12744642,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13801c84474607459f314fe8f9390e6793f81b1cf7c78b6d9d2aa41befdb19b6",
          "md5": "b09bd20db63a94ddf1f0a7337651bd1e",
          "sha256": "38440ad0e84f53e6b0eacc1c46e3ee84d5e6daff4353ffc8ee0c2e3e770f4891"
        },
        "downloads": -1,
        "filename": "git_credentials-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b09bd20db63a94ddf1f0a7337651bd1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4917,
        "upload_time": "2022-01-31T13:33:39",
        "upload_time_iso_8601": "2022-01-31T13:33:39.921696Z",
        "url": "https://files.pythonhosted.org/packages/13/80/1c84474607459f314fe8f9390e6793f81b1cf7c78b6d9d2aa41befdb19b6/git_credentials-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13801c84474607459f314fe8f9390e6793f81b1cf7c78b6d9d2aa41befdb19b6",
        "md5": "b09bd20db63a94ddf1f0a7337651bd1e",
        "sha256": "38440ad0e84f53e6b0eacc1c46e3ee84d5e6daff4353ffc8ee0c2e3e770f4891"
      },
      "downloads": -1,
      "filename": "git_credentials-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b09bd20db63a94ddf1f0a7337651bd1e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4917,
      "upload_time": "2022-01-31T13:33:39",
      "upload_time_iso_8601": "2022-01-31T13:33:39.921696Z",
      "url": "https://files.pythonhosted.org/packages/13/80/1c84474607459f314fe8f9390e6793f81b1cf7c78b6d9d2aa41befdb19b6/git_credentials-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}