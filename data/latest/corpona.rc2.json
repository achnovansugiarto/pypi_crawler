{
  "info": {
    "author": "Khalid Alnajjar",
    "author_email": "khldalnajjar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# corpona\ncorpona is a library for processing corpora formats (e.g. XML and JSON). \nThe library is installable via PIP: `pip install -U corpona`.\n\n## Examples\n### Reading NewsML XML format\n```python\nfrom corpona import XML\nd = XML.parse_xml('2660341.xml')\nprint(f\"Guid: {d.guid}\") # access tag attributes as Python attributes\nprint(f\"Language: {d.attributes['xml:lang']}\") # in case of special characters, access them directly\n\ncontentMeta = d['contentMeta'][0]\nprint(f\"Urgency: {contentMeta['urgency']}\")\nprint(f\"Headline: {contentMeta['headline']}\")\nprint(f\"Subject: {contentMeta['subject'][0]['name']}\")\nprint(\"Genres: {}\".format(\", \".join(g['name'].text for g in contentMeta['genre'])))\nprint()\ncontent_body = d['contentSet'][0]['inlineXML'][0]['html'][0]['body'][0]\nprint(\"Content: \")\nfor p in content_body['p']:\n    print(p)\n```\n\n\n### Getting a Summary of an XML/JSON\n\n```python\nfrom corpona import XML\nfrom corpona import summarize\nfrom pprint import pprint\n\nd = XML.parse_xml('data.xml', namespaces={'http://www.w3.org/XML/1998/namespace': 'xml', })\npprint(summarize(d), indent=4)\n\npprint(summarize([\n    {'key1': 'hello1', 'key2': 1},\n    {'key1': 'hello2', 'key2': 2},\n    {'key1': 'hello3', 'key2': 3},\n    {'key1': 'hello4', 'key2': 4},\n]), indent=4)\n```\n\n### Find children\n\n\n```python\nfrom corpona import find_child\n\ndata = {\"key\":[\"list_item\", {\"key2\":\"oo\"}, {\"key2\":\"bbb\"}]}\nprint(find_child(data, [\"key\", \"key2\"]))\nprint(find_child(data, [\"key\", \"key3\"], default_value=\"ok\"))\n\n>> ['oo', 'bbb']\n>> ['ok']\n\n```\n\n## Cite\n\nIf you use the library in an academic paper, please cite it:\n\nAlnajjar, K. & Hämäläinen, M., (2021) [Corpona – The Pythonic Way of Processing Corpora](https://www.researchgate.net/publication/350124930_Corpona_-_The_Pythonic_Way_of_Processing_Corpora). In _Hämäläinen, M., Partanen, N. & Alnajjar, K. (eds.) Multilingual Facilitation_. University of Helsinki, p. 25−30\n\n    @inbook{3bd164164c8648b986cb14a4a8524423,\n    title = \"Corpona – The Pythonic Way of Processing Corpora\",\n    author = \"Khalid Alnajjar and Mika H{\\\"a}m{\\\"a}l{\\\"a}inen\",\n    year = \"2021\",\n    language = \"English\",\n    pages = \"25−30\",\n    editor = \"Mika H{\\\"a}m{\\\"a}l{\\\"a}inen and Niko Partanen and Khalid Alnajjar\",\n    booktitle = \"Multilingual Facilitation\",\n    publisher = \"University of Helsinki\",\n    address = \"Finland\",\n    }\n\n\n## Need for NLP solutions for your business?\n\n\n<img src=\"https://rootroo.com/cropped-logo-01-png/\" alt=\"Rootroo logo\" width=\"128px\" height=\"128px\">\n\nOur company, [Rootroo offers consulting related to multilingual NLP tasks](https://rootroo.com/). We have a strong academic background in the state-of-the-art AI solutions for every NLP need. Just contact us, we won't bite.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mokha/corpona",
    "keywords": "NLP,corpus,processing,corpora,reading",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "corpona",
    "package_url": "https://pypi.org/project/corpona/",
    "platform": "",
    "project_url": "https://pypi.org/project/corpona/",
    "project_urls": {
      "Bug Reports": "https://github.com/mokha/corpona/issues",
      "Developer": "https://www.khalidalnajjar.com/",
      "Homepage": "https://github.com/mokha/corpona",
      "Wiki": "https://github.com/mokha/corpona/wiki"
    },
    "release_url": "https://pypi.org/project/corpona/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A library for reading corpora.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9865004,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d170d5f038a73630afb4708e2b667a97b5379fdf671a147bbebe75b6fec49644",
          "md5": "f8fd6ebc04b34a53561c8802b0b3e118",
          "sha256": "bca35392d93fbd003398f8f40562aedf8716fd64cf19f2f096382897d39dfcdd"
        },
        "downloads": -1,
        "filename": "corpona-1.0.0-py3.6.egg",
        "has_sig": false,
        "md5_digest": "f8fd6ebc04b34a53561c8802b0b3e118",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": null,
        "size": 4212,
        "upload_time": "2020-12-17T15:37:00",
        "upload_time_iso_8601": "2020-12-17T15:37:00.268951Z",
        "url": "https://files.pythonhosted.org/packages/d1/70/d5f038a73630afb4708e2b667a97b5379fdf671a147bbebe75b6fec49644/corpona-1.0.0-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "218b2a25780c293eab3ab99f849b18af9f6a86bd433e473bf037060e9a15a943",
          "md5": "56d368e5080636781f6a2db8e7bbe7a6",
          "sha256": "72ebd78b1dd42f168502ea17396f1555efdde3218d8ddbf0b267d66eac1ab90b"
        },
        "downloads": -1,
        "filename": "corpona-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "56d368e5080636781f6a2db8e7bbe7a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3692,
        "upload_time": "2020-12-17T15:37:01",
        "upload_time_iso_8601": "2020-12-17T15:37:01.534506Z",
        "url": "https://files.pythonhosted.org/packages/21/8b/2a25780c293eab3ab99f849b18af9f6a86bd433e473bf037060e9a15a943/corpona-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a5c26d53061ac3938d734f6d96329e37d2b837b5c6b21598fc74ef662044871",
          "md5": "dc9b908a65e5efaa014c2f8dbf7d1050",
          "sha256": "800d5aa1e10e5f865902b674e3c5c8d4e9be29e8071dc7669961343aee78e2a5"
        },
        "downloads": -1,
        "filename": "corpona-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc9b908a65e5efaa014c2f8dbf7d1050",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5819,
        "upload_time": "2021-03-24T11:24:33",
        "upload_time_iso_8601": "2021-03-24T11:24:33.416250Z",
        "url": "https://files.pythonhosted.org/packages/3a/5c/26d53061ac3938d734f6d96329e37d2b837b5c6b21598fc74ef662044871/corpona-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a5c26d53061ac3938d734f6d96329e37d2b837b5c6b21598fc74ef662044871",
        "md5": "dc9b908a65e5efaa014c2f8dbf7d1050",
        "sha256": "800d5aa1e10e5f865902b674e3c5c8d4e9be29e8071dc7669961343aee78e2a5"
      },
      "downloads": -1,
      "filename": "corpona-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dc9b908a65e5efaa014c2f8dbf7d1050",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5819,
      "upload_time": "2021-03-24T11:24:33",
      "upload_time_iso_8601": "2021-03-24T11:24:33.416250Z",
      "url": "https://files.pythonhosted.org/packages/3a/5c/26d53061ac3938d734f6d96329e37d2b837b5c6b21598fc74ef662044871/corpona-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}