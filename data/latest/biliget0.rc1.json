{
  "info": {
    "author": "lixiaobai",
    "author_email": "18108274905@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Biliget 模块档案\n## 安装\n在cmd中输入以下命令安装\n\n    pip install biliget\n    python3 -m pip install biliget\n\n\n我们提供三个包  basics,fun,ob\n\n在python环境中，需要这样导入\n\n    from biliget import basics\n\tfrom biliget import fun\n\tfrom biliget import ob\n\n--------------------------------\n# 模块介绍\n### basics 这个包分为两个类\n\n| 类名  | 功效  |\n| :-: | :-: |\n| Videoget( aid )  | 视频信息操作  |\n| Userget( uid ) | 用户信息操作 |\n\n### 他们方法有\n\n#### Videoget( aid )：\n\n| 方法  | 回调  | 返回类型 |\n| :------------: | :------------: |  :------------: |\n| id()  | 用户id  | int |\n| view()  | 观看数  | int |\n| dan() | 弹幕数  | int |\n| reply() | 评论数  | int |\n| favorite()  | 收藏数  | int |\n| coin()  | 硬币数  | int |\n| share()  | 分享数  | int |\n| like()  | 点赞数  | int |\n| copyright()  | 版权状态  |int|\n| detail()  | 详细信息  |json|\n| ownerid()  | 视频主人id  |int|\n| title()  |  视频标题 |str|\n| cover()  | 视频封面url  |str|\n| desc() |  视频简介  |str|\n\n#### Userget( uid ):\n\n| 方法  | 回调  | 返回类型 |\n| :------------: | :------------: | :------------: |\n| userinfo()  | 用户一般信息  | json  |\n|  id() | 用户uid  | int  |\n| following()  | 用户关注数  | int  |\n| whisper()  | 用户私信数（无法获取）  | int  |\n| black()  | 用户黑名单数 （无法获取） |  int |\n| follower()  | 用户粉丝数  |  int |\n|  upinfo() | 用户具体信息  | json  |\n| username()  | 用户名  | str  |\n| sex()  |  用户性别 男or女 | str  |\n| face()  | 用户头像链接  | str  |\n| sign()  | 用户个性签名  | str  |\n| level()  | 用户等级  | int  |\n| birthday()  | 用户生日 mm-dd  | str  |\n| badge()  | 用户是否自己的粉丝勋章  | bool  |\n| intr()  | 用户的认证信息  | str  |\n| viptype()  | 用户vip类别 0:无  1:普通VIP 2:年费VIP| int  |\n| vipthemetype()  |  vip主题状态 | bool  |\n| isfollowed()  | 是否可以被直接关注  | bool  |\n| toppic()  |  主页顶部图片url | str  |\n| liveinfo()  | 直播信息汇总  |  json |\n| liveurl()  | 直播间链接  | str  |\n| liveroomid()  |  直播间号 |  int |\n| liveroomcover()  |直播间封面链接   | str  |\n| uservideoinfo()  | 用户视频标签  |  list |\n| usertags()  | 视频页面信息  | json  |\n| newv()  |   用户最新视频id | int  |\n\n\n--------------------------------\n\n### fun这个包有一个类\n\n| 类名  | 功效  |\n| :-: | :-: |\n| Ds()| 获取本站默认搜索内容 |\n\n#### 他有以下方法\n\n| 方法  | 回调  | 返回类型 |\n| :------------: | :------------: |  :------------: |\n| showname()  | 返回搜索框内容文字  | str |\n| dstype()  | 返回指向页面类型 1为视频  | int |\n| value() | 判断类型并给出值$^1$  | list |\n| url() | 返回指向url  | str |\n| all()  | 关于默认搜索的所有内容  | json |\n\n1:  \n 如果为视频： ['video',aid] || aid->int\n \n\n 如果为其他： ['other',...]\n\n--------------------------------\n\n\n### ob这个包有2个类\n\n| 类名  | 功效  |\n| :-: | :-: |\n| Fanslook(pagesize)^2 | 获取最近值得关注的up主 |\n| Bilitime() | bilibili在线人数信息 |\n\n\n2：\npagesize决定返回值的项数，可选，默认值为5 (详见输出值)\n\n#### 他们有以下方法\n\n## Fanslook():\n\n| 方法  | 回调  | 返回类型 |\n| :------------: | :------------: |  :------------: |\n| fans()  | 获取最近值得关注的up主粉丝数以及uid  | list |\n|____copyright____()  | 版权说明  | print() |\n\n#### fans()的返回值\n\n    [['点滴菌', 102885422, -6150], ... ]\n    \n    #这是一个list包裹多个list的结构\n    #内部list的结构： 第一项-up名字  第二项-up的uid  第三项-粉丝变化\n    #测试返回5项\n\n## Bilitime():\n\n| 方法  | 回调  | 返回类型 |\n| :------------: | :------------: |  :------------: |\n| draw()  |  matplotlib画折线图  | none |\n| zipped()  | 信息汇总  | list |\n\n\n#### zipped()的返回值\n\n    [[6403023, 4859422, '2019-07-13 12:23:44'], ... ]\n\n    #这是一个list包裹多个list的结构\n    #内部list的结构： 第一项-在线播放数  第二项-在线人数  第三项-时间\n    #测试返回24项",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lixiaobai468/biliget",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "biliget0",
    "package_url": "https://pypi.org/project/biliget0/",
    "platform": "",
    "project_url": "https://pypi.org/project/biliget0/",
    "project_urls": {
      "Homepage": "https://github.com/lixiaobai468/biliget"
    },
    "release_url": "https://pypi.org/project/biliget0/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Biliget on phone.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5530924,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d8b72327261d5b9cceaa517d8491330ef4e140ac91778b7f512f8717e01f1fc",
          "md5": "2fd1fb249d270c3733ebdbf57efa2852",
          "sha256": "9bc52edd4acd8dfcce09f9caad607affd8cbfc3eee6b5c3ff8ee4aaebec500ba"
        },
        "downloads": -1,
        "filename": "biliget0-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2fd1fb249d270c3733ebdbf57efa2852",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6939,
        "upload_time": "2019-07-14T12:55:09",
        "upload_time_iso_8601": "2019-07-14T12:55:09.205903Z",
        "url": "https://files.pythonhosted.org/packages/1d/8b/72327261d5b9cceaa517d8491330ef4e140ac91778b7f512f8717e01f1fc/biliget0-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d8b72327261d5b9cceaa517d8491330ef4e140ac91778b7f512f8717e01f1fc",
        "md5": "2fd1fb249d270c3733ebdbf57efa2852",
        "sha256": "9bc52edd4acd8dfcce09f9caad607affd8cbfc3eee6b5c3ff8ee4aaebec500ba"
      },
      "downloads": -1,
      "filename": "biliget0-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2fd1fb249d270c3733ebdbf57efa2852",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6939,
      "upload_time": "2019-07-14T12:55:09",
      "upload_time_iso_8601": "2019-07-14T12:55:09.205903Z",
      "url": "https://files.pythonhosted.org/packages/1d/8b/72327261d5b9cceaa517d8491330ef4e140ac91778b7f512f8717e01f1fc/biliget0-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}