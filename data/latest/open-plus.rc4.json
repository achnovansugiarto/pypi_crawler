{
  "info": {
    "author": "CharlesCai",
    "author_email": "18222159844@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "\n==================\n一个更好用的open()\n==================\n\n----------------\nAn easier open()\n----------------\n\n\n\n中文Chinese\n\n========\n使用方法\n========\n\n----\n安装\n----\n\n安装方法：\n\npip install open_plus\n\n----\n使用\n----\n\n----------------------\nfrom open_plus import*\n----------------------\n\n * check_address\n\n     - check_address(address,range=1,address_get=\"auto\",slash_add=False)\n\n     - address:地址（填入的地址）\n\n     - range:地址重复的次数（只是当address_get为\"\\\\\"时，或为\"auto\"且系统是Windows时；添加的目的是有一些例如：C:\\\\Users\\\\dell\\\\Desktop\\\\...，但是需要写入python文件再次运行，就需要写为C:\\\\\\\\Users\\\\\\\\dell\\\\\\\\Desktop\\\\\\\\...）\n\n     - address_get:分隔符号（\"auto\"是自动获取，可以填本电脑的（\"\\\\\"或\"/\"）\n\n     - slash_add：末尾是否添加分隔符号\n\n     - 作用：检查地址（例如：Windows下，range=1，C:\\\\\\\\Users\\\\dell\\\\\\\\\\\\\\\\Desktop会改为C:\\\\Users\\\\dell\\\\Desktop）\n\n * open_normal\n\n     - open_normal\n\n          - 名字 = open_normal(address.mode,encode,address_get,range=1)\n\n          - address：地址\n\n          - mode：open模式（只支持add(a),write(w),read(r),add+read(a+),write+read(w+),read+add(r+),binaryadd(ab),binaryrite(wb),binaryread(rb),binaryadd+binaryread(ab+),binarywrite+binaryread(wb+),binaryread+binaryadd(rb+)）\n\n          - encode：编码（常用utf-8,utf-16LE,utf-16BE,utf-32,utf-64,cp2312,gbk,gbk2312）（二进制模式时不需要填）\n\n          - range:地址重复的次数（只是当address_get为\"\\\\\"时，或为\"auto\"且系统是Windows时；添加的目的是有一些例如：C:\\\\Users\\\\dell\\\\Desktop\\\\...，但是需要写入python文件再次运行，就需要写为C:\\\\\\\\Users\\\\\\\\dell\\\\\\\\Desktop\\\\\\\\...）\n\n          - address_get:分隔符号（\"auto\"是自动获取，可以填本电脑的（\"\\\\\"或\"/\"）\n\n     - read\n\n          - 名字.read()\n\n     - write\n\n          - 名字.write(thing)\n\n          - thing:写入的东西\n\n     - clear\n\n          - 名字.clear()\n\n          - 清空文件\n\n(open_normal.basic我就不展示了，感兴趣的可以OpenModule->open_plus)\n\n * open_simple\n\n    - open_simple\n\n         - 名字 = open_simple(address,encoding=\"utf-8\",address_get=\"auto\",range=1)\n\n         - address：地址\n\n         - encoding：编码（常用utf-8,utf-16LE,utf-16BE,utf-32,utf-64,cp2312,gbk,gbk2312）\n\n         - address_get：分隔符号（\"auto\"是自动获取，可以填本电脑的（\"\\\\\"或\"/\"）\n\n         - range:地址重复的次数（只是当address_get为\"\\\\\"时，或为\"auto\"且系统是Windows时；添加的目的是有一些例如：C:\\\\Users\\\\dell\\\\Desktop\\\\...，但是需要写入python文件再次运行，就需要写为C:\\\\\\\\Users\\\\\\\\dell\\\\\\\\Desktop\\\\\\\\...）\n\n     - read\n\n          - read()\n\n          - 读取文件\n\n     - write\n\n          - write(thing)\n\n          - 写入thing（先清空）\n\n     - add\n\n          - add(thing)\n\n          - 写入thing\n\n     - clear\n\n          - clear()\n\n          - 清空文件\n\n     - read_in_binary\n\n          - read()\n\n          - 读取文件\n\n     - write_in_binary\n\n          - write(thing)\n\n          - 写入thing（先清空）\n\n     - add_in_binary\n\n          - add(thing)\n\n          - 写入thing\n\n\n\n英文English\n\n==========\nHow to use\n==========\n\n-------\nInstall\n-------\n\nthe way to install：\n\npip install open_plus\n\n---\nuse\n---\n\n----------------------\nfrom open_plus import*\n----------------------\n\n * check_address\n\n     - check_address(address,range=1,address_get=\"auto\",slash_add=False)\n\n     - address:address（input）\n\n     - range:number of address repeats（only when address_get is\"\\\\\"，or \"auto\" and OS is Windows；the purpose of addition：C:\\\\Users\\\\dell\\\\Desktop\\\\...，but also need to write into the programme and run twice，so need to be like C:\\\\\\\\Users\\\\\\\\dell\\\\\\\\Desktop\\\\\\\\...）\n\n     - address_get:separator symbol（\"auto\" is automatic get，it can also be this computer's（\"\\\\\"or\"/\"）\n\n     - slash_add：Will/Won't add the separator symbol in the end\n\n     - effect：check the address（like：in Windows，range=1，C:\\\\\\\\Users\\\\dell\\\\\\\\\\\\\\\\Desktop will change to C:\\\\Users\\\\dell\\\\Desktop）\n\n * open_normal\n\n     - open_normal\n\n          - name = open_normal(address.mode,encode,address_get,range=1)\n\n          - address：address\n\n          - mode：open mode（only have add(a),write(w),read(r),add+read(a+),write+read(w+),read+add(r+),binaryadd(ab),binaryrite(wb),binaryread(rb),binaryadd+binaryread(ab+),binarywrite+binaryread(wb+),binaryread+binaryadd(rb+) now）\n\n          - encode：encode（often use utf-8,utf-16LE,utf-16BE,utf-32,utf-64,cp2312,gbk,gbk2312）（binary mode don't need it）\n\n          - range:number of address repeats（only when address_get is\"\\\\\"，or \"auto\" and OS is Windows；the purpose of addition：C:\\\\Users\\\\dell\\\\Desktop\\\\...，but also need to write into the programme and run twice，so need to be like C:\\\\\\\\Users\\\\\\\\dell\\\\\\\\Desktop\\\\\\\\...）\n\n          - address_get:separator symbol（\"auto\" is automatic get，it can also be this computer's（\"\\\\\"or\"/\"）\n\n     - read\n\n          - name.read()\n\n     - write\n\n          - name.write(thing)\n\n          - thing:thing that need to write\n\n     - clear\n\n          - name.clear()\n\n          - clear the document\n\n(I won't show open_normal.basic，if interested in that can use OpenModule->open_plus to check)\n\n * open_simple\n\n    - open_simple\n\n         - name = open_simple(address,encoding=\"utf-8\",address_get=\"auto\",range=1)\n\n         - address：address\n\n         - encode：encode（often use utf-8,utf-16LE,utf-16BE,utf-32,utf-64,cp2312,gbk,gbk2312）（binary mode don't need it）\n\n          - range:number of address repeats（only when address_get is\"\\\\\"，or \"auto\" and OS is Windows；the purpose of addition：C:\\\\Users\\\\dell\\\\Desktop\\\\...，but also need to write into the programme and run twice，so need to be like C:\\\\\\\\Users\\\\\\\\dell\\\\\\\\Desktop\\\\\\\\...）\n\n          - address_get:separator symbol（\"auto\" is automatic get，it can also be this computer's（\"\\\\\"or\"/\"）\n\n     - read\n\n          - read()\n\n          - read the document\n\n     - write\n\n          - write(thing)\n\n          - write thing in the document（first clear the document）\n\n     - add\n\n          - add(thing)\n\n          - write thing in the document\n\n     - clear\n\n          - clear()\n\n          - clear the document\n\n     - read_in_binary\n\n          - read()\n\n          - read the document in binary\n\n     - write_in_binary\n\n          - write(thing)\n\n          - write thing in the document in binary（first clear the document）\n\n     - add_in_binary\n\n          - add(thing)\n\n          - write thing in the document in binary\n\n\n\n========\nLICENSE:\n========\n\n==========\n版权声明：\n==========\n\nCopyright © 2018 The Python Packaging Authority( https://pypi.org/ https://python.org/). All rights reserved.\n\nCopyright © 2018 The RGB Studio( RGB Information Technology Studio). All rights reserved.\n\nCopyright © 2021 Charles Cai( https://pypi.org/user/CharlesCai/ ). All rights reserved.\n\nCopyright © 2009 CaiMuHan 蔡沐含\n\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\n\nof this software and associated documentation files (the \"Software\"), to use\n\nin the Software without restriction, including without limitation the rights\n\nto use, copy, modify, merge, publish, distribute, sublicense, without sell\n\ncopies of the Software, and to permit persons to whom the Software is\n\nfurnished to do so, subject to the following conditions:\n\n\n\n现准许任何人免费取得本软件及相关文件档案(”软件”)的复制本，\n\n不受任何限制地使用该软件，包括但不限于使用、复制、修改、\n\n合并、发布、分发、再授权的权利，但不得出售该软件的复制本，\n\n并准许向其提供该软件的人这样做，但须符合下列条件:\n\n\n\nThe above copyright notice and this license notice shall be included in the\nsoftware or in the software’s open source or downloaded and installed web pages\nand in all copies of the software. \n\n\n\n上述版权声明和本许可声明应包含在软件中或软件的开源或下载安装的网页中和\n软件的所有复制品中。\n\n\n\nCOPIES OF THE SOFTWARE MUST BE OPEN SOURCE, AND CANNOT BE USED FOR\n\nCOMMERCIAL PURPOSES. THE REPRODUCTION OF THIS WORK SHALL NOT IN ANY\n\nWAY BE SUBJECT TO PAYMENT, INCLUDING BUT NOT LIMITED TO EXPRESS AND LIMPLIED\n\nBUT MAY BE FREELY DONATED BY THE USER FOR A SUM NOT EXCEEDING US $ 10. IN NO\n\nEVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES\n\nOR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\nDEALINGS IN THE SOFTWARE.\n\n\n软件的复制品必须是开源的，且不能用于商业用途。此作品的复制品不得以任何方式要求付费，\n\n包括但不限于明示、暗示，但可以让使用者自愿打赏，金额不得超过10美元。在任何情况下，\n\n作者或版权持有人都不应对任何索赔、损害赔偿或其他责任负责，无论是在合同、侵权行为或\n\n其他方面的诉讼中，由该软件或该软件的使用或其他交易引起、产生或与之有关。\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://libraries.io/pypi/open-plus",
    "keywords": "",
    "license": "GPL License",
    "maintainer": "蔡沐含",
    "maintainer_email": "c6661366613@qq.com",
    "name": "open-plus",
    "package_url": "https://pypi.org/project/open-plus/",
    "platform": "all",
    "project_url": "https://pypi.org/project/open-plus/",
    "project_urls": {
      "Homepage": "https://libraries.io/pypi/open-plus"
    },
    "release_url": "https://pypi.org/project/open-plus/0.2/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "一个更好用的open()|An easier open()",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13189335,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "139c648cd899097681150f0bcdbdbbe8064f5c38ded20adcef596a189fc03dcd",
          "md5": "03843621806bdff77f11c11a0c7e8042",
          "sha256": "ee38e8975a5589f32bdde8be1eed2585909b0ed1ea73082d9ff55ebe92d7181d"
        },
        "downloads": -1,
        "filename": "open_plus-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03843621806bdff77f11c11a0c7e8042",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 5037,
        "upload_time": "2022-03-13T07:27:33",
        "upload_time_iso_8601": "2022-03-13T07:27:33.719663Z",
        "url": "https://files.pythonhosted.org/packages/13/9c/648cd899097681150f0bcdbdbbe8064f5c38ded20adcef596a189fc03dcd/open_plus-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ad94f96a15fe4b9bca5ece544654dd7a1b694fbc44840e03a139a8c6936275f",
          "md5": "86e39d3690a0178f700cedc2e75fe4c4",
          "sha256": "c6858106e6177fbd6a06b4d281282df12719acc34b396d7ff08be5afdce936cd"
        },
        "downloads": -1,
        "filename": "open_plus-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86e39d3690a0178f700cedc2e75fe4c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 5061,
        "upload_time": "2022-03-13T07:37:01",
        "upload_time_iso_8601": "2022-03-13T07:37:01.165787Z",
        "url": "https://files.pythonhosted.org/packages/0a/d9/4f96a15fe4b9bca5ece544654dd7a1b694fbc44840e03a139a8c6936275f/open_plus-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "258914869f65b12bae39740a7b167ecf1d94bf07d7672906f6ba5c845e1d30a9",
          "md5": "2ac97e2fb857b967cd890a28ff28da89",
          "sha256": "79684f5be2d820c54c20ebdd531348fef506ed7d4c171b8403da8c7df00d728e"
        },
        "downloads": -1,
        "filename": "open_plus-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ac97e2fb857b967cd890a28ff28da89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 5065,
        "upload_time": "2022-03-13T07:39:03",
        "upload_time_iso_8601": "2022-03-13T07:39:03.228492Z",
        "url": "https://files.pythonhosted.org/packages/25/89/14869f65b12bae39740a7b167ecf1d94bf07d7672906f6ba5c845e1d30a9/open_plus-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c12145be4444fecf6b79a39e102682d3656dcfc67b90a59ff143a082e337b94b",
          "md5": "ac47c17af5305822fbbf13c56e05d602",
          "sha256": "4570ff38a56613024e8b42b6d839f9da424de942d7eeba745ebeb5a54f0a82dc"
        },
        "downloads": -1,
        "filename": "open_plus-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac47c17af5305822fbbf13c56e05d602",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 5140,
        "upload_time": "2022-03-16T01:51:05",
        "upload_time_iso_8601": "2022-03-16T01:51:05.558653Z",
        "url": "https://files.pythonhosted.org/packages/c1/21/45be4444fecf6b79a39e102682d3656dcfc67b90a59ff143a082e337b94b/open_plus-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c12145be4444fecf6b79a39e102682d3656dcfc67b90a59ff143a082e337b94b",
        "md5": "ac47c17af5305822fbbf13c56e05d602",
        "sha256": "4570ff38a56613024e8b42b6d839f9da424de942d7eeba745ebeb5a54f0a82dc"
      },
      "downloads": -1,
      "filename": "open_plus-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ac47c17af5305822fbbf13c56e05d602",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 5140,
      "upload_time": "2022-03-16T01:51:05",
      "upload_time_iso_8601": "2022-03-16T01:51:05.558653Z",
      "url": "https://files.pythonhosted.org/packages/c1/21/45be4444fecf6b79a39e102682d3656dcfc67b90a59ff143a082e337b94b/open_plus-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}