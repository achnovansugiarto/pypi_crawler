{
  "info": {
    "author": "Martin Lackner",
    "author_email": "unexpected@sent.at",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.6108968.svg)](https://doi.org/10.5281/zenodo.6108968)\n[![MIT License](https://badgen.net/github/license/martinlackner/abcvoting)](https://choosealicense.com/licenses/mit/)\n[![PyPi](https://badgen.net/pypi/v/abcvoting)](https://pypi.org/project/apportionment/)\n![Python versions](https://badgen.net/pypi/python/apportionment)\n[![Build badge](https://github.com/martinlackner/abcvoting/workflows/Build/badge.svg)](https://github.com/martinlackner/apportionment/actions)\n[![Unittests badge](https://github.com/martinlackner/abcvoting/workflows/Unittests/badge.svg)](https://github.com/martinlackner/apportionment/actions)\n\n\n# A Python implementation of common apportionment methods\n\nThis is a collection of common apportionment methods. Apportionment has two main applications: \nto assign a fixed number of [parliamentary seats to parties](https://en.wikipedia.org/wiki/Party-list_proportional_representation) (proportionally to their vote count), and to assign\n[representatives in a senate to states](https://en.wikipedia.org/wiki/United_States_congressional_apportionment) (proportionally to their population count). \nA recommendable overview of apportionment methods can be found in the book \"Fair Representation\" by Balinski and Young [2].\n\nThe following apportionment methods are implemented:\n* the largest remainder method (or Hamilton method)\n* the class of divisor methods including\n   - D'Hondt (or Jefferson)\n   - Sainte-Laguë (or Webster)\n   - Modified Sainte-Laguë (as used e.g. in Norway) \n   - Huntington-Hill\n   - Adams\n* the quota method [1]\n\nThis module supports Python 3.7+.\n\n## Installation\n\nUsing pip:\n\n```bash\npip install apportionment\n```\n\nLatest development version from source:\n\n```bash\ngit clone https://github.com/martinlackner/abcvoting/\npython setup.py install\n```\n\nRequirements:\n* Python 3.7+\n* numpy\n\n## A simple example\n\nThe following example calculates the seat distribution of Austrian representatives in the \nEuropean Parliament based on the D'Hondt method and the [2019 election results](https://www.bmi.gv.at/412/Europawahlen/Europawahl_2019). Parties that received less than 4% are excluded from obtaining seats and are thus excluded in the calculation.\n\n```python\nimport apportionment.methods as app\nparties = ['OEVP', 'SPOE', 'FPOE', 'GRUENE', 'NEOS']\nvotes = [1305956, 903151, 650114, 532193, 319024]\nseats = 18\napp.compute(\"dhondt\", votes, seats, parties, verbose=True)\n```\n\nThe output is\n\n```\nD'Hondt (Jefferson) method\n  OEVP: 7\n  SPOE: 5\n  FPOE: 3\n  GRUENE: 2\n  NEOS: 1\n```\n\nwhich is indeed the [official result](https://www.bmi.gv.at/412/Europawahlen/Europawahl_2019).\n\nAnother example can be found in [apportionment/examples/simple.py](apportionment/examples/simple.py).\nWe verify results from recent Austrian National Council elections in [apportionment/examples/austria.py](apportionment/examples/austria.py) and from recent elections of the Israeli Knesset in [apportionment/examples/israel.py](apportionment/examples/israel.py).\n\n## References\n\n[1] Balinski, M. L., & Young, H. P. (1975). The quota method of apportionment. The American Mathematical Monthly, 82(7), 701-730.\n\n[2] Balinski, M. L., & Young, H. P. (1982). Fair Representation: Meeting the Ideal of One Man, One Vote. Yale University Press, 1982. (There is a second edition from 2001 by Brookings Institution Press.)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/martinlackner/apportionment/",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "apportionment",
    "package_url": "https://pypi.org/project/apportionment/",
    "platform": "",
    "project_url": "https://pypi.org/project/apportionment/",
    "project_urls": {
      "Bug Tracker": "https://github.com/martinlackner/apportionment/issues",
      "Homepage": "https://github.com/martinlackner/apportionment/"
    },
    "release_url": "https://pypi.org/project/apportionment/1.0/",
    "requires_dist": [
      "numpy (>=1.20)",
      "pytest (>=6) ; extra == 'dev'",
      "coverage[toml] (>=5.3) ; extra == 'dev'",
      "black (==22.1.0) ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python implementation of common apportionment methods",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12912358,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac184781cea71cb197f62dc8c0d8d34853c7fe3a9689b81d566cfdc0593bccb4",
          "md5": "8703ff83b03ce344f264fc1d63635f38",
          "sha256": "9a8bb1e8a3b4d94002f4a36552810ec2bc1e8e5f32a4582874743ef017575f1e"
        },
        "downloads": -1,
        "filename": "apportionment-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8703ff83b03ce344f264fc1d63635f38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6484,
        "upload_time": "2022-02-16T18:53:59",
        "upload_time_iso_8601": "2022-02-16T18:53:59.803337Z",
        "url": "https://files.pythonhosted.org/packages/ac/18/4781cea71cb197f62dc8c0d8d34853c7fe3a9689b81d566cfdc0593bccb4/apportionment-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac184781cea71cb197f62dc8c0d8d34853c7fe3a9689b81d566cfdc0593bccb4",
        "md5": "8703ff83b03ce344f264fc1d63635f38",
        "sha256": "9a8bb1e8a3b4d94002f4a36552810ec2bc1e8e5f32a4582874743ef017575f1e"
      },
      "downloads": -1,
      "filename": "apportionment-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8703ff83b03ce344f264fc1d63635f38",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6484,
      "upload_time": "2022-02-16T18:53:59",
      "upload_time_iso_8601": "2022-02-16T18:53:59.803337Z",
      "url": "https://files.pythonhosted.org/packages/ac/18/4781cea71cb197f62dc8c0d8d34853c7fe3a9689b81d566cfdc0593bccb4/apportionment-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}