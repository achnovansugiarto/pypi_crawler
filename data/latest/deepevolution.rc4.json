{
  "info": {
    "author": "IvÃ¡n de Paz Centeno",
    "author_email": "ipazc@unileon.es",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "DEEPEVOLUTION\n#############\n\n.. image:: https://badge.fury.io/py/deepevolution.svg\n    :target: https://badge.fury.io/py/deepevolution\n\nImplementation of a evolution algorithm for tensorflow keras models. It allows to evolve a keras neural network model for tasks where no differentiable loss functions are possible.\n\n\nINSTALLATION\n############\n\nIt can be installed through pip:\n\n.. code:: bash\n\n    $ pip install deepevolution\n\nIt requires tensorflow > 2.0.0. It can be installed as follows:\n\n.. code:: bash\n\n    $ pip install deepevolution[tf]\n    # or\n    $ pip install deepevolution[tf_gpu]\n\n\nUSAGE\n#####\n\nImport the package after you import the keras model class. The `deepevolution` package automatically binds the `fit_evolve()` method to the keras model class, making it instantly available to any keras model. Its usage is as simple as follows:\n\n.. code:: python\n\n    from tensorflow.keras.models import Model\n    from deepevolution import wrap_keras\n\n    wrap_keras()\n\n    ## ... Build a keras model `model`...\n\n    keras_model.fit_evolve(x_train, y_train, max_generations=100)\n\nThe default fitness function is the negative loss function of the model (must be compiled). For different fitnesses\nfunctions, check the ADVANCED section.\n\n\nEXAMPLE WITH MNIST\n##################\n\nTwo examples can be found for the MNIST with the same feed-forward neural network in the folder `examples/` of the repository (https://github.com/ipazc/deepevolution/tree/master/examples).\nIn one, the negative MSE loss is used as fitness function (the default behaviour). In the other, the accuracy metric\nis used for evolving the network.\n\n.. image:: https://raw.githubusercontent.com/ipazc/deepevolution/master/fitness_evolution.png\n    :target: https://github.com/ipazc/deepevolution/tree/master/examples\n\n\n\nUNDER-THE-HOOD\n##############\n\nWhat is going on when evolve is invoked?  The evolution process is made up of the following steps:\n\n  1. Network's weights are duplicated to build a population of N networks (16 by default). Each individual network is differentiated by adding noise sampled from a normal distribution (with a std=0.3 by default) for each weight.\n\n  2. Weights are evaluated by passing them to the fitness function along with the training data. This fitness function measures how well the network's weights perform with the given data, and it is totally customizable. More information about crafting a fitness function can be obtained in the ADVANCED section. If not provided, it will use by default a fitness function where the score of the network is measured by its negative loss (using the training data as evaluation).\n\n  3. Elitism is practiced: the `top_k` (by default 4) models are selected for reproduction from the population, the rest are discarded.\n\n  4. The crossover happens between pairs of top models. Each model's weights are crossed with subsequents models until all combinations are met. The crossover consists of merging the 50% of the weights from one model with the 50% of the other, plus a random mutation sampled from a normal distribution applied to a % of the weights (by default, 20%).\n\n  5. The generated models after the crossover are mixed with the `top_k` from the previous generation. The result is a new generation that can be evolved again by jumping to the point 2.\n\nADVANCED\n########\n\nThe following parameters can be set for an evolution:\n\n * max_generations: the number of generations that we will wait for. Similar to \"epochs\" concept. By default it is 100.\n * population: the number of individuals that will form the population of the generation. The higher, the better chances to find a new best-performing individual, but more computer resources are required. By default 16\n * top_k: the number of models that will survive the generation (based on its ranking score). They are considered to be the best K models of the generation.  By default it is 4\n * mutation_rate: percent of weights from the children to mutate on the new generation. By default it is 0.2 (20%).\n * mutation_std: the mutation is sampled from a normal distribution with a given std. By default it is 0.03. Higher values implies heavier mutations to the weights.\n * verbose: 0 for disabling logging, 1 for traditional logging of progress as messages, 2 for a tqdm bar.\n * fitness_func: the function for scoring each model.\n\nA fitness function have the following prototype:\n\n.. code:: python\n\n    def fitness_func(model, X, Y):\n        # Evaluate the model somehow. Note that it is optional to use X and Y.\n        # This is the default behaviour, but any score can be returned\n        result = model.evaluate(X, Y, batch_size=2048)[0]\n        return -1 * result\n\nOne of the key benefits of this evolution algorithm is that the fitness function does not need to be a differentiable loss function. It can be any function that returns how well the model is working for a given task or scenario, making it suitable for reinforcement learning problems. The returned number must be a float, and the higher, the better performing.\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/ipazc/deepevolution",
    "keywords": "deepevolution genetic algorithm keras tensorflow evolve network",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepevolution",
    "package_url": "https://pypi.org/project/deepevolution/",
    "platform": "",
    "project_url": "https://pypi.org/project/deepevolution/",
    "project_urls": {
      "Homepage": "http://github.com/ipazc/deepevolution"
    },
    "release_url": "https://pypi.org/project/deepevolution/0.0.4/",
    "requires_dist": [
      "numpy",
      "pandas (>=1.1.0)",
      "tqdm",
      "tensorflow (>=2.0.0) ; extra == 'tf'",
      "tensorflow-gpu (>=2.0.0) ; extra == 'tf_gpu'"
    ],
    "requires_python": "",
    "summary": "A genetic algorithm to evolve tensorflow keras neural networks.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8128585,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dfaeb29c03555729ee1c936d29229a0173997e5c8e56f8097753d307283dd27",
          "md5": "098ee51fd37749448b4f7603115f67fe",
          "sha256": "58ae8518e2823c5ffc2660c882cb7867c94a8f44150830f56096d3b5cd4b3ac3"
        },
        "downloads": -1,
        "filename": "deepevolution-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "098ee51fd37749448b4f7603115f67fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7012,
        "upload_time": "2020-09-02T19:44:28",
        "upload_time_iso_8601": "2020-09-02T19:44:28.038792Z",
        "url": "https://files.pythonhosted.org/packages/4d/fa/eb29c03555729ee1c936d29229a0173997e5c8e56f8097753d307283dd27/deepevolution-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d80bcf7fb27947af5c4d0f91de8074d4a2df378dc9b6c12820ef62ad73bd087b",
          "md5": "1aa428f9436848c3620b68e1dfbc94bb",
          "sha256": "88d53908cccac8524a8230b05a9cd1947c05f103ae3604676e397413bf7c61dd"
        },
        "downloads": -1,
        "filename": "deepevolution-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1aa428f9436848c3620b68e1dfbc94bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7073,
        "upload_time": "2020-09-02T19:48:57",
        "upload_time_iso_8601": "2020-09-02T19:48:57.620279Z",
        "url": "https://files.pythonhosted.org/packages/d8/0b/cf7fb27947af5c4d0f91de8074d4a2df378dc9b6c12820ef62ad73bd087b/deepevolution-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b53a9e541206a5bf7ddc282df50d96624957cd0fb44f19b0211e19e3ae6351e7",
          "md5": "b02a831b1f70e0ab5f44167d6fed2937",
          "sha256": "0267669127b34663658f360ba606ced2cf067d30761b1f40d45d24c7a1c3c465"
        },
        "downloads": -1,
        "filename": "deepevolution-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b02a831b1f70e0ab5f44167d6fed2937",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7088,
        "upload_time": "2020-09-03T08:12:41",
        "upload_time_iso_8601": "2020-09-03T08:12:41.368894Z",
        "url": "https://files.pythonhosted.org/packages/b5/3a/9e541206a5bf7ddc282df50d96624957cd0fb44f19b0211e19e3ae6351e7/deepevolution-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc934f412801057b9bd6b11c2059282b2f29079a0b74578ee016e633d597d825",
          "md5": "eb7fee126901a4890533fb8a094d8355",
          "sha256": "62b46af7eb71e5502dee90697acd28c90ebfaec39dd0cbc7425fab9e29221f61"
        },
        "downloads": -1,
        "filename": "deepevolution-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb7fee126901a4890533fb8a094d8355",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7141,
        "upload_time": "2020-09-07T09:17:52",
        "upload_time_iso_8601": "2020-09-07T09:17:52.945121Z",
        "url": "https://files.pythonhosted.org/packages/bc/93/4f412801057b9bd6b11c2059282b2f29079a0b74578ee016e633d597d825/deepevolution-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc934f412801057b9bd6b11c2059282b2f29079a0b74578ee016e633d597d825",
        "md5": "eb7fee126901a4890533fb8a094d8355",
        "sha256": "62b46af7eb71e5502dee90697acd28c90ebfaec39dd0cbc7425fab9e29221f61"
      },
      "downloads": -1,
      "filename": "deepevolution-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb7fee126901a4890533fb8a094d8355",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7141,
      "upload_time": "2020-09-07T09:17:52",
      "upload_time_iso_8601": "2020-09-07T09:17:52.945121Z",
      "url": "https://files.pythonhosted.org/packages/bc/93/4f412801057b9bd6b11c2059282b2f29079a0b74578ee016e633d597d825/deepevolution-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}