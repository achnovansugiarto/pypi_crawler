{
  "info": {
    "author": "NeuralTeam",
    "author_email": "NeuralTeam@mail.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python"
    ],
    "description": "# Inline-Input\r\n![wtf](https://user-images.githubusercontent.com/75082388/162805166-ec0480cb-be5e-4463-9e1b-80bffd5b1f1c.png)\r\n\r\n\r\n__Install library:__\r\n```\r\npip install inline-input\r\n```\r\n\r\nThe simplest example:\r\n```\r\nimport inline #Import inline module\r\ninput = inline.input #replace default input\r\n\r\nwhile True:\r\n    print(\"Say 'Yes' or 'No'\")\r\n    inp = input(\"Input: \", command=[\"Yes\", \"No\"], free=False)\r\n```\r\n\r\n__Use:__\r\n```\r\n# Preparing:\r\nimport inline #Import inline module\r\ninput = inline.input #replace default input\r\n\r\n# Examples with new input:\r\ninp = input(prefix=None) # default \">> \"\r\ninp = input(free=False) # or free=True, default is True\r\ninp = input(minLength=2, maxLength=10) # default minLength=0, maxLength=0\r\ninp = input(cursor=False) # show or hide cursor, default True\r\ninp = input(secret=True) # hide input and predictions text, default False\r\ninp = input(cursorVisibleTime=0.9, cursorNotVisibleTime=0.6) # СЃursor blink speed\r\ninp = input(timeInfo=5) # display time of tooltips, default is 2 second\r\ninp = input(timer=False) # setting the timer for tips\r\ninp = input(iHelp=2) # How many characters must the user type to be prompted to use the Autocomplete\r\ninp = input(inp=\"Start text\") # text that will be entered for the user (the user can delete or edit it)\r\n\r\n#Functions:\r\ninline.clear_console(lineDel=1) #Delete one line of console\r\ninline.predict(text, list) # Predicting a similar word\r\ninline.isCommand(text, list) # Does the command exist on the list\r\n```\r\nCommands options:\r\n```\r\n#1\r\nimport inline #Import inline module\r\ninput = inline.input #replace default input\r\n\r\ninline.commands = [\"Info\", \"Help\", \"Version\"]\r\n\r\nanswer = input()\r\n```\r\nOR:\r\n```\r\n#2\r\nimport inline #Import inline module\r\ninput = inline.input #replace default input\r\n\r\ncommands = [\"Info\", \"Help\", \"Version\"]\r\n\r\nanswer = input(command=commands)\r\n```\r\n\r\nAutocomplete on Enter:\r\n```\r\ninline.autoCompleteOnEnter = True # Autocomplete on Enter and Tab, default False - only on Tab\r\ninp = input(free=False) # Only your commands are allowed!\r\n```\r\n\r\n---\r\nExamples code:\r\n```\r\n#Navigating through folders\r\nimport os\r\nimport inline #Import inline module\r\ninput = inline.input #replace default input\r\npath = \"C:\\\\\" #Default path\r\n\r\nwhile True:\r\n    commands = os.listdir(path)\r\n    print(\"Choose directory:\")\r\n\r\n    for command in commands:\r\n        if not command.startswith(\"$\"):\r\n            print(f\"- {command}\")\r\n        else:\r\n            commands.remove(command)\r\n\r\n    inp = input(command=commands, cursor=False)\r\n    os.system('cls')\r\n\r\n    if inp == \".\" or inp.lower() == \"return\": # go back\r\n        path = path[:-(len(path.split(\"\\\\\")[-2]) + 2)] + \"\\\\\"\r\n    elif os.path.isdir(path + inp + \"\\\\\"):\r\n        path += inp + \"\\\\\"\r\n    else:\r\n        if os.path.isfile(path + inp):\r\n            print(\"You want open the file?\")\r\n            inp_ = input(command=[\"Yes\", \"No\"], free=False) # Free=False forces the user to use strictly our commands\r\n            if inp_.lower() == \"yes\":\r\n                os.system(path + inp)\r\n        else:\r\n            print(\"Directory does not exist:\", path + inp + \"\\\\\", end=\"\\n\\n\")\r\n```\r\n\r\nAnother simple example:\r\n```\r\nimport inline #Import inline module\r\ninput = inline.input #replace default input\r\ncommands = [\"Exit\"] #Default commands\r\n\r\nwhile True:\r\n    print(\"What kind of command do you want to create?\")\r\n    command = input(prefix=\"Name command: \")\r\n\r\n    print(\"\\nTry using your command!\")\r\n    if inline.isCommand(command, commands):\r\n        inline.clear_console(lineDel=4) #delete last 4 lines\r\n        print(\"Command already exists!\")\r\n        continue\r\n    else:\r\n        commands.append(command)\r\n    inp = input(command=commands, free=False)\r\n\r\n    print(f\"\\nGreat, {inp} is working!\\n- What the command will print?\")\r\n    text = input(\"Enter text: \")\r\n\r\n    print(\"\\nTry using your command or write 'Exit'\")\r\n    inp = input(free=False, command=commands)\r\n    if inp.lower() == commands[-1].lower(): # First try\r\n        print(f\"Printed: {text}\")\r\n    else:\r\n        break\r\n\r\n    print(\"\\nDo you want to create another command?\")\r\n    inline.autoCompleteOnEnter = True\r\n    inp = input(free=False, command=[\"Yes\", \"No\"])\r\n    inline.autoCompleteOnEnter = False\r\n    if inline.isCommand(inp, \"No\"): #Best try\r\n        print(\"Bye - bye!\")\r\n        break\r\n```\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NeuralAIM/Inline-Input",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Inline-input",
    "package_url": "https://pypi.org/project/Inline-input/",
    "platform": null,
    "project_url": "https://pypi.org/project/Inline-input/",
    "project_urls": {
      "Homepage": "https://github.com/NeuralAIM/Inline-Input"
    },
    "release_url": "https://pypi.org/project/Inline-input/1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Rethinking input() with inline auto-completion, minimum character requirement, and more.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13505086,
  "releases": {
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79566b081a48e20ce85c092053760067554b6897b575fff8a8cb8e0e7502d003",
          "md5": "c038cb739ef0640f2445709830d9dff5",
          "sha256": "312d00b407c0f1401146e97837b771dad859f026695d0049e21361694bb33bcf"
        },
        "downloads": -1,
        "filename": "Inline-input-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c038cb739ef0640f2445709830d9dff5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2905,
        "upload_time": "2022-04-09T20:04:15",
        "upload_time_iso_8601": "2022-04-09T20:04:15.491418Z",
        "url": "https://files.pythonhosted.org/packages/79/56/6b081a48e20ce85c092053760067554b6897b575fff8a8cb8e0e7502d003/Inline-input-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc1191399f33e61c562ea5cf0d22c1ccd4b750c255ab4e31b6bd142e4096a855",
          "md5": "62098f5b36c01d0753e6d43377e58695",
          "sha256": "fd28d2da3562ad79e84689c4fc23aa6306a0c36bc2f01894c3c4e3bf6d6a3284"
        },
        "downloads": -1,
        "filename": "Inline-input-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "62098f5b36c01d0753e6d43377e58695",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5314,
        "upload_time": "2022-04-10T17:08:43",
        "upload_time_iso_8601": "2022-04-10T17:08:43.493199Z",
        "url": "https://files.pythonhosted.org/packages/dc/11/91399f33e61c562ea5cf0d22c1ccd4b750c255ab4e31b6bd142e4096a855/Inline-input-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad25d1e5089c7b94fa10af78bdc9e5fbe58f680e6bff5201cf203ef6915f042d",
          "md5": "6966ad03fe78d2884d0db146d77804dc",
          "sha256": "1c64b3e3468bdcf14092a8952e04dac58e00a74c37b8b6db2f675435f10d780f"
        },
        "downloads": -1,
        "filename": "Inline-input-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "6966ad03fe78d2884d0db146d77804dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4420,
        "upload_time": "2022-04-11T18:10:42",
        "upload_time_iso_8601": "2022-04-11T18:10:42.198341Z",
        "url": "https://files.pythonhosted.org/packages/ad/25/d1e5089c7b94fa10af78bdc9e5fbe58f680e6bff5201cf203ef6915f042d/Inline-input-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dddddf5a71e5e91d632f49bdd8638828581fc00571f832681983137074aeba2",
          "md5": "35e48df628e5607e7297e712f88acd65",
          "sha256": "d8e720fe54e042ecd16e20e3d137bac77717c859793f7a9285a2b1426dfb30f0"
        },
        "downloads": -1,
        "filename": "Inline-input-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "35e48df628e5607e7297e712f88acd65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5321,
        "upload_time": "2022-04-12T20:18:57",
        "upload_time_iso_8601": "2022-04-12T20:18:57.998195Z",
        "url": "https://files.pythonhosted.org/packages/0d/dd/ddf5a71e5e91d632f49bdd8638828581fc00571f832681983137074aeba2/Inline-input-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d00b2b7ff8bae107bc93f7f87ceaecee340e12838b35f1c9a0fd9cd3af91b431",
          "md5": "998c1130572942a2f7e540462eaee6e2",
          "sha256": "30de7f9f80793a61dad1590ed550ab6815fa343dd50023a11e8ae8fc6d252520"
        },
        "downloads": -1,
        "filename": "Inline-input-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "998c1130572942a2f7e540462eaee6e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6123,
        "upload_time": "2022-04-13T12:23:29",
        "upload_time_iso_8601": "2022-04-13T12:23:29.518717Z",
        "url": "https://files.pythonhosted.org/packages/d0/0b/2b7ff8bae107bc93f7f87ceaecee340e12838b35f1c9a0fd9cd3af91b431/Inline-input-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ebda16948f18bac345fd64b5b7a1028e27138d83ed80bf630ee369bd59f1f47",
          "md5": "87210168f202391622e2e86b259e6bbe",
          "sha256": "8a3f30e9d78764fadcd193f66725c0e74f5ace1e1bca2890267b52ce3fc98a69"
        },
        "downloads": -1,
        "filename": "Inline-input-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "87210168f202391622e2e86b259e6bbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6117,
        "upload_time": "2022-04-13T17:24:31",
        "upload_time_iso_8601": "2022-04-13T17:24:31.849392Z",
        "url": "https://files.pythonhosted.org/packages/0e/bd/a16948f18bac345fd64b5b7a1028e27138d83ed80bf630ee369bd59f1f47/Inline-input-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ebda16948f18bac345fd64b5b7a1028e27138d83ed80bf630ee369bd59f1f47",
        "md5": "87210168f202391622e2e86b259e6bbe",
        "sha256": "8a3f30e9d78764fadcd193f66725c0e74f5ace1e1bca2890267b52ce3fc98a69"
      },
      "downloads": -1,
      "filename": "Inline-input-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "87210168f202391622e2e86b259e6bbe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6117,
      "upload_time": "2022-04-13T17:24:31",
      "upload_time_iso_8601": "2022-04-13T17:24:31.849392Z",
      "url": "https://files.pythonhosted.org/packages/0e/bd/a16948f18bac345fd64b5b7a1028e27138d83ed80bf630ee369bd59f1f47/Inline-input-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}