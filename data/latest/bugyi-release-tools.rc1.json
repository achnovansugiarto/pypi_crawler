{
  "info": {
    "author": "Bryan M Bugyi",
    "author_email": "bryanbugyi34@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# bugyi.release_tools\n\n**Scripts that help release new versions of software.**\n\n## Badges üìõ\n\nproject status badges:\n\n[![CI Workflow](https://github.com/bbugyi200/python-release-tools/actions/workflows/ci.yml/badge.svg)](https://github.com/bbugyi200/python-release-tools/actions/workflows/ci.yml)\n[![Coverage](https://codecov.io/gh/bbugyi200/python-release-tools/branch/master/graph/badge.svg)](https://codecov.io/gh/bbugyi200/python-release-tools)\n[![Documentation Status](https://readthedocs.org/projects/python-release-tools/badge/?version=latest)](https://python-release-tools.readthedocs.io/en/latest/?badge=latest)\n[![Package Health](https://snyk.io/advisor/python/bugyi.release_tools/badge.svg)](https://snyk.io/advisor/python/bugyi.release_tools)\n\nversion badges:\n\n[![Project Version](https://img.shields.io/pypi/v/bugyi.release_tools)](https://pypi.org/project/bugyi.release_tools/)\n[![Python Versions](https://img.shields.io/pypi/pyversions/bugyi.release_tools)](https://pypi.org/project/bugyi.release_tools/)\n[![Cookiecutter: cc-python](https://img.shields.io/static/v1?label=cc-python&message=2021.09.20-1&color=d4aa00&logo=cookiecutter&logoColor=d4aa00)](https://github.com/bbugyi200/cc-python)\n[![Docker: bbugyi/python](https://img.shields.io/static/v1?label=bbugyi%20%2F%20python&message=2021.09.16&color=8ec4ad&logo=docker&logoColor=8ec4ad)](https://github.com/bbugyi200/docker-python)\n\ntools / frameworks used by test suite (i.e. used by `make test`):\n\n[![Framework: pytest](https://img.shields.io/badge/framework-pytest-a76465)](https://github.com/pytest-dev/pytest)\n[![Framework: doctest](https://img.shields.io/badge/framework-doctest-66a6f6)](https://docs.python.org/3/library/doctest.html)\n[![Runner: tox](https://img.shields.io/badge/runner-tox-f5f5f5)](https://github.com/tox-dev/tox)\n[![Types: typeguard](https://img.shields.io/badge/types-typeguard-3a7163)](https://github.com/agronholm/typeguard)\n[![Mocks: pytest-mock](https://img.shields.io/static/v1?label=mocks&message=pytest-mock&color=9c70d7)](https://github.com/pytest-dev/pytest-mock)\n[![Snapshots: syrupy](https://img.shields.io/static/v1?label=snapshots&message=syrupy&color=436fa8)](https://github.com/tophat/syrupy)\n\nlinters used to maintain code quality (i.e. used by `make lint`):\n\n[![Linter: pylint](https://img.shields.io/badge/linter-pylint-ffff00)](https://github.com/PyCQA/pylint)\n[![Linter: flake8](https://img.shields.io/badge/linter-flake8-008080)](https://github.com/PyCQA/flake8)\n[![Types: mypy](https://img.shields.io/badge/types-mypy-cd00cd)](https://github.com/python/mypy)\n[![Docstrings: pydocstyle](https://img.shields.io/badge/docstrings-pydocstyle-AFD3E6)](https://github.com/PyCQA/pydocstyle)\n[![Code Style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Imports: isort](https://img.shields.io/badge/imports-isort-ef8336)](https://github.com/PyCQA/isort)\n\ntools / frameworks used to render documentation (i.e used by `make build-docs`):\n\n[![Rendered By: sphinx](https://img.shields.io/badge/rendered%20by-sphinx-9cc676)](https://github.com/sphinx-doc/sphinx)\n[![Hosted On: readthedocs](https://img.shields.io/badge/hosted%20on-readthedocs-e08839)](https://docs.readthedocs.io/en/stable/)\n[![Types: sphinx-autodoc-typehints](https://img.shields.io/static/v1?label=API&message=sphinx-autodoc-typehints&color=9c70d7)](https://github.com/agronholm/sphinx-autodoc-typehints)\n[![Markdown: m2r2](https://img.shields.io/badge/markdown-m2r2-8e1e3d)](https://github.com/CrossNox/m2r2)\n\nmiscellaneous tools used to maintain this project:\n\n[![Cookiecutter Updates: cruft](https://img.shields.io/badge/cc%20updates-cruft-6a4aef)](https://github.com/cruft/cruft)\n[![Requirements: pip-tools](https://img.shields.io/static/v1?label=requirements&message=pip-tools&color=a77bb5)](https://github.com/jazzband/pip-tools)\n[![Releases: bump2version](https://img.shields.io/badge/releases-bump2version-828e52)](https://github.com/c4urself/bump2version)\n[![Versioning: setuptools_scm](https://img.shields.io/static/v1?label=versioning&message=setuptools-scm&color=f61a61)](https://github.com/pypa/setuptools_scm)\n\n\n## Useful Links üîó\n\n* [API Reference][3]: A developer's reference of the API exposed by this\n  project.\n* [cc-python][4]: The [cookiecutter][5] that was used to generate this project.\n  Changes made to this cookiecutter are periodically synced with this project.\n* [CHANGELOG.md][2]: We use this file to document all notable changes made to\n  this project.\n* [CONTRIBUTING.md][7]: This document contains guidelines for developers\n  interested in contributing to this project.\n* [Documentation][1]: This project's documentation is hosted on\n  [readthedocs.io][6].\n* [gh:bbugyi200/python-release-tools][8]:\n  This project‚Äôs source code is hosted on GitHub.\n\n\n## Generic [cc-python](https://github.com/bbugyi200/cc-python) Documentation üìÑ\n\n### üî¢ Basic Usage\n\nBefore making a PR please run the following\n\n* Optional one time setup: run `make use-docker` if you need to build/test this with docker\n* `make lint` to check for any format or convention issues\n* `make test` to run all tests\n\n### ‚ùì How do I ...?\n\n<details><summary>üîß See available make targets</summary>\n\nTo see available make targets, simply run `make`.\n\n</details>\n\n<details><summary>üê≥ Switch to and from using Docker</summary>\n\nTo start using Docker, run `make use-docker`. Every subsequent make command you run will then be run inside the associated container whenever appropriate.\n\nTo stop using Docker, run `make remove-docker`. Every subsequent make command you run will then be run inside your native virtual environment whenever appropriate.\n\n</details>\n\n<details><summary>üõ† Add a new pip dependency</summary>\n\nNew dependencies need to be added to `requirements.in`. Your `requirements.txt` will then automatically be updated to reflect those changes the next time a relevant make target is run. Alternatively, you can run `make update-requirements`.\n\nNote:\n* Before any make command is run, requirements are synced so that the development environment matches your `requirements.txt` exactly i.e. extra packages that are not present in the `requirements.txt` are removed and any missing packages are installed. This helps providing a consistent environment across platforms, and ensures that whenever requirements change, only minimal updates are performed.\n* Check out [pip-tools](https://github.com/jazzband/pip-tools#pip-tools--pip-compile--pip-sync) for more information.\n\n</details>\n\n<details><summary>üôà Ignore linting violations</summary>\n\nFor [flake8](https://flake8.pycqa.org/en/latest/user/configuration.html#configuration-locations) [violations](https://wemake-python-stylegui.de/en/latest/pages/usage/violations/index.html), you can:\n* ignore a rule for a single line of code using a `#noqa` comment e.g.\n```python\nx = 1 # noqa: WPS111\n```\n* [ignore](https://flake8.pycqa.org/en/latest/user/violations.html#in-line-ignoring-errors) a rule for an entire file by adding it to `flake8.per-file-ignores` inside `setup.cfg`.\n* [exclude](https://flake8.pycqa.org/en/latest/user/violations.html#ignoring-entire-files) an entire file from flake8 checks by adding it to `flake8.exclude` inside `setup.cfg`.\n* ignore a rule for all files by adding it to the `flake8.ignore` list inside `setup.cfg`.\n\nFor [mypy](https://mypy.readthedocs.io/en/stable/config_file.html#the-mypy-configuration-file) violations, you can:\n* [ignore](https://mypy.readthedocs.io/en/stable/common_issues.html#spurious-errors-and-locally-silencing-the-checker) type checking for a single line of code using a `# type: ignore` comment.\n* [ignore](https://mypy.readthedocs.io/en/stable/common_issues.html#ignoring-a-whole-file) type checking for an entire file by putting a `# type: ignore` comment at the top of a module (before any statements, including imports or docstrings).\n\nFor [pydocstyle](http://www.pydocstyle.org/en/5.0.1/usage.html#configuration-files) violations, you can:\n* [ignore](http://www.pydocstyle.org/en/5.0.1/usage.html#in-file-configuration) a rule for a single line of code using a `# noqa` comment (this can be combined with flake8 exclusions).\n* exclude an entire file from pydocstyle checks by excluding it from `pydocstyle.match` inside `setup.cfg`.\n* ignore a rule for all files by adding it to the `pydocstyle.ignore` list inside `setup.cfg`.\n\nFor [coverage](https://coverage.readthedocs.io/en/v4.5.x/config.html#) violations, you can:\n* [exclude](http://www.pydocstyle.org/en/5.0.1/usage.html#in-file-configuration) a single line of code using a `# pragma: no cover` comment.\n* [exclude](https://coverage.readthedocs.io/en/v4.5.x/source.html#specifying-source-files) an entire file from coverage checks by adding it to the `coverage:run.omit` list inside `setup.cfg`.\n* [exclude](https://coverage.readthedocs.io/en/v4.5.x/excluding.html#advanced-exclusion) all lines matching a given pattern by adding it to the `coverage:report.exclude_lines` list inside `setup.cfg`.\n\n</details>\n\n<details><summary>üß™ Run specific tests</summary>\n\nFirst, get a shell inside your development environment by running `make dev-shell`.\n\nYou can then use the pytest `-k` option to select tests based on their names, e.g.\n```bash\npython -m pytest -k \"included_test\"\n```\nYou can also use \"and\", \"or\" and \"not\" keywords e.g.\n```bash\npython -m pytest -k \"included_test or not excluded\"\n```\n\n</details>\n\n<details><summary>üìÑ Build and view docs from a local version</summary>\n\nYou can generate docs locally by running `make build-docs`.\nYou can then see the generated docs by running\n```bash\ncd docs/build\npython -m http.server\n```\nand going to http://localhost:8000/\n\n</details>\n\n<details><summary>üç™ Update my project to match the cookiecutter which generated it</summary>\n\nThis project is enabled with `cruft` to be able to update the template with any improvements made in the cc-python cookie cutter which generated it.\n\n* `make check-cc` will report if this project is up to date or out of sync with the cookiecutter.\n* `make update-cc` will update this project to be in sync with the cc-python cookiecutter. This can give improvements or new features which are added to the template after this project was created. Note one should do this on a clean branch. After running this it is a good idea to run `make all` to rebuild everything and ensure things still work after the update.\n\n</details>\n\n\n[1]: https://python-release-tools.readthedocs.io/en/latest\n[2]: https://github.com/bbugyi200/python-release-tools/blob/master/CHANGELOG.md\n[3]: https://python-release-tools.readthedocs.io/en/latest/modules.html\n[4]: https://github.com/bbugyi200/cc-python\n[5]: https://github.com/cookiecutter/cookiecutter\n[6]: https://docs.readthedocs.io/en/stable/\n[7]: https://github.com/bbugyi200/python-release-tools/blob/master/CONTRIBUTING.md\n[8]: https://github.com/bbugyi200/python-release-tools\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bbugyi200/python-release-tools",
    "keywords": "",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bugyi.release-tools",
    "package_url": "https://pypi.org/project/bugyi.release-tools/",
    "platform": "",
    "project_url": "https://pypi.org/project/bugyi.release-tools/",
    "project_urls": {
      "Homepage": "https://github.com/bbugyi200/python-release-tools"
    },
    "release_url": "https://pypi.org/project/bugyi.release-tools/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Scripts that help release new versions of software.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11504012,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4063ca68b58ae56e6e23b0a76b2f0af7354634d745244711e37d841920174cc",
          "md5": "36ce725f4278c618be273f5215f94f9f",
          "sha256": "044203a17de8f53a26f89f6f5737a3e1308ced6c62af66a00ce0eef086919000"
        },
        "downloads": -1,
        "filename": "bugyi.release_tools-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36ce725f4278c618be273f5215f94f9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6080,
        "upload_time": "2021-09-21T03:55:43",
        "upload_time_iso_8601": "2021-09-21T03:55:43.009208Z",
        "url": "https://files.pythonhosted.org/packages/e4/06/3ca68b58ae56e6e23b0a76b2f0af7354634d745244711e37d841920174cc/bugyi.release_tools-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbfa3f7be6af120e362172e2b765bf3241e2308210dac6860392f96de0618f70",
          "md5": "0ac071f7a8488fc8d731ea64021f269e",
          "sha256": "2c9bf314299c199a3f2f79a5fcc66727e7e36336a45ba232c65c24887a3164bd"
        },
        "downloads": -1,
        "filename": "bugyi.release_tools-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ac071f7a8488fc8d731ea64021f269e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26304,
        "upload_time": "2021-09-21T03:55:44",
        "upload_time_iso_8601": "2021-09-21T03:55:44.376921Z",
        "url": "https://files.pythonhosted.org/packages/cb/fa/3f7be6af120e362172e2b765bf3241e2308210dac6860392f96de0618f70/bugyi.release_tools-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4063ca68b58ae56e6e23b0a76b2f0af7354634d745244711e37d841920174cc",
        "md5": "36ce725f4278c618be273f5215f94f9f",
        "sha256": "044203a17de8f53a26f89f6f5737a3e1308ced6c62af66a00ce0eef086919000"
      },
      "downloads": -1,
      "filename": "bugyi.release_tools-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36ce725f4278c618be273f5215f94f9f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6080,
      "upload_time": "2021-09-21T03:55:43",
      "upload_time_iso_8601": "2021-09-21T03:55:43.009208Z",
      "url": "https://files.pythonhosted.org/packages/e4/06/3ca68b58ae56e6e23b0a76b2f0af7354634d745244711e37d841920174cc/bugyi.release_tools-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbfa3f7be6af120e362172e2b765bf3241e2308210dac6860392f96de0618f70",
        "md5": "0ac071f7a8488fc8d731ea64021f269e",
        "sha256": "2c9bf314299c199a3f2f79a5fcc66727e7e36336a45ba232c65c24887a3164bd"
      },
      "downloads": -1,
      "filename": "bugyi.release_tools-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0ac071f7a8488fc8d731ea64021f269e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26304,
      "upload_time": "2021-09-21T03:55:44",
      "upload_time_iso_8601": "2021-09-21T03:55:44.376921Z",
      "url": "https://files.pythonhosted.org/packages/cb/fa/3f7be6af120e362172e2b765bf3241e2308210dac6860392f96de0618f70/bugyi.release_tools-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}