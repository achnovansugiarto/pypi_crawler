{
  "info": {
    "author": "",
    "author_email": "Tim Garrels <tim.garrels@protonmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PickMeUp - Pick up failed list processing without re-processing\n\n**PickMeUp** allows to pick up a failed processing of elements.\n```python\nelements = [1,2,3,4,5,6,7,8]\nwith PickMeUp(elements, name=\"element_processing\") as l:\n    for e in l:\n        result = process(e)\n        save(result)\n```\n\nIf `process` fails for elements dividable by 4, the script crashes. You now have to fix `process` and re-run the script.\nNormally, you would re-process 1, 2, and 3. However, you already have results for those! And `process` might be expensive.\n**PickMeUp** will know that the processing failed at 4, and will only iterate over 4, 5, 6, 7, and 8, saving you from re-processing.\n\n### Without PickMeUp\n1. Process 1,2,3\n2. Fix `process`\n3. Process 1,2,3,4,5,6,7,8 \n\n![Showcase GIF: Without PickMeUp](img/without_pickmeup.gif)\n### With PickMeUp\n1. Process 1,2,3\n2. Fix `process`\n3. Process 4,5,6,7,8\n\n![Showcase GIF: With PickMeUp](img/with_pickmeup.gif)\n\n## Installation\n```\npip install pickmeup\n```\n\n## Usage\nCreate a context using your list and a name, and use the context element as your list:\n```python\nwith PickMeUp(yourList, \"some_unique_name\") as l:\n    for e in l:\n        # Do stuff with e\n```\n\n## Example Use-Case: Scraping\nImagine you want to crawl content from a website.\nYou have a list of 50 content pages, and you want to extract the `src` of one specific image from each page.\nYou wrote the extractor (identifying the important image, extracting the `src`) by looking at the first 2 pages.\nIt seems that the important image can be identified with the `id=important-image`:\n```python\nimport requests\nfrom bs4 import BeautifulSoup\n\n\ndef scrape(url: str) -> str:\n    \"\"\"Returns the html of the given `url`\"\"\"\n    resp = requests.get(url)\n    return resp.content\n\ndef extract_important_image_src(html: str) -> str:\n    \"\"\"Finds the important image in the given `html` and\n    returns its `src` attribute\"\"\"\n    soup = BeautifulSoup(html)\n    return soup.find('img', {'id': 'important-image'})['src']\n\nURLS = [\"example.com/content/1\", \"example.com/content/2\", ...] \nfor url in URLS:\n    html = scrape(url)\n    src = extract_important_image_src(html)\n    print(f\"{src} extracted!\")\n```\n\nHowever, it just so happens that half of the content pages follow an old design, and those pages mark their image with `id=important`.\nYour extractor breaks, because there is no element with `id=important-image` and the subscript `['src']` fails:\n```bash\n> \"example.com/content/1 extracted!\"\n> ...\n> \"example.com/content/25 extracted!\"\n> TypeError: 'NoneType' object is not subscriptable\n```\n\nSo you enhance `extract_important_image_src` to handle the old design. But now you have to parse the first 25 pages again!\nOr skip them manually. Instead, if you used **PickMeUp**:\n\n```python\nURLS = [\"example.com/content/1\", \"example.com/content/2\", ...]\nwith PickMeUp(URLS, name=\"url_processing\") as l:\n    for url in l:\n        html = scrape(url)\n        src = extract_important_image_src(html)\n        print(f\"{src} extracted!\")\n```\n\nYou could just update `extract_important_image_src` and re-run your script.\nIt will pick up the scraping at the element that failed, and proceed as if nothing happened.\nIf there is another design change somewhere, the processing will fail again. But again, you can fix the issue and re-run the script,\nwithout re-processing all the urls that worked before!\n\n## Caveats\n\n**PickMeUp** creates state for your processing by dumping the remaining elements to disk. This creates a few caveats:\n- If your elements are really large objects, this will take much disk space.\n- If you are using a generator, and the elements are expensive to create, **PickMeUp** will take the time to create them all and dump them to disk.\n- Changing the list elements between script runs without clearing state creates undefined behavior!\n- List elements have to be serializable!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pickmeup",
    "package_url": "https://pypi.org/project/pickmeup/",
    "platform": null,
    "project_url": "https://pypi.org/project/pickmeup/",
    "project_urls": {
      "Bug Tracker": "https://github.com/timgarrels/PickMeUp/issues",
      "Homepage": "https://github.com/timgarrels/PickMeUp",
      "Repository": "https://github.com/timgarrels/PickMeUp"
    },
    "release_url": "https://pypi.org/project/pickmeup/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Pick up failed list processing without re-processing",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16928867,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d9c003d24fda4be67e71718ee0aa71c4a9914787763c1eba8cd387ee0887146",
          "md5": "c873638a04d6bec38d035822c9070a8c",
          "sha256": "6a9654abd85ab274de77a95736d91966afc0399f0847bb34c7f90d6347782e24"
        },
        "downloads": -1,
        "filename": "pickmeup-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c873638a04d6bec38d035822c9070a8c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6640,
        "upload_time": "2023-02-19T13:06:21",
        "upload_time_iso_8601": "2023-02-19T13:06:21.444418Z",
        "url": "https://files.pythonhosted.org/packages/7d/9c/003d24fda4be67e71718ee0aa71c4a9914787763c1eba8cd387ee0887146/pickmeup-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19f1d09a01eacfe8fec4c321dd19ccfac8682fe3a59bb866b75293d42b5b6d51",
          "md5": "bdf55aa02de42b946428f906e4345a03",
          "sha256": "3d3c3f6297e4a38d455fe8dc45243062f0381948b06fe9ef5802a1519b0054b2"
        },
        "downloads": -1,
        "filename": "pickmeup-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bdf55aa02de42b946428f906e4345a03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6979,
        "upload_time": "2023-02-19T13:06:22",
        "upload_time_iso_8601": "2023-02-19T13:06:22.880823Z",
        "url": "https://files.pythonhosted.org/packages/19/f1/d09a01eacfe8fec4c321dd19ccfac8682fe3a59bb866b75293d42b5b6d51/pickmeup-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55260ca6c414080271b8c2b85bf009206958340106db267c54871f1640d5e054",
          "md5": "06983ed3816cde0dad46a61d44ff5256",
          "sha256": "ccbdc9415020402fa8ed6ba5c81d869c2ec478ba8b9629f0a0fcd2f352565cec"
        },
        "downloads": -1,
        "filename": "pickmeup-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06983ed3816cde0dad46a61d44ff5256",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6649,
        "upload_time": "2023-02-19T13:17:18",
        "upload_time_iso_8601": "2023-02-19T13:17:18.343567Z",
        "url": "https://files.pythonhosted.org/packages/55/26/0ca6c414080271b8c2b85bf009206958340106db267c54871f1640d5e054/pickmeup-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fa9a81c825b1e01fe9712c059e1bc5be2e8b03937fbbad1a968b3da5a1bc7f5",
          "md5": "a4cc36042a69d7edef8c86d566d3cb6d",
          "sha256": "55ebf3fc7fd94997d614d852c360a8c5605261e9923c7d64843d129177b955ae"
        },
        "downloads": -1,
        "filename": "pickmeup-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a4cc36042a69d7edef8c86d566d3cb6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6996,
        "upload_time": "2023-02-19T13:17:20",
        "upload_time_iso_8601": "2023-02-19T13:17:20.498145Z",
        "url": "https://files.pythonhosted.org/packages/6f/a9/a81c825b1e01fe9712c059e1bc5be2e8b03937fbbad1a968b3da5a1bc7f5/pickmeup-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55260ca6c414080271b8c2b85bf009206958340106db267c54871f1640d5e054",
        "md5": "06983ed3816cde0dad46a61d44ff5256",
        "sha256": "ccbdc9415020402fa8ed6ba5c81d869c2ec478ba8b9629f0a0fcd2f352565cec"
      },
      "downloads": -1,
      "filename": "pickmeup-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "06983ed3816cde0dad46a61d44ff5256",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6649,
      "upload_time": "2023-02-19T13:17:18",
      "upload_time_iso_8601": "2023-02-19T13:17:18.343567Z",
      "url": "https://files.pythonhosted.org/packages/55/26/0ca6c414080271b8c2b85bf009206958340106db267c54871f1640d5e054/pickmeup-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6fa9a81c825b1e01fe9712c059e1bc5be2e8b03937fbbad1a968b3da5a1bc7f5",
        "md5": "a4cc36042a69d7edef8c86d566d3cb6d",
        "sha256": "55ebf3fc7fd94997d614d852c360a8c5605261e9923c7d64843d129177b955ae"
      },
      "downloads": -1,
      "filename": "pickmeup-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a4cc36042a69d7edef8c86d566d3cb6d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6996,
      "upload_time": "2023-02-19T13:17:20",
      "upload_time_iso_8601": "2023-02-19T13:17:20.498145Z",
      "url": "https://files.pythonhosted.org/packages/6f/a9/a81c825b1e01fe9712c059e1bc5be2e8b03937fbbad1a968b3da5a1bc7f5/pickmeup-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}