{
  "info": {
    "author": "Diego Gonzalez (jimbuho)",
    "author_email": "dgonzalez.jim@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "Brain Utils\n-----------\n\nBrain Utils is a Django app to let developers do not repeat same initial code for commons utilities. For example\nconfiguration system values in database, configurable messages with traduction, stantard mixins for models and admins, etc.\n\nQuick start\n-----------\n\n1. Install:\n\n    ``pip install django-brain-utils``\n\n2. Add \"brainutils\" to your INSTALLED_APPS setting like this:\n\n    ``INSTALLED_APPS = [\n        ...\n        'brainutils', # Before allauth\n        ...\n    ]``\n\n3. To start you can add a configurable message in your home page, example:\n\n    {% load butils %}\n    <p>{% display_message request 'home.welcome' %}</p>\n\n4. Run ``python manage.py migrate`` to create the brainutils models.\n\n5. Start the development server, visit http://127.0.0.1:8000 to watch first message and then go http://localhost:8000/admin/brainutils/message/\n   to edit the created message, you may set there the message you want all times you need (to refressh changes you need\n   to restart your webserver Apache, Nginx, etc). Is easy and you got a total control for each message and it traduction\n\n\nMore utilities\n-----------\n\nConfiguration variables:\n\nYou can set and use in your code a configuration variable very easy like this:\n\nfrom brainutils import configuration\n\ntoken = configuration.get_value('api.some.token','HEREYOURINITIALTOKENVALUE')\nmax_items_per_page = configuration.get_integer('commons.pagination.maxitems','10')\n\nThen you may set a new value whenever you whant in http://localhost:8000/admin/brainutils/configuration/. Again you need\nto restart your webserver to refresh changes\n\nModel standart base fields:\n\n`from brainutils import mixins\n\nclass MyModel(mixins.AuditMixin):\n\n    field1 = models.TextField(null=True, blank=True)\n    field2 = models.TextField(null=True, blank=True)`\n\nThen you have this fields and you may use like you want:\ncreation_date, modification_date, creation_user, modification_user, status\n\nExtra Models Administrator Skills\n\nIf you need to interact with your model administrator with extra tags or actions you can use something like this:\n\n`class MyModelAdmin(mixadmin.ModelAdminMixin):\n\n    list_display = ('field1', 'field2', 'modification_date', 'extra_actions')\n    \n    def myaction_view(self, request, id):\n        try:\n            obj = models.MyModel.objects.get(pk = id)\n            success = obj.do_action()\n            if success:\n                return self.response_view(request, True, 'myaction_view', 'OK')\n            else:\n                return self.response_view(request, False, 'myaction_view', 'FAIL')\n        except Exception as e:\n            return self.response_view(request, False, 'myaction_view', str(e))\n\n    def get_specific_dual_methods(self, obj):\n        return [\n            {'name':'actionname', 'activation':True, 'color':self.ENABLED_COLOR, \n            'myaction_view':self.myaction_view},\n        ]`\n\nLanguage Manager\n\nYoure application may needs to be multilanguage, theres an easy way with Brain Utils, just set in your code:\n\n`from brainutils import messages\n\ndef my_view(request):\n\n    current_language = messages.languages.get_language(request)\n    \n    # Do whatever you want with language object\n    \n    # You may change the current language online in each moment if you need\n    \n    messages.languages.change_language(request,'english')`\n\nIn templates:\n\n{% for l in LANGUAGES %}\n    {{l.title}}\n{% endfor %}\n\nThen you may set a new language value whenever you whant in http://localhost:8000/admin/brainutils/language/.\n\nCustomers Accounts\n\nBrainutils gives you an standard login, signup and more functionalities for customers in your application.\n\nTo customize messages and else, copy our templates/account/ folder and change there whatever you want. You may\nreuse a lot of funcionality inside there if your application web structure is similar. We use bootstrap as this:\n\n<div class=\"main-container\">\n    <div class=\"inside-container\">\n        <!-- HERE PAGE CONTENT -->\n    </div>\n</div>\n\nCode Generation\n\nWith Django Brain Utils you can generate repetitive code, as the Model Admins, for that objetive we have a console,\nyou can run the console from this command:\n\n``./manage.py codegen``\n\nAnd this menu will be displayed:\n\nWelcome to Brain Utils\n_________________________\n\nBRAIN UTILS GENERATOR\nWhat we gonna do?:\n1. Generate Admins\n2. Generate URLs- Views\n3. Generate Signup - Login\n0. Exit\n***************************\nSelect and option[and press ENTER]:\n\nBy the moment with just try with option 1, is very intuitive and easy to generate admins code.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jimbuho/django-brain/",
    "keywords": "login,signup,messages,configuration,rehuse",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-brain-utils",
    "package_url": "https://pypi.org/project/django-brain-utils/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-brain-utils/",
    "project_urls": {
      "Homepage": "https://github.com/jimbuho/django-brain/"
    },
    "release_url": "https://pypi.org/project/django-brain-utils/0.2.5/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "My app description",
    "version": "0.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11545364,
  "releases": {
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9433df8ea6b824a6cf61a75365378818c0534469ace5dcdae4571eca29053a8f",
          "md5": "3137060ac1db8f81ec7a99f2bb26feb8",
          "sha256": "b7f2256bfce639cfa080ed42b4bf4c0ac51bc89db40946479ed388c3385c09db"
        },
        "downloads": -1,
        "filename": "django_brain_utils-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3137060ac1db8f81ec7a99f2bb26feb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 40692,
        "upload_time": "2021-09-25T03:15:12",
        "upload_time_iso_8601": "2021-09-25T03:15:12.050929Z",
        "url": "https://files.pythonhosted.org/packages/94/33/df8ea6b824a6cf61a75365378818c0534469ace5dcdae4571eca29053a8f/django_brain_utils-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7112410b5a594af249194b80f1b568b7d609803777dd6030e04f312b21ea2b66",
          "md5": "e2cdd48b3c80711dfea683f829840bec",
          "sha256": "33fad95150cf8d7054b942ecbbef699182569def0906a4e7e0c729f91c96d756"
        },
        "downloads": -1,
        "filename": "django_brain_utils-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e2cdd48b3c80711dfea683f829840bec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 44401,
        "upload_time": "2021-09-25T04:12:13",
        "upload_time_iso_8601": "2021-09-25T04:12:13.964167Z",
        "url": "https://files.pythonhosted.org/packages/71/12/410b5a594af249194b80f1b568b7d609803777dd6030e04f312b21ea2b66/django_brain_utils-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7112410b5a594af249194b80f1b568b7d609803777dd6030e04f312b21ea2b66",
        "md5": "e2cdd48b3c80711dfea683f829840bec",
        "sha256": "33fad95150cf8d7054b942ecbbef699182569def0906a4e7e0c729f91c96d756"
      },
      "downloads": -1,
      "filename": "django_brain_utils-0.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "e2cdd48b3c80711dfea683f829840bec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 44401,
      "upload_time": "2021-09-25T04:12:13",
      "upload_time_iso_8601": "2021-09-25T04:12:13.964167Z",
      "url": "https://files.pythonhosted.org/packages/71/12/410b5a594af249194b80f1b568b7d609803777dd6030e04f312b21ea2b66/django_brain_utils-0.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}