{
  "info": {
    "author": "Piero Campalani",
    "author_email": "piero.campalani@eurac.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Atmospheric Science",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "![PyPI - Status](https://img.shields.io/pypi/status/climdex-kit)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/climdex-kit)\n![PyPI](https://img.shields.io/pypi/v/climdex-kit)\n![PyPI - Wheel](https://img.shields.io/pypi/wheel/climdex-kit)\n![PyPI - License](https://img.shields.io/pypi/l/climdex-kit)\n\n# `climdex-kit`: compute, publish, analyse\n\n* [Background](#background)\n* [Content](#content)\n* [Technologies](#technologies)\n* [Installation](#installation)\n* [Usage](#usage)\n* [Examples](#examples)\n\n[![climdex-kit IO overview](docs/uml/climdex.io.overview.svg)](docs/uml/)\n\nThis project contains a Python package for the parallelized\nlocal computation of [scenario](https://climatescenarios.org/primer/)-aware\nclimate indices starting from input time-series\nof climate projections.\n\nThe package comes with an pre-compiled initial set of indices, mostly\nrelying on the [CDO](https://code.mpimet.mpg.de/projects/cdo) operators.\nFor the more advanced ones (SPI and SPEI), the [climate-indices](https://climate-indices.readthedocs.io)\nPython package is used.\nThis set of indices can be easily customised or extended: please\ncheck out [how to contribute](CONTRIBUTING.md) if you are interested.\n\n\n## Background\n\nA climate index is information derived from one or more climate variables\n(precipitation, mean temperature, etc). The index can range from a simple\nconditional counting of days against a threshold, to more complex\nstatistical processing.\n\nThe information is usually calculated spatially\non a pixel-by-pixel basis, with possibly some form of aggregation over time.\nHence the spatio-temporal domain of an index is generally a time-series\nwith the same spatial resolution, and with either the same or a coarser\ntemporal step.\n\nThe availability of robust and easily interpretable information about\nthe spatial distribution and temporal evolution of climate related-hazards,\nespecially climate extremes, is an increasing need not only for the\nresearch community but also for a wide range of sectors and applications.\n\nThe European Environmental Agency has been currently supporting, in the\nframework of the European Topic Centre on Climate Change impacts, vulnerability\nand Adaptation (ETC-CCA), the review and selection of suitable climate-related\nindices for Europe to be recommended and implemented for adaptation purposes.\n\n\n## Content\n\nThe project is structured as follows:\n\n* `src/` : source folder containing the Python package implementation\n* `test/` : test suites\n* `etc/` : folder with configuration files (most notably the **indices.ini**\n           file with the definition of the climate indices\n* `notebooks/` : folder with the Jupyter notebooks\n* `docs/` : documentation folder\n* `requirements.txt`/`environment.yml` : package dependencies for *pip*\n   and *conda* environments\n* `Makefile` : set of rules for building and installing the package\n* `CONTRIBUTING.md` : help for developers\n* `CHANGELOG.md` : list of notable changes for each release of the project\n* `README.md` : this file\n\nThe following files are required for packaging and distribution:\n\n* `pyproject.toml` : tells what is required to build the project\n* `setup.cfg`/`setup.py` : static/dynamic package metadata for **setuptools**\n\n## Technologies\n\nThe package is written in Python and for most of the implemented climate indices\nrelies on both the [CDO](https://code.mpimet.mpg.de/projects/cdo/wiki/Cdo#Documentation)\nlibrary, and the [climate-indices](https://github.com/monocongo/climate_indices) package.\n\n\n## Installation\n\nThe package is available as both *pip* sdist/wheel and *conda* package.\n\n### Dependencies\n\nThe package relies on the\n[CDO](https://code.mpimet.mpg.de/projects/cdo/wiki/Cdo#Installation-and-Supported-Platforms)\noperators library v1.9.9. If you are using *conda* environments, you can install the package as follows:\n\n```sh\nconda install -c conda-forge cdo=1.9.9\n```\n\nIn alternative, you can install the `climdex-kit` *conda* package as explained later in this file.\n\n### Install from PyPI via pip\n\n```sh\n$ python3 -m pip install climdex-kit\n```\n\n### Install as conda package\n\n```sh\nTODO\n```\n\n### Install in development mode\n\nFor developers: refer to the instructions in the [CONTRIBUTING](CONTRIBUTING.md)\nfile for the setup of the development environment instead.\n\n## Usage\n\nThe `climdex` Python package provides a set sub-commands for the specific actions to be taken\n\n* `list`/`ls` : list all available indices\n* `show`/`sh` : show the details of a specific index\n* `compute`/`co` : compute one or more indices\n\nThere is thus a hierarchical organization of the CLI arguments.\nAt any level of the hierarchy, the `--help`/`-h` option can be called to print\nthe help message.\n\n### general args\n\n| <div style=\"width:30%\">option</div> | <div style=\"width:60%\">description</div> | allowed values |\n|:------------------------------------|:-----------------------------------------|:--------------:|\n| `--version`            | Get the version number of the program | |\n| `--idx-conf`/`-c` FILE | Alternative indices configuration file (.ini) (default is ./etc/indices.ini) | abs/rel path |\n| `--log-conf`/`-L` FILE | Alternative logging configuration file (.yaml) (default: ./etc/logging.yml)  | abs/rel path |\n| `-d`                   | Enable debug mode | |\n\n(See `$ python -m climdex -h` for a full synopsis)\n\n\n### {list,ls} args\n\nThis sub-command currently does not provide any option.\nRun `$ python -m climdex list` to get a summary of all available climate indices.\n\n\n### {show,sh} args\n\n| <div style=\"width:30%\">option</div> | <div style=\"width:60%\">description</div> | allowed values |\n|:------------------------------------|:-----------------------------------------|:--------------:|\n| `index` | the index configuration to be visualized | see `{list,ls}` sub-command | \n\n(See `$ python -m climdex show -h` for a full synopsis)\n\n\n### {compute,co} args\n\n| <div style=\"width:30%\">option</div> | <div style=\"width:60%\">description</div> | allowed values |\n|:------------------------------------|:-----------------------------------------|:--------------:|\n| `--index` / `-i` INDEX | A comma-separated list of indices to be computes | see `{list,ls}` sub-command | \n| `--multiprocessing`    | The CPU parallelism to be employed | int>0 (N of CPUs) or one among {`one`, `all_but_one`, `all`} |\n| `--idir` DIR           | Root folder where to look for input files (expected structure: *$input_dir/variable/scenario/\\*.nc*) | abs/rel path |\n| `--odir`/`-o` DIR      | Root folder where to store indices files | abs/rel path |\n| `--scenario`/`-s` S    | White-space separated list of scenarios | sub-folders of input variables |\n| `--regex`/`-x` R       | Filter input files with a regular expression | regex |\n| `--metadata-only`/`-m` | Only re-set the output attributes (metadata) on existing indices files (compute the index file too on non-existing file instead) | |\n| `--dry-run`/`-n`       | Only print jobs to output without doing anything | |\n| `--force`/`-f`         | Force overwrite of existing output indices files (otherwise execution is stopped) | |\n\n(See `$ python -m climdex compute -h` for a full synopsis)\n\n\n### Data organization\n\nThe package expects a fixed organization of the input datasets and a fixed naming scheme\nin order to properly extract all the metadata.\n\nThe path and name of a climate projection NetCDF starting from the $IDIR input\nroot directory (`--idir` in the command line) shall be as follows:\n\n```sh\n$IDIR/{var}/{scenario}/{var}_{model}_{timeres}_{yearstart}{yearend}_{scenario}.nc\n```\n\nBeing:\n\n* `{var}` : the climate variable (whose label shall also coincide with the name of the\nvariable in the NetCDF)\n* `{scenario}` : the name of the emissions scenario\n* `{model}` : the name of the climate model used to create the projection\n* `timeres` : the time-step of the time-series (e.g. day, month, etc)\n* `yearstart` / `yearend` : time range of the time-series (`YYYY` format)\n\nFor ancillary scenario-independent datasets (e.g. land mask),\nthe `{scenario}/` sub-folder can be omitted mandatory, and the name\nof the dataset shall be `{var}.nc`.\n\nAnalogously, given the $ODIR output specified via `--odir/-o` CLI argument, \neach index file will be stored then as follows:\n\n```sh\n$ODIR/{index}/{scenario}/{index}_{model}_{timeres}_{yearstart}{yearend}_{scenario}.nc\n``` \n\n### Logging\n\nBy default the program logs to both console (with colored output to highlight warnings and errors),\nand to a file called `climdex.log` in the current working directory.\n\nThe configuration of both loggers can be found in `./etc/logging.yaml`, otherwise use\nthe `--log-conf`/`-L` option to set an alternative configuration.\n\n\n## Examples\n\n```sh\n# list all avaiable indices\n$ python -m climdex list\n\n# show the configuration details of the index [spei12]\n$ python -m climdex show spei12\n\n# compute the frost days [fd] and 12-months SPI [spi12] index on all available climate\n#   projections for scenario rcp85 and by using 3 CPUs\n$ python -m climdex \\ \n    compute \\\n    --index amt,spi12   \\\n    --multiprocessing 3 \\\n    --scenario rcp85    \\\n    --idir $IDIR        \\\n    --odir $ODIR\n\n# update the metadata of all existing indexes of scenario rcp85, and compute the missing ones anew\n#   using all CPUs + turn on debug mode + dry run only\n$ python -m climdex -d \\ \n    compute \\\n    --index all           \\\n    --scenario rcp85      \\\n    --multiprocessing all \\\n    --metadata-only       \\\n    --idir $IDIR          \\\n    --odir $ODIR          \\\n    --dry-run\n\n# re-compute the [fd] and [tn] indices for the model \"EUR-11_CNRM-CERFACS-CNRM-CM5_CLMcom-CCLM4-8-17_r1i1p1_v1\"\n#   and scenario rcp45 and keep it on a separate file for comparison with existing\n#   + use 1 CPU (sequential execution)\n$ python -m climdex \\ \n    compute \\\n    --index fd,tn         \\\n    --scenario rcp45      \\\n    --multiprocessing one \\\n    --idir $IDIR          \\\n    --odir $ODIR          \\\n    --regex \"*EUR-11_CNRM-CERFACS-CNRM-CM5_CLMcom-CCLM4-8-17_r1i1p1_v1*\"\n \n# re-compute (and overwrite when existing) all indexes on rcp45 and rcp85 scenarios\n#   + using all available CPUs except one\n$ python -m climdex \\ \n    compute \\\n    --index all                   \\\n    --scenario rcp45 rcp85        \\\n    --multiprocessing all_but_one \\\n    --idir $IDIR                  \\\n    --odir $ODIR                  \\\n    --force\n```\n\n## Credits\nThis project is funded by the\n[FAct CLIMAX](https://www.eurac.edu/en/institutes-centers/institute-for-earth-observation/projects/fact-climax)\nproject at Eurac Research (Institute for Earth Observation).\n\n[![eurac_logo](media/eurac_logo_small.png)](https://www.eurac.edu/en/institutes-centers/institute-for-earth-observation)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://gitlab.inf.unibz.it/earth_observation_public/cdr/climdex-kit/-/releases/v0.1.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.inf.unibz.it/earth_observation_public/cdr/climdex-kit",
    "keywords": "indices,climate,scenario",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "climdex-kit",
    "package_url": "https://pypi.org/project/climdex-kit/",
    "platform": null,
    "project_url": "https://pypi.org/project/climdex-kit/",
    "project_urls": {
      "Bug Tracker": "https://gitlab.inf.unibz.it/earth_observation_public/cdr/climdex-kit/-/issues",
      "Download": "https://gitlab.inf.unibz.it/earth_observation_public/cdr/climdex-kit/-/releases/v0.1.1",
      "Homepage": "https://gitlab.inf.unibz.it/earth_observation_public/cdr/climdex-kit",
      "Source": "https://gitlab.inf.unibz.it/earth_observation_public/cdr/climdex-kit"
    },
    "release_url": "https://pypi.org/project/climdex-kit/0.1.1/",
    "requires_dist": [
      "cdo",
      "climate-indices",
      "matplotlib ; extra == 'interactive'",
      "jupyter ; extra == 'interactive'"
    ],
    "requires_python": ">=3.8",
    "summary": "Tool for multi-scenario calculation, publishing, and analysis of indices from 3D time-series of climate projections.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15713901,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f845af4078a04110832c928eecc89342331e4e4ef520f72766f273a6671cb6c",
          "md5": "7cc7039dbe2a56bbc7fae380ece7b3af",
          "sha256": "549dc8fc542fbfd912455fd387288f4dc5c75288af25dac4eedb47564e6306c6"
        },
        "downloads": -1,
        "filename": "climdex_kit-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7cc7039dbe2a56bbc7fae380ece7b3af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 87211,
        "upload_time": "2022-11-09T16:11:41",
        "upload_time_iso_8601": "2022-11-09T16:11:41.203173Z",
        "url": "https://files.pythonhosted.org/packages/7f/84/5af4078a04110832c928eecc89342331e4e4ef520f72766f273a6671cb6c/climdex_kit-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e773fa540e26f4f23001f2d798c06637d14b7b288f92ae79ac27f16971a3e268",
          "md5": "f21ed6a6afffb37393fcb5b6b7bc64bf",
          "sha256": "d184fa6bcc487e975390388aca34122e94b4b9afbb654cc979fd4e31de29a57d"
        },
        "downloads": -1,
        "filename": "climdex-kit-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f21ed6a6afffb37393fcb5b6b7bc64bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 208480,
        "upload_time": "2022-11-09T16:11:42",
        "upload_time_iso_8601": "2022-11-09T16:11:42.842433Z",
        "url": "https://files.pythonhosted.org/packages/e7/73/fa540e26f4f23001f2d798c06637d14b7b288f92ae79ac27f16971a3e268/climdex-kit-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f845af4078a04110832c928eecc89342331e4e4ef520f72766f273a6671cb6c",
        "md5": "7cc7039dbe2a56bbc7fae380ece7b3af",
        "sha256": "549dc8fc542fbfd912455fd387288f4dc5c75288af25dac4eedb47564e6306c6"
      },
      "downloads": -1,
      "filename": "climdex_kit-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7cc7039dbe2a56bbc7fae380ece7b3af",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 87211,
      "upload_time": "2022-11-09T16:11:41",
      "upload_time_iso_8601": "2022-11-09T16:11:41.203173Z",
      "url": "https://files.pythonhosted.org/packages/7f/84/5af4078a04110832c928eecc89342331e4e4ef520f72766f273a6671cb6c/climdex_kit-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e773fa540e26f4f23001f2d798c06637d14b7b288f92ae79ac27f16971a3e268",
        "md5": "f21ed6a6afffb37393fcb5b6b7bc64bf",
        "sha256": "d184fa6bcc487e975390388aca34122e94b4b9afbb654cc979fd4e31de29a57d"
      },
      "downloads": -1,
      "filename": "climdex-kit-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f21ed6a6afffb37393fcb5b6b7bc64bf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 208480,
      "upload_time": "2022-11-09T16:11:42",
      "upload_time_iso_8601": "2022-11-09T16:11:42.842433Z",
      "url": "https://files.pythonhosted.org/packages/e7/73/fa540e26f4f23001f2d798c06637d14b7b288f92ae79ac27f16971a3e268/climdex-kit-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}