{
  "info": {
    "author": "Vincent D. Warmerdam",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# prodigy-tui\n\nA TUI for [Prodigy](https://prodi.gy/), made with [Textual](https://textual.textualize.io/). \n\n![](landing.png)\n\nThis project is currently mainly meant as a demo. Partially because doing annotations via the terminal is relatively experimental, but also because I cannot guarantee full feature parity with Prodigy just yet. The only implemented interface right now is `textcat.manual` but I may implement more in the future. \n\nThat said, this tool _does_ integrate with Prodigy. For example, when you run this:\n\n```\n> python -m prodigy-tui textcat.manual --help \n```\n\nYou're going to get a very familiar help text. \n\n```\nusage: textcat.manual [-h] [--label LABEL] dataset source\n\nInterface for binary text classification from the terminal!\n\npositional arguments:\n  dataset               dataset to write annotations into (str)\n  source                path to text source (Path)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --label LABEL, -l LABEL\n                        category label to apply, only binary is supported (str)\n```\n\nTo start annotating binary text examples, you can run something like: \n\n```\nprodigy-tui textcat.manual reddit-data examples.jsonl --label positive\n```\n\nAnd this will start saving annotations into the `reddit-data` dataset. \n\n## Installation \n\nYou will need to install this tool in an environment that already has Prodi.gy installed. Given such an environment, you can use pip. \n\n```\npython -m pip install \"prodigy-tui @ git+https://github.com/koaning/prodigy-tui.git\"\n```\n\n## Features \n\n- Works over SSH, no need to share a browser. \n- Keyboard shortcuts are the same. \n- You could even click the buttons if you really wanted to though. \n\n## Feedback\n\nAs mentioned before, this is a bit of an experiment. But it seems interesting to explore. Maybe data annotation is something that _can_ happen via the terminal and maybe there's something that's very developer friendly about that.\n\n## Shoutout \n\nProps to the folks over at [textualize](https://www.textualize.io/). Much of the heavy lifting in UI-land is handled by their stack. \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prodigy-tui",
    "package_url": "https://pypi.org/project/prodigy-tui/",
    "platform": null,
    "project_url": "https://pypi.org/project/prodigy-tui/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/prodigy-tui/0.0.1/",
    "requires_dist": [
      "textual (>=0.16.0)",
      "radicli (>=0.0.15)",
      "pytest (>=5.4.3) ; extra == 'dev'",
      "black (>=19.10b0) ; extra == 'dev'",
      "flake8 (>=3.8.3) ; extra == 'dev'",
      "mktestdocs (>=0.1.0) ; extra == 'dev'",
      "interrogate (>=1.2.0) ; extra == 'dev'",
      "isort (==5.12.0) ; extra == 'dev'",
      "autoflake (==2.0.1) ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17527920,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e9476b2e4261877bbd4696e1dc8a1d6ab77f618da55b621abc621c63a87220a",
          "md5": "b3f14a60523659d396058fca503553e3",
          "sha256": "b6aa02a76c4358b7b076390b611b89c762902b64af04bdfcacc155c9e82685d1"
        },
        "downloads": -1,
        "filename": "prodigy_tui-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3f14a60523659d396058fca503553e3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7856,
        "upload_time": "2023-03-31T14:42:37",
        "upload_time_iso_8601": "2023-03-31T14:42:37.064828Z",
        "url": "https://files.pythonhosted.org/packages/9e/94/76b2e4261877bbd4696e1dc8a1d6ab77f618da55b621abc621c63a87220a/prodigy_tui-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "871816948ca5971dd6a6b3e7f414281ffcf9d8423be4688b7321bfb79dfe14ec",
          "md5": "d195a9fea2ae3453f34d4615ede7cb0e",
          "sha256": "2cb28e520b26e2a22418ae56afb2a41bd463927fccbe2ee35bc1c9d1e31fa691"
        },
        "downloads": -1,
        "filename": "prodigy-tui-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d195a9fea2ae3453f34d4615ede7cb0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7830,
        "upload_time": "2023-03-31T14:42:39",
        "upload_time_iso_8601": "2023-03-31T14:42:39.217935Z",
        "url": "https://files.pythonhosted.org/packages/87/18/16948ca5971dd6a6b3e7f414281ffcf9d8423be4688b7321bfb79dfe14ec/prodigy-tui-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e9476b2e4261877bbd4696e1dc8a1d6ab77f618da55b621abc621c63a87220a",
        "md5": "b3f14a60523659d396058fca503553e3",
        "sha256": "b6aa02a76c4358b7b076390b611b89c762902b64af04bdfcacc155c9e82685d1"
      },
      "downloads": -1,
      "filename": "prodigy_tui-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3f14a60523659d396058fca503553e3",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7856,
      "upload_time": "2023-03-31T14:42:37",
      "upload_time_iso_8601": "2023-03-31T14:42:37.064828Z",
      "url": "https://files.pythonhosted.org/packages/9e/94/76b2e4261877bbd4696e1dc8a1d6ab77f618da55b621abc621c63a87220a/prodigy_tui-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "871816948ca5971dd6a6b3e7f414281ffcf9d8423be4688b7321bfb79dfe14ec",
        "md5": "d195a9fea2ae3453f34d4615ede7cb0e",
        "sha256": "2cb28e520b26e2a22418ae56afb2a41bd463927fccbe2ee35bc1c9d1e31fa691"
      },
      "downloads": -1,
      "filename": "prodigy-tui-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d195a9fea2ae3453f34d4615ede7cb0e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7830,
      "upload_time": "2023-03-31T14:42:39",
      "upload_time_iso_8601": "2023-03-31T14:42:39.217935Z",
      "url": "https://files.pythonhosted.org/packages/87/18/16948ca5971dd6a6b3e7f414281ffcf9d8423be4688b7321bfb79dfe14ec/prodigy-tui-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}