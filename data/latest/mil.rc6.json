{
  "info": {
    "author": "Rosas, Alberto",
    "author_email": "alberto.rosas@upc.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent"
    ],
    "description": "# mil: multiple instance learning library for Python\n\nWhen working on a research problem, I found myself with the [multiple instance learning (MIL)](https://en.wikipedia.org/wiki/Multiple_instance_learning) framework, which I found quite interesting and unique. After carefully reviewing the literature, I decided to try few of the algorithms on the problem I was working on, but for my surprise, there was no standard, easy, and updated MIL library for any programming language. So... here we are. <br/>\nThe mil library tries to achieve reproducible and productive research using the MIL framework.\n\n---\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Features](#features)\n- [Usage](#usage)\n- [Contributing](#contributing)\n- [To-do-list](#to-do-list)\n- [License](#license)\n\n---\n\n### Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install mil.\n\n```bash\npip install mil\n```\n\n---\n\n### Features\n\nThe overall implementation tries to be user-friendly as possible. That's why most of it constructed on top of [sklearn](https://scikit-learn.org/) and [tensorflow.keras](tensorflow.org/api_docs/python/tf/keras).\n\n- [mil.data](#data)\n- [mil.bag_representation](#bag_representation)\n- [mil.dimensionality_reduction](#dimensionality_reduction)\n- [mil.metrics](#metrics)\n- [mil.models](#models)\n- [mil.preprocessing](#preprocessing)\n- [mil.utils](#utils)\n- [mil.validators](#validators)\n- [mil.trainer](#trainer)\n\n#### data\nVery well known datasets of the multiple instance learning framework have been added to the library. For each of the datasets a train and test split \nhas been done for reproducibility purposes. The API is similar to the tensorflow datasets in order to create and experiment in a fast and easy way.\n\n```python\n# importing all the datasets modules\nfrom mil.data.datasets import musk1, musk2, protein, elephant, corel_dogs, \\\n                              ucsb_breast_cancer, web_recommendation_1, birds_brown_creeper, \\\n                              mnist_bags\n# load the musk1 dataset\n(bags_train, y_train), (bags_test, y_test) = musk1.load()\n```\nAlso, the mnist_bags dataset has been created. The principal reason of creating this dataset is to have a good benchmark to evaluate the instances predictions. Or more specifically, if we can classify correctly a bag, can we detect which instance/s caused this classification? \nIn the mnist_bags dataset, there are 3 different types of problems with their own dataset.\n\n1) The bag 'b' is positive if the instance '7' is contained in 'b' <br/>\n```python\n# importing all the datasets modules\nfrom mil.data.datasets import mnist_bags\n\n# load the mnist_bags\n(bags_train, y_train), (bags_test, y_test) = mnist_bags.load()\n```\n2) The bag 'b' is positive if the instance '2' and '3' are contained in 'b'  <br/>\n```python\n# importing all the datasets modules\nfrom mil.data.datasets import mnist_bags\n\n# load the mnist_bags 2 and 3\n(bags_train, y_train), (bags_test, y_test) = mnist_bags.load_2_and_3()\n```\n3) The bag 'b' is positive if the instance '4' and '2' are located in consecutive instances in 'b'  <br/>\n```python\n# importing all the datasets modules\nfrom mil.data.datasets import mnist_bags\n\n# load the mnist_bags 4 2\n(bags_train, y_train), (bags_test, y_test) = mnist_bags.load_42()\n```\n\n#### bag_representation\nIn multiple instance learning, bag representation is the technique that consists in obtaining a unique vector representing all the bag.\nThe classes implemented in the mil.bag_representation inherit from BagRepresentation base class which is a wrapper to sklearn transformer which have to implement fit and transform method.\n\n- MILESMapping\n- DiscriminativeMapping\n- ArithmeticMeanBagRepresentation\n- MedianBagRepresentation\n- GeometricMeanBagRepresentation\n- MinBagRepresentation\n- MaxBagRepresentation\n- MeanMinMaxBagRepresentation\n\n```python\nfrom mil.bag_representation import MILESMapping, DiscriminativeMapping, ArithmeticMeanBagRepresentation, \\\n                                   MedianBagRepresentation, GeometricMeanBagRepresentation, MinBagRepresentation, \\\n                                   MaxBagRepresentation, MeanMinMaxBagRepresentation\n```\n\n---\n\n#### dimensionality_reduction\nA wrapper to sklearn.decomposition and sklearn.feature_selection.\n\n```python\n# for example import sklearn PCA\nfrom mil.dimensionality_reduction import PCA\n```\n\n#### metrics\nIncludes a manager to handle all the metrics, some custom metric and a wrapper of tensorflow.keras.metrics. Custom metrics have to inherit from Metrics base class and implement methods update_state, result, and reset_states.\n\n```python\n# importing a custom metric\nfrom mil.metrics import Specificity\n\n# importing a keras metric\nfrom mil.metrics import AUC\n```\n\n#### models\nIt contains all the end-to-end models. All the models implement a sklearn-like structure with fit, predict, and sometimes get_positive_instances when the method allows it.\n- MILES\n- APR\n- AttentionDeepPoolingMil\n\n```python\n# importing mil models\nfrom mil.models import APR, AttentionDeepPoolingMil, MILES\n\n# importing sklearn models\nfrom mil.models import RandomForestClassifier, SVC\n```\nIt is also a wrapper to sklearn.svm, sklearn.ensemble, sklearn.linear_model, and sklearn.neighbors.\n\n#### preprocessing\nIt contains few transformers to normalize and standarize bags of type list, and is also a wrapper to sklearn.preprocessing.\n\n```python\n# standarize bags of lists\nfrom mil.preprocessing import StandarizerBagsList\n```\n\n#### utils\nIt contains few utility functions, such as bags2instances, padding, progress bar ...\n\n```python\n# for example importing bags2instances function\nfrom mil.utils.utils import bags2instances\n```\n\n#### validators\nA wrapper to sklearn.model_selection. Includes all the validation strategies to be used in the training process.\n\n```python\n# for example importing sklearn KFold\nfrom mil.validators import KFold\n\nvalid = KFold(n_splits=10, shuffle=True)\n```\n\n#### trainer\nIt is the central part of the library, it allows to train, and evaluate models in a very simple and intuitive way.\nIt has 4 principal methods.\n\n1) prepare(model, preprocess_pipeline=[], metrics=[]). <br/>\nWhich is kind of what 'compile' method is for keras models. What it does is preparing the training and evaluation routine.\nThe 'model' parameter accepts any of the mil.models objects. The 'preprocess_pipeline' parameter is a list containing all the transforming operations we wish to do before inputing the data into the 'model' object, basically accepts any sklearn transformer. The 'metrics' accepts some strings of typical metrics, or the callables modules from the metrics.<br/>\n\n2) fit(X_train, y_train, X_val=None, y_val=None, groups=None, validation_strategy=None, sample_weights=None, verbose=1) <br/>\nWhich is the method to train the model. It also handles a sample_weights parameters and mil.validators objects or custom validations splits. <br/>\n\n3) predict(X_train, y_train, X_val=None, y_val=None, groups=None, validation_strategy=None, sample_weights=None, verbose=1) <br/>\nWhich is the method to train the model. It also handles a sample_weights parameters and mil.validators objects or custom validations splits. <br/>\n\n4) get_positive_instances(X) <br/>\nFor the models who have implemented this method, it returns the result. <br/>\n\n---\n\n### Usage\n\n```python\n# importing dataset\nfrom mil.data.datasets import musk1\n# importing bag_representation\nfrom mil.bag_representation import MILESMapping\n# importing validation strategy\nfrom mil.validators import LeaveOneOut\n# importing final model, which in this case is the SVC classifier from sklearn\nfrom mil.models import SVC\n# importing trainer\nfrom mil.trainer import Trainer\n# importing preprocessing \nfrom mil.preprocessing import StandarizerBagsList\n# importing metrics, which in this case are from tf keras metrics\nfrom mil.metrics import AUC\n\n# loading dataset\n(bags_train, y_train), (bags_test, y_test) = musk1.load()\n\n# instantiate trainer\ntrainer = Trainer()\n\n# preparing trainer\nmetrics = ['acc', AUC]\nmodel = SVC(kernel='linear', C=1, class_weight='balanced')\npipeline = [('scale', StandarizerBagsList()), ('disc_mapping', MILESMapping())]\ntrainer.prepare(model, preprocess_pipeline=pipeline ,metrics=metrics)\n\n# fitting trainer\nvalid = LeaveOneOut()\nhistory = trainer.fit(bags_train, y_train, sample_weights='balanced', validation_strategy=valid, verbose=1)\n\n# printing validation results for each fold\nprint(history['metrics_val'])\n\n# predicting metrics for the test set\ntrainer.predict_metrics(bags_test, y_test)\n\n```\n\nFor more examples, check examples subdirectory.\n\n---\n\n### Contributing\nPull requests are welcome. Priority things are on [To-do-list](#to-do-list). For major changes, please open an issue first to discuss what you would like to change.\nPlease make sure to update tests as appropriate.\n\n---\n\n### To-do-list\nPending tasks to do:\n- [ ] Implement other algorithms, such as the SVM based ones.\n- [ ] Make C/C++ extension of the APR algorithm to run faster.\n- [ ] Make C/C++ extension of the MILESMapping algorithm to run faster.\n- [ ] MILESMapping generates a simetric matrix of bag instance similarity, optimize it to only calculate half matrix and apply other possible optimizations to reduce time and space complexity.\n- [ ] Implement get_positive_instances for MILES model.\n- [ ] Implement Tuner class for hyperparameter tuning.\n- [ ] Implement Callbacks for using on Trainer.\n- [ ] Add one cycle learning rate to use on optimizers of KerasClassifiers models.\n- [ ] On trainer, implement to get the best validation loss for calculating the metrics, right now when evaluating a KerasClassifier model, the metrics are the ones from the last epoch.\n\n### License\n[![License](http://img.shields.io/:license-mit-blue.svg?style=flat-square)](http://badges.mit-license.org)\n- **[MIT license](http://opensource.org/licenses/mit-license.php)**",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rosasalberto/mil",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mil",
    "package_url": "https://pypi.org/project/mil/",
    "platform": "",
    "project_url": "https://pypi.org/project/mil/",
    "project_urls": {
      "Homepage": "https://github.com/rosasalberto/mil"
    },
    "release_url": "https://pypi.org/project/mil/1.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Multiple instance learning package for Python",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8289025,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e79104a4d38e3a99960c05a442407e7192ec3d5afacd217cf49ac36659bb185",
          "md5": "edb261a846abf8f5ae9435743b9afe2a",
          "sha256": "3c5429ca2475b9baf6a087665d7a7c4f23c1ffa9cf2a9aa824261fa3cf1e089d"
        },
        "downloads": -1,
        "filename": "mil-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edb261a846abf8f5ae9435743b9afe2a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13700667,
        "upload_time": "2020-09-19T09:41:51",
        "upload_time_iso_8601": "2020-09-19T09:41:51.480951Z",
        "url": "https://files.pythonhosted.org/packages/8e/79/104a4d38e3a99960c05a442407e7192ec3d5afacd217cf49ac36659bb185/mil-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c9b7a431844dbd01b53a73f1ece93675d09607f9317be704d145018eb79e795",
          "md5": "5384229e61627c8e4ed2be78ecb647eb",
          "sha256": "666fd3a9665fab3b3a03e0272b20339e550a0ed7130f39fbdedbcd7c3611decf"
        },
        "downloads": -1,
        "filename": "mil-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5384229e61627c8e4ed2be78ecb647eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13438350,
        "upload_time": "2020-09-19T09:41:57",
        "upload_time_iso_8601": "2020-09-19T09:41:57.982766Z",
        "url": "https://files.pythonhosted.org/packages/0c/9b/7a431844dbd01b53a73f1ece93675d09607f9317be704d145018eb79e795/mil-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c760f35580b8bda6e4b58be713406911d173b4a2c02dd3befd91b5451c3b13c4",
          "md5": "148f0fd096357d27c0871981e1254048",
          "sha256": "f98256d6d9faf7c468927a07b4384dcbd0ff92d93d7182103048b482576d1637"
        },
        "downloads": -1,
        "filename": "mil-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "148f0fd096357d27c0871981e1254048",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13701503,
        "upload_time": "2020-09-19T09:52:05",
        "upload_time_iso_8601": "2020-09-19T09:52:05.054772Z",
        "url": "https://files.pythonhosted.org/packages/c7/60/f35580b8bda6e4b58be713406911d173b4a2c02dd3befd91b5451c3b13c4/mil-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb320d852f65f253edd18ed543c186faf05f6c9caa66ed4bd441fce775aa1c80",
          "md5": "5500f50dd7d75c9a16db4e08d7101bf2",
          "sha256": "1f62d1062fd747bd638fad3eef5818f68defd740020bcc9a193adb08bb90c161"
        },
        "downloads": -1,
        "filename": "mil-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5500f50dd7d75c9a16db4e08d7101bf2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13438646,
        "upload_time": "2020-09-19T09:52:08",
        "upload_time_iso_8601": "2020-09-19T09:52:08.443854Z",
        "url": "https://files.pythonhosted.org/packages/fb/32/0d852f65f253edd18ed543c186faf05f6c9caa66ed4bd441fce775aa1c80/mil-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b51594ed596b7b5bcbe7f5b875d0abb70415287a2ba194986fc2096b0d96cf26",
          "md5": "eac9453e886d4c2cf3502b7ad123e782",
          "sha256": "fff5a495eef7a12e3803f8f1413db26f86eb6ef50256cd3ba229ef3652bab99a"
        },
        "downloads": -1,
        "filename": "mil-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eac9453e886d4c2cf3502b7ad123e782",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13702926,
        "upload_time": "2020-09-19T09:56:20",
        "upload_time_iso_8601": "2020-09-19T09:56:20.105770Z",
        "url": "https://files.pythonhosted.org/packages/b5/15/94ed596b7b5bcbe7f5b875d0abb70415287a2ba194986fc2096b0d96cf26/mil-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d216665f4c2589c23b3c7b81abe2b1d2aa33389adfea3b0c690712a288938222",
          "md5": "7362570ce6c5c23589728091e1b161ae",
          "sha256": "febd7a5e318ceefd5a6623cdba3ee15163daa41dc440a9208a8235d3ede34e90"
        },
        "downloads": -1,
        "filename": "mil-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7362570ce6c5c23589728091e1b161ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13439320,
        "upload_time": "2020-09-19T09:56:23",
        "upload_time_iso_8601": "2020-09-19T09:56:23.429830Z",
        "url": "https://files.pythonhosted.org/packages/d2/16/665f4c2589c23b3c7b81abe2b1d2aa33389adfea3b0c690712a288938222/mil-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f4942a14f226aa76117549a45b4eab2471e4977d7b45a47063f84325dfc019a",
          "md5": "e84844fd3e9a67f322ac26b6743aec3d",
          "sha256": "1c76588119b874e90663c91d33951ca8c628279c2c76360b2fb4287957cd94c5"
        },
        "downloads": -1,
        "filename": "mil-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e84844fd3e9a67f322ac26b6743aec3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13702922,
        "upload_time": "2020-09-19T10:13:47",
        "upload_time_iso_8601": "2020-09-19T10:13:47.220013Z",
        "url": "https://files.pythonhosted.org/packages/1f/49/42a14f226aa76117549a45b4eab2471e4977d7b45a47063f84325dfc019a/mil-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bba97b4ece659dd1ba0ae59a35935224c3587bcaaa69c1e76070d3b64e6259a",
          "md5": "2e833330e5dd3a0f5ada13ad4f82111c",
          "sha256": "9ea25ad91ba91ec88568b91691a8eda2740f51e6ce3e260328a32c871bf1af78"
        },
        "downloads": -1,
        "filename": "mil-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2e833330e5dd3a0f5ada13ad4f82111c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13439314,
        "upload_time": "2020-09-19T10:16:32",
        "upload_time_iso_8601": "2020-09-19T10:16:32.392798Z",
        "url": "https://files.pythonhosted.org/packages/4b/ba/97b4ece659dd1ba0ae59a35935224c3587bcaaa69c1e76070d3b64e6259a/mil-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "589278bfed1584e7e5ef3c97eb033b0a48a4e943b7199383aee95ce86e8dccbc",
          "md5": "0c527fea6f1ad355ca2b79e8735e3413",
          "sha256": "69657d7bba0a1239f11296f6ae330e643b0d0780edeffd0c858f475201e9d663"
        },
        "downloads": -1,
        "filename": "mil-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c527fea6f1ad355ca2b79e8735e3413",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9757828,
        "upload_time": "2020-09-19T12:35:39",
        "upload_time_iso_8601": "2020-09-19T12:35:39.242948Z",
        "url": "https://files.pythonhosted.org/packages/58/92/78bfed1584e7e5ef3c97eb033b0a48a4e943b7199383aee95ce86e8dccbc/mil-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "600e7363c4ed18132d1f0e907c1605a50fc1497621dcd6b43e9e8efee89ff4ef",
          "md5": "9c3d33fca97497b7626e60319fb5ffbb",
          "sha256": "f1bd3456559329aa6664d56813f5fd9c77bedc03c1b2665cb046652f731cc729"
        },
        "downloads": -1,
        "filename": "mil-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9c3d33fca97497b7626e60319fb5ffbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9624978,
        "upload_time": "2020-09-19T12:35:42",
        "upload_time_iso_8601": "2020-09-19T12:35:42.153840Z",
        "url": "https://files.pythonhosted.org/packages/60/0e/7363c4ed18132d1f0e907c1605a50fc1497621dcd6b43e9e8efee89ff4ef/mil-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2aec0964169b5ab9679ee0320e6951f6b4f73aaa855a6a5b12ff33dd6ac89fd1",
          "md5": "0886e3f8137f8070bd484a1a6db04959",
          "sha256": "1211b051c2ba50671e711717ba224a131c9586c079da2b191d719d5e28692713"
        },
        "downloads": -1,
        "filename": "mil-1.0.5-py3.7.egg",
        "has_sig": false,
        "md5_digest": "0886e3f8137f8070bd484a1a6db04959",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 9811727,
        "upload_time": "2020-09-28T12:12:43",
        "upload_time_iso_8601": "2020-09-28T12:12:43.659899Z",
        "url": "https://files.pythonhosted.org/packages/2a/ec/0964169b5ab9679ee0320e6951f6b4f73aaa855a6a5b12ff33dd6ac89fd1/mil-1.0.5-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "782d91a621d877ffbc0224aebd834330860261c7cddf23100eafcf9a9539f3a1",
          "md5": "016917bf3b57a592570099da80f4fc3d",
          "sha256": "6fa58ea7133a90455810a467a87916ebbcbbd886879c6476df6d0e7ea926031f"
        },
        "downloads": -1,
        "filename": "mil-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "016917bf3b57a592570099da80f4fc3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9757846,
        "upload_time": "2020-09-28T12:26:35",
        "upload_time_iso_8601": "2020-09-28T12:26:35.082308Z",
        "url": "https://files.pythonhosted.org/packages/78/2d/91a621d877ffbc0224aebd834330860261c7cddf23100eafcf9a9539f3a1/mil-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbc014020ba96b0c991ae7d7368a0c9176769ebafc74bd46a42221bf2ca34a0a",
          "md5": "415881c32504ebf1446d52729505f779",
          "sha256": "bd3e577de56bbde44da7137b98a7d536fcad1b6926be6d0fda5a9ce362dc564d"
        },
        "downloads": -1,
        "filename": "mil-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "415881c32504ebf1446d52729505f779",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9624999,
        "upload_time": "2020-09-28T12:26:38",
        "upload_time_iso_8601": "2020-09-28T12:26:38.082780Z",
        "url": "https://files.pythonhosted.org/packages/db/c0/14020ba96b0c991ae7d7368a0c9176769ebafc74bd46a42221bf2ca34a0a/mil-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2aec0964169b5ab9679ee0320e6951f6b4f73aaa855a6a5b12ff33dd6ac89fd1",
        "md5": "0886e3f8137f8070bd484a1a6db04959",
        "sha256": "1211b051c2ba50671e711717ba224a131c9586c079da2b191d719d5e28692713"
      },
      "downloads": -1,
      "filename": "mil-1.0.5-py3.7.egg",
      "has_sig": false,
      "md5_digest": "0886e3f8137f8070bd484a1a6db04959",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": null,
      "size": 9811727,
      "upload_time": "2020-09-28T12:12:43",
      "upload_time_iso_8601": "2020-09-28T12:12:43.659899Z",
      "url": "https://files.pythonhosted.org/packages/2a/ec/0964169b5ab9679ee0320e6951f6b4f73aaa855a6a5b12ff33dd6ac89fd1/mil-1.0.5-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "782d91a621d877ffbc0224aebd834330860261c7cddf23100eafcf9a9539f3a1",
        "md5": "016917bf3b57a592570099da80f4fc3d",
        "sha256": "6fa58ea7133a90455810a467a87916ebbcbbd886879c6476df6d0e7ea926031f"
      },
      "downloads": -1,
      "filename": "mil-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "016917bf3b57a592570099da80f4fc3d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9757846,
      "upload_time": "2020-09-28T12:26:35",
      "upload_time_iso_8601": "2020-09-28T12:26:35.082308Z",
      "url": "https://files.pythonhosted.org/packages/78/2d/91a621d877ffbc0224aebd834330860261c7cddf23100eafcf9a9539f3a1/mil-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dbc014020ba96b0c991ae7d7368a0c9176769ebafc74bd46a42221bf2ca34a0a",
        "md5": "415881c32504ebf1446d52729505f779",
        "sha256": "bd3e577de56bbde44da7137b98a7d536fcad1b6926be6d0fda5a9ce362dc564d"
      },
      "downloads": -1,
      "filename": "mil-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "415881c32504ebf1446d52729505f779",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9624999,
      "upload_time": "2020-09-28T12:26:38",
      "upload_time_iso_8601": "2020-09-28T12:26:38.082780Z",
      "url": "https://files.pythonhosted.org/packages/db/c0/14020ba96b0c991ae7d7368a0c9176769ebafc74bd46a42221bf2ca34a0a/mil-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}