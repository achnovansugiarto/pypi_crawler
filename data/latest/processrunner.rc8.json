{
  "info": {
    "author": "Andy Robb",
    "author_email": "andy@andyrobb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": ".. _Documentation: https://processrunner.readthedocs.io/en/latest/\n.. _Convenience Functions: https://processrunner.readthedocs.io/en/latest/convenience.html\n\nPython ProcessRunner\n====================\n\n.. image:: https://badge.fury.io/py/processrunner.svg\n   :target: https://pypi.org/project/processrunner\n   :alt: Pypi Version\n.. image:: https://readthedocs.org/projects/processrunner/badge/?version=latest\n   :target: https://processrunner.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\nDesigned to make reading from external processes easier. While targeted for\nuse cases like processing log output, it also allows multiple writers to\nsend text to the stdin of external processes.\n\nOutput can be sent to multiple locations. E.g. the stdout and stderr of an\nexternal process can be written to one or multiple files, AND also to the\npipes of the local process.\n\nSeveral convenience functions simplify common use cases. All the classes and\nfunctions take the command to execute in the subprocess.Popen/.call format,\na list of strings starting with the command name, followed by any arguments\nfor that command.\n\nSee the full `documentation`_ for complete details.\n\n\nChain commands together\n=======================\nConnect the stdout of one command to the stdin of another. Just use the \"or\"\nfunction, similar to how this is done in a shell.\n\nThis is not all purpose. Commands often do not end when you expect them to,\nand require use of watchers to stop them independently. (collectLines, for\ninstance, will hang.)\n\nSee the tests directory \"processrunner_chaining_test.py\" for examples.\n\n\nProvided classes\n================\nProcessRunner\n  The ProcessRunner class uses subprocess.Popen. It does not use the\n  ``shell=True`` flag. All instances of the class are saved in\n  ``PROCESSRUNNER_PROCESSES``. A list of currently active processes started\n  by the class can be retrieved by calling ``getActiveProcesses()``, which\n  IS NOT a class member.\n\n  *Properties*\n    - Non-blocking: Returns immediately; the external process is managed in a new thread\n    - Output can be read by iterating over ``ProcessRunner.[stdout|stderr|output]``\n    - Supports ``with`` context manager syntax\n\n\nConvenience functions\n==============================\nA number of convenience functions are available to quickly run a command\nwith common options, run a command via SSH, and other activities. These are\nreferenced on the Convenience Functions documentation page: `Convenience\nFunctions`_.\n\nExamples\n==============\nA larger set of examples is available on the Examples page in the\ndocumentation.\n\nSimple\n------\nUse SCP to copy a local file to a remote host, using SSH key-based authentication.\n\n::\n\n  # Run a command, wait for it to complete, and gather its return code\n  command = [\"scp\", \"-o\", \"BatchMode=yes\", \"-o\", \"StrictHostKeyChecking=no\", \"/path/to/local/file\", clientAddress+\":/tmp/\"]\n  result = ProcessRunner(command).wait().poll()\n\nComplex\n-------\nWhile an external command runs, write the external process' ``stdout`` and\n``stderr`` to the corresponding local pipes, as well as corresponding files.\nFurther, prefix the local pipe output with dedicated notes, and prefix the\nfile output with timestamps.\n\n::\n\n    # Imports\n    import os\n    import sys\n    from datetime import datetime\n    from processrunner import ProcessRunner, WriteOut\n\n    if __name__ == \"__main__\":\n        # Logging files\n        working_dir = os.path.dirname(os.path.realpath(__file__))\n        stdoutFile = open(working_dir+'/stdout.txt', 'a')\n        stderrFile = open(working_dir+'/stderr.txt', 'a')\n\n        # Date/time notation for output lines in files\n        class DateNote:\n            def init(self):\n                pass\n            def __repr__(self):\n                return datetime.now().isoformat() + \" \"\n\n        # Prep the process\n        # Script available in the ProcessRunner source:\n        # https://github.com/arobb/python-processrunner/blob/main/tests/test-output-script.py\n        command = [\"tests/test-output-script.py\",\n                   \"--lines\", \"5\",\n                   \"--out-pipe\", \"both\"]\n        proc = ProcessRunner(command, autostart=False)\n\n        # Attach output mechanisms to the process's output pipes. These are\n        # handled asynchronously, so you can see the output while it is happening\n        # Write to the console's stdout and stderr, with custom prefixes for each\n        proc.mapLines(WriteOut(pipe=sys.stdout,\n                               outputPrefix=\"validation-stdout> \"),\n                      procPipeName=\"stdout\")\n        proc.mapLines(WriteOut(pipe=sys.stderr,\n                               outputPrefix=\"validation-stderr> \"),\n                      procPipeName=\"stderr\")\n\n        # Write to the log files, prepending each line with a date/time stamp\n        proc.mapLines(WriteOut(pipe=stdoutFile, outputPrefix=DateNote()),\n                      procPipeName=\"stdout\")\n        proc.mapLines(WriteOut(pipe=stderrFile, outputPrefix=DateNote()),\n                      procPipeName=\"stderr\")\n\n        # Start the process, then block regular execution until the\n        # process finishes\n        proc.start().wait()\n\n        stdoutFile.close()\n        stderrFile.close()",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arobb/python-processrunner",
    "keywords": "external process execution",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "processrunner",
    "package_url": "https://pypi.org/project/processrunner/",
    "platform": "",
    "project_url": "https://pypi.org/project/processrunner/",
    "project_urls": {
      "Homepage": "https://github.com/arobb/python-processrunner"
    },
    "release_url": "https://pypi.org/project/processrunner/2.6.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Easily trigger and manage output from external processes.",
    "version": "2.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11520723,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "782c0c62be311744ec439dbaabfad5a092a697f534e9936c4022de8f20a3a84c",
          "md5": "8b738786e0bd77ca54633dd14a9eda75",
          "sha256": "29543856f05958cd44267f479134b44295bfdc00293bf73121cbc4bca437594d"
        },
        "downloads": -1,
        "filename": "processrunner-1.0.3.tar.gz",
        "has_sig": true,
        "md5_digest": "8b738786e0bd77ca54633dd14a9eda75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10170,
        "upload_time": "2017-05-12T19:06:49",
        "upload_time_iso_8601": "2017-05-12T19:06:49.583134Z",
        "url": "https://files.pythonhosted.org/packages/78/2c/0c62be311744ec439dbaabfad5a092a697f534e9936c4022de8f20a3a84c/processrunner-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e20792fd10ef883af797333663cb20673be6ec50fe2e919a9ae007c27b65fce3",
          "md5": "cc6b646256d2de0e81a6c62002f87dff",
          "sha256": "811c429a3d342f48ef38700ff0ecc9bc6be0606eddad9ceda8afe229d5323bb3"
        },
        "downloads": -1,
        "filename": "processrunner-2.0.0.tar.gz",
        "has_sig": true,
        "md5_digest": "cc6b646256d2de0e81a6c62002f87dff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14570,
        "upload_time": "2017-10-02T03:39:03",
        "upload_time_iso_8601": "2017-10-02T03:39:03.660794Z",
        "url": "https://files.pythonhosted.org/packages/e2/07/92fd10ef883af797333663cb20673be6ec50fe2e919a9ae007c27b65fce3/processrunner-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0855e239121bbba33404923d06f227b514bbceab7c473c235498f56bad24b029",
          "md5": "cf62f864ff7ec5e6c83b465d5c978f02",
          "sha256": "aaa2be212eb930eae90c49c7b4ff13fae2ee3dd550df3027a575ccb9c78bc017"
        },
        "downloads": -1,
        "filename": "processrunner-2.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "cf62f864ff7ec5e6c83b465d5c978f02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16344,
        "upload_time": "2018-03-27T03:14:32",
        "upload_time_iso_8601": "2018-03-27T03:14:32.434373Z",
        "url": "https://files.pythonhosted.org/packages/08/55/e239121bbba33404923d06f227b514bbceab7c473c235498f56bad24b029/processrunner-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f1c84415400a5efd303d59c9220ccb7a963a540a2fe04f1e6d21b86cca0a096",
          "md5": "ff1025abcd06081d7aa537c9faa0f525",
          "sha256": "ab13737c1a93edb18e6ebe416b204bbc897a083a65201be8f54e74e8c0b73793"
        },
        "downloads": -1,
        "filename": "processrunner-2.3.0.tar.gz",
        "has_sig": true,
        "md5_digest": "ff1025abcd06081d7aa537c9faa0f525",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17056,
        "upload_time": "2020-12-27T00:10:05",
        "upload_time_iso_8601": "2020-12-27T00:10:05.287630Z",
        "url": "https://files.pythonhosted.org/packages/2f/1c/84415400a5efd303d59c9220ccb7a963a540a2fe04f1e6d21b86cca0a096/processrunner-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c124a4d95f7756fb138a2328d6f5ce8642ff73721ba218c6a516b7e3f70662f4",
          "md5": "8e31f5740cef4f5cfcba930d0e2cec4f",
          "sha256": "bb238bd89eed20289d0e81dca295112410253dd129bbb17f8971c92a8296b8b0"
        },
        "downloads": -1,
        "filename": "processrunner-2.4.0.tar.gz",
        "has_sig": true,
        "md5_digest": "8e31f5740cef4f5cfcba930d0e2cec4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21582,
        "upload_time": "2021-01-02T05:34:00",
        "upload_time_iso_8601": "2021-01-02T05:34:00.267656Z",
        "url": "https://files.pythonhosted.org/packages/c1/24/a4d95f7756fb138a2328d6f5ce8642ff73721ba218c6a516b7e3f70662f4/processrunner-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8552c2cae79805509208d653a8dfc5f26d5789bbf46a7afe550356de520cfde2",
          "md5": "e92c67f0ba0e2222051c998e7689f503",
          "sha256": "87bb8192819afded76a0df2f744552f9e5fedc7b1120f3853daf811983f923e7"
        },
        "downloads": -1,
        "filename": "processrunner-2.5.1.tar.gz",
        "has_sig": true,
        "md5_digest": "e92c67f0ba0e2222051c998e7689f503",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34744,
        "upload_time": "2021-07-12T16:40:00",
        "upload_time_iso_8601": "2021-07-12T16:40:00.475843Z",
        "url": "https://files.pythonhosted.org/packages/85/52/c2cae79805509208d653a8dfc5f26d5789bbf46a7afe550356de520cfde2/processrunner-2.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1c68228891e2073f4afc0bcc71f74242b980c647dc6a647db9884e11ffc4776",
          "md5": "626c92495fb98714f4d9c2d4f63eedfe",
          "sha256": "eedb02d5b159cdcdd0229311bb22436e6dc55afa6f88cc7b3249707d40638a54"
        },
        "downloads": -1,
        "filename": "processrunner-2.5.2.tar.gz",
        "has_sig": true,
        "md5_digest": "626c92495fb98714f4d9c2d4f63eedfe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36544,
        "upload_time": "2021-07-19T02:21:12",
        "upload_time_iso_8601": "2021-07-19T02:21:12.369047Z",
        "url": "https://files.pythonhosted.org/packages/e1/c6/8228891e2073f4afc0bcc71f74242b980c647dc6a647db9884e11ffc4776/processrunner-2.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "105bbef4b0fd200161038c9b1ec395db2444ee05a0f7b2c34d225053c866c0dc",
          "md5": "fd33fe029671733510498866ab32a505",
          "sha256": "4d598012ccd9c60e0e652b12de56f43154b838f01a97d4c81233fe6c06ba86f8"
        },
        "downloads": -1,
        "filename": "processrunner-2.6.0.tar.gz",
        "has_sig": true,
        "md5_digest": "fd33fe029671733510498866ab32a505",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50283,
        "upload_time": "2021-09-22T18:36:26",
        "upload_time_iso_8601": "2021-09-22T18:36:26.442902Z",
        "url": "https://files.pythonhosted.org/packages/10/5b/bef4b0fd200161038c9b1ec395db2444ee05a0f7b2c34d225053c866c0dc/processrunner-2.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "105bbef4b0fd200161038c9b1ec395db2444ee05a0f7b2c34d225053c866c0dc",
        "md5": "fd33fe029671733510498866ab32a505",
        "sha256": "4d598012ccd9c60e0e652b12de56f43154b838f01a97d4c81233fe6c06ba86f8"
      },
      "downloads": -1,
      "filename": "processrunner-2.6.0.tar.gz",
      "has_sig": true,
      "md5_digest": "fd33fe029671733510498866ab32a505",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 50283,
      "upload_time": "2021-09-22T18:36:26",
      "upload_time_iso_8601": "2021-09-22T18:36:26.442902Z",
      "url": "https://files.pythonhosted.org/packages/10/5b/bef4b0fd200161038c9b1ec395db2444ee05a0f7b2c34d225053c866c0dc/processrunner-2.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}