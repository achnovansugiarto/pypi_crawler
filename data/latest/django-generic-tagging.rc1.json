{
  "info": {
    "author": "giginet",
    "author_email": "giginet.net@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "django-generic-tagging\n=========================\n\n.. image:: https://travis-ci.org/giginet/django-generic-tagging.svg?branch=master\n    :target: https://travis-ci.org/giginet/django-generic-tagging\n\n.. image:: https://coveralls.io/repos/github/giginet/django-generic-tagging/badge.svg?branch=master\n    :target: https://coveralls.io/github/giginet/django-generic-tagging?branch=master\n\nAuthor\n    giginet <giginet.net@gmail.com>\nSupported python versions\n    3.3, 3.4, 3.5\nSupported django versions\n    Django 1.7 - 1.9\n\nA generic tagging library which enables to attach tags for every objects.\n\nSample Application\n--------------------------\n\nhttps://django-generic-tagging.herokuapp.com/\n\nInstallation\n------------\nUse pip_ like::\n\n    $ pip install django-generic-tagging\n\n.. _pip:  https://pypi.python.org/pypi/pip\n\nRequirements\n---------------------\n\n- djangorestframework_\n- jQuery 1.x / 2.x\n\n.. _djangorestframework: http://www.django-rest-framework.org/\n\nUsage\n--------------\n\nYou should refer the example application for detail.\n\nConfiguration\n~~~~~~~~~~~~~~~~~\n\n1. Put ``generic_tagging`` into your ``INSTALLED_APPS`` at settings module\n\n    .. code:: python\n\n          INSTALLED_APPS = (\n             ...\n             'generic_tagging',\n          )\n\n2. Add URL patterns into your `urls.py`\n\n    .. code:: python\n\n           from django.conf.urls import include, url\n           from django.contrib import admin\n\n           from generic_tagging.api.routers import TaggingAPIRouter\n\n           tagging_router = TaggingAPIRouter(trailing_slash=True)\n\n           urlpatterns = [\n               ...\n               url(r'^tags/', include('generic_tagging.urls')),\n               url(r'^api/', include(tagging_router.urls)),\n           ]\n\n3. Create ``generic_tagging`` database tables by running::\n\n      $ python manage.py migrate\n\n\nHow to add tagging feature to your model\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAll you have to do is embed the two template tags into your models' templates.\n\n1. Add ``{% load tagging %}`` to load tagging module\n\n2. Place ``{% render_generic_tagging_head_tag %}`` into ``<HEAD>`` tag\n\n3. Place ``{% render_generic_tagging_component_tag_for object %}`` to where you like.\n\n    .. code:: html\n\n           {% load tagging %}\n           <!DOCTYPE html>\n           <html lang=\"en\">\n           <head>\n               <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js\"></script>\n               {% render_generic_tagging_head_tag %}\n               ...\n           </head>\n           <body>\n               <h1>{{ object.title }}</h1>\n               {% render_generic_tagging_component_tag_for object %}\n           </body>\n           </html>\n\nViews\n-----------------\n\n.. table:: This library has two default views.\n\n   ===========   ==========================================    ============================\n   Description   Template path                                 Reversed URL name\n   ===========   ==========================================    ============================\n   Tag list      /templates/generic_tagging/tag_list.html      generic_tagging_tag_list\n   Tag detail    /templates/generic_tagging/tag_detail.html    generic_tagging_tag_detail\n   ===========   ==========================================    ============================\n\n\nTag list\n~~~~~~~~~~~~~\n\nThis view displays all tags.\n\n``templates/generic_tagging/tag_list.html`` should be used as the template.\n\n    .. code:: html\n\n            <h1>All available tags</h1>\n            <ul>\n                {% for tag in object_list %}\n                    <li><a href=\"{{ tag.get_absolute_url %}\">{{ tag.label }}</a></li>\n                {% endfor %}\n            </ul>\n\n\nTag detail\n~~~~~~~~~~~~~~\n\nEach tags have permalinks to display all related objects.\n\n``templates/generic_tagging/tag_detail.html`` should be used as the template.\n\n    .. code:: html\n\n            <h1>All contents relative with {{ object.label }}</h1>\n            <ul>\n                {% for item in object.items.all %}\n                    <li><a href=\"{{ item.content_object.get_absolute_url %}\">{{ item.content_object }}</a></li>\n                {% endfor %}\n            </ul>\n\n\n\n\nAPI\n------------------\n\n``django-generic-tagging`` has REST-ful APIs.\n\n.. table:: List of API endpoints.\n\n    =========================  ========== ======================\n    Endpoint                   Method     Reversed URL name\n    =========================  ========== ======================\n    /tag/                      GET        ``tag-list``\n    /tagged_item/              GET        ``tagged_item-list``\n    /tagged_item/<pk>/         GET        ``tagged_item-detail``\n    /tagged_item/              CREATE     ``tagged_item-list``\n    /tagged_item/<pk>/         DELETE     ``tagged_item-detail``\n    /tagged_item/<pk>/lock/    PATCH      ``tagged_item-lock``\n    /tagged_item/<pk>/unlock/  PATCH      ``tagged_item-unlock``\n    =========================  ========== ======================\n\nLicense\n------------------------\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 giginet\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/giginet/django-generic-tagging/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/giginet/django-generic-tagging",
    "keywords": "django tagging tag",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-generic-tagging",
    "package_url": "https://pypi.org/project/django-generic-tagging/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-generic-tagging/",
    "project_urls": {
      "Download": "https://github.com/giginet/django-generic-tagging/tarball/master",
      "Homepage": "https://github.com/giginet/django-generic-tagging"
    },
    "release_url": "https://pypi.org/project/django-generic-tagging/0.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A generic tagging plugin for Django",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2042903,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60c87db56360f6ed887b65aed80e6d5262e6f599ad79de5d65fbb8df6312e12d",
          "md5": "519cec9fa712f8a435122343bc3e4302",
          "sha256": "afa84ae4e4c51d04ca95fbc46eb891771ddb19b1af9ffac61233385930d7a27c"
        },
        "downloads": -1,
        "filename": "django-generic-tagging-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "519cec9fa712f8a435122343bc3e4302",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21252,
        "upload_time": "2016-04-03T09:06:38",
        "upload_time_iso_8601": "2016-04-03T09:06:38.062741Z",
        "url": "https://files.pythonhosted.org/packages/60/c8/7db56360f6ed887b65aed80e6d5262e6f599ad79de5d65fbb8df6312e12d/django-generic-tagging-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60c87db56360f6ed887b65aed80e6d5262e6f599ad79de5d65fbb8df6312e12d",
        "md5": "519cec9fa712f8a435122343bc3e4302",
        "sha256": "afa84ae4e4c51d04ca95fbc46eb891771ddb19b1af9ffac61233385930d7a27c"
      },
      "downloads": -1,
      "filename": "django-generic-tagging-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "519cec9fa712f8a435122343bc3e4302",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21252,
      "upload_time": "2016-04-03T09:06:38",
      "upload_time_iso_8601": "2016-04-03T09:06:38.062741Z",
      "url": "https://files.pythonhosted.org/packages/60/c8/7db56360f6ed887b65aed80e6d5262e6f599ad79de5d65fbb8df6312e12d/django-generic-tagging-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}