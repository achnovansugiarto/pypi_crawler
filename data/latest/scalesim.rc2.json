{
  "info": {
    "author": "anands09, jmj, tushar, vnadella",
    "author_email": "anandsamajdar@gatech.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# Systolic CNN AcceLErator Simulator (SCALE Sim) v2\n\nSCALE Sim is a simulator for systolic array based accelerators for Convolution, Feed Forward, and any layer that uses GEMMs.\nThis is a refreshed version of the simulator with feature enhancements, restructured code to aid feature additions, and ease of distribution.\n\nThe previous version of the simulator can be found [here](https://github.com/ARM-software/SCALE-Sim).\n\n## Getting started in 30 seconds\n\n### *Installing the package*\n\nGetting started is simple! SCALE-Sim is completely written in python and is available both as a package and could be run from source.\n\nYou can install SCALE-Sim in your environment using the following command\n\n```$ pip3 install scalesim```\n\nAlternatively you can install the package from the source as well\n\n```$ python3 setup.py install```\n\n### *Launching a run*\n\nSCALE-Sim can be run by using the ```scale.py``` script from the repository and providing the paths to the architecture configuration, and the topology descriptor csv file.\n\n```$ python3 scale.py -c <path_to_config_file> -t <path_to_topology_file>```\n\nTry it now in this jupyter [notebook](https://github.com/scalesim-project/scalesim-tutorial-materials/blob/main/scaledemo.ipynb).\n\n### *Running from source*\n\nThe above method uses the installed package for running the simulator.\nIn cases where you would like to run directly from the source, the following command should be used instead.\n\n```$ python3 <scale_sim_repo_root>/scalesim/scale.py -c <path_to_config_file> -t <path_to_topology_file>```\n\nIf you are running from sources for the first time and do not have all the dependencies installed, please install them first  using the following command.\n\n```$ pip3 install -r <scale_sim_repo_root>/requirements.txt```\n\n## Tool inputs\n\nSCALE-Sim uses two input files to run, a configuration file and a topology file.\n\n### Configuration file\n\nThe configuration file is used to specify the architecture and run parameters for the simulations. \nThe following shows a sample config file:\n\n![sample config](https://github.com/scalesim-project/scale-sim-v2/blob/main/documentation/resources/config-file-example.png \"sample config\") \n\nThe config file has three sections. The \"*general*\" section specifies the run name, which is user specific. The \"*architecture_presets*\" section describes the parameter of the systolic array hardware to simulate. \nThe \"*run_preset*\" section specifies if the simulator should run with user specified bandwidth, or should it calculate the optimal bandwidth for stall free execution. \n\nThe detailed documentation for the config file could be found **here (TBD)**\n\n### Topology file\n\nThe topology file is a *CSV* file which decribes the layers of the workload topology. The layers are typically described as convolution layer parameters as shown in the example below.\n\n![sample topo](https://github.com/scalesim-project/scale-sim-v2/blob/main/documentation/resources/topo-file-example.png \"sample topo\")\n\nFor other layer types, SCALE-Sim also accepts the workload desciption in M, N, K format of the equivalent GEMM operation as shown in the example below **TBD**.\n\nThe tool however expects the inputs to be in the convolution format by default. When using the mnk format for input, please specify using the  ```-i gemm``` switch, as shown in the example below.\n\n```$ python3 <scale sim repo root>/scalesim/scale.py -c <path_to_config_file> -t <path_to_mnk_topology_file> -i gemm```\n\n### Output\n\nHere is an example output dumped to stdout when running Yolo Tiny (whose configuration is in yolo_tiny.csv):\n![screen_out](https://github.com/AnandS09/SCALE-Sim/blob/master/images/output.png \"std_out\")\n\nAlso, the simulator generates read write traces and summary logs at ```./scale_sim_simulator/outputs/<run_name>/```.\nThere are three summary logs:\n\n* Layer wise runtime and average utilization\n* Layer wise MAX DRAM bandwidth log\n* Layer wise AVG DRAM bandwidth log\n* Layer wise breakdown of data movement and compute cycles\n\nIn addition cycle accurate SRAM/DRAM access logs are also dumped and could be accesses at ```./scale_sim_simulator/outputs/<run_name>/```\n\n## Detailed Documentation\n\nDetailed documentation about the tool can be found **here (TBD)**\n\nWe also recommend referring to the following papers for insights on SCALE-Sim's potential. \n\n[1] Samajdar, A., Zhu, Y., Whatmough, P., Mattina, M., & Krishna, T.;  **\"Scale-sim: Systolic cnn accelerator simulator.\"** arXiv preprint arXiv:1811.02883 (2018). [\\[pdf\\]](https://arxiv.org/abs/1811.02883)\n\n[2] Samajdar, A., Joseph, J. M., Zhu, Y., Whatmough, P., Mattina, M., & Krishna, T.; **\"A systematic methodology for characterizing scalability of DNN accelerators using SCALE-sim\"**. In 2020 IEEE International Symposium on Performance Analysis of Systems and Software (ISPASS). [\\[pdf\\]](https://cpb-us-w2.wpmucdn.com/sites.gatech.edu/dist/c/332/files/2020/03/scalesim_ispass2020.pdf)\n\n## Citing this work\n\nIf you found this tool useful, please use the following bibtex to cite us\n\n```\n@article{samajdar2018scale,\n  title={SCALE-Sim: Systolic CNN Accelerator Simulator},\n  author={Samajdar, Ananda and Zhu, Yuhao and Whatmough, Paul and Mattina, Matthew and Krishna, Tushar},\n  journal={arXiv preprint arXiv:1811.02883},\n  year={2018}\n}\n\n@inproceedings{samajdar2020systematic,\n  title={A systematic methodology for characterizing scalability of DNN accelerators using SCALE-sim},\n  author={Samajdar, Ananda and Joseph, Jan Moritz and Zhu, Yuhao and Whatmough, Paul and Mattina, Matthew and Krishna, Tushar},\n  booktitle={2020 IEEE International Symposium on Performance Analysis of Systems and Software (ISPASS)},\n  pages={58--68},\n  year={2020},\n  organization={IEEE}\n}\n```\n\n## Contributing to the project\n\n**TODO** Provide detailed steps on making pull request\n\n## Developers\n\n* Ananda Samajdar\n* Jan Moritz Joseph\n* Yuhao Zhu\n* Paul Whatmough\n* Tushar Krishna\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/scalesim-project/scale-sim-v2",
    "keywords": "",
    "license": "MIT",
    "maintainer": "SynergyLab, GT",
    "maintainer_email": "anandsamajdar@gatech.edu",
    "name": "scalesim",
    "package_url": "https://pypi.org/project/scalesim/",
    "platform": "",
    "project_url": "https://pypi.org/project/scalesim/",
    "project_urls": {
      "Homepage": "https://github.com/scalesim-project/scale-sim-v2"
    },
    "release_url": "https://pypi.org/project/scalesim/2.0.1/",
    "requires_dist": [
      "numpy",
      "configparser",
      "absl-py",
      "tqdm",
      "pandas"
    ],
    "requires_python": "",
    "summary": "Systolic CNN AcceLerator Simulator",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10069540,
  "releases": {
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68cfc8f6f230b830f02f18707d4a94d48bd4d05a94d055309abdd9452e766208",
          "md5": "05cf78e8813540eac29a679fa36573ec",
          "sha256": "36250b1bcedfaf2d64d8dc6b8e887ea2e1ec26ec551b2a41a421c518cd98d6c6"
        },
        "downloads": -1,
        "filename": "scalesim-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05cf78e8813540eac29a679fa36573ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 44796,
        "upload_time": "2021-03-15T21:19:01",
        "upload_time_iso_8601": "2021-03-15T21:19:01.171392Z",
        "url": "https://files.pythonhosted.org/packages/68/cf/c8f6f230b830f02f18707d4a94d48bd4d05a94d055309abdd9452e766208/scalesim-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81f9893655f4067760cf73d5cd1af49637283ff5e3387ae1b30df3e407e2bfdc",
          "md5": "a8fdb3264d65eb46dc7a091a1b53daf6",
          "sha256": "4716e20c1b1c60ef8ada73c6475b0507faba91b3102e897a8da14648ef8d7453"
        },
        "downloads": -1,
        "filename": "scalesim-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a8fdb3264d65eb46dc7a091a1b53daf6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31734,
        "upload_time": "2021-03-15T21:19:02",
        "upload_time_iso_8601": "2021-03-15T21:19:02.430050Z",
        "url": "https://files.pythonhosted.org/packages/81/f9/893655f4067760cf73d5cd1af49637283ff5e3387ae1b30df3e407e2bfdc/scalesim-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97559a332e4d0c14b270ff8af5fb4a79b7c720a6b46dc593a0c82654adc038e5",
          "md5": "b4e3ddadafac9dbb24434e7110cfb061",
          "sha256": "182021e54b8fb6d46b5561a991ed8fb7af784f4eace0f72b297654dd5e65766f"
        },
        "downloads": -1,
        "filename": "scalesim-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4e3ddadafac9dbb24434e7110cfb061",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 53545,
        "upload_time": "2021-04-15T02:36:32",
        "upload_time_iso_8601": "2021-04-15T02:36:32.162975Z",
        "url": "https://files.pythonhosted.org/packages/97/55/9a332e4d0c14b270ff8af5fb4a79b7c720a6b46dc593a0c82654adc038e5/scalesim-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5b6e47e8f5954176f0c52bc3f82da133c18e8da51ec87c4f6836e32b28b705c",
          "md5": "3016b79f3c9644842c1821a213e191f7",
          "sha256": "a6b68aa0c67120b94e754416fe35b9aed166cc289b2acfd050b2bdd29448b28f"
        },
        "downloads": -1,
        "filename": "scalesim-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3016b79f3c9644842c1821a213e191f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36026,
        "upload_time": "2021-04-15T02:36:33",
        "upload_time_iso_8601": "2021-04-15T02:36:33.616789Z",
        "url": "https://files.pythonhosted.org/packages/e5/b6/e47e8f5954176f0c52bc3f82da133c18e8da51ec87c4f6836e32b28b705c/scalesim-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97559a332e4d0c14b270ff8af5fb4a79b7c720a6b46dc593a0c82654adc038e5",
        "md5": "b4e3ddadafac9dbb24434e7110cfb061",
        "sha256": "182021e54b8fb6d46b5561a991ed8fb7af784f4eace0f72b297654dd5e65766f"
      },
      "downloads": -1,
      "filename": "scalesim-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b4e3ddadafac9dbb24434e7110cfb061",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 53545,
      "upload_time": "2021-04-15T02:36:32",
      "upload_time_iso_8601": "2021-04-15T02:36:32.162975Z",
      "url": "https://files.pythonhosted.org/packages/97/55/9a332e4d0c14b270ff8af5fb4a79b7c720a6b46dc593a0c82654adc038e5/scalesim-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e5b6e47e8f5954176f0c52bc3f82da133c18e8da51ec87c4f6836e32b28b705c",
        "md5": "3016b79f3c9644842c1821a213e191f7",
        "sha256": "a6b68aa0c67120b94e754416fe35b9aed166cc289b2acfd050b2bdd29448b28f"
      },
      "downloads": -1,
      "filename": "scalesim-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3016b79f3c9644842c1821a213e191f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 36026,
      "upload_time": "2021-04-15T02:36:33",
      "upload_time_iso_8601": "2021-04-15T02:36:33.616789Z",
      "url": "https://files.pythonhosted.org/packages/e5/b6/e47e8f5954176f0c52bc3f82da133c18e8da51ec87c4f6836e32b28b705c/scalesim-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}