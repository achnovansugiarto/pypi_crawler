{
  "info": {
    "author": "\"David Snowdon\"",
    "author_email": "\"daves@arista.com\"",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Testing"
    ],
    "description": "Netdut: automated software testing for switches using pytest\n============================================================\n\n![PyPi](https://img.shields.io/pypi/v/pytest-netdut.svg) \n![Python Versions](https://img.shields.io/pypi/pyversions/pytest-netdut.svg)\n![collection version](https://img.shields.io/github/v/release/aristanetworks/pytest-netdut) \n![License](https://img.shields.io/github/license/aristanetworks/pytest-netdut)\n\nNetdut is a [pytest](https://docs.pytest.org/) plugin which provides infrastructure (e.g. pytest fixtures) which make it easy to write automated tests for network switches.\n\n\nFeatures\n--------\n\n* Brings the power, maturity and ecosystem of pytest to testing on network switches.\n* The `dut` fixture (Device Under Test) providing serial, ssh or [EAPI](https://github.com/arista-eosplus/pyeapi) connectivity for running CLI commands on a network switch. \n* Command-line configuration of a hostname and console name. \n* Markers for skipping tests based on the device's type or software configuration.\n* Compatibility with both Arista's EOS operating system, and the Metamako MOS operating system.\n* A pythonic interfaces for writing EOS CLI commands.\n\n\nRequirements\n------------\n\n* Requires python3 >= 3.6, pexpect, pyeapi\n* Network devices under test (DUTs) must be accessible via SSH.\n\n\nInstallation\n------------\n\nYou can install `pytest-netdut` via [pip](https://pypi.org/project/pip/) from [PyPI](https://pypi.org/project):\n\n    $ pip install pytest-netdut\n\nThe `pytest-netdut` plugin is not auto-loaded upon installation. To enable pytest-netdut for your\ntests, add the following to a `conftest.py` file:\n\n```\npytest_plugins = [\"pytest_netdut\"]\n```\n\nor explicitly add it when you run pytest:\n\n```\npytest -p pytest_netdut\n```\n\n\nUsage\n-----\n\n### Basics\n\nSeveral example tests using pytest-netdut are contained in [examples/](examples/). Note that there is a `conftest.py` in that directory which enables pytest-netdut and increases the verbosity of the CLI output.\n\nThe DUT must be accessible via SSH to use the SSH or EAPI fixtures (the latter enables and disables the EAPI using SSH). This can usually be achieved using this EOS config:\n\n```text\n    enable\n        configure\n            username admin privilege 15 nopassword\n            aaa authorization exec default local\n```\n\n`test_showver.py` demonstrates some basic examples using the dut fixture. The tests can be\nbe run using the command below.\n\n```bash\npytest --device=<YOUR_DEVICE_IP_OR_DNS> examples/test_showver.py\n```\n\n`test_showver` runs `show version` via EAPI:\n\n```python\ndef test_showver(dut):\n    info = dut.eapi.sendcmd(\"show version\")\n    logging.critical(f\"DUT model was: {info['modelName']}\")\n```\n\nRunning this using a device with a hostname of `dmb224` gives some simple output:\n\n![docs/images/test_showver_results.png](docs/images/test_showver_results.png)\n\n\n### Assertions\n\nBecause this is pytest, we get great feedback when tests fail. Tests fail upon assertions. Here we use the test below as an example.\n\n```python\ndef test_check_version(dut):\n    info = dut.eapi.sendcmd(\"show version\")\n    assert info[\"version\"] == \"1.0.0\"\n```\n\nNetdut will start EAPI and use it to run the `show version` command, returning the results as a python dictionary. The assertion then fails, assuming the DUT is not running version 1.0.0 of EOS (in this case it is running an old internal build):\n\n![docs/images/failed_assertion.png](docs/images/failed_assertion.png)\n\n\n### Running multiple commands\n\nIt's rare that a test will execute a single command on the DUT. Netdut allows for multi-command tests. This can be seen in [examples/test_daemon.py](examples/test_daemon.py) where the daemon\nis configured:\n\n```python\ndut.eapi.sendcmds(\"\"\"\n        enable\n            configure\n                daemon sleeper\n                    exec /usr/bin/sleep 10\n                    no shutdown\n    \"\"\")\n```\n\nIn this case the result that is returned is list of the results of each command. It's often useful\nto just return the last one:\n\n```python\ndef daemon_has_started():\n    daemon_info = dut.eapi.sendcmds([\"enable\", f\"show daemon {sleeper_daemon}\"])[-1]\n    return daemon_info[\"daemons\"][sleeper_daemon][\"starttime\"] != 0.0\n```\n\n### Waiting for results\n\nIt's often useful to provide some configuration to the switch, and then wait for the\nswitch to act (since it's running asynchronously). pytest-netdut provides the\n`wait_for` fixture for this purpose. Again, in\n[examples/test_daemon.py](examples/test_daemon.py) we use `wait_for` to wait for\nthe daemon to start and stop.\n\n```python\n# daemon_has_started is defined as a local function\n# wait_for calls it repeatedly until it's true\nwait_for(daemon_has_started, timeout=10.0)\n```\n\n### Skipping based on DUT type\n\nPerhaps some tests won't run on every type of device -- `pytest-netdut` provides some skipping mechanisms for this purpose. To skip a test on a particular on a DUT type use the provided\ndecorator:\n\n```python\n@pytest.mark.skip_device_type(\"DCS-7130.*\", reason=\"Demo\")\ndef test_that_skips_7130(dut):\n    logging.info(\"Must not be 7130!\")\n```\n\nSimilar decorators exist for OS type (i.e. EOS-only or MOS-only tests), and can be stacked:\n```python\n@pytest.mark.eos\n@pytest.mark.skip_device_type(\"DCS-7130.*\")\ndef test_that_only_runs_on_eos_on_7130(dut):\n    logging.info(\"Must be EOS on 7130!\")\n```\n\n### Building test harnesses\n\nPytest's fixture mechanism is very powerful in this scenario, allowing us to set up and tear\ndown test configurations with low overhead.\n\n```python\n@pytest.fixture\ndef my_test_harness(dut):\n    dut.eapi.sendcmds([\"enable\",\n                          \"configure\",\n                              \"banner motd My test is running, hands off!\"])\n    yield\n    dut.eapi.sendcmds([\"enable\", \"configure\", \"no banner\"])\n\ndef test_mytest(my_test_harness):\n    logging.info(\"Running my test here\")\n```\n\n### Translations\n\nIn order to reduce test code verbosity and complexity a translator class provides a way to standardize tests to a particular OS.\nBoth CLI commands and results are standardized to EOS by default.\n\nA particular test can be written with EOS CLI and be run on MOS as well.\nConsider the `l1 source` command which differs between EOS and MOS:\n\n```python\n@pytest.fixture\ndef l1_connect(dut):\n    if dut.ssh.cli_flavor == \"eos\":\n        dut.eapi.sendcmds([\"enable\",\n                              \"configure\",\n                                  \"interface Ethernet10\",\n                                      \"l1 source interface Ethernet12\"])\n    elif dut.ssh.cli_flavor == \"mos\":\n        dut.eapi.sendcmds([\"enable\",\n                              \"configure\",\n                                  \"interface Ethernet10\",\n                                      \"source Ethernet12\"])\n```\n\nwhich can be reduced to:\n\n```python\n@pytest.fixture\ndef l1_connect(dut):\n    dut.eapi.sendcmds([\"enable\",\n                        \"configure\",\n                            \"interface Ethernet10\",\n                                \"l1 source interface Ethernet12\"])\n```\n\nThe translator will try to find a match for each command in the predefined list of regex configuration patterns.\n\nThe translator will also process return values; MOS EAPI result keys are camelCased and the translator will convert all keys\nto snake_case.\n\nThe translator has a predefined set of translations which can be extended by subclassing the Translator class and overriding `config_patterns`.\nReturn values are processed by the `translate_key` function which must be defined in the subclass.\n\nSet the new translator class via `eapi.set_translator(<class instance>)`. \n\nContributing\n------------\nThis project is under active use and development. We would appreciate help to improve it,\nvia pull request. Tests can be run with `make ci` or `tox`.\n\nDocstrings are according to [Google's docstring conventions](https://google.github.io/styleguide/pyguide.html) ([examples](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html)).\n\n\n\nLicense\n-------\n\nDistributed under the terms of the [BSD-3](http://opensource.org/licenses/BSD-3-Clause) license, `pytest-netdut` is free and open source software\n\n\nIssues\n------\n\nIf you encounter any problems, please [file an issue](https://github.com/dcasnowdon-anet/pytest-netdut/issues) along with a detailed description.\n\nCopyright (c) 2021, David Snowdon\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of pytest-netdut nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aristanetworks/pytest-netdut",
    "keywords": "pytest,eos",
    "license": "\"BSD 3-Clause License\"",
    "maintainer": "\"Alex Webster\"",
    "maintainer_email": "\"alexw@arista.com\"",
    "name": "pytest-netdut",
    "package_url": "https://pypi.org/project/pytest-netdut/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytest-netdut/",
    "project_urls": {
      "Documentation": "https://github.com/aristanetworks/pytest-netdut/",
      "Homepage": "https://github.com/aristanetworks/pytest-netdut",
      "Source": "https://github.com/aristanetworks/pytest-netdut/",
      "Tracker": "https://github.com/aristanetworks/pytest-netdut/issues"
    },
    "release_url": "https://pypi.org/project/pytest-netdut/0.3.1/",
    "requires_dist": [
      "pexpect (>=4.8.0)",
      "pyeapi (>=0.8.4)",
      "pytest (>=3.5.0)",
      "six (>=1.15)"
    ],
    "requires_python": "",
    "summary": "\"Automated software testing for switches using pytest\"",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16395601,
  "releases": {
    "0.0.1a5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "329b28509255277d3ea77ec865e0566b185dc76e4de27a5c6a38bf81763044d9",
          "md5": "2576e2d0970fe1b03bd4bfbff4dcfe19",
          "sha256": "b5757a61d3c95cca7ee6d626d69486551651d6fad6588a6a9862ba99b5d7265a"
        },
        "downloads": -1,
        "filename": "pytest_netdut-0.0.1a5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2576e2d0970fe1b03bd4bfbff4dcfe19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18834,
        "upload_time": "2022-10-14T10:05:40",
        "upload_time_iso_8601": "2022-10-14T10:05:40.769407Z",
        "url": "https://files.pythonhosted.org/packages/32/9b/28509255277d3ea77ec865e0566b185dc76e4de27a5c6a38bf81763044d9/pytest_netdut-0.0.1a5-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Pre-release"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "708fd79bdb0eb6b7bbe2941225d50bd0589ed728cbe7ba311c65faa64e54d6de",
          "md5": "18765be17e2f34c1e306f17a90619beb",
          "sha256": "a6143cfc7ca0afbf967c78f3af393432d80c0e42f83f939719b512fc9585df89"
        },
        "downloads": -1,
        "filename": "pytest_netdut-0.0.1a5.tar.gz",
        "has_sig": false,
        "md5_digest": "18765be17e2f34c1e306f17a90619beb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 230374,
        "upload_time": "2022-10-14T10:05:42",
        "upload_time_iso_8601": "2022-10-14T10:05:42.329845Z",
        "url": "https://files.pythonhosted.org/packages/70/8f/d79bdb0eb6b7bbe2941225d50bd0589ed728cbe7ba311c65faa64e54d6de/pytest_netdut-0.0.1a5.tar.gz",
        "yanked": true,
        "yanked_reason": "Pre-release"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "655abdcc29970df9d44326029b81460cfa6f837051452c719a8a042b23c34c68",
          "md5": "0eb026cd3e262e41fc8bfd96e2081c45",
          "sha256": "00ffc6e38aa35e517466b3325966e479ace2b2c1a79d6bc686565e821f3ba59f"
        },
        "downloads": -1,
        "filename": "pytest_netdut-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0eb026cd3e262e41fc8bfd96e2081c45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18747,
        "upload_time": "2022-10-14T11:44:16",
        "upload_time_iso_8601": "2022-10-14T11:44:16.190759Z",
        "url": "https://files.pythonhosted.org/packages/65/5a/bdcc29970df9d44326029b81460cfa6f837051452c719a8a042b23c34c68/pytest_netdut-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cde35f8e8aa5395f2a31033c7213e81f48243865da8782aeafb79f393fe6b0a",
          "md5": "9dcc6a199b2f1ceb4f534c3289ae9cae",
          "sha256": "28da1f01eae04308b63523a67c134f8033dfc3af869e77b9f862d09fb7e4f186"
        },
        "downloads": -1,
        "filename": "pytest_netdut-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9dcc6a199b2f1ceb4f534c3289ae9cae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 229784,
        "upload_time": "2022-10-14T11:44:17",
        "upload_time_iso_8601": "2022-10-14T11:44:17.703640Z",
        "url": "https://files.pythonhosted.org/packages/8c/de/35f8e8aa5395f2a31033c7213e81f48243865da8782aeafb79f393fe6b0a/pytest_netdut-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a83fd54242993894c3c3ba3f7f1079905cbb09480dc08d4ea9bbaba3e7780da",
          "md5": "5cbfe25c05a505ee53b0f5274b7ca6c8",
          "sha256": "7c5b7c1821d97f2962317d5627b9334f93f9bbd442ea335e96d12a0952bf0635"
        },
        "downloads": -1,
        "filename": "pytest_netdut-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cbfe25c05a505ee53b0f5274b7ca6c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18820,
        "upload_time": "2022-11-18T03:07:59",
        "upload_time_iso_8601": "2022-11-18T03:07:59.006379Z",
        "url": "https://files.pythonhosted.org/packages/6a/83/fd54242993894c3c3ba3f7f1079905cbb09480dc08d4ea9bbaba3e7780da/pytest_netdut-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bca95ff9a094786e07f97e78ee8b94e59080d084859ea6ff56f8d2007661820",
          "md5": "0883f3a888b50b9d0fcfee6d508d237f",
          "sha256": "f9034f51b44e595504cb6518b44b70a9137a72454ab699802fdf2da11f1411a4"
        },
        "downloads": -1,
        "filename": "pytest_netdut-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0883f3a888b50b9d0fcfee6d508d237f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 231727,
        "upload_time": "2022-11-18T03:08:01",
        "upload_time_iso_8601": "2022-11-18T03:08:01.053954Z",
        "url": "https://files.pythonhosted.org/packages/2b/ca/95ff9a094786e07f97e78ee8b94e59080d084859ea6ff56f8d2007661820/pytest_netdut-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8998b6d8d71e55384b88de4d6ee70d88f9208446197ffadf9566f589a83dbd8",
          "md5": "fdc9964bbf641843960e57eacd292c57",
          "sha256": "1f79617c6537e8cdf898ff3d37b1f127f9668459237fb53492ad4189e86d6e28"
        },
        "downloads": -1,
        "filename": "pytest_netdut-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdc9964bbf641843960e57eacd292c57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18835,
        "upload_time": "2022-11-22T23:02:19",
        "upload_time_iso_8601": "2022-11-22T23:02:19.445890Z",
        "url": "https://files.pythonhosted.org/packages/e8/99/8b6d8d71e55384b88de4d6ee70d88f9208446197ffadf9566f589a83dbd8/pytest_netdut-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9c2377ed554240d00e37c26edd11b664ba6c572aa6082910d9dab72ed6e93d1",
          "md5": "e1807f8b363ba6ccee8e738b64158efc",
          "sha256": "91ea673cf805dae0cdd6a5c892fa535c63f9ddf23dfa4cb921373fc7a3c71baf"
        },
        "downloads": -1,
        "filename": "pytest_netdut-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e1807f8b363ba6ccee8e738b64158efc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 231738,
        "upload_time": "2022-11-22T23:02:21",
        "upload_time_iso_8601": "2022-11-22T23:02:21.286646Z",
        "url": "https://files.pythonhosted.org/packages/e9/c2/377ed554240d00e37c26edd11b664ba6c572aa6082910d9dab72ed6e93d1/pytest_netdut-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d31f9a3234435932f9d9a32c6bb7367a98b622da59c0648e039b14883c12dd7",
          "md5": "1761234a7f46ecc3592a252a4c022198",
          "sha256": "20877ba0d96ef0fa38408f1a0547265e471ef5f35dd93634ffb04fe15897236b"
        },
        "downloads": -1,
        "filename": "pytest_netdut-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1761234a7f46ecc3592a252a4c022198",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18878,
        "upload_time": "2023-01-11T22:53:59",
        "upload_time_iso_8601": "2023-01-11T22:53:59.516305Z",
        "url": "https://files.pythonhosted.org/packages/7d/31/f9a3234435932f9d9a32c6bb7367a98b622da59c0648e039b14883c12dd7/pytest_netdut-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02790ec2238908e21ee8a43646e96e7cf58bfb4b11e4555e98b24480c2676f9f",
          "md5": "854b9d5d0a405072d78c8bfad772c8f7",
          "sha256": "289eea063988291672748acc5fa38a39f4aba4e14e0b8b87bca4d7f277778e58"
        },
        "downloads": -1,
        "filename": "pytest_netdut-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "854b9d5d0a405072d78c8bfad772c8f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 231872,
        "upload_time": "2023-01-11T22:54:01",
        "upload_time_iso_8601": "2023-01-11T22:54:01.039675Z",
        "url": "https://files.pythonhosted.org/packages/02/79/0ec2238908e21ee8a43646e96e7cf58bfb4b11e4555e98b24480c2676f9f/pytest_netdut-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d31f9a3234435932f9d9a32c6bb7367a98b622da59c0648e039b14883c12dd7",
        "md5": "1761234a7f46ecc3592a252a4c022198",
        "sha256": "20877ba0d96ef0fa38408f1a0547265e471ef5f35dd93634ffb04fe15897236b"
      },
      "downloads": -1,
      "filename": "pytest_netdut-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1761234a7f46ecc3592a252a4c022198",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18878,
      "upload_time": "2023-01-11T22:53:59",
      "upload_time_iso_8601": "2023-01-11T22:53:59.516305Z",
      "url": "https://files.pythonhosted.org/packages/7d/31/f9a3234435932f9d9a32c6bb7367a98b622da59c0648e039b14883c12dd7/pytest_netdut-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02790ec2238908e21ee8a43646e96e7cf58bfb4b11e4555e98b24480c2676f9f",
        "md5": "854b9d5d0a405072d78c8bfad772c8f7",
        "sha256": "289eea063988291672748acc5fa38a39f4aba4e14e0b8b87bca4d7f277778e58"
      },
      "downloads": -1,
      "filename": "pytest_netdut-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "854b9d5d0a405072d78c8bfad772c8f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 231872,
      "upload_time": "2023-01-11T22:54:01",
      "upload_time_iso_8601": "2023-01-11T22:54:01.039675Z",
      "url": "https://files.pythonhosted.org/packages/02/79/0ec2238908e21ee8a43646e96e7cf58bfb4b11e4555e98b24480c2676f9f/pytest_netdut-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}