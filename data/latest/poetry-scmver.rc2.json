{
  "info": {
    "author": "Lorenzo A. Garcia Calzadilla",
    "author_email": "lorenzogarciacalzadilla@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Version Control",
      "Topic :: System :: Software Distribution",
      "Topic :: Utilities"
    ],
    "description": "# Dynamic versioning plugin for Poetry\n[![License: MIT](https://img.shields.io/badge/license-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nThis package is a plugin for [Poetry](https://github.com/sdispater/poetry)\nto enable dynamic versioning based on tags in your version control system,\npowered by [Scmver](https://pypi.com/scmver).\n\nSince Poetry does not yet officially support plugins\n(refer to [this issue](https://github.com/sdispater/poetry/issues/693))\nas of the time of writing on 2019-12-10, this package takes some novel\nliberties to make the functionality possible. As soon as official support\nlands, this plugin will be updated to do things the official way.\n\n\n## Installation\nPython 3.5 (or newer) and Poetry 0.12.1 (or newer) are required.\n\n* Run `pip install poetry-scmver`\n* Add this to your pyproject.toml:\n  ```toml\n  [tool.scmver]\n  enable = true\n  ```\n\nNote that you must install the plugin in your global Python installation,\n**not** as a dependency in pyroject.toml, because the virtual environment\nthat Poetry creates cannot see Poetry itself and therefore cannot patch it.\n\n## Configuration\nIn your pyproject.toml file, you may configure the following options:\n\n`[tool.scmver]`: General options.\n\n  * `enable`: Boolean. Default: false. Since the plugin has to be installed globally, this setting is an opt-in per project. This setting will likely be removed once plugins are officially supported.\n  * `root`: A path of the working directory. Default: ``'.'``\n  * `spec`: A version specifier to construct the public version indentifiers. It will be incremented by the number of commits from the latest tag.\n    \n    * ``major``: It will increment the major version.\n    * ``minor``: It will increment the minor version.\n    * ``micro`` or ``patch``: It will increment the micro (patch) version.\n    * ``post``: It will increment the post-release segment.\n    * ``major.dev``: It will increment the development release segment after incrementing the major version by 1.\n    * ``minor.dev``: It will increment the development release segment after incrementing the minor version by 1.\n    * ``micro.dev`` or ``patch.dev``: It will increment the development release segment after incrementing the micro (patch) version by 1.\n    \n    Default: ``'post'``\n  \n  * `local`: A ``string`` to construct the local version identifiers.\n\n    Available keywords:\n\n    * ``{distance}``\n    * ``{reivison}``\n    * ``{branch}``\n    * ``{utc}``      - Return value of ``datetime.datetime.utcnow()``\n    * ``{local}``    - Return value of ``datetime.datetime.now()``\n\n    Default: ``'{local:%Y-%m-%d}'``\n\n  * `version`: A regular expression object to extract the version from SCM tags. It should contain the version group.\n  * `write_to`: A path to a file which will be generated using ``template``.\n  * `template`: A format string which is used by ``write_to``.\n    Available keywords:\n\n    * ``{version}``\n    * ``{revision}``\n    * ``{branch}``\n\n  * `bazaar.tag`: A regular expression pattern to filter tags.\n  * `fossil.tag`: A regular expression pattern to filter tags.\n  * `git.tag`: It will be passed to ``git describe`` as ``--match``.\n  * `mercurial.tag`: A regular expression pattern to filter tags.\n  * `subversion.tag`: A regular expression pattern to filter tags.\n  * `subversion.trunk`: A relative repository path of the trunk directory. Default: ``'trunk'``\n  * `subversion.branches: A relative repository path of the directory where branches are located. Default: ``'branches'``\n  * `subversion.tags`: A relative repository path of the directory where tags are located. Default: ``'tags'``\n\nSimple example:\n\n```toml\n[tool.semver]\nenable = true\nwrite_to = \"version.py\"\n```\n\n## Implementation\nIn order to side-load plugin functionality into Poetry, this package\ndoes the following:\n\n* Upon installation, it delivers a `zzz_poetry_semver.pth`\n  file to your Python site-packages directory. This forces Python to\n  automatically load the plugin after all other modules have been loaded\n  (or at least those alphabetically prior to `zzz`).\n* It patches `builtins.__import__` so that, whenever the first import from\n  Poetry finishes, `poetry.console.main` will be patched. The reason we have\n  to wait for a Poetry import is in case you've used the get-poetry.py script,\n  in which case there is a gap between when Python is fully loaded and when\n  `~/.poetry/bin/poetry` adds the Poetry lib folder to the PYTHONPATH.\n* The patched version of `poetry.console.main` will then, when called,\n  additionally patch either `poetry.poetry.Poetry.create()` or\n  `poetry.factory.Factory.create_poetry()` (depending on your Poetry version)\n  to replace the version from your pyproject.toml file with the dynamically\n  generated version.\n\n## Changelog\n\nSee [Changelog](CHANGELOG.md)\n\n## License\n\nSee [License](LICENSE.txt)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "poetry,scm,version,plugin",
    "license": "MIT",
    "maintainer": "Lorenzo A. Garcia Calzadilla",
    "maintainer_email": "lorenzogarciacalzadilla@gmail.com",
    "name": "poetry-scmver",
    "package_url": "https://pypi.org/project/poetry-scmver/",
    "platform": "",
    "project_url": "https://pypi.org/project/poetry-scmver/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/poetry-scmver/0.1.2.dev6/",
    "requires_dist": [
      "tomlkit",
      "poetry",
      "scmver"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Plugin for Poetry to enable dynamic versioning based on VCS tags for semver",
    "version": "0.1.2.dev6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6311534,
  "releases": {
    "0.1.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ae3e34a8c5ff6ba6ac93fdae06acd0216a1fc4f5db0a95f9b8ad94fcd1d90e9",
          "md5": "1dba097a0894246c2dc8c56e6ac8461d",
          "sha256": "7023e34b4e5b6052341675f75cb782684cb0961e1622d31f97afa793c49a4cf8"
        },
        "downloads": -1,
        "filename": "poetry_scmver-0.1.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1dba097a0894246c2dc8c56e6ac8461d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 5859,
        "upload_time": "2019-12-11T19:06:46",
        "upload_time_iso_8601": "2019-12-11T19:06:46.733774Z",
        "url": "https://files.pythonhosted.org/packages/5a/e3/e34a8c5ff6ba6ac93fdae06acd0216a1fc4f5db0a95f9b8ad94fcd1d90e9/poetry_scmver-0.1.1.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cedf242d3fcc59384c2e8f3c68c51223b7d7dd6c6e9752145a0e6a8e74ecf7a6",
          "md5": "1e60db913c4d84c58e8015018d1e69f9",
          "sha256": "200c28c1f6925a14abc8d580c8c76edc4b00cb6dd7702f142baf978b92bc1b83"
        },
        "downloads": -1,
        "filename": "poetry-scmver-0.1.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "1e60db913c4d84c58e8015018d1e69f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 6148,
        "upload_time": "2019-12-11T19:06:42",
        "upload_time_iso_8601": "2019-12-11T19:06:42.739831Z",
        "url": "https://files.pythonhosted.org/packages/ce/df/242d3fcc59384c2e8f3c68c51223b7d7dd6c6e9752145a0e6a8e74ecf7a6/poetry-scmver-0.1.1.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2.dev6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76b80d28dd22527aa6742c38786cc9f277aee07874b150d37a5d1b744d9a45cc",
          "md5": "5f0e4c77dcafc781c5a8edd00de435d8",
          "sha256": "4d6c07964152f221fc18df48759a6f4603482c135f200064b6a663212b73e6ca"
        },
        "downloads": -1,
        "filename": "poetry_scmver-0.1.2.dev6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f0e4c77dcafc781c5a8edd00de435d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 5960,
        "upload_time": "2019-12-16T14:22:57",
        "upload_time_iso_8601": "2019-12-16T14:22:57.736843Z",
        "url": "https://files.pythonhosted.org/packages/76/b8/0d28dd22527aa6742c38786cc9f277aee07874b150d37a5d1b744d9a45cc/poetry_scmver-0.1.2.dev6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9db5743c0e6374274444823f2fc1de5729bb3fdc4f4547238a3f963120983040",
          "md5": "8db67da5d78f231aa8e8f430e66a4b50",
          "sha256": "63239d032c6928b5b7936420809d030911c73fdbb7670909c7a6ea086ac1e4f1"
        },
        "downloads": -1,
        "filename": "poetry-scmver-0.1.2.dev6.tar.gz",
        "has_sig": false,
        "md5_digest": "8db67da5d78f231aa8e8f430e66a4b50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 6230,
        "upload_time": "2019-12-16T14:22:55",
        "upload_time_iso_8601": "2019-12-16T14:22:55.365254Z",
        "url": "https://files.pythonhosted.org/packages/9d/b5/743c0e6374274444823f2fc1de5729bb3fdc4f4547238a3f963120983040/poetry-scmver-0.1.2.dev6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76b80d28dd22527aa6742c38786cc9f277aee07874b150d37a5d1b744d9a45cc",
        "md5": "5f0e4c77dcafc781c5a8edd00de435d8",
        "sha256": "4d6c07964152f221fc18df48759a6f4603482c135f200064b6a663212b73e6ca"
      },
      "downloads": -1,
      "filename": "poetry_scmver-0.1.2.dev6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f0e4c77dcafc781c5a8edd00de435d8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 5960,
      "upload_time": "2019-12-16T14:22:57",
      "upload_time_iso_8601": "2019-12-16T14:22:57.736843Z",
      "url": "https://files.pythonhosted.org/packages/76/b8/0d28dd22527aa6742c38786cc9f277aee07874b150d37a5d1b744d9a45cc/poetry_scmver-0.1.2.dev6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9db5743c0e6374274444823f2fc1de5729bb3fdc4f4547238a3f963120983040",
        "md5": "8db67da5d78f231aa8e8f430e66a4b50",
        "sha256": "63239d032c6928b5b7936420809d030911c73fdbb7670909c7a6ea086ac1e4f1"
      },
      "downloads": -1,
      "filename": "poetry-scmver-0.1.2.dev6.tar.gz",
      "has_sig": false,
      "md5_digest": "8db67da5d78f231aa8e8f430e66a4b50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 6230,
      "upload_time": "2019-12-16T14:22:55",
      "upload_time_iso_8601": "2019-12-16T14:22:55.365254Z",
      "url": "https://files.pythonhosted.org/packages/9d/b5/743c0e6374274444823f2fc1de5729bb3fdc4f4547238a3f963120983040/poetry-scmver-0.1.2.dev6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}