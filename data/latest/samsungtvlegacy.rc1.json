{
  "info": {
    "author": "originally Lauri Niskanen",
    "author_email": "ape@ape3000.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Home Automation"
    ],
    "description": "Forked from Ape/samsungctl github for use with legacy series TV.\n\nIn my case a F series (2013) Samsung TV.\nAdded extra time for time_interval to process string of key codes\n\n===============\nsamsungTVlegacy\n===============\n\nsamsungTVlegacy is a library and a command line tool for remote controlling Samsung\ntelevisions via a TCP/IP connection. It currently supports both pre-2016 TVs as\nwell most of the modern Tizen-OS TVs with Ethernet or Wi-Fi connectivity.\n\nDependencies\n============\n\n- Python 3\n- ``websocket-client`` (optional, for 2016+ TVs)\n- ``curses`` (optional, for the interactive mode)\n\nInstallation\n============\n\nsamsungTVlegacy can be installed using pip <(https://pip.pypa.io/>:\n\n::\n\n    # pip install samsungTVlegacy\n\nAlternatively you can clone the Git repository and run:\n\n::\n\n    # python setup.py install\n\nIt's possible to use the command line tool without installation:\n\n::\n\n    $ python -m samsungTVlegacy\n\nCommand line usage\n==================\n\nYou can use ``samsungTVlegacy`` command to send keys to a TV:\n\n::\n\n    $ samsungTVlegacy --host <host> [options] <key> [key ...]\n\n``host`` is the hostname or IP address of the TV. ``key`` is a key code, e.g.\n``KEY_VOLDOWN``. See `Key codes`_.\n\nThere is also an interactive mode (ncurses) for sending the key presses, to check what key codes are available for your TV:\n\n::\n\n    $ samsungTVlegacy --host <host> [options] --interactive\n\nUse ``samsungTVlegacy --help`` for more information about the command line\narguments:\n\n::\n\n    usage: samsungTVlegacy [-h] [--version] [-v] [-q] [-i] [--host HOST] [--port PORT]\n                           [--method METHOD] [--name NAME] [--description DESC]\n                           [--id ID] [--timeout TIMEOUT]\n                           [key [key ...]]\n\n    Remote control Samsung televisions via TCP/IP connection\n\n    positional arguments:\n      key                 keys to be sent (e.g. KEY_VOLDOWN) or set of keys (e.g. KEY_SOURCE KEY_RIGHT KEY_ENTER)\n\n    optional arguments:\n      -h, --help          show this help message and exit\n      --version           show program's version number and exit\n      -v, --verbose       increase output verbosity\n      -q, --quiet         suppress non-fatal output\n      -i, --interactive   interactive control\n      --host HOST         TV hostname or IP address\n      --port PORT         TV port number (TCP)\n      --method METHOD     Connection method (legacy or websocket)\n      --name NAME         remote control name\n      --description DESC  remote control description\n      --id ID             remote control id\n      --timeout TIMEOUT   socket timeout in seconds (0 = no timeout)\n\n    E.g. samsungTVlegacy --host 192.168.0.10 --name myremote KEY_VOLDOWN\n\nThe settings can be loaded from a configuration file. The file is searched from\n``$XDG_CONFIG_HOME/samsungctl_legacy.conf``, ``~/.config/samsungctl_legacy.conf``, and\n``/etc/samsungctl_legacy.conf`` in this order. A simple default configuration is\nbundled with the source as `samsungctl_legacy.conf <samsungctl_legacy.conf>`_.\n\nLibrary usage\n=============\n\nsamsungTVlegacy can be imported as a Python 3 library:\n\n.. code-block:: python\n\n    import samsungTVlegacy\n\nA context managed remote controller object of class ``Remote`` can be\nconstructed using the ``with`` statement:\n\n.. code-block:: python\n\n    with samsungTVlegacy.Remote(config) as remote:\n        # Use the remote object\n\nThe constructor takes a configuration dictionary as a parameter. All\nconfiguration items must be specified.\n\n===========  ======  ===========================================\nKey          Type    Description\n===========  ======  ===========================================\nhost         string  Hostname or IP address of the TV.\nport         int     TCP port number. (Default: ``55000``)\nmethod       string  Connection method (``legacy`` or ``websocket``)\nname         string  Name of the remote controller.\ndescription  string  Remote controller description.\nid           string  Additional remote controller ID.\ntimeout      int     Timeout in seconds. ``0`` means no timeout.\n===========  ======  ===========================================\n\nThe ``Remote`` object is very simple and you only need the ``control(key)``\nmethod. The only parameter is a string naming the key to be sent (e.g.\n``KEY_VOLDOWN``). See `Key codes`_. You can call ``control`` multiple times\nusing the same ``Remote`` object. The connection is automatically closed when\nexiting the ``with`` statement.\n\nWhen something goes wrong you will receive an exception:\n\n=================  =======================================\nException          Description\n=================  =======================================\nAccessDenied       The TV does not allow you to send keys.\nConnectionClosed   The connection was closed.\nUnhandledResponse  An unexpected response was received.\nsocket.timeout     The connection timed out.\n=================  =======================================\n\nExample program\n---------------\n\nThis simple program opens and closes the menu a few times.\n\n.. code-block:: python\n\n    #!/usr/bin/env python3\n\n    import samsungTVlegacy\n    import time\n\n    config = {\n        \"name\": \"samsungTVlegacy\",\n        \"description\": \"PC\",\n        \"id\": \"\",\n        \"host\": \"192.168.0.10\",\n        \"port\": 55000,\n        \"method\": \"legacy\",\n        \"timeout\": 0,\n    }\n\n    with samsungTVlegacy.Remote(config) as remote:\n        for i in range(10):\n            remote.control(\"KEY_MENU\")\n            time.sleep(0.5)\n\nKey codes\n=========\n\nThe list of accepted keys may vary depending on the TV model, but the following\nlist has some common key codes and their descriptions.\n\nThe Samsung Series F TV has a limited number of key codes as listed below. \n\n=================  ============\nKey code           Description\n=================  ============\nKEY_POWEROFF       Power off\nKEY_UP             Up\nKEY_DOWN           Down\nKEY_LEFT           Left\nKEY_RIGHT          Right\nKEY_CHUP           P Up\nKEY_CHDOWN         P Down\nKEY_ENTER          Enter\nKEY_RETURN         Return\nKEY_CH_LIST        Channel List\nKEY_MENU           Menu\nKEY_SOURCE         Source\nKEY_GUIDE          Guide\nKEY_TOOLS          Tools\nKEY_INFO           Info\nKEY_RED            A / Red\nKEY_GREEN          B / Green\nKEY_YELLOW         C / Yellow\nKEY_BLUE           D / Blue\nKEY_PANNEL_CHDOWN  3D\nKEY_VOLUP          Volume Up\nKEY_VOLDOWN        Volume Down\nKEY_MUTE           Mute\nKEY_0              0\nKEY_1              1\nKEY_2              2\nKEY_3              3\nKEY_4              4\nKEY_5              5\nKEY_6              6\nKEY_7              7\nKEY_8              8\nKEY_9              9\nKEY_TV             TV Source\nKEY_HDMI           HDMI Source\n=================  ============\n\nPlease note that some codes are different on the 2016+ TVs. For example,\n``KEY_POWEROFF`` is ``KEY_POWER`` on the newer TVs.\n\nReferences\n==========\n\nI did not reverse engineer the control protocol myself and samsungctl is not\nthe only implementation. Here is the list of things that inspired samsungctl.\n\n- http://sc0ty.pl/2012/02/samsung-tv-network-remote-control-protocol/\n- https://gist.github.com/danielfaust/998441\n- https://github.com/Bntdumas/SamsungIPRemote\n- https://github.com/kyleaa/homebridge-samsungtv2016\n- https://github.com/Ape/samsungctl\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ClearlyDazed/samsungTVlegacy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "samsungTVlegacy",
    "package_url": "https://pypi.org/project/samsungTVlegacy/",
    "platform": "",
    "project_url": "https://pypi.org/project/samsungTVlegacy/",
    "project_urls": {
      "Homepage": "https://github.com/ClearlyDazed/samsungTVlegacy"
    },
    "release_url": "https://pypi.org/project/samsungTVlegacy/0.1.1/",
    "requires_dist": [
      "curses ; extra == 'interactive_ui'",
      "websocket-client ; extra == 'websocket'"
    ],
    "requires_python": "",
    "summary": "Remote control Samsung televisions via TCP/IP connection",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8450358,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af8df610d1f7813153d6b3c1e2683f201e2c4d6ef57172dfedc85ddfa1fd86d3",
          "md5": "725f7eb6160fc62967e901d9c142087f",
          "sha256": "ed4de2343f873ef85bce0db2f25f586004c78b042441f00a336056f5132e4b31"
        },
        "downloads": -1,
        "filename": "samsungTVlegacy-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "725f7eb6160fc62967e901d9c142087f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11169,
        "upload_time": "2020-10-19T20:43:23",
        "upload_time_iso_8601": "2020-10-19T20:43:23.466779Z",
        "url": "https://files.pythonhosted.org/packages/af/8d/f610d1f7813153d6b3c1e2683f201e2c4d6ef57172dfedc85ddfa1fd86d3/samsungTVlegacy-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59405f2737106320d3ed6f8f723c7b33b873124b6006da0682e0ee548ffdb47b",
          "md5": "471fa46f75296005b9187f9b9af39da3",
          "sha256": "eda008f5168df239317a00ccda7307ff7133a286781a0db7422a39be1743716e"
        },
        "downloads": -1,
        "filename": "samsungTVlegacy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "471fa46f75296005b9187f9b9af39da3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9071,
        "upload_time": "2020-10-19T20:43:25",
        "upload_time_iso_8601": "2020-10-19T20:43:25.869259Z",
        "url": "https://files.pythonhosted.org/packages/59/40/5f2737106320d3ed6f8f723c7b33b873124b6006da0682e0ee548ffdb47b/samsungTVlegacy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af8df610d1f7813153d6b3c1e2683f201e2c4d6ef57172dfedc85ddfa1fd86d3",
        "md5": "725f7eb6160fc62967e901d9c142087f",
        "sha256": "ed4de2343f873ef85bce0db2f25f586004c78b042441f00a336056f5132e4b31"
      },
      "downloads": -1,
      "filename": "samsungTVlegacy-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "725f7eb6160fc62967e901d9c142087f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11169,
      "upload_time": "2020-10-19T20:43:23",
      "upload_time_iso_8601": "2020-10-19T20:43:23.466779Z",
      "url": "https://files.pythonhosted.org/packages/af/8d/f610d1f7813153d6b3c1e2683f201e2c4d6ef57172dfedc85ddfa1fd86d3/samsungTVlegacy-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59405f2737106320d3ed6f8f723c7b33b873124b6006da0682e0ee548ffdb47b",
        "md5": "471fa46f75296005b9187f9b9af39da3",
        "sha256": "eda008f5168df239317a00ccda7307ff7133a286781a0db7422a39be1743716e"
      },
      "downloads": -1,
      "filename": "samsungTVlegacy-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "471fa46f75296005b9187f9b9af39da3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9071,
      "upload_time": "2020-10-19T20:43:25",
      "upload_time_iso_8601": "2020-10-19T20:43:25.869259Z",
      "url": "https://files.pythonhosted.org/packages/59/40/5f2737106320d3ed6f8f723c7b33b873124b6006da0682e0ee548ffdb47b/samsungTVlegacy-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}