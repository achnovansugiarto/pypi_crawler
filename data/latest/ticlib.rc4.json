{
  "info": {
    "author": "Julien Phalip",
    "author_email": "jphalip@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "`ticlib` is a pure-Python library to drive [Pololu Tic stepper motor controllers](https://www.pololu.com/category/212/tic-stepper-motor-controllers).\n\nThis library supports serial, I²C, and USB connections for Python3; and serial and I²C for Micropython.\n\n# Example code\n\n```python\nfrom src.ticlib import TicUSB\nfrom time import sleep\n\ntic = TicUSB()\n\ntic.halt_and_set_position(0)\ntic.energize()\ntic.exit_safe_start()\n\npositions = [500, 300, 800, 0]\nfor position in positions:\n    tic.set_target_position(position)\n    while tic.get_current_position() != tic.get_target_position():\n        sleep(0.1)\n\ntic.deenergize()\ntic.enter_safe_start()\n```\n\n# Installation\n\nThe `ticlib` library is hosted on PyPI and can be installed by running this command:\n\n```shell\npip install ticlib\n```\n\n# Available controllers\n\n## Serial\n\nExample using Python 3 and the [pyserial](https://pypi.org/project/pyserial/) library:\n\n```python\nimport serial\nfrom src.ticlib import TicSerial\n\nport = serial.Serial(\"/dev/ttyS0\", baud_rate=9600, timeout=0.1, write_timeout=0.1)\ntic = TicSerial(port)\n```\n\nExample using Micropython:\n\n```python\nfrom machine import UART\nfrom ticlib import TicSerial\n\nport = UART(0, baudrate=9600, timeout=100)\ntic = TicSerial(port)\n```\n\nInstantiation parameters for `TicSerial`:\n\n- `port` (required): Serial port used to communicate with the Tic.\n- `device_number` (optional): Number of the device that you want to control. Use this if you have multiple devices\n  connected to your serial line. Defaults to `None`.\n- `crc_for_commands` (optional): If `True`, the library will append a CRC byte to every command sent to the Tic. Set\n  this to `True` if your Tic's \"Enable CRC for commands\" setting is turned on. Defaults to `False`.\n- `crc_for_responses` (optional): If `True`, the library will expect a CRC byte at the end of every response returned\n  by the Tic. Set this to `True` if your Tic's \"Enable CRC for responses\" setting is turned on. Defaults to `False`.\n\nFor more details, see Pololu's official documentation on [serial command encoding](https://www.pololu.com/docs/0J71/9).\n\n\n## I²C\n\nExample using Python 3 and the [smbus2](https://pypi.org/project/smbus2/) library.\n\n```python\nfrom smbus2 import SMBus\nfrom ticlib import TicI2C, SMBus2Backend\n\nbus = SMBus(3)  # Represents /dev/i2c-3\naddress = 14    # Address of the Tic, that is its device number\nbackend = SMBus2Backend(bus)\n\ntic = TicI2C(backend)\n```\n\nExample using Micropython:\n\n```python\nfrom machine import I2C\nfrom ticlib import TicI2C, MachineI2CBackend\n\ni2c = I2C(1)  # ID of your I2C peripheral\naddress = 14  # Address of the Tic, that is its device number\nbackend = MachineI2CBackend(i2c, address)\n\ntic = TicI2C(backend)\n```\n\nInstantiation parameter for `TicI2C`:\n\n- `backend` (required): The I²C backend. Available options are `SMBus2Backend` for Python 3 and `MachineI2C` for\n  Micropython.\n\nNote: If you use a Raspberry Pi, make sure to follow the workaround described in the [Pololu documentation](https://www.pololu.com/docs/0J71/12.8).\n\nFor more details, see Pololu's official documentation on [I²C command encoding](https://www.pololu.com/docs/0J71/10).\n\n## USB\n\nThe USB controller has a dependency on the [pyusb](https://pypi.org/project/pyusb/) library.\n\nExample:\n\n```python\nfrom src.ticlib import TicUSB\n\ntic = TicUSB()\n```\n\nInstantiation parameters for `TicUSB`:\n\n- `product` (optional): USB product ID for your Tic. If `None`, the device will be automatically detected. Use this if\n  multiple Tic devices are connected to your computer. The available options are: `TIC_T825` (`0x00b3`), `TIC_T834`\n  (`0x00b5`), `TIC_T500` (`0x00bd`), `TIC_N825` (`0x00c3`), `TIC_T249` (`0x00c9`), and `TIC_36v4` (`0x00cb`). Defaults\n  to `None`.\n- `serial_number` (optional): The serial number (in string format) of your Tic. If `None`, the device will be\n  automatically detected. Use this if multiple Tic devices are connected to your computer. Default to `None`.\n\nFor more details, see Pololu's official documentation on [USB command encoding](https://www.pololu.com/docs/0J71/11).\n\n# Commands:\n\nAvailable commands:\n\n```python\ntic.clear_driver_error()\ntic.deenergize()\ntic.energize()\ntic.enter_safe_start()\ntic.exit_safe_start()\ntic.go_home(value)\ntic.halt_and_hold()\ntic.halt_and_set_position(value)\ntic.reset()\ntic.reset_command_timeout()\ntic.set_agc_option(value)\ntic.set_current_limit(value)\ntic.set_decay_mode(value)\ntic.set_max_acceleration(value)\ntic.set_max_deceleration(value)\ntic.set_max_speed(value)\ntic.set_starting_speed(value)\ntic.set_step_mode(value)\ntic.set_target_position(value)\ntic.set_target_velocity(value)\n```\n\nFor more details, see the official [command reference](https://www.pololu.com/docs/0J71/8).\n\n# Variables\n\nAvailable variables:\n\n```python\n# General status  -------------------------------------\ntic.get_error_occured()\ntic.get_error_status()\ntic.get_misc_flags()\ntic.get_operation_state()\n\n# Step planning ---------------------------------------\ntic.get_acting_target_position()\ntic.get_current_position()\ntic.get_current_velocity()\ntic.get_max_acceleration()\ntic.get_max_deceleration()\ntic.get_max_speed()\ntic.get_planning_mode()\ntic.get_starting_speed()\ntic.get_target_position()\ntic.get_target_velocity()\ntic.get_time_since_last_step()\n\n# Other -----------------------------------------------\ntic.get_analog_reading_rx()\ntic.get_analog_reading_scl()\ntic.get_analog_reading_sda()\ntic.get_analog_reading_tx()\ntic.get_current_limit()\ntic.get_decay_mode()\ntic.get_device_reset()\ntic.get_digital_readings()\ntic.get_encoder_position()\ntic.get_input_after_averaging()\ntic.get_input_after_hysteresis()\ntic.get_input_after_scaling()\ntic.get_input_state()\ntic.get_pin_states()\ntic.get_rc_pulse()\ntic.get_step_mode()\ntic.get_vin_voltage()\ntic.get_uptime()\n\n# T249-only -------------------------------------------\ntic.get_agc_bottom_current_limit()\ntic.get_agc_current_boost_steps()\ntic.get_agc_frequency_limit()\ntic.get_agc_mode()\ntic.get_last_motor_driver_error()\n\n# 36v4-only -------------------------------------------\ntic.get_last_hp_driver_errors()\n```\n\nFor more details, see the official [variable reference](https://www.pololu.com/docs/0J71/7).\n\n# Settings\n\nAvailable settings:\n\n```python\ntic.settings.get_control_mode()\n\n# Miscellaneous -------------------------------------------------\ntic.settings.get_auto_clear_driver_error()\ntic.settings.get_disable_safe_start()\ntic.settings.get_ignore_err_line_high()\ntic.settings.get_never_sleep()\ntic.settings.get_vin_calibration()\n\n# Soft error response -------------------------------------------\ntic.settings.get_current_limit_during_error()\ntic.settings.get_soft_error_position()\ntic.settings.get_soft_error_response()\n\n# Serial --------------------------------------------------------\ntic.settings.get_serial_7bit_responses()\ntic.settings.get_serial_14bit_device_number()\ntic.settings.get_serial_alt_device_number()\ntic.settings.get_serial_baud_rate()\ntic.settings.get_serial_command_timeout()\ntic.settings.get_serial_crc_for_commands()\ntic.settings.get_serial_crc_for_responses()\ntic.settings.get_serial_device_number()\ntic.settings.get_serial_enable_alt_device_number()\ntic.settings.get_serial_response_delay()\n\n# Encoder -------------------------------------------------------\ntic.settings.get_encoder_postscaler()\ntic.settings.get_encoder_prescaler()\ntic.settings.get_encoder_unlimited()\n\n# Input conditioning --------------------------------------------\ntic.settings.get_input_averaging_enabled()\ntic.settings.get_input_hysteresis()\n\n# RC and analog scaling -----------------------------------------\ntic.settings.get_input_invert()\ntic.settings.get_input_max()\ntic.settings.get_input_min()\ntic.settings.get_input_neutral_max()\ntic.settings.get_input_neutral_min()\ntic.settings.get_input_scaling_degree()\ntic.settings.get_output_max()\ntic.settings.get_output_min()\n\n# Pin Configuration ---------------------------------------------\n# SCL\ntic.settings.get_scl_active_high()\ntic.settings.get_scl_config()\ntic.settings.get_scl_enable_analog()\ntic.settings.get_scl_enable_pull_up()\ntic.settings.get_scl_kill_switch()\ntic.settings.get_scl_limit_switch_forward()\ntic.settings.get_scl_limit_switch_reverse()\ntic.settings.get_scl_pin_function()\n# SDA\ntic.settings.get_sda_active_high()\ntic.settings.get_sda_config()\ntic.settings.get_sda_enable_analog()\ntic.settings.get_sda_enable_pull_up()\ntic.settings.get_sda_kill_switch()\ntic.settings.get_sda_limit_switch_forward()\ntic.settings.get_sda_limit_switch_reverse()\ntic.settings.get_sda_pin_function()\n# TX\ntic.settings.get_tx_active_high()\ntic.settings.get_tx_config()\ntic.settings.get_tx_enable_analog()\ntic.settings.get_tx_kill_switch()\ntic.settings.get_tx_limit_switch_forward()\ntic.settings.get_tx_limit_switch_reverse()\ntic.settings.get_tx_pin_function()\n# RX\ntic.settings.get_rx_active_high()\ntic.settings.get_rx_config()\ntic.settings.get_rx_enable_analog()\ntic.settings.get_rx_kill_switch()\ntic.settings.get_rx_limit_switch_forward()\ntic.settings.get_rx_limit_switch_reverse()\ntic.settings.get_rx_pin_function()\n# RC\ntic.settings.get_rc_active_high()\ntic.settings.get_rc_config()\ntic.settings.get_rc_kill_switch()\ntic.settings.get_rc_limit_switch_forward()\ntic.settings.get_rc_limit_switch_reverse()\n\n# Motor ---------------------------------------------------------\ntic.settings.get_current_limit()\ntic.settings.get_decay_mode()\ntic.settings.get_invert_motor_direction()\ntic.settings.get_max_acceleration()\ntic.settings.get_max_deceleration()\ntic.settings.get_max_speed()\ntic.settings.get_starting_speed()\ntic.settings.get_step_mode()\n\n# Homing --------------------------------------------------------\ntic.settings.get_auto_homing()\ntic.settings.get_auto_homing_forward()\ntic.settings.get_homing_speed_away()\ntic.settings.get_homing_speed_towards()\n\n# T249-only -----------------------------------------------------\ntic.settings.get_agc_bottom_current_limit()\ntic.settings.get_agc_current_boost_steps()\ntic.settings.get_agc_mode()\ntic.settings.get_agc_frequency_limit()\n\n# 36v4-only -----------------------------------------------------\ntic.settings.get_hp_current_trip_blanking_time()\ntic.settings.get_hp_decay_mode()\ntic.settings.get_hp_enable_adaptive_blanking_time()\ntic.settings.get_hp_enable_unrestricted_current_limits()\ntic.settings.get_hp_fixed_off_time()\ntic.settings.get_hp_mixed_decay_transition_time()\n```\n\nModifying settings is currently not supported.\n\nFor more details, see the official [settings reference](https://www.pololu.com/docs/0J71/6).\n\n# Version history\n\n## 0.2.2 (May 14, 2021)\n\n- Fixed some bugs for Micropython\n\n## 0.2.1 (May 4, 2021)\n\n- Issue #1: Fixed bug that prevented multiple Tic controllers from working at the same time.\n\n## 0.2.0 (April 20, 2021)\n\n- Added support for Micropython with serial and I2C.\n\n## 0.1.0 (April 18, 2021)\n\nInitial release.\n\n# Running the tests\n\nFor Python:\n\n```shell\ndocker run -it -v ${PWD}:/base -w /base python python /base/tests/tests.py\n```\n\nFor Micropython:\n\n```shell\ndocker run -it -v ${PWD}:/base -w /base mitchins/micropython-linux micropython /base/tests/tests.py\n```\n\n# Notes for project maintainers\n\nTo release a new version of this library:\n\n- Update version number in `src/ticlib/__init__.py`\n- Add release notes in the \"Version history\" section above.\n- Create and push tag of the form: `v<VERSION_NUMBER>` (e.g. `v.0.2.1`)\n- Delete existing `dist/` directory, if any.\n- Run: `python3 -m build`\n- Run: `python3 -m twine upload dist/*`\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jphalip/ticlib",
    "keywords": "",
    "license": "BSD-2-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ticlib",
    "package_url": "https://pypi.org/project/ticlib/",
    "platform": "",
    "project_url": "https://pypi.org/project/ticlib/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jphalip/ticlib/issues",
      "Homepage": "https://github.com/jphalip/ticlib"
    },
    "release_url": "https://pypi.org/project/ticlib/0.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python library to drive Pololu Tic stepper motor controllers",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10362485,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "837d9582eeb9ca58c1c251249797206333e3701e49b94531a12d6e6532c5f506",
          "md5": "2fed860a8dbc7e98fc0d513c5c2b8f0e",
          "sha256": "f016c17427dc352df3ced41a132d89159488dc3b0df7b6628a75771cc74baf94"
        },
        "downloads": -1,
        "filename": "ticlib-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2fed860a8dbc7e98fc0d513c5c2b8f0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9699,
        "upload_time": "2021-04-18T17:19:24",
        "upload_time_iso_8601": "2021-04-18T17:19:24.101946Z",
        "url": "https://files.pythonhosted.org/packages/83/7d/9582eeb9ca58c1c251249797206333e3701e49b94531a12d6e6532c5f506/ticlib-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "531ae4ce95464c534c9efeaa8909a3cf0c9cbe5354c4238686aceaff2e3846fa",
          "md5": "607c3aca6475e891bc393bd8dbb20396",
          "sha256": "b840c62486077567085350ee81706444ef2ef25a5150ffccb221c907a77e0415"
        },
        "downloads": -1,
        "filename": "ticlib-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "607c3aca6475e891bc393bd8dbb20396",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12191,
        "upload_time": "2021-04-18T17:19:25",
        "upload_time_iso_8601": "2021-04-18T17:19:25.808631Z",
        "url": "https://files.pythonhosted.org/packages/53/1a/e4ce95464c534c9efeaa8909a3cf0c9cbe5354c4238686aceaff2e3846fa/ticlib-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41e8726c892dec0459eede7ae07481e1669192016c5b1557eb073d9125a60622",
          "md5": "0b5ab205061edd3817196230fcb90704",
          "sha256": "31e05cfa101aff619986933d299e74e6aad60b5fd905df05874de567d7af3f22"
        },
        "downloads": -1,
        "filename": "ticlib-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b5ab205061edd3817196230fcb90704",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11719,
        "upload_time": "2021-04-20T05:10:37",
        "upload_time_iso_8601": "2021-04-20T05:10:37.893505Z",
        "url": "https://files.pythonhosted.org/packages/41/e8/726c892dec0459eede7ae07481e1669192016c5b1557eb073d9125a60622/ticlib-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96583e54f3e4e988e2679128e386d2cf5176391bd51bca9fdea9adfc16f87f60",
          "md5": "7293b47d9235f11ccb480d09d688ad2c",
          "sha256": "a64775e6d6918870ea2664fa358bafa84a3d5148d9d0bd3277acfa075950482d"
        },
        "downloads": -1,
        "filename": "ticlib-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7293b47d9235f11ccb480d09d688ad2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13796,
        "upload_time": "2021-04-20T05:10:39",
        "upload_time_iso_8601": "2021-04-20T05:10:39.919068Z",
        "url": "https://files.pythonhosted.org/packages/96/58/3e54f3e4e988e2679128e386d2cf5176391bd51bca9fdea9adfc16f87f60/ticlib-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "104f3f00028fe8d89d7eda1f6e5a3fdf8f287b099091c2ffcc9d21261d562bb7",
          "md5": "f99ada5c3f08348579c2cc63688db421",
          "sha256": "41d95c3ac0cf71bec89de4f97be7f4e4d4dd21a719582644a9cf0544353441ef"
        },
        "downloads": -1,
        "filename": "ticlib-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f99ada5c3f08348579c2cc63688db421",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11882,
        "upload_time": "2021-05-04T18:11:01",
        "upload_time_iso_8601": "2021-05-04T18:11:01.457139Z",
        "url": "https://files.pythonhosted.org/packages/10/4f/3f00028fe8d89d7eda1f6e5a3fdf8f287b099091c2ffcc9d21261d562bb7/ticlib-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0da27e78e3130537e09b7519036dc0c37e05047a8eeea5f2fbb582dc2bece05e",
          "md5": "174300e5dac3a65b5a38e4ba0340a926",
          "sha256": "0832a3af09449deb03c9e397f62d086a74519cb471f925db541dc10fa3e4ed39"
        },
        "downloads": -1,
        "filename": "ticlib-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "174300e5dac3a65b5a38e4ba0340a926",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14140,
        "upload_time": "2021-05-04T18:11:05",
        "upload_time_iso_8601": "2021-05-04T18:11:05.422863Z",
        "url": "https://files.pythonhosted.org/packages/0d/a2/7e78e3130537e09b7519036dc0c37e05047a8eeea5f2fbb582dc2bece05e/ticlib-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e68acd9e21ea884c80cf9e78206d68240b597814e7df1eaf0f97dfe2bc2eb2d3",
          "md5": "f04d442417ec826ae19ab29dc38f0815",
          "sha256": "7f9092c698c31df36130d367eeb294342304bdbaabee17baf872682bdf1420aa"
        },
        "downloads": -1,
        "filename": "ticlib-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f04d442417ec826ae19ab29dc38f0815",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12104,
        "upload_time": "2021-05-15T02:17:26",
        "upload_time_iso_8601": "2021-05-15T02:17:26.737005Z",
        "url": "https://files.pythonhosted.org/packages/e6/8a/cd9e21ea884c80cf9e78206d68240b597814e7df1eaf0f97dfe2bc2eb2d3/ticlib-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd41c77969faae19f61b58b0a41c3d6c2a9013c8f3bc2899f4ea3f023855cea0",
          "md5": "b6f8cb97357aafbf1fde0bcd2662e1d5",
          "sha256": "3ebdbee27629992d46d0fb0feb18dc51e790363b35b174c87de00ce5f6ed7419"
        },
        "downloads": -1,
        "filename": "ticlib-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b6f8cb97357aafbf1fde0bcd2662e1d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14586,
        "upload_time": "2021-05-15T02:17:28",
        "upload_time_iso_8601": "2021-05-15T02:17:28.252083Z",
        "url": "https://files.pythonhosted.org/packages/cd/41/c77969faae19f61b58b0a41c3d6c2a9013c8f3bc2899f4ea3f023855cea0/ticlib-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e68acd9e21ea884c80cf9e78206d68240b597814e7df1eaf0f97dfe2bc2eb2d3",
        "md5": "f04d442417ec826ae19ab29dc38f0815",
        "sha256": "7f9092c698c31df36130d367eeb294342304bdbaabee17baf872682bdf1420aa"
      },
      "downloads": -1,
      "filename": "ticlib-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f04d442417ec826ae19ab29dc38f0815",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12104,
      "upload_time": "2021-05-15T02:17:26",
      "upload_time_iso_8601": "2021-05-15T02:17:26.737005Z",
      "url": "https://files.pythonhosted.org/packages/e6/8a/cd9e21ea884c80cf9e78206d68240b597814e7df1eaf0f97dfe2bc2eb2d3/ticlib-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd41c77969faae19f61b58b0a41c3d6c2a9013c8f3bc2899f4ea3f023855cea0",
        "md5": "b6f8cb97357aafbf1fde0bcd2662e1d5",
        "sha256": "3ebdbee27629992d46d0fb0feb18dc51e790363b35b174c87de00ce5f6ed7419"
      },
      "downloads": -1,
      "filename": "ticlib-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b6f8cb97357aafbf1fde0bcd2662e1d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14586,
      "upload_time": "2021-05-15T02:17:28",
      "upload_time_iso_8601": "2021-05-15T02:17:28.252083Z",
      "url": "https://files.pythonhosted.org/packages/cd/41/c77969faae19f61b58b0a41c3d6c2a9013c8f3bc2899f4ea3f023855cea0/ticlib-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}