{
  "info": {
    "author": "Jaroslav Michalovcik",
    "author_email": "j.michalovcik@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# skxcs\n\nskxcs is a SciKit learn wrapper for implementation of XCS algorithm [xcs](https://github.com/hosford42/xcs). \n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install skxcs.\n\n```bash\npip install skxcs\n```\n\n## Usage\n\nNumeric Values\n\n```python\nfrom skxcs.classifiers import XcsClassifier\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\n\n# Numeric values\niris = load_iris()\nX, y = iris.data, iris.target\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)\n\nclassifier = XcsClassifier()\n\n# If data input is non binary, classifier automatically uses MLDP discretizer for numeric values\n# and one hot encoding for categorical values to transform data in both fit and predict methods.\n\nclassifier.fit(X_train, y_train)\n\n# Get prediction array\ny_pred = classifier.predict(X_test)\n\n# Get pretty rules\nfor rule in classifier.get_pretty_rules():\n    print(rule)\n\n# To use get_pretty_rules or pretty_print_prediction methods,\n# classifier has to transform train and test data first.\n\n```\n\nCategorical values\n\n```python\nimport pandas as pd\nfrom skxcs.classifiers import XcsClassifier\nfrom sklearn.model_selection import train_test_split\n\n# Categorical values\ncategorical_frame = pd.read_csv(\n    \"https://archive.ics.uci.edu/ml/machine-learning-databases/autos/imports-85.data\",\n    header=None, na_values=\"?\").dropna()\ny = categorical_frame[0]\nX = categorical_frame.select_dtypes(include=[object])\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)\nclassifier = XcsClassifier()\n\n# You can transform data yourself. You should either transform both training\n# and testing data, or none of them. It is necessary to ensure correct values are passed to classifier.\nX_train_bin = classifier.transform_df(X_train, y=y_train)\nclassifier.fit(X_train_bin, y_train)\n\n# Note that we don't pass 'y' to transform method when we transform test data\nX_test_bin = classifier.transform_df(X_test)\n\n# pretty print prediction\nresult = classifier.pretty_print_prediction(X_test_bin)\nprint(result)\n```\n\n## Contributing\n...\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "XCS,xcs,SciKit,learn",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "skxcs",
    "package_url": "https://pypi.org/project/skxcs/",
    "platform": "",
    "project_url": "https://pypi.org/project/skxcs/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/skxcs/0.1/",
    "requires_dist": [
      "numpy",
      "pandas",
      "mdlp",
      "sklearn",
      "xcs"
    ],
    "requires_python": ">=3.7",
    "summary": "SciKit learn wrapper for XCS algorithm implementation.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7516553,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de4b792ada9dded1104d1ed9a0c1f1699a7d153a172c19b63cae8ff4ea2fa8b1",
          "md5": "e62d2d6f4a85176a60c0c2d3901800f5",
          "sha256": "6401c1a6833c0fd78d36468f1ef9a047a0356252e1c25656e04f1733e9fdf9b0"
        },
        "downloads": -1,
        "filename": "skxcs-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e62d2d6f4a85176a60c0c2d3901800f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7900,
        "upload_time": "2020-06-19T17:00:40",
        "upload_time_iso_8601": "2020-06-19T17:00:40.891183Z",
        "url": "https://files.pythonhosted.org/packages/de/4b/792ada9dded1104d1ed9a0c1f1699a7d153a172c19b63cae8ff4ea2fa8b1/skxcs-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91e97fd3bfe60b9c76a8e73ae181eb8f2bcae1cc5c334509246425b0de569ff2",
          "md5": "9b305536c1fb337244aa4919a7fa0bc8",
          "sha256": "f1e461451e79fbcf00426bb1a460ad05be552a9cbb68ff1431bc533d7d8cbb80"
        },
        "downloads": -1,
        "filename": "skxcs-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9b305536c1fb337244aa4919a7fa0bc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6647,
        "upload_time": "2020-06-19T17:00:43",
        "upload_time_iso_8601": "2020-06-19T17:00:43.303427Z",
        "url": "https://files.pythonhosted.org/packages/91/e9/7fd3bfe60b9c76a8e73ae181eb8f2bcae1cc5c334509246425b0de569ff2/skxcs-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de4b792ada9dded1104d1ed9a0c1f1699a7d153a172c19b63cae8ff4ea2fa8b1",
        "md5": "e62d2d6f4a85176a60c0c2d3901800f5",
        "sha256": "6401c1a6833c0fd78d36468f1ef9a047a0356252e1c25656e04f1733e9fdf9b0"
      },
      "downloads": -1,
      "filename": "skxcs-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e62d2d6f4a85176a60c0c2d3901800f5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7900,
      "upload_time": "2020-06-19T17:00:40",
      "upload_time_iso_8601": "2020-06-19T17:00:40.891183Z",
      "url": "https://files.pythonhosted.org/packages/de/4b/792ada9dded1104d1ed9a0c1f1699a7d153a172c19b63cae8ff4ea2fa8b1/skxcs-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91e97fd3bfe60b9c76a8e73ae181eb8f2bcae1cc5c334509246425b0de569ff2",
        "md5": "9b305536c1fb337244aa4919a7fa0bc8",
        "sha256": "f1e461451e79fbcf00426bb1a460ad05be552a9cbb68ff1431bc533d7d8cbb80"
      },
      "downloads": -1,
      "filename": "skxcs-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9b305536c1fb337244aa4919a7fa0bc8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6647,
      "upload_time": "2020-06-19T17:00:43",
      "upload_time_iso_8601": "2020-06-19T17:00:43.303427Z",
      "url": "https://files.pythonhosted.org/packages/91/e9/7fd3bfe60b9c76a8e73ae181eb8f2bcae1cc5c334509246425b0de569ff2/skxcs-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}