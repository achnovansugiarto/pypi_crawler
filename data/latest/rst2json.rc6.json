{
  "info": {
    "author": "John Thorvald Wodder II",
    "author_email": "rst2json@varonathe.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Documentation",
      "Topic :: Software Development :: Documentation",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Markup :: HTML",
      "Topic :: Text Processing :: Markup :: LaTeX",
      "Topic :: Text Processing :: Markup :: reStructuredText"
    ],
    "description": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: Project Status: Active — The project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://github.com/jwodder/rst2json/workflows/Test/badge.svg?branch=master\n    :target: https://github.com/jwodder/rst2json/actions?workflow=Test\n    :alt: CI Status\n\n.. image:: https://codecov.io/gh/jwodder/rst2json/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/jwodder/rst2json\n\n.. image:: https://img.shields.io/pypi/pyversions/rst2json.svg\n    :target: https://pypi.org/project/rst2json/\n\n.. image:: https://img.shields.io/github/license/jwodder/rst2json.svg\n    :target: https://opensource.org/licenses/MIT\n    :alt: MIT License\n\n`GitHub <https://github.com/jwodder/rst2json>`_\n| `PyPI <https://pypi.org/project/rst2json/>`_\n| `Issues <https://github.com/jwodder/rst2json/issues>`_\n| `Changelog <https://github.com/jwodder/rst2json/blob/master/CHANGELOG.md>`_\n\n.. contents::\n    :backlinks: top\n\n``rst2json`` renders a reStructuredText_ document as HTML or (Xe)LaTeX, but —\nunlike Docutils_' builtin converters, which produce a complete output document\n— it outputs a JSON object in which the document \"frontmatter\" (title,\nsubtitle, bibliographic fields, etc.) has been broken out from the body and\nsplit into multiple fields.  By combining this output with a templating system\nlike Jinja_, the user can perform more powerful & more customizable templating\nthan is possible with Docutils' built-in template support.  Version 0.3.0 even\nintroduces the ability to split apart documents at section boundaries, thereby\nmaking it possible to convert a single input document into multiple output\nfiles.\n\nSample templates that make use of the library's output, along with a sample\napplication for splitting sections into separate files, can be found in\n|exampledir|_.\n\n.. _reStructuredText: https://docutils.sourceforge.io/rst.html\n.. _Docutils: https://docutils.sourceforge.io/\n.. _Jinja: https://palletsprojects.com/p/jinja/\n\n.. |exampledir| replace:: the repository's ``examples/`` directory\n.. _exampledir: https://github.com/jwodder/rst2json/tree/master/examples\n\n\nInstallation\n============\n``rst2json`` requires Python 3.6 or higher.  Just use `pip\n<https://pip.pypa.io>`_ for Python 3 (You have pip, right?) to install\n``rst2json`` and its dependencies::\n\n    python3 -m pip install rst2json\n\n\nCommand-Line Usage\n==================\n\n``rst2json`` provides a single command, also named ``rst2json``, that converts\nan input reStructuredText document to markup organized into a JSON object::\n\n    rst2json [--format <FMT>] [<docutils options>] [<infile> [<outfile>]]\n\nThe target markup format is specified with the ``-f`` or ``--format`` option.\nValid values (case insensitive) are:\n\n``html`` (default)\n   Alias for ``html4``.  When Docutils eventually changes ``rst2html.py`` to\n   produce HTML 5 output instead of HTML 4, this alias will likewise update to\n   point to ``html5``.\n\n``html4``\n   HTML 4 / XHTML 1.0 output, based on the Docutils writer used for\n   ``rst2html4.py``.  A CSS stylesheet (such as the ``html4css1.css``\n   stylesheet distributed with Docutils) must be added to the final document in\n   order for everything to render properly.\n\n``html5``\n   HTML 5 output, based on the Docutils writer used for ``rst2html4.py``.  A\n   CSS stylesheet (such as the ``minimal.css`` and ``plain.css`` stylesheets\n   distributed with Docutils) must be added to the final document in order for\n   everything to render properly.\n\n``latex``\n   LaTeX output, based on the Docutils writer used for ``rst2latex.py``\n\n``latex2e``\n   Alias for ``latex``\n\n``xetex``\n   Alias for ``xelatex``\n\n``xelatex``\n   XeLaTeX output, based on the Docutils writer used for ``rst2xetex.py``\n\nIn addition to the ``--format`` option, the ``rst2json`` command accepts all\noptions that Docutils' ``rst2html4.py``, ``rst2html5.py``, ``rst2latex.py``,\nand ``rst2xetex.py`` commands accept, and it can also be configured via a\n`Docutils configuration file\n<https://docutils.sourceforge.io/docs/user/config.html>`_ the same way as the\nrespective Docutils commands.  Additional ``rst2json``-specific options are\nalso accepted; see \"`Configuration Options`_\" for details.\n\n\nLibrary Usage\n=============\n\nConvenience Function\n--------------------\n\n*New in version 0.2.0*\n\n.. code:: python\n\n    rst2json.core.rst2json(source, format='html', options=None, config_files=None, destination_path=None)\n\n``rst2json`` provides a ``rst2json.core.rst2json()`` function for rendering &\nsplitting reStructuredText into a ``dict`` directly within Python.\n\n``source`` specifies the input reStructuredText markup.  It can be a path to a\nfile (a string), a file-like object (with ``read()`` and ``close()`` methods),\nor a path-like object.\n\n``format`` is a string specifying the markup format to produce.  It has the\nsame set of possible values as the ``--format`` option to the ``rst2json``\ncommand.  Alternatively, it may be set directly to an instance of a Docutils\nwriter class.\n\n``options`` sets values for Docutils settings.  When non-``None``, it must be a\n``dict`` that maps option names to option values.  Option names must be given\nas listed at <https://docutils.sourceforge.io/docs/user/config.html>, i.e., no\nleading hyphens, with internal hyphens replaced with underscores.  Option\nvalues must be of the appropriate Python type, e.g., ``bool`` for on/off\nswitches or ``List[str]`` for comma-separated values.  Both standard Docutils\noptions and the ``rst2json``-specific options listed under \"`Configuration\nOptions`_\" are accepted.\n\n``config_files`` is a list of file paths specifying the Docutils configuration\nfiles to read from; if ``None``, configuration is read from the files specified\nin the ``DOCUTILSCONFIG`` environment variable, or from the standard\nconfiguration files if that is not set.  Settings in configuration files\noverride any conflicting settings given in ``options``.  Note that, when\n``config_files`` is non-``None``, Docutils configuration files *not* in the\nlist will not be read.\n\nStarting in version 0.4.0, if you want to append to the list of config files\ninstead of replacing it, you can call the\n``rst2json.core.get_docutils_config_files()`` function to get a list of config\nfile paths Docutils will read from based on the current environment; simply\nappend your config files to this list and pass the result to ``rst2json()``,\nand all of the files (should they exist) will be read.\n\n``destination_path`` is a path to a file (which need not exist) which\nstylesheet paths in HTML ``<link>`` tags will be rewritten relative to; if\n``None``, the paths are rewritten relative to the current directory.  This\nparameter is only relevant when emitting HTML with ``math_output`` set to\n``html`` with a stylesheet argument.\n\n.. Will also be relevant if stylesheet_path links are ever captured\n\n\nDocutils Writers\n----------------\n\nThe actual rendering & conversion to JSON is done by custom Writer classes\ninheriting from Docutils' built-in Writers.  Users familiar with Docutils can\nuse these Writers directly in combination with other Docutils machinery.\n\nThe ``rst2json.writers.get_json_writer_class()`` function can be used to\nretrieve a specific Writer class by case-insensitive name.  The classes and\ntheir names are as follows:\n\n======================  ===================================\nNames                   Class\n======================  ===================================\n``html``, ``html4``     ``rst2json.writers.html4.Writer``\n``html5``               ``rst2json.writers.html5.Writer``\n``latex``, ``latex2e``  ``rst2json.writers.latex.Writer``\n``xelatex``, ``xetex``  ``rst2json.writers.xelatex.Writer``\n======================  ===================================\n\nEach Writer's ``translate()`` method sets ``writer.json_data`` to the final\nJSON structure as a ``dict`` and sets ``writer.output`` to ``json_data`` as a\nJSON-serialized string.  After ``assemble_parts()`` is then called,\n``writer.parts[\"json_data\"]`` will also equal the JSON ``dict``.\n\n\nConfiguration Options\n=====================\n\nNew Options\n-----------\n\nIn addition to the standard Docutils options, ``rst2json`` accepts the\nfollowing options, both via configuration files and (for the command) via the\ncommand line.  When setting these options via a configuration file, they should\nbe placed in an ``[rst2json]`` section.\n\n``split_section_level``\n~~~~~~~~~~~~~~~~~~~~~~~\n\n*New in version 0.3.0*\n\nSet this option to an integer value.  Setting it to a positive number causes\nthe content body to be split up into an ``\"intro\"`` field (all content before\nthe start of the first section) and a ``\"sections\"`` field (each section\nrepresented as an object).  The sections' subsections are split up as well, up\nto a depth given by the value of ``split_section_level``.  Setting this option\nto zero disables section splitting; setting it to a negative number causes all\nsections at all depths to be split up.\n\nAs an example, consider the following document:\n\n.. code:: restructuredtext\n\n    Text before sections, except after C.\n\n    Section 1\n    =========\n\n    .. _foo:\n\n    Lorem ipsum yadda yadda yadda.\n\n    Section 2\n    =========\n\n    'Twas brillig, and the slithy toves did gyre and gimble in the wabe.\n\n    Section 2.1\n    -----------\n\n    .. _bar:\n\n    All mimsy were the borogoves, and the mome raths outgrabe.\n\n    Section 2.1.1\n    ~~~~~~~~~~~~~\n\n    Beware the Jabberwock, my son!\n\nProcessing this document with ``split_section_level`` set to 1 will produce a\nJSON document in which the ``content`` object's ``body`` field is replaced with\nthe following fields (Some fields have been omitted for brevity):\n\n.. code:: json\n\n    {\n        \"intro\": \"<p>Text before sections, except after C.</p>\",\n        \"sections\": [\n            {\n                \"title\": \"Section 1\",\n                \"ids\": [\"section-1\"],\n                \"depth\": 1,\n                \"body\": \"<p id=\\\"foo\\\">Lorem ipsum yadda yadda yadda.</p>\\n\"\n            },\n            {\n                \"title\": \"Section 2\",\n                \"ids\": [\"section-2\"],\n                \"depth\": 1,\n                \"body\": \"<p>'Twas brillig, and the slithy toves did gyre and gimble in the wabe.</p>\\n<div class=\\\"section\\\" id=\\\"section-2-1\\\">\\n<h2>Section 2.1</h2>\\n<p id=\\\"bar\\\">All mimsy were the borogoves, and the mome raths outgrabe.</p>\\n<div class=\\\"section\\\" id=\\\"section-2-1-1\\\">\\n<h3>Section 2.1.1</h3>\\n<p>Beware the Jabberwock, my son!</p>\\n</div>\\n</div>\"\n            }\n        ]\n    }\n\nProcessing with the option set to 2 causes all top-level sections' bodies to be\nsplit up into ``\"intro\"`` and ``\"sections\"`` like so:\n\n.. code:: json\n\n    {\n        \"intro\": \"<p>Text before sections, except after C.</p>\",\n        \"sections\": [\n            {\n                \"title\": \"Section 1\",\n                \"ids\": [\"section-1\"],\n                \"depth\": 1,\n                \"intro\": \"<p id=\\\"foo\\\">Lorem ipsum yadda yadda yadda.</p>\",\n                \"sections\": []\n            },\n            {\n                \"title\": \"Section 2\",\n                \"ids\": [\"section-2\"],\n                \"depth\": 1,\n                \"intro\": \"<p>'Twas brillig, and the slithy toves did gyre and gimble in the wabe.</p>\",\n                \"sections\": [\n                    {\n                        \"title\": \"Section 2.1\",\n                        \"ids\": [\"section-2-1\"],\n                        \"depth\": 2,\n                        \"body\": \"<p id=\\\"bar\\\">All mimsy were the borogoves, and the mome raths outgrabe.</p>\\n<div class=\\\"section\\\" id=\\\"section-2-1-1\\\">\\n<h3>Section 2.1.1</h3>\\n<p>Beware the Jabberwock, my son!</p>\\n</div>\"\n                    }\n                ]\n            }\n        ]\n    }\n\nSetting the option to 3 will in turn cause the \"Section 2.1\" object to also be\nsplit up, and so forth.\n\nDefault: 0.  Command line option: ``--split-section-level``\n\n\nIgnored Options\n---------------\n\n``rst2json`` ignores the following Docutils configuration options, as they have\nno effect on its operation:\n\n- ``documentoptions``\n- ``latex_preamble``\n- ``stylesheet_path``\n- ``stylesheet``\n- ``template``\n- ``use_latex_abstract``\n- ``use_latex_docinfo``\n\nIn addition, the ``embed_stylesheet`` and ``stylesheet_dirs`` options only have\nan effect when emitting HTML with ``math_output`` set to ``html`` with a\nstylesheet argument.\n\n\nJSON Output Structure\n=====================\n\nThe below description divides strings into the following types:\n\n- A *rendered string* is a string containing markup in the target format (HTML\n  or LaTeX).  Rendered strings are stripped of leading & trailing newlines.\n\n- A *stripped string* is a string in which characters with special meaning to\n  the format are escaped but all other markup has been removed; in addition,\n  in stripped strings with corresponding rendered strings, newlines and tabs\n  are replaced with space characters.\n\n  For example, under HTML, if ``content.title`` is ``\"<i>War &amp;\n  Peace</i>\"``, then ``content.title_stripped`` would be ``\"War &amp; Peace\"``.\n\n- Unqualified (neither rendered nor stripped) strings are expected to never\n  contain any special characters.\n\n----\n\nThe output from ``rst2json`` is a JSON object containing the following fields:\n\n``content`` : object\n   The input document converted to the target format and broken up into the\n   following fields:\n\n   ``title`` : rendered string or ``null``\n      The document title, derived from a lone top-level section title if\n      |doctitle_xform|_ is enabled, or ``null`` if no title was specified or\n      ``doctitle_xform`` was not enabled.\n\n   ``subtitle`` : rendered string or ``null``\n      The document subtitle, derived from a lone second-level section title\n      after the document title if |doctitle_xform|_ is enabled, or ``null`` if\n      no subtitle was specified or ``doctitle_xform`` was not enabled.\n\n   ``title_stripped`` : stripped string or ``null``\n      The ``title`` field, but with non-escaping markup removed.  This field\n      can be used to populate an HTML document's ``<title>`` tag.\n\n   ``subtitle_stripped`` : stripped string or ``null``\n      The ``subtitle`` field, but with non-escaping markup removed.  This field\n      can be used to populate an HTML document's ``<title>`` tag.\n\n   ``document_ids`` : list of strings\n      A list of all IDs assigned to the parsed ``document`` node.  Such IDs\n      should be attached to the topmost or near-topmost structure of the final\n      templated document using HTML's ``id`` attribute or (Xe)LaTeX's\n      ``\\label`` command.\n\n   ``document_classes`` : list of strings\n      A list of classes attached to the parsed ``document`` node.\n\n   ``subtitle_ids`` : list of strings\n      A list of all IDs assigned to the document subtitle, or the empty list if\n      the document does not have a subtitle.  Such IDs should be attached to\n      the templated subtitle using HTML's ``id`` attribute or (Xe)LaTeX's\n      ``\\label`` command.\n\n   ``subtitle_classes`` : list of strings\n      A list of classes attached to the document subtitle, or the empty list if\n      the document does not have a subtitle.\n\n   ``authors`` : list of rendered strings\n      A list of all authors specified in the ``:Author:`` and/or ``:Authors:``\n      `bibliographic fields`_, in the order that they appear in the input.\n\n   ``header`` : rendered string or ``null``\n      The rendered contents of the ``header::`` directive from the document, or\n      ``null`` if there was no such directive.  Markup for using it as a header\n      is not included.\n\n   ``footer`` : rendered string or ``null``\n      The rendered contents of the ``footer::`` directive from the document, or\n      ``null`` if there was no such directive.  Markup for using it as a footer\n      is not included.\n\n   ``docinfo`` : list of objects\n      The document's `bibliographic fields`_ (excluding the dedication &\n      abstract) in the order that they appear in the input, each one\n      represented as an object with the following fields:\n\n      ``type`` : string\n         For registered fields, this is the name of the Docutils node class\n         that represents the field — i.e., the English name of the field in\n         lowercase (e.g., ``\"author\"``).  For unregistered fields, this is the\n         string ``\"field\"``.\n\n      ``name`` : rendered string\n         For registered fields, this is the name of the field in the document's\n         language (e.g., ``\"Author\"``).  For unregistered fields, this is the\n         name of the field as it appears in the input.\n\n      ``value``\n         When ``type`` is ``\"authors\"`` (plural), this is a list of author\n         names as rendered strings.  For all other values of ``type``, this is\n         a rendered string.\n\n         Note that, when ``type`` is ``\"address\"``, whitespace in ``value`` is\n         significant, and ``value`` should be wrapped in ``<pre>`` tags or\n         similar.\n\n      ``value_stripped``\n         The ``value`` field, but with non-escaping markup removed.  When\n         ``type`` is ``\"authors\"`` (plural), this is a list of stripped\n         strings.  For all other values of ``type``, this is a stripped string.\n         This field can be used to populate the ``content`` attribute of a\n         ``<meta>`` tag.\n\n      ``classes`` : list of strings\n         A list of classes attached to the field.  Normally, for registered\n         fields, this list is empty, while for unregistered fields it contains\n         a single element equal to the field name converted to a valid class\n         token.  This field can be used to set the CSS class of the HTML\n         structure that contains the rendered field.\n\n   ``abstract`` : rendered string or ``null``\n      The rendered contents of the document's ``:Abstract:`` field, or ``null``\n      if there was no such field.  The abstract title and enclosing block are\n      not included.\n\n   ``dedication`` : rendered string or ``null``\n      The rendered contents of the document's ``:Dedication:`` field, or\n      ``null`` if there was no such field.  The dedication title and enclosing\n      block are not included.\n\n   ``body`` : rendered string\n      The rendered contents of the rest of the document after the frontmatter.\n      This field is only present if ``split_section_level`` (See\n      \"`Configuration Options`_\") is 0.\n\n   ``intro`` : rendered string\n      The rendered content after the frontmatter, but before the first section.\n      This field is only present if ``split_section_level`` is not 0.\n\n   ``sections`` : list of objects\n      A list of the top-level sections of the document, each one represented as\n      an object with the below fields.  This field is only present if\n      ``split_section_level`` is not 0.\n\n      ``title`` : rendered string\n         The section title\n\n      ``subtitle`` : rendered string or ``null``\n         The section subtitle, derived from a lone second-level title after the\n         section title if |sectsubtitle_xform|_ is enabled, or ``null`` if no\n         subtitle was specified or ``sectsubtitle_xform`` was not enabled.\n\n      ``title_stripped`` : stripped string\n         The ``title`` field, but with non-escaping markup removed\n\n      ``subtitle_stripped`` : stripped string or ``null``\n         The ``subtitle`` field, but with non-escaping markup removed\n\n      ``ids`` : list of strings\n         A list of all IDs assigned to the parsed ``section`` node.\n\n      ``classes`` : list of strings\n         A list of classes attached to the parsed ``section`` node.\n\n      ``subtitle_ids`` : list of strings\n         A list of all IDs assigned to the section subtitle, or the empty list\n         if the section does not have a subtitle.\n\n      ``subtitle_classes`` : list of strings\n         A list of classes attached to the section subtitle, or the empty list\n         if the section does not have a subtitle.\n\n      ``toc_backref`` : string or ``null``\n         If this section is listed in a table of contents with backlinks, this\n         field will equal the ID of the location in the table of contents that\n         the backlink should point to; otherwise, it will be ``null``.  If the\n         section is listed in more than one table of contents with backlinks,\n         which value ends up in this field is Docutils-implementation-defined.\n\n      ``number`` : stripped string or ``null``\n         The section number as generated by the ``sectnum::`` directive, or\n         ``null`` if no section number was generated for the section.\n\n      ``depth`` : integer\n         The depth of the section: 1 for a top-level section, 2 for a\n         subsection, 3 for a sub-subsection, etc.\n\n      ``body`` : rendered string\n         The rendered contents of the section.  This field is only present if\n         ``split_section_level`` is equal to the section depth.\n\n      ``intro`` : rendered string\n         The rendered content of the section before the first subsection.  This\n         field is only present if ``split_section_level`` is negative or\n         greater than the section depth.\n\n      ``sections`` : list of objects\n         A list of the top-level subsections of this section, each one\n         represented as an object with the same schema as\n         ``content.sections[]``.  This field is only present if\n         ``split_section_level`` is negative or greater than the section depth.\n\n      ``trailing_transition`` : object or ``null``\n         If there is a transition between this section and the next one, this\n         field will be an object with the fields ``ids`` (a list of IDs\n         assigned to the transition) and ``classes`` (a list of classes\n         assigned to the transition); otherwise, this field will be ``null``.\n         Note that, in a parsed document tree, inter-section transitions only\n         ever occur between consecutive sections of the same depth.\n\n   **Note**: As far as the author of this library can determine, it is not\n   possible for a reStructuredText document to produce a doctree in which the\n   document title, docinfo, header, footer, abstract, dedication, or section\n   title nodes have any IDs or classes, nor for any docinfo field nodes to have\n   any IDs.  ``rst2json`` thus does not output any fields for such values.\n\n``meta`` : object\n   A dictionary of data about the input document and the ``rst2json`` process,\n   containing the following fields:\n\n   ``format`` : string\n      The name of the target markup format: ``\"html4\"``, ``\"html5\"``,\n      ``\"latex\"``, or ``\"xelatex\"``.\n\n   ``split_section_level`` : integer\n      The value set for the ``split_section_level`` option (See\n      \"`Configuration Options`_\").  Negative values are converted to -1.\n\n   ``title`` : stripped string or ``null``\n      The document's metadata title.  By default, this is equal to\n      ``content.title_stripped``, but it can be overridden by a ``title::``\n      directive or the ``title`` configuration option.  If none of these are\n      set, the field is ``null``.\n\n      Note that, if the title is set via the ``title::`` directive or ``title``\n      configuration option, any reStructuredText markup in it will not be\n      processed (though characters special to the output format will still be\n      escaped).  For example, including ``.. title:: *War & Peace*`` in your\n      input document will (when outputting HTML) produce a ``meta.title`` value\n      of ``\"*War &amp; Peace*\"``, with the asterisks left as-is and the\n      ampersand escaped.\n\n   ``source`` : stripped string\n      The name of/path to the input file.  If no name can be determined, then\n      this will be the empty string.\n\n   ``language`` : string\n      The language code for the document language, as set via the\n      |language_code|_ configuration option\n\n   ``docutils_version`` : string\n      The version of Docutils used to produce the output\n\n   ``rst2json_version`` : string\n      The version of ``rst2json`` used to produce the output\n\n   ``generator`` : stripped string\n      A string of the form ``\"rst2json {version} ({url}), Docutils {version}\n      ({url})\"``\n\n``html`` : object\n   A dictionary of strings to insert in the head of the final HTML document.\n   This object only appears in the output when the target format is HTML4 or\n   HTML5.  The fields of the dictionary are as follows:\n\n   ``math_requires`` : rendered string\n      If the input document contains any ``math::`` directives or ``:math:``\n      roles, this is a string containing the appropriate markup to add to the\n      HTML document head in order to support them; if there are no such\n      directives or roles, this is the empty string.\n\n      When set, the value of this field is determined by the |math_output|_\n      configuration option.  When set to ``html``, it is either a ``<link>``\n      tag or a ``<style>`` block (as determined by the |embed_stylesheet|_\n      configuration option) enabling the stylesheet passed as the option\n      argument; when set to ``mathjax``, it is a ``<script>`` tag pointing to\n      the path or URL passed as the option argument.  When ``math_output`` is\n      ``mathml`` or ``latex``, the ``math_requires`` field is the empty string,\n      as nothing needs to be added to the HTML document.\n\n   ``meta_tags`` : rendered string\n      A string containing any & all ``<meta>`` tags added to the document with\n      the ``meta::`` directive.  If no ``meta::`` directives were given, this\n      is the empty string.\n\n``latex`` : object\n   A dictionary of strings to insert in the preamble of the final (Xe)LaTeX\n   document.  This object only appears in the output when the target format is\n   LaTeX or XeLaTeX.  The fields of the dictionary are as follows:\n\n   ``language`` : string\n      The name of the document language (set via the |language_code|_\n      configuration option) in a form recognized by Babel.  If Docutils does\n      not recognize the language, this will be the empty string.  Note that,\n      when the language is not English, ``latex.requirements`` will already\n      contain the appropriate ``\\usepackage[LANGUAGE]{babel}`` command; the\n      purpose of this field is to be able to set the language in the document\n      options.\n\n   ``requirements`` : rendered string\n      Required packages and setup, mostly consisting of ``\\includepackage``\n      commands needed for the markup in ``content.body``.  In a templated\n      (Xe)LaTeX document, this should be placed near the beginning of the\n      preamble.\n\n   ``fallbacks`` : rendered string\n      Fallback definitions (declared with ``\\providecommand*``) for the various\n      custom commands that Docutils uses in the body.  These definitions can be\n      overridden by defining commands of the same name in the preamble before\n      ``latex.fallbacks`` occurs.  In a templated (Xe)LaTeX document, this\n      should be placed after ``latex.requirements`` and after any custom\n      preamble commands.\n\n   ``pdfsetup`` : rendered string\n      Inclusion & setup of the ``hyperref`` package.  In a templated (Xe)LaTeX\n      document, this should be placed at the end of the preamble.\n\n``system_messages`` : list of objects\n   A list of system messages generated during processing of the input document.\n   Normally, system messages are embedded in the output in addition to being\n   reported to stderr, but ``rst2json`` removes them from the body and places\n   them in this list.  Each system message is represented as an object with the\n   following fields:\n\n   ``level`` : integer\n      The system message level as an integer from 0 (least severe) through 4\n      (most severe)\n\n   ``type`` : string\n      The name of the system message level.  The names and corresponding\n      integer values of the system message levels are as follows:\n\n      ===========  =========\n      ``type``     ``level``\n      ===========  =========\n      ``DEBUG``    0\n      ``INFO``     1\n      ``WARNING``  2\n      ``ERROR``    3\n      ``SEVERE``   4\n      ===========  =========\n\n   ``source`` : stripped string\n      The name of the input file in which the message was generated.  If no\n      name can be determined, then this will be the empty string.\n\n   ``line`` : integer or ``null``\n      The line of the input file at which the message was generated, or\n      ``null`` if it cannot be determined\n\n   ``body`` : rendered string\n      The message itself\n\n   ``ids`` : list of strings\n      The IDs of the ``system_message`` node.  If the parsed document tree\n      contains a ``problematic`` node enclosing the markup that generated the\n      system message, the rendered ``problematic`` node will link to this\n      system message by targeting an ID in ``ids``.\n\n      If the system message is included in the templated document, the IDs\n      should be attached to the structure using HTML's ``id`` attribute or\n      (Xe)LaTeX's ``\\label`` command.\n\n   ``backrefs`` : list of strings\n      If the parsed document tree contains a ``problematic`` node enclosing the\n      markup that generated the system message, ``backrefs`` will contain the\n      rendered ``problematic`` node's IDs, usable for creating an\n      intra-document link.\n\n``id_sections`` : object\n   This object only appears in the output when ``split_section_level`` (See\n   \"`Configuration Options`_\") is not 0.  It is a map in which each key is an\n   ID appearing in the rendered document body and the corresponding value is\n   the first ID of the deepest split-section object in which the key ID occurs.\n   IDs of inter-section transitions are mapped to the ID of the section in\n   whose ``trailing_transition`` field they are stored.  IDs that appear in\n   ``content.intro`` are mapped to the special string ``\"$intro\"``.  IDs of\n   top-level sections are not included as keys in this map, but IDs of deeper\n   sections are.\n\n   This field can be used to rewrite inter-document links when the output is\n   used to create a separate templated document for each section.\n\n   As an example, consider the following document:\n\n   .. code:: restructuredtext\n\n       Section 1\n       =========\n\n       .. _foo:\n\n       Lorem ipsum yadda yadda yadda.\n\n       Section 2\n       =========\n\n       'Twas brillig, and the slithy toves did gyre and gimble in the wabe.\n\n       Section 2.1\n       -----------\n\n       .. _bar:\n\n       All mimsy were the borogoves, and the mome raths outgrabe.\n\n       Section 2.1.1\n       ~~~~~~~~~~~~~\n\n       Beware the Jabberwock, my son!\n\n   If this is processed with a ``split_section_level`` of 1, then\n   ``id_sections`` will look like:\n\n   .. code:: json\n\n       {\n           \"foo\": \"section-1\",\n           \"section-2-1\": \"section-2\",\n           \"bar\": \"section-2\",\n           \"section-2-1-1\": \"section-2\"\n       }\n\n\n   If this is processed with a ``split_section_level`` of 2, then\n   ``id_sections`` will look like:\n\n   .. code:: json\n\n       {\n           \"foo\": \"section-1\",\n           \"section-2-1\": \"section-2\",\n           \"bar\": \"section-2-1\",\n           \"section-2-1-1\": \"section-2-1\"\n       }\n\n   Increasing ``split_section_level`` beyond this point or making it negative\n   will not have any further effect.\n\n\n.. |doctitle_xform| replace:: ``doctitle_xform``\n.. _doctitle_xform: https://docutils.sourceforge.io/docs/user/config.html#doctitle-xform\n\n.. |sectsubtitle_xform| replace:: ``sectsubtitle_xform``\n.. _sectsubtitle_xform: https://docutils.sourceforge.io/docs/user/config.html#sectsubtitle-xform\n\n.. _bibliographic fields: https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html#bibliographic-fields\n\n.. |math_output| replace:: ``math_output``\n.. _math_output: https://docutils.sourceforge.io/docs/user/config.html#math-output\n\n.. |embed_stylesheet| replace:: ``embed_stylesheet``\n.. _embed_stylesheet: https://docutils.sourceforge.io/docs/user/config.html#embed-stylesheet\n\n.. |language_code| replace:: ``language_code``\n.. _language_code: https://docutils.sourceforge.io/docs/user/config.html#language-code\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jwodder/rst2json",
    "keywords": "JSON,docutils,reStructuredText,template,templating",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rst2json",
    "package_url": "https://pypi.org/project/rst2json/",
    "platform": "",
    "project_url": "https://pypi.org/project/rst2json/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jwodder/rst2json/issues",
      "Homepage": "https://github.com/jwodder/rst2json",
      "Source Code": "https://github.com/jwodder/rst2json"
    },
    "release_url": "https://pypi.org/project/rst2json/0.5.0/",
    "requires_dist": [
      "docutils (>=0.18.1)",
      "morecontext (~=0.2)"
    ],
    "requires_python": "~=3.6",
    "summary": "Split rendered reStructuredText into JSON",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12699382,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ff10e29948beaf756b094344e11b1283139d07ea72d2edf75c2560f61f95062",
          "md5": "5a3584314f6868d9b3bdc6712ff40ba9",
          "sha256": "9e1fe1f040b152ff0dec4bcb933243141f77bb54c2b976527403eef69b3cccd6"
        },
        "downloads": -1,
        "filename": "rst2json-0.1.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "5a3584314f6868d9b3bdc6712ff40ba9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 17766,
        "upload_time": "2020-07-10T23:37:07",
        "upload_time_iso_8601": "2020-07-10T23:37:07.638854Z",
        "url": "https://files.pythonhosted.org/packages/6f/f1/0e29948beaf756b094344e11b1283139d07ea72d2edf75c2560f61f95062/rst2json-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de74aba0e8469c67bc57220363ff8f0b03748603ac07c9184f265f45cfa83986",
          "md5": "39a43b79ca7ac478191668022596e7e5",
          "sha256": "33c514d2c5b6ff587bb18f29e2be133c1afbca35259ae0bf96e104da4b560bee"
        },
        "downloads": -1,
        "filename": "rst2json-0.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "39a43b79ca7ac478191668022596e7e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 104747,
        "upload_time": "2020-07-10T23:37:09",
        "upload_time_iso_8601": "2020-07-10T23:37:09.968316Z",
        "url": "https://files.pythonhosted.org/packages/de/74/aba0e8469c67bc57220363ff8f0b03748603ac07c9184f265f45cfa83986/rst2json-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68e715f2caeecc22265bd23f545462925b49d96f1225dbc574990f61f492df06",
          "md5": "ea2c4a1a2c0ec5b60bd7dd2aaad96f99",
          "sha256": "6a836c386036061104d2655b55f314344ec578e1b1348401ab4d5c53ea2a98c2"
        },
        "downloads": -1,
        "filename": "rst2json-0.2.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "ea2c4a1a2c0ec5b60bd7dd2aaad96f99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 20022,
        "upload_time": "2020-07-11T22:32:15",
        "upload_time_iso_8601": "2020-07-11T22:32:15.953261Z",
        "url": "https://files.pythonhosted.org/packages/68/e7/15f2caeecc22265bd23f545462925b49d96f1225dbc574990f61f492df06/rst2json-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "938e3e5679e12908b8b4fbc8fd4aac0206b3344d3f09032c1ee31f4708bbfefb",
          "md5": "a62616f6458791b123b6c0ff776781e6",
          "sha256": "73ff9039842775a68551979e556e138307d451329a9c0c8925feec25a2deeb49"
        },
        "downloads": -1,
        "filename": "rst2json-0.2.0.tar.gz",
        "has_sig": true,
        "md5_digest": "a62616f6458791b123b6c0ff776781e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 110554,
        "upload_time": "2020-07-11T22:32:17",
        "upload_time_iso_8601": "2020-07-11T22:32:17.355976Z",
        "url": "https://files.pythonhosted.org/packages/93/8e/3e5679e12908b8b4fbc8fd4aac0206b3344d3f09032c1ee31f4708bbfefb/rst2json-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6eb4f9f3107853c79b30a25b06028fb4624285840250806aeaa8d729d9ff1d7",
          "md5": "162bfad7ed1dce28e6b8a2c688ebfe18",
          "sha256": "f0f309e284aa3b0342d15bcb07cbfe65bfe8ef3037683a412ddd296f33841007"
        },
        "downloads": -1,
        "filename": "rst2json-0.2.0.post1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "162bfad7ed1dce28e6b8a2c688ebfe18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 20109,
        "upload_time": "2020-07-11T22:41:22",
        "upload_time_iso_8601": "2020-07-11T22:41:22.682115Z",
        "url": "https://files.pythonhosted.org/packages/f6/eb/4f9f3107853c79b30a25b06028fb4624285840250806aeaa8d729d9ff1d7/rst2json-0.2.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df2fa7b9651d8bbc51a95a1ca5e056019cd1c3ff8820cb237d71b8c29f913234",
          "md5": "ed187e4f5e140349058a0df04741af62",
          "sha256": "bceb87937ed53cd7beb5be6e5f334572c03b038fef79ce6e5706420a673f39ed"
        },
        "downloads": -1,
        "filename": "rst2json-0.2.0.post1.tar.gz",
        "has_sig": true,
        "md5_digest": "ed187e4f5e140349058a0df04741af62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 110541,
        "upload_time": "2020-07-11T22:41:24",
        "upload_time_iso_8601": "2020-07-11T22:41:24.100735Z",
        "url": "https://files.pythonhosted.org/packages/df/2f/a7b9651d8bbc51a95a1ca5e056019cd1c3ff8820cb237d71b8c29f913234/rst2json-0.2.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e2fb13cbe114854f914d84361c90c11cc2e337924e7028871f310553368c1b4",
          "md5": "256554d80e43efbf1b100cb6ae6c9383",
          "sha256": "dbdf10a1aa107711e602550f18cb87223bb224a2d3db78341ed3764e0c1f5bc8"
        },
        "downloads": -1,
        "filename": "rst2json-0.3.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "256554d80e43efbf1b100cb6ae6c9383",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 24369,
        "upload_time": "2020-07-14T22:07:02",
        "upload_time_iso_8601": "2020-07-14T22:07:02.411068Z",
        "url": "https://files.pythonhosted.org/packages/2e/2f/b13cbe114854f914d84361c90c11cc2e337924e7028871f310553368c1b4/rst2json-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abc1f303fa9a1d40faae6a5a11edcb30ab521b09edefef5ca907663cb9d6235e",
          "md5": "e1326ab82776212eed268a1508c35409",
          "sha256": "228c8ea61584c5319f92d62e001cdfde2b313734b947460e10f10655f24ce515"
        },
        "downloads": -1,
        "filename": "rst2json-0.3.0.tar.gz",
        "has_sig": true,
        "md5_digest": "e1326ab82776212eed268a1508c35409",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 163158,
        "upload_time": "2020-07-14T22:07:04",
        "upload_time_iso_8601": "2020-07-14T22:07:04.148717Z",
        "url": "https://files.pythonhosted.org/packages/ab/c1/f303fa9a1d40faae6a5a11edcb30ab521b09edefef5ca907663cb9d6235e/rst2json-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cc1fb0c48023e0eaf69db1af0baf05913aec7a28ec086d27ba45456fe6ad718",
          "md5": "4b4549a41509d9a2db27be70fde3abe7",
          "sha256": "4b368d8b533d787d5e990134c452a2e80f87e142a5845ddae0386fa40be96898"
        },
        "downloads": -1,
        "filename": "rst2json-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b4549a41509d9a2db27be70fde3abe7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 24881,
        "upload_time": "2021-06-06T17:51:06",
        "upload_time_iso_8601": "2021-06-06T17:51:06.838517Z",
        "url": "https://files.pythonhosted.org/packages/6c/c1/fb0c48023e0eaf69db1af0baf05913aec7a28ec086d27ba45456fe6ad718/rst2json-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ba86bb40c02e1bff5abcdf7d2b2c253dae3318c96fa91b0e0e5074d4b5a6a9c",
          "md5": "81b32ee910fe9682080baf09fc2ae5c7",
          "sha256": "5b873bc5dddfdd014238c3e4a63bbcde98dc2df72796a74f547a9301835e57b1"
        },
        "downloads": -1,
        "filename": "rst2json-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "81b32ee910fe9682080baf09fc2ae5c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 157432,
        "upload_time": "2021-06-06T17:51:08",
        "upload_time_iso_8601": "2021-06-06T17:51:08.824133Z",
        "url": "https://files.pythonhosted.org/packages/3b/a8/6bb40c02e1bff5abcdf7d2b2c253dae3318c96fa91b0e0e5074d4b5a6a9c/rst2json-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e42250b067edddcb9c452f1466658a7688c76c5aba3813be03e7768d7cf0a97",
          "md5": "0fd7fa7119be27a23ea9d19f1379266c",
          "sha256": "99f2cce63cca88ee9df1f58ff5ca8b816bd797576b2bc8bd4b79f9a53fc76229"
        },
        "downloads": -1,
        "filename": "rst2json-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0fd7fa7119be27a23ea9d19f1379266c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 24853,
        "upload_time": "2022-01-26T14:53:04",
        "upload_time_iso_8601": "2022-01-26T14:53:04.618403Z",
        "url": "https://files.pythonhosted.org/packages/3e/42/250b067edddcb9c452f1466658a7688c76c5aba3813be03e7768d7cf0a97/rst2json-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3439a2d40e98d5f8b878f92b1d3df3de4b50b2542c5c51f15d22f9bb58a924d4",
          "md5": "e51161258413fceabcc233d09d6e3c42",
          "sha256": "ee0b273074d25b8c09994edb01ccddc3660a735fd48e676644fb353b8d82df53"
        },
        "downloads": -1,
        "filename": "rst2json-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e51161258413fceabcc233d09d6e3c42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.6",
        "size": 160059,
        "upload_time": "2022-01-26T14:53:06",
        "upload_time_iso_8601": "2022-01-26T14:53:06.616894Z",
        "url": "https://files.pythonhosted.org/packages/34/39/a2d40e98d5f8b878f92b1d3df3de4b50b2542c5c51f15d22f9bb58a924d4/rst2json-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e42250b067edddcb9c452f1466658a7688c76c5aba3813be03e7768d7cf0a97",
        "md5": "0fd7fa7119be27a23ea9d19f1379266c",
        "sha256": "99f2cce63cca88ee9df1f58ff5ca8b816bd797576b2bc8bd4b79f9a53fc76229"
      },
      "downloads": -1,
      "filename": "rst2json-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0fd7fa7119be27a23ea9d19f1379266c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 24853,
      "upload_time": "2022-01-26T14:53:04",
      "upload_time_iso_8601": "2022-01-26T14:53:04.618403Z",
      "url": "https://files.pythonhosted.org/packages/3e/42/250b067edddcb9c452f1466658a7688c76c5aba3813be03e7768d7cf0a97/rst2json-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3439a2d40e98d5f8b878f92b1d3df3de4b50b2542c5c51f15d22f9bb58a924d4",
        "md5": "e51161258413fceabcc233d09d6e3c42",
        "sha256": "ee0b273074d25b8c09994edb01ccddc3660a735fd48e676644fb353b8d82df53"
      },
      "downloads": -1,
      "filename": "rst2json-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e51161258413fceabcc233d09d6e3c42",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.6",
      "size": 160059,
      "upload_time": "2022-01-26T14:53:06",
      "upload_time_iso_8601": "2022-01-26T14:53:06.616894Z",
      "url": "https://files.pythonhosted.org/packages/34/39/a2d40e98d5f8b878f92b1d3df3de4b50b2542c5c51f15d22f9bb58a924d4/rst2json-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}