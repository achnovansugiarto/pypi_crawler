{
  "info": {
    "author": "PyePAL authors",
    "author_email": "kevin.jablonka@epfl.ch, brian.yoo@basf.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<p align=\"center\">\n <img src=\"pyepal_logo.png\" />\n</p>\n\n|                            ||\n| -------------------------- ||\n| Continuous integration      | ![Python package](https://github.com/kjappelbaum/pyepal/workflows/Python%20package/badge.svg) ![pre-commit](https://github.com/kjappelbaum/pyepal/workflows/pre-commit/badge.svg)                                                                                                                                                                                                                                                                                                                                                                                                       |\n| Code health                | [![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://GitHub.com/Naereen/StrapDown.js/graphs/commit-activity) [![Maintainability](https://api.codeclimate.com/v1/badges/db9b3f21528574dfb141/maintainability)](https://codeclimate.com/github/kjappelbaum/pyepal/maintainability) [![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/kjappelbaum/pyepal.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/kjappelbaum/pyepal/context:python) ![GitHub last commit](https://img.shields.io/github/last-commit/kjappelbaum/pyepal) [![codecov](https://codecov.io/gh/kjappelbaum/pyepal/branch/master/graph/badge.svg?token=BL2CF4HQ06)](https://codecov.io/gh/kjappelbaum/pyepal)|\n| Documentation and tutorial | [![Documentation Status](https://readthedocs.org/projects/pyepal/badge/?version=latest)](https://pyepal.readthedocs.io/en/latest/?badge=latest) [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/kjappelbaum/pyepal/HEAD?filepath=examples)                                                                                                                                                                                                                                                                                                                  |\n| Social                     | [![Gitter](https://badges.gitter.im/kjappelbaum/pyepal.svg)](https://gitter.im/kjappelbaum/pyepal?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| Python                     | ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pyepal) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)                                                                                                                                                                                                                                                                                                                                                                                                |\n| License                    | [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| [Citation](#citation) |[![Paper DOI](https://img.shields.io/badge/DOI-10.26434/chemrxiv.13200197.v1-blue.svg)](https://chemrxiv.org/articles/preprint/Bias_Free_Multiobjective_Active_Learning_for_Materials_Design_and_Discovery/13200197) [![Zenodo archive](https://zenodo.org/badge/253408969.svg)](https://zenodo.org/badge/latestdoi/253408969) |\n\n\nGeneralized Python implementation of a modified version of the Îµ-PAL algorithm [[1](#1), [2](#2)].\n\nFor more detailed docs [go here](https://pyepal.readthedocs.io/en/latest/?badge=latest).\n\n## Installation\n\nTo install the latest stable release use\n\n```(bash)\npip install pyepal\n```\n\nto install the latest development version from the head use\n\n```(bash)\npip install git+https://github.com/kjappelbaum/pyepal.git\n```\n\nDevelopers can install the extras `[testing, docs, pre-commit]`. Installation should take only a few minutes.\n\n### Additional Notes\n\n- On MacOS you might need to install `libomp` (e.g., `brew install libomp`) for multithreading in some of the models.\n\n- We currently support Python 3.7 and 3.8.\n\n\n## Usage\n\nThe main logic is implemented in the `PALBase` class. There are some prebuilt classes for common use cases (`GPy`, `sklearn`) that inherit from this class.\nFor more details about how to use the code and notes about the tutorials [see the docs](https://kjappelbaum.github.io/pyepal/).\n\n### Pre-Built classes\n\n#### scikit-learn\n\nIf you want to use a list of [sklearn](https://scikit-learn.org/stable/index.html) models, you can use the `PALSklearn` class. To use it for one step,\nyou can follow the following code snippet. The basic principle is the same for all the different `PAL` classes.\n\n```python\nfrom pyepal import PALSklearn\nfrom sklearn.gaussian_process import GaussianProcessRegressor\nfrom sklearn.gaussian_process.kernels import RBF, Matern\n\n# For each objective, initialize a model\ngpr_objective_0 = GaussianProcessRegressor(RBF())\ngpr_objective_1 = GaussianProcessRegressor(RBF())\n\n# The minimal input to create a PAL instance is a list of models,\n# the design space (X, in ML terms \"feature matrix\") and the number of objectives\npalsklearn_instance = PALSklearn(X, [gpr_objective_0, gpr_objective_1], 2)\n\n# the next step is to provide some initial measurements.\n# You can do this with the update_train_set function, which you\n# can use throughout the active learning process to update the training set.\n# For this, provide a numpy array of indices in your design space\n# and the corresponding measurements\nsampled_indices = np.array([1,2,3])\nmeasurements = np.array([[1,2],\n                        [0.8, 1],\n                        [7,1]])\npalsklearn_instance.update_train_set(sampled_indices, measurements)\n\n# Now, you're ready to run the first iteration.\n# This will return the next index to sample and update all the attributes\n# If there are no unclassified samples left, it will return None and\n# print a statement saying that the classification is completed\nindex_to_sample = palsklearn_instance.run_one_step()\n```\n\n#### GPy\n\nIf you want to use a list of [GPy](https://sheffieldml.github.io/GPy/) models, you can use the `PALGPy` class.\n\n#### Coregionalized GPR\n\nCoregionalized GPR models can utilize correlations between the objectives and also work in the cases in which some of the objectives are not measured for all samples.\n\n### Custom classes\n\nYou will need to implement the `_train()` and `_predict()` functions if you inherit from `PALBase`. If you want to tune the hyperparameters of your models while new training points are added, you can implement a schedule by setting the `_should_optimize_hyperparameters()` function and the `_set_hyperparameters()` function, which sets the hyperparameters for the model(s).\n\nIf you need to train a model, use `self.design_space` as the feature matrix and `self.y` as the target vector. Note that in `self.y` all objectives are turned into maximization problems. That is, if one of your problems is a minimization problem, PyePAL will flip its sign in `self.y`.\n\nA basic example of how a custom class can be implemented is the `PALSklearn` class:\n\n```python\nclass PALSklearn(PALBase):\n    \"\"\"PAL class for a list of Sklearn (GPR) models, with one model per objective\"\"\"\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n        validate_number_models(self.models, self.ndim)\n\n    def _train(self):\n        for i, model in enumerate(self.models):\n            model.fit(self.design_space[self.sampled], self.y[self.sampled, i].reshape(-1,1))\n\n    def _predict(self):\n        means, stds = [], []\n        for model in self.models:\n            mean, std = model.predict(self.design_space, return_std=True)\n            means.append(mean.reshape(-1, 1))\n            stds.append(std.reshape(-1, 1))\n\n        self.means = np.hstack(mean)\n        self.std = np.hstack(stds)\n```\n\nFor scheduling of the hyperparameter optimization, we have some predefined schedules in the `pyepal.pal.schedules` module.\n\n### Test the algorithms\n\nIf the full design space is known, you can use a while loop to fully explore the space with PyePAL.\nFor the theoretical guarantees of PyePAL to hold, you'll need to sample until all uncertainties are below epsilon. In practice, it is usually enough to require as a termination criterion that there are no unclassified samples left. For this you can use the following snippet\n\n```python\nfrom pyepal.utils import exhaust_loop\nfrom pyepal.models.gpr import build_model\n\n# indices for initialization\nsample_idx = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 50, 60, 70])\n\n# build one model per objective\nmodel_0 = build_model(X[sample_idx], y[sample_idx], 0)\nmodel_1 = build_model(X[sample_idx], y[sample_idx], 1)\n\n# initialize the PAL instance\npalinstance = PALGPy(X, [model_0, model_1], 2, beta_scale=1)\npalinstance.update_train_set(sample_idx, y[sample_idx])\n\n# This will run the sampling and training as long as there\n# are unclassified samples\nexhaust_loop(palinstance, y)\n```\n\nTo measure the performance, you can use the `get_hypervolume` function from `pyepal.pal.utils`. More indicators are implemented in packages like [deap](https://github.com/DEAP/deap), [pagmo](https://github.com/esa/pagmo), or [pymoo](https://github.com/msu-coinlab/pymoo/tree/master).\n\n## References\n\n1. <a name=\"1\"></a> Zuluaga, M.; Krause, A.; PÃ¼schel, M. E-PAL: An Active Learning Approach to the Multi-Objective Optimization Problem. Journal of Machine Learning Research 2016, 17 (104), 1â32.\n2. <a name=\"2\"></a> Zuluaga, M.; Sergent, G.; Krause, A.; PÃ¼schel, M. Active Learning for Multi-Objective Optimization; Dasgupta, S., McAllester, D., Eds.; Proceedings of machine learning research; PMLR: Atlanta, Georgia, USA, 2013; Vol. 28, pp 462â470.\n\n## Citation\n<a name=\"citation\"></a>\n\nIf you find this code useful for your work, please cite:\n\n- Our paper that describes the implementation and an application to materials discovery: [Jablonka, K. M.; Giriprasad, M. J.; Wang, S.; Smit, B.; Yoo, B. Bias Free Multiobjective Active Learning for Materials Design and Discovery, ChemRxiv 2020 (10.26434/chemrxiv.13200197.v1).](https://chemrxiv.org/articles/preprint/Bias_Free_Multiobjective_Active_Learning_for_Materials_Design_and_Discovery/13200197)\n\n- The original paper that describes the Îµ-PAL algorithm: [Zuluaga, M.; Krause, A.; PÃ¼schel, M. E-PAL: An Active Learning Approach to the Multi-Objective Optimization Problem. Journal of Machine Learning Research 2016, 17 (104), 1â32.](https://jmlr.csail.mit.edu/papers/volume17/15-047/15-047.pdf)\n\n## Acknowledgments\n\nThe research was supported by the European Research Council (ERC) under the European Unionâs Horizon 2020 research and innovation programme ([grant agreement 666983, MaGic](https://cordis.europa.eu/project/id/666983)), by the [NCCR-MARVEL](https://www.nccr-marvel.ch/), funded by the Swiss National Science Foundation, and by the Swiss National Science Foundation (SNSF) under Grant 200021_172759. Part of the work was performed as part of the [Explore Together internship program at BASF](https://www.basf.com/global/en/careers/students/explore-together.html).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kjappelbaum/PyePAL",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyepal",
    "package_url": "https://pypi.org/project/pyepal/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyepal/",
    "project_urls": {
      "Homepage": "https://github.com/kjappelbaum/PyePAL"
    },
    "release_url": "https://pypi.org/project/pyepal/0.6.1/",
    "requires_dist": [
      "numpy (==1.*)",
      "numba (==0.*)",
      "scikit-learn (==0.*)",
      "lightgbm (==3.*) ; extra == 'gbdt'",
      "GPy (~=1.9.9) ; extra == 'gpy'",
      "matplotlib (==3.*) ; extra == 'gpy'",
      "neural-tangents (==0.*) ; extra == 'all'",
      "jaxlib (==0.*) ; extra == 'all'",
      "lightgbm (==3.*) ; extra == 'all'",
      "GPy (~=1.9.9) ; extra == 'all'",
      "matplotlib (==3.*) ; extra == 'all'",
      "versioneer (==0.*) ; extra == 'dev'",
      "black (==20.*) ; extra == 'dev'",
      "sphinx (==3.*) ; extra == 'docs'",
      "sphinx-book-theme (==0.*) ; extra == 'docs'",
      "sphinx-autodoc-typehints (==1.*) ; extra == 'docs'",
      "sphinx-copybutton (==0.*) ; extra == 'docs'",
      "neural-tangents (==0.*) ; extra == 'neural_tangents'",
      "jaxlib (==0.*) ; extra == 'neural_tangents'",
      "pre-commit (==2.*) ; extra == 'pre-commit'",
      "pylint (==2.*) ; extra == 'pre-commit'",
      "isort (==5.*) ; extra == 'pre-commit'",
      "pytest (==6.*) ; extra == 'testing'",
      "pytest-cov (==2.*) ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "PyePAL implemented the epsilon-PAL active learning algorithm",
    "version": "0.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9176861,
  "releases": {
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6308d2fede884bbe598f717db5cb85c5bb4fcbdbf407bb17780212c5844aef92",
          "md5": "c3aec8301b66ca9a7f2329a2fc9c6161",
          "sha256": "87582b7bf29e6f6d9d2a940f94c268eed417c939f36a91e61e0b8d569d7c51b3"
        },
        "downloads": -1,
        "filename": "pyepal-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3aec8301b66ca9a7f2329a2fc9c6161",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 83142,
        "upload_time": "2020-11-03T21:43:14",
        "upload_time_iso_8601": "2020-11-03T21:43:14.686987Z",
        "url": "https://files.pythonhosted.org/packages/63/08/d2fede884bbe598f717db5cb85c5bb4fcbdbf407bb17780212c5844aef92/pyepal-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75894f8e3bcb278758ced81b749c593648ba8792382e88bea5959cf2d81c3d92",
          "md5": "794376a40523cf070d391f5c3ff3d95c",
          "sha256": "94868f5818e6810f0cf9cfa8c5720c20f5df8fe7304315235a545e94156eeb34"
        },
        "downloads": -1,
        "filename": "pyepal-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "794376a40523cf070d391f5c3ff3d95c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48467,
        "upload_time": "2020-11-03T21:43:17",
        "upload_time_iso_8601": "2020-11-03T21:43:17.758876Z",
        "url": "https://files.pythonhosted.org/packages/75/89/4f8e3bcb278758ced81b749c593648ba8792382e88bea5959cf2d81c3d92/pyepal-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6337b27ce173bf9451bb843d4060bcb39b88ff62c612ca54e8db85b2b5633553",
          "md5": "303bc6e4c188b98f1d7f404e19fe0d9d",
          "sha256": "aa1c313ec4a0bb19fcebc3090f6a7d4cbe9253a440db2df1df7402c497ab963a"
        },
        "downloads": -1,
        "filename": "pyepal-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "303bc6e4c188b98f1d7f404e19fe0d9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 97020,
        "upload_time": "2021-01-15T09:07:02",
        "upload_time_iso_8601": "2021-01-15T09:07:02.363702Z",
        "url": "https://files.pythonhosted.org/packages/63/37/b27ce173bf9451bb843d4060bcb39b88ff62c612ca54e8db85b2b5633553/pyepal-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cee21da879eb32402cc757390b60c7fa148ec8a216cf4320f9a29ece0221dac",
          "md5": "88b933e6466d18d7ab6794b342a9685d",
          "sha256": "5cc460c029ee71176ace030f752ce187d5668c059c07830f6473e8ddabaf7a8b"
        },
        "downloads": -1,
        "filename": "pyepal-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "88b933e6466d18d7ab6794b342a9685d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59453,
        "upload_time": "2021-01-15T09:07:04",
        "upload_time_iso_8601": "2021-01-15T09:07:04.049197Z",
        "url": "https://files.pythonhosted.org/packages/9c/ee/21da879eb32402cc757390b60c7fa148ec8a216cf4320f9a29ece0221dac/pyepal-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ee31f700137f913ed8ca448a37d8951e63ea0708aefb2a38871f76566527c28",
          "md5": "f67145e5145ccafb6d3275522a7e0a8e",
          "sha256": "f0dffb341b69125890dd2c130ad0058fa2dd67c01f2812561290c84edc363bf4"
        },
        "downloads": -1,
        "filename": "pyepal-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f67145e5145ccafb6d3275522a7e0a8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 97716,
        "upload_time": "2021-01-17T17:21:27",
        "upload_time_iso_8601": "2021-01-17T17:21:27.130567Z",
        "url": "https://files.pythonhosted.org/packages/0e/e3/1f700137f913ed8ca448a37d8951e63ea0708aefb2a38871f76566527c28/pyepal-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c395f03f4a67e501263ef117a6ce697058857d15291d9f570159c32fea5a9e3",
          "md5": "90963e020c254ecc4ee7b0fbf990ef2b",
          "sha256": "223e0c6a72ed07da29118c6e6ce0542e47498db2b427a8c37ea9b798262fe3d6"
        },
        "downloads": -1,
        "filename": "pyepal-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "90963e020c254ecc4ee7b0fbf990ef2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 60095,
        "upload_time": "2021-01-17T17:21:29",
        "upload_time_iso_8601": "2021-01-17T17:21:29.710040Z",
        "url": "https://files.pythonhosted.org/packages/3c/39/5f03f4a67e501263ef117a6ce697058857d15291d9f570159c32fea5a9e3/pyepal-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2c94d23a83632d8be2acbb35ad3b7edb3562af0888d88bf52fa73495130617c",
          "md5": "022d3d4275d1c6c57d64b329e94ac0fe",
          "sha256": "bdd49ce460e0d2f7ff1534acae302eb674cf9c779af3e9072d47c33e03620e97"
        },
        "downloads": -1,
        "filename": "pyepal-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "022d3d4275d1c6c57d64b329e94ac0fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 97720,
        "upload_time": "2021-01-19T21:41:28",
        "upload_time_iso_8601": "2021-01-19T21:41:28.364201Z",
        "url": "https://files.pythonhosted.org/packages/d2/c9/4d23a83632d8be2acbb35ad3b7edb3562af0888d88bf52fa73495130617c/pyepal-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b39368a465e56b1dd69e4bec6deb0e831e13e1bdec5a9e8a9513217635e35e6",
          "md5": "fa86abe2a8ed1eefbf86dbbdfcb541d5",
          "sha256": "986381baebc9f6406dc9874f10186ab8e62e603847f4ea7902f09071a786a002"
        },
        "downloads": -1,
        "filename": "pyepal-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fa86abe2a8ed1eefbf86dbbdfcb541d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 60135,
        "upload_time": "2021-01-19T21:41:29",
        "upload_time_iso_8601": "2021-01-19T21:41:29.922417Z",
        "url": "https://files.pythonhosted.org/packages/1b/39/368a465e56b1dd69e4bec6deb0e831e13e1bdec5a9e8a9513217635e35e6/pyepal-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2c94d23a83632d8be2acbb35ad3b7edb3562af0888d88bf52fa73495130617c",
        "md5": "022d3d4275d1c6c57d64b329e94ac0fe",
        "sha256": "bdd49ce460e0d2f7ff1534acae302eb674cf9c779af3e9072d47c33e03620e97"
      },
      "downloads": -1,
      "filename": "pyepal-0.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "022d3d4275d1c6c57d64b329e94ac0fe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 97720,
      "upload_time": "2021-01-19T21:41:28",
      "upload_time_iso_8601": "2021-01-19T21:41:28.364201Z",
      "url": "https://files.pythonhosted.org/packages/d2/c9/4d23a83632d8be2acbb35ad3b7edb3562af0888d88bf52fa73495130617c/pyepal-0.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b39368a465e56b1dd69e4bec6deb0e831e13e1bdec5a9e8a9513217635e35e6",
        "md5": "fa86abe2a8ed1eefbf86dbbdfcb541d5",
        "sha256": "986381baebc9f6406dc9874f10186ab8e62e603847f4ea7902f09071a786a002"
      },
      "downloads": -1,
      "filename": "pyepal-0.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fa86abe2a8ed1eefbf86dbbdfcb541d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 60135,
      "upload_time": "2021-01-19T21:41:29",
      "upload_time_iso_8601": "2021-01-19T21:41:29.922417Z",
      "url": "https://files.pythonhosted.org/packages/1b/39/368a465e56b1dd69e4bec6deb0e831e13e1bdec5a9e8a9513217635e35e6/pyepal-0.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}