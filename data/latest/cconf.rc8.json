{
  "info": {
    "author": "Dan Watson",
    "author_email": "watsond@imsweb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# cconf\n\n`cconf` is a library for reading configuration from various sources (such as environment\nvariables, environment files, and environment directories) and optionally encrypting\nsensitive configurations. Sensitive configuration values are encrypted using\n[Fernet](https://cryptography.io/en/latest/fernet/) tokens, which provide authenticated\ncrypography and the ability to specify a maximum valid lifetime (`ttl`).\n\n\n## Installation\n\n`pip install cconf`\n\nTo use `Fernet` keys for encrypting sensitive settings, `cconf` requires the\n[cryptography](https://cryptography.io/) module, which can be installed as an extra:\n\n`pip install cconf[fernet]`\n\n\n## Usage\n\nBy default, there is a `config` singleton set up to read configuration from the process\nenvironment variables (`os.environ`):\n\n```python\nfrom cconf import config\n\nDEBUG = config(\"DEBUG\", False, cast=bool)\n```\n\nYou can add to the list of configuration sources (this will still read from `os.environ`\nfirst):\n\n```python\nfrom cconf import config\n\nconfig.file(\"/path/to/.env\")\nconfig.dir(\"/path/to/envdir\")\n```\n\nOr you may want to set the configuration sources (and their order) manually. The\nfollowing will try `envdir` first, followed by `.env`.\n\n```python\nfrom cconf import config\n\nconfig.setup(\"/path/to/envdir\", \"/path/to/.env\")\n```\n\nYou can also specify sources that have `keys`, which can be the path to a file with\n`Fernet` keys, one per line, or a list of `str|bytes` keys that will be converted to\n`Fernet` keys:\n\n```python\nfrom cconf import config, EnvDir, EnvFile, HostEnv\n\nconfig.setup(\n    EnvDir(\"/path/to/envdir\", keys=\"/path/to/envdir.keys\"),\n    EnvFile(\"/path/to/.env\", keys=\"/path/to/env.keys\"),\n    HostEnv(keys=[\"WQ6g4VBia1fNCuVCrsX5VvGUWYlHssUJLshONLsivhc=\"]),\n)\n```\n\n## Encrypting Sensitive Data\n\nAny configuration value can be marked as `sensitive`, meaning it must be encrypted (or\nbase64-encoded if not using `Fernet` keys) and will never be read from a plaintext\nsource.\n\n```python\nfrom cconf import config, Secret\n\nconfig.file(\"/path/to/.env\", keys=\"/path/to/secret.key\")\n\n# This SECRET_KEY is only valid for 24 hours.\nSECRET_KEY = config(\"SECRET_KEY\", sensitive=True, cast=Secret, ttl=86400)\n```\n\nSetting a `ttl` will ensure the encrypted value is no older than that number of seconds.\nValues older than `ttl` will emit a warning and return `undefined`. You may set a\ndefault value for a `sensitive` config value, but a warning will be emitted.\n\nTo get started, you can use the `cconf` CLI tool to generate a new `Fernet` key, then\nuse that key to encrypt some data:\n\n```\n% cconf genkey > secret.key\n% cconf encrypt --keyfile secret.key secretdata\n```\n\nIf you've already generated a key and configured the sources with that key in your\nsettings file, you may also pass `-c/--config` to `cconf`:\n\n```\n% cconf -c myapp.settings encrypt secretdata\n```\n\nThis will encrypt the string `secretdata` using all encrypted sources in your config,\nand output them along with the source they're encrypted for. You must add this data to\nyour configuration files manually, `cconf` makes no attempt to write to these files for\nyou.\n\n\n## Key and File Policies\n\nA source may specify a key file policy (`keys=cconf.KeyFile(name, policy=...)`) which\nperforms additional checks when opening the key file. By default `KeyFile.policy` is\nset to `cconf.UserOnly`, which checks that the key file is owned by the current user,\nand has no permissions granted to group or other users (i.e. `600` mode).\n\nSimilarly, `EnvFile` and `EnvDir` sources accept a `policy` argument (which defaults to\n`None`) that will perform policy checks when opening the environment files. You may set\nthis to `cconf.UserOnly` or `cconf.UserOrGroup`, or write your own policy. A policy is\nsimply a function that takes a single `path` argument and raises `cconf.PolicyError` if\nthe file should not be opened.\n\n\n## Checking Configuration\n\nThe `cconf` CLI tool includes a `check` command which will print out a list of\nconfiguration variables it knows about, grouped by the source. For instance, running it\nagainst the `tests.settings.prod` module of a local checkout will produce something that\nlooks like this:\n\n```\n% python -m cconf.cli -c tests.settings.prod check\nEnvFile(/Users/dcwatson/Projects/cconf/tests/envs/prod)\n    HOSTNAME\n        'prodhost'\n    USERNAME\n        'produser'\n    API_KEY\n        'prodkey'\nEnvDir(/Users/dcwatson/Projects/cconf/tests/envdirs/prod)\n    PASSWORD\n        'cc0nfRul3z!'\n(Default)\n    DEBUG\n        'false'\n```\n\n## Warnings\n\n`cconf` will emit warnings (specifically `ConfigWarning`, a subclass of `UserWarning`)\nin certain cases:\n\n* A config value was marked as `sensitive`, but the value extracted from the\n  configuration source has either expired (if a `ttl` was specified), or is improperly\n  encrypted (wrong key, plaintext, etc.)\n* A config value was marked as `sensitive`, but was not found in any of the sources and\n  a default value is being used.\n* A config key was not found in any of the sources, and there is no default value\n  specified. In this case, `undefined` is returned and a warning is emitted.\n\nYou may choose to silence these warnings, or promote them to exceptions using Python's\n`warnings` module:\n\n```python\nimport warnings\nfrom cconf import ConfigWarning\n\n# Silence all ConfigWarnings.\nwarnings.simplefilter(\"ignore\", ConfigWarning)\n\n# Raise ConfigWarnings as exceptions.\nwarnings.simplefilter(\"error\", ConfigWarning)\n```\n\n\n## Django Integration\n\n`cconf` includes a single management command that wraps the `cconf` CLI tool. To use it,\nadd `cconf` to your `INSTALLED_APPS` setting, then run `manage.py config`. Being a\nmanagement command means your settings are already imported, so you don't need to\nconstantly pass `-c myproject.settings` to the `cconf` CLI.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/imsweb/cconf",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cconf",
    "package_url": "https://pypi.org/project/cconf/",
    "platform": "any",
    "project_url": "https://pypi.org/project/cconf/",
    "project_urls": {
      "Homepage": "https://github.com/imsweb/cconf"
    },
    "release_url": "https://pypi.org/project/cconf/0.9.8/",
    "requires_dist": [
      "cryptography ; extra == 'all'",
      "python-tss-sdk ; extra == 'all'",
      "cryptography ; extra == 'fernet'",
      "python-tss-sdk ; extra == 'secretserver'"
    ],
    "requires_python": "",
    "summary": "Multi-sourced (and optionally encrypted) configuration management.",
    "version": "0.9.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16176622,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1504977ce3aa712297e7164fe1f85b9667114a2f663d69e0641b9b5a9ab64ca8",
          "md5": "84dd3a5cb5ac350d8ed28e056b447db4",
          "sha256": "82d7c85bf9c58489d36af8e979e289d4cf6036edcfc841ba4a59267ab0de2bdf"
        },
        "downloads": -1,
        "filename": "cconf-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84dd3a5cb5ac350d8ed28e056b447db4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11022,
        "upload_time": "2021-11-18T19:36:18",
        "upload_time_iso_8601": "2021-11-18T19:36:18.696251Z",
        "url": "https://files.pythonhosted.org/packages/15/04/977ce3aa712297e7164fe1f85b9667114a2f663d69e0641b9b5a9ab64ca8/cconf-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7179f778bf709754d44a659ae91514488ba15b93d570d4848fe411753ae4bc0",
          "md5": "0f3fc06a4a1cee9e626d51bde2359e6c",
          "sha256": "0fbb4eb9aca491790fc6942a20f247ac779018589318b0894e72c090ec202790"
        },
        "downloads": -1,
        "filename": "cconf-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f3fc06a4a1cee9e626d51bde2359e6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13941,
        "upload_time": "2022-06-21T00:15:02",
        "upload_time_iso_8601": "2022-06-21T00:15:02.397048Z",
        "url": "https://files.pythonhosted.org/packages/a7/17/9f778bf709754d44a659ae91514488ba15b93d570d4848fe411753ae4bc0/cconf-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e47fda0ace47cd66b8d8d5cd769fa74792f10d9e09c3ee022d13e03593e89be",
          "md5": "a3f5d6f81f6bbbb874f2eebbc4b4b07a",
          "sha256": "c38731892c5130978728cfb91d6e577311d94b6486737e8a6f96a473e5affbd3"
        },
        "downloads": -1,
        "filename": "cconf-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3f5d6f81f6bbbb874f2eebbc4b4b07a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15973,
        "upload_time": "2022-07-06T01:25:30",
        "upload_time_iso_8601": "2022-07-06T01:25:30.161394Z",
        "url": "https://files.pythonhosted.org/packages/1e/47/fda0ace47cd66b8d8d5cd769fa74792f10d9e09c3ee022d13e03593e89be/cconf-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f07e3c0135a3fab524f48edf5fdbb3f800aa2ecd0ec5fe236a372009eec772de",
          "md5": "5675a0f1e904531b76e8f5443cbaf58d",
          "sha256": "4d6d231326d275fa1749df5a6f62ae5f13a5981b29fd0a3fc40ab0e2fe9e6d9b"
        },
        "downloads": -1,
        "filename": "cconf-0.9.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5675a0f1e904531b76e8f5443cbaf58d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16085,
        "upload_time": "2022-07-29T16:30:33",
        "upload_time_iso_8601": "2022-07-29T16:30:33.409438Z",
        "url": "https://files.pythonhosted.org/packages/f0/7e/3c0135a3fab524f48edf5fdbb3f800aa2ecd0ec5fe236a372009eec772de/cconf-0.9.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad7cc56a15c3ea1dde7b6550a693e820cce63f8780d2b5ec0400cbdd18e1eaab",
          "md5": "64710d8cc40dfce1cb626ff505e2a7ad",
          "sha256": "899d2f21406ff0139c0484c685fe7b25a8ce044225ea37f77e788036b23d2d59"
        },
        "downloads": -1,
        "filename": "cconf-0.9.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64710d8cc40dfce1cb626ff505e2a7ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16285,
        "upload_time": "2022-09-13T18:16:39",
        "upload_time_iso_8601": "2022-09-13T18:16:39.159190Z",
        "url": "https://files.pythonhosted.org/packages/ad/7c/c56a15c3ea1dde7b6550a693e820cce63f8780d2b5ec0400cbdd18e1eaab/cconf-0.9.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ba7b9091e606fde07e1cdb6ec3d3130cf4c4b8f8e920c45aff47da8266bc955",
          "md5": "7ec3546a60ecb32082bf482fe6eebb5f",
          "sha256": "cb011167186b5db48b256fe3e6d05ff424d1180ce7beae5cad60f2682f2ad362"
        },
        "downloads": -1,
        "filename": "cconf-0.9.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ec3546a60ecb32082bf482fe6eebb5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17428,
        "upload_time": "2022-12-01T18:45:34",
        "upload_time_iso_8601": "2022-12-01T18:45:34.364086Z",
        "url": "https://files.pythonhosted.org/packages/9b/a7/b9091e606fde07e1cdb6ec3d3130cf4c4b8f8e920c45aff47da8266bc955/cconf-0.9.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9b77d39153733eb845b7a059c4587018bde53bf6093707e9ef72d2ebbf57d17",
          "md5": "9c1f3b75edfae060cf7caf5f27799e91",
          "sha256": "03c0ce538ce3a23862d51acaf90bb8ccfa37851eb0361e74ce0f8d5df4fa652a"
        },
        "downloads": -1,
        "filename": "cconf-0.9.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c1f3b75edfae060cf7caf5f27799e91",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17527,
        "upload_time": "2022-12-01T20:02:51",
        "upload_time_iso_8601": "2022-12-01T20:02:51.971213Z",
        "url": "https://files.pythonhosted.org/packages/c9/b7/7d39153733eb845b7a059c4587018bde53bf6093707e9ef72d2ebbf57d17/cconf-0.9.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14636744523aed26e31749fe98ef429e1e6acf38ab891c9bafe6eeeae0b0417e",
          "md5": "b1007d3ceab63a8b0295c11ff1aafe0f",
          "sha256": "149d2a265d4388842e2e5885a975eff88245ba8b379b11f481b897c582ff3b81"
        },
        "downloads": -1,
        "filename": "cconf-0.9.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1007d3ceab63a8b0295c11ff1aafe0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17614,
        "upload_time": "2022-12-21T19:27:02",
        "upload_time_iso_8601": "2022-12-21T19:27:02.722871Z",
        "url": "https://files.pythonhosted.org/packages/14/63/6744523aed26e31749fe98ef429e1e6acf38ab891c9bafe6eeeae0b0417e/cconf-0.9.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14636744523aed26e31749fe98ef429e1e6acf38ab891c9bafe6eeeae0b0417e",
        "md5": "b1007d3ceab63a8b0295c11ff1aafe0f",
        "sha256": "149d2a265d4388842e2e5885a975eff88245ba8b379b11f481b897c582ff3b81"
      },
      "downloads": -1,
      "filename": "cconf-0.9.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1007d3ceab63a8b0295c11ff1aafe0f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17614,
      "upload_time": "2022-12-21T19:27:02",
      "upload_time_iso_8601": "2022-12-21T19:27:02.722871Z",
      "url": "https://files.pythonhosted.org/packages/14/63/6744523aed26e31749fe98ef429e1e6acf38ab891c9bafe6eeeae0b0417e/cconf-0.9.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}