{
  "info": {
    "author": "Michael Arcidiacono",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# batchify: structured data in pytorch\n\nPyTorch can already batchify tensors (and tuples of tensors), but what about arbitrary classes? If your neural network is dealing with complex datatypes, structuring your data in classes is the solution. With batchify, you can seemlessly return classes in a pytorch dataset.\n\nAs an example, let's say you want your neural network do something with people. People, as we all know, are faces and names\n\n\n```python\nimport torch\nfrom batchify import Batch, Batchable\n\nMAX_NAME_LEN = 128\nIMG_SIZE = 256\nclass Person(Batchable):\n    \n    face: torch.Tensor\n    name: torch.Tensor\n    \n    def __init__(self): # not a very interesting person\n        self.face = torch.zeros((3, IMG_SIZE, IMG_SIZE))\n        self.name = torch.zeros((MAX_NAME_LEN,))\n    \n```\n\nNow here's the fun part: we can make a batch of people. This automatically batchifies both the face and the name\n\n\n```python\ndave = Person()\nrhonda = Person()\nbatch = Batch([dave, rhonda])\nprint(len(batch))\nprint(dave.name.shape)\nprint(batch.name.shape) # notice the extra batch dimension\nprint(batch[0].name.shape) # un-batchification\n```\n\n    2\n    torch.Size([128])\n    torch.Size([2, 128])\n    torch.Size([128])\n\n\nBut what about a custom person dataset? Pretty easy with the batchify dataloader\n\n\n```python\nfrom batchify import DataLoader\n\nclass PersonDataset(torch.utils.data.Dataset):\n    \n    def __len__(self):\n        return 16\n    \n    def __getitem__(self, index):\n        return Person()\n    \nbatch_size = 8\ndataset = PersonDataset()\nloader = DataLoader(dataset, batch_size=batch_size)\nfor batch in loader:\n    print(batch.face.shape)\n```\n\n    torch.Size([8, 3, 256, 256])\n    torch.Size([8, 3, 256, 256])\n\n\nThis is all great if you want to input a Person into your network. But what if you want to _output_ a person?\n\n(**warning**: this functionality only works if you have correct type annotations on your Batchable classes)\n\n\n```python\nout_batch = Batch(Person,\n                  face=torch.zeros((batch_size, 3, IMG_SIZE, IMG_SIZE)),\n                  name=torch.zeros((batch_size, MAX_NAME_LEN)))\nprint(len(out_batch))\nprint(out_batch[0].name.shape)\n```\n\n    8\n    torch.Size([128])",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mixarcid/batchify",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "batchify",
    "package_url": "https://pypi.org/project/batchify/",
    "platform": "",
    "project_url": "https://pypi.org/project/batchify/",
    "project_urls": {
      "Homepage": "https://github.com/mixarcid/batchify"
    },
    "release_url": "https://pypi.org/project/batchify/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "batchify anything",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12217507,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e2b358022d1208cc903e37e0b975fbbce7820db5d0ebfe6671b87ec2c85b90d",
          "md5": "e427d173ad513ef7194b98ee68564f37",
          "sha256": "816126f9dc0e910de8b0bd43c29cc900522d2a4261063ff466fb992d343dd520"
        },
        "downloads": -1,
        "filename": "batchify-0.0.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "e427d173ad513ef7194b98ee68564f37",
        "packagetype": "bdist_egg",
        "python_version": "0.0.1",
        "requires_python": ">=3.6",
        "size": 6013,
        "upload_time": "2021-12-05T16:52:26",
        "upload_time_iso_8601": "2021-12-05T16:52:26.127089Z",
        "url": "https://files.pythonhosted.org/packages/8e/2b/358022d1208cc903e37e0b975fbbce7820db5d0ebfe6671b87ec2c85b90d/batchify-0.0.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9532d183df870dab4c8b87c601563a1964e3405a891f8b3c5d44d780c6d7980b",
          "md5": "e59a486efbe66bd52df66cb3fccba7f6",
          "sha256": "fbc6780aa6596ee79efd4b23bb4b085ada5a7f17e6797cb415429496a5a29afb"
        },
        "downloads": -1,
        "filename": "batchify-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e59a486efbe66bd52df66cb3fccba7f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3792,
        "upload_time": "2021-12-05T16:52:24",
        "upload_time_iso_8601": "2021-12-05T16:52:24.136987Z",
        "url": "https://files.pythonhosted.org/packages/95/32/d183df870dab4c8b87c601563a1964e3405a891f8b3c5d44d780c6d7980b/batchify-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6721e11c86cb5a3d9dfae7e5c2b0f3a354377611b7900c3bf782d79403868632",
          "md5": "e6450a751367ab93a2dc2f293759396e",
          "sha256": "73f5e7ca83e3bfdffc4e06a8fe964863c3090e71942dc1780da34e526299c1fd"
        },
        "downloads": -1,
        "filename": "batchify-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e6450a751367ab93a2dc2f293759396e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3436,
        "upload_time": "2021-12-05T16:52:27",
        "upload_time_iso_8601": "2021-12-05T16:52:27.613690Z",
        "url": "https://files.pythonhosted.org/packages/67/21/e11c86cb5a3d9dfae7e5c2b0f3a354377611b7900c3bf782d79403868632/batchify-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3632510e7fcb99c87383d038bd33db4962da6214987c6bca29dc8a07ff0054cc",
          "md5": "741f9f7a951623e50b3e215409614e59",
          "sha256": "b9e30c1ff45cccd47c14eeb1de4934d3f9b4ca4843371e3e4d5445bbde5e0a17"
        },
        "downloads": -1,
        "filename": "batchify-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "741f9f7a951623e50b3e215409614e59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3544,
        "upload_time": "2021-12-05T23:00:29",
        "upload_time_iso_8601": "2021-12-05T23:00:29.690514Z",
        "url": "https://files.pythonhosted.org/packages/36/32/510e7fcb99c87383d038bd33db4962da6214987c6bca29dc8a07ff0054cc/batchify-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36639cf02701ec190ab0fc31d2026bb911f613942a86560cf18a69f966e70592",
          "md5": "09292ba4365967f335793db0b6b2bb07",
          "sha256": "f01d5ee7c2d0b9b2605fd95beee244f67a6d955be377e77b7d2749cf4e8d1cf3"
        },
        "downloads": -1,
        "filename": "batchify-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "09292ba4365967f335793db0b6b2bb07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3526,
        "upload_time": "2021-12-05T23:05:12",
        "upload_time_iso_8601": "2021-12-05T23:05:12.137479Z",
        "url": "https://files.pythonhosted.org/packages/36/63/9cf02701ec190ab0fc31d2026bb911f613942a86560cf18a69f966e70592/batchify-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36639cf02701ec190ab0fc31d2026bb911f613942a86560cf18a69f966e70592",
        "md5": "09292ba4365967f335793db0b6b2bb07",
        "sha256": "f01d5ee7c2d0b9b2605fd95beee244f67a6d955be377e77b7d2749cf4e8d1cf3"
      },
      "downloads": -1,
      "filename": "batchify-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "09292ba4365967f335793db0b6b2bb07",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3526,
      "upload_time": "2021-12-05T23:05:12",
      "upload_time_iso_8601": "2021-12-05T23:05:12.137479Z",
      "url": "https://files.pythonhosted.org/packages/36/63/9cf02701ec190ab0fc31d2026bb911f613942a86560cf18a69f966e70592/batchify-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}