{
  "info": {
    "author": "Valberto Carneiro",
    "author_email": "valbertovc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django :: 2",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4",
      "Framework :: Django :: 4.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "# django-upload-to\n\n[![codecov](https://codecov.io/github/valbertovc/django-upload-to/branch/main/graph/badge.svg?token=2R5S5GTS0X)](https://codecov.io/github/valbertovc/django-upload-to)\n\nIt generates dynamically a directory path and a secure file name for Django FileField.\n\nMain options:\n- Ready to use generators.\n- Generate secure file name without especial characters.\n- Generate file name using a uuid value.\n- Dynamically generate paths from the model instance.\n- Generate paths using Python datetime formats.\n\n## Get started\nInstall the django-upload-to in your virtual environment\n```bash\n$ pip install django-upload-to\n```\nImport it in your models file and add it as a `upload_to` argument in the `FileField` \n```python\n# my_app/models.py\nfrom upload_to import UploadTo\nfrom django.db import models\n\n\nclass MyModel(models.Model):\n    attachment = models.FileField(upload_to=UploadTo(\"attachments\"))\n```\nThe path and file name generated will be like this:\n```text\n\"attachments/the-file-name-uploaded.pdf\"\n```\n\n## How to use the ready-to-use classes\n\nConsider the scenario below:\n```python\nimport upload_to\nfrom django.db import models\n\n\nclass MyUser(models.Model):\n    username = models.CharField(...)\n    avatar = models.FileField(upload_to=<generator>)\n\ninstance = MyUser(username='user@email.com')\n```\nReplace the `<generator>` fragment by the generators as showed below:\n#### File in root folder\n```python\n>>> generator = upload_to.UploadTo()\n>>> generator(instance, \"file.pdf\")\n\"file.pdf\"\n\n```\n#### Define a folder structure\n```python\n>>> generator = upload_to.UploadTo(prefix=[\"files\", \"documents\"])\n>>> generator(instance, \"file.pdf\")\n\"files/documents/file.pdf\"\n```\n#### Generate a folder name using datetime formats from Python\n```python\n>>> generator = upload_to.UploadTo(prefix=[\"pictures\", \"%Y\"])\n>>> generator(instance, \"file.png\")\n\"pictures/2023/file.png\"\n```\n#### Replace the file name by an hexadecimal uuid value\n```python\n# 4. replace file name by a uuid value\n>>> generator = upload_to.UuidUploadTo()\n>>> generator(instance, \"file.pdf\")\n\"b189dfdf25e640b2ba5c497472c20962.pdf\"\n```\n#### Generate the folder path using the instance's attributes\n```python\n>>> generator = upload_to.AttrUploadTo(attrs=[\"username\"])\n>>> generator(instance, \"file.pdf\")\n\"useremailcom/file.pdf\"\n```\n#### Generate the folder path using the app_label and the model_name from the instance's meta options\n```python\n>>> generator = upload_to.ModelUploadTo()\n>>> generator(instance, \"file.pdf\")\n\"my_app/user/file.pdf\"\n```\n\n## Customize your upload paths\n\n```python\n# my_app/models.py\nimport upload_to\nfrom django.db import models\n\n\ndef my_upload_generator(instance, filename):\n    filename = upload_to.uuid_filename(filename)\n    path = upload_to.options_from_instance(instance)\n    return upload_to.upload_to(path, filename)\n\nclass MyProfile(models.Model):\n    user = models.OneToOneField(...)\n    avatar = models.FileField(upload_to=my_upload_generator)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/valbertovc/django-upload-to",
    "keywords": "django,file,media,upload",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-upload-to",
    "package_url": "https://pypi.org/project/django-upload-to/",
    "platform": null,
    "project_url": "https://pypi.org/project/django-upload-to/",
    "project_urls": {
      "Bug Tracker": "https://github.com/valbertovc/django-upload-to/issues",
      "Homepage": "https://github.com/valbertovc/django-upload-to",
      "Repository": "https://github.com/valbertovc/django-upload-to",
      "Source": "https://github.com/valbertovc/django-upload-to"
    },
    "release_url": "https://pypi.org/project/django-upload-to/0.1.1/",
    "requires_dist": [
      "Django (>=4.0.0)"
    ],
    "requires_python": ">=3.7.0,<4.0.0",
    "summary": "It generates dynamically a directory path and a file name for Django FileField",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17099442,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75fab1babcba2c3e1c97b2652b70adcec53663a62d8c957314da9e04ca1d22d8",
          "md5": "a979953e73d8ea51ee4f03b53ffe349c",
          "sha256": "0c5702a6fc5a241d7e4f44919ef3a4bacecb1fd7f8f5e72d82097a80fe18a135"
        },
        "downloads": -1,
        "filename": "django_upload_to-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a979953e73d8ea51ee4f03b53ffe349c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0,<4.0.0",
        "size": 5320,
        "upload_time": "2023-02-28T18:12:45",
        "upload_time_iso_8601": "2023-02-28T18:12:45.333911Z",
        "url": "https://files.pythonhosted.org/packages/75/fa/b1babcba2c3e1c97b2652b70adcec53663a62d8c957314da9e04ca1d22d8/django_upload_to-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c2ef2af3b1500d57d48c6c1b4f127b6e5d39a1993d4f85cd2986abfeca08312",
          "md5": "16a4ae8e3e0e226e5cc4b502fb0f5b61",
          "sha256": "7ca4c1241041176809bf3576b10a4a6b8eb8058bc507ceddd931946bb7531989"
        },
        "downloads": -1,
        "filename": "django_upload_to-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "16a4ae8e3e0e226e5cc4b502fb0f5b61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0,<4.0.0",
        "size": 4873,
        "upload_time": "2023-02-28T18:12:46",
        "upload_time_iso_8601": "2023-02-28T18:12:46.728072Z",
        "url": "https://files.pythonhosted.org/packages/9c/2e/f2af3b1500d57d48c6c1b4f127b6e5d39a1993d4f85cd2986abfeca08312/django_upload_to-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75fab1babcba2c3e1c97b2652b70adcec53663a62d8c957314da9e04ca1d22d8",
        "md5": "a979953e73d8ea51ee4f03b53ffe349c",
        "sha256": "0c5702a6fc5a241d7e4f44919ef3a4bacecb1fd7f8f5e72d82097a80fe18a135"
      },
      "downloads": -1,
      "filename": "django_upload_to-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a979953e73d8ea51ee4f03b53ffe349c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0,<4.0.0",
      "size": 5320,
      "upload_time": "2023-02-28T18:12:45",
      "upload_time_iso_8601": "2023-02-28T18:12:45.333911Z",
      "url": "https://files.pythonhosted.org/packages/75/fa/b1babcba2c3e1c97b2652b70adcec53663a62d8c957314da9e04ca1d22d8/django_upload_to-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c2ef2af3b1500d57d48c6c1b4f127b6e5d39a1993d4f85cd2986abfeca08312",
        "md5": "16a4ae8e3e0e226e5cc4b502fb0f5b61",
        "sha256": "7ca4c1241041176809bf3576b10a4a6b8eb8058bc507ceddd931946bb7531989"
      },
      "downloads": -1,
      "filename": "django_upload_to-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "16a4ae8e3e0e226e5cc4b502fb0f5b61",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0,<4.0.0",
      "size": 4873,
      "upload_time": "2023-02-28T18:12:46",
      "upload_time_iso_8601": "2023-02-28T18:12:46.728072Z",
      "url": "https://files.pythonhosted.org/packages/9c/2e/f2af3b1500d57d48c6c1b4f127b6e5d39a1993d4f85cd2986abfeca08312/django_upload_to-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}