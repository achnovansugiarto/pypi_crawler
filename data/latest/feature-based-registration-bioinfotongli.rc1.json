{
  "info": {
    "author": "['Vasyl Vaskivskyi', 'Tong LI']",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "[![DOI](https://zenodo.org/badge/405296414.svg)](https://zenodo.org/badge/latestdoi/405296414)\n# Feature based image registrator\n\nThe image registrator uses `FAST` feature finder and `DAISY` feature descriptor for registration. \nIt can align images of different size by padding them with 0 values. \nThe image registrator can work with multichannel grayscale TIFFs and TIFFs with multiple z-planes. \nImages **MUST** have OME-TIFF XML in their description.\nThe script does linear image registration. To avoid excessive memory consumption it extracts features from tiles instead of a whole image. \n\n## Command line arguments\n\n**`-i`**    paths to images you want to register separated by space.\n\n**`-r`**    reference image id, e.g. if `-i 1.tif 2.tif 3.tif`, and you ref image is `1.tif`, then `-r 0` (starting from 0)\n\n**`-c`**    reference channel name, e.g. DAPI. Enclose in double quotes if name consist of several words e.g. \"Atto 490LS\".\n\n**`-o`**    directory to output registered image.\n\n**`-n`**    multiprocessing: number of processes, default 1\n\n**`--tile_size`**  size of a side of a square tile used for registration, e.g. --tile_size 1000 = tile with dims 1000x1000px\n\n**`--num_pyr_lvl`**  number of pyramid levels. Default 3, 0 - will not use pyramids\n\n**`--num_iter`**  number of registration iterations per pyramid level. Default 3, cannot be less than 1\n\n**`--stack`**  add this flag if input is image stack instead of image list\n\n**`--estimate_only`**   add this flag if you want to get only registration parameters and do not want to process images.\n\n**`--load_param`**  specify path to csv file with registration parameters\n\n\n## Example usage\n\n`python reg.py -i \"/path/to/image1/img1.tif\" \"/path/to/image2/img2.tif\" -o  \"/path/to/output/directory\" -r 0 -c \"Atto 490LS\" -n 3`\n\n## Dependencies\n\n`numpy pandas tifffile opencv-contrib-python scikit-learn scikit-image`\n\n`scikit-image` is necessary for affine transformation of big images that has more than 32000 pixels in one or two dimensions. \nThe affine registration process in `scikit-image` requires usage of `float64` data, so you need amount of RAM at least 3 times the size of the picture (channel, z-plane).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "microscope registration DAPI fluorescence microscopy slide-imaging",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "feature-based-registration-BioinfoTongLI",
    "package_url": "https://pypi.org/project/feature-based-registration-BioinfoTongLI/",
    "platform": null,
    "project_url": "https://pypi.org/project/feature-based-registration-BioinfoTongLI/",
    "project_urls": {
      "Bug Reports": "https://github.com/BayraktarLab/feature_reg/issues",
      "Source": "https://github.com/BayraktarLab/feature_reg/"
    },
    "release_url": "https://pypi.org/project/feature-based-registration-BioinfoTongLI/2.0.1/",
    "requires_dist": [
      "numpy",
      "tifffile",
      "opencv-contrib-python",
      "dask",
      "pandas",
      "scikit-learn",
      "scikit-image"
    ],
    "requires_python": ">=3.0.*",
    "summary": "Feature-spot-based image registration for fluorescence microscopy images",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13750875,
  "releases": {
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a354df714fb05c9712739643fa1384e719d21e9d79e88718a8218a8ade36d3f1",
          "md5": "2cfeeb1afee35ea7c57ab2b456e16f66",
          "sha256": "00305d166b2b8e8f97c4eed2f1b9029b3c7c56d5d1ffd050270ddb842a844086"
        },
        "downloads": -1,
        "filename": "feature_based_registration_BioinfoTongLI-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cfeeb1afee35ea7c57ab2b456e16f66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0.*",
        "size": 6864,
        "upload_time": "2022-05-08T17:28:47",
        "upload_time_iso_8601": "2022-05-08T17:28:47.071986Z",
        "url": "https://files.pythonhosted.org/packages/a3/54/df714fb05c9712739643fa1384e719d21e9d79e88718a8218a8ade36d3f1/feature_based_registration_BioinfoTongLI-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c24826cd287945146fa2d056713bc600dc459053d9b162dcef50d481a639d7a",
          "md5": "d6dfba2410af448f6b7f3ba6e8cc256e",
          "sha256": "7c2cd2187de01426aac29262877f310a087ab52e50979339a7b44bc86a7be24f"
        },
        "downloads": -1,
        "filename": "feature-based-registration-BioinfoTongLI-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d6dfba2410af448f6b7f3ba6e8cc256e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0.*",
        "size": 7177,
        "upload_time": "2022-05-08T17:28:48",
        "upload_time_iso_8601": "2022-05-08T17:28:48.700081Z",
        "url": "https://files.pythonhosted.org/packages/1c/24/826cd287945146fa2d056713bc600dc459053d9b162dcef50d481a639d7a/feature-based-registration-BioinfoTongLI-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a354df714fb05c9712739643fa1384e719d21e9d79e88718a8218a8ade36d3f1",
        "md5": "2cfeeb1afee35ea7c57ab2b456e16f66",
        "sha256": "00305d166b2b8e8f97c4eed2f1b9029b3c7c56d5d1ffd050270ddb842a844086"
      },
      "downloads": -1,
      "filename": "feature_based_registration_BioinfoTongLI-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2cfeeb1afee35ea7c57ab2b456e16f66",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0.*",
      "size": 6864,
      "upload_time": "2022-05-08T17:28:47",
      "upload_time_iso_8601": "2022-05-08T17:28:47.071986Z",
      "url": "https://files.pythonhosted.org/packages/a3/54/df714fb05c9712739643fa1384e719d21e9d79e88718a8218a8ade36d3f1/feature_based_registration_BioinfoTongLI-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c24826cd287945146fa2d056713bc600dc459053d9b162dcef50d481a639d7a",
        "md5": "d6dfba2410af448f6b7f3ba6e8cc256e",
        "sha256": "7c2cd2187de01426aac29262877f310a087ab52e50979339a7b44bc86a7be24f"
      },
      "downloads": -1,
      "filename": "feature-based-registration-BioinfoTongLI-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d6dfba2410af448f6b7f3ba6e8cc256e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0.*",
      "size": 7177,
      "upload_time": "2022-05-08T17:28:48",
      "upload_time_iso_8601": "2022-05-08T17:28:48.700081Z",
      "url": "https://files.pythonhosted.org/packages/1c/24/826cd287945146fa2d056713bc600dc459053d9b162dcef50d481a639d7a/feature-based-registration-BioinfoTongLI-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}