{
  "info": {
    "author": "Kamil Kaminski",
    "author_email": "k.kaminski@cent.uw.edu.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "![logo](https://github.com/labstructbioinf/rossmann-toolbox/blob/main/logo.png?raw=true)\n\n![python-ver](https://img.shields.io/badge/python-%3E=3.6.1-blue)\n[![codecov](https://codecov.io/gh/labstructbioinf/rossmann-toolbox/branch/main/graph/badge.svg)](https://codecov.io/gh/labstructbioinf/rossmann-toolbox)\n\n<b> Prediction and re-engineering of the cofactor specificity of Rossmann-fold proteins</b>\n\n### Installation\n\n```\npip install rossmann-toolbox\n```\n\nAlternatively, to get the most recent changes, install directly from the repository:\n```\npip install git+https://github.com/labstructbioinf/rossmann-toolbox.git\n```\n\n#### For some of the features additional dependencies are required:\n| Package                                       | Sequence variant | Structure variant |\n|-----------------------------------------------|:----------------:|:-----------------:|\n|[**FoldX4**](http://foldxsuite.crg.eu/)        | -                | **required**      |\n|[**DSSP3**](https://github.com/cmbi/dssp)      | -                | **required**      |\n|[**HH-suite3**](https://github.com/soedinglab/hh-suite) | optional| optional          |\n\n### Getting started\n\n#### Sequence-based approach\nThe input is a full-length sequence. The algorithm first detects <b>Rossmann cores</b> (i.e. the β-α-β motifs that interact with the cofactor) in the sequence and later evaluates their cofactor specificity:\n```python\nfrom rossmann_toolbox import RossmannToolbox\nrtb = RossmannToolbox(use_gpu=True)\n\ndata = {'3m6i_A': 'MASSASKTNIGVFTNPQHDLWISEASPSLESVQKGEELKEGEVTVAVRSTGICGSDVHFWKHGCIGPMIVECDHVLGHESAGEVIAVHPSVKSIKVGDRVAIEPQVICNACEPCLTGRYNGCERVDFLSTPPVPGLLRRYVNHPAVWCHKIGNMSYENGAMLEPLSVALAGLQRAGVRLGDPVLICGAGPIGLITMLCAKAAGACPLVITDIDEGRLKFAKEICPEVVTHKVERLSAEESAKKIVESFGGIEPAVALECTGVESSIAAAIWAVKFGGKVFVIGVGKNEIQIPFMRASVREVDLQFQYRYCNTWPRAIRLVENGLVDLTRLVTHRFPLEDALKAFETASDPKTGAIKVQIQSLE'}\n\npreds = rtb.predict(data, mode='seq')\npreds = {'3m6i_A': {'FAD': 0.0008955444,\n                    'NAD': 0.998446,\n                    'NADP': 0.00015508455,\n                    'SAM': 0.0002544397, ...}}\n```\n\n#### Structure-based approach\nThe input is a protein structure. Preparation steps are the same as above, but additionally, structural features are calculated via **FOLDX** software, and secondary structure features via **DSSP**\n```python\n# required binaries\nPATH_FOLDX = ...\nPATH_HHPRED = ...\nPATH_DSSP = ...\n\npath_to_structures = ...  # path to pdb files\nchains_to_use = ... # chains to load from `path_to_structures`\nrtb = RossmannToolbox(use_gpu=False, foldx_loc = PATH_FOLDX, \n                                     hhsearch_loc = PATH_HHPRED,\n                                     dssp_loc = PATH_DSSP)\n\npreds = rtb.predict_structure(path_to_structures, chains_to_use, mode='seq', core_detect_mode='dl')\npreds = [{'NAD': 0.99977881,\n  'NADP': 0.0018195,\n  'SAM': 0.00341983,\n  'FAD': 3.62e-05,\n  'seq': 'AGVRLGDPVLICGAGPIGLITMLCAKAAGACPLVITDIDEGRL',\n  'NAD_std': 0.0003879,\n  'NADP_std': 0.00213571,\n  'SAM_std': 0.00411747,\n  'FAD_std': 3.95e-05}]\n```\n\n\n#### What next?\nTo learn about other features of the `rossmann-toolbox`, such as <b>visualization of the results</b>, please refer to the notebook `examples/example_minimal.ipynb`. \n\n### Contact\nIf you have any questions, problems or suggestions, please contact us.  The `rossmann-toolbox` was developed by Kamil Kaminski, Jan Ludwiczak, Maciej Jasinski, Adriana Bukala, \nRafal Madaj, Krzysztof Szczepaniak, and Stanislaw Dunin-Horkawicz.\n\nThis work was supported by the First TEAM program of the Foundation for Polish Science co-financed by the European Union under the European Regional Development Fund.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/labstructbioinf/rossmann-toolbox",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rossmann-toolbox",
    "package_url": "https://pypi.org/project/rossmann-toolbox/",
    "platform": "",
    "project_url": "https://pypi.org/project/rossmann-toolbox/",
    "project_urls": {
      "Homepage": "https://github.com/labstructbioinf/rossmann-toolbox",
      "Repository": "https://github.com/labstructbioinf/rossmann-toolbox"
    },
    "release_url": "https://pypi.org/project/rossmann-toolbox/0.1.0/",
    "requires_dist": [
      "aiohttp (>=3.7.4,<4.0.0)",
      "atomium (==1.0.9)",
      "biopython (==1.78)",
      "captum (==0.3.1)",
      "conditional (>=1.3,<2.0)",
      "dgl (==0.6.1)",
      "pandas (==1.1.5)",
      "csb (>=1.2.5,<2.0.0)",
      "seqvec (==0.4.1)",
      "overrides (>=3.0,<4.0)"
    ],
    "requires_python": ">=3.6.1,<4.0.0",
    "summary": "Prediction and re-engineering of the cofactor specificity of Rossmann-fold proteins",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10257502,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74fe96d51726b6a553cb23cdd05b83093a917514cae7398054204a45e4654456",
          "md5": "27cb922e5b915bf9133887159c5c4335",
          "sha256": "a9d0cb5e75ea2a965416ae0c0ac2f0e447be7c511d330cf12bd1911d79253211"
        },
        "downloads": -1,
        "filename": "rossmann_toolbox-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27cb922e5b915bf9133887159c5c4335",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 11139204,
        "upload_time": "2021-05-04T18:11:27",
        "upload_time_iso_8601": "2021-05-04T18:11:27.407022Z",
        "url": "https://files.pythonhosted.org/packages/74/fe/96d51726b6a553cb23cdd05b83093a917514cae7398054204a45e4654456/rossmann_toolbox-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc030f1456add821b3381a3996187a25e53b6cf84db8eab7cfb97227fd6675af",
          "md5": "3806585578df31d1323595f2b0ddc2d2",
          "sha256": "e473e39ef8dfda8e4d818b34cbdf15392433411786bbd03e0f0c7873b0a3e381"
        },
        "downloads": -1,
        "filename": "rossmann-toolbox-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3806585578df31d1323595f2b0ddc2d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 11132690,
        "upload_time": "2021-05-04T18:11:22",
        "upload_time_iso_8601": "2021-05-04T18:11:22.062779Z",
        "url": "https://files.pythonhosted.org/packages/dc/03/0f1456add821b3381a3996187a25e53b6cf84db8eab7cfb97227fd6675af/rossmann-toolbox-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74fe96d51726b6a553cb23cdd05b83093a917514cae7398054204a45e4654456",
        "md5": "27cb922e5b915bf9133887159c5c4335",
        "sha256": "a9d0cb5e75ea2a965416ae0c0ac2f0e447be7c511d330cf12bd1911d79253211"
      },
      "downloads": -1,
      "filename": "rossmann_toolbox-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "27cb922e5b915bf9133887159c5c4335",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.1,<4.0.0",
      "size": 11139204,
      "upload_time": "2021-05-04T18:11:27",
      "upload_time_iso_8601": "2021-05-04T18:11:27.407022Z",
      "url": "https://files.pythonhosted.org/packages/74/fe/96d51726b6a553cb23cdd05b83093a917514cae7398054204a45e4654456/rossmann_toolbox-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc030f1456add821b3381a3996187a25e53b6cf84db8eab7cfb97227fd6675af",
        "md5": "3806585578df31d1323595f2b0ddc2d2",
        "sha256": "e473e39ef8dfda8e4d818b34cbdf15392433411786bbd03e0f0c7873b0a3e381"
      },
      "downloads": -1,
      "filename": "rossmann-toolbox-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3806585578df31d1323595f2b0ddc2d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.1,<4.0.0",
      "size": 11132690,
      "upload_time": "2021-05-04T18:11:22",
      "upload_time_iso_8601": "2021-05-04T18:11:22.062779Z",
      "url": "https://files.pythonhosted.org/packages/dc/03/0f1456add821b3381a3996187a25e53b6cf84db8eab7cfb97227fd6675af/rossmann-toolbox-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}