{
  "info": {
    "author": "Bi Huaibin",
    "author_email": "bi.huaibin@foxmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# envText\n\n**首款**中文环境领域文本分析工具。仍然在内测中，敬请期待。\n\n特性：  \n1. :one:支持中文环境领域大规模预训练模型**envBert**！\n\n2. :two:支持中文环境领域大规模预训练**词向量**!\n\n3. :three:支持中文环境领域专家过滤的**词表**!\n\n4. :four: **一且设计均为领域专家研究服务**：\n    - 为神经网络模型精简了接口，只保留了必要的batch_size, learning_rate等参数\n    - 进一步优化huggingface transformers输入输出接口，支持20余种数据集格式\n    - 一键使用模型，让领域专家精力集中在分析问题上\n\n5. :five: 使用transformers接口，支持轻松自定义模型\n\n下一步计划：  \n- [ ] 数据集支持：支持常用**标注工具**数据集  \n    - [ ] 精灵标注助手  \n    - [ ] Doccano  \n    - [ ] universal data annotator\n- [ ] **专题支持**  \n    - [ ] 无监督实体/短语/固定搭配挖掘  \n    - [ ] 气候变化文本分析工具箱  \n    - [ ] 环境领域实体  \n- [ ] 更新文档和案例  \n        \n\n如果您觉得本项目有用或是有帮助到您，麻烦您点击一下右上角的star :star:。您的支持是我们维护项目的最大动力:metal:！\n\n\n# 使用方法\n\n### 1. 安装\n\npython环境配置\n\n```bash\npip install envtext\n\n#国内用户使用清华镜像加速\npip install envtext -i https://pypi.tuna.tsinghua.edu.cn/simple \n```\n由于envtext库依赖于transformers和pytorch，故安装时间比较长，建议等待时喝一杯咖啡:coffee:。\n\n\n### 2. 推理\n\n目前支持的模型有：\n\n| 任务名称 | Bert模型 | RNNs模型 | 其他模型 |\n| ------ | ------ | ------ | ------ |\n| 完型填空 | BertMLM  |  ------  |  ------  |\n|  分类   | BertCLS  |  RNNCLS  |  ------  |\n| 情感分析（回归） | BertSA  |  RNNSA  |  ------  |\n|  多选   |BertMultiChoice | RNNMultiChoice | ----- |\n| 实体识别 | BertNER  | RNNNER  | -----    |\n| 词向量  |  -----  |  -----   | Word2Vec |\n\n除文本生成任务外，基本支持绝大部分NLP任务。\n\nBert 支持环境领域大规模预训练模型`envBert`，也支持其他huggingface transformer的Bert模型。\n\nRNNs模型包括`LSTM`,`GRU`,`RNN`三种，可以选择使用环境领域预训练的词向量初始化，也可以使用Onehot编码初始化。\n\n\n#### 2.1 使用Bert\n\n由于bert模型较大，建议从huggingface transformer上预先下载模型权重，\n或者从我们提供的百度网盘链接上下载权重，保存到本地，方便使用。\n\n百度网盘链接：  \n链接：[百度网盘 envBert 模型](https://pan.baidu.com/s/1KNE5JnUoulLgVK9yW5WtAw)\n提取码：lfwm \n\n```python\n#导入完形填空模型(masked language model)\nfrom envtext.models import BertMLM\nmodel = BertMLM('celtics1863/env-bert-chinese')\n\n#进行预测\nmodel('[MASK][MASK][MASK][MASK]是各国政府都关心的话题')\n\n\n#导出结果\nmodel.save_result('result.csv')\n```\n#### 2.2 使用RNN\n\n```python\nfrom envtext.models import RNNCLS\n\nmodel = RNNCLS('本地pytorch_model.bin所在文件夹')\n\n#进行预测\nmodel('气候变化是各国政府都关心的话题')\n\n#导出结果\nmodel.save_result('result.csv')\n```\n\n#### 2.3 使用word2vec\n\nenvtext自带长度为64的预训练词向量。\n```python\nfrom envtext.models import load_word2vec\n\nmodel = load_word2vec()\n\nmodel.most_similar('环境保护')\n```\n\n### 3. 训练\n\n##### 3.1 Bert训练\n\n```python\n#导入分类模型(classification)\nfrom envtext.models import BertCLS\nmodel = BertCLS('celtics1863/env-bert-chinese')\n\n# # 使用自定义数据集\n# model.load_dataset('数据集位置',task = 'cls',format = '数据集格式')\n# #使用自带的二分类数据集：\nmodel.load_dataset('isclimate')\n\n#模型训练\nmodel.train()\n\n\n#模型保存\nmodel.save_model('classification') #输入待保存的文件夹\n```\n\n或者：\n\n```python\n#导入分类模型(classification)\nfrom envtext.models import BertCLS\nfrom envtext.data.utils import load_dataset\n\n# # 使用自定义数据集\n# datasets,config = load_dataset('数据集位置',task = 'cls',format = '数据集格式')\n# #使用自带的二分类数据集：\ndatasets,config = load_dataset('isclimate')\n\nmodel = BertCLS('celtics1863/env-bert-chinese',config)\n\n#模型训练\nmodel.train(datasets)\n\n#模型保存\nmodel.save_model('classification') #输入待保存的文件夹\n```\n\n##### 3.2 RNN训练\n\n```python\n#导入分类模型(classification)\nfrom envtext.models import RNNCLS\nmodel = RNNCLS()\n\n# # 使用自定义数据集\n# model.load_dataset('数据集位置',task = 'cls',format = '数据集格式')\n# # 使用自带的二分类数据集：\nmodel.load_dataset('isclimate')\n\n#模型训练\nmodel.train()\n\n\n#模型保存\nmodel.save_model('classification') #输入待保存的文件夹\n```\n或者\n\n```python\n#导入分类模型(classification)\nfrom envtext.models import RNNCLS\nfrom envtext.data.utils import load_dataset\n\n# # 使用自定义数据集\n# datasets,config = load_dataset('数据集位置',task = 'cls',format = '数据集格式')\n# #使用自带的二分类数据集：\ndatasets,config = load_dataset('isclimate')\n\nmodel = RNNCLS(config=config)\n\n#模型训练\nmodel.train(datasets)\n\n#模型保存\nmodel.save_model('classification') #输入待保存的文件夹\n```\n\n\n### 4. 自定义模型\n\n##### 4.1 自定义Bert模型\n首先自定义一个回归任务的Bert模型\n```python\nfrom envtext.models.bert_base import BertBase\nimport torch\nfrom transformers import BertPreTrainedModel,BertModel\n\nclass MyBert(BertPreTrainedModel):\n    def __init__(self, config):\n        super(MyBert, self).__init__(config)\n        self.bert = BertModel(config) #bert模型\n        self.regressor = torch.nn.Linear(config.hidden_size, 1) #回归器\n        self.loss = torch.nn.MSELoss() #损失函数\n        \n    def forward(self, input_ids, token_type_ids=None, attention_mask=None, labels=None,\n              position_ids=None, inputs_embeds=None, head_mask=None):\n        outputs = self.bert(input_ids,\n                            attention_mask=attention_mask,\n                            token_type_ids=token_type_ids,\n                            position_ids=position_ids,\n                            head_mask=head_mask,\n                            inputs_embeds=inputs_embeds)\n        #使用[CLS] token\n        cls_output = outputs[0][:,0,:] \n\n        # 得到判别值\n        logits = self.regressor(cls_output)\n\n        outputs = (logits,)\n        \n        #这里需要与bert的接口保持一致，在有labels输入的情况下，返回(loss,logits)，否则返回(logits,)\n        if labels is not None: \n            loss = self.loss(logits.squeeze(),labels)\n            outputs = (loss,) + outputs\n        return outputs\n\n```\n将模型与envtext的接口对接\n\n```python\nclass MyBertModel(BertBase):\n    #重写初始化函数\n    def initialize_bert(self,path = None,config = None,**kwargs):\n        super().initialize_bert(path,config,**kwargs)\n        self.model = MyBert.from_pretrained(self.model_path)\n\n    #[Optional] 可选 重写后处理预测结果的函数\n    def postprocess(self,text, logits, print_result = True ,save_result = True):     \n        logits = logits.squeeze()\n        if print_result:\n            #打印结果\n            print(logits)\n        \n        if save_result:\n            #保存结果\n            self.result[text] = logits\n            \n     #[Optional] 可选 重新计算判别值函数，用于训练时提供除loss外的metrics信息\n     def compute_metrics(eval_pred)\n         from envtext.utils.metrics import metrics_for_reg\n         return metrics_for_reg(eval_pred)\n     \n     #[Optional] 可选 用于对齐config中的参数，\n     #因为有的时候需要接受多种参数的输入，例如分类任务时可以接受类别数量，也可以接受类别的列表，这时候可以通过这个接口对齐。\n     def align_config(self):\n         super().align_config()\n         ##可以使用self.update_config() 或 self.set_attribute() 接口重新设置config\n         pass\n```\n\n##### 4.1 自定义RNN模型\n\n定义RNN模型也是类似的。  \n先实现一个LSTM分类模型如下：\n\n```python\nfrom torch import nn\nimport torch\nclass MyRNN(nn.Module):\n    def __init__(self,config):\n        self.rnn = nn.LSTM(config.embed_size, config.hidden_size ,config.num_layers,batch_first = True)\n        self.classifier = nn.Linear(config.hidden_size,config.num_labels)\n    \n    def forward(self,X,labels = None):\n        X,_ = self.rnn(X)\n        logits = self.classifier(X)\n        \n        #对齐接口，仍然需要在labels存在的情况下输出(loss,logits)，不存在的情况下输出(logits,)\n        if labels is not None:\n            loss = self.loss_fn(logits,labels)\n            return (loss,logits) \n        return (logits,)\n```\n\n再将模型与envtext接口对接，\n```python\nimport numpy as np\nclass MyRNNModel(BertBase):\n    #重写初始化函数\n    def initialize_bert(self,path = None,config = None,**kwargs):\n        super().initialize_bert(path,config,**kwargs) #保持不变\n        self.model = MyRNN.from_pretrained(self.model_path) \n\n    #[Optional] 可选 重写后处理预测结果的函数\n    def postprocess(self,text, logits, print_result = True ,save_result = True):     \n        pred = np.argmax(logits,axis = -1)\n        if print_result:\n            #打印结果\n            print(pred)\n        \n        if save_result:\n            #保存结果\n            self.result[text] = pred\n            \n    #[Optional] 可选 重写metrics，增加loss以外的metric, 用于训练\n    def compute_metrics(eval_pred):\n        return {} #返回一个dict\n        \n    #[Optional] 可选 重写align_config，对齐config参数\n    def align_config(self):\n        super().align_config()\n        pass\n```\n\n更详细的教程，请参见我们的案例 [jupyter notebooks]('jupyter_notebooks')\n\n### 5. 使用建议\n\n1. Bert模型比较大，如果只有cpu的情况下，建议先用RNN模型，跑出一个结果，观察数据集的数量/质量是否达标，再考虑是否用Bert模型。一般envbert模型要比RNN模型领先10个点左右，尤其在数据集越小的情况下，envbert的优势越明显。\n2. 神经网络模型受到初始化权重影响，每一次训练的情况不一样，建议多跑几次，取最好的结果。\n3. Learning rate, Epoch, Batchsize是三个最关键的超参数，需要对不同数据集小心调整。默认的参数可以在大多数情况下达到较优的值，但是一定不会达到最好的结果。\n\n# LISENCE\nApache Lisence\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/celtics1863/envtext",
    "keywords": "NLP,bert,Chinese,LSTM,RNN,domain text analysis",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "envtext",
    "package_url": "https://pypi.org/project/envtext/",
    "platform": null,
    "project_url": "https://pypi.org/project/envtext/",
    "project_urls": {
      "Bug Tracker": "https://github.com/celtics1863/envtext/issues",
      "Homepage": "https://github.com/celtics1863/envtext"
    },
    "release_url": "https://pypi.org/project/envtext/0.0.14/",
    "requires_dist": [
      "jieba",
      "datasets",
      "gensim",
      "tqdm",
      "numpy",
      "pytorch-crf",
      "pandas",
      "torch",
      "transformers"
    ],
    "requires_python": ">=3.6",
    "summary": "envtext for Chinese texts analysis in Environment domain",
    "version": "0.0.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17509512,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d819f8e1e98fe53082ea593a23640703c4999d3d11ba658c1ea25ced55257b7f",
          "md5": "e49d799039060cbd9e79e18dd54fcf74",
          "sha256": "80e38a6f4e06f6f8a3a5f148265785c9195710131a2e7abe0e0f0f3d3172b1c9"
        },
        "downloads": -1,
        "filename": "envtext-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e49d799039060cbd9e79e18dd54fcf74",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35535999,
        "upload_time": "2022-02-20T14:21:28",
        "upload_time_iso_8601": "2022-02-20T14:21:28.300580Z",
        "url": "https://files.pythonhosted.org/packages/d8/19/f8e1e98fe53082ea593a23640703c4999d3d11ba658c1ea25ced55257b7f/envtext-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1df4fa91f80a0194d338a4d001551e5c3c2bbce3ba3a45b1b8c69e08a9a3feb",
          "md5": "b65935a2a9e31821b6995d4a9601bed1",
          "sha256": "f88b1bf4ef9ffce5499d29fcaf32a09bbb7a2ba1f139df6351221ac4e3b92199"
        },
        "downloads": -1,
        "filename": "envtext-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "b65935a2a9e31821b6995d4a9601bed1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35490691,
        "upload_time": "2022-02-20T14:22:39",
        "upload_time_iso_8601": "2022-02-20T14:22:39.791943Z",
        "url": "https://files.pythonhosted.org/packages/a1/df/4fa91f80a0194d338a4d001551e5c3c2bbce3ba3a45b1b8c69e08a9a3feb/envtext-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e61e05e75eacb73403b6cf1789f937f78a82c2bfd6b5f4a4e9e6129ce8cc2207",
          "md5": "7ab652a6f41e8804a49edcf4b0bd506d",
          "sha256": "2cdcdf7a227d5209aa6d2185ec4e17599e7e41077254c9b8ad9e86b16577bb28"
        },
        "downloads": -1,
        "filename": "envtext-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ab652a6f41e8804a49edcf4b0bd506d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35536699,
        "upload_time": "2022-02-21T14:55:13",
        "upload_time_iso_8601": "2022-02-21T14:55:13.814382Z",
        "url": "https://files.pythonhosted.org/packages/e6/1e/05e75eacb73403b6cf1789f937f78a82c2bfd6b5f4a4e9e6129ce8cc2207/envtext-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2bf040ee15b26142a9275679c3d27d9f4e4ca1971c13233aada24bc51603b55",
          "md5": "792e0b5a2a3c3221bef68417356cc6df",
          "sha256": "6838f945241ccf3c7469ff2f8409d70bdc4caf4a54c8a53f2cf72e3cea4c7b35"
        },
        "downloads": -1,
        "filename": "envtext-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "792e0b5a2a3c3221bef68417356cc6df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35491497,
        "upload_time": "2022-02-21T14:56:34",
        "upload_time_iso_8601": "2022-02-21T14:56:34.521653Z",
        "url": "https://files.pythonhosted.org/packages/c2/bf/040ee15b26142a9275679c3d27d9f4e4ca1971c13233aada24bc51603b55/envtext-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea21537bf9a5339e2bd1fc37fdbee101ba0ba228da206757e994cdfede4fb958",
          "md5": "53c876ffc7e5b03245a7de71bef621ad",
          "sha256": "bf0007b014fc1f36a2ee3f9be4eb5436694c7e16970b2856186f171fe37503bb"
        },
        "downloads": -1,
        "filename": "envtext-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53c876ffc7e5b03245a7de71bef621ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35547700,
        "upload_time": "2023-03-30T11:29:45",
        "upload_time_iso_8601": "2023-03-30T11:29:45.381815Z",
        "url": "https://files.pythonhosted.org/packages/ea/21/537bf9a5339e2bd1fc37fdbee101ba0ba228da206757e994cdfede4fb958/envtext-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1790094dda79c5c4894ed6d063e07b8a4ac0454514e6dc008c9980f1765761a7",
          "md5": "984484f422303a004f438647e31d2d33",
          "sha256": "656774b81848baa747d2d301674b83d2ddc6b58654316ea3caa8cc9d00de3159"
        },
        "downloads": -1,
        "filename": "envtext-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "984484f422303a004f438647e31d2d33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35496834,
        "upload_time": "2023-03-30T11:30:00",
        "upload_time_iso_8601": "2023-03-30T11:30:00.404647Z",
        "url": "https://files.pythonhosted.org/packages/17/90/094dda79c5c4894ed6d063e07b8a4ac0454514e6dc008c9980f1765761a7/envtext-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e3c7df2823e14223ecc6db1c2f5258f254098f0ec09615a3d5859fac9d5dda0",
          "md5": "15909c429ff929745d482ed35cfd3e4e",
          "sha256": "dbef21fcfbc427688d2fc1ae0277f475346a4994850cec38e30d217c00f9c569"
        },
        "downloads": -1,
        "filename": "envtext-0.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15909c429ff929745d482ed35cfd3e4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35547736,
        "upload_time": "2023-03-30T11:52:42",
        "upload_time_iso_8601": "2023-03-30T11:52:42.011485Z",
        "url": "https://files.pythonhosted.org/packages/0e/3c/7df2823e14223ecc6db1c2f5258f254098f0ec09615a3d5859fac9d5dda0/envtext-0.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34ba52ca2691a4e41eee54ee6f969358becf5670b011bea00421a51c72cd6c49",
          "md5": "63296e6506e46fa1d04094d75bbc8635",
          "sha256": "a39b4343b0540ea342d959b797ef8862db629be48bf0f7ade3012a60a2ced917"
        },
        "downloads": -1,
        "filename": "envtext-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "63296e6506e46fa1d04094d75bbc8635",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35496906,
        "upload_time": "2023-03-30T11:52:57",
        "upload_time_iso_8601": "2023-03-30T11:52:57.131468Z",
        "url": "https://files.pythonhosted.org/packages/34/ba/52ca2691a4e41eee54ee6f969358becf5670b011bea00421a51c72cd6c49/envtext-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "561810d4bf20ec3bef0ed15f5af8de326aa4197220ce9277da3c9289f5eee60d",
          "md5": "7ab2041c9a1069089a15789c5a2f62ed",
          "sha256": "638f211927979bca1662d159c69dda8c636a618149083c1d27d25415eba5e127"
        },
        "downloads": -1,
        "filename": "envtext-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ab2041c9a1069089a15789c5a2f62ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35532635,
        "upload_time": "2022-02-19T01:00:23",
        "upload_time_iso_8601": "2022-02-19T01:00:23.785899Z",
        "url": "https://files.pythonhosted.org/packages/56/18/10d4bf20ec3bef0ed15f5af8de326aa4197220ce9277da3c9289f5eee60d/envtext-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c4e7a6ac6a2d13b4444d3265dd5e75c1e5776e6c0ff9c477705522334d7d919",
          "md5": "20fd7843d4702c3d5bfe7279d884e3e1",
          "sha256": "6461548195df238f6c45ec17bd35e660001b8f9a79f2d51746fee08ced0f2859"
        },
        "downloads": -1,
        "filename": "envtext-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "20fd7843d4702c3d5bfe7279d884e3e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35487919,
        "upload_time": "2022-02-19T01:01:53",
        "upload_time_iso_8601": "2022-02-19T01:01:53.424943Z",
        "url": "https://files.pythonhosted.org/packages/7c/4e/7a6ac6a2d13b4444d3265dd5e75c1e5776e6c0ff9c477705522334d7d919/envtext-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e3c7df2823e14223ecc6db1c2f5258f254098f0ec09615a3d5859fac9d5dda0",
        "md5": "15909c429ff929745d482ed35cfd3e4e",
        "sha256": "dbef21fcfbc427688d2fc1ae0277f475346a4994850cec38e30d217c00f9c569"
      },
      "downloads": -1,
      "filename": "envtext-0.0.14-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "15909c429ff929745d482ed35cfd3e4e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 35547736,
      "upload_time": "2023-03-30T11:52:42",
      "upload_time_iso_8601": "2023-03-30T11:52:42.011485Z",
      "url": "https://files.pythonhosted.org/packages/0e/3c/7df2823e14223ecc6db1c2f5258f254098f0ec09615a3d5859fac9d5dda0/envtext-0.0.14-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34ba52ca2691a4e41eee54ee6f969358becf5670b011bea00421a51c72cd6c49",
        "md5": "63296e6506e46fa1d04094d75bbc8635",
        "sha256": "a39b4343b0540ea342d959b797ef8862db629be48bf0f7ade3012a60a2ced917"
      },
      "downloads": -1,
      "filename": "envtext-0.0.14.tar.gz",
      "has_sig": false,
      "md5_digest": "63296e6506e46fa1d04094d75bbc8635",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 35496906,
      "upload_time": "2023-03-30T11:52:57",
      "upload_time_iso_8601": "2023-03-30T11:52:57.131468Z",
      "url": "https://files.pythonhosted.org/packages/34/ba/52ca2691a4e41eee54ee6f969358becf5670b011bea00421a51c72cd6c49/envtext-0.0.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}