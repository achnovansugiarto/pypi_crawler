{
  "info": {
    "author": "Adam Rosenbaum",
    "author_email": "adam.rosenbaum@scilifelab.se",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "\n# mutacc\n[![Build Status](https://travis-ci.org/Clinical-Genomics/mutacc.png)](https://travis-ci.org/Clinical-Genomics/mutacc)\n[![Coverage Status](https://coveralls.io/repos/github/Clinical-Genomics/mutacc/badge.svg?branch=master)](https://coveralls.io/github/Clinical-Genomics/mutacc?branch=master)\n[![PyPI version](https://badge.fury.io/py/mutacc.svg)](https://badge.fury.io/py/mutacc)\n\n## The mutation accumulation database\n\n**mutacc** is a tool that makes it possible to create synthetic datasets to be used\nfor quality control or benchmarking of bioinformatic tools and pipelines intended\nfor variant calling of clinical variants. Using raw reads that supports a known\nvariant from a real NGS data, *mutacc* stores the relevant reads from each case into\na database. This database can then be queried to create synthetic datasets that can\nbe used as positive controls bioinformatics pipelines.\n\n\n## Running the app using Docker (No installation of any software or database required)\nAn example containing a demo setup for the app is included in the docker-compose file. Note that this file is not intended for use in production and is only provided to illustrate how an image containing the application could be connected to a MongoDB instance and perform commands provided when running it as a container. A Docker image file for Mutacc can be pulled from [Docker Hub](https://hub.docker.com/repository/docker/clinicalgenomics/mutacc), or can be built from the Dockerfile provided in the GitHub repository folder. Start the docker-compose demo using this command:\n\n```console\ndocker-compose up -d\n```\n\nWhat the docker-compose command does:\n\n- Starts the database\n- extracts the reads from a demo case (demo case resources are located under /mutacc/resources)\n- Saves them to database\n- Exports them from the database to a local file\n\nWhen the above command is executed, it creates the following 4 directories: `reads`, `imports`, `queries` and `variants` in the working directory. The directory names `variants` contains the vcf with the variants of interest for this demo case.\n\nAfter running the test, don't forget to run docker-compose to remove containers, networks, volumes and images created by docker-compose.\n\n\n## Installation\n### Conda\nFor installation of mutacc and the external prerequisites, this is made easy by\ncreating conda environment\n\n```consol\nconda create -n <env_name> python=3.6 pip numpy cython\n```\n\nactivate environment\n\n```consol\nsource activate <env_name>\n```\n### External Prerequisites\nmutacc takes use of two external packages, [seqkit](https://github.com/shenwei356/seqkit)>=v0.9 ,\nand [picard](https://github.com/broadinstitute/picard)>=v2.18. These can be\ninstalled within a conda environment by\n\n```console\nconda install -c bioconda picard\nconda install -c bioconda seqkit\n```\n\n### Install mutacc\nWithin the conda environment, do\n\n```console\npip install mutacc\n```\n\nTo install from PyPI, or clone this repo and install\n\n```console\npip install git+https://github.com/Clinical-Genomics/mutacc\n```\n\n## Usage\n\n### Configuration File\n\nSome options are best passed to mutacc through a configuration file. below is an\nexample of a config file, using the YAML format.\n\n```yaml\n#EXAMPLE OF A CONFIGURATION FILE\nhost: <host>                  #Defaults to 'localhost'\nport: <port>                  #Defaults to 27017\ndatabase: <database_name>     #Defaults to 'mutacc'\nusername: <username>          \npassword: <password>          \nroot_dir: <path_to_root>  \n```\n\nThe 'root_dir' entry specifies an existing directory in the file system, where\nall files generated by mutacc will be stored in corresponding subdirectories.\nE.g. all generated fastq files will be stored in /.../root_dir/reads/\n\n\n### Populate the mutacc database\n\nTo export data sets from the mutacc DB, the database must first be populated. To\nextract the raw reads supporting a known variant, mutacc takes use some\nrelevant files generated from a NGS experiment up to the variant calling itself.\nThat is the bam file, and vcf file containing only the variants of interest.\n\nThis information is specified as a 'case', represented in yaml format\n\n```yaml\n#EXAMPLE OF A CASE\n\n#THE CASE FIELD CONTAINS METADATA OF THE CASE ITSELF\ncase:\n    case_id: 'case123' #REQUIRED CASE_ID\n\n#LIST OF THE SAMPLES INVOLVED IN THE EXPERIMENT (MAY BE ONE, OR SEVERAL, E.G.\n#A TRIO)\nsamples:\n  - sample_id: 'sample1' #REQUIRED\n    analysis_type: 'wgs' #REQUIRED\n    sex: 'male'          #REQUIRED\n    mother: 'sample2'    #REQUIRED (CAN BE 0 if no mother)\n    father: 'sample3'    #REQUIRED (CAN BE 0 if no father)\n    bam_file: /path/to/sorted_bam #REQUIRED\n    phenotype: 'affected'\n\n  - sample_id: 'sample2'\n    analysis_type: 'wgs'\n    sex: 'female'        \n    mother: '0' #0 if no parent            \n    father: '0'         \n    bam_file: /path/to/sorted_bam\n    phenotype: 'unaffected'\n\n  - sample_id: 'sample2'\n    analysis_type: 'wgs'\n    sex: 'male'         \n    mother: '0'             \n    father: '0'            \n    bam_file: /path/to/sorted_bam\n    phenotype: 'affected'\n\n#PATH TO VCF FILE CONTAINING VARIANTS OF INTEREST FROM CASE\nvariants: /path/to/vcf\n```\n\nThis will find the reads from the bam files specified for each sample. If it\nis desired that the reads are found from the fastq files instead, this can be\ndone by specifying the fastq-files as such\n\n```yaml\n  - sample_id: 'sample1'\n    analysis_type: 'wgs'\n    sex: 'male'          \n    mother: 'sample2'    \n    father: 'sample3'    \n    bam_file: /path/to/sorted_bam\n    fastq_files:\n      - /path/to/fastq1\n      - /path/to/fastq2\n    phenotype: 'affected'\n```\nTo extract the reads from the case\n\n```console\nmutacc --config-file <config_file> extract --padding 600 --case <case_file>\n```\nthe --padding option takes the number of basepairs that the desired region is\npadded with.\n\nThis will create a file <case_id>.json stored in the directory specified in the\n/.../root_dir/imports directory.\n\nTo import the case into the database\n\n```console\nmutacc db import /.../root_dir/imports/<case_id>.json\n```\n\nThe db command is called each time mutacc needs to do any operation against the\ndatabase.\n\nThis will try to establish a connection to an instance of mongodb, by default\nrunning on 'localhost' on port 27017. If this is not wanted, it can be specified\nwith the --host and --port options.\n\n\n\n```console\nmutacc db -h <host> -p <port> import <case_id>.json\n```\n\nIf authentication is required, this can be specified with the --username and\n--password options.\n\nor in a configuration file e.g.\n```yaml\nhost: <host>\nport: <port>\nusername: <username>\npassword: <password>\n```\n\n```console\nmutacc --config-file <config.yaml> db import <case_id>.json\n```\n\n\n### Export datasets from the database\nThe datasets are exported one sample at the time. To export a synthetic\ndataset, the export command is used together with options.\n```\nUsage: mutacc db export [OPTIONS]\n\n  exports dataset from DB\n\nOptions:\n  -c, --case-mongo TEXT           mongodb query language json-string to query\n                                  for cases in database\n  -v, --variant-mongo TEXT        mongodb query language json-string to query\n                                  for variants in database\n  -t, --variant-type TEXT         Type of variant\n  -a, --analysis [wes|wgs]        Type of analysis\n  --all-variants                  Export all variants in database\n  -m, --member [father|mother|child|affected]\n                                  Type of sample\n  -s, --sex [male|female]         Sex of sample\n  --vcf-dir PATH                  Directory where vcf is created. Defaults to\n                                  mutacc-root/variants\n  -p, --proband                   Variants from all affected samples,\n                                  regardless of pedigree\n  -n, --sample-name TEXT          Name of sample\n  -j, --json-out                  Print results to stdout as json-string\n  --help                          Show this message and exit.\n```\n\nexample:\n\n```console\nmutacc --config-file <config.yaml> db export -m affected --all-variants\n```\nwill find all the cases from the mutacc DB, and store this\ninformation in a file /.../root_dir/queries/sample_name_query.mutacc.\n\nto export an entire trio, this can be done by\n\n```console\nmutacc --config-file <config_file> db export -m child --all-variants -p -n child\nmutacc --config-file <config_file> db export -m father --all-variants -n father\nmutacc --config-file <config_file> db export -m mother --all-variants -n mother\n```\nThis will create three files child_query_mutacc.json, father_query_mutacc.json, and\nmother_query_mutacc.json.\n\nthe export subcommand will also generate a truth set vcf-file for each exported\nsamples, containing all queried variants.\n\nTo make a dataset (fastq-files) from a query file the synthesize command is used\nwith the following options\n\n   -b/--background-bam \\\n    Path to the bam file for sample to be used as background\n\n  -f/--background-fastq \\\n    Path to fastq file for sample to be used as background\n\n  -f2/--background-fastq2 \\\n    Path to second fastq file (if paired end experiment)\n\n  -q/--query \\\n    Path to the query json-files created with the export command\n\n  --dataset-dir \\\n    Directory where fastq files will be stored. defaults to\n    /.../root_dir/datasets\n\n\nexample, using the query files created above\n\n```console\nmutacc --config-file <config_file> synthesize -b <bam> -f <fastq1_child> -f2 <fastq2_child> -q child_query_mutacc.json\nmutacc --config-file <config_file> synthesize -b <bam> -f <fastq1_father> -f2 <fastq2_father> -q father_query_mutacc.json\nmutacc --config-file <config_file> synthesize -b <bam> -f <fastq1_mother> -f2 <fastq2_mother> -q mother_query_mutacc.json\n```\n\nThe created fastq-files will be stored in the directory /.../root_dir/datasets/\nor in directory specified by ---dataset-dir\n\n### Remove case from database\n\nTo remove a case from the mutacc DB, and all the generated bam, and fastq files\ngenerated from that case from disk, the remove command is used\n\n```console\nmutacc --config-file <config.yaml> db remove <case_id>\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Clinical-Genomics/mutacc",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mutacc",
    "package_url": "https://pypi.org/project/mutacc/",
    "platform": "",
    "project_url": "https://pypi.org/project/mutacc/",
    "project_urls": {
      "Homepage": "https://github.com/Clinical-Genomics/mutacc"
    },
    "release_url": "https://pypi.org/project/mutacc/1.6.2/",
    "requires_dist": [
      "Click",
      "pysam",
      "coloredlogs",
      "biopython",
      "cyvcf2 (<0.10.0)",
      "mongo-adapter (>=0.3.3)",
      "ped-parser",
      "PyYaml (>=5.1)",
      "pymongo"
    ],
    "requires_python": ">=3.6.0",
    "summary": "The mutation accumulation database",
    "version": "1.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12597975,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ca0e38dfac13625070b3adddc0022a4f61e41376eac5affdf396d027a46e60a",
          "md5": "cee8e8b5c5e91d390ae157ec72b416ea",
          "sha256": "356dc48dd69aeb99d467efc0b5fd73c0fc9c589bea5ad59c39f1d3cbde983963"
        },
        "downloads": -1,
        "filename": "mutacc-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cee8e8b5c5e91d390ae157ec72b416ea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 40824,
        "upload_time": "2019-04-03T13:40:18",
        "upload_time_iso_8601": "2019-04-03T13:40:18.150072Z",
        "url": "https://files.pythonhosted.org/packages/4c/a0/e38dfac13625070b3adddc0022a4f61e41376eac5affdf396d027a46e60a/mutacc-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebf0b57c0ec775bdd2f4bf27eca7522d6bb4cbff3e76baf7ab665408f81fab5f",
          "md5": "061895cca0f91578168a63b953fcf66c",
          "sha256": "63c2092b196bd17bd4ef624a971df82c3fc1c84626f0d413c687fedee38dd271"
        },
        "downloads": -1,
        "filename": "mutacc-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "061895cca0f91578168a63b953fcf66c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 31917,
        "upload_time": "2019-04-03T13:40:20",
        "upload_time_iso_8601": "2019-04-03T13:40:20.502745Z",
        "url": "https://files.pythonhosted.org/packages/eb/f0/b57c0ec775bdd2f4bf27eca7522d6bb4cbff3e76baf7ab665408f81fab5f/mutacc-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb3e3234658c3fabf5e5fe14895511f1ba74597ca185e7147d81ee82a712b391",
          "md5": "fd57d9b5ca0040ba2656f007f87faf0b",
          "sha256": "1c12445c2b84eec825451d23ab215d5c16c9069b2ee6c11d110e5c6e1d636541"
        },
        "downloads": -1,
        "filename": "mutacc-1.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd57d9b5ca0040ba2656f007f87faf0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 820164,
        "upload_time": "2021-11-24T08:53:57",
        "upload_time_iso_8601": "2021-11-24T08:53:57.198201Z",
        "url": "https://files.pythonhosted.org/packages/eb/3e/3234658c3fabf5e5fe14895511f1ba74597ca185e7147d81ee82a712b391/mutacc-1.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03e4214c7eff550981953fdeef9dceb7e7ef55a3f97fd4cb481cebca3a682539",
          "md5": "d07a8a655b1460659b34ef7262061a59",
          "sha256": "bb048701bab7855b18657adf6374e3d2ac646f099a9700e2b45f517d125abe9c"
        },
        "downloads": -1,
        "filename": "mutacc-1.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d07a8a655b1460659b34ef7262061a59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 812612,
        "upload_time": "2021-11-24T08:53:58",
        "upload_time_iso_8601": "2021-11-24T08:53:58.623146Z",
        "url": "https://files.pythonhosted.org/packages/03/e4/214c7eff550981953fdeef9dceb7e7ef55a3f97fd4cb481cebca3a682539/mutacc-1.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb3e3234658c3fabf5e5fe14895511f1ba74597ca185e7147d81ee82a712b391",
        "md5": "fd57d9b5ca0040ba2656f007f87faf0b",
        "sha256": "1c12445c2b84eec825451d23ab215d5c16c9069b2ee6c11d110e5c6e1d636541"
      },
      "downloads": -1,
      "filename": "mutacc-1.6.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fd57d9b5ca0040ba2656f007f87faf0b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 820164,
      "upload_time": "2021-11-24T08:53:57",
      "upload_time_iso_8601": "2021-11-24T08:53:57.198201Z",
      "url": "https://files.pythonhosted.org/packages/eb/3e/3234658c3fabf5e5fe14895511f1ba74597ca185e7147d81ee82a712b391/mutacc-1.6.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03e4214c7eff550981953fdeef9dceb7e7ef55a3f97fd4cb481cebca3a682539",
        "md5": "d07a8a655b1460659b34ef7262061a59",
        "sha256": "bb048701bab7855b18657adf6374e3d2ac646f099a9700e2b45f517d125abe9c"
      },
      "downloads": -1,
      "filename": "mutacc-1.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d07a8a655b1460659b34ef7262061a59",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 812612,
      "upload_time": "2021-11-24T08:53:58",
      "upload_time_iso_8601": "2021-11-24T08:53:58.623146Z",
      "url": "https://files.pythonhosted.org/packages/03/e4/214c7eff550981953fdeef9dceb7e7ef55a3f97fd4cb481cebca3a682539/mutacc-1.6.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}