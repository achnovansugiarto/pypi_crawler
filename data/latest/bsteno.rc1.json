{
  "info": {
    "author": "Blackthorn",
    "author_email": "sosaria@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# bSteno\n\nbSteno is a python module that allows users to insert and extract binary data (up to 16MB) to/from PNG files. The module doesn't modify the original PNG file and creates a new image instead.\n\nThe created PNG file is in RBGA format and the binary data is stored in the two LSBs of each channel. This means that 1 byte is stored in exacly one pixel of the image, with the following format:\n - The red channel contains bits 0-1\n - The green channel contains bits 2-3\n - The blue channel contains bits 4-5\n - The alpha channel contains bits 6-7\n\nThe presence of the alpha channel makes the image bigger than it could be, but I like the idea of having 1-pixel to 1-byte ratio as this simplifies the code quite a bit. This also makes it easier to extract the data if this scripts gets lost for some reason\n\nThe first three bytes/pixel of the image are used to store the size of the binary data. The size is stored in little endian\n\n## Installation\n\n```bash\n$ python3 -m pip install bsteno\n```\n\n## Use the CLI\n\nTo insert the content of `data.bin` into `source.png` and store the output in `output.png`, run:\n```bash\n$ bsteno_insert --png-in=source.png --data-in=data.bin --png-out=output.png\n```\n\nTo extract the binary data contained in `output.png` and store it in `data.bin`, run:\n```bash\n$ bsteno_extract --png-in=output.png --data-out=data.bin\n```\n\n## Use bSteno as a library\n\nbSteno can also be used as a library. It uses with the `Pillow` module to handle images. \n\nTo insert the content of `data.bin` into `source.png` and store the output in `output.png`, you can run the following code:\n```python\nimport PIL.Image\nfrom bsteno import bsteno\n\nimg_in = PIL.Image.open(\"source.png\")\nwith open(\"data.bin\", \"rb\") as f:\n\tdata = f.read()\nimg_out = bsteno.insert(img_in, data)\nimg_out.save(\"output.png\", optimize=True)\n```\n\n`bsteno.insert` raises a `DataTooBig` exception if the data can't fit in the image.\n\nTo extract the binary data contained in `output.png` and store it in `data.bin`, you can run the following code:\n```python\nimport PIL.Image\nfrom bsteno import bsteno\n\nimg_in = PIL.Image.open(\"output.png\")\ndata = bsteno.extract(img_in)\nwith open(\"data.out\", \"wb\") as f:\n\tf.write(data)\n```\n\n## Development\n\nThis module uses `poetry`. After cloning the source code, run\n```bash\n$ poetry install\n```\nto prepare the virtual environment and install the cli tools. They can then be run with:\n\n```bash\n$ poetry run bsteno_insert ...\n$ poetry run bsteno_extract ...\n```\n\n### Running tests\n\n```bash\n$ poetry run python -m unittest\n```\n\n### Code formatter\n\nThis project uses `black` code formatter",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/lordblackthorn/bsteno/src",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bsteno",
    "package_url": "https://pypi.org/project/bsteno/",
    "platform": null,
    "project_url": "https://pypi.org/project/bsteno/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/lordblackthorn/bsteno/src",
      "Repository": "https://bitbucket.org/lordblackthorn/bsteno/src"
    },
    "release_url": "https://pypi.org/project/bsteno/0.1.0/",
    "requires_dist": [
      "Pillow (>=9.1.0,<10.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "A python steganography package to insert/extract binary data into/from PNG files",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13820430,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec9c885fb534af75ec749a07a7093ab4981dfb02e551b74e556587feb569bbac",
          "md5": "8dc8b6802845c9775119fc58b7a69237",
          "sha256": "cb3fc50267ae22bd8edd15482e36e61d71a9edd0b6643105525c286100a32f72"
        },
        "downloads": -1,
        "filename": "bsteno-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8dc8b6802845c9775119fc58b7a69237",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4899,
        "upload_time": "2022-05-15T08:12:35",
        "upload_time_iso_8601": "2022-05-15T08:12:35.010290Z",
        "url": "https://files.pythonhosted.org/packages/ec/9c/885fb534af75ec749a07a7093ab4981dfb02e551b74e556587feb569bbac/bsteno-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efc7f81f475ef8311bb4acef642c5e28905c26d6ef19965559bc70075f6de476",
          "md5": "3680182d2be6fb008aafd73fd03adc60",
          "sha256": "35a7e64b0675295f7e9553be457c26abdc90809e8b5de4798f3e6b06d7e906d6"
        },
        "downloads": -1,
        "filename": "bsteno-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3680182d2be6fb008aafd73fd03adc60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4121,
        "upload_time": "2022-05-15T08:12:37",
        "upload_time_iso_8601": "2022-05-15T08:12:37.268917Z",
        "url": "https://files.pythonhosted.org/packages/ef/c7/f81f475ef8311bb4acef642c5e28905c26d6ef19965559bc70075f6de476/bsteno-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec9c885fb534af75ec749a07a7093ab4981dfb02e551b74e556587feb569bbac",
        "md5": "8dc8b6802845c9775119fc58b7a69237",
        "sha256": "cb3fc50267ae22bd8edd15482e36e61d71a9edd0b6643105525c286100a32f72"
      },
      "downloads": -1,
      "filename": "bsteno-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8dc8b6802845c9775119fc58b7a69237",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4899,
      "upload_time": "2022-05-15T08:12:35",
      "upload_time_iso_8601": "2022-05-15T08:12:35.010290Z",
      "url": "https://files.pythonhosted.org/packages/ec/9c/885fb534af75ec749a07a7093ab4981dfb02e551b74e556587feb569bbac/bsteno-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efc7f81f475ef8311bb4acef642c5e28905c26d6ef19965559bc70075f6de476",
        "md5": "3680182d2be6fb008aafd73fd03adc60",
        "sha256": "35a7e64b0675295f7e9553be457c26abdc90809e8b5de4798f3e6b06d7e906d6"
      },
      "downloads": -1,
      "filename": "bsteno-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3680182d2be6fb008aafd73fd03adc60",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4121,
      "upload_time": "2022-05-15T08:12:37",
      "upload_time_iso_8601": "2022-05-15T08:12:37.268917Z",
      "url": "https://files.pythonhosted.org/packages/ef/c7/f81f475ef8311bb4acef642c5e28905c26d6ef19965559bc70075f6de476/bsteno-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}