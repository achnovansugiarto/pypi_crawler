{
  "info": {
    "author": "Joinup",
    "author_email": "desarrollo@joinup.es",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "django-jsonfield\n----------------\n\ndjango-jsonfield is a reusable Django field that allows you to store validated JSON in your model.\n\nIt silently takes care of serialization. To use, simply add the field to one of your models.\n\nPython 3 & Django 1.11 through 3.0 supported!\n\n**Use PostgreSQL?** 1.0.0 introduced a breaking change to the underlying data type, so if you were using < 1.0.0 please read https://github.com/dmkoch/django-jsonfield/issues/57 before upgrading. Also, consider switching to Django's native JSONField that was added in Django 1.9.\n\n**Note:** There are a couple of third-party add-on JSONFields for Django. This project is django-jsonfield here on GitHub but is named `jsonfield on PyPI`_. There is another `django-jsonfield on Bitbucket`_, but that one is `django-jsonfield on PyPI`_. I realize this naming conflict is confusing and I am open to merging the two projects.\n\n.. _jsonfield on PyPI: https://pypi.python.org/pypi/jsonfield\n.. _django-jsonfield on Bitbucket: https://bitbucket.org/schinckel/django-jsonfield\n.. _django-jsonfield on PyPI: https://pypi.python.org/pypi/django-jsonfield\n\n**Note:** Since version 1.9, Django added native PostgreSQL JSON support in `django.contrib.postgres.fields.JSONField`_. This module is still useful if you need to support JSON in databases other than PostgreSQL or are creating a third-party module that needs to be database-agnostic. But if you're an end user using PostgreSQL and want full-featured JSON support, I recommend using the built-in JSONField from Django instead of this module.\n\n.. _django.contrib.postgres.fields.JSONField: https://docs.djangoproject.com/en/dev/ref/contrib/postgres/fields/#jsonfield\n\n**Note:** Semver is followed after the 1.0 release.\n\n\nInstallation\n------------\n\n.. code-block:: python\n\n    pip install jsonfield\n\n\nUsage\n-----\n\n.. code-block:: python\n\n    from django.db import models\n    from jsonfield import JSONField\n\n    class MyModel(models.Model):\n      json = JSONField()\n\nAdvanced Usage\n--------------\n\nBy default python deserializes json into dict objects. This behavior differs from the standard json behavior because python dicts do not have ordered keys.\n\nTo overcome this limitation and keep the sort order of OrderedDict keys the deserialisation can be adjusted on model initialisation:\n\n.. code-block:: python\n\n    import collections\n    class MyModel(models.Model):\n      json = JSONField(load_kwargs={'object_pairs_hook': collections.OrderedDict})\n\n\nOther Fields\n------------\n\n**jsonfield.JSONCharField**\n\nIf you need to use your JSON field in an index or other constraint, you can use **JSONCharField** which subclasses **CharField** instead of **TextField**. You'll also need to specify a **max_length** parameter if you use this field.\n\n\nCompatibility\n--------------\n\ndjango-jsonfield aims to support the same versions of Django currently maintained by the main Django project. See `Django supported versions`_, currently:\n\n  * Django 1.11 (LTS) with Python 2.7, 3.5, or 3.6\n  * Django 2.2 (LTS) with Python 3.6, 3.7, or 3.8\n  * Django 3.0 with Python 3.6, 3.7, or 3.8\n\n.. _Django supported versions: https://www.djangoproject.com/download/#supported-versions\n\n\nTesting django-jsonfield Locally\n--------------------------------\n\nTo test against all supported versions of Django:\n\n.. code-block:: shell\n\n    $ docker-compose build && docker-compose up\n\nOr just one version (for example Django 3.0 on Python 3.8):\n\n.. code-block:: shell\n\n    $ docker-compose build && docker-compose run tox tox -e py38-dj30\n\n\nTravis CI\n---------\n\n.. image:: https://travis-ci.org/dmkoch/django-jsonfield.svg?branch=master\n   :target: https://travis-ci.org/dmkoch/django-jsonfield\n\nContact\n-------\nWeb: http://bradjasper.com\n\nTwitter: `@bradjasper`_\n\nEmail: `contact@bradjasper.com`_\n\n\n\n.. _contact@bradjasper.com: mailto:contact@bradjasper.com\n.. _@bradjasper: https://twitter.com/bradjasper\n\nChanges\n-------\n\nTake a look at the `changelog`_.\n\n.. _changelog: https://github.com/dmkoch/django-jsonfield/blob/master/CHANGES.rst",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/we-are-Joinup/jsonfield",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jsonfield-joinup",
    "package_url": "https://pypi.org/project/jsonfield-joinup/",
    "platform": "",
    "project_url": "https://pypi.org/project/jsonfield-joinup/",
    "project_urls": {
      "Homepage": "https://github.com/we-are-Joinup/jsonfield"
    },
    "release_url": "https://pypi.org/project/jsonfield-joinup/2.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A reusable Django field that allows you to store validated JSON in your model.",
    "version": "2.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17476389,
  "releases": {
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0722039f41203c9d5b4fea55049568a3b78f795247fe13ce70cdb3eed45cb4cc",
          "md5": "b1ad61c30d50fde90cc263df4c940356",
          "sha256": "0cf31ead8d149c1833b54865264bfe4edbc85912e0a8bcf1135e14f5dfb4b4f1"
        },
        "downloads": -1,
        "filename": "jsonfield-joinup-2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b1ad61c30d50fde90cc263df4c940356",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8164,
        "upload_time": "2021-06-22T11:10:53",
        "upload_time_iso_8601": "2021-06-22T11:10:53.200640Z",
        "url": "https://files.pythonhosted.org/packages/07/22/039f41203c9d5b4fea55049568a3b78f795247fe13ce70cdb3eed45cb4cc/jsonfield-joinup-2.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0722039f41203c9d5b4fea55049568a3b78f795247fe13ce70cdb3eed45cb4cc",
        "md5": "b1ad61c30d50fde90cc263df4c940356",
        "sha256": "0cf31ead8d149c1833b54865264bfe4edbc85912e0a8bcf1135e14f5dfb4b4f1"
      },
      "downloads": -1,
      "filename": "jsonfield-joinup-2.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b1ad61c30d50fde90cc263df4c940356",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8164,
      "upload_time": "2021-06-22T11:10:53",
      "upload_time_iso_8601": "2021-06-22T11:10:53.200640Z",
      "url": "https://files.pythonhosted.org/packages/07/22/039f41203c9d5b4fea55049568a3b78f795247fe13ce70cdb3eed45cb4cc/jsonfield-joinup-2.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}