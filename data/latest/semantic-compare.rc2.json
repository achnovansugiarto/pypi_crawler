{
  "info": {
    "author": "Planeks",
    "author_email": "maxlytvynchuk@planeks.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# python-semantic-сompare\nExtracts, compares, transforms and sorts with buckets phrases.\n### Installation\nInstall a library\n```sh\n$ pip install semantic-compare\n```\nThe library requires a spacy model for natural language processing. If you want to use English, please run this command\n```sh\n$ python -m spacy download en_core_web_lg\n```\n## Usage\n#### Extract phrases\n**Simple Usage**\n```sh\nfrom semantic_compare import SemanticComparator as sc\ncomparator = sc(sentencizer=True)\nphrases = comparator.extract_phrases(\"Create, promote and develop a business.\")\n```\n**Output:**\n```sh\n['Create a business','promote a business','develop a business']\n```\n```sentencizer``` - a splitter of sentences by punctuation(dot, question mark, exclamation mark).\n\n**Advanced Usage**\n```sh\nfrom semantic_compare import SemanticComparator as sc\n\n# Sentence splitter\ndef our_sentencizer(doc):\n    \"\"\"\n    Sentence splitter function that allows splitting document on sentences\n    by different punctuations and new line\n    \"\"\"\n    for i, token in enumerate(doc[:-2]):\n        if token.text == \"•\" or \"•\" in token.text:\n            doc[i].is_sent_start = True\n        elif (token.text == \".\" or token.text == '...' \\ \n            or token.text == '?' or token.text == '!' or token.text == '\\n') \\\n            and doc[i+1].is_title:\n            doc[i+1].is_sent_start = True\n        else:\n            doc[i+1].is_sent_start = False\n    return doc\n\n\n# load small english spacy model(can be any spacy model)\ncomparator = sc(spacy_model='en_core_web_sm')\n    \n# Add a custom pipe for text preprocessing\ncomparator.add_custom_pipe(our_sentencizer, before='parser')\n\nphrases = comparator.extract_phrases('''\nMust Have:\n* Experience shaping the BI strategy from C-Level to Technical developers.\n* Extensive delivery of platform within a Business Intelligence and Analytics function.\n* Communication with stakeholders on all levels.\n''')\nprint('\\n'.join(phrases))\n```\nUsing ```add_custom_pipe``` you can add your custom pipe for text processing in spacy.\n### Compare phrases (Semantic similarity)\nGet the similarity of phrases against each other.\n**Example 1:**\n```sh\nphrase1 = 'Understand customer needs'\nphrase2 = 'Capture business requirements'\nsimilarity = comparator.compare_phrases(phrase1, phrase2)\nprint(similarity)\n```\n**Output:**\n```\n0.38569751\n```\n**Example 2:**\nGet a two-dimensional matrix that clusters the similarity of phrases against each other.\n```sh\nphrases_1 = [\n    'Communication with stakeholders',\n    'Understand customer needs',\n    'Experience shaping the BI strategy',\n    'shaping the BI strategy',\n    'Delivery of platform Analytics function',\n]\n\nphrases_2 = [\n    'Extensive delivery of platform within a Business Intelligence and Analytics function',\n    'shaping the BI strategy',\n    'Experience shaping the BI strategy from C-Level to Technical developers',\n    'Communication with stakeholders on all levels',\n    'Capture business requirements',\n    'Play computer games',\n]\nsimilarity = comparator.build_similarity_matrix(phrases_1, phrases_2)\nprint(similarity)\n```\n**Output:**\n```\n[[-0.03689054  0.0372301   0.17840812  0.09079809  0.65748763]\n[ 0.18079719  0.12055688  0.77624094  1.          0.22749564]\n[ 0.08472343  0.11505745  0.7030021   0.48876476  0.13252231]\n[ 0.7132235   0.07449755  0.178031    0.15712512  0.0676512 ]\n[ 0.11637229  0.38569745  0.23005028  0.25646406  0.26493344]\n[ 0.17955953  0.15243992  0.11233422  0.16087453  0.03144675]]\n```\n## Bucket sorting\nWhen you compare two documents you can see which phrases present in both or only in a specific document.\n```sh\nphrases_1 = [\n    'Communication with stakeholders',\n    'Understand customer needs',\n    'Experience shaping the BI strategy',\n    'shaping the BI strategy',\n    'Delivery of platform Analytics function',\n]\n\nphrases_2 = [\n    'Extensive delivery of platform within a Business Intelligence and Analytics function',\n    'shaping the BI strategy',\n    'Experience shaping the BI strategy from C-Level to Technical developers',\n    'Communication with stakeholders on all levels',\n    'Capture business requirements',\n    'Play computer games',\n]\n# cut_off - a percentage of similarity should be bigger than it so that we consider that phrases are similar(default=0.3)\nin_both, in_doc1, in_doc2 = comparator.bucket_sorting(\n    phrases_1, phrases_2, similarity, cut_off=0.5)\n```\n## Transfrom phrases\nGet all steps of transformation from one phrase to another.\n**Example:**\n```sh\nprint(comparator.transform_phrase(\n    'Understand customer needs',\n    'Capture business requirements',\n))\n```\n**Output**\n```sh\n[\"Understand customer needs\", \"Capture customer needs\", \"Capture business requirements\"]\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/planeks/python-semantic-compare",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "semantic-compare",
    "package_url": "https://pypi.org/project/semantic-compare/",
    "platform": "",
    "project_url": "https://pypi.org/project/semantic-compare/",
    "project_urls": {
      "Homepage": "https://github.com/planeks/python-semantic-compare"
    },
    "release_url": "https://pypi.org/project/semantic-compare/0.9.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "NLP library that extracts, compares, transforms and sorts with buckets phrases.",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6820967,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02e37c8b9f4bd8f9e98e61cfd80028a0abbea661a52276851b95faa352edc3f2",
          "md5": "c5fb4f7d59c07baaaee38e92e2a42b82",
          "sha256": "29b590136073fa2d0dca1c3a35bc181587bdb894b1fc8b5a9143cde580f4dedd"
        },
        "downloads": -1,
        "filename": "semantic_compare-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c5fb4f7d59c07baaaee38e92e2a42b82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6095,
        "upload_time": "2020-03-16T12:06:34",
        "upload_time_iso_8601": "2020-03-16T12:06:34.897226Z",
        "url": "https://files.pythonhosted.org/packages/02/e3/7c8b9f4bd8f9e98e61cfd80028a0abbea661a52276851b95faa352edc3f2/semantic_compare-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d7f8c12a335d3cbc5c146653a3c6fe3b68ba43e96b744bee86c976b7d011fb2",
          "md5": "60c60be83da5cdf20d5350dbf0d214d7",
          "sha256": "89d74f3d5f125c2d7819418713e32d9e3f8e58dee240e9ed2d0a0ebedf601838"
        },
        "downloads": -1,
        "filename": "semantic_compare-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "60c60be83da5cdf20d5350dbf0d214d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6140,
        "upload_time": "2020-03-16T12:26:32",
        "upload_time_iso_8601": "2020-03-16T12:26:32.693092Z",
        "url": "https://files.pythonhosted.org/packages/8d/7f/8c12a335d3cbc5c146653a3c6fe3b68ba43e96b744bee86c976b7d011fb2/semantic_compare-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d7f8c12a335d3cbc5c146653a3c6fe3b68ba43e96b744bee86c976b7d011fb2",
        "md5": "60c60be83da5cdf20d5350dbf0d214d7",
        "sha256": "89d74f3d5f125c2d7819418713e32d9e3f8e58dee240e9ed2d0a0ebedf601838"
      },
      "downloads": -1,
      "filename": "semantic_compare-0.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "60c60be83da5cdf20d5350dbf0d214d7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6140,
      "upload_time": "2020-03-16T12:26:32",
      "upload_time_iso_8601": "2020-03-16T12:26:32.693092Z",
      "url": "https://files.pythonhosted.org/packages/8d/7f/8c12a335d3cbc5c146653a3c6fe3b68ba43e96b744bee86c976b7d011fb2/semantic_compare-0.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}