{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Documentation",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# alphadoc\n\n[![PyPI version](https://img.shields.io/pypi/v/alphadoc.svg?color=green&style=for-the-badge)](https://pypi.org/project/pdoc3)\n![ISSUES](https://img.shields.io/github/issues-closed/MLH-Fellowship/alphadoc?color=blue&style=for-the-badge)\n![PULL REQUESTS](https://img.shields.io/github/issues-pr-closed/MLH-Fellowship/alphadoc?color=orange&style=for-the-badge)\n\nAutomatic docstring generator and style guide that supports a number of specified conventions for documentation in Python.\n\nFeatures\n--------\n* Auto-generates docstrings with a customizable template for functions.\n* Automatically fixes the code according to the standard PEP-8 style convention for python.\n* Support for common and widely used docstrings formats such as Numpy, Google, ReStructured Text and Epytext (Javadoc)\n\nInstallation\n------------\nUsing pip:\n\n    $ pip install alphadoc\n\nUsage\n-----\nalphadoc takes your filename and format type as arguments\n\n    $ alphadoc <filename> --d <doc_format>\n\nSee `alphadoc --help` for more command-line switches and options!\n\nOptions :\n```\nUsage: alphadoc [OPTIONS] FILENAME\n\n  Automatic docstring generator and style guide that  supports a\n  number of specified conventions for formatting  as well as\n  documentation in Python.\n\nOptions:\n  -d, --doc_format TEXT  Specified format for docstrings from Options-\n                         ReST : For ReStructured Text (default); Epytext\n                         :  For Epytext (Javadoc); Google : For Google-\n                         Style ; Numpydoc : For Numpydoc\n\n  --help                 Show this message and exit.\n```\nExample :\n\nBefore alphadoc\n```python\nimport ast\nimport sys\n\ndef top_level_functions(body):\n    return (f for f in body if isinstance(f, ast.FunctionDef))\n\ndef parse_ast(filename):\n    with open(filename, \"rt\") as file:\n        return ast.parse(file.read(), filename=filename)\n\ndef get_func(filename):\n    tree = parse_ast(filename)\n    func_list = []\n    for func in top_level_functions(tree.body):\n        func_list.append(func.name)\n    return func_list\n```\nAfter alphadoc \n\nDocstring format:\n\n* **ReStructured Text** (default) \n```python\nimport ast\nimport sys\n\ndef top_level_functions(body):\n    \"\"\"\n        This is reST style.\n\n        :param param1: this is a first param\n        :param param2: this is a second param\n        :returns: this is a description of what is returned\n        :raises keyError: raises an exception\n    \"\"\"\n    return (f for f in body if isinstance(f, ast.FunctionDef))\n\ndef parse_ast(filename):\n    \"\"\"\n        This is reST style.\n\n        :param param1: this is a first param\n        :param param2: this is a second param\n        :returns: this is a description of what is returned\n        :raises keyError: raises an exception\n    \"\"\"\n    with open(filename, \"rt\") as file:\n        return ast.parse(file.read(), filename=filename)\n\ndef get_func(filename):\n    \"\"\"\n        This is reST style.\n\n        :param param1: this is a first param\n        :param param2: this is a second param\n        :returns: this is a description of what is returned\n        :raises keyError: raises an exception\n    \"\"\"\n    tree = parse_ast(filename)\n    func_list = []\n    for func in top_level_functions(tree.body):\n        func_list.append(func.name)\n    return func_list\n```\n* **Epytext (Javadoc)** \n```python\nimport ast\nimport sys\n\ndef top_level_functions(body):\n    \"\"\"\n        This is javadoc style.\n\n        @param param1: this is a first param\n        @param param2: this is a second param\n        @return: this is a description of what is returned\n        @raise keyError: raises an exception\n    \"\"\"\n    return (f for f in body if isinstance(f, ast.FunctionDef))\n\ndef parse_ast(filename):\n    \"\"\"\n        This is javadoc style.\n\n        @param param1: this is a first param\n        @param param2: this is a second param\n        @return: this is a description of what is returned\n        @raise keyError: raises an exception\n    \"\"\"\n    with open(filename, \"rt\") as file:\n        return ast.parse(file.read(), filename=filename)\n\ndef get_func(filename):\n    \"\"\"\n        This is javadoc style.\n\n        @param param1: this is a first param\n        @param param2: this is a second param\n        @return: this is a description of what is returned\n        @raise keyError: raises an exception\n    \"\"\"\n    tree = parse_ast(filename)\n    func_list = []\n    for func in top_level_functions(tree.body):\n        func_list.append(func.name)\n    return func_list\n```\n* **Google** \n```python\nimport ast\nimport sys\n\ndef top_level_functions(body):\n    \"\"\"\n            This is an example of Google style.\n\n            Args:\n            param1: This is the first param.\n            param2: This is a second param.\n\n            Returns:\n            This is a description of what is returned.\n\n            Raises:\n            KeyError: Raises an exception.\n    \"\"\"\n    return (f for f in body if isinstance(f, ast.FunctionDef))\n\ndef parse_ast(filename):\n    \"\"\"\n            This is an example of Google style.\n\n            Args:\n            param1: This is the first param.\n            param2: This is a second param.\n\n            Returns:\n            This is a description of what is returned.\n\n            Raises:\n            KeyError: Raises an exception.\n    \"\"\"\n    with open(filename, \"rt\") as file:\n        return ast.parse(file.read(), filename=filename)\n\ndef get_func(filename):\n    \"\"\"\n            This is an example of Google style.\n\n            Args:\n            param1: This is the first param.\n            param2: This is a second param.\n\n            Returns:\n            This is a description of what is returned.\n\n            Raises:\n            KeyError: Raises an exception.\n    \"\"\"\n    tree = parse_ast(filename)\n    func_list = []\n    for func in top_level_functions(tree.body):\n        func_list.append(func.name)\n    return func_list\n```\n* **Numpydoc** \n```python\nimport ast\nimport sys\n\ndef top_level_functions(body):\n    \"\"\"\n        Numpydoc description of a kind\n        of very exhautive numpydoc format docstring.\n\n        Parameters\n        ----------\n        first : array_like\n            the 1st param name `first`\n        second :\n            the 2nd param\n        third : {'value', 'other'}, optional\n            the 3rd param, by default 'value'\n\n        Returns\n        -------\n        string\n            a value in a string\n\n        Raises\n        ------\n        KeyError\n            when a key error\n        OtherError\n            when an other error\n    \"\"\"\n    return (f for f in body if isinstance(f, ast.FunctionDef))\n\ndef parse_ast(filename):\n    \"\"\"\n        Numpydoc description of a kind\n        of very exhautive numpydoc format docstring.\n\n        Parameters\n        ----------\n        first : array_like\n            the 1st param name `first`\n        second :\n            the 2nd param\n        third : {'value', 'other'}, optional\n            the 3rd param, by default 'value'\n\n        Returns\n        -------\n        string\n            a value in a string\n\n        Raises\n        ------\n        KeyError\n            when a key error\n        OtherError\n            when an other error\n    \"\"\"\n    with open(filename, \"rt\") as file:\n        return ast.parse(file.read(), filename=filename)\n\ndef get_func(filename):\n    \"\"\"\n        Numpydoc description of a kind\n        of very exhautive numpydoc format docstring.\n\n        Parameters\n        ----------\n        first : array_like\n            the 1st param name `first`\n        second :\n            the 2nd param\n        third : {'value', 'other'}, optional\n            the 3rd param, by default 'value'\n\n        Returns\n        -------\n        string\n            a value in a string\n\n        Raises\n        ------\n        KeyError\n            when a key error\n        OtherError\n            when an other error\n    \"\"\"\n    tree = parse_ast(filename)\n    func_list = []\n    for func in top_level_functions(tree.body):\n        func_list.append(func.name)\n    return func_list\n```\n\nReferences\n-----------\nhttp://daouzli.com/blog/docstring.html\n\n\nContributing\n-----------\nalphadoc is fully Open-Source and open for contributions! We request you to respect our contribution guidelines as defined in our [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md) and [CONTRIBUTING.md](CONTRIBUTING.md)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MLH-Fellowship/alphadoc",
    "keywords": "automation,docstring-generator,auto-docstrings,pep8",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alphadoc",
    "package_url": "https://pypi.org/project/alphadoc/",
    "platform": "",
    "project_url": "https://pypi.org/project/alphadoc/",
    "project_urls": {
      "Homepage": "https://github.com/MLH-Fellowship/alphadoc"
    },
    "release_url": "https://pypi.org/project/alphadoc/1.0.3/",
    "requires_dist": [
      "click (==7.1.2)",
      "setuptools (==50.3.2)",
      "autopep8 (==1.5.4)",
      "pathlib (==1.0.1)"
    ],
    "requires_python": "",
    "summary": "Automatic style guide and docstrings generator for Python code",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8735013,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81b5efed852a423914323ab8a600400c4316b9da51e5c129e9fc9d47a3a99cab",
          "md5": "faf5dcac4d39c8c6163c4d888a217e22",
          "sha256": "8e3da3667a86ca7fadd08b02dac5eea043c98d2c48b99f0f7f289182dd1c71cf"
        },
        "downloads": -1,
        "filename": "alphadoc-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "faf5dcac4d39c8c6163c4d888a217e22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1990,
        "upload_time": "2020-11-22T18:43:38",
        "upload_time_iso_8601": "2020-11-22T18:43:38.335573Z",
        "url": "https://files.pythonhosted.org/packages/81/b5/efed852a423914323ab8a600400c4316b9da51e5c129e9fc9d47a3a99cab/alphadoc-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96f108b36233a39f8d299479bf62dfa128cb05e028e6a3d9c3bed6d306177abb",
          "md5": "15fb118a4bb0cb92c564f09eca90e7de",
          "sha256": "1ed49576065b0f4edf869dc93eb89d1b69b77d7f7f47898fbc9aa837ceb82562"
        },
        "downloads": -1,
        "filename": "alphadoc-1.0.1-py3.6.egg",
        "has_sig": false,
        "md5_digest": "15fb118a4bb0cb92c564f09eca90e7de",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": null,
        "size": 2017,
        "upload_time": "2020-11-23T17:45:08",
        "upload_time_iso_8601": "2020-11-23T17:45:08.981635Z",
        "url": "https://files.pythonhosted.org/packages/96/f1/08b36233a39f8d299479bf62dfa128cb05e028e6a3d9c3bed6d306177abb/alphadoc-1.0.1-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec9f32925a6d8045389c157e0b100ea0ca4bf90a7fb3f16af8fa099d29041e86",
          "md5": "28d5e93c0d8b73d1cb33c1379c08c34e",
          "sha256": "22a66c6226027349a24633431192ceec7376dababc8262c631ab9cfdfaaf67f4"
        },
        "downloads": -1,
        "filename": "alphadoc-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28d5e93c0d8b73d1cb33c1379c08c34e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2904,
        "upload_time": "2020-11-23T17:45:06",
        "upload_time_iso_8601": "2020-11-23T17:45:06.822704Z",
        "url": "https://files.pythonhosted.org/packages/ec/9f/32925a6d8045389c157e0b100ea0ca4bf90a7fb3f16af8fa099d29041e86/alphadoc-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c8176f68612f50f82fd7ff317da89e5a8de5bbc6e3d069ce00f9ff2fec9b2a5",
          "md5": "ba62922d9f4b407b72f942ead6f8a5b2",
          "sha256": "29a1f136bb5e023f226dbbe1a2262759fdae242adcca2182090c6300b0b18e1e"
        },
        "downloads": -1,
        "filename": "alphadoc-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba62922d9f4b407b72f942ead6f8a5b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2010,
        "upload_time": "2020-11-23T17:45:10",
        "upload_time_iso_8601": "2020-11-23T17:45:10.365310Z",
        "url": "https://files.pythonhosted.org/packages/8c/81/76f68612f50f82fd7ff317da89e5a8de5bbc6e3d069ce00f9ff2fec9b2a5/alphadoc-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b2fded791113ac71021a05e171cf862e60b6ed73b67a1b948e90da305a5eb12",
          "md5": "cc096de3971a14b763d3844f4135e863",
          "sha256": "af1ff17c200254595f68eb5dc2db79f73bae7454ae449bb093fb45c0fe185ea5"
        },
        "downloads": -1,
        "filename": "alphadoc-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc096de3971a14b763d3844f4135e863",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6216,
        "upload_time": "2020-11-23T18:18:45",
        "upload_time_iso_8601": "2020-11-23T18:18:45.653247Z",
        "url": "https://files.pythonhosted.org/packages/3b/2f/ded791113ac71021a05e171cf862e60b6ed73b67a1b948e90da305a5eb12/alphadoc-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a84a2f273dad352c08247deac67fa8b1a3d438373d05c397f0d84d56068535ef",
          "md5": "b1a497357c57773cd0b3cce25ece3fb5",
          "sha256": "f6fb401bbc597645530098b511e89d86ac98884f694b844bc1ccf12e058c7997"
        },
        "downloads": -1,
        "filename": "alphadoc-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b1a497357c57773cd0b3cce25ece3fb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4128,
        "upload_time": "2020-11-23T18:18:50",
        "upload_time_iso_8601": "2020-11-23T18:18:50.848415Z",
        "url": "https://files.pythonhosted.org/packages/a8/4a/2f273dad352c08247deac67fa8b1a3d438373d05c397f0d84d56068535ef/alphadoc-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41a97b91e5a2fecbe4879a6d32a800ee3b579eb5c12186e1d93f606a8602ade6",
          "md5": "aa69bc636226f42ab4dca80cb2823f8e",
          "sha256": "5380a2b703016fe3041d4c9fdd78433761053db08a5ceb5a4b324c1cff6dbe56"
        },
        "downloads": -1,
        "filename": "alphadoc-1.0.3-py3.6.egg",
        "has_sig": false,
        "md5_digest": "aa69bc636226f42ab4dca80cb2823f8e",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": null,
        "size": 11787,
        "upload_time": "2020-11-24T07:04:57",
        "upload_time_iso_8601": "2020-11-24T07:04:57.200541Z",
        "url": "https://files.pythonhosted.org/packages/41/a9/7b91e5a2fecbe4879a6d32a800ee3b579eb5c12186e1d93f606a8602ade6/alphadoc-1.0.3-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8a4fb15283165c4293c1f94ac9511ab9088114e66b261c3dc10425d0a2d5720",
          "md5": "a2c721e0c897d7d3f11478f9c9481e70",
          "sha256": "32e0bb5f8daaafbf1d063db89b53994db4011ce350fa50631f74d2ce1e8fc4de"
        },
        "downloads": -1,
        "filename": "alphadoc-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2c721e0c897d7d3f11478f9c9481e70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7414,
        "upload_time": "2020-11-24T07:04:37",
        "upload_time_iso_8601": "2020-11-24T07:04:37.591870Z",
        "url": "https://files.pythonhosted.org/packages/f8/a4/fb15283165c4293c1f94ac9511ab9088114e66b261c3dc10425d0a2d5720/alphadoc-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1394c662e76208c4cfbccc2d84af75d466c6e4cac222c589ca44cb80b22747b3",
          "md5": "72f6ee475b0a3f588c48ffcaf4cda00e",
          "sha256": "60b1cce58c454b017f74fd4b3227e15cbd321d51d6c1f7fce34401b7e492ffc7"
        },
        "downloads": -1,
        "filename": "alphadoc-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "72f6ee475b0a3f588c48ffcaf4cda00e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5085,
        "upload_time": "2020-11-24T07:05:07",
        "upload_time_iso_8601": "2020-11-24T07:05:07.248080Z",
        "url": "https://files.pythonhosted.org/packages/13/94/c662e76208c4cfbccc2d84af75d466c6e4cac222c589ca44cb80b22747b3/alphadoc-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41a97b91e5a2fecbe4879a6d32a800ee3b579eb5c12186e1d93f606a8602ade6",
        "md5": "aa69bc636226f42ab4dca80cb2823f8e",
        "sha256": "5380a2b703016fe3041d4c9fdd78433761053db08a5ceb5a4b324c1cff6dbe56"
      },
      "downloads": -1,
      "filename": "alphadoc-1.0.3-py3.6.egg",
      "has_sig": false,
      "md5_digest": "aa69bc636226f42ab4dca80cb2823f8e",
      "packagetype": "bdist_egg",
      "python_version": "3.6",
      "requires_python": null,
      "size": 11787,
      "upload_time": "2020-11-24T07:04:57",
      "upload_time_iso_8601": "2020-11-24T07:04:57.200541Z",
      "url": "https://files.pythonhosted.org/packages/41/a9/7b91e5a2fecbe4879a6d32a800ee3b579eb5c12186e1d93f606a8602ade6/alphadoc-1.0.3-py3.6.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f8a4fb15283165c4293c1f94ac9511ab9088114e66b261c3dc10425d0a2d5720",
        "md5": "a2c721e0c897d7d3f11478f9c9481e70",
        "sha256": "32e0bb5f8daaafbf1d063db89b53994db4011ce350fa50631f74d2ce1e8fc4de"
      },
      "downloads": -1,
      "filename": "alphadoc-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a2c721e0c897d7d3f11478f9c9481e70",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7414,
      "upload_time": "2020-11-24T07:04:37",
      "upload_time_iso_8601": "2020-11-24T07:04:37.591870Z",
      "url": "https://files.pythonhosted.org/packages/f8/a4/fb15283165c4293c1f94ac9511ab9088114e66b261c3dc10425d0a2d5720/alphadoc-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1394c662e76208c4cfbccc2d84af75d466c6e4cac222c589ca44cb80b22747b3",
        "md5": "72f6ee475b0a3f588c48ffcaf4cda00e",
        "sha256": "60b1cce58c454b017f74fd4b3227e15cbd321d51d6c1f7fce34401b7e492ffc7"
      },
      "downloads": -1,
      "filename": "alphadoc-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "72f6ee475b0a3f588c48ffcaf4cda00e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5085,
      "upload_time": "2020-11-24T07:05:07",
      "upload_time_iso_8601": "2020-11-24T07:05:07.248080Z",
      "url": "https://files.pythonhosted.org/packages/13/94/c662e76208c4cfbccc2d84af75d466c6e4cac222c589ca44cb80b22747b3/alphadoc-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}