{
  "info": {
    "author": "haeren",
    "author_email": "erenhalp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Parallel Feature Selector\nA feature selection module that works in parallel among the processors\n\n## Installation\n\n```\npip install parallel-feature-selector\n```\n\nDependencies:\n- pandas\n- scikit-learn\n- mpi4py\n- arff2pandas\n- openpyxl\n\nMPI needs to be installed on the computer.\nFor Windows:\n- Install both Microsoft MPI v10.0 and Microsoft MPI SDK\n- Set up environment variables\n-- C:\\Program Files (x86)\\Microsoft SDKs\\MPI\n-- C:\\Program Files\\Microsoft MPI\\Bin\n- Install mpi4py with \"conda install -c intel mpi4py\" in Anaconda Prompt\n\n## Usage (Module)\n\nExample Code:\n```\nimport parallel_feature_selector as pfs\npfs.bruteForce(data, estimator, 0.2, 42, 10, 10, True, 'outputTimeAnalysis.csv', 'outputSubsetAnalysis.csv')\n```\n\nFunction Parameters and Default Arguments:\n```\ndef bruteForce(data, estimator, testSize=0.2, randomState=42, cv=5, topScoreNo=5, shuffle=True, timeResultFile='outputTimeAnalysis.csv', scoreResultFile='outputSubsetAnalysis.csv')\n```\n\n| Parameter | Description |\n| ------ | ------ |\n| data | pandas.DataFrame with column names and numerical values |\n| esimator | scikit-learn esimator object |\n| testSize | float, test size between 0 and 1 for train_test_split (Default = 0.2) |\n| randomState | int or None, random state for train_test_split (Default = 42) |\n| cv | int, fold number for cross-validation (Default = 5) |\n| topScoreNo | int, specifies how many best-scoring subsets to print (Default = 5) |\n| shuffle | bool, used to shuffle the data set before splitting (Default = True) |\n| timeResultFile | Output file path for elapsed time results in csv format (Default = 'outputTimeAnalysis.csv') |\n| scoreResultFile | Output file path for score and subset results in csv format (Default = 'outputSubsetAnalysis.csv') | \n\n# Usage (Script)\n\nYou can also run the code in terminal with the following arguments:\n```\nmpiexec -n [PROCESS_NO] python parallel_feature_selector.py [DATA_SET_PATH] [ESTIMATOR_NAME] [TEST_SIZE] [RANDOM_STATE] [CROSS_VALIDATION] [TOP_SCORE_NO] [SHUFFLE] [TIME_RESULT_PATH] [SCORE_RESULT_PATH]\n```\n\n- [RANDOM_STATE] must be given as integer ('None' can be given in module function)\n- [SHUFFLE] must be given as integer, 1 for 'True' and 0 for 'False' ('True' or 'False' in module function)\n\nExample:\n```\nmpiexec -n 4 python parallel_feature_selector.py C:\\Users\\BILGISAYAR\\Desktop\\AcademicPerformance.csv gnb 0.2 1 10 10 1 outputTimeAnalysis.csv outputSubsetAnalysis.csv\n```\n\nWhen running the script in terminal:\n- .csv .xlsx .arff files can be used for input data set\n- Available estimator arguments: gnb, bnb, knnMinkowski, knnEuclidean, svcRbf, svcPoly, logReg, dtEntropy, dtGini, rfEntropy, rfGini\n\n| Terminal Argument | Scikit-Learn Estimator |\n| ------ | ------ |\n| gnb | GaussianNB() | \n| bnb | BernoulliNB() |\n| knnMinkowski | KNeighborsClassifier(n_neighbors=5, metric='minkowski') |\n| knnEuclidean | KNeighborsClassifier(n_neighbors=5, metric='euclidean') |\n| svcRbf | SVC(kernel = 'rbf', gamma='scale') |\n| svcPoly | SVC(kernel = 'poly', gamma='scale') |\n| logReg | LogisticRegression(solver='liblinear', multi_class='auto') |\n| dtEntropy | DecisionTreeClassifier(criterion='entropy', random_state = 1) |\n| dtGini | DecisionTreeClassifier(criterion='gini', random_state = 1) |\n| rfEntropy | RandomForestClassifier(n_estimators=10, criterion='entropy', random_state=1) |\n| rfGini | RandomForestClassifier(n_estimators=10, criterion='gini', random_state=1) |\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/haeren/parallel-feature-selector",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parallel-feature-selector",
    "package_url": "https://pypi.org/project/parallel-feature-selector/",
    "platform": "",
    "project_url": "https://pypi.org/project/parallel-feature-selector/",
    "project_urls": {
      "Homepage": "https://github.com/haeren/parallel-feature-selector"
    },
    "release_url": "https://pypi.org/project/parallel-feature-selector/0.1.1/",
    "requires_dist": [
      "pandas",
      "scikit-learn",
      "mpi4py",
      "arff2pandas",
      "openpyxl"
    ],
    "requires_python": ">=3.6",
    "summary": "Package for parallelized feature selection methods",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10940669,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ed50be34fe9bfbba943e3e3c71e314ba5c1c228ae4fe623876779842ab3756a",
          "md5": "a22220e28022069fdee64849584ec33b",
          "sha256": "b538d436892940069484b069e06ed65719484bb55d1641bda18054ca780a0722"
        },
        "downloads": -1,
        "filename": "parallel_feature_selector-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a22220e28022069fdee64849584ec33b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6502,
        "upload_time": "2021-07-18T19:45:54",
        "upload_time_iso_8601": "2021-07-18T19:45:54.232524Z",
        "url": "https://files.pythonhosted.org/packages/8e/d5/0be34fe9bfbba943e3e3c71e314ba5c1c228ae4fe623876779842ab3756a/parallel_feature_selector-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6748a15df2d775de4e553670722240570a7b92a54daef29c392defe6cab6f4c",
          "md5": "5c4dd0d24bb4d7237a4cab14f56eb352",
          "sha256": "e3317a50e04c352a4da66e8a47c77e473650a368b17696b3e213057eee7c4e43"
        },
        "downloads": -1,
        "filename": "parallel-feature-selector-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5c4dd0d24bb4d7237a4cab14f56eb352",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5855,
        "upload_time": "2021-07-18T19:45:56",
        "upload_time_iso_8601": "2021-07-18T19:45:56.061807Z",
        "url": "https://files.pythonhosted.org/packages/e6/74/8a15df2d775de4e553670722240570a7b92a54daef29c392defe6cab6f4c/parallel-feature-selector-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ed50be34fe9bfbba943e3e3c71e314ba5c1c228ae4fe623876779842ab3756a",
        "md5": "a22220e28022069fdee64849584ec33b",
        "sha256": "b538d436892940069484b069e06ed65719484bb55d1641bda18054ca780a0722"
      },
      "downloads": -1,
      "filename": "parallel_feature_selector-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a22220e28022069fdee64849584ec33b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6502,
      "upload_time": "2021-07-18T19:45:54",
      "upload_time_iso_8601": "2021-07-18T19:45:54.232524Z",
      "url": "https://files.pythonhosted.org/packages/8e/d5/0be34fe9bfbba943e3e3c71e314ba5c1c228ae4fe623876779842ab3756a/parallel_feature_selector-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6748a15df2d775de4e553670722240570a7b92a54daef29c392defe6cab6f4c",
        "md5": "5c4dd0d24bb4d7237a4cab14f56eb352",
        "sha256": "e3317a50e04c352a4da66e8a47c77e473650a368b17696b3e213057eee7c4e43"
      },
      "downloads": -1,
      "filename": "parallel-feature-selector-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5c4dd0d24bb4d7237a4cab14f56eb352",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5855,
      "upload_time": "2021-07-18T19:45:56",
      "upload_time_iso_8601": "2021-07-18T19:45:56.061807Z",
      "url": "https://files.pythonhosted.org/packages/e6/74/8a15df2d775de4e553670722240570a7b92a54daef29c392defe6cab6f4c/parallel-feature-selector-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}