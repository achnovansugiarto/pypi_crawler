{
  "info": {
    "author": "Brendan Quinn",
    "author_email": "office@iptc.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# NewsML-G2 - Python implementation of the NewsML-G2 standard\n\nNewsML-G2 is an open standard created by the International Press\nTelecommunications Council to share news content. See http://www.newsml-g2.org/\n\nThis module is a part-implementation of the standard in Python.  Currently it\nreads itemMeta and contentMeta blocks, catalogs and metadata objects from\nNewsML-G2 XML files and outputs Python objects.\n\nWork in progress.\n\nCurrently built for Python 3 only - please let us know if you require Python 2\nsupport.\n\n## Installation\n\nInstalling from PyPI:\n\n    pip install newsmlg2\n\n## Reading NewsML-G2 files\n\nExample:\n\n```\nimport NewsMLG2\n\n# load NewsML-G2 from a file and print the parsed version\ng2doc = NewsMLG2.NewsMLG2Document(filename=\"test-newsmlg2-file.xml\")\nprint(g2doc.get_item())\n\n# load NewsML-G2 from a string\ng2doc = NewsMLG2.NewsMLG2Document(\nb\"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<newsItem\n    xmlns=\"http://iptc.org/std/nar/2006-10-01/\"\n    guid=\"simplest-test\"\n    standard=\"NewsML-G2\"\n    standardversion=\"2.29\"\n    conformance=\"power\"\n    version=\"1\"\n    xml:lang=\"en-GB\">\n    <catalogRef href=\"http://www.iptc.org/std/catalog/catalog.IPTC-G2-Standards_36.xml\" />\n    <itemMeta>\n        <itemClass qcode=\"ninat:text\" />\n        <provider qcode=\"nprov:IPTC\" />\n        <versionCreated>2020-06-22T12:00:00+03:00</versionCreated>\n    </itemMeta>\n    <contentSet>\n        <inlineXML contenttype=\"application/nitf+xml\">\n        </inlineXML>\n    </contentSet>\n</newsItem>\n\"\"\")\n\n# get the newsItem from the parsed object\nnewsitem = g2doc.getNewsItem()\n# test various elements and attributes using our shortcut dot syntax\nassert newsitem.guid == 'simplest-test'\nassert newsitem.standard == 'NewsML-G2'\nassert newsitem.standardversion == '2.29'\nassert newsitem.conformance == 'power'\n\nitemmeta = newsitem.itemmeta\n# you can choose whether to use qcodes or URIs, we do the conversion for you\n# using the catalog declared in the NewsML-G2 file\nassert itemmeta.itemclass.qcode == 'ninat:text'\nassert NewsMLG2.qcode_to_uri(itemmeta.itemclass.qcode) == 'http://cv.iptc.org/newscodes/ninature/text'\nassert itemmeta.provider.qcode == 'nprov:IPTC'\nassert NewsMLG2.qcode_to_uri(itemmeta.provider.qcode) == 'http://cv.iptc.org/newscodes/newsprovider/IPTC'\n# Elements that contain a simple text string can be read with str(class)\nassert str(itemmeta.versioncreated) == '2020-06-22T12:00:00+03:00'\n\netc...\n```\n\n## Creating NewsML-G2 files from code\n\nExample:\n```\n    g2doc = NewsMLG2.NewsMLG2Document()\n    newsitem = NewsMLG2.NewsItem()\n    newsitem.guid = 'test-guid'\n    newsitem.xml_lang = 'en-GB'\n    itemmeta = NewsMLG2.ItemMeta()\n    itemmeta.itemclass.qcode = \"ninat:text\"\n    itemmeta.provider.qcode = \"nprov:IPTC\"\n    itemmeta.versioncreated = \"2020-06-22T12:00:00+03:00\"\n    newsitem.itemmeta = itemmeta\n    g2doc.set_item(newsitem)\n\n    output_newsitem = g2doc.get_item()\n    assert newsitem.guid == 'test-guid'\n    assert newsitem.standard == 'NewsML-G2'\n    assert newsitem.standardversion == '2.29'\n    assert newsitem.conformance == 'power'\n    assert newsitem.version == '1'\n    assert newsitem.xml_lang == 'en-GB'\n\n    output_xml = g2doc.to_xml()\n    assert output_xml == (\n        \"<?xml version='1.0' encoding='utf-8'?>\\n\"\n        '<newsItem xmlns=\"http://iptc.org/std/nar/2006-10-01/\" xmlns:nitf=\"http://iptc.org/std/NITF/2006-10-18/\" xml:lang=\"en-GB\" standard=\"NewsML-G2\" standardversion=\"2.29\" conformance=\"power\" guid=\"test-guid\" version=\"1\">\\n'\n        '  <itemMeta>\\n'\n        '    <itemClass qcode=\"ninat:text\"/>\\n'\n        '    <provider qcode=\"nprov:IPTC\"/>\\n'\n        '    <versionCreated>2020-06-22T12:00:00+03:00</versionCreated>\\n'\n        '  </itemMeta>\\n'\n        '</newsItem>\\n')\n```\n\n## Testing\n\nA unit test library is included.\n\nRun it with:\n\n    pytest\n\nTest coverage can be measured with the `coverage.py` package:\n\n    pip install coverage\n    coverage run --source NewsMLG2 -m pytest \n    coverage report\n\n## Release notes\n\n* 0.1 - First release, pinned to Python 3 only (use pip >9.0 to ensure pip's\nPython version requirement works properly)\n* 0.2 - Can now read and write NewsML-G2 from code - NewsMessage and PlanningItem\nnot yet implemented. Probably quite a few bugs.\n* 0.3 - Changed from automatically converting between URIs and QCodes to providing\nhelper functions `uri_to_qcode()` and `qcode_to_uri()`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/iptc/python-newsmlg2/archive/v0.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/iptc/python-newsmlg2",
    "keywords": "api,media,publishing,news,syndication",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "newsmlg2",
    "package_url": "https://pypi.org/project/newsmlg2/",
    "platform": "",
    "project_url": "https://pypi.org/project/newsmlg2/",
    "project_urls": {
      "Download": "https://github.com/iptc/python-newsmlg2/archive/v0.3.tar.gz",
      "Homepage": "https://github.com/iptc/python-newsmlg2"
    },
    "release_url": "https://pypi.org/project/newsmlg2/0.3/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Python implementation of the NewsML-G2 standard (https://iptc.org/standards/newsml-g2/)",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11697647,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a2bfe7c59a0c18a1d9352ec7068df25ad3f3bae79aed738104e2ec4d4056834",
          "md5": "ba4951a87cefdf55d0d3c68c6bcee532",
          "sha256": "82d2b6e4ce9bbd80cb6f6243f94aa86078471f0222b7407f56fb07e2acac37e9"
        },
        "downloads": -1,
        "filename": "newsmlg2-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ba4951a87cefdf55d0d3c68c6bcee532",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 47646,
        "upload_time": "2021-10-12T10:37:07",
        "upload_time_iso_8601": "2021-10-12T10:37:07.917903Z",
        "url": "https://files.pythonhosted.org/packages/9a/2b/fe7c59a0c18a1d9352ec7068df25ad3f3bae79aed738104e2ec4d4056834/newsmlg2-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a2bfe7c59a0c18a1d9352ec7068df25ad3f3bae79aed738104e2ec4d4056834",
        "md5": "ba4951a87cefdf55d0d3c68c6bcee532",
        "sha256": "82d2b6e4ce9bbd80cb6f6243f94aa86078471f0222b7407f56fb07e2acac37e9"
      },
      "downloads": -1,
      "filename": "newsmlg2-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ba4951a87cefdf55d0d3c68c6bcee532",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 47646,
      "upload_time": "2021-10-12T10:37:07",
      "upload_time_iso_8601": "2021-10-12T10:37:07.917903Z",
      "url": "https://files.pythonhosted.org/packages/9a/2b/fe7c59a0c18a1d9352ec7068df25ad3f3bae79aed738104e2ec4d4056834/newsmlg2-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}