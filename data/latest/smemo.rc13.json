{
  "info": {
    "author": "Isaac To",
    "author_email": "isaac.to@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# smemo: Explicit session memoization\n\nMemoization of function return values is a very common optimization\ntechnique.  Even the standard Python 3 library provides multiple\nfacilities for it, e.g., `functools.cached_property` and\n`functools.lru_cache`.  Needless to say, many user-contributed\nfacilities are also available.\n\nMost of them focuses on ensuring that the cache is invisible to the\nuser.  When you call a function decorated by `functools.lru_cache`,\nyou don't really need to know that the function value is cached.  That\nis usually a big merit, but at times this is a big drawback.\n\nThe problem is on invalidation.  Most libraries spent a lot of efforts\nto keep track of them magically so that we don't need to worry about\nthem.  But at times, all these work are not necessary or outright\ncounterproductive.  The run of your program might be divided into\nparts, or sessions, where each session is benefited by having return\nvalues of functions, usually many of them, saved rather than\nrecomputed.  But after a session, the saved values of the function is\nof little value or even may be invalid, so there is not much to be\ngained by keeping them in memory.\n\nIn such cases, most other caching tools either do not help at all, or\nrequires you to carefully find the functions being used by the session\nand invalidate their caches one by one.\n\nThis module uses a more explicit approach.  A \"session\" object is\nused, providing the cache required by the memoization process.  The\navailability of this object makes a few operations, tricky in other\nlibraries, to become trivial.  They include:\n\n  * Invalidation of all caches of a session.\n  * One single function uses different caches for different calls.\n  * Fine-grain control of whether values of a function should skip\n    caching.\n  * Injection of values to a particular function for a session.\n\nIn fact, the implementation of the module is so simple that the core\nof it can be done in just a couple of hours.\n\n## Usage\n\nFunctions requiring caching should be written like this:\n\n    @smemo.cached\n    def efib(session: smemo.BaseSession, n: int,\n             a0: float, a1: float) -> float:\n        \"Return an extended Fibonacci number where efib[0] = a0, efib[1] = a1\"\n        if n == 0:\n            return a0\n        if n == 1:\n            return a1\n        return efib(session, n - 1, a0, a1) + efib(session, n - 2, a0, a1)\n\nNote that it explicitly includes the session object as the first\nargument.  All functions decorated by @smemo.cached does the same.\n\nIt can then be called like this:\n\n    session = smemo.Session()\n    print(efib(session, 5, 1, 3))\n\nAfter the call, the session contains entries like `{((2, 1, 3), ()):\n(4, None)}`, the key contains a hashable representation of the\npositional and keyword arguments, while the values are the return\nvalue or exception raised.  The value can be observed without\ntriggering a call to the inner function, by:\n\n    print(session.get_cache(efib, 5, 1, 3))\n\nThe returned value of the function decorated by `@smemo.cached` goes\nthrough `copy.deepcopy`, so that the caller can freely manipulate the\nreturned object without affecting the cache.  If that is undesirable\n(usually because it slows things down or you really want the actual\nobject returned), you would replace `@smemo.cached` by\n`@smemo.rcached`.\n\nFor many purposes these are good enough.  But at times some of the\nvalues (e.g., 3 and 1 above) are really constants for a session, and\nyou can save a lot of space by not including them in the keys of the\ncache.  In such cases you can rewrite your function as follows:\n\n    @smemo.cached\n    def efib(session: smemo.BaseSession, n: int) -> float:\n        \"Return an extended Fibonacci number where efib[0] = a0, efib[1] = a1\"\n        if n == 0:\n            return session.getval('a0')  # Same as smemo.getter(session, 'a0')\n        if n == 1:\n            return session.getval('a1')\n        return efib(session, n - 1) + efib(session, n - 2)\n\nYou call your function like this instead:\n\n    session = smemo.Session()\n    session.putval(1, 'a0')\n    session.putval(3, 'a1')\n    print(efib(session, 5))\n\nThis is a trivial function to implement.  It just composes other\nsession facilities with a \"getter\" function, the latter simply raises\nan exception.  On the other hand, this is a very useful mechanism,\nbecause it enables you to use memoization where previously you might\nnot even think you want to.  For example, you can read a whole config\nfile and put it to your session.  Now your functions can freely use\nthe configuration values, and you don't need to worry about having\ncache which has huge entries, and at the same time you don't need to\nworry about cross-talk when your function is called concurrently with\ndifferent sessions.\n\n## Nested session\n\nAt times you may have some of your data to live for a shorter lifetime\nthan the rest.  In such case, you might find it beneficial to have a\nhierarchy of sessions.  The Session class `__init__` takes a \"parent\"\nBaseSession argument.  When cache is fetched and no entry is found,\nthis parent will be consulted.  Whenever cache entry is set it is\nlocal.  This way you can populate some entry in a global session, and\ncreate a \"sub-session\" which will hold any additional cache entries.\nWith an additional `restrict` argument, you can also specify that only\nsome functions will be cached in the new objects, all other functions\nare handled solely in the parent.\n\n## Cache control\n\nThe big differentiation between smemo and other solutions is cache\ncontrol.  We do not do implicit cached control like LRU at all, all\ncached values are kept there until explicitly invalidated.  In fact,\nwe don't even store those information (e.g., when is a value last\nneeded), so the overheads in our module is quite small.\n\nHaving a session object, explicit cache control can be done trivially.\nFor example, you can clear the cache either for one call, for one\nfunction or for all functions, by the following respectively:\n\n    session.invalidate(efib, 7)\n    session.invalidate_all(efib)\n    session.invalidate_all()\n\nFor the first call, the call needs to match the calling arguments, but\nmypy will not be able to catch it if there is a type error.  An\nalternative method can be used instead, which does trigger mypy to\ncatch a type error:\n\n    efib(session.inv, 7)\n\nBecause it is just another call to efib, it has to match the type\ncorrectly to pass mypy.\n\nFor the last `session.invalidate` call, it actually doesn't invalidate\nall function values cached.  If a function is marked as \"persistent\",\nthe values cached for it can only be invalidated more explicitly.\nThis is done by using `@smemo.gcached(persistent=True)` instead of\n`@smemo.cached`, or (more commonly) using `@smemo.prcached()` instead\nof `@smemo.rcached`.  Under the hood, `getval` and `putval` is just\ncache of a function, where the \"persistent\" mechanism is used to avoid\ngetting values removed.\n\nYou can force a value into the cache, like one of these:\n\n    session.cache(efib, 5.0, 7)\n    session.cache_exc(efib, RuntimeError('My error'), 7)\n\nIn this case, it causes efib(7, session) to return 5.0 and raises \"My\nerror\" respectively.  This is very useful during unit tests, where at\ntimes you don't want your functions to actually be called.  Again, we\nhave alternative methods which allows mypy to catch type errors:\n\n    efib(session.setcache(5.0), 7)\n    efib(session.setcache(exception=RuntimeError('My error')), 7)\n\nSo, if you want to avoid `getval` and `setval` (which mypy cannot\ncheck for type errors), you can create functions returning the correct\ntype and mark them as persistent instead:\n\n    @smemo.gcached(ref=True, persistent=True)\n    def mydict(session: smemo.BaseSession, a: str) -> typing.Dict[str, float]:\n        raise RuntimeError(f'No value set for {a}')\n\nThen you can put and get values as follows:\n\n    mydict(session.setcache({'pi': 3.1415936, 'e': 2.7182818}), 'const')\n    print(mydict(session, 'const')['pi'])\n\nNote that this mechanism, when combined with nested sessions, can be\nused as a poor man dependency injection mechanism.  All you need to do\nis to pass a session when you invoke any top-level function, and\nobtain all dependencies from the session.  The main program would\npopulate the main session and perhaps create sub-sessions as needed,\nbefore calling the top-level functions.  Your unit tests can use mock\nobjects instead of actual objects as desired.\n\nFinally, you can call a function without caching it:\n\n    efib(session.callonly, 7)\n\nThe skipping of caching does not extend to the calls made by efib.  If\nyou want that, you can do the following:\n\n    with session.nocache:\n        print(efib(session, 7))\n\nCaching would be disabled for all the duration of the above efib call.\n\n## Persistence keys\n\nThe `persistent` keyword argument of `gcached()` mentioned above also\nallows the argument to be a string rather than just `True`.  In this\ncase the argument is called a persistence key, or \"pkey\" in short.  It\nis used like `@gcached(persistent='my_key')`.  Just like a regular\npersistent function, the cached value can be invalidated by explicitly\ninvalidating a function, but not by using `invalidate_all()`.  But\nanother method `invalidate_by_pkey()` can be used to invalidate the\nfunction, together with all other functions tagged with the same pkey.\nFor example, you might have some functions which do not need to be\ninvalidated with `invalidate_all()`, but can be invalidated when a\nspecific event happens which triggers `invalidate_by_pkey()`.\n\n## BaseSession interface\n\nAll the functionality of the memoization system is provided by the\nBaseSession interface, which the Session class is written against.  If\nyou want your own facilities, you might want to provide your own\nimplementation.  It is a rather simple interface:\n\n  * `get_cache(func, *args, **kwargs)`\n\n      * When the user calls the defined function, the function\n        object and the positional/keyword arguments are passed to\n        this method to find a cache entry, which should be in the\n        form `(ret_val, exception)`, where the `ret_val` is used if\n        `exception` is None.\n\n  * `pre_call(func, args, kwargs)`\n\n      * When cache entry is not found or is skipped, this function is\n        called to determine the session to call the actual function.\n        If None is returned, the actual function is not called, and it\n        is treated as None being returned.\n\n  * `cache_exc(func, _exc, *args, **kwargs)`\n\n      * When the actual call generates an exception, this function is\n        called to ask the session object to cache the resulting\n        exception.  Note that we usually define the method to have the\n        exception argument named like `_exc`, because the name could\n        clash with names in `kwargs`.\n\n  * `cache_val(func, _val, *args, **kwargs)`\n\n      * When the actual call returns a value, this function is called\n        to ask the session object to cache the result.  Note that we\n        usually define the method to have the exception argument named\n        like `_val`, because the name could clash with names in\n        `kwargs`.\n\nCache control is actually done by creative use of the interface.  For\nexample, `session.inv` is a BaseSession object which returns None upon\n`get_cache` or `pre_call`, but invalidate cache entry upon\n`cache_val`.  And `session.setcache` returns an object which is just\nthe same as `session.inv` but instead of invalidating the cache, it\nforces a return value or exception to the cache.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/isaacto/smemo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smemo",
    "package_url": "https://pypi.org/project/smemo/",
    "platform": "",
    "project_url": "https://pypi.org/project/smemo/",
    "project_urls": {
      "Homepage": "https://github.com/isaacto/smemo"
    },
    "release_url": "https://pypi.org/project/smemo/0.6/",
    "requires_dist": null,
    "requires_python": "~=3.5",
    "summary": "Explicit session memoization",
    "version": "0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12207356,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b38d2883154dddfb81f7896b7a4a286585f793b11f66164f99870bdf5326e50d",
          "md5": "32600066485d75a31ed7e212842afc23",
          "sha256": "b1f4f6aa6037d85b64701b9515bfa17681996984de7d17b6ce9af7f374b0419b"
        },
        "downloads": -1,
        "filename": "smemo-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32600066485d75a31ed7e212842afc23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 6536,
        "upload_time": "2019-12-15T09:16:12",
        "upload_time_iso_8601": "2019-12-15T09:16:12.254394Z",
        "url": "https://files.pythonhosted.org/packages/b3/8d/2883154dddfb81f7896b7a4a286585f793b11f66164f99870bdf5326e50d/smemo-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ab95499d350f173b6068afb95f6e667e90b1341a11bbeb9c20a503cc215696f",
          "md5": "1e12224770157dc068c6f28a9947613f",
          "sha256": "67334ce8e8af7de4ba472318170bfeb39a22dfc11836e99073606b287588b43a"
        },
        "downloads": -1,
        "filename": "smemo-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e12224770157dc068c6f28a9947613f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 6537,
        "upload_time": "2019-12-15T09:16:14",
        "upload_time_iso_8601": "2019-12-15T09:16:14.809226Z",
        "url": "https://files.pythonhosted.org/packages/8a/b9/5499d350f173b6068afb95f6e667e90b1341a11bbeb9c20a503cc215696f/smemo-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "624ea8f653c99dc24fd72170013b27959ff94de1ad0bc7ebe20f8778232aecdf",
          "md5": "3dc6af77a3fb3958c9b2e14323dba038",
          "sha256": "6a8fbcdbb0ab55520454afbb64946a03068929ae38cc7328ab4f9dcda2fa7e4c"
        },
        "downloads": -1,
        "filename": "smemo-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3dc6af77a3fb3958c9b2e14323dba038",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 6594,
        "upload_time": "2019-12-15T09:31:17",
        "upload_time_iso_8601": "2019-12-15T09:31:17.283377Z",
        "url": "https://files.pythonhosted.org/packages/62/4e/a8f653c99dc24fd72170013b27959ff94de1ad0bc7ebe20f8778232aecdf/smemo-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d9c546e0dc9f8bd97f23078b93724896836de65197fa5e6604abd7e444c9921",
          "md5": "460812cd2e4804017bdff155bab62bc4",
          "sha256": "b257ec22f6847db142bf6698d311cf35a8ff845e0ba5106f78a4a938003eed52"
        },
        "downloads": -1,
        "filename": "smemo-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "460812cd2e4804017bdff155bab62bc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 6586,
        "upload_time": "2019-12-15T09:31:18",
        "upload_time_iso_8601": "2019-12-15T09:31:18.702369Z",
        "url": "https://files.pythonhosted.org/packages/1d/9c/546e0dc9f8bd97f23078b93724896836de65197fa5e6604abd7e444c9921/smemo-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62991355c0feedc516982faae89d6ad8a755210cd7f24a3bac5cbb976b4669d8",
          "md5": "226f9fa66d3f0329eec88f2a4b343dc9",
          "sha256": "34abd285ba3cc2b45b762754bc01060659613027e13768d74a026ff0e4e0c868"
        },
        "downloads": -1,
        "filename": "smemo-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "226f9fa66d3f0329eec88f2a4b343dc9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 7505,
        "upload_time": "2019-12-15T14:33:38",
        "upload_time_iso_8601": "2019-12-15T14:33:38.352505Z",
        "url": "https://files.pythonhosted.org/packages/62/99/1355c0feedc516982faae89d6ad8a755210cd7f24a3bac5cbb976b4669d8/smemo-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6c1058035166a087ad38f1e92e0a5f78efa0f609f81aaebd298328da4552f91",
          "md5": "475fc3d939a7e6b46e9f52b6b10fdd54",
          "sha256": "c12eea3127795459af2815874e359d5932403e63a7a24e803806346b85588059"
        },
        "downloads": -1,
        "filename": "smemo-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "475fc3d939a7e6b46e9f52b6b10fdd54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 7553,
        "upload_time": "2019-12-15T14:33:40",
        "upload_time_iso_8601": "2019-12-15T14:33:40.240532Z",
        "url": "https://files.pythonhosted.org/packages/b6/c1/058035166a087ad38f1e92e0a5f78efa0f609f81aaebd298328da4552f91/smemo-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b556675b0356a716fef9742541d8f962edb0acf15e71189323cc6f444ad6e2e3",
          "md5": "5ea39edd1d532a7d6abf157ae2ec72d9",
          "sha256": "70e0f445057de866603172344f9302cdb7927248d1be01eb492b66f76b7d41ae"
        },
        "downloads": -1,
        "filename": "smemo-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ea39edd1d532a7d6abf157ae2ec72d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 7735,
        "upload_time": "2019-12-16T14:23:39",
        "upload_time_iso_8601": "2019-12-16T14:23:39.348643Z",
        "url": "https://files.pythonhosted.org/packages/b5/56/675b0356a716fef9742541d8f962edb0acf15e71189323cc6f444ad6e2e3/smemo-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76a3c2b68cb15c24ae326ef673b09e9b14cb01088f5f6715430d229f3fdfe2fb",
          "md5": "ed22d26f303d198f1ba2c3de5de77b19",
          "sha256": "156d60353ce289201f9c493b36a37bd89ff831e8cf45487d10e56da7f3bd853f"
        },
        "downloads": -1,
        "filename": "smemo-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ed22d26f303d198f1ba2c3de5de77b19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 7839,
        "upload_time": "2019-12-16T14:23:40",
        "upload_time_iso_8601": "2019-12-16T14:23:40.742781Z",
        "url": "https://files.pythonhosted.org/packages/76/a3/c2b68cb15c24ae326ef673b09e9b14cb01088f5f6715430d229f3fdfe2fb/smemo-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e9e0f338eec91b535baab63490c4ece5a7a61a4610c837b492d2f52a8c02f0a",
          "md5": "fab2eb11c96c0870389284df48f1c2cb",
          "sha256": "9480829dc87677bc7f261117b6bff04a4e7bd5f672ba05083b1a2dc2494f3523"
        },
        "downloads": -1,
        "filename": "smemo-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fab2eb11c96c0870389284df48f1c2cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 8420,
        "upload_time": "2019-12-21T05:56:48",
        "upload_time_iso_8601": "2019-12-21T05:56:48.572590Z",
        "url": "https://files.pythonhosted.org/packages/4e/9e/0f338eec91b535baab63490c4ece5a7a61a4610c837b492d2f52a8c02f0a/smemo-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e28d65fe9910445a45aef7b6e1bef20620087c02f135a796e332e6f94581b738",
          "md5": "2aca3a7c4012191d9d30e34f7b0dab29",
          "sha256": "8fc4d6a1c588a361c469af9cf5bd0301d03cd5348251ae9922b66feab470f17b"
        },
        "downloads": -1,
        "filename": "smemo-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2aca3a7c4012191d9d30e34f7b0dab29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 8678,
        "upload_time": "2019-12-21T05:56:50",
        "upload_time_iso_8601": "2019-12-21T05:56:50.027609Z",
        "url": "https://files.pythonhosted.org/packages/e2/8d/65fe9910445a45aef7b6e1bef20620087c02f135a796e332e6f94581b738/smemo-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "616f3459409de4e341c0aedc2cc4d0166b28837d300928c0f8d169730229e13a",
          "md5": "4d997c0fe2f196e174cb23acc0aa61e8",
          "sha256": "87ab63aca001817c7416885db7f2f9bbb5cf0ebe27057ec8e2dd14f0d14bd575"
        },
        "downloads": -1,
        "filename": "smemo-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d997c0fe2f196e174cb23acc0aa61e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 8612,
        "upload_time": "2019-12-25T13:44:46",
        "upload_time_iso_8601": "2019-12-25T13:44:46.263946Z",
        "url": "https://files.pythonhosted.org/packages/61/6f/3459409de4e341c0aedc2cc4d0166b28837d300928c0f8d169730229e13a/smemo-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cf49ebed96fbf7344a83ca9b55668461bc9605fa7728f406d037580891c2d81",
          "md5": "9621a8ed64a9929d941cf1d8378dfadd",
          "sha256": "a6310546e249bb444e432db1b6e7ba59a0e6c4fec027b7d227059555b2cb502a"
        },
        "downloads": -1,
        "filename": "smemo-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9621a8ed64a9929d941cf1d8378dfadd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 8891,
        "upload_time": "2019-12-25T13:44:48",
        "upload_time_iso_8601": "2019-12-25T13:44:48.106818Z",
        "url": "https://files.pythonhosted.org/packages/6c/f4/9ebed96fbf7344a83ca9b55668461bc9605fa7728f406d037580891c2d81/smemo-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cd61adc77b3eeffa6dae8434570529a6df7bc0c4fd020f15350b0fd5eda98e0",
          "md5": "eabcdb6fda1c72ed0020c4f742f6af93",
          "sha256": "102fd85c5b9f2cab09e4cc85c93e4af2f55fbe6ce5809df7b10dd6669093b9a2"
        },
        "downloads": -1,
        "filename": "smemo-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eabcdb6fda1c72ed0020c4f742f6af93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 8666,
        "upload_time": "2020-02-07T01:30:44",
        "upload_time_iso_8601": "2020-02-07T01:30:44.940131Z",
        "url": "https://files.pythonhosted.org/packages/0c/d6/1adc77b3eeffa6dae8434570529a6df7bc0c4fd020f15350b0fd5eda98e0/smemo-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9156fffb3950a8c729c7039329d05a66e1d088fe4cf8e0f9868fee46decd314",
          "md5": "2e51007a05e7ae24c636f2bbdb56127f",
          "sha256": "4ec0a3fb76ff67b48874960a2395f6db7d29b7af0b3a77b7a036936c49117232"
        },
        "downloads": -1,
        "filename": "smemo-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2e51007a05e7ae24c636f2bbdb56127f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 8936,
        "upload_time": "2020-02-07T01:30:46",
        "upload_time_iso_8601": "2020-02-07T01:30:46.362372Z",
        "url": "https://files.pythonhosted.org/packages/c9/15/6fffb3950a8c729c7039329d05a66e1d088fe4cf8e0f9868fee46decd314/smemo-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "185705635c74a455698fb8d83d94e9a2cb704982704399ab39714799a419f003",
          "md5": "3ec64ae0b8845e8f842db1d042acfa7d",
          "sha256": "c77c4ce017dc1b52f534ad330ddf5ef8b0d3c384771d5fc66738fa527c6a6dc1"
        },
        "downloads": -1,
        "filename": "smemo-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ec64ae0b8845e8f842db1d042acfa7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 8610,
        "upload_time": "2020-02-07T12:27:28",
        "upload_time_iso_8601": "2020-02-07T12:27:28.597471Z",
        "url": "https://files.pythonhosted.org/packages/18/57/05635c74a455698fb8d83d94e9a2cb704982704399ab39714799a419f003/smemo-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a284250e7e88ae1022e96d3c9d9da22725fcd886aa452a01d061424e4208ab8",
          "md5": "1541372e674f7aa37090e3225925c396",
          "sha256": "89185ca6be795a32148b96fe4d061bdcb577c0dc3e1ab1fe166942d29cc5612b"
        },
        "downloads": -1,
        "filename": "smemo-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1541372e674f7aa37090e3225925c396",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 8889,
        "upload_time": "2020-02-07T12:27:30",
        "upload_time_iso_8601": "2020-02-07T12:27:30.386140Z",
        "url": "https://files.pythonhosted.org/packages/3a/28/4250e7e88ae1022e96d3c9d9da22725fcd886aa452a01d061424e4208ab8/smemo-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "424b4c9309ca44340de75abe653eb1d62cc689e84343ad6c7dc47764827c89f4",
          "md5": "eab7ba936c534aaa4fee1336283c51ad",
          "sha256": "f0f8d60596d8c635bde41683df8e814b5f8dbca8b2d14444141a8d77baba5d9e"
        },
        "downloads": -1,
        "filename": "smemo-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eab7ba936c534aaa4fee1336283c51ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 8591,
        "upload_time": "2020-02-10T01:53:00",
        "upload_time_iso_8601": "2020-02-10T01:53:00.958682Z",
        "url": "https://files.pythonhosted.org/packages/42/4b/4c9309ca44340de75abe653eb1d62cc689e84343ad6c7dc47764827c89f4/smemo-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daf3ac3edea88e5b7f73a23244acdf92bc09541e699d15ac28c6f08df7b65f0d",
          "md5": "99361a5f611dc6a7bd87869e95d360ec",
          "sha256": "ff04f68368a6b9ffce7be6fbd9518a8f0ebab2fdd92a2a15982e86cfd250bf0f"
        },
        "downloads": -1,
        "filename": "smemo-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "99361a5f611dc6a7bd87869e95d360ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 8878,
        "upload_time": "2020-02-10T01:53:02",
        "upload_time_iso_8601": "2020-02-10T01:53:02.570566Z",
        "url": "https://files.pythonhosted.org/packages/da/f3/ac3edea88e5b7f73a23244acdf92bc09541e699d15ac28c6f08df7b65f0d/smemo-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c83c874eb4920be03d372219b60cef6ff1a1442bede18ab03038154360156084",
          "md5": "d66dab6e6d1a28ba5ff4968440f2dabe",
          "sha256": "8e3ced465e074737abcfa56d46d9e0f670ccc9469a2b24e1705e0edb06e4204d"
        },
        "downloads": -1,
        "filename": "smemo-0.3.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d66dab6e6d1a28ba5ff4968440f2dabe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 8665,
        "upload_time": "2020-02-12T02:36:46",
        "upload_time_iso_8601": "2020-02-12T02:36:46.812935Z",
        "url": "https://files.pythonhosted.org/packages/c8/3c/874eb4920be03d372219b60cef6ff1a1442bede18ab03038154360156084/smemo-0.3.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0b07481ef1dcb167924a41ceb3d7b4d377321a3de1a10184b825a792a56f84d",
          "md5": "df6114ec0542e6dd88ba3193dacefb34",
          "sha256": "3b61e36e5f3bb21c2e19939eb53d9da716adb241e476125b9092f2cb9a30e8b9"
        },
        "downloads": -1,
        "filename": "smemo-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "df6114ec0542e6dd88ba3193dacefb34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 8952,
        "upload_time": "2020-02-12T02:36:48",
        "upload_time_iso_8601": "2020-02-12T02:36:48.674140Z",
        "url": "https://files.pythonhosted.org/packages/d0/b0/7481ef1dcb167924a41ceb3d7b4d377321a3de1a10184b825a792a56f84d/smemo-0.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3078fe5045bd781eb3b0828e991981130575f3658f374edac1e13cf1d92079a4",
          "md5": "010ea5fcf82cfc525462c89f88085c4e",
          "sha256": "02dfc93dab2fac9997c711240f75f5f370084768e985b5015d55dae98040ea6b"
        },
        "downloads": -1,
        "filename": "smemo-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "010ea5fcf82cfc525462c89f88085c4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 9014,
        "upload_time": "2020-03-15T01:20:39",
        "upload_time_iso_8601": "2020-03-15T01:20:39.665482Z",
        "url": "https://files.pythonhosted.org/packages/30/78/fe5045bd781eb3b0828e991981130575f3658f374edac1e13cf1d92079a4/smemo-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "178535941012cef3d8bb67b092e473c0086ff4a1b7babdf2ee66dbf2f7fc8c8b",
          "md5": "0ef73a63f9e4cd0b275682217f44a789",
          "sha256": "cb74ed8e291d045936306b1d8ca9314f29851a24c7ffff394603451c57619601"
        },
        "downloads": -1,
        "filename": "smemo-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0ef73a63f9e4cd0b275682217f44a789",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 9472,
        "upload_time": "2020-03-15T01:20:41",
        "upload_time_iso_8601": "2020-03-15T01:20:41.434559Z",
        "url": "https://files.pythonhosted.org/packages/17/85/35941012cef3d8bb67b092e473c0086ff4a1b7babdf2ee66dbf2f7fc8c8b/smemo-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5faa87da7161dcfcbf221cfceeb0c61074894bcecf4988b685ed3716cbf06a96",
          "md5": "8b664bbdf723f081b9f4c21e4df9a20a",
          "sha256": "0d9cf72b0e3b631ee07628b72533bb46b5d339f996e65d8167c2122b2578fe3b"
        },
        "downloads": -1,
        "filename": "smemo-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b664bbdf723f081b9f4c21e4df9a20a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 9466,
        "upload_time": "2020-09-20T08:31:35",
        "upload_time_iso_8601": "2020-09-20T08:31:35.788686Z",
        "url": "https://files.pythonhosted.org/packages/5f/aa/87da7161dcfcbf221cfceeb0c61074894bcecf4988b685ed3716cbf06a96/smemo-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99b84ba9ac3aea8b71972b4258d664226df9cc75802d2c9aa2e26fb8e1e7c70a",
          "md5": "f9b7dba7fca8e055af2a34b0cc7980b0",
          "sha256": "ca2d21fec4b9bf414c82de25af0f9923a44cd30c173bb2e3b41e876ad2f300e4"
        },
        "downloads": -1,
        "filename": "smemo-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f9b7dba7fca8e055af2a34b0cc7980b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 10950,
        "upload_time": "2020-09-20T08:31:37",
        "upload_time_iso_8601": "2020-09-20T08:31:37.537696Z",
        "url": "https://files.pythonhosted.org/packages/99/b8/4ba9ac3aea8b71972b4258d664226df9cc75802d2c9aa2e26fb8e1e7c70a/smemo-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c004488e07705aaadf903088cff28a173dc8471b8ca704afdb0cec8701d211d3",
          "md5": "aa8e8ce4e2504517de8bbc482d2d5401",
          "sha256": "2b0066a4247096a3b10f0c99381a5590bf78a06ce2e38eb151c9e1c68a64027b"
        },
        "downloads": -1,
        "filename": "smemo-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa8e8ce4e2504517de8bbc482d2d5401",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.5",
        "size": 9482,
        "upload_time": "2021-12-04T06:51:32",
        "upload_time_iso_8601": "2021-12-04T06:51:32.688653Z",
        "url": "https://files.pythonhosted.org/packages/c0/04/488e07705aaadf903088cff28a173dc8471b8ca704afdb0cec8701d211d3/smemo-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4f50be6fb42c4e4a7b7dfa110a6448f1c3cc18c20da931744aab6d9e1ee4cdb",
          "md5": "4c760d0a6ad5a79dd95c1bba7c80d56d",
          "sha256": "f1d7fcd077491485ecb71483599503be6b4b7e9809635f1aa4e78ebc5dd22fb9"
        },
        "downloads": -1,
        "filename": "smemo-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "4c760d0a6ad5a79dd95c1bba7c80d56d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 10967,
        "upload_time": "2021-12-04T06:51:34",
        "upload_time_iso_8601": "2021-12-04T06:51:34.846511Z",
        "url": "https://files.pythonhosted.org/packages/c4/f5/0be6fb42c4e4a7b7dfa110a6448f1c3cc18c20da931744aab6d9e1ee4cdb/smemo-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c004488e07705aaadf903088cff28a173dc8471b8ca704afdb0cec8701d211d3",
        "md5": "aa8e8ce4e2504517de8bbc482d2d5401",
        "sha256": "2b0066a4247096a3b10f0c99381a5590bf78a06ce2e38eb151c9e1c68a64027b"
      },
      "downloads": -1,
      "filename": "smemo-0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa8e8ce4e2504517de8bbc482d2d5401",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.5",
      "size": 9482,
      "upload_time": "2021-12-04T06:51:32",
      "upload_time_iso_8601": "2021-12-04T06:51:32.688653Z",
      "url": "https://files.pythonhosted.org/packages/c0/04/488e07705aaadf903088cff28a173dc8471b8ca704afdb0cec8701d211d3/smemo-0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4f50be6fb42c4e4a7b7dfa110a6448f1c3cc18c20da931744aab6d9e1ee4cdb",
        "md5": "4c760d0a6ad5a79dd95c1bba7c80d56d",
        "sha256": "f1d7fcd077491485ecb71483599503be6b4b7e9809635f1aa4e78ebc5dd22fb9"
      },
      "downloads": -1,
      "filename": "smemo-0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "4c760d0a6ad5a79dd95c1bba7c80d56d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.5",
      "size": 10967,
      "upload_time": "2021-12-04T06:51:34",
      "upload_time_iso_8601": "2021-12-04T06:51:34.846511Z",
      "url": "https://files.pythonhosted.org/packages/c4/f5/0be6fb42c4e4a7b7dfa110a6448f1c3cc18c20da931744aab6d9e1ee4cdb/smemo-0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}