{
  "info": {
    "author": "Jordan Matelsky",
    "author_email": "opensource@matelsky.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div align=center><img src=\"docs/grand.png\" width=400 /></div>\n\n<div align=center><a href=\"https://pypi.org/project/grand-graph/\"><img src=\"https://img.shields.io/pypi/v/grand-graph?style=for-the-badge\" /></a> <a href=\"https://app.codecov.io/gh/aplbrain/grand\"><img alt=\"Codecov\" src=\"https://img.shields.io/codecov/c/github/aplbrain/grand?style=for-the-badge\"></a> <img alt=\"GitHub Workflow Status\" src=\"https://img.shields.io/github/workflow/status/aplbrain/grand/Python%20package?style=for-the-badge\"></div>\n\n<br />\n\n<p align=center>Graph toolkit interoperability and scalability for Python</p>\n\n## Installation\n\n```shell\npip install grand-graph\n```\n\n## Example use-cases\n\n-   Write NetworkX commands to analyze true-serverless graph databases using DynamoDB\\*\n-   Query a host graph in SQL for subgraph isomorphisms with DotMotif\n-   Write iGraph code to construct a graph, and then play with it in Networkit\n-   Attach node and edge attributes to Networkit or IGraph graphs\n\n> \\* [Neptune is not true-serverless.](docs/What-About-Neptune.md)\n\n## Why it's a big deal\n\n_Grand_ is a Rosetta Stone of graph technologies. A _Grand_ graph has a \"Backend,\" which handles the implementation-details of talking to data on disk (or in the cloud), and an \"Dialect\", which is your preferred way of talking to a graph.\n\nFor example, here's how you make a graph that is persisted in DynamoDB (the \"Backend\") but that you can talk to as though it's a `networkx.DiGraph` (the \"Dialect\"):\n\n```python\nimport grand\n\nG = grand.Graph(backend=grand.DynamoDBBackend())\n\nG.nx.add_node(\"Jordan\", type=\"Person\")\nG.nx.add_node(\"DotMotif\", type=\"Project\")\n\nG.nx.add_edge(\"Jordan\", \"DotMotif\", type=\"Created\")\n\nassert len(G.nx.edges()) == 1\nassert len(G.nx.nodes()) == 2\n```\n\nIt doesn't stop there. If you like the way IGraph handles anonymous node insertion (ugh) but you want to handle the graph using regular NetworkX syntax, use a `IGraphDialect` and then switch to a `NetworkXDialect` halfway through:\n\n```python\nimport grand\n\nG = grand.Graph()\n\n# Start in igraph:\nG.igraph.add_vertices(5)\n\n# A little bit of networkit:\nG.networkit.addNode()\n\n# And switch to networkx:\nassert len(G.nx.nodes()) == 6\n\n# And back to igraph!\nassert len(G.igraph.vs) == 6\n```\n\nYou should be able to use the \"dialect\" objects the same way you'd use a real graph from the constituent libraries. For example, here is a NetworkX algorithm running on NetworkX graphs alongside Grand graphs:\n\n```python\nimport networkx as nx\n\nnx.algorithms.isomorphism.GraphMatcher(networkxGraph, grandGraph.nx)\n```\n\nHere is an example of using Networkit, a highly performant graph library, and attaching node/edge attributes, which are not supported by the library by default:\n\n```python\nimport grand\nfrom grand.backends.networkit import NetworkitBackend\n\nG = grand.Graph(backend=NetworkitBackend())\n\nG.nx.add_node(\"Jordan\", type=\"Person\")\nG.nx.add_node(\"Grand\", type=\"Software\")\nG.nx.add_edge(\"Jordan\", \"Grand\", weight=1)\n\nprint(G.nx.edges(data=True)) # contains attributes, even though graph is stored in networkit\n```\n\n## Current Support\n\n<table><tr>\n<th>âœ… = Fully Implemented</th>\n<th>ðŸ¤” = In Progress</th>\n<th>ðŸ”´ = Unsupported</th>\n</tr></table>\n\n| Dialect            | Description & Notes      | Status |\n| ------------------ | ------------------------ | ------ |\n| `IGraphDialect`    | Python-IGraph interface  | âœ…     |\n| `NetworkXDialect`  | NetworkX-like interface  | âœ…     |\n| `NetworkitDialect` | Networkit-like interface | âœ…     |\n\n| Backend            | Description & Notes          | Status |\n| ------------------ | ---------------------------- | ------ |\n| `DataFrameBackend` | Stored in pandas-like tables | âœ…     |\n| `DynamoDBBackend`  | Edge/node tables in DynamoDB | âœ…     |\n| `GremlinBackend`   | For Gremlin datastores       | âœ…     |\n| `IGraphBackend`    | An IGraph graph, in memory   | âœ…     |\n| `NetworkitBackend` | A Networkit graph, in memory | âœ…     |\n| `NetworkXBackend`  | A NetworkX graph, in memory  | âœ…     |\n| `SQLBackend`       | Two SQL-queryable tables     | âœ…     |\n\nYou can read more about usage and learn about backends and dialects in [the wiki](https://github.com/aplbrain/grand/wiki).\n\n## Citing\n\nIf this tool is helpful to your research, please consider citing it with:\n\n```bibtex\n# https://doi.org/10.1038/s41598-021-91025-5\n@article{Matelsky_Motifs_2021,\n    title={{DotMotif: an open-source tool for connectome subgraph isomorphism search and graph queries}},\n    volume={11},\n    ISSN={2045-2322},\n    url={http://dx.doi.org/10.1038/s41598-021-91025-5},\n    DOI={10.1038/s41598-021-91025-5},\n    number={1},\n    journal={Scientific Reports},\n    publisher={Springer Science and Business Media LLC},\n    author={Matelsky, Jordan K. and Reilly, Elizabeth P. and Johnson, Erik C. and Stiso, Jennifer and Bassett, Danielle S. and Wester, Brock A. and Gray-Roncal, William},\n    year={2021},\n    month={Jun}\n}\n```\n\n---\n\n<p align=center><b>Made with ðŸ’™ at <a href=\"https://jhuapl.edu\"><img alt=\"JHU APL\" src=\"https://user-images.githubusercontent.com/693511/116814564-9b268800-ab27-11eb-98bb-dfddb2e405a1.png\" height=\"23px\" /></a></b></p>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aplbrain/grand",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "grand-graph",
    "package_url": "https://pypi.org/project/grand-graph/",
    "platform": null,
    "project_url": "https://pypi.org/project/grand-graph/",
    "project_urls": {
      "Homepage": "https://github.com/aplbrain/grand"
    },
    "release_url": "https://pypi.org/project/grand-graph/0.4.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Graph database wrapper for non-graph datastores",
    "version": "0.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13745790,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa19526756efe8d5e8e38c246a072b18f917d8bd38f4c5b3e78ff57b2e3108d2",
          "md5": "abbd12797db40c35edfde5d0e8718329",
          "sha256": "e79f46ea6edba5036de3fcbc79e46167ebbd031aaed9e0d417e96194bd17e459"
        },
        "downloads": -1,
        "filename": "grand-graph-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "abbd12797db40c35edfde5d0e8718329",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14735,
        "upload_time": "2021-01-19T18:27:59",
        "upload_time_iso_8601": "2021-01-19T18:27:59.952279Z",
        "url": "https://files.pythonhosted.org/packages/fa/19/526756efe8d5e8e38c246a072b18f917d8bd38f4c5b3e78ff57b2e3108d2/grand-graph-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f0e4af3cd683c6efc043fcf6c97e4b3f811442c4d3ba0713d36eeec89d0fb0e",
          "md5": "897553465fb7a40af8e070dfcca62c42",
          "sha256": "d298365210d10ce4faa3497baeddcc9cd7ceb88235acec3fdb90d52529b50c65"
        },
        "downloads": -1,
        "filename": "grand-graph-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "897553465fb7a40af8e070dfcca62c42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72218,
        "upload_time": "2021-06-25T22:15:48",
        "upload_time_iso_8601": "2021-06-25T22:15:48.134788Z",
        "url": "https://files.pythonhosted.org/packages/9f/0e/4af3cd683c6efc043fcf6c97e4b3f811442c4d3ba0713d36eeec89d0fb0e/grand-graph-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b7af2de7d86ca520c72aa57122fb18346f86f968a1abae69e00e03a81c87bb0",
          "md5": "a3034c2abc40009a05b13341f4fe69c5",
          "sha256": "61e51c8b788fb0e51dbeef1d5d9dfbfc8ccf030fb9721116676cd64e648a8654"
        },
        "downloads": -1,
        "filename": "grand-graph-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a3034c2abc40009a05b13341f4fe69c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18642,
        "upload_time": "2021-10-22T15:38:36",
        "upload_time_iso_8601": "2021-10-22T15:38:36.258258Z",
        "url": "https://files.pythonhosted.org/packages/1b/7a/f2de7d86ca520c72aa57122fb18346f86f968a1abae69e00e03a81c87bb0/grand-graph-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "707daca48a5c44bf9303d572d4130fc4c7dfce10156bf0daec11e2b2b9b3f257",
          "md5": "8070f74acb06e9d2638157dfb6144fa6",
          "sha256": "fe62e7305aac61692498fbe37666a1268878f0ce3323b3a171e62a7e5758665d"
        },
        "downloads": -1,
        "filename": "grand-graph-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8070f74acb06e9d2638157dfb6144fa6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18648,
        "upload_time": "2021-10-22T15:39:17",
        "upload_time_iso_8601": "2021-10-22T15:39:17.555477Z",
        "url": "https://files.pythonhosted.org/packages/70/7d/aca48a5c44bf9303d572d4130fc4c7dfce10156bf0daec11e2b2b9b3f257/grand-graph-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34da41e05e712a13a4364a242e57c62831268dd3ce599cd0e60f2ea92b730a62",
          "md5": "616157daabb68cc5e69519e5a0214992",
          "sha256": "48746a0574b1ba1deaee9c32d204abd4e59500cec07ed69ace7246248d4c9e1e"
        },
        "downloads": -1,
        "filename": "grand-graph-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "616157daabb68cc5e69519e5a0214992",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25029,
        "upload_time": "2022-02-04T23:14:16",
        "upload_time_iso_8601": "2022-02-04T23:14:16.843038Z",
        "url": "https://files.pythonhosted.org/packages/34/da/41e05e712a13a4364a242e57c62831268dd3ce599cd0e60f2ea92b730a62/grand-graph-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "666bcfdb081158e94d2c6029a369c0db9c483bd306b4aeb7ff63b2439f2442fe",
          "md5": "a3d5a71dc0dc17b44564e73746ba9a0e",
          "sha256": "cd15a96767e4b955686f3747a5396ac5aba742b53edfe525e762c230a23fa225"
        },
        "downloads": -1,
        "filename": "grand-graph-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a3d5a71dc0dc17b44564e73746ba9a0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26494,
        "upload_time": "2022-05-07T21:02:36",
        "upload_time_iso_8601": "2022-05-07T21:02:36.441054Z",
        "url": "https://files.pythonhosted.org/packages/66/6b/cfdb081158e94d2c6029a369c0db9c483bd306b4aeb7ff63b2439f2442fe/grand-graph-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "666bcfdb081158e94d2c6029a369c0db9c483bd306b4aeb7ff63b2439f2442fe",
        "md5": "a3d5a71dc0dc17b44564e73746ba9a0e",
        "sha256": "cd15a96767e4b955686f3747a5396ac5aba742b53edfe525e762c230a23fa225"
      },
      "downloads": -1,
      "filename": "grand-graph-0.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a3d5a71dc0dc17b44564e73746ba9a0e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26494,
      "upload_time": "2022-05-07T21:02:36",
      "upload_time_iso_8601": "2022-05-07T21:02:36.441054Z",
      "url": "https://files.pythonhosted.org/packages/66/6b/cfdb081158e94d2c6029a369c0db9c483bd306b4aeb7ff63b2439f2442fe/grand-graph-0.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}