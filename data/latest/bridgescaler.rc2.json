{
  "info": {
    "author": "David John Gagne",
    "author_email": "dgagne@ucar.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# bridgescaler\nBridge your scikit-learn scaler parameters between Python sessions and users.\nBridgescaler allows you to save the properties of a scikit-learn scaler object\nto a json file, and then repopulate a new scaler object with the same properties.\n\n\n## Dependencies\n* scikit-learn\n* numpy\n* pandas\n\n## Installation\n```bash\ngit clone https://github.com/NCAR/bridgescaler.git\ncd bridgescaler\npip install .\n```\n\n## Usage\nbridgescaler supports all the common scikit-learn scaler classes:\n* StandardScaler\n* RobustScaler\n* MinMaxScaler\n* MaxAbsScaler\n* QuantileTransformer\n* PowerTransformer\n* SplineTransformer\n\nFirst, create some synthetic data to transform.\n```python\nimport numpy as np\nimport pandas as pd\n\n# specify distribution parameters for each variable\nlocs = np.array([0, 5, -2, 350.5], dtype=np.float32)\nscales = np.array([1.0, 10, 0.1, 5000.0])\nnames = [\"A\", \"B\", \"C\", \"D\"]\nnum_examples = 205\nx_data_dict = {}\nfor l in range(locs.shape[0]):\n    # sample from random normal with different parameters\n    x_data_dict[names[l]] = np.random.normal(loc=locs[l], scale=scales[l], size=num_examples)\nx_data = pd.DataFrame(x_data_dict)\n```\n\nNow, let's fit and transform the data with StandardScaler.\n```python\nfrom sklearn.preprocessing import StandardScaler\nfrom bridgescaler import save_scaler, load_scaler\nscaler = StandardScaler()\nscaler.fit_transform(x_data)\nfilename = \"x_standard_scaler.json\"\n# save to json file\nsave_scaler(scaler, filename)\n\n# create new StandardScaler from json file information.\nnew_scaler = load_scaler(filename) # new_scaler is a StandardScaler object\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NCAR/bridgescaler",
    "keywords": "machine learning",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bridgescaler",
    "package_url": "https://pypi.org/project/bridgescaler/",
    "platform": "any",
    "project_url": "https://pypi.org/project/bridgescaler/",
    "project_urls": {
      "Homepage": "https://github.com/NCAR/bridgescaler"
    },
    "release_url": "https://pypi.org/project/bridgescaler/0.1b2/",
    "requires_dist": [
      "scikit-learn (>=1.0)",
      "numpy",
      "pandas"
    ],
    "requires_python": ">=3.7",
    "summary": "Tool to automagically save scikit-learn scaler properties to a portable, readable format.",
    "version": "0.1b2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16012970,
  "releases": {
    "0.1b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "136a338dabd4ba404b528c12c6ce06d0ae8889d585dc59525e5253bb4d19fa66",
          "md5": "0d8b57caf1bca5ac65de3b352d36c38b",
          "sha256": "0f26eb799d7f0c24253cb25ce935fdeffffe0d8a3b3d99fd940acd965813806d"
        },
        "downloads": -1,
        "filename": "bridgescaler-0.1b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d8b57caf1bca5ac65de3b352d36c38b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5830,
        "upload_time": "2022-12-06T20:26:30",
        "upload_time_iso_8601": "2022-12-06T20:26:30.708840Z",
        "url": "https://files.pythonhosted.org/packages/13/6a/338dabd4ba404b528c12c6ce06d0ae8889d585dc59525e5253bb4d19fa66/bridgescaler-0.1b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "043e41ed02a67fa712474cd60ac2291a72b849493f1905dd947f064415eb9025",
          "md5": "5c6da0c8a0af98cc9b6418755d6f47f2",
          "sha256": "9c5c6ad3ca21f879ed78a895283c0f50bb94dc9241e3395a7ea5bc5cff3107dc"
        },
        "downloads": -1,
        "filename": "bridgescaler-0.1b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c6da0c8a0af98cc9b6418755d6f47f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5830,
        "upload_time": "2022-12-06T21:54:48",
        "upload_time_iso_8601": "2022-12-06T21:54:48.365464Z",
        "url": "https://files.pythonhosted.org/packages/04/3e/41ed02a67fa712474cd60ac2291a72b849493f1905dd947f064415eb9025/bridgescaler-0.1b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "043e41ed02a67fa712474cd60ac2291a72b849493f1905dd947f064415eb9025",
        "md5": "5c6da0c8a0af98cc9b6418755d6f47f2",
        "sha256": "9c5c6ad3ca21f879ed78a895283c0f50bb94dc9241e3395a7ea5bc5cff3107dc"
      },
      "downloads": -1,
      "filename": "bridgescaler-0.1b2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5c6da0c8a0af98cc9b6418755d6f47f2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5830,
      "upload_time": "2022-12-06T21:54:48",
      "upload_time_iso_8601": "2022-12-06T21:54:48.365464Z",
      "url": "https://files.pythonhosted.org/packages/04/3e/41ed02a67fa712474cd60ac2291a72b849493f1905dd947f064415eb9025/bridgescaler-0.1b2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}