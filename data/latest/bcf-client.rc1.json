{
  "info": {
    "author": "Ifcopenshell",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Utilities"
    ],
    "description": "# bcf\n\nA simple Python implementation of BCF. The data model is described in `data.py`.\nManipulation of BCF-XML is available via `bcfxml.py` and manipulation of BCF-API\nis available via `bcfapi.py`.\n\n- BCF-XML version 2.1: Fully supported\n- BCF-API version 2.1: Not supported, will probably tackle this after BCF-API v3.0\n- BCF-XML version 3.0: Almost fully supported, except for the documents module\n- BCF-API version 3.0: Almost fully supported, except for two requests.\n\n## bcfxml\n\nThe `bcfxml` module lets you interact with the BCF-XML standard.\n\n```python\nfrom bcf import bcfxml\n\n\n# Load a project\nbcfxml = bcfxml.load(\"/path/to/file.bcf\")\n\n\n# The project is also stored in the module\n# project == bcfxml.project\nproject=bcfxml.get_project()\nprint(project.name)\n\n# To edit a project, just modify the object directly\nbcfxml.project.name = \"New name\"\nbcfxml.edit_project()\n\n# The BCF file is extracted to this temporary directory\nprint(bcfxml.filepath)\n\n# Get a dictionary of topics\ntopics = bcfxml.get_topics()\n\n# Note: topics == bcfxml.topics\nfor guid, topic in bcfxml.topics.items():\n    print(\"Topic guid is\", guid)\n    print(\"Topic guid is\", topic.guid)\n    print(\"Topic title is\", topic.title)\n\n    # Fetch extra data about a topic\n    header = bcfxml.get_header(guid)\n    comments = bcfxml.get_comments(guid)\n    viewpoints = bcfxml.get_viewpoints(guid)\n\n    # Note: comments == topic.comments, and so on\n    for comment_guid, comment in comments.items():\n        print(comment_guid)\n        print(comment.comment)\n        print(comment.author)\n\n# Get a particular topic\ntopic = bcfxml.get_topic(guid)\n\n# Modify a topic\ntopic.title = \"New title\"\nbcfxml.edit_topic(topic)\n```\n\n## bcfapi\n\nThe `bcfapi` module lets you interact with the BCF-API standard.\n\n```python\nfrom bcf.v3.bcfapi import FoundationClient, BcfClient\n\nfoundation_client = FoundationClient(\"YOUR_CLIENT_ID\", \"YOUR_CLIENT_SECRET\", \"OPENCDE_BASEURL\")\nauth_methods = foundation_client.get_auth_methods()\n\n# Our library currently only implements the authorization_code flow\nif \"authorization_code\" in auth_methods:\n    foundation_client.login()\n\nbcf_client = BcfClient(foundation_client)\n\nversions = foundation_client.get_versions()\nfor version in versions:\nif \"3.0\" in versions:\n    if version[\"api_id\"] == \"bcf\" and version[\"version_id\"] == \"3.0\":\n        bcf_client.set_version(version)\n\ndata = bcf_client.get_projects()\nprint(data)\nproject_id = data[0][\"project_id\"]\nprint(project_id)\ndata = bcf_client.get_project(project_id)\nprint(data)\ndata = bcf_client.get_extensions(project_id)\nprint(data)\n```\n\n## Todo List\n\nThe remaining work that needs to be completed in `bcfxml.py` and `bcfapi.py`.\n\n- For `bcfxml.py` two xsds support is remaining namely 'documents.xsd`and`extensions.xsd`.\n- For `bcfapi.py` two requests that are `get_topics` and `get_comments` are remaining.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/IfcOpenShell/IfcOpenShell",
    "keywords": "Python,file formats,engineering",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bcf-client",
    "package_url": "https://pypi.org/project/bcf-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/bcf-client/",
    "project_urls": {
      "Code": "https://github.com/IfcOpenShell/IfcOpenShell",
      "Homepage": "https://github.com/IfcOpenShell/IfcOpenShell",
      "Issues": "https://github.com/IfcOpenShell/IfcOpenShell/issues"
    },
    "release_url": "https://pypi.org/project/bcf-client/0.0.1/",
    "requires_dist": [
      "xmlschema"
    ],
    "requires_python": ">=3",
    "summary": "A simple Python implementation of BCF",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11293694,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6298ceda5dcdc54ec2aa881a26aeca9c8a77dfd0e2cb15f4b79365e16629722",
          "md5": "dfc28556977c66d192fa19c8c2eacf09",
          "sha256": "92d73bdd82079f8c8841f3d5fe34782c7254de722a9fd8267e5fe9c1257fe68a"
        },
        "downloads": -1,
        "filename": "bcf_client-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfc28556977c66d192fa19c8c2eacf09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 44980,
        "upload_time": "2021-08-27T10:31:48",
        "upload_time_iso_8601": "2021-08-27T10:31:48.393209Z",
        "url": "https://files.pythonhosted.org/packages/d6/29/8ceda5dcdc54ec2aa881a26aeca9c8a77dfd0e2cb15f4b79365e16629722/bcf_client-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5423b585153723f011765fa45e146aaff159fa85c19e1cf82edc228d9c8ad96f",
          "md5": "ed55cc32af0864cc37b61a370d9bf7f2",
          "sha256": "cff3bd1db8117adc4bc4bb3dc402c98fc3e3548fb74f5035c4ac84aecbbba5e5"
        },
        "downloads": -1,
        "filename": "bcf-client-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ed55cc32af0864cc37b61a370d9bf7f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 40098,
        "upload_time": "2021-08-27T10:31:49",
        "upload_time_iso_8601": "2021-08-27T10:31:49.928818Z",
        "url": "https://files.pythonhosted.org/packages/54/23/b585153723f011765fa45e146aaff159fa85c19e1cf82edc228d9c8ad96f/bcf-client-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6298ceda5dcdc54ec2aa881a26aeca9c8a77dfd0e2cb15f4b79365e16629722",
        "md5": "dfc28556977c66d192fa19c8c2eacf09",
        "sha256": "92d73bdd82079f8c8841f3d5fe34782c7254de722a9fd8267e5fe9c1257fe68a"
      },
      "downloads": -1,
      "filename": "bcf_client-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dfc28556977c66d192fa19c8c2eacf09",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 44980,
      "upload_time": "2021-08-27T10:31:48",
      "upload_time_iso_8601": "2021-08-27T10:31:48.393209Z",
      "url": "https://files.pythonhosted.org/packages/d6/29/8ceda5dcdc54ec2aa881a26aeca9c8a77dfd0e2cb15f4b79365e16629722/bcf_client-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5423b585153723f011765fa45e146aaff159fa85c19e1cf82edc228d9c8ad96f",
        "md5": "ed55cc32af0864cc37b61a370d9bf7f2",
        "sha256": "cff3bd1db8117adc4bc4bb3dc402c98fc3e3548fb74f5035c4ac84aecbbba5e5"
      },
      "downloads": -1,
      "filename": "bcf-client-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ed55cc32af0864cc37b61a370d9bf7f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 40098,
      "upload_time": "2021-08-27T10:31:49",
      "upload_time_iso_8601": "2021-08-27T10:31:49.928818Z",
      "url": "https://files.pythonhosted.org/packages/54/23/b585153723f011765fa45e146aaff159fa85c19e1cf82edc228d9c8ad96f/bcf-client-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}