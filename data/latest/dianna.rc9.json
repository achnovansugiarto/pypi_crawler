{
  "info": {
    "author": "DIANNA Team",
    "author_email": "dianna-ai@esciencecenter.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<!--\ntitle: 'DIANNA: Deep Insight And Neural Network Analysis'\ntags:\n  - Python\n  - explainable AI\n  - deep neural networks\n  - ONNX\n  - benchmark sets\nauthors:\n  - name: Elena Ranguelova^[co-first author] # note this makes a footnote saying 'co-first author'\n    orcid: 0000-0002-9834-1756\n    affiliation: 1\n  - name: Patrick Bos^[co-first author] # note this makes a footnote saying 'co-first author'\n    orcid: 0000-0002-6033-960X\n    affiliation: 1\n  - name: Yang Liu^[co-first author] # note this makes a footnote saying 'co-first author'\n    orcid: 0000-0002-1966-8460\n    affiliation: 1\n  - name: Christiaan Meijer^[co-first author] # note this makes a footnote saying 'co-first author'\n    orcid: 0000-0002-5529-5761\n    affiliation: 1\n  - name: Leon Oostrum^[co-first author] # note this makes a footnote saying 'co-first author'\n    orcid: 0000-0001-8724-8372\n    affiliation: 1\n  - name: Giulia Crocioni^[co-first author] # note this makes a footnote saying 'co-first author'\n    orcid: 0000-0002-0823-0121\n    affiliation: 1\n  - name: Laura Ootes^[co-first author] # note this makes a footnote saying 'co-first author'\n    orcid: 0000-0002-2800-8309\n    affiliation: 1  \n  - name: Pranav Chandramouli^[co-first author] # note this makes a footnote saying 'co-first author'\n    orcid: 0000-0002-7896-2969\n    affiliation: 1    \n  - name: Aron Jansen^[co-first author] # note this makes a footnote saying 'co-first author'\n    orcid: 0000-0002-4764-9347\n    affiliation: 1    \naffiliations:\n - name: Netherlands eScience Center, Amsterdam, the Netherlands\n   index: 1\n-->\n\n[![build](https://github.com/dianna-ai/dianna/actions/workflows/build.yml/badge.svg)](https://github.com/dianna-ai/dianna/actions/workflows/build.yml)\n[![Documentation Status](https://readthedocs.org/projects/dianna/badge/?version=latest)](https://dianna.readthedocs.io/en/latest/?badge=latest)\n[![workflow scc badge](https://sonarcloud.io/api/project_badges/measure?project=dianna-ai_dianna&metric=coverage)](https://sonarcloud.io/dashboard?id=dianna-ai_dianna)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/5542/badge)](https://bestpractices.coreinfrastructure.org/projects/5542)\n[![fair-software.eu](https://img.shields.io/badge/fair--software.eu-%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F%20%20%E2%97%8F-green)](https://fair-software.eu)\n [![status](https://camo.githubusercontent.com/dcc6405df4084ef5aa1cdf0f13d7fc01e72c9e7c4ca907a68c95698cec85e75a/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f66303539326331616563623337313165303638623538393730353838663138352f7374617475732e737667)](https://joss.theoj.org/papers/f0592c1aecb3711e068b58970588f185)\n\n<img width=\"300\" alt=\"Logo_ER10\" src=\"https://user-images.githubusercontent.com/3244249/151994514-b584b984-a148-4ade-80ee-0f88b0aefa45.png\">\n\n<img align=\"left\" src=\"https://user-images.githubusercontent.com/55382553/153408200-36c4de2e-7865-4934-956d-09eefd893e6a.png\">\n\n# Deep Insight And Neural Network Analysis\n\nDIANNA is a Python package that brings explainable AI (XAI) to your research project. It wraps carefully selected XAI methods in a simple, uniform interface.\nIt's built by, with and for (academic) researchers and research software engineers working on machine learning projects.\n\n## Why DIANNA? \nDIANNA software is addressing needs of both (X)AI researchers and mostly the various domains scientists who are using or will use AI models for their research without being experts in (X)AI. DIANNA is future-proof: one of the very few XAI library supporting the [Open Neural Network Exchange (ONNX)](https://onnx.ai/) format. \n\nAfter studying the vast XAI landscape we have made choices in the parts of the [XAI Taxonomy](https://doi.org/10.3390/make3030032) on which methods, data modalities and problems types to focus. Our choices, based on the largest usage in scientific literature, are shown graphically in the XAI taxonomy below:\n\n<img src=\"https://user-images.githubusercontent.com/3244249/196441854-24c8c6b7-2364-4cb3-90b9-1c63e3bdc345.png\" alt=\"XAI_taxonomy\" width=\"60%\"/>\n\nThe key points of DIANNA:\n\n* Provides an easy-to-use interface for non (X)AI experts\n* Implements well-known XAI methods (LIME, RISE and Kernal SHAP) chosen by systematic and objective evaluation criteria\n* Supports the de-facto standard format for neural network models - ONNX.\n* Includes clear instructions for export/conversions from Tensorflow, Pytorch, Keras and scikit-learn to ONNX.\n* Supports both images and text data modalities. Time series is work in progress, tabular data and even embeddings support is planned.\n* Comes with simple intuitive image and text benchmarks \n* Easily extendable to other XAI methods \n\nFor more information on the unique strengths of DIANNA with comparison to other tools, please see the [context landscape](https://dianna.readthedocs.io/en/latest/CONTEXT.html).\n\n## Installation \n[![workflow pypi badge](https://img.shields.io/pypi/v/dianna.svg?colorB=blue)](https://pypi.python.org/project/dianna/)\n[![supported python versions](https://img.shields.io/pypi/pyversions/dianna)](https://pypi.python.org/project/dianna/)\n\nDIANNA can be installed from PyPI using [pip](https://pip.pypa.io/en/stable/installation/) on any of the supported Python versions (see badge):\n\n```console\npython3 -m pip install dianna\n```\n\nTo install the most recent development version directly from the GitHub repository run:\n\n```console\npython3 -m pip install git+https://github.com/dianna-ai/dianna.git\n```\n\nIf you get an error related to OpenMP when importing dianna, have a look at [this issue](https://github.com/dianna-ai/dianna/issues/376) for possible workarounds.\n\n### Pre-requisites only for Macbook Pro with M1 Pro chip users\n\n- To install TensorFlow you can follow this [tutorial](https://betterdatascience.com/install-tensorflow-2-7-on-macbook-pro-m1-pro/).\n\n- To install TensorFlow Addons you can follow these [steps](https://github.com/tensorflow/addons/pull/2504). For further reading see this [issue](https://github.com/tensorflow/addons/issues/2503). Note that this temporary solution works only for macOS versions >= 12.0. Note that this step may have changed already, see https://github.com/dianna-ai/dianna/issues/245.\n\n- Before installing DIANNA, comment `tensorflow` requirement in `setup.cfg` file (tensorflow package for M1 is called `tensorflow-macos`).\n\n## Getting started\nYou need:\n- your trained ONNX model ([convert my pytorch/tensorflow/keras/scikit-learn model to ONNX](https://github.com/dianna-ai/dianna#onnx-models))\n- 1 data item to be explained\n\n### Demo movie\n\n[![Watch the video on YouTube](https://img.youtube.com/vi/u9_c5DJewLU/default.jpg)](https://youtu.be/u9_c5DJewLU)\n\n### Text example:\n```python\nmodel_path = 'your_model.onnx'  # model trained on text\ntext = 'The movie started great but the ending is boring and unoriginal.'\n```\nWhich of your model's classes do you want an explanation for?\n```python\nlabels = [positive_class, negative_class]\n```\nRun using the XAI method of your choice, for example LIME:\n```python\nexplanation = dianna.explain_text(model_path, text, 'LIME')\ndianna.visualization.highlight_text(explanation[labels.index(positive_class)], text)\n```\n![image](https://user-images.githubusercontent.com/6087314/155532504-6f90f032-cbb4-4e71-9b99-aa9c0de4e86a.png)\n\n\n### Image example:\n```python\nmodel_path = 'your_model.onnx'  # model trained on images\nimage = PIL.Image.open('your_image.jpeg')\n```\nTell us what label refers to the channels, or colors, in the image.\n```python\naxis_labels = {0: 'channels'}\n```\nWhich of your model's classes do you want an explanation for?\n```python\nlabels = [class_a, class_b]\n```\nRun using the XAI method of your choice, for example RISE:\n```python\nexplanation = dianna.explain_image(model_path, image, 'RISE', axis_labels=axis_labels, labels=labels)\ndianna.visualization.plot_image(explanation[labels.index(class_a)], original_data=image)\n```\n![image](https://user-images.githubusercontent.com/6087314/155557077-e2052094-d8ac-49d3-a840-0160256d53a6.png)\n\n## Datasets\nDIANNA comes with simple datasets. Their main goal is to provide intuitive insight into the working of the XAI methods. They can be used as benchmarks for evaluation and comparison of existing and new XAI methods.\n\n### Images\n|Dataset|Description|Examples|Generation|\n|:-----|:----|:---|:----|\n|Binary MNIST <img width=\"25\" alt=\"mnist_zero_and_one_half_size\" src=\"https://user-images.githubusercontent.com/3244249/152354583-d7b68902-d402-4098-922b-b1a33b07e3e1.png\">| Greyscale images of the digits \"1\" and \"0\" - a 2-class subset from the famous [MNIST dataset](http://yann.lecun.com/exdb/mnist/) for handwritten digit classification. |<img width=\"120\" alt=\"BinaryMNIST\" src=\"https://user-images.githubusercontent.com/3244249/150808267-3d27eae0-78f2-45f8-8569-cb2561f2c2e9.png\">| [Binary MNIST dataset generation](https://github.com/dianna-ai/dianna-exploration/tree/main/example_data/dataset_preparation/MNIST)|\n|[Simple Geometric (circles and triangles)](https://doi.org/10.5281/zenodo.5012824) <img width=\"20\" alt=\"Simple Geometric Logo\" src=\"https://user-images.githubusercontent.com/3244249/150808842-d35d741e-294a-4ede-bbe9-58e859483589.png\"> | Images of circles and triangles for 2-class geometric shape classificaiton. The shapes of varying size and orientation and the background have varying uniform gray levels.  | <img width=\"130\" alt=\"SimpleGeometric\" src=\"https://user-images.githubusercontent.com/3244249/150808125-e1576237-47fa-4e51-b01e-180904b7c7f6.png\">| [Simple geometric shapes dataset generation](https://github.com/dianna-ai/dianna-exploration/tree/main/example_data/dataset_preparation/geometric_shapes) | \n|[Simple Scientific (LeafSnap30)](https://zenodo.org/record/5061353/)<img width=\"20\" alt=\"LeafSnap30 Logo\" src=\"https://user-images.githubusercontent.com/3244249/150815639-2da560d4-8b26-4eeb-9ab4-dabf221a264a.png\"> | Color images of tree leaves - a 30-class post-processed subset from the LeafSnap dataset for automatic identification of North American tree species.|<img width=\"600\" alt=\"LeafSnap\" src=\"https://user-images.githubusercontent.com/3244249/150804246-f714e517-641d-48b2-af26-2f04166870d6.png\">| [LeafSnap30 dataset generation](https://github.com/dianna-ai/dianna-exploration/blob/main/example_data/dataset_preparation/LeafSnap/)|\n\n### Text\n|Dataset|Description|Examples|Generation|\n|:-----|:----|:---|:----|\n| [Stanford sentiment treebank](https://nlp.stanford.edu/sentiment/index.html)<img width=\"20\" alt=\"nlp-logo_half_size\" src=\"https://user-images.githubusercontent.com/3244249/152355020-908c04f3-aa99-489d-b87a-7e6b1f586118.png\">|Dataset for predicting the sentiment, positive or negative, of movie reviews. | _This movie was actually neither that funny, nor super witty._|[Sentiment treebank](https://nlp.stanford.edu/sentiment/treebank.html)|\n\n## ONNX models\n<!-- TODO: Add all links, see issue https://github.com/dianna-ai/dianna/issues/135 -->\n\n**We work with ONNX!** ONNX is a great unified neural network standard which can be used to boost reproducible science. Using ONNX for your model also gives you a boost in performance! In case your models are still in another popular DNN (deep neural network) format, here are some simple recipes to convert them:\n* [pytorch and pytorch-lightning](https://github.com/dianna-ai/dianna/blob/main/tutorials/conversion_onnx/pytorch2onnx.ipynb) - use the built-in [`torch.onnx.export`](https://pytorch.org/docs/stable/onnx.html) function to convert pytorch models to onnx, or call the built-in [`to_onnx`](https://pytorch-lightning.readthedocs.io/en/latest/deploy/production_advanced.html) function on your [`LightningModule`](https://pytorch-lightning.readthedocs.io/en/latest/api/pytorch_lightning.core.LightningModule.html#pytorch_lightning.core.LightningModule) to export pytorch-lightning models to onnx.\n* [tensorflow](https://github.com/dianna-ai/dianna/blob/main/tutorials/conversion_onnx/tensorflow2onnx.ipynb) - use the [`tf2onnx`](https://github.com/onnx/tensorflow-onnx) package to convert tensorflow models to onnx.\n* [keras](https://github.com/dianna-ai/dianna/blob/main/tutorials/conversion_onnx/keras2onnx.ipynb) - same as the conversion from tensorflow to onnx, the [`tf2onnx`](https://github.com/onnx/tensorflow-onnx) package also supports keras.\n* [scikit-learn](https://github.com/dianna-ai/dianna/blob/main/tutorials/conversion_onnx/skl2onnx.ipynb) - use the [`skl2onnx`](https://github.com/onnx/sklearn-onnx) package to scikit-learn models to onnx.\n\nMore converters with examples and tutorials can be found on the [ONNX tutorial page](https://github.com/onnx/tutorials).\n\nAnd here are links to notebooks showing how we created our models on the benchmark datasets:\n### Images\n|Models|Generation|\n|:-----|:----|\n|[Binary MNIST model](https://zenodo.org/record/5907177)| [Binary MNIST model generation](https://github.com/dianna-ai/dianna-exploration/blob/main/example_data/model_generation/MNIST/generate_model_binary.ipynb)|\n|[Simple Geometric model](https://zenodo.org/deposit/5907059)| [Simple geometric shapes model generation](https://github.com/dianna-ai/dianna-exploration/blob/main/example_data/model_generation/geometric_shapes/generate_model.ipynb)|\n|[Simple Scientific model](https://zenodo.org/record/5907196)| [LeafSnap30 model generation](https://github.com/dianna-ai/dianna-exploration/blob/main/example_data/model_generation/LeafSnap/generate_model.ipynb)|\n\n### Text\n|Models|Generation|\n|:-----|:----|\n|[Movie reviews model](https://zenodo.org/record/5910598)| [Stanford sentiment treebank model generation](https://github.com/dianna-ai/dianna-exploration/blob/main/example_data/model_generation/movie_reviews/generate_model.ipynb)|\n\n**_We envision the birth of the ONNX Scientific models zoo soon..._**\n\n## Tutorials\nDIANNA supports different data modalities and XAI methods. The table contains links to the relevant XAI method's papers. There are DIANNA [tutorials](./tutorials) covering each supported method and data modality on a least one dataset. Our future plans to expand DIANNA with more data modalities and XAI methods are given in the [ROADMAP](https://dianna.readthedocs.io/en/latest/ROADMAP.html).\n\n<!-- see issue: https://github.com/dianna-ai/dianna/issues/142, also related issue: https://github.com/dianna-ai/dianna/issues/148 -->\n\n|Data \\ XAI|[RISE](http://bmvc2018.org/contents/papers/1064.pdf)|[LIME](https://www.kdd.org/kdd2016/papers/files/rfp0573-ribeiroA.pdf)|[KernelSHAP](https://proceedings.neurips.cc/paper/2017/file/8a20a8621978632d76c43dfd28b67767-Paper.pdf)|\n|:-----|:---|:---|:---|\n|Images|:white_check_mark:|:white_check_mark:|:white_check_mark:|\n|Text|:white_check_mark:|:white_check_mark:|planned|\n|Embedding|coming soon|coming soon|coming soon|\n|Timeseries|work in progress|work in progress|work in progress|\n|Tabular||||\n|Graphs | | | |\n\n[LRP](https://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0130140&type=printable) and [PatternAttribution](https://arxiv.org/pdf/1705.05598.pdf) also feature in the top 5 of our thoroughly evaluated XAI methods using objective criteria (details in coming blog-post). **Contributing by adding these and more (new) post-hoc explainability methods on ONNX models is very welcome!**\n\n## Reference documentation \n\nFor detailed information on using specific DIANNA functions, please visit the [documentation page hosted at Readthedocs](https://dianna.readthedocs.io/en/latest).\n\n## Contributing\n\nIf you want to contribute to the development of DIANNA,\nhave a look at the [contribution guidelines](https://dianna.readthedocs.io/en/latest/CONTRIBUTING.html).\nSee our [developer documentation](docs/developer_info.rst) for information on developer installation, running tests, generating documentation, versioning and making a release.\n\n## How to cite us \n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.5592607.svg)](https://zenodo.org/record/5592607)\n[![RSD](https://img.shields.io/badge/rsd-dianna-00a3e3.svg)](https://www.research-software.nl/software/dianna)\n\nIf you use this package for your scientific work, please consider citing it as:\n\n    Ranguelova, E., Bos, P., Liu, Y., Meijer, C., Oostrum, L., Crocioni, G., Ootes, L., Chandramouli, P., Jansen, A. (2022). dianna (*[VERSION YOU USED]*). Zenodo. https://zenodo.org/record/5592607\n\nSee also the [Zenodo page](https://zenodo.org/record/5592607) for exporting the citation to BibTteX and other formats.\n\n## Credits\n\nThis package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and the [NLeSC/python-template](https://github.com/NLeSC/python-template).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dianna-ai/dianna",
    "keywords": "XAI,machine learning",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dianna",
    "package_url": "https://pypi.org/project/dianna/",
    "platform": null,
    "project_url": "https://pypi.org/project/dianna/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dianna-ai/dianna/issues",
      "Homepage": "https://github.com/dianna-ai/dianna"
    },
    "release_url": "https://pypi.org/project/dianna/0.7.0/",
    "requires_dist": [
      "Ipython",
      "lime",
      "matplotlib",
      "numpy",
      "onnx",
      "onnxruntime",
      "onnx-tf",
      "scikit-image (>=0.19.1)",
      "shap",
      "spacy",
      "tensorflow (>=2.11)",
      "tensorflow-probability",
      "tqdm",
      "xarray",
      "dash",
      "jupyter-dash",
      "Flask-Caching",
      "html2image",
      "bump2version ; extra == 'dev'",
      "prospector[with_pyroma] ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "scipy ; extra == 'dev'",
      "spacy ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "sphinx-autoapi ; extra == 'dev'",
      "torchtext ; extra == 'dev'",
      "coverage[toml] ; extra == 'dev'",
      "nbmake ; extra == 'dev'",
      "nbsphinx ; extra == 'dev'",
      "nbsphinx-link ; extra == 'dev'",
      "pandoc ; extra == 'dev'",
      "myst-parser ; extra == 'dev'",
      "pytorch-lightning ; extra == 'notebooks'",
      "scipy ; extra == 'notebooks'",
      "skl2onnx ; extra == 'notebooks'",
      "spacy ; extra == 'notebooks'",
      "tf2onnx ; extra == 'notebooks'",
      "torchtext ; extra == 'notebooks'",
      "torchvision ; extra == 'notebooks'",
      "ipywidgets ; extra == 'notebooks'",
      "build ; extra == 'publishing'",
      "twine ; extra == 'publishing'",
      "wheel ; extra == 'publishing'",
      "torchtext ; extra == 'text'",
      "spacy ; extra == 'text'"
    ],
    "requires_python": "<3.11,>=3.7",
    "summary": "Deep Insight And Neural Network Analysis",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16635272,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ed8632fcde7b24baea872ecdcfc9a1ff336e31aa6a813d8d357df6e4648c5f3",
          "md5": "172de20a8b895eb6ea2eee4eb49cd644",
          "sha256": "cb2714e56ed3f2c0b588c923ab82b4c5e9e6c6bb197b43a76d29fb62f91b5948"
        },
        "downloads": -1,
        "filename": "dianna-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "172de20a8b895eb6ea2eee4eb49cd644",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15141,
        "upload_time": "2021-10-22T13:45:43",
        "upload_time_iso_8601": "2021-10-22T13:45:43.673393Z",
        "url": "https://files.pythonhosted.org/packages/9e/d8/632fcde7b24baea872ecdcfc9a1ff336e31aa6a813d8d357df6e4648c5f3/dianna-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6947ae5a9ad82b60ba8089ed92fbd8b2b2a3c28759d67c21409314acc93b257",
          "md5": "7d98e5652055b8baf95344b414a30a81",
          "sha256": "b72a6a963f8bf0730a1ee35c562541205853cf9c782352b67164f7483a8ce581"
        },
        "downloads": -1,
        "filename": "dianna-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d98e5652055b8baf95344b414a30a81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14724,
        "upload_time": "2021-10-22T13:45:45",
        "upload_time_iso_8601": "2021-10-22T13:45:45.293343Z",
        "url": "https://files.pythonhosted.org/packages/b6/94/7ae5a9ad82b60ba8089ed92fbd8b2b2a3c28759d67c21409314acc93b257/dianna-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed3a09ac142a076844a765ff25d2a5b92cbc7bc36613a37b07c5fb750638d391",
          "md5": "eb08fbb5d3068af3978a34e09ce1aca1",
          "sha256": "03ae8ce8597da697449f133ef10c12cd7ccd82607b7ad9e0fec73be8f4454c8e"
        },
        "downloads": -1,
        "filename": "dianna-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb08fbb5d3068af3978a34e09ce1aca1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18376,
        "upload_time": "2021-12-23T09:24:09",
        "upload_time_iso_8601": "2021-12-23T09:24:09.927262Z",
        "url": "https://files.pythonhosted.org/packages/ed/3a/09ac142a076844a765ff25d2a5b92cbc7bc36613a37b07c5fb750638d391/dianna-0.2.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Contains bug in RISE p_keep auto-tuning"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5ab76a0a59b997dc5faf34eb3340d80bff508baf1815020f85e268579756d02",
          "md5": "f9ffad47eb1be3c1b16a9e3b25d583b8",
          "sha256": "929f5d875ed16faf93f04ad0351f50543176dbb7259232a03ce304085d1a9fd6"
        },
        "downloads": -1,
        "filename": "dianna-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9ffad47eb1be3c1b16a9e3b25d583b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18058,
        "upload_time": "2021-12-23T09:24:10",
        "upload_time_iso_8601": "2021-12-23T09:24:10.965250Z",
        "url": "https://files.pythonhosted.org/packages/c5/ab/76a0a59b997dc5faf34eb3340d80bff508baf1815020f85e268579756d02/dianna-0.2.0.tar.gz",
        "yanked": true,
        "yanked_reason": "Contains bug in RISE p_keep auto-tuning"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a99841008ce1d733176a4970201eba274a3ec7089b95793b81cbe7ffc5429b78",
          "md5": "926dd79c77246b60a098bc7e46f36e1f",
          "sha256": "9b41f5436364ee026c24995e763fa2848410471516f0be392b7b9206a627c77c"
        },
        "downloads": -1,
        "filename": "dianna-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "926dd79c77246b60a098bc7e46f36e1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18729,
        "upload_time": "2021-12-23T11:42:20",
        "upload_time_iso_8601": "2021-12-23T11:42:20.045083Z",
        "url": "https://files.pythonhosted.org/packages/a9/98/41008ce1d733176a4970201eba274a3ec7089b95793b81cbe7ffc5429b78/dianna-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75230568220a93b3f1c1b887f6456bca6ab84d2524d812ef28f0c92aec43b70c",
          "md5": "689f5be17bcf4e7f7aba16fa27be8d49",
          "sha256": "05bdcfbeffbe6b679ce63f6141e3605a6b1034c75a6d0d680025b7c88710c273"
        },
        "downloads": -1,
        "filename": "dianna-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "689f5be17bcf4e7f7aba16fa27be8d49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18151,
        "upload_time": "2021-12-23T11:42:21",
        "upload_time_iso_8601": "2021-12-23T11:42:21.476168Z",
        "url": "https://files.pythonhosted.org/packages/75/23/0568220a93b3f1c1b887f6456bca6ab84d2524d812ef28f0c92aec43b70c/dianna-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53d6fdf2dfe75a998d6beb72fbd18d1d9219614c5fcb6f2938e85ceee92b9ce0",
          "md5": "8f1609d7b1093e42b27aba5e3b1f715b",
          "sha256": "fca5adf91419600b1fc560898b9114d6811763befe4f96b82a7cd4f935aa53b0"
        },
        "downloads": -1,
        "filename": "dianna-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f1609d7b1093e42b27aba5e3b1f715b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25966,
        "upload_time": "2022-02-14T11:02:39",
        "upload_time_iso_8601": "2022-02-14T11:02:39.928906Z",
        "url": "https://files.pythonhosted.org/packages/53/d6/fdf2dfe75a998d6beb72fbd18d1d9219614c5fcb6f2938e85ceee92b9ce0/dianna-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "787ec5d9e048185e779f0aed91f84b22f45abb5a130a6e683385794624dd4f15",
          "md5": "8a828f2f74a863801b7735e38f4e293b",
          "sha256": "2f99755143e374825024e7ad9c3ec9db85dd66ed58a00b2ae581782ecd6fa772"
        },
        "downloads": -1,
        "filename": "dianna-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a828f2f74a863801b7735e38f4e293b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27599,
        "upload_time": "2022-02-14T11:02:41",
        "upload_time_iso_8601": "2022-02-14T11:02:41.187242Z",
        "url": "https://files.pythonhosted.org/packages/78/7e/c5d9e048185e779f0aed91f84b22f45abb5a130a6e683385794624dd4f15/dianna-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7c962a1a26e1920fc77044c1b7bedd8127c9edd368b5f000989791a71207583",
          "md5": "f9449aa2fff11391c142c719f7b649db",
          "sha256": "117ae8d34c008fdb0d723d6ccabe3ba681505427389af4811fd57c1ba0bd3d24"
        },
        "downloads": -1,
        "filename": "dianna-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9449aa2fff11391c142c719f7b649db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26374,
        "upload_time": "2022-03-24T09:07:18",
        "upload_time_iso_8601": "2022-03-24T09:07:18.086554Z",
        "url": "https://files.pythonhosted.org/packages/b7/c9/62a1a26e1920fc77044c1b7bedd8127c9edd368b5f000989791a71207583/dianna-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f3ff0f42a268bafbeef079f6f3edae3d1cec1c5abce880020b0f082e4c9f931",
          "md5": "e1617078a3186939498a2c465155aec9",
          "sha256": "c698e25490c482268a353133a399367fcfe7e516edeb182dc1b83af193f7730b"
        },
        "downloads": -1,
        "filename": "dianna-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e1617078a3186939498a2c465155aec9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28290,
        "upload_time": "2022-03-24T09:07:19",
        "upload_time_iso_8601": "2022-03-24T09:07:19.719693Z",
        "url": "https://files.pythonhosted.org/packages/5f/3f/f0f42a268bafbeef079f6f3edae3d1cec1c5abce880020b0f082e4c9f931/dianna-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6165ef0e6015292843c6ed1b59cbd1aac77f2219637872101a59d766641654d3",
          "md5": "a757d6d6fa7a74203d427484c2859d4f",
          "sha256": "c97fa15900b3a57976dea6afea2dc44ce571fdcb7107d23de4d1f69b67699a6d"
        },
        "downloads": -1,
        "filename": "dianna-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a757d6d6fa7a74203d427484c2859d4f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26350,
        "upload_time": "2022-12-01T14:32:44",
        "upload_time_iso_8601": "2022-12-01T14:32:44.011866Z",
        "url": "https://files.pythonhosted.org/packages/61/65/ef0e6015292843c6ed1b59cbd1aac77f2219637872101a59d766641654d3/dianna-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b400b0538aab514d00fa9574c5567f96c2b6548354a0e649526d29091f34d606",
          "md5": "32f4431121161836cf95d634368eb3ec",
          "sha256": "089dfdf131e1d0103298e0a05b5dac1e31164a7dc39ee32d9c6d94047a08b4b3"
        },
        "downloads": -1,
        "filename": "dianna-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "32f4431121161836cf95d634368eb3ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28378,
        "upload_time": "2022-12-01T14:32:47",
        "upload_time_iso_8601": "2022-12-01T14:32:47.416213Z",
        "url": "https://files.pythonhosted.org/packages/b4/00/b0538aab514d00fa9574c5567f96c2b6548354a0e649526d29091f34d606/dianna-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78c3b93d6256e280ec63f5caaeb79bd84cea3dcbd60a890fde282210ada3e740",
          "md5": "7bbd082087204388b6d45596ee01f791",
          "sha256": "ce83a210a63a5381c7f2bd998c5e6b82db37d439c9160e573c6d688f3cd75500"
        },
        "downloads": -1,
        "filename": "dianna-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7bbd082087204388b6d45596ee01f791",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27620,
        "upload_time": "2022-09-27T11:39:15",
        "upload_time_iso_8601": "2022-09-27T11:39:15.969778Z",
        "url": "https://files.pythonhosted.org/packages/78/c3/b93d6256e280ec63f5caaeb79bd84cea3dcbd60a890fde282210ada3e740/dianna-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db794c30d7a2b3ce83172fc44d19c6f8cd729abdc0bec9ab81cf961e9d3ac645",
          "md5": "a19d762c1eaf9b7ac2466419f6bc90c9",
          "sha256": "08fd76445d97c3bca0c1c6368532c0cf9e0f11bbfd4cb66d11271430455b2c96"
        },
        "downloads": -1,
        "filename": "dianna-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a19d762c1eaf9b7ac2466419f6bc90c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29162,
        "upload_time": "2022-09-27T11:39:17",
        "upload_time_iso_8601": "2022-09-27T11:39:17.453010Z",
        "url": "https://files.pythonhosted.org/packages/db/79/4c30d7a2b3ce83172fc44d19c6f8cd729abdc0bec9ab81cf961e9d3ac645/dianna-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d12e867bb4e3f763c06dd0303d43a46bd9e8c1ed49c938dd7405a8c111d3541",
          "md5": "0edd3eec172797edd7f19810dfc83897",
          "sha256": "93aeeb07512e6646a1108ff868d68a26fb3997f98e4674764e2627fb4bc2b69f"
        },
        "downloads": -1,
        "filename": "dianna-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0edd3eec172797edd7f19810dfc83897",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.11,>=3.7",
        "size": 29449,
        "upload_time": "2022-12-01T15:06:24",
        "upload_time_iso_8601": "2022-12-01T15:06:24.461572Z",
        "url": "https://files.pythonhosted.org/packages/8d/12/e867bb4e3f763c06dd0303d43a46bd9e8c1ed49c938dd7405a8c111d3541/dianna-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad843ef8390537f770869622290bd81543fc823867c166289be580123a87800e",
          "md5": "3aba649929dc82cf2397673d7b709c0d",
          "sha256": "d58a6ce502a6e1f3df86049924e38c4581676d7fa59e6db33dcb1b0cdf19a473"
        },
        "downloads": -1,
        "filename": "dianna-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3aba649929dc82cf2397673d7b709c0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.11,>=3.7",
        "size": 31508,
        "upload_time": "2022-12-01T15:06:27",
        "upload_time_iso_8601": "2022-12-01T15:06:27.173256Z",
        "url": "https://files.pythonhosted.org/packages/ad/84/3ef8390537f770869622290bd81543fc823867c166289be580123a87800e/dianna-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3252f5163e8a4adfa239e5c905765a412ec50099190cd58b4f4ad71584af6fbf",
          "md5": "3e858e710054d370cc8522e39d7aedd0",
          "sha256": "b5dea0176fc7aae438b763222b15e276c8edcf76307f28f706f06adb69a4b2d2"
        },
        "downloads": -1,
        "filename": "dianna-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e858e710054d370cc8522e39d7aedd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.11,>=3.7",
        "size": 29666,
        "upload_time": "2023-01-31T14:27:26",
        "upload_time_iso_8601": "2023-01-31T14:27:26.225389Z",
        "url": "https://files.pythonhosted.org/packages/32/52/f5163e8a4adfa239e5c905765a412ec50099190cd58b4f4ad71584af6fbf/dianna-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbb3575ba12dca2609c56b57791f3521b53e5fcfa725277d58c06c158b67db3b",
          "md5": "d0719254ed595da3178050830cd1e529",
          "sha256": "f6dbec6d0de9bf684e4f93c155369e2c0797e282cf46688552b8502d7e85b9a1"
        },
        "downloads": -1,
        "filename": "dianna-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d0719254ed595da3178050830cd1e529",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.11,>=3.7",
        "size": 31803,
        "upload_time": "2023-01-31T14:27:28",
        "upload_time_iso_8601": "2023-01-31T14:27:28.158913Z",
        "url": "https://files.pythonhosted.org/packages/fb/b3/575ba12dca2609c56b57791f3521b53e5fcfa725277d58c06c158b67db3b/dianna-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3252f5163e8a4adfa239e5c905765a412ec50099190cd58b4f4ad71584af6fbf",
        "md5": "3e858e710054d370cc8522e39d7aedd0",
        "sha256": "b5dea0176fc7aae438b763222b15e276c8edcf76307f28f706f06adb69a4b2d2"
      },
      "downloads": -1,
      "filename": "dianna-0.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3e858e710054d370cc8522e39d7aedd0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<3.11,>=3.7",
      "size": 29666,
      "upload_time": "2023-01-31T14:27:26",
      "upload_time_iso_8601": "2023-01-31T14:27:26.225389Z",
      "url": "https://files.pythonhosted.org/packages/32/52/f5163e8a4adfa239e5c905765a412ec50099190cd58b4f4ad71584af6fbf/dianna-0.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fbb3575ba12dca2609c56b57791f3521b53e5fcfa725277d58c06c158b67db3b",
        "md5": "d0719254ed595da3178050830cd1e529",
        "sha256": "f6dbec6d0de9bf684e4f93c155369e2c0797e282cf46688552b8502d7e85b9a1"
      },
      "downloads": -1,
      "filename": "dianna-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d0719254ed595da3178050830cd1e529",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<3.11,>=3.7",
      "size": 31803,
      "upload_time": "2023-01-31T14:27:28",
      "upload_time_iso_8601": "2023-01-31T14:27:28.158913Z",
      "url": "https://files.pythonhosted.org/packages/fb/b3/575ba12dca2609c56b57791f3521b53e5fcfa725277d58c06c158b67db3b/dianna-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}