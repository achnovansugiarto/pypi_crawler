{
  "info": {
    "author": "Jochen Schröder, Mikael Mazur and Zonglong He",
    "author_email": "Jochen Schröder <jochen.schroeder@chalmers.se>, Mikael Mazur <mik.mazur@gmail.com>, Zonglong He <zonglong.he@chalmers.se>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# QAMPy a DSP chain for optical communication signals\n\n[![DOI](https://zenodo.org/badge/124787512.svg)](https://zenodo.org/badge/latestdoi/124787512)\n\n<!-- start description -->\nQAMPy is a dsp chain for simulation and equalisation of signals from optical communication transmissions.\nIt is written in Python, but has been designed for high performance and most performance critical \nfunctions are written with [pythran](https://github.com/serge-sans-paille/pythran) to run at speed of compiled c or c++\ncode.\n\nQAMPy can equalise BPSK, QPSK and higher-order QAM signals as well as simulate signal impairments. \n\n## Equalisation \n\nFor signal equalisation it contains:\n\n * CMA and modified CMA equalisation algorithms \n * Radius directed equalisers\n * several decision directed equaliser implementations \n * phase recovery using blind phase search (BPS) and ViterbiViterbi algorithms\n * frequency offset compensation\n * a complete set of pilot-based equalisation routines, including frame synchronization, frequency offset \nestimation, adaptive equalisation and phase recovery\n * additional data-aided and real-valued adaptive equaliser routines\n \n## Impairments\n \nIt can simulate the following impairments:\n\n * frequency offset\n * SNR\n * PMD\n * phase noise\n * transceiver impairments such as modulator nonlinearity, DAC frequency response and limited ENOB\n \n## Signal Quality Metrics\n\nQAMpy is designed to make working with QAM signals easy and includes calculations for several\nperformance metrics:\n\n * Symbol Error Rate (SER)\n * Bit Error Rate (BER)\n * Error Vector Magnitude (EVM)\n * Generalized Mututal Information (GMI)\n \n<!-- end description -->\n\n## Documentation\n\nWe put a strong focus on documenting our functions and most public functions should be well documented. \nUse help in jupyter notebook to excess the documenation. \n\nYou can access documentation with an extensive API at our [website](http://qampy.org).\n\nFor examples of how to use QAMpy see the Scripts and the Notebooks subdirectory, note that not all files are up-to-date\nYou should in particular look at the *cma_equaliser.py* and *64_qam_equalisation.py* files. \n\n## Installation\nInstallation instructions can be found here [here](http://qampy.org/installation/index.html#).\n\n## Status\n\nQAMpy is still in alpha status, however we daily in our work. We will try to keep the basic API stable\nacross releases, but implementation details under core might change without notice.\n\n## Licence and Authors\n\nQAMpy was written by Mikael Mazur and Jochen Schröder from the Photonics Laboratory at Chalmers University of Technology \nand is licenced under GPLv3 or later. \n\n## Citing\n\nIf you use QAMpy in your work please cite us as `Jochen Schröder and Mikael Mazur, \"QAMPy a DSP chain for optical \ncommunications, DOI: 10.5281/zenodo.1195720\"`.\n\n## Acknowledgements\nThe GPU graphics card used for part of this work was donated by NVIDIA Corporation\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "digital signal processing,communications,photonics,science",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "Jochen Schröder <jochen.schroeder@chalmers.se>",
    "name": "qampy",
    "package_url": "https://pypi.org/project/qampy/",
    "platform": null,
    "project_url": "https://pypi.org/project/qampy/",
    "project_urls": {
      "homepage": "https://qampy.org",
      "repository": "https://github.com/ChalmersPhotonicsLab/QAMpy"
    },
    "release_url": "https://pypi.org/project/qampy/0.5.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A python based package of communications qampy tools",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17159347,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aff0d6cac3e15c1bb93db4a4798038e5cbdcca0f873582a46cb5d373b8d87164",
          "md5": "389c1aef008e38bfbc8c5de470b624d8",
          "sha256": "957ccefbc89b7c280cb10643da6bdc78e78812a1c46e3367dd273c635cf8d981"
        },
        "downloads": -1,
        "filename": "qampy-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "389c1aef008e38bfbc8c5de470b624d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 81074564,
        "upload_time": "2023-02-08T09:47:14",
        "upload_time_iso_8601": "2023-02-08T09:47:14.636611Z",
        "url": "https://files.pythonhosted.org/packages/af/f0/d6cac3e15c1bb93db4a4798038e5cbdcca0f873582a46cb5d373b8d87164/qampy-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5f16a88b36569d83d3156aac45a88a19de84aada4d5370d8b7ad74838908863",
          "md5": "ba06dfbfbc02a1d35d43568dc1707888",
          "sha256": "46361940fb903eecc9a65a919ca29a2f63c55d4ffa04ca10c04f0afc6f19872a"
        },
        "downloads": -1,
        "filename": "qampy-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba06dfbfbc02a1d35d43568dc1707888",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 81074985,
        "upload_time": "2023-03-04T21:14:50",
        "upload_time_iso_8601": "2023-03-04T21:14:50.326316Z",
        "url": "https://files.pythonhosted.org/packages/c5/f1/6a88b36569d83d3156aac45a88a19de84aada4d5370d8b7ad74838908863/qampy-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5f16a88b36569d83d3156aac45a88a19de84aada4d5370d8b7ad74838908863",
        "md5": "ba06dfbfbc02a1d35d43568dc1707888",
        "sha256": "46361940fb903eecc9a65a919ca29a2f63c55d4ffa04ca10c04f0afc6f19872a"
      },
      "downloads": -1,
      "filename": "qampy-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ba06dfbfbc02a1d35d43568dc1707888",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 81074985,
      "upload_time": "2023-03-04T21:14:50",
      "upload_time_iso_8601": "2023-03-04T21:14:50.326316Z",
      "url": "https://files.pythonhosted.org/packages/c5/f1/6a88b36569d83d3156aac45a88a19de84aada4d5370d8b7ad74838908863/qampy-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}