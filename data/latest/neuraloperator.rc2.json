{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/neuraloperator\n   :target: https://pypi.org/project/neuraloperator/\n   :alt: PyPI\n\n.. image:: https://github.com/NeuralOperator/neuraloperator/actions/workflows/test.yml/badge.svg\n   :target: https://github.com/NeuralOperator/neuraloperator/actions/workflows/test.yml\n\n\n===============\nNeural Operator\n===============\n\n``neuraloperator`` is a comprehensive library for \nlearning neural operators in PyTorch.\nIt is the official implementation for Fourier Neural Operators \nand Tensorized Neural Operators.\n\nUnlike regular neural networks, neural operators\nenable learning mapping between function spaces, and this library\nprovides all of the tools to do so on your own data.\n\nNeuralOperators are also resolution invariant, \nso your trained operator can be applied on data of any resolution.\n\n\nInstallation\n------------\n\nJust clone the repository and install locally (in editable mode so changes in the code are immediately reflected without having to reinstall):\n\n.. code::\n\n  git clone https://github.com/NeuralOperator/neuraloperator\n  cd neuraloperator\n  pip install -e .\n  \nYou can also just pip install the library:\n\n\n.. code::\n  \n  pip install neuraloperator\n\nQuickstart\n----------\n\nAfter you've installed the library, you can start training operators seemlessly:\n\n\n.. code-block:: python\n\n   from neuralop.models import TFNO\n\n   operator = TFNO(n_modes=(16, 16), hidden_channels=64,\n                   in_channels=3, out_channels=1)\n\nTensorization is also provided out of the box: you can improve the previous models\nby simply using a Tucker Tensorized FNO with just a few parameters:\n\n.. code-block:: python\n\n   from neuralop.models import TFNO\n\n   operator = TFNO(n_modes=(16, 16), hidden_channels=64,\n                   in_channels=3, \n                   out_channels=1,\n                   factorization='tucker',\n                   implementation='factorized'\n                   rank=0.05)\n\nThis will use a Tucker factorization of the weights. The forward pass\nwill be efficient by contracting directly the inputs with the factors\nof the decomposition. The Fourier layers will have 5% of the parameters\nof an equivalent, dense Fourier Neural Operator!\n\nCheckout the `documentation <https://neuraloperator.github.io/neuraloperator/dev/index.html>`_ for more!\n\nUsing with weights and biases\n-----------------------------\n\nCreate a file in `neuraloperator/config` called `wandb_api_key.txt` and paste your Weights and Biases API key there.\nYou can configure the project you want to use and your username in the main yaml configuration files.\n\n\n\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Modified BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "neuraloperator",
    "package_url": "https://pypi.org/project/neuraloperator/",
    "platform": null,
    "project_url": "https://pypi.org/project/neuraloperator/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/neuraloperator/0.1.1/",
    "requires_dist": [
      "numpy",
      "configmypy",
      "pytest"
    ],
    "requires_python": "",
    "summary": "Learning (Tensorized) Neural Operators in PyTorch.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16969079,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "464e90b1870606567e849eff9774a7a1b2708dc1457ef7e298e96b7c22c9ed1c",
          "md5": "41361cd747d7bc261dd21ec6e3917400",
          "sha256": "a2064d4a2e4015fa1bece05006eae4bbe64ac330da6d72d899a3ef2d6bdf3996"
        },
        "downloads": -1,
        "filename": "neuraloperator-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41361cd747d7bc261dd21ec6e3917400",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34649,
        "upload_time": "2023-02-13T09:08:34",
        "upload_time_iso_8601": "2023-02-13T09:08:34.376415Z",
        "url": "https://files.pythonhosted.org/packages/46/4e/90b1870606567e849eff9774a7a1b2708dc1457ef7e298e96b7c22c9ed1c/neuraloperator-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b963e216e7789b92e89d05cfc9649c097e92a6ed92c1e48efad7561329f6c0d",
          "md5": "ecdc50f1d0f6344f6e5de22cfc1575b1",
          "sha256": "e89ec73235cf3e7b205cf11a951c1b1496b5bd8f1c4170b5d9c17cd76d5e09a0"
        },
        "downloads": -1,
        "filename": "neuraloperator-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ecdc50f1d0f6344f6e5de22cfc1575b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26398,
        "upload_time": "2023-02-13T09:08:35",
        "upload_time_iso_8601": "2023-02-13T09:08:35.772466Z",
        "url": "https://files.pythonhosted.org/packages/0b/96/3e216e7789b92e89d05cfc9649c097e92a6ed92c1e48efad7561329f6c0d/neuraloperator-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7adb0207ef895e438f664b34305070b95180740d6ab4926b4482474c082718c2",
          "md5": "6c5ee7490b555cf7ffa3d0d30cb8b0cd",
          "sha256": "cbc8b1d1c9d7eb573cc7e45ccf7286599f6d95d98953b72167668c1f94f0f9a8"
        },
        "downloads": -1,
        "filename": "neuraloperator-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c5ee7490b555cf7ffa3d0d30cb8b0cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42328,
        "upload_time": "2023-02-22T01:29:50",
        "upload_time_iso_8601": "2023-02-22T01:29:50.648195Z",
        "url": "https://files.pythonhosted.org/packages/7a/db/0207ef895e438f664b34305070b95180740d6ab4926b4482474c082718c2/neuraloperator-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a39ac47a3c735389fe7ae7509661aa413c5ea33ad2399eac59a1935af047f1da",
          "md5": "aa67dbd6080410fed1176d5dd73fa3cb",
          "sha256": "fb69447144b02b9f7327005ab0ef2fb81c0e336cbe3e9e30e9913952214deb65"
        },
        "downloads": -1,
        "filename": "neuraloperator-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aa67dbd6080410fed1176d5dd73fa3cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33002,
        "upload_time": "2023-02-22T01:29:52",
        "upload_time_iso_8601": "2023-02-22T01:29:52.031644Z",
        "url": "https://files.pythonhosted.org/packages/a3/9a/c47a3c735389fe7ae7509661aa413c5ea33ad2399eac59a1935af047f1da/neuraloperator-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7adb0207ef895e438f664b34305070b95180740d6ab4926b4482474c082718c2",
        "md5": "6c5ee7490b555cf7ffa3d0d30cb8b0cd",
        "sha256": "cbc8b1d1c9d7eb573cc7e45ccf7286599f6d95d98953b72167668c1f94f0f9a8"
      },
      "downloads": -1,
      "filename": "neuraloperator-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c5ee7490b555cf7ffa3d0d30cb8b0cd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 42328,
      "upload_time": "2023-02-22T01:29:50",
      "upload_time_iso_8601": "2023-02-22T01:29:50.648195Z",
      "url": "https://files.pythonhosted.org/packages/7a/db/0207ef895e438f664b34305070b95180740d6ab4926b4482474c082718c2/neuraloperator-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a39ac47a3c735389fe7ae7509661aa413c5ea33ad2399eac59a1935af047f1da",
        "md5": "aa67dbd6080410fed1176d5dd73fa3cb",
        "sha256": "fb69447144b02b9f7327005ab0ef2fb81c0e336cbe3e9e30e9913952214deb65"
      },
      "downloads": -1,
      "filename": "neuraloperator-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "aa67dbd6080410fed1176d5dd73fa3cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 33002,
      "upload_time": "2023-02-22T01:29:52",
      "upload_time_iso_8601": "2023-02-22T01:29:52.031644Z",
      "url": "https://files.pythonhosted.org/packages/a3/9a/c47a3c735389fe7ae7509661aa413c5ea33ad2399eac59a1935af047f1da/neuraloperator-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}