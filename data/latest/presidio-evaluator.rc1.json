{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Presidio-research\n\nThis package features data-science related tasks for developing new recognizers for \n[Presidio](https://github.com/microsoft/presidio).\nIt is used for the evaluation of the entire system, \nas well as for evaluating specific PII recognizers or PII detection models. \nIn addition, it contains a fake data generator which creates fake sentences based on templates and fake PII.\n\n## Who should use it?\n\n- Anyone interested in **developing or evaluating PII detection models**, an existing Presidio instance or a Presidio PII recognizer.\n- Anyone interested in **generating new data based on previous datasets or sentence templates** (e.g. to increase the coverage of entity values) for Named Entity Recognition models.\n\n## Getting started\n\nTo install the package:\n1. Clone the repo\n2. Install all dependencies, preferably in a virtual environment:\n\n``` sh\n# Create conda env (optional)\nconda create --name presidio python=3.9\nconda activate presidio\n\n# Install package+dependencies\npip install -r requirements.txt\npython setup.py install\n\n# Download a spaCy model used by presidio-analyzer\npython -m spacy download en_core_web_lg\n\n# Verify installation\npytest\n```\n\nNote that some dependencies (such as Flair and Stanza) are not automatically installed to reduce installation complexity.\n\n## What's in this package?\n\n1. **Fake data generator** for PII recognizers and NER models\n2. **Data representation layer** for data generation, modeling and analysis\n3. Multiple **Model/Recognizer evaluation** files (e.g. for Spacy, Flair, CRF, Presidio API, Presidio Analyzer python package, specific Presidio recognizers)\n4. **Training and modeling code** for multiple models\n5. Helper functions for **results analysis**\n\n## 1. Data generation\n\nSee [Data Generator README](presidio_evaluator/data_generator/README.md) for more details.\n\nThe data generation process receives a file with templates, e.g. `My name is {{name}}`. \nThen, it creates new synthetic sentences by sampling templates and PII values. \nFurthermore, it tokenizes the data, creates tags (either IO/BIO/BILUO) and spans for the newly created samples.\n\n- For information on data generation/augmentation, see the data generator [README](presidio_evaluator/data_generator/README.md).\n- For an example for running the generation process, see [this notebook](notebooks/1_Generate_data.ipynb).\n- For an understanding of the underlying fake PII data used, see this [exploratory data analysis notebook](notebooks/2_PII_EDA.ipynb).\n\nOnce data is generated, it could be split into train/test/validation sets \nwhile ensuring that each template only exists in one set. \nSee [this notebook for more details](notebooks/3_Split_by_pattern_%23.ipynb).\n\n## 2. Data representation\n\nIn order to standardize the process, \nwe use specific data objects that hold all the information needed for generating, \nanalyzing, modeling and evaluating data and models. Specifically, \nsee [data_objects.py](presidio_evaluator/data_objects.py).\n\nThe standardized structure, `List[InputSample]` could be translated into different formats:\n- CONLL\n```python\nfrom presidio_evaluator import InputSample\ndataset = InputSample.read_dataset_json(\"data/synth_dataset_v2.json\")\nconll = InputSample.create_conll_dataset(dataset)\nconll.to_csv(\"dataset.csv\", sep=\"\\t\")\n\n```\n\n- spaCy v3\n```python\nfrom presidio_evaluator import InputSample\ndataset = InputSample.read_dataset_json(\"data/synth_dataset_v2.json\")\nInputSample.create_spacy_dataset(dataset, output_path=\"dataset.spacy\")\n```\n\n- Flair\n```python\nfrom presidio_evaluator import InputSample\ndataset = InputSample.read_dataset_json(\"data/synth_dataset_v2.json\")\nflair = InputSample.create_flair_dataset(dataset)\n```\n\n- json\n```python\nfrom presidio_evaluator import InputSample\ndataset = InputSample.read_dataset_json(\"data/synth_dataset_v2.json\")\nInputSample.to_json(dataset, output_file=\"dataset_json\")\n```\n\n## 3. PII models evaluation\n\nThe presidio-evaluator framework allows you to evaluate Presidio as a system, a NER model, \nor a specific PII recognizer for precision and recall and error-analysis.\n\n\n### Examples:\n- [Evaluate Presidio](notebooks/4_Evaluate_Presidio_Analyzer.ipynb)\n- [Evaluate spaCy models](notebooks/models/Evaluate%20spacy%20models.ipynb)\n- [Evaluate Stanza models](notebooks/models/Evaluate%20stanza%20models.ipynb)\n- [Evaluate CRF models](notebooks/models/Evaluate%20CRF%20models.ipynb)\n- [Evaluate Flair models](notebooks/models/Evaluate%20flair%20models.ipynb)\n\n\n## 4. Training PII detection models\n\n### CRF\n\nTo train a vanilla CRF on a new dataset, see [this notebook](notebooks/models/Train%20CRF.ipynb). To evaluate, see [this notebook](notebooks/models/Evaluate%20CRF%20models.ipynb).\n\n### spaCy\n\nTo train a new spaCy model, first save the dataset in a spaCy format:\n```python\n# dataset is a List[InputSample]\nInputSample.create_spacy_dataset(dataset ,output_path=\"dataset.spacy\")\n```\n\nTo evaluate, see [this notebook](notebooks/models/Evaluate%20spacy%20models.ipynb)\n\n### Flair\n\n- To train Flair models, see this [helper class](presidio_evaluator/models/flair_train.py) or this snippet:\n```python\nfrom presidio_evaluator.models import FlairTrainer\ntrain_samples = \"data/generated_train.json\"\ntest_samples = \"data/generated_test.json\"\nval_samples = \"data/generated_validation.json\"\n\ntrainer = FlairTrainer()\ntrainer.create_flair_corpus(train_samples, test_samples, val_samples)\n\ncorpus = trainer.read_corpus(\"\")\ntrainer.train(corpus)\n```\n\n> Note that the three json files are created using `InputSample.to_json`.\n\n## For more information\n\n\n- [Blog post on NLP approaches to data anonymization](https://towardsdatascience.com/nlp-approaches-to-data-anonymization-1fb5bde6b929)\n- [Conference talk about leveraging Presidio and utilizing NLP approaches for data anonymization](https://youtu.be/Tl773LANRwY)\n\n# Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit <https://cla.opensource.microsoft.com>.\n\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\nCopyright notice:\n\nFake Name Generator identities by the [Fake Name Generator](https://www.fakenamegenerator.com/)\nare licensed under a [Creative Commons Attribution-Share Alike 3.0 United States License](http://creativecommons.org/licenses/by-sa/3.0/us/).\nFake Name Generator and the Fake Name Generator logo are trademarks of Corban Works, LLC.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/microsoft/presidio-research",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "presidio-evaluator",
    "package_url": "https://pypi.org/project/presidio-evaluator/",
    "platform": null,
    "project_url": "https://pypi.org/project/presidio-evaluator/",
    "project_urls": {
      "Homepage": "https://www.github.com/microsoft/presidio-research"
    },
    "release_url": "https://pypi.org/project/presidio-evaluator/0.1.0/",
    "requires_dist": [
      "presidio-analyzer",
      "presidio-anonymizer",
      "spacy (>=3.0.0)",
      "requests",
      "numpy",
      "pandas",
      "tqdm (>=4.32.1)",
      "jupyter (>=1.0.0)",
      "pytest (>=4.6.2)",
      "haikunator",
      "schwifty",
      "faker",
      "sklearn-crfsuite",
      "python-dotenv"
    ],
    "requires_python": "",
    "summary": "PII dataset generator, model evaluator for Presidio and PII data in general",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15865019,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "233d47aa92eec335de7c397bbbd6334473143091ef59fcb7578a8c8aceb0a722",
          "md5": "e8457d7b0f431a0fe3ee57ac140d711d",
          "sha256": "35f44889cea71d9fe6cecd261ef6e8430046abca837ba94f251a5769bcdc98a4"
        },
        "downloads": -1,
        "filename": "presidio_evaluator-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8457d7b0f431a0fe3ee57ac140d711d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1203264,
        "upload_time": "2022-11-23T09:32:43",
        "upload_time_iso_8601": "2022-11-23T09:32:43.207187Z",
        "url": "https://files.pythonhosted.org/packages/23/3d/47aa92eec335de7c397bbbd6334473143091ef59fcb7578a8c8aceb0a722/presidio_evaluator-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "233d47aa92eec335de7c397bbbd6334473143091ef59fcb7578a8c8aceb0a722",
        "md5": "e8457d7b0f431a0fe3ee57ac140d711d",
        "sha256": "35f44889cea71d9fe6cecd261ef6e8430046abca837ba94f251a5769bcdc98a4"
      },
      "downloads": -1,
      "filename": "presidio_evaluator-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e8457d7b0f431a0fe3ee57ac140d711d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1203264,
      "upload_time": "2022-11-23T09:32:43",
      "upload_time_iso_8601": "2022-11-23T09:32:43.207187Z",
      "url": "https://files.pythonhosted.org/packages/23/3d/47aa92eec335de7c397bbbd6334473143091ef59fcb7578a8c8aceb0a722/presidio_evaluator-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}