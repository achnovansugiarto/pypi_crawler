{
  "info": {
    "author": "Just van Rossum",
    "author_email": "justvanrossum@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Text Processing :: Fonts"
    ],
    "description": "# jundo\n\nA general purpose library to help implement undo for existing objects.\n\nThe main idea is that if one limits oneself to objects that can be viewed as\nJSON-like data structures (ie. are composed of strings, numbers, lists and\ndictionaries) it is possible to record changes in a completely generic way,\nand use these recordings to reconstruct objects or to roll back changes, for\nexample to implement undo.\n\nA key requirement was that the model objects must be completely decoupled from\nthe recording mechanism, and will not need any awareness of it.\n\nThe way this is implemented here is through proxy objects: instead of modifying\nthe original model objects directly, one uses proxy objects that mimic the\nmodel object, allowing the proxy to pass on change information (deltas) to an\nundo manager.\n\nThe undo manager collects change deltas (and their inverses), and can apply\nthem to the original model object when undo or redo is requested.\n\nThe model object is passed to the undo manager with the\n`undoManager.setModel(model)`, which returns a proxy for the model. Client code\nmust use the proxy object instead of the model to modify the model. Here is an\nexample:\n\n    >>> model = [1, 2, 3, {\"a\": 123}]\n    >>> um = UndoManager()\n    >>> proxy = um.setModel(model)\n    >>> # Modifications must be done within a change set context:\n    >>> with um.changeSet(title=\"replace list item\"):\n    ...     proxy[1] = 2000\n    ...\n    >>> model[1]\n    2000\n    >>> um.undo()\n    >>> model[1]\n    2\n    >>> um.redo()\n    >>> model[1]\n    2000\n    >>> with um.changeSet(title=\"replace nested dict item\"):\n    ...     proxy[3][\"a\"] = 456\n    ...\n    >>> model[3][\"a\"]\n    456\n    >>> um.undo()\n    >>> model[3][\"a\"]\n    123\n\nIn this example, only Python list and dict objects are used as containers, but\nany type of Mapping or Sequence (in the collections.abc-sense) can be used, or\nany object type that uses attribute access to modify its model data. See the\nExamples folder for more elaborate examples.\n\nSets are also supported.\n\nTo support model objects that are not JSON-like, custom proxy classes can be\nregistered via the `registerUndoProxy()` function. \n\n### Acknowledgments\n\nThe approach implemented here is inspired by Raph Levien's ideas, as he wrote\nthem down [here](https://github.com/trufont/trufont/pull/614#issuecomment-446309637).\nIt also draws inspiration from [jsonpatch](http://jsonpatch.com/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/justvanrossum/jundo",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jundo",
    "package_url": "https://pypi.org/project/jundo/",
    "platform": "",
    "project_url": "https://pypi.org/project/jundo/",
    "project_urls": {
      "Homepage": "https://github.com/justvanrossum/jundo"
    },
    "release_url": "https://pypi.org/project/jundo/0.1.2/",
    "requires_dist": [
      "dataclasses ; python_version < \"3.7\""
    ],
    "requires_python": ">=3.6",
    "summary": "A general purpose library to help implement undo.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10076631,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "440bb1a5e0f70950edcd01e13f959d8cb67ea49113a68317723031abfd38873f",
          "md5": "f3b1d77e9f685cd5a6bd9e34644336d4",
          "sha256": "cf16c0aa6338bc5b76d6fa495d4d65384037904fd19a7f1a6d50b65cdcdbe7e4"
        },
        "downloads": -1,
        "filename": "jundo-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3b1d77e9f685cd5a6bd9e34644336d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9139,
        "upload_time": "2021-04-15T18:44:17",
        "upload_time_iso_8601": "2021-04-15T18:44:17.658571Z",
        "url": "https://files.pythonhosted.org/packages/44/0b/b1a5e0f70950edcd01e13f959d8cb67ea49113a68317723031abfd38873f/jundo-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4eb61d73ec0f65e9366c70ec07c45ddf9c85e757fc0534f77b5df77ab368439e",
          "md5": "de05164410a29305e4e86357f266c404",
          "sha256": "5c6992a0fb75158bef54c37bdb3145215800a9524ff46eef4e056f99f5f28f66"
        },
        "downloads": -1,
        "filename": "jundo-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "de05164410a29305e4e86357f266c404",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15871,
        "upload_time": "2021-04-15T18:44:18",
        "upload_time_iso_8601": "2021-04-15T18:44:18.842457Z",
        "url": "https://files.pythonhosted.org/packages/4e/b6/1d73ec0f65e9366c70ec07c45ddf9c85e757fc0534f77b5df77ab368439e/jundo-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9edf81f85aa42fdd444fda682dfa8a409678a4bfaf6f2d305636de7b13811f8c",
          "md5": "778a0b980ecc651b967763ac1c97a82f",
          "sha256": "0a253206e834a8d61361f89fee685c8597e3737266dc6df9b471cd3263a95b42"
        },
        "downloads": -1,
        "filename": "jundo-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "778a0b980ecc651b967763ac1c97a82f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10212,
        "upload_time": "2021-04-15T18:52:36",
        "upload_time_iso_8601": "2021-04-15T18:52:36.293496Z",
        "url": "https://files.pythonhosted.org/packages/9e/df/81f85aa42fdd444fda682dfa8a409678a4bfaf6f2d305636de7b13811f8c/jundo-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b41e2adf78991d2167f87f26c37ecc9cffe4363d19f5af85a0508ee892077967",
          "md5": "8390533d31d0e2470fe4e4da18f1bf54",
          "sha256": "0507d0b6692e94de03d49efe1d14b9375dbcaa05b8cb8a3d172126dc3c160929"
        },
        "downloads": -1,
        "filename": "jundo-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8390533d31d0e2470fe4e4da18f1bf54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15396,
        "upload_time": "2021-04-15T18:52:37",
        "upload_time_iso_8601": "2021-04-15T18:52:37.003747Z",
        "url": "https://files.pythonhosted.org/packages/b4/1e/2adf78991d2167f87f26c37ecc9cffe4363d19f5af85a0508ee892077967/jundo-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9edf81f85aa42fdd444fda682dfa8a409678a4bfaf6f2d305636de7b13811f8c",
        "md5": "778a0b980ecc651b967763ac1c97a82f",
        "sha256": "0a253206e834a8d61361f89fee685c8597e3737266dc6df9b471cd3263a95b42"
      },
      "downloads": -1,
      "filename": "jundo-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "778a0b980ecc651b967763ac1c97a82f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10212,
      "upload_time": "2021-04-15T18:52:36",
      "upload_time_iso_8601": "2021-04-15T18:52:36.293496Z",
      "url": "https://files.pythonhosted.org/packages/9e/df/81f85aa42fdd444fda682dfa8a409678a4bfaf6f2d305636de7b13811f8c/jundo-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b41e2adf78991d2167f87f26c37ecc9cffe4363d19f5af85a0508ee892077967",
        "md5": "8390533d31d0e2470fe4e4da18f1bf54",
        "sha256": "0507d0b6692e94de03d49efe1d14b9375dbcaa05b8cb8a3d172126dc3c160929"
      },
      "downloads": -1,
      "filename": "jundo-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8390533d31d0e2470fe4e4da18f1bf54",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15396,
      "upload_time": "2021-04-15T18:52:37",
      "upload_time_iso_8601": "2021-04-15T18:52:37.003747Z",
      "url": "https://files.pythonhosted.org/packages/b4/1e/2adf78991d2167f87f26c37ecc9cffe4363d19f5af85a0508ee892077967/jundo-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}