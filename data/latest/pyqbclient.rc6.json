{
  "info": {
    "author": "Jeff MacDonald",
    "author_email": "jeffmacd@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div id=\"top\"></div>\r\n<!--\r\n*** Thanks for checking out the Best-README-Template. If you have a suggestion\r\n*** that would make this better, please fork the repo and create a pull request\r\n*** or simply open an issue with the tag \"enhancement\".\r\n*** Don't forget to give the project a star!\r\n*** Thanks again! Now go create something AMAZING! :D\r\n-->\r\n\r\n\r\n\r\n<!-- PROJECT SHIELDS -->\r\n<!--\r\n*** I'm using markdown \"reference style\" links for readability.\r\n*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).\r\n*** See the bottom of this document for the declaration of the reference variables\r\n*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.\r\n*** https://www.markdownguide.org/basic-syntax/#reference-style-links\r\n-->\r\n$~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~$[![Contributors][contributors-shield]][contributors-url]  [![Forks][forks-shield]][forks-url]  [![Stargazers][stars-shield]][stars-url]   [![Issues][issues-shield]][issues-url]   [![Downloads][downloads-shield]][downloads-url]   [![LinkedIn][linkedin-shield]][linkedin-url]    \r\n\r\n\r\n<!-- PROJECT LOGO -->\r\n\r\n\r\n<h3 align=\"center\">pyqbclient</h3>\r\n\r\n  <p align=\"center\">\r\n    Simple Quickbase Table client module\r\n    <br />\r\n    <br />\r\n    <a href=\"https://github.com/jeffmacd/pyqbclient/issues\">Report Bug</a>\r\n    Â·\r\n    <a href=\"https://github.com/jeffmacd/pyqbclient/issues\">Request Feature</a>\r\n  </p>\r\n</div>\r\n\r\n\r\n\r\n<!-- TABLE OF CONTENTS -->\r\n<details>\r\n  <summary>Table of Contents</summary>\r\n  <ol>\r\n    <li>\r\n      <a href=\"#about-the-project\">About The Project</a>\r\n      <ul>\r\n        <li><a href=\"#built-with\">Built With</a></li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <a href=\"#getting-started\">Getting Started</a>\r\n      <ul>\r\n        <li><a href=\"#requirements\">Requirements</a></li>\r\n        <li><a href=\"#installation\">Installation</a></li>\r\n      </ul>\r\n    </li>\r\n    <li><a href=\"#usage\">Usage</a></li>\r\n    <li><a href=\"#roadmap\">Roadmap</a></li>\r\n    <li><a href=\"#contributing\">Contributing</a></li>\r\n    <li><a href=\"#license\">License</a></li>\r\n    <li><a href=\"#contact\">Contact</a></li>\r\n    <li><a href=\"#acknowledgments\">Acknowledgments</a></li>\r\n  </ol>\r\n</details>\r\n\r\n## Version 1.2.0\r\n* Added download_files function to client\r\n* Added future deprecation warning for get_files\r\n* Improved docstrings\r\n* Refactored multiple functions\r\n* Fixed bug in post_data where fields were created when subset was specified and field  was not in subset\r\n\r\n\r\n## Version 1.1.1\r\n* Added a function to download files\r\n* Changed a docstring\r\n* Added an error message for bad filter criteria\r\n\r\n\r\n## Version 1.1.0\r\n* Added return values for post_data, upload_files, create_fields, delete_fields, update_field, delete_records\r\n* Added a ten second sleep before retrying JSON requests\r\n* create_fields now allows for manual multiple field creation by accepting a list of field dicts to the argument field_dict, previously multiple fields were only created if called within post_data using a DataFrame\r\n* Prefixed Client methods for internal use  with underscores\r\n\r\n\r\n## Version 1.0.2\r\n* Fixed an issue with columns in get_data where specifying a column with only sub columns would cause an Exception\r\n* Added Type Hinting\r\n* Added some docstrings\r\n* Added a datatype\r\n\r\n## Version 1.0.1\r\n* Fixed a bug with columns in get_data\r\n* Added support for UInt32\r\n* Set a default sort option on queries as paginated queries were returning duplicates without it\r\n\r\n<!-- ABOUT THE PROJECT -->\r\n## About The Project\r\n\r\n\r\n\r\nA  module for interacting with the Quickbase tables  via the API with an emphasis on\r\nbeing easy to use. Everywhere the API calls for record or field IDs I have\r\nchanged it to work with values  or labels. Evolved from simple functions I wrote while getting started with python, has been useful for me, maybe you will find it useful as well.\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n\r\n\r\n\r\n\r\n<!-- GETTING STARTED -->\r\n## Getting Started\r\n\r\n\r\n### Requirements\r\nOlder versions of below untested, below known to work.\r\n\r\nPython (3.8+)\r\n\r\nnumpy (1.21.4+)\r\n\r\npandas (1.3.4+)\r\n\r\nrequests (2.26.0+)\r\n\r\nlxml (4.6.4+)\r\n   \r\n\r\n### Installation\r\n\r\n1: Can be installed using pip\r\n```\r\npip install pyqbclient\r\n```\r\n\r\n\r\n\r\n<!-- USAGE EXAMPLES -->\r\n## Usage\r\n### set_default\r\nBelow we supply our realm and token as defaults for all subsequent Client\r\ninstantiation. Note that both realm_hostname and user_token can be supplied \r\nas arguments for the Client directly and that doing so will over-ride\r\nany defaults set.  I have implemented some logging as well, so we will also configure that\r\n```\r\n\r\nimport pyqbclient as pyqbc\r\nimport logging\r\nlogging.basicConfig(level = logging.INFO)\r\n\r\n\r\nmy_realm = 'example-realm.quickbase.com'\r\nmy_token = 'example_token_string'\r\n\r\n\r\npyqbc.set_default(realm_hostname=my_realm,user_token=my_token)\r\n\r\n```\r\n\r\n### Client\r\n**Class pyqbclient.Client(**\r\n        **table_id,**\r\n        **realm_hostname=None,**\r\n        **user_token=None,**\r\n        **retries=3,**\r\n        **dataframe=pd.DataFrame())**\r\n\r\n#### Parameters:\r\n\r\n#### table_id: *str*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The Table ID you want to create a client for**\r\n\r\n#### realm_hostname: *str*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Your quickbase realm hostname**\r\n\r\n#### user_token: *str*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Your quickbase API user token**\r\n\r\n#### retries: *int*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The amount of retries desired for any given request**\r\n\r\n#### dataframe: *pandas.DataFrame()*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The DataFrame associated with the Client, empty DataFrame passed so the editor knows it is a DataFrame.**\r\n\\\r\nBelow we will instantiate our Client, relying on the defaults we set above\r\n```\r\nmy_table_id = 'example_table_id'\r\nmy_table_client = pyqbc.Client(my_table_id)\r\n```\r\n\r\n\r\n\r\n### get_data\r\n**pyqbclient.Client.get_data(report=None,columns=None,all_columns=False,**\r\n**overwrite_df=True,return_copy=True,filter_list_dict=None,where=None,**\r\n****kwargs)**\r\n\r\n#### Parameters:\r\n\r\n#### report: *str*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The name of a report you wish to download, e.g \"List All\"**\r\n\r\n#### columns: *list*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**A list of field labels corresponding to fields you wish to return, e.g [\"Field1\",\"Field2\"]**\r\n\r\n#### all_columns: *bool*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**When True returns all fields as well as any properties of attachment/built in fields (versions, userName etc.)**\r\n\r\n#### overwrite_df: *bool*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Overwrites the Client's DataFrame**\r\n\r\n#### return_copy: *bool*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Returns a copy of the Client's DataFrame**\r\n\r\n#### filter_list_dict: *dict*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Query records based on a list of values. Takes a dictionary set up as below:**\r\n     {\r\n       'Field Label': ['Field_value_1','Field_value_2']\r\n     }\r\n\r\n#### where: *str*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Filter for queries using modified quickbase query language. Use the field label instead of the field ID, e.g. '{Record_ID#.EX.3}'**\r\n\r\n#### \\*\\*kwargs: * (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Valid kwargs are  sortBy and groupBy,  consult documentation for utilization**\r\n\r\n#### Returns: DataFrame \r\n\\\r\nBelow we will get a DataFrame based on the fields and records available in the \"List All\" report \r\n\r\n\r\n```\r\ndf = my_table_client.get_data(report='List All')\r\n```\r\n\\\r\nNote: When called without any arguments returns default fields for all records\\\r\n\\\r\n_For more information on the quickbase query language, please refer to the [Documentation](https://help.quickbase.com/api-guide/componentsquery.html)_\r\n\r\n_For more information on the query parameters, please refer to the [Documentation](https://developer.quickbase.com/operation/runQuery)_\r\n\r\n\r\n\r\n### download_files\r\n**pyqbclient.Client.download_files(file_field: str, where: str= None,**\r\n**filter_list_dict: dict = None )**\r\n\r\n#### Parameters:\r\n\r\n#### file_field: *str*, \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The label of the field with the file you wish to download\"**\r\n\r\n#### where: *str*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Filter for queries using modified quickbase query language. Use the field label instead of the field ID, e.g. '{Record_ID#.EX.3}'**\r\n\r\n#### filter_list_dict: *dict*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Query records based on a list of values. Takes a dictionary set up as below:**\r\n     {\r\n       'Field Label': ['Field_value_1','Field_value_2']\r\n     }\r\n\r\n\r\n\r\n#### Returns: List \r\n\\\r\nFunction will return a list of dictionaries with Field ID 3 values, file names and base64 encoded file strings as values .\r\n\r\n\r\n```\r\nfile_list = my_table_client.download_files(filter_list_dict={'Record ID#': ['6225', '6224']})\r\n```\r\n\r\n\r\n\\\r\n_For more information on the quickbase query language, please refer to the [Documentation](https://help.quickbase.com/api-guide/componentsquery.html)_\r\n\r\n_For more information on the query parameters, please refer to the [Documentation](https://developer.quickbase.com/operation/runQuery)_\r\n\r\n\r\n\r\n### get_files\r\n**pyqbclient.Client.get_files(file_field: str, where: str= None,**\r\n**filter_list_dict: dict = None )**\r\n\r\n> **Warning:**\r\n> Will be deprecated in version 1.3.0. Please use download_files.\r\n\r\n#### Parameters:\r\n\r\n#### file_field: *str*, \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The label of the field with the file you wish to download\"**\r\n\r\n#### where: *str*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Filter for queries using modified quickbase query language. Use the field label instead of the field ID, e.g. '{Record_ID#.EX.3}'**\r\n\r\n#### filter_list_dict: *dict*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Query records based on a list of values. Takes a dictionary set up as below:**\r\n     {\r\n       'Field Label': ['Field_value_1','Field_value_2']\r\n     }\r\n\r\n\r\n\r\n#### Returns: Dict \r\n\\\r\nFunction will return a dictionary with Field id 3 values as keys and base64 encoded files as values \r\n\r\n\r\n```\r\nfile_dict = my_table_client.get_files(filter_list_dict={'Record ID#': ['6225', '6224']})\r\n```\r\n\r\n\r\n\\\r\n_For more information on the quickbase query language, please refer to the [Documentation](https://help.quickbase.com/api-guide/componentsquery.html)_\r\n\r\n_For more information on the query parameters, please refer to the [Documentation](https://developer.quickbase.com/operation/runQuery)_\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### post_data\r\n**pyqbclient.Client.post_data(external_df=None,step=5000, merge=None,**\r\n**create_if_missing=False, exclude_columns=None, subset=None)**\r\n\r\n#### Parameters:\r\n\r\n#### external_df: *DataFrame*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The DataFrame you wish to upload. Omitting uses the client's internal DataFrame**\r\n\r\n#### step: *int*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The amount of records to upload at a time. Quickbase has an upper limit of 10 MB per call, 5k has been pretty safe so far for my use.**\r\n\r\n#### merge: *str*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The label of the field you wish to merge on, must be a unique field. Updates where possible, creates where not.**\r\n\r\n\r\n#### create_if_missing: *bool*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Create fields in table for any columns in the DataFrame that are not present in the table.**\r\n\r\n#### exclude_columns: *list*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**A list of columns in your DataFrame you do not wish to be uploaded**\r\n\r\n#### subset: *list*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**A list of columns in your DataFrame you wish to be uploaded while excluding all others (except merge if specified)**\r\n \r\n#### Returns: dict\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Returns a dict with lists of created, updated and unchanged record ids as well as a count of processed records**\r\n\r\n\\\r\nWill upload records to the table based on the DataFrame provided.\r\n\r\n```\r\nmy_table_client.post_data(external_df=df)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n### create_fields\r\n**pyqbclient.Client.create_fields(field_dict=None,external_df=None,**\r\n**ignore_errors=False, appearsByDefault=True)**\r\n\r\n#### Parameters:\r\n\r\n#### field_dict: *list or dict*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**A dict or list of dicts for field creation**\r\n\r\n#### external_df: *dict*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Create columns based on a DataFrame**\r\n\r\n#### ignore_errors: *bool*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Ignore errors in creation and continue**\r\n\r\n\r\n#### appearsByDefault: *bool*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Whether or not this will be a default field**\r\n\r\n#### Returns: list\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Returns a list with a dict for each field created**\r\n\r\nWill create fields with the given arguments.\r\n\r\n```\r\nfield_dict = {\r\n  \"label\": \"Field1\",\r\n  \"fieldType\": \"text\"\r\n  }\r\n\r\nmy_table_client.create_fields(field_dict=field_dict)\r\n```\r\n_For more examples, please refer to the [Documentation](https://developer.quickbase.com/operation/createField)_\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n### update_field\r\n**pyqbclient.Client.update_field(field_label,field_dict = None,\\*\\*kwargs)**\r\n\r\n\r\n#### Parameters:\r\n\r\n\r\n#### field_label: *str*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The label of the field to update**\r\n\r\n#### field_dict: *dict*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**A dictionary for updating the field**\r\n\r\n#### \\*\\*kwargs:  (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Accepts label, noWrap, bold, required, appearsByDefault, findEnabled, unique, fieldHelp, addToForms, properties**\r\n\r\n#### Returns: dict\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Returns a dict with updated field characteristics**\r\n\r\nWill update fields with the given arguments\r\n\r\n```\r\nmy_table_client.update_field(\"Field1\",unique=True)\r\n```\r\n_For more examples, please refer to the [Documentation](https://developer.quickbase.com/operation/createField)_\r\n\r\n\r\n\r\n\r\n\r\n### delete_fields\r\n**pyqbclient.Client.delete_fields(field_labels)**\r\n\r\n#### Parameters:\r\n\r\n\r\n#### field_labels: *list*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**A list of field labels corresponding to fields **\r\n\r\n#### Returns: list\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Returns a list of deleted field ids**\r\n\r\nWill delete the list of supplied fields\r\n\r\n```\r\nmy_table_client.delete_fields([\"Field1\",\"Field2\"])\r\n```\r\n\r\n### delete_records\r\n**pyqbclient.Client.delete_records(where=None,all_records=False)**\r\n\r\n\r\n#### Parameters:\r\n\r\n\r\n#### where: *str*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Filter for deletion using modified quickbase query language. Use the field label instead of the field ID, e.g. '{Record_ID#.EX.3}'**\r\n\r\n\r\n#### all_records: *bool*, (optional)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Delete all records from the table**\r\n\r\n#### Returns: dict\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Returns a dict indicating the number of records deleted**\r\n\r\n\\\r\nWill delete indicated records from the table\r\n\\\r\nNOTE: One of where or all_records must be passed as an argument. Former default behaviour was to delete all records without an argument, thought it better to be explicit\r\n\r\n```\r\nmy_table_client.delete_records(\r\n  where='{Field1.EX.\"Some Value\"}OR{Field1.EX.\"Some Other Value\"}'\r\n)\r\n```\r\n\r\n\r\n### upload_files\r\n**pyqbclient.Client.upload_files(field_label, file_dict,\r\n    merge_field,try_internal=True)**\r\n\r\n#### Parameters:\r\n\r\n\r\n#### field_label: *str*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The label of the field we are uploading the file to**\r\n\r\n#### file_dict: *dict*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; **A dictionary  setup as below:**\r\n        {'*Filename with extension*':\r\n         {\r\n            'merge_value': '*The value you are merging on*',\r\n            'file_str': '*Base64 encoded string of your file*'\r\n         }\r\n        }\r\n\r\n#### merge_field: *str*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**The label of the field we are merging on**\r\n\r\n#### try_internal: *bool*\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Whether or not we consult the Client's DataFrame for merge values.**\r\n\r\n#### Returns: list\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**Returns a list with a dict of record id and update id for each file uploaded**\r\n\r\n\r\n\\\r\nUploads files to the given file field based on a value in a unique field. \r\nWhen called, will create a dictionary using the supplied unique field \r\nand built in Record ID# to facilitate the upload. try_internal will attempt\r\nto use the Client's DataFrame before resorting to downloading from the table.\r\n\r\n\\\r\nExample usage below\r\n\r\n```\r\n\r\npicture_hash = base64.b64encode(picture_IObytes.read()).decode()\r\n\r\n\r\nfile_dict = {\r\n    'pic.png': {\r\n    'file_str': picture_hash,\r\n    'merge_value': 49\r\n    }\r\n}\r\n\r\nmy_table_client.upload_files('Attachment',file_dict,merge_field='Field1')\r\n```\r\n\r\n\r\n\r\n\r\n<!-- CONTRIBUTING -->\r\n## Contributing\r\n\r\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\r\n\r\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag \"enhancement\".\r\nDon't forget to give the project a star! Thanks again!\r\n\r\n1. Fork the Project\r\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\r\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\r\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\r\n5. Open a Pull Request\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n\r\n\r\n<!-- LICENSE -->\r\n## License\r\n\r\nDistributed under the MIT License. See `LICENSE.txt` for more information.\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n\r\n\r\n<!-- CONTACT -->\r\n## Contact\r\n\r\nJeff MacDonald - jeffmacd@protonmail.com\r\n\r\nProject Link: [https://github.com/jeffmacd/pyqbclient](https://github.com/jeffmacd/pyqbclient)\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n\r\n\r\n<!-- ACKNOWLEDGMENTS -->\r\n## Acknowledgments\r\n\r\n* Some XML functionality derived from https://github.com/pyQuickBase/pyQuickBase\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n\r\n\r\n<!-- MARKDOWN LINKS & IMAGES -->\r\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\r\n[contributors-shield]: https://img.shields.io/github/contributors/jeffmacd/pyqbclient.svg?style=flat\r\n[contributors-url]: https://github.com/jeffmacd/pyqbclient/graphs/contributors\r\n[forks-shield]: https://img.shields.io/github/forks/jeffmacd/pyqbclient.svg?style=flat\r\n[forks-url]: https://github.com/jeffmacd/pyqbclient/network/members\r\n[stars-shield]: https://img.shields.io/github/stars/jeffmacd/pyqbclient.svg?style=flat\r\n[stars-url]: https://github.com/jeffmacd/pyqbclient/stargazers\r\n[issues-shield]: https://img.shields.io/github/issues/jeffmacd/pyqbclient.svg?style=flat\r\n[issues-url]: https://github.com/jeffmacd/pyqbclient/issues\r\n[license-shield]: https://img.shields.io/badge/License-MIT-yellow.svg\r\n[license-url]: https://github.com/jeffmacd/pyqbclient/blob/main/LICENSE\r\n[linkedin-shield]: https://img.shields.io/badge/-LinkedIn-black.svg?style=flat&logo=linkedin&colorB=555\r\n[linkedin-url]: https://www.linkedin.com/in/jeff-macdonald-37202722a/\r\n[product-screenshot]: images/screenshot.png\r\n[downloads-shield]: https://pepy.tech/badge/pyqbclient\r\n[downloads-url]: https://pepy.tech/project/pyqbclient\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyqbclient",
    "package_url": "https://pypi.org/project/pyqbclient/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyqbclient/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pyqbclient/1.2.0/",
    "requires_dist": [
      "numpy (>=1.21.4)",
      "pandas (>=1.3.4)",
      "requests (>=2.26.0)",
      "lxml (>=4.6.4)"
    ],
    "requires_python": ">=3.8",
    "summary": "Quickbase API client module",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16281017,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfbc822d328ae515b2fd19b7d6b21fbad487691b88b1d24b713bbb518e43f66c",
          "md5": "c65a2fb1b163b260ad4655d16f6b3ba8",
          "sha256": "e0f20be2c290c7f0f73c8d1813e18112814bdbf08150bff887f2b32cab8f8a08"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c65a2fb1b163b260ad4655d16f6b3ba8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 15254,
        "upload_time": "2021-12-30T19:17:54",
        "upload_time_iso_8601": "2021-12-30T19:17:54.047950Z",
        "url": "https://files.pythonhosted.org/packages/df/bc/822d328ae515b2fd19b7d6b21fbad487691b88b1d24b713bbb518e43f66c/pyqbclient-1.0.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e135f836445a9ccd5ae125f7702411d0479606db88d73cf212d1811ef92586a",
          "md5": "5e785964d353e7d27c01371d0d5ca99b",
          "sha256": "76f5d0c10cd2991146dea05a02a9fde8cddc6e48c5dd2789b1e63696577a7dab"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5e785964d353e7d27c01371d0d5ca99b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15453,
        "upload_time": "2021-12-30T19:17:55",
        "upload_time_iso_8601": "2021-12-30T19:17:55.456713Z",
        "url": "https://files.pythonhosted.org/packages/3e/13/5f836445a9ccd5ae125f7702411d0479606db88d73cf212d1811ef92586a/pyqbclient-1.0.0.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85d9b679c4bc7433358fd9b727d0044fc08779b5b64fb06d28acef992b8dc898",
          "md5": "31ce9af0e2d005930b6c23d7b1a05390",
          "sha256": "b723ce553881b7cba879861a54b4b20c5c6f28aa56d2aa5fee768587087aa20c"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31ce9af0e2d005930b6c23d7b1a05390",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 15370,
        "upload_time": "2022-01-27T18:33:40",
        "upload_time_iso_8601": "2022-01-27T18:33:40.158821Z",
        "url": "https://files.pythonhosted.org/packages/85/d9/b679c4bc7433358fd9b727d0044fc08779b5b64fb06d28acef992b8dc898/pyqbclient-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8132a8356e6fcbaca452a8adc48f0476f2e7719da2e9f2aba837dbb42c5826ca",
          "md5": "73cc6613767ca37b85439de86f215f7a",
          "sha256": "d12c65b6315ef30b416950027dc3b85ee07b018a0cd77210ff40fc900766621d"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "73cc6613767ca37b85439de86f215f7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15596,
        "upload_time": "2022-01-27T18:33:41",
        "upload_time_iso_8601": "2022-01-27T18:33:41.213302Z",
        "url": "https://files.pythonhosted.org/packages/81/32/a8356e6fcbaca452a8adc48f0476f2e7719da2e9f2aba837dbb42c5826ca/pyqbclient-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3286f3851f965aa63e2aea18a1521e04ac9587cb993b775169260d8c4c603048",
          "md5": "8645acaae5674447104064eb037c42fd",
          "sha256": "db8bf950adb9c3e7e7d3c2278c6b26edaea990b8c4b5ffbadd2bd22d0d8fd712"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8645acaae5674447104064eb037c42fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16385,
        "upload_time": "2022-06-05T18:30:53",
        "upload_time_iso_8601": "2022-06-05T18:30:53.989443Z",
        "url": "https://files.pythonhosted.org/packages/32/86/f3851f965aa63e2aea18a1521e04ac9587cb993b775169260d8c4c603048/pyqbclient-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0d29fc67b4bba564c198e0e56b73c79eebf26e4e26a510e8e6c69d76286b8ec",
          "md5": "40181b37f99bfc9f847136c98a850b79",
          "sha256": "aeb48cb5c1303ce36bdd87350498d60b7fbecd63f3040c41195cf610d1dce0c0"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "40181b37f99bfc9f847136c98a850b79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16572,
        "upload_time": "2022-06-05T18:30:55",
        "upload_time_iso_8601": "2022-06-05T18:30:55.638073Z",
        "url": "https://files.pythonhosted.org/packages/b0/d2/9fc67b4bba564c198e0e56b73c79eebf26e4e26a510e8e6c69d76286b8ec/pyqbclient-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3830636a7d951ba1ac5b0b4ce573432f5221da4e8973c33003701897a79e3e85",
          "md5": "baeab21f60c48be7d754631062cc896b",
          "sha256": "d4e6c73c9590129f5a15ae86e9126f64d2d8aba48f4d1432b3e57a30adf502bc"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "baeab21f60c48be7d754631062cc896b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17194,
        "upload_time": "2022-11-05T19:12:07",
        "upload_time_iso_8601": "2022-11-05T19:12:07.170700Z",
        "url": "https://files.pythonhosted.org/packages/38/30/636a7d951ba1ac5b0b4ce573432f5221da4e8973c33003701897a79e3e85/pyqbclient-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6465c7c25325534aab4a46fcec097690c8bd17ef9a9d8f8172695bb545248eac",
          "md5": "16fbff33e3bd4eb59fbe2c24e899c747",
          "sha256": "00a001579b111220e5bdca4c3a6c9e104c187a9ff29c98d78e3fa7cb1664501f"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "16fbff33e3bd4eb59fbe2c24e899c747",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17337,
        "upload_time": "2022-11-05T19:12:08",
        "upload_time_iso_8601": "2022-11-05T19:12:08.361915Z",
        "url": "https://files.pythonhosted.org/packages/64/65/c7c25325534aab4a46fcec097690c8bd17ef9a9d8f8172695bb545248eac/pyqbclient-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45a6c84bd60cc76b28fef48075843de12e344681a4c047eb5e2312f1cb52b026",
          "md5": "5baa882ae26494d9ee872505c2dd983c",
          "sha256": "30ea9d29421a2728f9055eb00c7d6d77e07c6268a746d5f91461fda9f53588bb"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5baa882ae26494d9ee872505c2dd983c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 17963,
        "upload_time": "2022-11-25T15:36:45",
        "upload_time_iso_8601": "2022-11-25T15:36:45.437406Z",
        "url": "https://files.pythonhosted.org/packages/45/a6/c84bd60cc76b28fef48075843de12e344681a4c047eb5e2312f1cb52b026/pyqbclient-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e548edd6d822e378b58d3e88eb1796ccc69773f491cd02c869c5d6ebcd5752b",
          "md5": "3618874a111740d7c13025bc4e43bc68",
          "sha256": "30a6be1f5ba23df333658700064cfa0e5c40c10f32e9833391bf223cf9453b9f"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3618874a111740d7c13025bc4e43bc68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 18130,
        "upload_time": "2022-11-25T15:36:46",
        "upload_time_iso_8601": "2022-11-25T15:36:46.781895Z",
        "url": "https://files.pythonhosted.org/packages/6e/54/8edd6d822e378b58d3e88eb1796ccc69773f491cd02c869c5d6ebcd5752b/pyqbclient-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a80fc8c7e0bd7991ee42046fb36b399701c5d9b2831cb07acd1327c117036da",
          "md5": "7aaf68176eb3ed2d8f07ef5ac898582a",
          "sha256": "29e43d90cb126c69ff8f896e8d77118cc730bef43610e4e59b3b553cc8e148e4"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7aaf68176eb3ed2d8f07ef5ac898582a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20137,
        "upload_time": "2023-01-02T18:00:53",
        "upload_time_iso_8601": "2023-01-02T18:00:53.826619Z",
        "url": "https://files.pythonhosted.org/packages/6a/80/fc8c7e0bd7991ee42046fb36b399701c5d9b2831cb07acd1327c117036da/pyqbclient-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fba8f3af866a536176f78907672be811db1638a30d523009f211d2b0db0e6c8a",
          "md5": "e0d8fe1d83554dd76d783f79f3ca9169",
          "sha256": "c697a44ac9bf586af93e302f93a577fc789a64bb4260a063fe21f55923fd0e35"
        },
        "downloads": -1,
        "filename": "pyqbclient-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e0d8fe1d83554dd76d783f79f3ca9169",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20328,
        "upload_time": "2023-01-02T18:00:55",
        "upload_time_iso_8601": "2023-01-02T18:00:55.150848Z",
        "url": "https://files.pythonhosted.org/packages/fb/a8/f3af866a536176f78907672be811db1638a30d523009f211d2b0db0e6c8a/pyqbclient-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a80fc8c7e0bd7991ee42046fb36b399701c5d9b2831cb07acd1327c117036da",
        "md5": "7aaf68176eb3ed2d8f07ef5ac898582a",
        "sha256": "29e43d90cb126c69ff8f896e8d77118cc730bef43610e4e59b3b553cc8e148e4"
      },
      "downloads": -1,
      "filename": "pyqbclient-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7aaf68176eb3ed2d8f07ef5ac898582a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 20137,
      "upload_time": "2023-01-02T18:00:53",
      "upload_time_iso_8601": "2023-01-02T18:00:53.826619Z",
      "url": "https://files.pythonhosted.org/packages/6a/80/fc8c7e0bd7991ee42046fb36b399701c5d9b2831cb07acd1327c117036da/pyqbclient-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fba8f3af866a536176f78907672be811db1638a30d523009f211d2b0db0e6c8a",
        "md5": "e0d8fe1d83554dd76d783f79f3ca9169",
        "sha256": "c697a44ac9bf586af93e302f93a577fc789a64bb4260a063fe21f55923fd0e35"
      },
      "downloads": -1,
      "filename": "pyqbclient-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e0d8fe1d83554dd76d783f79f3ca9169",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 20328,
      "upload_time": "2023-01-02T18:00:55",
      "upload_time_iso_8601": "2023-01-02T18:00:55.150848Z",
      "url": "https://files.pythonhosted.org/packages/fb/a8/f3af866a536176f78907672be811db1638a30d523009f211d2b0db0e6c8a/pyqbclient-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}