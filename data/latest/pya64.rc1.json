{
  "info": {
    "author": "Stefan Mavrodiev",
    "author_email": "stefan@olimex.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Topic :: Home Automation",
      "Topic :: Software Development :: Embedded Systems"
    ],
    "description": "pyA64\n=====\n\n|Build Status|\n\nDescription\n-----------\n\nThe package provide methods for controlling GPIO pins via memory access. It's written for\n`A64-OLinuXino <https://www.olimex.com/Products/OLinuXino/A64/A64-OLinuXino/open-source-hardware>`__,\nbut it can be used with other boards. In this case proper operation is\nnot guaranteed.\n\n**Notes**:\n\n\t* When using GPIO make sure that the desired gpio is not used by another periphery.\n\t* Using this library requires root access.\n\t* Currently (0.1.0) port L is not supported, because the memory cannot be accessed from userspace.\n\nGPIO methods\n------------\n\nThe following methods are available:\n\n* **init()** - Make initialization of the module. Must be called first.\n* **getcfg()** - Read current configuration of gpio.\n* **setcfg()** - Write configuration to gpio.\n* **input()** - Return current value of gpio.\n* **output()** - Set output value.\n* **pullup()** - Set pull-up/pull-down.\n\nThe available constants are:\n\n* **HIGH** - 1\n* **LOW** - 0\n* **INPUT** - 0\n* **OUPTUT** - 1\n* **PULLUP** - 1\n* **PULLDOWN** - 2\n\nThe gpio are named two ways:\n\n* By port name: PH0, PG2, PE10, etc. These can be imported from port module:\n\n.. code:: python\n\n\t>>> from pyA64.gpio import port\n\t>>> dir(port)\n\n* By connector name and pin number: gpio2p12, gpio3p8, lcdp18, uext1p3 and etc:\n\n.. code:: python\n\n\t>>> from pyA64.gpio import connector\n\t>>> dir(connector)\n\nGenerally these constants are just an offset in the memory from the base\nGPIO address, so they can be assigned to a number type variable.\n\n.. code:: python\n\n\t>>> led = port.PE17\n\t>>> print led\n\t226\n\nChangelog\n---------\n\n-  pyA64 0.1.0 (21 NOV 2017)\n\n\t- Initial release\n\n\n.. |Build Status| image:: https://travis-ci.org/OLIMEX/pyA64.svg?branch=master\n   :target: https://travis-ci.org/OLIMEX/pyA64",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.olimex.com/",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyA64",
    "package_url": "https://pypi.org/project/pyA64/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyA64/",
    "project_urls": {
      "Homepage": "https://www.olimex.com/"
    },
    "release_url": "https://pypi.org/project/pyA64/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Control GPIO ports on A64-OLinuXino",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3352144,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29a8e9ce35c362e6340713bbbffcf260c4ffca87b404d9811e5d400f33e6c5c8",
          "md5": "2fd03ed59beb10f7e418795fdce73cab",
          "sha256": "47a203ed3cc73211041041520d30306930d03d765b168903ea2069b9ee0dc4bb"
        },
        "downloads": -1,
        "filename": "pyA64-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2fd03ed59beb10f7e418795fdce73cab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7311,
        "upload_time": "2017-11-21T13:59:31",
        "upload_time_iso_8601": "2017-11-21T13:59:31.664499Z",
        "url": "https://files.pythonhosted.org/packages/29/a8/e9ce35c362e6340713bbbffcf260c4ffca87b404d9811e5d400f33e6c5c8/pyA64-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29a8e9ce35c362e6340713bbbffcf260c4ffca87b404d9811e5d400f33e6c5c8",
        "md5": "2fd03ed59beb10f7e418795fdce73cab",
        "sha256": "47a203ed3cc73211041041520d30306930d03d765b168903ea2069b9ee0dc4bb"
      },
      "downloads": -1,
      "filename": "pyA64-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2fd03ed59beb10f7e418795fdce73cab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7311,
      "upload_time": "2017-11-21T13:59:31",
      "upload_time_iso_8601": "2017-11-21T13:59:31.664499Z",
      "url": "https://files.pythonhosted.org/packages/29/a8/e9ce35c362e6340713bbbffcf260c4ffca87b404d9811e5d400f33e6c5c8/pyA64-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}