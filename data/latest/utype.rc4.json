{
  "info": {
    "author": "XuLin Zhou",
    "author_email": "zxl@utilmeta.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# uType\n[![Version](https://img.shields.io/pypi/v/utype)](https://pypi.org/project/utype/)\n[![Python Requires](https://img.shields.io/pypi/pyversions/utype)](https://pypi.org/project/utype/)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue)](https://github.com/utilmeta/utype/blob/main/LICENSE)\n[![CI](https://img.shields.io/github/actions/workflow/status/utilmeta/utype/test.yaml?branch=main&label=CI)](https://github.com/utilmeta/utype/actions?query=branch%3Amain+)\n[![Test Coverage](https://img.shields.io/codecov/c/github/utilmeta/utype?color=green)](https://app.codecov.io/github/utilmeta/utype)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Downloads](https://pepy.tech/badge/utype/month)](https://pepy.tech/project/utype)\n\nutype is a data types declaration & parsing library based on Python type annotations, \nenforce types and constraints for classes and functions at runtime\n\n* Version: `0.3.0` [test]\n* Author: [@voidZXL](https://github.com/voidZXL)\n* License: Apache 2.0\n* Source Code: [https://github.com/utilmeta/utype](https://github.com/utilmeta/utype)\n* Documentation: [https://utype.io](https://utype.io)\n* 中文文档: [https://utype.io/zh](https://utype.io/zh)\n\n\n### Core Features\n\n* Enforce types, data classes, function params and result parsing at runtime based on Python type annotation\n* Support a variety of constraints, logical operators and flexible parsing options\n* Highly extensible, all type transformer can be register, extend and override\n\n### Installation\n\n```shell\npip install -U utype\n```\n\nutype requires Python >= 3.7\n\n### Usage Example\n\n### Types and constraints\nThe utype support to add constraints on types, such as\n```Python\nfrom utype import Rule, exc\n\nclass PositiveInt(int, Rule):  \n    gt = 0\n\nassert PositiveInt(b'3') == 3\n\ntry:\n    PositiveInt(-0.5)\nexcept exc.ParseError as e:\n    print(e)\n    \"\"\"\n    Constraint: 0 violated\n    \"\"\"\n``` \n\n\nData that conforms to the type and constraints will complete the conversion, otherwise will throw a parse error indicating what went wrong\n\n### Parsing dataclasses\n\nutype supports the \"dataclass\" usage that convert a dict or JSON to a class instance, similar to `pydantic` and `attrs`\n```python\nfrom utype import Schema, Field, exc\nfrom datetime import datetime\n\nclass UserSchema(Schema):\n    username: str = Field(regex='[0-9a-zA-Z]{3,20}')\n    signup_time: datetime\n\n# 1. Valid input\ndata = {'username': 'bob', 'signup_time': '2022-10-11 10:11:12'}\nprint(UserSchema(**data))\n#> UserSchema(username='bob', signup_time=datetime.datetime(2022, 10, 11, 10, 11, 12))\n\n# 2. Invalid input\ntry:\n    UserSchema(username='@invalid', signup_time='2022-10-11 10:11:12')\nexcept exc.ParseError as e:\n    print(e)\n    \"\"\"\n    parse item: ['username'] failed: \n    Constraint: <regex>: '[0-9a-zA-Z]{3,20}' violated\n    \"\"\"\n```\n\nAfter a simple declaration, you can get\n\n* Automatic `__init__` to take input data, perform validation and attribute assignment\n* Providing  `__repr__` and `__str__` to get the clearly print output of the instance\n* parse and protect attribute assignment and deletion to avoid dirty data\n\n### Parsing functions\n\nutype can also parse function params and result\n```python\nimport utype\nfrom typing import Optional\n\nclass PositiveInt(int, utype.Rule):  \n    gt = 0\n\nclass ArticleSchema(utype.Schema):\n    id: Optional[PositiveInt]\n    title: str = utype.Field(max_length=100)\n    slug: str = utype.Field(regex=r\"[a-z0-9]+(?:-[a-z0-9]+)*\")\n\n@utype.parse\ndef get_article(id: PositiveInt = None, title: str = '') -> ArticleSchema:\n    return {\n        'id': id,\n        'title': title,\n        'slug': '-'.join([''.join(\n            filter(str.isalnum, v)) for v in title.split()]).lower()\n    }\n\nprint(get_article('3', title=b'My Awesome Article!'))\n#> ArticleSchema(id=3, title='My Awesome Article!', slug='my-awesome-article')\n\ntry:\n    get_article('-1')\nexcept utype.exc.ParseError as e:\n    print(e)\n    \"\"\"\n    parse item: ['id'] failed: Constraint: : 0 violated\n    \"\"\"\n\ntry:\n    get_article(title='*' * 101)\nexcept utype.exc.ParseError as e:\n    print(e)\n    \"\"\"\n    parse item: ['<return>'] failed: \n    parse item: ['title'] failed: \n    Constraint: <max_length>: 100 violated\n    \"\"\"\n```\n\n!!! success\n    You can easily get type checking and code completion of IDEs (such as Pycharm, VS Code) during development\n\nutype supports not only normal functions, but also generator functions, asynchronous functions, and asynchronous generator functions with the same usage\n```python\nimport utype  \nimport asyncio  \nfrom typing import AsyncGenerator  \n\n@utype.parse  \nasync def waiter(rounds: int = utype.Param(gt=0)) -> AsyncGenerator[int, float]:  \n    assert isinstance(rounds, int)  \n    i = rounds  \n    while i:  \n        wait = yield str(i)  \n        if wait:  \n            assert isinstance(wait, float)  \n            print(f'sleep for: {wait} seconds')\n            await asyncio.sleep(wait)  \n        i -= 1  \n  \nasync def wait():  \n    wait_gen = waiter('2')  \n    async for index in wait_gen:  \n        assert isinstance(index, int)  \n        try:  \n            await wait_gen.asend(b'0.5')  \n            # sleep for: 0.5 seconds  \n        except StopAsyncIteration:  \n            return  \n  \nif __name__ == '__main__':  \n    asyncio.run(wait())\n```\n\n!!! note\n    The `AsyncGenerator` type is used to annotate the return value of the asynchronous generator, which has two parameters: the type of the value output by `yield`, type of the value sent by `asend`\n\nAs you can see, the parameters passed to the function and the value received from `yield` were all converted to the expected type as declared\n\n\n### Logical operation of type\nutype supports logical operations on types and data structures using Python-native logical operators\n```python\nfrom utype import Schema, Field\nfrom typing import Tuple\n\nclass User(Schema):  \n    name: str = Field(max_length=10)  \n    age: int\n\none_of_user = User ^ Tuple[str, int]\n\nprint(one_of_user({'name': 'test', 'age': '1'}))\n# > User(name='test', age=1)\n\nprint(one_of_user([b'test', '1']))\n# > ('test', 1)\n```\n\nThe example uses the `^` exclusive or symbol to logically combine  `User` and `Tuple[str, int]`, and the new logical type gains the ability to convert data to one of those\n\n### Register transformer for type\nType transformation and validation strictness required by each project may be different, so in utype, all types support registraton, extension and override, such as\n```python\nfrom utype import Rule, Schema, register_transformer\nfrom typing import Type\n\nclass Slug(str, Rule):  \n    regex = r\"[a-z0-9]+(?:-[a-z0-9]+)*\"\n\n@register_transformer(Slug)\ndef to_slug(transformer, value, t: Type[Slug]):\n    str_value = transformer(value, str)\n    return t('-'.join([''.join(\n    filter(str.isalnum, v)) for v in str_value.split()]).lower())\n\n\nclass ArticleSchema(Schema):\n\tslug: Slug\n\nprint(dict(ArticleSchema(slug=b'My Awesome Article!')))\n# > {'slug': 'my-awesome-article'}\n```\n\nYou can register transformers not only for custom types, but also for basic types (such as `str`, `int`, etc.) Or types in the standard library (such as `datetime`, `Enum`, etc.) To customize the conversion behavior\n\n## RoadMap and Contribution\nThe utype is still growing, and the following features are planned for implementation in the new version\n\n* Support the generation of input and output template documents in json-schema format\n* Improve the handling mechanism of parsing errors, including error handling hook functions, etc.\n* Support parsing and management of environment variables and configuration files\n* Support the declaration and resolution of command line parameters\n* Support for Python generics, type variables, and more type annotation syntax\n* Develop Pycharm/VS Code plugin that supports IDE detection and hints for constraints, logical types, and nested types\n\nYou are also welcome to contribute features or submit issues.\n\n\n## Community\n\n* Twitter: <a href=\"https://twitter.com/utype_io\" target=\"_blank\">utype_io</a>\n* Discord: <a href=\"https://discord.gg/d98ndkNA77\"  target=\"_blank\">utype</a>\n* Email: dev@utype.io\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://utype.io",
    "keywords": "utype type schema meta-type validation data-model type-transform parser json-schema",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "utype",
    "package_url": "https://pypi.org/project/utype/",
    "platform": null,
    "project_url": "https://pypi.org/project/utype/",
    "project_urls": {
      "Documentation": "https://utype.io",
      "Homepage": "https://utype.io",
      "Project Home": "https://utype.io",
      "Source Code": "https://github.com/utilmeta/utype"
    },
    "release_url": "https://pypi.org/project/utype/0.3.0/",
    "requires_dist": [
      "typing-extensions (>=4.1.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Declare & parse types / dataclasses / functions based on Python type annotations",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17223893,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f997be0e1f5c85dd380a5a938686e418905f8cda64129736eefbbb87ec76225",
          "md5": "58ac5fc6b9f6597967e99c3cdd547263",
          "sha256": "d30557db0d8841598078dd5e018054d23db3f1ca9f120f5a9db7e3dabccffdaa"
        },
        "downloads": -1,
        "filename": "utype-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58ac5fc6b9f6597967e99c3cdd547263",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 52949,
        "upload_time": "2022-12-02T16:25:21",
        "upload_time_iso_8601": "2022-12-02T16:25:21.180303Z",
        "url": "https://files.pythonhosted.org/packages/6f/99/7be0e1f5c85dd380a5a938686e418905f8cda64129736eefbbb87ec76225/utype-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01e2a5b0d411aebb6b278d5ec2bde8439ab8a3dcbfe82e46de0f67203b02428b",
          "md5": "00141cceaf340626e101f60f588cb0cd",
          "sha256": "3b8ba585fea729454e9f5d3fe4a53325e7a208ca7bfb4fab91e9f94f5620e408"
        },
        "downloads": -1,
        "filename": "utype-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "00141cceaf340626e101f60f588cb0cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 46555,
        "upload_time": "2022-12-02T16:25:23",
        "upload_time_iso_8601": "2022-12-02T16:25:23.708261Z",
        "url": "https://files.pythonhosted.org/packages/01/e2/a5b0d411aebb6b278d5ec2bde8439ab8a3dcbfe82e46de0f67203b02428b/utype-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13ed8879fa548614f3bff03f4df86b91dff1cedeec58080d852f12211a26b0bc",
          "md5": "4c8a8dc5fe9d939936d7f8a843c334cc",
          "sha256": "54966a5204b02b01715706770a0e4b1970f15fe01e2148a0323cbc73d9ca127f"
        },
        "downloads": -1,
        "filename": "utype-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c8a8dc5fe9d939936d7f8a843c334cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 68816,
        "upload_time": "2022-12-16T10:55:40",
        "upload_time_iso_8601": "2022-12-16T10:55:40.601739Z",
        "url": "https://files.pythonhosted.org/packages/13/ed/8879fa548614f3bff03f4df86b91dff1cedeec58080d852f12211a26b0bc/utype-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "136223131f95c85a8d170a32f6dea19cbc51ee12708d95bf4fe9e3d8d98a6878",
          "md5": "bb75bde6f6c93899885ce2d79e5643c8",
          "sha256": "ea9783978c8740c30c6e2eb05be152aac073818dc828a91605700d8fc008ff2c"
        },
        "downloads": -1,
        "filename": "utype-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bb75bde6f6c93899885ce2d79e5643c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 64697,
        "upload_time": "2022-12-16T10:55:42",
        "upload_time_iso_8601": "2022-12-16T10:55:42.801558Z",
        "url": "https://files.pythonhosted.org/packages/13/62/23131f95c85a8d170a32f6dea19cbc51ee12708d95bf4fe9e3d8d98a6878/utype-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b113c4db1d0dd49750226cb3d8c115b8ca4c1cc9ab54664f4a509d59100bb347",
          "md5": "56d6c3f0e7d7161044494af143969755",
          "sha256": "543343e1d87421771bf1732412a3577516704dd02f7f692e42862b2aca7a653c"
        },
        "downloads": -1,
        "filename": "utype-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56d6c3f0e7d7161044494af143969755",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69726,
        "upload_time": "2023-02-11T09:47:08",
        "upload_time_iso_8601": "2023-02-11T09:47:08.596131Z",
        "url": "https://files.pythonhosted.org/packages/b1/13/c4db1d0dd49750226cb3d8c115b8ca4c1cc9ab54664f4a509d59100bb347/utype-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "940dc3db323219018a4d44afffd6f4234f3814caa0879fb45f196d7bb76f6445",
          "md5": "eacb77c42830fb94b5b8c420d3c965ec",
          "sha256": "6eaf08e65acb83badd5257849043519e94c48a93a4a9904f7d7b6b49e2dddd93"
        },
        "downloads": -1,
        "filename": "utype-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eacb77c42830fb94b5b8c420d3c965ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 64594,
        "upload_time": "2023-02-11T09:47:10",
        "upload_time_iso_8601": "2023-02-11T09:47:10.853978Z",
        "url": "https://files.pythonhosted.org/packages/94/0d/c3db323219018a4d44afffd6f4234f3814caa0879fb45f196d7bb76f6445/utype-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d67237404255dd7e548d14f9cdf9924c7282f95f9f27212abf0f754bb4d63b9a",
          "md5": "3fb69957401d949a8b1443a53b783aec",
          "sha256": "f99f2d1b793421cbbc1f0f151d779ab751bfe4ae69d8e877ff3fe02046f943b5"
        },
        "downloads": -1,
        "filename": "utype-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3fb69957401d949a8b1443a53b783aec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 74171,
        "upload_time": "2023-03-09T13:01:21",
        "upload_time_iso_8601": "2023-03-09T13:01:21.286012Z",
        "url": "https://files.pythonhosted.org/packages/d6/72/37404255dd7e548d14f9cdf9924c7282f95f9f27212abf0f754bb4d63b9a/utype-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bc6aadbc4c0c003903e240781ff4a70276cc9a543aa86669049da2b47015fe1",
          "md5": "f23918fb9c6a7484c13d01835e08839e",
          "sha256": "bdec48ef04a75c050d8bacde53d9ad0fb543ddf47ec2f2955360db4017f9ff97"
        },
        "downloads": -1,
        "filename": "utype-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f23918fb9c6a7484c13d01835e08839e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 69731,
        "upload_time": "2023-03-09T13:01:23",
        "upload_time_iso_8601": "2023-03-09T13:01:23.720118Z",
        "url": "https://files.pythonhosted.org/packages/2b/c6/aadbc4c0c003903e240781ff4a70276cc9a543aa86669049da2b47015fe1/utype-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d67237404255dd7e548d14f9cdf9924c7282f95f9f27212abf0f754bb4d63b9a",
        "md5": "3fb69957401d949a8b1443a53b783aec",
        "sha256": "f99f2d1b793421cbbc1f0f151d779ab751bfe4ae69d8e877ff3fe02046f943b5"
      },
      "downloads": -1,
      "filename": "utype-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3fb69957401d949a8b1443a53b783aec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 74171,
      "upload_time": "2023-03-09T13:01:21",
      "upload_time_iso_8601": "2023-03-09T13:01:21.286012Z",
      "url": "https://files.pythonhosted.org/packages/d6/72/37404255dd7e548d14f9cdf9924c7282f95f9f27212abf0f754bb4d63b9a/utype-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2bc6aadbc4c0c003903e240781ff4a70276cc9a543aa86669049da2b47015fe1",
        "md5": "f23918fb9c6a7484c13d01835e08839e",
        "sha256": "bdec48ef04a75c050d8bacde53d9ad0fb543ddf47ec2f2955360db4017f9ff97"
      },
      "downloads": -1,
      "filename": "utype-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f23918fb9c6a7484c13d01835e08839e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 69731,
      "upload_time": "2023-03-09T13:01:23",
      "upload_time_iso_8601": "2023-03-09T13:01:23.720118Z",
      "url": "https://files.pythonhosted.org/packages/2b/c6/aadbc4c0c003903e240781ff4a70276cc9a543aa86669049da2b47015fe1/utype-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}