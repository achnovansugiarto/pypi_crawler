{
  "info": {
    "author": "Dirk Thomas",
    "author_email": "web@dirk-thomas.net",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Topic :: Software Development :: Version Control",
      "Topic :: Utilities"
    ],
    "description": "# What is vcstool2?\n\nVcstool2 is an attempt at continuing the development of [vcstool](https://github.com/dirk-thomas/vcstool)\nby [Dirk Thomas](https://github.com/dirk-thomas).\n\nVcstool2 is a version control system (VCS) tool, designed to make working\nwith multiple repositories easier.\n\nNote:\n\nThis tool should not be confused with [vcstools](https://github.com/vcstools/vcstools/) (with a trailing`s`) which\nprovides a Python API for interacting with different version control systems. The biggest differences between the two\nare:\n\n- **vcstool2** doesn't use any state beside the repository working copies available in the filesystem.\n- The file format of vcstool2's `export` uses the relative paths of the repositories as keys in YAML which avoids\n  collisions by design.\n- **vcstool2** has significantly fewer lines of code than **vcstools** including the command line tools built on top.\n\n## Python support\n\nThis package supports python >= 3.5.\n\n## How does it work?\n\nVcstool2 operates on any folder from where it recursively searches for supported repositories. On these repositories\nvcstool2 invokes the native VCS client with the requested command (i.e. *diff*).\n\n## Which VCS types are supported?\n\nVcstool2 supports [Git](http://git-scm.com) repositories only.\n\n## How to use vcstool2?\n\nThe script `vcs` can be used similarly to the VCS clients `git`, `hg`, etc. The `help` command provides a list of\navailable commands with an additional description:\n\n```bash\nvcs help\n```\n\nBy default, vcstool2 searches for repositories under the current folder. Optionally one path (or multiple paths) can be\npassed to search for repositories at different locations:\n\n```bash\nvcs status /path/to/several/repos /path/to/other/repos /path/to/single/repo\n```\n\n## Exporting and importing sets of repositories\n\nVcstool2 can export and import all the information required to reproduce the versions of a set of repositories. Vcstool2\nuses a simple [YAML](http://www.yaml.org/) format to encode this information. This format includes a root\nkey `repositories` under which each local repository is described by a dictionary keyed by its relative path. Each of\nthese dictionaries contains keys `url`, and `version`. If the `version` key is omitted the default branch is\nbeing used.\n\nThis results in something similar to the following for a set of two repositories\n([vcstool](https://github.com/dirk-thomas/vcstool) and\n[vcstool2](https://github.com/MaxandreOgeret/vcstool2)):\n\n``` yaml\nrepositories:\n  vcstool:\n    url: git@github.com:dirk-thomas/vcstool.git\n    version: master\n  old_tools/rosinstall:\n    url: git@github.com:MaxandreOgeret/vcstool2.git\n    version: master\n```\n\n### Export set of repositories\n\nThe `vcs export` command outputs the path, URL and version\ninformation for all repositories in [YAML](http://www.yaml.org/) format.\nThe output is usually piped to a file:\n\n```bash\nvcs export > my.repos\n```\n\nIf the repository is currently on the tip of a branch the branch is followed. This implies that a later import might\nfetch a newer revision if the branch has evolved in the meantime. Furthermore, if the local branch has evolved from the\nremote repository an import might not result in the exact same state.\n\nTo make sure to store the exact revision in the exported data use the command line argument `--exact`. Since a specific\nrevision is not tied to neither a branch nor a remote (for Git and Mercurial) the tool will check if the current hash\nexists in any of the remotes. If it exists in multiple the remotes `origin` and `upstream` are considered before any\nother in alphabetical order.\n\n### Import set of repositories\n\nThe `vcs import` command clones all repositories which are passed in via `stdin` in YAML format. Usually the data of a\npreviously exported file is piped in:\n\n```bash\nvcs import < my.repos\n```\n\nBeside passing a file path the command also supports passing a URL.\n\n### Validate repositories file\n\nThe `vcs validate` command takes a YAML file which is passed in via `stdin` and validates its contents and format. The\ndata of a previously-exported file or hand-generated file are piped in:\n\n```bash\nvcs validate < my.repos\n```\n\n### Deleting repositories\n\nThe `vcs rm` command takes a YAML file containing the repositories which is passed in via `stdin` or with its path\nspecified via `--input`.\n\nThe command performs a dry run by default, to perform the deletion use the `--force` option.\n\nThis command will delete all the pulled repositories if the `--all` option is passed.  \nIt can also filter the repos to delete based on their cloning path with a regex pattern passed with the `--pattern` \noption, see the `re` module [documentation](https://docs.python.org/3/library/re.html#regular-expression-syntax) \nfor details about the syntax.\n\nTo delete all:\n\n```bash\nvcs rm --all --force < repos.yaml\n```\n\nTo delete all repos paths containing \"foo\" or \"bar\":\n\n```bash\nvcs rm --pattern \"foo|bar\" --force < repos.yaml\n```\n\n### Version ranges\n\nVcstool2 supports version ranges in the yaml repository file, E.g.\n\n```yaml\nrepositories:\n  vcstool2_0:\n    url: https://github.com/MaxandreOgeret/vcstool2.git\n    version: \">0.4.1,<0.4.3\"\n  vcstool2_1:\n    url: https://github.com/MaxandreOgeret/vcstool2.git\n    version: \"==0.4.*\"\n```\n\nThe version ranges syntax is based [PEP440](https://peps.python.org/pep-0440/#version-specifiers), and is powered by the\n[packaging](https://packaging.pypa.io/en/stable/specifiers.html) package.\n\n## Advanced features\n\n### Show log since last tag\n\nThe `vcs log` command supports the argument `--limit-untagged` which will output the log for all commits since the last\ntag.\n\n### Parallelization and stdin\n\nBy default `vcs` parallelizes the work across multiple repositories based on the number of CPU cores. In the case that\nthe invoked commands require input from `stdin` that parallelization is a problem. In order to be able to provide input\nto each command separately these commands must run sequentially. When needing to e.g. interactively provide credentials\nall commands should be executed sequentially by passing:\n\n```\n--workers 1\n```\n\nIn the case repositories are using SSH `git@` URLs but the host is not known yet `vcs import` automatically falls back\nto a single worker.\n\n### Run arbitrary commands\n\nThe `vcs custom` command enables to pass arbitrary user-specified arguments to the git executable.\n\n```\nvcs custom --args log --oneline -n 10\n```\n\n\n# How to install vcstool2?\n\nUse the [PyPI](http://pypi.python.org) package:\n\n```bash\nsudo pip install vcstool2\n```\n\n## Setup auto-completion\n\nFor the shells *bash*, *tcsh* and *zsh* vcstool2 can provide auto-completion of the various VCS commands. In order to\nenable that feature the shell specific completion file must be sourced.\n\nFor *bash* append the following line to the `~/.bashrc` file:\n\n```bash\nsource /usr/share/vcstool2-completion/vcs.bash\n```\n\nFor *tcsh* append the following line to the `~/.cshrc` file:\n\n```bash\nsource /usr/share/vcstool2-completion/vcs.tcsh\n```\n\nFor *zsh* append the following line to the `~/.zshrc` file:\n\n```bash\nsource /usr/share/vcstool2-completion/vcs.zsh\n```\n\nFor *fish* append the following line to the `~/.config/fishconfig.fish` file:\n\n```bash\nsource /usr/share/vcstool2-completion/vcs.fish\n```\n\n# How to contribute?\n\n## How to report problems?\n\nBefore reporting a problem please make sure to use the latest version. Issues can be filled\non [GitHub](https://github.com/MaxandreOgeret/vcstool2/issues) after making sure that this problem has not yet been\nreported.\n\nPlease make sure to include as much information, i.e. version numbers from vcstool2, operating system, Python and a\nreproducible example of the commands which expose the problem.\n\n## How to try the latest changes?\n\nSourcing the `setup.sh` file prepends the `src` folder to the`PYTHONPATH` and the `scripts` folder to the `PATH`. Then\nvcstool2 can be used with the commands `vcs-COMMAND` (note the hyphen between `vcs` and`command` instead of a space).\n\nAlternatively the `-e/--editable` flag of `pip` can be used:\n\n```bash\n# from the top level of this repo\npip3 install --user -e .\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MaxandreOgeret/vcstool2",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "Maxandre Ogeret",
    "maintainer_email": "MaxandreOgeret@users.noreply.github.com",
    "name": "vcstool2",
    "package_url": "https://pypi.org/project/vcstool2/",
    "platform": null,
    "project_url": "https://pypi.org/project/vcstool2/",
    "project_urls": {
      "Homepage": "https://github.com/MaxandreOgeret/vcstool2"
    },
    "release_url": "https://pypi.org/project/vcstool2/0.4.3/",
    "requires_dist": [
      "PyYAML",
      "setuptools",
      "packaging"
    ],
    "requires_python": "",
    "summary": "vcstool2 provides a command line tool to invoke git commands on multiple repositories.",
    "version": "0.4.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17355822,
  "releases": {
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a226f1738b0d78e496aa1402a3f88e69b33055736621a774c21819a0ab1e8b5",
          "md5": "6cced7e33cf8f0b7b7af0ad65610e03e",
          "sha256": "b7c4ac7a3dbbada7607db7008bc0e16d342b68085ae570f5a80614782d020ee6"
        },
        "downloads": -1,
        "filename": "vcstool2-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6cced7e33cf8f0b7b7af0ad65610e03e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 37888,
        "upload_time": "2023-02-13T20:07:32",
        "upload_time_iso_8601": "2023-02-13T20:07:32.454699Z",
        "url": "https://files.pythonhosted.org/packages/2a/22/6f1738b0d78e496aa1402a3f88e69b33055736621a774c21819a0ab1e8b5/vcstool2-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdde59a95fda1d5bc849e9512e05da19e1c47259f37257eac9dcc7dec7b059fa",
          "md5": "6e1c327cc0efe9cd546794c2c0763d63",
          "sha256": "d73d06b0343bf512f400ce74162ab48abc3bf83ddbaeed08840b775cfba5fc32"
        },
        "downloads": -1,
        "filename": "vcstool2-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e1c327cc0efe9cd546794c2c0763d63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 37446,
        "upload_time": "2023-03-11T21:44:25",
        "upload_time_iso_8601": "2023-03-11T21:44:25.296295Z",
        "url": "https://files.pythonhosted.org/packages/bd/de/59a95fda1d5bc849e9512e05da19e1c47259f37257eac9dcc7dec7b059fa/vcstool2-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba593124f2dae282d29dfc72c3886a1b6c60e01110758ecf56a65c0d34329ce2",
          "md5": "45399830ba3d179b9fa8206360e11699",
          "sha256": "dddecc196cc5508f0ec71ca1f4e153133db2d949906ebc1cbc2676136f270a0f"
        },
        "downloads": -1,
        "filename": "vcstool2-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45399830ba3d179b9fa8206360e11699",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 38050,
        "upload_time": "2023-03-19T19:29:23",
        "upload_time_iso_8601": "2023-03-19T19:29:23.746119Z",
        "url": "https://files.pythonhosted.org/packages/ba/59/3124f2dae282d29dfc72c3886a1b6c60e01110758ecf56a65c0d34329ce2/vcstool2-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba593124f2dae282d29dfc72c3886a1b6c60e01110758ecf56a65c0d34329ce2",
        "md5": "45399830ba3d179b9fa8206360e11699",
        "sha256": "dddecc196cc5508f0ec71ca1f4e153133db2d949906ebc1cbc2676136f270a0f"
      },
      "downloads": -1,
      "filename": "vcstool2-0.4.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "45399830ba3d179b9fa8206360e11699",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 38050,
      "upload_time": "2023-03-19T19:29:23",
      "upload_time_iso_8601": "2023-03-19T19:29:23.746119Z",
      "url": "https://files.pythonhosted.org/packages/ba/59/3124f2dae282d29dfc72c3886a1b6c60e01110758ecf56a65c0d34329ce2/vcstool2-0.4.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}