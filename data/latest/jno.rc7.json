{
  "info": {
    "author": "Jedrzej Kosinski",
    "author_email": "kosinkadink1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Embedded Systems"
    ],
    "description": "# jno\nCommand line interface wrapper for Arduino IDE, inspired by ino.\n\n# Installation\nUsing PyPi, the package can be obtained using:\n\n\tpip install jno\n\nOr you can download the repo and use:\n\n\tpip install .\n\n# Initialize\nTo begin using jno, change working directory to your project. Then, perform:\n\n\tjno init\n\nThis will initialize the basic directory structure and create a *jno.jno* file, which stores the local jno settings.\n\nNote that on Windows, calling jno like this may not work. Instead, call the jno module directly:\n\n\tpython -m jno\n\nBy default, jno does not know where your Arduino IDE is located - this is represented by exec_dir in the config. There is a local and a global version of *jno.jno* files. The local *jno.jno* file overwrites the global version IF the parameters are not set to NULL or DEFAULT. To set up your exec_dir, find your Arduino folder - say /home/pi/Documents/arduino-1.8.10. Perform:\n\n\tjno setglobal --exec_dir=/home/pi/Documents/arduino-1.8.10\n\nOR\n\n\tjno setlocal --exec_dir=/home/pi/Documents/arduino-1.8.10\n\ndepending on what you plan on doing - setglobal means a local .jno with exec_dir set to NULL will use the global exec_dir instead.\n\nOnce exec_dir is set, jno is ready to go. You should change the global and local settings to your liking - the options are documented below. Global settings are stored in the local user's home folder in a *.jnoglobal.jno* file.\n\n# Usage\nThe commands supported are:\n\n*jno build [parameters]*: compile the code, verifying that there are no errors\n\n*jno upload [parameters]*: compile + upload the code\n\n*jno serial [parameters]*: start a serial monitor\n\n*jno init*: initialize current working directory with libraries/, sketch/, and *jno.jno* if they are not present\n\n*jno clean*: removes all build files (located in .build of directory)\n\n*jno boards [optional parameters]*: list the board models supported by your Arduino IDE\n\n*jno ports [optional parameters]*: list the ports currently available\n\n*jno setlocal [setting]*: change setting in local *jno.jno*\n\n*jno setglobal [setting]*: change setting in global *jno.jno*\n\n*jno help [command name]*: lists usage and description for all commands, or for a specific command\n\n## Settings (for setlocal and setglobal)\nThese settings are the same as those contained in *jno.jno* files. These settings WILL be saved locally or globally. Note that lower case inputs are equally as valid. Possible parameters are as follows:\n\n*--exec_dir=/some/dir*: directory that contains the arduino executable file. NULL is the default value.\n\n*--board=boardname*: board that code should be compiled for. Possible 'boardname' choices include *uno* and *mega*. For boardname options, use the *boards* command.\n\n*--port=/some/port*: port of arduino to upload code or start serial communication. On Linux, dmesg is useful in determining this.\n\n*--baudrate=9600*: baudrate used for serial communication. Must be an integer.\n\n*--sketch_dir=/some/dir*: directory of the local jno 'home'. Only mess with this if this *jno.jno* is meant to point to a deeper directory.\n\n## Parameters (for other commands)\nParameters are used only for the current invocation of the command and override local settings - they WILL NOT be saved. Possible settings are:\n\n*-p, --port=/some/port*: see --port above. Affects the upload, serial, and ports commands.\n\n*-b, --board=boardname*: see --board above. Affects the build, upload, and boards commands.\n\n*-b, --baudrate=9600*: see --baudrate above. Only affects serial command.\n\n*-e, --endline=some_string*: adds string on to end of any sent serial message. Only affects serial command.\n\n*-q, --quit=some_string*: sets string that quits serial when entered ('EXIT' by default). Only affects serial command.\n\n*-n, --noreplace*: turns off replacement of \\n or \\r in user-sent data with newline or carriage return. Only affects serial command.\n\nNote: invoking any command with \"help\" following the command name will print the help string for the command instead, as if *jno help [command name]* was invoked.\n\n# jno Directory Structure\n\n A valid jno directory contains a *libraries* directory, a *sketch* directory with a *sketch.ino* inside, and a *jno.jno* file. The *libraries* directory should contain any libraries not included in your Arduino IDE. The structure looks like this:\n\n```\nmy_ard_proj\n    .\n    |-- jno.jno           [configuration file]\n    |-- libraries         [directory containing dependencies]\n    |-- sketch            [directory containing main program .ino file]\n    |   `-- sketch.ino\n    |\n    `-- .build            [directory for build files]\n```\n\n# References\n\nThis tool is a wrapper for the Arduino IDE commandline interface, documented here:\nhttps://github.com/arduino/Arduino/blob/master/build/shared/manpage.adoc\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kosinkadink/jno",
    "keywords": "arduino interface ide wrapper",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jno",
    "package_url": "https://pypi.org/project/jno/",
    "platform": "",
    "project_url": "https://pypi.org/project/jno/",
    "project_urls": {
      "Homepage": "https://github.com/kosinkadink/jno"
    },
    "release_url": "https://pypi.org/project/jno/0.5.0/",
    "requires_dist": [
      "pyserial",
      "colorama"
    ],
    "requires_python": "",
    "summary": "Command line interface wrapper for Arduino IDE, inspired by ino",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6449167,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "847951dcba5e1fbf6cf7cfaefbdbbc6299b394397ca50f54098724fbd1a4e588",
          "md5": "98c405c74142e75aa8546050326ca2fa",
          "sha256": "309e8b4264c25357b8475238052743848acded10560dd263c2ad1eaaa1b8ff4c"
        },
        "downloads": -1,
        "filename": "jno-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "98c405c74142e75aa8546050326ca2fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6703,
        "upload_time": "2017-03-10T06:55:11",
        "upload_time_iso_8601": "2017-03-10T06:55:11.883796Z",
        "url": "https://files.pythonhosted.org/packages/84/79/51dcba5e1fbf6cf7cfaefbdbbc6299b394397ca50f54098724fbd1a4e588/jno-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bba2cbe428a881993558772502e2de3535569257b7880b36e3a2e3828cf25b5c",
          "md5": "d767f5ff309ee6b7b234b0a5601259fc",
          "sha256": "a36c137fdcaec3352195d674b1d69f7def183aa35b9e851ab2e65e2f6be9480c"
        },
        "downloads": -1,
        "filename": "jno-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d767f5ff309ee6b7b234b0a5601259fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7613,
        "upload_time": "2017-03-10T08:57:48",
        "upload_time_iso_8601": "2017-03-10T08:57:48.140933Z",
        "url": "https://files.pythonhosted.org/packages/bb/a2/cbe428a881993558772502e2de3535569257b7880b36e3a2e3828cf25b5c/jno-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db4f4f7eb6e54dc53e7d6a1f5e9ecbee47c5e2c47705616753afc9651efed6d7",
          "md5": "c3b86a44ff174ee351d79d2ebe351c50",
          "sha256": "1cc77b8846e82671d842951483fd154d7fcdfb97fc2e36ade7fce7bbcc869817"
        },
        "downloads": -1,
        "filename": "jno-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c3b86a44ff174ee351d79d2ebe351c50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8111,
        "upload_time": "2017-03-21T19:15:41",
        "upload_time_iso_8601": "2017-03-21T19:15:41.645453Z",
        "url": "https://files.pythonhosted.org/packages/db/4f/4f7eb6e54dc53e7d6a1f5e9ecbee47c5e2c47705616753afc9651efed6d7/jno-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7f93e75a3a556522cbdccf02a873df9460f65d53c97c6bbdff9b545985978fa",
          "md5": "90d6d57ba968f540ac20ac7b2b7d9dc6",
          "sha256": "6031634168980a156468c4708b083bc6f93c7cc6ee980891ae6d00f2d56a63d4"
        },
        "downloads": -1,
        "filename": "jno-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "90d6d57ba968f540ac20ac7b2b7d9dc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8158,
        "upload_time": "2017-04-05T07:19:13",
        "upload_time_iso_8601": "2017-04-05T07:19:13.555819Z",
        "url": "https://files.pythonhosted.org/packages/e7/f9/3e75a3a556522cbdccf02a873df9460f65d53c97c6bbdff9b545985978fa/jno-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29cf9ef1b98fb0179805bf7c5907644d80f07c17d8e1f3b783b31b5f447b529a",
          "md5": "e1cdcb7d675e526451e1ff90dc9f4632",
          "sha256": "de662b05d1632f63d41ed5e4875f512aa5b77bddaeb52caa673a6c82eac22eed"
        },
        "downloads": -1,
        "filename": "jno-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e1cdcb7d675e526451e1ff90dc9f4632",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8791,
        "upload_time": "2017-09-24T07:34:43",
        "upload_time_iso_8601": "2017-09-24T07:34:43.899238Z",
        "url": "https://files.pythonhosted.org/packages/29/cf/9ef1b98fb0179805bf7c5907644d80f07c17d8e1f3b783b31b5f447b529a/jno-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ca806dae9b561ab06f5ecc70b0a0cba676d06862e0017e3ec33e83941b1926c",
          "md5": "fb11fb18060455abf8c67397f91e3360",
          "sha256": "e3deb9587223d9c07b4410bc9ccb9a4e8118d2b6456ee5534bc492e6612b2baf"
        },
        "downloads": -1,
        "filename": "jno-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb11fb18060455abf8c67397f91e3360",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11666,
        "upload_time": "2017-10-17T08:05:09",
        "upload_time_iso_8601": "2017-10-17T08:05:09.241496Z",
        "url": "https://files.pythonhosted.org/packages/9c/a8/06dae9b561ab06f5ecc70b0a0cba676d06862e0017e3ec33e83941b1926c/jno-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b874bc86c5ec07e8db7e35daa9939b3ec22eda9c33ebee43227c8a0dab7e17f2",
          "md5": "a435ea62c1ae9d1b2dc6a0b330941a0d",
          "sha256": "95847786ec741ed2ffe655859e3cea3b721563b2721cb22672bfabc298979893"
        },
        "downloads": -1,
        "filename": "jno-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a435ea62c1ae9d1b2dc6a0b330941a0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20583,
        "upload_time": "2020-01-14T05:47:08",
        "upload_time_iso_8601": "2020-01-14T05:47:08.182784Z",
        "url": "https://files.pythonhosted.org/packages/b8/74/bc86c5ec07e8db7e35daa9939b3ec22eda9c33ebee43227c8a0dab7e17f2/jno-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c58ca1dd06be14893d525147d0880da98f2459cd261ca2c6850c33a361fb3e2f",
          "md5": "092ef6a7a767e5d646782018adf5aa5f",
          "sha256": "6ac564a78f4a5ebe09931efa166f91016678104093eb93be8d4a9f0b86cb73c8"
        },
        "downloads": -1,
        "filename": "jno-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "092ef6a7a767e5d646782018adf5aa5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14829,
        "upload_time": "2020-01-14T05:47:09",
        "upload_time_iso_8601": "2020-01-14T05:47:09.330902Z",
        "url": "https://files.pythonhosted.org/packages/c5/8c/a1dd06be14893d525147d0880da98f2459cd261ca2c6850c33a361fb3e2f/jno-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b874bc86c5ec07e8db7e35daa9939b3ec22eda9c33ebee43227c8a0dab7e17f2",
        "md5": "a435ea62c1ae9d1b2dc6a0b330941a0d",
        "sha256": "95847786ec741ed2ffe655859e3cea3b721563b2721cb22672bfabc298979893"
      },
      "downloads": -1,
      "filename": "jno-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a435ea62c1ae9d1b2dc6a0b330941a0d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20583,
      "upload_time": "2020-01-14T05:47:08",
      "upload_time_iso_8601": "2020-01-14T05:47:08.182784Z",
      "url": "https://files.pythonhosted.org/packages/b8/74/bc86c5ec07e8db7e35daa9939b3ec22eda9c33ebee43227c8a0dab7e17f2/jno-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c58ca1dd06be14893d525147d0880da98f2459cd261ca2c6850c33a361fb3e2f",
        "md5": "092ef6a7a767e5d646782018adf5aa5f",
        "sha256": "6ac564a78f4a5ebe09931efa166f91016678104093eb93be8d4a9f0b86cb73c8"
      },
      "downloads": -1,
      "filename": "jno-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "092ef6a7a767e5d646782018adf5aa5f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14829,
      "upload_time": "2020-01-14T05:47:09",
      "upload_time_iso_8601": "2020-01-14T05:47:09.330902Z",
      "url": "https://files.pythonhosted.org/packages/c5/8c/a1dd06be14893d525147d0880da98f2459cd261ca2c6850c33a361fb3e2f/jno-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}