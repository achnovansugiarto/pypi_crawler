{
  "info": {
    "author": "Samarth Chitgopekar",
    "author_email": "sam@chitgopekar.tech",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "# Py2048-Engine\nA pure 🐍 , fully type hinted, well documented 2048 Engine that just works.\n\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/580e4c8cf7554264b44faa7216479cbe)](https://www.codacy.com/gh/http-samc/2048.py/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=http-samc/2048.py&amp;utm_campaign=Badge_Grade) [![PyPI version](https://badge.fury.io/py/Py2048-Engine.svg)](https://badge.fury.io/py/Py2048-Engine)\n\n## Installation\n\nFirst, install `Py2048-Engine`.\n\nThe easiest method is with PyPi:\n`$ pip install Py2048-Engine`\n\nAlternatively, you can clone the repo:\n`$ git clone https://github.com/http-samc/2048.py`\n\n## Getting Started\n\n### If you're looking to play the game itself\nYou can get a quick and intuivite introduction to the engine by using the built-in game tester. First import `runTest()` from the package and call it to get started.\n```Python\n>>> from Py2048_Engine.Test import runTest\n>>> runTest()\n```\n\nYou'll be given a printout of the board, a 4 by 4 grid. All 'empty' spaces have a `-`. From here, you are in a loop of being able to move in any direction.\n```Python\n-       -       -       4\n-       -       -       -\n-       -       2       -\n-       -       -       -\n\nChoose a movement:\n        [1] Left\n        [2] Right\n        [3] Up\n        [4] Down\n\nChoice: 1\n```\n*Many moves later...*\n```Python\n32      -       -       -\n-       -       4       -\n2       -       -       -\n4       -       -       -\n```\n\nEventually, you'll get a printout when you win or lose.\n\n### If you want to implement the engine in a project\n\nFirst, import the game class from `Py2048_Engine.Game`. Then, you can create a game like:\n\n```Python\nfrom Py2048_Engine.Game import Game\n\ngame = Game()\n```\n\nYou can get your current board via `Game.__repr__()` (pretty printed String) or access the raw board (2D int array) with `Game.getBoard()` like:\n\n```Python\nprint(game) # Pretty printed output\nboard = game.getBoard() # Type: List[List[int]], better for custom applications\n```\n\nYou can perform an action on your game board by using `Game.left()`, `Game.right()`, `Game.up()`, or `Game.down()`.\n\n```Python\ngame.left()\ngame.right()\ngame.up()\ngame.down()\n```\n\nEventually, you'll either win or lose. To handle this, you want to catch some `Exceptions` from `Py2048_Engine.Exceptions`.\n\nAll thrown `Exceptions` inherit from `Py2048_Engine.Exceptions.GameException`, with `Py2048_Engine.Exceptions.GameWonException` signifing a game win and `Py2048_Engine.Exceptions.GameLostException` signifing a game loss.\n\n`GameException` and its children have a few important attributes, especially if you're prototyping.\n\n| Attribute | Desc |\n| --- | --- |\n| `message` | a message describing why the `GameException` was thrown. |\n| `numMoves` | the number of moves taken before the `GameException` was thrown. |\n| `board` | the final board before the `GameException` was thrown. Type of `List[List[int]]` |\n\nA sample catch might look like this:\n```Python\n...\n\nfrom Py2048_Engine.Exceptions import GameException, GameWonException, GameLostException\n\nwhile True:\n\n    try:\n        game.left()\n        game.right()\n        game.up()\n        game.down()\n\n    except GameException as e:\n        # At this point we have access to the final board,\n        # final number of moves, and an exit message.\n\n        if type(e) is GameWonException:\n            print(\"YOU WON!!!\")\n\n        elif type(e) is GameLostException:\n            print(\"Better luck next time :(\")\n\n        print(e.message)\n        print(f\"Finished in {e.numMoves} moves.\")\n        print(f\"Final board:\\n{e.finalBoard}\")\n```\n\n## Questions\nSee the full docs at [DOCS.md](https://github.com/http-samc/2048.py/blob/main/DOCS.md). If you have any other questions, feel free to contact the author, [Samarth Chitgopekar](mailto:sam@chitgopekar.tech)!\n\n## Indirect Contributors\nThanks to [this](https://stackoverflow.com/questions/13214809/pretty-print-2d-list) post's marked answer on Stack Overflow for some help on `Game.__repr__()` and Bhargavi Goel's 2017 [paper](https://www.ripublication.com/aama17/aamav12n1_01.pdf) on the mathematics behind 2048, which helped me create this engine!\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/http-samc/2048.py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Py2048-Engine",
    "package_url": "https://pypi.org/project/Py2048-Engine/",
    "platform": "",
    "project_url": "https://pypi.org/project/Py2048-Engine/",
    "project_urls": {
      "Homepage": "https://github.com/http-samc/2048.py"
    },
    "release_url": "https://pypi.org/project/Py2048-Engine/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A pure Python 2048 engine, based on the original game!",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11682524,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7c50b6cbe91bd3f47d86527ad2f27afda1778032d3568b3a6152852872dbc66",
          "md5": "6c2748d4e952d2c2a91b94f2cd453fc1",
          "sha256": "565af8ed48c8b1919abdab7958e27761aedf80614c1bf9bdf0fe1ff84adc6396"
        },
        "downloads": -1,
        "filename": "Py2048_Engine-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c2748d4e952d2c2a91b94f2cd453fc1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11016,
        "upload_time": "2021-10-10T21:19:55",
        "upload_time_iso_8601": "2021-10-10T21:19:55.271577Z",
        "url": "https://files.pythonhosted.org/packages/a7/c5/0b6cbe91bd3f47d86527ad2f27afda1778032d3568b3a6152852872dbc66/Py2048_Engine-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a967ddfd7c4399d211fb2c533824259737a41cdeeabcde5fe4a1b85e92f2a28b",
          "md5": "77de8cada85c479aae88f63781fad8fa",
          "sha256": "8c3111698ec72fb149094b4a78c6bde0d6ce87ac0ed29c560b8acc970a4bca3a"
        },
        "downloads": -1,
        "filename": "Py2048-Engine-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "77de8cada85c479aae88f63781fad8fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10048,
        "upload_time": "2021-10-10T21:19:57",
        "upload_time_iso_8601": "2021-10-10T21:19:57.044399Z",
        "url": "https://files.pythonhosted.org/packages/a9/67/ddfd7c4399d211fb2c533824259737a41cdeeabcde5fe4a1b85e92f2a28b/Py2048-Engine-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd7421feaa5efeca8925cadfa20d5f96740a572fedb7589fb1327ca46c32211f",
          "md5": "33045c0fe3d60e60bcc7ded37353cd07",
          "sha256": "d97b94ccf162491c441f83dcb1ff66e5a160e978222760f15ee28669ddfd068f"
        },
        "downloads": -1,
        "filename": "Py2048_Engine-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33045c0fe3d60e60bcc7ded37353cd07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11169,
        "upload_time": "2021-10-10T21:47:39",
        "upload_time_iso_8601": "2021-10-10T21:47:39.257986Z",
        "url": "https://files.pythonhosted.org/packages/dd/74/21feaa5efeca8925cadfa20d5f96740a572fedb7589fb1327ca46c32211f/Py2048_Engine-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c52393e9bb88759dcb946a6bca637d3a9ad3ae7cb50ca248707fd7f2f7f0638c",
          "md5": "69e4789cedbc1f76ccf503093095d0ea",
          "sha256": "dda6493a61bc751ea2f763dec7f8156010de01aafea66a25b463426f930326ab"
        },
        "downloads": -1,
        "filename": "Py2048-Engine-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69e4789cedbc1f76ccf503093095d0ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10387,
        "upload_time": "2021-10-10T21:47:40",
        "upload_time_iso_8601": "2021-10-10T21:47:40.328442Z",
        "url": "https://files.pythonhosted.org/packages/c5/23/93e9bb88759dcb946a6bca637d3a9ad3ae7cb50ca248707fd7f2f7f0638c/Py2048-Engine-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd7421feaa5efeca8925cadfa20d5f96740a572fedb7589fb1327ca46c32211f",
        "md5": "33045c0fe3d60e60bcc7ded37353cd07",
        "sha256": "d97b94ccf162491c441f83dcb1ff66e5a160e978222760f15ee28669ddfd068f"
      },
      "downloads": -1,
      "filename": "Py2048_Engine-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "33045c0fe3d60e60bcc7ded37353cd07",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11169,
      "upload_time": "2021-10-10T21:47:39",
      "upload_time_iso_8601": "2021-10-10T21:47:39.257986Z",
      "url": "https://files.pythonhosted.org/packages/dd/74/21feaa5efeca8925cadfa20d5f96740a572fedb7589fb1327ca46c32211f/Py2048_Engine-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c52393e9bb88759dcb946a6bca637d3a9ad3ae7cb50ca248707fd7f2f7f0638c",
        "md5": "69e4789cedbc1f76ccf503093095d0ea",
        "sha256": "dda6493a61bc751ea2f763dec7f8156010de01aafea66a25b463426f930326ab"
      },
      "downloads": -1,
      "filename": "Py2048-Engine-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "69e4789cedbc1f76ccf503093095d0ea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10387,
      "upload_time": "2021-10-10T21:47:40",
      "upload_time_iso_8601": "2021-10-10T21:47:40.328442Z",
      "url": "https://files.pythonhosted.org/packages/c5/23/93e9bb88759dcb946a6bca637d3a9ad3ae7cb50ca248707fd7f2f7f0638c/Py2048-Engine-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}