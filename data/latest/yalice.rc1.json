{
  "info": {
    "author": "cutefluffyfox",
    "author_email": "mishkazel1@mail.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# yalice\nPython library for writing applications on yandex voice assistant\n\n\n# Getting started\n```\npip install yalice\n```\n\n\nThis library is a wrapper for Yandex Alice, not independent library for writing web based applications, so initialization takes in an object of the type Flask\n```python\nfrom flask import Flask\nfrom yalice import AliceBot, Message, Chat\n\napp = Flask(__name__)\nbot = AliceBot(app)\n```\n\nYour bot is going to be located on page '/post'\nIf you would like to change this, you can change this by adding str parameter page\n```python\nbot = AliceBot(app, page='/alice')\n```\n\nAlso Yandex Alice can store user state and session state, pyalice give you abbility to save all that data automatically, but you can remove this abbility by adding bool parameter remember_state (to read more about states [click here](https://yandex.ru/dev/dialogs/alice/doc/session-persistence-docpage/))\n```python\nbot = AliceBot(app, page='/alice', remember_state=False)\n```\n\n\n# message handler\nTo hangle messages you can use decorator ```message_handler```\n```python\n@bot.message_handler(start_handler=True)\ndef start(chat: Chat, message: Message):\n    chat.send_message('Hello, I am annoying Alice. I will repeat each your word!')\n\n\n@bot.message_handler(tokens=['stop'], filter_func=lambda message: message.request.type == 'ButtonPressed')\ndef stop(chat: Chat, message: Message):\n    chat.send_message('It was a fun game!')\n    chat.end_session()\n\n\n@bot.message_handler(unknown_handler=True)\ndef echo(chat: Chat, message: Message):\n    chat.send_message(message.request.original_utterance)\n    chat.send_button('Stop!')\n```\n\n\n# images\nYou can initialise images at the start to access easily\nThere is 3 ways to initialise images\n```python\n# 1 image at a time\nbot.set_image('fox', '123456/123456')\nbot.set_image('cat', '654321/654321')\n\n# several images at a time\nimages = {\n    'fox': '123456/123456',\n    'cat': '654321/654321'\n}\nbot.set_images(images)\n\n# several images at a time by using bot.images variable\nbot.images = {\n    'fox': '123456/123456',\n    'cat': '654321/654321'\n}\n```\n\nTo send BigImage you can just use\n```python\nchat.send_image('fox')\n```\n\nBut if you would like to send ItemsList\n```python\nchat.send_images('fox')\nchat.send_images('cat')\nchat.edit_images(header_text='Animals')\n```\n\n\n# AliceBot object\nAliceBot object stores information about images, sessions states and message_handlers. Now it has methods\n- ```set_image()```\n- ```set_images()```\n- ```message_handler()```\n\n\n# Chat object\nChat object stores request to return. Now is has methods\n- ```send_message()```\n- ```send_button()```\n- ```send_image()```\n- ```send_images()```\n- ```edit_images()```\n- ```end_session()```\n- ```set_session_state()```\n- ```set_user_state()```\n\n# Message object\nMessage object is parsed json, to see json structure [click here](https://yandex.ru/dev/dialogs/alice/doc/protocol-docpage/)\n\n# Links\nTelegram [@cutefluffyfox](https://t.me/cutefluffyfox)<br>\nVK [@cutefluffyfox](https://vk.com/cutefluffyfox)<br>\nExpired by [pyTelegramBotAPI](https://github.com/eternnoir/pyTelegramBotAPI)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cutefluffyfox/pyalice",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yalice",
    "package_url": "https://pypi.org/project/yalice/",
    "platform": "",
    "project_url": "https://pypi.org/project/yalice/",
    "project_urls": {
      "Homepage": "https://github.com/cutefluffyfox/pyalice"
    },
    "release_url": "https://pypi.org/project/yalice/0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python library for writing applications on yandex voice assistant",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7384218,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa7d129c63d0e2c74b65c864b7452bff1e7bc4935d500d630c7be7d978145fb9",
          "md5": "c48d0248b614dec4c5ca0f30f1a73133",
          "sha256": "05dc3a775cd8828cc606511b330ab03cc8c11b60fc1ce952ef0f4dae1b0aa7a3"
        },
        "downloads": -1,
        "filename": "yalice-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c48d0248b614dec4c5ca0f30f1a73133",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4620,
        "upload_time": "2020-06-03T05:23:05",
        "upload_time_iso_8601": "2020-06-03T05:23:05.899442Z",
        "url": "https://files.pythonhosted.org/packages/fa/7d/129c63d0e2c74b65c864b7452bff1e7bc4935d500d630c7be7d978145fb9/yalice-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa7d129c63d0e2c74b65c864b7452bff1e7bc4935d500d630c7be7d978145fb9",
        "md5": "c48d0248b614dec4c5ca0f30f1a73133",
        "sha256": "05dc3a775cd8828cc606511b330ab03cc8c11b60fc1ce952ef0f4dae1b0aa7a3"
      },
      "downloads": -1,
      "filename": "yalice-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c48d0248b614dec4c5ca0f30f1a73133",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4620,
      "upload_time": "2020-06-03T05:23:05",
      "upload_time_iso_8601": "2020-06-03T05:23:05.899442Z",
      "url": "https://files.pythonhosted.org/packages/fa/7d/129c63d0e2c74b65c864b7452bff1e7bc4935d500d630c7be7d978145fb9/yalice-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}