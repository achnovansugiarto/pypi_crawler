{
  "info": {
    "author": "https://gitlab.com/frier17/",
    "author_email": "frier17@a17s.co.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Django Builder\n\n**A Django application for building project's application using the Django command line interface**\n\nThe `cli-django-builder` application is designed to enable developers save time on development by providing automation or\nroutine django application building process.\n\nThe `cli-django-builder` application enables developers to save time by automating routine Django application building\nprocesses. This application integrates with the Django commands and provides the `build` command to create RESTful APIs\nusing DRF, views, and templates from the command interface. Developers can also seed the existing database of their\napplication using the `build` command.\n\nAdd the name 'builder' to your Django `settings.py` `INSTALLED_APPS` to use this application.\n\n**This application assumes that model naming conventions as specified\nby [Django Framework](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/) is\nadopted for the target application.**\n\n## Motivation\n\nDjango framework provides a rich set of tools to build complex web projects. A project may comprise one or more\napplications working together as a unit. In many scenarios, developers end up repeating a set of tasks such as:\n\n+ Create application\n+ Create application models\n+ Create application files such as views.py, serializers.py, urls.py and HTML templates. These tasks can be automated to\n  provide a skeletal system that the developer can then modify to meet target business logic. The `cli-django-builder`\n  automates tasks in line with the Django DRY philosophy.\n\n## Description\n\n`cli-django-builder` consists of a set of the `build` command and a set of command flags that specifies build configuration\nby data entered as texts.\n\nTo use the `cli-django-builder`, add the application as a Django application in your project. Then using the Django command\ninterface call the build command as a Django command:\n`$ python manage.py build views <view_name>`\n\nEnsure you are at the directory of the target application. Thus, if you wish to build a view file for the `employer`\napplication, navigate to the `employer` directory before calling `build`.\n\nFor the set of commands and flags available, see the table below.\n\n|Command    | Flag | Type | Description |\n|-----------|------- | --- | ---- |\n| build | -m, --models [Specify model name as text] | text | The model class name provided as string without quotes|\n| build | --model_form| text | The type of Django Rest Framework serializer that will be extended by the application in generating forms for models |\n| build | -a, --app | text | The name of the target Django application where the generated files will be stored and where the specified model was defined |\n| build | --fields | text | List of model fields for the model serializer. Defaults to all model fields |\n| build | --viewset | text | The type of Django Rest Framework viewset that will be extended by the application. Example, `ModelViewSet` |\n| build | --manager| text | The model field serving as default Model Manager for the named model |\n| build | --serializer | text | The type of rest_framework serializer that will be extended by the application or the model serializer defined in application. Example, `ModelSerializer` |\n| build | --persmissions | text | List of permissions provided as string. Used for specify access control for DRF api end points |\n| build | --router| text |  The type of rest_framework router that will be used for generating urls. Example, `DefaultRouter`|\n| build | --import| text | Flag to enable import of dependencies for target build. Example, this flag will import dependencies when creating `views.py` if such were specified. Default action flag for this function is set to TRUE |\n| build | --capture_type| text |  The data type to be captured in the Urlconf. Used only when building URLs example, `urls.py`|\n| build | --pk_field | text | The name of the view parameter or identifier used for selection of instance |\n| build | --make, make_file | text | Name of the file to generate. The name should be provided without the file extension. Example `api`, `views` will generate `api.py` and `views.py` for target app directory|\n| build | --exclude | text [Comma separated list of field names] | Flag to exclude selected model fields from view. Current build excludes model field names: `pk`, `id`, `uuid`, `slug`, `is_public`, `is_shareable` are removed|\n| dbseed| --model | text | Name of the target model for which seed data is to be generated |\n| dbseed| --records | integer | Number of records to generate |\n| dbseed| --app | text | Name of the target application for the listed model |\n| dbseed| --related | text | Comma separated list of related models provided as `<app>.<model>`. Command will throw error if target model is linked (has foreign key fields) to other models and related models are not specified |\n\n## Application Template Files\nTemplates for generating application files can be modified. To view or modify a template file, edit the respective file in\npath `<django_builder_directory>/management/commands/templates/<template_file>.py`\n\n**WARNING!!**\n\nModifying template files may break application logic or raise error. Ensure you know what you are doing when modifying files.\n\n## Dependencies\n\nThe `django_buiild` requires `django` installed on target machine. The target Python for current implementation is\nPython 3.8\n\n## Build Status\n\n**Version: 0.1.0**\n\nCurrent development of `django_build` is version 0.1.0. This is considered the Alpha Edition. Future releases will\nsupport import of model specification as YAML or JSON files.\n\n## Features\n\nCurrent build features include:\n\n+ Build model serializers as serializer.py\n+ Build Django views as views.py\n+ Build Django templates as <template_name>.html. Templates are created and stored in directory following the\n  convention: `templates/<app_name>/<template_name>.html`. The various template files that can be generated include:\n    + Entity/Model list template to list all entries of a given model. The list view can be generated as a paginated or\n      single-page list depending on the flags provided.\n    + Entity/Model update template to update a selected instance identified by a parameter such as <slug>.\n    + Entity/Model detail template to view detail of a given instance identified by a parameter such as <slug>.\n    + Entity/Model delete template to request user's confirmation before deleting an instance identified by <slug>.\n    + Entity/Model create a template to collect form data for creating a new record of a given entity.\n\n## Sample Usage\n\n`cli-django-builder` can be used to generate application files for DRF or simply generate files for a Django application.\n\nSample test run:\n\n~~~\n$ python manage.py dbseed --app util --model BaseUser --records 5\n$ python manage.py build --make views --app util\n$ python manage.py build --make serializer --app util --model BaseUser \n~~~\n\n## Contributing\n\nPlease visit application repo for further information on extending project. Ideas and comments will be reasonably\nappreciated.\n\n## Author\n\nCurrent development is by Aniefiok Friday [@frier17](https://gitlab.com/frier17).\n\n## License\n\nMIT License\n\nhttps://mit-license.org/\n\nFor details read license contract [here](https://mit-license.org/)\n\nCopyright 2021 @frier17\n\nLicensed under the MIT License (the \"License\"); you may not use this file except in compliance with the License. You may\nobtain a copy of the License at\n\n       https://mit-license.org/\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"\nAS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific\nlanguage governing permissions and limitations under the License.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/frier17/django_builder.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cli-django-builder",
    "package_url": "https://pypi.org/project/cli-django-builder/",
    "platform": "",
    "project_url": "https://pypi.org/project/cli-django-builder/",
    "project_urls": {
      "Homepage": "https://gitlab.com/frier17/django_builder.git"
    },
    "release_url": "https://pypi.org/project/cli-django-builder/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A command line interface to build Django application and RESTful application using DRF",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11457023,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee4b850feabc45f41991437cbbdda219b43f367231bda2e367bc73db73100361",
          "md5": "7ab1f413efdaa52fbfda999e2f423711",
          "sha256": "2ec99c2dec8a34e5eb4a26e0fa8dc42162ba7ec449336fedf8f6fc76f4b5f7ef"
        },
        "downloads": -1,
        "filename": "cli_django_builder-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ab1f413efdaa52fbfda999e2f423711",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5656,
        "upload_time": "2021-09-15T09:38:15",
        "upload_time_iso_8601": "2021-09-15T09:38:15.982778Z",
        "url": "https://files.pythonhosted.org/packages/ee/4b/850feabc45f41991437cbbdda219b43f367231bda2e367bc73db73100361/cli_django_builder-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee4b850feabc45f41991437cbbdda219b43f367231bda2e367bc73db73100361",
        "md5": "7ab1f413efdaa52fbfda999e2f423711",
        "sha256": "2ec99c2dec8a34e5eb4a26e0fa8dc42162ba7ec449336fedf8f6fc76f4b5f7ef"
      },
      "downloads": -1,
      "filename": "cli_django_builder-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7ab1f413efdaa52fbfda999e2f423711",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5656,
      "upload_time": "2021-09-15T09:38:15",
      "upload_time_iso_8601": "2021-09-15T09:38:15.982778Z",
      "url": "https://files.pythonhosted.org/packages/ee/4b/850feabc45f41991437cbbdda219b43f367231bda2e367bc73db73100361/cli_django_builder-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}