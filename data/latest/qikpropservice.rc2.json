{
  "info": {
    "author": "Levi Naden",
    "author_email": "lnaden@vt.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![codecov](https://codecov.io/gh/MolSSI/qikpropservice/branch/master/graph/badge.svg)](https://codecov.io/gh/MolSSI/qikpropservice)\n\nMolSSI QikProp As A Service API Wrapper Library\n===============================================\n\nA library which wraps the API calls for the QikProp v3 As A Service \n\nThe version of QikProp reached by this library has been provided by [William L. Jorgensen](http://zarbi.chem.yale.edu) \nand hosted as a service by the [Molecular Sciences Software Institute (MolSSI)](https://molssi.org/). To report a\nproblem or suggest improvements, please open an issue on\n[the Project GitHub](https://github.com/MolSSI/qikpropservice). Additional features and options will be\nadded over time.\n\nThis project serves as the Python wrapper for making the API calls by providing both an importable \nlibrary and a CLI tool to make calls to the QikProp Service.\n\nFor direct information regarding the API endpoints, please see \n[the Project GitHub](https://github.com/MolSSI/qikpropservice).\n\nInstallation From Conda or Pip\n------------------------------\n\nThis package can be installed from either Conda (via Conda-Forge) or Pip\n\n```bash\nconda install -c conda-forge qikpropservice\n```\nOR\n```bash\npip install qikpropservice\n```\n\nInstallation from Source\n------------------------\n\n1. Clone the repo at https://github.com/MolSSI/qikpropservice\n2. Navigate to the folder `apiwrapper`\n3. Run `python setup.py install`\n\nUsage as a CLI Tool\n-------------------\n\nThe CLI can be run from any command line interface by invoking\n\n```bash\nqikpropcli\n```\n\nThe CLI provides its own documentation for how to use it, but most commonly can be used as such:\n\n```bash\nqikpropcli run FILES\n```\nWhere `FILES` can be replaced with any number of entries of files to submit to the QikProp Service API endpoints.\nThere are options which can be specified here such as custom URI server's (e.g. for local testing) or QikProp \noptions, but all of those are documented in the `--help` flag.\n\n\nUsage as a Python Library\n-------------------------\n\nThere are two main library functions depending on if you want to do large bulk processing, or more fine-grained \nfile-by-file processing. In either use case, the library works on on-disk files rather than data pre-read \ninto memory.\n\nThe main helper function is `qikprop_as_a_service` which acts much as the CLI does in that it processes many files \nall the same way.\n\n```python\nfrom qikpropservice import qikprop_as_a_service\n\nqikprop_as_a_service(\"file1.mol, file2.mol, ligand_series*.mol2\")\n```\n\nThis will run the two named files `file1.mol`, `file2.mol` and all the files matching the glob `ligand_series*.mol2`.\nIt is possible to set the output name of each of the returned `.tar.gz` files through a keyword. Other options such as \nwhat settings that can be passed to QikProp are available as well. See the function docstring or call \n`qikprop_as_a_service.__doc__` to see the options.\n\nThe second object is the API Endpoint call wrapper `QikpropAsAService` which can be used to \nintegrate with exiting pipelines and make each of the API calls directly, without having to write the request itself \ndirectly. This class only works on a per-call/file basis. The `qikprop_as_a_service` function uses this class to make \nall of its calls and operations on each file. Its most common invocation is below (wrapped in a practical use), but \nthings such as the URI, endpoints, hashing functions, etc. can all be set in the class initialization.\n\n```python\nfrom qikpropservice import QikpropAsAService, QikPropOptions\nfrom time import sleep\n\nservice = QikpropAsAService() \n\n# Example of options, there are defaults for this model and it does not need to be passed to the Service calls \n# if only defaults are wanted \noptions = QikPropOptions(fast=True, similar=30)\n\nsuccess, ret_code, data = service.post_task(\"file1.mol\", options=options)\ntask_id = data[\"id\"]\nwhile True:\n    success, ret_code, ret_data = service.get_result(task_id=task_id, output_file=\"file1_result.tar.gz\")\n    if success: \n        break\n    sleep(5)\n```\n\nSee the documentation for each class and function to see its options and expected returns.\n\nUtility\n-------\nThere is an expected return code dataclass called `StatusCodes`. It's a simple holder for information regarding the \nHTTP codes returned normally by the QikProp Service API Endpoint and what they mean.\n\nThe class is imported with\n```python\nfrom qikpropservice import StatusCodes\n\nStatusCodes.ready      # 200\nStatusCodes.created    # 201\nStatusCodes.staged     # 202\nStatusCodes.error      # 220\nStatusCodes.null       # 404\nStatusCodes.unmatched  # 409\n```\nwhere each of the attributes and codes corresponds to a particular meaning.\n\n* ready : 200 - GET and POST\n  - Task is ready to pull down.\n* created: 201 - POST\n  - Submitted task has been accepted by the server and no issues on input validation.\n* staged: 202 - GET\n  - Task is queued in the service but has not been processed or is in processing.\n* error : 220 - GET\n  - Task has been processed but had an error associated with processing. See data dict or pull error file for details.\n* null : 404 - GET\n  - No task exists on the server with a given ID\n* unmatched : 409 - GET and POST\n  - For a provided task ID and file data, Checksum/hashing does not match\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MolSSI/qikpropservice",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qikpropservice",
    "package_url": "https://pypi.org/project/qikpropservice/",
    "platform": null,
    "project_url": "https://pypi.org/project/qikpropservice/",
    "project_urls": {
      "Homepage": "https://github.com/MolSSI/qikpropservice"
    },
    "release_url": "https://pypi.org/project/qikpropservice/0.2.4/",
    "requires_dist": [
      "requests",
      "click",
      "pydantic",
      "tqdm",
      "pytest ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "API wrapper CLI and library for MolSSI QikProp as a Service",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13141531,
  "releases": {
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1831f14d6c4fbf01ed2950a51c0a71c161d5a7f2e6ab1ae084d652e90152cd33",
          "md5": "4171f00ed8727b46513c3acc0bc142a6",
          "sha256": "e6bf8ec293e6e818fca60da80f38e212affaf1a020056fd3df04b8c166db7135"
        },
        "downloads": -1,
        "filename": "qikpropservice-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4171f00ed8727b46513c3acc0bc142a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12447,
        "upload_time": "2022-02-22T19:23:01",
        "upload_time_iso_8601": "2022-02-22T19:23:01.840656Z",
        "url": "https://files.pythonhosted.org/packages/18/31/f14d6c4fbf01ed2950a51c0a71c161d5a7f2e6ab1ae084d652e90152cd33/qikpropservice-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb9577caee2d131771480f8cbc45663c348aad3abf7efd40458c68e0b6af68d8",
          "md5": "0f609244e68747a1e6fb3bcc13118385",
          "sha256": "fb911ede6b8cdafb8350db841299aec24ea40947832bb54ca8665ae1ccd3c6d8"
        },
        "downloads": -1,
        "filename": "qikpropservice-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0f609244e68747a1e6fb3bcc13118385",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30093,
        "upload_time": "2022-02-22T19:23:03",
        "upload_time_iso_8601": "2022-02-22T19:23:03.628895Z",
        "url": "https://files.pythonhosted.org/packages/fb/95/77caee2d131771480f8cbc45663c348aad3abf7efd40458c68e0b6af68d8/qikpropservice-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01f2ee8f06d7446ca2bf341e7e10b3fa931b6e4f74e75a1efc2b99c2b335e2e5",
          "md5": "60fb5f62a9de283f5268cdd05c35b86e",
          "sha256": "e79011cac6ffd4b17c86ebd4d666cc9e825048d694fd8b2d65d261b9f3357a35"
        },
        "downloads": -1,
        "filename": "qikpropservice-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60fb5f62a9de283f5268cdd05c35b86e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12441,
        "upload_time": "2022-03-10T18:27:01",
        "upload_time_iso_8601": "2022-03-10T18:27:01.745751Z",
        "url": "https://files.pythonhosted.org/packages/01/f2/ee8f06d7446ca2bf341e7e10b3fa931b6e4f74e75a1efc2b99c2b335e2e5/qikpropservice-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a42dcbeb8f30ef75dc2d14dc0df1b77694095c9e18a9c9b3c630d98c4e8de3f2",
          "md5": "89c0368eb331a5f16285c66b299c5c46",
          "sha256": "66a03d09fba1402cf8ddd361ccb3b42452e6320dfc83d10716e8e466875b9d89"
        },
        "downloads": -1,
        "filename": "qikpropservice-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "89c0368eb331a5f16285c66b299c5c46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30119,
        "upload_time": "2022-03-10T18:27:03",
        "upload_time_iso_8601": "2022-03-10T18:27:03.797359Z",
        "url": "https://files.pythonhosted.org/packages/a4/2d/cbeb8f30ef75dc2d14dc0df1b77694095c9e18a9c9b3c630d98c4e8de3f2/qikpropservice-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01f2ee8f06d7446ca2bf341e7e10b3fa931b6e4f74e75a1efc2b99c2b335e2e5",
        "md5": "60fb5f62a9de283f5268cdd05c35b86e",
        "sha256": "e79011cac6ffd4b17c86ebd4d666cc9e825048d694fd8b2d65d261b9f3357a35"
      },
      "downloads": -1,
      "filename": "qikpropservice-0.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "60fb5f62a9de283f5268cdd05c35b86e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12441,
      "upload_time": "2022-03-10T18:27:01",
      "upload_time_iso_8601": "2022-03-10T18:27:01.745751Z",
      "url": "https://files.pythonhosted.org/packages/01/f2/ee8f06d7446ca2bf341e7e10b3fa931b6e4f74e75a1efc2b99c2b335e2e5/qikpropservice-0.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a42dcbeb8f30ef75dc2d14dc0df1b77694095c9e18a9c9b3c630d98c4e8de3f2",
        "md5": "89c0368eb331a5f16285c66b299c5c46",
        "sha256": "66a03d09fba1402cf8ddd361ccb3b42452e6320dfc83d10716e8e466875b9d89"
      },
      "downloads": -1,
      "filename": "qikpropservice-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "89c0368eb331a5f16285c66b299c5c46",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30119,
      "upload_time": "2022-03-10T18:27:03",
      "upload_time_iso_8601": "2022-03-10T18:27:03.797359Z",
      "url": "https://files.pythonhosted.org/packages/a4/2d/cbeb8f30ef75dc2d14dc0df1b77694095c9e18a9c9b3c630d98c4e8de3f2/qikpropservice-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}