{
  "info": {
    "author": "Nathan A. Rooy",
    "author_email": "nathanrooy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p  align=\"center\"><img src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/logo.png\"></p>\n\n[![gh-actions-ci](https://img.shields.io/github/workflow/status/nathanrooy/landscapes/ci?style=flat-square)](https://github.com/nathanrooy/landscapes/actions?query=workflow%3Aci)\n[![GitHub license](https://img.shields.io/github/license/nathanrooy/landscapes?style=flat-square)](https://github.com/nathanrooy/landscapes/blob/master/LICENSE)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/landscapes.svg?style=flat-square)](https://pypi.org/pypi/landscapes/)\n[![PyPi Version](https://img.shields.io/pypi/v/landscapes.svg?style=flat-square)](https://pypi.org/project/landscapes)\n[![codecov](https://img.shields.io/codecov/c/github/nathanrooy/landscapes.svg?style=flat-square)](https://codecov.io/gh/nathanrooy/landscapes)\n[![Downloads](https://img.shields.io/pypi/dm/landscapes?style=flat-square)](https://pepy.tech/project/landscapes)\n\n## Installation\nThere are a couple ways in which you can use this library. The first and probably the easiest is by using pip and PyPi:\n```sh\npip install landscapes\n```\nYou can also install directly from this git repo:\n```sh\npip install git+https://github.com/nathanrooy/landscapes\n```\nLastly, you can always clone/download this repo and use as is.\n```sh\nwget https://github.com/nathanrooy/landscapes/archive/master.zip\nunzip master.zip\ncd landscapes-master\n```\n\n## Available functions from: `single_objective`\n| function name | method | dimensions | \n| :--- | :--- | :---: |\n| [Ackley](#ackley-function) | `ackley()` | 2 |\n| Ackley N.2 | `ackley_n2()` | 2 |\n| Adjiman | `adjiman()` | 2 |\n| AMGM | `amgm()` | n |\n| Bartels Conn | `bartels_conn()` | 2 |\n| Bird | `bird()` | 2 |\n| [Beale](#beale-function) | `beale()` | 2 |\n| Bent Cigar | `bent_cigar()` | n |\n| Bohachevsky N.1 | `bohachevsky_n1()` | 2 |\n| Bohachevsky N.2 | `bohachevsky_n2()` | 2 |\n| Bohachevsky N.3 | `bohachevsky_n3()` | 2 |\n| [Booth](#booth-function) | `booth()` | 2 |\n| Branin | `branin()` | 2 |\n| Brent | `brent()` | 2 |\n| Brown | `brown()` | n |\n| [Bukin n6](#bukin-n6-function) | `bukin_n6()` | 2 |\n| 3-Hump Camel | `camel_hump_3()` | 2 |\n| 6-Hump Camel | `camel_hump_6()` | 2 |\n| Carrom Table | `carrom_table()` | 2 |\n| Chichinadze | `chichinadze()` | 2 |\n| Chung Reynolds | `chung_reynolds()` | n |\n| Colville | `colville()` | 4 |\n| Cosine Mixture | `cosine_mixture()` | n |\n| [Cross-in-Tray](#cross-in-tray-function) | `cross_in_tray()` | 2 |\n| Csendes | `csendes()` | n |\n| Cube | `cube()` | 2 |\n| Damavandi | `damavandi()` | 2 |\n| Deckkers-Aarts | `deckkers_aarts()` | 2 |\n| Dixon & Price | `dixon_price()` | n |\n| Drop Wave | `drop_wave()` | 2 |\n| [Easom](#easom-function) | `easom()` | 2 |\n| [Eggholder](#eggholder-function) | `eggholder()` | 2 |\n| Exponential | `exponential()` | n |\n| Freudenstein Roth | `freudenstein_roth()` | 2 |\n| [Goldstein–Price](#goldsteinprice-function) | `goldstein_price()` | 2 |\n| Griewank | `griewank()` | n |\n| [Himmelblau](#himmelblaus-function) | `himmelblau()` | 2 |\n| [Hölder table](#hölder-table-function) | `holder_table()` | 2 |\n| Hosaki | `hosaki()` | 2 |\n| Keane | `keane()` | 2 |\n| Leon | `leon()` | 2 |\n| [Lévi function N.13](#lévi-function-n13) | `levi_n13()` | 2 |\n| [Matyas](#matyas-function) | `matyas()` | 2 |\n| Michalewicz | `michalewicz` | n|\n| [McCormick](#mccormick-function) | `mccormick()` | 2 |\n| Parsopoulos | `parsopoulos()` | 2 |\n| Pen Holder | `pen_holder()` | 2 |\n| Plateau | `plateau()` | n |\n| Qing | `qing()` | n |\n| Quartic | `quartic()` | n |\n| [Rastrigin](#rastrigin-function) | `rastrigin()` | n |\n| Rotated Hyper-Ellipsoid | `rotated_hyper_ellipsoid()` | n |\n| [Rosenbrock](#rosenbrock-function) | `rosenbrock()` | n |\n| Salomon | `salomon()` | n |\n| [Schaffer N.2](#schaffer-function-n2) | `schaffer_n2()` | 2 |\n| [Schaffer N.4](#schaffer-function-n4) | `schaffer_n4()` | 2 |\n| Schwefel | `schwefel()` | n |\n| [Sphere](#sphere-function) | `sphere()` | n |\n| Step | `step()` | n |\n| [Styblinski–Tang](#styblinskitang-function) | `styblinski_tang()` | n |\n| Sum of Different Powers | `sum_of_different_powers()` | n |\n| Sum of Squares | `sum_of_squares()` | n |\n| Trid | `trid()` | n |\n| Tripod | `tripod()` | 2 |\n| Wolfe | `wolfe()` | 3 |\n| Zakharov | `zakharov()` | n |\n\n## Usage\n\nAs a simple example, let's use the <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Nelder%E2%80%93Mead_method\">Nelder-Mead method</a> via <a target=\"_blank\" href=\"https://www.scipy.org/\">SciPy</a> to minimize the sphere function. We'll start off by importing the `sphere` function from Landscapes and the `minimize` method from SciPy.\n```py\n>>> from landscapes.single_objective import sphere\n>>> from scipy.optimize import minimize\n```\nNext, we'll call the `minimize` method using a starting location of [5,5].\n```py\n>>> minimize(sphere, x0=[5,5], method='Nelder-Mead')\n```\nThe output of which should look close to this:\n```py\n final_simplex: (array([[-3.33051318e-05, -1.93825710e-05],\n       [ 4.24925225e-05,  1.37129516e-05],\n       [ 3.09383247e-05, -4.04797876e-05]]), array([1.48491586e-09, 1.99365951e-09, 2.59579314e-09]))\n           fun: 1.4849158640215086e-09\n       message: 'Optimization terminated successfully.'\n          nfev: 80\n           nit: 44\n        status: 0\n       success: True\n             x: array([-3.33051318e-05, -1.93825710e-05])\n\n```\n\n## Function Reference - Single Objective\n\n### Ackley function\n```py\nfrom landscapes.single_objective import ackley\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=0,y=0)=0 | -5.12 <= x, y <= 5.12 | `ackley([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/ackley.png\">\n\n### Beale function\n```py\nfrom landscapes.single_objective import beale\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=3, y=0.5) = 0 | -4.5 <= x, y <= 4.5 | `beale([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/beale.png\">\n\n### Booth function\n```py\nfrom landscapes.single_objective import booth\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=1, y=3) = 0 | -10 <= x, y <= 10 | `booth([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/booth.png\">\n\n### Bukin N.6 function\n```py\nfrom landscapes.single_objective import bukin_n6\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=-10, y=1) = 0 | -15 <= x <= -5 <br> -3 <= y <= 3 | `bukin_n6([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/bukin_n6.png\">\n\n### Cross-in-tray function\n```py\nfrom landscapes.single_objective import cross_in_tray\n```\n| global minimum(s) | bounds | usage | \n| --- | --- | --- |\n| f(x=1.34941, y=-1.34941) = -2.06261 <br> f(x=1.34941, y=1.34941) = -2.06261 <br> f(x=-1.34941, y=1.34941) = -2.06261 <br> f(x=-1.34941, y=-1.34941) = -2.06261 | -10 <= x, y <= 10 | `cross_in_tray([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/cross_in_tray.png\">\n\n### Easom function\n```py\nfrom landscapes.single_objective import easom\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=pi, y=pi) = -1 | -100 <= x, y <= 100 | `easom([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/easom.png\">\n\n### Eggholder function\n```py\nfrom landscapes.single_objective import eggholder\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=512, y=404.2319) = -959.6407 | -512 <= x, y <= 512 | `eggholder([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/egg_holder.png\">\n\n### Goldstein–Price function\n```py\nfrom landscapes.single_objective import goldstein_price\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=0, y=-1) = 3 | -2 <= x, y <= 2 | `goldstein_price([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/log_color_scale/goldstein_price.png\">\n\n### Himmelblau's function\n```py\nfrom landscapes.single_objective import himmelblau\n```\n| global minimum(s) | bounds | usage | \n| --- | --- | --- |\n| f(x=3.0, y=2.0) = 0.0 <br> f(x=-2.805118, y=3.131312) = 0.0 <br> f(x=-3.779310, y=-3.283186) = 0.0 <br> f(x=3.584428, y=-1.848126) = 0.0 | -5 <= x, y <= 5 | `himmelblau([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/himmelblau.png\">\n\n### Hölder table function\n```py\nfrom landscapes.single_objective import holder_table\n```\n| global minimum(s) | bounds | usage | \n| --- | --- | --- |\n| f(x=8.05502, y=9.66459) = -19.2085 <br> f(x=-8.05502, y=9.66459) = -19.2085 <br> f(x=8.05502, y=-9.66459) = -19.2085 <br> f(x=-8.05502, y=-9.66459) = -19.2085 <br> | -10 <= x, y <= 10 | `holder_table([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/holder_table.png\">\n\n### Lévi function N.13\n```py\nfrom landscapes.single_objective import levi_n13\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=1, y=1) = 0 | -10 <= x, y <= 10 | `levi_n13([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/levi_n13.png\">\n\n### Matyas function\n```py\nfrom landscapes.single_objective import matyas\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=0, y=0) = 0 | -10 <= x, y <= 10 | `matyas([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/matyas.png\">\n\n### McCormick function\n```py\nfrom landscapes.single_objective import mccormick\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=-0.54719, y=-1.54719) = -1.9133 | -1.5 <= x <= 4 <br> -3 <= y <= 4 | `mccormick([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/mccormick.png\">\n\n### Rastrigin function\n```py\nfrom landscapes.single_objective import rastrigin\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f([0,...,0]) = 0 | -5.12 <= x_i <= 5.12 | `rastrigin([x_1,...,x_n])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/rastrigin.png\">\n\n### Rosenbrock function\n```py\nfrom landscapes.single_objective import rosenbrock\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f([1,...,1]) = 0 | -inf <= x_i <= inf | `rosenbrock([x_1,...,x_n])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/rosenbrock.png\">\n\n### Schaffer function N.2\n```py\nfrom landscapes.single_objective import schaffer_n2\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=0, y=0) = 0 | -100 <= x, y <= 100 | `schaffer_n2([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/schaffer_n2.png\">\n\n\n### Schaffer function N.4\n```py\nfrom landscapes.single_objective import schaffer_n4\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=0, y=1.25313) = 0.292579 <br> f(x=0, y=-1.25313) = 0.292579 | -100 <= x, y <= 100 | `schaffer_n4([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/schaffer_n4.png\">\n\n### Sphere function\n```py\nfrom landscapes.single_objective import sphere\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f([0,...,0]) = 0 | -inf <= x_i <= inf | `sphere([x_1,...x_n])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/sphere.png\">\n\n### Styblinski–Tang function\n```py\nfrom landscapes.single_objective import styblinski_tang\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| -39.16617n < f([-2.903534,...,-2.903534]) < -39.16616n | -5 <= x_i <= 5 | `styblinski_tang([x_1,...x_n])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/styblinski_tang.png\">\n\n### Three-hump camel function\n```py\nfrom landscapes.single_objective import camel_hump_3\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| -f(x=0, y=0) = 0 | -5 <= x_i <= 5 | `three_hump_camel([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/three_hump_camel.png\">\n\n### Travelling salesman problem (TSP)\n```py\nfrom landscapes.single_objective import tsp\n```\nThere are several ways to use the TSP function within Landscapes, all of which involve specifying a list of tsp stops, and a distance function.\n\n<b>Example 1: Multi-dimensional list of points using Euclidean distance function</b>\n```py\nfrom landscapes.single_objective import tsp\nfrom scipy.spatial import distance\n\nnp.random.seed(10)\npts = np.random.rand(5,3)\n```\nwhich will yield a list of three-dimensional points:\n```py\narray([[0.77132064, 0.02075195, 0.63364823],\n       [0.74880388, 0.49850701, 0.22479665],\n       [0.19806286, 0.76053071, 0.16911084],\n       [0.08833981, 0.68535982, 0.95339335],\n       [0.00394827, 0.51219226, 0.81262096]])\n```\nThen, initialize the tsp function:\n```py\ntsp_cost = tsp(distance.euclidean, close_loop=True).dist\n```\nTo calculate the total travel distance, simply call the function with the list of points:\n```py\ntsp_cost(pts)\n>>> 3.2043803044101096\n```\nThe flag `close_loop` simply specifies whether the distance between the first and last points should be calculated.\n\n<b>Example 2: Specifying points using Latitude and Longitude</b>\n\nInsead of multi-dimensional points in space, let's specify a list of locations based on longitude and latitude then calculate the distances using the inverse <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Vincenty%27s_formulae\">Vincenty's formulae</a> which is available in the `spatial` package [<a target=\"_blank\" href=\"https://github.com/nathanrooy/spatial-analysis\">here</a>].\n\nFirst let's import our Vincenty based distance function and wrap it for easier use.\n```py\nfrom spatial import vincenty_inverse as vi\n\ndef vi_tsp(p1, p2):\n    return vi(p1, p2).mi() # output distance in miles\n```\nNext, let's specify some locations. Here are some breweries in Cincinnati. Each row represents a `[longitude, latitude]`.\n```py\npts = [\n    [-84.508661, 39.110187],\n    [-84.520021, 39.117219],\n    [-84.514938, 39.113937],\n    [-84.517401, 39.111322],\n    [-84.476906, 39.128957]]\n```\nAgain, initialize the tsp function:\n```py\ntsp_cost = tsp(vi_tsp, close_loop=True).dist\n```\nAnd finally, calculate the travel distance:\n```py\ntsp_cost(pts)\n>>> 5.993331331465468\n```\n<b> Example #3: Geospatial distances on a graph</b>\n\nIn `Example #2` we used Vincenty's inverse formulae which calculates the distance between two longitude and latitude pairs \"as the crow flies\". That's great for some situations, but in a city where we're limited by streets and sidewalks, it's a little less useful. Instead, what we want is the actual distance if we were going to walk or bike. This is the network distance and is only slighly more complex, but involves some additinal libraries.\n\nFirst, import the dependencies:\n```py\nimport osmnx as ox\nimport networkx as nx\nimport pandas as pd\n```\nNext, load the brewery locations (available <a target=\"_blank\" href=\"https://github.com/nathanrooy/landscapes/blob/master/docs/brewery_locations.csv\">here</a>) and prepare the <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/OpenStreetMap\">Open Street Map</a> (OSM) network graph.\n```py\npts_df = pd.read_csv('brewery_locations.csv')\n\n# determine bounds for osm network\nlats = locs_df['lat'].values\nlngs = locs_df['lng'].values\n\nbbox = [\n    max(lats) + 0.1,\n    min(lats) - 0.1,\n    max(lngs) + 0.1,\n    min(lngs) - 0.1]\n\n# download osm street network\nG = ox.graph_from_bbox(bbox[0], bbox[1], bbox[2], bbox[3], network_type='drive')\n```\nDownloading the osm graph might take a bit depending on internet speed. Next, let's create a new cost function that takes in two brewery names and returns the network distance in meters.\n```py\ndef osm_dist(n0, n1):\n    p0 = pts_df[pts_df['name']==n0][['lat','lng']].values[0]\n    p1 = pts_df[pts_df['name']==n1][['lat','lng']].values[0]\n\n    p0_node = ox.get_nearest_node(G, p0)\n    p1_node = ox.get_nearest_node(G, p1)\n\n    dist_m = nx.shortest_path_length(G, p0_node, p1_node, weight='length')\n    return dist_m\n```\nAgain, specify the tsp cost function:\n```py\ntsp_cost = tsp(osm_dist, close_loop=True).dist\n```\nAnd to get the network distance:\n```py\ntsp_cost(locs_df['name'].values)\n>>> 75950.73399999998\n```\nThis translates to roughly 47 miles.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nathanrooy/landscapes",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "landscapes",
    "package_url": "https://pypi.org/project/landscapes/",
    "platform": "",
    "project_url": "https://pypi.org/project/landscapes/",
    "project_urls": {
      "Homepage": "https://github.com/nathanrooy/landscapes"
    },
    "release_url": "https://pypi.org/project/landscapes/0.0.12/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A Python library of standardized optimization test functions",
    "version": "0.0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9176624,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e151045a6718f9d0a0915d75b30aaeb06fa086855ff888589dd7911e586572f",
          "md5": "5eb724d66e5c35f66a50795469c1a5f2",
          "sha256": "c4a6f9067fc4b53d27a50c7e15993561cd1b023915fc9434795073bec057d869"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5eb724d66e5c35f66a50795469c1a5f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2659,
        "upload_time": "2019-11-06T01:13:56",
        "upload_time_iso_8601": "2019-11-06T01:13:56.212985Z",
        "url": "https://files.pythonhosted.org/packages/0e/15/1045a6718f9d0a0915d75b30aaeb06fa086855ff888589dd7911e586572f/landscapes-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f269ec02741bfdf58a9268df6c2de94b88340fad1a04e5157470ae20021a785",
          "md5": "ed85d76da2c13cd6e386a1db7bdf27b4",
          "sha256": "7cb5b7276af838bdbc59ad45733db5376609b5d9fe1111aacf36d922bb7efc7a"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed85d76da2c13cd6e386a1db7bdf27b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 13686,
        "upload_time": "2020-10-19T17:08:10",
        "upload_time_iso_8601": "2020-10-19T17:08:10.040359Z",
        "url": "https://files.pythonhosted.org/packages/7f/26/9ec02741bfdf58a9268df6c2de94b88340fad1a04e5157470ae20021a785/landscapes-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67e6e753627f3ac40ba168c0b68fbbf0d0850aa7781aca9393f9313713ec31e8",
          "md5": "437bfa7944b57b805fbc9909b411881a",
          "sha256": "9e04d63679bf544cff8aeac96b404a68f95dd680298152dbbff06c121c13f5b4"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "437bfa7944b57b805fbc9909b411881a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 17741,
        "upload_time": "2020-10-19T17:08:11",
        "upload_time_iso_8601": "2020-10-19T17:08:11.385032Z",
        "url": "https://files.pythonhosted.org/packages/67/e6/e753627f3ac40ba168c0b68fbbf0d0850aa7781aca9393f9313713ec31e8/landscapes-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cf4c7ab7229d1bba7a5b438c835e209b01b80c5a7b5cf980b4b0d1128e72f4e",
          "md5": "2ca370596cff08055e05d9584549f04e",
          "sha256": "90ea572607b8dd65ce63e6b680fe9b2e7cc43d6a0b10999f3e8f88dda088d1be"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ca370596cff08055e05d9584549f04e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 15565,
        "upload_time": "2020-11-22T20:28:36",
        "upload_time_iso_8601": "2020-11-22T20:28:36.156227Z",
        "url": "https://files.pythonhosted.org/packages/3c/f4/c7ab7229d1bba7a5b438c835e209b01b80c5a7b5cf980b4b0d1128e72f4e/landscapes-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fdc7e62b0b62a46adf897c70a4cd9e2e906f1f8669fb6765760e365485a7942",
          "md5": "81f7dba6c7c8f3be03c194b27d92a345",
          "sha256": "20e3031c16119b2872111762d80031af6de40b35deee9323cef7981262183830"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "81f7dba6c7c8f3be03c194b27d92a345",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 19691,
        "upload_time": "2020-11-22T20:28:37",
        "upload_time_iso_8601": "2020-11-22T20:28:37.355105Z",
        "url": "https://files.pythonhosted.org/packages/3f/dc/7e62b0b62a46adf897c70a4cd9e2e906f1f8669fb6765760e365485a7942/landscapes-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2c26a8ed0ca69ab810e85846e11d413be497d5b2df4542a4ad54503d8265477",
          "md5": "e4cc3ddb1af5059e5b34f8eed82386a4",
          "sha256": "904d002f11686efa675bdf1a6636828009e26be7e4a52da0bdbebda69fbde9e3"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4cc3ddb1af5059e5b34f8eed82386a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 15741,
        "upload_time": "2021-01-19T21:16:42",
        "upload_time_iso_8601": "2021-01-19T21:16:42.198185Z",
        "url": "https://files.pythonhosted.org/packages/f2/c2/6a8ed0ca69ab810e85846e11d413be497d5b2df4542a4ad54503d8265477/landscapes-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de659ce1f601461fb4a42e6d971855ae2f979e7e481ab364ddcb59811713812e",
          "md5": "9e0ed44ff75a017237ca6cc281b98269",
          "sha256": "508ad47d8d72adbef972b3e8cbde4beda1a616a7929143679c09f4234a57879e"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "9e0ed44ff75a017237ca6cc281b98269",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 20031,
        "upload_time": "2021-01-19T21:16:43",
        "upload_time_iso_8601": "2021-01-19T21:16:43.457244Z",
        "url": "https://files.pythonhosted.org/packages/de/65/9ce1f601461fb4a42e6d971855ae2f979e7e481ab364ddcb59811713812e/landscapes-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7ba15eed2353c97207ecd5805eac80d49b27c5bb76424a9f7eea6f48028e98a",
          "md5": "bed82f1958d372b46e7baa51f9b8ce63",
          "sha256": "f393585aaebc5135df375c6b6d4d3908a18e78d0047201883b70b2d67c3bc1a1"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bed82f1958d372b46e7baa51f9b8ce63",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3839,
        "upload_time": "2019-11-07T22:07:42",
        "upload_time_iso_8601": "2019-11-07T22:07:42.920868Z",
        "url": "https://files.pythonhosted.org/packages/c7/ba/15eed2353c97207ecd5805eac80d49b27c5bb76424a9f7eea6f48028e98a/landscapes-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "847f125e3179a8fc81d47f0e6278558cdea86862499e67b9ae5d7c24c9b7aa47",
          "md5": "317968ff29aca68df8ba7f686e1f765f",
          "sha256": "7d37d14613070e8860a64c1df7e08e40f56006e2dbdcda44b5a75fef83205fba"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "317968ff29aca68df8ba7f686e1f765f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3855,
        "upload_time": "2019-11-07T22:12:07",
        "upload_time_iso_8601": "2019-11-07T22:12:07.777916Z",
        "url": "https://files.pythonhosted.org/packages/84/7f/125e3179a8fc81d47f0e6278558cdea86862499e67b9ae5d7c24c9b7aa47/landscapes-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "773f395e3e43fe0fed36556a41887ae227d90da9915a07b8ac83608a6fa8e12d",
          "md5": "0cf23a54711b41a3a024a8d402216f15",
          "sha256": "72c8b9e8429bf459aa07bb01015253063370f837ab5c0045b02cc164be6d2d36"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0cf23a54711b41a3a024a8d402216f15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 5232,
        "upload_time": "2019-11-09T22:30:09",
        "upload_time_iso_8601": "2019-11-09T22:30:09.880842Z",
        "url": "https://files.pythonhosted.org/packages/77/3f/395e3e43fe0fed36556a41887ae227d90da9915a07b8ac83608a6fa8e12d/landscapes-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6219d27f135592f68d4e76858b51af798b9ee3e833c44359ac866118a78ef3ac",
          "md5": "2b28cfb2ec38f8b891664fa5385da429",
          "sha256": "d29b13282344fc7a78e702b99deac5505fb6660d1faf31610a5044a49918ca17"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2b28cfb2ec38f8b891664fa5385da429",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6297,
        "upload_time": "2019-11-15T21:44:18",
        "upload_time_iso_8601": "2019-11-15T21:44:18.321548Z",
        "url": "https://files.pythonhosted.org/packages/62/19/d27f135592f68d4e76858b51af798b9ee3e833c44359ac866118a78ef3ac/landscapes-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c0b0516144ca3f8d7019833e0e7b7b85c62a5ef51a608c9ebdcdcafd73f4702",
          "md5": "701d5db7cb4baad146617443628fa06f",
          "sha256": "bf146271ec5bd488d7917e55f7daa6fa26c2069e2997e9b800d2b53fe9b150bd"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "701d5db7cb4baad146617443628fa06f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6781,
        "upload_time": "2020-05-17T18:09:46",
        "upload_time_iso_8601": "2020-05-17T18:09:46.737018Z",
        "url": "https://files.pythonhosted.org/packages/8c/0b/0516144ca3f8d7019833e0e7b7b85c62a5ef51a608c9ebdcdcafd73f4702/landscapes-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed13c3d3fa4ea949d0ff875714bfe19046264bce5c3ae1ecafb9eb88d84bc177",
          "md5": "20f57fcf3571e9caf82ff987fa595ee8",
          "sha256": "7cee9ad8c22bfe1218f91bcfff7cceabe5476d35f7392f40552c8df6c7c3d606"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "20f57fcf3571e9caf82ff987fa595ee8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 5781,
        "upload_time": "2020-05-17T18:09:47",
        "upload_time_iso_8601": "2020-05-17T18:09:47.735261Z",
        "url": "https://files.pythonhosted.org/packages/ed/13/c3d3fa4ea949d0ff875714bfe19046264bce5c3ae1ecafb9eb88d84bc177/landscapes-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d931f4200718d1305f9018e1150392ca9507a56f8496ecb703d904f5141d97c",
          "md5": "ddb241de00e0319b9a3ec8b35905b1ba",
          "sha256": "ed7daf0f7824962550a8ec624f928b890f47d3f5b979e415bbbf2f6606066678"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddb241de00e0319b9a3ec8b35905b1ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10731,
        "upload_time": "2020-09-13T20:15:24",
        "upload_time_iso_8601": "2020-09-13T20:15:24.326297Z",
        "url": "https://files.pythonhosted.org/packages/8d/93/1f4200718d1305f9018e1150392ca9507a56f8496ecb703d904f5141d97c/landscapes-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08cb0643df28f663f14803ada4f7c0296fa763d45dd165d32c0e502ce86e7546",
          "md5": "af1ed7b3ccc4c88176c24cac2ecd2eb8",
          "sha256": "70d5d3fc3ae8def6d8e6a0258c3fea6e86bd7c06e78fac2091584716c31f0994"
        },
        "downloads": -1,
        "filename": "landscapes-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "af1ed7b3ccc4c88176c24cac2ecd2eb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 14309,
        "upload_time": "2020-09-13T20:15:25",
        "upload_time_iso_8601": "2020-09-13T20:15:25.415517Z",
        "url": "https://files.pythonhosted.org/packages/08/cb/0643df28f663f14803ada4f7c0296fa763d45dd165d32c0e502ce86e7546/landscapes-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2c26a8ed0ca69ab810e85846e11d413be497d5b2df4542a4ad54503d8265477",
        "md5": "e4cc3ddb1af5059e5b34f8eed82386a4",
        "sha256": "904d002f11686efa675bdf1a6636828009e26be7e4a52da0bdbebda69fbde9e3"
      },
      "downloads": -1,
      "filename": "landscapes-0.0.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4cc3ddb1af5059e5b34f8eed82386a4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 15741,
      "upload_time": "2021-01-19T21:16:42",
      "upload_time_iso_8601": "2021-01-19T21:16:42.198185Z",
      "url": "https://files.pythonhosted.org/packages/f2/c2/6a8ed0ca69ab810e85846e11d413be497d5b2df4542a4ad54503d8265477/landscapes-0.0.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de659ce1f601461fb4a42e6d971855ae2f979e7e481ab364ddcb59811713812e",
        "md5": "9e0ed44ff75a017237ca6cc281b98269",
        "sha256": "508ad47d8d72adbef972b3e8cbde4beda1a616a7929143679c09f4234a57879e"
      },
      "downloads": -1,
      "filename": "landscapes-0.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "9e0ed44ff75a017237ca6cc281b98269",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 20031,
      "upload_time": "2021-01-19T21:16:43",
      "upload_time_iso_8601": "2021-01-19T21:16:43.457244Z",
      "url": "https://files.pythonhosted.org/packages/de/65/9ce1f601461fb4a42e6d971855ae2f979e7e481ab364ddcb59811713812e/landscapes-0.0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}