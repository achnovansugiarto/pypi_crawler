{
  "info": {
    "author": "Greg Henning",
    "author_email": "ghenning@iphc.cnrs.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MonteCarlo Variable object\n\n\nThis python object is a Monte Carlo variable. \n\n- It is initialized with a central value, uncertainty and (optionnaly)\ndistribution law\n- It stores a value according to this probability distirbution\n- The value is returned when converted to `float` or `int` \n- The MC value is renewed only when calling `mcvariable.refresh()` \n- The module also includes a generator function to geneate multiple \noutcome of the random variable.\n\n## `MCVariable` usage:\n\nThe object is initialized with \n```python\nMCVariable(parameters: Sequence[Number], \n           law: Callable[..., Number],\n           keep_positive: bool = True, \n           non_zero: bool = True,\n\t\t   replace_zero_with: float = 1e-20)\n```\n\nWith the parameters: \n- `parameters`: parameters of the probability law.  \n                As a tuple or list of numbers/\n- `law` : Distribution law of the random variable  \n          As a callable taking `*parameters` as arguments  \n\t\t  and returning a number/\n- `keep_positive` (`bool`) = True : keep the value >=0\n- `non_zero` (`bool`) = True    : prevent the value to be exactly 0.0000\n- `replace_zero_with` (`float`) = 1e-20 : if the previous parameters is True,  \n                                         replace all 0 by this value.\n\n\nTo be used, it is recommended to convert explicitely the variable \nas `int` or `float`:\n\n```python\nmcv = mcvariable.MCVariable((0., 1.))\nprint(f\"{int(mcv)}\")\n```\n\n## Default probability laws\n\nThe module includes two probability law by default:\n\n- `mcvariable.law_gaussian` which takes two parameters: `(`mean`, `stddev`)`\n- `mcvariable.law_flat` whic takes to parameters: `(`central`, `delta`)`\n (and retruns a value within the (central - delta, central + delta) range.\n\n## Generator\n\nTo obtain a series of realization of the random variable, \nuse the `mcvariable.MCGenerator` function that returns a generator.\n\n```python\n\nmcvariable.MCGenerator(mcv: MCVariable,\n                       nmax: Number = math.inf,\n\t\t\t\t\t   variable_type: type = float)\n```\n\nThe parameters are :\n- `mcv` the MCVariable instance to use to generate the values\n- `nmax` number of elements to return (by defaultl infinite)\n- `variable_type`: the type of value to return (`float` by default, \n  can be changed to `int`).\n\n## Testing\n\nThe module comes with a test script `test_mcvariable.py`. \n\n# Authors\n\n* **Greg Henning** - ghenning&#8203;*.at.*&#8203;iphc&#x2024;cnrs&#x2024;fr\n\n\n# License\n\nThis project is licensed under the CeCILL FREE SOFTWARE LICENSE AGREEMENT.\n\nSee [LICENSE](LICENSE) for more.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.in2p3.fr/gregoire.henning/python-montecarlo-variable",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mcvariable",
    "package_url": "https://pypi.org/project/mcvariable/",
    "platform": "",
    "project_url": "https://pypi.org/project/mcvariable/",
    "project_urls": {
      "Homepage": "https://gitlab.in2p3.fr/gregoire.henning/python-montecarlo-variable"
    },
    "release_url": "https://pypi.org/project/mcvariable/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Monte Carlo(random) Variable Object",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9488467,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b023894a1168ae68a15b7672304f8557aef8bac7ecbc1677ae32a716e5df8003",
          "md5": "7bde15d104b7381c4da1590ff1c2f35f",
          "sha256": "13e58149abd303b70863f616c9f35e0897d4be8af3a828b0fceffd069c1f3a43"
        },
        "downloads": -1,
        "filename": "mcvariable-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7bde15d104b7381c4da1590ff1c2f35f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11863,
        "upload_time": "2021-02-22T13:20:30",
        "upload_time_iso_8601": "2021-02-22T13:20:30.085738Z",
        "url": "https://files.pythonhosted.org/packages/b0/23/894a1168ae68a15b7672304f8557aef8bac7ecbc1677ae32a716e5df8003/mcvariable-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec1efa6dcfa5e34c1d1c71169ea2815fe97fb9bb98bcf0d6e53a9437829aafbd",
          "md5": "c0ccc46961c5dad0c01eb1fcf50aaccd",
          "sha256": "d85c7089ce34f1c1c5338ff832e75f8d55815d88a3d5e42f1729feac45dc941f"
        },
        "downloads": -1,
        "filename": "mcvariable-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c0ccc46961c5dad0c01eb1fcf50aaccd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3579,
        "upload_time": "2021-02-22T13:20:31",
        "upload_time_iso_8601": "2021-02-22T13:20:31.085734Z",
        "url": "https://files.pythonhosted.org/packages/ec/1e/fa6dcfa5e34c1d1c71169ea2815fe97fb9bb98bcf0d6e53a9437829aafbd/mcvariable-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b023894a1168ae68a15b7672304f8557aef8bac7ecbc1677ae32a716e5df8003",
        "md5": "7bde15d104b7381c4da1590ff1c2f35f",
        "sha256": "13e58149abd303b70863f616c9f35e0897d4be8af3a828b0fceffd069c1f3a43"
      },
      "downloads": -1,
      "filename": "mcvariable-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7bde15d104b7381c4da1590ff1c2f35f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11863,
      "upload_time": "2021-02-22T13:20:30",
      "upload_time_iso_8601": "2021-02-22T13:20:30.085738Z",
      "url": "https://files.pythonhosted.org/packages/b0/23/894a1168ae68a15b7672304f8557aef8bac7ecbc1677ae32a716e5df8003/mcvariable-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec1efa6dcfa5e34c1d1c71169ea2815fe97fb9bb98bcf0d6e53a9437829aafbd",
        "md5": "c0ccc46961c5dad0c01eb1fcf50aaccd",
        "sha256": "d85c7089ce34f1c1c5338ff832e75f8d55815d88a3d5e42f1729feac45dc941f"
      },
      "downloads": -1,
      "filename": "mcvariable-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c0ccc46961c5dad0c01eb1fcf50aaccd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3579,
      "upload_time": "2021-02-22T13:20:31",
      "upload_time_iso_8601": "2021-02-22T13:20:31.085734Z",
      "url": "https://files.pythonhosted.org/packages/ec/1e/fa6dcfa5e34c1d1c71169ea2815fe97fb9bb98bcf0d6e53a9437829aafbd/mcvariable-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}