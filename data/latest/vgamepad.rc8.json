{
  "info": {
    "author": "Yann Bouteiller",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python",
      "Topic :: Games/Entertainment",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Virtual Gamepad\r\nVirtual XBox360 and DualShock4 gamepads in python\r\n\r\n---\r\n\r\nVirtual Gamepad (```vgamepad```) is a small python library that emulates XBox360 and DualShock4 gamepads on your system.\r\nIt enables controlling e.g. a video-game that requires analog input, directly from your python script.\r\n\r\nUnder the hood, ```vgamepad``` uses the [ViGEm](https://github.com/ViGEm) C++ framework, for which it essentially provides python bindings and a user-friendly interface.\r\nThus far, ```vgamepad``` is compatible with Windows only.\r\n\r\n## Quick links\r\n- [Installation](#installation)\r\n- [Getting started](#getting-started)\r\n  - [XBox360 gamepad](#xbox360-gamepad)\r\n  - [DualShock4 gamepad](#dualshock4-gamepad)\r\n  - [Rumble and LEDs](#rumble-and-leds)\r\n- [Contribute](#authors)\r\n\r\n---\r\n\r\n## Installation\r\nOpen your favorite terminal (e.g. anaconda prompt) and run:\r\n```bash\r\npip install vgamepad\r\n```\r\nThis automatically runs the installer of the ViGEmBus driver.\r\nAccept the licence agreement, click ```Install```, allow the installer to modify you PC, wait for completion and click ```Finish```.\r\n\r\n```vgamepad``` is now installed in your active python environment.\r\n\r\n---\r\n\r\n## Getting started\r\n\r\n```vgamepad``` provides two main python classes: ```VX360Gamepad```, which emulates a XBox360 gamepad, and ```VDS4Gamepad```, which emulates a DualShock4 gamepad.\r\n\r\nThe state of a virtual gamepad (e.g. pressed buttons, joystick values...) is called a report.\r\nTo modify the report, a number of user-friendly API functions are provided by ```vgamepad```.\r\nWhen the report is modified as desired, it must be sent to the computer thanks to the ```update``` API function.\r\n\r\n### XBox360 gamepad\r\n\r\nThe following python script creates a virtual XBox360 gamepad:\r\n\r\n```python\r\nimport vgamepad as vg\r\n\r\ngamepad = vg.VX360Gamepad()\r\n```\r\n\r\nAs soon as the ```VX360Gamepad``` object is created, the virtual gamepad is connected to your system via the ViGEmBus driver, and will remain connected until the object is destroyed.\r\n\r\nButtons can be pressed and released through ```press_button``` and ```release_button```:\r\n\r\n```python\r\ngamepad.press_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_A)  # press the A button\r\ngamepad.press_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_DPAD_LEFT)  # press the left hat button\r\n\r\ngamepad.update()  # send the updated state to the computer\r\n\r\n# (...) A and left hat are pressed...\r\n\r\ngamepad.release_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_A)  # release the A button\r\n\r\ngamepad.update()  # send the updated state to the computer\r\n\r\n# (...) left hat is still pressed...\r\n```\r\n\r\nAll available buttons are defined in ```XUSB_BUTTON```:\r\n```python\r\nclass XUSB_BUTTON(IntFlag):\r\n    \"\"\"\r\n    Possible XUSB report buttons.\r\n    \"\"\"\r\n    XUSB_GAMEPAD_DPAD_UP = 0x0001\r\n    XUSB_GAMEPAD_DPAD_DOWN = 0x0002\r\n    XUSB_GAMEPAD_DPAD_LEFT = 0x0004\r\n    XUSB_GAMEPAD_DPAD_RIGHT = 0x0008\r\n    XUSB_GAMEPAD_START = 0x0010\r\n    XUSB_GAMEPAD_BACK = 0x0020\r\n    XUSB_GAMEPAD_LEFT_THUMB = 0x0040\r\n    XUSB_GAMEPAD_RIGHT_THUMB = 0x0080\r\n    XUSB_GAMEPAD_LEFT_SHOULDER = 0x0100\r\n    XUSB_GAMEPAD_RIGHT_SHOULDER = 0x0200\r\n    XUSB_GAMEPAD_GUIDE = 0x0400\r\n    XUSB_GAMEPAD_A = 0x1000\r\n    XUSB_GAMEPAD_B = 0x2000\r\n    XUSB_GAMEPAD_X = 0x4000\r\n    XUSB_GAMEPAD_Y = 0x8000\r\n```\r\n\r\nTo control the triggers (1 axis each) and the joysticks (2 axis each), two options are provided by the API.\r\n\r\nIt is possible to input raw integer values directly:\r\n```python\r\ngamepad.left_trigger(value=100)  # value between 0 and 255\r\ngamepad.right_trigger(value=255)  # value between 0 and 255\r\ngamepad.left_joystick(x_value=-10000, y_value=0)  # values between -32768 and 32767\r\ngamepad.right_joystick(x_value=-32768, y_value=15000)  # values between -32768 and 32767\r\n\r\ngamepad.update()\r\n```\r\n\r\nOr to input float values:\r\n```python\r\ngamepad.left_trigger_float(value_float=0.5)  # value between 0.0 and 1.0\r\ngamepad.right_trigger_float(value_float=1.0)  # value between 0.0 and 1.0\r\ngamepad.left_joystick_float(x_value_float=-0.5, y_value_float=0.0)  # values between -1.0 and 1.0\r\ngamepad.right_joystick_float(x_value_float=-1.0, y_value_float=0.8)  # values between -1.0 and 1.0\r\n\r\ngamepad.update()\r\n```\r\n\r\nReset to default state:\r\n```python\r\ngamepad.reset()\r\n\r\ngamepad.update()\r\n```\r\n\r\nFull example:\r\n```python\r\nimport vgamepad as vg\r\nimport time\r\n\r\ngamepad = vg.VX360Gamepad()\r\n\r\n# press a button to wake the device up\r\ngamepad.press_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_A)\r\ngamepad.update()\r\ntime.sleep(0.5)\r\ngamepad.release_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_A)\r\ngamepad.update()\r\ntime.sleep(0.5)\r\n\r\n# press buttons and things\r\ngamepad.press_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_A)\r\ngamepad.press_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_LEFT_SHOULDER)\r\ngamepad.press_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_DPAD_DOWN)\r\ngamepad.press_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_DPAD_LEFT)\r\ngamepad.left_trigger_float(value_float=0.5)\r\ngamepad.right_trigger_float(value_float=0.5)\r\ngamepad.left_joystick_float(x_value_float=0.0, y_value_float=0.2)\r\ngamepad.right_joystick_float(x_value_float=-1.0, y_value_float=1.0)\r\n\r\ngamepad.update()\r\n\r\ntime.sleep(1.0)\r\n\r\n# release buttons and things\r\ngamepad.release_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_A)\r\ngamepad.release_button(button=vg.XUSB_BUTTON.XUSB_GAMEPAD_DPAD_LEFT)\r\ngamepad.right_trigger_float(value_float=0.0)\r\ngamepad.right_joystick_float(x_value_float=0.0, y_value_float=0.0)\r\n\r\ngamepad.update()\r\n\r\ntime.sleep(1.0)\r\n\r\n# reset gamepad to default state\r\ngamepad.reset()\r\n\r\ngamepad.update()\r\n\r\ntime.sleep(1.0)\r\n```\r\n\r\n### DualShock4 gamepad\r\n\r\nUsing a virtual DS4 gamepad is similar to X360:\r\n```python\r\nimport vgamepad as vg\r\n\r\ngamepad = vg.VDS4Gamepad()\r\n```\r\n\r\nPress and release buttons:\r\n```python\r\ngamepad.press_button(button=vg.DS4_BUTTONS.DS4_BUTTON_TRIANGLE)\r\ngamepad.update()\r\n\r\n# (...)\r\n\r\ngamepad.release_button(button=vg.DS4_BUTTONS.DS4_BUTTON_TRIANGLE)\r\ngamepad.update()\r\n```\r\n\r\nAvailable buttons are defined in ```DS4_BUTTONS```:\r\n```python\r\nclass DS4_BUTTONS(IntFlag):\r\n    \"\"\"\r\n    DualShock 4 digital buttons\r\n    \"\"\"\r\n    DS4_BUTTON_THUMB_RIGHT = 1 << 15\r\n    DS4_BUTTON_THUMB_LEFT = 1 << 14\r\n    DS4_BUTTON_OPTIONS = 1 << 13\r\n    DS4_BUTTON_SHARE = 1 << 12\r\n    DS4_BUTTON_TRIGGER_RIGHT = 1 << 11\r\n    DS4_BUTTON_TRIGGER_LEFT = 1 << 10\r\n    DS4_BUTTON_SHOULDER_RIGHT = 1 << 9\r\n    DS4_BUTTON_SHOULDER_LEFT = 1 << 8\r\n    DS4_BUTTON_TRIANGLE = 1 << 7\r\n    DS4_BUTTON_CIRCLE = 1 << 6\r\n    DS4_BUTTON_CROSS = 1 << 5\r\n    DS4_BUTTON_SQUARE = 1 << 4\r\n```\r\n\r\nPress and release special buttons:\r\n```python\r\ngamepad.press_special_button(special_button=vg.DS4_SPECIAL_BUTTONS.DS4_SPECIAL_BUTTON_PS)\r\ngamepad.update()\r\n\r\n# (...)\r\n\r\ngamepad.release_special_button(special_button=vg.DS4_SPECIAL_BUTTONS.DS4_SPECIAL_BUTTON_PS)\r\ngamepad.update()\r\n```\r\n\r\nSpecial buttons are defined in ```DS4_SPECIAL_BUTTONS```:\r\n```python\r\nclass DS4_SPECIAL_BUTTONS(IntFlag):\r\n    \"\"\"\r\n    DualShock 4 special buttons\r\n    \"\"\"\r\n    DS4_SPECIAL_BUTTON_PS = 1 << 0\r\n    DS4_SPECIAL_BUTTON_TOUCHPAD = 1 << 1\r\n```\r\n\r\nTriggers and joysticks (integer values):\r\n```python\r\ngamepad.left_trigger(value=100)  # value between 0 and 255\r\ngamepad.right_trigger(value=255)  # value between 0 and 255\r\ngamepad.left_joystick(x_value=0, y_value=128)  # value between 0 and 255\r\ngamepad.right_joystick(x_value=0, y_value=255)  # value between 0 and 255\r\n\r\ngamepad.update()\r\n```\r\n\r\nTriggers and joysticks (float values):\r\n```python\r\ngamepad.left_trigger_float(value_float=0.5)  # value between 0.0 and 1.0\r\ngamepad.right_trigger_float(value_float=1.0)  # value between 0.0 and 1.0\r\ngamepad.left_joystick_float(x_value_float=-0.5, y_value_float=0.0)  # values between -1.0 and 1.0\r\ngamepad.right_joystick_float(x_value_float=-1.0, y_value_float=0.8)  # values between -1.0 and 1.0\r\n\r\ngamepad.update()\r\n```\r\n\r\n* **Note:** The Y axis on joysticks is inverted for consistency with the X360 API.\r\n\r\nDirectional pad (hat):\r\n```python\r\ngamepad.directional_pad(direction=vg.DS4_DPAD_DIRECTIONS.DS4_BUTTON_DPAD_NORTHWEST)\r\ngamepad.update()\r\n```\r\n\r\nDirections for the directional pad are defined in ```DS4_DPAD_DIRECTIONS```:\r\n```python\r\nclass DS4_DPAD_DIRECTIONS(IntEnum):\r\n    \"\"\"\r\n    DualShock 4 directional pad (HAT) values\r\n    \"\"\"\r\n    DS4_BUTTON_DPAD_NONE = 0x8\r\n    DS4_BUTTON_DPAD_NORTHWEST = 0x7\r\n    DS4_BUTTON_DPAD_WEST = 0x6\r\n    DS4_BUTTON_DPAD_SOUTHWEST = 0x5\r\n    DS4_BUTTON_DPAD_SOUTH = 0x4\r\n    DS4_BUTTON_DPAD_SOUTHEAST = 0x3\r\n    DS4_BUTTON_DPAD_EAST = 0x2\r\n    DS4_BUTTON_DPAD_NORTHEAST = 0x1\r\n    DS4_BUTTON_DPAD_NORTH = 0x0\r\n```\r\n\r\nReset to default state:\r\n```python\r\ngamepad.reset()\r\n\r\ngamepad.update()\r\n```\r\n\r\nFull example:\r\n```python\r\nimport vgamepad as vg\r\nimport time\r\n\r\ngamepad = vg.VDS4Gamepad()\r\n\r\n# press a button to wake the device up\r\ngamepad.press_button(button=vg.DS4_BUTTONS.DS4_BUTTON_TRIANGLE)\r\ngamepad.update()\r\ntime.sleep(0.5)\r\ngamepad.release_button(button=vg.DS4_BUTTONS.DS4_BUTTON_TRIANGLE)\r\ngamepad.update()\r\ntime.sleep(0.5)\r\n\r\n# press buttons and things\r\ngamepad.press_button(button=vg.DS4_BUTTONS.DS4_BUTTON_TRIANGLE)\r\ngamepad.press_button(button=vg.DS4_BUTTONS.DS4_BUTTON_CIRCLE)\r\ngamepad.press_button(button=vg.DS4_BUTTONS.DS4_BUTTON_THUMB_RIGHT)\r\ngamepad.press_button(button=vg.DS4_BUTTONS.DS4_BUTTON_TRIGGER_LEFT)\r\ngamepad.press_special_button(special_button=vg.DS4_SPECIAL_BUTTONS.DS4_SPECIAL_BUTTON_TOUCHPAD)\r\ngamepad.left_trigger_float(value_float=0.5)\r\ngamepad.right_trigger_float(value_float=0.5)\r\ngamepad.left_joystick_float(x_value_float=0.0, y_value_float=0.2)\r\ngamepad.right_joystick_float(x_value_float=-1.0, y_value_float=1.0)\r\n\r\ngamepad.update()\r\n\r\ntime.sleep(1.0)\r\n\r\n# release buttons and things\r\ngamepad.release_button(button=vg.DS4_BUTTONS.DS4_BUTTON_TRIANGLE)\r\ngamepad.right_trigger_float(value_float=0.0)\r\ngamepad.right_joystick_float(x_value_float=0.0, y_value_float=0.0)\r\n\r\ngamepad.update()\r\n\r\ntime.sleep(1.0)\r\n\r\n# reset gamepad to default state\r\ngamepad.reset()\r\n\r\ngamepad.update()\r\n\r\ntime.sleep(1.0)\r\n```\r\n\r\n---\r\n\r\n### Rumble and LEDs:\r\n\r\n`vgamepad` enables registering custom callback functions to handle updates of the rumble motors, and of the LED ring.\r\n\r\nCustom callback functions require 6 parameters:\r\n```python\r\ndef my_callback(client, target, large_motor, small_motor, led_number, user_data):\r\n    \"\"\"\r\n    Callback function triggered at each received state change\r\n\r\n    :param client: vigem bus ID\r\n    :param target: vigem device ID\r\n    :param large_motor: integer in [0, 255] representing the state of the large motor\r\n    :param small_motor: integer in [0, 255] representing the state of the small motor\r\n    :param led_number: integer in [0, 255] representing the state of the LED ring\r\n    :param user_data: placeholder, do not use\r\n    \"\"\"\r\n    # Do your things here. For instance:\r\n    print(f\"Received notification for client {client}, target {target}\")\r\n    print(f\"large motor: {large_motor}, small motor: {small_motor}\")\r\n    print(f\"led number: {led_number}\")\r\n```\r\n\r\nThe callback function needs to be registered as follows:\r\n```python\r\ngamepad.register_notification(callback_function=my_callback)\r\n```\r\n\r\nEach time the state of the gamepad is changed (for example by a video game that sends rumbling requests), the callback function will then be called.\r\n\r\nIn our example, when state changes are received, something like the following will be printed to `stdout`:\r\n```terminal\r\nReceived notification for client 2876897124288, target 2876931874736\r\nlarge motor: 255, small motor: 255\r\nled number: 0\r\nReceived notification for client 2876897124288, target 2876931874736\r\nlarge motor: 0, small motor: 0\r\nled number: 0\r\n```\r\n\r\nIf not needed anymore, the callback function can be unregistered:\r\n```python\r\ngamepad.unregister_notification()\r\n```\r\n\r\n---\r\n\r\n### Advanced users:\r\nMore API functions are available for advanced users, and it is possible to modify the report directly instead of using the API.\r\nSee [virtual_gamepad.py](https://github.com/yannbouteiller/vgamepad/blob/main/vgamepad/win/virtual_gamepad.py).\r\n\r\n---\r\n\r\n## Contribute\r\nAll contributions to this project are welcome.\r\nPlease submit a PR with your name and a short description of your contribution in the Contributors list.\r\n\r\n---\r\n## Authors\r\n### Maintainer:\r\n- Yann Bouteiller\r\n### Contributors:\r\n\r\n- JumpyzZ (rumble and LEDs)\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/yannbouteiller/vgamepad/archive/refs/tags/v0.0.8.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yannbouteiller/vgamepad",
    "keywords": "virtual,gamepad,python,xbox,dualshock,controller,emulator",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vgamepad",
    "package_url": "https://pypi.org/project/vgamepad/",
    "platform": "",
    "project_url": "https://pypi.org/project/vgamepad/",
    "project_urls": {
      "Download": "https://github.com/yannbouteiller/vgamepad/archive/refs/tags/v0.0.8.tar.gz",
      "Homepage": "https://github.com/yannbouteiller/vgamepad"
    },
    "release_url": "https://pypi.org/project/vgamepad/0.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Virtual XBox360 and DualShock4 gamepads in python",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13091130,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb2bb5c2a6bd53089df487fa1c5d13026baafe886227b5d1fc6dc218bb943104",
          "md5": "1e0c0d4c7106c7dc84feca0890da2caf",
          "sha256": "b1c79d00c63539debaafa439a464c14b2da979b987f63b74b98547bfdf7b6bda"
        },
        "downloads": -1,
        "filename": "vgamepad-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1e0c0d4c7106c7dc84feca0890da2caf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1172101,
        "upload_time": "2021-01-25T05:43:24",
        "upload_time_iso_8601": "2021-01-25T05:43:24.939513Z",
        "url": "https://files.pythonhosted.org/packages/cb/2b/b5c2a6bd53089df487fa1c5d13026baafe886227b5d1fc6dc218bb943104/vgamepad-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e447f1e097d77da02662f9c9da58c2ec4d8a17e0ab378bfbdf9228bc1d7439a",
          "md5": "1831196d31299bdc230a12e8be9b2f05",
          "sha256": "27e2409d83dec2a381a002ec8a2dc4a612708a3295f197bc5bd5add2b78c8dd3"
        },
        "downloads": -1,
        "filename": "vgamepad-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1831196d31299bdc230a12e8be9b2f05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1172372,
        "upload_time": "2021-01-26T04:31:58",
        "upload_time_iso_8601": "2021-01-26T04:31:58.958392Z",
        "url": "https://files.pythonhosted.org/packages/8e/44/7f1e097d77da02662f9c9da58c2ec4d8a17e0ab378bfbdf9228bc1d7439a/vgamepad-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c481c6383b0d36cde478d989c627f8e8049bab57f3a749257a80d709d756e855",
          "md5": "b7eea37373d8170225011f69e1bc77ea",
          "sha256": "4634437e1830410af2df7003d73773277df00f96d46f284fdd40d1435f6e3a6c"
        },
        "downloads": -1,
        "filename": "vgamepad-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b7eea37373d8170225011f69e1bc77ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1172474,
        "upload_time": "2021-06-23T18:28:11",
        "upload_time_iso_8601": "2021-06-23T18:28:11.534074Z",
        "url": "https://files.pythonhosted.org/packages/c4/81/c6383b0d36cde478d989c627f8e8049bab57f3a749257a80d709d756e855/vgamepad-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ee8577d91735fcd553baec968925ebdf8e97fc9ea82e154cace1b1f547a25cb",
          "md5": "7c652410f1876d14c963d53de618ee38",
          "sha256": "53202e032e19e574b827c6b957770dacf9a0cb8801e3971972e9ae8d77586914"
        },
        "downloads": -1,
        "filename": "vgamepad-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7c652410f1876d14c963d53de618ee38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1166227,
        "upload_time": "2021-09-30T20:39:49",
        "upload_time_iso_8601": "2021-09-30T20:39:49.840881Z",
        "url": "https://files.pythonhosted.org/packages/9e/e8/577d91735fcd553baec968925ebdf8e97fc9ea82e154cace1b1f547a25cb/vgamepad-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f5025435feea271e884e91c9c50da8d04f389d2d71a8861626db41da4775981",
          "md5": "d2c90494b937499b79d980f9cfc2b24f",
          "sha256": "d918f68dceaf01d8ab3cc297eb0a305c6162c75f47b0aeec083bc817469b69fa"
        },
        "downloads": -1,
        "filename": "vgamepad-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d2c90494b937499b79d980f9cfc2b24f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1166496,
        "upload_time": "2021-10-13T20:35:18",
        "upload_time_iso_8601": "2021-10-13T20:35:18.185431Z",
        "url": "https://files.pythonhosted.org/packages/4f/50/25435feea271e884e91c9c50da8d04f389d2d71a8861626db41da4775981/vgamepad-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a78c48a93746c10d7cc6101583ffa8df17b7926c15c1e7575e0d29ed09a758e0",
          "md5": "b07fc84094ce34d926a3a2976dd24e92",
          "sha256": "a641b297656700725eee8333daee6966be8290c09d5660e14bb87489d43b84a5"
        },
        "downloads": -1,
        "filename": "vgamepad-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b07fc84094ce34d926a3a2976dd24e92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1168443,
        "upload_time": "2021-11-19T01:16:33",
        "upload_time_iso_8601": "2021-11-19T01:16:33.482655Z",
        "url": "https://files.pythonhosted.org/packages/a7/8c/48a93746c10d7cc6101583ffa8df17b7926c15c1e7575e0d29ed09a758e0/vgamepad-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd0bc291edf81e360bc48fbc76579878b0de458b368bcb3b625f9b47fd54cc3c",
          "md5": "9e9a4c35b513cff1f7396c0294ea16db",
          "sha256": "7f8d3a08bada78823f4225e90f0b8dc9779d384f5742a93a9253b386ee1f3081"
        },
        "downloads": -1,
        "filename": "vgamepad-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "9e9a4c35b513cff1f7396c0294ea16db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1168693,
        "upload_time": "2022-02-06T16:18:35",
        "upload_time_iso_8601": "2022-02-06T16:18:35.395946Z",
        "url": "https://files.pythonhosted.org/packages/cd/0b/c291edf81e360bc48fbc76579878b0de458b368bcb3b625f9b47fd54cc3c/vgamepad-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dee1a4a214ed7d3d58d01867766acd42e6c25b33f8596ac469edf80f120cd69",
          "md5": "a67bd8ee05073ce567eb599c5b62713f",
          "sha256": "ad50ae909df30a3c6ca8a5659724db53bfd41c55e84da9f1ca819ebb011a23d4"
        },
        "downloads": -1,
        "filename": "vgamepad-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "a67bd8ee05073ce567eb599c5b62713f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1168959,
        "upload_time": "2022-03-06T05:04:23",
        "upload_time_iso_8601": "2022-03-06T05:04:23.140537Z",
        "url": "https://files.pythonhosted.org/packages/4d/ee/1a4a214ed7d3d58d01867766acd42e6c25b33f8596ac469edf80f120cd69/vgamepad-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4dee1a4a214ed7d3d58d01867766acd42e6c25b33f8596ac469edf80f120cd69",
        "md5": "a67bd8ee05073ce567eb599c5b62713f",
        "sha256": "ad50ae909df30a3c6ca8a5659724db53bfd41c55e84da9f1ca819ebb011a23d4"
      },
      "downloads": -1,
      "filename": "vgamepad-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "a67bd8ee05073ce567eb599c5b62713f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1168959,
      "upload_time": "2022-03-06T05:04:23",
      "upload_time_iso_8601": "2022-03-06T05:04:23.140537Z",
      "url": "https://files.pythonhosted.org/packages/4d/ee/1a4a214ed7d3d58d01867766acd42e6c25b33f8596ac469edf80f120cd69/vgamepad-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}