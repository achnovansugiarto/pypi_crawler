{
  "info": {
    "author": "['M.Yasin SAGLAM']",
    "author_email": "myasinsaglam@crypttech.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Security",
      "Topic :: Software Development",
      "Topic :: Text Processing",
      "Topic :: Utilities"
    ],
    "description": "<!-- PROJECT SHIELDS -->\n<!--\n*** I'm using markdown \"reference style\" links for readability.\n*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).\n*** See the bottom of this document for the declaration of the reference variables\n*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.\n*** https://www.markdownguide.org/basic-syntax/#reference-style-links\n-->\n[![Pypi Downloads][downloads-badge]](https://pypi.org/project/secpip/)\n[![Contributors][contributors-shield]][contributors-url]\n[![Forks][forks-shield]][forks-url]\n[![Stargazers][stars-shield]][stars-url]\n[![Issues][issues-shield]][issues-url]\n[![MIT License][license-shield]][license-url]\n[![LinkedIn][linkedin-shield]][linkedin-url]\n\n\n\n\n<!-- PROJECT LOGO -->  \n<br />  \n<p align=\"center\">  \n  <a href=\"https://github.com/myasinsaglam/secpip\">\n    <img src=\"https://github.com/myasinsaglam/secpip/blob/master/images/logo.png\" alt=\"Logo\" width=\"664\" height=\"233\">\n  </a>\n\n  <h3 align=\"center\">Secpip - Secure Pip Package Management Tool </h3>\n  <p align=\"center\">  \n    Secpip is command line interface to manage (install, download, uninstall, migrate) python libraries securely. \n    <br />  \n    <a href=\"https://github.com/myasinsaglam/secpip\"><strong>Explore the docs »</strong></a>  \n    <br />  \n    <br />  \n    <a href=\"https://github.com/myasinsaglam/secpip\">View Demo</a>  \n    ·  \n    <a href=\"https://github.com/myasinsaglam/secpip/issues\">Report Bug</a>  \n    ·  \n    <a href=\"https://github.com/myasinsaglam/secpip/issues\">Request Feature</a>  \n  </p>  \n</p>  \n\n\n<!-- TABLE OF CONTENTS -->  \n## Table of Contents  \n\n* [About the Project](#about-the-project)  \n* [Getting Started](#getting-started)  \n  * [Prerequisites](#prerequisites)  \n  * [Installation](#installation)  \n* [Usage](#usage)  \n* [Roadmap](#roadmap)  \n* [Contributing](#contributing)  \n* [License](#license)  \n* [Contact](#contact)  \n* [Acknowledgements](#acknowledgements)  \n\n\n\n\n<!-- ABOUT THE PROJECT -->  \n## About The Project  \n\n\nSecpip is command line interface to manage pip packages in secure way.  \nSecpip controls the given package version has known vulnerability or not according to vulnerability database published as [safety-db](https://github.com/pyupio/safety-db).   \nIf given package has vulnerability, Secpip tries to find available secure versions of package.  \nAfter secure version of package found, it automatically install the secure package (if '--secure' and '--auto' tags are used).  \n\nAbilities of Secpip  \n\n- Package vulnerability check and extraction from virtual environments.  \n\n- Downloads pip packages(secure) if offline installation needed to another environments or nodes.  \n\n- You can install libraries as online and offline to virtual environments by using Secpip easily.   \n\n- It is based on pip(wraps pip commands) so you need to install pip.  \n\n- It checks python package security conditions by using safety library according to published vulnerabilities.  \n\n- It create a report the result of operation.  \n\n- It create/build/dump python virtual environments.  \n\n- It uninstall multiple packages from virtual environment with one command by taking requirements file.  \n\n- It migrate virtual environment to another one or new one securely.  \n\n\n\n\n<!-- GETTING STARTED -->  \n## Getting Started  \n\nDefinitions and examples about installation and usage of Secpip modules.  \nYou can follow these steps to install and use Secpip.  \n\n### Prerequisites  \n\n- python3  \n- pip   \n- virtualenv : A tool for creating isolated virtual python environments.   \n\n\n### Installation  \n\n- #### Firstly Install python 3 and pip.  \n\n#### Install From Repo\n\n  1. Clone the repo  \n  ```shell  \n  git clone https://github.com/myasinsaglam/secpip.git\n  ```  \n\n  2. Install Requirements from requirements.txt  \n  ```shell  \n  pip install -r requirements.txt\n  ```  \n  3. Install Secpip\n\n  In project directory run\n  ```shell\n  pip install .\n  ```\n  or\n  ```shell\n  python setup.py install\n  ```\n\n#### Install via pip\n  ```shell\n  pip install secpip\n  ```\n\n<!-- USAGE EXAMPLES -->  \n## Usage:\nEntrypoints and example commands explained here.\n### Entrypoint\n```text\nusage: secpip <command> [<args>]\nCommands:\n  install               Install pip packages by using secpip abilities (secure, report, auto_mode)\n  dump                  Package/Download pip packages by using secpip abilities (secure, report, auto_mode)\n  uninstall             Uninstall pip packages from venv as single or batch from requirements\n  migrate               Migrate virtual environment to another one securely\n  sync                  Synchronize Database from web\nGeneral Options:\n  --secure              Secure option to check known vulnerabilities. If package is not secure operation not allowed to package\n  --auto                Use with secure option. It replace vulnerable package with next secure version, If no secure package exists it create warning and install insecure one.      \n\nSecure pip package manager...\n\npositional arguments:\n  command     {install, dump, uninstall}\n\noptional arguments:\n  -h, --help  show this help message and exit\n\n```\n\n\n### Install \n\nInstall command description and arguments\n\n```text  \n\nusage: secpip install [-h] [--secure] [--auto] [--report REPORT_DIR]\n              [-v ENVIRONMENT_DIR] [-p PACKAGE_DIR] [-r REQUIREMENTS_DIR]\n\nInstall pip packages as online or offline with security check\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --secure              A flag for security check option\n  --auto                A flag for auto correct versions by replacing secure\n                        one\n  --report REPORT_DIR   Report Extraction Option\n  -v ENVIRONMENT_DIR, --venv_dir ENVIRONMENT_DIR\n                        Python environment path to install modules\n  -p PACKAGE_DIR, --package_dir PACKAGE_DIR\n                        Downloaded package directory for offline install\n  -r REQUIREMENTS_DIR, --requirements_file REQUIREMENTS_DIR\n                        Requirements txt i/o file path, default is\n                        {current_path}/requirements.txt\n\n```\n\n#### Examples\n- ##### Optional flags\n\n  [--secure] - security check if package not secure, operation is not allowed on vulnerable package\n\n  [--auto] - auto replace with secure version\n\n  [--report] report filename - writes operation report to given file. \n\n\n- ##### Online single package install to virtual environment(optional - if not it installs current python environment) \n\n```shell\nsecpip install [package name] -v [venv dir] --secure --auto\n```\n\n- ##### Offline single package install from package directory to virtual environment(optional - if not it installs current python environment) \n\n```shell\nsecpip install [package name] -v [venv dir] -p [downloaded package directory] --secure --auto\n```\n\n- ##### Online install packages from requirements file to virtual environment\n```shell\nsecpip install -r [requirements path] -v [venv dir] --secure --auto  --report [report filename]\n```\n\n- ##### Offline install requirements file packages from package directory to virtual environment(optional - if not it installs current python environment) \n```shell\nsecpip install -r [requirements path] -v [venv dir] -p [downloaded package directory] --secure --auto\n```\n\n\n\n### Dump\nDump command description and arguments\n```text\nusage: secpip dump [-h] [--secure] [--auto] [--report REPORT_DIR]\n              [-v ENVIRONMENT_DIR] [-p PACKAGE_DIR] [-r REQUIREMENTS_DIR]\n\nDump pip packages:\n            - from package name to to directory as setup file\n            - from requirements to directory as setup files\n            - from venv to directory as setup files\n            - from venv to requirements as metadata\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --secure              A flag for security check option\n  --auto                A flag for auto correct versions\n  --report REPORT_DIR   Report Extraction Option\n  -v ENVIRONMENT_DIR, --venv_dir ENVIRONMENT_DIR\n                        Python environment path to extract installed modules\n  -p PACKAGE_DIR, --package_dir PACKAGE_DIR\n                        Downloaded package directory for offline install\n  -r REQUIREMENTS_DIR, --requirements_file REQUIREMENTS_DIR\n                        Requirements txt i/o file path, default is\n                        {current_path}/requirements.txt\n```\n#### Examples\n\n- ##### Optional flags\n\n  [--secure] - security check if package not secure, operation is not allowed on vulnerable package\n\n  [--auto] - auto replace with secure version\n\n  [--report] report filename - writes operation report to given file. \n\n\n- ##### Single package download to directory\n\n```shell\nsecpip dump [package name] -p [directory to download] --secure --auto\n```\n\n- ##### Download packages from virtual environment to directory \n```shell\nsecpip dump -v [venv dir] -p [downloaded package directory] --secure --auto\n```\n\n- ##### Download packages from requirements file to directory \n```shell\nsecpip dump -r [requirements path] -p [downloaded package directory] --secure --auto\n```\n\n\n### Uninstall\nDump command description and arguments. This command just added to uninstall multiple packages. :)\n- Multiple packages can be uninstall from environment by using requirements file argument.\n```text\n\nusage: secpip uninstall [-h] [-venv ENVIRONMENT_DIR] [-r REQUIREMENTS_DIR]\n\nUninstall pip packages as batch by using requirement file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v ENVIRONMENT_DIR, --venv_dir ENVIRONMENT_DIR\n                        Python environment path that will be uninstall modules\n                        from\n  -r REQUIREMENTS_DIR, --requirements_file REQUIREMENTS_DIR\n                        Requirements txt i/o file path, default is\n                        {current_path}/requirements.txt\n```\n#### Examples\n- ##### Optional flags\n  [-v], [--venv_dir] - Environment directory is optional if not given it uses currently active python environment.\n\n\n- ##### Single package uninstall from environment\n\n```shell\nsecpip uninstall [package name] -v [venv dir] --secure --auto\n```\n\n- ##### Multiple package uninstall from environment\n```shell\nsecpip uninstall -r [requirements path] -v [venv dir] --secure --auto\n```\n\n### Migrate\nMigrate command description and arguments\n\n```text\n\nusage: secpip migrate [-h] [--secure] [--auto] [--report REPORT_DIR] -s SRC_VENV -d\n              DST_VENV\n\nMigrate virtual environment to another virtual environment\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --secure              A flag for security check option\n  --auto                A flag for auto correct versions\n  --report REPORT_DIR   Report Extraction Option\n  -s SRC_VENV, --src SRC_VENV\n                        Source Python environment path to migrate modules\n  -d DST_VENV, --dst DST_VENV\n                        Destination Python environment path to migrate modules\n```\n#### Examples\n- ##### Optional flags\n\n  [--secure] - security check if package not secure, operation is not allowed on vulnerable package\n\n  [--auto] - auto replace with secure version\n\n  [--report] report filename - writes operation report to given file. \n\n\n- ##### Migrate virtual env to another new one securely\n\n```shell\nsecpip migrate -s [Source Python environment path] -d [Destination Python environment path] --secure --auto\n```\n\n\n### Sync:\nJust run command below to sync vulnerability database.\n```shell\nsecpip sync\n```\n\n\n\n<!-- ROADMAP -->  \n## Roadmap  \n  - Improve Windows support -- It can only be installed in virtual environment \n  - Add excluded packages option\n  - Collect vulnerabilities from different sources, validate and extend vulnerability database with Ai (apply Nlp techniques on vulnerability sources, source code analysis etc.)\n  - Service for vulnerability check\n\nSee the [open issues](https://github.com/myasinsaglam/secpip/issues) for a list of proposed features (and known issues).  \n\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nContributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n\n\n\n<!-- LICENSE -->\n## License\n\nDistributed under the MIT License. See `LICENSE` for more information.\n\n\n<!-- CONTACT -->\n## Contact\n\n[M.Yasin SAGLAM](https://www.linkedin.com/in/myasinsaglam/?locale=en_US) - myasinsaglam@crypttech.com\n\nProject Link: [https://github.com/myasinsaglam/secpip](https://github.com/myasinsaglam/secpip)\n\n\n<!-- ACKNOWLEDGEMENTS-->  \n## Acknowledgements\n* This project was supported by the [CRYPTTECH](https://www.crypttech.com/en/)\n* [safety-db](https://github.com/pyupio/safety-db)\n* [best-readme-template](https://github.com/othneildrew/Best-README-Template)\n\n\n\n\n<!-- MARKDOWN LINKS & IMAGES -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n[contributors-shield]: https://img.shields.io/github/contributors/myasinsaglam/secpip.svg?style=for-the-badge\n[contributors-url]: https://github.com/myasinsaglam/secpip/graphs/contributors\n[forks-shield]: https://img.shields.io/github/forks/myasinsaglam/secpip.svg?style=for-the-badge\n[forks-url]: https://img.shields.io/github/forks/myasinsaglam/secpip/network/members\n[stars-shield]: https://img.shields.io/github/stars/myasinsaglam/secpip.svg?style=for-the-badge\n[stars-url]: https://img.shields.io/github/stars/myasinsaglam/secpip/stargazers\n[issues-shield]: https://img.shields.io/github/issues/myasinsaglam/secpip.svg?style=for-the-badge\n[issues-url]: https://github.com/myasinsaglam/secpip/issues\n[license-shield]: https://img.shields.io/github/license/myasinsaglam/secpip.svg?style=for-the-badge\n[license-url]: https://github.com/myasinsaglam/secpip/blob/master/LICENSE.md\n[linkedin-shield]: https://img.shields.io/badge/-LinkedIn-black.svg?style=for-the-badge&logo=linkedin&colorB=555\n[linkedin-url]: https://www.linkedin.com/in/myasinsaglam/?locale=en_US\n[downloads-badge]: https://img.shields.io/pypi/dd/secpip?style=for-the-badge\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/myasinsaglam/secpip",
    "keywords": "secpip python pip security vulnerability secure package install manage dump download report migrate uninstall",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "secpip",
    "package_url": "https://pypi.org/project/secpip/",
    "platform": "",
    "project_url": "https://pypi.org/project/secpip/",
    "project_urls": {
      "Homepage": "https://github.com/myasinsaglam/secpip"
    },
    "release_url": "https://pypi.org/project/secpip/1.0.0rc1/",
    "requires_dist": [
      "packaging",
      "pip (==20.2.4)",
      "requests",
      "termcolor",
      "virtualenv"
    ],
    "requires_python": "",
    "summary": "Secure Pip Package Management Tool",
    "version": "1.0.0rc1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8980531,
  "releases": {
    "1.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2376b96a2201232c589e0d06642ace2ee6ec29bc4db9893fdf9a5faef1c3cb0",
          "md5": "2268426a3f56ecb18b9619aca27fcc8e",
          "sha256": "c3c87d1e292b8e6311ea17429389a67bbcda4a556f10f2a36163eacfe39ded3c"
        },
        "downloads": -1,
        "filename": "secpip-1.0.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2268426a3f56ecb18b9619aca27fcc8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 173647,
        "upload_time": "2020-12-24T20:55:24",
        "upload_time_iso_8601": "2020-12-24T20:55:24.727951Z",
        "url": "https://files.pythonhosted.org/packages/e2/37/6b96a2201232c589e0d06642ace2ee6ec29bc4db9893fdf9a5faef1c3cb0/secpip-1.0.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a35aa6c4db78e9eb04c4c0954eeac0af6587c79fb516b0890b791ce88344753b",
          "md5": "91950442d3511de388536448c0fc4fbb",
          "sha256": "01a42156b6fa6c4cb71f91ff532d9635a80e026db3826354a13b9f5345cedc43"
        },
        "downloads": -1,
        "filename": "secpip-1.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "91950442d3511de388536448c0fc4fbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 176684,
        "upload_time": "2020-12-24T20:55:26",
        "upload_time_iso_8601": "2020-12-24T20:55:26.299204Z",
        "url": "https://files.pythonhosted.org/packages/a3/5a/a6c4db78e9eb04c4c0954eeac0af6587c79fb516b0890b791ce88344753b/secpip-1.0.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2376b96a2201232c589e0d06642ace2ee6ec29bc4db9893fdf9a5faef1c3cb0",
        "md5": "2268426a3f56ecb18b9619aca27fcc8e",
        "sha256": "c3c87d1e292b8e6311ea17429389a67bbcda4a556f10f2a36163eacfe39ded3c"
      },
      "downloads": -1,
      "filename": "secpip-1.0.0rc1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2268426a3f56ecb18b9619aca27fcc8e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 173647,
      "upload_time": "2020-12-24T20:55:24",
      "upload_time_iso_8601": "2020-12-24T20:55:24.727951Z",
      "url": "https://files.pythonhosted.org/packages/e2/37/6b96a2201232c589e0d06642ace2ee6ec29bc4db9893fdf9a5faef1c3cb0/secpip-1.0.0rc1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a35aa6c4db78e9eb04c4c0954eeac0af6587c79fb516b0890b791ce88344753b",
        "md5": "91950442d3511de388536448c0fc4fbb",
        "sha256": "01a42156b6fa6c4cb71f91ff532d9635a80e026db3826354a13b9f5345cedc43"
      },
      "downloads": -1,
      "filename": "secpip-1.0.0rc1.tar.gz",
      "has_sig": false,
      "md5_digest": "91950442d3511de388536448c0fc4fbb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 176684,
      "upload_time": "2020-12-24T20:55:26",
      "upload_time_iso_8601": "2020-12-24T20:55:26.299204Z",
      "url": "https://files.pythonhosted.org/packages/a3/5a/a6c4db78e9eb04c4c0954eeac0af6587c79fb516b0890b791ce88344753b/secpip-1.0.0rc1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}