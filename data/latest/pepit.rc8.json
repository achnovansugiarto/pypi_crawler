{
  "info": {
    "author": "Baptiste Goujaud, Céline Moucer, Julien Hendrickx, Francois Glineur, Adrien Taylor and Aymeric Dieuleveut",
    "author_email": "baptiste.goujaud@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PEPit: Performance Estimation in Python\n\n[![PyPI version](https://badge.fury.io/py/PEPit.svg)](https://pypi.python.org/pypi/PEPit/)\n[![Documentation Status](https://readthedocs.org/projects/pepit/badge/?version=latest)](https://pepit.readthedocs.io/en/latest/?badge=latest)\n[![Downloads](https://pepy.tech/badge/pepit)](https://pepy.tech/project/pepit)\n[![License](https://img.shields.io/github/license/PerformanceEstimation/PEPit.svg)](https://github.com/PerformanceEstimation/PEPit/blob/master/LICENSE)\n\nThis open source Python library provides a generic way to use PEP framework in Python.\nPerformance estimation problems were introduced in 2014 by **Yoel Drori** and **Marc Teboulle**, see [1].\nPEPit is mainly based on the formalism and developments from [2, 3] by a subset of the authors of this toolbox.\nA friendly informal introduction to this formalism is available in this [blog post](https://francisbach.com/computer-aided-analyses/)\nand a corresponding Matlab library is presented in [4] ([PESTO](https://github.com/AdrienTaylor/Performance-Estimation-Toolbox)).\n\nWebsite and documentation of PEPit: [https://pepit.readthedocs.io/](https://pepit.readthedocs.io/)\n\nSource Code (MIT): [https://github.com/PerformanceEstimation/PEPit](https://github.com/PerformanceEstimation/PEPit)\n\n## Using and citing the toolbox\n\nThis code comes jointly with the following [`reference`](https://arxiv.org/pdf/2201.04040.pdf):\n\n    B. Goujaud, C. Moucer, F. Glineur, J. Hendrickx, A. Taylor, A. Dieuleveut (2022).\n    \"PEPit: computer-assisted worst-case analyses of first-order optimization methods in Python.\"\n\nWhen using the toolbox in a project, please refer to this note via this Bibtex entry:\n\n```bibtex\n@article{pepit2022,\n  title={{PEPit}: computer-assisted worst-case analyses of first-order optimization methods in {P}ython},\n  author={Goujaud, Baptiste and Moucer, C\\'eline and Glineur, Fran\\c{c}ois and Hendrickx, Julien and Taylor, Adrien and Dieuleveut, Aymeric},\n  journal={arXiv preprint arXiv:2201.04040},\n  year={2022}\n}\n```\n\n\n## Demo [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/PerformanceEstimation/PEPit/blob/master/ressources/demo/PEPit_demo.ipynb)\n\n\nThis [notebook](https://github.com/PerformanceEstimation/PEPit/blob/master/ressources/demo/PEPit_demo.ipynb) provides a demonstration of how to use PEPit to obtain a worst-case guarantee on a simple algorithm (gradient descent), and a more advanced analysis of three other examples.\n\n\n\n\n## Installation\n\nThe library has been tested on Linux and MacOSX.\nIt relies on the following Python modules:\n\n- Numpy\n- Scipy\n- Cvxpy\n- Matplotlib (for the demo notebook)\n\n\n### Pip installation\n\nYou can install the toolbox through PyPI with:\n\n```console\npip install pepit\n```\n\nor get the very latest version by running:\n\n```console\npip install -U https://github.com/PerformanceEstimation/PEPit/archive/master.zip # with --user for user install (no root)\n```\n\n### Post installation check\nAfter a correct installation, you should be able to import the module without errors:\n\n```python\nimport PEPit\n```\n\n### Online environment\nYou can also try the package in this Binder repository. [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/PerformanceEstimation/PEPit/HEAD)\n\n## Example\n\nThe folder [Examples](https://pepit.readthedocs.io/en/latest/examples.html#) contains numerous introductory examples to the toolbox.\n\nAmong the other examples, the following code (see [`GradientMethod`](https://pepit.readthedocs.io/en/latest/examples/a.html#gradient-descent))\ngenerates a worst-case scenario for <img src=\"https://render.githubusercontent.com/render/math?math=N\"> iterations of the gradient method, applied to the minimization of a smooth (possibly strongly) convex function f(x).\nMore precisely, this code snippet allows computing the worst-case value of <img src=\"https://render.githubusercontent.com/render/math?math=f(x_N)-f_\\star\"> when <img src=\"https://render.githubusercontent.com/render/math?math=x_N\"> is generated by gradient descent, and when <img src=\"https://render.githubusercontent.com/render/math?math=\\|x_0-x_\\star\\|=1\">.\n\n```Python\nfrom PEPit import PEP\nfrom PEPit.functions import SmoothStronglyConvexFunction\n\n\ndef wc_gradient_descent(L, gamma, n, verbose=1):\n    \"\"\"\n    Consider the convex minimization problem\n\n    .. math:: f_\\\\star \\\\triangleq \\\\min_x f(x),\n\n    where :math:`f` is :math:`L`-smooth and convex.\n\n    This code computes a worst-case guarantee for **gradient descent** with fixed step-size :math:`\\\\gamma`.\n    That is, it computes the smallest possible :math:`\\\\tau(n, L, \\\\gamma)` such that the guarantee\n\n    .. math:: f(x_n) - f_\\\\star \\\\leqslant \\\\tau(n, L, \\\\gamma) \\\\|x_0 - x_\\\\star\\\\|^2\n\n    is valid, where :math:`x_n` is the output of gradient descent with fixed step-size :math:`\\\\gamma`, and\n    where :math:`x_\\\\star` is a minimizer of :math:`f`.\n\n    In short, for given values of :math:`n`, :math:`L`, and :math:`\\\\gamma`, :math:`\\\\tau(n, L, \\\\gamma)` is computed as the worst-case\n    value of :math:`f(x_n)-f_\\\\star` when :math:`\\\\|x_0 - x_\\\\star\\\\|^2 \\\\leqslant 1`.\n\n    **Algorithm**:\n    Gradient descent is described by\n\n    .. math:: x_{t+1} = x_t - \\\\gamma \\\\nabla f(x_t),\n\n    where :math:`\\\\gamma` is a step-size.\n\n    **Theoretical guarantee**:\n    When :math:`\\\\gamma \\\\leqslant \\\\frac{1}{L}`, the **tight** theoretical guarantee can be found in [1, Theorem 3.1]:\n\n    .. math:: f(x_n)-f_\\\\star \\\\leqslant \\\\frac{L}{4nL\\\\gamma+2} \\\\|x_0-x_\\\\star\\\\|^2,\n\n    which is tight on some Huber loss functions.\n\n    **References**:\n\n    `[1] Y. Drori, M. Teboulle (2014). Performance of first-order methods for smooth convex minimization: a novel\n    approach. Mathematical Programming 145(1–2), 451–482.\n    <https://arxiv.org/pdf/1206.3209.pdf>`_\n\n    Args:\n        L (float): the smoothness parameter.\n        gamma (float): step-size.\n        n (int): number of iterations.\n        verbose (int): Level of information details to print.\n                        \n                        - -1: No verbose at all.\n                        - 0: This example's output.\n                        - 1: This example's output + PEPit information.\n                        - 2: This example's output + PEPit information + CVXPY details.\n\n    Returns:\n        pepit_tau (float): worst-case value\n        theoretical_tau (float): theoretical value\n\n    Example:\n        >>> L = 3\n        >>> pepit_tau, theoretical_tau = wc_gradient_descent(L=L, gamma=1 / L, n=4, verbose=1)\n        (PEPit) Setting up the problem: size of the main PSD matrix: 7x7\n        (PEPit) Setting up the problem: performance measure is minimum of 1 element(s)\n        (PEPit) Setting up the problem: Adding initial conditions and general constraints ...\n        (PEPit) Setting up the problem: initial conditions and general constraints (1 constraint(s) added)\n        (PEPit) Setting up the problem: interpolation conditions for 1 function(s)\n                         function 1 : Adding 30 scalar constraint(s) ...\n                         function 1 : 30 scalar constraint(s) added\n        (PEPit) Compiling SDP\n        (PEPit) Calling SDP solver\n        (PEPit) Solver status: optimal (solver: SCS); optimal value: 0.16666664596175398\n        *** Example file: worst-case performance of gradient descent with fixed step-sizes ***\n                PEPit guarantee:         f(x_n)-f_* <= 0.166667 ||x_0 - x_*||^2\n                Theoretical guarantee:   f(x_n)-f_* <= 0.166667 ||x_0 - x_*||^2\n\n    \"\"\"\n\n    # Instantiate PEP\n    problem = PEP()\n\n    # Declare a strongly convex smooth function\n    func = problem.declare_function(SmoothStronglyConvexFunction, mu=0, L=L)\n\n    # Start by defining its unique optimal point xs = x_* and corresponding function value fs = f_*\n    xs = func.stationary_point()\n    fs = func(xs)\n\n    # Then define the starting point x0 of the algorithm\n    x0 = problem.set_initial_point()\n\n    # Set the initial constraint that is the distance between x0 and x^*\n    problem.set_initial_condition((x0 - xs) ** 2 <= 1)\n\n    # Run n steps of the GD method\n    x = x0\n    for _ in range(n):\n        x = x - gamma * func.gradient(x)\n\n    # Set the performance metric to the function values accuracy\n    problem.set_performance_metric(func(x) - fs)\n\n    # Solve the PEP\n    pepit_verbose = max(verbose, 0)\n    pepit_tau = problem.solve(verbose=pepit_verbose)\n\n    # Compute theoretical guarantee (for comparison)\n    theoretical_tau = L / (2 * (2 * n * L * gamma + 1))\n\n    # Print conclusion if required\n    if verbose != -1:\n        print('*** Example file: worst-case performance of gradient descent with fixed step-sizes ***')\n        print('\\tPEPit guarantee:\\t f(x_n)-f_* <= {:.6} ||x_0 - x_*||^2'.format(pepit_tau))\n        print('\\tTheoretical guarantee:\\t f(x_n)-f_* <= {:.6} ||x_0 - x_*||^2'.format(theoretical_tau))\n\n    # Return the worst-case guarantee of the evaluated method (and the reference theoretical value)\n    return pepit_tau, theoretical_tau\n\n\nif __name__ == \"__main__\":\n    L = 3\n    pepit_tau, theoretical_tau = wc_gradient_descent(L=L, gamma=1 / L, n=4, verbose=1)\n\n```\n\n### Included tools\n\nA lot of common optimization methods can be studied through this framework,\nusing numerous steps and under a large variety of function / operator classes.\n\nPEPit provides the following [steps](https://pepit.readthedocs.io/en/latest/api/steps.html) (often referred to as \"oracles\"):\n\n- [Inexact gradient step](https://pepit.readthedocs.io/en/latest/api/steps.html#inexact-gradient-step)\n- [Exact line-search step](https://pepit.readthedocs.io/en/latest/api/steps.html#exact-line-search-step)\n- [Proximal step](https://pepit.readthedocs.io/en/latest/api/steps.html#proximal-step)\n- [Inexact proximal step](https://pepit.readthedocs.io/en/latest/api/steps.html#inexact-proximal-step)\n- [Bregman gradient step](https://pepit.readthedocs.io/en/latest/api/steps.html#bregman-gradient-step)\n- [Bregman proximal step](https://pepit.readthedocs.io/en/latest/api/steps.html#bregman-proximal-step)\n- [Linear optimization step](https://pepit.readthedocs.io/en/latest/api/steps.html#linear-optimization-step)\n- [Epsilon-subgradient step](https://pepit.readthedocs.io/en/latest/api/steps.html#epsilon-subgradient-step)\n\nPEPit provides the following [function classes](https://pepit.readthedocs.io/en/latest/api/functions.html) CNIs:\n\n- [Convex](https://pepit.readthedocs.io/en/latest/api/functions.html#convex)\n- [Strongly convex](https://pepit.readthedocs.io/en/latest/api/functions.html#strongly-convex)\n- [Smooth](https://pepit.readthedocs.io/en/latest/api/functions.html#smooth)\n- [Convex and smooth](https://pepit.readthedocs.io/en/latest/api/functions.html#convex-and-smooth)\n- [Strongly convex and smooth](https://pepit.readthedocs.io/en/latest/api/functions.html#strongly-convex-and-smooth)\n- [Convex and Lipschitz continuous](https://pepit.readthedocs.io/en/latest/api/functions.html#convex-and-lipschitz-continuous)\n- [Convex indicator](https://pepit.readthedocs.io/en/latest/api/functions.html#convex-indicator)\n- [Convex support](https://pepit.readthedocs.io/en/latest/api/functions.html#convex-support-functions)\n- [Convex quadratically growing](https://pepit.readthedocs.io/en/latest/api/functions.html#convex-and-quadratically-upper-bounded)\n- [Functions verifying restricted secant inequality and upper error bound](https://pepit.readthedocs.io/en/latest/api/functions.html#restricted-secant-inequality-and-error-bound)\n\nPEPit provides the following [operator classes](https://pepit.readthedocs.io/en/latest/api/operators.html) CNIs:\n\n- [Monotone](https://pepit.readthedocs.io/en/latest/api/operators.html#monotone)\n- [Strongly monotone](https://pepit.readthedocs.io/en/latest/api/operators.html#strongly-monotone)\n- [Lipschitz continuous](https://pepit.readthedocs.io/en/latest/api/operators.html#lipschitz-continuous)\n- [Strongly monotone and Lipschitz continuous](https://pepit.readthedocs.io/en/latest/api/operators.html#strongly-monotone-and-lipschitz-continuous)\n- [Cocoercive](https://pepit.readthedocs.io/en/latest/api/operators.html#cocoercive)\n\n\n## Authors\n\nThis toolbox has been created by\n\n- [**Baptiste Goujaud**](https://www.linkedin.com/in/baptiste-goujaud-b60060b3/) (main contributor #1) \n- [**Céline Moucer**](https://www.linkedin.com/in/c%C3%A9line-moucer-88068b173/) (main contributor #2)\n- [**Julien Hendrickx**](https://perso.uclouvain.be/julien.hendrickx/index.html) (project supervision)\n- [**François Glineur**](https://perso.uclouvain.be/francois.glineur/) (project supervision)\n- [**Adrien Taylor**](https://adrientaylor.github.io/) (contributor & main project supervision)\n- [**Aymeric Dieuleveut**](http://www.cmap.polytechnique.fr/~aymeric.dieuleveut/) (contributor & main project supervision)\n\n### Acknowledgments\n\nThe authors would like to thank [**Rémi Flamary**](https://remi.flamary.com/)\nfor his feedbacks on preliminary versions of the toolbox,\nas well as for support regarding the continuous integration.\n\n## Contributions\n\nAll external contributions are welcome.\nPlease read the [contribution guidelines](https://pepit.readthedocs.io/en/latest/contributing.html).\n\n## References\n\n[1] Y. Drori, M. Teboulle (2014).\n[Performance of first-order methods for smooth convex minimization: a novel approach.](https://arxiv.org/pdf/1206.3209.pdf)\nMathematical Programming 145(1–2), 451–482.\n\n[2] A. Taylor, J. Hendrickx, F. Glineur (2017).\n[Smooth strongly convex interpolation and exact worst-case performance of first-order methods.](https://arxiv.org/pdf/1502.05666.pdf)\nMathematical Programming, 161(1-2), 307-345.\n\n[3] A. Taylor, J. Hendrickx, F. Glineur (2017).\n[Exact worst-case performance of first-order methods for composite convex optimization.](https://arxiv.org/pdf/1512.07516.pdf)\nSIAM Journal on Optimization, 27(3):1283–1313.\n\n[4] A. Taylor, J. Hendrickx, F. Glineur (2017).\n[Performance Estimation Toolbox (PESTO): automated worst-case analysis of first-order optimization methods.](https://adrientaylor.github.io/share/PESTO_CDC_2017.pdf)\nIn 56th IEEE Conference on Decision and Control (CDC).\n\n[5] A. d’Aspremont, D. Scieur, A. Taylor (2021).\n[Acceleration Methods.](https://arxiv.org/pdf/2101.09545.pdf)\nFoundations and Trends in Optimization: Vol. 5, No. 1-2.\n\n[6] O. Güler (1992).\n[New proximal point algorithms for convex minimization.](https://epubs.siam.org/doi/abs/10.1137/0802032?mobileUi=0)\nSIAM Journal on Optimization, 2(4):649–664.\n\n[7] Y. Drori (2017).\n[The exact information-based complexity of smooth convex minimization.](https://arxiv.org/pdf/1606.01424.pdf)\nJournal of Complexity, 39, 1-16.\n\n[8] E. De Klerk, F. Glineur, A. Taylor (2017).\n[On the worst-case complexity of the gradient method with exact line search for smooth strongly convex functions.](https://link.springer.com/content/pdf/10.1007/s11590-016-1087-4.pdf)\nOptimization Letters, 11(7), 1185-1199.\n\n[9] B.T. Polyak (1964).\n[Some methods of speeding up the convergence of iteration method.](https://www.sciencedirect.com/science/article/pii/0041555364901375)\nURSS Computational Mathematics and Mathematical Physics.\n\n[10] E. Ghadimi, H. R. Feyzmahdavian, M. Johansson (2015).\n[Global convergence of the Heavy-ball method for convex optimization.](https://arxiv.org/pdf/1412.7457.pdf)\nEuropean Control Conference (ECC).\n\n[11] E. De Klerk, F. Glineur, A. Taylor (2020).\n[Worst-case convergence analysis of inexact gradient and Newton methods through semidefinite programming performance estimation.](https://arxiv.org/pdf/1709.05191.pdf)\nSIAM Journal on Optimization, 30(3), 2053-2082.\n\n[12] O. Gannot (2021).\n[A frequency-domain analysis of inexact gradient methods.](https://arxiv.org/pdf/1912.13494.pdf)\nMathematical Programming.\n\n[13] D. Kim, J. Fessler (2016).\n[Optimized first-order methods for smooth convex minimization.](https://arxiv.org/pdf/1406.5468.pdf)\nMathematical Programming 159.1-2: 81-107.\n\n[14] S. Cyrus, B. Hu, B. Van Scoy, L. Lessard (2018).\n[A robust accelerated optimization algorithm for strongly convex functions.](https://arxiv.org/pdf/1710.04753.pdf)\nAmerican Control Conference (ACC).\n\n[15] Y. Nesterov (2003).\n[Introductory lectures on convex optimization: A basic course.](https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.693.855&rep=rep1&type=pdf)\nSpringer Science & Business Media.\n\n[16] S. Boyd, L. Xiao, A. Mutapcic (2003).\n[Subgradient Methods (lecture notes).](https://web.stanford.edu/class/ee392o/subgrad_method.pdf)\n\n[17] Y. Drori, M. Teboulle (2016).\n[An optimal variant of Kelley's cutting-plane method.](https://arxiv.org/pdf/1409.2636.pdf)\nMathematical Programming, 160(1), 321-351.\n\n[18] Van Scoy, B., Freeman, R. A., Lynch, K. M. (2018).\n[The fastest known globally convergent first-order method for minimizing strongly convex functions.](http://www.optimization-online.org/DB_FILE/2017/03/5908.pdf)\nIEEE Control Systems Letters, 2(1), 49-54.\n\n[19] P. Patrinos, L. Stella, A. Bemporad (2014).\n[Douglas-Rachford splitting: Complexity estimates and accelerated variants.](https://arxiv.org/pdf/1407.6723.pdf)\nIn 53rd IEEE Conference on Decision and Control (CDC).\n\n[20] Y. Censor, S.A. Zenios (1992).\n[Proximal minimization algorithm with D-functions.](https://link.springer.com/content/pdf/10.1007/BF00940051.pdf)\nJournal of Optimization Theory and Applications, 73(3), 451-464.\n\n[21] E. Ryu, S. Boyd (2016).\n[A primer on monotone operator methods.](https://web.stanford.edu/~boyd/papers/pdf/monotone_primer.pdf)\nApplied and Computational Mathematics 15(1), 3-43.\n\n[22] E. Ryu, A. Taylor, C. Bergeling, P. Giselsson (2020).\n[Operator splitting performance estimation: Tight contraction factors and optimal parameter selection.](https://arxiv.org/pdf/1812.00146.pdf)\nSIAM Journal on Optimization, 30(3), 2251-2271.\n\n[23] P. Giselsson, and S. Boyd (2016).\n[Linear convergence and metric selection in Douglas-Rachford splitting and ADMM.](https://arxiv.org/pdf/1410.8479.pdf)\nIEEE Transactions on Automatic Control, 62(2), 532-544.\n\n[24] M .Frank, P. Wolfe (1956).\nAn algorithm for quadratic programming.\nNaval research logistics quarterly, 3(1-2), 95-110.\n\n[25] M. Jaggi (2013).\n[Revisiting Frank-Wolfe: Projection-free sparse convex optimization.](http://proceedings.mlr.press/v28/jaggi13.pdf)\nIn 30th International Conference on Machine Learning (ICML).\n\n[26] A. Auslender, M. Teboulle (2006).\n[Interior gradient and proximal methods for convex and conic optimization.](https://epubs.siam.org/doi/pdf/10.1137/S1052623403427823)\nSIAM Journal on Optimization 16.3 (2006): 697-725.\n\n[27] H.H. Bauschke, J. Bolte, M. Teboulle (2017).\n[A Descent Lemma Beyond Lipschitz Gradient Continuity: First-Order Methods Revisited and Applications.](https://cmps-people.ok.ubc.ca/bauschke/Research/103.pdf)\nMathematics of Operations Research, 2017, vol. 42, no 2, p. 330-348\n\n[28] R. Dragomir, A. Taylor, A. d’Aspremont, J. Bolte (2021).\n[Optimal complexity and certification of Bregman first-order methods.](https://arxiv.org/pdf/1911.08510.pdf)\nMathematical Programming, 1-43.\n\n[29] A. Taylor, J. Hendrickx, F. Glineur (2018).\n[Exact worst-case convergence rates of the proximal gradient method for composite convex minimization.](https://arxiv.org/pdf/1705.04398.pdf)\nJournal of Optimization Theory and Applications, 178(2), 455-476.\n\n[30] B. Polyak (1987).\nIntroduction to Optimization.\nOptimization Software New York.\n\n[31] L. Lessard, B. Recht, A. Packard (2016).\n[Analysis and design of optimization algorithms via integral quadratic constraints.](https://arxiv.org/pdf/1408.3595.pdf)\nSIAM Journal on Optimization 26(1), 57–95.\n\n[32] D. Davis, W. Yin (2017).\n[A three-operator splitting scheme and its optimization applications.](https://arxiv.org/pdf/1504.01032.pdf)\nSet-valued and variational analysis, 25(4), 829-858.\n\n[33] Taylor, A. B. (2017).\n[Convex interpolation and performance estimation of first-order methods for convex optimization.](https://dial.uclouvain.be/downloader/downloader.php?pid=boreal:182881&datastream=PDF_01)\nPhD Thesis, UCLouvain.\n\n[34] H. Abbaszadehpeivasti, E. de Klerk, M. Zamani (2021).\n[The exact worst-case convergence rate of the gradient method with fixed step lengths for L-smooth functions.](https://arxiv.org/pdf/2104.05468v3.pdf)\narXiv 2104.05468.\n\n[35] J. Bolte, S. Sabach, M. Teboulle, Y. Vaisbourd (2018).\n[First order methods beyond convexity and Lipschitz gradient continuity with applications to quadratic inverse problems.](https://arxiv.org/pdf/1706.06461.pdf)\nSIAM Journal on Optimization, 28(3), 2131-2151.\n\n[36] A. Defazio (2016).\n[A simple practical accelerated method for finite sums.](https://proceedings.neurips.cc/paper/2016/file/4f6ffe13a5d75b2d6a3923922b3922e5-Paper.pdf)\nAdvances in Neural Information Processing Systems (NIPS), 29, 676-684.\n\n[37] A. Defazio, F. Bach, S. Lacoste-Julien (2014).\n[SAGA: A fast incremental gradient method with support for non-strongly convex composite objectives.](http://papers.nips.cc/paper/2014/file/ede7e2b6d13a41ddf9f4bdef84fdc737-Paper.pdf)\nIn Advances in Neural Information Processing Systems (NIPS).\n\n[38] B. Hu, P. Seiler, L. Lessard (2020).\n[Analysis of biased stochastic gradient descent using sequential semidefinite programs.](https://arxiv.org/pdf/1711.00987.pdf)\nMathematical programming (to appear).\n\n[39] A. Taylor, F. Bach (2019).\n[Stochastic first-order methods: non-asymptotic and computer-aided analyses via potential functions.](https://arxiv.org/pdf/1902.00947.pdf)\nConference on Learning Theory (COLT).\n\n[40] D. Kim (2021).\n[Accelerated proximal point method for maximally monotone operators.](https://arxiv.org/pdf/1905.05149v4.pdf)\nMathematical Programming, 1-31.\n\n[41] W. Moursi, L. Vandenberghe (2019).\n[Douglas–Rachford Splitting for the Sum of a Lipschitz Continuous and a Strongly Monotone Operator.](https://arxiv.org/pdf/1805.09396.pdf)\nJournal of Optimization Theory and Applications 183, 179–198.\n\n[42] G. Gu, J. Yang (2020).\n[Tight sublinear convergence rate of the proximal point algorithm for maximal monotone inclusion problem.](https://epubs.siam.org/doi/pdf/10.1137/19M1299049)\nSIAM Journal on Optimization, 30(3), 1905-1921.\n\n[43] F. Lieder (2021).\n[On the convergence rate of the Halpern-iteration.](http://www.optimization-online.org/DB_FILE/2017/11/6336.pdf)\nOptimization Letters, 15(2), 405-418.\n\n[44] F. Lieder (2018).\n[Projection Based Methods for Conic Linear Programming Optimal First Order Complexities and Norm Constrained Quasi Newton Methods.](https://docserv.uni-duesseldorf.de/servlets/DerivateServlet/Derivate-49971/Dissertation.pdf)\nPhD thesis, HHU Düsseldorf.\n\n[45] Y. Nesterov (1983).\n[A method for solving the convex programming problem with convergence rate :math:`O(1/k^2)`.](http://www.mathnet.ru/links/9bcb158ed2df3d8db3532aafd551967d/dan46009.pdf)\nIn Dokl. akad. nauk Sssr (Vol. 269, pp. 543-547).\n\n[46] N. Bansal, A. Gupta (2019).\n[Potential-function proofs for gradient methods.](https://arxiv.org/pdf/1712.04581.pdf)\nTheory of Computing, 15(1), 1-32.\n\n[47] M. Barre, A. Taylor, F. Bach (2021).\n[A note on approximate accelerated forward-backward methods with absolute and relative errors, and possibly strongly convex objectives.](https://arxiv.org/pdf/2106.15536v2.pdf)\narXiv:2106.15536v2.\n\n[48] J. Eckstein and W. Yao (2018).\n[Relative-error approximate versions of Douglas–Rachford splitting and special cases of the ADMM.](https://link.springer.com/article/10.1007/s10107-017-1160-5)\nMathematical Programming, 170(2), 417-444.\n\n[49] M. Barré, A. Taylor, A. d’Aspremont (2020).\n[Complexity guarantees for Polyak steps with momentum.](https://arxiv.org/pdf/2002.00915.pdf)\nIn Conference on Learning Theory (COLT).\n\n[50] D. Kim, J. Fessler (2017).\n[On the convergence analysis of the optimized gradient method.](https://arxiv.org/pdf/1510.08573.pdf)\nJournal of Optimization Theory and Applications, 172(1), 187-205.\n\n[51] Steven Diamond and Stephen Boyd (2016).\n[CVXPY: A Python-embedded modeling language for convex optimization.](https://arxiv.org/pdf/1603.00943.pdf)\nJournal of Machine Learning Research (JMLR) 17.83.1--5 (2016).\n\n[52] Agrawal, Akshay and Verschueren, Robin and Diamond, Steven and Boyd, Stephen (2018).\n[A rewriting system for convex optimization problems.](https://arxiv.org/pdf/1709.04494.pdf)\nJournal of Control and Decision (JCD) 5.1.42--60 (2018).\n\n[53] Adrien Taylor, Bryan Van Scoy, Laurent Lessard (2018).\n[Lyapunov Functions for First-Order Methods: Tight Automated Convergence Guarantees.](https://arxiv.org/pdf/1803.06073.pdf)\nInternational Conference on Machine Learning (ICML).\n\n[54] C. Guille-Escuret, B. Goujaud, A. Ibrahim, I. Mitliagkas (2022).\n[Gradient Descent Is Optimal Under Lower Restricted Secant Inequality And Upper Error Bound.](https://arxiv.org/pdf/2203.00342.pdf)\n\n[55] B. Goujaud, A. Taylor, A. Dieuleveut (2022).\n[Optimal first-order methods for convex functions with a quadratic upper bound.](https://arxiv.org/pdf/2205.15033.pdf)\n\n[56] B. Goujaud, C. Moucer, F. Glineur, J. Hendrickx, A. Taylor, A. Dieuleveut (2022).\n[PEPit: computer-assisted worst-case analyses of first-order optimization methods in Python.](https://arxiv.org/pdf/2201.04040.pdf)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/PerformanceEstimation/PEPit/archive/refs/tags/0.2.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PerformanceEstimation/PEPit",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PEPit",
    "package_url": "https://pypi.org/project/PEPit/",
    "platform": null,
    "project_url": "https://pypi.org/project/PEPit/",
    "project_urls": {
      "Documentation": "https://pepit.readthedocs.io/en/0.2.1/",
      "Download": "https://github.com/PerformanceEstimation/PEPit/archive/refs/tags/0.2.1.tar.gz",
      "Homepage": "https://github.com/PerformanceEstimation/PEPit"
    },
    "release_url": "https://pypi.org/project/PEPit/0.2.1/",
    "requires_dist": [
      "cvxpy (>=1.1.17)"
    ],
    "requires_python": ">=3.6",
    "summary": "PEPit is a package that allows users to pep their optimization algorithms as easily as they implement them",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16131571,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e03e968cded0852c6d93056317bcd0cbfd22b6dd132d678c8ef44655c72bb1f",
          "md5": "096802b6ba3fa4caa5bfc207898bdc3c",
          "sha256": "dc683a9aae4dde571bb38cade83d460aaf8f6351879c2970f72b9f9a78e9e45c"
        },
        "downloads": -1,
        "filename": "PEPit-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "096802b6ba3fa4caa5bfc207898bdc3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 186628,
        "upload_time": "2022-01-07T19:40:49",
        "upload_time_iso_8601": "2022-01-07T19:40:49.738674Z",
        "url": "https://files.pythonhosted.org/packages/9e/03/e968cded0852c6d93056317bcd0cbfd22b6dd132d678c8ef44655c72bb1f/PEPit-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d26b366b4dc6d84d1ad321e540e84b809873e123d01d8d4cf8f6a755848211f",
          "md5": "566c35d3919bdeba537bb926db0011dd",
          "sha256": "6302b632b8f4432f2a405cd77df24ec4d48648ca91e76b9b4ce3d13422815d54"
        },
        "downloads": -1,
        "filename": "PEPit-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "566c35d3919bdeba537bb926db0011dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 80593,
        "upload_time": "2022-01-07T19:40:51",
        "upload_time_iso_8601": "2022-01-07T19:40:51.607745Z",
        "url": "https://files.pythonhosted.org/packages/1d/26/b366b4dc6d84d1ad321e540e84b809873e123d01d8d4cf8f6a755848211f/PEPit-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86535646d1372a591a55ddf92695404a0fb1c2396cd17d6232c4c58a180e93c5",
          "md5": "68c781d41d9bc2f3042875b040af6f84",
          "sha256": "de461de943fe8d0d64fc5af65d7b1080329a24ecc96511e05547f80f7f629255"
        },
        "downloads": -1,
        "filename": "PEPit-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68c781d41d9bc2f3042875b040af6f84",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 187084,
        "upload_time": "2022-01-13T12:50:08",
        "upload_time_iso_8601": "2022-01-13T12:50:08.084012Z",
        "url": "https://files.pythonhosted.org/packages/86/53/5646d1372a591a55ddf92695404a0fb1c2396cd17d6232c4c58a180e93c5/PEPit-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5903cb14c13ee6bda0e7e3ba0c24fe744d6b8367b36967d6af4430464c1064c",
          "md5": "a42f68fdc733879cb2a815cd08cc6eda",
          "sha256": "eb3e2865df2563ebda183e0231a61b2165b8f301c58474ea1064bdb9553e4f78"
        },
        "downloads": -1,
        "filename": "PEPit-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a42f68fdc733879cb2a815cd08cc6eda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 88209,
        "upload_time": "2022-01-13T12:50:09",
        "upload_time_iso_8601": "2022-01-13T12:50:09.621752Z",
        "url": "https://files.pythonhosted.org/packages/b5/90/3cb14c13ee6bda0e7e3ba0c24fe744d6b8367b36967d6af4430464c1064c/PEPit-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "952ca94f8d812f5ec040ec108d0def353914be0d2126fd272264d43e7b0caaf3",
          "md5": "6cc75395f099280d3da5ca07cdc24220",
          "sha256": "46d3e2f1f03841b9d9b2f86480052d1377d5f174536580fd6a3d2232063b66fb"
        },
        "downloads": -1,
        "filename": "PEPit-0.0.2a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6cc75395f099280d3da5ca07cdc24220",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 187108,
        "upload_time": "2022-01-13T11:22:08",
        "upload_time_iso_8601": "2022-01-13T11:22:08.231078Z",
        "url": "https://files.pythonhosted.org/packages/95/2c/a94f8d812f5ec040ec108d0def353914be0d2126fd272264d43e7b0caaf3/PEPit-0.0.2a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad376498ed0248b135a12c6fc1cdc57ab1ecdd52b9f40389982c122b49b19af9",
          "md5": "a3fa10bca0a2e78c26af53532ac49af7",
          "sha256": "43adad09cb3be162cbdfacf2031c6da64092290f938c0496f173f5eca4c3cf54"
        },
        "downloads": -1,
        "filename": "PEPit-0.0.2a0.tar.gz",
        "has_sig": false,
        "md5_digest": "a3fa10bca0a2e78c26af53532ac49af7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 88347,
        "upload_time": "2022-01-13T11:22:10",
        "upload_time_iso_8601": "2022-01-13T11:22:10.092184Z",
        "url": "https://files.pythonhosted.org/packages/ad/37/6498ed0248b135a12c6fc1cdc57ab1ecdd52b9f40389982c122b49b19af9/PEPit-0.0.2a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6a5e17afce64f2c02bddfcd56452c83e3371a54982d829914a85bc954881abd",
          "md5": "7b49ae08be69db9bec3d6e0110a9c4c5",
          "sha256": "6193135ab0e507dc626e5daa05f78bcad0e6a1631135b3162b74655c465d4660"
        },
        "downloads": -1,
        "filename": "PEPit-0.0.2a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b49ae08be69db9bec3d6e0110a9c4c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 187114,
        "upload_time": "2022-01-13T12:02:40",
        "upload_time_iso_8601": "2022-01-13T12:02:40.816940Z",
        "url": "https://files.pythonhosted.org/packages/e6/a5/e17afce64f2c02bddfcd56452c83e3371a54982d829914a85bc954881abd/PEPit-0.0.2a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2de8ddfa48a6b509b2a30f5a4ff2972d52ec30b97aa3edd576248cd11fb790b8",
          "md5": "9e64669a66e7c60a62b80935a711231d",
          "sha256": "57e4c353c1d77ffb880ae57ed4f4286ca6f153e97cccc64b5d3c43b1c0553664"
        },
        "downloads": -1,
        "filename": "PEPit-0.0.2a1.tar.gz",
        "has_sig": false,
        "md5_digest": "9e64669a66e7c60a62b80935a711231d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 88343,
        "upload_time": "2022-01-13T12:02:42",
        "upload_time_iso_8601": "2022-01-13T12:02:42.517945Z",
        "url": "https://files.pythonhosted.org/packages/2d/e8/ddfa48a6b509b2a30f5a4ff2972d52ec30b97aa3edd576248cd11fb790b8/PEPit-0.0.2a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a56fcb914aa2ebce56585fd5e1f205dec98212f5feb27b0d9cb9f71d0ed4503",
          "md5": "cc10def35768d60ac496d52558a582e6",
          "sha256": "96e89c77a74ff440a159cafe8b12e80f013a49f92d9f2b8263695c1ba07e91c9"
        },
        "downloads": -1,
        "filename": "PEPit-0.0.2a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc10def35768d60ac496d52558a582e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 187110,
        "upload_time": "2022-01-13T12:17:57",
        "upload_time_iso_8601": "2022-01-13T12:17:57.503628Z",
        "url": "https://files.pythonhosted.org/packages/0a/56/fcb914aa2ebce56585fd5e1f205dec98212f5feb27b0d9cb9f71d0ed4503/PEPit-0.0.2a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "275ae0545a09a6dbc6b13a1ff6e1dac758eabdb78b6efd0b0e3eaea3838ac507",
          "md5": "6b58287d5cebfde4c9beb0cf2d628311",
          "sha256": "f791a9a7626391b8a71d164073d8e141ac1dbb25b3bede83ac3eea967ec6e70d"
        },
        "downloads": -1,
        "filename": "PEPit-0.0.2a2.tar.gz",
        "has_sig": false,
        "md5_digest": "6b58287d5cebfde4c9beb0cf2d628311",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 88342,
        "upload_time": "2022-01-13T12:17:59",
        "upload_time_iso_8601": "2022-01-13T12:17:59.037504Z",
        "url": "https://files.pythonhosted.org/packages/27/5a/e0545a09a6dbc6b13a1ff6e1dac758eabdb78b6efd0b0e3eaea3838ac507/PEPit-0.0.2a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb782b6fc02faf46f29bf6f7f372a9e2144d15bef7ce4bf8e14db9bb4aafec11",
          "md5": "0b7081f5b04d97da2882908b5483c695",
          "sha256": "3c31249aae7db68f369143de39841e42928589a43cc0abce97c0161744028a3c"
        },
        "downloads": -1,
        "filename": "PEPit-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b7081f5b04d97da2882908b5483c695",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 212753,
        "upload_time": "2022-06-12T17:29:32",
        "upload_time_iso_8601": "2022-06-12T17:29:32.015027Z",
        "url": "https://files.pythonhosted.org/packages/bb/78/2b6fc02faf46f29bf6f7f372a9e2144d15bef7ce4bf8e14db9bb4aafec11/PEPit-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7f41d2c613b4b39e4e9e85e8c19d25378d1814a114a33f323d3ede089561a12",
          "md5": "60ca362c1a98f6fbcc7fa645a6f6cb80",
          "sha256": "c9b0fa871722446d32b9724b889190024ebc9835ceb9b60804f08b17d2d64ddd"
        },
        "downloads": -1,
        "filename": "PEPit-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "60ca362c1a98f6fbcc7fa645a6f6cb80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 96889,
        "upload_time": "2022-06-12T17:29:33",
        "upload_time_iso_8601": "2022-06-12T17:29:33.519205Z",
        "url": "https://files.pythonhosted.org/packages/f7/f4/1d2c613b4b39e4e9e85e8c19d25378d1814a114a33f323d3ede089561a12/PEPit-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08cfc60a4d62e086f33fd36bd353f27e2e952ea1f2a9de8c0c741d992b03ed4d",
          "md5": "fe31a27a322859c61162b2003e2b2d69",
          "sha256": "a23d32a277a74001a0115c8e3081ea070af580b1a19627dc03326c625fcbe885"
        },
        "downloads": -1,
        "filename": "PEPit-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe31a27a322859c61162b2003e2b2d69",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 261739,
        "upload_time": "2022-09-23T22:49:29",
        "upload_time_iso_8601": "2022-09-23T22:49:29.794492Z",
        "url": "https://files.pythonhosted.org/packages/08/cf/c60a4d62e086f33fd36bd353f27e2e952ea1f2a9de8c0c741d992b03ed4d/PEPit-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94b552e7a00369e63a34344a245af9a90a532673ac0bc5d96b3708028b6f39f0",
          "md5": "c230e51a7afe9e60b8bb16c0cc9550f8",
          "sha256": "8086ddc7b610d031c0c6925e8fca8e5f4a126d56144838389fd9a61eb301dd64"
        },
        "downloads": -1,
        "filename": "PEPit-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c230e51a7afe9e60b8bb16c0cc9550f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 114899,
        "upload_time": "2022-09-23T22:49:32",
        "upload_time_iso_8601": "2022-09-23T22:49:32.326632Z",
        "url": "https://files.pythonhosted.org/packages/94/b5/52e7a00369e63a34344a245af9a90a532673ac0bc5d96b3708028b6f39f0/PEPit-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fd4a07ae5b45b00b61f749bb7509b95e03f2a3c94aa40ff1daae732d16536ed",
          "md5": "4e06a7ab1634920335ed49a30e670a5b",
          "sha256": "813f7c20b47e51ec1e51cac95d963cf7e81333aebaebfae3fc05453f9efbd93f"
        },
        "downloads": -1,
        "filename": "PEPit-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e06a7ab1634920335ed49a30e670a5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 262425,
        "upload_time": "2022-12-17T00:54:23",
        "upload_time_iso_8601": "2022-12-17T00:54:23.756762Z",
        "url": "https://files.pythonhosted.org/packages/3f/d4/a07ae5b45b00b61f749bb7509b95e03f2a3c94aa40ff1daae732d16536ed/PEPit-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8134d5ebe1a151d75a61c10208d8cea64c346d2a08cc3ef099d28c362fc1200d",
          "md5": "14fa3eaf26b11f3c27e2b4d585d6909e",
          "sha256": "3855e67144be34d1dc254b61c57da6b187ee1af65c767cac60d548cabd211306"
        },
        "downloads": -1,
        "filename": "PEPit-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14fa3eaf26b11f3c27e2b4d585d6909e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 115485,
        "upload_time": "2022-12-17T00:54:25",
        "upload_time_iso_8601": "2022-12-17T00:54:25.419156Z",
        "url": "https://files.pythonhosted.org/packages/81/34/d5ebe1a151d75a61c10208d8cea64c346d2a08cc3ef099d28c362fc1200d/PEPit-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fd4a07ae5b45b00b61f749bb7509b95e03f2a3c94aa40ff1daae732d16536ed",
        "md5": "4e06a7ab1634920335ed49a30e670a5b",
        "sha256": "813f7c20b47e51ec1e51cac95d963cf7e81333aebaebfae3fc05453f9efbd93f"
      },
      "downloads": -1,
      "filename": "PEPit-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4e06a7ab1634920335ed49a30e670a5b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 262425,
      "upload_time": "2022-12-17T00:54:23",
      "upload_time_iso_8601": "2022-12-17T00:54:23.756762Z",
      "url": "https://files.pythonhosted.org/packages/3f/d4/a07ae5b45b00b61f749bb7509b95e03f2a3c94aa40ff1daae732d16536ed/PEPit-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8134d5ebe1a151d75a61c10208d8cea64c346d2a08cc3ef099d28c362fc1200d",
        "md5": "14fa3eaf26b11f3c27e2b4d585d6909e",
        "sha256": "3855e67144be34d1dc254b61c57da6b187ee1af65c767cac60d548cabd211306"
      },
      "downloads": -1,
      "filename": "PEPit-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "14fa3eaf26b11f3c27e2b4d585d6909e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 115485,
      "upload_time": "2022-12-17T00:54:25",
      "upload_time_iso_8601": "2022-12-17T00:54:25.419156Z",
      "url": "https://files.pythonhosted.org/packages/81/34/d5ebe1a151d75a61c10208d8cea64c346d2a08cc3ef099d28c362fc1200d/PEPit-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}