{
  "info": {
    "author": "Ian Buchanan",
    "author_email": "ibuchanan@atlassian.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: DFSG approved",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Version Control"
    ],
    "description": "=============\n PyBitbucket\n=============\n\nA Python wrapper for the Bitbucket Cloud REST API.\nThis is not known to work with Bitbucket Server,\npreviously known as Stash.\nTo start working with this library, just do: :code:`pip install pybitbucket`\n\n.. image:: https://img.shields.io/pypi/v/pybitbucket.svg\n    :target: https://pypi.python.org/pypi/pybitbucket/0.12.0\n\n.. image:: https://img.shields.io/pypi/status/pybitbucket.svg\n    :target: https://pypi.python.org/pypi/pybitbucket\n\n.. image:: https://img.shields.io/pypi/pyversions/pybitbucket.svg\n    :target: https://pypi.python.org/pypi/pybitbucket\n\n.. image:: https://img.shields.io/pypi/l/pybitbucket.svg\n    :target: https://bitbucket.org/atlassian/python-bitbucket/src/master/LICENSE.txt\n\n.. image:: https://img.shields.io/pypi/dm/pybitbucket.svg\n    :target: https://pypi.python.org/pypi/pybitbucket\n\n---------------------\nAdopting this library\n---------------------\n\nAuthenticate\n============\n\nThe :code:`Authenticator` subclasses prepare API requests with credentials.\nThe simplest case is :code:`Anonymous` which connects with no credentials.\n:code:`Anonymous` can be used with an publicly available resources.\nFor private resources,\n:code:`BasicAuthenticator` uses email, username, and password as credentials.\nIf your client application has it's own mechanisms for working with these values,\nyou can subclass the :code:`BasicAuthenticator` to provide custom behavior.\n\nTo \"plug in\" your implementation or a standard one, just do:\n\n::\n\n    bitbucket = Client(\n        BasicAuthenticator(\n            'your_username_here',\n            'your_secret_password_here',\n            'pybitbucket@mailinator.com'))\n\nIf you have enabled `two-step verification <https://confluence.atlassian.com/bitbucket/two-step-verification-777023203.html>`_,\nthen you will need to use an `app password <https://developer.atlassian.com/bitbucket/api/2/reference/meta/authentication#app-pw>`_ with the :code:`BasicAuthenticator`,\nnot your regular user password.\nThe :code:`OAuth2Authenticator` is intended as an example and superclass.\nIt may work for some command-line clients.\nOther clients like web applications\nwill need an appropriate implementation of :code:`obtain_authorization()`\nand perhaps may need to use a different grant types.\n\nFind Things\n===========\n\nFor example, to find all your snippets:\n\n::\n\n    for snip in Snippet.find_snippets_for_role(client=bitbucket):\n        print(snip)\n\nThe method says \"for role\" but, if not provided, it will use the default of owner.\nHence, all your snippets.\n\nIn general, finding things is done with a static find method on each type of resource.\nIf the resource is plural, like \"snippets\" above, then the find method is a generator.\nYou can use it with iterators or comprehensions.\nThe resources you can find are:\n\n* user and team\n* repository and snippet\n* pull request and comment\n* commit and build status\n* hook and branch restriction\n\nCreate Things\n=============\n\nFor example, to create a new snippet:\n\n::\n\n    snip = Snippet.create(\n        files=open_files([\"README.rst\"]),\n        payload=SnippetPayload().add_title(\"My New Snippet\"),\n        client=bitbucket)\n\nThe resources you can create are:\n\n* repository and snippet\n* pull request and comment\n* build status\n* hook and branch restriction\n\nExamine Things\n==============\n\nFor example, to examine attributes on a snippet:\n\n::\n\n    snip = Snippet.find_snippet_by_id(\"Xqoz8\", bitbucket)\n    s = '\\n'.join([\n        \"id          : {}\".format(snip.id),\n        \"is_private  : {}\".format(snip.is_private),\n        \"title       : {}\".format(snip.title),\n        \"files       : {}\".format(snip.filenames),\n        \"created_on  : {}\".format(snip.created_on),\n        \"updated_on  : {}\".format(snip.updated_on),\n        \"scm         : {}\".format(snip.scm),\n        ]) if snip else 'Snippet not found.'\n    print(s)\n\nWhat attributes are available?\nYou will not find them hardcoded in Python.\nThey are populated dynamically from the JSON response.\nYou can query the list via a convenience method:\n\n::\n\n    snip = Snippet.find_snippet_by_id(\"Xqoz8\", bitbucket)\n    print(snip.attributes())\n\nBeware. The attributes for the same resource may change depending on how you got to it.\n\nNavigate Relationships\n======================\n\nFor example, to list the commits for a snippet:\n\n::\n\n    snip = Snippet.find_snippet_by_id(\"Xqoz8\", bitbucket)\n    for commit in snip.commits():\n        print(commit)\n\nWhat relationships are available?\nYou will not find them hardcoded in Python.\nThey are populated dynamically from the JSON response.\nYou can query the list via a convenience method:\n\n::\n\n    snip = Snippet.find_snippet_by_id(\"Xqoz8\", bitbucket)\n    print(snip.relationships())\n\nJust like attributes, the relationships for the same resource may change depending on how you got to it.\nIf you need the canonical resource with all attributes, use the :code:`self()` relationship:\n\n::\n\n    snips = Snippet.find_snippets_for_role(client=bitbucket)\n    one_snip = next(snips)    # one_snip has no files relationship in this context.\n    real_snip = next(one_snip.self())\n    print(real_snip.files)\n\n----------\nDeveloping\n----------\n\nPython Virtual Environment Setup (for OS X)\n===========================================\n\nIt's not virtual like a virtual machine. More like a specialized container for a Python version and libraries.\n\n1. :code:`brew install python` This installs the latest version of Python 2.7 with a version of setuptools and pip. Unfortunately, those versions of setuptools and pip seem to be broken.\n2. :code:`pip install --upgrade --no-use-wheel setuptools`\n3. :code:`pip install --upgrade --no-use-wheel pip`\n4. :code:`pip install virtualenvwrapper`\n\nProject Setup\n=============\n\n1. Clone the repository and set it as the current working directory.\n2. *(Optional, but good practice)* Create a `virtual environment <http://docs.python-guide.org/en/latest/dev/virtualenvs/>`_: :code:`mkvirtualenv python-bitbucket` Once created, use :code:`workon python-bitbucket` to restore the virtual environment.\n3. :code:`pip install -r requirements-dev.txt` Loads required libraries into the virtual environment.\n4. :code:`paver test_all` Run all the unit tests and analyze the source code.\n\n----\nTODO\n----\n\n* :code:`PUT` and :code:`DELETE` for :code:`snippet.watch` from `snippets Endpoint <https://confluence.atlassian.com/display/BITBUCKET/snippets+endpoint>`_.\n* Wrap the `version 1 endpoints <https://confluence.atlassian.com/display/BITBUCKET/Version+1>`_ for:\n    - groups\n    - group-privileges\n    - invitations\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/atlassian/python-bitbucket",
    "keywords": "",
    "license": "",
    "maintainer": "Ian Buchanan",
    "maintainer_email": "ibuchanan@atlassian.com",
    "name": "pybitbucket37",
    "package_url": "https://pypi.org/project/pybitbucket37/",
    "platform": "",
    "project_url": "https://pypi.org/project/pybitbucket37/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/atlassian/python-bitbucket"
    },
    "release_url": "https://pypi.org/project/pybitbucket37/0.0.2/",
    "requires_dist": [
      "six (<2,>=1.10)",
      "future (<1,>=0.16)",
      "requests (<3,>=2.12)",
      "oauthlib (<3,>=2.0)",
      "requests-oauthlib (<1,>=0.7)",
      "uritemplate (<1,>=0.6)",
      "simplejson (<4,>=3.10)",
      "voluptuous (<1,>=0.9)"
    ],
    "requires_python": "",
    "summary": "A Python wrapper for the Bitbucket API",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8322163,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "431f24f4382e21fb9e52fdb1222f2b2c8f93dca2aa44f07965658141c3203af0",
          "md5": "9436d0b65928658f28bc412b8e48e7dd",
          "sha256": "4cf2add4397aad371ced12fcb43a26cdbdcbd4b599f187ecebbe7a390f054b00"
        },
        "downloads": -1,
        "filename": "pybitbucket37-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9436d0b65928658f28bc412b8e48e7dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34126,
        "upload_time": "2020-10-02T06:23:48",
        "upload_time_iso_8601": "2020-10-02T06:23:48.268797Z",
        "url": "https://files.pythonhosted.org/packages/43/1f/24f4382e21fb9e52fdb1222f2b2c8f93dca2aa44f07965658141c3203af0/pybitbucket37-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60fd867f2648ad8430b139ee0447e1bb4daef150d02dd3b5179ef5123c73bc29",
          "md5": "5da5e101994937fad47910680d017245",
          "sha256": "37e940c6bdf261c219cf64e15f318ddb6976bce02677d82de5de96f6eb80e3ae"
        },
        "downloads": -1,
        "filename": "pybitbucket37-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5da5e101994937fad47910680d017245",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81760,
        "upload_time": "2020-10-02T06:23:51",
        "upload_time_iso_8601": "2020-10-02T06:23:51.264829Z",
        "url": "https://files.pythonhosted.org/packages/60/fd/867f2648ad8430b139ee0447e1bb4daef150d02dd3b5179ef5123c73bc29/pybitbucket37-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47b6dafa8ef7c9e87e3074f43d2e57af6385818d99d529e2a6d33c167fbf2315",
          "md5": "3bbdeff913f9c531cc7d0c28f608b625",
          "sha256": "84e302633d6bc6dad3b6be54982e2eb3d3ebc020f60347f96a9f331127dbd1f3"
        },
        "downloads": -1,
        "filename": "pybitbucket37-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3bbdeff913f9c531cc7d0c28f608b625",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34015,
        "upload_time": "2020-10-02T06:39:06",
        "upload_time_iso_8601": "2020-10-02T06:39:06.727120Z",
        "url": "https://files.pythonhosted.org/packages/47/b6/dafa8ef7c9e87e3074f43d2e57af6385818d99d529e2a6d33c167fbf2315/pybitbucket37-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9be2dab112b4e92e4aa2d25c8a304976d34dcb7367777c9eaa542a17346871a",
          "md5": "79111e77bd618c5f745c604ea30fe376",
          "sha256": "2d00deab2f883b4db7da87d612e7c79c1c73fa6dda58b45c8875174acf9edec5"
        },
        "downloads": -1,
        "filename": "pybitbucket37-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79111e77bd618c5f745c604ea30fe376",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81659,
        "upload_time": "2020-10-02T06:39:08",
        "upload_time_iso_8601": "2020-10-02T06:39:08.703120Z",
        "url": "https://files.pythonhosted.org/packages/b9/be/2dab112b4e92e4aa2d25c8a304976d34dcb7367777c9eaa542a17346871a/pybitbucket37-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47b6dafa8ef7c9e87e3074f43d2e57af6385818d99d529e2a6d33c167fbf2315",
        "md5": "3bbdeff913f9c531cc7d0c28f608b625",
        "sha256": "84e302633d6bc6dad3b6be54982e2eb3d3ebc020f60347f96a9f331127dbd1f3"
      },
      "downloads": -1,
      "filename": "pybitbucket37-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3bbdeff913f9c531cc7d0c28f608b625",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 34015,
      "upload_time": "2020-10-02T06:39:06",
      "upload_time_iso_8601": "2020-10-02T06:39:06.727120Z",
      "url": "https://files.pythonhosted.org/packages/47/b6/dafa8ef7c9e87e3074f43d2e57af6385818d99d529e2a6d33c167fbf2315/pybitbucket37-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9be2dab112b4e92e4aa2d25c8a304976d34dcb7367777c9eaa542a17346871a",
        "md5": "79111e77bd618c5f745c604ea30fe376",
        "sha256": "2d00deab2f883b4db7da87d612e7c79c1c73fa6dda58b45c8875174acf9edec5"
      },
      "downloads": -1,
      "filename": "pybitbucket37-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "79111e77bd618c5f745c604ea30fe376",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 81659,
      "upload_time": "2020-10-02T06:39:08",
      "upload_time_iso_8601": "2020-10-02T06:39:08.703120Z",
      "url": "https://files.pythonhosted.org/packages/b9/be/2dab112b4e92e4aa2d25c8a304976d34dcb7367777c9eaa542a17346871a/pybitbucket37-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}