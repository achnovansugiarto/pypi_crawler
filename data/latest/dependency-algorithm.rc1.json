{
  "info": {
    "author": "Jake Sherman",
    "author_email": "jake@jakesherman.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Dependency Algorithm\n\nHere is my take on an algorithm in Python that resolves dependencies. The best way to illustrate how this works is with an example...\n\n## Example \n\nLet's say that we have the following dictionary where the keys are items, and the values are the dependencies of those items. Each dependency must itself be an item, and items with no dependencies have an empty list `[]` as they dependency:\n\n```python\nmy_items = {\n    'A': ['B', 'C', 'D'],  # -- A is dependent on B, C, D,\n    'B': [],  # -- B is dependent on nothing, etc.\n    'C': ['D'],\n    'D': ['B', 'E'],\n    'E': ['F'],\n    'F': [],\n    'Z': ['A', 'B', 'C', 'D']\n}\n```\n\nNote that we've only provided a partial dictionary of items to their dependencies...for example, notice how C is dependent on D, which is dependent on B (no dependencies) and E, which is dependent on F...therefore, C is dependent on D, B, E, and F. \n\nWe can use the `Dependencies` class to get the complete list of dependencies for an item, like so:\n\n```python\nfrom dependency_algorithm import Dependencies\n\n# Creating a Dependencies object\ndependencies = Dependencies(my_items)\ndependencies.complete_dependencies(\"C\")\n```\n\n```\n>>> ['D', 'B', 'E', 'F']\n```\n\nMore importantly, we can return the items in an order such that the dependencies resolve:\n\n```python\ndependencies.resolve_dependencies()\n```\n\n```\n>>> ['B', 'F', 'E', 'D', 'C', 'A', 'Z']\n```\n\nIn many cases, there are multiple correct ordering of our items such that each item's dependencies resolve. If we're interested in all possible correct orderings, the `Dependencies` class can permutate over all possible orderings, and identify the correct ones (albeit at a high computational cost), like so:\n\n```python\ndependencies.all_possible_resolution_orders(verbose=True)\n```\n\n```\n>>> Number of permutations: 5040\n>>> Number of correct orderings: 3\n>>> Number of incorrect orderings: 5037\n>>> [('B', 'F', 'E', 'D', 'C', 'A', 'Z'),\n>>>  ('F', 'B', 'E', 'D', 'C', 'A', 'Z'),\n>>>  ('F', 'E', 'B', 'D', 'C', 'A', 'Z')]\n```\n\nThat's pretty much it! The `Dependencies` class also performs two checks, one for any dependencies that are \"missing\" (i.e., they are not keys in the input dictionary of items and dependencies), and another for cirular dependencies (i.e., A is dependent on B which is dependent on A which is...and so on...).\n\n## Installation\n\n```\npip install dependency_algorithm\n```\n\n## Running the unit tests with `pytest`\n\n```\ngit clone https://github.com/jakesherman/dependency_algorithm.git\ncd dependency_algorithm\npip install -e .\npython -m pytest\n```\n\n## Future work\n\n* New version of `Dependencies._enhanced_list_dependencies` that uses iteration instead of recursion\n* Improved version of `Dependencies.all_possible_resolution_orders` that uses a more efficient algorithm than looping through permutations, ex. a recursive algorithm\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/jakesherman/dependency_algorithm/archive/v0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jakesherman/dependency_algorithm",
    "keywords": "dependency,dependencies,dependency management",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dependency-algorithm",
    "package_url": "https://pypi.org/project/dependency-algorithm/",
    "platform": "",
    "project_url": "https://pypi.org/project/dependency-algorithm/",
    "project_urls": {
      "Download": "https://github.com/jakesherman/dependency_algorithm/archive/v0.1.tar.gz",
      "Homepage": "https://github.com/jakesherman/dependency_algorithm"
    },
    "release_url": "https://pypi.org/project/dependency-algorithm/0.1/",
    "requires_dist": [
      "pytest (>=3.1.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Automatically identify and order dependencies so that they resolve correctly",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9083505,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74b6fb38cfc57ea4fbdc3174374c9157513d92c12566e4883b9c1d963e3e091f",
          "md5": "68389653b2fc5986a327cbe0bb2aba29",
          "sha256": "50006646054ea6a2df39a0b65f5515a0e88be56475cf5d35fe95e943f9306205"
        },
        "downloads": -1,
        "filename": "dependency_algorithm-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68389653b2fc5986a327cbe0bb2aba29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7760,
        "upload_time": "2021-01-08T04:59:41",
        "upload_time_iso_8601": "2021-01-08T04:59:41.537501Z",
        "url": "https://files.pythonhosted.org/packages/74/b6/fb38cfc57ea4fbdc3174374c9157513d92c12566e4883b9c1d963e3e091f/dependency_algorithm-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3ea9789e8fbafa91bc0cd03d1b790495c8adfa4d11e91a46dedb0ea1d64e640",
          "md5": "fbcd6cf4a73f9255524c54fb62a8bae9",
          "sha256": "99367ae271f62fb49affb5d1b3379581419f2811c25b94b4d1301c69ae3756d7"
        },
        "downloads": -1,
        "filename": "dependency_algorithm-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fbcd6cf4a73f9255524c54fb62a8bae9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7290,
        "upload_time": "2021-01-08T04:59:43",
        "upload_time_iso_8601": "2021-01-08T04:59:43.054819Z",
        "url": "https://files.pythonhosted.org/packages/b3/ea/9789e8fbafa91bc0cd03d1b790495c8adfa4d11e91a46dedb0ea1d64e640/dependency_algorithm-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74b6fb38cfc57ea4fbdc3174374c9157513d92c12566e4883b9c1d963e3e091f",
        "md5": "68389653b2fc5986a327cbe0bb2aba29",
        "sha256": "50006646054ea6a2df39a0b65f5515a0e88be56475cf5d35fe95e943f9306205"
      },
      "downloads": -1,
      "filename": "dependency_algorithm-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "68389653b2fc5986a327cbe0bb2aba29",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7760,
      "upload_time": "2021-01-08T04:59:41",
      "upload_time_iso_8601": "2021-01-08T04:59:41.537501Z",
      "url": "https://files.pythonhosted.org/packages/74/b6/fb38cfc57ea4fbdc3174374c9157513d92c12566e4883b9c1d963e3e091f/dependency_algorithm-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3ea9789e8fbafa91bc0cd03d1b790495c8adfa4d11e91a46dedb0ea1d64e640",
        "md5": "fbcd6cf4a73f9255524c54fb62a8bae9",
        "sha256": "99367ae271f62fb49affb5d1b3379581419f2811c25b94b4d1301c69ae3756d7"
      },
      "downloads": -1,
      "filename": "dependency_algorithm-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fbcd6cf4a73f9255524c54fb62a8bae9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7290,
      "upload_time": "2021-01-08T04:59:43",
      "upload_time_iso_8601": "2021-01-08T04:59:43.054819Z",
      "url": "https://files.pythonhosted.org/packages/b3/ea/9789e8fbafa91bc0cd03d1b790495c8adfa4d11e91a46dedb0ea1d64e640/dependency_algorithm-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}