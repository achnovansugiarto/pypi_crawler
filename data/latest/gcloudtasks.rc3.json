{
  "info": {
    "author": "Damilola Adeyemi",
    "author_email": "me@dammy.co",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django :: 2.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "=============================\ndjango-gcloud-tasks\n=============================\n\n\nA simplified  package to integrate Google cloud tasks into your django application within 5 minutes.\n\nDocumentation\n-------------\n\nQuickstart\n----------\n\nInstall django-gcloud-tasks::\n\n    pip install gcloudtasks\n\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block::\n\n    INSTALLED_APPS = (\n        ...\n        'gcloudtasks',\n        ...\n    )\n\nThen run migration command\n\n.. code-block::\n\n    python manage.py migrate\n\n\nOn the instance that would be processing the tasks, add django-gcloud-tasks's URL patterns:\n\n.. code-block::\n\n\n    urlpatterns = [\n        ...\n        path('__tasks/', include('gcloudtasks.urls')),\n        ...\n    ]\n\n\nYou need to configure a few settings. Available settings include:\n\n- :code:`GTASK_PROJECT_ID`: (required) This is your project ID which you obtain from your Google console.\n- :code:`GTASK_PROJECT_LOCATION`: (required) Your project location, the default from Google console is usually us-central1, but I still advise you confirm yours.\n- :code:`GTASK_CREDENTIAL_FILE`: Absolute file to your Google account credentials json file. This one is not required if GOOGLE_APPLICATION_CREDENTIALS is set to environmental variables.\n- :code:`GTASK_TARGET_WORKER_HOST`: (required) Absolute URL of the worker instance that will process the task. (e.g. https://example.com)\n- :code:`GTASK_SEND_TO_REMOTE`: Defaults to True, this says if the task should be forwarded to the Google tasks remote queue or not. You might want to change this to False in development environment.\n- :code:`GTASK_MODEL_CLASS`: Defaults to 'gcloudtasks.Task'. You would want to change this if you intend to use a custom model for task management.\n- :code:`GTASK_HANDLER_NAMESPACE`: Defaults to empty. Only required if you added a namespace to the URL pattern entry. Otherwise, not necessary.\n\n\n\nSignals\n-------\n\nTo use the signals, simply create a receiver like below:\n\n.. code-block::\n\n    from gcloudtasks.tasks import task_created_signal\n\n    @receiver(task_created_signal)\n    def some_function(sender, instance, created, **kwargs):\n        pass\n\n\nExtend the Task Model\n---------------------\n\nCreate custom task model:\n\nAssuming this model file is :code:`campaigns/models.py`\n\n.. code-block::\n\n    from gcloudtasks.models import Task\n\n    class CustomTask(Task):\n        user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n        ...\n        ...\n\n\nThen in settings.py,\nWith respect to the file name, we do:\n\n.. code-block::\n\n    GTASK_MODEL_CLASS = 'campaigns.CustomTask'\n\n\nFunctions\n---------\n\n**Create Task**: To create a task, simple decorate the function with :code:`@task`.\nThis decorator takes in two parameters :code:`queue` and :code:`name`. Only the :code:`queue`\nis compulsory. :code:`queue` is the name of the task queue which you want the task to run on.\nThe name is automatically generated if not provided.\nIf you do not have a queue already, there is a function that lets you check, and create if it\ndoes not exist.\n\n.. code-block::\n\n    # To create get or create queue\n\n    from gcloudtasks.queues import get_or_create_queue\n\n    get_or_create_queue(queue_name)\n\n\nTo actually create task, you could create a specialized file and name it :code:`tasks.py` or whatever you want and add\nyour task functions there.\n\n.. code-block::\n\n    from gcloudtasks.executor import task\n\n\n    @task(queue='my-default-queue')\n    def sum_numbers(a, b):\n        # do something in the function\n        pass\n\n\nYou would then in your :code:`views.py` or anywhere for that matter, do something like this to execute this task\n\n.. code-block::\n\n    from .tasks import sum_numbers\n\n    class SomeView(FormView):\n        ....\n\n        def form_valid(self, form):\n            ...\n            sum_numbers(a=10, b=20).run()\n\nYou would notice that the parameters were passed as keyword arguments. That is compulsory.\nAnd should you want to schedule this task, :code:`run` takes two possible non-required arguments;\n:code:`delay` and :code:`scheduled_time`. :code:`delay` should be a :code:`datetime.timedelta` instance\nwhile the :code:`scheduled_time` is expected to be a timezone-aware :code:`datetime` instance.\n\nTo schedule the :code:`sum_numbers` function for after 2 days. I would do\n\n.. code-block::\n\n    sum_numbers(a=10, b=20).run(delay=timedelta(days=2))\n\n\nFeatures\n--------\n\n* Tasks management through django admin. (when you delete tasks through the admin, they are deleted from the queue if they have not yet been processed).\n* Extendable Task model.\n* Task creation model signal.\n* Extended support for libraries like :code:`django-tenant-schemas`.\n\n\nExtended Support\n----------------\n\nDjango tenant schemas was put into consideration when writing the library. It is understood that\nyou might want to route the task to a particular domain on the worker instance or whichever server is\nhandling the tasks, so it is possible to override :code:`GTASK_TARGET_WORKER_HOST` for every task execution by\nsimply passing :code:`host` parameter into the :code:`run` function like below.\n\n\n.. code-block::\n\n    sum_numbers(a=10, b=20).run(host='https://somedomain.example.com')\n\n\n\nGotchas\n-------\n\n* Pass only JSON serializable objects into the task functions. If you need a model in there, pass the :code:`id` and retrieve the model inside the function. e.g.\n\n.. code-block::\n\n    # Inside your tasks.py or wherever your task functions reside.\n    @task(queue='my-default-queue')\n    def mark_as_done(todo_id):\n        todo = Todo.objects.get(pk=todo_id)\n        ...\n\n\n    # Where the task is being called\n    mark_as_done(todo_id=todo.id).run()\n\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.0.1 (2020-05-03)\n++++++++++++++++++\n\n* First release on PyPI.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/damey2011/django-gcloud-tasks",
    "keywords": "django-gcloud-tasks",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gcloudtasks",
    "package_url": "https://pypi.org/project/gcloudtasks/",
    "platform": "",
    "project_url": "https://pypi.org/project/gcloudtasks/",
    "project_urls": {
      "Homepage": "https://github.com/damey2011/django-gcloud-tasks"
    },
    "release_url": "https://pypi.org/project/gcloudtasks/0.0.12/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simplified package to integrate google cloud tasks into your django application within 5 minutes.",
    "version": "0.0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7204673,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d38b7f8c39310a072df203e8eeeff3c89686abc14809d2e9f9b8b6c45724769",
          "md5": "89d7eed4bb9dbb1a866077bd645f328e",
          "sha256": "3cb5b0d80747a6f7817b872b344d9acc68466f73499bc9d310a4e0731e2db967"
        },
        "downloads": -1,
        "filename": "gcloudtasks-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "89d7eed4bb9dbb1a866077bd645f328e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14553,
        "upload_time": "2020-05-04T03:15:44",
        "upload_time_iso_8601": "2020-05-04T03:15:44.983377Z",
        "url": "https://files.pythonhosted.org/packages/6d/38/b7f8c39310a072df203e8eeeff3c89686abc14809d2e9f9b8b6c45724769/gcloudtasks-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1c4827d90b7ad0c3a8c14a86d19731a4e126560428936ed5ab548658aa897ac",
          "md5": "d398ac9b9c70bfbce02e8904bf6b20de",
          "sha256": "6779e728de61807491664e3c44f02cd723fef531a0142ba9333b0fca8b56c334"
        },
        "downloads": -1,
        "filename": "gcloudtasks-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "d398ac9b9c70bfbce02e8904bf6b20de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14737,
        "upload_time": "2020-05-04T03:32:34",
        "upload_time_iso_8601": "2020-05-04T03:32:34.235404Z",
        "url": "https://files.pythonhosted.org/packages/b1/c4/827d90b7ad0c3a8c14a86d19731a4e126560428936ed5ab548658aa897ac/gcloudtasks-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8100e97326856564b0be82a081c754abb504cf98367300de7973e801856ef8f4",
          "md5": "ee953f645f731c247fc83059bc0e58d9",
          "sha256": "837f5998d16754b5d8e5c03bd2050ecd2cedd71950e8ccd64191957c826b17d2"
        },
        "downloads": -1,
        "filename": "gcloudtasks-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "ee953f645f731c247fc83059bc0e58d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14783,
        "upload_time": "2020-05-09T17:23:18",
        "upload_time_iso_8601": "2020-05-09T17:23:18.501739Z",
        "url": "https://files.pythonhosted.org/packages/81/00/e97326856564b0be82a081c754abb504cf98367300de7973e801856ef8f4/gcloudtasks-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8100e97326856564b0be82a081c754abb504cf98367300de7973e801856ef8f4",
        "md5": "ee953f645f731c247fc83059bc0e58d9",
        "sha256": "837f5998d16754b5d8e5c03bd2050ecd2cedd71950e8ccd64191957c826b17d2"
      },
      "downloads": -1,
      "filename": "gcloudtasks-0.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "ee953f645f731c247fc83059bc0e58d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14783,
      "upload_time": "2020-05-09T17:23:18",
      "upload_time_iso_8601": "2020-05-09T17:23:18.501739Z",
      "url": "https://files.pythonhosted.org/packages/81/00/e97326856564b0be82a081c754abb504cf98367300de7973e801856ef8f4/gcloudtasks-0.0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}