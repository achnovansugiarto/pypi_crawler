{
  "info": {
    "author": "Jannis Vajen",
    "author_email": "jvajen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# pytest-django-factories\n\n![Python package](https://github.com/jnns/pytest-django-factories/workflows/Python%20package/badge.svg)\n\nFactories for your Django models that can be used as Pytest fixtures.\nRe-use them implicitly for instantiating related objects without much boilerplate code.\n\n```python\n>>> book = book_factory(title=\"Calvin & Hobbes\", author__name=\"Bill Watterson\")\n>>> book\n<Book: Calvin & Hobbes>\n>>> book.author.name\n<Author: Bill Watterson>\n```\n\n# Introduction\n\nWrite a fixture for your Django model by using the `Factory` class:\n\n```python\n# conftest.py\nimport pytest\nfrom django_factories import Factory\nfrom .models import Author\n\n@pytest.fixture\ndef author_factory(request):\n    factory = Factory(Author)\n    return factory(request)\n```\n\n```python\n# tests.py\ndef test_function(author_factory):\n    author = author_factory(name=\"Bill Watterson\")\n    assert author.name\n```\n\n> :notebook: **Note**\n> The `request` passed to the fixture function is a pytest fixture itself and provides information about the test function requesting the fixture.\n> See [pytest documentation](https://docs.pytest.org/en/latest/reference.html#std:fixture-request).\n\n## Default values\n\nA plain `Factory` will, of course, instantiate the object with the defaults given at the model definition.\nIf you want to set defaults for the factory specifically, you can pass them to the Factory as additional\nkeyword arguments:\n\n```python\n@pytest.fixture\ndef author_factory(request):\n    defaults = {\n        \"first_name\": \"William\",\n        \"last_name\": \"Watterson\",\n        \"birthdate\": \"1958-07-05\",\n    }\n    return Factory(Author, **defaults)(request)\n```\n\n## Related objects\n\nIf you want to test a model which depends on another object being present,\nthe Factory class will try to look up a matching factory fixture for that `ForeignKey` field\nand create the related object automatically for you.\nAttributes for the related object can be specified in the same double-underscore syntax that you're familiar with from Django's queryset lookups:\n\n```python\n@pytest.fixture\ndef author_factory(request):\n    return Factory(Author)(request)\n\n@pytest.fixture\ndef book_factory(request):\n    return Factory(Book)(request)\n\ndef test(book_factory):\n    book = book_factory(\n        author__first_name=\"Astrid\",\n        author__last_name=\"Lindgren\"\n    )\n```\n\nThis only works if there is a factory fixture available to create the related object.\n`Factory` will look for a fixture named `<field>_factory`.\nIf you have a fixture that you named differently (or you have multiple fixtures for that particular model), you can specify a custom fixture name:\n\n```python\n@pytest.fixture\ndef book_factory(request):\n    return Factory(\n        Book,\n        author=SubFactory(\"my_author_fixture\")\n    )(request)\n```\n\nPassing object instances as keyword arguments instead works as well, of course:\n\n```python\nbook = book_factory(\n    author=Author(\n        first_name=\"Astrid\",\n        last_name=\"Lindgren\"\n    )\n)\n```\n\n## Database usage\n\nYou can use `Factory` to instantiate objects in memory and also to create them in the database directly via `Model.objects.create()`.\nIf your test function is [marked to use the database](https://pytest-django.readthedocs.io/en/latest/helpers.html#pytest-mark-django-db-request-database-access), the objects will be saved to the database.\nUnmarked tests will only create objects in memory.\n\n## Customizing a factory\n\nThe `Factory` can be subclassed and you can override its `create(**kwargs)` method to customize how objects are instantiated. Here's an example of an auto-enumerating factory for a Book model:\n\n```python\nfrom itertools import count\n\n@pytest.fixture\ndef book_factory(request):\n    counter = count(1)\n\n    class BookFactory(Factory):\n        model = Book\n\n        def create(self, **kwargs):\n            return super().create(**kwargs, title=f\"Book {next(counter)}\")\n\n    return BookFactory()(request)\n```\n\n# Installation\n\n```bash\npip install pytest-django-factories\n```\n\n# Contributing\n\nAll contributions are welcome. To check out the development version and run the tests, follow these steps:\n\n```bash\ngit clone https://github.com/jnns/pytest-django-factories.git\ncd pytest-django-factories\npython3 -m venv .venv\nsource .venv/bin/activate\npip install -r requirements.txt\npytest\n```\n\n# Similar projects\n\nWhen I wrote this library, I needed a quick and easy way to create related objects using Pytest fixtures.\nI didn't know about [pytest-factoryboy](https://github.com/pytest-dev/pytest-factoryboy),\nwhich allows registering the powerful factories from [factory_boy](https://factoryboy.readthedocs.io/)\nfor Pytest's fixture dependency injection.\n\nBasically, *pytest-django-factories* is a less-feature-packed combination of both *factory_boy* and\n*pytest-factoryboy* that will hopefully help you get going quickly.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/jnns/pytest-django-factories",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-django-factories",
    "package_url": "https://pypi.org/project/pytest-django-factories/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytest-django-factories/",
    "project_urls": {
      "Homepage": "http://github.com/jnns/pytest-django-factories"
    },
    "release_url": "https://pypi.org/project/pytest-django-factories/0.2.3/",
    "requires_dist": [
      "django"
    ],
    "requires_python": ">=3.6",
    "summary": "Factories for your Django models that can be used as Pytest fixtures.",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8644720,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6fb4fe0b7f40a2552f60c23ac4b940c3bb67fca9014e15f7af8c02969726814",
          "md5": "b46fdd3542f63ae3e99afe8f01d7d50c",
          "sha256": "fe06453e6376bc01aaf023df4578b235d9628c9df07c994f1174cd9ad12c7ee1"
        },
        "downloads": -1,
        "filename": "pytest_django_factories-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b46fdd3542f63ae3e99afe8f01d7d50c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4919,
        "upload_time": "2020-05-31T22:44:43",
        "upload_time_iso_8601": "2020-05-31T22:44:43.247381Z",
        "url": "https://files.pythonhosted.org/packages/c6/fb/4fe0b7f40a2552f60c23ac4b940c3bb67fca9014e15f7af8c02969726814/pytest_django_factories-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58b00c9c54e54980fa9c978bbe8ce33afc9fc3e61b4c3da5352f81f7ae4beda2",
          "md5": "b6de8499a0a4ebaf945a213801c53fd5",
          "sha256": "3f4f5782c7aa35091ac7b5c3f2103a3d7322222b0691f79b9e397991fcb66eaa"
        },
        "downloads": -1,
        "filename": "pytest-django-factories-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b6de8499a0a4ebaf945a213801c53fd5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4527,
        "upload_time": "2020-05-31T22:44:45",
        "upload_time_iso_8601": "2020-05-31T22:44:45.784256Z",
        "url": "https://files.pythonhosted.org/packages/58/b0/0c9c54e54980fa9c978bbe8ce33afc9fc3e61b4c3da5352f81f7ae4beda2/pytest-django-factories-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8821326a313040236bdf3ab37a5985dca6136da9519be7bb5d86cd743c0295e",
          "md5": "a67819068304d40d60a2ad8c8ebe7ca6",
          "sha256": "6d90c1f3f82fe8055b9cee91fb82635add94799767cb18585800a7ca98efaa34"
        },
        "downloads": -1,
        "filename": "pytest_django_factories-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a67819068304d40d60a2ad8c8ebe7ca6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4957,
        "upload_time": "2020-05-31T23:25:48",
        "upload_time_iso_8601": "2020-05-31T23:25:48.560078Z",
        "url": "https://files.pythonhosted.org/packages/c8/82/1326a313040236bdf3ab37a5985dca6136da9519be7bb5d86cd743c0295e/pytest_django_factories-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1872574aa340d9d8e6e979b580fda14308b7a3b9b2062aefdd4b32bdb607e4a2",
          "md5": "d3cef4d64cd152f1fc12436c37bcd996",
          "sha256": "3bd9714ff1b3b80e13aa32f565af4ad36c45b104dcb4642c92b643695cc9355d"
        },
        "downloads": -1,
        "filename": "pytest-django-factories-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3cef4d64cd152f1fc12436c37bcd996",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4554,
        "upload_time": "2020-05-31T23:25:50",
        "upload_time_iso_8601": "2020-05-31T23:25:50.009720Z",
        "url": "https://files.pythonhosted.org/packages/18/72/574aa340d9d8e6e979b580fda14308b7a3b9b2062aefdd4b32bdb607e4a2/pytest-django-factories-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af418415e0cbec2de696be13c39660b6599cb69d4be7a755046ec511fdfff16e",
          "md5": "5828b81abf81083210ecb64df80517b3",
          "sha256": "24d9e636ce57df3adf53c359086b36720d08d57133acf87587af98db15d344a5"
        },
        "downloads": -1,
        "filename": "pytest_django_factories-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5828b81abf81083210ecb64df80517b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5402,
        "upload_time": "2020-06-01T09:44:42",
        "upload_time_iso_8601": "2020-06-01T09:44:42.663324Z",
        "url": "https://files.pythonhosted.org/packages/af/41/8415e0cbec2de696be13c39660b6599cb69d4be7a755046ec511fdfff16e/pytest_django_factories-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7baf01cc5b57eb0a2ffadf613cd08b92fbccbb305538c5af48d27b3f5563550d",
          "md5": "e1ec56e6d78be6ff830b892dfd0caa06",
          "sha256": "41be5e4832759fb2eb0afbe4f84941196ac43e8cc1a87d186bb34567ff62a465"
        },
        "downloads": -1,
        "filename": "pytest-django-factories-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e1ec56e6d78be6ff830b892dfd0caa06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5064,
        "upload_time": "2020-06-01T09:44:54",
        "upload_time_iso_8601": "2020-06-01T09:44:54.019189Z",
        "url": "https://files.pythonhosted.org/packages/7b/af/01cc5b57eb0a2ffadf613cd08b92fbccbb305538c5af48d27b3f5563550d/pytest-django-factories-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a65ad78fe4fcb7322555c0e6c031f2f20205ffc3a933c298cca9377725bb9a9",
          "md5": "577af71dc7afc6174618148e3169718f",
          "sha256": "d93299c3a96a95074e2dadd31075ecf566fb6a578d071763615a8a8cffcb4eaa"
        },
        "downloads": -1,
        "filename": "pytest_django_factories-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "577af71dc7afc6174618148e3169718f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5402,
        "upload_time": "2020-10-17T12:36:41",
        "upload_time_iso_8601": "2020-10-17T12:36:41.319002Z",
        "url": "https://files.pythonhosted.org/packages/5a/65/ad78fe4fcb7322555c0e6c031f2f20205ffc3a933c298cca9377725bb9a9/pytest_django_factories-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "657c48f95365d2d053bba95a1beed4768b38d65c4555b92af446f29ac0065d29",
          "md5": "cac83d09736df2f02a4e8d0a4802a46b",
          "sha256": "08b23a800cecccd21116431da859efcf3a7f93058468335d69d6ff1fc7e76f94"
        },
        "downloads": -1,
        "filename": "pytest_django_factories-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cac83d09736df2f02a4e8d0a4802a46b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5583,
        "upload_time": "2020-11-12T20:01:51",
        "upload_time_iso_8601": "2020-11-12T20:01:51.472579Z",
        "url": "https://files.pythonhosted.org/packages/65/7c/48f95365d2d053bba95a1beed4768b38d65c4555b92af446f29ac0065d29/pytest_django_factories-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "657c48f95365d2d053bba95a1beed4768b38d65c4555b92af446f29ac0065d29",
        "md5": "cac83d09736df2f02a4e8d0a4802a46b",
        "sha256": "08b23a800cecccd21116431da859efcf3a7f93058468335d69d6ff1fc7e76f94"
      },
      "downloads": -1,
      "filename": "pytest_django_factories-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cac83d09736df2f02a4e8d0a4802a46b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5583,
      "upload_time": "2020-11-12T20:01:51",
      "upload_time_iso_8601": "2020-11-12T20:01:51.472579Z",
      "url": "https://files.pythonhosted.org/packages/65/7c/48f95365d2d053bba95a1beed4768b38d65c4555b92af446f29ac0065d29/pytest_django_factories-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}