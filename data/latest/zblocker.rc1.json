{
  "info": {
    "author": "zlyuan",
    "author_email": "1277260932@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "阻塞器, 单人阻塞器和多人阻塞器\n\n\n单人阻塞器:\n    一个线程调用lock()会立即阻塞, 直到另一个线程调用unlock()为止, 同一个阻塞器只能阻塞一个线程\n测试代码:\nif __name__ == '__main__':\n    print('测试单人阻塞器')\n\n\n    def fun():\n        for i in range(5):\n            time.sleep(1)\n            a.unlock()\n\n\n    import threading\n    import time\n\n    a = BLock()\n    threading.Thread(target=fun).start()\n\n    for i in range(5):\n        print('开始锁定', i, time.strftime('%H:%M:%S', time.localtime()))\n        a.lock()  # 阻塞\n        print('  解除', i, time.strftime('%H:%M:%S', time.localtime()))\n\n    print('结束\\n\\n')\n\n\n多人阻塞器:\n    任何线程在调用lock()的时候都会被阻塞, 直到有一个线程调用一次unlock()来解除所有阻塞\n测试代码\nif __name__ == '__main__':\n    print('测试多人阻塞器')\n\n\n    def fun1(value):\n        print('阻塞', value)\n        a.lock()\n        print('  解除', value)\n\n\n    def fun2():\n        print('--2秒后解除所有阻塞--', time.strftime('%H:%M:%S', time.localtime()))\n        time.sleep(2)\n        print('--即将解除所有阻塞--', time.strftime('%H:%M:%S', time.localtime()))\n        a.unlock()\n\n\n    import threading\n    import time\n\n    a = BLock_more()\n\n    for i in range(5):\n        threading.Thread(target=fun1, args=(i,)).start()\n    threading.Thread(target=fun2).start()\n\n    a.join()\n    print('结束')\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/",
    "keywords": "",
    "license": "GNU GENERAL PUBLIC LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zblocker",
    "package_url": "https://pypi.org/project/zblocker/",
    "platform": "all",
    "project_url": "https://pypi.org/project/zblocker/",
    "project_urls": {
      "Homepage": "https://pypi.org/"
    },
    "release_url": "https://pypi.org/project/zblocker/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "阻塞器, 单人阻塞器和多人阻塞器",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4346397,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d620097c96e1341b7f40528b75d6282d824433e31bfe300bad5288e765822e0",
          "md5": "e88436738e46e7afa6fcdeb683abd881",
          "sha256": "ceebb44ab793205f97482521fb45163e0de8dc08af772ddbedecc916f0b1b69e"
        },
        "downloads": -1,
        "filename": "zblocker-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e88436738e46e7afa6fcdeb683abd881",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2899,
        "upload_time": "2018-10-05T02:20:25",
        "upload_time_iso_8601": "2018-10-05T02:20:25.958509Z",
        "url": "https://files.pythonhosted.org/packages/3d/62/0097c96e1341b7f40528b75d6282d824433e31bfe300bad5288e765822e0/zblocker-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43dae828a62ef1c4125763365df843a853282dff5770c677696e4e7c356149f3",
          "md5": "d87f3056eab4b5330df88751cd30d633",
          "sha256": "238d3b64d826d749dffdc10e79b840fa62a7bbc3bd3713e0da7e61ec1e013e02"
        },
        "downloads": -1,
        "filename": "zblocker-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d87f3056eab4b5330df88751cd30d633",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2549,
        "upload_time": "2018-10-05T02:20:27",
        "upload_time_iso_8601": "2018-10-05T02:20:27.325046Z",
        "url": "https://files.pythonhosted.org/packages/43/da/e828a62ef1c4125763365df843a853282dff5770c677696e4e7c356149f3/zblocker-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d620097c96e1341b7f40528b75d6282d824433e31bfe300bad5288e765822e0",
        "md5": "e88436738e46e7afa6fcdeb683abd881",
        "sha256": "ceebb44ab793205f97482521fb45163e0de8dc08af772ddbedecc916f0b1b69e"
      },
      "downloads": -1,
      "filename": "zblocker-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e88436738e46e7afa6fcdeb683abd881",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 2899,
      "upload_time": "2018-10-05T02:20:25",
      "upload_time_iso_8601": "2018-10-05T02:20:25.958509Z",
      "url": "https://files.pythonhosted.org/packages/3d/62/0097c96e1341b7f40528b75d6282d824433e31bfe300bad5288e765822e0/zblocker-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43dae828a62ef1c4125763365df843a853282dff5770c677696e4e7c356149f3",
        "md5": "d87f3056eab4b5330df88751cd30d633",
        "sha256": "238d3b64d826d749dffdc10e79b840fa62a7bbc3bd3713e0da7e61ec1e013e02"
      },
      "downloads": -1,
      "filename": "zblocker-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d87f3056eab4b5330df88751cd30d633",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2549,
      "upload_time": "2018-10-05T02:20:27",
      "upload_time_iso_8601": "2018-10-05T02:20:27.325046Z",
      "url": "https://files.pythonhosted.org/packages/43/da/e828a62ef1c4125763365df843a853282dff5770c677696e4e7c356149f3/zblocker-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}