{
  "info": {
    "author": "",
    "author_email": "Leonardo Corona Garza <leocoronag@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# asciipixels\n\n### Generate dynamic ASCII art with images and videos.\n\nBy Leonardo - UmActually\n\n`asciipixels` is a quick-and-easy library for converting **images** and **videos** to highly customizable [**ASCII art**](#cool-but-what-is-ascii-art). The library has four primary functions that do all the asciification work, and save the result as an image, gif, or video: `image.asciify()`, `image.dynamic_asciify()`, `video.asciify()` and `video.dynamic_asciify()`.\n\nFor a more granular control of what the program should do, the `CoreAsciifier` class (the class behind the primary asciipixels functions) and wrapper functions for both ImageMagick and FFmpeg are also available.\n\n### What Is 'Dynamic' \n\nWhat really sets the asciipixels library apart is the _dynamic_ functionality. In the functions `image.dynamic_asciify()` and `video.dynamic_asciify()` some parameters can change over time. The user can pass **callables** that receive the frame number and return the parameter value, rather than passing the hard-coded value itself. In the example below, the `definition` parameter increases by 16 units every frame. It is modeled by a very simple `lambda` expression.\n\n![Bigweld ASCII Art](https://github.com/UmActually/asciipixels/raw/main/src/asciipixels/resources/example.gif)\n\n### Basic Usage\n\n_Note: asciipixels **depends** on two particular command-line software: **ImageMagick** and **FFmpeg**. If you're a CLI nerd and already have these installed, then go ahead with this guide. If not, go to the [Installation](#installation) section._\n\nUse the corresponding function depending on your use case:\n\n- `image.asciify()` converts image to image. The generated ASCII art is returned as a string and optionally saved in a txt.\n\n- `image.dynamic_asciify()` converts image to gif or mp4 video. Supports dynamic parameters.\n\n- `video.asciify()` converts video to video.\n\n- `video.dynamic_asciify()` converts video to video. Supports dynamic parameters.\n\nAll four have the `path` of the input file as the first argument. The rest of the arguments all have **default values**. Something along these lines is enough to get you started:\n\n```python\nimport asciipixels as ap\nap.image.asciify('foo.png')\n```\n\nThis will generate a new asciified image named `foo2.png`.\n\nIt is important to note that **all functions** except `image.asciify()` **require** a `if __name__ == '__main__'` check in the top level of the user code (_unless_ you are using interactive python on the command line). This is because the library uses **multiprocessing** to speed up frame generation. So, in order to asciify a video, for example, you can do the following:\n\n```python\nimport asciipixels as ap\nif __name__ == '__main__':\n    ap.video.asciify('foo.mp4')\n```\n\nThe most important **parameter** to play around with is the `definition`. It is simply the number of characters in the **horizontal** axis. Defaults to 100 in all functions. Set it too high and the ASCII art will just look like art. Set it too low and it will just look like ASCII.\n\nAlso, keep in mind that you can set the **output resolution** of the image/video. The output dimensions approximate the input dimensions by default, but you can change that with the `out_width` argument.\n\nLastly, if you decide to work with **dark text** on a **light background**, remember to set `reverse_chars` to `True` in order to correct the pixel-to-ASCII mapping.\n\nAs a final example, I made the Bigweld gif in the [What Is 'Dynamic'](#what-is-dynamic) section with the following code:\n\n```python\nimport asciipixels as ap\n\nif __name__ == '__main__':\n    ap.image.dynamic_asciify(\n        'ceo.png',\n        bg_color=255,\n        txt_color=0,\n        definition=lambda f: f * 16,\n        fps=2,\n        frame_count=7,\n        out_width=1000,\n        reverse_chars=True\n    )\n```\n\nThe complete list of parameters/arguments of a given primary function can be found in its documentation.\n\n---\n\n## Installation\n\nTo install asciipixels, use **pip** in the terminal:\n\n**Windows**\n```commandline\npip install asciipixels\n```\n\n**macOS / Linux**\n```commandline\npython3 -m pip install asciipixels\n```\n\nAsciipixels has two **dependencies** that aren't installed automatically. These are **ImageMagick**, for image manipulation, and **FFmpeg**, for video and audio manipulation. You can download them from their **official sites** or by using **Homebrew** (if applicable).\n\n[Install ImageMagick Here](https://imagemagick.org/script/download.php)\n\n[Install FFmpeg Here](https://ffmpeg.org/download.html)\n\n---\n\n## Cool, But What Is ASCII Art\n\nASCII art is simply the representation of images (or video) with **characters** and letters. This art can be composed by using characters that match either the **brightness** or **contour** of a part of an image. This library works with the brightness aspect.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "ascii,art,image,video,dynamic",
    "license": "Copyright (c) 2022 Leonardo Corona Garza Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asciipixels",
    "package_url": "https://pypi.org/project/asciipixels/",
    "platform": null,
    "project_url": "https://pypi.org/project/asciipixels/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/asciipixels/0.1.3/",
    "requires_dist": [
      "Pillow (>=9.0.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Generate dynamic ASCII art with images and videos.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14761100,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd47e964f87ad6d726d879471ba6fe7d4cf29586f0e299aeb001f500d2c0ade9",
          "md5": "5df253181cbb3d7a3605c8de0dae9a28",
          "sha256": "90d9313e69827618ddf1d3906839afbf626d8996d684d6558f958c6f25155b74"
        },
        "downloads": -1,
        "filename": "asciipixels-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5df253181cbb3d7a3605c8de0dae9a28",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 942159,
        "upload_time": "2022-08-15T05:26:23",
        "upload_time_iso_8601": "2022-08-15T05:26:23.746912Z",
        "url": "https://files.pythonhosted.org/packages/cd/47/e964f87ad6d726d879471ba6fe7d4cf29586f0e299aeb001f500d2c0ade9/asciipixels-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2738f5eb82a4ec57ab1329ec8914af0bdbdfce6ab24b52421ea6e42d76a6d41",
          "md5": "96e8e585fcb3fd2c48f99f91a2eff885",
          "sha256": "2bd706be79dda34bf7fd566ce346c690eba9a91ea58e397ecda7cc4f69136bfc"
        },
        "downloads": -1,
        "filename": "asciipixels-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "96e8e585fcb3fd2c48f99f91a2eff885",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 943100,
        "upload_time": "2022-08-15T05:26:26",
        "upload_time_iso_8601": "2022-08-15T05:26:26.260887Z",
        "url": "https://files.pythonhosted.org/packages/e2/73/8f5eb82a4ec57ab1329ec8914af0bdbdfce6ab24b52421ea6e42d76a6d41/asciipixels-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd47e964f87ad6d726d879471ba6fe7d4cf29586f0e299aeb001f500d2c0ade9",
        "md5": "5df253181cbb3d7a3605c8de0dae9a28",
        "sha256": "90d9313e69827618ddf1d3906839afbf626d8996d684d6558f958c6f25155b74"
      },
      "downloads": -1,
      "filename": "asciipixels-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5df253181cbb3d7a3605c8de0dae9a28",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 942159,
      "upload_time": "2022-08-15T05:26:23",
      "upload_time_iso_8601": "2022-08-15T05:26:23.746912Z",
      "url": "https://files.pythonhosted.org/packages/cd/47/e964f87ad6d726d879471ba6fe7d4cf29586f0e299aeb001f500d2c0ade9/asciipixels-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2738f5eb82a4ec57ab1329ec8914af0bdbdfce6ab24b52421ea6e42d76a6d41",
        "md5": "96e8e585fcb3fd2c48f99f91a2eff885",
        "sha256": "2bd706be79dda34bf7fd566ce346c690eba9a91ea58e397ecda7cc4f69136bfc"
      },
      "downloads": -1,
      "filename": "asciipixels-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "96e8e585fcb3fd2c48f99f91a2eff885",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 943100,
      "upload_time": "2022-08-15T05:26:26",
      "upload_time_iso_8601": "2022-08-15T05:26:26.260887Z",
      "url": "https://files.pythonhosted.org/packages/e2/73/8f5eb82a4ec57ab1329ec8914af0bdbdfce6ab24b52421ea6e42d76a6d41/asciipixels-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}