{
  "info": {
    "author": "GuardianAngel",
    "author_email": "zhling2012@live.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "【天使去重】可以做什么？\n=======================\n资料文件夹越来越臃肿？\n自己存的照片文档和小电影复制来复制去占了一大堆空间又不知道删除哪些好？\n多个备份文件夹和文件有重叠但又不敢随便删除又懒得一个个查看而导致浪费空间？\n\n让 【天使去重】 拯救你！\n\n - 无差别去重：不限制文件类型，去除一切重复文件，图片视频音乐文档等等，安全又高效。\n\n - 多个模式可选，可以设置：\n   - 自动检测并处理重复文件，\n   - 自动检测只返回重复文件（不删除），\n   - 交互模式下自动删除，\n   - 交互模式下提示删除\n   \n - 速度快：可设置编码抽样或者多进程，转眼就完成\n\n懒人福音有木有！\n\n预先提醒！这个版本确认删除后不可恢复！请谨慎操作！！！（之后版本会增加恢复功能敬请期待）\n\n怎么安装？\n=========\n```linux shell\n$ pip install duplremover\n```\n或者直接下载 duplremover 文件夹到你的项目目录下也行\n\n怎么使用\n=========\n\n导入并实例化：\n```python\nfrom duplremover.duplicate_remover import DuplRm\n\nDR = DuplRm(directory='your file path',   # 需要去重的文件夹地址\n            recursive_traversal=True,     # 是否检查子文件夹，默认是\n            types=None,                   # 指定检查的文件类型列表，例如['jpg', 'png']，默认为None，即检查所有类型\n            sampling_matching=True,       # 是否以文件二进制抽样的方式去重，默认是\n            interactive_mode=False,       # 是否以交互模式调用，默认否\n            auto_delete=False,            # 是否允许自动删除，默认否\n            remove_zero_size_file=False,  # 是否自动删除0kb的废文件，默认否\n            remove_empty_dirs=False,      # 是否自动删除空白文件夹，默认否\n            multiprocess=False,           # 是否启用多进程（启用后日志输入有影响），默认否\n            log_level=None,               # 日志级别，默认info级别\n            )\n```\n在实例化时指定相应的选项，设置相关功能，特别说明以下这几个：\n\n    recursive_traversal     如果子文件夹的内容是其他的东西，或者肯定没有重复的，那可以设置为False比较保险\n    sampling_matching       以二进制抽样的方式去重，当待去重的文件之间的区别较小的时候（例如超高速连拍的照片），建议设置为False，否则在抽样时很可能错过这些微小的差别，当然速度会慢很多很多。\n    interactive_mode        交互模式下，输出是终端打印（非交互模式输出的是log）。一些情况下需要手动输入字符进行操作确认\n    auto_delete             建议仅在目标文件夹内的文件是非重要的，或者自动化部署时使用（再次提醒！本次版本删除后文件暂时无法恢复，数据无价，谨慎！）\n    multiprocess            启用多进程时，日志输出不正常（将来版本改进），建议在自动化部署时考虑使用\n\n一般情况下，如果只是想确认一下文件夹内是否包含重复文件，只需要设置一个或两个参数即可:\n```python\nfrom duplremover.duplicate_remover import DuplRm\n\nDR = DuplRm('your file path')                           # 只检查并输出重复文件，不进行任何操作\nDR_2 = DuplRm('your file path', interactive_mode=True)  # 检查重复，并且在提示下输入操作字符完成操作\n```\n实例化完成后，便可以直接调用对象的start方法即可:\n```python\nDR.start()\n```\n为了更好的说明效果，我弄了一些测试用的文件（环境是windows，当然linux下也是不成问题的）。\n文件夹结构如下，有一些jpg，mp3，mp4和ini文件，有些是重复的，有些重复文件在子文件夹sub下面：\n\n![Markdown](http://i2.tiimg.com/702641/a989ce5c7d9cebba.jpg)\n![Markdown](http://i2.tiimg.com/702641/6ae55047fbf9d3ca.jpg)\n\n\n以交互模式下实例化并传入文件夹路径：\n```python\nfrom duplremover.duplicate_remover import DuplRm\n\nDR = DuplRm('E:\\\\test\\\\', interactive_mode=True)\nDR.start()\n```\n\n输出如下图：\n![Markdown](http://i2.tiimg.com/702641/59e98b647b2e0ec7.jpg)\n\n程序成功检查出文件夹内的文件类型和对应的数目，这时候你可以冒号后面输入想要去重的文件类型的编号，例如“0”，或者多种类型，用任意符号分割：“0,2,3”，\n直接回车，或者输入其他字符（包括不在选项内的数字，例如“5”），将跳过手动选择，自动选择全部的文件类型。\n\n接下来我要检查全部的文件的重复情况，下图是直接按下回车键的效果：\n![Markdown](http://i2.tiimg.com/702641/9215a609f9a0c6dd.jpg)\n\n可以看见程序开始执行去重检查，先检查了ini文件类型，并且发现了重复的文件，一个位于test文件夹下，另一个位于其子文件夹sub下，\n接下来可以选择需要保留的文件，\"0\" 或者 \"0,1\"，逻辑与上一步一样，留空则保留所有文件。注意如果一旦输入了要保留的文件编号，未被选中的将会被删除\n\n输入“1”按下回车：\n![Markdown](http://i2.tiimg.com/702641/08ad8babbdfb378f.jpg)\n\n程序提示是否确认删除，输入“yes”或者“y”，文件会立马被删除，其他任意字符则或直接回车则跳过\n\n输入“y”并按下回车：\n![Markdown](http://i2.tiimg.com/702641/c914ef6a300b2c35.jpg)\n程序提示文件已经被成功删除掉了，并且立即进入下一个重复文件检测循环，发现ini文件只有这两个重复，则自动进入下一个类型的判断中（JPG类型）。\n\n后面的操作都大同小异，只是确认输入的编号是正确的就行。\n\n最后处理完成，程序会提示总共删除的文件个数：\n![Markdown](http://i2.tiimg.com/702641/319215728fbe3e1b.jpg)\n\n\n如果在交互模式下，auto_delete参数也设置为True的话，除了在开始类型选择时有提示输入检测类型之外，后面的删除都是自动完成，将不会给输入的选项：\n![Markdown](http://i2.tiimg.com/702641/dc54ac1f9f0fdd0d.jpg)\n\n非交互模式下，auto_delete设置为False的输出效果如下：\n![Markdown](http://i1.fuimg.com/702641/7df61b7ec840ef7b.jpg)\n\n此前如果你用一个变量接收调用start方法返回的数据的话，你会发现它是一个字典（如果不是这个模式，返回的使个None值），包含了检测到的重复文件的类型和路径，例如：\n```python\nfrom duplremover.duplicate_remover import DuplRm\n\nDR = DuplRm('E:\\\\test\\\\', interactive_mode=False, auto_delete=False)\nres = DR.start()\nprint(res)\n```\n\nres的值为：\n```python\n{'jpg': ['E:\\\\test\\\\sub\\\\IMG_0003 - 副本.JPG', 'E:\\\\test\\\\IMG_0003 - 副本.JPG', 'E:\\\\test\\\\sub\\\\IMG_0003.JPG', 'E:\\\\test\\\\IMG_0003.JPG'], 'mp3': ['E:\\\\test\\\\test_mp3_file_4.8Mb - 副本.mp3', 'E:\\\\test\\\\test_mp3_file_4.8Mb.mp3'], 'mp4': ['E:\\\\test\\\\test_mp4_file_20Mb - 副本.mp4', 'E:\\\\test\\\\test_mp4_file_20Mb.mp4']}\n```\n\n最后一种模式，非交互模式下启用自动删除，仅建议在非重要数据或者自动程序调用时使用，输出效果如下：\n![Markdown](http://i1.fuimg.com/702641/ce82d7e172b471f6.jpg)\n\n最后再啰嗦一下，数据高无价，操作需谨慎！（删错了重要文件别找我╮（╯＿╰）╭，争取下个版本增加恢复功能）\n====\"# duplremover\"",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GuardianGH/duplremover/tree/master/duplremover",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "duplremover",
    "package_url": "https://pypi.org/project/duplremover/",
    "platform": "",
    "project_url": "https://pypi.org/project/duplremover/",
    "project_urls": {
      "Homepage": "https://github.com/GuardianGH/duplremover/tree/master/duplremover"
    },
    "release_url": "https://pypi.org/project/duplremover/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "remove any duplicated files",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6114067,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb4d073eb7ad9d3555de28ce25c45cf972c6b26d565fa4bc5c0e0ef5b71c4994",
          "md5": "154ccf36640c6e28794e8b563df82681",
          "sha256": "50713043f18bb310b11bc11a3338488a10a681c23187ff86816d7475cc2b48b4"
        },
        "downloads": -1,
        "filename": "duplremover-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "154ccf36640c6e28794e8b563df82681",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9985,
        "upload_time": "2019-10-31T05:04:14",
        "upload_time_iso_8601": "2019-10-31T05:04:14.549579Z",
        "url": "https://files.pythonhosted.org/packages/fb/4d/073eb7ad9d3555de28ce25c45cf972c6b26d565fa4bc5c0e0ef5b71c4994/duplremover-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9ba42091474bd724299348bcdff299c627fb721f2242ba7c3360f218f9dad20",
          "md5": "d00c859cfdec20c899647c3e6adc3230",
          "sha256": "7830ac91ae1007e14721af365dc6798367e2a4f04ddb988daf8b219ca5f2f484"
        },
        "downloads": -1,
        "filename": "duplremover-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d00c859cfdec20c899647c3e6adc3230",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10186,
        "upload_time": "2019-11-01T11:17:34",
        "upload_time_iso_8601": "2019-11-01T11:17:34.829477Z",
        "url": "https://files.pythonhosted.org/packages/a9/ba/42091474bd724299348bcdff299c627fb721f2242ba7c3360f218f9dad20/duplremover-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3beaec6e630ecfb92f6a6db9de307505d67330621613d0fc5e8fad0dad75025a",
          "md5": "b5f121ad46e73b1b3ba775dd7780bd06",
          "sha256": "7bc192a4afc1108cfeaa06df16fb153f1575224075182623ee24a432fa39b825"
        },
        "downloads": -1,
        "filename": "duplremover-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b5f121ad46e73b1b3ba775dd7780bd06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12814,
        "upload_time": "2019-11-11T06:19:36",
        "upload_time_iso_8601": "2019-11-11T06:19:36.341223Z",
        "url": "https://files.pythonhosted.org/packages/3b/ea/ec6e630ecfb92f6a6db9de307505d67330621613d0fc5e8fad0dad75025a/duplremover-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3beaec6e630ecfb92f6a6db9de307505d67330621613d0fc5e8fad0dad75025a",
        "md5": "b5f121ad46e73b1b3ba775dd7780bd06",
        "sha256": "7bc192a4afc1108cfeaa06df16fb153f1575224075182623ee24a432fa39b825"
      },
      "downloads": -1,
      "filename": "duplremover-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b5f121ad46e73b1b3ba775dd7780bd06",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12814,
      "upload_time": "2019-11-11T06:19:36",
      "upload_time_iso_8601": "2019-11-11T06:19:36.341223Z",
      "url": "https://files.pythonhosted.org/packages/3b/ea/ec6e630ecfb92f6a6db9de307505d67330621613d0fc5e8fad0dad75025a/duplremover-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}