{
  "info": {
    "author": "Yasunori Sawaki",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# AzimPy\nEstimate horizontal orientation of ocean-bottom seismograph\n\n![PyPI](https://img.shields.io/pypi/v/AzimPy)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/AzimPy)\n![PyPI - Format](https://img.shields.io/pypi/format/AzimPy)\n![PyPI - Status](https://img.shields.io/pypi/status/AzimPy)\n![GitHub tag (latest by date)](https://img.shields.io/github/v/tag/yasuit21/AzimPy)\n![GitHub release (latest by date)](https://img.shields.io/github/v/release/yasuit21/AzimPy)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7184189.svg)](https://doi.org/10.5281/zenodo.7184189)\n\nCopyright (c) 2022 Yasunori Sawaki[![ORCID](https://orcid.org/sites/default/files/images/orcid_16x16.png)](https://orcid.org/0000-0002-4043-3391) All rights reserved.\n\n[`AzimPy`](https://github.com/yasuit21/AzimPy) is an open-source Python package for estimating the horizontal orientation of ocean-bottom seismographs. \nThis package performs the Rayleigh-wave polarization method (e.g., Stachnik+ 2012; Doran & Laske 2017). \nOne of the main classes `OrientOBS`, inherited from [`obspy.clients.fdsn.Client`](https://docs.obspy.org/packages/autogen/obspy.clients.fdsn.client.Client.html),  searches an earthquake catalog for teleseismic events as a web client and computes Rayleigh-wave polarizations for each event–station pair. \nThis package also provides other classes (e.g., `OrientSingle`, `OrientAnalysis`) and functions for statistical analysis of circular data and plotting the estimated azimuths with uncertainties.\n\n## Terms of use\n- Cite an article below (Sawaki et al., in press) and a Zenodo DOI for the specific version of `AzimPy` when you publish your reseach or make a presentation. The DOI representing the specific version is probably found through [the Zenodo page for the latest version](https://doi.org/10.5281/zenodo.6972713).\n- This package is under development, so any bug reports and suggestions are welcome! \n\n#### Use cases\n- Sawaki, Y., Yamashita, Y., Ohyanagi, S., Garcia, E.S.M., Ito, A., Sugioka, H., Takahashi, T., Shinohara, M., & Ito, Y., Seafloor Depth Controls Seismograph Orientation Uncertainty, *Geophys. J. Int.*, in press, https://doi.org/10.1093/gji/ggac397\n\n## How to install\n\n### [Recommended] Install `AzimPy` from `PyPI` in a new `conda` environment \n\n```\n$ conda create -n azimpy-test python=3.9 jupyter astropy \"matplotlib>=3.5\" \"scipy>=1.4\" pandas numpy tqdm\n$ conda activate azimpy-test\n(azimpy-test) $ conda install -c conda-forge \"obspy>=1.3\" \n(azimpy-test) $ python -m pip install AzimPy\n```\n\n- [Alternative] `pip install` locally in the environment \n\n```\n$ conda create -n azimpy-test python=3.9 jupyter\n$ conda activate azimpy-test\n(azimpy-test) $ git clone -b v0.2.0 https://github.com/yasuit21/AzimPy.git\n(azimpy-test) $ cd AzimPy\n(azimpy-test) $ python -m pip install .\n```\n\n### Optional installation : [`rpy2`](https://rpy2.github.io/)\n\n#### Installation of `R`\n\n```\n(azimpy-test) $ conda install r-essentials r-base r-circular\n```\nNote that this installation will take time.\n\nThen, set environent variables.\n```\nexport R_HOME=/path/to/envs/azimpy-test/lib/R\nexport R_USER=/path/to/envs/azimpy-test/lib/python3.9/site-packages/rpy2\n```\n\n#### Installation of `rpy2` in `PyPI`\n```\n(azimpy-test) $ python -m pip install rpy2\n(azimpy-test) $ python -c \"import azimpy\"\n```\nIf no warning or error is returned, the installation has been completed.\n\n\n## Usage\n\n### Compute Rayleigh-wave polarization\n\n```python\nimport obspy as ob\nfrom azimpy import OrientOBS\n\n## Initialize web client\nobs = OrientOBS(base_url='USGS', timezone=9)\n\n## Query earthquake event catalog\nobs.query_events(\n    starttime=ob.UTCDateTime('20200401000000'),\n    endtime=ob.UTCDateTime('20201001000000'),\n    minmagnitude=6.0,\n    maxdepth=100,\n    orderby='time-asc',\n)\n\n## Compute Rayleigh-wave polarization for each event\n## Raw SAC data should be located in '/path/to/datadir'\nobs.find_stream(\n    '/path/to/datadir',\n    output_path='/path/to/output/stationA1',\n    polezero_fpath='/path/to/polezero/hoge.paz',\n    fileformat=f'*.*.%y%m%d%H%M.sac',\n    freqmin=1./40, freqmax=1./20,\n    max_workers=4,\n    vel_surface=4.0,\n    time_before_arrival=-20.0,\n    time_after_arrival=600.0,\n    distmin=5., distmax=120.,\n)\n```\n\nThen, the output dataframe will be pickled as `stationA1_020_040.pickle` under `/path/to/output/stationA1` directory. The pickled dataframe can be loaded by `pd.read_pickle()`.\n\n### Perform circular statistics and make a plot\n\n#### Single station\n\nThe example uses a single station `stationA1`.\n\n```python\nimport pandas as pd\nfrom azimpy import OrientSingle, read_chtbl\n\n## Init params\nmin_CC = 0.5\nalpha_CI = 0.05  ## 100(1-a)% CI\nbootstrap_iteration = 5000\n\n## The output dataframe of orientations\ndf_orient = pd.read_pickle(\n    '/path/to/output/stationA1/stationA1_020_040.pickle'\n)\n\n## Init OrientSingle for circular statistics\norientsingle_raw = OrientSingle(\n    df_orient, 'stationA1', \n    if_selection=False,  # w/o bootstrap analysis\n    min_CC=min_CC, weight_CC=True,\n)\norientsingle_boot = OrientSingle(\n    df_orient, 'stationA1', \n    if_selection=True,  # perform bootstrap analysis\n    min_CC=min_CC, weight_CC=True, K=5.0,\n    bootstrap_iteration=bootstrap_iteration, alpha_CI=alpha_CI\n)\n\n## Init a figure with subfigures\nfig = plt.figure(figsize=[8,4])\nsubfigs = fig.subfigures(nrows=1, ncols=2).flatten()\n\n## Plot for `orientsingle_raw`\norientsingle_raw.plot(\n    polar=True, \n    fig=subfigs[0], in_parentheses='BB',\n    add_cbar=True\n)\nsubfigs[0].legend(loc=1, bbox_to_anchor=(1,1.15), fontsize='small')\n\n## Plot for `orientsingle_boot`\norientsingle_boot.plot(\n    fig=subfigs[1], in_parentheses='BB',\n)\nsubfigs[1].legend(loc=1, bbox_to_anchor=(1,1.15), fontsize='small')\n\n## Show or save the figure\nfig.savefig()\nplt.show()\n```\n![](./images/sample/single.png)\n\n#### Multiple stations\nThe example uses multiple stations whose names are `stationAX`.\n\n```python\nfrom azimpy import OrientAnalysis\n\nstationList = ['stationA1','stationA2','stationA3','stationA4']\n\n## Channeltable including above stations' info\ndf_chtbl = read_chtbl('/path/to/channeltable.txt')\ndf_chtbl = df_chtbl.query('comp.str.endswith(\"U\")')\n\n## Init OrientAnalysis for circular statistics\noa_raw = OrientAnalysis(\n    if_selection=False,  # w/o bootstrap analysis\n    df_chtbl=df_chtbl, \n    min_CC=min_CC, \n)\noa_boot = OrientAnalysis(\n    if_selection=True,  # perform bootstrap analysis\n    df_chtbl=df_chtbl, \n    min_CC=min_CC, alpha_CI=alpha_CI, \n    bootstrap_iteration=bootstrap_iteration, \n)\n\nfor stationName in stationList:\n    period = df_chtbl.at[stationName,'period']\n    df_orient = pd.read_pickle(\n        f'/path/to/output/{stationName}/{stationName}_020_040.pickle'\n    )\n    ## Add the dataframe in `oa_raw`\n    ## This is actually passed to `OrientSingle`\n    oa_raw.add_station(\n        df_orient, stationName, \n        period=period\n    )\n    ## Add the dataframe in `oa_boot`\n    oa_boot.add_station(\n        df_orient, stationName, \n        period=period\n    )\n```\n\n- Plot the results using `matplotlib.pyplot`\n    - Original results w/o bootstrap resampling\n    ```python\n    fig = oa_raw.plot()\n    ```\n    - Results of bootstrap analysis\n    ```python\n    fig = oa_boot.plot()\n    ```\n\n\n## Note\n- `SAC` format is only supported, but you may use some other formats.\n- The observed data files must be located in one directory, where `OrientOBS.find_stream()` will try to search for necessary input files. No waveform data in websites and repository are available in this package at this moment.\n- The author has tested this package in `Linux` environments (`CentOS 7` and `WSL Ubuntu 20.04`), so it might be incompatible when installed in `Windows`.\n- `rpy2` is an optional wrapper to run [`circular`](https://www.rdocumentation.org/packages/circular) in `R` language, which performs the Kuiper test.\n\n\n### References\n- Sawaki, Y., Yamashita, Y., Ohyanagi, S., Garcia, E.S.M., Ito, A., Sugioka, H., Takahashi, T., Shinohara, M., & Ito, Y., Seafloor Depth Controls Seismograph Orientation Uncertainty, *Geophys. J. Int.*, in press, https://doi.org/10.1093/gji/ggac397\n- Stachnik, J.C., Sheehan, A.F., Zietlow, D.W., et al., 2012, Determination of New Zealand ocean bottom seismometer orientation via Rayleigh-wave polarization. *Seismol. Res. Lett.*, 83, 704–713. https://doi.org/10.1785/0220110128 \n- Doran, A.K. & Laske, G., 2017, Ocean‐bottom deismometer instrument orientations via automated Rayleigh‐wave arrival‐angle measurements. *Bull. Seismol. Soc. Am.*, 107, 691–708. https://doi.org/10.1785/0120160165 \n- Takagi, R., Uchida, N., Nakayama, T., et al., 2019, Estimation of the orientations of the S‐net cabled ocean‐bottom sensors. *Seismol. Res. Lett.*, 90, 2175–2187. https://doi.org/10.1785/0220190093\n- [Concept DOI for the latest `AzimPy`: `10.5281/zenodo.6972713`](https://doi.org/10.5281/zenodo.6972713)\n    \n## Acknowledgments\n\nThis package makes use of [`ObsPy v1.3.0`](https://github.com/obspy/obspy) for [FDSN web client services](https://www.fdsn.org/webservices/) and processing seismograms.\n\n\n## License\n\nThis project is licensed under the MIT License, see the `LICENSE` for details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "seismology,ocean bottom seismograph,Rayleigh wave,marine seismology",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AzimPy",
    "package_url": "https://pypi.org/project/AzimPy/",
    "platform": null,
    "project_url": "https://pypi.org/project/AzimPy/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/AzimPy/0.2.0/",
    "requires_dist": [
      "obspy (>=1.3)",
      "astropy (>=5.0)",
      "matplotlib (>=3.5)",
      "scipy (>=1.4)",
      "pandas",
      "numpy",
      "tqdm"
    ],
    "requires_python": ">=3.8",
    "summary": "Estimate OBS sensor orientation",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15369843,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c601488e5684b00e02f99ed0b74e4a7c7d7c362c0c8d0e05bbf2cac31613e817",
          "md5": "50e735ea9364483fa8e462a6ab090f51",
          "sha256": "97d9aa4aa6de14f9500bd9d35f8818faa20aeda5d74ffec35be351037bdf8d4f"
        },
        "downloads": -1,
        "filename": "AzimPy-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50e735ea9364483fa8e462a6ab090f51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 33565,
        "upload_time": "2022-10-11T06:32:57",
        "upload_time_iso_8601": "2022-10-11T06:32:57.835166Z",
        "url": "https://files.pythonhosted.org/packages/c6/01/488e5684b00e02f99ed0b74e4a7c7d7c362c0c8d0e05bbf2cac31613e817/AzimPy-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ba537bc6876aaaa358c07ba9938f7ca02aa9e0efcfd0f16ad1437d7f6f77cb5",
          "md5": "5d2a8a0d26eb47d1540c8865b3db40fc",
          "sha256": "496079bddaef77f17efc2036faab4ba27e6d85b0530c6349a07425e215aeb4c4"
        },
        "downloads": -1,
        "filename": "AzimPy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5d2a8a0d26eb47d1540c8865b3db40fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26654,
        "upload_time": "2022-10-11T06:33:00",
        "upload_time_iso_8601": "2022-10-11T06:33:00.939455Z",
        "url": "https://files.pythonhosted.org/packages/2b/a5/37bc6876aaaa358c07ba9938f7ca02aa9e0efcfd0f16ad1437d7f6f77cb5/AzimPy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "174cd1afb2ecfe8b55755316732a191051d988da0931c78423b8f54c77a99e99",
          "md5": "04b3a8147902b02527863cc382c25ceb",
          "sha256": "fdee1b05a465ced3762d6f407635bdc20697cb415281fb916a9edceb3d69f031"
        },
        "downloads": -1,
        "filename": "AzimPy-0.2.0a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04b3a8147902b02527863cc382c25ceb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 32948,
        "upload_time": "2022-09-21T09:54:50",
        "upload_time_iso_8601": "2022-09-21T09:54:50.998780Z",
        "url": "https://files.pythonhosted.org/packages/17/4c/d1afb2ecfe8b55755316732a191051d988da0931c78423b8f54c77a99e99/AzimPy-0.2.0a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d26731548910d29e822ba9533b0a7236bf4ed533e0bc59865cd7f87b33f555e9",
          "md5": "9b975cb2ba39fd85d3eb84ae6990fd97",
          "sha256": "a0d52e3b30c2278c63b84b1faa36d788ed72fd319516a41abc214ca649832f37"
        },
        "downloads": -1,
        "filename": "AzimPy-0.2.0a2.tar.gz",
        "has_sig": false,
        "md5_digest": "9b975cb2ba39fd85d3eb84ae6990fd97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 25543,
        "upload_time": "2022-09-21T09:54:53",
        "upload_time_iso_8601": "2022-09-21T09:54:53.796000Z",
        "url": "https://files.pythonhosted.org/packages/d2/67/31548910d29e822ba9533b0a7236bf4ed533e0bc59865cd7f87b33f555e9/AzimPy-0.2.0a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41980acddf99b58b60d34e890e3a7159400095032bbd71e2d3264679e56afb3f",
          "md5": "d9d7b4032486bf1542da53e2fb663556",
          "sha256": "a49e9243be4135b04b7633b5ea22aa25f45fb97be93e9c22f4ae89a6e8dbc452"
        },
        "downloads": -1,
        "filename": "AzimPy-0.2.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9d7b4032486bf1542da53e2fb663556",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 33563,
        "upload_time": "2022-09-26T08:13:08",
        "upload_time_iso_8601": "2022-09-26T08:13:08.744430Z",
        "url": "https://files.pythonhosted.org/packages/41/98/0acddf99b58b60d34e890e3a7159400095032bbd71e2d3264679e56afb3f/AzimPy-0.2.0b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a22970079132b6c4b4afc5a43256d96860de20fe530e39059506d5edba293f0b",
          "md5": "5b54a1ce7861b43f2c3894ac8204d234",
          "sha256": "34ebcc8c9ad1a061f44e8ce6322240f591adc6836ff2ef8e91de506343771e90"
        },
        "downloads": -1,
        "filename": "AzimPy-0.2.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b54a1ce7861b43f2c3894ac8204d234",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26615,
        "upload_time": "2022-09-26T08:13:11",
        "upload_time_iso_8601": "2022-09-26T08:13:11.231459Z",
        "url": "https://files.pythonhosted.org/packages/a2/29/70079132b6c4b4afc5a43256d96860de20fe530e39059506d5edba293f0b/AzimPy-0.2.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c601488e5684b00e02f99ed0b74e4a7c7d7c362c0c8d0e05bbf2cac31613e817",
        "md5": "50e735ea9364483fa8e462a6ab090f51",
        "sha256": "97d9aa4aa6de14f9500bd9d35f8818faa20aeda5d74ffec35be351037bdf8d4f"
      },
      "downloads": -1,
      "filename": "AzimPy-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "50e735ea9364483fa8e462a6ab090f51",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 33565,
      "upload_time": "2022-10-11T06:32:57",
      "upload_time_iso_8601": "2022-10-11T06:32:57.835166Z",
      "url": "https://files.pythonhosted.org/packages/c6/01/488e5684b00e02f99ed0b74e4a7c7d7c362c0c8d0e05bbf2cac31613e817/AzimPy-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ba537bc6876aaaa358c07ba9938f7ca02aa9e0efcfd0f16ad1437d7f6f77cb5",
        "md5": "5d2a8a0d26eb47d1540c8865b3db40fc",
        "sha256": "496079bddaef77f17efc2036faab4ba27e6d85b0530c6349a07425e215aeb4c4"
      },
      "downloads": -1,
      "filename": "AzimPy-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5d2a8a0d26eb47d1540c8865b3db40fc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 26654,
      "upload_time": "2022-10-11T06:33:00",
      "upload_time_iso_8601": "2022-10-11T06:33:00.939455Z",
      "url": "https://files.pythonhosted.org/packages/2b/a5/37bc6876aaaa358c07ba9938f7ca02aa9e0efcfd0f16ad1437d7f6f77cb5/AzimPy-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}