{
  "info": {
    "author": "Samuel Movi",
    "author_email": "samuel.software.developer@email.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# DRF Tester\n\nThis module aims to help developers with testing `DjangoRestFramework` API endpoints:\n\n- Minimize the time (and lines of code) required\n- Mantain consistent testing\n- Increase productivity!\n\nThe philosophy behind the design of this module, is that a developer should only need to:\n\n1. Prepare the `setUp` method of a Test class\n2. Choose the correct classes to inheritb for each type of access\n3. Smile!!\n\nThis saves us developers lots of time writing repetitive, boiler-plate code, while reassuring that our tests are, at the very least, consistent.\n\nFor more details, [read the docs](https://drf-tester.readthedocs.io/en/latest/)\n\n## Table of Contents\n\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [BaseDrfTest](#basedrftest)\n- [Viewset Tests](#viewset-tests)\n- [Example](#example)\n- [Contributions](#contributions)\n\n## Requirements\n\n- Python 3.7\n- Django 2.2\n- DjagnoRESTFramework 3.12.2\n- factory-boy 3.1.0\n\n## Installation\n\nTo install `drf-tester` in your systems, use pip:\n\n```bash\n\npip install drf-tester\n\n```\n\n\n## BaseDrfTest\n\nLocated in `drf_tester.utils` this class is the glue that makes it all work.\n\nIt contains the `setUp` method to be run before every test, as well as some helper functions and Object variables.\n\nCheck out the code for more details.\n\n### Built-in Functions\n\nSome generic methods are created for DRYer single-action test classes.\n\n- `get_admin_user(self, data: dict) -> User`\n- `get_active_user(self, data: dict) -> User`\n- `get_active_staff(self, data: dict) -> User`\n- `get_model_instances(self) -> list`\n\n### Object Variables\n\nSome Object-level variables are declared outside of `setUp` for convenience.\n\n- `EXACT_AMOUNT`: if is set to an integer value, `get_model_instances` will return a list of instances of exactly that size.\n- `MIN` and `MAX`: used as limits when using `random.randint` to create a list of instances of random size. Default: `5` and `10`.\n\n### setUp()\n\nThe variables required for correct operation:\n\n```python\nself.endpoint = None    # string with the url of the endpoint\nself.factory = None     # factory-boy class to create model instances\nself.model = None       # the model accessed through the endpoint\nself.instance_data = {}     # dict of valid SERIALIZED data for instance creation\nself.view = viewsets.YourViewSet.as_view({\"get\": \"list\", \"post\": \"create\", \"put\": \"update\", \"delete\": \"destroy\"})\nself.user_data = {}     # Required for authenticated user testing\nself.admin_data = {}    # Required for super user testing\nself.staff_data = {}    # Required for staff user testing\nself.USER_FIELD_NAME = 'creator'    # Required for testing user object access\n```\n\n### Access Level\n\nOnce you know what level of access each kind of user should have, just add those classes to your tests, after `APITestCase`.\n\nExample:\n\n```python\n\nfrom drf_tester.viewsets import anon, admin, auth\n\nclass YourViewSetTest(APITestCase, anon.AnonNoAccess, auth.AuthFullAccess, admin.AdminFullAccess):\n    \"\"\"To test a ModelViewSet with IsAuthenticated as the only Permission\n    \"\"\"\n\n    def setUp(self):\n        ...\n\n```\n\n## Viewset Tests\n\nAll the classes to assist with the development of tests for `ViewSets` are located under `drf_tester.viewsets`, and separated by user type:\n\n- `anon.py`: Anonymous users\n- `auth.py`: Authenticated users\n- `admin.py`: Admin user (superusers)\n- `staff.py`: Staff users\n\nWithin each file, there are classes that test the effects of different actions on the endpoint. For example:\n\n```python\n# drf_tester/viewsets/anon.py\n\nclass NoCreate(BaseDrfTest):\n    def test_anon_user_cannot_create_instance(self):\n        \"\"\"Anonymous user cannot create new instance\"\"\"\n        ...\n\n```\n\nThese single-action classes are grouped in bigger classes meant to be inherited by the final test cases. For example:\n\n```python\n\nclass AnonReadOnly(CanList, CanRetrieve, NoCreate, NoUpdate, NoDestroy):\n    \"\"\"\n    Anonymous user has only read access to endopint\n    \"\"\"\n\n    pass\n\n```\n\nA few different combinations are provided for your convenience:\n\n- For anonymous users:\n    - `AnonNoAccess`\n    - `AnonReadOnly`\n    - `AnonFullAccess`\n- For authenticated users:\n    - `AuthFullAccess`\n    - `AuthNoAccess`\n    - `AuthReadOnly`\n    - `AuthOwner`: only controls instances linked to user\n- For admin users:\n    - `AdminNoAccess`\n    - `AdminReadOnly`\n    - `AdminFullAccess`\n- For staff users:\n    - `StaffNoAccess`\n    - `StaffReadOnly`\n    - `StaffFullAccess`\n\n\nCustom groups can be made mixing and matching classes according with the level of access expected by each user-type from each endpoint.\n\n\n\n## Example\n\nIncluded in the repository, there's an example illustrating how to implement in your project.\n\nFrom `example_one`:\n\n```python\nclass ThingViewSetTest(APITestCase, AnonNoAccess, AuthFullAccess, AdminFullAccess):\n    \"\"\"\n    Thing viewset tests\n    Permission level: IsAuthenticated\n    \"\"\"\n\n    def setUp(self):\n        \"\"\"Tests setup\"\"\"\n        self.endpoint = \"/api/v1/things/\"\n        self.factory = factories.ThingFactory\n        self.model = models.Thing\n        self.view = views.ThingViewSet.as_view({\"get\": \"list\", \"post\": \"create\", \"put\": \"update\", \"delete\": \"destroy\"})\n        self.instance_data = {...}\n        self.user_data = {...}\n        self.admin_data = {...}\n```\n\n\n## Contributions\n\nI would love for the project to cover as many use-cases as possible, and for that I need your help.\n\nThere will always be some customized endpoint functionality that will never be covered by this module, but I'd like to make it as extensive as reasonably possible.\n\nIf you know of any situations for which the current solution won't work, please let me know and I'll try to make allowances for it.\n\nCheck out [CONTRIBUTING.md](contributing.md) for more details.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/samuelmovi/drf-tester/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-tester",
    "package_url": "https://pypi.org/project/drf-tester/",
    "platform": "",
    "project_url": "https://pypi.org/project/drf-tester/",
    "project_urls": {
      "Homepage": "http://github.com/samuelmovi/drf-tester/"
    },
    "release_url": "https://pypi.org/project/drf-tester/0.1.2/",
    "requires_dist": [
      "Django",
      "djangorestframework"
    ],
    "requires_python": ">=3.6",
    "summary": "Testing Suite for DjangoRestFramework developers with deadlines.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11939616,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4f187704bcd5d7f940362686829c8be8672b014d597d02088519dc6d0716230",
          "md5": "29ccec2db1d40c1d67b6a153f67e114b",
          "sha256": "4e16a6682a4c7901a65625191a39b3d091171ea3b57ed6452868039ed79e543f"
        },
        "downloads": -1,
        "filename": "drf_tester-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29ccec2db1d40c1d67b6a153f67e114b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5623,
        "upload_time": "2021-09-09T18:05:21",
        "upload_time_iso_8601": "2021-09-09T18:05:21.440559Z",
        "url": "https://files.pythonhosted.org/packages/c4/f1/87704bcd5d7f940362686829c8be8672b014d597d02088519dc6d0716230/drf_tester-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efd14bbc837573914adc824ad225b942d916a0fea82c86d7dc26b361bcc93897",
          "md5": "0c98a610e9e534120d07534ab341829a",
          "sha256": "5c854a18a792f0ab83c832c21d790403459e633b6f39a73e2c81b865345d1d76"
        },
        "downloads": -1,
        "filename": "drf-tester-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0c98a610e9e534120d07534ab341829a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5298,
        "upload_time": "2021-09-09T18:05:23",
        "upload_time_iso_8601": "2021-09-09T18:05:23.059823Z",
        "url": "https://files.pythonhosted.org/packages/ef/d1/4bbc837573914adc824ad225b942d916a0fea82c86d7dc26b361bcc93897/drf-tester-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67f7b0dc8aae59d796ffe9c4f065838d827d013d3f0dd43ee684323139cc76b6",
          "md5": "65f509d629d9422fe0362413542d7135",
          "sha256": "3b1248350711ff37bcf039e169c16f098392a86ee5f37f5abd483e108ae5db93"
        },
        "downloads": -1,
        "filename": "drf_tester-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65f509d629d9422fe0362413542d7135",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11495,
        "upload_time": "2021-11-05T20:02:45",
        "upload_time_iso_8601": "2021-11-05T20:02:45.571992Z",
        "url": "https://files.pythonhosted.org/packages/67/f7/b0dc8aae59d796ffe9c4f065838d827d013d3f0dd43ee684323139cc76b6/drf_tester-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3242611926a49f5e4c1a33a3b510f3abda2fac8b4d3266139c4e10166726e0ce",
          "md5": "d90e7504d02be54fb4611637aaccfbbe",
          "sha256": "d8afab7800becb568021a7a6b0eb77180e5ef6fbdc539b2e434a0a8d3b5aac4d"
        },
        "downloads": -1,
        "filename": "drf-tester-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d90e7504d02be54fb4611637aaccfbbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10317,
        "upload_time": "2021-11-05T20:02:47",
        "upload_time_iso_8601": "2021-11-05T20:02:47.591401Z",
        "url": "https://files.pythonhosted.org/packages/32/42/611926a49f5e4c1a33a3b510f3abda2fac8b4d3266139c4e10166726e0ce/drf-tester-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67f7b0dc8aae59d796ffe9c4f065838d827d013d3f0dd43ee684323139cc76b6",
        "md5": "65f509d629d9422fe0362413542d7135",
        "sha256": "3b1248350711ff37bcf039e169c16f098392a86ee5f37f5abd483e108ae5db93"
      },
      "downloads": -1,
      "filename": "drf_tester-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "65f509d629d9422fe0362413542d7135",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11495,
      "upload_time": "2021-11-05T20:02:45",
      "upload_time_iso_8601": "2021-11-05T20:02:45.571992Z",
      "url": "https://files.pythonhosted.org/packages/67/f7/b0dc8aae59d796ffe9c4f065838d827d013d3f0dd43ee684323139cc76b6/drf_tester-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3242611926a49f5e4c1a33a3b510f3abda2fac8b4d3266139c4e10166726e0ce",
        "md5": "d90e7504d02be54fb4611637aaccfbbe",
        "sha256": "d8afab7800becb568021a7a6b0eb77180e5ef6fbdc539b2e434a0a8d3b5aac4d"
      },
      "downloads": -1,
      "filename": "drf-tester-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d90e7504d02be54fb4611637aaccfbbe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10317,
      "upload_time": "2021-11-05T20:02:47",
      "upload_time_iso_8601": "2021-11-05T20:02:47.591401Z",
      "url": "https://files.pythonhosted.org/packages/32/42/611926a49f5e4c1a33a3b510f3abda2fac8b4d3266139c4e10166726e0ce/drf-tester-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}