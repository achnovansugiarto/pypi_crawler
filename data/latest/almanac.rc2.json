{
  "info": {
    "author": "Brian Welch",
    "author_email": "welch18@vt.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "<p align=\"center\">\n  <img width=\"600\" height=\"162\" src=\"https://github.com/welchbj/almanac/blob/master/static/logo.png?raw=true\" alt=\"almanac logo\">\n</p>\n<p align=\"center\">\n  <em>a framework for interactive, page-based console applications</em>\n</p>\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/welchbj/almanac\">\n    <img src=\"https://img.shields.io/travis/welchbj/almanac/devel.svg?style=flat-square&label=linux%20build\" alt=\"linux build status\">\n  </a>\n  <a href=\"https://ci.appveyor.com/project/welchbj/almanac\">\n    <img src=\"https://img.shields.io/appveyor/ci/welchbj/almanac/devel.svg?style=flat-square&label=windows%20build\" alt=\"windows build status\">\n  </a>\n  <a href=\"https://pypi.org/project/almanac/\">\n    <img src=\"https://img.shields.io/pypi/v/almanac.svg?style=flat-square&label=pypi\" alt=\"pypi\">\n  </a>\n  <a href=\"https://www.python.org/\">\n    <img src=\"https://img.shields.io/badge/python-3.8+-b042f4.svg?style=flat-square\" alt=\"python version\">\n  </a>\n</p>\n\n---\n\n## Synopsis\n\nThe `almanac` framework aims to serve as an intuitive interface for spinning up interactive, page-based console applications. Think of it as a Python metaprogramming layer on top of [Python Prompt Toolkit](https://github.com/prompt-toolkit/python-prompt-toolkit) and [Pygments](https://pygments.org/).\n\n## Example\n\n`almanac` turns this:\n\n```python\n\"\"\"Welcome to a simple interactive HTTP client.\n\nThe current URL to request is the application's current path. Directories will be\ncreated as you cd into them.\n\"\"\"\n\nimport aiohttp\nimport asyncio\n\nfrom almanac import highlight_for_mimetype, make_standard_app, PagePath\n\napp = make_standard_app()\n\n\n@app.on_init()\nasync def runs_at_start_up():\n    app.io.raw(__doc__)\n\n    app.bag.session = aiohttp.ClientSession()\n    app.io.info('Session opened!')\n\n\n@app.on_exit()\nasync def runs_at_shut_down():\n    await app.bag.session.close()\n    app.io.info('Session closed!')\n\n\n@app.prompt_text()\ndef custom_prompt():\n    stripped_path = str(app.page_navigator.current_page.path).lstrip('/')\n    return f'{stripped_path}> '\n\n\n@app.hook.before('cd')\nasync def cd_hook_before(path: PagePath):\n    if path not in app.page_navigator:\n        app.page_navigator.add_directory_page(path)\n\n\n@app.hook.exception(aiohttp.ClientError)\nasync def handle_aiohttp_errors(exc: aiohttp.ClientError):\n    app.io.error(f'{exc.__class__.__name__}: {str(exc)}')\n\n\n@app.cmd.register()\n@app.arg.method(choices=['GET', 'POST', 'PUT'], description='HTTP verb for request.')\n@app.arg.proto(choices=['http', 'https'], description='Protocol for request.')\nasync def request(method: str, *, proto: str = 'https', **params: str):\n    \"\"\"Send an HTTP or HTTPS request.\"\"\"\n    path = str(app.current_path).lstrip('/')\n    url = f'{proto}://{path}'\n    app.io.info(f'Sending {method} request to {url}...')\n\n    resp = await app.bag.session.request(method, url, params=params)\n    async with resp:\n        text = await resp.text()\n        highlighted_text = highlight_for_mimetype(text, resp.content_type)\n\n        app.io.info(f'Status {resp.status} response from {resp.url}')\n        app.io.info('Here\\'s the content:')\n        app.io.ansi(highlighted_text)\n\n\nif __name__ == '__main__':\n    asyncio.run(app.prompt())\n```\n\nInto this:\n\n<p align=\"center\">\n  <a href=\"https://asciinema.org/a/352061?autoplay=1&speed=1.5\">\n    <img src=\"https://asciinema.org/a/352061.png\" width=\"750\">\n  </a>\n</p>\n\n## Installation\n\nYou can download the latest packaged version from PyPI:\n```sh\npip install almanac\n```\n\nAlternatively, you can get the bleeding-edge version from version control:\n```sh\npip install https://github.com/welchbj/almanac/archive/master.tar.gz\n```\n\n## License\n\nThe original content of this repository is licensed under the [MIT License](https://opensource.org/licenses/MIT), as per the [LICENSE.txt](./LICENSE.txt) file.\n\nSome of the parsing logic is borrowed from the [python-nubia](https://github.com/facebookincubator/python-nubia) project and is licensed under that project's [BSD License](https://github.com/facebookincubator/python-nubia/blob/master/LICENSE). For more information, please see the comment in [`almanac/parsing/parsing.py`](almanac/parsing/parsing.py).\n\n## Development\n\nDevelopment dependencies can be installed with:\n\n```sh\npip install -r deps/dev-requirements.txt\n```\n\nTo run the tests, use:\n\n```sh\npython tasks.py test\n```\n\nTo lint and type check the code, use:\n\n```sh\nflake8 .\nmypy .\n```\n\nWhen it's time to cut a release, use:\n\n```sh\npython setup.py bdist_wheel sdist\ntwine check dist/*.whl dist/*.gz\ntwine upload dist/*.whl dist/*.gz\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://almanac.brianwel.ch",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "almanac",
    "package_url": "https://pypi.org/project/almanac/",
    "platform": "",
    "project_url": "https://pypi.org/project/almanac/",
    "project_urls": {
      "Homepage": "https://almanac.brianwel.ch"
    },
    "release_url": "https://pypi.org/project/almanac/0.1.0/",
    "requires_dist": [
      "munch (==2.5.0)",
      "prompt-toolkit (==3.0.5)",
      "Pygments (==2.6.1)",
      "pyparsing (==2.4.7)",
      "typing-inspect (==0.6.0)",
      "wcwidth (==0.2.5)"
    ],
    "requires_python": "",
    "summary": "a framework for interactive, page-based console applications",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7902640,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a26d640c29f84e9f75eb015537558a129fe71d7ee5e1fd58f5bb49226238290",
          "md5": "53d509517895b0a332d27af806780b19",
          "sha256": "824e8c3bab3ed658f4a6a4849581ada8024542fe5a9cdf469a25b1ebc270ace6"
        },
        "downloads": -1,
        "filename": "almanac-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53d509517895b0a332d27af806780b19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52315,
        "upload_time": "2020-08-01T22:35:51",
        "upload_time_iso_8601": "2020-08-01T22:35:51.949718Z",
        "url": "https://files.pythonhosted.org/packages/5a/26/d640c29f84e9f75eb015537558a129fe71d7ee5e1fd58f5bb49226238290/almanac-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18c06fbdf16df6a321b5dd309a4e87ba29937acab2c513b8b2998b578521547e",
          "md5": "8777f97558ab3951febc9e4191a54faf",
          "sha256": "7aecd677fa11266ec84944cda7bf6a1f89054d68f102e8dab2c199dc5df65158"
        },
        "downloads": -1,
        "filename": "almanac-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8777f97558ab3951febc9e4191a54faf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 71807,
        "upload_time": "2020-08-06T20:33:14",
        "upload_time_iso_8601": "2020-08-06T20:33:14.216893Z",
        "url": "https://files.pythonhosted.org/packages/18/c0/6fbdf16df6a321b5dd309a4e87ba29937acab2c513b8b2998b578521547e/almanac-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50ae34a58f485ac9cc97f8f3342ed7e4016a1b043ecf77f20b20697b65c8a259",
          "md5": "cea293d5cdd82802c16231f2ca3455e3",
          "sha256": "585c2c96c19de1ba81c62d39d96c152de2bed5732da7f412fe834272a118af27"
        },
        "downloads": -1,
        "filename": "almanac-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cea293d5cdd82802c16231f2ca3455e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 45678,
        "upload_time": "2020-08-06T20:33:15",
        "upload_time_iso_8601": "2020-08-06T20:33:15.337987Z",
        "url": "https://files.pythonhosted.org/packages/50/ae/34a58f485ac9cc97f8f3342ed7e4016a1b043ecf77f20b20697b65c8a259/almanac-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18c06fbdf16df6a321b5dd309a4e87ba29937acab2c513b8b2998b578521547e",
        "md5": "8777f97558ab3951febc9e4191a54faf",
        "sha256": "7aecd677fa11266ec84944cda7bf6a1f89054d68f102e8dab2c199dc5df65158"
      },
      "downloads": -1,
      "filename": "almanac-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8777f97558ab3951febc9e4191a54faf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 71807,
      "upload_time": "2020-08-06T20:33:14",
      "upload_time_iso_8601": "2020-08-06T20:33:14.216893Z",
      "url": "https://files.pythonhosted.org/packages/18/c0/6fbdf16df6a321b5dd309a4e87ba29937acab2c513b8b2998b578521547e/almanac-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "50ae34a58f485ac9cc97f8f3342ed7e4016a1b043ecf77f20b20697b65c8a259",
        "md5": "cea293d5cdd82802c16231f2ca3455e3",
        "sha256": "585c2c96c19de1ba81c62d39d96c152de2bed5732da7f412fe834272a118af27"
      },
      "downloads": -1,
      "filename": "almanac-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cea293d5cdd82802c16231f2ca3455e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 45678,
      "upload_time": "2020-08-06T20:33:15",
      "upload_time_iso_8601": "2020-08-06T20:33:15.337987Z",
      "url": "https://files.pythonhosted.org/packages/50/ae/34a58f485ac9cc97f8f3342ed7e4016a1b043ecf77f20b20697b65c8a259/almanac-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}