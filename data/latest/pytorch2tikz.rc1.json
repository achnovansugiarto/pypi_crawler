{
  "info": {
    "author": null,
    "author_email": "Jannes Magnusson <jannes@magnusson.berlin>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Pytorch2Tikz\n[//]: # \"[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.2526396.svg)](https://doi.org/10.5281/zenodo.2526396)\"\n\nGenerate Tikz figures for neural networks implemented in pytorch. It uses LaTeX snippets from [PlotNeuralNet](https://github.com/HarisIqbal88/PlotNeuralNet) but you can now just run your network to plot everything automatically. For examples see `./examples`.\n\n- [Pytorch2Tikz](#pytorch2tikz)\n  - [Example](#example)\n  - [Getting Started](#getting-started)\n  - [Interface](#interface)\n    - [Architecture](#architecture)\n      - [Methods](#methods)\n      - [Methods](#methods-1)\n    - [Block](#block)\n    - [Arguments](#arguments)\n  - [Contributions](#contributions)\n    - [Layer support](#layer-support)\n    - [Custom Connection](#custom-connection)\n    - [Colors](#colors)\n\n\n## Example\n\n```python\nfrom pytorch2tikz import Architecture\n\nprint('Load model')\nmodel = vgg16(True)\n\nprint('Load data')\n...\n\nprint('Init architecture')\narch = Architecture(model)\n\nprint('Run model')\nwith torch.inference_mode():\n    for image, _ in data_loader:\n        image = image.to(device, non_blocking=True)\n        output = model(image)\n\nprint('Write result to out.tex')\narch.save('out.tex')\n```\n\n## Getting Started\n```\npip install pytorch2tikz\n```\n\n## Interface\n\n### Architecture\n\n```python\nArchitecture(module: nn.Module,\n            block_offset=8,\n            height_depth_factor=0.8,\n            width_factor=0.8,\n            linear_factor=0.8,\n            image_path='./input_{i}.png',\n            ignore_layers=['batchnorm', 'flatten'],\n            colors=COLOR_VALUES)\n```\n\n#### Methods\nArgument | description\n---------|-------------\n`module` | is the Model to plot\n`block_offset` | offset to the next block; A block is created when the input dimensions change\n`height_depth_factor` | scale the change of the next layer (last 2 dimensions); typically used to make the network a bit more compact\n`width_factor` | scale the change of the next layer (first dimension); typically used to make the network a bit more compact\n`linear_factor` | used when there is a drastic change in the last dimension (e.g. moving from conv to linear layers)\n`image_path` | output path for recognized input images. `{i}` gets replaced by the current layer index\n`ignore_layers` | define layers that should not be plotted. This can be a list of any substring of the `type(class)` (e.g. torch.nn.modules.batchnorm.BatchNorm)\n`colors` | enum of colors. For an example check out `./pytorch2tikz/constants`\n\n#### Methods\n```python\ndef get_block(self, name: str) -> Block:\n    ...\n```\n\nget a specific block to alter its properties\n\n```python\ndef get_tex(self) -> str:\n    ...\n```\n\ngenerate the tex code\n\n```python\n    \ndef save(self, file_path: str):\n    ...\n```\n\ngenerate and save the tex code to the given path\n\n### Block\n\n```python\nBlock(name,\n    fill: COLOR = COLOR.LINEAR,\n    bandfill: COLOR = None,\n    pictype = PICTYPE.BOX,\n    opacity = 0.7,\n    size = (10,40,40),\n    default_size = DEFAULT_VALUE,\n    dim = 3,\n    scale_factor = np.zeros(3),\n    offset: Tuple[int] = (0,0,0),\n    to: Union[Tuple[int], Block] = (0,0,0),\n    caption = \" \",\n    xlabel = True,\n    ylabel = False,\n    zlabel = True)\n```\n\n### Arguments\n\nArgument | Description\n---------|------------\n`name`   | arbitrary name of the block. Should be unique, and typically the layers id is used\n`fill`   | filling color as hex string, e.g. `#000000`\n`bandfill`| filling of subcolor at the right end of a box. `pictype` should be `PICTYPE.RIGHTBANDEDBOX` ot be displayed\n`pictype` | one of [`PICTYPE.BOX`, `PICTYPE.RIGHTBANDEDBOX`]\n`opacity` | opacity of the filling\n`size`    | size of the box\n`default_size` | Size used for dimensions which are \"flat\": e.g. for 1D inputs the size (default, default, size) is used.\n`dim`     | dimensionality of the block, e.g. 1 for Linear layers, 3 for conv2d layers (channels x dim1 x dim2)\n`scale_factor` | scale factors to alter the size when outputting tex to make the figure more compact\n`offset` | offset to the references position/block in `to`\n`to`     | position tuple or block used for relative positioning\n`capition`| caption of the block. Use an empty string if no caption is wanted\n`xlabel` | display label for 1st dimension\n`ylabel` | display label for 2nd dimension\n`zlabel` | display label for 3nd dimension\n\n## Contributions\n\nThank you for share your improvements to this package!\n\n### Layer support\nPlease don't hesitate to add blocks for unsupported layers under `pytorch2tikz/block/D<x>.py` with `x` being the dimensionality of your layer. If your layer exists for multiple dimensions, choose `Dn.py`:\n\n1. add your block definition under `pytorch2tikz/block/D<x>.py`\n2. add mapping of type string to `pytorch2tikz/mapping.py`\n3. add your color to `pytorch2tikz/constants.py` (see `Colors`)\n\n### Custom Connection\nFor custom connections that can be added in postprocessing of an architecture like residual connections, add your desired connection in `pytorch2tikz/block/connections.py`. See the examples there as a guidance. For existing connections there are a bunch of defined positions for each block:\n\n![](docs/landmarks.png)\n\nEach position can be combined with `(padding-)(near|far)(north|south)(east|west)`.\n\n### Colors\n\nColors are defined in `pytorch2tikz/constants.py`. For each color there must exist an entry in the enum `COLOR` and the defined value in the Dict `COLOR_VALUES`. Make sure your color is easily distinguishable from other layers.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "pytorch2tikz",
    "package_url": "https://pypi.org/project/pytorch2tikz/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytorch2tikz/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pytorch2tikz/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Simple tool to generate a tikz figure of a pytorch module by executing it.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15853387,
  "releases": {
    "0.0.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "06871b0fa85a56fe57f78e260fd76490a38c3abd9aa3f3756987550e593aedb9",
          "md5": "715201ddd7feef53b94b5a8eb8472de7",
          "sha256": "2cc26cfa65c3159388df207f4d21ec0ad5b023282d66d16d88c4e653016ea00f"
        },
        "downloads": -1,
        "filename": "pytorch2tikz-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "715201ddd7feef53b94b5a8eb8472de7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19303,
        "upload_time": "2022-11-22T12:37:18",
        "upload_time_iso_8601": "2022-11-22T12:37:18.340470Z",
        "url": "https://files.pythonhosted.org/packages/06/87/1b0fa85a56fe57f78e260fd76490a38c3abd9aa3f3756987550e593aedb9/pytorch2tikz-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "bc3ddcc108ece2676b989f7f11c1f03bb67885d710a9aea4c9fc711caeed6a1e",
          "md5": "8a82e2e1d85c6a276e73f20671ba3f35",
          "sha256": "b28d40c702148965365f30638aeb732b5af1157d1fc5b2d5a8ebf3b082bb3292"
        },
        "downloads": -1,
        "filename": "pytorch2tikz-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8a82e2e1d85c6a276e73f20671ba3f35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 195181,
        "upload_time": "2022-11-22T12:37:24",
        "upload_time_iso_8601": "2022-11-22T12:37:24.567645Z",
        "url": "https://files.pythonhosted.org/packages/bc/3d/dcc108ece2676b989f7f11c1f03bb67885d710a9aea4c9fc711caeed6a1e/pytorch2tikz-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "06871b0fa85a56fe57f78e260fd76490a38c3abd9aa3f3756987550e593aedb9",
        "md5": "715201ddd7feef53b94b5a8eb8472de7",
        "sha256": "2cc26cfa65c3159388df207f4d21ec0ad5b023282d66d16d88c4e653016ea00f"
      },
      "downloads": -1,
      "filename": "pytorch2tikz-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "715201ddd7feef53b94b5a8eb8472de7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 19303,
      "upload_time": "2022-11-22T12:37:18",
      "upload_time_iso_8601": "2022-11-22T12:37:18.340470Z",
      "url": "https://files.pythonhosted.org/packages/06/87/1b0fa85a56fe57f78e260fd76490a38c3abd9aa3f3756987550e593aedb9/pytorch2tikz-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "bc3ddcc108ece2676b989f7f11c1f03bb67885d710a9aea4c9fc711caeed6a1e",
        "md5": "8a82e2e1d85c6a276e73f20671ba3f35",
        "sha256": "b28d40c702148965365f30638aeb732b5af1157d1fc5b2d5a8ebf3b082bb3292"
      },
      "downloads": -1,
      "filename": "pytorch2tikz-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8a82e2e1d85c6a276e73f20671ba3f35",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 195181,
      "upload_time": "2022-11-22T12:37:24",
      "upload_time_iso_8601": "2022-11-22T12:37:24.567645Z",
      "url": "https://files.pythonhosted.org/packages/bc/3d/dcc108ece2676b989f7f11c1f03bb67885d710a9aea4c9fc711caeed6a1e/pytorch2tikz-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}