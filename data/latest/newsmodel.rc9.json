{
  "info": {
    "author": "Juwon Oh, Jinho Han",
    "author_email": "13a71032776@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Newsmodel pakage\n- Newsmodel pakage는 Tacademy project의 일부입니다.\n   국가간 관계를 학습하고 예측하기 위해 만들어진 패키지입니다.\n- 모델을 학습하고, 학습된 모델을 불러와서 새로운 데이터를 예측합니다.\n\n\n# Features\n\n## Train feature\n\n\n- labeling되어 있는 데이터를 기반으로 모델을 학습합니다.\n- 현재는 3가지 pre-trained model을 지원합니다. \n  - 지원하고 있는 모델은 다음과 같습니다. \"bert\", \"mobilebert\", \"Electra\"\n  - 모델 경량화를 위해 quantization 기능을 지원합니다.\n- 현 데이터에서 모델의 성능은 다음과 같습니다. \n  - 다음의 표는 동일한 random state에서 epoch 100를 한 결과입니다.\n\n| 모델 이름  | 성능(accuracy, F1 score) | 용량 | quantization 용량 | static quantization 정확도 |\n| ---------- | ------------------------ | ---- | ----------------- | -------------------------- |\n| BERT       | 61, 59                   | 420  | 100               | 55                         |\n| Electra    | 64, 63                   | 120  | 42                | 60                         |\n| MobileBert | 70, 67                   | 95   | 31                | 61                         |\n\n- 현재 사용하고 있는 주요한 model은 MobileBert이며, defalt 모델로 사용하고 있습니다.\n\n## Inference feature\n\n\n- 기존에 학습한 모델을 사용하여 새로이 수집한 데이터와 api사용자가 입력한 문장의 관계를 예측 합니다.\n- 사용하고자 하는 model을 지정하기 위해서는 저장된 mlflow server에 있는 model_name과 current stage를 지정해줘야 합니다.\n\n## Preprocessing feature\n\n- Preprocessing에서는 다음과 같은 문제를 고려했고, 문제를 해결하기 위해 전처리 방법을 사용했습니다. \n  1. 문장이 전체 기사에서 중요한 정보를 담고 있는지 -> text rank를 사용한 중요 문장 추출\n  2. 문장이 특정 국가들 사이의 관계에 대한 정보인가 -> 국가를 나타내는 키워드를 기반으로 국가쌍을 추출했습니다.\n  3. 지정한 키워드가 정말로 유의미한 키워드인가 -> NER를 사용해서 고유 명사에 해당하는 키워드가 존재하는 국가쌍만을 분석했습니다.\n\n# Folder Structure\n  ```\n  newsmodel/\n  │\n  ├── inference/ - mlflow에 production 상태에 있는 모델을 불러와서 inference하는 모듈\n  │       ├── inference.py \n  │\n  ├── trainer/ - 기존에 있는 라벨링된 데이터를 기반으로 model을 train하는 모듈\n  │       ├── nlpmodel.py \n  │\n  ├── model/ - 사용될 전체 모델들이 class로 들어가 있는 파일\n  │       ├── model.py\n  │\n  ├── preprocess \n  │       ├── preprocess.py - 전처리 모듈들을 사용해서 파일을 전처리하는 모듈\n  │       ├── textrank.py - textrank 알고리즘을 사용하기 위한 모듈이 있는 파일\n  │       ├── ner.py - ner model을 사용하기 위한 모듈이 있는 파일\n  │       ├── countryset.py - 국가쌍을 사용하기 위한 파일\n  │\n  ├── dataloader\n  │       ├── dataio.py - json 파일과 xlsx 파일을 불러오는 모듈\n  │       ├── dataloader.py - 국가쌍을 사용하기 위한 파일\n  │\n  ├── utils.py - 모델 사전이 들어있는 파일\n  │\n  ├── setup.py - package를 설치하는 모듈\n  ├── data/pgdata - parameter가 local에서 사용할 수 있는 경우에 local에서 사용할 데이터가 있는 폴더\n  │       ├── newsjson: 크롤링된 json 파일들이 들어가는 폴더 \n  │       └── labeled data: 라벨링된 파일이 들어가는 폴더\n  ├── saved_model - 학습된 모델이 저장되는 폴더, inference에 사용하는 모듈을 불러오는 폴더\n  \n \n  ```\n\n# Requirements\n\n- Dependencies\n  - Python >= 3.8)\n  - mlflow >=1.23.1)\n  - torch >=1.4.2+cu111) \n  - transformers>=4.16.2\n  - nltk\n  - progressbar\n- 패키지는 다음의 pypi link(https://pypi.org/project/newsmodel/) 에서도 볼 수 있습니다.\n  \n\n# Usage\n\n## Train\n- Train 기능: 기존에 라벨링된 데이터를 기반으로 모델을 예측하고, 사용자가 지정한 mlflow 서버에 저장합니다.\n\n```\n## model import\nimport newsmodel\nfrom newsmodel.trainer import NewsTrain\n\n## instance setting\nTrainer = NewsTrain(server_uri=\"your_mlflow_server_uri\", experiment_name= \"mobile_bert\", device=\"cuda\")\n\n## model fitting\nmodel, quantized_model, best_accuracy = Trainer.train_model(batch_size, epoch)\n\n## save mlflow\nTrainer.mlflow_save(run_name, model, best_accuracy)\n```\n\n## Inference\n\n- Inference 기능: mlflow에 있는 모델을 사용하여 국가간 관계를 예측합니다.\n```\n## model import\nfrom newsmodel.inference import NewsInference\n\n## instance setting\nInferencer = NewsInference(server_uri= \"your_mlflow_server_uri\", model_name = \"mobile_bert\")\n\n## inference_sentence : 문장 단위로 문장을 분석하고 싶을 때 사용하세요.\ninferenced_label = Inferencer.inference_sentence(input_text)\n\n## inference_df : 데이터 프레임 단위로 문장을 분석하고 싶을 때 사용하세요.\ninferenced_df = Inferencer.inference_df(pandas_df)\n```\n\n## Preprocessing\n\n- preprocessing 기능: 데이터를 원하는 형식으로 불러오고, 전처리를 해줍니다.\n- 이 모듈에서 데이터를 받아오는 방식은 크게 3개입니다. \n  - python내에서 pandas dataframe 객체를 받아오는 방식입니다. \n    이 방식을 사용하기 위해서 NewspieacePreprocess(data = 객체명)을 사용해야 합니다.\n  - json_path를 입력해서 json file이 있는 파일을 받아오는 방식입니다.\n    이 방식을 사용하기 위해서는 NewspieacePreprocess(json_path= 파일 폴더 경로, csv_path = 저장될 원자료 csv 경로, is_json = True)를 입력해줘야 합니다.\n  - csv_path를 입력하여 이미 저장되어 있는 csv를 불러오는 방식입니다.\n        이 방식을 사용하기 위해서는 NewspieacePreprocess(csv_path= 저장되어 있는 원자료 csv 경로, is_csv = True)를 입력해줘야 합니다.\n- preprocessing은 사용자가 저장한 자료를 전처리하여 Textrank, NER, 국가쌍 유무 확인을 해줍니다.\n  \n```\n## model import\nimport newsmodel\nfrom newsmodel.preprocess import NewspieacePreprocess\n\n## instance setting\nPreprocesor = NewspieacePreprocess(body_column_name = \"content\")\n\n## run_preprocessing: 전체 데이터 프레임을 전처리할때 사용하세요. \npreprocessed_df = Preprocesor.run_preprocessing\n\n## morethan_two_countries: 국가쌍을 뽑을때 사용하세요. \nfrom newsmodel.preprocess import morethan_two_countries\n\nmorethan_two_countries(input_text)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/JuwonOh/Tacademy-project/tree/main/NewsModel",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JuwonOh/Tacademy-project",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "newsmodel",
    "package_url": "https://pypi.org/project/newsmodel/",
    "platform": null,
    "project_url": "https://pypi.org/project/newsmodel/",
    "project_urls": {
      "Download": "https://github.com/JuwonOh/Tacademy-project/tree/main/NewsModel",
      "Homepage": "https://github.com/JuwonOh/Tacademy-project"
    },
    "release_url": "https://pypi.org/project/newsmodel/0.28/",
    "requires_dist": [
      "torch (>=1.8.2+cpu)",
      "mlflow (>=1.24.0)",
      "scikit-learn (>=1.0.2)",
      "transformers (>=4.16.2)",
      "nltk",
      "progressbar"
    ],
    "requires_python": ">=3.8",
    "summary": "Tacademy project의 newsmodel을 학습하고 실험하기 위한 패키지 입니다.",
    "version": "0.28",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13635491,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f5a49a84add304901f63e82d3af80c1b55029532340c0c02c90799e5a80e0aa",
          "md5": "7296a9267fb78f0fc509e39f4fb949aa",
          "sha256": "5ef522ea000a89f98303b1521a8c1e59ceacc5d77050ae3623b6422c71e8d37b"
        },
        "downloads": -1,
        "filename": "Newsmodel-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7296a9267fb78f0fc509e39f4fb949aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19647,
        "upload_time": "2022-03-23T06:02:28",
        "upload_time_iso_8601": "2022-03-23T06:02:28.231198Z",
        "url": "https://files.pythonhosted.org/packages/9f/5a/49a84add304901f63e82d3af80c1b55029532340c0c02c90799e5a80e0aa/Newsmodel-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f45bfcfe29023ee205da2ee6ece21f14410e88c0e3881a6f5a10291a09acd79",
          "md5": "2cbc39dacf150a4327c1a26a27f3c09d",
          "sha256": "8c39379ebfeb12346183891b6dea314fbd71ef046e3a5da73e5ac30b6ad476d2"
        },
        "downloads": -1,
        "filename": "newsmodel-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cbc39dacf150a4327c1a26a27f3c09d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21907,
        "upload_time": "2022-03-28T11:28:33",
        "upload_time_iso_8601": "2022-03-28T11:28:33.620501Z",
        "url": "https://files.pythonhosted.org/packages/2f/45/bfcfe29023ee205da2ee6ece21f14410e88c0e3881a6f5a10291a09acd79/newsmodel-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4ca5b7bcffe94eefaf28a186440c2b74ed5e4420a4261fa171c9aa4ace45da4",
          "md5": "a995f916e362c0088765e94ae88b938e",
          "sha256": "a21b963fc810840eb527397b4a0b2e45f5d044c80741fcda9f277d0f25724f50"
        },
        "downloads": -1,
        "filename": "newsmodel-0.21-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a995f916e362c0088765e94ae88b938e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 23774,
        "upload_time": "2022-04-04T04:50:00",
        "upload_time_iso_8601": "2022-04-04T04:50:00.105898Z",
        "url": "https://files.pythonhosted.org/packages/a4/ca/5b7bcffe94eefaf28a186440c2b74ed5e4420a4261fa171c9aa4ace45da4/newsmodel-0.21-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5fb4367e95d0048970a99e78d08e57eadebb9869f83c12e46c5dde312236183",
          "md5": "1e010591b054394da0c8bb81b15d1614",
          "sha256": "2f1d368f6f2615e9ee3b57cc593e742104d3e5b166c07206b75bd4e6dda3f741"
        },
        "downloads": -1,
        "filename": "newsmodel-0.22-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e010591b054394da0c8bb81b15d1614",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 30741,
        "upload_time": "2022-04-14T04:33:39",
        "upload_time_iso_8601": "2022-04-14T04:33:39.818882Z",
        "url": "https://files.pythonhosted.org/packages/e5/fb/4367e95d0048970a99e78d08e57eadebb9869f83c12e46c5dde312236183/newsmodel-0.22-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.24": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fad03e067eaefa1f392ea90b3a94e599033480823e89d8155a80913259526b79",
          "md5": "ebf03f996b2634cc8568461b2d1bd34a",
          "sha256": "b63786b49b6ec8c44873c8c1adce83f0c40846e5512f742b3ee9ecaefb98c973"
        },
        "downloads": -1,
        "filename": "newsmodel-0.24-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ebf03f996b2634cc8568461b2d1bd34a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20179,
        "upload_time": "2022-04-14T06:25:38",
        "upload_time_iso_8601": "2022-04-14T06:25:38.542324Z",
        "url": "https://files.pythonhosted.org/packages/fa/d0/3e067eaefa1f392ea90b3a94e599033480823e89d8155a80913259526b79/newsmodel-0.24-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "708f8940f25292ee7a7e600dd8aefc89a594297e2242e51f4fda34446aac0edf",
          "md5": "f27ece4c5e1d3e937e479c64078ff6d3",
          "sha256": "fdce8f18dc0907c822b4030a1ad628f453624dc39ce70e91736884b7c05de3fa"
        },
        "downloads": -1,
        "filename": "newsmodel-0.25-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f27ece4c5e1d3e937e479c64078ff6d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20738,
        "upload_time": "2022-04-16T06:55:23",
        "upload_time_iso_8601": "2022-04-16T06:55:23.579596Z",
        "url": "https://files.pythonhosted.org/packages/70/8f/8940f25292ee7a7e600dd8aefc89a594297e2242e51f4fda34446aac0edf/newsmodel-0.25-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.26": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "834d76b47e7a12109fcbc3ae388a930b730b3cf0942eb0664ac091465ddc4bf4",
          "md5": "f24aecc10a275f6fabc11ce76f4913f8",
          "sha256": "d65582f524986bbcb8423bd52d9d80429b31b8c26b6e452e073a2af63c094ddf"
        },
        "downloads": -1,
        "filename": "newsmodel-0.26-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f24aecc10a275f6fabc11ce76f4913f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20703,
        "upload_time": "2022-04-17T04:29:04",
        "upload_time_iso_8601": "2022-04-17T04:29:04.923701Z",
        "url": "https://files.pythonhosted.org/packages/83/4d/76b47e7a12109fcbc3ae388a930b730b3cf0942eb0664ac091465ddc4bf4/newsmodel-0.26-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.27": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "559ce77d5a0df9d4738889d70a4957c36a7075b9f3fc4e7e4631ccc61dacfccb",
          "md5": "a5f42afd7a6e284830ce41cfb6c67aa8",
          "sha256": "4cfa676086c855fa8a55f50e5de08696c2bf67130826c5f0e4a0efe55df0cafe"
        },
        "downloads": -1,
        "filename": "newsmodel-0.27-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5f42afd7a6e284830ce41cfb6c67aa8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20394,
        "upload_time": "2022-04-18T06:36:38",
        "upload_time_iso_8601": "2022-04-18T06:36:38.074051Z",
        "url": "https://files.pythonhosted.org/packages/55/9c/e77d5a0df9d4738889d70a4957c36a7075b9f3fc4e7e4631ccc61dacfccb/newsmodel-0.27-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.28": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cb254277854b2b431a0c7f4b6122fe4876751ec59986e9ec7ddaa76067c1468",
          "md5": "119dbfe715964fb4945956c387410b63",
          "sha256": "2f9a0bcfa6f6d76c8a51327621bbe31b60e3742f38b048760ac35257b434a378"
        },
        "downloads": -1,
        "filename": "newsmodel-0.28-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "119dbfe715964fb4945956c387410b63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20707,
        "upload_time": "2022-04-27T06:10:15",
        "upload_time_iso_8601": "2022-04-27T06:10:15.158418Z",
        "url": "https://files.pythonhosted.org/packages/3c/b2/54277854b2b431a0c7f4b6122fe4876751ec59986e9ec7ddaa76067c1468/newsmodel-0.28-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3cb254277854b2b431a0c7f4b6122fe4876751ec59986e9ec7ddaa76067c1468",
        "md5": "119dbfe715964fb4945956c387410b63",
        "sha256": "2f9a0bcfa6f6d76c8a51327621bbe31b60e3742f38b048760ac35257b434a378"
      },
      "downloads": -1,
      "filename": "newsmodel-0.28-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "119dbfe715964fb4945956c387410b63",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 20707,
      "upload_time": "2022-04-27T06:10:15",
      "upload_time_iso_8601": "2022-04-27T06:10:15.158418Z",
      "url": "https://files.pythonhosted.org/packages/3c/b2/54277854b2b431a0c7f4b6122fe4876751ec59986e9ec7ddaa76067c1468/newsmodel-0.28-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}