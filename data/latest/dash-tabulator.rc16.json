{
  "info": {
    "author": "patrick oleary <pjaol+dash@pjaol.com>",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Dash"
    ],
    "description": "# dash_tabulator <!-- omit in toc -->\n\n\n- [Dash Tabulator](#dash-tabulator)\n  - [Features](#features)\n  - [Installation](#installation)\n  - [Usage](#usage)\n  - [Themes](#themes)\n- [Advanced Usage](#advanced-usage)\n  - [Multiple Row Selection](#multiple-row-selection)\n  - [Javascript](#javascript)\n  - [Javascript Cell Formatting Example](#javascript-cell-formatting-example)\n  - [Javascript column resizing capture](#javascript-column-resizing-capture)\n  - [Links](#links)\n\n# Dash Tabulator\n\nDash tabulator is a Dash / Plotly component providing [Tabulator](http://tabulator.info/) capabilities.\nThis is not a fully comprehensive implementation of Tabulator just the basics necessary to get the application working.\nUnder the covers this uses [react-tabulator](https://github.com/ngduc/react-tabulator)\n\n![Dash Tabulator](docs/dash_tabulator.gif)\n\nThis is built on the shoulders of the Dash Plotly team, the Tabulator team, and the React Tabulator team.\nThis readme is probably longer than the code, due to the work of those individuals!\n\n\n## Features\n* [Tabulator Column settings ](http://tabulator.info/docs/4.1/columns)\n  * Sorting / Filtering etc.\n* Data loading through [Dash Plotly callbacks](https://dash.plotly.com/basic-callbacks) \n* Row Click Callbacks \n* Data Changed Callbacks (contains the new data table, note warning on this)\n* Cell Edit Callbacks, capture the cell that was just changed, requires setting \"editor\":\"input\" etc.. on column header\n* Download button to export as [csv / xlsx / pdf](http://tabulator.info/docs/4.2/download) \n  * XLSX & PDF require 3 party js scripts, see above link for details \n* Javascript bindings  \n  * Contributed by Emil Haldrup Eriksen https://github.com/emilhe\n  *  See pull request https://github.com/preftech/dash-tabulator/pull/11\n\n\n## Installation\n\nInstallation can be done with pip in your dash project\n```bash\npip install dash_tabulator\npip install dash_extensions\n```\n\n## Usage\nSample usage \n\n```python\nimport dash_tabulator\nimport dash\nfrom dash.dependencies import Input, Output\nimport dash_html_components as html\nimport dash_core_components as dcc\nfrom textwrap import dedent as d\nimport json\n\n# 3rd party js to export as xlsx\nexternal_scripts = ['https://oss.sheetjs.com/sheetjs/xlsx.full.min.js']\n\n# bootstrap css\nexternal_stylesheets = ['https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css']\n\n# initialize your dash app as normal\napp = dash.Dash(__name__, external_scripts=external_scripts, external_stylesheets=external_stylesheets)\n\nstyles = {\n            'pre': {\n                'border': 'thin lightgrey solid',\n                'overflowX': 'scroll'\n            }\n        }\n\n# Setup some columns \n# This is the same as if you were using tabulator directly in js \n# Notice the column with \"editor\": \"input\" - these cells can be edited\n# See tabulator editor for options http://tabulator.info/docs/4.8/edit\ncolumns = [\n                { \"title\": \"Name\", \"field\": \"name\", \"width\": 150, \"headerFilter\":True, \"editor\":\"input\"},\n                { \"title\": \"Age\", \"field\": \"age\", \"hozAlign\": \"left\", \"formatter\": \"progress\" },\n                { \"title\": \"Favourite Color\", \"field\": \"col\", \"headerFilter\":True },\n                { \"title\": \"Date Of Birth\", \"field\": \"dob\", \"hozAlign\": \"center\" },\n                { \"title\": \"Rating\", \"field\": \"rating\", \"hozAlign\": \"center\", \"formatter\": \"star\" },\n                { \"title\": \"Passed?\", \"field\": \"passed\", \"hozAlign\": \"center\", \"formatter\": \"tickCross\" }\n              ]\n\n# Setup some data\ndata = [\n                {\"id\":1, \"name\":\"Oli Bob\", \"age\":\"12\", \"col\":\"red\", \"dob\":\"\"},\n                {\"id\":2, \"name\":\"Mary May\", \"age\":\"1\", \"col\":\"blue\", \"dob\":\"14/05/1982\"},\n                {\"id\":3, \"name\":\"Christine Lobowski\", \"age\":\"42\", \"col\":\"green\", \"dob\":\"22/05/1982\"},\n                {\"id\":4, \"name\":\"Brendon Philips\", \"age\":\"125\", \"col\":\"orange\", \"dob\":\"01/08/1980\"},\n                {\"id\":5, \"name\":\"Margret Marmajuke\", \"age\":\"16\", \"col\":\"yellow\", \"dob\":\"31/01/1999\"},\n                {\"id\":6, \"name\":\"Fred Savage\", \"age\":\"16\", \"col\":\"yellow\", \"rating\":\"1\", \"dob\":\"31/01/1999\"},\n                {\"id\":6, \"name\":\"Brie Larson\", \"age\":\"30\", \"col\":\"blue\", \"rating\":\"1\", \"dob\":\"31/01/1999\"},\n              ]\n\n# Additional options can be setup here \n# these are passed directly to tabulator\n# In this example we are enabling selection\n# Allowing you to select only 1 row\n# and grouping by the col (color) column \n\noptions = { \"groupBy\": \"col\", \"selectable\":1}\n\n# downloadButtonType\n# takes \n#       css     => class names\n#       text    => Text on the button\n#       type    => type of download (csv/ xlsx / pdf, remember to include appropriate 3rd party js libraries)\n#       filename => filename prefix defaults to data, will download as filename.type\n\ndownloadButtonType = {\"css\": \"btn btn-primary\", \"text\":\"Export\", \"type\":\"xlsx\"}\n\n\n# clearFilterButtonType\n# takes \n#       css     => class names\n#       text    => Text on the button\nclearFilterButtonType = {\"css\": \"btn btn-outline-dark\", \"text\":\"Clear Filters\"}\n\n\n# Add a dash_tabulator table\n# columns=columns,\n# data=data,\n# Can be setup at initialization or added with a callback as shown below \n# thank you @AnnMarieW for that fix\n\n\napp.layout = html.Div([\n    dash_tabulator.DashTabulator(\n        id='tabulator',\n        #columns=columns,\n        #data=data,\n        options=options,\n        downloadButtonType=downloadButtonType,\n        clearFilterButtonType=clearFilterButtonType\n    ),\n    html.Div(id='output'),\n    dcc.Interval(\n                id='interval-component-iu',\n                interval=1*10, # in milliseconds\n                n_intervals=0,\n                max_intervals=0\n            )\n\n])\n\n\n# dash_tabulator can be populated from a dash callback\n@app.callback([ Output('tabulator', 'columns'), \n                Output('tabulator', 'data')],\n                [Input('interval-component-iu', 'n_intervals')]) \ndef initialize(val):\n    return columns, data\n\n# dash_tabulator can register a callback on rowClicked, \n#   cellEdited => a cell with a header that has \"editor\":\"input\" etc.. will be returned with row, initial value, old value, new value\n# dataChanged => full table upon change (use with caution)\n# dataFiltering => header filters as typed, before filtering has occurred (you get partial matching)\n# dataFiltered => header filters and rows of data returned\n# to receive a dict of the row values\n@app.callback(Output('output', 'children'), \n    [Input('tabulator', 'rowClicked'),\n    Input('tabulator', 'cellEdited'),\n    Input('tabulator', 'dataChanged'), \n    Input('tabulator', 'dataFiltering'),\n    Input('tabulator', 'dataFiltered')])\ndef display_output(row, cell, dataChanged, filters, dataFiltered):\n    print(row)\n    print(cell)\n    print(dataChanged)\n    print(filters)\n    print(dataFiltered)\n    return 'You have clicked row {} ; cell {}'.format(row, cell)\n\n\n\n\nif __name__ == '__main__':\n    app.run_server(debug=True)\n\n```\n\nBe aware registering a callback for dataChanged will send the entire table back each time a change occurs\nMake sure you are conscious of the amount of data you are round tripping. \n\ndataFiltering will return the filters before a match has occurred, usually a partial match\n```python\n[{'field': 'col', 'type': 'like', 'value': 'yello'}]\n```\n\ndataFiltered will return the header filter and the row data e.g.\n```python\n{\n    'filters': [{'field': 'col', 'type': 'like', 'value': 'yellow'}], \n    'rows': [\n              None, \n              None, \n              {'id': 5, 'name': 'Margret Marmajuke', 'age': '16', 'col': 'yellow', 'dob': '31/01/1999'}, \n              {'id': 6, 'name': 'Fred Savage', 'age': '16', 'col': 'yellow', 'rating': '1', 'dob': '31/01/1999'}\n              ]\n}\n```\n\n## Themes \nReact-Tabulator comes with several themes that can be used in Dash-Tabulator\nDash-Tabulator uses the default theme tabulator.min.css\nThe theme can be set in the Dash-Tabulator constructor \ne.g.\n```python\napp.layout = html.Div([\n    dash_tabulator.DashTabulator(\n        id='tabulator',\n        theme='tabulator_simple',  #optional\n        options=options,\n        downloadButtonType=downloadButtonType,\n        clearFilterButtonType=clearFilterButtonType,\n    ),\n    ....\n])\n```\nThe following are the built in react-tabulator themes \n- tabulator or default => react-tabulator/lib/css/tabulator.min.css\n- tabulator_modern => react-tabulator/lib/css/tabulator_modern.min.css\n- tabulator_midnight => react-tabulator/lib/css/tabulator_midnight.min.css\n- tabulator_simple => react-tabulator/lib/css/tabulator_simple.min.css\n- tabulator_site => react-tabulator/lib/css/tabulator_site.min.css\n- bootstrap/tabulator_bootstrap => react-tabulator/lib/css/bootstrap/tabulator_bootstrap.min.css\n- bootstrap/tabulator_bootstrap4 => react-tabulator/lib/css/bootstrap/tabulator_bootstrap4.min.css\n- bulma/tabulator_bulma => react-tabulator/lib/css/bulma/tabulator_bulma.min.css\n- materialize/tabulator_materialize => react-tabulator/lib/css/materialize/tabulator_materialize.min.css\n- semantic-ui/tabulator_semantic-ui => react-tabulator/lib/css/semantic-ui/tabulator_semantic-ui.min.css\n\n\n# Advanced Usage \n\n## Multiple Row Selection\nTabulator supports multiple row selection\nTo Enable the table option selectable must be set to the STRING true\n```python\noptions = { \"selectable\":\"true\", ....}\n``` \n\nOnce selectable is set \n```python\n@app.callback(Output('output', 'children'), \n    [Input('tabulator', 'rowClicked'),\n    Input('tabulator', 'multiRowsClicked')]\ndef clickedRows(rowClicked, multiRowsClicked):\n  ......\n  ......\n```\nmultiRowsClicked will now contain an array of all the rows selected\ne.g.\n```python\n [\n    {'id': 6, 'name': 'Fred Savage', 'age': '16', 'col': 'yellow', 'rating': '1', 'dob': '31/01/1999', 'print': 'foo'}, \n    {'id': 5, 'name': 'Margret Marmajuke', 'age': '16', 'col': 'yellow', 'dob': '31/01/1999', 'print': 'foo'}, \n    {'id': 4, 'name': 'Brendon Philips', 'age': '125', 'col': 'orange', 'dob': '01/08/1980', 'print': 'foo'}, \n    {'id': 3, 'name': 'Christine Lobowski', 'age': '42', 'col': 'green', 'dob': '22/05/1982', 'print': 'foo'}\n]\n```\n\nSelect all / deselect all can be accomplished with a header formatter called rowSelection.\n\n```python\ncolumns = [\n                {\"formatter\":\"rowSelection\", \"titleFormatter\":\"rowSelection\", \"hozAlign\":\"center\", \"headerSort\":\"false\"},\n                { \"title\": \"Name\", \"field\": \"name\", \"width\": 150, \"headerFilter\":True, \"editor\":\"input\"},\n```\nFor more options check out http://tabulator.info/docs/4.8/select\n\n\n## Javascript \nTabulator offers a significate amount of callbacks that allow for interactivity with tables to be captured\nand modified http://tabulator.info/docs/4.8/callbacks\nTo enable this functionality we can use Dash-Extensions \n\nCreate an assets folder, add a javascript file with your custom functions\nAn example is provided in assets/custom_tabulator.js\nPlease follow the examples below\n\n## Javascript Cell Formatting Example\nContributed in https://github.com/preftech/dash-tabulator/pull/11\nTabulator offers Javascript formatting of cells http://tabulator.info/docs/3.4?#formatting\nThis a browser side javascript method attached to a header colum.\n\n* Create an assets directory\n  * See https://dash.plotly.com/external-resources for customization options\n* Add a javascript file with a window.<CustomNameSpace> method (below we call it myNamespace)\n  * An example is provided in the assets/custom_tabulator.js file\n  * Note the Namespace and the function printIcon \n* Register that method in your python app \n  * Using  dash_extensions.javascript.Namespace\n* Add the registered function to your colums formatter\n\n\nPython code:\n```python\nfrom dash_extensions.javascript import Namespace\n...\nns = Namespace(\"myNamespace\", \"tabulator\")\n...\ncolumns = [{\"formatter\": ns(\"printIcon\")}, ...]\n```\n\nJavascript code:\n```javascript\nwindow.myNamespace = Object.assign({}, window.myNamespace, {\n    tabulator: {\n        printIcon: function (cell, formatterParams, onRendered) {\n            return \"<i class='fa fa-print'></i>\";\n        }\n    }\n});\n```\n\n## Javascript column resizing capture\nCapturing a column resize, when a user drags a column width\nFrom tabulators callbacks page http://tabulator.info/docs/4.8/callbacks#column\nWe see there's a columnsResized callback\nin our python code in the options dict we can specify a javascript method\n\nassets/custom_tabulator.js\n```javascript\nwindow.myNamespace = Object.assign({}, window.myNamespace, {\n    tabulator: {\n        columnResized : function (column, table) {\n            // column is the tabulator column component\n            // table is the tabulator instance, can be used for table.setProps() to send data back to dash\n            console.log(\"Column is resized\");\n            console.log(column)\n             \n            // send data back to dash, still under work, only updates when state changes\n            // be aware of table rendering and resetting back to original display\n            table.props.setProps({\"columnResized\": column._column.field}) \n        }\n    }\n});\n```\n\nWithin your python code, you can register this method as a tabulator option\n\n```python\nfrom dash_extensions.javascript import Namespace\n...\nns = Namespace(\"CustomNamespace\", \"tabulator\")\n...\noptions = { \"groupBy\": \"col\", \"selectable\":\"true\", \"columnResized\" : ns(\"columnResized\")}\n```\n\nA full list of callbacks available exists http://tabulator.info/docs/4.8/callbacks\n\n\n\n## Links \n\n* Home Page https://github.com/preftech/dash-tabulator\n* Tabulator from @olifolkerd http://tabulator.info/\n* React-Tabulator from @ngduc https://github.com/ngduc/react-tabulator\n* Dash / Plotly from @plotly https://plotly.com/dash/",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/preftech/dash-tabulator",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dash-tabulator",
    "package_url": "https://pypi.org/project/dash-tabulator/",
    "platform": "",
    "project_url": "https://pypi.org/project/dash-tabulator/",
    "project_urls": {
      "Homepage": "https://github.com/preftech/dash-tabulator"
    },
    "release_url": "https://pypi.org/project/dash-tabulator/0.4.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Dash Plotly component providing Tabulator tables",
    "version": "0.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9564183,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb33ebb0adf1b698d4a581f8f7bb415498359f385b0fe83a3d63a095fcf2aa31",
          "md5": "e10d4ebab2d87e48e0b3bc77d3307688",
          "sha256": "8a937bae9905095aa6114e662d79a4ba4430b39a02e7c33eb21babef0c69d7d6"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e10d4ebab2d87e48e0b3bc77d3307688",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 407503,
        "upload_time": "2020-07-07T14:54:00",
        "upload_time_iso_8601": "2020-07-07T14:54:00.597426Z",
        "url": "https://files.pythonhosted.org/packages/fb/33/ebb0adf1b698d4a581f8f7bb415498359f385b0fe83a3d63a095fcf2aa31/dash_tabulator-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d19f1d7872fdc8a37149d2d0e49f06aaea12ff81e40efbd40783bff61d0ae5c",
          "md5": "d38806e062576b9d7f687ee943662095",
          "sha256": "2a43c8f5181d12eb952545c4625a6d3e4d1169f069a102ab1e1d6b3068207d0f"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d38806e062576b9d7f687ee943662095",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 407819,
        "upload_time": "2020-07-07T15:33:00",
        "upload_time_iso_8601": "2020-07-07T15:33:00.040755Z",
        "url": "https://files.pythonhosted.org/packages/3d/19/f1d7872fdc8a37149d2d0e49f06aaea12ff81e40efbd40783bff61d0ae5c/dash_tabulator-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee25407325caa03717702fd2b55b86948367f89bd7354720b016c7ff92f5df19",
          "md5": "126777c70493138fed4b7719c264ff36",
          "sha256": "ee19656a44f0137f1812b04eeff175d0fa2d02a76ced43d2e55c6fc770b312e6"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "126777c70493138fed4b7719c264ff36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 408515,
        "upload_time": "2020-07-07T21:05:13",
        "upload_time_iso_8601": "2020-07-07T21:05:13.160242Z",
        "url": "https://files.pythonhosted.org/packages/ee/25/407325caa03717702fd2b55b86948367f89bd7354720b016c7ff92f5df19/dash_tabulator-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8de9945639c4c795d199d3d21edd14113c62f916eb51b1e5a1f571159f0b603c",
          "md5": "59ed2edd2e5016b660f7cd75156e1a74",
          "sha256": "b8dcfebad7056a6c20cbb80efa88cc32f3eb1b439e115084310fb41d0f4ddd0d"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "59ed2edd2e5016b660f7cd75156e1a74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 409884,
        "upload_time": "2020-07-07T22:51:16",
        "upload_time_iso_8601": "2020-07-07T22:51:16.987197Z",
        "url": "https://files.pythonhosted.org/packages/8d/e9/945639c4c795d199d3d21edd14113c62f916eb51b1e5a1f571159f0b603c/dash_tabulator-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "034f1319f5f0f5b00c8293419db9136926965a2491f3ba818275a0e1041b3c75",
          "md5": "b8622755d22ae1bbd0bdd765647b793f",
          "sha256": "0fddc1b981a383831df26b4e8161976b75574084ffc352dc253b65237b4e6416"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b8622755d22ae1bbd0bdd765647b793f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 411662,
        "upload_time": "2020-07-09T22:13:54",
        "upload_time_iso_8601": "2020-07-09T22:13:54.555971Z",
        "url": "https://files.pythonhosted.org/packages/03/4f/1319f5f0f5b00c8293419db9136926965a2491f3ba818275a0e1041b3c75/dash_tabulator-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c02ba821923e4d976de8913c4dd14e452db7a2df90c28e19977190b351515b3b",
          "md5": "a8c3d7575fe20ab35bcfbd4fb8277e6a",
          "sha256": "c1c3c392d143a4b78fd4f65d5526d19621b4aa0ec57a84bccff05a77bfc9ed1c"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a8c3d7575fe20ab35bcfbd4fb8277e6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 428188,
        "upload_time": "2020-11-17T00:39:32",
        "upload_time_iso_8601": "2020-11-17T00:39:32.307645Z",
        "url": "https://files.pythonhosted.org/packages/c0/2b/a821923e4d976de8913c4dd14e452db7a2df90c28e19977190b351515b3b/dash_tabulator-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27ab2ca7c02f9e8e928fcd1ef425ded07b9354f108e4469a1390493cdd459db6",
          "md5": "4d17fccfe45f9f0000b57d235bbb74ee",
          "sha256": "600eb81ed94bddf8047736d811cdab284bbf5f19b447818ea9e6a1ed06f51a9d"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4d17fccfe45f9f0000b57d235bbb74ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 430292,
        "upload_time": "2020-11-17T05:12:59",
        "upload_time_iso_8601": "2020-11-17T05:12:59.389674Z",
        "url": "https://files.pythonhosted.org/packages/27/ab/2ca7c02f9e8e928fcd1ef425ded07b9354f108e4469a1390493cdd459db6/dash_tabulator-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de3b8dd56f4b0b6ceda90268c83ed82f49c5e497496814849886a2f3878ed2b2",
          "md5": "d01195226ef273e7d341d06f36e0eefd",
          "sha256": "bea89426dc7085b02a6eeeb3d98f41d1e090f54501595edca77deaece86a9c53"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d01195226ef273e7d341d06f36e0eefd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 430302,
        "upload_time": "2020-11-17T15:14:00",
        "upload_time_iso_8601": "2020-11-17T15:14:00.008203Z",
        "url": "https://files.pythonhosted.org/packages/de/3b/8dd56f4b0b6ceda90268c83ed82f49c5e497496814849886a2f3878ed2b2/dash_tabulator-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87735842be8e474d8898a5f5b76dfbcb2758f60e55bad005ae95bff8681f38b0",
          "md5": "cf5bff84476f788656d3b676e69a9d4a",
          "sha256": "db45dcb5f877990b3ee8b0eef426128a3d4565bb93310b63d8e89a6c0dde95c3"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cf5bff84476f788656d3b676e69a9d4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 432462,
        "upload_time": "2020-12-17T16:23:47",
        "upload_time_iso_8601": "2020-12-17T16:23:47.773538Z",
        "url": "https://files.pythonhosted.org/packages/87/73/5842be8e474d8898a5f5b76dfbcb2758f60e55bad005ae95bff8681f38b0/dash_tabulator-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c64512eadcaa8be02b1ee7578e3b24d972b2379060fb5b3c7dfcf1df15b9079e",
          "md5": "c2f54947cdf9ff0c576fcec378b04d16",
          "sha256": "b7a9303fcfbd879664701da5b2eccf2722e6d129277a0194f92ad9bf7cbc968b"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c2f54947cdf9ff0c576fcec378b04d16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 432658,
        "upload_time": "2020-12-22T18:49:33",
        "upload_time_iso_8601": "2020-12-22T18:49:33.720680Z",
        "url": "https://files.pythonhosted.org/packages/c6/45/12eadcaa8be02b1ee7578e3b24d972b2379060fb5b3c7dfcf1df15b9079e/dash_tabulator-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9f615bf83138fcc51b15880254fb9afa9c16114583f9566a198c45d9c267638",
          "md5": "edf7697043e1b2c8245d16cd26be7252",
          "sha256": "7f41ab05647c1ba6b70be41c45ed602c62dbf1e2ecd957c7ae1ab2de8b1bc1b7"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "edf7697043e1b2c8245d16cd26be7252",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 433663,
        "upload_time": "2020-12-22T19:59:09",
        "upload_time_iso_8601": "2020-12-22T19:59:09.954169Z",
        "url": "https://files.pythonhosted.org/packages/b9/f6/15bf83138fcc51b15880254fb9afa9c16114583f9566a198c45d9c267638/dash_tabulator-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fd219f93df8b32d152038668f93c4c79aa19bc234cf0cb8f6aeaa83f8513f63",
          "md5": "9a42115e7cc42a7f13e77f23b8d27470",
          "sha256": "ffe884182857d0ed34a4f3712e2c287ce3318fced1887edde397077d7ea37b88"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9a42115e7cc42a7f13e77f23b8d27470",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 433936,
        "upload_time": "2020-12-24T14:39:35",
        "upload_time_iso_8601": "2020-12-24T14:39:35.135876Z",
        "url": "https://files.pythonhosted.org/packages/2f/d2/19f93df8b32d152038668f93c4c79aa19bc234cf0cb8f6aeaa83f8513f63/dash_tabulator-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a02434c206bb0e2b5b1e9464ae9f4979b54b43a418d3d9e60b6f7877fdb1b44b",
          "md5": "4b7e7550ac77aa5bfdaaccaae9462ebb",
          "sha256": "734fa40073f47ab358b6cff5d7e4ca8d0a67782aa0865b500ddab261b35f8ed1"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b7e7550ac77aa5bfdaaccaae9462ebb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 437907,
        "upload_time": "2020-12-28T20:00:39",
        "upload_time_iso_8601": "2020-12-28T20:00:39.837221Z",
        "url": "https://files.pythonhosted.org/packages/a0/24/34c206bb0e2b5b1e9464ae9f4979b54b43a418d3d9e60b6f7877fdb1b44b/dash_tabulator-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41d6709108b1cfeb9a5a829fcc4566d1802a82982acba20d5f3ce1ffd6d7b0ed",
          "md5": "867c8a221557627af9fe3ad8dfacb3b3",
          "sha256": "a9685e715326cfe09a24f4a931e2af6ac97c64ddce9f6d5832a3d662eaaa3ce3"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "867c8a221557627af9fe3ad8dfacb3b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 457024,
        "upload_time": "2020-12-29T20:34:56",
        "upload_time_iso_8601": "2020-12-29T20:34:56.835964Z",
        "url": "https://files.pythonhosted.org/packages/41/d6/709108b1cfeb9a5a829fcc4566d1802a82982acba20d5f3ce1ffd6d7b0ed/dash_tabulator-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e3a8fdd37dad49528271e812a92038aaae7cb582e3727e9c5d204a83dfa0f07",
          "md5": "90721412868a199387bf0124c1247ba5",
          "sha256": "7f933b60132acf420c56887b680aa178224c6ce25df74520c03b4fb937a213e1"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "90721412868a199387bf0124c1247ba5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 457072,
        "upload_time": "2021-01-08T16:30:57",
        "upload_time_iso_8601": "2021-01-08T16:30:57.730438Z",
        "url": "https://files.pythonhosted.org/packages/5e/3a/8fdd37dad49528271e812a92038aaae7cb582e3727e9c5d204a83dfa0f07/dash_tabulator-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2306b5ec8a4158453eb2a4b99534235b2778f56a5abbf3d9ba9c4e89ed80d524",
          "md5": "8448f8655f38539be9b1bbce692edcdd",
          "sha256": "b6306151296677716263937b433db110c6aa717a489be891203cf5fb4087ae75"
        },
        "downloads": -1,
        "filename": "dash_tabulator-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8448f8655f38539be9b1bbce692edcdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 457059,
        "upload_time": "2021-02-28T23:35:10",
        "upload_time_iso_8601": "2021-02-28T23:35:10.274634Z",
        "url": "https://files.pythonhosted.org/packages/23/06/b5ec8a4158453eb2a4b99534235b2778f56a5abbf3d9ba9c4e89ed80d524/dash_tabulator-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2306b5ec8a4158453eb2a4b99534235b2778f56a5abbf3d9ba9c4e89ed80d524",
        "md5": "8448f8655f38539be9b1bbce692edcdd",
        "sha256": "b6306151296677716263937b433db110c6aa717a489be891203cf5fb4087ae75"
      },
      "downloads": -1,
      "filename": "dash_tabulator-0.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8448f8655f38539be9b1bbce692edcdd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 457059,
      "upload_time": "2021-02-28T23:35:10",
      "upload_time_iso_8601": "2021-02-28T23:35:10.274634Z",
      "url": "https://files.pythonhosted.org/packages/23/06/b5ec8a4158453eb2a4b99534235b2778f56a5abbf3d9ba9c4e89ed80d524/dash_tabulator-0.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}