{
  "info": {
    "author": "Harold J. Iwen",
    "author_email": "inventorsniche349@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Max - Binary Heap Implementation\nPYPI module that provides Max, Binary Heap, functionality.\n\n#Overview\nDocumentation for the Max - Binary Heap Implementation:\n# 0. Preliminary Information\n\n     Upon Creating a memmap with the build_heap function, a directory that will hold the memmap files\n     will be created. After the build_heap function is finished, an information list will be returned containing\n     the following elements in order: 1. memmap list, 2. # of Levels, 3. Max Occupied Index value, 4. # of Nodes, 5. Data File reference.\n     The Developer should not mess with any of these information list elements. Should the developer accidentally tamper with the list values,\n     there is a recalibration function that will restore the information list; this assumes that the developer does not mess with the\n     files within the created directory. Should the Data file or any other file be erased, the recalibration function will no longer work,\n     and the developer should start over with creating a heap.\n\n     Additionally, since the heap elements are stored in files, the developer can add any elements he/she wants and continue on the next day\n     by using the recalibration function to restore the information list.\n\n# 1. Core Functions:\n\n  How to use: <br/>\n      from MaxHeap import FUNCTION_NAME or from MaxHeap import *\n\n  ## def createBTO()\n      +Creates a memmap matrix of shape:1000 x 1000 and returns an INFO list\n       containing the following: [memmap list, # of Levels, Largest Index, Number of Nodes, Data File]\n\n  ## def getHeightThree(INFO, value)\n     +Returns the height of a certain value within the tree or None if it can't be found...\n     \t      +INFO = information list\n\t      \t      +value = the node value that will be searched for...\n\n  ## def reCalibrateInfo()\n     +This function only requires that the user be within the binary tree directory initially created; if not -1 is returned.\n      -1 is also returned if all of the files within are deleted...\n     \t   + No arguments required...\n\n  ## def isPerfect(INFO)\n     +Returns 1 if the tree is a perfect tree or -1 if not...\n     \t      +INFO = information list\n\n  ## def isFullTree(INFO)\n     +Retruns 1 if all nodes in the tree have 0 or 2 children; -1 if not...\n     \t      +INFO = information list\n\n  ## def BreadthFirstOne(INFO, value)\n     +This function uses the breadth first search algorithm to find a specified node value. Three non-negative values will\n      be returned if the search is successful: x = memmap list component, y = row, z = column -> Or -1, -1, -1 if unseccussful.\n     \t   +INFO = information list\n\t   \t   +value = node value to be searched for...\n\n  ## def getMaxValue(INFO)\n     +returns the max value or None if no values are present.\n     \t      +INFO = information list\n\n  ## def ExtractMaxValue(INFO)\n     +Retruns the max value and deletes it from the tree or returns None if no values are present.\n     \t      +INFO = information list\n\n  ## def AddValue(INFO, Value)\n     +Adds a value to the tree and re-organizes accordingly; returns 'Value' if successful or None if not...\n     \t   +INFO = information list\n\t   \t   +Value = The value to be added...\n\n# Example1:\n\n\tA = createBTO() # A is the information list\n\n\t#add a value\n\tcode = AddValue(A, 100) # code will be 100\n\tcode = AddValue(A, 'Bat') # code will be None ('Bat' isn't added)\n\n\t#extract a value...\n\tvalue = ExtractMaxValue(A) # value will be 100\n\n\t#add a value\n\tcode = AddValue(A, 400) # code will be 400\n\tcode = AddValue(A, 100.56) # code will be 100.56\n\n\t#get max value...\n\tvalue = getMaxValue(A)\n\n\t#see if it is a full tree...\n\tfull = isFullTree(A)\n\n\t#perform a breadth first search...\n\ta, b, c = BreadthFirstOne(A, 3000) # will return -1, -1, -1 since 3000 was not added...\n\n# Example2:\n\n\tSay we have the structure from example 1. We have two values: 400 and 100.56...\n\tIf we wish to quit our work right now and return tomorrow, all we have to do is\n\tsimply quit; when we wish to continue again, the reCalibrateInfo() function can\n\tbe used to restore the original information list...\n\n\t1. We have just quit...\n\t2. In our current directory, we will see another directory of the form\n\t   Max_Heap_Tree_Files(NUMBER).BinaryT...\n\t3. Traverse to the Max Heap directory of the form above...\n\t4. Perform the following line:\n\t   A = reCalibrateInfo() # A is the information list...\n\t   Upon creating a Max-Heap for the first time, developers won't have to worry\n\t   about changing to the newly created directory, as createBTO() does it for\n\t   them. However, if resetting an information list after an event that involved\n\t   quitting and leaving the directory, developers will have to traverse back to\n\t   the directory via additional code (the os.chdir(\"PATH\") function works well).\n\t5. Should there be any deleted files from the directory, an error code will be returned...\n\n\n# History:\n\n\tVersion 2.2: Fixed a small bug in the downward traversal function.\n\n\tVersion 3.0: Has getMaxValue return None if no values are present in the tree\n\t\t     rather than -1; code in the downward traversal function has been\n\t\t     reduced; AddValue returns None if unsuccessful or the same value\n\t\t     that was just added if successful...",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Hiwen-STEM/MaxHeap",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.inventorsniche.com",
    "keywords": "Binary_Tree,Heap,Tree,Max_Heap,Binary",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MaxHeap",
    "package_url": "https://pypi.org/project/MaxHeap/",
    "platform": "",
    "project_url": "https://pypi.org/project/MaxHeap/",
    "project_urls": {
      "Download": "https://github.com/Hiwen-STEM/MaxHeap",
      "Homepage": "https://www.inventorsniche.com"
    },
    "release_url": "https://pypi.org/project/MaxHeap/3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A max-Heap that utilizes numpy memmaps so memory consumption can be reduced.",
    "version": "3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10563316,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e93d4c52fb1e82cfb9adee3695811806c83ffa719f61054d3ea51309b985374",
          "md5": "9f07151d3db788fca22dab31b2aa5443",
          "sha256": "aea9d7e82da1c658f9e64ad2d1e8c59fb3dfdddce917e035d744b4a9a1c898e4"
        },
        "downloads": -1,
        "filename": "MaxHeap-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9f07151d3db788fca22dab31b2aa5443",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7386,
        "upload_time": "2021-05-16T02:19:38",
        "upload_time_iso_8601": "2021-05-16T02:19:38.725978Z",
        "url": "https://files.pythonhosted.org/packages/3e/93/d4c52fb1e82cfb9adee3695811806c83ffa719f61054d3ea51309b985374/MaxHeap-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4013db9af02d7f82fd77247499127f9d20b6405e43213790a7a1b21794952ea0",
          "md5": "3bbd0877f3b0216f0057b4cb7074de64",
          "sha256": "bbd0e1c3bb4772c9af08480f8ae8b9e2221a3727bc19d0b7db844de972d993b2"
        },
        "downloads": -1,
        "filename": "MaxHeap-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3bbd0877f3b0216f0057b4cb7074de64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7195,
        "upload_time": "2021-05-25T02:02:28",
        "upload_time_iso_8601": "2021-05-25T02:02:28.680227Z",
        "url": "https://files.pythonhosted.org/packages/40/13/db9af02d7f82fd77247499127f9d20b6405e43213790a7a1b21794952ea0/MaxHeap-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c491d3637e44327022aa5909486a679a7706e1c064e1ef8ba2c3b3d985b81658",
          "md5": "6583d20c4d0f9c82f8a81534fe268101",
          "sha256": "f1f36dafffd12e75bf6a6a23065a79f4e0ac72be1d93aed88e41dff4cb34285c"
        },
        "downloads": -1,
        "filename": "MaxHeap-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6583d20c4d0f9c82f8a81534fe268101",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7211,
        "upload_time": "2021-05-25T02:07:40",
        "upload_time_iso_8601": "2021-05-25T02:07:40.938403Z",
        "url": "https://files.pythonhosted.org/packages/c4/91/d3637e44327022aa5909486a679a7706e1c064e1ef8ba2c3b3d985b81658/MaxHeap-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee5bd4abd5788f926e61c012566f4a95a305d418f2991b5f0ed2dd26aae32b1f",
          "md5": "d33834b220cf78b8d0c2178a05a95075",
          "sha256": "1f64de806b136810be12d6f0c518d5b170e41be94d97920f2fe09976b87c0e30"
        },
        "downloads": -1,
        "filename": "MaxHeap-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d33834b220cf78b8d0c2178a05a95075",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7201,
        "upload_time": "2021-05-25T02:14:09",
        "upload_time_iso_8601": "2021-05-25T02:14:09.982059Z",
        "url": "https://files.pythonhosted.org/packages/ee/5b/d4abd5788f926e61c012566f4a95a305d418f2991b5f0ed2dd26aae32b1f/MaxHeap-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a2bb0ecfa5d80b28e1a7522b36dc4e2ca9fd4aadac9cb51b142bb8a7400914e",
          "md5": "c135a1fdb0a05b562fc24391a27348ef",
          "sha256": "270eee3ca3c63128eee0d5efbdf9ef398a70d840c757b2e4fc44021bdd3b3df1"
        },
        "downloads": -1,
        "filename": "MaxHeap-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c135a1fdb0a05b562fc24391a27348ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7105,
        "upload_time": "2021-05-25T02:21:32",
        "upload_time_iso_8601": "2021-05-25T02:21:32.150572Z",
        "url": "https://files.pythonhosted.org/packages/9a/2b/b0ecfa5d80b28e1a7522b36dc4e2ca9fd4aadac9cb51b142bb8a7400914e/MaxHeap-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c96c372d61362c9560e8f4022020529f3029c2b43541de91cb80bef3db104f8e",
          "md5": "fb628ea5b10b449a93a69d8000cb0a7c",
          "sha256": "58851e6ce820dbdb779607c10130bc4767fa605b5db7c829c62cec38bf109893"
        },
        "downloads": -1,
        "filename": "MaxHeap-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb628ea5b10b449a93a69d8000cb0a7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8819,
        "upload_time": "2021-06-03T04:26:48",
        "upload_time_iso_8601": "2021-06-03T04:26:48.892430Z",
        "url": "https://files.pythonhosted.org/packages/c9/6c/372d61362c9560e8f4022020529f3029c2b43541de91cb80bef3db104f8e/MaxHeap-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fd678dbf92ad74a6c5df4107762b09f59a646910dd19992d63e233492651805",
          "md5": "bb904217670a2419dcd78c9f70359edf",
          "sha256": "1f6cffe19ef51ed7e5c31efb113cedb6bb4641766f07a95fbe8235caa0c37fcc"
        },
        "downloads": -1,
        "filename": "MaxHeap-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bb904217670a2419dcd78c9f70359edf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8907,
        "upload_time": "2021-06-04T00:25:38",
        "upload_time_iso_8601": "2021-06-04T00:25:38.615768Z",
        "url": "https://files.pythonhosted.org/packages/0f/d6/78dbf92ad74a6c5df4107762b09f59a646910dd19992d63e233492651805/MaxHeap-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbdab0ac105b0d0bd6038d2b1cb66ec76840ba0610768a8ddbddb5ae03d3fc13",
          "md5": "1b1b1fba4fb094a95d17f2218b0565d8",
          "sha256": "a5437532cd583d21d71c5af4bd755bb11b89bf6d4b9306cf7cbf274b6293e070"
        },
        "downloads": -1,
        "filename": "MaxHeap-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1b1b1fba4fb094a95d17f2218b0565d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8901,
        "upload_time": "2021-06-05T00:53:23",
        "upload_time_iso_8601": "2021-06-05T00:53:23.737729Z",
        "url": "https://files.pythonhosted.org/packages/db/da/b0ac105b0d0bd6038d2b1cb66ec76840ba0610768a8ddbddb5ae03d3fc13/MaxHeap-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaf6175bd7a1546a32b1123c0ff23e13c88082ab6ac1f6a75e304147f9e8137f",
          "md5": "7bec66adc926a44136de95d05d04ab75",
          "sha256": "d8b79528096539ca06cba4059ff477a5da9a2d1093e9e83a7b91840575b9aba9"
        },
        "downloads": -1,
        "filename": "MaxHeap-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7bec66adc926a44136de95d05d04ab75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9266,
        "upload_time": "2021-06-05T03:00:23",
        "upload_time_iso_8601": "2021-06-05T03:00:23.135684Z",
        "url": "https://files.pythonhosted.org/packages/ea/f6/175bd7a1546a32b1123c0ff23e13c88082ab6ac1f6a75e304147f9e8137f/MaxHeap-3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eaf6175bd7a1546a32b1123c0ff23e13c88082ab6ac1f6a75e304147f9e8137f",
        "md5": "7bec66adc926a44136de95d05d04ab75",
        "sha256": "d8b79528096539ca06cba4059ff477a5da9a2d1093e9e83a7b91840575b9aba9"
      },
      "downloads": -1,
      "filename": "MaxHeap-3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7bec66adc926a44136de95d05d04ab75",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9266,
      "upload_time": "2021-06-05T03:00:23",
      "upload_time_iso_8601": "2021-06-05T03:00:23.135684Z",
      "url": "https://files.pythonhosted.org/packages/ea/f6/175bd7a1546a32b1123c0ff23e13c88082ab6ac1f6a75e304147f9e8137f/MaxHeap-3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}