{
  "info": {
    "author": "",
    "author_email": "Vladimir Prusakov <vladimir.prusakovs@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Networking :: Firewalls"
    ],
    "description": "\r\n.. image:: https://img.shields.io/pypi/v/fortigate-api.svg\r\n   :target: https://pypi.python.org/pypi/fortigate-api\r\n.. image:: https://img.shields.io/pypi/pyversions/fortigate-api.svg\r\n   :target: https://pypi.python.org/pypi/fortigate-api\r\n.. image:: https://img.shields.io/github/last-commit/vladimirs-git/fortigate-api\r\n   :target: https://pypi.python.org/pypi/fortigate-api\r\n\r\nfortigate-api\r\n=============\r\n\r\nPython package to configure Fortigate (Fortios) devices using REST API and SSH.\r\nWith this package, you can change objects in the Fortigate. The most commonly used `Objects`_\r\nare implemented in the `FortigateAPI`_ methods, but you can manipulate any other objects\r\nthat can be accessed through the REST API using the `Fortigate`_ methods.\r\nYou can also get and change the Fortigate configuration through SSH.\r\n\r\nMain features:\r\n\r\n- REST API to create, delete, get, update objects. Move policy before, after other policy.\r\n- SSH Netmiko connector to work with CLI commands.\r\n- CiscoConfParse to search and modify commands in config.\r\n- Usage examples in `./examples`_\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\n.. contents:: **Contents**\r\n    :local:\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nRequirements\r\n------------\r\n\r\nPython >=3.8\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nInstall the package from pypi.org release\r\n\r\n.. code:: bash\r\n\r\n    pip install fortigate-api\r\n\r\nor install the package from github.com release\r\n\r\n.. code:: bash\r\n\r\n    pip install https://github.com/vladimirs-git/fortigate-api/archive/refs/tags/1.1.1.tar.gz\r\n\r\nor install the package from github.com repository\r\n\r\n.. code:: bash\r\n\r\n    pip install git+https://github.com/vladimirs-git/fortigate-api\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nObjects\r\n-------\r\nThe objects implemented in `FortigateAPI`_.\r\nTo get an idea of the objects, you can change the *hostname* in the following URLs and\r\nlook it in the Fortigate web management interface. The first URL is for the Web GUI, the second\r\none is for the REST API. Not all object implemented in `FortigateAPI`_ (only the most used by me),\r\naccess to any other objects is available via `Fortigate`_.\r\n\r\n=================== ================================================================================\r\nObject              GUI and REST API URL to the object, FortiOS v6.4\r\n=================== ================================================================================\r\n`Address`_          https://hostname/ng/firewall/address\r\n\r\n                    https://hostname/api/v2/cmdb/firewall/address/\r\n\r\n`AddressGroup`_     https://hostname/ng/firewall/address\r\n\r\n                    https://hostname/api/v2/cmdb/firewall/addrgrp/\r\n\r\n`Antivirus`_        https://hostname/ng/utm/antivirus/profile\r\n\r\n                    https://hostname/api/v2/cmdb/antivirus/profile/\r\n\r\n`Application`_      https://hostname/ng/utm/appctrl/sensor\r\n\r\n                    https://hostname/api/v2/cmdb/application/list/\r\n\r\n`DhcpServer`_       https://hostname/ng/interface/edit/{name}\r\n\r\n                    https://hostname/api/v2/cmdb/system.dhcp/server/\r\n\r\n`Interface`_        https://hostname/ng/interface\r\n\r\n                    https://hostname/api/v2/cmdb/system/interface/\r\n\r\n`InternetService`_  https://hostname/ng/firewall/internet_service\r\n\r\n                    https://hostname/api/v2/cmdb/firewall/internet-service/\r\n\r\n`IpPool`_           https://hostname/ng/firewall/ip-pool\r\n\r\n                    https://hostname/api/v2/cmdb/firewall/ippool/\r\n\r\n`Policy`_           https://hostname/ng/firewall/policy/policy/standard\r\n\r\n                    https://hostname/api/v2/cmdb/firewall/policy/\r\n\r\n`Schedule`_         https://hostname/ng/firewall/schedule\r\n\r\n                    https://hostname/api/v2/cmdb/firewall.schedule/onetime/\r\n\r\n`Service`_          https://hostname/ng/firewall/service\r\n\r\n                    https://hostname/api/v2/cmdb/firewall.service/custom/\r\n\r\n`ServiceCategory`_  https://hostname/ng/firewall/service\r\n\r\n                    https://hostname/api/v2/cmdb/firewall.service/category/\r\n\r\n`ServiceGroup`_     https://hostname/ng/firewall/service\r\n\r\n                    https://hostname/api/v2/cmdb/firewall.service/group/\r\n\r\n`SnmpCommunity`_    https://hostname/ng/system/snmp\r\n\r\n                    https://hostname/api/v2/cmdb/system.snmp/community/\r\n\r\n`VirtualIp`_        https://hostname/ng/firewall/virtual-ip\r\n\r\n                    https://hostname/api/v2/cmdb/firewall/vip/\r\n\r\n`Zone`_             https://hostname/ng/interface\r\n\r\n                    https://hostname/api/v2/cmdb/system/zone/\r\n=================== ================================================================================\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nFortigateAPI\r\n------------\r\n**FortigateAPI(host, username, password, scheme, port, timeout, vdom)**\r\nSet of methods for working with the most commonly used `Objects`_.\r\nCode usage examples in *./examples/examples.py*\r\n\r\n=============== ======= ============================================================================\r\nParameter        Type    Description\r\n=============== ======= ============================================================================\r\nhost            *str*   Firewall ip address or hostname\r\nusername        *str*   Administrator name\r\npassword        *str*   Administrator password\r\nscheme          *str*   (optional) \"https\" (default) or \"http\"\r\nport            *int*   (optional) TCP port, by default 443 for \"https\", 80 for \"http\"\r\ntimeout         *int*   (optional) Session timeout minutes (default 15)\r\nverify          *str*   (optional) Enable SSL certificate verification for HTTPS requests. True -  enable, False - disable (default)\r\nvdom            *str*   Name of virtual domain (default \"root\")\r\n=============== ======= ============================================================================\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nAddress\r\n-------\r\nFortiOS v6.4 data example `./examples/yml/address.yml`_\r\n\r\n\r\ncreate()\r\n........\r\n**FortigateAPI.address.create(data)**\r\nCreates address-object in the Fortigate.\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\ndata            *dict*  Data of the address-object\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully created or already exists, *<Response [500]>* Object has not been created in the Fortigate\r\n\r\n\r\ndelete()\r\n........\r\n**FortigateAPI.address.delete(uid, filter)**\r\nDeletes address-object from the Fortigate.\r\nOnly one of the parameters *uid* or *filter* can be used in the same time.\r\n\r\n=============== =================== ================================================================\r\nParameter       Type                Description\r\n=============== =================== ================================================================\r\nuid             *str*               Unique identifier. Name of the address-object. Used to delete a single object\r\nfilter          *str*, *List[str]*  Filters address-objects by one or multiple conditions: equals \"==\", not equals \"!=\", contains \"=@\". Used to delete multiple objects. *Response* with the highest *status_code* (most important error) will be returned. If no address-objects was found and deleted than returns *<Response [200]>*\r\n=============== =================== ================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully deleted, *<Response [404]>* Object absent in the Fortigate\r\n\r\n\r\nget()\r\n.....\r\n**FortigateAPI.address.get(uid, filter)**\r\nGets address-objects, all or filtered by some of params.\r\n\r\n=============== =================== ================================================================\r\nParameter       Type                Description\r\n=============== =================== ================================================================\r\nuid             *str*               Filters address-object by name (unique identifier). Used to get a single object\r\nfilter          *str*, *List[str]*  Filters address-objects by one or multiple conditions: equals \"==\", not equals \"!=\", contains \"=@\". Used to get multiple objects\r\n=============== =================== ================================================================\r\n\r\nReturn\r\n    *List[dict]* List of address-objects\r\n\r\n\r\nis_exist()\r\n..........\r\n**FortigateAPI.address.is_exist(uid)**\r\nChecks does an address-object exists in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\nuid             *str*   Name of the address-object (unique identifier)\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    *bool* True - object exist, False - object does not exist\r\n\r\n\r\nupdate()\r\n........\r\n**FortigateAPI.address.update(data, uid)**\r\nUpdates address-object in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\ndata            *dict*  Data of the address-object\r\nuid             *str*   Name of the address-object, taken from the `uid` parameter or from data[\"name\"]\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully updated, *<Response [404]>* Object has not been updated\r\n\r\n\r\nExamples\r\n........\r\n\r\nAddress examples:\r\n\r\n- Creates address in the Fortigate\r\n- Gets all addresses from the Fortigate\r\n- Gets filtered address by name (unique identifier)\r\n- Filters address by operator *equals* \"==\"\r\n- Filters address by operator *contains* \"=@\"\r\n- Filters address by operator *not equals* \"!=\"\r\n- Updates address data in the Fortigate\r\n- Checks for presence of address in the Fortigate\r\n- Deletes address from the Fortigate by name\r\n- Deletes addresses from the Fortigate by filter\r\n- Checks for absence of address in the Fortigate\r\n- FortigateAPI *with* statement\r\n\r\n`./examples/address.py`_\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nAddressGroup\r\n------------\r\nFortiOS v6.4 data example `./examples/yml/address_group.yml`_\r\n\r\n\r\ncreate()\r\n........\r\n**FortigateAPI.address_group.create(data)**\r\nCreates address-group-object in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\ndata            *dict*  Data of the address-group-object\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully created or already exists, *<Response [500]>* Object has not been created in the Fortigate\r\n\r\n\r\ndelete()\r\n........\r\n**FortigateAPI.address_group.delete(uid, filter)**\r\nDeletes address-group-object from the Fortigate\r\nOnly one of the parameters *uid* or *filter* can be used in the same time.\r\n\r\n=============== =================== ================================================================\r\nParameter       Type                Description\r\n=============== =================== ================================================================\r\nuid             *str*               Name of the address-group-object (unique identifier). Used to delete a single object\r\nfilter          *str*, *List[str]*  Filters address-group-objects by one or multiple conditions: equals \"==\", not equals \"!=\", contains \"=@\". Used to delete multiple objects. *Response* with the highest *status_code* (most important error) will be returned. If no address-objects was found and deleted than returns *<Response [200]>*\r\n=============== =================== ================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully deleted, *<Response [404]>* Object absent in the Fortigate\r\n\r\n\r\nget()\r\n.....\r\n**FortigateAPI.address_group.get(uid, filter)**\r\nGets address-group-objects, all or filtered by some of params.\r\n\r\n=============== =================== ================================================================\r\nParameter       Type                Description\r\n=============== =================== ================================================================\r\nuid             *str*               Filters address-group-object by name (unique identifier). Used to get a single object\r\nfilter          *str*, *List[str]*  Filters address-group-objects by one or multiple conditions: equals \"==\", not equals \"!=\", contains \"=@\". Used to get multiple objects\r\n=============== =================== ================================================================\r\n\r\nReturn\r\n    *List[dict]* List of address-group-objects\r\n\r\n\r\nis_exist()\r\n..........\r\n**FortigateAPI.address_group.is_exist(uid)**\r\nChecks does an address-group-object exists in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\nuid             *str*   Name of the address-group-object (unique identifier)\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    *bool* True - object exist, False - object does not exist\r\n\r\n\r\nupdate()\r\n........\r\n**FortigateAPI.address_group.update(data, uid)**\r\nUpdates address-group-object in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\ndata            *dict*  Data of the address-group-object\r\nuid             *str*   Name of the address-group-object, taken from the `uid` parameter or from data[\"name\"]\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully updated, *<Response [404]>* Object has not been updated\r\n\r\n\r\nExamples\r\n........\r\nAddressGroup examples:\r\n\r\n- Creates address-group in the Fortigate\r\n- Gets all address-groups from the Fortigate\r\n- Gets filtered address-group by name (unique identifier)\r\n- Filters address-group by operator *equals* \"==\"\r\n- Filters address-group by operator *contains* \"=@\"\r\n- Filters address-group by operator *not equals* \"!=\"\r\n- Updates address-group data in the Fortigate\r\n- Checks for presence of address-group in the Fortigate\r\n- Deletes address-group from the Fortigate by name\r\n- Deletes address-groups from the Fortigate by filter\r\n- Checks for absence of address-group in the Fortigate\r\n\r\n`./examples/address_group.py`_\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nAntivirus\r\n---------\r\n**Antivirus** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/antivirus.yml`_\r\n\r\n**FortigateAPI.antivirus.create(data)**\r\n\r\n**FortigateAPI.antivirus.delete(uid, filter)**\r\n\r\n**FortigateAPI.antivirus.get(uid, filter)**\r\n\r\n**FortigateAPI.antivirus.is_exist(uid)**\r\n\r\n**FortigateAPI.antivirus.update(data, uid)**\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nApplication\r\n-----------\r\n**Application** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/application.yml`_\r\n\r\n**FortigateAPI.application.create(data)**\r\n\r\n**FortigateAPI.application.delete(uid, filter)**\r\n\r\n**FortigateAPI.application.get(uid, filter)**\r\n\r\n**FortigateAPI.application.is_exist(uid)**\r\n\r\n**FortigateAPI.antivirus.update(data, uid)**\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nDhcpServer\r\n----------\r\n**DhcpServer** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/dhcp_server.yml`_\r\n\r\n**FortigateAPI.dhcp_server.create(data)** Note, in Fortigate is possible to create multiple DHCP servers with the same settings, you need control duplicates\r\n\r\n**FortigateAPI.dhcp_server.delete(uid, filter)**\r\n\r\n**FortigateAPI.dhcp_server.get(uid, filter)**\r\n\r\n**FortigateAPI.dhcp_server.is_exist(uid)**\r\n\r\n**FortigateAPI.dhcp_server.update(data, uid)**\r\n\r\nDhcpServer examples `./examples/dhcp_server.py`_\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nInterface\r\n---------\r\n**Interface** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/interface.yml`_\r\n\r\n**FortigateAPI.interface.create(data)**\r\n\r\n**FortigateAPI.interface.delete(uid, filter)**\r\n\r\n\r\nget()\r\n.....\r\n**FortigateAPI.interface.get(uid, filter, all)**\r\nGets interface-objects in specified vdom, all or filtered by some of params.\r\n\r\n=============== =================== ================================================================\r\nParameter       Type                Description\r\n=============== =================== ================================================================\r\nuid             *str*               Filters address-object by name (unique identifier). Used to get a single object\r\nfilter          *str*, *List[str]*  Filters address-objects by one or multiple conditions: equals \"==\", not equals \"!=\", contains \"=@\". Used to get multiple objects\r\nall             *bool*              Gets all interface-objects from all vdom\r\n=============== =================== ================================================================\r\n\r\nReturn\r\n    *List[dict]* List of interface-objects\r\n\r\n**FortigateAPI.interface.is_exist(uid)**\r\n\r\n**FortigateAPI.interface.update(data, uid)**\r\n\r\n\r\nExamples\r\n........\r\nInterface examples:\r\n\r\n- Gets all interfaces in vdom \"root\" from the Fortigate\r\n- Gets filtered interface by name (unique identifier)\r\n- Filters interface by operator *equals* \"==\"\r\n- Filters interface by operator contains \"=@\"\r\n- Filters interface by operator *not equals* \"!=\"\r\n- Filters interface by multiple conditions\r\n- Updates interface data in the Fortigate\r\n- Checks for presence of interface in the Fortigate\r\n- Gets all interfaces in vdom \"VDOM\"\r\n\r\n`./examples/interface.py`_\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nInternetService\r\n---------------\r\n**InternetService** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/internet_service.yml`_\r\n\r\n**FortigateAPI.internet_service.create(data)**\r\n\r\n**FortigateAPI.internet_service.delete(uid, filter)**\r\n\r\n**FortigateAPI.internet_service.get(uid, filter)**\r\n\r\n**FortigateAPI.internet_service.is_exist(uid)**\r\n\r\n**FortigateAPI.internet_service.update(data, uid)**\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nIpPool\r\n------\r\n**IpPool** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/ip_pool.yml`_\r\n\r\n**FortigateAPI.ip_pool.create(data)**\r\n\r\n**FortigateAPI.ip_pool.delete(uid, filter)**\r\n\r\n**FortigateAPI.ip_pool.get(uid, filter)**\r\n\r\n**FortigateAPI.ip_pool.is_exist(uid)**\r\n\r\n**FortigateAPI.ip_pool.update(data, uid)**\r\n\r\n\r\nExamples\r\n........\r\nIpPool examples:\r\n\r\n`./examples/ip_pool.py`_\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nPolicy\r\n------\r\nFortiOS v6.4 data example `./examples/yml/policy.yml`_\r\n\r\n\r\ncreate()\r\n........\r\n**FortigateAPI.policy.create(data)**\r\nCreates policy-object in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\ndata            *dict*  Data of the policy-object\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully created or already exists, *<Response [500]>* Object has not been created in the Fortigate\r\n\r\n\r\ndelete()\r\n........\r\nDeletes policy-object from the Fortigate\r\nOnly one of the parameters *uid* or *filter* can be used in the same time.\r\n\r\n=============== =================== ================================================================\r\nParameter       Type                Description\r\n=============== =================== ================================================================\r\nuid             *str*, *int*        Identifier of the policy-object. Used to delete a single object\r\nfilter          *str*, *List[str]*  Filters policy-objects by one or multiple conditions: equals \"==\", not equals \"!=\", contains \"=@\". Used to delete multiple objects. *Response* with the highest *status_code* (most important error) will be returned. If no address-objects was found and deleted than returns *<Response [200]>*\r\n=============== =================== ================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully deleted, *<Response [404]>* Object absent in the Fortigate\r\n\r\n\r\nget()\r\n.....\r\n**FortigateAPI.policy.get(uid, filter)**\r\nGets policy-objects, all or filtered by some of params.\r\nOnly one of the parameters *uid* or *filter* can be used in the same time.\r\nThe parameter *efilter* can be combined with \"srcaddr\", \"srcaddr\", *filter*\r\n\r\n=============== =================== ================================================================\r\nParameter       Type                Description\r\n=============== =================== ================================================================\r\nuid             *str*, *int*        Filters policy-object by policyid (unique identifier). Used to get a single object\r\nfilter          *str*, *List[str]*  Filters policy-objects by one or multiple conditions: equals \"==\", not equals \"!=\", contains \"=@\". Used to get multiple objects\r\nefilter         *str*, *List[str]*  Extended filter: \"srcaddr\", \"dstaddr\" by condition: equals \"==\", not equals \"!=\",  supernets \">=\", subnets \"<=\". Using this option, you can search for rules by subnets and supernets that are configured in Addresses and AddressGroups. See the examples for details.\r\n=============== =================== ================================================================\r\n\r\nReturn\r\n    *List[dict]* List of policy-objects\r\n\r\n\r\nis_exist()\r\n..........\r\n**FortigateAPI.policy.is_exist(uid)** Checks does an policy-object exists in the Fortigate\r\n\r\n=============== =================== ================================================================\r\nParameter       Type                Description\r\n=============== =================== ================================================================\r\nuid             *str*, *int*        Identifier of the policy-object\r\n=============== =================== ================================================================\r\n\r\nReturn\r\n    *bool* True - object exist, False - object does not exist\r\n\r\n\r\nmove()\r\n......\r\n**FortigateAPI.policy.move(uid, position, neighbor)** Move policy to before/after other neighbor-policy\r\n\r\n=============== =================== ================================================================\r\nParameter       Type                Description\r\n=============== =================== ================================================================\r\nuid             *str*, *int*        Identifier of policy being moved\r\nposition        *str*               \"before\" or \"after\" neighbor\r\nneighbor        *str*, *int*        Policy will be moved near to this neighbor-policy\r\n=============== =================== ================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Policy successfully moved, *<Response [500]>* Policy has not been moved\r\n\r\n\r\nupdate()\r\n........\r\n**FortigateAPI.policy.update(data, uid)** Updates policy-object in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\ndata            *dict*  Data of the policy-object\r\nuid             *int*   Policyid of the policy-object, taken from the `uid` parameter or from data[\"policyid\"]\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully updated, *<Response [404]>* Object has not been updated\r\n\r\n\r\nExamples\r\n........\r\nPolicy examples:\r\n\r\n- Creates policy in the Fortigate\r\n- Gets all policies from the Fortigate\r\n- Gets filtered policy by policyid (unique identifier)\r\n- Filters policies by name, by operator *equals* \"==\"\r\n- Filters policies by operator *contains* \"=@\"\r\n- Filters policies by operator *not equals* \"!=\"\r\n- Updates policy data in the Fortigate\r\n- Checks for presence of policy in the Fortigate\r\n- Gets all policies with destination address == \"192.168.1.2/32\"\r\n- Deletes policy from the Fortigate by policyid (unique identifier)\r\n- Deletes policies from the Fortigate by filter (by name)\r\n- Checks for absence of policy in the Fortigate\r\n\r\n`./examples/policy.py`_\r\n\r\n\r\nPolicy Extended Filter examples:\r\n\r\n- Gets the rules where source prefix is equals 127.0.1.0/30\r\n- Gets the rules where source prefix is not equals 127.0.1.0/30\r\n- Gets the rules where source addresses are in subnets of 127.0.1.0/24\r\n- Gets the rules where source prefixes are supernets of address 127.0.1.1/32\r\n- Gets the rules where source prefix are equals 127.0.1.0/30 and destination prefix are equals 127.0.2.0/30\r\n- Delete policy, address-group, addresses from the Fortigate (order is important)\r\n\r\n`./examples/policy_extended_filter.py`_\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nSchedule\r\n--------\r\n**Schedule** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/schedule.yml`_\r\n\r\n**FortigateAPI.schedule.create(data)**\r\n\r\n**FortigateAPI.schedule.delete(uid, filter)**\r\n\r\n**FortigateAPI.schedule.get(uid, filter)**\r\n\r\n**FortigateAPI.schedule.is_exist(uid)**\r\n\r\n**FortigateAPI.schedule.update(data, uid)**\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nService\r\n-------\r\n**Service** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/service.yml`_\r\n\r\n**FortigateAPI.service.create(data)**\r\n\r\n**FortigateAPI.service.delete(uid, filter)**\r\n\r\n**FortigateAPI.service.get(uid, filter)**\r\n\r\n**FortigateAPI.service.is_exist(uid)**\r\n\r\n**FortigateAPI.service.update(data, uid)**\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nServiceCategory\r\n---------------\r\n**ServiceCategory** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/service_category.yml`_\r\n\r\n**FortigateAPI.service_category.create(data)**\r\n\r\n**FortigateAPI.service_category.delete(uid, filter)**\r\n\r\n**FortigateAPI.service_category.get(uid, filter)**\r\n\r\n**FortigateAPI.service_category.is_exist(uid)**\r\n\r\n**FortigateAPI.service_category.update(data, uid)**\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nServiceGroup\r\n------------\r\n**ServiceGroup** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/service_group.yml`_\r\n\r\n**FortigateAPI.service_group.create(data)**\r\n\r\n**FortigateAPI.service_group.delete(uid, filter)**\r\n\r\n**FortigateAPI.service_group.get(uid, filter)**\r\n\r\n**FortigateAPI.service_group.is_exist(uid)**\r\n\r\n**FortigateAPI.service_group.update(data, uid)**\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nSnmpCommunity\r\n-------------\r\n**SnmpCommunity**\r\n\r\nFortiOS v6.4 data example `./examples/yml/snmp_community.yml`_\r\n\r\n**FortigateAPI.snmp_community.create(data)**\r\n\r\n**FortigateAPI.snmp_community.delete(uid, filter)**\r\n\r\n**FortigateAPI.snmp_community.get(uid, filter)**\r\n\r\n**FortigateAPI.snmp_community.is_exist(uid)**\r\n\r\n**FortigateAPI.snmp_community.update(data, uid)**\r\nUpdates snmp-community-object in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\ndata            *dict*  Data of the snmp-community-object\r\nuid             *str*   Name of the snmp-community-object, taken from the `uid` parameter or from data[\"id\"]\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully updated, *<Response [404]>* Object has not been updated\r\n\r\n\r\nExamples\r\n........\r\nSnmpCommunity examples `./examples/snmp_community.py`_\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nVirtualIP\r\n---------\r\n**VirtualIP** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/virtual_ip.yml`_\r\n\r\n**FortigateAPI.virtual_ip.create(data)**\r\n\r\n**FortigateAPI.virtual_ip.delete(uid, filter)**\r\n\r\n**FortigateAPI.virtual_ip.get(uid, filter)**\r\n\r\n**FortigateAPI.virtual_ip.is_exist(uid)**\r\n\r\n**FortigateAPI.virtual_ip.update(data, uid)**\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nZone\r\n----\r\n**Zone** object has the same parameters and methods as `Address`_\r\n\r\nFortiOS v6.4 data example `./examples/yml/zone.yml`_\r\n\r\n**FortigateAPI.zone.create(data)**\r\n\r\n**FortigateAPI.zone.delete(uid, filter)**\r\n\r\n**FortigateAPI.zone.get(uid, filter)**\r\n\r\n**FortigateAPI.zone.is_exist(uid)**\r\n\r\n**FortigateAPI.zone.update(data, uid)**\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nFortigate\r\n---------\r\n**Fortigate(host, username, password, scheme, port, timeout, vdom)**\r\nREST API connector to the Fortigate. Contains generic methods (get, put, delete, etc.)\r\nto work with any objects available through the REST API. `Fortigate`_ is useful for working with\r\nobjects that are not implemented in `FortigateAPI`_\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\nhost            *str*   Firewall ip address or hostname\r\nusername        *str*   Administrator name\r\npassword        *str*   Administrator password\r\nscheme          *str*   (optional) \"https\" (default) or \"http\"\r\nport            *int*   (optional) TCP port, by default 443 for \"https\", 80 for \"http\"\r\ntimeout         *int*   (optional) Session timeout minutes (default 15)\r\nverify          *str*   (optional) Enable SSL certificate verification for HTTPS requests. True -  enable, False - disable (default)\r\nvdom            *str*   Name of virtual domain (default \"root\")\r\n=============== ======= ============================================================================\r\n\r\n\r\nlogin()\r\n.......\r\n**Fortigate.login()** Login to the Fortigate using REST API\r\n\r\n\r\nlogout()\r\n........\r\n**Fortigate.logout()** Logout from the Fortigate using REST API\r\n\r\n\r\nsend_command()\r\n..............\r\n**Fortigate.delete(url)** Sends show command to the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\ncmd             *str*   Show command to send to the Fortigate\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully deleted, *<Response [404]>* Object absent in the Fortigate\r\n\r\n\r\nexist()\r\n.......\r\n**Fortigate.exist(url)** Check does an object exists in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\nurl             *str*   REST API URL to the object\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object exist, *<Response [404]>* Object does not exist\r\n\r\n\r\nget()\r\n.....\r\n**Fortigate.get(url)** GET object configured in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\nurl             *str*   REST API URL to the object\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    *List[dict]* of the objects data\r\n\r\n\r\npost()\r\n......\r\n**Fortigate.post(url, data)** POST (create) object in the Fortigate based on the data\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\nurl             *str*   REST API URL to the object\r\ndata            *dict*  Data of the object\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully created or already exists, *<Response [500]>* Object has not been created or already exist in the Fortigate\r\n\r\n\r\nput()\r\n.....\r\n**Fortigate.put(url, data)** PUT (update) existing object in the Fortigate\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\nurl             *str*   REST API URL to the object\r\ndata            *dict*  Data of the object\r\n=============== ======= ============================================================================\r\n\r\nReturn\r\n    Session response. *<Response [200]>* Object successfully updated, *<Response [404]>* Object has not been updated\r\n\r\n\r\nExamples\r\n........\r\nFortigate examples:\r\n\r\n- Creates address in the Fortigate\r\n- Gets address data from the Fortigate\r\n- Updates address data in the Fortigate\r\n- Checks for presence of address in the Fortigate\r\n- Deletes address from the Fortigate\r\n- Checks for absence of address in the Fortigate\r\n- Fortigate *with* statement\r\n\r\n`./examples/fortigate.py`_\r\n\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nSSH\r\n---\r\n**SSH(host, username, password, ssh)**\r\nSSH connector to the Fortigate. Contains methods to get and put configuration commands using ssh.\r\nNote, FortigateAPI parameter \"vdom\" used in REST API only and not used in SSH.\r\nIn order to send cli commands to a specific vdom, you need \"config vdom\" before.\r\n\r\n=============== ======= ============================================================================\r\nParameter       Type    Description\r\n=============== ======= ============================================================================\r\nhost            *str*   Firewall ip address or hostname\r\nusername        *str*   Administrator name\r\npassword        *str*   Administrator password\r\nssh             *dict*  Netmiko *ConnectHandler* parameters\r\n=============== ======= ============================================================================\r\n\r\n\r\nlogin()\r\n.......\r\n**SSH.login()** Login to the Fortigate using SSH\r\n\r\n\r\nlogout()\r\n........\r\n**SSH.logout()** Logout from the Fortigate using SSH\r\n\r\n\r\nsend_command()\r\n..............\r\n**SSH.send_command(str, kwargs)** Sends the command to the Fortigate\r\n\r\n=============== ============= ======================================================================\r\nParameter       Type          Description\r\n=============== ============= ======================================================================\r\ncmd             *str*         The command to be executed on the Fortigate\r\nkwargs          *dict*        (optional) Netmiko parameters\r\n=============== ============= ======================================================================\r\n\r\nReturn\r\n    Output of the command\r\n\r\n\r\nsend_config_set()\r\n.................\r\n**SSH.send_config_set(cmds, kwargs)** Sends configuration commands to the Fortigate\r\n\r\n=============== ============= ======================================================================\r\nParameter       Type          Description\r\n=============== ============= ======================================================================\r\ncmds            *List[str]*   Configuration commands to be executed on the Fortigate\r\nkwargs          *dict*        (optional) Netmiko parameters\r\n=============== ============= ======================================================================\r\n\r\nReturn\r\n    Output of the commands\r\n\r\n\r\nExamples\r\n........\r\nSSH examples:\r\n\r\n- Show interface config\r\n- Change interface description from \"dmz\" to \"DMZ\"\r\n- Check interface description is changed\r\n- Change read-timeout timer for long awaited commands\r\n\r\n`./examples/ssh.py`_\r\n\r\nSSH examples for working with vdom:\r\n\r\n- get system arp from interfaces associated with vdom=\"VDOM\"\r\n- get system arp from interfaces associated with vdom=\"root\"\r\n\r\n`./examples/ssh_vdom.py`_\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\nCiscoConfParse\r\n--------------\r\nHelper that parses the Fortigate configuration to find and modify command lines.\r\nCiscoConfParse doesn't natively support Fortigate configuration,\r\nbut after some tweaking in this package it has become a good tool to play with Fortigate config lines.\r\nFor more information, see the documentation for the JunosCfgLine object at https://github.com/mpenning/ciscoconfparse\r\n\r\n\r\nExamples\r\n........\r\nCiscoConfParse examples:\r\n\r\n- get config from the Fortigate by SSH\r\n- create CiscoConfParse object\r\n- filter all JunosCfgLine objects of wan interfaces\r\n- print some data in CiscoConfParse objects\r\n- filter all wan interfaces blocks\r\n\r\n`./examples/ccp.py`_\r\n\r\n\r\n.. _`./examples`: ./examples\r\n.. _`./examples/yml/address.yml`: ./examples/yml/address.yml\r\n.. _`./examples/yml/address_group.yml`: ./examples/yml/address_group.yml\r\n.. _`./examples/yml/antivirus.yml`: ./examples/yml/antivirus.yml\r\n.. _`./examples/yml/application.yml`: ./examples/yml/application.yml\r\n.. _`./examples/yml/dhcp_server.yml`: ./examples/yml/dhcp_server.yml\r\n.. _`./examples/yml/interface.yml`: ./examples/yml/interface.yml\r\n.. _`./examples/yml/internet_service.yml`: ./examples/yml/internet_service.yml\r\n.. _`./examples/yml/ip_pool.yml`: ./examples/yml/ip_pool.yml\r\n.. _`./examples/yml/policy.yml`: ./examples/yml/policy.yml\r\n.. _`./examples/yml/schedule.yml`: ./examples/yml/schedule.yml\r\n.. _`./examples/yml/service.yml`: ./examples/yml/service.yml\r\n.. _`./examples/yml/service_category.yml`: ./examples/yml/service_category.yml\r\n.. _`./examples/yml/service_group.yml`: ./examples/yml/service_group.yml\r\n.. _`./examples/yml/snmp_community.yml`: ./examples/yml/snmp_community.yml\r\n.. _`./examples/yml/virtual_ip.yml`: ./examples/yml/virtual_ip.yml\r\n.. _`./examples/yml/zone.yml`: ./examples/yml/zone.yml\r\n\r\n.. _`./examples/address.py`: ./examples/address.py\r\n.. _`./examples/address_group.py`: ./examples/address_group.py\r\n.. _`./examples/ccp.py`: ./examples/ccp.py\r\n.. _`./examples/dhcp_server.py`: ./examples/dhcp_server.py\r\n.. _`./examples/fortigate.py`: ./examples/fortigate.py\r\n.. _`./examples/interface.py`: ./examples/interface.py\r\n.. _`./examples/ip_pool.py`: ./examples/ip_pool.py\r\n.. _`./examples/policy.py`: ./examples/policy.py\r\n.. _`./examples/policy_extended_filter.py`: ./examples/policy_extended_filter.py\r\n.. _`./examples/snmp_community.py`: ./examples/snmp_community.py\r\n.. _`./examples/ssh.py`: ./examples/ssh.py\r\n.. _`./examples/ssh_vdom.py`: ./examples/ssh_vdom.py\r\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "fortigate,api,fortios,firewall,networking,telecommunication",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fortigate-api",
    "package_url": "https://pypi.org/project/fortigate-api/",
    "platform": null,
    "project_url": "https://pypi.org/project/fortigate-api/",
    "project_urls": {
      "Bug Tracker": "https://github.com/vladimirs-git/fortigate-api/issues",
      "Download URL": "https://github.com/vladimirs-git/fortigate-api/archive/refs/tags/1.1.1.tar.gz",
      "Homepage": "https://github.com/vladimirs-git/fortigate-api",
      "Repository": "https://github.com/vladimirs-git/fortigate-api"
    },
    "release_url": "https://pypi.org/project/fortigate-api/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Python package to configure Fortigate (Fortios) devices using REST API and SSH",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17315246,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5182bfc84b50d9404ab21ac96817d16847468e475679ae407e4da9024df60ff",
          "md5": "cccca7bddaf40af900ede37764be875a",
          "sha256": "91815b4533f15db1a2cda1cddc8afb57a3407bac8feb5b3c58438435a90c9e5f"
        },
        "downloads": -1,
        "filename": "fortigate_api-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cccca7bddaf40af900ede37764be875a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13802,
        "upload_time": "2022-04-17T19:21:29",
        "upload_time_iso_8601": "2022-04-17T19:21:29.396271Z",
        "url": "https://files.pythonhosted.org/packages/e5/18/2bfc84b50d9404ab21ac96817d16847468e475679ae407e4da9024df60ff/fortigate_api-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce229f63358f6ef73b2a6aa15de8b5f6c2136c387512c148d46657a0b0c618c3",
          "md5": "e9f935b9be8c7619527d783ceb818bb9",
          "sha256": "a162c89427ab043f13ba0542b01e9df1396b573d339dba9ef5d52f436912dc7e"
        },
        "downloads": -1,
        "filename": "fortigate_api-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e9f935b9be8c7619527d783ceb818bb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 26914,
        "upload_time": "2022-05-21T20:46:53",
        "upload_time_iso_8601": "2022-05-21T20:46:53.527168Z",
        "url": "https://files.pythonhosted.org/packages/ce/22/9f63358f6ef73b2a6aa15de8b5f6c2136c387512c148d46657a0b0c618c3/fortigate_api-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bf3458c60cb3c756c41fcddb291ab53e996ce7c1226a216e93360257745a7d8",
          "md5": "bc93c086c5283cf03bf3a3d46aab6dc4",
          "sha256": "4c38efe2c5d0010d4d262edf6dc0477a76434aae3a9e541962c66ee7cfc7488f"
        },
        "downloads": -1,
        "filename": "fortigate_api-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bc93c086c5283cf03bf3a3d46aab6dc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 29607,
        "upload_time": "2022-05-23T14:53:58",
        "upload_time_iso_8601": "2022-05-23T14:53:58.103523Z",
        "url": "https://files.pythonhosted.org/packages/9b/f3/458c60cb3c756c41fcddb291ab53e996ce7c1226a216e93360257745a7d8/fortigate_api-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19cb2df57ef1fc8bcb30459a1a97b87d3e1751869aad26d770ff17004883a64a",
          "md5": "50befcae5e63901374e6626fc15d116a",
          "sha256": "8fe78a829061f270213a47119e77ee2ccdf5b20227ff4df167d43269d3c93ac9"
        },
        "downloads": -1,
        "filename": "fortigate_api-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "50befcae5e63901374e6626fc15d116a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30775,
        "upload_time": "2022-06-16T05:04:19",
        "upload_time_iso_8601": "2022-06-16T05:04:19.316968Z",
        "url": "https://files.pythonhosted.org/packages/19/cb/2df57ef1fc8bcb30459a1a97b87d3e1751869aad26d770ff17004883a64a/fortigate_api-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "914cd6e2da42761d4f545cb1b6871404fa300ae428e8cd487f87255e40339e0b",
          "md5": "bc838ae7b1ac314478ebb1de234e73c8",
          "sha256": "4df87c33661c63eda08db8b0ce5babc6d74351ded2fce09ddff2202dc355969e"
        },
        "downloads": -1,
        "filename": "fortigate_api-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "bc838ae7b1ac314478ebb1de234e73c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 32263,
        "upload_time": "2022-08-31T22:33:16",
        "upload_time_iso_8601": "2022-08-31T22:33:16.652027Z",
        "url": "https://files.pythonhosted.org/packages/91/4c/d6e2da42761d4f545cb1b6871404fa300ae428e8cd487f87255e40339e0b/fortigate_api-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ee9b7b98bc686f3cf372742a73829385af36fe3fa2fdd2af4a3ac1cfebb5bd3",
          "md5": "c9082a15a6e909f86aab63e597488960",
          "sha256": "c65692d64ecf1815d08758a3402f88faab2a7eb693d1ecbe1695d16ccb4ce2ca"
        },
        "downloads": -1,
        "filename": "fortigate_api-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c9082a15a6e909f86aab63e597488960",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27807,
        "upload_time": "2022-11-01T18:09:29",
        "upload_time_iso_8601": "2022-11-01T18:09:29.702830Z",
        "url": "https://files.pythonhosted.org/packages/5e/e9/b7b98bc686f3cf372742a73829385af36fe3fa2fdd2af4a3ac1cfebb5bd3/fortigate_api-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f4f772c17d124dd5d155868291b919d6fc9bab41595f8245b3f88f1cb70f6fd",
          "md5": "c133433d014f6255367b50e1990252d0",
          "sha256": "443a922a5204b707ff2a197e9bff089278400ba413cd08e759f54045c1450ca7"
        },
        "downloads": -1,
        "filename": "fortigate_api-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c133433d014f6255367b50e1990252d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27896,
        "upload_time": "2023-02-08T08:24:02",
        "upload_time_iso_8601": "2023-02-08T08:24:02.432840Z",
        "url": "https://files.pythonhosted.org/packages/5f/4f/772c17d124dd5d155868291b919d6fc9bab41595f8245b3f88f1cb70f6fd/fortigate_api-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce0821cf3db470d9c56c865dfc969d9ff56a537f2e22662aae014c44415440fd",
          "md5": "7ea3d32117dd5dc9970a376f2ecd2faf",
          "sha256": "458aa84ff0b3759c402ad7953c137ac9ae4864ae0820480a9d7140547deb0ef0"
        },
        "downloads": -1,
        "filename": "fortigate_api-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7ea3d32117dd5dc9970a376f2ecd2faf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30992,
        "upload_time": "2023-03-05T18:03:43",
        "upload_time_iso_8601": "2023-03-05T18:03:43.106547Z",
        "url": "https://files.pythonhosted.org/packages/ce/08/21cf3db470d9c56c865dfc969d9ff56a537f2e22662aae014c44415440fd/fortigate_api-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10406aad4fba8d8447a4386bbaf8403f3b90c9cdbd575418b2aabda53758ef93",
          "md5": "e054eb6e7d992801e3b1d20ea00a5d12",
          "sha256": "f56d7321dce1a9b21f1480d12c227665a74a2cc160fe314982b7417f2a291f38"
        },
        "downloads": -1,
        "filename": "fortigate_api-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e054eb6e7d992801e3b1d20ea00a5d12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 31644,
        "upload_time": "2023-03-16T07:54:56",
        "upload_time_iso_8601": "2023-03-16T07:54:56.687231Z",
        "url": "https://files.pythonhosted.org/packages/10/40/6aad4fba8d8447a4386bbaf8403f3b90c9cdbd575418b2aabda53758ef93/fortigate_api-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10406aad4fba8d8447a4386bbaf8403f3b90c9cdbd575418b2aabda53758ef93",
        "md5": "e054eb6e7d992801e3b1d20ea00a5d12",
        "sha256": "f56d7321dce1a9b21f1480d12c227665a74a2cc160fe314982b7417f2a291f38"
      },
      "downloads": -1,
      "filename": "fortigate_api-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e054eb6e7d992801e3b1d20ea00a5d12",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 31644,
      "upload_time": "2023-03-16T07:54:56",
      "upload_time_iso_8601": "2023-03-16T07:54:56.687231Z",
      "url": "https://files.pythonhosted.org/packages/10/40/6aad4fba8d8447a4386bbaf8403f3b90c9cdbd575418b2aabda53758ef93/fortigate_api-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}