{
  "info": {
    "author": "Twitter Presto Team",
    "author_email": "iq-dev@twitter.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Database",
      "Topic :: Database :: Database Engines/Servers",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# presto-query-predictor\n\n**presto-query-predictor** is a Python module introducing machine learning\ntechniques to the Presto ecosystem. It contains a machine learning pipeline for\nthe model training/evaluation and a query predictor web service to predict CPU\nand memory usages of Presto queries.\n\n## Installation\n\nAfter cloning the GitHub repository,\n\n``` bash\npip3 install -e .  # Installs the presto-query-predictor package locally\npip3 install -r requirements.txt  # Installs dependencies\n```\n\nAn alternative way is to install the package from PyPi,\n\n``` bash\npip3 install presto-query-predictor\n```\n\nWe recommend installing the package in a Python virtual environment instead\nof installing it globally.\n\n## Examples\n\nThe `query_predictor/` folder contains the core of the package. We have prepared\nsome examples in the `example/` folder, including\n\n* `load_data.py` - An example to load the embedded fake TPCH-based dataset.\n* `transform.py` - An example to transform datasets for further training.\n* `train.py` - An example to train CPU and memory models.\n* `tune.py` - An example to tune classification algorithms.\n* `app.py` - An example to create a query predictor web service.\n\n### Training\n\nA simple way to get a sense of the CPU and memory model training is running the\nexamples in the `example/` folder.\n\n``` bash\ncd examples\npython3 transform.py\npython3 train.py\n```\n\nThe *presto-query-predictor* package can only be executed in a Python 3\nenvironment. It does not support Python 2.\n\nAfterward, the trained models should be generated in the `models` folder, including\n\n``` bash\nmodels/\n    vec-cpu.bin\n    vec-memory.bin\n    model-cpu.bin\n    model-memory.bin\n```\n\nBy default, the vectorizers are trained from the **TF-IDF** algorithm, and the models\nare trained from **XGBoost** classifiers. The dataset used for training is a\nfaked dataset based on the TPC-H benchmark with only 22 samples.\n\n### Serving\n\nAfter running\n\n``` bash\npython3 app.py\n```\n\nA [Flask](https://flask.palletsprojects.com/) web application should be created\nat [http://0.0.0.0:8000/](http://0.0.0.0:8000/).\nThere is a web UI for the application where you can fill in the form with a\nquery for resources prediction.\n\n<img src=\"https://github.com/twitter-forks/presto/blob/query-predictor/presto-query-predictor/docs/img/web-app.png?raw=true\" width=\"500\">",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/twitter-forks/presto/tree/query-predictor/presto-query-predictor",
    "keywords": "presto sql ml",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "presto-query-predictor",
    "package_url": "https://pypi.org/project/presto-query-predictor/",
    "platform": "",
    "project_url": "https://pypi.org/project/presto-query-predictor/",
    "project_urls": {
      "Homepage": "https://github.com/twitter-forks/presto/tree/query-predictor/presto-query-predictor"
    },
    "release_url": "https://pypi.org/project/presto-query-predictor/0.1.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A query predictor pipeline and service to predict resource usages of Presto queries",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8225857,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "112bc8877392486dfdff39027ab57628c4d53ad40526c00ae7f0d82c18cf0591",
          "md5": "98b0b4693f2477b09d04474f70ce50cd",
          "sha256": "ebef32b2530cf5a2d95bc8e22bddb471d8450f5f3020396900f2c4b2515e6948"
        },
        "downloads": -1,
        "filename": "presto_query_predictor-0.1.4-py3.7.egg",
        "has_sig": false,
        "md5_digest": "98b0b4693f2477b09d04474f70ce50cd",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.7",
        "size": 99695,
        "upload_time": "2020-09-19T22:20:41",
        "upload_time_iso_8601": "2020-09-19T22:20:41.215511Z",
        "url": "https://files.pythonhosted.org/packages/11/2b/c8877392486dfdff39027ab57628c4d53ad40526c00ae7f0d82c18cf0591/presto_query_predictor-0.1.4-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0baa77408eeb9db67d9a7980348612a8bce897fbaea78118b8c96d9bc0b3c038",
          "md5": "f618fff3d778f8aa812dfffde18d7215",
          "sha256": "77ce0a335736346cbffded502e810f064b9a6ca4cbda2d60fa17dc2d40e8b376"
        },
        "downloads": -1,
        "filename": "presto-query-predictor-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f618fff3d778f8aa812dfffde18d7215",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 373393,
        "upload_time": "2020-09-19T22:20:39",
        "upload_time_iso_8601": "2020-09-19T22:20:39.452866Z",
        "url": "https://files.pythonhosted.org/packages/0b/aa/77408eeb9db67d9a7980348612a8bce897fbaea78118b8c96d9bc0b3c038/presto-query-predictor-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "112bc8877392486dfdff39027ab57628c4d53ad40526c00ae7f0d82c18cf0591",
        "md5": "98b0b4693f2477b09d04474f70ce50cd",
        "sha256": "ebef32b2530cf5a2d95bc8e22bddb471d8450f5f3020396900f2c4b2515e6948"
      },
      "downloads": -1,
      "filename": "presto_query_predictor-0.1.4-py3.7.egg",
      "has_sig": false,
      "md5_digest": "98b0b4693f2477b09d04474f70ce50cd",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": ">=3.7",
      "size": 99695,
      "upload_time": "2020-09-19T22:20:41",
      "upload_time_iso_8601": "2020-09-19T22:20:41.215511Z",
      "url": "https://files.pythonhosted.org/packages/11/2b/c8877392486dfdff39027ab57628c4d53ad40526c00ae7f0d82c18cf0591/presto_query_predictor-0.1.4-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0baa77408eeb9db67d9a7980348612a8bce897fbaea78118b8c96d9bc0b3c038",
        "md5": "f618fff3d778f8aa812dfffde18d7215",
        "sha256": "77ce0a335736346cbffded502e810f064b9a6ca4cbda2d60fa17dc2d40e8b376"
      },
      "downloads": -1,
      "filename": "presto-query-predictor-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "f618fff3d778f8aa812dfffde18d7215",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 373393,
      "upload_time": "2020-09-19T22:20:39",
      "upload_time_iso_8601": "2020-09-19T22:20:39.452866Z",
      "url": "https://files.pythonhosted.org/packages/0b/aa/77408eeb9db67d9a7980348612a8bce897fbaea78118b8c96d9bc0b3c038/presto-query-predictor-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}