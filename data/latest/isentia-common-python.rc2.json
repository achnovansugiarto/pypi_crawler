{
  "info": {
    "author": "Isentia",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Isentia common tools for Python\n\nThis library collects tools and code that are shared across repositories and projects within Isentia.\n\n## Instructions to use this library\n\nInstallation is simple:\n\n```sh\npip install isentia-common-python\n```\n\nRight now the library only contains json logging code. We might add more features later.\n\n## JSON logging\n\nAuthors: Neville Tummon, Toney Thomas, Koen Douterloigne\n\nPlace the following somewhere near the start of your app.\n\n```python\nfrom isentia_common.log import init_json_logging\n\ninit_json_logging(\"my_namespace\")\n```\n\nNow use logging just like you always do.\n\n```python\nimport logging\n\nlogging.info(\"Hello world!\")\nlogging.warning(\"Hello world!\", extra={\"http_code\": 418, \"reply\": \"I'm a teapot\"})\n```\n\nThis will print\n\n```\n{\"asctime\": \"2020-07-06 13:01:46,859\", \"name\": \"root\", \"levelname\": \"INFO\", \"message\": \"Hello world!\"}\n{\"asctime\": \"2020-07-06 13:01:46,859\", \"name\": \"root\", \"levelname\": \"WARNING\", \"message\": \"Hello world!\", \"my_namespace\": {\"http_code\": 418, \"reply\": \"I'm a teapot\"}}\n```\n\nAs you see, it structures the output as JSON and adds the typical fields. You can use the \"extra\" parameter when logging objects. All objects logged like this will be put into the namespace that you specified in the init call, when you did `init_json_logging(\"my_namespace\")`.\n\nThe namespacing makes it very easy to search through your logs in tools like ElasticSearch / Kibana. In particular, it prevents conflicts with other teams or projects that want to use the same field names.\n\nBy default, the logging level is set to INFO. You can override this just like normal, using\n\n```python\nlogging.getLogger().setLevel(logging.DEBUG)\n```\n\n### More fields\n\nBy default we only print the time, logger name (usually root), level, message and extra fields. If you need more visibility, you can enable `extended` mode.\n\n```python\ninit_json_logging(\"my_namespace\", extended=True)\n\nlogging.info(\"Hello world!\")\n```\n\nEnabling `extended` will also include process id, filename, lineno and funcname in the JSON:\n\n```\n{\"asctime\": \"2020-07-06 13:48:38,015\", \"name\": \"root\", \"levelname\": \"INFO\", \"message\": \"Hello world!\", \"process\": 8015, \"filename\": \"inspect_logging.py\", \"lineno\": 8, \"funcName\": \"<module>\"}\n```\n\n\n### Module-level loggers\n\nAll Python logging will output JSON. In particular, module-level loggers will also log to JSON. (As an aside, code typically does not require module level loggers)\n\n```python\nmodule_lvl_logger = logging.getLogger(\"special.module\")\nmodule_lvl_logger.setLevel(logging.DEBUG)\nmodule_lvl_logger.debug(\n    \"an info message\", extra={\"http_status_code\": 200, \"endpoint\": \"/api/no-problemo\"}\n)\n```\n\nwill print\n\n```\n{\"asctime\": \"2020-07-06 13:01:46,859\", \"name\": \"special.module\", \"levelname\": \"DEBUG\", \"message\": \"an info message\", \"my_namespace\": {\"http_status_code\": 200, \"endpoint\": \"/api/no-problemo\"}}\n```\n\nOnly the \"name\" field changes.\n\n### Global override\n\nNow you may be thinking: Great, all fields are namespaced, but what if I want to track a field across projects / apps? Like traceID or summary_id? I still want my apps to have different namespaces, but I also want to be able to log some fields that are global, i.e. that live outside of the namespace.\n\nFor this usecase we've made the extra field \"global\" a special field, which gets moved out of the \"extra\". Look at the following example:\n\n```python\nimport logging\n\nlogging.info(\"Hello world!\", extra={\"http_code\": 418, \"reply\": \"I'm a teapot\", \"global\": {\"request_id\": 50}})\n```\n\nThis will print\n\n```\n{\"asctime\": \"2020-07-06 13:01:46,859\", \"name\": \"root\", \"levelname\": \"INFO\", \"message\": \"info with global\", \"global\": {\"request_id\": 50}, \"my_app_name\": {\"http_code\": 418, \"reply\": \"I'm a teapot\"}}\n```\n\nIn short, the field \"global\" is like a shared namespace. Only put in there what you need, as you might clash with other teams.\n\n### Constants\n\nIf you wish a global variable to be included with every log message (e.g. a trace_id or request_id)\nyou can set this in the init call.\n\n```python\n\ninit_json_logging('my_namespace', constants={'trace_id':123})\nlogging.info(\"Hello world!\", extra={\"http_code\": 418, \"reply\": \"I'm a teapot\", \"global\": {\"request_id\": 50}})\n```\n\nThis will print\n\n```\n{\"asctime\": \"2020-07-06 13:01:46,859\", \"name\": \"root\", \"levelname\": \"INFO\", \"message\": \"info with global\", \"global\": {\"trace_id\":123, \"request_id\": 50}, \"my_app_name\": {\"http_code\": 418, \"reply\": \"I'm a teapot\"}}\n```\n\nAnd every other message will include the trace_id in global namespace.\n\n### Low-level details\n\nThis library is built on top of [python-json-logger](https://github.com/madzak/python-json-logger). We extended python-json-logger via monkey-patching to add the concept of namespacing and global overrides.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "isentia-common-python",
    "package_url": "https://pypi.org/project/isentia-common-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/isentia-common-python/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/isentia-common-python/1.1.0/",
    "requires_dist": [
      "python-json-logger (==0.1.11)"
    ],
    "requires_python": ">=3.7",
    "summary": "",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7710183,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57e1aff35da950befb693e73002e47f882160d8d4d4025243bf16ebffd704184",
          "md5": "c25e55786c9708965b1e87c344c3f176",
          "sha256": "2f6a343a2bd8251187292f714fb318aef395035f6a324ef566a67e014e0193dc"
        },
        "downloads": -1,
        "filename": "isentia_common_python-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c25e55786c9708965b1e87c344c3f176",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4731,
        "upload_time": "2020-07-13T06:24:33",
        "upload_time_iso_8601": "2020-07-13T06:24:33.979405Z",
        "url": "https://files.pythonhosted.org/packages/57/e1/aff35da950befb693e73002e47f882160d8d4d4025243bf16ebffd704184/isentia_common_python-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f47ec3eb5f911263f5c61187bff17fa90d3322b05125e63288520e993807ced6",
          "md5": "6fcbd1d9577450997ff7d4a89d13269f",
          "sha256": "3725f34fb5a9b4b439ecd25663856c7ddd343d4df96b426e4e2cdac1459279fe"
        },
        "downloads": -1,
        "filename": "isentia-common-python-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6fcbd1d9577450997ff7d4a89d13269f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4710,
        "upload_time": "2020-07-13T06:24:36",
        "upload_time_iso_8601": "2020-07-13T06:24:36.547149Z",
        "url": "https://files.pythonhosted.org/packages/f4/7e/c3eb5f911263f5c61187bff17fa90d3322b05125e63288520e993807ced6/isentia-common-python-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d85e638e26e29b60442b420617a3ed9bb493bb19cd1e777a6aaf0cdba7d386ca",
          "md5": "2b365ba327395c80c29bf086a2806b8e",
          "sha256": "343ee183ca1c3a6e2571f03d4c9f8ddd6ae64bdce16ce7598ea076a121b2e6dc"
        },
        "downloads": -1,
        "filename": "isentia_common_python-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b365ba327395c80c29bf086a2806b8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4964,
        "upload_time": "2020-07-15T23:56:21",
        "upload_time_iso_8601": "2020-07-15T23:56:21.559577Z",
        "url": "https://files.pythonhosted.org/packages/d8/5e/638e26e29b60442b420617a3ed9bb493bb19cd1e777a6aaf0cdba7d386ca/isentia_common_python-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4416539f9b198b308d782ba3489d7299b5f94965eef80f84cf8253a698bcbf8c",
          "md5": "5c639b3da3bb557a88a63eb3df5d380f",
          "sha256": "79e081aa53d1d69d55fea08a2c5e5d4d4c8425ed02d85e8780df5898300ed340"
        },
        "downloads": -1,
        "filename": "isentia-common-python-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5c639b3da3bb557a88a63eb3df5d380f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4980,
        "upload_time": "2020-07-15T23:56:23",
        "upload_time_iso_8601": "2020-07-15T23:56:23.124386Z",
        "url": "https://files.pythonhosted.org/packages/44/16/539f9b198b308d782ba3489d7299b5f94965eef80f84cf8253a698bcbf8c/isentia-common-python-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d85e638e26e29b60442b420617a3ed9bb493bb19cd1e777a6aaf0cdba7d386ca",
        "md5": "2b365ba327395c80c29bf086a2806b8e",
        "sha256": "343ee183ca1c3a6e2571f03d4c9f8ddd6ae64bdce16ce7598ea076a121b2e6dc"
      },
      "downloads": -1,
      "filename": "isentia_common_python-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2b365ba327395c80c29bf086a2806b8e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4964,
      "upload_time": "2020-07-15T23:56:21",
      "upload_time_iso_8601": "2020-07-15T23:56:21.559577Z",
      "url": "https://files.pythonhosted.org/packages/d8/5e/638e26e29b60442b420617a3ed9bb493bb19cd1e777a6aaf0cdba7d386ca/isentia_common_python-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4416539f9b198b308d782ba3489d7299b5f94965eef80f84cf8253a698bcbf8c",
        "md5": "5c639b3da3bb557a88a63eb3df5d380f",
        "sha256": "79e081aa53d1d69d55fea08a2c5e5d4d4c8425ed02d85e8780df5898300ed340"
      },
      "downloads": -1,
      "filename": "isentia-common-python-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5c639b3da3bb557a88a63eb3df5d380f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4980,
      "upload_time": "2020-07-15T23:56:23",
      "upload_time_iso_8601": "2020-07-15T23:56:23.124386Z",
      "url": "https://files.pythonhosted.org/packages/44/16/539f9b198b308d782ba3489d7299b5f94965eef80f84cf8253a698bcbf8c/isentia-common-python-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}