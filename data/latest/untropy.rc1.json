{
  "info": {
    "author": null,
    "author_email": "Antoine Martin <antoine@mrtn.fr>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security",
      "Topic :: Software Development",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Version Control",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# Untropy\n\nUntropy is a flexible command line tool to manage full stack _polyglot_\nprojects.\n\n## Features\n\n- Centralized project configuration with multiple environments and deployment\n  tiers.\n- Powerful plugin system to wrap and configure external tools.\n- Cookiecutter based templates auto-configured from the project configuration.\n- ...\n\n## Sequence of commands\n\n```console\n> untropy init\n> untropy plugin add untropy-externaltool\n> untropy plugin create untropy-localtool\n> untropy cookie project_template -o awesome_microsvc\n> untropy wrapper command ...\n...\n```\n\n## Rationale\n\nModern software development solutions are made up a fair amount of technologies\nand the number of tools involved can get huge. To cite some that are very\ncommon:\n\n- Terraform\n- Packer\n- Helm\n- Kustomize\n- Kubectl\n- Yarn\n- Pip\n- Docker\n- Vault\n- Ansible\n- ...\n\n**TODO** Give some examples (Mattermost ?)\n\nThe configuration and execution of all these tools generates a lot a\n**entropy**, understood as the quantity of information needed to completely\ndescribe the system:\n\n- Configuration files in different formats.\n- Bits of information duplicated across tool configuration.\n- Mixed scripting languages (shell, python, ...).\n\nTo manage this complexity, development teams sometimes code several script based\ntools to ease different use cases (CI, command line, ...). Guided by the DRY\nprinciple, they group those disparate tools into one command, managed into one\nproject.\n\nSoon, this swiss army knife tool becomes a monolith the whole team depends on\nbut don't wan't to touch. While they are doing independent microservices\notherwise, they need to manage them with one big CI/CD monolith.\n\nDevelopers and Devops that got on board early continue to add value to the tool\nwhile newbies and haters try at all cost to avoid it.\n\nUntropy is an attempt to have the benefits of sharing a common set of tools and\ngood practices while avoiding the maintenance nightmare.\n\nEach tool/wrapper can be developped indepently from the others and integrated in\nthe projects that make use of them.\n\nUntropy leverages the power and maturity of the python ecosystem and some of its\nmost interesting libraries and tools:\n\n- pip For package and dependency management.\n- pipx for keeping the Untropy Python Virtual environment separate from your\n  development environment. This is useful when python is used in the project to\n  avoid the dependencies version nightmare.\n- Pydantic for configuration management.\n- Click and Typer for command execution. Adding an existing typer or click based\n  command to untropy is done with one command.\n\n## History\n\nUntropy is inspired by Yinn, a tool I created while working at Unowhy. It\nstarted as an Ansible wrapper in shell and became a click based python CLI. More\nCI/CD related tools were then integrated into it. The python package ended\ncontaining the Ansible deployment roles of the common services used by different\nsolutions of the company. As the package was multi-purpose and monolithic, it\nwas facing a lot of releases. It became really hard to track the changes and to\navoid regressions on client projects.\n\nAs it was based on Ansible, it had its versatility and power, in particular in\ntemplating files and wrapping existing tools. But it also had its flaws, like\nnot being able to run or even being installed on Windows.\n\n## Credits\n\nInspiration comes from:\n\n### Terraform\n\nTerraform is a _declarative_ tools, not an imperative one as untropy is but it\ndefines a common interface for _providers_ and _data sources_. With terraform,\nas providers are Go compiled programs, if you want to have your own custom\nprovider, you need to have the Go runtime installed, build your provider and\nupload it to hashicorp public registry or hashicorp cloud private one. It's\nuneasy to have a custom provider along your project. With Untropy, as python is\ninterpreted, a custom plugin living in your project can be run from your project\nsource code. You also keep the ability to publish your plugins to the cheese\nchop or your private repository.\n\nThe drawbacks are of course the need for the python runtime and the possible\nuncompatibility of libraries used by different plugins.\n\nComposition with Terraform is also uneasy, needing some external tools like\nTerragrunt.\n\n### Docker compose\n\nThe similarity of untropy with docker compose is that you can _compose_ _Off the\nShelf_ components with custom ones, each of them configured according to the use\nyou make of them.\n\nIn Untropy, the _Off The Shelf_ components would be the Pypi plugins that you\nuse, and the custom ones are the ones you have in source code form in your\nproject or the ones you download from a private package registry. As with\ndocker-compose, you can configure each component (plugin) to your need.\n\nDocker is both the build tool and the runtime execution tools. With untropy and\npython, you have the same way or working.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "untropy,devops",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "untropy",
    "package_url": "https://pypi.org/project/untropy/",
    "platform": null,
    "project_url": "https://pypi.org/project/untropy/",
    "project_urls": {
      "Home": "https://github.com/untropy/untropy"
    },
    "release_url": "https://pypi.org/project/untropy/0.1.0/",
    "requires_dist": [
      "click==8.0.4",
      "python-dotenv==0.19.2",
      "toml>=0.10.1,<0.11",
      "pydantic==1.9.0",
      "coloredlogs==15.0.1",
      "timeago==1.0.14",
      "selinux==0.2.1",
      "twine==3.8.0",
      "cookiecutter==1.7.3",
      "mdformat==0.7.13",
      "mdformat-tables==0.4.1",
      "cryptography>=3.4.8",
      "PyYAML==6.0",
      "asynctest ; extra == \"test\"",
      "pytest ; extra == \"test\"",
      "pytest-cache ; extra == \"test\"",
      "pytest-cov ; extra == \"test\"",
      "pytest-asyncio ; extra == \"test\"",
      "pytest-mock ; extra == \"test\"",
      "coverage ; extra == \"test\"",
      "flake8 ; extra == \"test\"",
      "mypy ; extra == \"test\"",
      "mypy-extensions ; extra == \"test\"",
      "requests ; extra == \"test\"",
      "isort ; extra == \"test\"",
      "black ; extra == \"test\"",
      "poethepoet ; extra == \"test\"",
      "types-toml ; extra == \"test\"",
      "types-pytz ; extra == \"test\"",
      "types-requests ; extra == \"test\"",
      "types-setuptools ; extra == \"test\"",
      "types-PyYAML ; extra == \"test\""
    ],
    "requires_python": ">=3.8",
    "summary": "Flexible command line tool to manage fullstack development projects.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13775671,
  "releases": {
    "0.1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "f3356355665aff03c7504a8c8fa9eab193fee74a46f79d5e3e925b20ccab96e1",
          "md5": "f27e4e67e65a4106836608ebdcfc4a9d",
          "sha256": "e80bf046b8b76485a7c83f2c3597471fae8046c88b34104162ae512a5fe262dd"
        },
        "downloads": -1,
        "filename": "untropy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f27e4e67e65a4106836608ebdcfc4a9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 25349,
        "upload_time": "2022-05-10T21:48:17",
        "upload_time_iso_8601": "2022-05-10T21:48:17.250127Z",
        "url": "https://files.pythonhosted.org/packages/f3/35/6355665aff03c7504a8c8fa9eab193fee74a46f79d5e3e925b20ccab96e1/untropy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "9ca83d67e938a3af339a1e186aec1a6ef4e247cd9ce45fcce4ca7509473012ca",
          "md5": "8a66acc5b9a448a82052a64565f2712f",
          "sha256": "c6e605643346a9861a2ed4c974ad00f1d3ded1cbc967b35a8722247d4cb9b25c"
        },
        "downloads": -1,
        "filename": "untropy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a66acc5b9a448a82052a64565f2712f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27134,
        "upload_time": "2022-05-10T21:48:18",
        "upload_time_iso_8601": "2022-05-10T21:48:18.874826Z",
        "url": "https://files.pythonhosted.org/packages/9c/a8/3d67e938a3af339a1e186aec1a6ef4e247cd9ce45fcce4ca7509473012ca/untropy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "f3356355665aff03c7504a8c8fa9eab193fee74a46f79d5e3e925b20ccab96e1",
        "md5": "f27e4e67e65a4106836608ebdcfc4a9d",
        "sha256": "e80bf046b8b76485a7c83f2c3597471fae8046c88b34104162ae512a5fe262dd"
      },
      "downloads": -1,
      "filename": "untropy-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f27e4e67e65a4106836608ebdcfc4a9d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 25349,
      "upload_time": "2022-05-10T21:48:17",
      "upload_time_iso_8601": "2022-05-10T21:48:17.250127Z",
      "url": "https://files.pythonhosted.org/packages/f3/35/6355665aff03c7504a8c8fa9eab193fee74a46f79d5e3e925b20ccab96e1/untropy-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "9ca83d67e938a3af339a1e186aec1a6ef4e247cd9ce45fcce4ca7509473012ca",
        "md5": "8a66acc5b9a448a82052a64565f2712f",
        "sha256": "c6e605643346a9861a2ed4c974ad00f1d3ded1cbc967b35a8722247d4cb9b25c"
      },
      "downloads": -1,
      "filename": "untropy-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8a66acc5b9a448a82052a64565f2712f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 27134,
      "upload_time": "2022-05-10T21:48:18",
      "upload_time_iso_8601": "2022-05-10T21:48:18.874826Z",
      "url": "https://files.pythonhosted.org/packages/9c/a8/3d67e938a3af339a1e186aec1a6ef4e247cd9ce45fcce4ca7509473012ca/untropy-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}