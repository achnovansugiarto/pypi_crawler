{
  "info": {
    "author": "Saksham Sharda",
    "author_email": "sxs1790@case.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research"
    ],
    "description": "# ndx-ibl-metadata extension for nwbn\n[![PyPI version](https://badge.fury.io/py/ndx-ibl-metadata.svg)](https://badge.fury.io/py/ndx-ibl-metadata)\n[![codecov](https://codecov.io/gh/catalystneuro/ndx-ibl-metadata/branch/master/graph/badge.svg)](https://codecov.io/gh/catalystneuro/ndx-ibl-metadata)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\nThis extension provides a way to store various IBL specific metadata for their mice experiments. \nMetadata about: Neuropixels probe, sessions data and mouse data can be stored in an NWB file using this extension. \n\n#### Python specific installation: \n```bash\npip install ndx-ibl-metadata\npip install ibllib\n``` \n\n#### Python usage: \n\n**Using ONE API**\nUse the ONE documentation to learn about ONE specific search keywords to retrieve and EID of interest. Then retrieve the \ninfo and populate like shown below. Alternatively, you can can also create a dictionary by manually entering correct data.\n```python\nimport datetime\nimport os\nfrom pynwb import NWBHDF5IO, NWBFile\nfrom ibllib.one import ONE\nimport uuid\nfrom ndx_ibl_metadata import IblSessionData, IblSubject, IblProbes\n# retrieve eid of interest:\none = ONE()\neid = one.search(**one_search_kwargs)\n#retrieve sessions data: \n\nsession_info = one.alyx.rest(f'sessions/{eid}','list')\nsubject_table = one.alyx.rest('subjects/' + session_info['subject'],'list')\nprobe_list = session_info['probe_insertion']\n# create session related data dict:\nsession_data = {\n    \"location\": session_info.get('location'),\n    \"project\": session_info.get('project'),\n    \"type\": session_info.get('type'),\n    \"number\": session_info.get('number'),\n    \"end_time\": datetime.datetime(session_info.get('location',datetime.datetime.utcnow().strftime('%Y-%m-%d')),'%Y-%m-%d'),\n    \"parent_session\": session_info.get('parent_session'),\n    \"url\": session_info.get('url'),\n    \"extended_qc\": session_info.get('extended_qc'),\n    \"qc\": session_info.get('qc'),\n    \"wateradmin_session_related\":session_info.get('wateradmin_session_related', []),\n    \"json\": session_info.get('json')\n}\n\nsubject_data = {'age': str(subject_table.get('age_weeks')),\n                'subject_id' : subject_table.get('id'),\n                'description': subject_table.get('description'),\n                'genotype': ','.join(subject_table.get('genotype'), []),\n                'sex': subject_table.get('sex'),\n                'species': subject_table.get('species'),\n                'weight': str(subject_table.get('reference_weight')),\n                'date_of_birth': datetime.datetime.strptime(subject_table.get('birth_date'), format='%Y-%m-%d'),\n                'nickname': subject_table.get('nickname'),\n                'url': subject_table.get('url'),\n                \"responsible_user\": subject_table.get('responsible_user'),\n                \"death_date\": subject_table.get('death_date'),\n                \"litter\": subject_table.get('litter'),\n                \"strain\": subject_table.get('strain'),\n                \"source\": subject_table.get('source'),\n                \"line\": subject_table.get('line'),\n                \"projects\": subject_table.get('projects'),\n                \"session_projects\": subject_table.get('session_projects'),\n                \"lab\": subject_table.get('lab'),\n                \"alive\": subject_table.get('alive'),\n                \"last_water_restriction\": subject_table.get('last_water_restriction'),\n                \"expected_water\": subject_table.get('expected_water'),\n                \"remaining_water\": subject_table.get('remaining_water'),\n                'weighings': [str(i) for i in subject_table['IBLSubject']['weighings']],\n                'water_administrations': [str(i) for i in subject_table['water_administrations']]\n                }\n\nprobes_data = []\nfor probe in probe_list:\n    probes_data.append({'id': probe.get('ib'),\n                        'model': probe.get('model'),\n                        'name': probe.get('name'),\n                        'trajectory_estimate': str(probe.get('trajectory_estimate',''))\n                        })\n\nnwbfile_data = {'session_start_time': datetime.datetime.strptime(session_info.get('start_time'),'%Y-%m-%dT%X'),\n                'experiment_description': session_info.get('project'),\n                'identifier': uuid.uuid1(),\n                'session_id': eid,\n                'experimenter': session_info.get('users'),\n                'protocol': session_info.get('task_protocol'),\n                'lab': session_info.get('lab'),\n                'notes': session_info.get('narrative'),\n                'session_description': ','.join(session_info.get('procedures',[]))\n}\n\n#create nwb objects: \nsession_nwb = IblSessionData(**session_data)\nsubject_nwb = IblSubject(**subject_data)\nprobe_nwb_list = []\nfor probe in probe_list:\n    name = probe.pop('name')\n    probe_nwb_list.append(IblProbes(name, **probe))\n\n# create nwbfile:\nnwbfile = NWBFile(**nwbfile_data)\nnwbfile.subject = subject_nwb\nnwbfile.add_lab_meta_data(session_nwb)\nfor probe in probe_nwb_list:\n    nwbfile.add_device(probe)\n\nwith NWBHDF5IO('testfile.nwb', mode='w') as io:\n    io.write(nwbfile)\n\n```",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ndx-ibl-metadata",
    "package_url": "https://pypi.org/project/ndx-ibl-metadata/",
    "platform": "",
    "project_url": "https://pypi.org/project/ndx-ibl-metadata/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ndx-ibl-metadata/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "IBL sessions specific metadata",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8418605,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95083f8b59e199df4fa5b31412754fbccd7936d53cc3ced7923c943d1de788e0",
          "md5": "7843b06a0869be1dd2c84863a34b5519",
          "sha256": "0848f610454226acc66e3efff1e97008b21ded64642a89715ba64c5026ac8f9b"
        },
        "downloads": -1,
        "filename": "ndx_ibl_metadata-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7843b06a0869be1dd2c84863a34b5519",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7217,
        "upload_time": "2020-09-22T19:50:46",
        "upload_time_iso_8601": "2020-09-22T19:50:46.110776Z",
        "url": "https://files.pythonhosted.org/packages/95/08/3f8b59e199df4fa5b31412754fbccd7936d53cc3ced7923c943d1de788e0/ndx_ibl_metadata-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46e75b7ce9f24897ad7f5536e956fc77e37a9758e4b19230c9b223fcbb537e56",
          "md5": "a4b2be068de36e53dec3549285ebf4ca",
          "sha256": "44f2b035c2159ed5ef03dcd40f696b9d6dd66d0c92278cf7287aee3d05ddfed3"
        },
        "downloads": -1,
        "filename": "ndx-ibl-metadata-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a4b2be068de36e53dec3549285ebf4ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16400,
        "upload_time": "2020-09-22T19:50:56",
        "upload_time_iso_8601": "2020-09-22T19:50:56.334784Z",
        "url": "https://files.pythonhosted.org/packages/46/e7/5b7ce9f24897ad7f5536e956fc77e37a9758e4b19230c9b223fcbb537e56/ndx-ibl-metadata-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03b06311b94e861a597f9429d4808a9c02fc924dd71ee0febe0b1794faa440b6",
          "md5": "6b121a20a5e23a6e84b55392583e3e3f",
          "sha256": "ac24ee95c10ae5f04e5f9c35f64eaca65a8615ee886d14e98484b248d22867af"
        },
        "downloads": -1,
        "filename": "ndx-ibl-metadata-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6b121a20a5e23a6e84b55392583e3e3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16853,
        "upload_time": "2020-10-15T12:36:52",
        "upload_time_iso_8601": "2020-10-15T12:36:52.310868Z",
        "url": "https://files.pythonhosted.org/packages/03/b0/6311b94e861a597f9429d4808a9c02fc924dd71ee0febe0b1794faa440b6/ndx-ibl-metadata-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03b06311b94e861a597f9429d4808a9c02fc924dd71ee0febe0b1794faa440b6",
        "md5": "6b121a20a5e23a6e84b55392583e3e3f",
        "sha256": "ac24ee95c10ae5f04e5f9c35f64eaca65a8615ee886d14e98484b248d22867af"
      },
      "downloads": -1,
      "filename": "ndx-ibl-metadata-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6b121a20a5e23a6e84b55392583e3e3f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16853,
      "upload_time": "2020-10-15T12:36:52",
      "upload_time_iso_8601": "2020-10-15T12:36:52.310868Z",
      "url": "https://files.pythonhosted.org/packages/03/b0/6311b94e861a597f9429d4808a9c02fc924dd71ee0febe0b1794faa440b6/ndx-ibl-metadata-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}