{
  "info": {
    "author": "Maciej Majewski",
    "author_email": "mmajewsk@cern.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Titania\n\nThis is framework made for VELO LHCb data visualization.\nIt's made to be fully customizable.\n\nTitania on PyHEP:\n(See video below)\n\n[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/t0chvrIvIT4/0.jpg)](https://www.youtube.com/watch?v=t0chvrIvIT4)\n\n\n## Installation\n\nYou should start with downloading Titania framework through pip:\n\n(recommended)\n```\npip install git+https://gitlab.cern.ch/velo-calibration-software/titania\n```\n\nor with \n```\npip install titania\n```\n\n## Development installation\n\n``` shell\ngit clone https://gitlab.cern.ch/velo-calibration-software/titania\ncd titania\npip install -r requirements.txt\n```\n\n## Starting project\n\n\nWhen you are ready to create skeleton for your monitoring project with command:\n\n`python -m titania start --name NAME`\n\n**REMEMBER TO REPLACE \"NAME\" WITH YOUR APPLICATION NAME**\n\nNow you are ready to go! Look for **Quick Guide** to learn how to use this framework.\n\n## Running tests\nTo run tests from CI sometimes it is needed to add:\n\n`set PYTHONPATH=%PYTHONPATH%;src;tests`\n\n## Run project\n\nFrom main application folder u can run this script:\n\n`python main.py`\n\n**first you need to fill your main(look in our examples)**\n\n\n# Quick Guide:\nOk, so lets say that you want add new tab to the your titania project:\n\nRight here:\n![](https://i.imgur.com/nxD1jAV.png)\n\n\n## First: Defining data\n\nThats very easy step. We store data related code at `data` module. You can find some implementations in framework core.\nIf the thing that you are looking for is not there, you should add your own class there. \nThat is extending `TitaniaDataInterface` and putting it in `data` folder. It is very **simple**.\nThe only requirements are that your class have `fetch()` method, that returns the actual data.\nLets implement it with an example:\n\n```python\nimport random\nfrom titania.data.data_core import LovellDataInterface\n\n\nclass RandomNList(LovellDataInterface):\n    def __init__(self, n=10):\n        self.n = n\n\n    def fetch(self):\n        return [random.random() for i in range(self.n)]\n```\n\nAnd that's it!\n(The `RandomNList` class can be found in package `titania.data`)\n\n## Creating the Plot\n\nWe need something that we want to look at, we can easilly implement some kind of plot by extending `MplPlot`.\nThis class uses **Matplotlib** for plotting.\n(If you would like to use any other plotting framework, you must at least extend `PlotInterface` class.)\n\n```python\nfrom titania.plots.base_plot import MplPlot\n\nclass OurPlot(MplPlot):\n\n    def draw_plot(self):\n        ax = self.figure.add_subplot()\n        ax.plot(self.view.data.fetch())\n        self.draw()\n```\n\nVery simple, we inherit from that class, and we only need to define `draw_plot`.\nWe already have `self.figure` as matplotlib object, as a property of MplPlot class.\nWe can save this as a python file in `plot` module.\n\n##Part three, the prestige: Implementation of tab\n\n### Creating new python file\nWe will create exemplary plot.\nWe will create file called `exemplary_gui.py`, and put it in views -> VELOView -> Exemplary -> exemplary_gui.py\nNotice, that the `Exemplary` folder does **not exist, yet**.\nThis is because we are structuring the files used to create tabs, in similar way that we structure tabs themselves.\nYou can look around in `views` folder to see that this is true.\nAlthough this is not necessary, this is the convention that we choose.\n\n### Writing code\n\nNow, we will create minimal implementation for new tab, line by line.\n\n#### Tab class\n\n```python\n\nfrom titania.QtGUI import SimpleTab\n\nclass Exemplary(SimpleTab):\n    pass\n```\n\nFirst we create tab class, in this case called `Exemplary`. \nAll of the tab implementations need to implement at least class `QtTabInterface`.\nThis interface requires the following components:\n - **data** argument in constructor, as in `__init__(self, data)`. This object must inherit from LovellDataInterface.\n - **plot_panel_grid** - assigned in constructor\n - **lineLayout**  - assigned in constructor\n - **grid_layout**- assigned in constructor\n - Method **create_control_panel** - that creates panel for the tab\n - Method **set_title** - that returns the string with the name of the tab.\n - Method **initiate** - that is runned after the creation of tab object, when we want to draw it on gui.\nBut our class is using sub-class that is already implementing\n\nThe `QtTabInterface` class is inherited by `SimpleTab`,  `QtBaseLayoutTab`, `QtPlotTab`.\nIn most of the cases you should use them instead of inheriting directly from `QtTabInterface`.\n**The recommended way is by subclassing `QtBaseLayoutTab`.**\n\nThe minimal requirements for inheriting from ``QtBaseLayoutTab`` are as follows:\n 1. call `QtBaseLayoutTab` constructor with `data` argument \n 2. implement method **set_title**\n 3. implement method **create_control_panel**\n 4. implement method **set_plot**\n\nLets go back to our example\n\n#### Data \n\n```python\nfrom titania.QtGUI import QtBaseLayoutTab\nfrom titania.data.data_core import EmptyLovellData\n\nclass Exemplary(QtBaseLayoutTab):\n    def __init__(self, parent=None):\n        QtBaseLayoutTab.__init__(self, data=EmptyLovellData(), parent=parent)\n\n```\n\nWe added `EmptyLovellData` to the call of the constructor.\nThe data object must inherit from `LovellDataInterface`.\nThis interface only requirec implementation of `fetch()` method, that will return data.\n\n#### Name \n\nNext we add the name of the tab, by implementing method `get_title`.\n\n```python\n    def get_title(self):\n        return \"example\"\n\n```\n\n#### control panel\n\nWe add control panel, that we will use to navigate through the data.\n```python\n    def create_control_panel(self):\n        return EmptyControlPanel()\n```\n\nFor now we leave that empty, with `EmptyControlPanel`.\n\n#### Plotting\n\nNow we must define `set_plot`. It must return object that Inherits `PlotInterface`. But we can also use partially implemented `SimplePlot` that inherits from that interface.\n```python\n    def set_plot(self):\n        return OurPlot(view=self)\n\n```\n\n\n#### It all comes together\n\nFinally your file should look something like this:\n\n```python\nfrom titania.QtGUI import QtBaseLayoutTab\nfrom titania.panels.main_control_panel import EmptyControlPanel\nfrom titania.data.exemplary_generated_data import RandomNList\nfrom titania.plots.our_plot import OurPlot\n\nclass Exemplary(QtBaseLayoutTab):\n    def __init__(self, parent=None):\n        QtBaseLayoutTab.__init__(self, data=RandomNList(), parent=parent)\n\n    def get_title(self):\n        return \"example\"\n\n    def create_control_panel(self):\n        return EmptyControlPanel()\n\n    def set_plot(self):\n        return OurPlot(view=self)\n\n```\n\nSave it in the file described in previous section.\n\nNow run your application. Can you see the new Tab? Probably not, because we are missing one key factor.\n*We need to add this class to the configuration*. \n\n### Configuration file\n\nOpen up file Config -> config.py. \n\nYou can probably see something like this\n```python\nfrom view.VELOView.AreaPlotTestTab.stacked_area_plot_gui import StackedAreaTestTab\n# ...\n# (Long list of imports) \n# ...\n\nconfig = {\n    \"VELOView\": [ThresholdsTab, BoxPlotTestTab, StackedAreaTestTab, ScatterWithHistogramPlotTestTab, ScatterPlotTestTab, CountPlotTestTab],\n    \"RUNView\": [PedestalsPlot, AnotherThresholdsPlot, PedestalsSingleMatrixPlot]\n}\n```\n\nThis is the actual place which **decides about the tabs placement**.\nSo add line that imports the created class, and add it to the list, like this:\n```python\nfrom view.VELOView.AreaPlotTestTab.stacked_area_plot_gui import StackedAreaTestTab\n# ...\n# (Long list of imports) \n# ...\n\nfrom view.VELOView.ExemplaryPlotTab.exemplary_gui import Exemplary\n\nconfig = {\n    \"VELOView\": [ThresholdsTab, BoxPlotTestTab, StackedAreaTestTab, ScatterWithHistogramPlotTestTab, ScatterPlotTestTab, CountPlotTestTab, Exemplary],\n    \"RUNView\": [PedestalsPlot, AnotherThresholdsPlot, PedestalsSingleMatrixPlot]\n}\n```\n\nNow when you run your application you should be able to see your tab.\n\n![](https://i.imgur.com/qrvABVR.png)\n\n\nOf course, everything is empty. But now, with all of the knowledge that you gained, it should be easy for you to implement anything that you want to view here.\n\n\n\n## New plot type\n\nIf you would like to create new plot, the easiest way is to inherit from `SimplePlot` class, and reimplement `draw_plot` method.\n\n**Remember to use self.view.data.fetch() to get data!**\n\nThen you can return your new plot object in `set_plot` method in your tab.\nTake a look at GUIWidget -> PlotWindow -> Plot to get inspiration.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/mmajewsk/titania",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "titania",
    "package_url": "https://pypi.org/project/titania/",
    "platform": "",
    "project_url": "https://pypi.org/project/titania/",
    "project_urls": {
      "Homepage": "https://gitlab.com/mmajewsk/titania"
    },
    "release_url": "https://pypi.org/project/titania/0.3.71/",
    "requires_dist": [
      "Click (==7.1.2)",
      "cycler (==0.10.0)",
      "kiwisolver (==1.1.0)",
      "matplotlib",
      "numpy",
      "pyparsing (==2.4.0)",
      "PyQt5",
      "PyQt5-sip",
      "python-dateutil (==2.8.0)",
      "python-dotenv (==0.10.1)",
      "six (==1.12.0)",
      "resources",
      "jinja2",
      "Flask (==1.1.1)",
      "flask-nav",
      "requests (~=2.25.1)",
      "pandas (~=1.1.4)",
      "mpld3 (~=0.5.2)",
      "markupsafe (~=1.1.1)",
      "setuptools (~=49.6.0)",
      "pip (~=20.2.4)"
    ],
    "requires_python": "",
    "summary": "Titania monitoring framework",
    "version": "0.3.71",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12122973,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2d68120de911aec7e5cf40bf52549a78e522461f375246ad725082bbae8f2cb",
          "md5": "e8051b82167c3072d5c38c81f3030988",
          "sha256": "1829885ca0bc1db14a4670218efa1e37696c400a06bd84e9ab572e15299b7b5f"
        },
        "downloads": -1,
        "filename": "titania-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e8051b82167c3072d5c38c81f3030988",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4993,
        "upload_time": "2020-07-13T14:02:02",
        "upload_time_iso_8601": "2020-07-13T14:02:02.248257Z",
        "url": "https://files.pythonhosted.org/packages/f2/d6/8120de911aec7e5cf40bf52549a78e522461f375246ad725082bbae8f2cb/titania-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbcb6957f4f3abcba2bbd66a34afcbffe0c9a0dbb8a827760d1333e9fa2ef078",
          "md5": "78f733af643ade787a54b2457f87cb8c",
          "sha256": "e626ce114f14e0c7acda5f646a07b03be706c4fcd1804918809d9f825eb8b599"
        },
        "downloads": -1,
        "filename": "titania-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78f733af643ade787a54b2457f87cb8c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5357,
        "upload_time": "2021-07-08T12:45:35",
        "upload_time_iso_8601": "2021-07-08T12:45:35.756757Z",
        "url": "https://files.pythonhosted.org/packages/bb/cb/6957f4f3abcba2bbd66a34afcbffe0c9a0dbb8a827760d1333e9fa2ef078/titania-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "083fe2027c9de14f49c88339ed3c2fa0a357a5d7518aee9faaf69d4758507fec",
          "md5": "842f4c591e7f181a03d3d4708d58244a",
          "sha256": "9849bc9b599c6ad029a21a60f0a8d622c93a99106701ea90b4b063075999eeb6"
        },
        "downloads": -1,
        "filename": "titania-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "842f4c591e7f181a03d3d4708d58244a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5513,
        "upload_time": "2021-07-08T12:45:37",
        "upload_time_iso_8601": "2021-07-08T12:45:37.306786Z",
        "url": "https://files.pythonhosted.org/packages/08/3f/e2027c9de14f49c88339ed3c2fa0a357a5d7518aee9faaf69d4758507fec/titania-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "477c28c22cb0f3f22c38ad72b7e72ba682c3845f7df06ab233b408642d904afa",
          "md5": "16a2e034146d2178aa034b53024efbe0",
          "sha256": "d8fcb5418af48413f2fb0da69ecf012e10e1cbf2ae10cb0a621223d6a44c9ecb"
        },
        "downloads": -1,
        "filename": "titania-0.3.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16a2e034146d2178aa034b53024efbe0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 498017,
        "upload_time": "2021-11-05T08:53:16",
        "upload_time_iso_8601": "2021-11-05T08:53:16.230809Z",
        "url": "https://files.pythonhosted.org/packages/47/7c/28c22cb0f3f22c38ad72b7e72ba682c3845f7df06ab233b408642d904afa/titania-0.3.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02de7e5d64ba5fb4e0a45173473f1481453776646fcea05b0a3b64b47f6c36b8",
          "md5": "2bd1084236bf6bf6064c161d7492e4c1",
          "sha256": "635caff270d5717e5fffd7e9ffdae1c6c2b1e1fb2a1f07b8af7ec17193b4e0c9"
        },
        "downloads": -1,
        "filename": "titania-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2bd1084236bf6bf6064c161d7492e4c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 497316,
        "upload_time": "2021-11-05T08:53:18",
        "upload_time_iso_8601": "2021-11-05T08:53:18.495793Z",
        "url": "https://files.pythonhosted.org/packages/02/de/7e5d64ba5fb4e0a45173473f1481453776646fcea05b0a3b64b47f6c36b8/titania-0.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.71": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4283f192fe6c5507fbcf0645044f72b8cab4e86b2ad53ca0ce7febcbc9cc94b4",
          "md5": "3aadf3535a4872aa00b2efa8d129dd7d",
          "sha256": "da0d33abe9e888815801efb64fca0e806800e5f6957f57e1b0404de34b5dc342"
        },
        "downloads": -1,
        "filename": "titania-0.3.71-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3aadf3535a4872aa00b2efa8d129dd7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 504943,
        "upload_time": "2021-11-25T12:54:23",
        "upload_time_iso_8601": "2021-11-25T12:54:23.779114Z",
        "url": "https://files.pythonhosted.org/packages/42/83/f192fe6c5507fbcf0645044f72b8cab4e86b2ad53ca0ce7febcbc9cc94b4/titania-0.3.71-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80dc1722741332af2b457483fbe589da2bd5573a8e299a560c2756b099e52240",
          "md5": "0a4711192806018c374f6bb758a59c69",
          "sha256": "6d6fbb8d2f621908ef4e93b4aa589e550faf26634533e05b2acc007cff7622d6"
        },
        "downloads": -1,
        "filename": "titania-0.3.71.tar.gz",
        "has_sig": false,
        "md5_digest": "0a4711192806018c374f6bb758a59c69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 501850,
        "upload_time": "2021-11-25T12:54:25",
        "upload_time_iso_8601": "2021-11-25T12:54:25.274123Z",
        "url": "https://files.pythonhosted.org/packages/80/dc/1722741332af2b457483fbe589da2bd5573a8e299a560c2756b099e52240/titania-0.3.71.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4283f192fe6c5507fbcf0645044f72b8cab4e86b2ad53ca0ce7febcbc9cc94b4",
        "md5": "3aadf3535a4872aa00b2efa8d129dd7d",
        "sha256": "da0d33abe9e888815801efb64fca0e806800e5f6957f57e1b0404de34b5dc342"
      },
      "downloads": -1,
      "filename": "titania-0.3.71-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3aadf3535a4872aa00b2efa8d129dd7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 504943,
      "upload_time": "2021-11-25T12:54:23",
      "upload_time_iso_8601": "2021-11-25T12:54:23.779114Z",
      "url": "https://files.pythonhosted.org/packages/42/83/f192fe6c5507fbcf0645044f72b8cab4e86b2ad53ca0ce7febcbc9cc94b4/titania-0.3.71-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80dc1722741332af2b457483fbe589da2bd5573a8e299a560c2756b099e52240",
        "md5": "0a4711192806018c374f6bb758a59c69",
        "sha256": "6d6fbb8d2f621908ef4e93b4aa589e550faf26634533e05b2acc007cff7622d6"
      },
      "downloads": -1,
      "filename": "titania-0.3.71.tar.gz",
      "has_sig": false,
      "md5_digest": "0a4711192806018c374f6bb758a59c69",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 501850,
      "upload_time": "2021-11-25T12:54:25",
      "upload_time_iso_8601": "2021-11-25T12:54:25.274123Z",
      "url": "https://files.pythonhosted.org/packages/80/dc/1722741332af2b457483fbe589da2bd5573a8e299a560c2756b099e52240/titania-0.3.71.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}