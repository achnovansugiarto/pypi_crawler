{
  "info": {
    "author": "Madelyn Eriksen",
    "author_email": "opensource@madelyneriksen.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "DashML - HTML Components in Python\n====================================\n\n<!-- Badge Spam -->\n[![PyPI](https://img.shields.io/pypi/v/dashml?style=flat-square)](https://pypi.org/project/dashml/)\n[![GitHub issues](https://img.shields.io/github/issues/madelyneriksen/dashml?color=green&style=flat-square)](https://github.com/madelyneriksen/dashml/issues)\n[![License: MIT](https://img.shields.io/badge/License-MIT-blue?style=flat-square)](/LICENSE)\n![Code Style: Black](https://img.shields.io/badge/Code%20Style-Black-black?style=flat-square)\n\nCreate functions to build HTML in Python- inspired by the \"component movement\" in Javascript.\n\n```python\n>>> from dashml import _, render\n>>>\n>>> render(_.p(\"Hello, world!\"))\n'<p>Hello, world!</p>'\n```\n\n## Why DashML?\n\nJavaScript frameworks like React or Vue took over the frontend landscape because of the ease of creating reusable components. React _especially_ thrives with the fact that components are _code_, and can be manipulated as such.\n\nMeanwhile, server-side languages are stuck with clunky template languages to generate HTML. It's hard to extract components out of Jinja2 or Django templates to re-use.\n\nDashML expands on existing Python libraries to create an ergonomic way to generate HTML in Python.\n\n* Built on `lxml` (and in turn built on C) for extreme speed- check out the [benchmarks](#benchmarks) (or run them yourself!).\n* A minimal API you can pick up in ~15 minutes- DashML is so simple, you could have written it yourself!\n\nAdopting DashML in your project allows you to create traditional server rendered webpages faster, while embracing the good parts of component driven design.\n\n## Get Started\n\nTo get started with DashML, you will need:\n\n* Python 3.6+\n* `pip`\n* About 5 minutes.\n\n### Install From PyPi\n\nLike almost every Python package, you can install DashML from PyPi:\n\n```bash\npip install dashml\n```\n\nWow, that was really simple.\n\n### Writing Components\n\nDashML components are just functions that return `lxml` `Element` objects. You can write one like this:\n\n\n```python\n# greeter.py\n\nfrom dashml import _\n\ndef greeter(name: str) -> 'Element':\n    \"\"\"My first DashML component!!\"\"\"\n    return _.p(f\"Hello, {name}!\")\n```\n\nThe function `greeter` returns an `Element`, which is a special representation of an xml document from the library `lxml`. `lxml` uses C, so it's really fast to create and modify elements.\n\nYou can get a string out of an `Element` by using the DashML function `render`.\n\n```python\n# greeter.py\n\nfrom dashml import render, _\n\n# ...snip\n\nprint(render(greeter(\"Maddie\")))\n```\n\nIf you save this to `greeter.py` and run it, you can see your component get rendered out as a string:\n\n```bash\npython greeter.py\n<p>Hello, Maddie!</p>\n```\n\n### Adding Attributes\n\nHTML documents almost always have attributes on some elements. You can add in attributes to DashML functions as keyword arguments.\n\n```python\n# greeter.py\n\nfrom dashml import _\n\ndef greeter(name: str) -> 'Element':\n    \"\"\"My first DashML component!!\"\"\"\n    return _.p(f\"Hello, {name}!\", id=\"my-greeter\", class_name=\"my-greeter\")\n```\n\nDashML attributes are always snake case. The attributes `class` and `for` are replaced with `class_name` and `html_for`. Additionally, attributes prefixed with `data_` or `aria_` are converted to use dashes instead of underscores. If you've used React, this probably feels familiar!\n\n### :warning: Unsafe Usage :warning:\n\nBy default, DashML prevents XSS attacks by _escaping_ all text that goes into any elements. If you really want to use a raw HTML string, you can import `unsafe_from_string` and create raw elements that way.\n\n```python\nfrom dashml import unsafe_from_string\n\nelement = unsafe_from_string('<script>alert(\"Unsafe!\")</script>')\n```\n\nRemember, **this is not safe for untrusted strings,** and should only be used as an escape hatch if absolutely necessary. To stay safe, stick to normal usage of DashML.\n\n## DashML Tips\n\nCongrats! You've completed a tour of the DashML API. Here are some friendly suggestions of how to use DashML effectively in your projects.\n\n#### Create composable, reusable functions.\n\nWriting out element names by hand everywhere is _no better_ than just writing plain HTML, and doesn't use the composable and reusable powers DashML has.\n\nFor example, rather than typing out `_.h1(...)` everywhere, create a function called `header` that is specific to your project and creates the elements you need:\n\n```python\ndef header(text: str) -> 'Element':\n    \"\"\"Creates a header for a page.\"\"\"\n    return _.header(\n        _.h1(text, class_name=\"header__title\"),\n        class_name=\"header\"\n    )\n```\n\nComposing functions that create elements is expressive, and a lot cleaner:\n\n```python\npage(\n    header(\"HTML in Python? More likely than you think.\"),\n    content(),\n    footer(),\n)\n```\n\nNow that's component driven code!\n\n#### Work With Your Data Structures\n\nA great strategy with DashML components is to have them accept your data objects as arguments, and just control display logic.\n\nFor example, if you're working with an ORM object for a blog post, creating a component called `blog_post` provides an easy way to render out your database records:\n\n\n```python\n# components.py\n\ndef blog_post(post: BlogPost) -> 'Element':\n    return page(\n        header(post.title),\n        content(post.text),\n        footer(),\n    )\n```\n\n#### Keep DashML Components Separate\n\nConsider keeping your DashML code in a different module from your code that contains business logic (and everything else). Keeping a separate `components.py` file in each module with DashML components keeps your intent clear and code clean:\n\n```\nmymodule/\n|- components.py\n|- models.py\n|- views.py\n```\n\nAdditionally, it allows easier mirroring of objects in other modules. From the blog post example above:\n\n```python\n# views.py\n\nfrom . import components\n\ndef my_view(request, post_id: int):\n    # ...snip\n    post = BlogPost.get(post_id)\n    return components.blog_post(post)\n```\n\n#### ...And Keep Business Logic out of Components\n\nComponents should be as slim as possible, and only handle presentation logic. It's an anti-pattern to bundle up business logic in your DashML components.\n\n```python\n\n# BAD: Don't do this!\ndef render_post(pk: int):\n    post = get_or_404(BlogPost, pk)\n    return _.p(post.content)\n\n# GOOD: Just pass in objects to render!\ndef render_post(post: BlogPost):\n    return _.p(post.content)\n```\n\nAdditionally, every DashML component is ideally a _pure function_, that will always return the same result for a given input.\n\n#### Consider Functional CSS\n\nIf you want to bring functional styling into your DashML components, consider using a css library like [Tachyons](https://tachyons.io/) for styling.\n\n```python\ndef my_text(text: str):\n    return _.p(text, class_name=\"f5 f4-l lh-copy athelas\")\n```\n\nAtomic/functional CSS blends _exceptionally_ well with DashML, and allows the embracing of functional components in styles and markup.\n\n## Benchmarks\n\nSince DashML relies on `lxml` for components, it's fast. Very, very fast. Rendering components is generally a sub-millisecond operation if no external action happens in the component.\n\n```\n===============================================================\nBenchmark: 'Simple HTML document.'\n===============================================================\n344.982 miliseconds for 5000 renders of 'Simple HTML document.'\nAvg 0.069 miliseconds for one render.\n```\n\nObviously, adding things like HTTP requests, database queries, or complex calculations to renders will slow them down. But why are you doing that, [keep logic separate!](#and-keep-business-logic-out-of-components).\n\nYou can run the benchmarks yourself locally by cloning and installing the project:\n\n```bash\ngit clone https://github.com/madelyneriksen/dashml/\ncd dashml\npython -m venv .env && source .env/bin/activate && pip install -r requirements.dev.txt\npython bench.py # or `make bench`\n```\n\n## Special Thanks\n\nDashML could not be built without these libraries:\n\n* [lxml](https://lxml.de) for creating a _fast_ XML library.\n\n## License\n\nCopyright 2019 under terms of the MIT license. See [LICENSE](/LICENSE) for details.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/madelyneriksen/dashml",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dashml",
    "package_url": "https://pypi.org/project/dashml/",
    "platform": "",
    "project_url": "https://pypi.org/project/dashml/",
    "project_urls": {
      "Homepage": "https://github.com/madelyneriksen/dashml"
    },
    "release_url": "https://pypi.org/project/dashml/0.1.1/",
    "requires_dist": [
      "lxml"
    ],
    "requires_python": ">=3.5",
    "summary": "Generate HTML with Python functions.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6351337,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba17f35a5ae1e46526e81083e4bfc18d076f2ce05ecc2781438e1051809eda08",
          "md5": "be908ed4fa50cc5d8a14485316f121df",
          "sha256": "35e5f51fd6931c0ba612c094d9b5c124ee6373db9c7d675173cfeaf827e27a17"
        },
        "downloads": -1,
        "filename": "dashml-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be908ed4fa50cc5d8a14485316f121df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 3381,
        "upload_time": "2019-12-22T18:42:29",
        "upload_time_iso_8601": "2019-12-22T18:42:29.649209Z",
        "url": "https://files.pythonhosted.org/packages/ba/17/f35a5ae1e46526e81083e4bfc18d076f2ce05ecc2781438e1051809eda08/dashml-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b199c26be9b15a38b472dd6c455915b2846404d443af40ce9856b512fa205988",
          "md5": "5b251d8d96bea608f5e748e63d06007b",
          "sha256": "6d20123c7414df7b95d5f6d726b42956659fffdc14a341045dfa6cce80b6fef6"
        },
        "downloads": -1,
        "filename": "dashml-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b251d8d96bea608f5e748e63d06007b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2325,
        "upload_time": "2019-12-22T18:42:32",
        "upload_time_iso_8601": "2019-12-22T18:42:32.046891Z",
        "url": "https://files.pythonhosted.org/packages/b1/99/c26be9b15a38b472dd6c455915b2846404d443af40ce9856b512fa205988/dashml-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bbba80f1219ec6c1e3c937095d83e69eb13535230fedb34343c28414de497ad",
          "md5": "d65e804e3c0e1dfccb323e947efc19cf",
          "sha256": "d0ddb04e46b32a50a7dedaba9ec70599c1d4dd1d977b432e4d932694d6c5d886"
        },
        "downloads": -1,
        "filename": "dashml-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d65e804e3c0e1dfccb323e947efc19cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6593,
        "upload_time": "2019-12-22T22:05:21",
        "upload_time_iso_8601": "2019-12-22T22:05:21.335137Z",
        "url": "https://files.pythonhosted.org/packages/6b/bb/a80f1219ec6c1e3c937095d83e69eb13535230fedb34343c28414de497ad/dashml-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d952591c16fa0f5ec19b3b6fa9a03866e979c252644047280862ab340a1825ca",
          "md5": "4e003af2f0b400f335033821f81352db",
          "sha256": "cec82f4e67902903c475765d4d0e3260185a748b73f18f1c9844f9879544f229"
        },
        "downloads": -1,
        "filename": "dashml-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4e003af2f0b400f335033821f81352db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 5990,
        "upload_time": "2019-12-22T22:05:22",
        "upload_time_iso_8601": "2019-12-22T22:05:22.869436Z",
        "url": "https://files.pythonhosted.org/packages/d9/52/591c16fa0f5ec19b3b6fa9a03866e979c252644047280862ab340a1825ca/dashml-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d6d9c950c12667b4a51c3cf8eab8fa480f294520458997faedb702db3aa6e1a",
          "md5": "ff648c9ccd36bc267b61c8d24460921a",
          "sha256": "3487e1ed3dcbe32742f8b4d95f54d78fd3d687086e3eb7bce54e368d5f7883b6"
        },
        "downloads": -1,
        "filename": "dashml-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff648c9ccd36bc267b61c8d24460921a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7189,
        "upload_time": "2019-12-22T23:02:33",
        "upload_time_iso_8601": "2019-12-22T23:02:33.102338Z",
        "url": "https://files.pythonhosted.org/packages/2d/6d/9c950c12667b4a51c3cf8eab8fa480f294520458997faedb702db3aa6e1a/dashml-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c5330725713555aca8d7138394ed4b5d9d1f01a567ac6689c7a63f78bd0e2ec",
          "md5": "f817e7fd0d4eef1252e8f4aece28650a",
          "sha256": "095f1885aee9013cc58cfb2349302ecc983ef7476246bf2509b741cefc57f196"
        },
        "downloads": -1,
        "filename": "dashml-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f817e7fd0d4eef1252e8f4aece28650a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6545,
        "upload_time": "2019-12-22T23:02:34",
        "upload_time_iso_8601": "2019-12-22T23:02:34.953129Z",
        "url": "https://files.pythonhosted.org/packages/2c/53/30725713555aca8d7138394ed4b5d9d1f01a567ac6689c7a63f78bd0e2ec/dashml-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f78b48544f6cbd3a77e166c8bf166010b9eced5554e01685af0ebae979114dff",
          "md5": "b856a553724a03538f372008092d04b9",
          "sha256": "0f2d6cbf6bb57543e370295a63cfe471de0d1e03804c7532cb6a1af0c0e13650"
        },
        "downloads": -1,
        "filename": "dashml-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b856a553724a03538f372008092d04b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10313,
        "upload_time": "2019-12-23T15:44:15",
        "upload_time_iso_8601": "2019-12-23T15:44:15.531520Z",
        "url": "https://files.pythonhosted.org/packages/f7/8b/48544f6cbd3a77e166c8bf166010b9eced5554e01685af0ebae979114dff/dashml-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba97518ac9e1e3522c77b6de54b5c2563542fb578e68bf49952caf53e02c3bf7",
          "md5": "fe9313426734e5189e2fa6851d512f2b",
          "sha256": "7c1b2e0bad1515fbf11a0d40276fd937d906dfdb954e4c3fd45d004f52fd4a30"
        },
        "downloads": -1,
        "filename": "dashml-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fe9313426734e5189e2fa6851d512f2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8152,
        "upload_time": "2019-12-23T15:44:16",
        "upload_time_iso_8601": "2019-12-23T15:44:16.980153Z",
        "url": "https://files.pythonhosted.org/packages/ba/97/518ac9e1e3522c77b6de54b5c2563542fb578e68bf49952caf53e02c3bf7/dashml-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f78b48544f6cbd3a77e166c8bf166010b9eced5554e01685af0ebae979114dff",
        "md5": "b856a553724a03538f372008092d04b9",
        "sha256": "0f2d6cbf6bb57543e370295a63cfe471de0d1e03804c7532cb6a1af0c0e13650"
      },
      "downloads": -1,
      "filename": "dashml-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b856a553724a03538f372008092d04b9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 10313,
      "upload_time": "2019-12-23T15:44:15",
      "upload_time_iso_8601": "2019-12-23T15:44:15.531520Z",
      "url": "https://files.pythonhosted.org/packages/f7/8b/48544f6cbd3a77e166c8bf166010b9eced5554e01685af0ebae979114dff/dashml-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba97518ac9e1e3522c77b6de54b5c2563542fb578e68bf49952caf53e02c3bf7",
        "md5": "fe9313426734e5189e2fa6851d512f2b",
        "sha256": "7c1b2e0bad1515fbf11a0d40276fd937d906dfdb954e4c3fd45d004f52fd4a30"
      },
      "downloads": -1,
      "filename": "dashml-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fe9313426734e5189e2fa6851d512f2b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 8152,
      "upload_time": "2019-12-23T15:44:16",
      "upload_time_iso_8601": "2019-12-23T15:44:16.980153Z",
      "url": "https://files.pythonhosted.org/packages/ba/97/518ac9e1e3522c77b6de54b5c2563542fb578e68bf49952caf53e02c3bf7/dashml-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}