{
  "info": {
    "author": "Hangjau",
    "author_email": "hangjau818@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pywchat\r\n### 项目介绍\r\n\r\n项目是根据企业微信可与微信进行互通的前提，通过操作企业微信的开放API达到将消息通知到微信.只封装了**微信能够接收的信息类型**以及上传临时素材等一些辅助接口. \r\n要使用该项目请先自己注册一个企业微信(无需认证) 注册文档\r\n\r\n### 项目相关文档\r\n\r\n​\t\t**项目地址** ：https://github.com/HangJau/pywchat.git\r\n\r\n​\t\t**企业微信API**：[ 企业微信API (qq.com)](https://work.weixin.qq.com/api/doc/90000/90135/90236)\r\n\r\n### 项目实现\t\r\n\r\n1. 已实现配置信息进行初始化.\r\n\r\n2. 已实现对token的离线保存，以及token失效的自动获取.\r\n\r\n3. 已实现对[text](#send_text)、[image](#send_image)、[voice](#send_voice)、[video](#send_video)、[file](#send_file)、[textcard](#send_textcard)、[graphic](#send_graphic)、[upload_image](#upload_image)、[get_user_id](#get_user_id)消息的发送封装.\r\n\r\n4. 已实现对错误返回的处理.\r\n\r\n  \r\n\r\n### 项目下载\t\t\r\n\r\n```python\r\npip install pywchat\t\r\n```\r\n\r\n### 项目导入\r\n\r\n```python\r\nfrom pywchat import Sender\r\n```\r\n\r\n\r\n\r\n### 三种初始化方法\r\n\r\n    第一种：直接传入，只会在当前路径生成一个.token文件\r\n    app = Sender(corpid,corpsecret,agentid)\r\n    \r\n    第二种：传入配置文件路径.读取配置并在当前路径生成一个.token文件(理论上文件也可无后缀且能读取成text即可，格式可参考配置介绍)\r\n    app = Sender(path=r\"G:\\chat\\conf.ini\")\r\n    \r\n    第三种：不传任何参. 动态输入所需的corpid,corpsecret,agentid,并在当前路径生成一个.chatkey,.token两个文件\r\n    app = Sender()\r\n\r\n\r\n​    \r\n\r\n### 配置介绍\r\n\r\n    目前会有两个文件“ .chatkey” “ .token”\r\n    .token: 保存获取到的token信息,保存在项目目录下\r\n    .chatkey: 初始化的时候动态创建的配置文件，保存在项目目录下\r\n    \r\n    .token文件内容:\r\n    [md5(corpid, corpsecret)]\r\n    token=skdjwakljdslakjdw\r\n    tokenout=1631451895\r\n    \r\n    .chatkey文件内容:\r\n    [Chatinfo]\r\n    corpid=dwajdlwajdlwa\r\n    corpsecret=dsjdwaljfkleajdwa\r\n    agentid=00001\r\n\r\n\r\n​    \r\n\r\n### 消息发送\r\n\r\n\r\n\r\n#### <span id=\"send_text\">send_text</span>\r\n\r\n      发送纯文本消息，支持换行、以及A标签，大小最长不超过2048字节\r\n      \r\n      参数：\r\n           message: 需要发送的消息\r\n           kwargs:  可选择发送对象，tousers(用户), todept(部门), totags(标签用户)可同时填入,默认touser=@all\r\n           \r\n      例：\r\n           app.send_text(\"又有一个富婆看了你的帅照啦..\", touser=\"ZhuRen|user1\")\r\n           app.send_text(\"又有一个富婆看了你的帅照啦..\", todept=\"1|2\")\r\n           app.send_text(\"又有一个富婆看了你的帅照啦..\", totags=\"A\")\r\n      \t\t\r\n      tips:\r\n      \t\t默认为touser=@all, 发送全体用户，注意指定接收对象\r\n      \t\t接收的多个用户用 | 拼接\r\n\r\n![send_text](https://res.mail.qq.com/node/ww/wwopenmng/images/independent/doc/test_msg$5bc63c26.png)\r\n\r\n\r\n\r\n#### <span id=\"send_image\">send_image</span>\r\n\r\n      发送纯图片消息，仅支持jpg,png格式，大小5B~2M\r\n      接收的多个用户用 | 拼接\r\n      参数：\r\n           iamge_path: 发送图片的本地路径\r\n           kwargs:  可选择发送对象，tousers(用户), todept(部门), totags(标签用户)可同时填入,默认为发送全部人\r\n    \r\n      例：\r\n           app.send_image(r\"G:\\caht\\image.jpg\", touser=\"ZhuRen|user1\")\r\n           app.send_image(r\"G:\\caht\\image.jpg\", todept=\"1|2\")\r\n           app.send_image(r\"G:\\caht\\image.jpg\", totags=\"A\")\r\n           \r\n      tips:\r\n      \t\t默认为touser=@all, 发送全体用户，注意指定接收对象\r\n      \t\t接收的多个用户用 | 拼接\r\n\r\n\r\n​         \r\n\r\n#### <span id=\"send_voice\">send_voice</span>\r\n\r\n      发送语音消息，仅支持amr格式，大小5B~2M\r\n      \r\n      参数：\r\n           voice_path: 发送语音文件的本地路径\r\n           kwargs:  可选择发送对象，tousers(用户), todept(部门), totags(标签用户)可同时填入,默认为发送全部人\r\n    \r\n      例：\r\n           app.send_voice(r\"G:\\caht\\语音.amr\", touser=\"ZhuRen|user1\")\r\n           app.send_voice(r\"G:\\caht\\语音.amr\", todept=\"1|2\")\r\n           app.send_voice(r\"G:\\caht\\语音.amr\", totags=\"A\")\r\n           \r\n      tips:\r\n      \t\t默认为touser=@all, 发送全体用户，注意指定接收对象\r\n      \t\t接收的多个用户用 | 拼接\r\n\r\n\r\n\r\n#### <span id=\"send_video\">send_video</span>\r\n\r\n      发送视频消息，仅支持MP4格式的视频消息，大小5B~10M\r\n      \r\n      参数：\r\n           video_path: 发送视频文件的本地路径\r\n           kwargs:  可选择发送对象，tousers(用户), todept(部门), totags(标签用户)可同时填入,默认为发送全部人\r\n    \r\n      例：\r\n           app.send_video(r\"G:\\caht\\视频.mp4\", touser=\"ZhuRen|user1\")\r\n           app.send_video(r\"G:\\caht\\视频.MP4\", todept=\"1|2\")\r\n           app.send_video(r\"G:\\caht\\视频.mp4\", totags=\"A\")\r\n           \r\n      tips:\r\n      \t\t默认为touser=@all, 发送全体用户，注意指定接收对象\r\n      \t\t接收的多个用户用 | 拼接\r\n\r\n![send_video](https://p.qpic.cn/pic_wework/3478722865/9d9b75910515dfd9064947d1d95e8dd7892670895ddfc0f3/0)\r\n\r\n\r\n\r\n#### <span id=\"send_file\">send_file</span>\r\n\r\n      发送文件消息, 大小5B~10M\r\n      \r\n      参数：\r\n           file_path: 发送文件的本地路径\r\n           kwargs:  可选择发送对象，tousers(用户), todept(部门), totags(标签用户)可同时填入,默认为发送全部人\r\n    \r\n      例：\r\n           app.send_file(r\"G:\\caht\\富婆联系表.xlsx\", touser=\"ZhuRen|user1\")\r\n           app.send_file(r\"G:\\caht\\富婆联系表.xlsx\", todept=\"1|2\")\r\n           app.send_file(r\"G:\\caht\\富婆联系表.xlsx\", totags=\"A\")\r\n           \r\n      tips:\r\n      \t\t默认为touser=@all, 发送全体用户，注意指定接收对象\r\n      \t\t接收的多个用户用 | 拼接\r\n\r\n![send_file](http://res.mail.qq.com/node/ww/wwopenmng/images/independent/doc/filemsg.jpeg)\r\n\r\n\r\n\r\n#### <span id=\"send_textcard\">send_textcard</span>\r\n\r\n      发送文字卡片消息，点击卡片后跳转到设定的链接\r\n      \r\n      参数：\r\n           card_title: 标题，不超过128个字节，超过会自动截断\r\n           desc: 描述，不超过512个字节，超过会自动截断\r\n           link: 点击后跳转的链接。最长2048字节，请确保包含了协议头(http/https)\r\n           btn: 按钮文字。 默认为“详情”， 不超过4个文字，超过自动截断.\r\n           kwargs: 可选择发送对象，tousers(用户), todept(部门), totags(标签用户)可同时填入,默认为发送全部人\r\n       \r\n      例：\r\n           app.send_textcard(\"富婆任务通知\", \"2021年10月24日\\n您关注的富婆发布了最新的任务.\",\"https://www.RichWoman.com/task/1\",touser=\"ZhuRen\")\r\n           \r\n           app.send_textcard(\"富婆任务通知\", \"2021年10月24日\\n您关注的富婆发布了最新的任务.\",\"https://www.RichWoman.com/task/1\",todept=\"1|2\")\r\n           \r\n           app.send_textcard(\"富婆任务通知\", \"2021年10月24日\\n您关注的富婆发布了最新的任务.\",\"https://www.RichWoman.com/task/1\",totags=\"A\")\r\n      \r\n      tips:\r\n      \t\t默认为touser=@all, 发送全体用户，注意指定接收对象\r\n      \t\t接收的多个用户用 | 拼接\r\n\r\n![send_textcard](http://res.mail.qq.com/node/ww/wwopenmng/images/independent/doc/cardmsg.jpeg)\r\n\r\n\r\n\r\n#### <span id=\"send_graphic\">send_graphic</span>\r\n\r\n```\r\n  发送图文卡片消息，点击卡片后跳转到设定的链接\r\n  \r\n  参数：\r\n       cardtitle: 标题，不超过128个字节，超过会自动截断\r\n       desc: 描述，不超过512个字节，超过会自动截断\r\n       link: 点击后跳转的链接。最长2048字节，请确保包含了协议头(http/https)\r\n       image_link: 卡片中显示图片的url.如何获取参考(upload_iamge)\r\n       kwargs: 可选择发送对象，tousers(用户), todept(部门), totags(标签用户)可同时填入,默认为发送全部人\r\n       \r\n  例：\r\n       app.send_graphic(\"富婆动态通知\", \"您关注的富婆发布了最新的照片.\", \"https://www.RichWoman.com/dynamic/1/\", \"https://www.RichWoman.com/dynamic/1/photos/fp.jpg\", touser=\"ZhuRen|user1\")\r\n       app.send_graphic(\"富婆动态通知\", \"您关注的富婆发布了最新的照片.\", \"https://www.RichWoman.com/dynamic/1/\", \"https://www.RichWoman.com/dynamic/1/photos/fp.jpg\", todeot=\"1|2\")\r\n       app.send_graphic(\"富婆动态通知\", \"您关注的富婆发布了最新的照片.\", \"https://www.RichWoman.com/dynamic/1/\", \"https://www.RichWoman.com/dynamic/1/photos/fp.jpg\", totags=\"A\")\r\n   \r\n   tips:\r\n  \t\t默认为touser=@all, 发送全体用户，注意指定接收对象\r\n  \t\t接收的多个用户用 | 拼接\r\n```\r\n\r\n![send_graphic](https://p.qpic.cn/pic_wework/3478722865/7a7c92760b2bd396e3b856a660f43c8b7db11271bddb3f34/0)\r\n\r\n\r\n\r\n#### <span id=\"upload_image\">upload_image</span>\r\n\r\n      上传图片，返回图片链接，永久有效，主要用于图文消息卡片imag_link参数\r\n      图片大小：图片文件大小应在 5B ~ 2MB 之间\r\n      \r\n      参数：\r\n           image_path: 发送图片的本地路径\r\n           enable: 是否开启记录上传图片返回的url,会在当前文件夹下创建一个imagesList.txt。 置为False不持久化.默认True\r\n      \r\n      例：\r\n           image_url = app.upload_image(r\"C:\\\\photo\\boy.jpg\")\r\n           print(image_url)\r\n           \r\n      tips:\r\n      \t\t多次上传同一图片会返回不同的地址且永久保存，希望大家还是只上传一次记录返回的url备用。\r\n      \t\t默认为touser=@all, 发送全体用户，注意指定接收对象\r\n      \t\t接收的多个用户用 | 拼接\r\n\r\n\r\n\r\n#### <span id=\"get_user_id\">get_user_id</span>   \r\n\r\n      通过部门id获取部门下的员工信息\r\n    \r\n    参数：\r\n           departmentid: 部门id.根部门默认为 1\r\n           fetch_child: 是否递归子部门下的员工信息，默认为0，不递归\r\n      \r\n      例：\r\n           get_userid(1)\r\n           \r\n      tips:\r\n      \t\t该方法只输出不进行返回.\r\n      \t\t默认为touser=@all, 发送全体用户，注意指定接收对象\r\n      \t\t接收的多个用户用 | 拼接\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HangJau/pychatbot",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pywchat",
    "package_url": "https://pypi.org/project/pywchat/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pywchat/",
    "project_urls": {
      "Homepage": "https://github.com/HangJau/pychatbot"
    },
    "release_url": "https://pypi.org/project/pywchat/1.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Custom WeChat push information database",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12207481,
  "releases": {
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b18d74570bc63cb0cbb49ccd9090ebfe59ad6cb932b8995a851405e2f75f3f62",
          "md5": "9d5e3f3dfb85e4870392ee906f184957",
          "sha256": "d3dface91fd3f30f80c7dfb1cfd407b93512999ac78fc389c8416543e28b6e56"
        },
        "downloads": -1,
        "filename": "pywchat-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d5e3f3dfb85e4870392ee906f184957",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22774,
        "upload_time": "2021-09-15T13:08:38",
        "upload_time_iso_8601": "2021-09-15T13:08:38.716674Z",
        "url": "https://files.pythonhosted.org/packages/b1/8d/74570bc63cb0cbb49ccd9090ebfe59ad6cb932b8995a851405e2f75f3f62/pywchat-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0109ed6e8b3bc6f6259434a805be4855ae775543b38de383679cc66881131549",
          "md5": "f048896defeff04c44ba4a4f126fd2ee",
          "sha256": "a81f984e60c81bf3a315769d3714bfa2fcdc9f122310dd82411aaea996e8a231"
        },
        "downloads": -1,
        "filename": "pywchat-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f048896defeff04c44ba4a4f126fd2ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23400,
        "upload_time": "2021-09-15T13:08:41",
        "upload_time_iso_8601": "2021-09-15T13:08:41.679450Z",
        "url": "https://files.pythonhosted.org/packages/01/09/ed6e8b3bc6f6259434a805be4855ae775543b38de383679cc66881131549/pywchat-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d978d878db29b2a1c42c80d0e2db53a81c82e85c5fb3811e76fb7e899afe4eee",
          "md5": "0b7d716b56679fe11ec77644be0e19fc",
          "sha256": "57b758e4d2c090820222185b07f833071da2b0317fb48836b8a982a59c3609c3"
        },
        "downloads": -1,
        "filename": "pywchat-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b7d716b56679fe11ec77644be0e19fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23444,
        "upload_time": "2021-12-04T07:33:04",
        "upload_time_iso_8601": "2021-12-04T07:33:04.554148Z",
        "url": "https://files.pythonhosted.org/packages/d9/78/d878db29b2a1c42c80d0e2db53a81c82e85c5fb3811e76fb7e899afe4eee/pywchat-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d978d878db29b2a1c42c80d0e2db53a81c82e85c5fb3811e76fb7e899afe4eee",
        "md5": "0b7d716b56679fe11ec77644be0e19fc",
        "sha256": "57b758e4d2c090820222185b07f833071da2b0317fb48836b8a982a59c3609c3"
      },
      "downloads": -1,
      "filename": "pywchat-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0b7d716b56679fe11ec77644be0e19fc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23444,
      "upload_time": "2021-12-04T07:33:04",
      "upload_time_iso_8601": "2021-12-04T07:33:04.554148Z",
      "url": "https://files.pythonhosted.org/packages/d9/78/d878db29b2a1c42c80d0e2db53a81c82e85c5fb3811e76fb7e899afe4eee/pywchat-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}