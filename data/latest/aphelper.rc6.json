{
  "info": {
    "author": "John Carter",
    "author_email": "jfcarter2358@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# APHelper\n\n## Getting Started\n\nTo use APHeler, add the following import statement to your code\n```python\nfrom aphelper import core\n```\n\nThen, make sure your program has a main class with whatever functions you want to the commands to run contained in it. For example, here is a file with a `Test` class that has a `test` function inside it which our command will call.\n```python\nfrom aphelper import core\n\nclass Test:\n    def __init__(self):\n        ah = core.ArgparseHelper(def_file='test/test.jsonc', parent=self)\n        ah.execute()\n\n    def test(self, args):\n        print('test')\n\nif __name__ == '__main__':\n    Test()\n```\n\nYou'll see that in the class' init function we create a `core.ArgparseHelper` object and pass the location of a definition file along with 'self'. You can pass a file location with the `def_file` keyword or you can pass the contents of a file with the `def_data` keyword.\nFollowing the creation of the object, we call `ah.execute()` to create and parse the CLI.\n\nThe definition file used in this example is below:\n```jsonc\n{\n    // the meta section defines information about the parser/subparser\n    // for this first meta section you don't need the parser_help key/field\n    \"meta\": {\n        \"parser_description\": \"Foo bar\",\n        \"subparser_title\": \"subcommands\",\n        \"subparser_dest\": \"command\",\n        \"subparser_description\": \"valid subcommands\"\n    },\n    // the subparsers key is used to define any parsers that need to be created\n    \"subparsers\": {\n        // in this case \"hello\" is the name of the first command\n        \"hello\": {\n            \"meta\": {\n                \"parser_description\": \"hello description\",\n                \"parser_help\": \"hello help\",\n                \"subparser_title\": \"subcommands\",\n                \"subparser_dest\": \"subcommand\",\n                \"subparser_description\": \"valid subcommands\"\n            },\n            // once again we have a subparsers section which means we want another command\n            // underneath \"hello\" which is not a final subcommand\n            \"subparsers\": {\n                \"world\": {\n                    \"meta\": {\n                        \"parser_description\": \"world description\",\n                        \"parser_help\": \"world help\",\n                        \"subparser_title\": \"subcommands\",\n                        \"subparser_dest\": \"subsubcommand\",\n                        \"subparser_description\": \"valid subcommands\"\n                    },\n                    // subcommands are for defining the \"lowest level\" commands which actually\n                    // have arguments\n                    // in this case, we are defining the \"test\" in the command string \"hello world test\"\n                    \"subcommands\": {\n                        \"test\": {\n                            \"meta\": {\n                                \"description\": \"test help\",\n                                \"help\": \"test description\",\n                                \"function\": {\n                                    \"name\": \"test\",\n                                    \"args\": {}\n                                },\n                                \"requires\": {\n                                    \"foo1\": {\n                                        \"AND\": [\"bar1\", \"bar2\"],\n                                        \"message\": \"the 'foo1' argument requires '--bar1' and '--bar2'\"\n                                    },\n                                    \"foo2\": {\n                                        \"OR\": [\"bar1\", \"bar2\"],\n                                        \"message\": \"the 'foo2' argument requires either '--bar1' or '--bar2'\"\n                                    },\n                                    \"foo3\": {\n                                        \"NAND\": [\"bar1\", \"bar2\"],\n                                        \"message\": \"the 'foo3' argument requires either '--bar1' or '--bar2' or neither, but not both\"\n                                    },\n                                    \"foo4\": {\n                                        \"NOR\": [\"bar1\", \"bar2\"],\n                                        \"message\": \"the 'foo4' argument requires '--bar1' and '--bar2' to be false\"\n                                    },\n                                    \"foo5\": {\n                                        \"NOT\": [\"bar1\"],\n                                        \"message\": \"the 'foo5' argument requires '--bar1' to be false\"\n                                    },\n                                    \"foo6\": {\n                                        \"XOR\": [\"bar1\", \"bar2\"],\n                                        \"message\": \"the 'foo6' argument requires '--bar1' or '--bar2', but not both\"\n                                    }\n                                }\n                            },\n                            \"args\": {\n                                \"foo1\": {\n                                    \"short\": \"-f\",\n                                    \"long\": \"--foo1\",\n                                    \"choices\": null,\n                                    \"default\": null,\n                                    \"help\": null,\n                                    \"action\": \"store_true\",\n                                    \"nargs\": null\n                                },\n                                \"foo2\": {\n                                    \"long\": \"--foo2\",\n                                    \"choices\": null,\n                                    \"default\": null,\n                                    \"help\": null,\n                                    \"action\": \"store_true\",\n                                    \"nargs\": null\n                                },\n                                \"foo3\": {\n                                    \"long\": \"--foo3\",\n                                    \"choices\": null,\n                                    \"default\": null,\n                                    \"help\": null,\n                                    \"action\": \"store_true\",\n                                    \"nargs\": null\n                                },\n                                \"foo4\": {\n                                    \"long\": \"--foo4\",\n                                    \"choices\": null,\n                                    \"default\": null,\n                                    \"help\": null,\n                                    \"action\": \"store_true\",\n                                    \"nargs\": null\n                                },\n                                \"foo5\": {\n                                    \"long\": \"--foo5\",\n                                    \"choices\": null,\n                                    \"default\": null,\n                                    \"help\": null,\n                                    \"action\": \"store_true\",\n                                    \"nargs\": null\n                                },\n                                \"foo6\": {\n                                    \"long\": \"--foo6\",\n                                    \"choices\": null,\n                                    \"default\": null,\n                                    \"help\": null,\n                                    \"action\": \"store_true\",\n                                    \"nargs\": null\n                                },\n                                \"bar1\": {\n                                    \"long\": \"--bar1\",\n                                    \"choices\": null,\n                                    \"default\": null,\n                                    \"help\": null,\n                                    \"action\": \"store_true\",\n                                    \"nargs\": null\n                                },\n                                \"bar2\": {\n                                    \"long\": \"--bar2\",\n                                    \"choices\": null,\n                                    \"default\": null,\n                                    \"help\": null,\n                                    \"action\": \"store_true\",\n                                    \"nargs\": null\n                                }\n                            }\n                        }\n                    }\n                } \n            }\n        }\n    }\n}\n```\n\n## Definition File Structure\n\n`APHelper` allows for nested definitions within the definition file in order to create a multi-layered command line interface.  The two main object types that can be defined are `subparsers` and `subcommands`.  `Subparsers` are any CLI level that does not handle arguments directly and instead is a parent to other `subparsers` or `subcommands`. `subcommands` are different in that they are the final children of `subparsers` and cannot contain any other `subcommands`, instead they hold the argument definitions for the command.\n\nWhen writing a definition file, you must always start with this template:\n```\n{\n    // the meta section defines information about the parser/subparser\n    // for this first meta section you don't need the parser_help key/field\n    \"meta\": {\n        \"parser_description\": \"\",\n        \"subparser_title\": \"\",\n        \"subparser_dest\": \"\",\n        \"subparser_description\": \"\"\n    }\n}\n```\n\nOn the same level as the \"meta\" command you can then add a `subaparsers` or `subcommands` section depending on your needs. \n\nThe structure of a `subparsers` section is shown below.\n``` jsonc\n \"subparsers\": {\n    // in this case \"hello\" is the name of the first command\n    \"hello\": {\n        \"meta\": {\n            // these five fields are required for any subparser\n            // However, you can always set them to an empty string\n            \"parser_description\": \"hello description\",\n            \"parser_help\": \"hello help\",\n            \"subparser_title\": \"subcommands\",\n            \"subparser_dest\": \"subcommand\",\n            \"subparser_description\": \"valid subcommands\"\n        },\n        // if you want to have sub-subparsers, you can define another subparsers section\n        // if not, then just don't add it\n        \"subparsers\": {},\n        // if you want to have subcommands, you can define a subcommandssection\n        // if not, then just don't add it\n        \"subcommands\": {}\n    },\n    // if you want more than one command on this level then you can just add another key\n    // along with its \"meta\" section and any desired \"subparsers\" and \"subcommands\"\n    \"hello2\": {\n        // ...\n    },\n    // ...\n }\n```\n\nThe structure of a `subcommands` section is shown below.\n```jsonc\n \"subcommands\": {\n    // in this case \"hello\" is the name of the first command\n    \"world\": {\n        \"meta\": {\n            // command description (required)\n            \"description\": \"\",\n            // command help (required)\n            \"help\": \"\",\n            \"function\": { // (required)\n                // name of the function inside the class that calls the ArgparseHelper object\n                // that you want to call when the command is executed\n                \"name\": \"\"\n            },\n            \"requires\": { // (required, but you can just leave it blank if you want)\n                // here we define any arguments that require logic to make sure that combinations of arguments are valid\n                // set the argument that you want to trigger the logical check as the key\n                \"foo1\": { \n                    // then define any logical checks you want to be made\n                    // The valid operators are:\n                    //   - AND\n                    //   - NAND\n                    //   - NOR\n                    //   - NOT\n                    //   - OR\n                    //   - XOR\n                    \"AND\": [\"bar1\", \"bar2\"],\n                    // the message to print out if the logical check fails\n                    \"message\": \"the 'foo1' argument requires '--bar1' and '--bar2'\"\n                }\n            }\n        },\n        \"args\": {\n            \"foo1\": {\n                // you need either a \"short\" key or a \"long\" key or both\n                \"short\": \"-f\", // this is the single-letter flag that can be used for this argument\n                \"long\": \"--foo1\", // this is the long flag that can be used for this argument\n                // you can define any argparse keyword for the `add_argument` functio as a key and for an agrument\n                // and it will be added to your argument that is created in your applicatoin\n                // for example, in this case we set the 'action' keyword to 'store_true' for a boolean flag\n                \"action\": \"store_true\"\n            },\n            \"bar1\": {\n                \"long\": \"--bar1\",\n                \"action\": \"store_true\"\n            },\n            \"bar2\": {\n                \"long\": \"--bar2\",\n                \"action\": \"store_true\"\n            }\n        }\n    },\n    // if you want more than one command on this level then you can just add another key\n    // along with its \"meta\" and \"args\" sections\n    \"world2\": {\n        // ...\n    },\n    // ...\n }\n```\n\nYou can then nest these `subcommands` and `subparsers` sections together to create whatever structure you need\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jfcarter2358/aphelper",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aphelper",
    "package_url": "https://pypi.org/project/aphelper/",
    "platform": "",
    "project_url": "https://pypi.org/project/aphelper/",
    "project_urls": {
      "Homepage": "https://github.com/jfcarter2358/aphelper"
    },
    "release_url": "https://pypi.org/project/aphelper/0.0.6/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A Python package to enable declarative definition of argparse CLIs",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8751986,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0cfd8a6d94cd34cc8160c8ad978ee32de7768e56c2e65c79eea5d0983d18811",
          "md5": "3b50ee22383dd4378a990d06ab0221f4",
          "sha256": "588972f6a8a8c8c993847b94604b833f4dcd3f08fd6f4720c9fa15dc4451f602"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b50ee22383dd4378a990d06ab0221f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4441,
        "upload_time": "2020-11-11T14:23:27",
        "upload_time_iso_8601": "2020-11-11T14:23:27.207340Z",
        "url": "https://files.pythonhosted.org/packages/d0/cf/d8a6d94cd34cc8160c8ad978ee32de7768e56c2e65c79eea5d0983d18811/aphelper-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a2df793885deb4ed1c8f484afca0bd6d1e2e5d5fd7801a2990beb0d45f416c3",
          "md5": "9576c531894a04e4d9d417da7d4592a9",
          "sha256": "d6e848f3dcd9cd6b6d4ac082447cbc337cef551edcdaf17eb90f757ffd0dd456"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9576c531894a04e4d9d417da7d4592a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5202,
        "upload_time": "2020-11-11T14:23:28",
        "upload_time_iso_8601": "2020-11-11T14:23:28.532645Z",
        "url": "https://files.pythonhosted.org/packages/5a/2d/f793885deb4ed1c8f484afca0bd6d1e2e5d5fd7801a2990beb0d45f416c3/aphelper-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87c12d47f18a4983d6f0dde0cbe6190578f355663fdd230881054d94d9011c37",
          "md5": "3c255a0051045c24982026c76165493e",
          "sha256": "f518d06137d69b004bbcd0f539ce43ba4eb2f3e1bae1ad2621d1a676230fce91"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c255a0051045c24982026c76165493e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4442,
        "upload_time": "2020-11-11T21:33:09",
        "upload_time_iso_8601": "2020-11-11T21:33:09.135634Z",
        "url": "https://files.pythonhosted.org/packages/87/c1/2d47f18a4983d6f0dde0cbe6190578f355663fdd230881054d94d9011c37/aphelper-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9b8475a849467d7d0d19c4b1bab777c7928d5449c41c255334f0564bf004716",
          "md5": "75a5b54c4c1ba4ad6a1b73bff80a08e1",
          "sha256": "93e82b9736c82fd8250c343b4deeb01543976781d6ddc64742d736f70e202163"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "75a5b54c4c1ba4ad6a1b73bff80a08e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5209,
        "upload_time": "2020-11-11T21:33:10",
        "upload_time_iso_8601": "2020-11-11T21:33:10.632810Z",
        "url": "https://files.pythonhosted.org/packages/e9/b8/475a849467d7d0d19c4b1bab777c7928d5449c41c255334f0564bf004716/aphelper-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf4676b4c7895f74cd4163576b3bc1ed2612fa41a415e1cd2dab02863c05ed01",
          "md5": "abe27db7fa5f8124abaa528bce525a42",
          "sha256": "0599e54fc273a5c0e68ef11606c7fd6b791297de8f768ec318fb50dd3e1d1083"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "abe27db7fa5f8124abaa528bce525a42",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6867,
        "upload_time": "2020-11-11T21:59:34",
        "upload_time_iso_8601": "2020-11-11T21:59:34.785704Z",
        "url": "https://files.pythonhosted.org/packages/cf/46/76b4c7895f74cd4163576b3bc1ed2612fa41a415e1cd2dab02863c05ed01/aphelper-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75f22ed10d4b7059de40313a0cbe11694c26e3248122f9f9831debd50740a873",
          "md5": "277334cb76250867bcc6547211a9bf68",
          "sha256": "095dc6c3dffbe5c70fa48ad04829bca70440d0707198e95c07672305d174de1d"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "277334cb76250867bcc6547211a9bf68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7105,
        "upload_time": "2020-11-11T21:59:35",
        "upload_time_iso_8601": "2020-11-11T21:59:35.981613Z",
        "url": "https://files.pythonhosted.org/packages/75/f2/2ed10d4b7059de40313a0cbe11694c26e3248122f9f9831debd50740a873/aphelper-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44d456821ea6ac040dd89ccc634c687236f6d290bb70818713a5151ee1541f77",
          "md5": "21339f24aa7df6b6802245396e7d8d5d",
          "sha256": "a488226007f0df3d1f4401befef1b06bb7e6c7bad15457ac75055587eb8fb9f3"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21339f24aa7df6b6802245396e7d8d5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6864,
        "upload_time": "2020-11-26T04:18:27",
        "upload_time_iso_8601": "2020-11-26T04:18:27.310661Z",
        "url": "https://files.pythonhosted.org/packages/44/d4/56821ea6ac040dd89ccc634c687236f6d290bb70818713a5151ee1541f77/aphelper-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e906aa303b3294aee9c1b0dc26d4e9f95557af346a87d7de58f49203a574d38",
          "md5": "d0d4a69f30124e207b7fdb531ba3b06a",
          "sha256": "9dd414dc3bb8380671125e9e574c91d5ca836b073220361d2b036268ef68c66c"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d0d4a69f30124e207b7fdb531ba3b06a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7113,
        "upload_time": "2020-11-26T04:18:28",
        "upload_time_iso_8601": "2020-11-26T04:18:28.256345Z",
        "url": "https://files.pythonhosted.org/packages/7e/90/6aa303b3294aee9c1b0dc26d4e9f95557af346a87d7de58f49203a574d38/aphelper-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e9e35ef53895632f25a52e9d0e10671bee42001ed328eb5c7070468f7c68a38",
          "md5": "81e2401baea061f289dd47859fc0f6bf",
          "sha256": "e7c8bfa1b88638af8276f905a7e643c6d6584c0dc927e298d36b9d27bd73a2b5"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81e2401baea061f289dd47859fc0f6bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6868,
        "upload_time": "2020-11-26T04:20:30",
        "upload_time_iso_8601": "2020-11-26T04:20:30.454115Z",
        "url": "https://files.pythonhosted.org/packages/2e/9e/35ef53895632f25a52e9d0e10671bee42001ed328eb5c7070468f7c68a38/aphelper-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "033f3315a730c73dddc2c15c355048e58761990c42092d5cb28f54e2667496c9",
          "md5": "0445a41166cebaf7b99e52a1e2a35c9a",
          "sha256": "8423047f8ec450c0b75cd8e42f127a27149939493a366c4dfac23fef8c4f246c"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0445a41166cebaf7b99e52a1e2a35c9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7112,
        "upload_time": "2020-11-26T04:20:31",
        "upload_time_iso_8601": "2020-11-26T04:20:31.324609Z",
        "url": "https://files.pythonhosted.org/packages/03/3f/3315a730c73dddc2c15c355048e58761990c42092d5cb28f54e2667496c9/aphelper-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b92c1c4f7214b191ebf2a93c0990c81a0ec91f979ac32a18a5383f8b5cc5a2b1",
          "md5": "eb85a4059014a7f5d9cb6605e1b3af27",
          "sha256": "d29137112c28b4503b8693f405866ab5e4ca94a2e5aaecfd2e2e2023af3183ce"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb85a4059014a7f5d9cb6605e1b3af27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6882,
        "upload_time": "2020-11-26T04:30:19",
        "upload_time_iso_8601": "2020-11-26T04:30:19.822100Z",
        "url": "https://files.pythonhosted.org/packages/b9/2c/1c4f7214b191ebf2a93c0990c81a0ec91f979ac32a18a5383f8b5cc5a2b1/aphelper-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "389cd850f3e69ba43bffe66b27acd9681932cba905a4980f1709b297c4c433b8",
          "md5": "eb7dddbee99f0bc114d85616be545d3c",
          "sha256": "aa4e3f35a8ac24e253a27acde6b67ccc7831974188565147c4d4e3249b186db8"
        },
        "downloads": -1,
        "filename": "aphelper-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "eb7dddbee99f0bc114d85616be545d3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7129,
        "upload_time": "2020-11-26T04:30:21",
        "upload_time_iso_8601": "2020-11-26T04:30:21.262209Z",
        "url": "https://files.pythonhosted.org/packages/38/9c/d850f3e69ba43bffe66b27acd9681932cba905a4980f1709b297c4c433b8/aphelper-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b92c1c4f7214b191ebf2a93c0990c81a0ec91f979ac32a18a5383f8b5cc5a2b1",
        "md5": "eb85a4059014a7f5d9cb6605e1b3af27",
        "sha256": "d29137112c28b4503b8693f405866ab5e4ca94a2e5aaecfd2e2e2023af3183ce"
      },
      "downloads": -1,
      "filename": "aphelper-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb85a4059014a7f5d9cb6605e1b3af27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6882,
      "upload_time": "2020-11-26T04:30:19",
      "upload_time_iso_8601": "2020-11-26T04:30:19.822100Z",
      "url": "https://files.pythonhosted.org/packages/b9/2c/1c4f7214b191ebf2a93c0990c81a0ec91f979ac32a18a5383f8b5cc5a2b1/aphelper-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "389cd850f3e69ba43bffe66b27acd9681932cba905a4980f1709b297c4c433b8",
        "md5": "eb7dddbee99f0bc114d85616be545d3c",
        "sha256": "aa4e3f35a8ac24e253a27acde6b67ccc7831974188565147c4d4e3249b186db8"
      },
      "downloads": -1,
      "filename": "aphelper-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "eb7dddbee99f0bc114d85616be545d3c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7129,
      "upload_time": "2020-11-26T04:30:21",
      "upload_time_iso_8601": "2020-11-26T04:30:21.262209Z",
      "url": "https://files.pythonhosted.org/packages/38/9c/d850f3e69ba43bffe66b27acd9681932cba905a4980f1709b297c4c433b8/aphelper-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}