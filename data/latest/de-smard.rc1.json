{
  "info": {
    "author": "BundesAPI",
    "author_email": "kontakt@bund.dev",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# smard\nBundesnetzagentur Strommarktdaten\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 0.0.1\n- Package version: 0.1.0\n- Build package: org.openapitools.codegen.languages.PythonClientCodegen\n\n## Requirements.\n\nPython >= 3.6\n\n## Installation & Usage\n### pip install\n\n```sh\npip install deutschland[smard]\n```\n\n### poetry install\n\n```sh\npoetry add deutschland -E smard\n```\n\n### Setuptools\n\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\n\n```sh\npython setup.py install --user\n```\n(or `sudo python setup.py install` to install the package for all users)\n\n## Usage\n\nImport the package:\n```python\nfrom deutschland import smard\n```\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then run the following:\n\n```python\n\nimport time\nfrom deutschland import smard\nfrom pprint import pprint\nfrom deutschland.smard.api import default_api\nfrom deutschland.smard.model.indices import Indices\nfrom deutschland.smard.model.time_series import TimeSeries\n# Defining the host is optional and defaults to https://www.smard.de/app/chart_data\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = smard.Configuration(\n    host = \"https://www.smard.de/app/chart_data\"\n)\n\n\n\n# Enter a context with an instance of the API client\nwith smard.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = default_api.DefaultApi(api_client)\n    filter = 1223 # int | Mögliche Filter:   * `1223` - Stromerzeugung: Braunkohle   * `1224` - Stromerzeugung: Kernenergie   * `1225` - Stromerzeugung: Wind Offshore   * `1226` - Stromerzeugung: Wasserkraft   * `1227` - Stromerzeugung: Sonstige Konventionelle   * `1228` - Stromerzeugung: Sonstige Erneuerbare   * `4066` - Stromerzeugung: Biomasse   * `4067` - Stromerzeugung: Wind Onshore   * `4068` - Stromerzeugung: Photovoltaik   * `4069` - Stromerzeugung: Steinkohle   * `4070` - Stromerzeugung: Pumpspeicher   * `4071` - Stromerzeugung: Erdgas   * `410` - Stromverbrauch: Gesamt (Netzlast)   * `4359` - Stromverbrauch: Residuallast   * `4387` - Stromverbrauch: Pumpspeicher \nfilter_copy = 1223 # int | Muss dem Wert von \\\"filter\\\" entsprechen. (Kaputtes API-Design) \nregion = \"DE\" # str | Land / Regelzone / Marktgebiet:   * `DE` - Land: Deutschland   * `AT` - Land: Österreich   * `LU` - Land: Luxemburg   * `DE-LU` - Marktgebiet: DE/LU (ab 01.10.2018)   * `DE-AT-LU` - Marktgebiet: DE/AT/LU (bis 30.09.2018)   * `50Hertz` - Regelzone (DE): 50Hertz   * `Amprion`- Regelzone (DE): Amprion   * `TenneT` - Regelzone (DE): TenneT   * `TransnetBW` - Regelzone (DE): TransnetBW   * `APG` - Regelzone (AT): APG   * `Creos` - Regelzone (LU): Creos  (default to \"DE\")\nregion_copy = \"DE\" # str | Muss dem Wert von \\\"region\\\" entsprechen. (Kaputtes API-Design) \nresolution = \"hour\" # str | Auflösung der Daten:   * `hour` - Stündlich   * `quarterhour` - Viertelstündlich   * `day` - Täglich   * `week` - Wöchentlich   * `month` - Monatlich   * `year` - Jährlich  (default to \"hour\")\ntimestamp = 1 # int | \n\n    try:\n        # Zeitreihendaten\n        api_response = api_instance.filter_region_filter_copy_region_copy_resolution_timestamp_json_get(filter, filter_copy, region, region_copy, resolution, timestamp)\n        pprint(api_response)\n    except smard.ApiException as e:\n        print(\"Exception when calling DefaultApi->filter_region_filter_copy_region_copy_resolution_timestamp_json_get: %s\\n\" % e)\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://www.smard.de/app/chart_data*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*DefaultApi* | [**filter_region_filter_copy_region_copy_resolution_timestamp_json_get**](docs/DefaultApi.md#filter_region_filter_copy_region_copy_resolution_timestamp_json_get) | **GET** /{filter}/{region}/{filterCopy}_{regionCopy}_{resolution}_{timestamp}.json | Zeitreihendaten\n*DefaultApi* | [**filter_region_index_resolution_json_get**](docs/DefaultApi.md#filter_region_index_resolution_json_get) | **GET** /{filter}/{region}/index_{resolution}.json | Indizes\n\n\n## Documentation For Models\n\n - [Indices](docs/Indices.md)\n - [TimeSeries](docs/TimeSeries.md)\n - [TimeSeriesMetaData](docs/TimeSeriesMetaData.md)\n\n\n## Documentation For Authorization\n\n All endpoints do not require authorization.\n\n## Author\n\nkontakt@bund.dev\n\n\n## Notes for Large OpenAPI documents\nIf the OpenAPI document is large, imports in smard.apis and smard.models may fail with a\nRecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:\n\nSolution 1:\nUse specific imports for apis and models like:\n- `from deutschland.smard.api.default_api import DefaultApi`\n- `from deutschland.smard.model.pet import Pet`\n\nSolution 2:\nBefore importing the package, adjust the maximum recursion limit as shown below:\n```\nimport sys\nsys.setrecursionlimit(1500)\nfrom deutschland import smard\nfrom deutschland.smard.apis import *\nfrom deutschland.smard.models import *\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bundesAPI/smard-api",
    "keywords": "OpenAPI,OpenAPI-Generator,smard,App,API",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "de-smard",
    "package_url": "https://pypi.org/project/de-smard/",
    "platform": "",
    "project_url": "https://pypi.org/project/de-smard/",
    "project_urls": {
      "Bug Tracker": "https://github.com/bundesAPI/smard-api/issues",
      "Homepage": "https://github.com/bundesAPI/smard-api"
    },
    "release_url": "https://pypi.org/project/de-smard/0.1.0/",
    "requires_dist": [
      "python-dateutil",
      "urllib3 (>=1.25.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "Bundesnetzagentur Strommarktdaten",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12945171,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f93a91bd5908b4159c6d3e81ce5d4202dbc493a3fb08d47e8cde3248de275796",
          "md5": "45ad2321f548158b937501ae07620044",
          "sha256": "7a022e9a3431c5273443cc9e8ffae2a53b85503120033d067562c432a181261a"
        },
        "downloads": -1,
        "filename": "de_smard-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45ad2321f548158b937501ae07620044",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49266,
        "upload_time": "2022-02-19T16:22:49",
        "upload_time_iso_8601": "2022-02-19T16:22:49.057675Z",
        "url": "https://files.pythonhosted.org/packages/f9/3a/91bd5908b4159c6d3e81ce5d4202dbc493a3fb08d47e8cde3248de275796/de_smard-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08a5f518143ddc6a2ede86918a0b038d9c238b617e62e2cb156cec53282164ed",
          "md5": "35ad3cf0bb95c0d6e0cfe079c97ad8a4",
          "sha256": "c76ef5b8cbfbf341e0bc1eaea46742e9ade623c4d89f442c14a79d0ceefcdfd8"
        },
        "downloads": -1,
        "filename": "de-smard-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35ad3cf0bb95c0d6e0cfe079c97ad8a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41642,
        "upload_time": "2022-02-19T16:22:50",
        "upload_time_iso_8601": "2022-02-19T16:22:50.832975Z",
        "url": "https://files.pythonhosted.org/packages/08/a5/f518143ddc6a2ede86918a0b038d9c238b617e62e2cb156cec53282164ed/de-smard-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f93a91bd5908b4159c6d3e81ce5d4202dbc493a3fb08d47e8cde3248de275796",
        "md5": "45ad2321f548158b937501ae07620044",
        "sha256": "7a022e9a3431c5273443cc9e8ffae2a53b85503120033d067562c432a181261a"
      },
      "downloads": -1,
      "filename": "de_smard-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "45ad2321f548158b937501ae07620044",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 49266,
      "upload_time": "2022-02-19T16:22:49",
      "upload_time_iso_8601": "2022-02-19T16:22:49.057675Z",
      "url": "https://files.pythonhosted.org/packages/f9/3a/91bd5908b4159c6d3e81ce5d4202dbc493a3fb08d47e8cde3248de275796/de_smard-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08a5f518143ddc6a2ede86918a0b038d9c238b617e62e2cb156cec53282164ed",
        "md5": "35ad3cf0bb95c0d6e0cfe079c97ad8a4",
        "sha256": "c76ef5b8cbfbf341e0bc1eaea46742e9ade623c4d89f442c14a79d0ceefcdfd8"
      },
      "downloads": -1,
      "filename": "de-smard-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "35ad3cf0bb95c0d6e0cfe079c97ad8a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 41642,
      "upload_time": "2022-02-19T16:22:50",
      "upload_time_iso_8601": "2022-02-19T16:22:50.832975Z",
      "url": "https://files.pythonhosted.org/packages/08/a5/f518143ddc6a2ede86918a0b038d9c238b617e62e2cb156cec53282164ed/de-smard-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}