{
  "info": {
    "author": "Mickaël Desfrênes",
    "author_email": "mickael.desfrenes@unicaen.fr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "---\ndescription: |\n    API documentation for modules: jama_client.\n\nlang: en\n\nclassoption: oneside\ngeometry: margin=1in\npapersize: a4\n\nlinkcolor: blue\nlinks-as-notes: true\n...\n\n\n    \n# Module `jama_client` {#jama_client}\n\n# Jama client library\n\n## Installation\n\nUse pip to install:\n\n    pip install jama-client-CERTIC\n\n## Quick start\n\n    from jama_client import Client\n    client = Client(\"https://acme.tld/rpc/\", \"secretapikeyhere\")\n    file_id = client.upload(\"/path/to/some/file.jpg\")\n    collection_id = client.add_collection(\"title of the collection\")\n    client.add_file_to_collection(file_id, collection_id)\n\n\n\n\n\n    \n## Classes\n\n\n    \n### Class `Client` {#jama_client.Client}\n\n\n\n\n>     class Client(\n>         endpoint: str,\n>         api_key: str\n>     )\n\n\n\n\n\n\n\n\n\n\n    \n#### Methods\n\n\n    \n##### Method `add_collection` {#jama_client.Client.add_collection}\n\n\n\n\n>     def add_collection(\n>         self,\n>         title: str,\n>         parent_id: int = None\n>     ) ‑> Union[Dict, NoneType]\n\n\nCreate a new collection based on 'title'. If 'parent_id' is set,\nwill create new collection as child of parent. Otherwise, the new\ncollection is created at root.\n\nReturns either the serialized new collection of null if parent does\nnot exist.\n\nExample output:\n\n```\n{\n    \"id\": 3,\n    \"title\": \"paintings\",\n    \"resources_count\": 0,\n    \"children_count\": 0,\n    \"descendants_count\": 0,\n    \"descendants_resources_count\": 0,\n    \"parent\": null,\n    \"children\": null,\n    \"metas\": [],\n    \"public_access\": false,\n    \"tags\": [],\n}\n```\n\n    \n##### Method `add_collection_from_path` {#jama_client.Client.add_collection_from_path}\n\n\n\n\n>     def add_collection_from_path(\n>         self,\n>         path: str\n>     ) ‑> List[Dict]\n\n\nWill take take a path such as '/photos/arts/paintings/'\nand build the corresponding hierarchy of collections. The hierarchy\nis returned as a list of serialized collections.\n\nBeware: Because the collections are serialized before their children,\nall the children/descendants counts are set to 0.\n\nExample output:\n\n```\n[\n    {\n        \"id\": 1,\n        \"title\": \"photos\",\n        \"resources_count\": 0,\n        \"children_count\": 0,\n        \"descendants_count\": 0,\n        \"descendants_resources_count\": 0,\n        \"parent\": null,\n        \"children\": null,\n        \"metas\": [],\n        \"public_access\": false,\n        \"tags\": [],\n    },\n    {\n        \"id\": 2,\n        \"title\": \"arts\",\n        \"resources_count\": 0,\n        \"children_count\": 0,\n        \"descendants_count\": 0,\n        \"descendants_resources_count\": 0,\n        \"parent\": 1,\n        \"children\": null,\n        \"metas\": [],\n        \"public_access\": false,\n        \"tags\": [],\n    },\n    {\n        \"id\": 3,\n        \"title\": \"paintings\",\n        \"resources_count\": 0,\n        \"children_count\": 0,\n        \"descendants_count\": 0,\n        \"descendants_resources_count\": 0,\n        \"parent\": 2,\n        \"children\": null,\n        \"metas\": [],\n        \"public_access\": false,\n        \"tags\": [],\n    },\n]\n```\n\n    \n##### Method `add_file_to_collection` {#jama_client.Client.add_file_to_collection}\n\n\n\n\n>     def add_file_to_collection(\n>         self,\n>         file_id: int,\n>         collection_id: int\n>     ) ‑> bool\n\n\nDEPRECATED. Do not use. Will be removed later. Use add_resource_to_collection instead.\n\n    \n##### Method `add_meta_to_collection` {#jama_client.Client.add_meta_to_collection}\n\n\n\n\n>     def add_meta_to_collection(\n>         self,\n>         collection_id: int,\n>         meta_id: int,\n>         meta_value: str\n>     ) ‑> Union[int, bool]\n\n\nAdd a meta value to a collection given their ids.\n\n    \n##### Method `add_meta_to_file` {#jama_client.Client.add_meta_to_file}\n\n\n\n\n>     def add_meta_to_file(\n>         self,\n>         file_id: int,\n>         meta_id: int,\n>         meta_value: str\n>     ) ‑> Union[int, bool]\n\n\nDEPRECATED. Do not use. Will be removed later. Use add_meta_to_resource instead.\n\n    \n##### Method `add_meta_to_resource` {#jama_client.Client.add_meta_to_resource}\n\n\n\n\n>     def add_meta_to_resource(\n>         self,\n>         resource_id: int,\n>         meta_id: int,\n>         meta_value: str\n>     ) ‑> Union[int, bool]\n\n\nAdd a meta value to a resource given their ids.\n\n    \n##### Method `add_metadata` {#jama_client.Client.add_metadata}\n\n\n\n\n>     def add_metadata(\n>         self,\n>         title: str,\n>         metas_set_id: int,\n>         metadata_type_id: int = None\n>     ) ‑> Union[int, bool]\n\n\nAdd a new metadata to metadata set.\n\nSet optional 'metadata_type_id'\n\n    \n##### Method `add_metadataset` {#jama_client.Client.add_metadataset}\n\n\n\n\n>     def add_metadataset(\n>         self,\n>         title: str\n>     ) ‑> int\n\n\nCreate new metadata set from title.\n\n    \n##### Method `add_resource_to_collection` {#jama_client.Client.add_resource_to_collection}\n\n\n\n\n>     def add_resource_to_collection(\n>         self,\n>         resource_id: int,\n>         collection_id: int\n>     ) ‑> bool\n\n\nAdd a resource to a collection given ids.\n\n    \n##### Method `add_tag_to_collection` {#jama_client.Client.add_tag_to_collection}\n\n\n\n\n>     def add_tag_to_collection(\n>         self,\n>         tag_uid: str,\n>         collection_id: int\n>     ) ‑> bool\n\n\nAdd tag to a collection based on tag uid and collection id.\n\n    \n##### Method `add_tag_to_resource` {#jama_client.Client.add_tag_to_resource}\n\n\n\n\n>     def add_tag_to_resource(\n>         self,\n>         tag_uid: str,\n>         resource_id: int\n>     ) ‑> bool\n\n\nAdd tag to a resource based on tag uid and resource id.\n\n    \n##### Method `advanced_search` {#jama_client.Client.advanced_search}\n\n\n\n\n>     def advanced_search(\n>         self,\n>         search_terms: List[Dict]\n>     ) ‑> Dict[str, List]\n\n\nPerforms a complex search using terms such as 'contains', 'is', 'does_not_contain'.\n\nMultiple conditions can be added.\n\nExample input:\n\n```\n[\n    {\"property\": \"title\", \"term\": \"contains\", \"value\": \"cherbourg\"},\n    {\"meta\": 123, \"term\": \"is\", \"value\": \"35mm\"},\n    {\"tags\": [\"PAINTINGS\", \"PHOTOS\"]}\n]\n```\n\nExample output:\n\n```\n{\n    \"collections\": [],\n    \"resources\": [\n        {\n        \"id\": 1,\n        \"title\": \"Cherbourg by night\",\n        \"original_name\": \"cherbourg_by_night.jpg\",\n        \"type\": \"image/jpeg\",\n        \"hash\": \"0dd93a59aeaccfb6d35b1ff5a49bde1196aa90dfef02892f9aa2ef4087d8738e\",\n        \"metas\": null,\n        \"urls\": [],\n        \"tags\": [],\n        }\n    ]\n}\n```\n\n    \n##### Method `advanced_search_terms` {#jama_client.Client.advanced_search_terms}\n\n\n\n\n>     def advanced_search_terms(\n>         self\n>     ) ‑> List[str]\n\n\nReturn terms conditions to be used in advanced search.\n\nExample output:\n\n```\n[\n    \"is\",\n    \"contains\",\n    \"does_not_contain\"\n]\n```\n\n    \n##### Method `ancestors_from_collection` {#jama_client.Client.ancestors_from_collection}\n\n\n\n\n>     def ancestors_from_collection(\n>         self,\n>         collection_id: int,\n>         include_self: bool = False\n>     ) ‑> List[dict]\n\n\nGet ancestors from collection id as a list of serialized collections.\n\nIf 'include_self' is true, will add the current collection at the begining.\n\nExample output:\n\n```\n[\n    {\n        \"id\": 1,\n        \"title\": \"photos\",\n        \"resources_count\": 0,\n        \"children_count\": 0,\n        \"descendants_count\": 0,\n        \"descendants_resources_count\": 0,\n        \"parent\": null,\n        \"children\": null,\n        \"metas\": [],\n        \"public_access\": false,\n        \"tags\": [],\n    },\n    {\n        \"id\": 2,\n        \"title\": \"arts\",\n        \"resources_count\": 0,\n        \"children_count\": 0,\n        \"descendants_count\": 0,\n        \"descendants_resources_count\": 0,\n        \"parent\": 1,\n        \"children\": null,\n        \"metas\": [],\n        \"public_access\": false,\n        \"tags\": [],\n    },\n    {\n        \"id\": 3,\n        \"title\": \"paintings\",\n        \"resources_count\": 0,\n        \"children_count\": 0,\n        \"descendants_count\": 0,\n        \"descendants_resources_count\": 0,\n        \"parent\": 2,\n        \"children\": null,\n        \"metas\": [],\n        \"public_access\": false,\n        \"tags\": [],\n    },\n]\n```\n\n    \n##### Method `ancestors_from_resource` {#jama_client.Client.ancestors_from_resource}\n\n\n\n\n>     def ancestors_from_resource(\n>         self,\n>         resource_id: int\n>     ) ‑> List[List[dict]]\n\n\nGet ancestors from resource id as a list of serialized collections.\n\nExample output:\n\n```\n[\n    {\n        \"id\": 1,\n        \"title\": \"photos\",\n        \"resources_count\": 0,\n        \"children_count\": 0,\n        \"descendants_count\": 0,\n        \"descendants_resources_count\": 0,\n        \"parent\": null,\n        \"children\": null,\n        \"metas\": [],\n        \"public_access\": false,\n        \"tags\": [],\n    },\n    {\n        \"id\": 2,\n        \"title\": \"arts\",\n        \"resources_count\": 0,\n        \"children_count\": 0,\n        \"descendants_count\": 0,\n        \"descendants_resources_count\": 0,\n        \"parent\": 1,\n        \"children\": null,\n        \"metas\": [],\n        \"public_access\": false,\n        \"tags\": [],\n    },\n    {\n        \"id\": 3,\n        \"title\": \"paintings\",\n        \"resources_count\": 0,\n        \"children_count\": 0,\n        \"descendants_count\": 0,\n        \"descendants_resources_count\": 0,\n        \"parent\": 2,\n        \"children\": null,\n        \"metas\": [],\n        \"public_access\": false,\n        \"tags\": [],\n    },\n]\n```\n\n    \n##### Method `change_collection_meta_value` {#jama_client.Client.change_collection_meta_value}\n\n\n\n\n>     def change_collection_meta_value(\n>         self,\n>         meta_value_id: int,\n>         meta_value: str\n>     ) ‑> bool\n\n\nChange the value of a meta for a collection.\n\n    \n##### Method `change_resource_meta_value` {#jama_client.Client.change_resource_meta_value}\n\n\n\n\n>     def change_resource_meta_value(\n>         self,\n>         meta_value_id: int,\n>         meta_value: str\n>     ) ‑> bool\n\n\nChange the value of a meta for a resource\n\n    \n##### Method `collection` {#jama_client.Client.collection}\n\n\n\n\n>     def collection(\n>         self,\n>         collection_id: int\n>     ) ‑> Union[Dict, NoneType]\n\n\nGet a particular collection given its id.\n\nExample output:\n\n```\n{\n    \"id\": 2,\n    \"title\": \"art works\",\n    \"resources_count\": 23,\n    \"children_count\": 5,\n    \"descendants_count\": 12,\n    \"descendants_resources_count\": 58,\n    \"parent\": 1,\n    \"children\": None,\n    \"metas\": [],\n    \"public_access\": False,\n    \"tags\": [],\n}\n```\n\n    \n##### Method `collections` {#jama_client.Client.collections}\n\n\n\n\n>     def collections(\n>         self,\n>         parent_id: int = None,\n>         recusive: bool = False\n>     ) ‑> List[Dict]\n\n\nReturn the user's collections under the parent collection\nspecified by 'parent_id'. If 'parent_id' is null, will return\ncollections available at root. If 'recursive' is true, will\nreturn all the descendants recusively in the 'children' key.\nIf recursive is false, 'children' is null.\n\nExample output:\n\n```\n[\n    {\n        \"id\": 2,\n        \"title\": \"art works\",\n        \"resources_count\": 23,\n        \"children_count\": 5,\n        \"descendants_count\": 12,\n        \"descendants_resources_count\": 58,\n        \"parent\": 1,\n        \"children\": None,\n        \"metas\": [],\n        \"public_access\": False,\n        \"tags\": [],\n    }\n]\n```\n\n    \n##### Method `delete_collection` {#jama_client.Client.delete_collection}\n\n\n\n\n>     def delete_collection(\n>         self,\n>         collection_id: int,\n>         recursive: bool = False\n>     ) ‑> bool\n\n\nDelete collection given its id.\n\nCollection MUST be empty of any content (no children collections and no resources),\nunless the 'recursive' parameter is set to True.\n\n    \n##### Method `delete_file` {#jama_client.Client.delete_file}\n\n\n\n\n>     def delete_file(\n>         self,\n>         file_id: int\n>     ) ‑> bool\n\n\nDEPRECATED. Do not use. Will be removed later. Use delete_resource instead.\n\n    \n##### Method `delete_resource` {#jama_client.Client.delete_resource}\n\n\n\n\n>     def delete_resource(\n>         self,\n>         resource_id: int\n>     ) ‑> bool\n\n\nPermanently delete a resource given its id.\n\n    \n##### Method `file` {#jama_client.Client.file}\n\n\n\n\n>     def file(\n>         self,\n>         file_id: int\n>     ) ‑> Union[Dict, NoneType]\n\n\nDEPRECATED. Do not use. Will be removed later. Use resource instead.\n\n    \n##### Method `files` {#jama_client.Client.files}\n\n\n\n\n>     def files(\n>         self,\n>         collection_id: int,\n>         include_metas: bool = True\n>     ) ‑> List[Dict]\n\n\nDEPRECATED. Do not use. Will be removed later. Use resources instead.\n\n    \n##### Method `metadata` {#jama_client.Client.metadata}\n\n\n\n\n>     def metadata(\n>         self,\n>         metadata_id: int\n>     ) ‑> Union[Dict, NoneType]\n\n\nGet one particular metadata given its id.\n\nExample output:\n\n```\n{\n    \"id\": 2,\n    \"title\": \"ICC_Profile:GrayTRC\",\n    \"set_id\": 1,\n    \"set_title\": \"exif metas\",\n    \"rank\": 1,\n    \"owner\": \"john\",\n}\n```\n\n    \n##### Method `metadatas` {#jama_client.Client.metadatas}\n\n\n\n\n>     def metadatas(\n>         self,\n>         metadata_set_id: int\n>     ) ‑> List[Dict]\n\n\nGet all metadatas given a metadata set id.\n\nMetadatas MAY be ordered with the rank attribute.\n\nExample output:\n\n```\n[\n    {\n        \"id\": 1,\n        \"title\": \"PNG:ProfileName\",\n        \"set_id\": 1,\n        \"set_title\": \"exif metas\",\n        \"rank\": 0,\n        \"owner\": \"john\",\n    },\n    {\n        \"id\": 2,\n        \"title\": \"ICC_Profile:GrayTRC\",\n        \"set_id\": 1,\n        \"set_title\": \"exif metas\",\n        \"rank\": 1,\n        \"owner\": \"john\",\n    }\n]\n```\n\n    \n##### Method `metadatasets` {#jama_client.Client.metadatasets}\n\n\n\n\n>     def metadatasets(\n>         self\n>     ) ‑> List[Dict]\n\n\nGet the list of all the user's metadata sets.\nFor each metadatas set, the number of metadatas is given in metas_count\n\nExample output:\n\n```\n[\n    {\"id\": 1, \"title\": \"exif metas\", \"owner\": \"john\", \"metas_count\": 23},\n    {\"id\": 2, \"title\": \"dublin core\", \"owner\": \"john\", \"metas_count\": 17}\n]\n```\n\n    \n##### Method `metadatatypes` {#jama_client.Client.metadatatypes}\n\n\n\n\n>     def metadatatypes(\n>         self\n>     ) ‑> List[dict]\n\n\nGet a list of available data types\n\nExample output:\n\n```\n[\n    {\"id\": 1, \"title\": \"text\"},\n    {\"id\": 2, \"title\": \"numeric\"},\n]\n```\n\n    \n##### Method `move_collection` {#jama_client.Client.move_collection}\n\n\n\n\n>     def move_collection(\n>         self,\n>         child_collection_id: int,\n>         parent_collection_id: int = None\n>     ) ‑> bool\n\n\nMove a collection from a parent to another.\n\nWill return false in the following cases:\n\n- 'child_collection_id' and 'parent_collection_id' are equal\n- parent collection does not exist\n- parent collection is a descendant of child collection\n\nIf 'parent_collection_id' is null, collection is moved to the root.\n\n    \n##### Method `ping` {#jama_client.Client.ping}\n\n\n\n\n>     def ping(\n>         self\n>     ) ‑> str\n\n\nThis is a test method to ensure the server-client communication works.\nWill return \"pong [name authenticated of user]\"\n\nExample output:\n\n```\npong john\n```\n\n    \n##### Method `publish_collection` {#jama_client.Client.publish_collection}\n\n\n\n\n>     def publish_collection(\n>         self,\n>         collection_id: int\n>     ) ‑> bool\n\n\nMark a collection as public\n\n    \n##### Method `remove_file_from_collection` {#jama_client.Client.remove_file_from_collection}\n\n\n\n\n>     def remove_file_from_collection(\n>         self,\n>         file_id: int,\n>         collection_id: int\n>     ) ‑> bool\n\n\nDEPRECATED. Do not use. Will be removed later. Use remove_resource_from_collection instead.\n\n    \n##### Method `remove_meta_from_collection` {#jama_client.Client.remove_meta_from_collection}\n\n\n\n\n>     def remove_meta_from_collection(\n>         self,\n>         collection_id: int,\n>         meta_value_id: int\n>     ) ‑> bool\n\n\nRemove a meta from a collection given their ids.\n\n    \n##### Method `remove_meta_from_file` {#jama_client.Client.remove_meta_from_file}\n\n\n\n\n>     def remove_meta_from_file(\n>         self,\n>         file_id: int,\n>         meta_value_id: int\n>     ) ‑> bool\n\n\nDEPRECATED. Do not use. Will be removed later. Use remove_meta_from_resource instead.\n\n    \n##### Method `remove_meta_from_resource` {#jama_client.Client.remove_meta_from_resource}\n\n\n\n\n>     def remove_meta_from_resource(\n>         self,\n>         resource_id: int,\n>         meta_value_id: int\n>     ) ‑> bool\n\n\nRemove a meta from a resource given their ids.\n\n    \n##### Method `remove_resource_from_collection` {#jama_client.Client.remove_resource_from_collection}\n\n\n\n\n>     def remove_resource_from_collection(\n>         self,\n>         resource_id: int,\n>         collection_id: int\n>     ) ‑> bool\n\n\nRemove a resource from a collection given ids.\n\n    \n##### Method `remove_tag` {#jama_client.Client.remove_tag}\n\n\n\n\n>     def remove_tag(\n>         self,\n>         uid: str\n>     ) ‑> bool\n\n\nRemove (delete) a tag based on its uid.\n\nBeware: This will remove ALL associations with the tag.\n\n    \n##### Method `remove_tag_from_collection` {#jama_client.Client.remove_tag_from_collection}\n\n\n\n\n>     def remove_tag_from_collection(\n>         self,\n>         tag_uid: str,\n>         collection_id: int\n>     ) ‑> bool\n\n\nRemove tag from a collection based on tag uid and collection id.\n\n    \n##### Method `remove_tag_from_resource` {#jama_client.Client.remove_tag_from_resource}\n\n\n\n\n>     def remove_tag_from_resource(\n>         self,\n>         tag_uid: str,\n>         resource_id: int\n>     ) ‑> bool\n\n\nRemove tag from a resource based on tag uid and resource id.\n\n    \n##### Method `rename_collection` {#jama_client.Client.rename_collection}\n\n\n\n\n>     def rename_collection(\n>         self,\n>         collection_id: int,\n>         title: str\n>     ) ‑> bool\n\n\nRename a collection (ie. change its title).\n\n    \n##### Method `rename_file` {#jama_client.Client.rename_file}\n\n\n\n\n>     def rename_file(\n>         self,\n>         file_id: int,\n>         title: str\n>     ) ‑> bool\n\n\nDEPRECATED. Do not use. Will be removed later. Use rename_resource instead.\n\n    \n##### Method `rename_meta` {#jama_client.Client.rename_meta}\n\n\n\n\n>     def rename_meta(\n>         self,\n>         meta_id: int,\n>         title: str\n>     ) ‑> bool\n\n\nRename a metadata (ie. change its title).\n\n    \n##### Method `rename_resource` {#jama_client.Client.rename_resource}\n\n\n\n\n>     def rename_resource(\n>         self,\n>         resource_id: int,\n>         title: str\n>     ) ‑> bool\n\n\nRename a resource (ie. change its title).\n\n    \n##### Method `resource` {#jama_client.Client.resource}\n\n\n\n\n>     def resource(\n>         self,\n>         resource_id: int\n>     ) ‑> Union[Dict, NoneType]\n\n\nGet a resource given its id.\n\nExample output (file resource):\n\n```\n{\n    \"id\": 1,\n    \"title\": \"letter\",\n    \"original_name\": \"letter.txt\",\n    \"type\": \"text/plain\",\n    \"hash\": \"0dd93a59aeaccfb6d35b1ff5a49bde1196aa90dfef02892f9aa2ef4087d8738e\",\n    \"metas\": null,\n    \"urls\": [],\n    \"tags\": [],\n}\n```\n\n    \n##### Method `resources` {#jama_client.Client.resources}\n\n\n\n\n>     def resources(\n>         self,\n>         collection_id: int,\n>         include_metas: bool = True\n>     ) ‑> List[Dict]\n\n\nGet all resources from a collection.\n\nIf 'include_metas' is true, will return the resources metadatas.\nIf 'include_metas' is false, 'metas' will be null.\n\nDifferent resources types may have different object keys. The bare\nminimum is 'id', 'title' and 'tags'.\n\nExample output (file resource):\n\n```\n[\n    {\n        \"id\": 1,\n        \"title\": \"letter\",\n        \"original_name\": \"letter.txt\",\n        \"type\": \"text/plain\",\n        \"hash\": \"0dd93a59aeaccfb6d35b1ff5a49bde1196aa90dfef02892f9aa2ef4087d8738e\",\n        \"metas\": null,\n        \"urls\": [],\n        \"tags\": [],\n    }\n]\n```\n\n    \n##### Method `set_tag` {#jama_client.Client.set_tag}\n\n\n\n\n>     def set_tag(\n>         self,\n>         uid: str,\n>         label: str = None,\n>         ark: str = None\n>     ) ‑> dict\n\n\nGet or create a Tag by uid (unique identifier). 'label' is an optional human-readable name.\n\nExample output:\n\n```\n{\n    \"id\": 1,\n    \"uid\": \"PAINTINGS\",\n    \"label\": \"peintures\",\n    \"ark\": null,\n}\n```\n\n    \n##### Method `simple_search` {#jama_client.Client.simple_search}\n\n\n\n\n>     def simple_search(\n>         self,\n>         query: str\n>     ) ‑> Dict[str, List]\n\n\nPerforms a simple search on resources and collections, based on their titles.\n\nExample output:\n\n```\n{\n    \"collections\": [\n        {\n        \"id\": 1,\n        \"title\": \"photos\",\n        \"resources_count\": 0,\n        \"children_count\": 0,\n        \"descendants_count\": 0,\n        \"descendants_resources_count\": 0,\n        \"parent\": null,\n        \"children\": null,\n        \"metas\": [],\n        \"public_access\": false,\n        \"tags\": [],\n        }\n    ],\n    \"resources\": [\n        {\n        \"id\": 1,\n        \"title\": \"letter\",\n        \"original_name\": \"letter.txt\",\n        \"type\": \"text/plain\",\n        \"hash\": \"0dd93a59aeaccfb6d35b1ff5a49bde1196aa90dfef02892f9aa2ef4087d8738e\",\n        \"metas\": null,\n        \"urls\": [],\n        \"tags\": [],\n        }\n    ]\n}\n```\n\n    \n##### Method `supported_file_types` {#jama_client.Client.supported_file_types}\n\n\n\n\n>     def supported_file_types(\n>         self\n>     ) ‑> List[Dict]\n\n\nGet a list of all supported file type, complete with their mimes.\n\nExample output:\n\n```\n[\n    {\n    \"mime\": \"image/jpeg\",\n    \"extensions\": [\".jpg\", \".jpeg\"],\n    \"iiif_support\": true,\n    }\n]\n```\n\n    \n##### Method `tags` {#jama_client.Client.tags}\n\n\n\n\n>     def tags(\n>         self\n>     ) ‑> List[dict]\n\n\nReturns all tags available to the current user.\n\nExample output:\n\n```\n[\n    {\n    \"id\": 1,\n    \"uid\": \"PAINTINGS\",\n    \"label\": \"peintures\",\n    \"ark\": null,\n    },\n    {\n    \"id\": 2,\n    \"uid\": \"PHOTOS\",\n    \"label\": \"photos\",\n    \"ark\": null,\n    }\n]\n```\n\n    \n##### Method `unpublish_collection` {#jama_client.Client.unpublish_collection}\n\n\n\n\n>     def unpublish_collection(\n>         self,\n>         collection_id: int\n>     ) ‑> bool\n\n\nMark a collection as private\n\n    \n##### Method `upload` {#jama_client.Client.upload}\n\n\n\n\n>     def upload(\n>         self,\n>         file_path: str,\n>         chunk_size: int = 1048576,\n>         file_name: str = None,\n>         origin_dir_name: str = None\n>     ) ‑> int\n\n\nThis methods uploads a file in multiple chunks, allowing\nresumable uploads.\n\n```file_path``` is the local path to the file.\n\n```chunk_size``` is the number of bytes uploaded with each chunk of the file.\n\n```file_name``` overides the name of the file, should you want a different name in Jama than\nthe local name.\n\n```origin_dir_name``` is a directory path (```dirA/dirB/dirC```). This path triggers\nthe creation of the corresponding collections and sub-collections in Jama.\n\n    \n##### Method `upload_infos` {#jama_client.Client.upload_infos}\n\n\n\n\n>     def upload_infos(\n>         self,\n>         sha256_hash: str\n>     ) ‑> Dict\n\n\nGet information for an upload based on the file hash.\n\nExample output:\n\n```\n{\n    \"status\": \"not available\",\n    \"id\": null,\n    \"available_chunks\":[]\n}\n```\n\n\"status\" being one of \"not available\", \"available\" or \"incomplete\"\n\n    \n### Class `IncompleteUpload` {#jama_client.IncompleteUpload}\n\n\n\n\n>     class IncompleteUpload(\n>         *args,\n>         **kwargs\n>     )\n\n\nUnspecified run-time error.\n\n\n    \n#### Ancestors (in MRO)\n\n* [builtins.RuntimeError](#builtins.RuntimeError)\n* [builtins.Exception](#builtins.Exception)\n* [builtins.BaseException](#builtins.BaseException)\n\n\n\n\n\n\n    \n### Class `ServiceError` {#jama_client.ServiceError}\n\n\n\n\n>     class ServiceError(\n>         message\n>     )\n\n\nUnspecified run-time error.\n\n\n    \n#### Ancestors (in MRO)\n\n* [builtins.RuntimeError](#builtins.RuntimeError)\n* [builtins.Exception](#builtins.Exception)\n* [builtins.BaseException](#builtins.BaseException)\n\n\n\n\n\n\n\n-----\nGenerated by *pdoc* 0.9.1 (<https://pdoc3.github.io>).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.unicaen.fr/certic/jama-python-client",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jama-client-CERTIC",
    "package_url": "https://pypi.org/project/jama-client-CERTIC/",
    "platform": null,
    "project_url": "https://pypi.org/project/jama-client-CERTIC/",
    "project_urls": {
      "Homepage": "https://git.unicaen.fr/certic/jama-python-client"
    },
    "release_url": "https://pypi.org/project/jama-client-CERTIC/0.0.28/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Jama client library",
    "version": "0.0.28",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16889127,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e01839d2b1b24628c23e80a6c856ee45258117fff2ae2de1cc648c0a07470de7",
          "md5": "58bd6bee82aef83199c8a5090e4c64d6",
          "sha256": "20b3726ae5f1b7c8f5f66ffa2234ea0db60293f84610015733557ba69837abfb"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "58bd6bee82aef83199c8a5090e4c64d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4916,
        "upload_time": "2021-02-03T14:40:12",
        "upload_time_iso_8601": "2021-02-03T14:40:12.376978Z",
        "url": "https://files.pythonhosted.org/packages/e0/18/39d2b1b24628c23e80a6c856ee45258117fff2ae2de1cc648c0a07470de7/jama-client-CERTIC-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbf8ae6a2f6824a9294c23e240a539afb1ba8c0fc93849fa699678f6483ef3be",
          "md5": "db173f1bf3cee4f64118493716636483",
          "sha256": "239b038dc2a11320b5122fda5b850ab909ec08e1680762fb079d7d4766ceb35e"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "db173f1bf3cee4f64118493716636483",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7957,
        "upload_time": "2021-03-01T14:33:52",
        "upload_time_iso_8601": "2021-03-01T14:33:52.884448Z",
        "url": "https://files.pythonhosted.org/packages/fb/f8/ae6a2f6824a9294c23e240a539afb1ba8c0fc93849fa699678f6483ef3be/jama-client-CERTIC-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60dbcc1c713396db4f7c521d2e4ceba4c6301cbd1d55cd9ba01e44bd36a96efe",
          "md5": "b5d18b971bc632d1ad08ba9ca95e5711",
          "sha256": "3bdcd8d8c99645394f38a8f33a165782959d0693f77ba75417b8b66580c519a4"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "b5d18b971bc632d1ad08ba9ca95e5711",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18260,
        "upload_time": "2021-03-08T09:57:54",
        "upload_time_iso_8601": "2021-03-08T09:57:54.986938Z",
        "url": "https://files.pythonhosted.org/packages/60/db/cc1c713396db4f7c521d2e4ceba4c6301cbd1d55cd9ba01e44bd36a96efe/jama-client-CERTIC-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac6b63e9775fc5c467a447f1dd628ed4f8e5290fbb0367cdf9f3b0436b3f8be8",
          "md5": "2ee321125589d4129b19d4922df670f9",
          "sha256": "c8e7acb071c7d9dfc9fd0e391791b733d2b1e65354b5c85d64d664242ff5bb73"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "2ee321125589d4129b19d4922df670f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18659,
        "upload_time": "2021-03-10T07:54:44",
        "upload_time_iso_8601": "2021-03-10T07:54:44.957213Z",
        "url": "https://files.pythonhosted.org/packages/ac/6b/63e9775fc5c467a447f1dd628ed4f8e5290fbb0367cdf9f3b0436b3f8be8/jama-client-CERTIC-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "013e79522400dbb149bbedd6964c9d5a8b57ab275068d5c9c5575d82787dbe3d",
          "md5": "99110f79666dc1bd63f8d06cbd6e8d8f",
          "sha256": "c277825fbf0e5677d923daf496f70722a51e49027f89da15760342483a1effcb"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "99110f79666dc1bd63f8d06cbd6e8d8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19651,
        "upload_time": "2021-05-13T23:25:04",
        "upload_time_iso_8601": "2021-05-13T23:25:04.161242Z",
        "url": "https://files.pythonhosted.org/packages/01/3e/79522400dbb149bbedd6964c9d5a8b57ab275068d5c9c5575d82787dbe3d/jama-client-CERTIC-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "228ecef7cbeee1287960840eaa4a69182725e38b3da07cec6fa684e22a9edd60",
          "md5": "afcd8021f04b8a33e883cd0b8f70b25b",
          "sha256": "692daa20745a4a83ded218580fe34980715cc2e35eb741451e0cfcce1adc4769"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "afcd8021f04b8a33e883cd0b8f70b25b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19758,
        "upload_time": "2021-06-29T18:46:21",
        "upload_time_iso_8601": "2021-06-29T18:46:21.264100Z",
        "url": "https://files.pythonhosted.org/packages/22/8e/cef7cbeee1287960840eaa4a69182725e38b3da07cec6fa684e22a9edd60/jama-client-CERTIC-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "790996ab36166f74007e60c75743bc0a09db19aa5b0748f5fb73d2a393f4af17",
          "md5": "227348a9c9677c57744fa504630c502a",
          "sha256": "41a46486c7780cedef2218109bfe79004d49f321c9cae2ee05a67ce525de1f87"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "227348a9c9677c57744fa504630c502a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20065,
        "upload_time": "2021-09-01T21:35:02",
        "upload_time_iso_8601": "2021-09-01T21:35:02.274985Z",
        "url": "https://files.pythonhosted.org/packages/79/09/96ab36166f74007e60c75743bc0a09db19aa5b0748f5fb73d2a393f4af17/jama-client-CERTIC-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4f87ba267a4f3532b97c9d5584efc9274530f2453e0509773f90fe6e588e89e",
          "md5": "2eab6d04c7b318e0f0247840dfb27df2",
          "sha256": "4ffb594e510963c79052bf5a064b488dd45eefdf3522da347018542ce5bbc77f"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "2eab6d04c7b318e0f0247840dfb27df2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20108,
        "upload_time": "2021-09-09T13:51:30",
        "upload_time_iso_8601": "2021-09-09T13:51:30.011606Z",
        "url": "https://files.pythonhosted.org/packages/c4/f8/7ba267a4f3532b97c9d5584efc9274530f2453e0509773f90fe6e588e89e/jama-client-CERTIC-0.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03cf4f82e1d183a87d9996b7b0faa93c2988433b7537d6bc3584f76ea7012b8c",
          "md5": "9489fbc627f71612127a19edf3bc26ec",
          "sha256": "1f943f2e11d30599d538cd9c3813be743eb64973166a60e81255d7eebd364621"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "9489fbc627f71612127a19edf3bc26ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20847,
        "upload_time": "2021-09-28T06:10:27",
        "upload_time_iso_8601": "2021-09-28T06:10:27.846789Z",
        "url": "https://files.pythonhosted.org/packages/03/cf/4f82e1d183a87d9996b7b0faa93c2988433b7537d6bc3584f76ea7012b8c/jama-client-CERTIC-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c07b198b887a76e02bfb4d5680a6e8a940577151ed9a951308fcdb852a0ec7a9",
          "md5": "b3810dc6135bdcc8bd4294ebdc3248ec",
          "sha256": "bdc3ff2671015e4ad7ebc2a2464072f8444fe6d0ccec7d55e08d8504d5848e1c"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.19.tar.gz",
        "has_sig": false,
        "md5_digest": "b3810dc6135bdcc8bd4294ebdc3248ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20891,
        "upload_time": "2021-10-07T12:50:30",
        "upload_time_iso_8601": "2021-10-07T12:50:30.293515Z",
        "url": "https://files.pythonhosted.org/packages/c0/7b/198b887a76e02bfb4d5680a6e8a940577151ed9a951308fcdb852a0ec7a9/jama-client-CERTIC-0.0.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dd15d3e55e7f109748de390b6d49dcac0b87157dfd6768f6080b83101623a18",
          "md5": "f29a5f15418d7cc478ae82bcb073061c",
          "sha256": "1773c9d04a4a11f6f19aea36c3fcf334b71712958c3fafe1dfd09b2e49fae604"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.20.tar.gz",
        "has_sig": false,
        "md5_digest": "f29a5f15418d7cc478ae82bcb073061c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20902,
        "upload_time": "2021-10-07T13:18:00",
        "upload_time_iso_8601": "2021-10-07T13:18:00.335620Z",
        "url": "https://files.pythonhosted.org/packages/3d/d1/5d3e55e7f109748de390b6d49dcac0b87157dfd6768f6080b83101623a18/jama-client-CERTIC-0.0.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98fcb0eb4d5f14fffbf312de71f62e0bd039ad2d911be9e3c300b87a6f7c1a71",
          "md5": "15f824f475d23617f4a4225a2d41b645",
          "sha256": "62177ab58c4120233fb998d103fccc7cc8f869104f0aa5285409f74262d1173c"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.21.tar.gz",
        "has_sig": false,
        "md5_digest": "15f824f475d23617f4a4225a2d41b645",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21128,
        "upload_time": "2021-12-01T08:37:49",
        "upload_time_iso_8601": "2021-12-01T08:37:49.323563Z",
        "url": "https://files.pythonhosted.org/packages/98/fc/b0eb4d5f14fffbf312de71f62e0bd039ad2d911be9e3c300b87a6f7c1a71/jama-client-CERTIC-0.0.21.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9b63bf948384b01661d9fabb8721f73ffd2c86fa07065b3b28121900a23da0f",
          "md5": "6425499e8efc073530536b9e61ad6d7a",
          "sha256": "07e2dbc6ae378b743effcf4e729d47effd3589ddd0eff8ae0767d497f535300d"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.22.tar.gz",
        "has_sig": false,
        "md5_digest": "6425499e8efc073530536b9e61ad6d7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21342,
        "upload_time": "2021-12-07T18:41:10",
        "upload_time_iso_8601": "2021-12-07T18:41:10.225179Z",
        "url": "https://files.pythonhosted.org/packages/b9/b6/3bf948384b01661d9fabb8721f73ffd2c86fa07065b3b28121900a23da0f/jama-client-CERTIC-0.0.22.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.23": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45580febe1aac2bc1d726c8e79037cc59fc463284b87edef65bfdcd84fad64c5",
          "md5": "4939ec09bcb35258c92eca140830aa06",
          "sha256": "1a540ba6b9ca2a9233429fb15e3c5685e51c3aee6be8664f918fbd24bbb41865"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.23.tar.gz",
        "has_sig": false,
        "md5_digest": "4939ec09bcb35258c92eca140830aa06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21412,
        "upload_time": "2021-12-10T14:01:17",
        "upload_time_iso_8601": "2021-12-10T14:01:17.701333Z",
        "url": "https://files.pythonhosted.org/packages/45/58/0febe1aac2bc1d726c8e79037cc59fc463284b87edef65bfdcd84fad64c5/jama-client-CERTIC-0.0.23.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.24": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a41a16d845eaf60cb611088e7a67f6144024a4b10e984ba0da4afe4162df1e9",
          "md5": "a6eaa26583001d170677ac535cf0c09c",
          "sha256": "5a39d93ffc5ad4ca9e42abe4e952affe49c7afa2414fbd289f10d26f6f6b95f5"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.24.tar.gz",
        "has_sig": false,
        "md5_digest": "a6eaa26583001d170677ac535cf0c09c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21614,
        "upload_time": "2022-01-31T14:23:56",
        "upload_time_iso_8601": "2022-01-31T14:23:56.953940Z",
        "url": "https://files.pythonhosted.org/packages/6a/41/a16d845eaf60cb611088e7a67f6144024a4b10e984ba0da4afe4162df1e9/jama-client-CERTIC-0.0.24.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d49f6e1292b5fc2fe59aad01616543ca8dc404e6c676a315d00787dfe3fd75de",
          "md5": "0d7f0ed1195d8c85da434b16de170274",
          "sha256": "ecf81e2850445932956d1bc01d104873c32c6410cc1fd58f9d7a906f5e27d182"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.25.tar.gz",
        "has_sig": false,
        "md5_digest": "0d7f0ed1195d8c85da434b16de170274",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22023,
        "upload_time": "2022-06-23T07:55:27",
        "upload_time_iso_8601": "2022-06-23T07:55:27.426678Z",
        "url": "https://files.pythonhosted.org/packages/d4/9f/6e1292b5fc2fe59aad01616543ca8dc404e6c676a315d00787dfe3fd75de/jama-client-CERTIC-0.0.25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.26": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "884f62e352acf7b9b4fde7781a2488683cf6af6b3429e0b4dad264cb2279fdb4",
          "md5": "e62aedc8474c6ef700a222ca8f9fc066",
          "sha256": "9711254a6211d09aafd7b9514d2c9c3aeadc7cce933ce76bf9819c026a603025"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.26.tar.gz",
        "has_sig": false,
        "md5_digest": "e62aedc8474c6ef700a222ca8f9fc066",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22182,
        "upload_time": "2022-06-23T09:23:55",
        "upload_time_iso_8601": "2022-06-23T09:23:55.008896Z",
        "url": "https://files.pythonhosted.org/packages/88/4f/62e352acf7b9b4fde7781a2488683cf6af6b3429e0b4dad264cb2279fdb4/jama-client-CERTIC-0.0.26.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.27": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67010aa428850c3ee7b73dd7c13516290e7df4f27953a67d7321ec07b1d38741",
          "md5": "167c8f9c1821295303dc4b521163d084",
          "sha256": "e96618cd5adc1230836449a242d0eb68b05921ecbe6ea4c17648024d838cdd63"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.27.tar.gz",
        "has_sig": false,
        "md5_digest": "167c8f9c1821295303dc4b521163d084",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22201,
        "upload_time": "2023-02-14T11:10:41",
        "upload_time_iso_8601": "2023-02-14T11:10:41.549238Z",
        "url": "https://files.pythonhosted.org/packages/67/01/0aa428850c3ee7b73dd7c13516290e7df4f27953a67d7321ec07b1d38741/jama-client-CERTIC-0.0.27.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.28": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0c0c0bb7e402c4cb0186c4170a8b0eebdcf49d81a1cdfac495efad41c019e4d",
          "md5": "8ca0ff18b9d8dce406049d0b9e6e577f",
          "sha256": "a6a572bd43f2be027bc57a91f747ca86430a45c72de804a40b7b0061043a0a4b"
        },
        "downloads": -1,
        "filename": "jama-client-CERTIC-0.0.28.tar.gz",
        "has_sig": false,
        "md5_digest": "8ca0ff18b9d8dce406049d0b9e6e577f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22191,
        "upload_time": "2023-02-16T14:34:05",
        "upload_time_iso_8601": "2023-02-16T14:34:05.005328Z",
        "url": "https://files.pythonhosted.org/packages/a0/c0/c0bb7e402c4cb0186c4170a8b0eebdcf49d81a1cdfac495efad41c019e4d/jama-client-CERTIC-0.0.28.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0c0c0bb7e402c4cb0186c4170a8b0eebdcf49d81a1cdfac495efad41c019e4d",
        "md5": "8ca0ff18b9d8dce406049d0b9e6e577f",
        "sha256": "a6a572bd43f2be027bc57a91f747ca86430a45c72de804a40b7b0061043a0a4b"
      },
      "downloads": -1,
      "filename": "jama-client-CERTIC-0.0.28.tar.gz",
      "has_sig": false,
      "md5_digest": "8ca0ff18b9d8dce406049d0b9e6e577f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22191,
      "upload_time": "2023-02-16T14:34:05",
      "upload_time_iso_8601": "2023-02-16T14:34:05.005328Z",
      "url": "https://files.pythonhosted.org/packages/a0/c0/c0bb7e402c4cb0186c4170a8b0eebdcf49d81a1cdfac495efad41c019e4d/jama-client-CERTIC-0.0.28.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}