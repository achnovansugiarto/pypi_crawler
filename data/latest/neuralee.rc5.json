{
  "info": {
    "author": "Jiankang Xiong",
    "author_email": "hibearme@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "========\nNeuralEE\n========\n.. image:: https://travis-ci.org/HiBearME/NeuralEE.svg?branch=master\n    :target: https://travis-ci.org/HiBearME/NeuralEE\n    :alt: Build Status\n.. image:: https://readthedocs.org/projects/neuralee/badge/?version=latest\n    :target: https://neuralee.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n* Free software: MIT license\n* Documentation: https://neuralee.readthedocs.io.\n\n.. image:: https://raw.githubusercontent.com/HiBearME/NeuralEE/master/img/FlowChart.png\n    :alt: Flowchart of NeuralEE\n\nThis is an applicable version for NeuralEE.\n\n1. The datasets loading and preprocessing module is modified from\n   `scVI v0.3.0 <https://github.com/YosefLab/scVI/tree/v0.3.0>`_.\n2. Define NeuralEE class and some auxiliary function, mainly for cuda\n   computation, except like entropic affinity calculation which is \n   quite faster computed on cpu.\n3. General elastic embedding algorithm on cuda is given based on matlab code\n   from `Max Vladymyrov <https://eng.ucmerced.edu/people/vladymyrov>`_.\n4. Add some demos of notebook helping to reproduce.\n\n------------\nInstallation\n------------\n\n1. Install Python 3.7. \n\n2. Install `PyTorch <https://pytorch.org>`_. If you have an NVIDIA GPU, be sure\n   to install a version of PyTorch that supports it. NeuralEE runs much faster\n   with a discrete GPU.  \n\n3. Install NeuralEE through pip or from GitHub:\n\n.. code-block:: bash\n\n    pip install neuralee\n\n.. code-block:: bash\n\n    git clone git://github.com/HiBearME/NeuralEE.git\n    cd NeuralEE\n    python setup.py install --user\n\n-------------------\nHow to use NeuralEE\n-------------------\n\n1. Data Loading\n\nOur datasets loading and preprocessing module is based on `scVI v0.3.0 <https://github.com/YosefLab/scVI/tree/v0.3.0>`_.\nHow to download online datasets or load generic datasets is the same as `scVI v0.3.0 <https://github.com/YosefLab/scVI/tree/v0.3.0>`_.\n\nFor example, load the online dataset ``CORTEX`` Dataset, which consists of 3,005 mouse cortex cells profiled with the Smart-seq2 protocol.\nTo facilitate comparison with other methods, we use a filtered set of 558 highly variable genes as the original paper.\n\n.. code-block:: python\n\n    from neuralee.dataset import CortexDataset\n    dataset = CortexDataset(save_path='../data/')\n    dataset.log_shift()\n    dataset.subsample_genes(558)\n    dataset.standardscale()\n\nLoad the ``h5ad`` file for ``BRAIN-LARGE`` Dataset, which consists of 1.3 million mouse brain cells and has been already preprocessed and remained by 50 principal components.\n\n.. code-block:: python\n\n    from neuralee.dataset import GeneExpressionDataset\n    import anndata\n    adata = anndata.read_h5ad('../genomics_zheng17_50pcs.h5ad') # Your own local dataset is needed.\n    dataset = GeneExpressionDataset(adata.X)\n\nFor other generic datasets, it's also convenient to use ``GeneExpressionDataset`` to load them.\n\n2. Embedding\n\nThere are a number of parameters that can be set for the NeuralEE class; the major ones are as follows:\n\n -  ``d``: This determines the dimension of embedding space, with 2 being default.\n\n -  ``lam``: This determines the trade-off parameter of EE objective function.\n    Larger values make embedded points more distributed.\n    In general this parameter should be non-negative, with 1.0 being default.\n\n -  ``perplexity``: This determines the perplexity parameter for calculation of the attractive matrix.\n    This parameter plays the same role as ``t-SNE``, with 30.0 being default.\n\n -  ``N_small``: This determines the batch-size for the stochastic optimization.\n    Smaller value makes more accurate approximation to the original EE objective function,\n    but needs larger computer memory to save the attractive and repulsive matrices and longer time for optimization.\n    It could be inputted as integer or percentage, with 1.0 being default, which means not applied with stochastic optimization.\n    we recommend to use stochastic optimization when only necessary, such as on ``BRAIN-LARGE`` Dataset,\n    which is hard to save the original attractive and repulsive matrices for a normal computer,\n    and if not with stochastic optimization, it could run out of memory.\n\n -  ``maxit``: This determines the maximum iteration of optimization.\n    Larger values makes embedded points stabler and more convergent, but consumes longer time, with 500 being default.\n\n -  ``pin_memory``: This determines whether to transfer all the matrix to the GPU at once if a GPU is available, with ``True`` being default.\n    If it's ``True``, it could save lots of time of transferring data from computer memory to GPU memory in each iteration,\n    but if your GPU memory is limited, it must be set as ``False``, for each iteration,\n    the matrices of the current iteration are re-transferred to the GPU at the beginning and freed at the end.\n\nThe embedding steps are as follows:\n\na). Calculate attractive and repulsive matrices for the dataset.\n\nIf EE and NeuralEE without stochastic optimization will be used, it could be calculated as:\n\n.. code-block:: python\n\n    dataset.affinity(perplexity=30.0)\n\nOr NeuralEE with stochastic optimization will be used, for example, 10% samples for each batch, it could be calculated as:\n\n.. code-block:: python\n\n    dataset.affinity_split(perplexity=30.0, N_small=0.1, verbose=True)\n    # verbose=True determines whether to show the progress of calculation.\n\nb). Initialize NeuralEE class.\n\n.. code-block:: python\n\n    import torch\n    # detect whether to use GPU.\n    device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')\n    NEE = NeuralEE(dataset, d=2, lam=1, device=device)\n\nc). Embedding.\n\nIf EE will be used, it could be calculated as:\n\n.. code-block:: python\n\n    results_EE = NEE.EE(maxit=50)\n\nIf NueralEE will be used, it could be calculated as:\n\n.. code-block:: python\n\n    results_NeuralEE = NEE.fine_tune(maxit=50, verbose=True, pin_memory=False)\n\nFor reproduction of original paper's results, check at\n`Jupyter notebooks <https://github.com/HiBearME/NeuralEE/tree/master/tests/notebooks>`_\nfiles.\n\n-------------------------\nComputer memory consuming\n-------------------------\n\nComputer memory is mainly allocated for saving attractive and repulsive matrices,\nwhich is approximately calculated as follows:\n\n::\n\n   \\frac{DataSize \\times BatchSize \\times 4 \\times 2}{1024^3}(GBytes)\n\nHyper-parameters selection of NeuralEE on large-scale data is limited on computers with limited memory.\n\n--------\nExamples\n--------\n\n1. ``HEMATO``\n\n``HEMATO`` Dataset includes 4,016 cells, and provides a snapshot of hematopoietic progenitor cells differentiating into various lineages.\n\nThis dataset is quite small, so we directly apply ``NeuralEE.EE`` and with (``lam`` =10, ``perplexity`` =30).\nAnd it could finish in several minutes on CPU, and in several seconds on GPU.\n\n.. image:: https://raw.githubusercontent.com/HiBearME/NeuralEE/master/img/HEMATO_EE_lam10.png\n    :alt: EE of HEMATO\n\n2. ``RETINA``\n\n``RETINA`` Dataset includes 27,499 mouse retinal bipolar neurons. Cluster annotation is from 15 cell-types from the original paper.\n\nSize of this dataset is moderate, and EE on CPU could finish in several hours.\nHowever, NeuralEE on a normal GPU, equipped with 11G memory, without stochastic optimization could finish in almost 3 minutes.\nAnd on a GPU of limited memory, NeuralEE with (``N_small`` =0.5, ``pin_memory`` = ``True``) could finish in almost 2 minutes.\nThe follow embedding shows the result of NeuralEE with (``lam`` =10, ``perplexity`` =30, ``N_small`` =0.5, ``pin_memory`` = ``True``).\n\n.. image:: https://raw.githubusercontent.com/HiBearME/NeuralEE/master/img/RETINA_lam10_2batches.png\n    :alt: NeuralEE of HEMATO\n\nTo reproduce this, check at `Jupyter notebook for RETINA dataset <https://github.com/HiBearME/NeuralEE/tree/master/tests/notebooks/retina_dataset.ipynb>`_.\n\n3. ``BRAIN-LARGE``\n\n``BRAIN-LARGE`` Dataset consists of 1.3 million mouse brain cells, and it's clustered by ``Louvain`` algorithm.\n\nThis dataset is quite large, so it's very difficult to apply EE.\nInstead, we apply NeuralEE  with (``lam`` =1, ``perplexity`` =30, ``N_small`` =5000, ``maxit`` =50, ``pin_memory`` = ``False``) on a normal GPU, equipped with 11G memory\n(when set ``pin_memory`` as ``False``, It also works on a GPU of limited memory and only uses less than 1G memory).\nIt needs at least 64G computer memory to save data, and it could finish less than half hour.\n\n.. image:: https://raw.githubusercontent.com/HiBearME/NeuralEE/master/img/BRAIN-LARGE.png\n    :alt: NeuralEE of BRAIN LARGE\n\nTo reproduce this, check at `Jupyter notebook for BRAIN-LARGE dataset <https://github.com/HiBearME/NeuralEE/tree/master/tests/notebooks/brainlarge_dataset_preprocessed_50pcs.ipynb>`_.\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HibearME/NeuralEE",
    "keywords": "neuralee",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "neuralee",
    "package_url": "https://pypi.org/project/neuralee/",
    "platform": "",
    "project_url": "https://pypi.org/project/neuralee/",
    "project_urls": {
      "Homepage": "https://github.com/HibearME/NeuralEE"
    },
    "release_url": "https://pypi.org/project/neuralee/0.1.6/",
    "requires_dist": [
      "numpy (>=1.16.3)",
      "scipy (>=1.1.0)",
      "torch (>=1.0.1)",
      "matplotlib (>=2.2.3)",
      "tqdm (>=4.26.0)",
      "anndata (>=0.6.19)",
      "scikit-learn (>=0.19.2)",
      "h5py (>=2.8.0)",
      "pandas (>=0.23.4)",
      "loompy (>=2.0.17)",
      "jupyter (>=1.0.0)",
      "ipython (>=6.5.0)"
    ],
    "requires_python": "",
    "summary": "NeuralEE: a GPU-accelerated elastic embedding dimensionality reduction method for visualization of large-scale scRNA-seq data",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7574840,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da4f2f90e17c54a72a4eba88f016700297b6400858ed20db117f608571e0da56",
          "md5": "7e926bd4fb3450072b172600f3123db7",
          "sha256": "bce852c98d4efd601ce04486df4d75d37142869284636c4bbf301dfc39e68f4b"
        },
        "downloads": -1,
        "filename": "neuralee-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e926bd4fb3450072b172600f3123db7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36914,
        "upload_time": "2019-05-28T21:15:32",
        "upload_time_iso_8601": "2019-05-28T21:15:32.383610Z",
        "url": "https://files.pythonhosted.org/packages/da/4f/2f90e17c54a72a4eba88f016700297b6400858ed20db117f608571e0da56/neuralee-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcfc8f10578d5981c57f05d88b15e91c724236f59f438b0eb3b578d430668cab",
          "md5": "c254dc3d56c6a440783369954803eab8",
          "sha256": "69203862eb79f954790f71bab83561fe1669920ab013126f7ddbd3c42d6b2e92"
        },
        "downloads": -1,
        "filename": "neuralee-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c254dc3d56c6a440783369954803eab8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28899,
        "upload_time": "2019-05-28T21:15:34",
        "upload_time_iso_8601": "2019-05-28T21:15:34.435494Z",
        "url": "https://files.pythonhosted.org/packages/fc/fc/8f10578d5981c57f05d88b15e91c724236f59f438b0eb3b578d430668cab/neuralee-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7ecc61a58607b62d06cfd587d198ff1b7673054629a2a9ea8468d0feba73005",
          "md5": "90ab218552adcb7bce5c4d5c54e3484f",
          "sha256": "5a5f30044d6c40ec6a9d1664cf64341935b9fd4d38872176f46c32b4a738919e"
        },
        "downloads": -1,
        "filename": "neuralee-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90ab218552adcb7bce5c4d5c54e3484f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 37114,
        "upload_time": "2019-06-02T15:37:45",
        "upload_time_iso_8601": "2019-06-02T15:37:45.132912Z",
        "url": "https://files.pythonhosted.org/packages/a7/ec/c61a58607b62d06cfd587d198ff1b7673054629a2a9ea8468d0feba73005/neuralee-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10b95935e8e578cc04c360f4c02a89e0612d021dcf65318eb783d4165cd39d48",
          "md5": "2d6890fff7cc7fc895dd207e2e869102",
          "sha256": "224d16a5e3ef58a974654a3d0bf44128949a7a2fdc7a4a76eb3bb2e2b9781f09"
        },
        "downloads": -1,
        "filename": "neuralee-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2d6890fff7cc7fc895dd207e2e869102",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29968,
        "upload_time": "2019-06-02T15:37:47",
        "upload_time_iso_8601": "2019-06-02T15:37:47.171441Z",
        "url": "https://files.pythonhosted.org/packages/10/b9/5935e8e578cc04c360f4c02a89e0612d021dcf65318eb783d4165cd39d48/neuralee-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eda93ccec56dd8804c8890738af45ed242a45ee6b18d55f777730b7366c7722",
          "md5": "3efe868e581b1b7aa197827e72048525",
          "sha256": "7524d1334abb4731b9a4ee425f18055c4df46ee23c544fc4e3f65da914eb7585"
        },
        "downloads": -1,
        "filename": "neuralee-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3efe868e581b1b7aa197827e72048525",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36912,
        "upload_time": "2019-07-09T04:21:26",
        "upload_time_iso_8601": "2019-07-09T04:21:26.595269Z",
        "url": "https://files.pythonhosted.org/packages/2e/da/93ccec56dd8804c8890738af45ed242a45ee6b18d55f777730b7366c7722/neuralee-0.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18a3fdd22e2444a9d7dee7b52f674aa29e8c31f2da2559d59ab60135753b3eb4",
          "md5": "dea59a1b2d5db252965e62159330e2cd",
          "sha256": "b08643c8c021b809f29b37f2658f0494775eed1ffbb93baa598d2a91a9ba2401"
        },
        "downloads": -1,
        "filename": "neuralee-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "dea59a1b2d5db252965e62159330e2cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30042,
        "upload_time": "2019-07-09T04:21:28",
        "upload_time_iso_8601": "2019-07-09T04:21:28.299757Z",
        "url": "https://files.pythonhosted.org/packages/18/a3/fdd22e2444a9d7dee7b52f674aa29e8c31f2da2559d59ab60135753b3eb4/neuralee-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82919fa55dcc58efc9b5ae54404e2452664bbd67bb0dfb79f717e5e115c63145",
          "md5": "33cf6bb9c89111d90b52ca367d2c2de8",
          "sha256": "2cf0e02af945df0612089154c8d851ed1890d93538bafc8a21aef28a66db8b25"
        },
        "downloads": -1,
        "filename": "neuralee-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33cf6bb9c89111d90b52ca367d2c2de8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 38749,
        "upload_time": "2020-06-21T01:39:06",
        "upload_time_iso_8601": "2020-06-21T01:39:06.243600Z",
        "url": "https://files.pythonhosted.org/packages/82/91/9fa55dcc58efc9b5ae54404e2452664bbd67bb0dfb79f717e5e115c63145/neuralee-0.1.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5670d5f485c0b79b78f90d7f7fbca2520fb8c5043038e065ecc1f1c4f8b00fdf",
          "md5": "b8642fa271e4fadd90b46f69fd3d1a72",
          "sha256": "dc38fe890a0de12bcff5f820e2d51698ac67befe4e50f3e4e5718ed26f06085b"
        },
        "downloads": -1,
        "filename": "neuralee-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b8642fa271e4fadd90b46f69fd3d1a72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33792,
        "upload_time": "2020-06-21T01:39:08",
        "upload_time_iso_8601": "2020-06-21T01:39:08.474851Z",
        "url": "https://files.pythonhosted.org/packages/56/70/d5f485c0b79b78f90d7f7fbca2520fb8c5043038e065ecc1f1c4f8b00fdf/neuralee-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcade5fae155e49be544e4d5cbf5d32eaf3f5effe40ff50480738bfde6d29faa",
          "md5": "7f432dcf01aaf91c717a06786e874d4e",
          "sha256": "21eba0200b5d566350a7185fb98d9517e1ac81601e6c42abaf5baf3e8c2def9a"
        },
        "downloads": -1,
        "filename": "neuralee-0.1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f432dcf01aaf91c717a06786e874d4e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 38938,
        "upload_time": "2020-06-27T07:00:36",
        "upload_time_iso_8601": "2020-06-27T07:00:36.938304Z",
        "url": "https://files.pythonhosted.org/packages/fc/ad/e5fae155e49be544e4d5cbf5d32eaf3f5effe40ff50480738bfde6d29faa/neuralee-0.1.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9765ad6c1482f30d3fa07c88c4e3d2337a089d00a822b03b6a52beb1cdc65f5c",
          "md5": "bd2c31d1f78c30d3f0065834d4034a64",
          "sha256": "1e651ae48cc802d5560f86de8838e9b852d7a8aa63d1e25d3f40bbb89a735fd1"
        },
        "downloads": -1,
        "filename": "neuralee-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "bd2c31d1f78c30d3f0065834d4034a64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34066,
        "upload_time": "2020-06-27T07:00:38",
        "upload_time_iso_8601": "2020-06-27T07:00:38.919467Z",
        "url": "https://files.pythonhosted.org/packages/97/65/ad6c1482f30d3fa07c88c4e3d2337a089d00a822b03b6a52beb1cdc65f5c/neuralee-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcade5fae155e49be544e4d5cbf5d32eaf3f5effe40ff50480738bfde6d29faa",
        "md5": "7f432dcf01aaf91c717a06786e874d4e",
        "sha256": "21eba0200b5d566350a7185fb98d9517e1ac81601e6c42abaf5baf3e8c2def9a"
      },
      "downloads": -1,
      "filename": "neuralee-0.1.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f432dcf01aaf91c717a06786e874d4e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 38938,
      "upload_time": "2020-06-27T07:00:36",
      "upload_time_iso_8601": "2020-06-27T07:00:36.938304Z",
      "url": "https://files.pythonhosted.org/packages/fc/ad/e5fae155e49be544e4d5cbf5d32eaf3f5effe40ff50480738bfde6d29faa/neuralee-0.1.6-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9765ad6c1482f30d3fa07c88c4e3d2337a089d00a822b03b6a52beb1cdc65f5c",
        "md5": "bd2c31d1f78c30d3f0065834d4034a64",
        "sha256": "1e651ae48cc802d5560f86de8838e9b852d7a8aa63d1e25d3f40bbb89a735fd1"
      },
      "downloads": -1,
      "filename": "neuralee-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "bd2c31d1f78c30d3f0065834d4034a64",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 34066,
      "upload_time": "2020-06-27T07:00:38",
      "upload_time_iso_8601": "2020-06-27T07:00:38.919467Z",
      "url": "https://files.pythonhosted.org/packages/97/65/ad6c1482f30d3fa07c88c4e3d2337a089d00a822b03b6a52beb1cdc65f5c/neuralee-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}