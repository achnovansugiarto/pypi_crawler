{
  "info": {
    "author": "ccf2012",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# torcp\n\n[English version](README_en.md)\n\n对下载的影视文件，通过 `硬链` 或 `软链` 在另一个文件夹中改名和重组目录、以便 Emby/Plex 这样的应用程序便于刮削识别。本脚本：\n1. 对你的影视文件夹中的文件进行分类，主要处理 TV/Movie， 解析影视文件夹中的 `影视名称`，`年份`，`季`，`集`，以及 `制作组`\n2. 依照 [Emby-happy](https://support.emby.media/support/solutions/articles/44001159102-movie-naming) 的风格进行重组目录与改名，在目标目录中生成硬链或软链.\n3. 支持搜索TMDb，以获得准确的、选定语言的影视名字，然后以此名字进行更名和组织目录，对于查出了TMDb的媒体，支持按语言分类\n\n## 1 应用说明\n* [利用 qBittorrent 的完成后自动执行脚本功能实现入库](qb自动入库.md)\n* 在浏览器中安装[种子列表过滤油猴脚本](https://github.com/ccf-2012/torfilter), 本地启动**下载入库api服务 filterapi**，在页面上过滤出的标题，批量推送至 **filterapi** 进行查重和下载\n* [配合 PTPP 与torcc 实现 Emby/Plex 自动入库流程](AutoPlex.md)\n* [刮削攻略](刮削攻略.md)\n\n## 2 Last Update\n* 2023.3.20 改为 logger 输出；参考 `tp.py` 设置输出目标和格式\n* 2023.2.7 `--sep-area` 所有地区分目录，不可与语言 `--lang` 同时使用\n* 2023.2.3 `--genre` 支持按类型分目录，以逗号分隔，使用`--tmdb-lang`所设的语言相关的类型词汇；如果媒体包含列出的类型，则在Movie/TV目录下单独成分目录，未在列的在 other 目录；如果同时进行了语言或地区分目录，类型目录与语言和地区同级目录，即类型中未在列的才分语言和地区；\n* 2023.1.27 torcp代码组织为类(class)形式，以便通过代码形式进行调用，调用入口为 `main(argv, exportObject)`，参见11节说明\n* 2022.12.23 `--tmdbid`，用`m-12345`或`movie-12345` 及 `t-54321`或`tv-54321`这样的形式，指定资源的TMDb信息\n* 2022.11.30 `--tmdb-origin-name`, 对于电影，生成 `刮削名 (年份) - 原文件名`  这样的文件名，对于Emby可以实现以原文件名作为版本名。\n* 2022.11.11 支持**Site-Id-IMDb**文件夹，即在资源目录之上，有一个目录名中带有 `[imdb=tt123456]` 或以 `tt123456` 结尾的目录\n* 2022.10.26 `--make-plex-match`  Create a .plexmatch file at the top level of a series\n* 2022.10.5 `--filename-emby-bracket` 对于电影，在使用`--emby-bracket` 时，使文件名与目录都加上emby后缀\n* 2022.9.5 `--imdbid` 在 `-s` 模式下指定媒体的 IMDb id\n* 2022.9.4  `--after-copy-script` 执行外部脚本时，会传入3个参数：生成的媒体路径，原媒体文件(夹)名，tmdbid\n* 2022.8.18 如果资源文件夹命名里面带`[imdbid=xxx]`或`[tmdbid=xxx]`，则直接使用这样的id去TMDb中搜索资源信息\n* 2022.7.21 `--after-copy-script` 在完成硬链后，执行一外部脚本，以便实现Plex刮削\n* 2022.6.20 `-e, --keep-ext`, 可使用参数 `all` \n* 2022.4.3: `--make-log` 在目标目录中建立一个log文件，以便追溯原文件名\n* 2022.3.23: `--symbolink` support symbol link\n* 2022.3.13: `--lang` dispatch to different folders base on TMDb language\n* 2022.2.26: `--tmdb-api-key` Support TMDb search \n\n## 3 准备\n> 本程序需要在 `python3` 运行环境，以命令行方式运行\n\n### 3.1 pip 安装\n* 安装torcp\n```sh\npip3 install torcp\n```\n\n#### 3.1.1 群晖中使用python3 和 pip3\n* DSM 6.x 默认没有安装Python 3，需要要在套件中心中搜索安装 `Python 3` \n* 群晖安装pip\n```sh\npython3 -m ensurepip\n```\n\n### 3.2 使用源码调用的方式\n* 如果你仍然习惯源码调用的方式，安装代码，仍然使用:\n```sh \ngit clone https://github.com/ccf-2012/torcp.git\n```\n\n* 这里添加了一个小的入口程序`tp.py`，你可以这样调用：\n```sh\npython tp.py -h \n```\n\n* 后面例子中的`torcp` 都可以替换成 `python tp.py` 这样的调用方式。\n* 这样的方式，全程操作是以同一用户同一env，可能会减少出错机会。\n\n\n## 4 使用方法:\n* 完整的命令参数，可以通过这样查看：\n```sh \ntorcp -h\n```\n\n* 或使用源码安装的话，打 `python tp.py -h `\n```\npython3 tp.py -h\n\nusage: tp.py [-h] -d HD_PATH [-e KEEP_EXT] [-l LANG] [--genre GENRE] [--other-dir OTHER_DIR] [--sep-area] [--sep-area5] [--tmdb-api-key TMDB_API_KEY] [--tmdb-lang TMDB_LANG]\n             [--tv-folder-name TV_FOLDER_NAME] [--movie-folder-name MOVIE_FOLDER_NAME] [--tv] [--movie] [--dryrun] [--single] [--extract-bdmv] [--full-bdmv] [--origin-name] [--tmdb-origin-name]\n             [--sleep SLEEP] [--move-run] [--make-log] [--symbolink] [--cache] [--emby-bracket] [--filename-emby-bracket] [--plex-bracket] [--make-plex-match]\n             [--after-copy-script AFTER_COPY_SCRIPT] [--imdbid IMDBID] [--tmdbid TMDBID] [--site-str SITE_STR]\n             MEDIA_DIR\n\ntorcp: a script hardlink media files and directories in Emby-happy naming and structs.\n\npositional arguments:\n  MEDIA_DIR             The directory contains TVs and Movies to be copied.\n\noptions:\n  -h, --help            show this help message and exit\n  -d HD_PATH, --hd_path HD_PATH\n                        the dest path to create Hard Link.\n  -e KEEP_EXT, --keep-ext KEEP_EXT\n                        keep files with these extention('srt,ass').\n  -l LANG, --lang LANG  seperate dir by language('cn,en').\n  --genre GENRE         seperate dir by genre('anime,document').\n  --other-dir OTHER_DIR\n                        for any dir Other than Movie/TV.\n  --sep-area            seperate dir by all production area.\n  --sep-area5           seperate 5 dirs(cn,hktw,jpkr,useu,other) by production area.\n  --tmdb-api-key TMDB_API_KEY\n                        Search API for the tmdb id, and gen dirname as Name (year)\\{tmdbid=xxx\\}\n  --tmdb-lang TMDB_LANG\n                        specify the TMDb language\n  --tv-folder-name TV_FOLDER_NAME\n                        specify the name of TV directory, default TV.\n  --movie-folder-name MOVIE_FOLDER_NAME\n                        specify the name of Movie directory, default Movie.\n  --tv                  specify the src directory is TV.\n  --movie               specify the src directory is Movie.\n  --dryrun              print message instead of real copy.\n  --single, -s          parse and copy one single folder.\n  --extract-bdmv        extract largest file in BDMV dir.\n  --full-bdmv           copy full BDMV dir and iso files.\n  --origin-name         keep origin file name.\n  --tmdb-origin-name    filename emby bracket - origin file name.\n  --sleep SLEEP         sleep x seconds after operation.\n  --move-run            WARN: REAL MOVE...with NO REGRET.\n  --make-log            Make a log file.\n  --symbolink           symbolink instead of hard link\n  --cache               cache searched dir entries\n  --emby-bracket        ex: Alone (2020) [tmdbid=509635]\n  --filename-emby-bracket\n                        filename with emby bracket\n  --plex-bracket        ex: Alone (2020) {tmdb-509635}\n  --make-plex-match     Create a .plexmatch file at the top level of a series\n  --after-copy-script AFTER_COPY_SCRIPT\n                        call this script with destination folder path after link/move\n  --imdbid IMDBID       specify the IMDb id, -s single mode only\n  --tmdbid TMDBID       specify the TMDb id, -s single mode only\n  --site-str SITE_STR   site-id(ex. hds-12345) folder name, set site strs like ('chd,hds,ade,ttg').\n```\n\n\n## 5 基本使用\n\n* 将一个目录中所有影视文件和目录，硬链到另一个目录，其间会按目录名/文件名猜测分类，并挑出 `.mkv` 和 `.mp4`:\n```sh \ntorcp /home/ccf2012/Downloads/  -d /home/ccf2012/emby/ \n```\n\n* 电影和剧集的处理，是不一样的，如果你确认一个目录是电影或剧集，可以使用`--movie` 和 `--tv` 指定:\n```sh\ntorcp /home/ccf2012/Downloads/RSSMovie/ -d /home/ccf2012/emby/ --movie\n```\n\n* 如果想单独处理单个目录，可使用 `-s` 指定，例如:\n```sh\ntorcp /home/ccf2012/Downloads/权力的游戏.第1-8季.Game.Of.Thrones.S01-S08.1080p.Blu-Ray.AC3.x265.10bit-Yumi -d /home/ccf2012/emby/ -s --tv\n```\n\n---\n\n## 6 `--tmdb-api-key` TMDb 查询\n* 通过The Movie Database (TMDb) API 查询，得到确切的tmdbid, 确保生成的文件夹可被刮削\n* 可选 `--tmdb-lang` 参数，默认是 `zh-CN`\n* 查询不到的文件，将会被 `链` 或 `移` 到目标目录下 `TMDbNotFound` 目录中\n\n```sh\ntorcp /home/test/ -d /home/test/result3/ --tmdb-api-key='your TMDb api key'\n```\n\n* 组合 `--move-run` 的例子\n```sh\ntorcp /home/test/ -d /home/test/result2/ --tmdb-api-key='your TMDb api key' --plex-bracket --move-run  --dryrun\n```\n\n### 6.1 `--tmdb-lang` 设置TMDb刮削的语言\n* 设定使用TMDb进行刮削搜索时所获取媒体信息的语言，比如：\n  * `--tmdb-lang en-US` 搜索 「The.Dripping.Sauce.S01.2020.1080p.KKTV.WEB-DL.x264.AAC-ADWeb」会生成目录为 「The Dripping Sauce (2020)」\n  * `--tmdb-lang zh-CN` 搜索则生成目录为 「大酱园 (2022)」\n\n### 6.2 `--lang` 按语言分类\n* 如果查出了TMDb id，那么可以将媒体按语言分到不同目录存储\n* `--lang` 后面以逗号分隔写所需要分出来的语言，其它的归到 `others` \n* 中文语言为 `cn`，日语为 `ja`，韩语为 `ko`\n* 如果写 `--lang all` 则所有语言都被分类\n  \n```sh\ntorcp /home/test/ -d /home/test/result3/ --tmdb-api-key='your TMDb api key' --lang cn,ja,ko\n```\n\n----\n\n## 7 `--move-run` 直接改名和移动 \n* 不作硬链，直接进行move和改名操作，用于对已经放在gd中的文件进行整理\n* `-d` 指定要搬移的目标位置，请自己把握不跨区 \n* 加了一个`--sleep`参数，可以每次操作搬移一个文件后暂停 `SLEEP` 秒，此参数仅在 `--move-run` 时有效\n* 由于这样的操作不可逆，请一定先作 `--dry-run` 确认后才执行\n\n\n```sh\ntorcp /home/test/ -d /home/test/result5/ --move-run --dryrun\n```\n\n----\n\n## 8 `--extract-bdmv` 和 `--full-bdmv`，BDMV的处理\n* 特别说一下对BDMV的处理：\n1. 如果什么参数都不加，在碰到含有 `BDMV` 目录和 `.iso` 文件时，将会跳过。\n```sh\ntorcp /volume1/video/emby/test -d /volume1/video/emby/testdir\n```\n2. `--extract-bdmv` 参数，可能最适合 Emby 或 Kodi 的用家，它将会从 `BDMV` 目录中挑出最大的几个 `.m2ts` 文件硬链出来，对于 movie/tv 都行。见[下面的例子](#--extract-bdmv-%E7%9A%84%E4%BE%8B%E5%AD%90)\n> with `iso` files copy to sepereate dir\n```sh\ntorcp /volume1/video/emby/test -d /volume1/video/emby/testdir --extract-bdmv\n```\n3. `--full-bdmv` 参数。使用这个参数会将整个 BDMV 文件夹和  `.iso` 文件都硬链出来，对于使用碟机播放的用家，就会有用。\n```sh\ntorcp /volume1/video/emby/test -d /volume1/video/emby/testdir --full-bdmv\n```\n\n#### 8.1 `--extract-bdmv` 的例子\n* 命令:\n```sh\ntorcp /share/CACHEDEV1_DATA/Video/QB/TV  -d /share/CACHEDEV1_DATA/Video/emby/  --extract-bdmv \n```\n* 原目录:\n```\n[/share/CACHEDEV1_DATA/Video/QB/TV/Civilisations.S01.COMPLETE.BLURAY-VEXHD] # tree . -h -A -P *.m2ts\n.\n├── [4.0K]  CIVILISATIONS_D1\n│   └── [4.0K]  BDMV\n│       ├── [4.0K]  BACKUP\n│       │   ├── [4.0K]  CLIPINF\n│       │   └── [4.0K]  PLAYLIST\n│       ├── [4.0K]  CLIPINF\n│       ├── [4.0K]  META\n│       │   └── [4.0K]  DL\n│       ├── [4.0K]  PLAYLIST\n│       └── [4.0K]  STREAM\n│           ├── [ 14G]  00002.m2ts\n│           ├── [ 14G]  00003.m2ts\n│           ├── [ 14G]  00004.m2ts\n│           ├── [1.1M]  00005.m2ts\n│           ├── [ 12M]  00006.m2ts\n│           ├── [ 94M]  00007.m2ts\n│           ├── [ 94M]  00008.m2ts\n│           ├── [1.9M]  00009.m2ts\n│           ├── [1.5M]  00010.m2ts\n│           └── [126K]  00011.m2ts\n├── [4.0K]  CIVILISATIONS_D2\n│   └── [4.0K]  BDMV\n│       ├── [4.0K]  BACKUP\n│       │   ├── [4.0K]  CLIPINF\n│       │   └── [4.0K]  PLAYLIST\n│       ├── [4.0K]  CLIPINF\n│       ├── [4.0K]  META\n│       │   └── [4.0K]  DL\n│       ├── [4.0K]  PLAYLIST\n│       └── [4.0K]  STREAM\n│           ├── [ 14G]  00002.m2ts\n│           ├── [ 14G]  00003.m2ts\n│           ├── [ 14G]  00004.m2ts\n│           ├── [1.1M]  00005.m2ts\n│           ├── [ 12M]  00006.m2ts\n│           ├── [ 94M]  00007.m2ts\n│           ├── [ 94M]  00008.m2ts\n│           ├── [1.9M]  00009.m2ts\n│           ├── [1.5M]  00010.m2ts\n│           └── [126K]  00011.m2ts\n└── [4.0K]  CIVILISATIONS_D3\n    └── [4.0K]  BDMV\n        ├── [4.0K]  BACKUP\n        │   ├── [4.0K]  CLIPINF\n        │   └── [4.0K]  PLAYLIST\n        ├── [4.0K]  CLIPINF\n        ├── [4.0K]  META\n        │   └── [4.0K]  DL\n        ├── [4.0K]  PLAYLIST\n        └── [4.0K]  STREAM\n            ├── [ 14G]  00002.m2ts\n            ├── [ 14G]  00003.m2ts\n            ├── [ 14G]  00004.m2ts\n            ├── [1.1M]  00005.m2ts\n            ├── [ 12M]  00006.m2ts\n            ├── [ 94M]  00007.m2ts\n            ├── [ 94M]  00008.m2ts\n            ├── [1.9M]  00009.m2ts\n            ├── [1.5M]  00010.m2ts\n            └── [126K]  00011.m2ts\n\n```\n* 执行后:\n```\n[/share/CACHEDEV1_DATA/Video/emby/BDMV_TV/Civilisations] # tree . -h -A\n.\n├── [4.0K]  CIVILISATIONS_D1\n│   ├── [ 14G]  CIVILISATIONS_D1\\ -\\ 00002.m2ts\n│   ├── [ 14G]  CIVILISATIONS_D1\\ -\\ 00003.m2ts\n│   └── [ 14G]  CIVILISATIONS_D1\\ -\\ 00004.m2ts\n├── [4.0K]  CIVILISATIONS_D2\n│   ├── [ 14G]  CIVILISATIONS_D2\\ -\\ 00002.m2ts\n│   ├── [ 14G]  CIVILISATIONS_D2\\ -\\ 00003.m2ts\n│   └── [ 14G]  CIVILISATIONS_D2\\ -\\ 00004.m2ts\n└── [4.0K]  CIVILISATIONS_D3\n    ├── [ 14G]  CIVILISATIONS_D3\\ -\\ 00002.m2ts\n    ├── [ 14G]  CIVILISATIONS_D3\\ -\\ 00003.m2ts\n    └── [ 14G]  CIVILISATIONS_D3\\ -\\ 00004.m2ts\n\n```\n\n----\n\n## 9 媒体文件名生成方案\n\n### 9.1 `--origin-name` 与 `--tmdb-origin-name`\n* 对于IMDb搜索到的媒体资源，目录结构将按Emby/Plex所约定的规范进行组织，目录内的文件名，有3种可能的方式：\n1. 默认的：刮削名 (年份) - 分辨率_组名.mkv\n2. `--origin-name`：直接使用 原文件名\n3. `--tmdb-origin-name`：刮削名 (年份) - 原文件名\n\n\n### 9.2 `--emby-bracket`， `--filename-emby-bracket`\n* 可以使用 `--emby-bracket` 选项在 「刮削名 (年份)」之后加上如「[tmdbid=509635]」这样的emby bracket，以便Emby在刮削时直接辨认使用；对于plex，可以使用 `--plex-bracket` 生成如 「{tmdb-509635}」这样的后缀\n* 对于电影，如果使用了 `--emby-bracket`，可以附加使用 `--filename-emby-bracket`，使其中的电影媒体文件的文件名也附加「[tmdbid=509635]」这样的emby bracket。\n* 这两个选项在使用  `--tmdb-origin-name` 时也是生效的\n\n\n* 比如：\n```sh\npython3 tp.py ../test -d ../test/result  --tmdb-api-key 'your TMDb api key'  --tmdb-origin-name  --emby-bracket --filename-emby-bracket\n```\n* 结果如下：\n```\n.\n├── A.Good.Day.to.Die.Hard.2013.1080p.BluRay.x265.10bit.3Audio.MNHD-FRDS\n│   ├── A.Good.Day.to.Die.Hard.Extended.Version.2013.1080p.BluRay.x265.10bit.3Audio.MNHD-FRDS.mkv\n│   ├── A.Good.Day.to.Die.Hard.Theatrical.Version.2013.1080p.BluRay.x265.10bit.3Audio.MNHD-FRDS.mkv\n│   └── Bonus\n└── result\n    └── Movie\n        └── 虎胆龙威5 (2013) [tmdbid=47964]\n            ├── 虎胆龙威5 (2013) [tmdbid=47964] - A.Good.Day.to.Die.Hard.Extended.Version.2013.1080p.BluRay.x265.10bit.3Audio.MNHD-FRDS.mkv\n            └── 虎胆龙威5 (2013) [tmdbid=47964] - A.Good.Day.to.Die.Hard.Theatrical.Version.2013.1080p.BluRay.x265.10bit.3Audio.MNHD-FRDS.mkv\n\n```\n* 而如果不使用 `--tmdb-origin-name `\n```sh\npython3 tp.py ../test -d ../test/result  --tmdb-api-key 'your TMDb api key'  --emby-bracket --filename-emby-bracket \n```\n* 得到结果如下：\n```\n.\n├── A.Good.Day.to.Die.Hard.2013.1080p.BluRay.x265.10bit.3Audio.MNHD-FRDS\n│   ├── A.Good.Day.to.Die.Hard.Extended.Version.2013.1080p.BluRay.x265.10bit.3Audio.MNHD-FRDS.mkv\n│   ├── A.Good.Day.to.Die.Hard.Theatrical.Version.2013.1080p.BluRay.x265.10bit.3Audio.MNHD-FRDS.mkv\n│   └── Bonus\n└── result\n    └── Movie\n        └── 虎胆龙威5 (2013) [tmdbid=47964]\n            └── 虎胆龙威5 (2013) [tmdbid=47964] - 1080p_FRDS.mkv\n```\n> 其中后一个版本会因文件已存在而跳过\n\n\n-----\n\n## 10 传入IMDb信息\n* 在大部分情况下，有IMDb信息，可以确定地查出TMDb信息，有两种类型的方法：\n\n### 10.1 建一个包含IMDb id的目录\n* 下载资源时多建一层父目录，包含IMDb信息： 即用户可以在rss站时，添加种子时就建一个以 `站点-id-IMDb` 为名的目录，作为下载资源的父目录，则torcp将以此IMDb id作为信息，对下层目录作为资源进行刮削。（by boomPa), 如：\n```\naudies_movie-1234-tt123456\\\n  Some.Movie.2022.1080p.BluRay.x264.DTS-ADE\\\n      Some.Movie.2022.1080p.BluRay.x264.DTS-ADE.mkv\n```\n\n* `站点-id-IMDb` 目录可能没有IMDb，对于 `站点关键字-id` 结构的目录torcp也会视为资源的父目录，即多进一层进行解析，其中 `站点关键字` 可由 `--site-str` 指定，如指定了 `--site-str audies_movie` 则碰到 `audies_movie-1234` 目录，则会进入内层目录对其中的文件夹或文件进行刮削。\n\n* 另外，如果资源文件夹的名字，本身带有 `[imdb=tt123456]` 或 `[tmdb=123456]` 结尾，也会被用于直接指定媒体\n\n\n\n### 10.2 以`--imdbid`参数指定 IMDb id\n* 在qb中添加种子时，加一个IMDb tag。这可以使用 [torcc](https://github.com/ccf-2012/torcc) 或 [torfilter](https://github.com/ccf-2012/torfilter) 实现\n* 在下载完成时，将此 IMDb tag 以`--imdbid` 参数传给torcp。\n* 详情参考[利用 qBittorrent 的完成后自动执行脚本功能实现入库](qb自动入库.md)\n\n----\n## 11 DeleteEmptyFolders.py 清除空目录\n* 在作了上面 `--move-run` 操作后，原目录将会剩留大量 空的，或仅包含 `.jpg`, `.nfo` 这类小文件的目录\n* 除了默认的 `.mkv`, `.mp4`, `.ts`, `.iso` 之外，使用与 `torcp.py` 相同的 `--keep-ext` 来表示那些已经 **不再包含这些扩展名文件** 的目录，将被删除\n* 使用 `--dryrun` 先看下将会发生什么\n\n```sh\ntorcp-clean /home/test/  -e srt,ass --dryrun\n```\n\n## 12 以代码调用torcp进行二次开发\n* torcp 入口定义为：\n```py  \ntorcp.main(argv=None, exportObject=None)\n```\n  * argv为输入参数列表，可将原本命令行中调用传入的参数，以字符串数组形式传入\n  * exportObject意为：当一个媒体项目完成输出时，调用此对象的函数 `exportObject.onOneItemTorcped(targetDir, curMediaName, tmdbIdStr, tmdbCat)` 进行处理。一个目录可能会多次输出。\n  * torcp原来以命令行方式运行时，仍然保持不变\n  \n* 示例\n```py\nfrom torcp import torcp\n\nclass TorcpExportObj:\n\tdef onOneItemTorcped(self, targetDir, mediaName, tmdbIdStr, tmdbCat):\n\t\tprint(targetDir, mediaName, tmdbIdStr, tmdbCat)\n\n\nif __name__ == '__main__':\n\targv = [\"~/torccf/test\", \"-d\", \"~/torccf/result\", \"--tmdb-api-key\", \"your_tmdb_api_key\", \"--emby-bracket\", \"--extract-bdmv\", \"--tmdb-origin-name\"]\n\teo = TorcpExportObj()\n\to = Torcp()\n\to.main(argv, eo)\n```\n\n\n## 13 类型，语言，地区分目录\n* 地区 `--sep-area` 与 语言 `--lang` 只选其一，`--lang` 优先（有lang了就不看area）\n* 如果地区没有取到，则会取语言代码；语言是小写，地区是大写；\n* 类型 `--genre` 独立在 地区/语言之外，如果指定了类型，只有没指定的部分会分 地区/地区\n* `--genre` 可设的类型值与 `--tmdb-lang` 所设语言相关，中文有：\n```\n动作 冒险 动画 喜剧 犯罪 纪录 剧情 家庭 奇幻 历史 恐怖 \n音乐 悬疑 爱情 科幻 电视电影 惊悚 战争 西部\n```\n* 英文有：\n```\nAction Adventure Animation Comedy Crime Documentary Drama Family\nFantasy History Horror Music Mystery Romance Science Fiction TV Movie\nThriller War Western\n```\n\n---\n## Acknowledgement \n * [@leishi1313](https://github.com/leishi1313)\n * @Aruba  @ozz\n * @NishinoKana @Esc @Hangsijing @Inu",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ccf-2012/torcp",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torcp",
    "package_url": "https://pypi.org/project/torcp/",
    "platform": null,
    "project_url": "https://pypi.org/project/torcp/",
    "project_urls": {
      "Documentation": "https://github.com/ccf-2012/torcp/blob/main/README.md",
      "Homepage": "https://github.com/ccf-2012/torcp",
      "Source": "https://github.com/ccf-2012/torcp",
      "Tracker": "https://github.com/ccf-2012/torcp/issues"
    },
    "release_url": "https://pypi.org/project/torcp/0.67/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A script to rename and copy downloaded files to a target in Emby-happy way",
    "version": "0.67",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17359502,
  "releases": {
    "0.42": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e260d094b7afa0d707f69293388038424307a3d6599803620e604acb192f10c",
          "md5": "d936a7e9a022ce7d0320445c4aa7c8c9",
          "sha256": "c98b146f13b84d58bf05d044a930665e15645884363a7944ab93063977414f59"
        },
        "downloads": -1,
        "filename": "torcp-0.42.tar.gz",
        "has_sig": false,
        "md5_digest": "d936a7e9a022ce7d0320445c4aa7c8c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1148137,
        "upload_time": "2022-04-21T04:55:20",
        "upload_time_iso_8601": "2022-04-21T04:55:20.739195Z",
        "url": "https://files.pythonhosted.org/packages/0e/26/0d094b7afa0d707f69293388038424307a3d6599803620e604acb192f10c/torcp-0.42.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.43": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b147094d0f0f2f7361e1c324384f5cd5288af494bd5af16f5f8814a0befccdc6",
          "md5": "ef014b2dfc5502c2eb60e9a455a47d50",
          "sha256": "22bd66c2892eb3115bd6b1c8bb2e6d005d5bb80928a59d1e8473794ea30029e1"
        },
        "downloads": -1,
        "filename": "torcp-0.43.tar.gz",
        "has_sig": false,
        "md5_digest": "ef014b2dfc5502c2eb60e9a455a47d50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42797,
        "upload_time": "2022-04-21T05:23:18",
        "upload_time_iso_8601": "2022-04-21T05:23:18.090031Z",
        "url": "https://files.pythonhosted.org/packages/b1/47/094d0f0f2f7361e1c324384f5cd5288af494bd5af16f5f8814a0befccdc6/torcp-0.43.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.44": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "873d8b87c4ecc6d7c7d9c121c7890db34c31276fc9780336e170fa6098200aa4",
          "md5": "a4455b9991898714695e9d73994d59b9",
          "sha256": "262a06cdfa747263f03d80068d748d59b3fb2f0b757fb666667681ba60181122"
        },
        "downloads": -1,
        "filename": "torcp-0.44.tar.gz",
        "has_sig": false,
        "md5_digest": "a4455b9991898714695e9d73994d59b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43791,
        "upload_time": "2022-04-30T05:59:32",
        "upload_time_iso_8601": "2022-04-30T05:59:32.093849Z",
        "url": "https://files.pythonhosted.org/packages/87/3d/8b87c4ecc6d7c7d9c121c7890db34c31276fc9780336e170fa6098200aa4/torcp-0.44.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.45": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aaa9bb688c4bca9f67a6f8a932ed913868117a6725fc19e039f746261dfc65b6",
          "md5": "8da2bc4b893b7fade3ac015ab97c27c0",
          "sha256": "f44860f5332cd3ec0bbeed37e003ef4681e9ed0d59fbef4103ce38f850bbd444"
        },
        "downloads": -1,
        "filename": "torcp-0.45.tar.gz",
        "has_sig": false,
        "md5_digest": "8da2bc4b893b7fade3ac015ab97c27c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43963,
        "upload_time": "2022-05-02T00:37:07",
        "upload_time_iso_8601": "2022-05-02T00:37:07.455176Z",
        "url": "https://files.pythonhosted.org/packages/aa/a9/bb688c4bca9f67a6f8a932ed913868117a6725fc19e039f746261dfc65b6/torcp-0.45.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.46": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5ed21cfa8857e2f16c7532a65ba2b48e25502c0549df8e2a906fbebefca4e1d",
          "md5": "917855c56a284833186a519856fba6ed",
          "sha256": "2a94d3d00cbe387ba7a699ff55ec946d418683b525e9063732aa5056dbbe997c"
        },
        "downloads": -1,
        "filename": "torcp-0.46.tar.gz",
        "has_sig": false,
        "md5_digest": "917855c56a284833186a519856fba6ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43988,
        "upload_time": "2022-05-12T02:18:52",
        "upload_time_iso_8601": "2022-05-12T02:18:52.148052Z",
        "url": "https://files.pythonhosted.org/packages/a5/ed/21cfa8857e2f16c7532a65ba2b48e25502c0549df8e2a906fbebefca4e1d/torcp-0.46.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.47": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efadd71a4c4f6a037dc6d930fe85f38013c25d0a0fb65115cb5bddf1df5bc6ff",
          "md5": "97b0d854989fa7c505b74a46a546f28e",
          "sha256": "fc16a6491199a999c1a12c234392c1271857734cd7552f9fad64ca91dec1c939"
        },
        "downloads": -1,
        "filename": "torcp-0.47.tar.gz",
        "has_sig": false,
        "md5_digest": "97b0d854989fa7c505b74a46a546f28e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45810,
        "upload_time": "2022-08-22T12:09:02",
        "upload_time_iso_8601": "2022-08-22T12:09:02.682969Z",
        "url": "https://files.pythonhosted.org/packages/ef/ad/d71a4c4f6a037dc6d930fe85f38013c25d0a0fb65115cb5bddf1df5bc6ff/torcp-0.47.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.48": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52986f09da020b026df31e358e3fbeda645355b5d765700377b02a3b9956528e",
          "md5": "1dddfd4e70632dc61591a98f6fc28508",
          "sha256": "a76724cbdfb75798eb232192ce8da0e9fc7e7bf3972e016d0426e1d3510b5a30"
        },
        "downloads": -1,
        "filename": "torcp-0.48.tar.gz",
        "has_sig": false,
        "md5_digest": "1dddfd4e70632dc61591a98f6fc28508",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48425,
        "upload_time": "2022-09-17T01:07:49",
        "upload_time_iso_8601": "2022-09-17T01:07:49.718285Z",
        "url": "https://files.pythonhosted.org/packages/52/98/6f09da020b026df31e358e3fbeda645355b5d765700377b02a3b9956528e/torcp-0.48.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.49": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69e639e489d3f6cbf5970f21fe5c8b7a68871117919383b7427c92f89a2f7beb",
          "md5": "9cce7b545e4ac78653686927e67eee00",
          "sha256": "93444eade8a49acde4d3b4032a02e51c315cd038bf564b55e99338bb8e0de66d"
        },
        "downloads": -1,
        "filename": "torcp-0.49.tar.gz",
        "has_sig": false,
        "md5_digest": "9cce7b545e4ac78653686927e67eee00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48607,
        "upload_time": "2022-10-08T15:17:52",
        "upload_time_iso_8601": "2022-10-08T15:17:52.440633Z",
        "url": "https://files.pythonhosted.org/packages/69/e6/39e489d3f6cbf5970f21fe5c8b7a68871117919383b7427c92f89a2f7beb/torcp-0.49.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.50": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86fd96aafe775e20943b61017afe50cd6eeed7514ffd36b49c15eeb149651cb2",
          "md5": "ca3ab7b4e733ad8410e451ecc72d5fbc",
          "sha256": "4e0aeeb578e2b7497032e2499a1046a0c2b46b664f92ecaa0dc79e9fe4dcbf13"
        },
        "downloads": -1,
        "filename": "torcp-0.50.tar.gz",
        "has_sig": false,
        "md5_digest": "ca3ab7b4e733ad8410e451ecc72d5fbc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48672,
        "upload_time": "2022-10-10T02:41:07",
        "upload_time_iso_8601": "2022-10-10T02:41:07.758015Z",
        "url": "https://files.pythonhosted.org/packages/86/fd/96aafe775e20943b61017afe50cd6eeed7514ffd36b49c15eeb149651cb2/torcp-0.50.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.51": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35492d7e7272afa33b95c111a51e6dd64d990f306f1a6169022db70606a3f8d0",
          "md5": "b423102991b26ee19a1203bebabbdbc7",
          "sha256": "aa464974fb585803d0b2981b9b1a7edd04ad65085ab1c32e307abe72499d7a12"
        },
        "downloads": -1,
        "filename": "torcp-0.51.tar.gz",
        "has_sig": false,
        "md5_digest": "b423102991b26ee19a1203bebabbdbc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49533,
        "upload_time": "2022-11-04T12:54:52",
        "upload_time_iso_8601": "2022-11-04T12:54:52.708820Z",
        "url": "https://files.pythonhosted.org/packages/35/49/2d7e7272afa33b95c111a51e6dd64d990f306f1a6169022db70606a3f8d0/torcp-0.51.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.52": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42cb67d01509cf5d1dafa9281b9ab11d706247d9eb0a0c2cafb1b68a4c1ba484",
          "md5": "7f5d6c4d90597f7b4dbc3f9094b0c13c",
          "sha256": "8fefe7662a18da90f1c724e483f32f86ad7ab9fb3b5c27eae30bb5f52d1a080d"
        },
        "downloads": -1,
        "filename": "torcp-0.52.tar.gz",
        "has_sig": false,
        "md5_digest": "7f5d6c4d90597f7b4dbc3f9094b0c13c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49916,
        "upload_time": "2022-11-14T09:52:21",
        "upload_time_iso_8601": "2022-11-14T09:52:21.754164Z",
        "url": "https://files.pythonhosted.org/packages/42/cb/67d01509cf5d1dafa9281b9ab11d706247d9eb0a0c2cafb1b68a4c1ba484/torcp-0.52.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.53": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70f1cd629dbf2402a8cfc6e7465115bc6d522ff0e5c0b49d472d51efbc7d6d85",
          "md5": "37198d975c17403c72b70f4fdda0f75e",
          "sha256": "e7bea76e1c458b6b00ee7cfb55c1d2f40788554cca4067751918e17ba8f60d23"
        },
        "downloads": -1,
        "filename": "torcp-0.53.tar.gz",
        "has_sig": false,
        "md5_digest": "37198d975c17403c72b70f4fdda0f75e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 53708,
        "upload_time": "2022-12-14T04:36:47",
        "upload_time_iso_8601": "2022-12-14T04:36:47.309757Z",
        "url": "https://files.pythonhosted.org/packages/70/f1/cd629dbf2402a8cfc6e7465115bc6d522ff0e5c0b49d472d51efbc7d6d85/torcp-0.53.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.54": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a749bc72eb80a78efdddfd1dc0b2bbc4b352553ac1be9f8e0f193d3cadd8fb83",
          "md5": "46d3d6dd857020d1339e453daae8a4e6",
          "sha256": "22ea9884cc78e4033db034266a9f1372ee4ae66ab37f90fc33d878dd0047bfab"
        },
        "downloads": -1,
        "filename": "torcp-0.54.tar.gz",
        "has_sig": false,
        "md5_digest": "46d3d6dd857020d1339e453daae8a4e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 53716,
        "upload_time": "2022-12-15T10:49:55",
        "upload_time_iso_8601": "2022-12-15T10:49:55.151699Z",
        "url": "https://files.pythonhosted.org/packages/a7/49/bc72eb80a78efdddfd1dc0b2bbc4b352553ac1be9f8e0f193d3cadd8fb83/torcp-0.54.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.55": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8395e6618bbd573cf68e212097314d531c1d510b5c957a40f12fb886fa155835",
          "md5": "ef878d73062a6ce366c732080c45fac1",
          "sha256": "fbac57fa98faebff5143d4b608dde0d3466c5e2d5141d1c912758f1fcd22fdc1"
        },
        "downloads": -1,
        "filename": "torcp-0.55.tar.gz",
        "has_sig": false,
        "md5_digest": "ef878d73062a6ce366c732080c45fac1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 57136,
        "upload_time": "2023-01-02T11:12:20",
        "upload_time_iso_8601": "2023-01-02T11:12:20.184654Z",
        "url": "https://files.pythonhosted.org/packages/83/95/e6618bbd573cf68e212097314d531c1d510b5c957a40f12fb886fa155835/torcp-0.55.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.56": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d5384fd20f5e5b79543ed26d9222400503a3482724c30206260008d55a6c3dd",
          "md5": "8ac9b862998df0c52925dc921f4a66f1",
          "sha256": "a2a0e1df57b3ed3a843f288a7871b788db144c6187fdbd67ba8d23418cb2ddf4"
        },
        "downloads": -1,
        "filename": "torcp-0.56.tar.gz",
        "has_sig": false,
        "md5_digest": "8ac9b862998df0c52925dc921f4a66f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 58615,
        "upload_time": "2023-01-14T03:03:43",
        "upload_time_iso_8601": "2023-01-14T03:03:43.476230Z",
        "url": "https://files.pythonhosted.org/packages/8d/53/84fd20f5e5b79543ed26d9222400503a3482724c30206260008d55a6c3dd/torcp-0.56.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.57": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86c7f15857aeea6ce51818bc805621821e774a2f6fb82593dc084b06e6a5372d",
          "md5": "cd1096ff02b37980f313279b7fc2fa7d",
          "sha256": "6642be9e8043731f20c253a561939b3d2eed790a9bf3b4cb5de9f0c0f692a028"
        },
        "downloads": -1,
        "filename": "torcp-0.57.tar.gz",
        "has_sig": false,
        "md5_digest": "cd1096ff02b37980f313279b7fc2fa7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 58636,
        "upload_time": "2023-01-25T15:30:11",
        "upload_time_iso_8601": "2023-01-25T15:30:11.259188Z",
        "url": "https://files.pythonhosted.org/packages/86/c7/f15857aeea6ce51818bc805621821e774a2f6fb82593dc084b06e6a5372d/torcp-0.57.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.58": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a8acd56e776f807a4823e41cc9ee249373dd3e77653a2da9ff90724bfbe6ef2",
          "md5": "86d136e6ed8766425c42fb7f5515391c",
          "sha256": "fc12e5f8a9c57f6b8b746d267422c3b7c1987df424e771b4b7058c44095c06d4"
        },
        "downloads": -1,
        "filename": "torcp-0.58.tar.gz",
        "has_sig": false,
        "md5_digest": "86d136e6ed8766425c42fb7f5515391c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 60187,
        "upload_time": "2023-01-27T09:02:54",
        "upload_time_iso_8601": "2023-01-27T09:02:54.362583Z",
        "url": "https://files.pythonhosted.org/packages/9a/8a/cd56e776f807a4823e41cc9ee249373dd3e77653a2da9ff90724bfbe6ef2/torcp-0.58.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.59": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0906d2401501df9a0c1791be94e3f6f66ec1080e5cfa3c68a2a7accfaa7549f0",
          "md5": "8523e4233234f7c4bc2d965450be7951",
          "sha256": "9296299dc0d7323d59a297e304a1339d995e966ba079c068225f66ed2131a140"
        },
        "downloads": -1,
        "filename": "torcp-0.59.tar.gz",
        "has_sig": false,
        "md5_digest": "8523e4233234f7c4bc2d965450be7951",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 60224,
        "upload_time": "2023-02-02T14:08:54",
        "upload_time_iso_8601": "2023-02-02T14:08:54.025302Z",
        "url": "https://files.pythonhosted.org/packages/09/06/d2401501df9a0c1791be94e3f6f66ec1080e5cfa3c68a2a7accfaa7549f0/torcp-0.59.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.60": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6366702d673480d08ceec821b4d1542579e4147e1499eaa9f422173175ed8367",
          "md5": "734e0859ba687b3b0bf706750e42ff56",
          "sha256": "52a493c4a2df51dbd2820ec7143551c8060a748c33a87dab99c602d1b04b631f"
        },
        "downloads": -1,
        "filename": "torcp-0.60.tar.gz",
        "has_sig": false,
        "md5_digest": "734e0859ba687b3b0bf706750e42ff56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 61414,
        "upload_time": "2023-02-04T03:27:02",
        "upload_time_iso_8601": "2023-02-04T03:27:02.788656Z",
        "url": "https://files.pythonhosted.org/packages/63/66/702d673480d08ceec821b4d1542579e4147e1499eaa9f422173175ed8367/torcp-0.60.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.61": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25fa97cd582ba24cbf1d1763cd4acad18e438db885fdb3dea702251e6cd61ac4",
          "md5": "36cab5383f9c99b63b999cc620b44f51",
          "sha256": "8883ab62e9bbcbdabcc24245df6d6b0783138ba54c54958296d8e8549e1efb91"
        },
        "downloads": -1,
        "filename": "torcp-0.61.tar.gz",
        "has_sig": false,
        "md5_digest": "36cab5383f9c99b63b999cc620b44f51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 61502,
        "upload_time": "2023-02-06T03:04:30",
        "upload_time_iso_8601": "2023-02-06T03:04:30.303076Z",
        "url": "https://files.pythonhosted.org/packages/25/fa/97cd582ba24cbf1d1763cd4acad18e438db885fdb3dea702251e6cd61ac4/torcp-0.61.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.62": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81a87f73a813eacab147da9ac393f30ac1cd1b7de442a0f82fa1645a796b7446",
          "md5": "d438ad0c3bcaa1fb4ae9a2991e41f7be",
          "sha256": "e43be3512a17c63860bdd6c011d82a7bd44b82ed4e4399a1e703f76b4f8c56e0"
        },
        "downloads": -1,
        "filename": "torcp-0.62.tar.gz",
        "has_sig": false,
        "md5_digest": "d438ad0c3bcaa1fb4ae9a2991e41f7be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 63178,
        "upload_time": "2023-02-09T02:27:01",
        "upload_time_iso_8601": "2023-02-09T02:27:01.360116Z",
        "url": "https://files.pythonhosted.org/packages/81/a8/7f73a813eacab147da9ac393f30ac1cd1b7de442a0f82fa1645a796b7446/torcp-0.62.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.63": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cf78614aa8b0be0e2d31eb23164fad2d7fccfa0681a3058a8c9ecfbfa23ef3b",
          "md5": "c14109efec222de6f21f8b729bd08bb6",
          "sha256": "22a6372c361b44d782a84f994f1fa7bd9e550378c6c5bd8b6ee240d688570217"
        },
        "downloads": -1,
        "filename": "torcp-0.63.tar.gz",
        "has_sig": false,
        "md5_digest": "c14109efec222de6f21f8b729bd08bb6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 63340,
        "upload_time": "2023-02-09T06:45:47",
        "upload_time_iso_8601": "2023-02-09T06:45:47.943464Z",
        "url": "https://files.pythonhosted.org/packages/0c/f7/8614aa8b0be0e2d31eb23164fad2d7fccfa0681a3058a8c9ecfbfa23ef3b/torcp-0.63.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.64": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2a3af21b71258fce20e0660eaa82501933dc7a972dd7a3fa6c8494ad58e411a",
          "md5": "2f21ed9c281e418f3831898dfc8cf8bf",
          "sha256": "4aeee75efc125cd65ba9b554bdd5dfe896cbb26deffed3dccfd4bbec0ec6471d"
        },
        "downloads": -1,
        "filename": "torcp-0.64.tar.gz",
        "has_sig": false,
        "md5_digest": "2f21ed9c281e418f3831898dfc8cf8bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 63321,
        "upload_time": "2023-02-09T07:08:27",
        "upload_time_iso_8601": "2023-02-09T07:08:27.649025Z",
        "url": "https://files.pythonhosted.org/packages/f2/a3/af21b71258fce20e0660eaa82501933dc7a972dd7a3fa6c8494ad58e411a/torcp-0.64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.65": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb263f52e20a83e7729eb2c65ab949583b19607549c87c05ce2e4bb08917f564",
          "md5": "adc245af3c407e2572cc94845806da57",
          "sha256": "c8fc2be2e9c9124237ab435b0e7438e1b624de1c2f88513312bd3108c1e690c3"
        },
        "downloads": -1,
        "filename": "torcp-0.65.tar.gz",
        "has_sig": false,
        "md5_digest": "adc245af3c407e2572cc94845806da57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 63308,
        "upload_time": "2023-02-13T02:41:38",
        "upload_time_iso_8601": "2023-02-13T02:41:38.683469Z",
        "url": "https://files.pythonhosted.org/packages/fb/26/3f52e20a83e7729eb2c65ab949583b19607549c87c05ce2e4bb08917f564/torcp-0.65.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.67": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc4d9bd245bdec03bba34b8db4ffd6d5adf933107b287c88e6bd97efa9a0abb0",
          "md5": "3943cab0a2f85ef0435c2799980886db",
          "sha256": "f5843cf583f225e1d9e526eba05548c6e14a43c2bbcafdfe7d4a1f5bc466bd3c"
        },
        "downloads": -1,
        "filename": "torcp-0.67.tar.gz",
        "has_sig": false,
        "md5_digest": "3943cab0a2f85ef0435c2799980886db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 63646,
        "upload_time": "2023-03-20T05:17:19",
        "upload_time_iso_8601": "2023-03-20T05:17:19.178656Z",
        "url": "https://files.pythonhosted.org/packages/cc/4d/9bd245bdec03bba34b8db4ffd6d5adf933107b287c88e6bd97efa9a0abb0/torcp-0.67.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc4d9bd245bdec03bba34b8db4ffd6d5adf933107b287c88e6bd97efa9a0abb0",
        "md5": "3943cab0a2f85ef0435c2799980886db",
        "sha256": "f5843cf583f225e1d9e526eba05548c6e14a43c2bbcafdfe7d4a1f5bc466bd3c"
      },
      "downloads": -1,
      "filename": "torcp-0.67.tar.gz",
      "has_sig": false,
      "md5_digest": "3943cab0a2f85ef0435c2799980886db",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 63646,
      "upload_time": "2023-03-20T05:17:19",
      "upload_time_iso_8601": "2023-03-20T05:17:19.178656Z",
      "url": "https://files.pythonhosted.org/packages/cc/4d/9bd245bdec03bba34b8db4ffd6d5adf933107b287c88e6bd97efa9a0abb0/torcp-0.67.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}