{
  "info": {
    "author": "M. Rossi",
    "author_email": "marco.rossi@cern.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# DUNEdn\n\n[![arxiv](https://img.shields.io/badge/arXiv-hep--ph%2F2103.01596-%23B31B1B.svg)](https://arxiv.org/abs/2103.01596)\n[![DOI](https://zenodo.org/badge/248536693.svg)](https://zenodo.org/badge/latestdoi/248536693)\n\n![pytest](https://github.com/N3PDF/pdfflow/workflows/pytest/badge.svg)\n\nIf you use this software please cite this [paper](https://doi.org/10.1007/s41781-021-00077-9)\n\n```bibtex\n@article{dunedn,\nauthor={Rossi, Marco\nand Vallecorsa, Sofia},\ntitle={Deep Learning Strategies for ProtoDUNE Raw Data Denoising},\njournal={Computing and Software for Big Science},\nyear={2022},\nmonth={Jan},\nday={07},\nvolume={6},\nnumber={1},\nnumpages={9},\nissn={2510-2044},\ndoi={10.1007/s41781-021-00077-9},\nurl={https://doi.org/10.1007/s41781-021-00077-9}\n}\n```\n\nDUNEdn is a denoising algorithm for ProtoDUNE-SP raw data with Neural Networks.\n\n## Installation\n\nThe package can be installed with Python's pip package manager:\n\n```bash\ngit clone https://github.com/marcorossi5/DUNEdn.git\ncd DUNEdn\npip install .\n```\n\nThis process will copy the DUNEdn program to your environment python path.\n\n### Note\n\nThe [saved_models](saved_models) directory contains the checkpoints to reproduce\nthe results presented in [arXiv:2103.01596](https://arxiv.org/abs/2103.01596).  \nSince some of the saved models files are quite large (~100 MB), they are uploaded\nvia [git-lfs](https://git-lfs.github.com/). when cloning the repo, it is possible\nto download pointers to those large files rather than the whole binaries. This can\nbe achieved adding the flag `--config lfs.fetchexclude=\"*.pth*\"` to the `git clone`\ncommand above.\n\n### Requirements\n\nDUNEdn requires the following packages:\n\n- python3\n- numpy\n- pytorch\n- torchvision\n- matplotlib\n- hyperopt\n\n## Running the code\n\nIn order to launch the code\n\n```bash\ndunedn <subcommand> [options]\n```\n\nValid subcommands are: `preprocess|train|inference`.  \nUse `dunedn <subcommand> --help` to print the correspondent help message.  \nFor example, the help message for `train` subcommand is:\n\n```bash\n$ dunedn train --help\nusage: dunedn train [-h] [--output OUTPUT] [--force] configcard\n\nTrain model loading settings from configcard.\n\npositional arguments:\n  configcard       yaml configcard path\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --output OUTPUT  output folder\n  --force          overwrite existing files if present\n```\n\n### Configuration cards\n\nModels' parameter settings are stored in configcards. The [configcards](configcards)\nfolder contains some examples. These can be extended providing the path to user\ndefined cards directly to the command line interface.\n\nSetting the `DUNEDN_SEARCH_PATH` environment variable it is possible to let DUNEdn\nlooking for configcards into different directories automatically. More on the\nsearch behavior can be found at the `get_configcard_path` function's docstring\nin the [utils/ultis.py](src/dunedn/utils/utils.py) file.\n\n### Preprocess a dataset\n\nAt first, a dataset directory should have the following structure:\n\n```text\ndataset directory tree structure:\ndataset_dir\n  |-- train\n  |    |--- evts\n  |-- val\n  |    |--- evts\n  |-- test\n  |    |--- evts\n```\n\nwhere each `evts` folder contains a collection of ProtoDUNE events stored as raw\ndigits (numpy array format).\n\nIt is possible to generate the correspondent dataset to train an USCG or a GCNN\nnetwork with the command:\n\n```bash\ndunedn preprocess <configcard.yaml> --dir_name <dataset directory>\n```\n\nThis will modify the dataset directory tree in the following way:\n\n```txt\ndataset directory tree structure:\ndataset_dir\n  |-- train\n  |    |--- evts\n  |    |-- planes (preprocess product)\n  |    |-- crops (preprocess product)\n  |-- val\n  |    |--- evts\n  |    |--- planes (preprocess product)\n  |-- test\n  |    |--- evts\n  |    |--- planes (preprocess product)\n```\n\n### Training a model\n\nAfter specifying parameters inside a configuration card, leverage DUNEdn to train\nthe correspondent model with:\n\n```bash\ndunedn train <configcard.yaml>\n```\n\nThe output directory is set by default to `output`. Optionally, the\n`DUNEDN_OUTPUT_PATH` environment variable could be set to override this choice.\n\n### Inference\n\n```bash\ndunedn inference -i <input.npy> -o <output.npy> -m <modeltype> [--model_path <checkpoint.pth>]\n```\n\nDUNEdn inference takes the `input.npy` array and forwards it to the desired model\n`modeltype`. The output array is saved to `output.npy`.\n\nIf a checkpoint directory path is given with the optional `--model_path` flag, a\nsaved model checkpoint could be loaded for inference.  \nThe checkpoint directory should have the following structure:\n\n```text\nmodel_path\n    |-- collection\n    |       |-- <ckpt directory name>_dn_collection.pth\n    |-- induction\n    |       |-- <ckpt directory name>_dn_induction.pth\n```\n\nOn the other hand, if `--model_path` is not specified, an un-trained network is issued.\n\n### Benchmark\n\nThe paper results can be reproduced through the\n[compute_denoising_performance.py](benchmarks/compute_denoising_performance.py) benchmark.  \nPlease, see the script's docstring for further information.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/marcorossi5/DUNEdn/archive/refs/tags/1.0.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marcorossi5/DUNEdn.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dunedn",
    "package_url": "https://pypi.org/project/dunedn/",
    "platform": "",
    "project_url": "https://pypi.org/project/dunedn/",
    "project_urls": {
      "Download": "https://github.com/marcorossi5/DUNEdn/archive/refs/tags/1.0.0.tar.gz",
      "Homepage": "https://github.com/marcorossi5/DUNEdn.git"
    },
    "release_url": "https://pypi.org/project/dunedn/1.0.1/",
    "requires_dist": [
      "numpy",
      "pyyaml",
      "torch",
      "torchvision",
      "matplotlib",
      "hyperopt"
    ],
    "requires_python": ">=3.6",
    "summary": "ProtoDUNE raw data denoising with DL",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12553513,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3fe261cf29882f575780c390648b589e1d84316e455f88d8bbd030644c04a8f",
          "md5": "af3313b17069b7cd7d6f3e3f3629aaef",
          "sha256": "412ca4d8d9481b65e3ce20b008e578f13a74854fd03c1eb1b5b12a75118a1ef7"
        },
        "downloads": -1,
        "filename": "dunedn-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af3313b17069b7cd7d6f3e3f3629aaef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 44197,
        "upload_time": "2022-01-12T18:12:08",
        "upload_time_iso_8601": "2022-01-12T18:12:08.932703Z",
        "url": "https://files.pythonhosted.org/packages/b3/fe/261cf29882f575780c390648b589e1d84316e455f88d8bbd030644c04a8f/dunedn-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d845b157e92e43341c1ece3f5be634d0927798e791cda95a5250cbc4d5344da2",
          "md5": "f56fae10c8deaba08e34cc6930cf8cad",
          "sha256": "84c5e86236b89995c7f34ee6e0a9ffbdb891aa5ff699898813e967b9b16fc19a"
        },
        "downloads": -1,
        "filename": "dunedn-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f56fae10c8deaba08e34cc6930cf8cad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39756,
        "upload_time": "2022-01-12T18:12:10",
        "upload_time_iso_8601": "2022-01-12T18:12:10.950571Z",
        "url": "https://files.pythonhosted.org/packages/d8/45/b157e92e43341c1ece3f5be634d0927798e791cda95a5250cbc4d5344da2/dunedn-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3fe261cf29882f575780c390648b589e1d84316e455f88d8bbd030644c04a8f",
        "md5": "af3313b17069b7cd7d6f3e3f3629aaef",
        "sha256": "412ca4d8d9481b65e3ce20b008e578f13a74854fd03c1eb1b5b12a75118a1ef7"
      },
      "downloads": -1,
      "filename": "dunedn-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "af3313b17069b7cd7d6f3e3f3629aaef",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 44197,
      "upload_time": "2022-01-12T18:12:08",
      "upload_time_iso_8601": "2022-01-12T18:12:08.932703Z",
      "url": "https://files.pythonhosted.org/packages/b3/fe/261cf29882f575780c390648b589e1d84316e455f88d8bbd030644c04a8f/dunedn-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d845b157e92e43341c1ece3f5be634d0927798e791cda95a5250cbc4d5344da2",
        "md5": "f56fae10c8deaba08e34cc6930cf8cad",
        "sha256": "84c5e86236b89995c7f34ee6e0a9ffbdb891aa5ff699898813e967b9b16fc19a"
      },
      "downloads": -1,
      "filename": "dunedn-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f56fae10c8deaba08e34cc6930cf8cad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 39756,
      "upload_time": "2022-01-12T18:12:10",
      "upload_time_iso_8601": "2022-01-12T18:12:10.950571Z",
      "url": "https://files.pythonhosted.org/packages/d8/45/b157e92e43341c1ece3f5be634d0927798e791cda95a5250cbc4d5344da2/dunedn-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}