{
  "info": {
    "author": "Georges Racinet",
    "author_email": "georges.racinet@octobus.net",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Python utilities and subsytems for Heptapod Runner\n\n[Heptapod Runner](https://foss.heptapod.net/heptapod/heptapod-runner)\nis the fork of [GitLab Runner](https://docs.gitlab.com/runner/) meant to\nwork for [Heptapod](https://heptapod.net) and [GitLab](https://gitlab.com)\ninstances.\n\nThe facilities provided in this package are part of the Heptapod Runner\nextended distribution, aiming to provide additional options. They also\nshare the same\n[source code repository](https://foss.heptapod.net/heptapod/heptapod-runner)\nwith Heptapod Runner.\n\nThey are not to be confused with the main Heptapod Runner program, which\nis a standalone programm written in Go (like GitLab Runner) that does not have\nany dependency on `python-heptapod-runner`.\n\nPython was selected for fast prototyping and because it is lingua franca in\nthe Mercurial community, but It is possible that some of facilities end up\nbeing rewritten in another language.\n\n## `heptapod-paas-runner-register`\n\nThis interactive program can be used to bootstrap the configuration for\n`heptapod-paas-runner`.\n\n**Warning:** in all cases, the configuration has to be manually completed\nafterwards.\n\nIt takes care notably of the registration against\nthe GitLab or Heptapod instance, hence playing a similar role as the\n`gitlab-runner register` command.\n\nIt will just append a new `[[runners]` section if the configuration file\nalready exists.\n\n### Caveats for configuration file creation\n\n- The parent directory of the configuration file path has to exist,\n  be writable by the system user doing the registration\n- The resulting configuration file has to be readable by\n  the system user for `heptapod-paas-runner`.\n- The parent directory of the state file path has to be writable by the\n  system user for  `heptapod-paas-runner`.\n\n\n## `heptapod-paas-runner`\n\nThe purpose of this program is to provide on-demand provisioning while\nfollowing the expected workflows of PAAS systems:\n\n- Docker hosts are provisioned only after jobs have been acquired from the\n  coordinator\n- actual job launch involves pushing a Dockerfile to a Git repository that\n  controls the Docker host.\n\n### Process and state management\n\n#### Simple invocation\n\n`heptapod-paas-runner` takes a single positional argument: the path to\nits configuration file (see the section about `heptapod-paas-runner-register`\nabove)\n\nSeveral options are available and can be displayed with:\n\n```\nheptapod-paas-runner --help\n```\n\n#### Graceful restart and state management\n\nHeptapod PAAS Runner tracks the jobs it has launched\nin order to deprovision the resources once they are finished.\n\nTo that end, it implements a graceful shutdown when `SIGTERM` is\nreceived (this is the default stop signal used by many process managers,\nincluding systemd).\n\nUpon signal reception, it will\n\n- stop acquiring new jobs\n- finish operations that can't be interrupted (launchings, decommissionings)\n- write all needed information about currently tracked jobs in a file\n- exit\n\nThis shutdown sequence is not instantaneous. A waiting time of 2 minutes\nshould be enough before resorting to more drastic means (this includes margin).\n\nWe will probably improve the interruption of the launch sequence, but we\ncan't go as far as to interrupt a currently running request, as it could\nprovision untrackable resources.\n\n#### Graceful reload\n\nCurrently not supported, a configuration change can be done without losing\ninformation with the grateful restart.\n\nIn theory, a proper reload would be less dangerous.\n\n#### Sample systemd unit file\n\n```\n[Unit]\nDescription=Heptapod PAAS Runner\nAfter=network.target\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nUser=heptapod-runner\nWorkingDirectory=/srv/heptapod-runner\nExecStart=/srv/heptapod-runner/venv/bin/heptapod-paas-runner /etc/heptapod-runner/pass-runner.toml\n# We don't need a specific ExecStop, as systemd has a cascading system\n# of defaults for the stop signal, with the\n# SIGTERM being the ultimate default.\n\nTimeoutStopSec=120\nRestart=always\nRestartSec=125\n```\n\n### The configuration file\n\n`heptapod-paas-runner` uses the same configuration file as the normal\nHeptapod (or GitLab) Runner.\n\nEach `runners` section has an `executor` entry that must be one of the PAAS\nexecutors, and consists otherwise of a mix of\n\n- specific PAAS Runner configuration, depending on the executor.\n- standard GitLab Runner configuration, forwarded to the final executor,\n  unless forced by the PAAS Runner.\n\nThe PAAS executors are currently:\n\n- `clever-docker` (see below)\n- `local-docker`, for testing and development purposes only\n\nNote: `heptapod-paas-runner` does not have a registration facility yet.\nIn practice, you can use any `heptapod-runner` or `gitlab-runner` executable\nto create a configuration file with an appropriate coordinator token,\nand then modify it for `heptapod-paas-runner`. This does not have to be done\non the actual target system.\n\n### Global configuration\n\nThe global configuration is not forwarded to the PAAS resources. It is instead\nused to tweak `heptapod-paas-runner` itself.\n\n\n- `concurrent` (default 50): same meaning as in standard GitLab Runner.\n  This is the maximum number of jobs across all defined runners.\n- `check_interval` (default 3):\n  similar meaning as in standard GitLab Runner. This is\n  the time in seconds between full coordinator polls, given that:\n  + if a coordinator grants a job, it is repolled immediately unless limits\n    on jobs are reached (number of jobs, weighted quota, and concurrent\n    provisioning)\n  + if limits on jobs are reached, the waiting time is given by\n    `job_progress_poll_interval` (see below)\n- `job_progress_interval` (default 30): time in seconds to wait between\n   coordinator requests to check if launched jobs are finished.\n- `quota_computation` (required): allows to set the weighted quota by taking\n  a runner section, one of its associated flavor and a number of job as\n  reference. Example:\n\n  ```\n  [quota_computation]\n    reference_runner = \"my-runner\"\n    reference_flavor = \"M\"\n    reference_jobs_count = 4\n\n  [[runners]]\n    name = \"my-runner\"\n    url = \"https://heptapod.example\"\n    ...\n  ```\n  This sets the quota to be the weight of 4 jobs with flavor M of the\n  `my-runner` runner defined afterwards.\n- `state_file`: path of the file used to keep tracking running jobs after\n  a graceful restart.\n- `paas_max_concurrent_provisioning (default 10)`: maximum number of\n  concurrent jobs currently queued at the PAAS infrastructure that haven't\n  been acknowledged as really running by their coordinators yet.\n\n\n### Global footprint: the weight system\n\nSome `heptapod-paas-runner` executors have the capability to use\ndifferent resources (\"flavors\") according to job details.\nThe job details are usually available only once the job is acquired,\nwhich can currently not be reverted.\n\nA concurrency control system accounting only for the number of jobs would\nhence need to cripple its capability to run small jobs because of the\npossibility to run large jobs. This is what happened before the introduction\nof the weight system.\n\nThe weights used by the various configured `runners` are simply summed up.\nBeware that the weights of different executors are usually very much not\ncomparable, hence it is a very bad idea to mix several executor *types*\nin a single `heptapod-paas-runner` service.\nFor instance, at the time of this writing,\nthe `clever-docker` executor has weights ranging roughly from 2 to 75,\nwhereas an executor not implementing weights would have all values equal to 1.\n\nIt is perfectly admissible, and even recommended, to smooth out those limits\nto put several `runners` in a single service, as long as they all have the\nsame `executor`. The typical use-case for this would be to perform CI for\nseveral Heptapod (or pure upstream GitLab) instances.\n\n### Common properties of the Docker executors\n\n- All standard features (images, services) are supporteed\n\n#### Image management and Dependency Proxy\n\nWe don't currently have the means to reuse PAAS resources, hence all jobs\nstart with fresh downloads of all necessary Docker images.\n\nPartly because of this, the Heptapod PAAS Runner uses the Dependency Proxy\nautomatically, diverging in that from the standard GitLab Runner Docker\nexecutor.\n\nPractical consequences for job authors:\n\n- do *not* disable the Dependency Proxy for your Group\n- if a service has no alias defined in the job, it will be accessible with\n  only one of [the two syntaxes normally supported by GitLab Runner](https://docs.gitlab.com/ce/ci/services/#accessing-the-services):\n\n  + if the service image is defined as `postgres:13`, the service container\n    can be accessed as usual as `postgres`\n  + if the image is defined as `tutum/wordpress`, the service\n    container can be accessed as `tutum-wordpress`, but *not*\n    `tutum__wordpress`\n\n\n### The `clever-docker` executor\n\nThis runs the job in [Clever Cloud](https://clever-cloud.com).\n\nClever Cloud is also the company hosting the [public Heptapod instance for\nFree and Open Source Software](https://foss.heptapod.net), where Heptapod\nis self-hosted and the [commercial Heptapod instance](https://heptapod.host).\n\nThere are two modes of operation: single organization and multi-tenant.\n\n#### Common configuration\n\nRequired:\n\n- `executor`: `clever-docker`\n- `cc_extra_env` subsection. Can be used to pass extra environment to\n  the sub-runner spawned on the provisioned resource. Currently\n  `CC_ENABLE_HEPTAPOD_RUNNER = \"true\"` is necessary\n\nOptional:\n\n- `cc_api_url` (defaults to `https://api.clever-cloud.com/v2`):\n  Clever Cloud base API URL\n- `cc_zone` (defaults to `par`): any zone can be in theory used. In practice,\n  the zone better be close to the GitLab / Heptapod instance (the coordinator).\n- `cc_default_flavor` (defaults to `M`): the flavor (size) of instances that\n  will be launched on Clever Cloud if not specified by the job.\n- `[job_trace_watch]` (strongly recommended): this section enables watching\n  the user-level job log (internally called \"the job trace\") to limit the\n  number of concurrent jobs being in provisioning and not fully started yet,\n  and to provide quicker user feedback in case of problems.\n  Items are:\n  + `token`: sadly, has to be an Administrator token with `read-api` scope.\n    A future version of Heptapod should be able to avoid that, but probably not\n    upstream GitLab\n  + `timout_seconds` (default 300): the time after which the job launch\n    is considered to have failed.\n  + `poll_step` (default 10): the time in seconds between checks of the\n    job trace\n- `cc_deployment_repo_timeout` (default 20): maximum time in seconds to wait\n  for the Clever Cloud's deployment Git repository to be ready\n- `cc_deployment_repo_wait_step` (default 2): time between requests\n   to assess if the Clever Cloud's deployment Git repository is ready\n\n#### Running for a single Clever Cloud Organization\n\nPut these in the Runner configuration\n\n- `cc_multi_tenant`: unspecified or `false`.\n- `cc_orga_id`: specify the id of your Clever Cloud Organization, as seen,\n  e.g, in its Overview page in the Clever Cloud console.\n- `cc_token`: token for the Clever Cloud API, with enough rights to create,\n  deploy and delete applications and instances\n\nIt doesn't matter whether the Runner is tied to specific Projects, a Group or\na whole GitLab / Heptapod instance: all resources will be attached\n(and billed) to the specified Organization.\n\nThis is a good fit for a self-hosted Heptapod instance.\n\nFull example:\n\n```toml\n\nstate_file = \"/srv/heptapod-runner/paas-runner-state.json\"\n\n[quota_computation]\n  reference_runner = \"clever-cloud\"\n  reference_flavor = \"3XL\"\n  reference_jobs_count = 8\n\n[[runners]]\n  name = \"clever-cloud\"\n  url = \"https://heptapod.example.com\"\n  token = \"D3adNQYu8OCjkYDbwDaG\"\n  executor = \"clever-docker\"\n\n  cc_orga_id = \"orga_07cf2ef0-c9ad-4f04-b492-94c164f95c76\"\n  cc_token = \"bb52e490-d47e-47a4-b190-73e23eb17111\"\n\n  [runners.cc_extra_env]\n    CC_ENABLE_HEPTAPOD_RUNNER = \"true\"\n  [runners.custom_build_dir]\n  [runners.cache]\n    [runners.cache.s3]\n    # A future version of Heptapod PAAS Runner may fill this in automatically.\n    # Meanwhile it is possible to use any S3 configuration. Using Clever's\n    # Cellar for your CI caches in the same zone is the best for\n    # network proximity and bandwidth.\n    # (replace with your credentials and bucket of choice)\n    ServerAddress = \"cellar-c2.services.clever-cloud.com\"\n    AccessKey = \"dEA7gjmYM98gobVi6Y1x\"\n    SecretKey = \"v0tdpjgpsDRqaSvIndvHAXFmjbpEd958gbZuO7yv\"\n    BucketName = \"heptapod-ci\"\n    [runners.cache.gcs]\n  [runners.docker]\n    helper_image = \"registry.heptapod.net/heptapod/heptapod-runner/helper:x86_64-latest\"\n    tls_verify = false\n    image = \"debian:bullseye\"\n    privileged = false\n    disable_entrypoint_overwrite = false\n    oom_kill_disable = false\n    disable_cache = false\n    volumes = [\"/cache\"]\n    shm_size = 0\n```\n\n(all tokens and uuids in this example are random values freshly obtained\nfor this documentation)\n\n\n#### The multi-tenant mode\n\nIn this mode, the runner determines the Clever Cloud Organization and the\nassociated API token from attributes of the top-level Heptapod Group to which\nthe Project belongs.\n\nIt assumes that something populates those attributes.\n\nThis mode of operation is intended for instances such as `heptapod.host`.\n\nRequired Runner configuration:\n\n- `cc_multi_tenant`: `true`\n- `cc_gitlab_namespace_attributes_token`: a GitLab / Heptapod private token\n  with enough rights to query Group custom attributes.\n\nOptional Runner configuration:\n\n- `cc_orga_id_attribute` (defaults to `cc_orga_id`). Name of the custom\n  attribute on top-level Groups to use for the Organization ID.\n- `cc_orga_token_attribute (defaults to `cc_orga_token`). Name of the custom\n  attribute on top-level Groups to use for the Clever API token of the\n  Organization.\n\nFull example:\n\n```toml\nstate_file = \"/srv/heptapod-runner/paas-runner-state.json\"\n\n[quota_computation]\n  reference_runner = \"clever-cloud\"\n  reference_flavor = \"3XL\"\n  reference_jobs_count = 8\n\n[[runners]]\n  name = \"clever-cloud\"\n  url = \"https://heptapod.example.com\"\n  token = \"D3adNQYu8OCjkYDbwDaG\"\n  executor = \"clever-docker\"\n\n  cc_multi_tenant = true\n  cc_gitlab_namespace_attributes_token = \"D7aY5I5SygxA5oyZ11vB\"\n\n  [runners.cc_extra_env]\n    CC_ENABLE_HEPTAPOD_RUNNER = \"true\"\n\n  [runners.custom_build_dir]\n  [runners.cache]\n    [runners.cache.s3]\n    # Do not fill in this: it would use the same bucket for all tenants.\n    # A future version of Heptapod PAAS Runner will fill this automatically,\n    # using the Cellar add-on of each tenant for proper separation.\n    [runners.cache.gcs]\n  [runners.docker]\n    helper_image = \"registry.heptapod.net/heptapod/heptapod-runner/helper:x86_64-latest\"\n    tls_verify = false\n    image = \"debian:bullseye\"\n    privileged = false\n    disable_entrypoint_overwrite = false\n    oom_kill_disable = false\n    disable_cache = false\n    volumes = [\"/cache\"]\n    shm_size = 0\n```\n\n(all tokens in this example are random values freshly obtained for this\ndocumentation)\n\n\n#### Flavors and their weights\n\nEnd users can control the flavors (sizes) of the Clever Cloud instances\nrunning their jobs. This is done with the `CI_CLEVER_CLOUD_FLAVOR` job\nvariable, with admissible values currently ranging from `XS` to `3XL`.\n\nThe `clever-docker` executors implement the weight system described above\nto limit the maximum footprint of the whole runner service in the Clever\nwhile taking differences between the flavors into account.\n\nIf one wishes to allow as much as exactly `N` jobs with flavor `F`, the\nsimplest is to use the `quota_computation` section (see above).\nAlternatively, one may set the `concurrent` global configuration parameter to\n`N*F.weight`.\nThe weight system will then automatically adjust what it means for the typical\npayload, consisting of bigger and or smaller instances than `F`.\n\nThe weight computation is expected to change in the future, as it is merely\nan approximation of actual infrastructure constraints, hence it is better\nto use `quota_computation` rather than `concurrent`.\n\nCurrently, the weight of a flavor is computed as `M^1.25` where `M`\nis the RAM footprint of the flavor, expressed in GiB. The non linearity of\nthis formula will allow in practice to spawn more smaller flavors with an\nequivalent total memory footprint.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://foss.heptapod.net/heptapod/runner",
    "keywords": "hg mercurial git heptapod gitlab",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-heptapod-runner",
    "package_url": "https://pypi.org/project/python-heptapod-runner/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-heptapod-runner/",
    "project_urls": {
      "Homepage": "https://foss.heptapod.net/heptapod/runner"
    },
    "release_url": "https://pypi.org/project/python-heptapod-runner/0.6.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Heptapod Runner: Python utilities and subsystems",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16650568,
  "releases": {
    "0.2.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a86083a8e65974dbccb2faa82488e28b1f5d7c8f7fd95a79bf65a8ab01bbc90",
          "md5": "5a82e33f292ab116c70d0c44e869fe19",
          "sha256": "65f432667c00455c8dcc4549cf8b93605614fefaf986ea2d13c04c97ce56ef0d"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.2.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a82e33f292ab116c70d0c44e869fe19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1945,
        "upload_time": "2021-07-23T13:20:21",
        "upload_time_iso_8601": "2021-07-23T13:20:21.046645Z",
        "url": "https://files.pythonhosted.org/packages/3a/86/083a8e65974dbccb2faa82488e28b1f5d7c8f7fd95a79bf65a8ab01bbc90/python-heptapod-runner-0.2.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3e20b49e7924debddbdca33bf0e1b9abd254ca1b4e96c584e4bcf4302d0fda0",
          "md5": "3ef1e07b9b6b37d0784ff64caa3d1ed4",
          "sha256": "6afa8af2178d19a0dc8995269b168e03fed4de89836b8d8639e194c00fdf66ed"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ef1e07b9b6b37d0784ff64caa3d1ed4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35826,
        "upload_time": "2022-02-07T22:19:47",
        "upload_time_iso_8601": "2022-02-07T22:19:47.298794Z",
        "url": "https://files.pythonhosted.org/packages/e3/e2/0b49e7924debddbdca33bf0e1b9abd254ca1b4e96c584e4bcf4302d0fda0/python-heptapod-runner-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5719e3a074a09c8618cd40aaacc7bb03770d874e6d3de628f8f3a9a2c608b363",
          "md5": "01d0cf9cc73ac5f7bf3bf0f341354014",
          "sha256": "6a4623e68282dde48c76b6a11ad2668c7e95ca6ef9466cfbc137af75d15b1817"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.5.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "01d0cf9cc73ac5f7bf3bf0f341354014",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32132,
        "upload_time": "2021-10-14T18:32:54",
        "upload_time_iso_8601": "2021-10-14T18:32:54.388891Z",
        "url": "https://files.pythonhosted.org/packages/57/19/e3a074a09c8618cd40aaacc7bb03770d874e6d3de628f8f3a9a2c608b363/python-heptapod-runner-0.5.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f802861a0503f22eb44138c2d54ae512b1c6fbf96f990b2e33607eb89be144db",
          "md5": "8e72fc7526411fb89690a260897142f1",
          "sha256": "943994cbe25c476e3a7fc963963ee8b55c6d9ba0e6b6756fdae6d7134faec08f"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.5.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "8e72fc7526411fb89690a260897142f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34385,
        "upload_time": "2021-11-25T12:27:30",
        "upload_time_iso_8601": "2021-11-25T12:27:30.729710Z",
        "url": "https://files.pythonhosted.org/packages/f8/02/861a0503f22eb44138c2d54ae512b1c6fbf96f990b2e33607eb89be144db/python-heptapod-runner-0.5.0rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "252ae4bec9be506a9910008cf3144b4a21c1dbc5fae62e93e2d004ac6f24b9b9",
          "md5": "a979db109156bdb5d009adc800be8d4a",
          "sha256": "638d1da58ccda4a9f4e0a1ade6e37a1f48fe2420af3701b72ccc7320c9d69116"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.5.0rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "a979db109156bdb5d009adc800be8d4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35129,
        "upload_time": "2021-12-13T14:30:06",
        "upload_time_iso_8601": "2021-12-13T14:30:06.866096Z",
        "url": "https://files.pythonhosted.org/packages/25/2a/e4bec9be506a9910008cf3144b4a21c1dbc5fae62e93e2d004ac6f24b9b9/python-heptapod-runner-0.5.0rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0rc4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bed52ee3b8eb92891971527c446d4e129344cba8edd03bf6eb2cc29b84b347e8",
          "md5": "ff06e00600080adbd6aef4b69c003db2",
          "sha256": "7088c54b8eb8590b978a03d11353e279474d7e0df6f3c0eaeb90a6b068e924ec"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.5.0rc4.tar.gz",
        "has_sig": false,
        "md5_digest": "ff06e00600080adbd6aef4b69c003db2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35368,
        "upload_time": "2022-01-13T13:47:06",
        "upload_time_iso_8601": "2022-01-13T13:47:06.397471Z",
        "url": "https://files.pythonhosted.org/packages/be/d5/2ee3b8eb92891971527c446d4e129344cba8edd03bf6eb2cc29b84b347e8/python-heptapod-runner-0.5.0rc4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c03629f475dbe1dea7606a05fdc98b54dc20ccad48242c1f800471ee0df06687",
          "md5": "45788c57ed50619e6739b8f10474d570",
          "sha256": "3c7cd27e0e922ce9736258287ac8db47fcdbf1e7b519ff0c2bbba86ad5d03946"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "45788c57ed50619e6739b8f10474d570",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35935,
        "upload_time": "2022-07-13T15:22:41",
        "upload_time_iso_8601": "2022-07-13T15:22:41.168074Z",
        "url": "https://files.pythonhosted.org/packages/c0/36/29f475dbe1dea7606a05fdc98b54dc20ccad48242c1f800471ee0df06687/python-heptapod-runner-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0ca4f5af512e474523c9e58b601fcbbf8ad68c4dea8a102a7605f6b92b39bba",
          "md5": "4d8132d33f2497b6d96b607c6dfda089",
          "sha256": "0401f29bd443d61e3b899f23a73d7cf7776dd9844b808f19aade58596d2dd92d"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d8132d33f2497b6d96b607c6dfda089",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46449,
        "upload_time": "2023-02-01T13:01:11",
        "upload_time_iso_8601": "2023-02-01T13:01:11.939524Z",
        "url": "https://files.pythonhosted.org/packages/d0/ca/4f5af512e474523c9e58b601fcbbf8ad68c4dea8a102a7605f6b92b39bba/python-heptapod-runner-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "741d5d9e317aff6a0fbefd260f72b76d484f58022ebed9272e6a353dd6f71a63",
          "md5": "7162b29dd1c5cbe75fc09c2667631c2c",
          "sha256": "47262c47ed35aaa1d3109f1fa7871df2e2445cbe2da2b6f85e770d5619496d4b"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.6.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "7162b29dd1c5cbe75fc09c2667631c2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39572,
        "upload_time": "2022-12-26T21:05:48",
        "upload_time_iso_8601": "2022-12-26T21:05:48.516307Z",
        "url": "https://files.pythonhosted.org/packages/74/1d/5d9e317aff6a0fbefd260f72b76d484f58022ebed9272e6a353dd6f71a63/python-heptapod-runner-0.6.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9e5fa957ca987b62334319bf51a109624c7b04ccbfef912d723366fb43ba0cf",
          "md5": "66f6bf9a627279a77c859dce7cee7bab",
          "sha256": "c92817eb45f384eeeffd2fe402d8fdb20750101f3b45a52bfb7b9ecfe9c3082e"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.6.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "66f6bf9a627279a77c859dce7cee7bab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40221,
        "upload_time": "2022-12-27T20:12:21",
        "upload_time_iso_8601": "2022-12-27T20:12:21.540540Z",
        "url": "https://files.pythonhosted.org/packages/c9/e5/fa957ca987b62334319bf51a109624c7b04ccbfef912d723366fb43ba0cf/python-heptapod-runner-0.6.0rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f29cf4c028644733f54486b3c538f4596cdabcc4d10c8b0258db64d7a59e91c4",
          "md5": "aec0454f712d38d308fd9f44d03962cf",
          "sha256": "8d3baa96ada1c57d390ade57a950715214a264802c853f7e66027548a2a7f0db"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.6.0rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "aec0454f712d38d308fd9f44d03962cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41844,
        "upload_time": "2023-01-01T19:27:56",
        "upload_time_iso_8601": "2023-01-01T19:27:56.038684Z",
        "url": "https://files.pythonhosted.org/packages/f2/9c/f4c028644733f54486b3c538f4596cdabcc4d10c8b0258db64d7a59e91c4/python-heptapod-runner-0.6.0rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0rc5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36aaf415d6f533a0c6876abdd6be1b35180f9b3d20773ffdae15a214a1b08191",
          "md5": "4118dda3862a62eeb57bef9365d7cbce",
          "sha256": "b1fa3efe10bda969aca77aa2eff9b6539c3b8f7a12c91e7f7c7f88a8aff1de39"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.6.0rc5.tar.gz",
        "has_sig": false,
        "md5_digest": "4118dda3862a62eeb57bef9365d7cbce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41931,
        "upload_time": "2023-01-06T20:31:24",
        "upload_time_iso_8601": "2023-01-06T20:31:24.955000Z",
        "url": "https://files.pythonhosted.org/packages/36/aa/f415d6f533a0c6876abdd6be1b35180f9b3d20773ffdae15a214a1b08191/python-heptapod-runner-0.6.0rc5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0rc6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dd6ccb22c377fee591ef0b551ba775eb21383ed92b69f7640ca705b53c0e1c9",
          "md5": "a02dd0afe4b0ee8fb056e85b658dffde",
          "sha256": "241fc61a504dbbc83dc3b51cd1610ad872c9a1f667b09d3fb7ddc4739f37173a"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.6.0rc6.tar.gz",
        "has_sig": false,
        "md5_digest": "a02dd0afe4b0ee8fb056e85b658dffde",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 45668,
        "upload_time": "2023-01-13T14:49:02",
        "upload_time_iso_8601": "2023-01-13T14:49:02.751037Z",
        "url": "https://files.pythonhosted.org/packages/3d/d6/ccb22c377fee591ef0b551ba775eb21383ed92b69f7640ca705b53c0e1c9/python-heptapod-runner-0.6.0rc6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0rc7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "562afdc285876831f642004eecfa4c77d1554f9871607bf5c194b2eeee640d02",
          "md5": "59214fcd6b4348925ab9654aaac5620c",
          "sha256": "97089686c5eeda134f013324e54cc68ee2f01f73b0ced85c8a7d231d7b99b7fc"
        },
        "downloads": -1,
        "filename": "python-heptapod-runner-0.6.0rc7.tar.gz",
        "has_sig": false,
        "md5_digest": "59214fcd6b4348925ab9654aaac5620c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46612,
        "upload_time": "2023-01-14T13:57:46",
        "upload_time_iso_8601": "2023-01-14T13:57:46.038913Z",
        "url": "https://files.pythonhosted.org/packages/56/2a/fdc285876831f642004eecfa4c77d1554f9871607bf5c194b2eeee640d02/python-heptapod-runner-0.6.0rc7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d0ca4f5af512e474523c9e58b601fcbbf8ad68c4dea8a102a7605f6b92b39bba",
        "md5": "4d8132d33f2497b6d96b607c6dfda089",
        "sha256": "0401f29bd443d61e3b899f23a73d7cf7776dd9844b808f19aade58596d2dd92d"
      },
      "downloads": -1,
      "filename": "python-heptapod-runner-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4d8132d33f2497b6d96b607c6dfda089",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 46449,
      "upload_time": "2023-02-01T13:01:11",
      "upload_time_iso_8601": "2023-02-01T13:01:11.939524Z",
      "url": "https://files.pythonhosted.org/packages/d0/ca/4f5af512e474523c9e58b601fcbbf8ad68c4dea8a102a7605f6b92b39bba/python-heptapod-runner-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}