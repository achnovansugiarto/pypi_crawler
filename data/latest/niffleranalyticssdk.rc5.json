{
  "info": {
    "author": "ShiKun",
    "author_email": "429143597@qq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# niffer-python\n\n# 一、日志收集和事件收集\n## 本SDK 日志收集工具在结构上分为两层，第一层为业务属性，第二层为事件属性:properties\n```json\n{\n\t\"type\": \"order\",\n\t\"time\": 1622104453359,\n\t\"distinct_id\": \"123456\",\n\t\"properties\": {\n\t\t\"name\": \"test_add_event_ConcurrentLoggingConsumer\",\n\t\t\"age\": \"10\",\n\t\t\"addr\": \"u5317u4eac\",\n\t\t\"now\": \"2021-05-27\"\n\t},\n\t\"lib\": {\n\t\t\"$lib\": \"python\",\n\t\t\"$lib_version\": \"1.0.1\",\n\t\t\"$lib_method\": \"code\",\n\t\t\"$lib_detail\": \"test_add_event_ConcurrentLoggingConsumer##test_add_event_ConcurrentLoggingConsumer##/Users/show/workspace/bluetale/niffer-python/nifflieranalytics/test_sdk.py##113\"\n\t},\n\t\"event_id\": \"50d0e2d4bec611eb8167acde48001122\",\n\t\"project_name\": \"production\",\n\t\"event\": \"woman_order\"\n}\n```\n\n## 本SDK 仅提供日志收集操作 ，具体用法参见以下 demo code :\n\n### debug 模式调试代码，此模式下，日志信息直接以post形式发送至指定服务器. (_注意此模式不要应用于生产环境_)\n````python\n# coding=utf-8\nfrom sdk import *\n\n\ndef test_add_log_ConsoleConsumer():\n    # 打印日志\n    consumer = ConsoleConsumer()\n    # 使用 Consumer 来构造 NifflerAnalytics 对象\n    niffer = NifflerAnalytics(consumer, project_name='production')\n    properties = {\n        'id': 1,\n        'name': 'test',\n        'age': '10',\n        'addr': '北京',\n        'time': datetime.datetime.now()\n\n    }\n    niffer.add_log(log_type=\"es\", properties=properties)\n    niffer.close()\n\n\ndef test_add_log_LoggingConsumer():\n    # 打印日志\n    # log_name 为log存储的绝对路径+log名称，此路径与filebeat中的配置文件paths要一致\n    log_name = \"data0/logs/event1.log\"\n    consumer = LoggingConsumer(log_name)\n    # 使用 Consumer 来构造 NifflerAnalytics 对象\n    niffer = NifflerAnalytics(consumer, project_name='production')\n    properties = {\n        'id': 1,\n        'name': 'test',\n        'age': '10',\n        'addr': '北京',\n        'time': datetime.date.today()\n\n    }\n    niffer.add_log(log_type=\"es\", properties=properties)\n    niffer.close()\n\n\ndef test_add_log_ConcurrentLoggingConsumer():\n    # 打印日志\n    # log_name 为log存储的绝对路径+log名称，此路径与filebeat中的配置文件paths要一致\n    log_name = \"/data0/logs/event.log\"\n    consumer = ConcurrentLoggingConsumer(log_name)\n    # 使用 Consumer 来构造 NifflerAnalytics 对象\n    niffer = NifflerAnalytics(consumer, project_name='production')\n    properties = {\n        'id': 1,\n        'name': 'test',\n        'age': '10',\n        'addr': '北京',\n        'time': datetime.date.today()\n\n    }\n    niffer.add_log(log_type=\"\", properties=properties)\n    niffer.close()\n\n\ndef test_add_event_ConsoleConsumer():\n    # 打印日志\n    consumer = ConsoleConsumer()\n    # 使用 Consumer 来构造 NifflerAnalytics 对象\n    niffer = NifflerAnalytics(consumer, project_name='production')\n    properties = {\n        'name': 'test_add_event_ConcurrentLoggingConsumer',\n        'age': '10',\n        'addr': u'北京',\n        'now': datetime.date.today()\n\n    }\n    distinct_id = '123456'\n    event_type = \"order\"\n    event_name = \"woman_order\"\n    niffer.add_event(distinct_id, event_type, event_name, properties)\n\n    niffer.close()\n\n\ndef test_add_event_LoggingConsumer():\n    # 打印日志\n    # log_name 为log存储的绝对路径+log名称，此路径与filebeat中的配置文件paths要一致\n    log_name = \"/data0/logs/event1.log\"\n    consumer = LoggingConsumer(log_name)\n    # 使用 Consumer 来构造 NifflerAnalytics 对象\n    niffer = NifflerAnalytics(consumer, project_name='production')\n    properties = {\n        'name': 'test_add_event_LoggingConsumer',\n        'age': '10',\n        'addr': u'北京',\n        'now': datetime.date.today()\n    }\n    distinct_id = '123456'\n    event_type = \"order\"\n    event_name = \"woman_order\"\n    niffer.add_event(distinct_id, event_type, event_name, properties)\n    niffer.close()\n\n\ndef test_add_event_ConcurrentLoggingConsumer():\n    # 打印日志\n    # log_name 为log存储的绝对路径+log名称，此路径与filebeat中的配置文件paths要一致\n    log_name = \"/data0/logs/event2.log\"\n    consumer = ConcurrentLoggingConsumer(log_name, encoding='utf-8')\n    # 使用 Consumer 来构造 NifflerAnalytics 对象\n    niffer = NifflerAnalytics(consumer, project_name='production')\n    properties = {\n        'name': 'test_add_event_ConcurrentLoggingConsumer',\n        'age': '10',\n        'addr': u'北京',\n        'now': datetime.date.today()\n\n    }\n    distinct_id = '123456'\n    event_type = \"order\"\n    event_name = \"woman_order\"\n    niffer.add_event(distinct_id, event_type, event_name, properties)\n    niffer.close()\n\n\nif __name__ == '__main__':\n    # test_add_log_ConsoleConsumer()\n    # test_add_log_LoggingConsumer()\n    test_add_log_ConcurrentLoggingConsumer()\n\n    # test_add_event_ConsoleConsumer()\n    # test_add_event_LoggingConsumer()\n    test_add_event_ConcurrentLoggingConsumer()\n\n\n````\n\n# 二、事件传递到神策\n\n### 1、支持神策的方法\nsdk中sensor_开头的方法为神策方法，可通过此方法通过后端将事件传递给神策\n``` python\n{\n    \"sensor_track\": \"track\",\n    \"sensor_item_set\": \"item_set\",\n    \"sensor_item_delete\": \"item_delete\",\n    \"sensor_track_signup\": \"track_signup\",\n    \"sensor_profile_set\": \"profile_set\",\n    \"sensor_profile_set_once\": \"profile_set_once\",\n    \"sensor_profile_increment\": \"profile_increment\",\n    \"sensor_profile_append\": \"profile_append\",\n    \"sensor_profile_unset\": \"profile_unset\",\n    \"sensor_profile_delete\": \"profile_delete\",\n}\n```\n### 2、测试样例\n调用NifflerAnalytics时必须传sensor_project_name参数，此参数会指定神策的具体项目，\n从而将事件信息传递到指定的项目中\n```\n\ndef test_sensor_track():\n    # 打印日志\n    # log_name 为log存储的绝对路径+log名称，此路径与filebeat中的配置文件paths要一致\n    log_name = \"/data0/logs/sensor.log\"\n    consumer = ConcurrentLoggingConsumer(log_name, encoding='utf-8')\n    # 使用 Consumer 来构造 NifflerAnalytics 对象\n    niffer = NifflerAnalytics(consumer, project_name='production', sensor_project_name=\"production\")\n    properties = {\n        'name': 'test_sensor_track',\n        'age': '10',\n        'addr': u'北京',\n        'now': datetime.date.today()\n\n    }\n    distinct_id = '123456'\n    event_name = \"woman_order\"\n    niffer.sensor_track(distinct_id, event_name, properties, is_login_id=False)\n    niffer.close()\n```\n\n\n### 发送日志数据，程序会自动校验不可使用的关键字及字段名称、长度、类型\n`关键字: distinct_id、time、properties、events、event、user_id、date、datetime、type`\n`String 类型,长度不应超过 8192 `\n`支持的数据类型: string,int64,float64,bool,time.Time,[]string `\n\n\n### 线上环境中产生的日志，需要单独通过 filebeat 软件监控并增量的传输至kafka ，再由数据团队解析使用， 安装及配置filebeat方式如下:\n```\n# 1、首先下载 filebeat 软件, 个人偏好下载放置于  /usr/local 内， 方便好找\nwget -P /usr/local https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.11.1-linux-x86_64.tar.gz\n\n# 2、解压\ntar -xvf filebeat-7.11.1-linux-x86_64.tar.gz\n\n# 3、进入文件夹 ， 修改 filebeat.yml 文件内容为: \n#=========================== Filebeat inputs =============================\nfilebeat.inputs:\n- type: log\n\n  # Change to true to enable this input configuration.\n  enabled: true\n\n  # 配置监控的日志地址， 请自行修改监控的日志地址\n  # 此路径要与LoggingConsumer、ConcurrentLoggingConsumer中的log_name路径一致\n  # 如果只想日志存储到本地，不通过filebeat传递至后端，可不将日志路径添加在此\n  paths:\n    - /usr/local/log-data/event_log.*\n    #- c:\\programdata\\elasticsearch\\logs\\*\n\n  close_renamed: true\n  clean_removed: true\n  close_removed: true\n\n# -------------------------------- Kafka Output -------------------------------\noutput.kafka:\n  # Boolean flag to enable or disable the output module.\n  enabled: true\n\n  # 设置 kafka的访问地址， 集群可以设置多个。\n  hosts: [\"XXX.XXX:9092\"]\n\n  # The Kafka topic used for produced events. \n  # 设置kafka 的主题, 需要自行指定\n  topic: XXX\n\n\n#================================ Processors =====================================\n# 可以在这里删除一些不需要的字段，\nprocessors:\n  - add_host_metadata: ~\n  - add_cloud_metadata: ~\n  - drop_fields:\n     fields: [\"beat.hostname\", \"beat.name\", \"beat.version\", \"beat\",\"host\",\"agent\",\"input\",\"ecs\",\"@metadata\"]\n\n# ============================= X-Pack Monitoring ==============================\nmonitoring.enabled: true\nmonitoring:\n  cluster_uuid: \"xxx\"\n  elasticsearch:\n    hosts: [\"xxx:9200\"]\n\n# 4、创建logs文件夹，方便存放 filebaat 日志文件\nmkdir logs \n\n# 5、启动执行\nnohup ./filebeat -e -c filebeat.yml >> logs/output.log 2>&1 &\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://code.yidianshihui.com/j.a.r.v.i.s/niffer-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "NifflerAnalyticsSDK",
    "package_url": "https://pypi.org/project/NifflerAnalyticsSDK/",
    "platform": null,
    "project_url": "https://pypi.org/project/NifflerAnalyticsSDK/",
    "project_urls": {
      "Homepage": "https://code.yidianshihui.com/j.a.r.v.i.s/niffer-python"
    },
    "release_url": "https://pypi.org/project/NifflerAnalyticsSDK/1.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This is the official Python SDK for Niffler Analytics.",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14113359,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92f1def901c03305084a6296f1a72f072c5f9b3ce7278f5843f7ffe2addfe4d0",
          "md5": "933179c2ff05985575fc26a095222712",
          "sha256": "47945d9570e4af7fb5758e52d799ca13dda0aaad9e247500073a035a678155c9"
        },
        "downloads": -1,
        "filename": "NifflerAnalyticsSDK-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "933179c2ff05985575fc26a095222712",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9828,
        "upload_time": "2021-05-27T11:31:00",
        "upload_time_iso_8601": "2021-05-27T11:31:00.947077Z",
        "url": "https://files.pythonhosted.org/packages/92/f1/def901c03305084a6296f1a72f072c5f9b3ce7278f5843f7ffe2addfe4d0/NifflerAnalyticsSDK-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99486324d6de0f67ba3ce56e90b95454326d11cfa1c06a3accbadd877eaaee6c",
          "md5": "209d919e254d51aa6f75fbcf6fe68d59",
          "sha256": "cc183c501f404945623eafcc76eaf33b5193e8659e175e8778801f5c1ebe78d6"
        },
        "downloads": -1,
        "filename": "NifflerAnalyticsSDK-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "209d919e254d51aa6f75fbcf6fe68d59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10224,
        "upload_time": "2021-05-27T12:12:14",
        "upload_time_iso_8601": "2021-05-27T12:12:14.778392Z",
        "url": "https://files.pythonhosted.org/packages/99/48/6324d6de0f67ba3ce56e90b95454326d11cfa1c06a3accbadd877eaaee6c/NifflerAnalyticsSDK-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea66bc065204af9dd587338e5897bebacab3ced59e2bd2d22d2a991e5f724995",
          "md5": "e7ecab3519c468d3db8702910ee899ed",
          "sha256": "86938cb5f183b9c02e1ca397e31e5e24506fe0b06c1d83e911729240afb9fc2f"
        },
        "downloads": -1,
        "filename": "NifflerAnalyticsSDK-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e7ecab3519c468d3db8702910ee899ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10344,
        "upload_time": "2021-05-31T08:17:58",
        "upload_time_iso_8601": "2021-05-31T08:17:58.738662Z",
        "url": "https://files.pythonhosted.org/packages/ea/66/bc065204af9dd587338e5897bebacab3ced59e2bd2d22d2a991e5f724995/NifflerAnalyticsSDK-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6c681580b033f528b6fc493efcefcba51552482e5f84026d8fe62f44ee70742",
          "md5": "248101672f782c6dbba5793176ce653e",
          "sha256": "c63dfa08cf1bbdaf78ee27e56ed888f3f2297eb606ac654fda8587f288795b40"
        },
        "downloads": -1,
        "filename": "NifflerAnalyticsSDK-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "248101672f782c6dbba5793176ce653e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11956,
        "upload_time": "2021-07-02T10:41:25",
        "upload_time_iso_8601": "2021-07-02T10:41:25.838671Z",
        "url": "https://files.pythonhosted.org/packages/b6/c6/81580b033f528b6fc493efcefcba51552482e5f84026d8fe62f44ee70742/NifflerAnalyticsSDK-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ffaf3e156222fbea790df49014d4a8e4f230927a0e618fd204e1130b7d4333f",
          "md5": "c3ede177c4329868df0416cd745a1c9a",
          "sha256": "f3ed404227be2e4908b1bc5ddbc4ea0b1cbbd3c602a2f5ed843377bda9608c78"
        },
        "downloads": -1,
        "filename": "NifflerAnalyticsSDK-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c3ede177c4329868df0416cd745a1c9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11536,
        "upload_time": "2022-06-13T09:14:59",
        "upload_time_iso_8601": "2022-06-13T09:14:59.950555Z",
        "url": "https://files.pythonhosted.org/packages/2f/fa/f3e156222fbea790df49014d4a8e4f230927a0e618fd204e1130b7d4333f/NifflerAnalyticsSDK-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ffaf3e156222fbea790df49014d4a8e4f230927a0e618fd204e1130b7d4333f",
        "md5": "c3ede177c4329868df0416cd745a1c9a",
        "sha256": "f3ed404227be2e4908b1bc5ddbc4ea0b1cbbd3c602a2f5ed843377bda9608c78"
      },
      "downloads": -1,
      "filename": "NifflerAnalyticsSDK-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "c3ede177c4329868df0416cd745a1c9a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11536,
      "upload_time": "2022-06-13T09:14:59",
      "upload_time_iso_8601": "2022-06-13T09:14:59.950555Z",
      "url": "https://files.pythonhosted.org/packages/2f/fa/f3e156222fbea790df49014d4a8e4f230927a0e618fd204e1130b7d4333f/NifflerAnalyticsSDK-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}