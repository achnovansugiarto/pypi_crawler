{
  "info": {
    "author": "Matteo Ferla",
    "author_email": "matteo.ferla@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": "# RDKit to params\nCreate or modify Rosetta params files (topology files) from scratch, RDKit mols or another params file.\n\n[![Read the Docs](https://img.shields.io/readthedocs/rdkit-to-params)](https://rdkit-to-params.readthedocs.io/en/latest/index.html)\n[![https img shields io pypi pyversions rdkit to params logo python](https://img.shields.io/pypi/pyversions/rdkit--to--params?logo=python)](https://pypi.org/project/rdkit-to-params)\n[![https img shields io pypi v rdkit to params logo python](https://img.shields.io/pypi/v/rdkit--to--params?logo=python)](https://pypi.org/project/rdkit-to-params)\n[![https img shields io pypi dm rdkit to params logo python](https://img.shields.io/pypi/dm/rdkit_to_params?logo=python)](https://pypi.org/project/rdkit-to-params)\n[![https img shields io github license matteoferla rdkit_to_params logo github](https://img.shields.io/github/license/matteoferla/rdkit_to_params?logo=github)](https://github.com/matteoferla/rdkit_to_params/raw/master/LICENCE)\n[![https img shields io github last commit matteoferla rdkit_to_params logo github](https://img.shields.io/github/last-commit/matteoferla/rdkit_to_params?logo=github)](https://github.com/matteoferla/rdkit_to_params)\n[![https img shields io github commit activity m matteoferla rdkit_to_params logo github](https://img.shields.io/github/commit-activity/m/matteoferla/rdkit_to_params?logo=github)](https://github.com/matteoferla/rdkit_to_params)\n\n## Installation\n\nTo install from pip type:\n\n    pip install rdkit-to-params\n\nTo install the latest version (probably the same) from GitHub\n\n    pip install git+https://github.com/matteoferla/rdkit_to_params\n    \nRDKit and PyRosetta are optional module, but most of the useful functionality comes from the former.\nTo install rdkit, `conda install -c conda-forge rdkit` or `apt-get` or `pip install rdkit-pypi`.\nTo install PyRosetta you need to get a licence (free for academic use) and install it.\nOne option for installation without visiting the Rosetta Commons site is:\n\n    pip install pyrosetta_help; PYROSETTA_USERNAME='ðŸ‘¾ðŸ‘¾ðŸ‘¾' PYROSETTA_PASSWORD='ðŸ‘¾ðŸ‘¾ðŸ‘¾' install_pyrosetta\n\n## Rationale\nThis is a fresh rewrite of ``mol_to_params.py``. For three reasons:\n\n* I cannot share my 2to3 port and modd  ed module-version of ``mol_to_params.py`` due to licence.\n* I want to modify `params` files and more as opposed to use a standalone script.\n* RDKit does not save ``mol2`` files, yet knows about atom names and Gasteiger-Massilli charges and more...\n\nIt sounds mad, but did not actually take too long.\n\n## Website\n\nFor a web app using this see [https://direvo.mutanalyst.com/params](https://direvo.mutanalyst.com/params).\nFor the code running the website, see:\n\n* [templates](https://github.com/matteoferla/DirEvo_tools/tree/master/direvo/templates/params)\n* [views](https://github.com/matteoferla/DirEvo_tools/blob/master/direvo/views/params.py)\n\n\n## Roundtrip\n\nNative amino acid params files can be found in the Rosetta folder\n`rosetta/main/database/chemical/residue_type_sets/fa_standard/residue_types/l-caa`\nLet's do a roundtrip changing an atomname:\n\n    import pyrosetta\n    pyrosetta.init(extra_options='-mute all') # required for test\n    from rdkit_to_params import Params\n    \n    p = Params.load('PHE.params')\n    p.IO_STRING[0].name3 = 'PHX'\n    p.IO_STRING[0].name1 = 'Z'\n    p.AA = 'UNK'  #If it's not one of the twenty (plus extras), UNK!\n    del p.ROTAMER_AA[0]\n    p.rename_atom(' CB ', ' CX ') # this renames\n    p.dump('fake.params')\n    p.test().dump_pdb('test.pdb')\n    \n`p.test()` returns a pyrosetta pose. The static method `params_to_pose('something.params', name3)` accepts a params file\n    \n    import nglview\n    pose = Params.params_to_pose('some_topology_I_found.params', name3)\n    view = nglview.show_rosetta(pose)\n    view\n\n## From mol object\n### Requirements\nFor the sake of sanity, `EmbedMolecule`, `Chem.AddHs(mol)` or any other operation is assumed to have been done beforehand.\nAnd that the user is going to do `Chem.MolToPDBFile(params.mol)` or `Chem.MolToPDBBlock(params.mol)` or use the bound methods of `Params`,\n`dump_pdb` and `dump_pdb_conf` (see below).\n\nThe molecule should preferably be **not** Kekulised.\n3letter name of residue is either from the title row (``_Name``) if a 3letter word or from the PDBInfo or 'LIG'.\n\nDummy atom (\\*/R) is assumed to be a CONNECT â€”ligand only atm.\n\nHere is a conversion to an amino acid from a SMILES (quickest way):\n\n    import pyrosetta\n    pyrosetta.init(extra_options='-mute all')\n    from rdkit_to_params import Params\n    p = Params.from_smiles('*C(=O)C(Cc1ccccc1)[NH]*', #recognised as amino acid.\n            name='PHX', #optional.\n            atomnames={3: 'CZ'} #optional, rando atom name as see in previous edit\n            )\n    print(p.is_aminoacid()) # True\n    p.dump('fake.params')\n    p.test().dump_pdb('test.pdb')\n    Chem.MolToPDBFile(mol, 'ref.pdb')\n            \nHere is a conversion to a ligand the circuitous way, just for fun:\n\n    import pyrosetta\n    pyrosetta.init(extra_options='-mute all')\n    # note that pyrosetta needs to be started before rdkit.\n    from rdkit_to_params import Params\n    # make the molecule in RDKit or chemdraw or download it or whatever.\n    mol = Chem.MolFromSmiles('NC(C(=O)O)Cc1ccccc1')\n    mol = AllChem.AddHs(mol)\n    AllChem.EmbedMolecule(mol)\n    AllChem.MMFFOptimizeMolecule(mol)\n    # add names to the mol beforehand\n    Params.add_names(mol, names=['N', 'CA', 'C', 'O', 'OXT', 'CB'], name='PHZ')\n    # parameterise\n    p = Params.from_mol(mol, name='PHZ')\n    p.test().dump_pdb('test.pdb')\n    Chem.MolToPDBFile('ref.pdb')\n \nThe class method `add_names` is based upon atom index\n(which is derived from the SMILES or sdf/mol file unless atoms have been replaced).\nThe instance method `rename_by_substructure` accepts a substructure and a list of atom names in the order they are in the substructure.\n    \nNote that conformer generation is not fully automatic and is not done by default.\n\n    # make your conformers as you desire\n    AllChem.EmbedMultipleConfs(mol, numConfs=10) # or whatever you choose. This is a somewhat important decision.\n    AllChem.AlignMolConformers(mol) # I do not know if the conformers need to be aligned for Rosetta\n    # params time!\n    p = Params.from_mol(mol, name='LIG') \n    p.dump_pdb_conf('LIG_conf.pdb')\n    p.PDB_ROTAMERS.append('LIG_conf.pdb')\n    p.dump('my_params.params')\n    \nNote `dump_pdb` and `dump_pdb_conf` will save the molecule(s) without the dummy atoms, to stop this add `stripped=False`.\n\n## From SMILES string\nThe above is actually a bit convoluted for example purposes as `Params.from_smiles`, accepts a SMILES string.\n\n## From SMILES string and PDB for names    \nIn some cases one has a PDB file with a ligand that needs parameterising.\nAssuming one has also the smiles of the ligand (PubChem has an super easy search), one can do\n\n    p = Params.from_smiles_w_pdbfile(pdb_file, smiles, 'XXX') # the name has to match.\n    \nThe smiles does not need to match full. It can contain more atoms or even one`*` (CONNECT).\nThe smiles gets parameterised. So be suse to add correct charges properly â€”hydrogens are added.\nIt could be used for scaffold hopping, but if position matters so much,\nyou may be interested in [Fragmenstein](https://github.com/matteoferla/Fragmenstein).\n\nFor more see [autogenerated documentation](sphinx-documentation.md). Sphinx with markdown cannot deal with typehinting,\nso checking the code might be clearer.\n\n## Rename\n\nA key part is the atom names â€”â€”this can happen at . The following renaming methods are present:\n\n* `p.rename(???)`: \"overloaded\" method that directs to the others\n* `p.rename_from_str('XX,YY,ZZ')` or `p.rename_from_str('0:XX,3:YY')`\n* `p.rename_from_list(['XX','YY', 'ZZ'])`\n* `p.rename_from_dict({0:'XX',3:'YY'})`\n* `p.rename_from_template(Chem.Mol)`\n* `p.rename_by_substructure(Chem.Mol, ['XX','YY', 'ZZ'])` where the list is the atom idx in substructure\n\nNote, ``retype_by_name`` does not have all these options (only atomname -> Rosetta atomtype).\n\nThe class method ``add_names`` simply uses these, but returns a mol\n\n### DIY\n\nIf you have two mol objects from whatever routes, the basic operation is:\n\n    p = Params.load_mol(mol, generic=False, name='LIG')\n    p.rename_from_template(template) # or whatever middle step\n    \n    p.convert_mol()\n\nNote that `convert_mol` should be called once and is already called in the two `from_XXX` classmethods.\n\n    p = Params.from_mol(...)\n    p.convert_mol() # No!!!\n    p.mol # is the mol...\n    p2 = Params.load_mol(p.mol)\n    p2.convert_mol() # Yes\n\n## Constraints\n\nThe selfstanding class `Constraints` is for generating constraint files, which are a must with covalent attachments\nin order to stop janky topologies.\nThe class is instantiated with a pair of SMILES, each with at least a real atom and with one attachment point,\nthe first is the ligand and the second is its peptide target. The names of the heavy atoms and the Rosetta residue \"numbers\".\n\n    from rdkit_to_params import Constraints\n    c = Constraints(smiles=('*C(=N)', '*SC'), names= ['*', 'CX', 'NY', '*', 'SG', 'CB'], ligand_res= '1B', target_res='145A')\n    c.dump('con.con')\n    # individual strings can be accessed\n    c.atom_pair_constraint\n    c.angle_constraint\n    c.dihedral_constaint\n    c.custom_constaint # if you want to add your own before `str`, `.dumps`, `.dump`.\n\nDo note that to make covalent links work in Rosetta, NGL and a few other places you need a LINK record, here is a f-string\nfor it:\n\n    f'LINK        {target_atom: >4} {target_resn: >3} {p_chain[:1]} {target_resi: >3}                '+\\\n    f'{ligand_atom: >4} {ligand_resn: >3} {ligand_chain[:1]} {ligand_resi: >3}     1555   1555  1.8\\n'\n\nThis is not to be confused with CCP4 REFMAC's `LINKR`, which are however easy to covert.\nAlternatively, you can add it after importing the pose, _cf._ `pose.residue(lig_pos).connect_map`.\n\n## Bond order\nIt is worth mentioning that the bond order specified in the topology file in the `BOND_ORDER` lines is mostly ignored \nand the bond order is derived from the rosetta types that get assigned. \nTo extract and correct a ligand, consider the following\n\n    \n    # pose to string\n    buffer = pyrosetta.rosetta.std.stringbuf()\n    pose.dump_pdb(pyrosetta.rosetta.std.ostream(buffer))\n    pdbblock = buffer.str()\n    # get the residue\n    mol = Chem.MolFromPDBBlock(pdbblock, proximityBonding=False, removeHs=False)\n    ligand = Chem.SplitMolByPDBResidues(mol, whiteList=[params.NAME])[params.NAME]\n    # fix bond order\n    template = AllChem.DeleteSubstructs(params.mol, Chem.MolFromSmiles('*'))\n    AllChem.AssignBondOrdersFromTemplate(template, ligand)\n\n## Amino acids\n\nA `*C(=O)C([*:3])[NH]*` molecule, where R3 is whatever sidechain is automatically converted into an amino acid.\nOmitting the hydrogen on the amine is fine (implicit), so `*C(=O)C([*:3])N*` is also automatically accepted.\nLikewise, a secondary amine like in proline, `*C(=O)C1CCCN1*`, is automatically determined to be an amino acid.\nOmitting the double bond of the carboxyl will result in a hydroxyl backbones amino acid, which will behave like `C=[OH+]`\nfor properties, but without the partial charge.\nThe criterion for an amino acid is if the substracture `*NCC(~O)*` is matched (see `_aminoacid_override`).\n\nHowever, `C(=O)C([*:3])[NH]` will be parsed as `[CH](=O)C([*:3])[NH]`, i.e. with a radical amine and an aldehyde.\n\nHere is an example of making a sequence with a custom residue (without writing to file):\n```python\nimport nglview as nv\nfrom rdkit_to_params import Params\nimport pyrosetta\n\n# make params\np = Params.from_smiles('CCCCC(N*)C(*)=O', name='NLE')\np.PROPERTIES.append('ALIPHATIC')\np.PROPERTIES.append('HYDROPHOBIC')\n# p.test() would test it in isolation.\n\n# add to pose\npose = pyrosetta.Pose()\nrst = p.add_residuetype(pose)\npyrosetta.rosetta.core.pose.make_pose_from_sequence(pose, 'AX[NLE]A', rst)\n\n# relax and show\nscorefxn = pyrosetta.get_fa_scorefxn()\nrelax = pyrosetta.rosetta.protocols.relax.FastRelax(scorefxn, 15)\nrelax.apply(pose)\nnv.show_rosetta(pose)\n```\n\n### Greek\nIn the amino acid case, the class attribute `greekification` changes the atomnames to CB, CD2 etc.\nIt is by default `True`. It is called during `fix_mol`, a step in `load_mol`/`load_smiles`,\nso should be safe for rename methods.\n\n\n## Optionals\nInstalling RDKit with conda is easy (`conda install rdkit`).\nWith apt-get likewise (`sudo apt-get install python3-rdkit  librdkit1 rdkit-data`).\nWith brew idem (`brew install rdkit --with-python3`).\nBut there is always a system where one needs to compile it from source, which is a pain. Hence why it is optional.\nFor example, I have never tried installing it on a Windows.\n\nPyrosetta is optional because it has a non-standard installation.\n\n## Terminal caps\n\nTo make a cap, there is a quick way:\n\n    p = Params.from_smiles('*NCC', name='CAP', atomnames={1: ' N  ', 2: ' CA '})\n    p.make_C_terminal_cap(mainchain_atoms=['N', 'CA'])\n    \n    p = Params.from_smiles('*C(=O)C', name='CAP', atomnames={1: ' C  ', 2: ' O  ', 3: ' CA '})\n    p.make_N_terminal_cap(mainchain_atoms=['C', 'CA'])\n\nThese methods also accept `connection_idx`, which is the Fortran-style index of the connection that will become a LOWER/UPPER.\ni.e. if the cap is further connected but not as a polymer, say `*NCC*`.\n\nDo note:\n\n* `.test()` does not work on a terminal cap and will segfault\n* `mainchain_atoms` will change Rosetta atom-types only if the name matches\n* The code accepts only cases with 3 or more atoms (so a `*=O` cap is a no go and requires virtual atoms added manually)\n    \n## Caveat: I do not know many things!\n\n### Chemical\nI suspect I am doing stuff weirdly and I am meant to create ligands via ``pyrosetta.rosetta.core.chemical`` and not via params files... \nIf this is so let me know. I don't mind knowing I made a mistake!\n\nEdit: it is indeed possible, but it is far from trivial/sane. The class\n`pyrosetta.rosetta.core.chemical.MutableResidueType` can be operated upon by various\nother classes such as `pyrosetta.rosetta.core.chemical.SetAtomicCharge`.\nA mutable residue type can be converted to a regular residue type via `.make()`.\n\n### Generic\nI like this generic atom type business, but I am not sure how to use them in RL.\n``from_mol(mol, generic=True)`` will make generic atom types.\nI made several guesses with the classic atom types and I am sure many things are wrong...\n\n### Rings and cis-trans\n* `CUT_BOND` is implemented, but I am not sure it does anything. `CHI` entries cannot work across a cut bond,\neven when undeclared, so is likely redudant.\n* `ADD_RING` is not implemented in the `from_mol` conversion as I think it's an old command.\n* Does a cis-trans tautomer bond (say `C(=O)-C=O`) gets a `CHI` entry? I am assuming no, but not sure.\n\n### Notes\n\nThere are some other things to pay attention to:\n\n* Atom names are 4-letters. It is always safer to add the spaces yourself if assigning them.\n* CHI struggles with rings, so currently `C1CCCCC1CCC` has only one CHI (C7, C8, C9, H10), even if (C6, C7, C8, C9) most probably counts.\n\n## To Do\nI have not coded yet, because I forgot:\n\n* ~~an auto-assignment of `NBR_ATOM` and `NBR_RADIUS` for `from_mol`.~~\n* add rotamer line in `from_mol`\n* change option to override starting atom.\n* tweak the logic of `NAME` after some thinking.\n* ~~output constrain file for the CONNECT atom.~~\n* make a better webpage to do the conversion from mol/sdf/pdb/SMILES\n\nThe `from_mol` class method recognises `*[NH]CC(~O)*` and assigns it as a backbone properly.\nHowever, `Chem.MolFromSmiles('*[NH]CC(~O)*')` cannot be embedded, so is a bit of a horrible one for users to use.\nThroughout the code, dummy atoms (\\*/R) are changed to carbons or chlorines and then changed back.\nCystathionine and similar twinned amino acids are the problem as I cannot simply make an amino acid backbone be recognised,\nhowever if protonated as is the case `[NH1]C[CH0](=O)`.\nMaybe the `CC(=O)NCC(=O)NC` option may be a better choice after all.\n\n## Footnote\n\nTo save a ResidueType in PyRosetta to a params file, the command is:\n\n```python\npyrosetta.rosetta.core.chemical.write_topology_file(residuetype, 'foo.params')  # noqa\n```\n\n## Legal Disclaimer\nThe author, Matteo Ferla, is not affiliated with either Rosetta or RDKit.\n\n[![Matteo Ferla orcid](https://img.shields.io/badge/orcid-0000--0002--5508--4673-a6ce39?logo=orcid)](https://orcid.org/0000--0002--5508--4673)\n[![Matteo Ferla googlescholar](https://img.shields.io/badge/google--scholar-gF--bp_cAAAAJ-success?logo=googlescholar)](https://scholar.google.com/citations?user=gF--bp_cAAAAJ&hl=en)\n[![Matteo Ferla twitter](https://img.shields.io/twitter/follow/matteoferla?label=Follow&logo=twitter)](https://twitter.com/matteoferla) \n[![Matteo Ferla stackoverflow](https://img.shields.io/stackexchange/stackoverflow/r/4625475?logo=stackoverflow)](https://stackoverflow.com/users/4625475)\n[![Matteo Ferla stackexchange](https://img.shields.io/stackexchange/bioinformatics/r/6322?logo=stackexchange)](https://bioinformatics.stackexchange.com/users/6322) \n[![Matteo Ferla googlemail](https://img.shields.io/badge/email-gmail-informational&logo=googlemail)](https://mailhide.io/e/Ey3RNO2G) \n[![Matteo Ferla Oxford](https://img.shields.io/badge/email-Oxford-informational&logo=googlemail)](https://mailhide.io/e/Y1dbgyyE)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/matteoferla/rdkit_to_params",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rdkit-to-params",
    "package_url": "https://pypi.org/project/rdkit-to-params/",
    "platform": null,
    "project_url": "https://pypi.org/project/rdkit-to-params/",
    "project_urls": {
      "Homepage": "https://github.com/matteoferla/rdkit_to_params"
    },
    "release_url": "https://pypi.org/project/rdkit-to-params/1.2.3/",
    "requires_dist": null,
    "requires_python": ">3.6",
    "summary": "Create or modify Rosetta params files (topology files) from scratch, RDKit mols or another params file.",
    "version": "1.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16362440,
  "releases": {
    "1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efe87a8a812f8d2954b8acdb661bcc9ee5a9d67dae96f96a66d75de2e90282d3",
          "md5": "e71016dc587a4aa7985453d0eb4cfefe",
          "sha256": "56b7e26a5622a7ac90e54b8a3f4fab79cc8bb63b102aafb3f8c17bcf26df2df3"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.tar.gz",
        "has_sig": false,
        "md5_digest": "e71016dc587a4aa7985453d0eb4cfefe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 25142,
        "upload_time": "2020-06-02T22:20:31",
        "upload_time_iso_8601": "2020-06-02T22:20:31.077258Z",
        "url": "https://files.pythonhosted.org/packages/ef/e8/7a8a812f8d2954b8acdb661bcc9ee5a9d67dae96f96a66d75de2e90282d3/rdkit_to_params-1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54ce55e4c99a7500a7db8e785ee282208e50ee8dc541089185144622c9cecdcc",
          "md5": "3a51cb6788a96ed860309a98460ed40f",
          "sha256": "d11f52ee51e9f79cf3befa26a9669fe7c99be41fff8c654293e5a63136b844f0"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3a51cb6788a96ed860309a98460ed40f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 36474,
        "upload_time": "2020-06-02T22:32:32",
        "upload_time_iso_8601": "2020-06-02T22:32:32.750832Z",
        "url": "https://files.pythonhosted.org/packages/54/ce/55e4c99a7500a7db8e785ee282208e50ee8dc541089185144622c9cecdcc/rdkit_to_params-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1406f2f72e757eb7deea040c09abef0173a5e6f1023de515afee19d060b9a5f1",
          "md5": "d1a25155ebff195e0116f9e35f3e93ec",
          "sha256": "5e169dd2a511f6d4a6747b46010b0d1a165d1ee5a34dd16614b87289d0d344e5"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d1a25155ebff195e0116f9e35f3e93ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 30549,
        "upload_time": "2020-06-03T18:10:04",
        "upload_time_iso_8601": "2020-06-03T18:10:04.214995Z",
        "url": "https://files.pythonhosted.org/packages/14/06/f2f72e757eb7deea040c09abef0173a5e6f1023de515afee19d060b9a5f1/rdkit_to_params-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd2311617c465b9f3dc6ca9f52356ff4ac3e2f80211800b4205b8123a68a7f73",
          "md5": "82b4f751076d640272d0d99efbeb7e27",
          "sha256": "74031df79149b4069dc924aa73df9e62dba77d7200473ad02c320c2cfd572aa5"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "82b4f751076d640272d0d99efbeb7e27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 23841,
        "upload_time": "2020-07-02T08:55:09",
        "upload_time_iso_8601": "2020-07-02T08:55:09.564471Z",
        "url": "https://files.pythonhosted.org/packages/cd/23/11617c465b9f3dc6ca9f52356ff4ac3e2f80211800b4205b8123a68a7f73/rdkit_to_params-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5371fa36800525e407ac79c355f6e97fefdb808964a7df1e43a088d396654c19",
          "md5": "4897e150104fcb9193e7ca135a6fd714",
          "sha256": "39461952a6c30a27a23b57a99ca389e4b28d02a53e29d60ad3e9a86395965b3a"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4897e150104fcb9193e7ca135a6fd714",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 24013,
        "upload_time": "2020-07-10T14:25:28",
        "upload_time_iso_8601": "2020-07-10T14:25:28.320039Z",
        "url": "https://files.pythonhosted.org/packages/53/71/fa36800525e407ac79c355f6e97fefdb808964a7df1e43a088d396654c19/rdkit_to_params-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "450b867d72723c27a00cc7f330417d6f7268c777b8795bd946fc89786a0f39b0",
          "md5": "7606f83edd4a58f88b40e02eeadb67ad",
          "sha256": "c182be58feb386ccb242ccfea7910d18ef6efefbf682c3ecc85088b2c053ba91"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7606f83edd4a58f88b40e02eeadb67ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 36743,
        "upload_time": "2020-07-16T16:20:47",
        "upload_time_iso_8601": "2020-07-16T16:20:47.178534Z",
        "url": "https://files.pythonhosted.org/packages/45/0b/867d72723c27a00cc7f330417d6f7268c777b8795bd946fc89786a0f39b0/rdkit_to_params-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b52a15ce15be2ad2bd3606c4d9cc0055261cd7eafd098cf9a31dee9f931290a",
          "md5": "9b948a30fce750847c18ded9b474f114",
          "sha256": "4b3a7e70b33bdfc7994cfad00199f794e38f6c9cf88d82ceb78eddf1f2dace9d"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9b948a30fce750847c18ded9b474f114",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 36772,
        "upload_time": "2020-07-16T19:20:35",
        "upload_time_iso_8601": "2020-07-16T19:20:35.065997Z",
        "url": "https://files.pythonhosted.org/packages/5b/52/a15ce15be2ad2bd3606c4d9cc0055261cd7eafd098cf9a31dee9f931290a/rdkit_to_params-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df161439c9b0dec13b5d73fece2a25d9d88238165a34e51d0469554ef91a2e4b",
          "md5": "5ca247184128ef047520feb413124374",
          "sha256": "e3c0b209904bcbee4cdd84b643699f0f7faa20550e1397c7e2cfc4ef59a85faa"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "5ca247184128ef047520feb413124374",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 44344,
        "upload_time": "2021-09-21T17:21:57",
        "upload_time_iso_8601": "2021-09-21T17:21:57.626871Z",
        "url": "https://files.pythonhosted.org/packages/df/16/1439c9b0dec13b5d73fece2a25d9d88238165a34e51d0469554ef91a2e4b/rdkit_to_params-1.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9712e05ada94bd934ec1afe13e09a8cda9f61bdb296476244bbd79d883f9ad67",
          "md5": "6937fcccc93df72a3c23a9a3cffd3918",
          "sha256": "e17177c0b8b9b04ccefb7884878b24071c3f5a773a916c37028a64f48e74a6e5"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "6937fcccc93df72a3c23a9a3cffd3918",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 44352,
        "upload_time": "2021-09-22T14:34:25",
        "upload_time_iso_8601": "2021-09-22T14:34:25.537387Z",
        "url": "https://files.pythonhosted.org/packages/97/12/e05ada94bd934ec1afe13e09a8cda9f61bdb296476244bbd79d883f9ad67/rdkit_to_params-1.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad43ab5db3875a9e72588efce8885d135e0ec41db98cd84be2337510864a4d66",
          "md5": "be0c43a8f86cec884b2556853ea0861c",
          "sha256": "f7410de7bd6a97366f5da2c705d7e690237f3a08a5c618f734fa3437bbabf20c"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "be0c43a8f86cec884b2556853ea0861c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 44472,
        "upload_time": "2021-09-27T16:59:12",
        "upload_time_iso_8601": "2021-09-27T16:59:12.055283Z",
        "url": "https://files.pythonhosted.org/packages/ad/43/ab5db3875a9e72588efce8885d135e0ec41db98cd84be2337510864a4d66/rdkit_to_params-1.1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58b8f3db63a32ce0ca987585de2c98bab92372068b9601c6fcacc03fb215f8c6",
          "md5": "99fb5253a50f3ce83a9c11985c792962",
          "sha256": "9b5c86c683ef83a4f6384a5fd181cc7dc5531c5d2ddd099e6eddce1e9db79ee1"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "99fb5253a50f3ce83a9c11985c792962",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 45138,
        "upload_time": "2021-10-01T10:18:21",
        "upload_time_iso_8601": "2021-10-01T10:18:21.875889Z",
        "url": "https://files.pythonhosted.org/packages/58/b8/f3db63a32ce0ca987585de2c98bab92372068b9601c6fcacc03fb215f8c6/rdkit_to_params-1.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c580d978fda7cd7942bfd1bb72ad9f75a97eb65ef6f0fc9ba3c6b8bad2ad670",
          "md5": "6f6e7dc56c1908d66629e95af0fd87f4",
          "sha256": "a2387dc1ce009bf800fb7d891abb0457f82193aeb7c9866a6402d20218a12afd"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "6f6e7dc56c1908d66629e95af0fd87f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 45286,
        "upload_time": "2021-10-17T13:28:32",
        "upload_time_iso_8601": "2021-10-17T13:28:32.869302Z",
        "url": "https://files.pythonhosted.org/packages/4c/58/0d978fda7cd7942bfd1bb72ad9f75a97eb65ef6f0fc9ba3c6b8bad2ad670/rdkit_to_params-1.1.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d2b97d12fe38813b96f303f04ed4e2e77f5ee540ad683ff79a21c822c047298",
          "md5": "79cdf06e49100710d4448fe518799b03",
          "sha256": "1967c3716553dd6a34ae8805adc65cbd49646ad28b9386dff094b0dd824283ba"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79cdf06e49100710d4448fe518799b03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 36811,
        "upload_time": "2020-07-21T18:10:40",
        "upload_time_iso_8601": "2020-07-21T18:10:40.798924Z",
        "url": "https://files.pythonhosted.org/packages/1d/2b/97d12fe38813b96f303f04ed4e2e77f5ee540ad683ff79a21c822c047298/rdkit_to_params-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf114a451d52b8540a19ae08f28cbec4db146f4d11760133163a94808498f433",
          "md5": "87377ffd3a982898fe004f06bd850089",
          "sha256": "5cdd2f3f7f0751bd2065756ac36147254ca6d87b835828a1f7e5bad1500d7450"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "87377ffd3a982898fe004f06bd850089",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 37434,
        "upload_time": "2020-11-05T15:26:57",
        "upload_time_iso_8601": "2020-11-05T15:26:57.903314Z",
        "url": "https://files.pythonhosted.org/packages/cf/11/4a451d52b8540a19ae08f28cbec4db146f4d11760133163a94808498f433/rdkit_to_params-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd9db405411dd2b049a635c2629fd62cc23a5b881bf85db16557d8bd02a85f8a",
          "md5": "344722d6853b81fa9a260b08e5afe4d0",
          "sha256": "173a7a029628cccba4ccd041b60dd8144dbc884fd9430f7ffb64a5153ad2531d"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "344722d6853b81fa9a260b08e5afe4d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 40440,
        "upload_time": "2021-01-02T19:18:10",
        "upload_time_iso_8601": "2021-01-02T19:18:10.405234Z",
        "url": "https://files.pythonhosted.org/packages/cd/9d/b405411dd2b049a635c2629fd62cc23a5b881bf85db16557d8bd02a85f8a/rdkit_to_params-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f865cdd42d226f7f8dafa43fc9f891a39f8a1689648cfdf0b3653f9fea4c9e9",
          "md5": "5cd56ab4af513a5c2b66faa3ed085c08",
          "sha256": "c1b4c083274f84ff5394d17728cd409fa87418618fdf4c146c47e2947f9c7be7"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.4b0.tar.gz",
        "has_sig": false,
        "md5_digest": "5cd56ab4af513a5c2b66faa3ed085c08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 40722,
        "upload_time": "2021-01-29T16:55:06",
        "upload_time_iso_8601": "2021-01-29T16:55:06.862156Z",
        "url": "https://files.pythonhosted.org/packages/1f/86/5cdd42d226f7f8dafa43fc9f891a39f8a1689648cfdf0b3653f9fea4c9e9/rdkit_to_params-1.1.4b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e7d0ad2b20f89b42b7fb4799b474cff2000529df5b64fac11581103b293c899",
          "md5": "5afffca857cebbb9f184f364ab2246ba",
          "sha256": "1610c7c8f44d6eb028baeebbc028cf96a3262c5f344262713820b1eb1a7d5d43"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5afffca857cebbb9f184f364ab2246ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 41163,
        "upload_time": "2021-02-18T16:37:58",
        "upload_time_iso_8601": "2021-02-18T16:37:58.486244Z",
        "url": "https://files.pythonhosted.org/packages/6e/7d/0ad2b20f89b42b7fb4799b474cff2000529df5b64fac11581103b293c899/rdkit_to_params-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5acacc51bc1b2d9311c11316ee089825a4183e89dcecc489c1a48c19910c4acd",
          "md5": "2c19d695141672ffa91eb24b66792138",
          "sha256": "0cf596da6296d15c9fd3725e0d77e4563c4070913c335e58e8bdf13a5857d5e5"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.5b0.tar.gz",
        "has_sig": false,
        "md5_digest": "2c19d695141672ffa91eb24b66792138",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 41205,
        "upload_time": "2021-03-13T13:32:51",
        "upload_time_iso_8601": "2021-03-13T13:32:51.322288Z",
        "url": "https://files.pythonhosted.org/packages/5a/ca/cc51bc1b2d9311c11316ee089825a4183e89dcecc489c1a48c19910c4acd/rdkit_to_params-1.1.5b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e909d2b32bb1f932169c2ab253770709574390604a0b44a5edb434823bfd9288",
          "md5": "dd79cdf3fb7ef3db027fb6aead3bec64",
          "sha256": "637b341bc0b31ec3b26740be10630624e47145c9f10d9fa872d087052401635b"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "dd79cdf3fb7ef3db027fb6aead3bec64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 42313,
        "upload_time": "2021-03-22T11:03:49",
        "upload_time_iso_8601": "2021-03-22T11:03:49.878257Z",
        "url": "https://files.pythonhosted.org/packages/e9/09/d2b32bb1f932169c2ab253770709574390604a0b44a5edb434823bfd9288/rdkit_to_params-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b4043de495b2ef5baff0a174150f26801847d5147e810310d369d82751c8e85",
          "md5": "d9a33734d05919a1f9a4f56e3d74b7a2",
          "sha256": "37cd4c7c940ccad422533c6a8485a111131f0c16e993c15baa71fa529e4fbc91"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "d9a33734d05919a1f9a4f56e3d74b7a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 43355,
        "upload_time": "2021-05-28T09:18:33",
        "upload_time_iso_8601": "2021-05-28T09:18:33.641215Z",
        "url": "https://files.pythonhosted.org/packages/9b/40/43de495b2ef5baff0a174150f26801847d5147e810310d369d82751c8e85/rdkit_to_params-1.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c13d842dffb9d05ee4dda2f199c4e145c443d203b16b6d08fa0e1a22351edf86",
          "md5": "42a0ce35818edc439faefd5593f1210e",
          "sha256": "f0e2130b3a9c48d56c7ed43aa1fdbc2c8ff1539c13ce56503f7a8383f5ab9a70"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "42a0ce35818edc439faefd5593f1210e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 43520,
        "upload_time": "2021-06-16T09:18:07",
        "upload_time_iso_8601": "2021-06-16T09:18:07.792764Z",
        "url": "https://files.pythonhosted.org/packages/c1/3d/842dffb9d05ee4dda2f199c4e145c443d203b16b6d08fa0e1a22351edf86/rdkit_to_params-1.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0056156babfb42fdecf017703b966e539dd05effe4a6aac0bfe30821116f1fca",
          "md5": "4fd199e40674435acd5067d2370f6c53",
          "sha256": "735a16118ca30a64b1e012ec29f6c4dcc3dd35b0a1d1affdb152580d0d3ef045"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "4fd199e40674435acd5067d2370f6c53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 44341,
        "upload_time": "2021-09-21T16:38:28",
        "upload_time_iso_8601": "2021-09-21T16:38:28.147041Z",
        "url": "https://files.pythonhosted.org/packages/00/56/156babfb42fdecf017703b966e539dd05effe4a6aac0bfe30821116f1fca/rdkit_to_params-1.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86e7803bdc3ac983be61833b2e8c6cabea91f79c6258c0769918b9f728432357",
          "md5": "ec1d8d9bbe0394c2143fef8580b64f4a",
          "sha256": "3391cb17e8a58d7a0a3c209762b6a792816303f17e1c84f97ee251b03d960350"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ec1d8d9bbe0394c2143fef8580b64f4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 47177,
        "upload_time": "2022-04-08T09:59:51",
        "upload_time_iso_8601": "2022-04-08T09:59:51.192201Z",
        "url": "https://files.pythonhosted.org/packages/86/e7/803bdc3ac983be61833b2e8c6cabea91f79c6258c0769918b9f728432357/rdkit_to_params-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d73189fe91ea85de87fdaf2d267cb3ddbfb98b6c481b6ee69d9b6ec3e4dbd7b",
          "md5": "dadf0bcb440a2d0a007f1d394363dfc3",
          "sha256": "7ab98f1179a874d71922af7e9e336a5c5822e669a2db457f4f50d6869dc7ab90"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dadf0bcb440a2d0a007f1d394363dfc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 49388,
        "upload_time": "2022-05-25T18:34:53",
        "upload_time_iso_8601": "2022-05-25T18:34:53.720033Z",
        "url": "https://files.pythonhosted.org/packages/1d/73/189fe91ea85de87fdaf2d267cb3ddbfb98b6c481b6ee69d9b6ec3e4dbd7b/rdkit_to_params-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "337891df09b59f74d3a081add824adb32622959ba120e1d62e0ad4337aaf03f0",
          "md5": "1dbcff264e8c05218adf6c33970185e2",
          "sha256": "48355bd66d0a89942ee23bbe93512b8a5dedb1c742a98af02618f23705b19790"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1dbcff264e8c05218adf6c33970185e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 50417,
        "upload_time": "2022-05-25T18:34:57",
        "upload_time_iso_8601": "2022-05-25T18:34:57.160156Z",
        "url": "https://files.pythonhosted.org/packages/33/78/91df09b59f74d3a081add824adb32622959ba120e1d62e0ad4337aaf03f0/rdkit_to_params-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcb8a28924724dc7001b21f3807809973c2ea11a976b3f48f2110e5e514507a3",
          "md5": "e1beae76d5bf6bfad453dbbd90a3b809",
          "sha256": "156fade33218cea5eced7c1d88cc753d4957094494cd8917ae997752ecbc09c2"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e1beae76d5bf6bfad453dbbd90a3b809",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 50544,
        "upload_time": "2022-06-09T10:24:30",
        "upload_time_iso_8601": "2022-06-09T10:24:30.801028Z",
        "url": "https://files.pythonhosted.org/packages/bc/b8/a28924724dc7001b21f3807809973c2ea11a976b3f48f2110e5e514507a3/rdkit_to_params-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83846ef8d637d2fecf74e2b9589e4b6eef136838eb4f27f0bbad39061658ec7a",
          "md5": "162aced0b80713f874ba74f84b4f3b0c",
          "sha256": "7554eaee10ac7a2107c092af9c89d960d2fb967fa037ee57fdb6894306d0c477"
        },
        "downloads": -1,
        "filename": "rdkit_to_params-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "162aced0b80713f874ba74f84b4f3b0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 50543,
        "upload_time": "2023-01-09T16:35:46",
        "upload_time_iso_8601": "2023-01-09T16:35:46.465201Z",
        "url": "https://files.pythonhosted.org/packages/83/84/6ef8d637d2fecf74e2b9589e4b6eef136838eb4f27f0bbad39061658ec7a/rdkit_to_params-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "83846ef8d637d2fecf74e2b9589e4b6eef136838eb4f27f0bbad39061658ec7a",
        "md5": "162aced0b80713f874ba74f84b4f3b0c",
        "sha256": "7554eaee10ac7a2107c092af9c89d960d2fb967fa037ee57fdb6894306d0c477"
      },
      "downloads": -1,
      "filename": "rdkit_to_params-1.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "162aced0b80713f874ba74f84b4f3b0c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.6",
      "size": 50543,
      "upload_time": "2023-01-09T16:35:46",
      "upload_time_iso_8601": "2023-01-09T16:35:46.465201Z",
      "url": "https://files.pythonhosted.org/packages/83/84/6ef8d637d2fecf74e2b9589e4b6eef136838eb4f27f0bbad39061658ec7a/rdkit_to_params-1.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}