{
  "info": {
    "author": "Smarttek",
    "author_email": "<samwhitedove@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n### MONNIFY PYTHON PACKAGE USER GUIDE\n> Version 0.0.6\n\nBefore you can start integrating to Monnify, you will need to sign up on Monnify. https://app.monnify.com/create-account to sign up. After successful registration, login and for your credentials.\n\n### CREDENTIAL NEEDED\n``` \n1. API KEY\n2. SECRET KEY\n3. CONTRACT CODE\n```\nAll this can be seen on the setting area when you login to you logged in.\n\n### API ENDPOINT IN THE PACKAGE\n```\n1 .initializeTransaction\n2. validateTransactionStatus\n3. reserveBankName\n4. deleteReservedAccount\n5. addReservedAccount\n6. updateCustomerReserveAccountBvn\n7. getAllTransactionOnAReserveAccount\n8. getASingleCustomerAllReservedAccount\n```\n\n### HOW TO USE THE PACKAGE\n\nTo use the PACKAGE, you have to use package installer (pip) by running: \n```\npip install py-monnify\n```\nAfter successfull installation, you can now use the package in your development environment by importing it in your project\n\n### INITIALIZING PY_MODULE\n\nWhile initializing this class you need to pass some parameter which value can be uptained from monnify website after completing your account registration.\nSome of this parameters have a default value.\n```\nPARAMETER:TYPE ===== REQUIRED ===== DEFAULT ========================== TYPE =========== OPTIONS\ncontractCode         YES            NONE                               STRING           NONE\napiKey               YES            NONE                               STRING           NONE\nsecretKey            YES            NONE                               STRING           NONE\nrefStart             YES            PYMON_                             STRING           NONE\ncurrencyCode         NO             NGN                                STRING           CHECK MONNIFY FOR YOUR COUNTRY CURRENCY CODE\npaymentMethods       NO            [\"CARD\",\"ACCOUNT_TRANSFER\"]         LIST             [\"CARD\",\"ACCOUNT_TRANSFER\",\"USSD\",\"PHONE_NUMBER\"]\n```\n\n***USAGE***\n```\nfrom py_monnify import module as monnify\n\napi_key = \"MK_TEST_8UBXGKXXXXXXXX\"\nsecret_key = \"ENRC4FDYYYETKA53YPXBFXXXXXXXX\"\ncontractCode = '29176XXXX'\n\ninit = monnify.InitializeMonnify(contractCode= contractCode, apiKey= api_key, secretKey= secret_key)\n```\n\nNOTE: dont forget to change credentials to live credentials, if you're TESTING with test account.\nNOTE: refStart is a parameter that determine the text starting your transaction reference code for custimization you can change it to your preferred code, the default is PYMON_. \nNOTE: currencyCode is the supported monnify currency for every country. please check monnify website to find your country currency code\nNOTE: paymentMethods are list of payment method monnify supports, please check monnify website to find out more.\n\n### INITIALIZE A SINGLE TRANSACTION\nMethod to initialize a single payment to monnify server.\n```\nPARAMETER =========== REQUIRED ===== DEFAULT  ===== TYPE \namount                  YES            NONE         STRING\ncustomerName            YES            NONE         STRING\ncustomerEmail           YES            NONE         STRING\npaymentDescriptio       YES            NONE         STRING\nredirectUrl             YES            NONE         STRING\nrefStart                NO             MFY_PY       STRING\n```\n\n***USAGE***\n```\nresponse = init.initializeTransaction(amount=\"100\", customerName=\"John Doe\", paymentDescription=\"Groceries\", customerEmail=\"john@doe.com\", redirectUrl=\"https://example.com/check-out\")\n\ndo something with the response.\n```\n\n***SUCCESS RESPONSE EXAMPLE***\n```\n{\n  \"requestSuccessful\": true,\n  \"responseMessage\": \"success\",\n  \"responseCode\": \"0\",\n  \"responseBody\": {\n    \"transactionReference\": \"MNFY|20190915200044|000090\",\n    \"paymentReference\": \"1568577644707\",\n    \"merchantName\": \"Test Limited\",\n    \"apiKey\": \"MK_TEST_VR7J3UAACH\",\n    \"enabledPaymentMethod\": [\n      \"ACCOUNT_TRANSFER\",\n      \"CARD\"\n    ],\n    \"checkoutUrl\": \"https://sandbox.sdk.monnify.com/checkout/MNFY|20190915200044|000090\"\n  }\n}\n```\n***ERROR RESPONSE EXAMPLE***\n```\n{\n    'statusCode': XXX, \n    'message': response message, \n    'responseCode': 'XX'\n}\n```\n\nNOTE: The above required parameter are to be passed to the method.\nNOTE: redirectUrl is the url where monnify will redirect your user after a successful or a failed transaction process. I will suggest you create a page withing your site or application that will take response payload from monnify after redirecting to your redirect page because while redirecting to this page monnify send a response payload.\nNOTE: Always check verify transaction status using ***validateTransactionStatus*** method from monnify before given value to customers.\n\n### VALIDATE TRANSACTION STATUS\nMethod to all transactions on a single reserved account on monnify server.. \n```\nPARAMETER:TYPE ========= REQUIRED ===== DEFAULT  ===== TYPE \ntransactionReference       YES            NONE         STRING\n```\nThis is use to verify a payment a payment status on the monnify server \ne.g status for payment\nPAID, OVERPAID, PARTIALLY_PAID, PENDING, ABANDONED, CANCELLED, FAILED, REVERSED, EXPIRED\n\n***USAGE***\n```\nresponse = init.validateTransactionStatus(transactionReference=\"XXXXXXXXXXXXXXXXXXXXX\")\n\ndo something with the response.\n```\n\n***SUCCESS RESPONSE EXAMPLE***\n```\nvisit for all response https://teamapt.atlassian.net/wiki/spaces/MON/pages/213909851/Get+Transaction+Status\n```\n***ERROR RESPONSE EXAMPLE***\n```\n{\n    'statusCode': XXX, \n    'message': response message, \n    'responseCode': 'XX'\n}\n```\n\n### RESERVE BANK ACCOUNT\n\nThis method allow you to reserve a dedicated account number for any of your app user e.g if you're running a wallet system.\n\nIts create a virtual account number that can be use to top up your user wallet, its a collection account number for transactons.\n\nThese are the available banks for account number reservation.\n```\nSN   NAME             CODE\n1  # Moniepoint       50515\n2  # Wema Bank        035\n3  # Sterling Bank    232\n```\n\nif you did not specify any of the above bank code as a preferred or default bank.. monnify will virtually create account number on the \nthree bank per every request for account number creation.\n```\nNOTE:: Customer Name will be use as the account name\nPARAMETERS          REQUIRED       TYPE \nbvn                 YES             STRING\ncustomerName        YES             STRING\ncustomerEmail       YES             STRING\npreferredBanks      NO              LIST\n```\n\n***USAGE***\n```\nresponse = init.reserveBankAccount(customerBVN=\"2234567XXXX\", customerName=\"John Doe\", customerEmail=\"john@doe.com\")\n\ndo something with the response.\n```\n\n***SUCCESS RESPONSE EXAMPLE***\n```\n{\n    \"requestSuccessful\": true,\n    \"responseMessage\": \"success\",\n    \"responseCode\": \"0\",\n    \"responseBody\": {\n        \"contractCode\": \"915483727511\",\n        \"accountReference\": \"121614155748257\",\n        \"accountName\": \"reservedAccountName\",\n        \"currencyCode\": \"NGN\",\n        \"customerEmail\": \"nnaemekapaschal@gmail.com\",\n        \"customerName\": \"Pascool\",\n        \"accounts\": [\n            {\n                \"bankCode\": \"035\",\n                \"bankName\": \"bank 1\",\n                \"accountNumber\": \"0000000033\"\n            },\n            {\n                \"bankCode\": \"50515\",\n                \"bankName\": \"Bank 2\",\n                \"accountNumber\": \"8000021118\"\n            }\n        ],\n        \"collectionChannel\": \"RESERVED_ACCOUNT\",\n        \"reservationReference\": \"V5R4D9JKC9X9GNJR5QLR\",\n        \"reservedAccountType\": \"GENERAL\",\n        \"status\": \"ACTIVE\",\n        \"createdOn\": \"2021-02-24 09:35:49.161\",\n        \"incomeSplitConfig\": [],\n        \"restrictPaymentSource\": false\n    }\n}\n```\n***ERROR RESPONSE EXAMPLE***\n```\n{\n    'statusCode': XXX, \n    'message': response message, \n    'responseCode': 'XX'\n}\n```\n\nNOTE: customerName this parameter value will be use as the account name for the accounts that will be generated.\nNOTE: preferredBanks is a optioinal parameter.. you can either pass a single bank code or pass all the list of bank code you want your user to have.\n\n### DELETE A RESERVE ACCOUNT NUMBER\n\nMethod to delete a reserved account on monnify server.. \n```\nPARAMETER:TYPE ===== REQUIRED ===== DEFAULT  ===== TYPE \naccountReference       YES            NONE         STRING\n```\n\nThe reference id is the account reference\ne.g ACC_REF_SIWSO-167725XXXX.37XXXX\n\n***USAGE***\n```\nresponse = init.deleteReserveAccount(accountReference=\"ACC_REF_SIWSO-167725XXXX.37XXXX\")\n\ndo something with the response.\n```\n\n***SUCCESS RESPONSE EXAMPLE***\n```\n{\n    \"requestSuccessful\": true,\n    \"responseMessage\": \"success\",\n    \"responseCode\": \"0\",\n    \"responseBody\": {\n        \"contractCode\": \"797854529434\",\n        \"accountReference\": \"reference12345#\",\n        \"accountName\": \"Test Reserved Account\",\n        \"currencyCode\": \"NGN\",\n        \"customerEmail\": \"test@tester.com\",\n        \"accountNumber\": \"9900725554\",\n        \"bankName\": \"Providus Bank\",\n        \"bankCode\": \"101\",\n        \"reservationReference\": \"NRF72EMEBCGNN6WUKD35\",\n        \"status\": \"ACTIVE\",\n        \"createdOn\": \"2019-08-07 17:05:50.0\"\n    }\n}\n```\n***ERROR RESPONSE EXAMPLE***\n```\n{\n    'statusCode': XXX, \n    'message': response message, \n    'responseCode': 'XX'\n}\n```\n\n### ADD A RESERVE ACCOUNT\n\nMethod to add a more account to an existing custormers reserved account on monnify server..\ne.g \na customer have a reserve account of sterlin bank and you want the customer to have another reserve account with wema bank etc. \n```\nPARAMETER:TYPE ===== REQUIRED ===== DEFAULT ===== TYPE \naccountReference       YES            NONE        LIST\npreferredBanksCodes    YES            NONE        STRING\n```\n\nThe reference id is the account reference\ne.g ACC_REF_SIWSO-167725XXXX.37XXXX\n\n***USAGE***\n```\nresponse = init.addReservedAccount(accountReference=\"ACC_REF_SIWSO-167725XXXX.37XXXX\", preferredBanksCodes=['XXX', 'XXX'])\n\ndo something with the response.\n```\n\n***SUCCESS RESPONSE EXAMPLE***\n```\n {\n    \"requestSuccessful\": true,\n    \"responseMessage\": \"success\",\n    \"responseCode\": \"0\",\n    \"responseBody\": {\n        \"contractCode\": \"915483727511\",\n        \"accountReference\": \"121615386005862\",\n        \"accountName\": \"reservedAccountName\",\n        \"currencyCode\": \"NGN\",\n        \"customerEmail\": \"nnaemekapaschal@gmail.com\",\n        \"customerName\": \"Pascool\",\n        \"accounts\": [\n            {\n                \"bankCode\": \"035\",\n                \"bankName\": \"WEMA Bank\",\n                \"accountNumber\": \"XXXX123456\"\n            },\n            {\n                \"bankCode\": \"50515\",\n                \"bankName\": \"Moniepoint\",\n                \"accountNumber\": \"XXXX123456\"\n            },\n            {\n                \"bankCode\": \"123\",\n                \"bankName\": \"Bank 3\",\n                \"accountNumber\": \"XXXX123456\"\n            }\n        ],\n        \"collectionChannel\": \"RESERVED_ACCOUNT\",\n        \"reservationReference\": \"8MHKXZS8GCEPVXB59ML6\",\n        \"reservedAccountType\": \"GENERAL\",\n        \"status\": \"ACTIVE\",\n        \"createdOn\": \"2021-03-10 15:20:07.0\",\n        \"restrictPaymentSource\": false\n    }\n}\n```\n***ERROR RESPONSE EXAMPLE***\n```\n{\n    'statusCode': XXX, \n    'message': response message, \n    'responseCode': 'XX'\n}\n```\n\n### UPDATE RESERVE ACCOUNT ATTACHED BVN NUMBER\n\nMethod to update the bvn attached to a customer reserved account on monnify server.. \n```\nPARAMETER:TYPE ===== REQUIRED ===== DEFAULT  ===== TYPE \naccountReference       YES            NONE         STRING\nbvn                    YES            NONE         STRING\n```\n\nThe reference id is the account reference\ne.g ACC_REF_SIWSO-167725XXXX.37XXXX\n\n***USAGE***\n```\nresponse = init.updateCustomerReserveAccountBvn(accountReference=\"ACC_REF_SIWSO-167725XXXX.37XXXX\", bvn='1234567XXX')\n\ndo something with the response.\n```\n\n***SUCCESS RESPONSE EXAMPLE***\n```\n{\n    \"requestSuccessful\": true,\n    \"responseMessage\": \"success\",\n    \"responseCode\": \"0\",\n    \"responseBody\": {\n        \"contractCode\": \"915483727511\",\n        \"accountReference\": \"121612212051585\",\n        \"currencyCode\": \"NGN\",\n        \"customerEmail\": \"testuser@monnify.com\",\n        \"customerName\": \"Pascool Oj\",\n        \"accountNumber\": \"4290733572\",\n        \"bankName\": \"Providus Bank\",\n        \"bankCode\": \"101\",\n        \"collectionChannel\": \"RESERVED_ACCOUNT\",\n        \"reservationReference\": \"R8J4LCW3P82WN4X6LQCW\",\n        \"reservedAccountType\": \"GENERAL\",\n        \"status\": \"ACTIVE\",\n        \"createdOn\": \"2021-02-01 21:40:55.0\",\n        \"bvn\": \"21212121212\",\n        \"restrictPaymentSource\": false\n    }\n}\n```\n***ERROR RESPONSE EXAMPLE***\n```\n{\n    'statusCode': XXX, \n    'message': response message, \n    'responseCode': 'XX'\n}\n```\n\n### GET ALL TRANSACTION OF A RESERVED ACCOUNT\nMethod to all transactions on a single reserved account on monnify server.. \n```\nPARAMETER:TYPE ===== REQUIRED ===== DEFAULT  ===== TYPE \naccountReference       YES            NONE         STRING\npage                   NO             0            STRING\nsize                   NO             10           STRING\n```\n\nThe reference id is the account reference\ne.g ACC_REF_SIWSO-167725XXXX.37XXXX\n\n***USAGE***\n```\nresponse = init.getAllTransactionOnAReserveAccount(accountReference=\"ACC_REF_SIWSO-167725XXXX.37XXXX\", bvn='1234567XXX')\n\ndo something with the response.\n```\n\n***SUCCESS RESPONSE EXAMPLE***\n```\n{\n    \"requestSuccessful\": true,\n    \"responseMessage\": \"success\",\n    \"responseCode\": \"0\",\n    \"responseBody\": {\n        \"content\": [\n            {\n                \"customerDTO\": {\n                    \"email\": \"test@tester.com\",\n                    \"name\": \"Test Reserved Account\",\n                    \"merchantCode\": \"ALJKHDALASD\"\n                },\n                \"providerAmount\": 0.21,\n                \"paymentMethod\": \"ACCOUNT_TRANSFER\",\n                \"createdOn\": \"2019-07-24T14:12:27.000+0000\",\n                \"amount\": 100.00,\n                \"flagged\": false,\n                \"providerCode\": \"98271\",\n                \"fee\": 0.79,\n                \"currencyCode\": \"NGN\",\n                \"completedOn\": \"2019-07-24T14:12:28.000+0000\",\n                \"paymentDescription\": \"Test Reserved Account\",\n                \"paymentStatus\": \"PAID\",\n                \"transactionReference\": \"MNFY|20190724141227|003374\",\n                \"paymentReference\": \"MNFY|20190724141227|003374\",\n                \"merchantCode\": \"ALJKHDALASD\",\n                \"merchantName\": \"Test Limited\"\n                \"payableAmount\": 100.00,\n                \"amountPaid\": 100.00,\n                \"completed\": true\n            },\n            {\n                \"customerDTO\": {\n                    \"email\": \"test@tester.com\",\n                    \"name\": \"Test Reserved Account\",\n                    \"merchantCode\": \"ALJKHDALASD\"\n                },\n                \"providerAmount\": 0.11,\n                \"paymentMethod\": \"ACCOUNT_TRANSFER\",\n                \"createdOn\": \"2019-07-24T11:14:45.000+0000\",\n                \"amount\": 50.00,\n                \"flagged\": false,\n                \"providerCode\": \"98271\",\n                \"fee\": 0.79,\n                \"currencyCode\": \"NGN\",\n                \"completedOn\": \"2019-07-24T11:14:45.000+0000\",\n                \"paymentDescription\": \"Test Reserved Account\",\n                \"paymentStatus\": \"PAID\",\n                \"transactionReference\": \"MNFY|20190724111444|003259\",\n                \"paymentReference\": \"MNFY|20190724111444|003259\",\n                \"merchantCode\": \"ALJKHDALASD\",\n                \"merchantName\": \"Test Limited\",\n                \"settleInstantly\": true,\n                \"payableAmount\": 50.00,\n                \"amountPaid\": 50.00,\n                \"completed\": true\n            }\n        ],\n        \"pageable\": {\n            \"sort\": {\n                \"sorted\": true,\n                \"unsorted\": false,\n                \"empty\": false\n            },\n            \"pageSize\": 10,\n            \"pageNumber\": 0,\n            \"offset\": 0,\n            \"unpaged\": false,\n            \"paged\": true\n        },\n        \"totalElements\": 2,\n        \"totalPages\": 1,\n        \"last\": true,\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"first\": true,\n        \"numberOfElements\": 2,\n        \"size\": 10,\n        \"number\": 0,\n        \"empty\": false\n    }\n}\n```\n***ERROR RESPONSE EXAMPLE***\n```\n{\n    'statusCode': XXX, \n    'message': response message, \n    'responseCode': 'XX'\n}\n```\n\n### GET A SINGLE USER ALL RESERVED ACCOUNT\n\nMethod to all transactions on a single reserved account on monnify server.. \n```          \nPARAMETER:TYPE ===== REQUIRED ===== DEFAULT  ===== TYPE \naccountReference       YES            NONE         STRING\n```\nTo get the details of a customer's reservation with all account numbers reserved, \nit will return all the details attached to that account Reference.\n\n***USAGE***\n```\nresponse = init.getASingleCustomerAllReservedAccount(accountReference=\"ACC_REF_SIWSO-167725XXXX.37XXXX\", bvn='1234567XXX')\n\ndo something with the response.\n```\n\n***SUCCESS RESPONSE EXAMPLE***\n```\n{\n    \"requestSuccessful\": true,\n    \"responseMessage\": \"success\",\n    \"responseCode\": \"0\",\n    \"responseBody\": {\n        \"contractCode\": \"915483727511\",\n        \"accountReference\": \"1579703193286\",\n        \"accountName\": \"TEAMAPT-TEAMAPT-res\",\n        \"currencyCode\": \"NGN\",\n        \"customerEmail\": \"nnaemekapaschal@gmail.com\",\n        \"customerName\": \"Monnify dev\",\n        \"accounts\": [\n            {\n                \"bankCode\": \"232\",\n                \"bankName\": \"bank 1\",\n                \"accountNumber\": \"0000000033\"\n            },\n            {\n                \"bankCode\": \"111\",\n                \"bankName\": \"Bank 2\",\n                \"accountNumber\": \"8000021118\"\n            }\n        ],\n        \"collectionChannel\": \"RESERVED_ACCOUNT\",\n        \"reservationReference\": \"KS4CSY7Y9BULTV2BLP8F\",\n        \"reservedAccountType\": \"GENERAL\",\n        \"status\": \"ACTIVE\",\n        \"createdOn\": \"2020-01-22 14:26:34.0\",\n        \"contract\": {\n            \"name\": \"Default Contract 2\",\n            \"code\": \"915483727511\",\n            \"description\": null\n        },\n        \"transactionCount\": 0,\n        \"bvn\": \"56787654577\",\n        \"restrictPaymentSource\": false\n    }\n}\n```\n***ERROR RESPONSE EXAMPLE***\n```\n{\n    'statusCode': XXX, \n    'message': response message, \n    'responseCode': 'XX'\n}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/samwhitedove/python_for_monnify",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/samwhitedove/python_for_monnify",
    "keywords": "python,payment,gateway,monnify,payment gateway",
    "license": "OSI Approved :: MIT License",
    "maintainer": "smarttek",
    "maintainer_email": "samwhitedove@gmail.com",
    "name": "py-monnify",
    "package_url": "https://pypi.org/project/py-monnify/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-monnify/",
    "project_urls": {
      "Download": "https://github.com/samwhitedove/python_for_monnify",
      "Homepage": "https://github.com/samwhitedove/python_for_monnify"
    },
    "release_url": "https://pypi.org/project/py-monnify/0.0.6/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Monnify payment module for python developer",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17052955,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "946f441d20e1a89a7c7abf0fe3c9dcc86db3afe44ceacc0425bd07cb7bf6a066",
          "md5": "77ed8cf2492e83925efe9b9b796fb55c",
          "sha256": "7d570cba25fc8c4af74e7666c6a0cf40a106ee97adbc5a2191971bb01a7614ba"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77ed8cf2492e83925efe9b9b796fb55c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5398,
        "upload_time": "2023-02-24T19:00:24",
        "upload_time_iso_8601": "2023-02-24T19:00:24.859459Z",
        "url": "https://files.pythonhosted.org/packages/94/6f/441d20e1a89a7c7abf0fe3c9dcc86db3afe44ceacc0425bd07cb7bf6a066/py_monnify-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82908cdb6f3233c8155f906f957b7967e252b1328e6e4e76c1279a313ec9a259",
          "md5": "a76c6255534b352989503f59aa97452e",
          "sha256": "8e46b2b9a35bceb1875a466bae61a9cc2bc84f498c55326f2e8b45149bef781f"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a76c6255534b352989503f59aa97452e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5169,
        "upload_time": "2023-02-24T19:00:26",
        "upload_time_iso_8601": "2023-02-24T19:00:26.942430Z",
        "url": "https://files.pythonhosted.org/packages/82/90/8cdb6f3233c8155f906f957b7967e252b1328e6e4e76c1279a313ec9a259/py_monnify-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbaac2889e8d8430f8730d91b27dc7e2f5d77f1a2b9441481322faf044d2ac1f",
          "md5": "045dc09547b9e6a726560de3e516a593",
          "sha256": "7ceb2abdb005b578dd315a092ae5e3e3dd647e0397cf60c0e38d7bbf9871b3ae"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "045dc09547b9e6a726560de3e516a593",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9347,
        "upload_time": "2023-02-25T08:26:50",
        "upload_time_iso_8601": "2023-02-25T08:26:50.163371Z",
        "url": "https://files.pythonhosted.org/packages/cb/aa/c2889e8d8430f8730d91b27dc7e2f5d77f1a2b9441481322faf044d2ac1f/py_monnify-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c3ef9216b8fda32154608f23f39e31a56ab678d6edd3c4788c00d4aa2824d6d",
          "md5": "667a0c71fb0f8a05c2d416fe4d8a4ed7",
          "sha256": "17fed3ad9e78af5b67b066bd58bb75c92fd43916afb933b42842427a34c57845"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "667a0c71fb0f8a05c2d416fe4d8a4ed7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11892,
        "upload_time": "2023-02-25T08:26:52",
        "upload_time_iso_8601": "2023-02-25T08:26:52.391807Z",
        "url": "https://files.pythonhosted.org/packages/6c/3e/f9216b8fda32154608f23f39e31a56ab678d6edd3c4788c00d4aa2824d6d/py_monnify-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20566400cca9c863334758e2ca24b1dc8531145167b13b2fca0169910f0cc608",
          "md5": "65bdf9c288206d8dba1d7be3ad8a9619",
          "sha256": "599c8d2706fef1e4ad9abdf3329dba8577f65e8898c2bc50fe52b8f734af7014"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65bdf9c288206d8dba1d7be3ad8a9619",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9325,
        "upload_time": "2023-02-25T08:38:21",
        "upload_time_iso_8601": "2023-02-25T08:38:21.647988Z",
        "url": "https://files.pythonhosted.org/packages/20/56/6400cca9c863334758e2ca24b1dc8531145167b13b2fca0169910f0cc608/py_monnify-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbccdcc3c607bb8e0d9464eb92a54162873c88b0eb3d20d96d8d913ba51b0d16",
          "md5": "6237172e30842e6c152f26ade3b0744e",
          "sha256": "318725164db9d0374f89f49ee305ed239fa01b662482d227ec48afd0ecdd0437"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6237172e30842e6c152f26ade3b0744e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11874,
        "upload_time": "2023-02-25T08:38:23",
        "upload_time_iso_8601": "2023-02-25T08:38:23.589562Z",
        "url": "https://files.pythonhosted.org/packages/cb/cc/dcc3c607bb8e0d9464eb92a54162873c88b0eb3d20d96d8d913ba51b0d16/py_monnify-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cddaa1669c67f3d06f12fc5057a5fbc27f802de4628a1d5b07451e1207d8a16f",
          "md5": "53bc3d904bf1f16e22025b4205a55659",
          "sha256": "1839162c5c4d9bbd443da82dc3554f75c9ab029d7e5a68bf068c3d3a194ae147"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53bc3d904bf1f16e22025b4205a55659",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9385,
        "upload_time": "2023-02-26T18:45:32",
        "upload_time_iso_8601": "2023-02-26T18:45:32.886242Z",
        "url": "https://files.pythonhosted.org/packages/cd/da/a1669c67f3d06f12fc5057a5fbc27f802de4628a1d5b07451e1207d8a16f/py_monnify-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fcbead77662e9f4acbdf26a7a232907fae21ff6ad83cdf571c8d1a3cdf1c28c",
          "md5": "5224195fb5a42c575433f17f7bf93360",
          "sha256": "981ab30a26ba29b4232f1f1d253672ad8f0eae54309274585d366608acec9587"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5224195fb5a42c575433f17f7bf93360",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11970,
        "upload_time": "2023-02-26T18:45:34",
        "upload_time_iso_8601": "2023-02-26T18:45:34.946386Z",
        "url": "https://files.pythonhosted.org/packages/7f/cb/ead77662e9f4acbdf26a7a232907fae21ff6ad83cdf571c8d1a3cdf1c28c/py_monnify-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dc0b835ec392e0d0e5ea8df182a37e6a9e5bf113256e82ba84bc35da4ce9c60",
          "md5": "9af1c8f754b6d3e42b1f13413e36c98a",
          "sha256": "7c49519e4bb868b2b64b69a8d995bd66e6e1e3d2db387b77aa4b46f348ec5cb4"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9af1c8f754b6d3e42b1f13413e36c98a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9371,
        "upload_time": "2023-02-26T19:00:03",
        "upload_time_iso_8601": "2023-02-26T19:00:03.089513Z",
        "url": "https://files.pythonhosted.org/packages/4d/c0/b835ec392e0d0e5ea8df182a37e6a9e5bf113256e82ba84bc35da4ce9c60/py_monnify-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f8deba7fdcb624b025c37db4c0ecf68e9a21e1f600099e9c2aca82dde302509",
          "md5": "f48478f9c8f6cc516b2ee221a9a0c2f1",
          "sha256": "877e3aa8b3f238c396b47ca49ab871c4a75e60329fd7a14ed8d0a734418c3d0c"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f48478f9c8f6cc516b2ee221a9a0c2f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11959,
        "upload_time": "2023-02-26T19:00:04",
        "upload_time_iso_8601": "2023-02-26T19:00:04.813103Z",
        "url": "https://files.pythonhosted.org/packages/2f/8d/eba7fdcb624b025c37db4c0ecf68e9a21e1f600099e9c2aca82dde302509/py_monnify-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4574f36de1cc9a997185ad6936a8140d5935e8b276152437fd341344b901efa3",
          "md5": "739bee69aac7c4dfcad2bafd39a32c5e",
          "sha256": "effa74f0f2b2199a3459a1cb349e6a09de244018387cb19099451eef8f33f1d2"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "739bee69aac7c4dfcad2bafd39a32c5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9322,
        "upload_time": "2023-02-26T20:51:29",
        "upload_time_iso_8601": "2023-02-26T20:51:29.497260Z",
        "url": "https://files.pythonhosted.org/packages/45/74/f36de1cc9a997185ad6936a8140d5935e8b276152437fd341344b901efa3/py_monnify-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71460350477dea5e277faf88071c19f9852e15444d6d2c2c79f4becae47f0c14",
          "md5": "9137ef60fc720b13ee27447874013976",
          "sha256": "751203e86ca4683b192149bf8923aa89848922388e5bd9af4bbe46cd01b9b199"
        },
        "downloads": -1,
        "filename": "py_monnify-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9137ef60fc720b13ee27447874013976",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11685,
        "upload_time": "2023-02-26T20:51:31",
        "upload_time_iso_8601": "2023-02-26T20:51:31.506590Z",
        "url": "https://files.pythonhosted.org/packages/71/46/0350477dea5e277faf88071c19f9852e15444d6d2c2c79f4becae47f0c14/py_monnify-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4574f36de1cc9a997185ad6936a8140d5935e8b276152437fd341344b901efa3",
        "md5": "739bee69aac7c4dfcad2bafd39a32c5e",
        "sha256": "effa74f0f2b2199a3459a1cb349e6a09de244018387cb19099451eef8f33f1d2"
      },
      "downloads": -1,
      "filename": "py_monnify-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "739bee69aac7c4dfcad2bafd39a32c5e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9322,
      "upload_time": "2023-02-26T20:51:29",
      "upload_time_iso_8601": "2023-02-26T20:51:29.497260Z",
      "url": "https://files.pythonhosted.org/packages/45/74/f36de1cc9a997185ad6936a8140d5935e8b276152437fd341344b901efa3/py_monnify-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71460350477dea5e277faf88071c19f9852e15444d6d2c2c79f4becae47f0c14",
        "md5": "9137ef60fc720b13ee27447874013976",
        "sha256": "751203e86ca4683b192149bf8923aa89848922388e5bd9af4bbe46cd01b9b199"
      },
      "downloads": -1,
      "filename": "py_monnify-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "9137ef60fc720b13ee27447874013976",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11685,
      "upload_time": "2023-02-26T20:51:31",
      "upload_time_iso_8601": "2023-02-26T20:51:31.506590Z",
      "url": "https://files.pythonhosted.org/packages/71/46/0350477dea5e277faf88071c19f9852e15444d6d2c2c79f4becae47f0c14/py_monnify-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}