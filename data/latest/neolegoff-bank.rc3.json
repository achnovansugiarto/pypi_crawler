{
  "info": {
    "author": "WhiteApfel",
    "author_email": "white@pfel.ru",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "class ConfirmationInfo:\npass# Neolegoff - Tinkoff Banking API client\n\n## Предисловие\n\nИспользовать на свой страх и риск. В коде нет никаких бэкдоров для вытягивания ваших данных,\nможете посмотреть сами. Но есть нюансик: если что-то пойдёт не так, то я не виноват, вы сами дураки.\n\n## Прогресс разработки\n\n* [ ] Регистрация\n* [x] Вход в аккаунт\n  * [x] Номер телефона\n  * [x] Пароль\n  * [x] Подтверждение по номеру карты\n  * [x] Лже-биометрия для быстрого входа без пароля\n* [x] Автоматическое управление токенами и генерация конфига устройства\n* [x] Продукты\n  * [x] Счета\n    * [ ] Типы счетов\n      * [x] Текущие расчётные в валютах (тестировано на Black)\n      * [x] Кредитных карт\n      * [x] Тинькофф Мобайл\n      * [x] Кредит наличными\n      * [x] Внешние карты сторонних банков\n      * [ ] Про другие счета можно написать в [t.me/apfel](https://t.me/apfel)\n    * [ ] Реквизиты счёта\n    * [ ] Выписки по счёту\n    * [x] Карты\n      * [ ] Перепривязка карты к другому счёту (валютному)\n      * [ ] Реквизиты карты\n      * [ ] Заморозить карту\n      * [ ] Заблокировать карту\n      * [ ] Лимиты по карте\n      * [ ] Установка пин кода\n      * [ ] Блокировка снятия наличных, операций в интернете\n      * [ ] Уведомления об операциях по карте\n* [ ] Открытие новых продуктов\n  * [ ] Карты\n  * [ ] Счета\n  * [ ] Кредит\n* [ ] Самозанятость\n  * [ ] Присоединение\n  * [ ] Декларирование\n  * [ ] Что-то ещё?\n* [x] Платежи\n  * [x] Свободная форма платежа\n  * [ ] СБП\n    * [ ] Перевод по номеру телефона\n    * [ ] Перевод по QR коду СБП и ПлатиQR\n    * [ ] Стягивание с другого банка\n    * [ ] Разрешение на перевод в другой банк\n  * [ ] Переводы\n    * [ ] По номеру карты\n    * [ ] По номеру телефона (не сбп?)\n    * [ ] Между счетами\n    * [ ] По реквизитам\n    * [ ] По номеру договора в тинькофф\n    * [ ] SWIFT\n  * [x] Оплата услуг\n    * [x] Пополнение баланса мобильного\n      * [x] Получение оператора по номеру телефона\n    * [ ] Прочая срань по API\n  * [ ] QR код на снятие налика\n  * [ ] Запрос денег по номеру телефона (через ссылку?)\n* [ ] Чат\n  * [ ] Поддержка\n    * [ ] Получение сообщений\n    * [ ] Отправка сообщений\n    * [ ] Отправка файлов\n  * [ ] Диалоги с другими клиентами тиньки\n* [ ] Ищо\n  * [ ] Курсы валют\n  * [ ] Основной банк СБП\n  * [ ] Секретные вопросы\n  * [ ] Синхронизация контактов\n\n## Как установить\n\n### Из PyPI:\n\n```shell\npython -m pip install neolegoff_bank\n```\n\n### Из исходников:\n\n```shell\ngit clone https://github.com/whiteapfel/neolegoff-bank.git\ncd neolegoff-bank\npython setup.py install\n```\n\n## Как использовать\n\n### Пайплайн авторизации и получение информации о счетах и картах:\n\n```python\nimport asyncio\n\nfrom neolegoff_bank import AioNeolegoff\n\n\nasync def login(client):\n    phone = \"79998887766\"\n    password = \"vs2p33ox!6x_vma_!y9xjw6gz\"\n    card = \"5321304044087960\"\n\n    async def get_sms_code():\n        return input(\"SMS code >>> \")\n\n    login_pipeline = client.auth.login_pipeline(phone, password, card)\n    async for _ in login_pipeline:\n        # Можно использовать любой вариант получения кода:\n        # ввести из консоли, дождаться создания файла или бота в телеграме.\n        # Как угодно. Потребуется только в первый раз, потом будет\n        # автоматически пропускаться, так как login_pipeline будет пустым\n        await login_pipeline.asend(await get_sms_code())\n\n\nasync def main():\n    # `app_name` используется для сохранения информации о токенах,\n    # сессии и сгенерированном конфиге устройства.\n    # Часть после двоеточия является паролем для шифрования,\n    # но это не обязательно, можно абсолютно любую строку\n    client = AioNeolegoff(app_name=\"main:whiteapfel\")\n    await login(client)\n\n    products = await client.products.get_products()\n    print(products)\n\n\nasyncio.run(main())\n```\n**Далее в примерах будет опущен login, предполагая, что авторизация пройдена**\n\n### Пополнение баланса мобильника\n\n```python\nimport asyncio\n\nfrom decimal import Decimal\n\nfrom neolegoff_bank import AioNeolegoff\nfrom neolegoff_bank.models.payments.pay_request import PaymentParametersMobileProvider\nfrom neolegoff_bank.models.payments.response import ConfirmationInfo\n\nasync def main():\n    client = AioNeolegoff(app_name=\"main:whiteapfel\")\n    payment = PaymentParametersMobileProvider(\n        provider='mts',\n        account=\"5160007810\",\n        amount=Decimal(\"42.72\"),\n        phone=\"9867657635\",\n    )\n    commission = await client.payments.payment_commission(payment)\n    payment_result = await client.payments.pay(payment)\n    if isinstance(payment_result, ConfirmationInfo):\n        payment_result = await client.payments.confirm(input(\"SMS code >>> \"), payment_result)\n    print(payment_result)\n\nasyncio.run(main())\n```\n\n### Пайплайн перевода по СБП физику\n\n```python\n\n```\n\n### Пайплайн оплаты по СБП юрику/ип через куар или ссылку\n\n```python\n\n```\n\n### Пайплайн перевода по номеру карты\n\n```python\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/WhiteApfel/neolegoff_bank",
    "keywords": "tinkoff api bank",
    "license": "Mozilla Public License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "neolegoff-bank",
    "package_url": "https://pypi.org/project/neolegoff-bank/",
    "platform": null,
    "project_url": "https://pypi.org/project/neolegoff-bank/",
    "project_urls": {
      "Homepage": "https://github.com/WhiteApfel/neolegoff_bank",
      "Source code": "https://github.com/WhiteApfel/neolegoff_bank",
      "Write me": "https://t.me/whiteapfel"
    },
    "release_url": "https://pypi.org/project/neolegoff-bank/0.0.1a3/",
    "requires_dist": [
      "httpx (==0.23.3)",
      "pydantic (==1.10.5)",
      "appdirs (~=1.4.4)",
      "randmac (~=0.1)",
      "pycryptodomex (==3.17)"
    ],
    "requires_python": "",
    "summary": "Simple Tinkoff Bank API client",
    "version": "0.0.1a3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17249602,
  "releases": {
    "0.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b85e139d833bd4b2e3aa895987c0d80f51b5c2038796321492a2c82308fb7cdb",
          "md5": "0484b7ba81922a637d3e3f1c760946ff",
          "sha256": "19f9bf6b41be68fb33e1f4e888e926bda8c2ea160ced752defacabe041a13173"
        },
        "downloads": -1,
        "filename": "neolegoff_bank-0.0.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0484b7ba81922a637d3e3f1c760946ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12062,
        "upload_time": "2023-03-03T16:53:33",
        "upload_time_iso_8601": "2023-03-03T16:53:33.749273Z",
        "url": "https://files.pythonhosted.org/packages/b8/5e/139d833bd4b2e3aa895987c0d80f51b5c2038796321492a2c82308fb7cdb/neolegoff_bank-0.0.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a364650884cf9a947a2718ba1ab46a3d63e99abf2230858dc66acecbf09248f2",
          "md5": "58e1b8b271135566f988fffecf682379",
          "sha256": "895fcb6f6ecd4538d2822e023f0f4ac84bdb501b9516587469f36b2029a13b43"
        },
        "downloads": -1,
        "filename": "neolegoff_bank-0.0.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "58e1b8b271135566f988fffecf682379",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11486,
        "upload_time": "2023-03-03T16:53:35",
        "upload_time_iso_8601": "2023-03-03T16:53:35.591526Z",
        "url": "https://files.pythonhosted.org/packages/a3/64/650884cf9a947a2718ba1ab46a3d63e99abf2230858dc66acecbf09248f2/neolegoff_bank-0.0.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdadb5f5c1b113cc5b2a9785f8d9c1c49f462c902851b765d26acac68ff3db6f",
          "md5": "2b83e741d3f6af06b14da311067da907",
          "sha256": "329e91469f1d066fbc37c1b165d08eb902ac3763736534b72a76ccf6383f9e71"
        },
        "downloads": -1,
        "filename": "neolegoff_bank-0.0.1a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b83e741d3f6af06b14da311067da907",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12266,
        "upload_time": "2023-03-03T17:21:25",
        "upload_time_iso_8601": "2023-03-03T17:21:25.259664Z",
        "url": "https://files.pythonhosted.org/packages/bd/ad/b5f5c1b113cc5b2a9785f8d9c1c49f462c902851b765d26acac68ff3db6f/neolegoff_bank-0.0.1a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ca22b05ce34fdbe213bbace5276f7f76c898c68b168f5ff9f6386308a63a9b7",
          "md5": "3b16c47e3d764110f28283bfbc26b744",
          "sha256": "394b046da00d810577e5b83fe23bc14bd169bd4ce0f670beec5c2274f86a6a18"
        },
        "downloads": -1,
        "filename": "neolegoff_bank-0.0.1a2.tar.gz",
        "has_sig": false,
        "md5_digest": "3b16c47e3d764110f28283bfbc26b744",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11673,
        "upload_time": "2023-03-03T17:21:26",
        "upload_time_iso_8601": "2023-03-03T17:21:26.727254Z",
        "url": "https://files.pythonhosted.org/packages/2c/a2/2b05ce34fdbe213bbace5276f7f76c898c68b168f5ff9f6386308a63a9b7/neolegoff_bank-0.0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0848d15087ffdd7eafd37fe007cd9c16fca26902e54983185843ab4ea5a2aeba",
          "md5": "eb424f1377112e074d8358f721bbff8f",
          "sha256": "0b3e6a322d6994c1c77848f92204d9713e00916ec98248ce76a8e544724ae9bb"
        },
        "downloads": -1,
        "filename": "neolegoff_bank-0.0.1a3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb424f1377112e074d8358f721bbff8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13528,
        "upload_time": "2023-03-11T07:46:29",
        "upload_time_iso_8601": "2023-03-11T07:46:29.292638Z",
        "url": "https://files.pythonhosted.org/packages/08/48/d15087ffdd7eafd37fe007cd9c16fca26902e54983185843ab4ea5a2aeba/neolegoff_bank-0.0.1a3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55d3bf9e4eaea94bedd3514b13b7e9935a687b49915bfeca2f417fc69c126e00",
          "md5": "ba3976c88d7c5d2bff9abc1d9647a0ac",
          "sha256": "003488b919c7516b05d0b9c59e3300526d841e67a25dba357d7da11e6b3698ef"
        },
        "downloads": -1,
        "filename": "neolegoff_bank-0.0.1a3.tar.gz",
        "has_sig": false,
        "md5_digest": "ba3976c88d7c5d2bff9abc1d9647a0ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15166,
        "upload_time": "2023-03-11T07:46:30",
        "upload_time_iso_8601": "2023-03-11T07:46:30.950813Z",
        "url": "https://files.pythonhosted.org/packages/55/d3/bf9e4eaea94bedd3514b13b7e9935a687b49915bfeca2f417fc69c126e00/neolegoff_bank-0.0.1a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0848d15087ffdd7eafd37fe007cd9c16fca26902e54983185843ab4ea5a2aeba",
        "md5": "eb424f1377112e074d8358f721bbff8f",
        "sha256": "0b3e6a322d6994c1c77848f92204d9713e00916ec98248ce76a8e544724ae9bb"
      },
      "downloads": -1,
      "filename": "neolegoff_bank-0.0.1a3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb424f1377112e074d8358f721bbff8f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13528,
      "upload_time": "2023-03-11T07:46:29",
      "upload_time_iso_8601": "2023-03-11T07:46:29.292638Z",
      "url": "https://files.pythonhosted.org/packages/08/48/d15087ffdd7eafd37fe007cd9c16fca26902e54983185843ab4ea5a2aeba/neolegoff_bank-0.0.1a3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55d3bf9e4eaea94bedd3514b13b7e9935a687b49915bfeca2f417fc69c126e00",
        "md5": "ba3976c88d7c5d2bff9abc1d9647a0ac",
        "sha256": "003488b919c7516b05d0b9c59e3300526d841e67a25dba357d7da11e6b3698ef"
      },
      "downloads": -1,
      "filename": "neolegoff_bank-0.0.1a3.tar.gz",
      "has_sig": false,
      "md5_digest": "ba3976c88d7c5d2bff9abc1d9647a0ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15166,
      "upload_time": "2023-03-11T07:46:30",
      "upload_time_iso_8601": "2023-03-11T07:46:30.950813Z",
      "url": "https://files.pythonhosted.org/packages/55/d3/bf9e4eaea94bedd3514b13b7e9935a687b49915bfeca2f417fc69c126e00/neolegoff_bank-0.0.1a3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}