{
  "info": {
    "author": "",
    "author_email": "Mercury Team <mercury.group@bbva.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# mercury-dataschema\n\n[![](https://github.com/BBVA/mercury-dataschema/actions/workflows/test.yml/badge.svg)](https://github.com/BBVA/mercury-dataschema)\n![](https://img.shields.io/badge/latest-0.0.1-blue)\n\n`mercury-dataschema` is a submodule of the Mercury library which acts as a utility tool that, given a Pandas DataFrame, its `DataSchema` class auto-infers feature types and automatically calculates different statistics depending on them.\n\nThis type inference isn't solely based on data types but in the information the variables contain. For example: if a feature is encoded as a `float` but its cardinality is 2, we can be sure it's a binary feature.\n\nThis package is used by other Mercury submodules, and you also can use it separately from the rest of the library. \n\nAs an idea (there are plenty of them, though), it is particularly useful when preprocessing datasets. Having to specify the typical `categorical_cols` and `coninuous_cols` is over!\n\n## Mercury project at BBVA\n\nMercury is a collaborative library that was developed by the Advanced Analytics community at BBVA. Originally, it was created as an [InnerSource](https://en.wikipedia.org/wiki/Inner_source) project but after some time, we decided to release certain parts of the project as Open Source.\nThat's the case with the `mercury-dataschema` package. \n\nIf you're interested in learning more about the Mercury project, we recommend reading this blog [post](https://www.bbvaaifactory.com/mercury-acelerando-la-reutilizacion-en-ciencia-de-datos-dentro-de-bbva/) from www.bbvaaifactory.com\n\n## User installation\n\nThe easiest way to install `mercury-dataschema` is using ``pip``:\n\n    pip install -U mercury-dataschema\n\n## Example\n\n```python\nfrom mercury.dataschema.schemagen import DataSchema\nfrom mercury.dataschema.feature import FeatType\n\ndataset = UCIDataset().load()   # Any Dataframe \n\nschma = (DataSchema()         # Generate a lazy Schema object\n    .generate(dataset)        # Manually trigger its construction (it mostly infers data types...)\n    .calculate_statistics())  # Manually trigger extra statistic calculations for each feature\n```\n\nThen, we can inspect all the features with\n\n```python\nschma.feats\n```\n\n```\n{'ID': Discrete Feature (NAME=None, dtype=DataType.INTEGER),\n 'LIMIT_BAL': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'SEX': Binary Feature (NAME=None, dtype=DataType.INTEGER),\n 'EDUCATION': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'MARRIAGE': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'AGE': Discrete Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_0': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_2': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_3': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_4': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_5': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_6': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'BILL_AMT1': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'BILL_AMT2': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'BILL_AMT3': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'BILL_AMT4': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'BILL_AMT5': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'BILL_AMT6': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT1': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT2': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT3': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT4': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT5': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT6': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'default.payment.next.month': Binary Feature (NAME=None, dtype=DataType.INTEGER)}\n```\n\nAnd we can get extra feature statistics by inspecting the .stats attribute of the `Feature` objects.\n\n```python\nschma.feats['BILL_AMT4'].stats\n```\n\n```\n{'num_nan': 0,\n 'percent_nan': 0.0,\n 'samples': 30000,\n 'percent_unique': 0.7182666666666667,\n 'cardinality': 21548,\n 'min': -170000.0,\n 'max': 891586.0,\n 'distribution': [3.3333333333333335e-05,\n  0.0,\n  3.3333333333333335e-05,\n  0.0,\n  0.0,\n  3.3333333333333335e-05,\n  0.0,\n  3.3333333333333335e-05,\n  3.3333333333333335e-05,\n  0.0,\n  3.3333333333333335e-05,\n  6.666666666666667e-05,\n  6.666666666666667e-05,\n  0.00016666666666666666,\n  ...,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  3.3333333333333335e-05],\n 'distribution_bins': [-170000.0,\n  -163898.93103448275,\n  -157797.8620689655,\n  -151696.7931034483,\n  ...,\n  867181.724137931,\n  873282.7931034482,\n  879383.8620689653,\n  885484.9310344828,\n  891586.0]}\n```\n\n```python\nschma.feats\n```\n\n```\n{'ID': Discrete Feature (NAME=None, dtype=DataType.INTEGER),\n 'LIMIT_BAL': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'SEX': Binary Feature (NAME=None, dtype=DataType.INTEGER),\n 'EDUCATION': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'MARRIAGE': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'AGE': Discrete Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_0': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_2': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_3': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_4': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_5': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'PAY_6': Categorical Feature (NAME=None, dtype=DataType.INTEGER),\n 'BILL_AMT1': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'BILL_AMT2': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'BILL_AMT3': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'BILL_AMT4': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'BILL_AMT5': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'BILL_AMT6': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT1': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT2': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT3': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT4': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT5': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'PAY_AMT6': Discrete Feature (NAME=None, dtype=DataType.FLOAT),\n 'default.payment.next.month': Binary Feature (NAME=None, dtype=DataType.INTEGER)}\n```\n\nNote how for different features, the computed statistics vary:\n\n```python\nschma.feats['default.payment.next.month'].stats\n```\n\n```\n{'num_nan': 0,\n 'percent_nan': 0.0,\n 'samples': 30000,\n 'percent_unique': 6.666666666666667e-05,\n 'cardinality': 2,\n 'distribution': [0.7788, 0.2212],\n 'distribution_bins': [0, 1],\n 'domain': [1, 0]}\n```\n\n## Saving and loading schemas\n\nYou can serialize and reload `DataSchema`s so you can reuse them in the future.\n\n```python\nPATH = 'schma.json'\n# Save the schema\nschma.save(PATH)\n\n# Load it back!\nrecovered = DataSchema.load(PATH)\n```\n\n## Help and support \n\nThis library is currently maintained by a dedicated team of data scientists and machine learning engineers from BBVA AI Factory. \n\n### Documentation\nwebsite: https://bbva.github.io/mercury-dataschema/\n\n### Email \nmercury.group@bbva.com\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mercury-dataschema",
    "package_url": "https://pypi.org/project/mercury-dataschema/",
    "platform": null,
    "project_url": "https://pypi.org/project/mercury-dataschema/",
    "project_urls": {
      "Bug Tracker": "https://github.com/BBVA/mercury-dataschema/issues",
      "Homepage": "https://github.com/BBVA/mercury-dataschema"
    },
    "release_url": "https://pypi.org/project/mercury-dataschema/0.0.1/",
    "requires_dist": [
      "numpy",
      "cryptography",
      "seaborn ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mkdocs ; extra == 'doc'",
      "mkdocstrings[python] ; extra == 'doc'",
      "mkdocs-material ; extra == 'doc'",
      "mkdocs-minify-plugin (==0.5.0) ; extra == 'doc'",
      "mkdocs-exclude ; extra == 'doc'",
      "nbconvert ; extra == 'doc'"
    ],
    "requires_python": ">=3.7",
    "summary": "Mercury's DataSchema package allows the automatic recognition and validation of feature types.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17492084,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce669594546121c6abd966241b0dcb04ea48a54a2d207dfa739e1992aaf1afd2",
          "md5": "17f485aae14e0c9b483629eb7bbb032b",
          "sha256": "435016ab71c411302105fc973374c3cec2fe958b27fa0e579face3bfe13ec6d3"
        },
        "downloads": -1,
        "filename": "mercury_dataschema-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17f485aae14e0c9b483629eb7bbb032b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20037,
        "upload_time": "2023-03-29T10:16:06",
        "upload_time_iso_8601": "2023-03-29T10:16:06.996849Z",
        "url": "https://files.pythonhosted.org/packages/ce/66/9594546121c6abd966241b0dcb04ea48a54a2d207dfa739e1992aaf1afd2/mercury_dataschema-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85ee2d9167080c418b4b9363ac1654c3e116401ce8fbbaba9c4c88e6b9484aca",
          "md5": "65de88ba58cf083c3cd3d758b58c745b",
          "sha256": "f2692630869ae249a789ab44a74148caf9ee0c5315f9676d20d892c8a69ed006"
        },
        "downloads": -1,
        "filename": "mercury-dataschema-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "65de88ba58cf083c3cd3d758b58c745b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19772,
        "upload_time": "2023-03-29T10:16:09",
        "upload_time_iso_8601": "2023-03-29T10:16:09.323461Z",
        "url": "https://files.pythonhosted.org/packages/85/ee/2d9167080c418b4b9363ac1654c3e116401ce8fbbaba9c4c88e6b9484aca/mercury-dataschema-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce669594546121c6abd966241b0dcb04ea48a54a2d207dfa739e1992aaf1afd2",
        "md5": "17f485aae14e0c9b483629eb7bbb032b",
        "sha256": "435016ab71c411302105fc973374c3cec2fe958b27fa0e579face3bfe13ec6d3"
      },
      "downloads": -1,
      "filename": "mercury_dataschema-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "17f485aae14e0c9b483629eb7bbb032b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 20037,
      "upload_time": "2023-03-29T10:16:06",
      "upload_time_iso_8601": "2023-03-29T10:16:06.996849Z",
      "url": "https://files.pythonhosted.org/packages/ce/66/9594546121c6abd966241b0dcb04ea48a54a2d207dfa739e1992aaf1afd2/mercury_dataschema-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85ee2d9167080c418b4b9363ac1654c3e116401ce8fbbaba9c4c88e6b9484aca",
        "md5": "65de88ba58cf083c3cd3d758b58c745b",
        "sha256": "f2692630869ae249a789ab44a74148caf9ee0c5315f9676d20d892c8a69ed006"
      },
      "downloads": -1,
      "filename": "mercury-dataschema-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "65de88ba58cf083c3cd3d758b58c745b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 19772,
      "upload_time": "2023-03-29T10:16:09",
      "upload_time_iso_8601": "2023-03-29T10:16:09.323461Z",
      "url": "https://files.pythonhosted.org/packages/85/ee/2d9167080c418b4b9363ac1654c3e116401ce8fbbaba9c4c88e6b9484aca/mercury-dataschema-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}