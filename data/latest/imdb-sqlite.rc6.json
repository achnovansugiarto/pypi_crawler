{
  "info": {
    "author": "Jonas Tingeborn",
    "author_email": "tinjon+pip@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": "# imdb-sqlite\nImports IMDB TSV files into a SQLite database.\n\nIt will fetch the [files][1] from IMDB unless you've already fetched them earlier.\n\nThe program relies on the following IMDB tab separated files:\n\n* `title.basics.tsv.gz`: Video titles such as movies, documentaries, tv series, episodes etc.\n* `name.basics.tsv.gz`: People in the entertainment business.\n* `title.akas.tsv.gz`: Alternative names for titles, for different languages.\n* `title.principals.tsv.gz`: Mapping of who participated in which title (movie / show).\n* `title.episode.tsv.gz`: Season and episode numbers, for episodes of shows.\n* `title.ratings.tsv.gz`: Current rating and vote count for the titles.\n\n## Installation\n\n    pip install imdb-sqlite\n\n## Usage\n\n    usage: imdb-sqlite [OPTIONS]\n    \n    Imports imdb tsv interface files into a new sqlitedatabase. Fetches them from\n    imdb if not present onthe machine.\n    \n    optional arguments:\n      -h, --help       show this help message and exit\n      --db FILE        Connection URI for the database to import into. (default:\n                       imdb.db)\n      --cache-dir DIR  Download cache dir where the tsv files from imdb will be\n                       stored before the import. (default: downloads)\n      --verbose        Show database interaction (default: False)\n\nJust run the program with no arguments, and you'll get a file named `imdb.db`\nin the current working directory.\n\n### Hints\n* Make sure the disk the database is written to has sufficient space.\n  About 5 GiB is needed.\n* Use a SSD to speed up the import.\n* To check the best case import performance, use an in-memory database: \n  `--db :memory:`.\n\n## Example\n\n    $ imdb-sqlite\n    \n    2018-07-08 16:00:00,000 Populating database: imdb.db\n    2018-07-08 16:00:00,001 Applying schema\n    \n    2018-07-08 16:00:00,005 Importing file: downloads\\name.basics.tsv.gz\n    2018-07-08 16:00:00,005 Reading number of rows ...\n    2018-07-08 16:00:11,521 Inserting rows into table: people\n    100%|█████████████████████████| 8699964/8699964 [01:23<00:00, 104387.75 rows/s]\n    \n    2018-07-08 16:01:34,868 Importing file: downloads\\title.basics.tsv.gz\n    2018-07-08 16:01:34,868 Reading number of rows ...\n    2018-07-08 16:01:41,873 Inserting rows into table: titles\n    100%|██████████████████████████| 5110779/5110779 [00:58<00:00, 87686.98 rows/s]\n    \n    2018-07-08 16:02:40,161 Importing file: downloads\\title.akas.tsv.gz\n    2018-07-08 16:02:40,161 Reading number of rows ...\n    2018-07-08 16:02:44,743 Inserting rows into table: akas\n    100%|██████████████████████████| 3625334/3625334 [00:37<00:00, 97412.94 rows/s]\n    \n    2018-07-08 16:03:21,964 Importing file: downloads\\title.principals.tsv.gz\n    2018-07-08 16:03:21,964 Reading number of rows ...\n    2018-07-08 16:03:55,922 Inserting rows into table: crew\n    100%|███████████████████████| 28914893/28914893 [03:45<00:00, 128037.21 rows/s]\n    \n    2018-07-08 16:07:41,757 Importing file: downloads\\title.episode.tsv.gz\n    2018-07-08 16:07:41,757 Reading number of rows ...\n    2018-07-08 16:07:45,370 Inserting rows into table: episodes\n    100%|█████████████████████████| 3449903/3449903 [00:21<00:00, 158265.16 rows/s]\n    \n    2018-07-08 16:08:07,172 Importing file: downloads\\title.ratings.tsv.gz\n    2018-07-08 16:08:07,172 Reading number of rows ...\n    2018-07-08 16:08:08,029 Inserting rows into table: ratings\n    100%|███████████████████████████| 846901/846901 [00:05<00:00, 152421.27 rows/s]\n    \n    2018-07-08 16:08:13,589 Creating table indices ...\n    2018-07-08 16:09:16,451 Import successful\n\n\n### Note\nThe import may take a long time, since there are millions of records to\nprocess.\n\nThe above example used python 3.6.4 on windows 7, with the working directory\nbeing on a SSD.\n\n## Data model\n\n![schema](www/schema.png)\n\nThe IMDB dataset gravitates around the notion of a title. It is the primary\nentity. The title ID is what you see in the URL when you visit imdb.com. It is\nthe defacto ID that other movie and TV sites use to uniquely reference a movie\nor show. So a bit of clarification on that ID and how the tables in the dataset\nreference it is in order.\n\nA movie has a title, a TV show has one. An episode has one as well. Well two\nactually; the title of the show, and the title of the episode itself. That is\nwhy there are two links to the same `title_id` attribute in the `titles` table.\n\nTo make the relationships a bit clearer, following are a few query examples\n\n**Find movies named Casablanca and their ratings**\n```sql\nSELECT t.title_id, t.type, t.primary_title, t.premiered, t.genres, r.rating, r.votes\nFROM titles t  INNER JOIN ratings r ON ( r.title_id = t.title_id  )\nWHERE t.primary_title = 'Casablanca' AND t.type = 'movie'\n```\n\nIf the title type is omitted, we'd get results for tv series and other\nproduction types named Casablanca. The current set of title types in IMDB are\nthe following:\n\n```\n{ movie, short, tvEpisode, tvMiniSeries, tvMovie, tvPilot,\n  tvSeries, tvShort, tvSpecial, video, videoGame }\n```\n\n**Find all episodes of the TV show _Better off Ted_ and rank them by rating**\n```sql\n-- // table aliases: st = show-title, et = episode-title\nSELECT st.primary_title, st.premiered, st.genres, e.season_number,\n       e.eposide_number, et.primary_title, r.rating, r.votes\nFROM  titles AS st\nINNER JOIN       episodes  e ON ( e.show_title_id = st.title_id )\nINNER JOIN       titles   et ON ( e.episode_title_id = et.title_id )\nLEFT  OUTER JOIN ratings   r ON ( et.title_id = r.title_id )\nWHERE st.primary_title = 'Better Off Ted'\nAND   st.type = 'tvSeries'\nORDER BY r.rating DESC\n```\n\n**Find which productions both Robert Deniro and Al Pacino acted together on**\n```sql\nSELECT t.title_id, t.type, t.primary_title, t.premiered, t.genres,\n       c1.characters AS 'Pacino played', c2.characters AS 'Deniro played'\nFROM people p1\nINNER JOIN crew   c1 ON ( c1.person_id = p1.person_id )\nINNER JOIN titles  t ON ( t.title_id = c1.title_id )\nINNER JOIN crew   c2 ON ( c2.title_id = t.title_id )\nINNER JOIN people p2 ON ( p2.person_id = c2.person_id )\nWHERE p1.name = 'Al Pacino'\nAND   p2.name = 'Robert De Niro'\nAND   c1.category = 'actor' AND c1.category = c2.category\n```\n\nAs indicated in the query, each person can participate in a production in\ndifferent roles. The crew.category designates the participation role in the\nproduction. The current set of crew categories are:\n```\n{ actor, actress, archive_footage, archive_sound, cinematographer, composer,\n  director, editor, producer, production_designer, self, writer }\n```\n\n### Performance tips\nMany relations over a ten gigabyte database is where a relational\nDB really starts showing its limits. The above query takes quite a while to run.\nOptimally a graph DB would be used instead, since the query is more of that\nnature. Some things can still be done to get an _OK_ response time. If you use\nIDs instead of names, some joins can be eliminated. For example by using the\nIMDB IDs for Pacino and De Niro instead of searching for them by name, the above\nquery is sped up by an order of magnitude or so, by eliminating the index search\nthrough two people tables.\n\n```sql\nSELECT t.title_id, t.type, t.primary_title, t.premiered, t.genres,\n       c1.characters AS 'Pacino played', c2.characters AS 'Deniro played'\nFROM crew c1\nINNER JOIN crew c2 ON ( c1.title_id = c2.title_id  )\nINNER JOIN titles t ON ( c2.title_id = t.title_id  )\nWHERE c1.person_id = 'nm0000199' -- Pacino\nAND   c2.person_id = 'nm0000134' -- De Niro\nAND   c1.category = 'actor' AND c2.category = 'actor'\n```\n\nAnother thing to try is to further normalize the data. There is quite some\nduplication in the data, such at title types, crew categories etc. That\nduplication prevents the DB from efficiently joining tables. Even though a lot\nof indices are used, any collection of duplicates in a column forces the engine\nto essentially do brute force scans through all those duplicates. It's not much\nelse it can do, and this takes time. Normalizing away such duplicates _will_\nmean more joins are required, but it should hopefully allow the engine to more\nquickly whittle down the dataset. I've not tried this, but it seems something\nplausible to invetigate if your queries are too slow for your taste.\n\nFinally, when in doubt. Prefix your query with the `EXPLAIN QUERY PLAN`. If you\nsee `SCAN TABLE` in there, particularly in the beginning, it means the DB is\ndoing a brute-force search through all the data in the column. This is _very_\nslow. You want the query plan to say `SEARCH` everywhere. Create an index for\nthe column indicated as being scanned and rerun the query plan. Hopefully that\nresulted in orders of magnitude query speed improvement.\n\nFor example `sqlite3 imdb.db \"CREATE INDEX myindex ON <table-name> (<slow-column>)\"`\n\n## PyPI\nCurrent status of the project is:\n[![Build Status](https://github.com/jojje/imdb-sqlite/actions/workflows/python-publish.yml/badge.svg)](https://github.com/jojje/imdb-sqlite/actions/workflows/python-publish.yml)\n\n\nThis project uses an automated build and release process.\nThe module in the [pypi][2] repository is automatically built and released from\nthe github source, upon any version tagged commit to the master branch.\n\nClick the status link and check out the logs if you're interested in the\npackage lineage; meaning how the released pypi module was constructed from\nsource.\n\n[1]: https://www.imdb.com/interfaces/\n[2]: https://pypi.org/project/imdb-sqlite/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jojje/imdb-sqlite",
    "keywords": "",
    "license": "GNU GPL v2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "imdb-sqlite",
    "package_url": "https://pypi.org/project/imdb-sqlite/",
    "platform": null,
    "project_url": "https://pypi.org/project/imdb-sqlite/",
    "project_urls": {
      "Homepage": "https://github.com/jojje/imdb-sqlite"
    },
    "release_url": "https://pypi.org/project/imdb-sqlite/1.0.0/",
    "requires_dist": [
      "tqdm (>=4.4.1)"
    ],
    "requires_python": "",
    "summary": "Imports IMDB TSV files into a SQLite database",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16436966,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc7759304189834eb7aca30ee96403cbdd7f8119f4a354c0afd3bfa5376b5b9e",
          "md5": "80c1fe0fedf71fc265d8c714b23308aa",
          "sha256": "ec88f7ea003337c4e9bb0d0ff18de693e227be0f8b1cc3ad50dcc2eed7c28b3c"
        },
        "downloads": -1,
        "filename": "imdb_sqlite-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80c1fe0fedf71fc265d8c714b23308aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6328,
        "upload_time": "2018-07-06T19:34:56",
        "upload_time_iso_8601": "2018-07-06T19:34:56.540868Z",
        "url": "https://files.pythonhosted.org/packages/dc/77/59304189834eb7aca30ee96403cbdd7f8119f4a354c0afd3bfa5376b5b9e/imdb_sqlite-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96153e5670df42580378adc635a4e98f088360780a8592ad56c40bf96cf94027",
          "md5": "dd9a6f9a47e91071103c90d85c2f8270",
          "sha256": "0b37c36efc323f733e4e8711143a27dd21ccd1c4a654e0c007a4bb07f0245c2f"
        },
        "downloads": -1,
        "filename": "imdb-sqlite-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dd9a6f9a47e91071103c90d85c2f8270",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5595,
        "upload_time": "2018-07-06T19:34:57",
        "upload_time_iso_8601": "2018-07-06T19:34:57.609682Z",
        "url": "https://files.pythonhosted.org/packages/96/15/3e5670df42580378adc635a4e98f088360780a8592ad56c40bf96cf94027/imdb-sqlite-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e80799eeaaf1cd580b7f59133c66d80f3cd6ce26293acfdd0993736e775de63",
          "md5": "5ba2925bd7dd8c4b4c5b309279ef999b",
          "sha256": "3d50da64133882788100f2bcb0b32baa194611b29f1025db498e114f655b06bc"
        },
        "downloads": -1,
        "filename": "imdb_sqlite-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ba2925bd7dd8c4b4c5b309279ef999b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7221,
        "upload_time": "2018-07-08T14:34:11",
        "upload_time_iso_8601": "2018-07-08T14:34:11.275743Z",
        "url": "https://files.pythonhosted.org/packages/0e/80/799eeaaf1cd580b7f59133c66d80f3cd6ce26293acfdd0993736e775de63/imdb_sqlite-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7f200a585699e32b98dea109f39f412fa59c6efc827177a4fd233300ffdc1b4",
          "md5": "7da59db5bbc613ebd5e40cb5f74f8079",
          "sha256": "c06159d2f86909c854a648ad5d9d29b677686a837fbe90ef317b234e4a973295"
        },
        "downloads": -1,
        "filename": "imdb-sqlite-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7da59db5bbc613ebd5e40cb5f74f8079",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6572,
        "upload_time": "2018-07-08T14:34:12",
        "upload_time_iso_8601": "2018-07-08T14:34:12.233877Z",
        "url": "https://files.pythonhosted.org/packages/e7/f2/00a585699e32b98dea109f39f412fa59c6efc827177a4fd233300ffdc1b4/imdb-sqlite-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c9a4786fe7cb355db82b8d7a51e0ca20c02438b65abbe77f80c10f8407ba877",
          "md5": "1dbdd0fea4170bb49587d6b72eba6260",
          "sha256": "7a56908475496579b854a651f7dfba0862ece12b8fa6e3eb7c6861ec8d6c7329"
        },
        "downloads": -1,
        "filename": "imdb_sqlite-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1dbdd0fea4170bb49587d6b72eba6260",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7474,
        "upload_time": "2018-07-08T14:58:37",
        "upload_time_iso_8601": "2018-07-08T14:58:37.839913Z",
        "url": "https://files.pythonhosted.org/packages/9c/9a/4786fe7cb355db82b8d7a51e0ca20c02438b65abbe77f80c10f8407ba877/imdb_sqlite-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06991d81f0547590f58655504aee01804005a43679d21a829059c487c0b6a3f6",
          "md5": "5b2c0b601767aa1ae889e14f72f93465",
          "sha256": "cee9ce4b2cd4520319400d26c3e8d93c0c8b11256b2969500be28614921526fd"
        },
        "downloads": -1,
        "filename": "imdb-sqlite-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5b2c0b601767aa1ae889e14f72f93465",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6915,
        "upload_time": "2018-07-08T14:58:38",
        "upload_time_iso_8601": "2018-07-08T14:58:38.929148Z",
        "url": "https://files.pythonhosted.org/packages/06/99/1d81f0547590f58655504aee01804005a43679d21a829059c487c0b6a3f6/imdb-sqlite-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d88784f7be2f7e6f45299faaa81fbd8656e7ab19589e5bceeb5a5097d92043a",
          "md5": "0db22e144c38f675e9e9c04e37e80c15",
          "sha256": "985378fa5839ea251eb98c92b758028b4fbc512a8a85b0bc56b0f59083e5b65d"
        },
        "downloads": -1,
        "filename": "imdb_sqlite-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0db22e144c38f675e9e9c04e37e80c15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7526,
        "upload_time": "2018-07-08T18:11:10",
        "upload_time_iso_8601": "2018-07-08T18:11:10.270452Z",
        "url": "https://files.pythonhosted.org/packages/1d/88/784f7be2f7e6f45299faaa81fbd8656e7ab19589e5bceeb5a5097d92043a/imdb_sqlite-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dff6858471a5ba4bb059fc4b7e1168ef1f9684fa264c9dda34f1e6d525789e4",
          "md5": "c5eb054c5eeb331b8f6a483f3d463276",
          "sha256": "309ec3a58c8f6152c92f6256445edca83786b193425c92a29399e0ae3b2f54de"
        },
        "downloads": -1,
        "filename": "imdb-sqlite-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c5eb054c5eeb331b8f6a483f3d463276",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6976,
        "upload_time": "2018-07-08T18:11:11",
        "upload_time_iso_8601": "2018-07-08T18:11:11.249965Z",
        "url": "https://files.pythonhosted.org/packages/4d/ff/6858471a5ba4bb059fc4b7e1168ef1f9684fa264c9dda34f1e6d525789e4/imdb-sqlite-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93d5e6a3d4b2556a1ec93c56f2861e585c42d88dc14e7e73244d82b6b71d60e7",
          "md5": "ac7e30f9b0f5db1fb876f4167c5d6a12",
          "sha256": "0d35ac5ecb3e4af17cf3cce64a40b31f3649fae669cbed35b018cfa436e63f55"
        },
        "downloads": -1,
        "filename": "imdb_sqlite-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac7e30f9b0f5db1fb876f4167c5d6a12",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14533,
        "upload_time": "2022-12-26T07:31:35",
        "upload_time_iso_8601": "2022-12-26T07:31:35.788566Z",
        "url": "https://files.pythonhosted.org/packages/93/d5/e6a3d4b2556a1ec93c56f2861e585c42d88dc14e7e73244d82b6b71d60e7/imdb_sqlite-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44325e7c254930de5292ecd0670a83a07167685c28a32f0eccfa129c92d2d739",
          "md5": "6b0dc0cac875a9fed2abceb51670d0bf",
          "sha256": "f883fec5deea52d2157eeeaa8a714e5df59386fb333c2c67141b0c0da4526235"
        },
        "downloads": -1,
        "filename": "imdb-sqlite-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6b0dc0cac875a9fed2abceb51670d0bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13380,
        "upload_time": "2022-12-26T07:31:36",
        "upload_time_iso_8601": "2022-12-26T07:31:36.825298Z",
        "url": "https://files.pythonhosted.org/packages/44/32/5e7c254930de5292ecd0670a83a07167685c28a32f0eccfa129c92d2d739/imdb-sqlite-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd53b244aee65ceaa36e0440245a52b9bba67441aa4741b12b345bdeb9cf3339",
          "md5": "13e88aa0b7067612934298d82e25b4d5",
          "sha256": "9dd5f9096e326dc76b74efaba4c85c3dfecaf542caa9f1f9939c350ddd1f3d64"
        },
        "downloads": -1,
        "filename": "imdb_sqlite-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13e88aa0b7067612934298d82e25b4d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16605,
        "upload_time": "2023-01-15T17:41:07",
        "upload_time_iso_8601": "2023-01-15T17:41:07.461447Z",
        "url": "https://files.pythonhosted.org/packages/dd/53/b244aee65ceaa36e0440245a52b9bba67441aa4741b12b345bdeb9cf3339/imdb_sqlite-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfebac283592480bd266c4506c6c06daec8170024c215663e866c79db6726f27",
          "md5": "b3d0384bed0c6776d08a47e269927e3c",
          "sha256": "4c2290b3d3cd269f03bf150470cb4e08a23c706a00aac0e6b511aa9035c500d3"
        },
        "downloads": -1,
        "filename": "imdb-sqlite-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b3d0384bed0c6776d08a47e269927e3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15609,
        "upload_time": "2023-01-15T17:41:08",
        "upload_time_iso_8601": "2023-01-15T17:41:08.771664Z",
        "url": "https://files.pythonhosted.org/packages/df/eb/ac283592480bd266c4506c6c06daec8170024c215663e866c79db6726f27/imdb-sqlite-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd53b244aee65ceaa36e0440245a52b9bba67441aa4741b12b345bdeb9cf3339",
        "md5": "13e88aa0b7067612934298d82e25b4d5",
        "sha256": "9dd5f9096e326dc76b74efaba4c85c3dfecaf542caa9f1f9939c350ddd1f3d64"
      },
      "downloads": -1,
      "filename": "imdb_sqlite-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "13e88aa0b7067612934298d82e25b4d5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16605,
      "upload_time": "2023-01-15T17:41:07",
      "upload_time_iso_8601": "2023-01-15T17:41:07.461447Z",
      "url": "https://files.pythonhosted.org/packages/dd/53/b244aee65ceaa36e0440245a52b9bba67441aa4741b12b345bdeb9cf3339/imdb_sqlite-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dfebac283592480bd266c4506c6c06daec8170024c215663e866c79db6726f27",
        "md5": "b3d0384bed0c6776d08a47e269927e3c",
        "sha256": "4c2290b3d3cd269f03bf150470cb4e08a23c706a00aac0e6b511aa9035c500d3"
      },
      "downloads": -1,
      "filename": "imdb-sqlite-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b3d0384bed0c6776d08a47e269927e3c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15609,
      "upload_time": "2023-01-15T17:41:08",
      "upload_time_iso_8601": "2023-01-15T17:41:08.771664Z",
      "url": "https://files.pythonhosted.org/packages/df/eb/ac283592480bd266c4506c6c06daec8170024c215663e866c79db6726f27/imdb-sqlite-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}