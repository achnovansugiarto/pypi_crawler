{
  "info": {
    "author": "Yevgeniy Plavskin, Shuang Li, Hyun Jung, Federica M. O. Sartori, Cassandra Buzby, Heiko MÃ¼ller, Naomi Ziv, Sasha F. Levy, Mark L. Siegal",
    "author_email": "eugene.plavskin@nyu.edu, sl2803@nyu.edu, mark.siegal@nyu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "PIE Readme\n==========\n\nProcessing Images Easily (PIE) automatically tracks growing microcolonies in low-resolution brightfield and phase-contrast microscopy images. The program works for recognizing microcolonies in a wide range of microbes, and allows automated measurement of growth rate, lag times, and (if applicable) fluorescence across time for microcolonies founded by single cells. PIE recognizes colony outlines very robustly and accurately across a wide range of image brightnesses and focal depths, and allows simultaneous measurements of growth properties and fluorescence intensities with very high throughput (in our lab, ~100,000 colonies per experiment), including in complex, multiphase experiments.\n\nTo learn how to install and use PIE, see the `PIE documentation <https://pie-image.readthedocs.io/en/latest/?>`_.\n\nTo learn how PIE works, see `our preprint <https://doi.org/10.1101/253724>`_.\n\nTo test microcolony recognition and growth tracking on your images, try our `web application <http://pie.hpc.nyu.edu/>`_.\n\nPIE Quickstart\n^^^^^^^^^^^^^^\n\n.. quickstart_inclusion\n\nBelow is a quick reference to essential PIE functions; see the full `PIE documentation <https://pie-image.readthedocs.io/en/latest/?>`_ for more details. If you have any questions about setting up or using PIE, we'd love to help! Feel free to contact us at pie-siegal-lab@nyu.edu or `open an issue on github <https://github.com/Siegallab/PIE/issues>`_.\n\nAll the commands below must be run in Terminal (MacOS/Linux) / Command Prompt (Windows)\n\nInstalling PIE\n--------------\n\nPIE requires **Python 3.6+**, and can be installed using `pip <https://pip.pypa.io/en/stable/>`_, which should come with your python installation.\n\nIn unix/macOS Terminal, run:\n\n.. code-block:: bash\n\n    python -m pip install git+https://github.com/Siegallab/PIE@v1.0.1\n\nor, in Windows Command Prompt, run:\n\n.. code-block:: bash\n\n    py -m pip install git+https://github.com/Siegallab/PIE@v1.0.1\n\nSee `Installing PIE <https://pie-image.readthedocs.io/en/latest/installation.html>`_ for details.\n\nAnalyzing a single image\n------------------------\n\nTo run PIE on a single image:\n\n.. code-block:: bash\n\n    pie analyze_single_image INPUT_IM_PATH OUTPUT_PATH IMAGE_TYPE\n\nWhere:\n\n+ ``INPUT_IM_PATH`` is the path to the image you want to analyze\n+ ``OUTPUT_PATH`` is a directory you'd like to store the results of the analysis in\n+ ``IMAGE_TYPE`` is 'bright' (for cells that are brighter than the image background) or 'dark' (for cells that are darker than the image background)\n\nSee `Running PIE single-image analysis <https://pie-image.readthedocs.io/en/latest/single_im_analysis.html>`_ for details on the inputs and outputs, as well as additional analysis options.\n\n    .. note::\n\n        If your path contains backslash ('\\\\') characters (e.g. on Windows) you will need to use a double backslash instead ('\\\\\\\\') when specifying the path\n\nAnalyzing timelapse experiments\n-------------------------------\n\nTo analyze a time lapse experiment, you need to create a setup file containing analysis parameters, and then run the analysis itself.\n\nTo interactively create a setup file:\n\n.. code-block:: bash\n\n    pie run_setup_wizard\n\nTo analyze the timelapse experiment:\n\n.. code-block:: bash\n\n    pie run_timelapse_analysis PATH_TO_SETUP_FILE\n\nWhere ``PATH_TO_SETUP_FILE`` is the path to the setup file created by the setup wizard.\n\n    .. note::\n\n    \tPIE enforces specific naming conventions for input files in time lapse experiments (e.g. *t01xy0004.tif*). See `Filenames <https://pie-image.readthedocs.io/en/latest/full_experiment.html#filenames>`_ for file naming conventions for time lapse experiments and information on how to encode imaging position, timepoint, and channel during setup.\n\nSee `Running PIE timelapse experiments <https://pie-image.readthedocs.io/en/latest/full_experiment.html>`_ for information on analyzing complex, multi-phase experiments.\n\nCreating movies\n---------------\n\nAfter timelapose experiments are analyzed, PIE can create movies of the output; this is helpful in understanding whether the analysis worked as expected.\n\nTo create simple movies of PIE analysis output for a single imaging position:\n\n.. code-block:: bash\n\n    pie make_position_movie XY_POS PATH_TO_SETUP_FILE\n\nWhere:\n\n+ **XY_POS** is the imaging position number for which the movie should be created (see `Filenames <https://pie-image.readthedocs.io/en/latest/full_experiment.html#filenames>`_ for information on how to encode imaging position in filenames and the setup file)\n+ **PATH_TO_SETUP_FILE** is the path to the setup file created by the setup wizard\n\nSee `Creating movies of image analysis results <https://pie-image.readthedocs.io/en/latest/movies.html>`_ for additional options and examples of more movie types that can be created from PIE output.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Siegallab/PIE",
    "keywords": "image-analysis microscopy",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PIE",
    "package_url": "https://pypi.org/project/PIE/",
    "platform": null,
    "project_url": "https://pypi.org/project/PIE/",
    "project_urls": {
      "Homepage": "https://github.com/Siegallab/PIE"
    },
    "release_url": "https://pypi.org/project/PIE/1.0.1/",
    "requires_dist": [
      "numpy (>=1.16.0)",
      "opencv-contrib-python (>4.0.0.0)",
      "pandas (>=1.1.0)",
      "Pillow (>=7.2.0)",
      "scipy (>=1.1.0)",
      "plotnine (>=0.7.1)",
      "pyarrow",
      "Click (>=7.0)",
      "nose ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "Colony recognition and growth measurement for microbial imaging",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15227701,
  "releases": {
    "0.6": [],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8285b747b6dead8520e5aa41987f4deef67012d64c75144e75d47bcdce11e2ee",
          "md5": "ce072a5e18acf741a083de6b2870207b",
          "sha256": "51f8a9a80d6b05cf1e2e22d2871a632abe21a98c607a1fb4c79558aa6abd403e"
        },
        "downloads": -1,
        "filename": "PIE-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce072a5e18acf741a083de6b2870207b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 108365,
        "upload_time": "2022-09-27T13:34:49",
        "upload_time_iso_8601": "2022-09-27T13:34:49.087779Z",
        "url": "https://files.pythonhosted.org/packages/82/85/b747b6dead8520e5aa41987f4deef67012d64c75144e75d47bcdce11e2ee/PIE-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3402113a4043af9c8c912bf08c9a6a10f2c8df18494c673e428d579a374108f3",
          "md5": "4a9153d467893f4e5211da927167b348",
          "sha256": "5c847b456481e97f3811f8414e4bbb5ccbe000cfd2d1ed25b18ae9c3a0d1eb65"
        },
        "downloads": -1,
        "filename": "PIE-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a9153d467893f4e5211da927167b348",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 101150,
        "upload_time": "2022-09-27T13:34:51",
        "upload_time_iso_8601": "2022-09-27T13:34:51.158540Z",
        "url": "https://files.pythonhosted.org/packages/34/02/113a4043af9c8c912bf08c9a6a10f2c8df18494c673e428d579a374108f3/PIE-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8285b747b6dead8520e5aa41987f4deef67012d64c75144e75d47bcdce11e2ee",
        "md5": "ce072a5e18acf741a083de6b2870207b",
        "sha256": "51f8a9a80d6b05cf1e2e22d2871a632abe21a98c607a1fb4c79558aa6abd403e"
      },
      "downloads": -1,
      "filename": "PIE-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ce072a5e18acf741a083de6b2870207b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 108365,
      "upload_time": "2022-09-27T13:34:49",
      "upload_time_iso_8601": "2022-09-27T13:34:49.087779Z",
      "url": "https://files.pythonhosted.org/packages/82/85/b747b6dead8520e5aa41987f4deef67012d64c75144e75d47bcdce11e2ee/PIE-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3402113a4043af9c8c912bf08c9a6a10f2c8df18494c673e428d579a374108f3",
        "md5": "4a9153d467893f4e5211da927167b348",
        "sha256": "5c847b456481e97f3811f8414e4bbb5ccbe000cfd2d1ed25b18ae9c3a0d1eb65"
      },
      "downloads": -1,
      "filename": "PIE-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4a9153d467893f4e5211da927167b348",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 101150,
      "upload_time": "2022-09-27T13:34:51",
      "upload_time_iso_8601": "2022-09-27T13:34:51.158540Z",
      "url": "https://files.pythonhosted.org/packages/34/02/113a4043af9c8c912bf08c9a6a10f2c8df18494c673e428d579a374108f3/PIE-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}