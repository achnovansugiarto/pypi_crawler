{
  "info": {
    "author": "Robin David",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Operating System :: OS Independent",
      "Topic :: Security"
    ],
    "description": "# Qsynthesis\n\nQSynthesis is a Python3 API to perform I/O based program synthesis\nof bitvector expressions. It aims at facilitating code deobfuscation.\nThe algorithm is greybox approach combining both a blackbox I/O based\nsynthesis and a whitebox AST search to synthesize sub-expressions *(if\nthe root node cannot be synthesized)*. \n\nThis algorithm as originaly been described at the BAR academic workshop:\n\n* [QSynth: A Program Synthesis based Approach for Binary Code Deobfuscation](https://archive.bar/pdfs/bar2020-preprint9.pdf)\n  (benchmark used are available: [here](https://github.com/werew/qsynth-artifacts))\n\nThe code has been release as part of the following Black Hat talk:\n\n* [Greybox Program Synthesis: A New Approach to Attack Dataflow Obfuscation](https://www.blackhat.com/us-21/briefings/schedule/index.html#greybox-program-synthesis-a-new-approach-to-attack-dataflow-obfuscation-22930)\n\n**Disclaimer: This framework is experimental, and shall only be used for experimentation purposes.\nIt mainly aims at stimulating research in this area.**\n\n\n## Documentation\n\nThe installation, examples, and API documentation is available on the dedicated documentation: [Documentation](https://quarkslab.github.io/qsynthesis)\n\n\n## Functionalities\n\nThe core synthesis is based on [Triton](https://triton.quarkslab.com) symbolic engine on which is built\nthe whole framework. It provides the following functionalities:\n\n* synthesis of bitvector expressions\n* ability to check through SMT the semantic equivalence of synthesized expressions\n* ability to synthesize constants *(if the expression encode a constant)*\n* ability to improve oracles (pre-computed tables) overtime through a learning mechanism\n* ability to reassemble synthesized expression back to assembly\n* ability to serve oracles through a REST API to facilitate the synthesis usage  \n* an IDA plugin providing an integration of the synthesis\n\n\n## Quick start\n\n### Installation\n\nIn order to work Triton first has to be installed: [install documentation](https://triton.quarkslab.com/documentation/doxygen/index.html#install_sec).\nTriton does not automatically install itself in a virtualenv, copy it in your venv or use --system-site-packages when configuring your venv.\n\nThen:\n\n    $ git clone https://github.com/quarkslab/qsynthesis.git\n    $ cd qsynthesis\n    $ pip3 install '.[all]'\n\nThe ``[all]`` will installed all dependencies *(see the documentation for a light install)*.\n\n### Table generation\n\nThe synthesis algorithm requires generating oracle tables derived from a grammar *(a\nset of variables and operators)*. Qsynthesis installation provides the utility ``qsynthesis-table-manager``\nenabling manipulating tables. The following command generate a table with 3 variables of 64 bits,\n5 operators using a vector of 16 inputs. We limit the generation to 5 million entries.\n\n    $ qsynthesis-table-manager generate -bs 64 --var-num 3 --input-num 16 --random-level 5 --ops AND,NEG,MUL,XOR,NOT --watchdog 80 --limit 5000000 my_oracle_table\n    Generate Table\n    Watchdog value: 80.0\n    Depth 2 (size:3) (Time:0m0.23120s)\n    Depth 3 (size:21) (Time:0m0.23198s)\n    Depth 4 (size:574) (Time:0m0.26068s)\n    Depth 5 (size:400858) (Time:0m21.23231s)\n    Threshold reached, generation interrupted\n    Stop required\n    Depth 5 (size:5000002) (Time:4m52.56009s) [RAM:9.52Gb]\n\n\n\nNote: The generation process is RAM consuming the ``--watchdog`` enables setting a\npercentage of the RAM above which the generation is interrupted.\n\n### Synthesizing a bitvector expression\n\nWe then can try simplifying a seemingly obfuscated expression with:\n\n```python\nfrom qsynthesis import SimpleSymExec, TopDownSynthesizer, InputOutputOracleLevelDB\n\nblob = b'UH\\x89\\xe5H\\x89}\\xf8H\\x89u\\xf0H\\x89U\\xe8H\\x89M\\xe0L\\x89E\\xd8H\\x8bE' \\\n       b'\\xe0H\\xf7\\xd0H\\x0bE\\xf8H\\x89\\xc2H\\x8bE\\xe0H\\x01\\xd0H\\x8dH\\x01H\\x8b' \\\n       b'E\\xf8H+E\\xe8H\\x8bU\\xe8H\\xf7\\xd2H\\x0bU\\xf8H\\x01\\xd2H)\\xd0H\\x83\\xe8' \\\n       b'\\x02H!\\xc1H\\x8bE\\xe0H\\xf7\\xd0H\\x0bE\\xf8H\\x89\\xc2H\\x8bE\\xe0H\\x01\\xd0' \\\n       b'H\\x8dp\\x01H\\x8bE\\xf8H+E\\xe8H\\x8bU\\xe8H\\xf7\\xd2H\\x0bU\\xf8H\\x01\\xd2' \\\n       b'H)\\xd0H\\x83\\xe8\\x02H\\t\\xf0H)\\xc1H\\x89\\xc8H\\x83\\xe8\\x01]\\xc3'\n\n# Perform symbolic execution of the instructions\nsymexec = SimpleSymExec(\"x86_64\")\nsymexec.initialize_register('rip', 0x40B160)  # arbitrary address\nsymexec.initialize_register('rsp', 0x800000)  # arbitrary stack\nsymexec.execute_blob(blob, 0x40B160)\nrax = symexec.get_register_ast(\"rax\")  # retrieve rax register expressions\n\n# Load lookup tables\nltm = InputOutputOracleLevelDB.load(\"my_oracle_table\")\n\n# Perform Synthesis of the expression\nsynthesizer = TopDownSynthesizer(ltm)\nsynt_rax, simp = synthesizer.synthesize(rax)\n\nprint(f\"expression: {rax.pp_str}\")\nprint(f\"synthesized expression: {synt_rax.pp_str} [{simp}]\")\n```\n\n## Limitations\n\n* synthesis accuracy limited by pre-computed tables exhaustivness\n* table generation limited by RAM consumption\n* reassembly cannot involve memory variable, destination is necessarily a register and\n  architecture depends on llvmlite *(thus mostly x86_64)*\n* the code references trace-based synthesis which is disabled *(as the underlying\n  framework is not yet open-source)*  \n\n## Authors\n\n* Robin David (@RobinDavid), Quarkslab\n\n## Contributors\n\nHuge thanks to contributors to this research:\n\n* Luigi Coniglio\n* Jonathan Salwan\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/quarkslab/qsynthesis",
    "keywords": "",
    "license": "AGPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qsynthesis",
    "package_url": "https://pypi.org/project/qsynthesis/",
    "platform": null,
    "project_url": "https://pypi.org/project/qsynthesis/",
    "project_urls": {
      "Bug Tracker": "https://github.com/quarkslab/qsynthesis/issues",
      "Documentation": "https://quarkslab.github.io/qsynthesis/",
      "Homepage": "https://github.com/quarkslab/qsynthesis",
      "Source": "https://github.com/quarkslab/qsynthesis"
    },
    "release_url": "https://pypi.org/project/qsynthesis/0.1.2/",
    "requires_dist": [
      "triton-library",
      "ordered-set",
      "psutil",
      "click",
      "plyvel",
      "requests",
      "capstone",
      "pydffi (>=0.9.1)",
      "arybo ; extra == 'all'",
      "llvmlite ; extra == 'all'",
      "sympy ; extra == 'all'",
      "fastapi ; extra == 'all'",
      "uvicorn ; extra == 'all'",
      "sympy ; extra == 'generator'",
      "arybo ; extra == 'reassembly'",
      "llvmlite ; extra == 'reassembly'",
      "fastapi ; extra == 'server'",
      "uvicorn ; extra == 'server'"
    ],
    "requires_python": "",
    "summary": "Python API to synthesize Triton AST's",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15889915,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80221be6c077a03e49b6e11a7d448c15e558120bd8fbe21b98fab74548aaf2f3",
          "md5": "64f8ddd885a67ae4efa8b9dc934b1e8e",
          "sha256": "3083a7e0e7a081516a34f545549c0f27cc92ca4648e8c27d4251bbe070f3f280"
        },
        "downloads": -1,
        "filename": "qsynthesis-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64f8ddd885a67ae4efa8b9dc934b1e8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 81906,
        "upload_time": "2022-11-25T12:55:00",
        "upload_time_iso_8601": "2022-11-25T12:55:00.799674Z",
        "url": "https://files.pythonhosted.org/packages/80/22/1be6c077a03e49b6e11a7d448c15e558120bd8fbe21b98fab74548aaf2f3/qsynthesis-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f7ad6fdfbbfe528f92799fb90a26fec59c46758693d4f70c162621452de52d",
          "md5": "f7e02a297b4bfc0cf1fe31a9bb5cdbe3",
          "sha256": "2f819a80f6aed90b68937016eb7276d60bad4cb81c6896f134b2974fd6d181ae"
        },
        "downloads": -1,
        "filename": "qsynthesis-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f7e02a297b4bfc0cf1fe31a9bb5cdbe3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72649,
        "upload_time": "2022-11-25T12:55:02",
        "upload_time_iso_8601": "2022-11-25T12:55:02.306690Z",
        "url": "https://files.pythonhosted.org/packages/a4/f7/ad6fdfbbfe528f92799fb90a26fec59c46758693d4f70c162621452de52d/qsynthesis-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c04e55d4395185ef116e64adcc3959374dc1d4c71343f48cd0c345c46316b2b",
          "md5": "15bbca8d0966d167aa4d18082ac7a5e7",
          "sha256": "6e207a3b8f7974ba3193cc6cf8d5e791072432c1cb88cb561dedbe2270c538bf"
        },
        "downloads": -1,
        "filename": "qsynthesis-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15bbca8d0966d167aa4d18082ac7a5e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 84228,
        "upload_time": "2022-11-25T13:03:44",
        "upload_time_iso_8601": "2022-11-25T13:03:44.546914Z",
        "url": "https://files.pythonhosted.org/packages/3c/04/e55d4395185ef116e64adcc3959374dc1d4c71343f48cd0c345c46316b2b/qsynthesis-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb9108a41ca7f1cc0df305a4646fe6607a5ec474c908bb3316cc0afa876d3c5",
          "md5": "173913afdb0774c6d9db0912a3def8e5",
          "sha256": "e7e8df3f9457c23cac68db76cddeea2e7c1c2d3f9f68ac6bd3838147556be9e3"
        },
        "downloads": -1,
        "filename": "qsynthesis-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "173913afdb0774c6d9db0912a3def8e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 74969,
        "upload_time": "2022-11-25T13:03:46",
        "upload_time_iso_8601": "2022-11-25T13:03:46.002984Z",
        "url": "https://files.pythonhosted.org/packages/ae/b9/108a41ca7f1cc0df305a4646fe6607a5ec474c908bb3316cc0afa876d3c5/qsynthesis-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c04e55d4395185ef116e64adcc3959374dc1d4c71343f48cd0c345c46316b2b",
        "md5": "15bbca8d0966d167aa4d18082ac7a5e7",
        "sha256": "6e207a3b8f7974ba3193cc6cf8d5e791072432c1cb88cb561dedbe2270c538bf"
      },
      "downloads": -1,
      "filename": "qsynthesis-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "15bbca8d0966d167aa4d18082ac7a5e7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 84228,
      "upload_time": "2022-11-25T13:03:44",
      "upload_time_iso_8601": "2022-11-25T13:03:44.546914Z",
      "url": "https://files.pythonhosted.org/packages/3c/04/e55d4395185ef116e64adcc3959374dc1d4c71343f48cd0c345c46316b2b/qsynthesis-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aeb9108a41ca7f1cc0df305a4646fe6607a5ec474c908bb3316cc0afa876d3c5",
        "md5": "173913afdb0774c6d9db0912a3def8e5",
        "sha256": "e7e8df3f9457c23cac68db76cddeea2e7c1c2d3f9f68ac6bd3838147556be9e3"
      },
      "downloads": -1,
      "filename": "qsynthesis-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "173913afdb0774c6d9db0912a3def8e5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 74969,
      "upload_time": "2022-11-25T13:03:46",
      "upload_time_iso_8601": "2022-11-25T13:03:46.002984Z",
      "url": "https://files.pythonhosted.org/packages/ae/b9/108a41ca7f1cc0df305a4646fe6607a5ec474c908bb3316cc0afa876d3c5/qsynthesis-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}