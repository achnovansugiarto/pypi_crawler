{
  "info": {
    "author": "Grasselli's Geomechanics Group - University of Toronto",
    "author_email": "aly.abdelaziz@mail.utoronto.ca",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "## pyrockmodulus.modulus_ratio()\r\n\r\nLoads the digitized Deere_Miller clusters and plots them based on the Major Rock Type *(i.e., Igneous / Metamorphic / Sedimentary)*.\r\n- Plot all Major Rock Type in one graph.\r\n- Plots them individually.\r\n\r\n**Deere-Miller [Modulus Ratio] Example**\r\n\r\n1. Plot the Modulus Ratio of just the Sedimentary clusters with the ISRM 1979 category classification. \r\n```python\r\nimport pyrockmodulus\r\nimport matplotlib.pyplot as plt\r\n\r\nxx = pyrockmodulus.modulus_ratio()\r\nxx.initial_processing(plot_all_clusters=False, rock_type_to_plot='Sedimentary', ucs_class_type=\"ISRMCAT\\n1979\")\r\nplt.ylabel(\"E (GPa)\")\r\nplt.xlabel(\"UCS (MPa)\")\r\nplt.show()\r\n```\r\n![](images/example01.png)\r\n\r\n2. Plot the Modulus Ratio with all the categories without the classification. Legend enabled. \r\n\r\n```python\r\nimport pyrockmodulus\r\nimport matplotlib.pyplot as plt\r\n\r\nxx = pyrockmodulus.modulus_ratio()\r\nxx.initial_processing(plot_all_clusters=True)\r\nplt.ylabel(\"E (GPa)\")\r\nplt.xlabel(\"UCS (MPa)\")\r\nplt.legend()\r\nplt.show()\r\n```\r\n![](images/example02.png)\r\n\r\n3. Plot the Modulus Ratio of just the Sedimentary clusters overlaid with data from tests.\r\n\r\n```python\r\nimport pyrockmodulus\r\nimport matplotlib.pyplot as plt\r\n# Data Set\r\nucs_data = [75.33, 99.03, 111.69, 30.17, 73.76, 41.69, 42.09, 60.99, 39.65, 94.52, 104.6, 102.03]\r\nE_data = [18.31, 21.85, 20.51, 8.62, 25.72, 18.68, 9.2, 14.67, 7.38, 8.48, 8.7, 8.82]\r\nxx = pyrockmodulus.modulus_ratio()\r\nplotting_axis = xx.initial_processing(rock_type_to_plot='Sedimentary')\r\n# Plot the data on the Deere-Miller axis\r\nplotting_axis.scatter(ucs_data, E_data, label='Test Results', marker='.')\r\nplt.ylabel(\"E (GPa)\")\r\nplt.xlabel(\"UCS (MPa)\")\r\nplt.legend()\r\nplt.show()\r\n```\r\n ![](images/example_withdata.png)\r\n\r\n## pyrockmodulus.strength_ratio()\r\n\r\nLoads the constructed Tatone et al. UCS:BDS clusters and plots them based on the Major Rock Type *(i.e., Igneous / Metamorphic / Sedimentary)*.\r\n- Plot all Major Rock Type in one graph.\r\n- Plots them individually.\r\n\r\nThe functionality is similar to that of the modulus ratio. \r\n\r\n```python\r\nimport pyrockmodulus\r\nimport matplotlib.pyplot as plt\r\n\r\nxx = pyrockmodulus.strength_ratio()\r\nxx.initial_processing(plot_all_clusters=False, rock_type_to_plot='Sedimentary')\r\nplt.ylabel(\"BDS (MPa)\")\r\nplt.xlabel(\"UCS (MPa)\")\r\nplt.show()\r\n```\r\n![](images/example06.png)\r\n\r\n## pyrockmodulus.poisson_density()\r\n\r\nPlot the most common ranges of density and poisson's ratio for rock. This data can then be overlaid with data from a specific source to show comparison. \r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\nimport pyrockmodulus\r\nxx = pyrockmodulus.poisson_density()\r\ndf_data = xx.initial_processing()\r\nax1 = xx.plot_span_chart(df_data, ['Min_D', 'Max_D'], 'Density', r'$\\rho$ g/cm$^{3}$')\r\nax1.axvline(2.0, lw=1, ls='--')\r\nplt.show()\r\n```\r\n\r\n![](images/example_PR_DEN.png)\r\n\r\n## UCS_Descriptions.py\r\n\r\nThis file holds the dictionaries for the various UCS classification systems available. References for those systems are within the file. All values **must** be in **MPa**.\r\nAvaliable classificatin systems 'ISRM\\n1977', 'ISRMCAT\\n1979', 'Bieniawski\\n1974', 'Jennings\\n1973', 'Broch & Franklin\\n1972', 'Geological Society\\n1970', 'Deere & Miller\\n1966', 'Coates\\n1964', 'Coates & Parsons\\n1966', 'ISO 14689\\n2017', 'Anon\\n1977', 'Anon\\n1979', 'Ramamurthy\\n2004'\r\n\r\n**UCS Classification System Examples** \r\n\r\n1. Display the limits and the classification system default in the script. \r\n```python\r\nimport pyrockmodulus.rock_variables as ucs_class\r\nucs_class.ucs_strength_criteria('ISRMCAT\\n1979')\r\n```\r\nOutput\r\n```\r\n(['R0', 'R1', 'R2', 'R3', 'R4', 'R5', 'R6'], [0.25, 1, 5, 25, 50, 100, 250, 1000])\r\n```\r\n\r\n2. A horizontal bar like plot to show the various uniaxial strength classification systems.\r\n\r\n```python\r\nimport pyrockmodulus.ucs_bar_chart_plot as ucs_classification_plot\r\nimport matplotlib.pyplot as plt\r\n\r\nucs_class = ucs_classification_plot.initial_processing()\r\nplt.show()\r\n```\r\n![](images/example04.png)\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alicarlos/digital_modulus_strength_ratio",
    "keywords": "Modulus_Ratio Strength_Ratio Deere_Miller Rock_Classification",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyrockmodulus",
    "package_url": "https://pypi.org/project/pyrockmodulus/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyrockmodulus/",
    "project_urls": {
      "Homepage": "https://github.com/alicarlos/digital_modulus_strength_ratio"
    },
    "release_url": "https://pypi.org/project/pyrockmodulus/0.5/",
    "requires_dist": [
      "pandas (>=0.0)",
      "numpy (>=1.0)",
      "scipy (~=1.2.1)",
      "matplotlib (>=3.5)",
      "seaborn (~=0.11.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Module to plot Modulus and Strength ratios for rock.",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16284544,
  "releases": {
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "398e57561027d472553e143709d31e3046f75cee8df6974e4a64cb4be88388c6",
          "md5": "cc3bed491f1865f0ad914f48dde0dbca",
          "sha256": "ef957208d2ba879d745cd88b1eeb5a763008a8c96710bcbdcde34962bc158883"
        },
        "downloads": -1,
        "filename": "pyrockmodulus-0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc3bed491f1865f0ad914f48dde0dbca",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 105425,
        "upload_time": "2023-01-03T03:06:31",
        "upload_time_iso_8601": "2023-01-03T03:06:31.038021Z",
        "url": "https://files.pythonhosted.org/packages/39/8e/57561027d472553e143709d31e3046f75cee8df6974e4a64cb4be88388c6/pyrockmodulus-0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "398e57561027d472553e143709d31e3046f75cee8df6974e4a64cb4be88388c6",
        "md5": "cc3bed491f1865f0ad914f48dde0dbca",
        "sha256": "ef957208d2ba879d745cd88b1eeb5a763008a8c96710bcbdcde34962bc158883"
      },
      "downloads": -1,
      "filename": "pyrockmodulus-0.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cc3bed491f1865f0ad914f48dde0dbca",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 105425,
      "upload_time": "2023-01-03T03:06:31",
      "upload_time_iso_8601": "2023-01-03T03:06:31.038021Z",
      "url": "https://files.pythonhosted.org/packages/39/8e/57561027d472553e143709d31e3046f75cee8df6974e4a64cb4be88388c6/pyrockmodulus-0.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}