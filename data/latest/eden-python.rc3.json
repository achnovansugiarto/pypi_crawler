{
  "info": {
    "author": "Mayukh Deb, Gene Kogan",
    "author_email": "mayukhmainak2000@gmail.com, kogan.gene@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Eden\n\n[![tests](https://github.com/abraham-ai/eden/actions/workflows/main.yml/badge.svg)](https://github.com/abraham-ai/eden/actions/workflows/main.yml)\n[![codecov](https://codecov.io/gh/abraham-ai/eden/branch/master/graph/badge.svg?token=83QZRAE4XS)](https://codecov.io/gh/abraham-ai/eden)\n\n<img src = \"https://raw.githubusercontent.com/abraham-ai/eden/master/images/cover.png\">\n\n> You were in Eden, the garden of God. Every kind of precious stone adorned you: ruby, topaz, and diamond, beryl, onyx, and jasper, sapphire, turquoise, and emerald. Your mountings and settings were crafted in gold, prepared on the day of your creation.\n>\n> Ezekiel 28:13\n\nEden helps you to deploy your AI art pipelines (or sometimes other stuff) as a hosted endpoint with support for multiple GPUs and scaling over multiple machines. If you're new here, check out the [examples](https://github.com/abraham-ai/eden#examples)\n\n```\npip install eden-python\n```\n\n## Setting up a block\n\nHosting with `eden` requires minimal changes to your existing code. Each unit within `eden` is called a `Block`, they're the units which take certain inputs and generate art accordingly.\n\nThe first step is to configure `run()`.\n\n```python\nfrom eden.block import Block\nfrom eden.datatypes import Image\n\neden_block = Block()\n```\n\n`run()` is supposed to be the function that runs every time someone wants to use this pipeline to generate art. For now it supports text, images, and numbers as inputs.\n\n```python\nmy_args = {\n        'prompt': 'let there be light', ## text\n        'number': 12345,                ## numbers\n        'input_image': Image()          ## images require eden.datatypes.Image()\n    }\n\n@eden_block.run(args = my_args)\ndef do_something(config):\n\n    pil_image = config['input_image']\n    some_number = config['number']\n\n    return {\n        'text': 'hello world',  ## returning text\n        'number': some_number,       ## returning numbers\n        'image': Image(pil_image)    ## Image() works on PIL.Image, numpy.array and on jpg an png files (str)\n    }\n```\n\n## Hosting a block\n\n```python\nfrom eden.hosting import host_block\n\nhost_block(\n    block = eden_block,\n    port= 5656,\n    logfile= 'logs.log',\n    log_level= 'info',\n    max_num_workers = 5\n)\n```\n\n- `block` (`eden.block.Block`): The eden block you'd want to host.\n- `port` (`int, optional`): Localhost port where the block would be hosted. Defaults to `8080`.\n- `host` (`str`): specifies where the endpoint would be hosted. Defaults to `'0.0.0.0'`.\n- `max_num_workers` (`int, optional`): Maximum number of tasks to run in parallel. Defaults to `4`.\n- `redis_port` (`int, optional`): Port number for celery's redis server. Defaults to `6379`.\n- `redis_host` (`str, optional`): Place to host redis for `eden.queue.QueueData`. Defaults to `\"localhost\"`.\n- `requires_gpu` (`bool, optional`): Set this to `False` if your tasks dont necessarily need GPUs.\n- `log_level` (`str, optional`): Can be 'debug', 'info', or 'warning'. Defaults to `'warning'`\n- `exclude_gpu_ids` (`list, optional`): List of gpu ids to not use for hosting. Example: `[2,3]`. Defaults to `[]`\n- `logfile`(`str, optional`): Name of the file where the logs would be stored. If set to `None`, it will show all logs on stdout. Defaults to `'logs.log'`\n- `queue_name`(`str, optional`): Name of the celery queue used for the block. Useful when hosting multiple blocks with the same redis. (defaults on `celery`)\n\n## Client\n\nA `Client` is the unit that sends requests to a hosted block.\n\n```python\nfrom eden.client import Client\nfrom eden.datatypes import Image\n\nc = Client(url = 'http://127.0.0.1:5656', username= 'abraham')\n```\n\nAfter you start a task with `run()` as shown below, it returns a token as `run_response['token']`. This token should be used later on to check the task status or to obtain your results.\n\n> **Note**: `Image()` is compatible with following types: `PIL.Image`, `numpy.array` and filenames (`str`) ending with `.jpg` or `.png`\n\n```python\nconfig = {\n    'prompt': 'let there be light',\n    'number': 2233,\n    'input_image': Image('your_image.png')  ## Image() supports jpg, png filenames, np.array or PIL.Image\n}\n\nrun_response = c.run(config)\n```\n\nFetching results/checking task status using the token can be done using `fetch()`.\n\n```python\nresults = c.fetch(token = run_response['token'])\nprint(results)\n```\n\n## Examples\n\n- Hosting a Resnet18 inference endpoint with eden: [server](https://github.com/abraham-ai/eden/blob/master/examples/not_so_minimal/server.py) + [client](https://github.com/abraham-ai/eden/blob/master/examples/not_so_minimal/client.py)\n- A very (very) minimal example which is good for starting out on eden: [server](https://github.com/abraham-ai/eden/blob/master/examples/minimal/server.py) + [client](https://github.com/abraham-ai/eden/blob/master/examples/minimal/client.py)\n- Working with intermediate results: [server](https://github.com/abraham-ai/eden/blob/master/examples/writing_intermediate_outputs/server.py) + [client](https://github.com/abraham-ai/eden/blob/master/examples/writing_intermediate_outputs/client.py)\n\n## Prometheus metrics out of the box\n\nEden supports the following internal metrics (`/metrics`) which have been exposed via prometheus:\n\n* `num_queued_jobs`: Specifies the number of queued jobs\n* `num_running_jobs`: Specifies the number of running jobs\n* `num_failed_jobs`: Specifies the number of failed jobs\n* `num_succeeded_jobs`: Specifies the number of succeeded jobs\n\n## Development\n\nSetup \n```\ngit clone git@github.com:abraham-ai/eden.git\ncd eden\npython3 setup.py develop\n```\nCompile dependencies with pip-compile (this generates a `requirements.txt` file). You will need `pip-tools` installed for this to work (`pip install pip-tools`)\n```\npip-compile requirements.in\n```\n\nYou also have to install redis on your machine\n```\nsudo apt-get install redis-server\nsudo service redis-server start\n```\n\nOptionally, if you want to stop redis after you're done then you can run:\n\n```\nsudo service redis-server stop\n```\n\nRunnning tests on your local machine can be done with:\n```\nsh test_local.sh\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/abraham-ai/eden",
    "keywords": "hosting,machine learning,neural networks,generative art",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eden-python",
    "package_url": "https://pypi.org/project/eden-python/",
    "platform": null,
    "project_url": "https://pypi.org/project/eden-python/",
    "project_urls": {
      "Homepage": "https://github.com/abraham-ai/eden"
    },
    "release_url": "https://pypi.org/project/eden-python/0.2.0/",
    "requires_dist": [
      "amqp (==5.1.1)",
      "async-timeout (==4.0.2)",
      "billiard (==3.6.4.0)",
      "celery (==5.2.7)",
      "certifi (==2022.6.15)",
      "charset-normalizer (==2.1.0)",
      "click (==8.1.3)",
      "click-didyoumean (==0.3.0)",
      "click-plugins (==1.1.1)",
      "click-repl (==0.2.0)",
      "deprecated (==1.2.13)",
      "fastapi (==0.68.1)",
      "gitdb (==4.0.9)",
      "gitpython (==3.1.27)",
      "h11 (==0.13.0)",
      "idna (==3.3)",
      "kombu (==5.2.4)",
      "numpy (==1.23.1)",
      "nvidia-ml-py3 (==7.352.0)",
      "opencv-python (==4.6.0.66)",
      "packaging (==21.3)",
      "pillow (==9.2.0)",
      "prometheus-client (==0.14.1)",
      "prompt-toolkit (==3.0.30)",
      "pydantic (==1.8.2)",
      "pyparsing (==3.0.9)",
      "pytz (==2022.1)",
      "redis (==4.3.4)",
      "requests (==2.28.1)",
      "six (==1.16.0)",
      "smmap (==5.0.0)",
      "starlette (==0.14.2)",
      "starlette-exporter (==0.13.0)",
      "tqdm (==4.64.0)",
      "typing-extensions (==3.10.0.2)",
      "urllib3 (==1.26.11)",
      "uvicorn (==0.18.2)",
      "vine (==5.0.0)",
      "wcwidth (==0.2.5)",
      "wrapt (==1.14.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Convert your python function into a hosted endpoint with minimal changes to your existing code",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14637659,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d53e2b66f28d5c833935d5b778331e95c8a89a3dae3da7e01446b25776ee687b",
          "md5": "307d8fef33e5386c36f2c6aded3bb0d3",
          "sha256": "0a398d72384885abdc4ee4f4cb6ccaab6904cece3bf121a43bcbf4f8635293a0"
        },
        "downloads": -1,
        "filename": "eden_python-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "307d8fef33e5386c36f2c6aded3bb0d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41094,
        "upload_time": "2022-02-13T20:13:11",
        "upload_time_iso_8601": "2022-02-13T20:13:11.984366Z",
        "url": "https://files.pythonhosted.org/packages/d5/3e/2b66f28d5c833935d5b778331e95c8a89a3dae3da7e01446b25776ee687b/eden_python-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab22c95ddfc036952c84943b96242a9197f40f041cff4975b06d2383d5de626b",
          "md5": "ed5b9c13b9742959d94f275fd0884062",
          "sha256": "38151e36ffdc21f95b4872c1785361b5376ea9dac2a56ba0ff240843c19d6dd7"
        },
        "downloads": -1,
        "filename": "eden-python-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ed5b9c13b9742959d94f275fd0884062",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34339,
        "upload_time": "2022-02-13T20:13:14",
        "upload_time_iso_8601": "2022-02-13T20:13:14.207744Z",
        "url": "https://files.pythonhosted.org/packages/ab/22/c95ddfc036952c84943b96242a9197f40f041cff4975b06d2383d5de626b/eden-python-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f282ecfaaf1f3e1b74448da264eee8c7147b45d7982d557b88f96e301a09b6a",
          "md5": "bb1ab17aff0cd340a170717a5d9fdd2d",
          "sha256": "69c2af82d8dcdcd9aa9a58b1328dd4c6355d34058a9843b74c10ea1bbe8ac208"
        },
        "downloads": -1,
        "filename": "eden_python-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb1ab17aff0cd340a170717a5d9fdd2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41532,
        "upload_time": "2022-04-24T18:56:37",
        "upload_time_iso_8601": "2022-04-24T18:56:37.894620Z",
        "url": "https://files.pythonhosted.org/packages/9f/28/2ecfaaf1f3e1b74448da264eee8c7147b45d7982d557b88f96e301a09b6a/eden_python-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d2f779c27f62987923fc799033a97f4a0329e5cbde477fa9bf410a736ec9588",
          "md5": "87545799febd429c1a0bd9eede6885a2",
          "sha256": "0a90236cb819c2a245dfeb983bdfce205a8e590ec838e1063289747d775ead3c"
        },
        "downloads": -1,
        "filename": "eden-python-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "87545799febd429c1a0bd9eede6885a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34734,
        "upload_time": "2022-04-24T18:56:41",
        "upload_time_iso_8601": "2022-04-24T18:56:41.010636Z",
        "url": "https://files.pythonhosted.org/packages/8d/2f/779c27f62987923fc799033a97f4a0329e5cbde477fa9bf410a736ec9588/eden-python-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a4d8463d4b36e296d8161d58ab065ef3e1fcfa6427673681b2cda77701bd9b7",
          "md5": "3a4006e9581cb75459eaab1b5beefbe3",
          "sha256": "94bfae8db480c37f66420925b76c5961d0af059434b783b63f0cc71cb3b218ae"
        },
        "downloads": -1,
        "filename": "eden_python-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a4006e9581cb75459eaab1b5beefbe3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42284,
        "upload_time": "2022-08-03T05:55:58",
        "upload_time_iso_8601": "2022-08-03T05:55:58.807537Z",
        "url": "https://files.pythonhosted.org/packages/6a/4d/8463d4b36e296d8161d58ab065ef3e1fcfa6427673681b2cda77701bd9b7/eden_python-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26b4d3bbc7bea01e6b1a4a6c72c9048366cd66d2288aec8121eba81631cfab84",
          "md5": "29b370efd99c035cefbe75d7688ca901",
          "sha256": "493dcd41ebd0d193d7b3ea02d4aa9ccfcafa8f2df83d8f56e1734350d6318976"
        },
        "downloads": -1,
        "filename": "eden-python-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "29b370efd99c035cefbe75d7688ca901",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35753,
        "upload_time": "2022-08-03T05:56:03",
        "upload_time_iso_8601": "2022-08-03T05:56:03.063646Z",
        "url": "https://files.pythonhosted.org/packages/26/b4/d3bbc7bea01e6b1a4a6c72c9048366cd66d2288aec8121eba81631cfab84/eden-python-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a4d8463d4b36e296d8161d58ab065ef3e1fcfa6427673681b2cda77701bd9b7",
        "md5": "3a4006e9581cb75459eaab1b5beefbe3",
        "sha256": "94bfae8db480c37f66420925b76c5961d0af059434b783b63f0cc71cb3b218ae"
      },
      "downloads": -1,
      "filename": "eden_python-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3a4006e9581cb75459eaab1b5beefbe3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 42284,
      "upload_time": "2022-08-03T05:55:58",
      "upload_time_iso_8601": "2022-08-03T05:55:58.807537Z",
      "url": "https://files.pythonhosted.org/packages/6a/4d/8463d4b36e296d8161d58ab065ef3e1fcfa6427673681b2cda77701bd9b7/eden_python-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26b4d3bbc7bea01e6b1a4a6c72c9048366cd66d2288aec8121eba81631cfab84",
        "md5": "29b370efd99c035cefbe75d7688ca901",
        "sha256": "493dcd41ebd0d193d7b3ea02d4aa9ccfcafa8f2df83d8f56e1734350d6318976"
      },
      "downloads": -1,
      "filename": "eden-python-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "29b370efd99c035cefbe75d7688ca901",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 35753,
      "upload_time": "2022-08-03T05:56:03",
      "upload_time_iso_8601": "2022-08-03T05:56:03.063646Z",
      "url": "https://files.pythonhosted.org/packages/26/b4/d3bbc7bea01e6b1a4a6c72c9048366cd66d2288aec8121eba81631cfab84/eden-python-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}