{
  "info": {
    "author": "dikuchan",
    "author_email": "dikuchan@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Stdbuf\n\n[![CI][ci-image]][ci-url]\n[![codecov][codecov-image]][codecov-url]\n\n[ci-url]: https://github.com/dikuchan/stdbuf/actions/workflows/ci.yaml\n[ci-image]: https://github.com/dikuchan/stdbuf/actions/workflows/ci.yaml/badge.svg\n\n[codecov-url]: https://codecov.io/gh/dikuchan/stdbuf\n[codecov-image]: https://codecov.io/gh/dikuchan/stdbuf/branch/master/graph/badge.svg?token=EWNC1RJZOK\n\nSize and time bounded asynchronous buffer with deduplication. \n\nBuffer's content is flushed when either maximum size or time since\nthe first insertion reaches the specified limits.\n\nInspired by [ClickHouse buffer engine](https://clickhouse.com/docs/en/engines/table-engines/special/buffer/). Used for\nthe same purpose.\n\n### Note\n\nMultiple concurrent consumers are not supported.\n\n### Usage\n\n```python\nimport asyncio\nimport time\n\nfrom stdbuf import Stdbuf\n\n\nasync def produce(buf: Stdbuf[int]):\n    for i in range(2 ** 16):\n        await buf.put(i)\n        # Duplicates are ignored.\n        await buf.put(i)\n\n\nasync def consume(buf: Stdbuf[int]):\n    while True:\n        start = time.perf_counter()\n        # Get data at least every 2 seconds.\n        # May return earlier if full.\n        data = await buf.get()\n        elapsed = time.perf_counter() - start\n        assert len(data) <= 16\n        assert elapsed <= 0.5 + 1e-2\n\n\nasync def main():\n    with Stdbuf(16, 0.5, True) as buf:\n        done, pending = await asyncio.wait({\n            asyncio.create_task(produce(buf)),\n            asyncio.create_task(consume(buf)),\n        },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        for task in pending:\n            task.cancel()\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dikuchan/stdbuf.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stdbuf",
    "package_url": "https://pypi.org/project/stdbuf/",
    "platform": null,
    "project_url": "https://pypi.org/project/stdbuf/",
    "project_urls": {
      "Homepage": "https://github.com/dikuchan/stdbuf.git",
      "Repository": "https://github.com/dikuchan/stdbuf.git"
    },
    "release_url": "https://pypi.org/project/stdbuf/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "Size and time aware deduplicated asynchronous buffer.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13532241,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "423051128d086e873a40ea32a4354d83cd15817f3b098a2e266549c33ee10885",
          "md5": "bba62df2c9404052944ff4239312d474",
          "sha256": "40affe4230a95c86c0758c873760fd405e2eea8246f0ab2c0bea60e7699f5e2e"
        },
        "downloads": -1,
        "filename": "stdbuf-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bba62df2c9404052944ff4239312d474",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4219,
        "upload_time": "2022-03-28T18:34:40",
        "upload_time_iso_8601": "2022-03-28T18:34:40.726669Z",
        "url": "https://files.pythonhosted.org/packages/42/30/51128d086e873a40ea32a4354d83cd15817f3b098a2e266549c33ee10885/stdbuf-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b97e0e8afc5add2fd6f0d8f03708ee31459414d5e0bb9bec3d79a5f5248d3ac",
          "md5": "4e8ceffd00f994f115df51f5d6e1be71",
          "sha256": "35881542ef50a9c1d32b8683341d1b6b25a77f3bf7354ef453ecd7e4f47e9ea9"
        },
        "downloads": -1,
        "filename": "stdbuf-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e8ceffd00f994f115df51f5d6e1be71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4217,
        "upload_time": "2022-03-30T20:13:48",
        "upload_time_iso_8601": "2022-03-30T20:13:48.624488Z",
        "url": "https://files.pythonhosted.org/packages/0b/97/e0e8afc5add2fd6f0d8f03708ee31459414d5e0bb9bec3d79a5f5248d3ac/stdbuf-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e95f6396cd227e7fb0cadf9ed75680680515bf5ce8241864df07cc36570f3948",
          "md5": "552b4b2288e6f4566170277af5c448d2",
          "sha256": "74827af403a0979fc987d0d961a9ef95dbc081b7966f6eabcd6e5a91db8532de"
        },
        "downloads": -1,
        "filename": "stdbuf-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "552b4b2288e6f4566170277af5c448d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4233,
        "upload_time": "2022-04-16T00:31:44",
        "upload_time_iso_8601": "2022-04-16T00:31:44.718291Z",
        "url": "https://files.pythonhosted.org/packages/e9/5f/6396cd227e7fb0cadf9ed75680680515bf5ce8241864df07cc36570f3948/stdbuf-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "015b757c0fbf21e4e00275e747473f1c3aa66cac53f11a05b23135894ccf2656",
          "md5": "4893fafc57c2e4c3fa3e96522718b5d0",
          "sha256": "757badb395af826fe9c31c08a9e1fcfb866dee744d335d36b12973b2369efe4b"
        },
        "downloads": -1,
        "filename": "stdbuf-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4893fafc57c2e4c3fa3e96522718b5d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4599,
        "upload_time": "2022-04-16T14:08:46",
        "upload_time_iso_8601": "2022-04-16T14:08:46.448664Z",
        "url": "https://files.pythonhosted.org/packages/01/5b/757c0fbf21e4e00275e747473f1c3aa66cac53f11a05b23135894ccf2656/stdbuf-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "015b757c0fbf21e4e00275e747473f1c3aa66cac53f11a05b23135894ccf2656",
        "md5": "4893fafc57c2e4c3fa3e96522718b5d0",
        "sha256": "757badb395af826fe9c31c08a9e1fcfb866dee744d335d36b12973b2369efe4b"
      },
      "downloads": -1,
      "filename": "stdbuf-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4893fafc57c2e4c3fa3e96522718b5d0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 4599,
      "upload_time": "2022-04-16T14:08:46",
      "upload_time_iso_8601": "2022-04-16T14:08:46.448664Z",
      "url": "https://files.pythonhosted.org/packages/01/5b/757c0fbf21e4e00275e747473f1c3aa66cac53f11a05b23135894ccf2656/stdbuf-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}