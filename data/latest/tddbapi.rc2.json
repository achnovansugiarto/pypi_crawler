{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "# tddbapi\n\n[![PyPi](https://img.shields.io/pypi/v/tddbapi.svg)](https://pypi.python.org/pypi/tddbapi)\n[![MIT License](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n![Python3.8+](https://img.shields.io/pypi/pyversions/tddbapi.svg)\n\n[tddbapi](https://bitbucket.org/padhia/tddbapi) is a DB API module that is a shim over [teradatasql](https://pypi.org/project/teradatasql), the Teradata provided DB API module. `teradatasql` closely follows Teradata JDBC driver in terms of functionality and behaviors, some of which, arguably aren't quite *pythonic*. `tddbapi` attempts to correct this by altering selected `teradatasql` behavior (APIs) as documented here. The remaining, unaltered, functionality is directly passed through to the `teradatasql` module.\n\n## `teradatasql` behavior\n\n1. Fixed-length character column values have incorrect length when accessed in Python. According to Teradata, this is [working as designed](https://github.com/Teradata/python-driver#CharacterExportWidth).\n\n1. `teradatasql` uses `OperationalError` for all exceptions. According to Python's DB API specification, `OperationalError` is reserved for a certain class of errors. Additionally, the exception object\n    * doesn't provide easy access to the *error code* or the *error message* values.\n    * has text that includes unformatted stack trace of underlying *gosql* driver. While this may be useful in certain situations, for example, reporting errors back to Teradata, but may not be the best message to display to the users.\n\n1. All SQL `INTERVAL` values are returned as Python type `str` instead of more appropriate native Python types, thus working with them is harder in Python. Apparently, this was done because not all SQL INTERVAL data types can be represented by Python's `datetime.timedelta` type.\n\n1. `teradatasql` exposes all internally used names, and thus can pollute the *namespace* if you use `from teradatasql import *`.\n\n## `tddbapi` behavior\n\n1. Fixed-length character columns will have any extra spaces beyond their actual definition truncated.\n\n1. Appropriate Exception raised for the *most common* errors. Exception objects:\n    * have `sqlcode` and `sqltext` attributes that can be queried directly instead of having to parse the error message\n    * provide `__str__` method that produces a human-readable error message and removes `gosql` stack-trace information\n    * *note*: If you want to ensure that the exception handling logic works with `teradatasql` *and* `tddbapi`, use an Exception class that is higher in the hierarchy, for example, `DatabaseError` or `Error`\n\n1. `INTERVAL` values are objects of either `datetime.timedelta` subclasses, or for the *month based* interval types, instances of `int` subclasses. The *month-based* intervals use the total number of months as canonical value, thus allowing comparison between two month-based intervals even if their exact types are different.\n\n1. It's safe to code `from tddbapi import *` without introducing non DB-API names into the current namespace\n\n**Note**\n`tddbapi` always obtains resultset metadata information for all queries. If your application also needs access to resultset metadata, it can be accessed as `_meta` attribute of the cursor as already-parsed JSON data.\n\n## Installation and Usage\n\nInstall `tddbapi` using the standard `pip` utility:\n\n```\npip install --upgrade tddbapi\n```\n\nUsing `tddbapi` in a Python application is as simple as replacing `teradatasql` with `tddbapi`. For example:\n\n```python\nimport tddbapi as teradatasql\n\nwith teradatasql.connect(host=\"whomooz\", user=\"guest\", password=\"please\") as con:\n    with con.cursor() as cur:\n        cur.execute(\"SELECT * FROM DBC.DBCINFOV\")\n        print(cur.fetchall())\n```\n\n## Disclaimers\n\n`tddbapi` module:\n\n1. **does not** come with any warranty and the user assumes all risks associated with its usage.\n1. is **not** endorsed by Teradata.\n1. overrides some internal `teradatasql` implementation details. It is possible that a future version of `teradatasql` can break `tddbapi`, at least for a short period.\n1. will be kept compatible with `teradatasql` on a best-effort basis. If you must have the latest `teradatasql` all the time *and* cannot live with the risk of breakage, even for a short period, you shouldn't use this module.\n1. is available via MIT license, which may be different from the licenses of any of its dependencies (currently only `teradatasql`).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/padhia/tddbapi",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tddbapi",
    "package_url": "https://pypi.org/project/tddbapi/",
    "platform": "",
    "project_url": "https://pypi.org/project/tddbapi/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/padhia/tddbapi"
    },
    "release_url": "https://pypi.org/project/tddbapi/0.1.1/",
    "requires_dist": [
      "teradatasql"
    ],
    "requires_python": ">=3.8",
    "summary": "Pythonic shim over teradatasql, Teradata DB API driver",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9216842,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "854b4fedd7c833defed916c9965379dcd89ae88ed9694f9ad3d0594e20684e4b",
          "md5": "3dee00520aa5649e59071a3518beb62e",
          "sha256": "f82b5aa71edfd502aaac6d931b6e327464c5e32239c19d03e7e3179ef31f714f"
        },
        "downloads": -1,
        "filename": "tddbapi-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3dee00520aa5649e59071a3518beb62e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13809,
        "upload_time": "2020-02-15T21:48:59",
        "upload_time_iso_8601": "2020-02-15T21:48:59.773548Z",
        "url": "https://files.pythonhosted.org/packages/85/4b/4fedd7c833defed916c9965379dcd89ae88ed9694f9ad3d0594e20684e4b/tddbapi-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf5f454296f04851567686613b1c589d369d25b612b62ab5c27ad9fbd3dacdec",
          "md5": "a6abe00a03f8495aa5f87fcab0f66b83",
          "sha256": "46e5f1531565ce7da5e3e2962b2f502012c5bf2d0b6c1374f413a3e0e95c4c8b"
        },
        "downloads": -1,
        "filename": "tddbapi-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6abe00a03f8495aa5f87fcab0f66b83",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14333,
        "upload_time": "2021-01-24T17:10:54",
        "upload_time_iso_8601": "2021-01-24T17:10:54.461716Z",
        "url": "https://files.pythonhosted.org/packages/bf/5f/454296f04851567686613b1c589d369d25b612b62ab5c27ad9fbd3dacdec/tddbapi-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf5f454296f04851567686613b1c589d369d25b612b62ab5c27ad9fbd3dacdec",
        "md5": "a6abe00a03f8495aa5f87fcab0f66b83",
        "sha256": "46e5f1531565ce7da5e3e2962b2f502012c5bf2d0b6c1374f413a3e0e95c4c8b"
      },
      "downloads": -1,
      "filename": "tddbapi-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6abe00a03f8495aa5f87fcab0f66b83",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 14333,
      "upload_time": "2021-01-24T17:10:54",
      "upload_time_iso_8601": "2021-01-24T17:10:54.461716Z",
      "url": "https://files.pythonhosted.org/packages/bf/5f/454296f04851567686613b1c589d369d25b612b62ab5c27ad9fbd3dacdec/tddbapi-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}