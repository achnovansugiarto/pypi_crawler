{
  "info": {
    "author": "Benjamin van Niekerk",
    "author_email": "benjamin.l.van.niekerk@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "<p align=\"center\">\n    <a href=\"https://colab.research.google.com/github/bshall/Tacotron/blob/main/tacotron-demo.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>\n</p>\n\n# Tacotron with Location Relative Attention\n\nA PyTorch implementation of [Location-Relative Attention Mechanisms For Robust Long-Form Speech Synthesis](https://arxiv.org/abs/1910.10288). Audio samples can be found [here](https://bshall.github.io/Tacotron/). Colab demo can be found [here](https://colab.research.google.com/github/bshall/Tacotron/blob/main/tacotron-demo.ipynb).\n\n<div align=\"center\">\n    <img width=\"655\" height=\"390\" alt=\"Tacotron (with Dynamic Convolution Attention)\"\n      src=\"https://raw.githubusercontent.com/bshall/Tacotron/main/tacotron.png\"><br>\n    <sup><strong>Fig 1:</strong>Tacotron (with Dynamic Convolution Attention).</sup>\n</div>\n\n<div align=\"center\">\n    <img width=\"897\" height=\"154\" alt=\"Example Mel-spectrogram and attention plot\"\n      src=\"https://raw.githubusercontent.com/bshall/Tacotron/main/example.png\"><br>\n    <sup><strong>Fig 2:</strong>Example Mel-spectrogram and attention plot.</sup>\n</div>\n\n## Quick Start\n\nEnsure you have Python 3.6 and PyTorch 1.7 or greater installed. Then install this package (along with the [univoc vocoder](https://github.com/bshall/UniversalVocoding)):\n```\npip install tacotron univoc\n```\n\n## Example Usage\n\n<p align=\"center\">\n    <a href=\"https://colab.research.google.com/github/bshall/Tacotron/blob/main/tacotron-demo.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>\n</p>\n\n\n```python\nimport torch\nimport soundfile as sf\nfrom univoc import Vocoder\nfrom tacotron import load_cmudict, text_to_id, Tacotron\n\n# download pretrained weights for the vocoder (and optionally move to GPU)\nvocoder = Vocoder.from_pretrained(\n    \"https://github.com/bshall/UniversalVocoding/releases/download/v0.2/univoc-ljspeech-7mtpaq.pt\"\n).cuda()\n\n# download pretrained weights for tacotron (and optionally move to GPU)\ntacotron = Tacotron.from_pretrained(\n    \"https://github.com/bshall/Tacotron/releases/download/v0.1/tacotron-ljspeech-yspjx3.pt\"\n).cuda()\n\n# load cmudict and add pronunciation of PyTorch\ncmudict = load_cmudict()\ncmudict[\"PYTORCH\"] = \"P AY1 T AO2 R CH\"\n\ntext = \"A PyTorch implementation of Location-Relative Attention Mechanisms For Robust Long-Form Speech Synthesis.\"\n\n# convert text to phone ids\nx = torch.LongTensor(text_to_id(text, cmudict)).unsqueeze(0).cuda()\n\n# synthesize audio\nwith torch.no_grad():\n    mel, _ = tacotron.generate(x)\n    wav, sr = vocoder.generate(mel.transpose(1, 2))\n\n# save output\nsf.write(\"location_relative_attention.wav\", wav, sr)\n```\n\n## Train from Scatch\n\n1. Clone the repo:\n```\ngit clone https://github.com/bshall/Tacotron\ncd ./Tacotron\n```\n2. Install requirements:\n```\npipenv install\n```\n3. Download and extract the [LJ-Speech dataset](https://keithito.com/LJ-Speech-Dataset/):\n```\nwget https://data.keithito.com/data/speech/LJSpeech-1.1.tar.bz2\ntar -xvjf LJSpeech-1.1.tar.bz2\n```\n4. Download the train split [here](https://github.com/bshall/Tacotron/releases/tag/v0.1) and extract it in the root directory of the repo.\n5. Extract Mel spectrograms and preprocess audio:\n```\npipenv run python preprocess.py path/to/LJSpeech-1.1 datasets/LJSpeech-1.1\n```\n```\nusage: preprocess.py [-h] in_dir out_dir\n\nPreprocess an audio dataset.\n\npositional arguments:\n  in_dir      Path to the dataset directory\n  out_dir     Path to the output directory\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n6. Train the model:\n```\npipenv run python train.py ljspeech datasets/LJSpeech-1.1 path/to/LJSpeech-1.1/metadata.csv\n```\n```\nusage: train.py [-h] [--resume RESUME] checkpoint_dir text_path dataset_dir\n\nTrain Tacotron with dynamic convolution attention.\n\npositional arguments:\n  checkpoint_dir   Path to the directory where model checkpoints will be saved\n  text_path        Path to the dataset transcripts\n  dataset_dir      Path to the preprocessed data directory\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --resume RESUME  Path to the checkpoint to resume from\n```\n\n## Pretrained Models\n\nPretrained weights for the LJSpeech model are available [here](https://github.com/bshall/Tacotron/releases/tag/v0.1).\n\n## Notable Differences from the Paper\n\n1. Trained using a batch size of 64 on a single GPU (using automatic mixed precision).\n2. Used a gradient clipping threshold of 0.05 as it seems to stabilize the alignment with the smaller batch size.\n3. Used a different learning rate schedule (again to deal with smaller batch size).\n4. Used 80-bin (instead of 128 bin) log-Mel spectrograms.\n\n## Acknowlegements\n\n- https://github.com/keithito/tacotron\n- https://github.com/PetrochukM/PyTorch-NLP\n- https://github.com/fatchord/WaveRNN\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bshall/Tacotron",
    "keywords": "Speech Synthesis,Tacotron,Text-to-Speech,PyTorch",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tacotron",
    "package_url": "https://pypi.org/project/tacotron/",
    "platform": "",
    "project_url": "https://pypi.org/project/tacotron/",
    "project_urls": {
      "Homepage": "https://github.com/bshall/Tacotron",
      "Samples": "https://bshall.github.io/tacotron/",
      "Source": "https://github.com/bshall/Tacotron"
    },
    "release_url": "https://pypi.org/project/tacotron/0.1.1/",
    "requires_dist": [
      "librosa (>=0.8.0)",
      "numpy (>=1.18.0)",
      "tqdm (>=4.41)",
      "requests",
      "importlib-resources",
      "toml (>=0.10.2)"
    ],
    "requires_python": ">=3.6",
    "summary": "A PyTorch implementation of Location-Relative Attention Mechanisms For Robust Long-Form Speech Synthesis.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8736370,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87b524e3e9b6dd87f175e3e97ccf971c50da0b8039ea2edf2cdf448c54d6e2dd",
          "md5": "d3f21f4d717df5db1866442b181ca261",
          "sha256": "18d36ce143a831b4cd79598eabb0e0470a569b1171b0ed48113f4b58eb123484"
        },
        "downloads": -1,
        "filename": "tacotron-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3f21f4d717df5db1866442b181ca261",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 910123,
        "upload_time": "2020-11-13T16:22:17",
        "upload_time_iso_8601": "2020-11-13T16:22:17.313231Z",
        "url": "https://files.pythonhosted.org/packages/87/b5/24e3e9b6dd87f175e3e97ccf971c50da0b8039ea2edf2cdf448c54d6e2dd/tacotron-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c4ef5da038e55b6fc0b3aff40c4aba96abc7981f8d91839a3ed84cd5aeebb6d",
          "md5": "09eda31b2d7edef9e96ea58f0adcd1d8",
          "sha256": "a570334088a2635006e40847e989dc446ab6b766c12b9726115086fb73382d64"
        },
        "downloads": -1,
        "filename": "tacotron-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "09eda31b2d7edef9e96ea58f0adcd1d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 907586,
        "upload_time": "2020-11-13T16:22:36",
        "upload_time_iso_8601": "2020-11-13T16:22:36.435656Z",
        "url": "https://files.pythonhosted.org/packages/6c/4e/f5da038e55b6fc0b3aff40c4aba96abc7981f8d91839a3ed84cd5aeebb6d/tacotron-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a5fa2c8bc063a3a1c232c9ecb2b3356e93428457014d695ea051513159cd088",
          "md5": "47866ca31556cc4c20661477aab3a933",
          "sha256": "f78aeea2215500b48bfd8be1747ac2e371255573fbc264afcefbcfd23aaa0b03"
        },
        "downloads": -1,
        "filename": "tacotron-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47866ca31556cc4c20661477aab3a933",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 910387,
        "upload_time": "2020-11-24T10:53:59",
        "upload_time_iso_8601": "2020-11-24T10:53:59.894145Z",
        "url": "https://files.pythonhosted.org/packages/9a/5f/a2c8bc063a3a1c232c9ecb2b3356e93428457014d695ea051513159cd088/tacotron-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cd8c28e524dc0ee77d0d9933cdffa92066c4692fc5be6c3a6ab40562fa78b18",
          "md5": "2e74edef824f76d7f0f6d6beeb80ac9e",
          "sha256": "c3ecdd147b0a0eb330a5af5616471c294b3ee64b7e029d844c58a11249450d29"
        },
        "downloads": -1,
        "filename": "tacotron-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2e74edef824f76d7f0f6d6beeb80ac9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 907935,
        "upload_time": "2020-11-24T10:54:05",
        "upload_time_iso_8601": "2020-11-24T10:54:05.043170Z",
        "url": "https://files.pythonhosted.org/packages/0c/d8/c28e524dc0ee77d0d9933cdffa92066c4692fc5be6c3a6ab40562fa78b18/tacotron-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a5fa2c8bc063a3a1c232c9ecb2b3356e93428457014d695ea051513159cd088",
        "md5": "47866ca31556cc4c20661477aab3a933",
        "sha256": "f78aeea2215500b48bfd8be1747ac2e371255573fbc264afcefbcfd23aaa0b03"
      },
      "downloads": -1,
      "filename": "tacotron-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47866ca31556cc4c20661477aab3a933",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 910387,
      "upload_time": "2020-11-24T10:53:59",
      "upload_time_iso_8601": "2020-11-24T10:53:59.894145Z",
      "url": "https://files.pythonhosted.org/packages/9a/5f/a2c8bc063a3a1c232c9ecb2b3356e93428457014d695ea051513159cd088/tacotron-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cd8c28e524dc0ee77d0d9933cdffa92066c4692fc5be6c3a6ab40562fa78b18",
        "md5": "2e74edef824f76d7f0f6d6beeb80ac9e",
        "sha256": "c3ecdd147b0a0eb330a5af5616471c294b3ee64b7e029d844c58a11249450d29"
      },
      "downloads": -1,
      "filename": "tacotron-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2e74edef824f76d7f0f6d6beeb80ac9e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 907935,
      "upload_time": "2020-11-24T10:54:05",
      "upload_time_iso_8601": "2020-11-24T10:54:05.043170Z",
      "url": "https://files.pythonhosted.org/packages/0c/d8/c28e524dc0ee77d0d9933cdffa92066c4692fc5be6c3a6ab40562fa78b18/tacotron-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}