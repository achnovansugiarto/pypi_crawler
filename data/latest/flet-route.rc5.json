{
  "info": {
    "author": "Saurabh Wadekar [ INDIA ]",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# This makes it easy to manage multiple views with dynamic routing.\n\nThis is an utility class based on repath library which allows matching ExpressJS-like routes and parsing their parameters, for example `/account/:account_id/orders/:order_id`.\n\n## Installation\n```\npip install flet-route\n```\n\n## Upgradation\n```\npip install flet-route --upgrade\n```\n\n\n\n## function based view:\n\n### main.py\n```python\nimport flet as ft\nfrom flet_route import Routing,path\nfrom views.index_view import IndexView # Here IndexView is imported from views/index_view.py\nfrom views.next_view import NextView # Here NextView is imported from views/next_view.py\n\ndef main(page: ft.Page):\n\n    app_routes = [\n        path(\n            url=\"/\", # Here you have to give that url which will call your view on mach\n            clear=True, # If you want to clear all the routes you have passed so far, then pass True otherwise False.\n            view=IndexView # Here you have to pass a function or method which will take page and params and return ft.View (If you are using function based view then you just have to give the name of the function.)\n            ), \n        path(url=\"/next_view/:my_id\", clear=False, view=NextView),\n    ]\n\n    Routing(\n        page=page, # Here you have to pass the page. Which will be found as a parameter in all your views\n        app_routes=app_routes, # Here a list has to be passed in which we have defined app routing like app_routes\n        #not_found_view:View=ViewNotFound # If you want that there should be a different view call when no path matches, then you can pass that view here. otherwise no need to give it it will call ViewNotFound by default\n        )\n    page.go(page.route)\n\nft.app(target=main)\n\n\n```\n\n### views/index_view.py\n\nThis is a basic python function that takes `page` and `params` and returns `ft.View`.\n\nIn `page` we get the `page` passed in `path`.\n\nIn `params` we get the values ‚Äã‚Äãpassed from `url` in the form of `dictionary`\n\n```python\nimport flet as ft\n\ndef IndexView(page,params):\n    print(params)\n    return ft.View(\n        \"/\",\n        controls=[\n            ft.Text(\"This Is Index View\"),\n            ft.ElevatedButton(\"Go Next View\", on_click=lambda _: page.go(\"/next_view/10\")),\n        ]\n    )\n\n```\n\n### views/next_view.py\n\nThis is a basic python function that takes `page` and `params` and returns `ft.View`.\n\nIn `page` we get the `page` passed in `path`.\n\nIn `params` we get the values ‚Äã‚Äãpassed from `url` in the form of `dictionary`\n\n```python\nimport flet as ft\n\ndef NextView(page,params):\n    print(params)\n    return ft.View(\n        \"/next_view/:my_id\",\n        controls=[\n            ft.Text(\"This Is Next View\"),\n            ft.ElevatedButton(\"Go Index View\", on_click=lambda _: page.go(\"/\")),\n        ]\n    )\n\n```\n\n\n\n\n\n## Class based view:\n\n### main.py\n```python\nimport flet as ft\nfrom flet_route import Routing,path\nfrom views.index_view import IndexView # Here IndexView is imported from views/index_view.py\nfrom views.next_view import NextView # Here NextView is imported from views/next_view.py\n\ndef main(page: ft.Page):\n\n    app_routes = [\n        path(\n            url=\"/\", # Here you have to give that url which will call your view on mach\n            clear=True, # If you want to clear all the routes you have passed so far, then pass True otherwise False.\n            view=IndexView().view # Here you have to pass a function or method which will take page and params and return ft.View (If you are using class based view then you have to pass method name like IndexView().view .)\n            ),\n        path(url=\"/next_view/:my_id\", clear=False, view=NextView().view),\n    ]\n\n    Routing(\n        page=page, # Here you have to pass the page. Which will be found as a parameter in all your views\n        app_routes=app_routes, # Here a list has to be passed in which we have defined app routing like app_routes\n        #not_found_view:View=ViewNotFound().view # If you want that there should be a different view call when no path matches, then you can pass that view here. otherwise no need to give it it will call ViewNotFound by default\n        )\n    page.go(page.route)\n\nft.app(target=main)\n\n\n```\n\n### views/index_view.py\nThis is a basic python `class` whose `view` method takes `page` and `params` and returns `ft.view`.\n\nIn `page` we get the `page` passed in `path`.\n\nIn `params` we get the values ‚Äã‚Äãpassed from `url` in the form of `dictionary`.\n\nIt is not necessary that the name of the method should be `view`, you can also give a different name.\n\n```python\nimport flet as ft\n\nclass IndexView:\n    def __init__(self):\n        ...\n\n    def view(self,page,params):\n        print(params)\n        return ft.View(\n            \"/\",\n            controls=[\n                ft.Text(\"This Is Index View\"),\n                ft.ElevatedButton(\"Go Next View\", on_click=lambda _: page.go(\"/next_view/10\")),\n            ]\n        )\n\n```\n\n### views/next_view.py\nThis is a basic python `class` whose `view` method takes `page` and `params` and returns `ft.view`.\n\nIn `page` we get the `page` passed in `path`.\n\nIn `params` we get the values ‚Äã‚Äãpassed from `url` in the form of `dictionary`.\n\nIt is not necessary that the name of the method should be `view`, you can also give a different name.\n\n```python\nimport flet as ft\n\nclass NextView:\n    def __init__(self):\n        ...\n\n    def view(self,page,params):\n        print(params)\n        return ft.View(\n            \"/next_view/:my_id\",\n            controls=[\n                ft.Text(\"This Is Next View\"),\n                ft.ElevatedButton(\"Go Index View\", on_click=lambda _: page.go(\"/\")),\n            ]\n        )\n\n```\n\n\n## Author\n\n<b>Name :</b> Saurabh Wadekar<br>\n<b>Email :</b> saurabhwadekar420@gmail.com<br>\n<b>County :</b> üáÆüá≥INDIAüáÆüá≥<br>\n\n<h1>‚ù§Ô∏è THANK YOU ‚ù§Ô∏è</h1><br> \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/saurabhwadekar/flet_route",
    "keywords": "flet,routing,flet_route,routes,flet app,flet-route,flet simple routing",
    "license": "MIT",
    "maintainer": "Saurabh Wadekar",
    "maintainer_email": "saurabhwadekar420@gmail.com",
    "name": "flet-route",
    "package_url": "https://pypi.org/project/flet-route/",
    "platform": null,
    "project_url": "https://pypi.org/project/flet-route/",
    "project_urls": {
      "Homepage": "https://github.com/saurabhwadekar/flet_route"
    },
    "release_url": "https://pypi.org/project/flet-route/0.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This makes it easy to manage multiple views with dynamic routing.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17261325,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ada6851345c05bbe07d756536873cc9c573e3de3a94a78f75eee449257e2d30",
          "md5": "4851bfb64de4a9a4026de42cf9680083",
          "sha256": "b1d6895bf7838b80db46e8ba1659f5e4da5df186df64cddc5c795615488457dd"
        },
        "downloads": -1,
        "filename": "flet_route-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4851bfb64de4a9a4026de42cf9680083",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3299,
        "upload_time": "2023-03-09T16:24:33",
        "upload_time_iso_8601": "2023-03-09T16:24:33.041510Z",
        "url": "https://files.pythonhosted.org/packages/2a/da/6851345c05bbe07d756536873cc9c573e3de3a94a78f75eee449257e2d30/flet_route-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5e175a002fd75c5db4bff08bb33a9d4e8d8a924fa836e8c7e61fbd98754f015",
          "md5": "3ad3553a3a76915ea0d62252d1b1d18d",
          "sha256": "6bfd1cd8a532d5690101de7ecad231b3ccb95d5ff4c4a74725153582c002bb26"
        },
        "downloads": -1,
        "filename": "flet_route-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3ad3553a3a76915ea0d62252d1b1d18d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2518,
        "upload_time": "2023-03-09T16:24:36",
        "upload_time_iso_8601": "2023-03-09T16:24:36.104683Z",
        "url": "https://files.pythonhosted.org/packages/c5/e1/75a002fd75c5db4bff08bb33a9d4e8d8a924fa836e8c7e61fbd98754f015/flet_route-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f746d692bfb61eafa6310b9d14d2cb93eb3e5bdcfb3ef2d4b60515da35d4b8d5",
          "md5": "d052525cfb21e8548975787c36f91fa6",
          "sha256": "1868aae3ab127d148eb497c9c65c077675e9d1553f4bbd8a799bf675e36b8fd3"
        },
        "downloads": -1,
        "filename": "flet_route-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d052525cfb21e8548975787c36f91fa6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3313,
        "upload_time": "2023-03-09T17:09:13",
        "upload_time_iso_8601": "2023-03-09T17:09:13.809796Z",
        "url": "https://files.pythonhosted.org/packages/f7/46/d692bfb61eafa6310b9d14d2cb93eb3e5bdcfb3ef2d4b60515da35d4b8d5/flet_route-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0782d48df008fc8a7b4ea106647c327100eb49193e6d0278952335644a6874e1",
          "md5": "a816ca91de1e75ea7da4a1ea2af93b7f",
          "sha256": "f0c8a5c8693b804931f97f516ee4b49c9be5ec63b9badf1e227fb63cba63539c"
        },
        "downloads": -1,
        "filename": "flet_route-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a816ca91de1e75ea7da4a1ea2af93b7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3097,
        "upload_time": "2023-03-09T17:09:16",
        "upload_time_iso_8601": "2023-03-09T17:09:16.815924Z",
        "url": "https://files.pythonhosted.org/packages/07/82/d48df008fc8a7b4ea106647c327100eb49193e6d0278952335644a6874e1/flet_route-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94c56c4beb5eb4402ad84139be4c7e5ce3a93ab91d08629b3c69638a231f1767",
          "md5": "ec412257611a7f17995c6e4ec7b18883",
          "sha256": "a0d6faef2d29f7e62eda59507081b1f35a00183fc618459d4fa8225ed983e7b4"
        },
        "downloads": -1,
        "filename": "flet_route-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec412257611a7f17995c6e4ec7b18883",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3400,
        "upload_time": "2023-03-10T06:46:54",
        "upload_time_iso_8601": "2023-03-10T06:46:54.464662Z",
        "url": "https://files.pythonhosted.org/packages/94/c5/6c4beb5eb4402ad84139be4c7e5ce3a93ab91d08629b3c69638a231f1767/flet_route-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dda5184e110127d05d29a3963f68e7b44756e0490285b3f413ecec78e499b3fa",
          "md5": "89606d02798c1fabe060b6ed2e121cad",
          "sha256": "d521ac88ee72276f0e49608198c0e9a81a48d44e005e27a4356c5c66bcf522da"
        },
        "downloads": -1,
        "filename": "flet_route-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "89606d02798c1fabe060b6ed2e121cad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3248,
        "upload_time": "2023-03-10T06:46:56",
        "upload_time_iso_8601": "2023-03-10T06:46:56.570686Z",
        "url": "https://files.pythonhosted.org/packages/dd/a5/184e110127d05d29a3963f68e7b44756e0490285b3f413ecec78e499b3fa/flet_route-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6ca42dcbaccf56c56cd7308eec27efe672fb77e5a316207150b3229d2bf2c0f",
          "md5": "09c491918cc3a349f9d78c2e6959ddeb",
          "sha256": "de866b1d65b6bee84044805ffe01000b785a13810d4072f697b789bc82f84439"
        },
        "downloads": -1,
        "filename": "flet_route-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "09c491918cc3a349f9d78c2e6959ddeb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4136,
        "upload_time": "2023-03-10T06:54:06",
        "upload_time_iso_8601": "2023-03-10T06:54:06.114898Z",
        "url": "https://files.pythonhosted.org/packages/a6/ca/42dcbaccf56c56cd7308eec27efe672fb77e5a316207150b3229d2bf2c0f/flet_route-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ed6d4347d605f1d8004ed8a37dbff47cf8db3a88163ba58f7cc484277696932",
          "md5": "b56dbb361e7489e59915b3dcd003c1a9",
          "sha256": "9e22e3d30fee32a651ed433c67058dac5d0a2d5e155886e0f93d8b128a9e32ba"
        },
        "downloads": -1,
        "filename": "flet_route-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b56dbb361e7489e59915b3dcd003c1a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3454,
        "upload_time": "2023-03-10T06:54:08",
        "upload_time_iso_8601": "2023-03-10T06:54:08.645829Z",
        "url": "https://files.pythonhosted.org/packages/0e/d6/d4347d605f1d8004ed8a37dbff47cf8db3a88163ba58f7cc484277696932/flet_route-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70fd65374069a7c897819cf6f003abe39a56b047d887c2f4daaf2d778f922483",
          "md5": "c13dc1f3ad261ac59ba6cce56d1ccaf1",
          "sha256": "79edfc4a2f8e568fbc48def31334f9ceb5eda97ecf819a346508736ac527aa64"
        },
        "downloads": -1,
        "filename": "flet_route-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c13dc1f3ad261ac59ba6cce56d1ccaf1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4996,
        "upload_time": "2023-03-12T15:36:46",
        "upload_time_iso_8601": "2023-03-12T15:36:46.573407Z",
        "url": "https://files.pythonhosted.org/packages/70/fd/65374069a7c897819cf6f003abe39a56b047d887c2f4daaf2d778f922483/flet_route-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "642137f9d639b06f831f0b976c273968ae662af5582e40b0e117daccd8612c1a",
          "md5": "39fa3e9162d83ae0b1dd1e469e274f81",
          "sha256": "9f6e657e0e8bf7055205c193879660a5316ad1281e239952be5138a5458918e9"
        },
        "downloads": -1,
        "filename": "flet_route-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "39fa3e9162d83ae0b1dd1e469e274f81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4161,
        "upload_time": "2023-03-12T15:36:50",
        "upload_time_iso_8601": "2023-03-12T15:36:50.177225Z",
        "url": "https://files.pythonhosted.org/packages/64/21/37f9d639b06f831f0b976c273968ae662af5582e40b0e117daccd8612c1a/flet_route-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70fd65374069a7c897819cf6f003abe39a56b047d887c2f4daaf2d778f922483",
        "md5": "c13dc1f3ad261ac59ba6cce56d1ccaf1",
        "sha256": "79edfc4a2f8e568fbc48def31334f9ceb5eda97ecf819a346508736ac527aa64"
      },
      "downloads": -1,
      "filename": "flet_route-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c13dc1f3ad261ac59ba6cce56d1ccaf1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4996,
      "upload_time": "2023-03-12T15:36:46",
      "upload_time_iso_8601": "2023-03-12T15:36:46.573407Z",
      "url": "https://files.pythonhosted.org/packages/70/fd/65374069a7c897819cf6f003abe39a56b047d887c2f4daaf2d778f922483/flet_route-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "642137f9d639b06f831f0b976c273968ae662af5582e40b0e117daccd8612c1a",
        "md5": "39fa3e9162d83ae0b1dd1e469e274f81",
        "sha256": "9f6e657e0e8bf7055205c193879660a5316ad1281e239952be5138a5458918e9"
      },
      "downloads": -1,
      "filename": "flet_route-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "39fa3e9162d83ae0b1dd1e469e274f81",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4161,
      "upload_time": "2023-03-12T15:36:50",
      "upload_time_iso_8601": "2023-03-12T15:36:50.177225Z",
      "url": "https://files.pythonhosted.org/packages/64/21/37f9d639b06f831f0b976c273968ae662af5582e40b0e117daccd8612c1a/flet_route-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}