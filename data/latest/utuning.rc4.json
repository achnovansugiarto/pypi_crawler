{
  "info": {
    "author": "Eduardo Maldonado-Cruz",
    "author_email": "emaldonadocruz@utexas.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Education",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Hyperparameter Uncertainty Tuning\r\n\r\nUncertainty Tuning (UTuning) is a package that focuses on summarizing uncertainty model performance for optimum hyperparameter tuning.\r\n\r\nThis library uses the metric proposed by Maldonado-Cruz and Pyrcz (2021) to tune model hyperparameters based on the uncertainty model goodness metric.\r\nMaldonado-Cruz, E., & Pyrcz, M. J. (2021). Tuning machine learning dropout for subsurface uncertainty model accuracy. Journal of Petroleum Science and Engineering, 205, 108975. https://doi.org/https://doi.org/10.1016/j.petrol.2021.108975\r\n\r\n<p align=\"center\">\r\n    <img src=\"https://raw.githubusercontent.com/emaldonadocruz/UTuning/master/figures/CrossVal.png\"/>\r\n</p>\r\n\r\nIn the figure we show a comparison of the cross-validation plot and respective accuracy plot for two uncertainty models where the hyperparameters were optimized using different objective functions. a) Using MAE, b) Uncertainty model goodness.\r\nBoth models have a high Pearson's correlation coefficient yet model in b) is a better uncertainty model.\r\n\r\n## Features\r\nThis is what UTuning has to offer:\r\n\r\n* Hyperparameter tuning for ensemble based uncertainty models\r\n* Robust uncertainty evaluation\r\n* Evaluation of uncertainty models\r\n\r\n## Installation\r\n\r\n### Dependencies\r\n\r\n- numpy (>=1.16)\r\n- scikit-learn (>=0.23)\r\n\r\n### User Installation\r\n\r\n`pip install UTuning`\r\n\r\n## Examples\r\n\r\n### Tune Machine Learning uncertainty model with GridSearchCV\r\nIn this first example we use Catboost as ensemble learner for predictions of production.\r\n\r\nFor this notebook example we have a problem that consists on predicting **permeability** from **porosity** and **acoustic impedance data**. We have selected this problem because we are primarily interested in capturing the uncertainty related to predictions of permeability based on existing data. \r\nThis problem can be expanded to any prediction problem.\r\n\r\nTo start out, change our import statement to get UTuning grid search cross validation interface, and the rest is almost identical!\r\n\r\n```python\r\n\"\"\"\r\nCreated on Mon Sep 20 16:15:37 2021\r\n@author: em42363\r\n\"\"\"\r\nfrom UTuning import scorer, plots, UTSearch\r\n\r\nfrom catboost import CatBoostRegressor ## Decision-tree based gradient boosting\r\n# Prediction model in the form of an ensemble of weak prediction models\r\n\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.preprocessing import MinMaxScaler\r\n\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\ndf = pd.read_csv(\"https://raw.githubusercontent.com/emaldonadocruz/UTuning/master/dataset/unconv_MV.csv\") #\r\n\r\n# %% Split train test\r\n'''\r\nPerform split train test, and perform data min-max normalization\r\n'''\r\n\r\ny = df['Production'].values\r\nX = df[['Por', 'LogPerm', 'Brittle', 'TOC']].values\r\n\r\nscaler = MinMaxScaler()\r\nscaler.fit(X)\r\nXs = scaler.transform(X)\r\nys = (y - y.min())/ (y.max()-y.min())\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(Xs, ys, test_size=0.33)\r\n\r\nprint(X_train.shape, y_train.shape)\r\n\r\n# %% Model creation\r\n'''\r\nWe define the model and the grid search space,\r\nwe pass the model and the grid search.\r\n'''\r\nn_estimators = np.arange(180, 220, step=1) #80 150\r\nlr = np.arange(0.035, 0.06, step=.001) #0.1 0.15\r\nparam_grid = {\r\n    \"learning_rate\": list(lr),\r\n    \"n_estimators\": list(n_estimators)\r\n}\r\n\r\nmodel = CatBoostRegressor(loss_function='RMSEWithUncertainty',\r\n                          verbose=False)\r\n\r\nrandom_cv = UTSearch.Grid(model, param_grid, 2)\r\n\r\nrandom_cv.fit(X_train, y_train)\r\n# %%Surface\r\n'''\r\nSimilarly as in the problem with neural networks we can evaluate the\r\nhyperparameter search space and use UTuning to construct the surface\r\n'''\r\ndf = pd.DataFrame(random_cv.cv_results_)\r\n\r\nlabels = {'x': 'n estimators',\r\n          'y': 'Learning rate',\r\n          'z': 'Model goodness'}\r\n\r\nplots.surface(df['param_n_estimators'],\r\n              df['param_learning_rate'],\r\n              df['split0_test_score'],\r\n              30,\r\n              labels)\r\n```\r\n\r\n<p align=\"center\">\r\n    <img src=\"https://raw.githubusercontent.com/emaldonadocruz/UTuning/master/figures/Catboost_Accuracy_plot.png\"/>\r\n</p>\r\n\r\n<p align=\"center\">\r\n    <img src=\"https://raw.githubusercontent.com/emaldonadocruz/UTuning/master/figures/Catboost_example.png\"/>\r\n</p>\r\n\r\n\r\nA second example using neural networks is coming soon.\r\n\r\n<p align=\"center\">\r\n    <img src=\"https://raw.githubusercontent.com/emaldonadocruz/UTuning/master/figures/SearchSpace.png\"/>\r\n</p>\r\n\r\n### Credits\r\n-------\r\nThe dataset used for the examples is provided by Dr. Michael Pyrcz, GeostatsGuy: https://github.com/GeostatsGuy\r\n\r\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\r\n\r\nCookiecutter: https://github.com/audreyr/cookiecutter\r\n`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/emaldonadocruz/UTuning",
    "keywords": "UTuning",
    "license": "BSD license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "UTuning",
    "package_url": "https://pypi.org/project/UTuning/",
    "platform": "",
    "project_url": "https://pypi.org/project/UTuning/",
    "project_urls": {
      "Homepage": "https://github.com/emaldonadocruz/UTuning"
    },
    "release_url": "https://pypi.org/project/UTuning/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Uncertainty Tuning (UTuning) is a package that focuses on summarizing uncertainty model performance for optimum hyperparameter tuning by using the uncertainty model goodness metric.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12749286,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccf817fa952aaacebaaa44fb850e23797955b386d2eb2904cb4433f6ea3021f7",
          "md5": "49f6ca5ccb5cf9fb781d657fbbac6dfe",
          "sha256": "20d00016ec6318b363ac394db94e58311d8f0cc215602d461bbd503258bfb78f"
        },
        "downloads": -1,
        "filename": "UTuning-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "49f6ca5ccb5cf9fb781d657fbbac6dfe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16349,
        "upload_time": "2021-11-17T03:40:31",
        "upload_time_iso_8601": "2021-11-17T03:40:31.111886Z",
        "url": "https://files.pythonhosted.org/packages/cc/f8/17fa952aaacebaaa44fb850e23797955b386d2eb2904cb4433f6ea3021f7/UTuning-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a09e8f8a0ed76bcf9a613348cc94d543b03d2c3a7aaa1f679675275b6604481c",
          "md5": "2294eeb5e1b2b15a47768040a19b6c45",
          "sha256": "bba34753e58fe118cbb51520900455f17d3fdb4bd19d01505f785fec6b4212d0"
        },
        "downloads": -1,
        "filename": "UTuning-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2294eeb5e1b2b15a47768040a19b6c45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16413,
        "upload_time": "2021-11-17T03:44:21",
        "upload_time_iso_8601": "2021-11-17T03:44:21.103816Z",
        "url": "https://files.pythonhosted.org/packages/a0/9e/8f8a0ed76bcf9a613348cc94d543b03d2c3a7aaa1f679675275b6604481c/UTuning-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8132bac12861ed73271c418abaff1bd77bfd4b8063e4125767b915a0ba602082",
          "md5": "0239cc8063828943c3b3e75e579cc5d1",
          "sha256": "25bb223734661e02edea50d6d4f2783cd949d1812357d5274a4672db44d11f90"
        },
        "downloads": -1,
        "filename": "UTuning-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0239cc8063828943c3b3e75e579cc5d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16520,
        "upload_time": "2021-11-21T08:12:23",
        "upload_time_iso_8601": "2021-11-21T08:12:23.343086Z",
        "url": "https://files.pythonhosted.org/packages/81/32/bac12861ed73271c418abaff1bd77bfd4b8063e4125767b915a0ba602082/UTuning-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b11a7770f04773ae3fe94374182b00d5f30f1a381865ff6d9aaed7e4457428c",
          "md5": "35564804b98ffb623c2707c5a6ce9fd3",
          "sha256": "0040a7e996e70b2cd1f6adde0c415e009937719969e9e15be6b758e02c893c3d"
        },
        "downloads": -1,
        "filename": "UTuning-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "35564804b98ffb623c2707c5a6ce9fd3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16944,
        "upload_time": "2022-01-31T21:40:43",
        "upload_time_iso_8601": "2022-01-31T21:40:43.033974Z",
        "url": "https://files.pythonhosted.org/packages/4b/11/a7770f04773ae3fe94374182b00d5f30f1a381865ff6d9aaed7e4457428c/UTuning-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b11a7770f04773ae3fe94374182b00d5f30f1a381865ff6d9aaed7e4457428c",
        "md5": "35564804b98ffb623c2707c5a6ce9fd3",
        "sha256": "0040a7e996e70b2cd1f6adde0c415e009937719969e9e15be6b758e02c893c3d"
      },
      "downloads": -1,
      "filename": "UTuning-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "35564804b98ffb623c2707c5a6ce9fd3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16944,
      "upload_time": "2022-01-31T21:40:43",
      "upload_time_iso_8601": "2022-01-31T21:40:43.033974Z",
      "url": "https://files.pythonhosted.org/packages/4b/11/a7770f04773ae3fe94374182b00d5f30f1a381865ff6d9aaed7e4457428c/UTuning-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}