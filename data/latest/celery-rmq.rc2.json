{
  "info": {
    "author": "Komol Nath Roy",
    "author_email": "rax.komol@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# celery-rmq\n\ncelery-rmq is a python library to implement Celery and RabbitMQ message broker. \nit's a standalone library required celery and kombu (python library for rabbitmq).\nCelery and RabbitMQ producer and consumer made easy with celery-rmq\n\n\n## Quick Start\n\nFirst of all, install rabbitmq and start.\n\nCreate a python app and create an virtual environment too. Activate the virtual environment.\n\n1:: Install it:\n\n```bash\npip install celery-rmq\n```\n\n\n2:: Basic Usage:\n\n** app.py **\n\n```python\nfrom celery_rmq.app import CeleryAppProvider\nfrom celery_rmq.exchange import register_exchange\nfrom celery_rmq.queue import register_queue\n\nfrom .consumers.testconsumer import BasicTestConsumer\n\napps = ['tests.testapp']\n\napp_provider = CeleryAppProvider(app_name='test_celery_broker', installed_apps=apps)\n\napp = app_provider.get_app()\n\n\n# adding exchanges\n\ndef register_exchanges():\n    register_exchange(app_provider, \"test_exchange\")\n\n\ndef register_queues():\n    register_queue(app_provider, \"test_queue\", \"test_routing\", \"test_exchange\")\n\n\ndef add_consumers():\n    app_provider.add_consumer(BasicTestConsumer)\n\n\n# execution of following two functions\n# \"register_exchanges()\" and \"register_queues()\"\n# needs to be synced\n# i.e one after another.\n# because queues are depended on exchanges\n\nregister_exchanges()\nregister_queues()\n\nadd_consumers()\n\napp.start()\n```\n\nregister as many as exchanges, queues and consumers\n\n3:: consumer.py\n\n```python\nimport kombu\nfrom celery import bootsteps\n\nfrom celery_rmq.registry import get_queue\n\n\nclass BasicTestConsumer(bootsteps.ConsumerStep):\n\n    def handle_message(self, body, message):\n        print(body)\n        message.ack()\n\n    def get_consumers(self, channel):\n        queue = get_queue(\"test_queue\", \"test_routing\")\n        return [kombu.Consumer(\n            channel,\n            queues=[queue],\n            callbacks=[self.handle_message],\n            accept=['json']\n        )]\n```\n\n4:: If you want to add this with any framework,\ncreate an app (example: **Django** apps) and create a tasks.py file under the app:\n\n```python\nfrom __future__ import absolute_import, unicode_literals\n\nfrom celery import shared_task\n\nfrom tests.app import app_provider\n\n\n@shared_task\ndef simple_json_message(message, exchange_name, route_key):\n    producer = app_provider.get_producer()\n    producer.publish(message, content_type='application/json', exchange=exchange_name, routing_key=route_key)\n```\n\n&nbsp;&nbsp;&nbsp;and call the `simple_json_message` function from the view as per your need.\n\n5:: Run the celery worker:\n\n```bash\ncelery worker -l info -A app\n```\n\nhere app is app.py file\n\n###### Done.\n\nfor testing purpose, we would like to send messages directly from RabbitMQ web panel. Go the the queue section and publish message.\n\n<p align=\"center\">\n    <img src=\"https://github.com/knroy/celery-rmq/blob/master/screenshots/publish_message_from_rabbitmq.png?raw=True\">\n</p>\n\n<p align=\"center\">\n    <img src=\"https://github.com/knroy/celery-rmq/blob/master/screenshots/terminal.png?raw=True\">\n</p>\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/knroy/celery-rmq",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "celery-rmq",
    "package_url": "https://pypi.org/project/celery-rmq/",
    "platform": "",
    "project_url": "https://pypi.org/project/celery-rmq/",
    "project_urls": {
      "Homepage": "https://github.com/knroy/celery-rmq"
    },
    "release_url": "https://pypi.org/project/celery-rmq/0.0.2/",
    "requires_dist": [
      "celery (==4.4.2)",
      "kombu (==4.6.8)"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Celery and RabbitMQ producer and consumer made easy with celery-rmq",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7146754,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e86f26bb6218b1338166b846a5a8fb755bf4273019cdc14775acb3cf7113224e",
          "md5": "6f438fa040805e3511ffb9e7a9adabd2",
          "sha256": "efa6702e57fa1f439aedea16fa63f632d241d434edafdea7a25cad39c23962a3"
        },
        "downloads": -1,
        "filename": "celery_rmq-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f438fa040805e3511ffb9e7a9adabd2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 5606,
        "upload_time": "2020-04-28T23:22:39",
        "upload_time_iso_8601": "2020-04-28T23:22:39.519808Z",
        "url": "https://files.pythonhosted.org/packages/e8/6f/26bb6218b1338166b846a5a8fb755bf4273019cdc14775acb3cf7113224e/celery_rmq-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f63dfe2099148e28371c3e0dd62cbe54ad9cb29915fae3e313ed94b53fea8b10",
          "md5": "35f10590d518af6e0720cd422ee521c0",
          "sha256": "e26b99adff44f3440c4aded3695f7fd8fb1b4481a5806aab4ac82a4940781e1e"
        },
        "downloads": -1,
        "filename": "celery-rmq-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "35f10590d518af6e0720cd422ee521c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 3624,
        "upload_time": "2020-04-28T23:22:41",
        "upload_time_iso_8601": "2020-04-28T23:22:41.913811Z",
        "url": "https://files.pythonhosted.org/packages/f6/3d/fe2099148e28371c3e0dd62cbe54ad9cb29915fae3e313ed94b53fea8b10/celery-rmq-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c58e92d29b880c12aa2e735589ff458ad71b88547470e88b1cbc570f4792bb8",
          "md5": "3476d4d295e491befb57b3e70f4af6bc",
          "sha256": "4b39379dca6ae446a472ecb03dfdbc2679ed54c4aff28c728d753b02b8eccb9c"
        },
        "downloads": -1,
        "filename": "celery_rmq-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3476d4d295e491befb57b3e70f4af6bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 8995,
        "upload_time": "2020-05-01T17:47:37",
        "upload_time_iso_8601": "2020-05-01T17:47:37.421480Z",
        "url": "https://files.pythonhosted.org/packages/8c/58/e92d29b880c12aa2e735589ff458ad71b88547470e88b1cbc570f4792bb8/celery_rmq-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15e245a6bd568f74dfc9b47b6481416f0b96469c73e8044ee472d83a47020a27",
          "md5": "996496a55497d8a827ca2f2b35aba282",
          "sha256": "21e5cdf760268caec8f0cb1424172cf205f6d04e202dfd9533b44d922b4676fa"
        },
        "downloads": -1,
        "filename": "celery-rmq-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "996496a55497d8a827ca2f2b35aba282",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 6677,
        "upload_time": "2020-05-01T17:47:39",
        "upload_time_iso_8601": "2020-05-01T17:47:39.480573Z",
        "url": "https://files.pythonhosted.org/packages/15/e2/45a6bd568f74dfc9b47b6481416f0b96469c73e8044ee472d83a47020a27/celery-rmq-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c58e92d29b880c12aa2e735589ff458ad71b88547470e88b1cbc570f4792bb8",
        "md5": "3476d4d295e491befb57b3e70f4af6bc",
        "sha256": "4b39379dca6ae446a472ecb03dfdbc2679ed54c4aff28c728d753b02b8eccb9c"
      },
      "downloads": -1,
      "filename": "celery_rmq-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3476d4d295e491befb57b3e70f4af6bc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 8995,
      "upload_time": "2020-05-01T17:47:37",
      "upload_time_iso_8601": "2020-05-01T17:47:37.421480Z",
      "url": "https://files.pythonhosted.org/packages/8c/58/e92d29b880c12aa2e735589ff458ad71b88547470e88b1cbc570f4792bb8/celery_rmq-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15e245a6bd568f74dfc9b47b6481416f0b96469c73e8044ee472d83a47020a27",
        "md5": "996496a55497d8a827ca2f2b35aba282",
        "sha256": "21e5cdf760268caec8f0cb1424172cf205f6d04e202dfd9533b44d922b4676fa"
      },
      "downloads": -1,
      "filename": "celery-rmq-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "996496a55497d8a827ca2f2b35aba282",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 6677,
      "upload_time": "2020-05-01T17:47:39",
      "upload_time_iso_8601": "2020-05-01T17:47:39.480573Z",
      "url": "https://files.pythonhosted.org/packages/15/e2/45a6bd568f74dfc9b47b6481416f0b96469c73e8044ee472d83a47020a27/celery-rmq-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}