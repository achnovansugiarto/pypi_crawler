{
  "info": {
    "author": "Carole Sudre",
    "author_email": "c.sudre@ucl.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# NMJ_Analyser\nThe code was created using python 3.7 and the following version of packages\n## Requirements\n - scipy 1.5.3\n - Pillow 7.2.0\n - numpy 1.19.1\n - pandas 1.1.0\n - nibabel 3.1.1\n \nIn addition, the following modules are imported\n - glob\n - os\n - argparse\n - sys\n\nPerforms analysis of NMJ data \n\n## Usage\n\nThe NMJ Analyser takes as input directories where jpg files have been stored \n\nFor each subject, the input is presented as \nSUBJ/JPEG/*jpg\nThe ..... files must contain the keyword red or RED\nThe ..... files must contain the keyword green or GREEN\nThe slices should ordered numerically ex Mouse1_GREEN_0001.jpg.... Mouse1_GREEN_0010.jpg\n\nThe following parameters are given to the system:\n - -p regular expression of the subject path\n - -dx planar resolution\n - -dz slice thickness\n - -t threshold for voxels to be considered as positives\n \n## Output\n For each subject the following parameters are calculated for each RED connected component and intersection of GREEN on RED component\n \n### RegionProperties\n - 'centre of mass': (self.centre_of_mass, ['CoMx',\n                                                     'CoMy',\n                                                     'CoMz']),\n - 'centre_abs': (self.centre_abs, ['Truex, Truey, Truez']),\n - 'volume': (self.volume,\n                       ['NVoxels', 'NVolume']),\n - 'fragmentation': (self.fragmentation, ['Fragmentation']),\n - 'mean_intensity': (self.mean_int, ['MeanIntensity']),\n - 'surface': (self.surface, ['NSurface', 'Nfaces_surf',\n                                       'NSurf_ext', 'Nfaces_ext']),\n - 'surface_dil': (self.surface_dil, ['surf_dil', 'surf_ero']),\n - 'surface volume ratio': (self.sav, ['sav_dil', 'sav_ero']),\n - 'compactness': (self.compactness, ['CompactNumbDil'\n                                               ]),\n - 'eigen': (self.eigen, ['eigenvalues']),\n - 'std': (self.std_values, ['std']),\n - 'quantiles': (self.quantile_values, ['quantiles']),\n - 'bounds': (self.bounds, ['bounds']),\n - 'cc': (self.connect_cc, ['N_CC']),\n - 'cc_dist': (self.dist_cc, ['MeanDistCC']),\n - 'cc_size': (self.cc_size, ['MinSize', 'MaxSize', 'MeanSize']),\n - 'max_extent': (self.max_extent, ['MaxExtent']),\n - 'shape_factor': (self.shape_factor, ['ShapeFactor',\n                                                 'shapefactor_surfcount']),\n - 'skeleton_length': (self.skeleton_length, ['SkeletonLength'])\n \n### Comparison Properties\n - 'green volume': (self.n_pos_ref, 'Volume_(Green)'),\n - 'red volume': (self.n_pos_seg, 'Volume_(Red)'),\n - 'n_intersection': (self.n_intersection, 'Intersection'),\n - 'n_union': (self.n_union, 'Union'),\n - 'IoU': Intersection of union\n - 'coverage': Overlap        \n - 'vol_diff': Volume difference\n - 'ave_dist': Average distance\n - 'haus_dist': Hausdorff distance\n - 'haus_dist95': 95% HD\n - 'com_dist': distance between centre of mass\n - 'com_ref': centre of mass RED\n - 'com_seg': centre of mass GREEN",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/csudre/NMJ_Analyser",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nmjanalyzer",
    "package_url": "https://pypi.org/project/nmjanalyzer/",
    "platform": "",
    "project_url": "https://pypi.org/project/nmjanalyzer/",
    "project_urls": {
      "Homepage": "https://github.com/csudre/NMJ_Analyser"
    },
    "release_url": "https://pypi.org/project/nmjanalyzer/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "NMJ Analyzer",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9407598,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e300aa152a043f22e6fc88f90f4368d766864f484052e665dc168ca1f7f5389",
          "md5": "b220ec1eb8c257059fd3a549dbdf66da",
          "sha256": "c13ee9c73d4d2bdbb6f36304966b8faf0c7bbae390e57ef87706fa01d39c450b"
        },
        "downloads": -1,
        "filename": "nmjanalyzer-0.0.2-py3.7.egg",
        "has_sig": false,
        "md5_digest": "b220ec1eb8c257059fd3a549dbdf66da",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 62175,
        "upload_time": "2020-12-16T10:41:41",
        "upload_time_iso_8601": "2020-12-16T10:41:41.971129Z",
        "url": "https://files.pythonhosted.org/packages/4e/30/0aa152a043f22e6fc88f90f4368d766864f484052e665dc168ca1f7f5389/nmjanalyzer-0.0.2-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a2696dd459930d6520c78e9b6e1a20db73bb0e711df18fff2d91cb01418051b",
          "md5": "27f26e6163869283f3ecfbe897e9199f",
          "sha256": "d9184a5b53105f9ec13e79d520409508a26ba96fe0feec300bc21cfdb1097b43"
        },
        "downloads": -1,
        "filename": "nmjanalyzer-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "27f26e6163869283f3ecfbe897e9199f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13597,
        "upload_time": "2020-12-16T10:41:43",
        "upload_time_iso_8601": "2020-12-16T10:41:43.186124Z",
        "url": "https://files.pythonhosted.org/packages/0a/26/96dd459930d6520c78e9b6e1a20db73bb0e711df18fff2d91cb01418051b/nmjanalyzer-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "494961b791f0656d4117ac564bcfcd0ac13dd6d89a5f05ed0b152b76a6e56602",
          "md5": "6de5dd65aec67d09f93fcf6bc3ca1f3a",
          "sha256": "618809ab1cce9e278ab4201819f998accfa2297e45cdaced3e57a74cc0060cd8"
        },
        "downloads": -1,
        "filename": "nmjanalyzer-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6de5dd65aec67d09f93fcf6bc3ca1f3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13612,
        "upload_time": "2021-02-13T13:14:08",
        "upload_time_iso_8601": "2021-02-13T13:14:08.817246Z",
        "url": "https://files.pythonhosted.org/packages/49/49/61b791f0656d4117ac564bcfcd0ac13dd6d89a5f05ed0b152b76a6e56602/nmjanalyzer-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "494961b791f0656d4117ac564bcfcd0ac13dd6d89a5f05ed0b152b76a6e56602",
        "md5": "6de5dd65aec67d09f93fcf6bc3ca1f3a",
        "sha256": "618809ab1cce9e278ab4201819f998accfa2297e45cdaced3e57a74cc0060cd8"
      },
      "downloads": -1,
      "filename": "nmjanalyzer-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "6de5dd65aec67d09f93fcf6bc3ca1f3a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13612,
      "upload_time": "2021-02-13T13:14:08",
      "upload_time_iso_8601": "2021-02-13T13:14:08.817246Z",
      "url": "https://files.pythonhosted.org/packages/49/49/61b791f0656d4117ac564bcfcd0ac13dd6d89a5f05ed0b152b76a6e56602/nmjanalyzer-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}