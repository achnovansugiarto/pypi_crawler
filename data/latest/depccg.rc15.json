{
  "info": {
    "author": "Masashi Yoshikawa",
    "author_email": "yoshikawa@tohoku.ac.jp",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# depccg v2\n\nCodebase for [A\\* CCG Parsing with a Supertag and Dependency Factored Model](https://arxiv.org/abs/1704.06936)\n\n## 2021/07/12 Updates (v2)\n\n- Increased stability and efficiency\n  - (Replaced OpenMP with multiprocessing)\n- More integration with AllenNLP\n  - The parser is now callable from within a `predictor` (see [here](#train-your-own-parsing-model))\n- More friendly way to define your own grammar (wrt. languages or treebanks)\n  - See `depccg/grammar/{en,ja}.py` for example grammars.\n\n## Requirements\n\n- Python >= 3.6.0\n- A C++ compiler supporting [C++11 standard](https://en.wikipedia.org/wiki/C%2B%2B11) (in case of gcc, must be >= 4.8)\n\n## Installation\n\nUsing pip:\n\n```sh\n➜ pip install cython numpy depccg\n```\n\n## Usage\n\n### Using a pretrained English parser\n\nCurrently following models are available for English:\n\n|Name| Description | unlabeled/labeled F1 on CCGbank| Download |\n|:-|:-|:-|:-|\n| basic |model trained on the combination of CCGbank and tri-training dataset (Yoshikawa et al., 2017)|94.0%/88.8%| [link](https://drive.google.com/file/d/1mxl1HU99iEQcUYhWhvkowbE4WOH0UKxv/view?usp=sharing) (189M) |\n| `elmo` | basic model with its embeddings replaced with ELMo (Peters et al., 2018) |94.98%/90.51%| [link](https://drive.google.com/file/d/1UldQDigVq4VG2pJx9yf3krFjV0IYOwLr/view?usp=sharing) (649M) |\n| `rebank` | basic model trained on Rebanked CCGbank (Honnibal et al., 2010) | - | [link](https://drive.google.com/file/d/1Az840uCW8QuAkNCZq_Y8VOkW5j0Vtcj9/view) (337M) |\n| `elmo_rebank` |ELMo model trained on Rebanked CCGbank | - | [link](https://drive.google.com/open?id=1deyCjSgCuD16WkEhOL3IXEfQBfARh_ll) (1G) |\n\nThe basic model is available by:\n\n```sh\n➜ depccg_en download\n```\n\nTo use:\n\n```sh\n➜ echo \"this is a test sentence .\" | depccg_en\nID=1, Prob=-0.0006299018859863281\n(<T S[dcl] 0 2> (<T S[dcl] 0 2> (<L NP XX XX this NP>) (<T S[dcl]\\NP 0 2> (<L (S[dcl]\\NP)/NP XX XX is (S[dcl]\\NP)/NP>) (<T NP 0 2> (<L NP[nb]/N XX XX a NP[nb]/N>) (<T N 0 2> (<L N/N XX XX test N/N>) (<L N XX XX sentence N>) ) ) ) ) (<L . XX XX . .>) )\n```\n\nYou can download other models by specifying their names:\n\n```sh\n➜ depccg_en download elmo\n```\n\nTo use, make sure to install [allennlp](https://github.com/allenai/allennlp):\n\n```sh\n➜ echo \"this is a test sentence .\" | depccg_en --model elmo\n```\n\nYou can also specify in the `--model` option the path of a model file (in tar.gz) that is available from links above.\n\nUsing a GPU (by `--gpu` option) is recommended if possible.\n\nThere are several output formats (see [below](#available-output-formats)).\n\n```sh\n➜ echo \"this is a test sentence .\" | depccg_en --format deriv\nID=1, Prob=-0.0006299018859863281\n this        is           a      test  sentence  .\n  NP   (S[dcl]\\NP)/NP  NP[nb]/N  N/N      N      .\n                                ---------------->\n                                       N\n                      -------------------------->\n                                  NP\n      ------------------------------------------>\n                      S[dcl]\\NP\n------------------------------------------------<\n                     S[dcl]\n---------------------------------------------------<rp>\n                      S[dcl]\n```\n\nBy default, the input is expected to be pre-tokenized. If you want to process untokenized sentences, you can pass `--tokenize` option.\n\nThe POS and NER tags in the output are filled with `XX` by default. You can replace them with ones predicted using [SpaCy](https://spacy.io):\n\n```sh\n➜ echo \"this is a test sentence .\" | depccg_en --annotator spacy\nID=1, Prob=-0.0006299018859863281\n(<T S[dcl] 0 2> (<T S[dcl] 0 2> (<L NP DT DT this NP>) (<T S[dcl]\\NP 0 2> (<L (S[dcl]\\NP)/NP VBZ VBZ is (S[dcl]\\NP)/NP>) (<T NP 0 2> (<L NP[nb]/N DT DT a NP[nb]/N>) (<T N 0 2> (<L N/N NN NN test N/N>) (<L N NN NN sentence N>) ) ) ) ) (<L . . . . .>) )\n```\n\nThe parser uses a SpaCy's `en_core_web_sm` model.\n\nOrelse, you can use POS/NER taggers implemented in [C&C](https://www.cl.cam.ac.uk/~sc609/candc-1.00.html), which may be useful in some sorts of parsing experiments:\n\n```sh\n➜ export CANDC=/path/to/candc\n➜ echo \"this is a test sentence .\" | depccg_en --annotator candc\nID=1, log prob=-0.0006299018859863281\n(<T S[dcl] 0 2> (<T S[dcl] 0 2> (<L NP DT DT this NP>) (<T S[dcl]\\NP 0 2> (<L (S[dcl]\\NP)/NP VBZ VBZ is (S[dcl]\\NP)/NP>) (<T NP 0 2> (<L NP[nb]/N DT DT a NP[nb]/N>) (<T N 0 2> (<L N/N NN NN test N/N>) (<L N NN NN sentence N>) ) ) ) ) (<L . . . . .>) )\n```\n\nBy default, depccg expects the POS and NER models are placed in `$CANDC/models/pos` and `$CANDC/models/ner`, but you can explicitly specify them by setting `CANDC_MODEL_POS` and `CANDC_MODEL_NER` environmental variables.\n\nIt is also possible to obtain logical formulas using [ccg2lambda](https://github.com/mynlp/ccg2lambda)'s semantic parsing algorithm.\n\n```sh\n➜ echo \"This is a test sentence .\" | depccg_en --format ccg2lambda --annotator spacy\nID=0 log probability=-0.0006299018859863281\nexists x.(_this(x) & exists z1.(_sentence(z1) & _test(z1) & (x = z1)))\n```\n\n### Using a pretrained Japanese parser\n\nThe best performing model is available by:\n\n```sh\n➜ depccg_ja download\n```\n\nIt can be downloaded directly [here](https://drive.google.com/file/d/1bblQ6FYugXtgNNKnbCYgNfnQRkBATSY3/view?usp=sharing) (56M).\n\nThe parser provides the almost same interface as with the English one, with slight differences including the default output format, which is now one compatible with the Japanese CCGbank:\n\n```sh\n➜ echo \"これはテストの文です。\" | depccg_ja\nID=1, Prob=-53.98793411254883\n{< S[mod=nm,form=base,fin=t] {< S[mod=nm,form=base,fin=f] {< NP[case=nc,mod=nm,fin=f] {NP[case=nc,mod=nm,fin=f] これ/これ/**} {NP[case=nc,mod=nm,fin=f]\\NP[case=nc,mod=nm,fin=f] は/は/**}} {< S[mod=nm,form=base,fin=f]\\NP[case=nc,mod=nm,fin=f] {< NP[case=nc,mod=nm,fin=f] {< NP[case=nc,mod=nm,fin=f] {NP[case=nc,mod=nm,fin=f] テスト/テスト/**} {NP[case=nc,mod=nm,fin=f]\\NP[case=nc,mod=nm,fin=f] の/の/**}} {NP[case=nc,mod=nm,fin=f]\\NP[case=nc,mod=nm,fin=f] 文/文/**}} {(S[mod=nm,form=base,fin=f]\\NP[case=nc,mod=nm,fin=f])\\NP[case=nc,mod=nm,fin=f] です/です/**}}} {S[mod=nm,form=base,fin=t]\\S[mod=nm,form=base,fin=f] 。/。/**}}\n```\n\nYou can pass pre-tokenized sentences as well:\n\n```sh\n➜ echo \"これ は テスト の 文 です 。\" | depccg_ja --pre-tokenized\nID=1, Prob=-53.98793411254883\n{< S[mod=nm,form=base,fin=t] {< S[mod=nm,form=base,fin=f] {< NP[case=nc,mod=nm,fin=f] {NP[case=nc,mod=nm,fin=f] これ/これ/**} {NP[case=nc,mod=nm,fin=f]\\NP[case=nc,mod=nm,fin=f] は/は/**}} {< S[mod=nm,form=base,fin=f]\\NP[case=nc,mod=nm,fin=f] {< NP[case=nc,mod=nm,fin=f] {< NP[case=nc,mod=nm,fin=f] {NP[case=nc,mod=nm,fin=f] テスト/テスト/**} {NP[case=nc,mod=nm,fin=f]\\NP[case=nc,mod=nm,fin=f] の/の/**}} {NP[case=nc,mod=nm,fin=f]\\NP[case=nc,mod=nm,fin=f] 文/文/**}} {(S[mod=nm,form=base,fin=f]\\NP[case=nc,mod=nm,fin=f])\\NP[case=nc,mod=nm,fin=f] です/です/**}}} {S[mod=nm,form=base,fin=t]\\S[mod=nm,form=base,fin=f] 。/。/**}}\n```\n\n### Available output formats\n\n- `auto` - the most standard format following AUTO format in the English CCGbank\n- `auto_extended` - extension of auto format with combinator info and POS/NER tags\n- `deriv` - visualized derivations in ASCII art\n- `xml` - XML format compatible with C&C's XML format (only for English parsing)\n- `conll` - CoNLL format\n- `html` - visualized trees in MathML\n- `prolog` - Prolog-like format\n- `jigg_xml` - XML format compatible with [Jigg](https://github.com/mynlp/jigg)\n- `ptb` - Penn Treebank-style format\n- `ccg2lambda` - logical formula converted from a derivation using [ccg2lambda](https://github.com/mynlp/ccg2lambda)\n- `jigg_xml_ccg2lambda` - jigg_xml format with ccg2lambda logical formula inserted\n- `json` - JSON format\n- `ja` - a format adopted in Japanese CCGbank (only for Japanese)\n\n### Programmatic Usage\n\nPlease look into `depccg/__main__.py`.\n\n## Train your own parsing model\n\nYou can use my [allennlp](https://allennlp.org/)-based supertagger and extend it.\n\nTo train a supertagger, prepare [the English CCGbank](https://catalog.ldc.upenn.edu/LDC2005T13) and download [vocab](https://drive.google.com/file/d/1_rX5UAxVjjcXpRM6EoWee4XprYjEonwl/view?usp=sharing):\n\n```sh\n➜ cat ccgbank/data/AUTO/{0[2-9],1[0-9],20,21}/* > wsj_02-21.auto\n➜ cat ccgbank/data/AUTO/00/* > wsj_00.auto\n```\n\n```sh\n➜ wget http://cl.naist.jp/~masashi-y/resources/depccg/vocabulary.tar.gz\n➜ tar xvf vocabulary.tar.gz\n```\n\nthen,\n\n```sh\n➜ vocab=vocabulary train_data=wsj_02-21.auto test_data=wsj_00.auto gpu=0 \\\n  encoder_type=lstm token_embedding_type=char \\\n  allennlp train --include-package depccg --serialization-dir results depccg/allennlp/configs/supertagger.jsonnet\n```\n\nThe training configs are passed either through environmental variables or directly writing to jsonnet config files, which are available in [supertagger.jsonnet](depccg/allennlp/config/supertagger.jsonnet) or [supertagger_tritrain.jsonnet](depccg/allennlp/config/supertagger_tritrain.jsonnet).\nThe latter is a config file for using [tri-training silver data](http://cl.naist.jp/~masashi-y/resources/depccg/headfirst_parsed.conll.stagged.gz) (309M) constructed in (Yoshikawa et al., 2017), on top of the English CCGbank.\n\nTo use the trained supertagger,\n\n```sh\n➜ echo '{\"sentence\": \"this is a test sentence .\"}' > input.jsonl\n➜ allennlp predict results/model.tar.gz --include-package depccg --output-file weights.json input.jsonl\n```\n\nor alternatively, you can perform CCG parsing:\n\n```sh\n➜ allennlp predict --include-package depccg --predictor parser-predictor --predictor-args '{\"grammar_json_path\": \"depccg/models/config_en.jsonnet\"}' model.tar.gz input.jsonl\n```\n\n### Evaluation in terms of predicate-argument dependencies\n\nThe standard CCG parsing evaluation can be performed with the following script:\n\n```sh\n➜ cat ccgbank/data/PARG/00/* > wsj_00.parg\n➜ export CANDC=/path/to/candc\n➜ python -m depccg.tools.evaluate wsj_00.parg wsj_00.predicted.auto\n```\n\nThe script is dependent on [C&C](https://www.cl.cam.ac.uk/~sc609/candc-1.00.html)'s `generate` program, which is only available by compiling the C&C program from the source.\n\n(Currently, the above page is down. You can find the C&C parser [here](https://github.com/chbrown/candc) or [here](https://github.com/chrzyki/candc))\n\n## Miscellaneous\n\n### Diff tool\n\nIn error analysis, you must want to see diffs between trees in an intuitive way.\n`depccg.tools.diff` does exactly this:\n\n```sh\n➜ python -m depccg.tools.diff file1.auto file2.auto > diff.html\n```\n\nwhich outputs:\n\n![show diffs between trees](images/diff.png)\n\nwhere trees in the same lines of the files are compared and the diffs are marked in color.\n\n## Citation\n\nIf you make use of this software, please cite the following:\n\n```cite\n    @inproceedings{yoshikawa:2017acl,\n      author={Yoshikawa, Masashi and Noji, Hiroshi and Matsumoto, Yuji},\n      title={A* CCG Parsing with a Supertag and Dependency Factored Model},\n      booktitle={Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)},\n      publisher={Association for Computational Linguistics},\n      year={2017},\n      pages={277--287},\n      location={Vancouver, Canada},\n      doi={10.18653/v1/P17-1026},\n      url={http://aclweb.org/anthology/P17-1026}\n    }\n```\n\n## Licence\n\nMIT Licence\n\n## Contact\n\nFor questions and usage issues, please contact yoshikawa@tohoku.jp.\n\n## Acknowledgement\n\nIn creating the parser, I owe very much to:\n\n- [EasyCCG](https://github.com/mikelewis0/easyccg): from which I learned everything\n- [NLTK](http://www.nltk.org/): for nice pretty printing for parse derivation",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/masashi-y/depccg",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "depccg",
    "package_url": "https://pypi.org/project/depccg/",
    "platform": "",
    "project_url": "https://pypi.org/project/depccg/",
    "project_urls": {
      "Homepage": "https://github.com/masashi-y/depccg"
    },
    "release_url": "https://pypi.org/project/depccg/2.0.3.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A parser for natural language based on combinatory categorial grammar",
    "version": "2.0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12894038,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "584998e546a5f52d1b99b65ba5765dbc3c5f7867d1eda7d32f9e4660beb80ca0",
          "md5": "923594962678697a2c304b3ccd4ff71e",
          "sha256": "40c3f3356328cf599a66ae1ff79c15dd9f6765f7e8668fc4455ae265f0c8eaa2"
        },
        "downloads": -1,
        "filename": "depccg-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "923594962678697a2c304b3ccd4ff71e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3307635,
        "upload_time": "2019-04-09T10:24:50",
        "upload_time_iso_8601": "2019-04-09T10:24:50.282209Z",
        "url": "https://files.pythonhosted.org/packages/58/49/98e546a5f52d1b99b65ba5765dbc3c5f7867d1eda7d32f9e4660beb80ca0/depccg-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b60617ab7dc9b078baf86b2682a0f5eeb91011d6644a8235e3e4ee5669013c6c",
          "md5": "9f82b8aee87a47c4dbc24b492d130a9e",
          "sha256": "668ca6ef0ded3452940f73c25cafca46de80f22e292164b9450a967c735cb735"
        },
        "downloads": -1,
        "filename": "depccg-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9f82b8aee87a47c4dbc24b492d130a9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3309196,
        "upload_time": "2019-04-09T10:30:21",
        "upload_time_iso_8601": "2019-04-09T10:30:21.052547Z",
        "url": "https://files.pythonhosted.org/packages/b6/06/17ab7dc9b078baf86b2682a0f5eeb91011d6644a8235e3e4ee5669013c6c/depccg-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "681bf6089b576116fa059298a977322ed99c675a5e65a86679114b1ad7d0bed8",
          "md5": "79681519edb8c10defc809e140ebdaf1",
          "sha256": "6d6d77a8c3f99f5ac0869fddce61df801ac52072523ef1dc3bcd632c63d31d77"
        },
        "downloads": -1,
        "filename": "depccg-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79681519edb8c10defc809e140ebdaf1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3311779,
        "upload_time": "2019-04-09T10:39:43",
        "upload_time_iso_8601": "2019-04-09T10:39:43.477988Z",
        "url": "https://files.pythonhosted.org/packages/68/1b/f6089b576116fa059298a977322ed99c675a5e65a86679114b1ad7d0bed8/depccg-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3b1f929b373d2adf666082f4e11a5a0568e206758fcd28029a23c8930104651",
          "md5": "5b795244b38eaed3de3625ebde0342a0",
          "sha256": "099016259c57f136ec9674d9974ebde570ace1b63ed9e55632f38bc2e2e52ed6"
        },
        "downloads": -1,
        "filename": "depccg-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5b795244b38eaed3de3625ebde0342a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3479410,
        "upload_time": "2019-04-13T07:48:32",
        "upload_time_iso_8601": "2019-04-13T07:48:32.498785Z",
        "url": "https://files.pythonhosted.org/packages/c3/b1/f929b373d2adf666082f4e11a5a0568e206758fcd28029a23c8930104651/depccg-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8b7370e753d6832582a30544462a62737b1241f9e3aa68742173aa024627d75",
          "md5": "da9176f56c47bfb89605436ad1ae72e4",
          "sha256": "082d1c5a7750de80fd8917c9c170f23cafd4942d17de9f6d806872cf11e8363e"
        },
        "downloads": -1,
        "filename": "depccg-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "da9176f56c47bfb89605436ad1ae72e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3482289,
        "upload_time": "2019-04-25T14:44:23",
        "upload_time_iso_8601": "2019-04-25T14:44:23.406777Z",
        "url": "https://files.pythonhosted.org/packages/b8/b7/370e753d6832582a30544462a62737b1241f9e3aa68742173aa024627d75/depccg-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd2208ac5f2a06453be03df0f1b4438aa00d36f1b13c5c10848433ce3960a8b9",
          "md5": "80c8a0ee4679ad174ce21c0d0c5b287b",
          "sha256": "0071101aea0369358452705289b22ae419cf002084f8d17af173c51bd36d2477"
        },
        "downloads": -1,
        "filename": "depccg-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "80c8a0ee4679ad174ce21c0d0c5b287b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3482289,
        "upload_time": "2019-04-25T14:46:55",
        "upload_time_iso_8601": "2019-04-25T14:46:55.354784Z",
        "url": "https://files.pythonhosted.org/packages/dd/22/08ac5f2a06453be03df0f1b4438aa00d36f1b13c5c10848433ce3960a8b9/depccg-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f2e49edf3d7df404c8bbcb8db21918274193287bdbf0b78338ddfc1921ef617",
          "md5": "f470a0e8f16f1b2882ce92b2352387d6",
          "sha256": "c4caedde98a8f6c64832985adaca7ae9394f593c3ea2e3f527411ee84358df4f"
        },
        "downloads": -1,
        "filename": "depccg-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f470a0e8f16f1b2882ce92b2352387d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3483063,
        "upload_time": "2019-06-10T17:19:25",
        "upload_time_iso_8601": "2019-06-10T17:19:25.646779Z",
        "url": "https://files.pythonhosted.org/packages/5f/2e/49edf3d7df404c8bbcb8db21918274193287bdbf0b78338ddfc1921ef617/depccg-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e64945f4f4b38192a6ff619a0f1eea39c7c3ad01dd03c1d4b99be4f4c9ba2375",
          "md5": "94bdb674ceb186312f85cb7d2cbeb5a0",
          "sha256": "285dcd640db4ac8c9e4009d6d098931d78c318d47073bd126cbfc72a064edbe9"
        },
        "downloads": -1,
        "filename": "depccg-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "94bdb674ceb186312f85cb7d2cbeb5a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3480701,
        "upload_time": "2019-06-13T07:04:55",
        "upload_time_iso_8601": "2019-06-13T07:04:55.304299Z",
        "url": "https://files.pythonhosted.org/packages/e6/49/45f4f4b38192a6ff619a0f1eea39c7c3ad01dd03c1d4b99be4f4c9ba2375/depccg-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "830b6df5160a885e3bad64f910ca95495e73208f94d11a054eec9f9949f7094e",
          "md5": "8e78d42cba57f78bd25823d2ce799982",
          "sha256": "6d4e2c7c437cf3e71d7859a68f0753d28ad69180cd3f8ac00376b8dcc99b455e"
        },
        "downloads": -1,
        "filename": "depccg-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "8e78d42cba57f78bd25823d2ce799982",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 61877367,
        "upload_time": "2019-09-22T12:59:05",
        "upload_time_iso_8601": "2019-09-22T12:59:05.258854Z",
        "url": "https://files.pythonhosted.org/packages/83/0b/6df5160a885e3bad64f910ca95495e73208f94d11a054eec9f9949f7094e/depccg-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "666cc5bc949d8aa8fb89dc88a508299f2889149cccd7e309792a2401f15499b3",
          "md5": "631e60ac68944d7d1440b41c1da6f113",
          "sha256": "428d3a5bc25270a65fb8870de1069db75b4525e378c8d90b454f632ab1a1940a"
        },
        "downloads": -1,
        "filename": "depccg-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "631e60ac68944d7d1440b41c1da6f113",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3508655,
        "upload_time": "2020-03-29T09:21:03",
        "upload_time_iso_8601": "2020-03-29T09:21:03.071668Z",
        "url": "https://files.pythonhosted.org/packages/66/6c/c5bc949d8aa8fb89dc88a508299f2889149cccd7e309792a2401f15499b3/depccg-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea29f3164965467064e73a8f3a42a0959fce3fd4c28acf192c05b7c7580c8dbb",
          "md5": "11c6f27ba6f3aea01be0f2045d502860",
          "sha256": "c3e384af8f344a24433ff4db220a1293e04a7489022694166a4a99e5fd9091d5"
        },
        "downloads": -1,
        "filename": "depccg-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "11c6f27ba6f3aea01be0f2045d502860",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2752247,
        "upload_time": "2021-07-12T15:22:21",
        "upload_time_iso_8601": "2021-07-12T15:22:21.475911Z",
        "url": "https://files.pythonhosted.org/packages/ea/29/f3164965467064e73a8f3a42a0959fce3fd4c28acf192c05b7c7580c8dbb/depccg-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca1b810948dfefe7c663643144d10f9df58745033c9bdc3f4e0bea7f758f005c",
          "md5": "04ef9722c535b6fb7cafecb9e48eab38",
          "sha256": "2862c397411d117415bca8fbdec8e635d6fad7984165f2316e4834d8aeaff7ac"
        },
        "downloads": -1,
        "filename": "depccg-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "04ef9722c535b6fb7cafecb9e48eab38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3458789,
        "upload_time": "2021-07-12T15:30:49",
        "upload_time_iso_8601": "2021-07-12T15:30:49.424996Z",
        "url": "https://files.pythonhosted.org/packages/ca/1b/810948dfefe7c663643144d10f9df58745033c9bdc3f4e0bea7f758f005c/depccg-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9928f3b372662f63e0c4af3cbad41daffeeb6d0df496dc64e7f843a66d55016",
          "md5": "fb42403b32b50e8930a16e7cf7f12afd",
          "sha256": "de1a7ce6a9d707a2a8dc5c0730ed2d435694d4c297e747a8c9a6c329cc4438a4"
        },
        "downloads": -1,
        "filename": "depccg-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fb42403b32b50e8930a16e7cf7f12afd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3451107,
        "upload_time": "2021-07-27T19:00:25",
        "upload_time_iso_8601": "2021-07-27T19:00:25.974446Z",
        "url": "https://files.pythonhosted.org/packages/a9/92/8f3b372662f63e0c4af3cbad41daffeeb6d0df496dc64e7f843a66d55016/depccg-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd8ba5573ef48815486815362c3aa28eaa72120f25e6a02f5b6de3afc7b7060e",
          "md5": "343b4844cac1126a520d4c9b75f7dc95",
          "sha256": "c1e2024a20d42803342967387fae9e1c8bdd288ae9b1eecf428d9ad1eb260082"
        },
        "downloads": -1,
        "filename": "depccg-2.0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "343b4844cac1126a520d4c9b75f7dc95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3451331,
        "upload_time": "2022-02-11T13:15:11",
        "upload_time_iso_8601": "2022-02-11T13:15:11.619415Z",
        "url": "https://files.pythonhosted.org/packages/cd/8b/a5573ef48815486815362c3aa28eaa72120f25e6a02f5b6de3afc7b7060e/depccg-2.0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df53db133caf4792c43974ddedb965a71b1098c6dade59ffb3a9f57855965b1b",
          "md5": "51081ffad4a0ae4e5ffd736b7d9c7d0b",
          "sha256": "a8f74d963ab6846c488540d0401ed4f4c6aaaa485aa98a8c58da8e93d945d1a5"
        },
        "downloads": -1,
        "filename": "depccg-2.0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "51081ffad4a0ae4e5ffd736b7d9c7d0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3451436,
        "upload_time": "2022-02-15T05:04:12",
        "upload_time_iso_8601": "2022-02-15T05:04:12.092006Z",
        "url": "https://files.pythonhosted.org/packages/df/53/db133caf4792c43974ddedb965a71b1098c6dade59ffb3a9f57855965b1b/depccg-2.0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df53db133caf4792c43974ddedb965a71b1098c6dade59ffb3a9f57855965b1b",
        "md5": "51081ffad4a0ae4e5ffd736b7d9c7d0b",
        "sha256": "a8f74d963ab6846c488540d0401ed4f4c6aaaa485aa98a8c58da8e93d945d1a5"
      },
      "downloads": -1,
      "filename": "depccg-2.0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "51081ffad4a0ae4e5ffd736b7d9c7d0b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3451436,
      "upload_time": "2022-02-15T05:04:12",
      "upload_time_iso_8601": "2022-02-15T05:04:12.092006Z",
      "url": "https://files.pythonhosted.org/packages/df/53/db133caf4792c43974ddedb965a71b1098c6dade59ffb3a9f57855965b1b/depccg-2.0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}