{
  "info": {
    "author": "Intelek AI",
    "author_email": "supawat@intelek.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Games/Entertainment :: Simulation",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Radio Gyms\n\n![Radio Gyms](https://github.com/intelek-ai/radio-gyms/blob/master/assets/logo.png)\n\nRadio Gyms is an open-source bundle of AI environments for radio communications. \nThe simulations are built for AI gyms with the support of radio-related calculation modules, and theoretical radio propagation models to simulate an accurate prediction, \nspecifically to perform reinforcement learning algorithms.\n\n## Installation\n### PyPi Package via pip\n```shell\npip install radio_gyms\n```\n### Build from source\n```shell\ngit clone https://github.com/intelek-ai/radio-gyms\ncd radio-gyms\npython -m pip install .\ncd ..\nrm -rf radio_gyms\n```\n### Dependencies\n* python 3.8+\n* numpy\n* pyglet\n* pywavefront\n## Features\nRadio gyms provides the toolkit for building wireless communication simulations including modules can be called to build and \ncustomize the radio propagation simulation. \n### 1. Calling Primitive Ray Tracer for Outdoor Propagation\nThe ray tracer can be called for computing the radio propagation paths in the following example.\n```python\nfrom radio_gyms.engines import Tracer\n\nSCENE_FILE_PATH = \"./city.obj\"\ntracer = Tracer(SCENE_FILE_PATH)\n# position (x, y, z)\ntx_pos = [0, 15, 0]\nrx_pos = [-30, 1.5, 45]\n# get traced result\nresult = tracer.trace_outdoor(tx_pos, rx_pos)\n# result\n# {'direct': False, \n# 'reflections': {'single': [   array([-28.94988531,   4.22886929,  62.39469675]),\n#                               array([-70.80339945,   7.04682531,  15.22840999])],\n#                  'double': []},\n# 'roof_edges': [array([-19.24403786,   8.5621709 ,  28.8660568 ]\n# 'tx_pos': array([ 0, 15,  0]),\n# 'rx_pos': array([-30. ,   1.5,  45. ]),\n# )]}\n```\n### 2. Calculate the traced result with the theoretical outdoor model\nThe result from the ray tracer can be calculated by the propagation models in ```radio_gyms.models```. \nIn this example, ```TheoreticalOutdoorModel``` can compute the traced results to predict the signal strength \nand delay between the receiver and transmitter based on the theoretical radio propagation models.\n```python\nfrom radio_gyms.models import TheoreticalOutdoorModel\nresult = {\n    'direct': False, \n    'reflections': {'single': [ [-28.94988531, 4.22886929, 62.39469675],\n                                [-70.80339945, 7.04682531, 15.22840999]],\n                    'double': []},\n    'roof_edges': [[-19.24403786, 8.5621709 , 28.8660568 ]],\n    'tx_pos': [ 0, 15, 0],\n    'rx_pos': [-30., 1.5, 45. ],\n}\nmodel = TheoreticalOutdoorModel(result, tx_power_dbm=20)\nmaximum_received_power = model.calculate_max_received_power(frequency=5.4e9) \n# -72.51 dBm\nimpulses = model.calculate_signal_impulses(freq=5.4e9)\n# [{'strength': -85.94590320344925, 'delay': 1.8653420787826134e-07},\n# {'strength': -74.3214622218488, 'delay': 2.910702009034143e-07}, \n# {'strength': -77.80902883055407, 'delay': 4.125241781539828e-07}]\n```\n### 3. Visualize the data with window \nAs we obtain the traced paths from the tracer, we can convert these paths into lines for the visualization. \n```Window()``` can be called to read the lines and the scene to visualize the scene in 3D by ```window.run()```.\n```python\nimport numpy as np\nfrom radio_gyms.visualizers import Window\nfrom radio_gyms.engines.ray_tracer.tracer import Tracer\nfrom radio_gyms.utils import OutdoorResultToLines\n\nMAT_OBJ_PATH = \"./city.obj\n\nwindow = Window()\nwindow.load_obj_to_scene(MAT_OBJ_PATH)\ntracer = Tracer(MAT_OBJ_PATH)\ntx_pos = np.array([0, 5, 0])\nlines = []\nwhile True:\n    rx_pos = (np.random.rand(3)*2-1)*100\n    rx_pos[1] = 1.2\n    if tracer.is_outdoor(rx_pos):\n        break\nresult = tracer.trace_outdoor(tx_pos, rx_pos)\nlines = lines + OutdoorResultToLines(result)\nwindow.line_sets = lines\nwindow.run()\n```\nWith the ```.run()``` The camera can be moved by ```W```  ```A```  ```S```  ```D``` keys and rotated by ```Q``` ```E```.\n![Old Town's Visualization](https://github.com/intelek-ai/radio-gyms/blob/master/assets/examples/oldtown_freeze.gif)\n\n### 4. Visualize the scene and radio propagation paths during running a simulation\n```window.render()``` can be called to visualize the simulation frame as the simulation updates the components. \n```python\nfrom radio_gyms.engines.ray_tracer.tracer import Tracer\nfrom radio_gyms.visualizers import Window\nfrom radio_gyms.utils.converters import outdoor_traced_result_to_line as OutdoorResultToLines\nfrom radio_gyms.simulations import OldtownWalk\n\nMAP_OBJ_PATH = \"./city.obj\"\n\nwindow = Window()\nwindow.load_obj_to_scene(MAP_OBJ_PATH)\ntracer = Tracer(MAP_OBJ_PATH, ref_max=2) # ref_max == max reflection tracing\nsimulation = OldtownWalk(tracer, 1, 5)\n# Run 100 episodes\nfor i in range(100):\n    simulation.update(1) # update time in the simulation by 1 second\n    results = simulation.get_results() # get result from simulation\n    window.line_sets = []\n    # convert the results to lines for visualizing in window\n    for result in results:\n        result_lines = OutdoorResultToLines(result)\n        window.line_sets += result_lines\n    # render the scene    \n    window.render()\n    window.dispatch_events()\n```\n![Old Town Simulation's Visualization](https://github.com/intelek-ai/radio-gyms/blob/master/assets/examples/oldtown.gif)\n\n### 5. Visualize the scene and radio propagation paths on notebook\nRadio gyms can be visualized on a notebook in 2D by using ```utils.Plotter```. \n```Plotter()``` requires definition of boundary of the map to visualize. The parameters such as points and lines can be passed to Plotter to visualize the data.\n\n```python\nfrom radio_gyms.engines import Tracer\nfrom radio_gyms.utils import Plotter, OutdoorResultToLines\nMAP_SCENE = \"./city.obj\"\n\ntracer = Tracer(MAP_SCENE)\nrx = [0, 1.2, 0]\ntx = [-50, 4, 40]\nresult = tracer.trace_outdoor(tx, rx)\nterrain_map = tracer.get_terrain_depth(64, 64)\nplotter = Plotter( tracer.min_bound, tracer.max_bound, terrain_map)\nplotter.rx_pos.append(rx)\nplotter.tx_pos.append(tx)\nplotter.lines =  OutdoorResultToLines(result)\n\nplotter.render_top() # Display from top view\n```\n![Old Town Simulation's Visualization on a notebook](https://github.com/intelek-ai/radio-gyms/blob/master/assets/examples/notebook_render.png)\n\n## Gyms\n### 1. ```radio-gym-01``` : Cooperative Small Cell Power Switching (Coming soon, V1.0.0)\n- #### Environment\nThe environment consists of mobile UEs as pedestrians walk in the old town and multiple small cells.\nThe small cells can sense the signal strength and delay of pedestrians where UEs only connect to the cell which provides the\nstrongest signal. \n- #### Reward\nThe reward is considered for average connected signal strength of all UEs to cells, the average signal-to-noise (SNR) of UEs \nbetween connected cell and disconnected cell, and the consumption transmitting power. \n- #### Action\nEach cell can control its own transmitting power.\n\n### 2. ```radio-gym-02```: Beamformer by antenna node control (Expected in v1.5)\n\n\n## Documentation\nRadio Gyms provides radio propagation engines and tools for customizations.\nThe official documentation can be found at ***[radio-gyms.intelek.ai](https://radio-gyms.intelek.ai)***\n\n## Citations\nThe pre-released source code can be cited with the following bibtex entry.\n```text\n@misc{radiogyms2022,\n  author = {Supawat Tamsri},\n  title = {Radio Gyms},\n  year = {2022},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/intelek-ai/radio-gyms}},\n}\n```\n\n## Contributors\n- [Supawat Tamsri](https://github.com/tamsri), supawat@intelek.ai\n  - Founds and develops.\n- [Muhammad Aamir Khan](https://scholar.google.com/citations?user=Q7YdzQEAAAAJ), aamir@intelek.ai\n  - Supervises on machine learning research and AI environments.\n- [Prof. Eng. Krzysztof Cichoń](https://scholar.google.com/citations?user=GmzK3-oAAAAJ), krzysztof.cichon@put.poznan.pl\n  - Supervises on radio propagation and channel modelling features.\n  - Validates and verifies theoretical models and simulated results.\n\n## Community \nFeel free to suggest an environment idea or contribute with us.\n* [Discord](https://discord.gg/Rp2KhXcpPh)\n\n## Road Map\n- [x] v0.1.x - Radio Ray Tracer\n- [x] v0.2.x - Theoretical Outdoor Propagation Model\n- [x] v0.3.x - Transmitter and Receiver Controller\n- [x] v0.4.x - Visualization for desktop\n- [x] v0.5.x - Visualization for notebook\n- [x] v0.6.x - Outdoor Simulation\n- [x] v0.7.x - Radio Gym 01: Wireless UAV Location Control\n- [ ] v0.8.x - Radio Gym 02: UE Location Prediction\n- [ ] v0.9.x - Radio Gym 03: Cooperative Small Cell Power Control\n- [ ] v0.9.5 - Beamforming Engine\n- [ ] v1.0.x - Radio Gym 04: Intelligent Beamformer\n- [ ] v1.1.x - FDTD Engine\n\n## License\n\nThe digital contents in ```/assets``` are available under Creative Commons (CC) license.\n\nSource code is licensed under **© Intelek AI [MIT](https://github.com/intelek-ai/radio-gyms/blob/master/LICENSE)**.\n\nMIT License\n\nCopyright (c) 2022 Intelek AI\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/intelek-ai/radio-gyms",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "radio-gyms",
    "package_url": "https://pypi.org/project/radio-gyms/",
    "platform": null,
    "project_url": "https://pypi.org/project/radio-gyms/",
    "project_urls": {
      "Bug Tracker": "https://github.com/intelek-ai/radio-gyms/issues",
      "Documentations": "https://radio-gyms.intelek.ai",
      "Homepage": "https://github.com/intelek-ai/radio-gyms"
    },
    "release_url": "https://pypi.org/project/radio-gyms/0.7.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "an open-source bundle of AI environments for radio communications",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13469236,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55d4a955e88b2931d9f6ad2e315c0624099b970927e240a88c1c303214154db0",
          "md5": "113a49cd014c3ba18f10366b95ad1e4f",
          "sha256": "469e566aa95e058661384c34b6824838ff8fe35352b34f3381ee7da5c93b9b90"
        },
        "downloads": -1,
        "filename": "radio_gyms-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "113a49cd014c3ba18f10366b95ad1e4f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18087,
        "upload_time": "2022-03-22T12:55:34",
        "upload_time_iso_8601": "2022-03-22T12:55:34.214862Z",
        "url": "https://files.pythonhosted.org/packages/55/d4/a955e88b2931d9f6ad2e315c0624099b970927e240a88c1c303214154db0/radio_gyms-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "454def2e3d33cab1cf416b7027064d38ef2657cecbb28a06782c27860f0f7e48",
          "md5": "4e2731013091cde77772d571b9cf5573",
          "sha256": "e31ab98ba145659bb989effc1de54112fab5c44b60380314fbc354be0a6624e9"
        },
        "downloads": -1,
        "filename": "radio_gyms-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e2731013091cde77772d571b9cf5573",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 29421,
        "upload_time": "2022-03-22T12:55:35",
        "upload_time_iso_8601": "2022-03-22T12:55:35.629843Z",
        "url": "https://files.pythonhosted.org/packages/45/4d/ef2e3d33cab1cf416b7027064d38ef2657cecbb28a06782c27860f0f7e48/radio_gyms-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00eefab7eb5f055921b2016b7696b9b5acba13503d6e59ed26b323ca3ad5de0e",
          "md5": "598ad55484b6bd7bde3e546611a8b1f8",
          "sha256": "a5988c61fef3194f33d8f68c96e8bbb288671a14eeb60b3f47e01dae05f8ab0c"
        },
        "downloads": -1,
        "filename": "radio_gyms-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "598ad55484b6bd7bde3e546611a8b1f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 22118,
        "upload_time": "2022-03-23T23:23:02",
        "upload_time_iso_8601": "2022-03-23T23:23:02.708786Z",
        "url": "https://files.pythonhosted.org/packages/00/ee/fab7eb5f055921b2016b7696b9b5acba13503d6e59ed26b323ca3ad5de0e/radio_gyms-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7830bb0c4e8cacc2995b152b619822f9b77737a1028f59b95e6cb8ff1d35a02d",
          "md5": "9e17b634cda0d845a870ac983cd6e237",
          "sha256": "8c9259736561387f13173b7b16fbbc0606811050e9af2db2a0ee3ac476c5b68f"
        },
        "downloads": -1,
        "filename": "radio_gyms-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e17b634cda0d845a870ac983cd6e237",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 33380,
        "upload_time": "2022-03-23T23:23:04",
        "upload_time_iso_8601": "2022-03-23T23:23:04.888184Z",
        "url": "https://files.pythonhosted.org/packages/78/30/bb0c4e8cacc2995b152b619822f9b77737a1028f59b95e6cb8ff1d35a02d/radio_gyms-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2891864b1d4f471c1cdbd9b87d61beb5303b833e082bdf5574ed90bf359c80f3",
          "md5": "34c94c32528257c87cd3c7347096e889",
          "sha256": "56af9799e5d7f2956b178a6c441ebb24f3ef76d101fbb8d21cd59fc955564925"
        },
        "downloads": -1,
        "filename": "radio_gyms-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34c94c32528257c87cd3c7347096e889",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 25466,
        "upload_time": "2022-03-24T14:30:51",
        "upload_time_iso_8601": "2022-03-24T14:30:51.170058Z",
        "url": "https://files.pythonhosted.org/packages/28/91/864b1d4f471c1cdbd9b87d61beb5303b833e082bdf5574ed90bf359c80f3/radio_gyms-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4458234679b624d8345dc8e01f890bed62272d184a06909c03bf68c843aa85eb",
          "md5": "cc757a109f6b639d194cb83109956fa6",
          "sha256": "06521f4c89d7cdfe628a82485b26cddcad41d43ba16c4c146c0f28a4e158685f"
        },
        "downloads": -1,
        "filename": "radio_gyms-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cc757a109f6b639d194cb83109956fa6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 35341,
        "upload_time": "2022-03-24T14:30:52",
        "upload_time_iso_8601": "2022-03-24T14:30:52.886070Z",
        "url": "https://files.pythonhosted.org/packages/44/58/234679b624d8345dc8e01f890bed62272d184a06909c03bf68c843aa85eb/radio_gyms-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd686718f24e5cece46588e70bb2a07515a5802778b73bf6ad9be7503dee7c96",
          "md5": "522b0407d26784f05e1cd4aeb1c01756",
          "sha256": "c93358d0a9ad5cb8f7a0cd09d12f64453ad1d2faff114dcb1b46a5cf74f04497"
        },
        "downloads": -1,
        "filename": "radio_gyms-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "522b0407d26784f05e1cd4aeb1c01756",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 26102,
        "upload_time": "2022-03-29T19:56:18",
        "upload_time_iso_8601": "2022-03-29T19:56:18.621083Z",
        "url": "https://files.pythonhosted.org/packages/bd/68/6718f24e5cece46588e70bb2a07515a5802778b73bf6ad9be7503dee7c96/radio_gyms-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01921d3dc4b30fa055eb63923a4b45f1e84ac08aefeadf948ef25f0e95263a8d",
          "md5": "ce8404d16eece2f552310d2d0f0125c8",
          "sha256": "6648d3295c4008d1a1c7c1a059f37fab12f0f830ebff6e85f57729f8d403d2bc"
        },
        "downloads": -1,
        "filename": "radio_gyms-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ce8404d16eece2f552310d2d0f0125c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 35964,
        "upload_time": "2022-03-29T19:56:22",
        "upload_time_iso_8601": "2022-03-29T19:56:22.172470Z",
        "url": "https://files.pythonhosted.org/packages/01/92/1d3dc4b30fa055eb63923a4b45f1e84ac08aefeadf948ef25f0e95263a8d/radio_gyms-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea1509347fdad8e28f436d91c60c76531eee87394bdbe684028b6cf5933be35d",
          "md5": "c9a15e095e1704aced54f53a7a3fbfa1",
          "sha256": "b90b571c019ef2437b194bc05a3090eedeaff9d9afa75965ec9f9734d8f5ea5d"
        },
        "downloads": -1,
        "filename": "radio_gyms-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9a15e095e1704aced54f53a7a3fbfa1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 33213,
        "upload_time": "2022-04-10T14:44:58",
        "upload_time_iso_8601": "2022-04-10T14:44:58.926496Z",
        "url": "https://files.pythonhosted.org/packages/ea/15/09347fdad8e28f436d91c60c76531eee87394bdbe684028b6cf5933be35d/radio_gyms-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15d16f5142f2cdf6e8caaf908afb8c3ba296aabbfd5bfc6d2a8532d6760c7ef4",
          "md5": "56483334d956a400871321e7927d0964",
          "sha256": "fed192b44bbe2028e8e88bdf8b07e2654d761dd92f3553712c9403c753812142"
        },
        "downloads": -1,
        "filename": "radio_gyms-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "56483334d956a400871321e7927d0964",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 42469,
        "upload_time": "2022-04-10T14:45:00",
        "upload_time_iso_8601": "2022-04-10T14:45:00.928880Z",
        "url": "https://files.pythonhosted.org/packages/15/d1/6f5142f2cdf6e8caaf908afb8c3ba296aabbfd5bfc6d2a8532d6760c7ef4/radio_gyms-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea1509347fdad8e28f436d91c60c76531eee87394bdbe684028b6cf5933be35d",
        "md5": "c9a15e095e1704aced54f53a7a3fbfa1",
        "sha256": "b90b571c019ef2437b194bc05a3090eedeaff9d9afa75965ec9f9734d8f5ea5d"
      },
      "downloads": -1,
      "filename": "radio_gyms-0.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c9a15e095e1704aced54f53a7a3fbfa1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 33213,
      "upload_time": "2022-04-10T14:44:58",
      "upload_time_iso_8601": "2022-04-10T14:44:58.926496Z",
      "url": "https://files.pythonhosted.org/packages/ea/15/09347fdad8e28f436d91c60c76531eee87394bdbe684028b6cf5933be35d/radio_gyms-0.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15d16f5142f2cdf6e8caaf908afb8c3ba296aabbfd5bfc6d2a8532d6760c7ef4",
        "md5": "56483334d956a400871321e7927d0964",
        "sha256": "fed192b44bbe2028e8e88bdf8b07e2654d761dd92f3553712c9403c753812142"
      },
      "downloads": -1,
      "filename": "radio_gyms-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "56483334d956a400871321e7927d0964",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 42469,
      "upload_time": "2022-04-10T14:45:00",
      "upload_time_iso_8601": "2022-04-10T14:45:00.928880Z",
      "url": "https://files.pythonhosted.org/packages/15/d1/6f5142f2cdf6e8caaf908afb8c3ba296aabbfd5bfc6d2a8532d6760c7ef4/radio_gyms-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}