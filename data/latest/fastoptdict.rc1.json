{
  "info": {
    "author": "JulianZackWu",
    "author_email": "julianzackwu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# FastOptDict Document\n\n## 0x00 Introduction\n\nFastOptDict is a simple dictionary library. It allows you to find all the keys, values, and paths in the dictionary variable. \n\nFor example, we have a dictionary variable and we have to find out the value for the key \"test\".\n\n```python\n\n>>> import FastOptDict\n>>> dict_data = {\"a\": \"b\", \"c\": \"d\", \"e\": [{\"f\": \"a\"}, \"e\", {\"h\": [\"tt\", \"dd\"]}], \"h\": [\"tt\", \"dd\"], \"i\": \"c\",\"z\": {\"f\": \"a\",\"t\":{\"x\":\"z\"}}}\n\n>>> value_list = FastOptDict.get_value_by_key(\"a\")\n>>> print(value_list)\n```\n\nIt uses a path generation algorithm to finish the task instead of using regex.\n\n\n## 0x01 Install\n\n```\npip install FastOptDict\n```\n\n## 0x02 Usage\n\n1. Find all values from the dictionary variable, and return all the values by the key.\n\n   ```python\n   dict_data = {\"a\": \"b\", \"c\": \"d\", \"e\": [{\"f\": \"a\"}, \"e\", {\"h\": [\"tt\", \"dd\"]}], \"h\": [\"tt\", \"dd\"], \"i\": \"c\",\"z\": {\"f\": \"a\",\"t\":{\"x\":\"z\"}}}\n   value_list = FastOptDict.get_value_by_key(\"a\")\n   print(value_list)\n   \n   [['tt', 'dd'], ['tt', 'dd']]\n   ```\n\n2. Find all keys from the dictionary variable, and return all the values of the keys equal to what you input. You can also convert the result into an easy way to read.\n\n   ```python\n   value_list = FastOptDict.get_value_by_key(\"a\")\n   print(value_list)\n   \n   ['/z/f', '/e/setoptlist(0)/f']\n   \n   value_list = FastOptDict.get_value_by_key(\"a\",convert=True)\n   print(value_list)\n   \n   [\"dict['e'][0]['f']\", \"dict['z']['f']\"]\n   \n   \n   value_list = get_key_by_value(dict_data, [{\"f\": \"a\"}, \"e\", {\"h\": [\"tt\", \"dd\"]}], convert=True)\n   print(value_list)\n   \n   [\"dict['e']\"]\n   ```\n\n3. Find all keys and values from the dictionary variable, Even though what you input is a dictionary variable.\n\n   ```python\n   value_list = FastOptDict.get_all_by_key(dict_data,\"f\")\n   print(value_list)\n   \n   value_list = FastOptDict.get_all_by_key(dict_data, \"f\",convert=True)\n   print(value_list)\n   \n   \n   [{'path': '/z/f', 'value': 'a'}, {'path': '/e/setoptlist(0)/f', 'value': 'a'}]\n   [{'path': \"dict['z']['f']\", 'value': 'a'}, {'path': \"dict['e'][0]['f']\", 'value': 'a'}]\n   \n   value_list = FastOptDict.get_all_by_key(dict_data, \"e\",convert=True)\n   print(value_list)\n   \n   [{'path': \"dict['e']\", 'value': [{'f': 'a'}, 'e', {'h': ['tt', 'dd']}]}]\n   \n   ```\n\n4. Find paths from the dictionary variable by key. For example, the dictionary variable is {\"a\":{\"b\":\"c\",\"d\":\"e\"}}, the path of key \"b\" is dict[\"a\"], and we can use dict\\[\"a\"][\"d\"] to get the value finally.\n\n   ```python\n   value_list = FastOptDict.get_path_by_key(dict_data, \"f\")\n   print(value_list)\n   \n   value_list = FastOptDict.get_path_by_key(dict_data, \"f\",convert=True)\n   print(value_list)\n   \n   ['/z/f', '/e/setoptlist(0)/f']\n   [\"dict['e'][0]['f']\", \"dict['z']['f']\"]\n   ```\n\n5. Find paths from the dictionary variable by values.\n\n   ```python\n   value_list = get_path_by_value(dict_data,[{\"f\": \"a\"}, \"e\", {\"h\": [\"tt\", \"dd\"]}])\n   print(value_list)\n   \n   value_list = get_path_by_value(dict_data, [{\"f\": \"a\"}, \"e\", {\"h\": [\"tt\", \"dd\"]}],convert=True)\n   print(value_list)\n   \n   ['/e/setoptlist(2)', '/', '/e/setoptlist(0)']\n   [\"dict['']\", \"dict['e'][0]\", \"dict['e'][2]\"]\n   ```\n\n6. Find keyword from keynames and values\n\n   ```python\n   print(search_all_by_str(dict_data,\"dd\"))\n   print(search_all_by_str(dict_data, \"dd\",True))\n   \n   ['/h/setoptlist(1)', '/h', '/e/setoptlist(2)/h', '/e/setoptlist(2)/h/setoptlist(1)']\n   [\"dict['h']\", \"dict['e'][2]['h'][1]\", \"dict['e'][2]['h']\", \"dict['h'][1]\"]\n   ```\n\n7. Find keyword in keynames\n\n   ```python\n   print(search_key_in_value(dict_data, [\"tt\", \"dd\"],convert=True))\n   \n   [\"dict['e'][2]['h']\", \"dict['h']\"]\n   ```\n\n8. Get value from path\n\n   ```python\n   print(get_value_by_path(dict_data,\"/e\"))\n   [{'f': 'a'}, 'e', {'h': ['tt', 'dd']}]\n   ```\n\n   \n\n## 0x03 MIT License\n\nCopyright (c) 2022 JulianZackWu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JulianZackWu/FastOptDict",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "FastOptDict",
    "package_url": "https://pypi.org/project/FastOptDict/",
    "platform": null,
    "project_url": "https://pypi.org/project/FastOptDict/",
    "project_urls": {
      "Homepage": "https://github.com/JulianZackWu/FastOptDict"
    },
    "release_url": "https://pypi.org/project/FastOptDict/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package for operating",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13970803,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8db8004dc14bbaa6a6b3d8324144217977d015df11061747c831bc5445e1e34",
          "md5": "3eb13b4778520e4fd981b94fd071951d",
          "sha256": "63c9b9c34f5c5f274944f95d645422db2b3b05edd054fbfe83c16d3b09e5bc39"
        },
        "downloads": -1,
        "filename": "FastOptDict-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3eb13b4778520e4fd981b94fd071951d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4283,
        "upload_time": "2022-05-29T18:24:34",
        "upload_time_iso_8601": "2022-05-29T18:24:34.957387Z",
        "url": "https://files.pythonhosted.org/packages/e8/db/8004dc14bbaa6a6b3d8324144217977d015df11061747c831bc5445e1e34/FastOptDict-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5530d5632f7dee7f6562c6fd04256dfc05911be18a6a9c31dc19420f2a9ac67",
          "md5": "aeee600ba89de38403f9aacc652c4084",
          "sha256": "43646c8406c5805e3c34b136ae3d70a97169c135accb6f41f28e0ad83db9532d"
        },
        "downloads": -1,
        "filename": "FastOptDict-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aeee600ba89de38403f9aacc652c4084",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4002,
        "upload_time": "2022-05-29T18:24:36",
        "upload_time_iso_8601": "2022-05-29T18:24:36.940422Z",
        "url": "https://files.pythonhosted.org/packages/b5/53/0d5632f7dee7f6562c6fd04256dfc05911be18a6a9c31dc19420f2a9ac67/FastOptDict-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8db8004dc14bbaa6a6b3d8324144217977d015df11061747c831bc5445e1e34",
        "md5": "3eb13b4778520e4fd981b94fd071951d",
        "sha256": "63c9b9c34f5c5f274944f95d645422db2b3b05edd054fbfe83c16d3b09e5bc39"
      },
      "downloads": -1,
      "filename": "FastOptDict-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3eb13b4778520e4fd981b94fd071951d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4283,
      "upload_time": "2022-05-29T18:24:34",
      "upload_time_iso_8601": "2022-05-29T18:24:34.957387Z",
      "url": "https://files.pythonhosted.org/packages/e8/db/8004dc14bbaa6a6b3d8324144217977d015df11061747c831bc5445e1e34/FastOptDict-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5530d5632f7dee7f6562c6fd04256dfc05911be18a6a9c31dc19420f2a9ac67",
        "md5": "aeee600ba89de38403f9aacc652c4084",
        "sha256": "43646c8406c5805e3c34b136ae3d70a97169c135accb6f41f28e0ad83db9532d"
      },
      "downloads": -1,
      "filename": "FastOptDict-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "aeee600ba89de38403f9aacc652c4084",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4002,
      "upload_time": "2022-05-29T18:24:36",
      "upload_time_iso_8601": "2022-05-29T18:24:36.940422Z",
      "url": "https://files.pythonhosted.org/packages/b5/53/0d5632f7dee7f6562c6fd04256dfc05911be18a6a9c31dc19420f2a9ac67/FastOptDict-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}