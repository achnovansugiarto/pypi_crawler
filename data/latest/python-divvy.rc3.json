{
  "info": {
    "author": "William Dean",
    "author_email": "wd60622@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Divvy Rideshare Data\n\n## Overview \n\nAccess and work with Chicago rideshare data from Python.\n\nAll the information is derived from the official divvy bikes website: https://divvybikes.com/\n\nWhere the data sources were linked to: https://ride.divvybikes.com/system-data \n\nwhich point to: \n\n- Historical: https://divvy-tripdata.s3.amazonaws.com/index.html \n- Live and stations: https://gbfs.divvybikes.com/gbfs/gbfs.json\n\n\n## Installation \n\nInstall from `pip` \n\n```shell \n$ pip install python-divvy\n```\n\n## Usage\n\n### Reading Data\n\nReading from the various data sources can be done with the following functions.\n\n```python \nimport divvy\n\n# Historical trips between a given date range\ndf_trips = divvy.read_historical_trips(\n    start_date=\"2021-01-01\", \n    end_date=\"2021-02-01\"\n)\n# The trips from July 15th 2022 until latest\ndf_trips = divvy.read_historical_trips(start_date=\"2022-07-15\")\n\n# Available ebikes and scooters\ndf_available = divvy.read_available()\n\n# Station information and bikes and scooters available there \ndf_stations = divvy.read_stations()\n```\n\nWith the install of [`geopandas`](https://geopandas.org/en/stable/), the pre-May 2022 pricing boundary for ebikes can be accessed with the `read_fee_boundary` function. \n\n```python \n# Single row geopandas.GeoDataFrame\ngdf_fees = divvy.read_fee_boundary()\n```\n\n### Trip Pricing\n\nThis package allows provides access to the latest pricing for the different bikes as defined [here](https://divvybikes.com/pricing). These prices can be apply to `pandas.Series` objects as follows: \n\n```python \ndf_trips = pd.DataFrame({\n    \"duration_in_mins\": [10, 10, 10, 10], \n    \"member\": [True, True, False, False], \n    \"electric_bike\": [True, False, True, False], \n})\n\ndf_trips[\"price\"] = divvy.apply_pricing(\n    duration=df_trips[\"duration_in_mins\"], \n    member=df_trips[\"member\"], \n    electric_bike=df_trips[\"electric_bike\"], \n)\n```\n\nClassic bike prices for casual users are ambiguous due to the daily rate or single trip rate. However, they can be accessed in the `divvy.pricing` module as so. \n\n```python\ncasual_non_electric_duration = [10, 20, 30]\n\ndivvy.pricing.single_ride_rate(casual_non_electric_duration)\ndivvy.pricing.visitor_pass_rate(casual_non_electric_duration)\n```\n\nNew pricing can easily be defined from the `divvy.pricing` module as well. For instance, a reduced ebike rate can be created for casual users. \n\n```python \nreduced_ebike_rate = (\n    divvy.pricing.UnlockRate(amount=100) \n    + divvy.pricing.MinuteRate(amount=25, start=0)\n)\n\ncasual_electric_duration = [10, 20, 30]\n\nreduced_ebike_rate(casual_electric_duration)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wd60622/divvy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-divvy",
    "package_url": "https://pypi.org/project/python-divvy/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-divvy/",
    "project_urls": {
      "Homepage": "https://github.com/wd60622/divvy"
    },
    "release_url": "https://pypi.org/project/python-divvy/0.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python Client for Chicago Ridesharing Data.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14966679,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1c3563dd2fba8aaefce613c67bd7e166c75834106527a9201dd7bffea1392b1",
          "md5": "2a5df23c6c484cea91757d67db3a25a4",
          "sha256": "bb796777fa535cdee96cc14f2f7b79a781ddd2489e07a10b0bcdfdd78aca08fc"
        },
        "downloads": -1,
        "filename": "python-divvy-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2a5df23c6c484cea91757d67db3a25a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5418,
        "upload_time": "2022-08-16T21:13:22",
        "upload_time_iso_8601": "2022-08-16T21:13:22.189049Z",
        "url": "https://files.pythonhosted.org/packages/f1/c3/563dd2fba8aaefce613c67bd7e166c75834106527a9201dd7bffea1392b1/python-divvy-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43098b1d3537a6c2c9ef38638f7dacbabb0a830cd4a743837beb9682ba3d27eb",
          "md5": "dcdc600d573f3f5125839e512d5fd61d",
          "sha256": "78f717b000dcf29253bacb680db14c479edcc1ebde53682e54b6070377a022b8"
        },
        "downloads": -1,
        "filename": "python-divvy-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "dcdc600d573f3f5125839e512d5fd61d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7695,
        "upload_time": "2022-08-24T20:03:03",
        "upload_time_iso_8601": "2022-08-24T20:03:03.356199Z",
        "url": "https://files.pythonhosted.org/packages/43/09/8b1d3537a6c2c9ef38638f7dacbabb0a830cd4a743837beb9682ba3d27eb/python-divvy-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecfbf1f9bb649c7540729206be84874440529a78711b95abc2261325f58dee0a",
          "md5": "953f00d90311e3cbfcf9c12f96fad01a",
          "sha256": "0a45c8d87571ead8f637c0bd49271f166de1281c90ff64f5114d48f1eaf07df6"
        },
        "downloads": -1,
        "filename": "python-divvy-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "953f00d90311e3cbfcf9c12f96fad01a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8797,
        "upload_time": "2022-09-01T19:31:18",
        "upload_time_iso_8601": "2022-09-01T19:31:18.160026Z",
        "url": "https://files.pythonhosted.org/packages/ec/fb/f1f9bb649c7540729206be84874440529a78711b95abc2261325f58dee0a/python-divvy-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ecfbf1f9bb649c7540729206be84874440529a78711b95abc2261325f58dee0a",
        "md5": "953f00d90311e3cbfcf9c12f96fad01a",
        "sha256": "0a45c8d87571ead8f637c0bd49271f166de1281c90ff64f5114d48f1eaf07df6"
      },
      "downloads": -1,
      "filename": "python-divvy-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "953f00d90311e3cbfcf9c12f96fad01a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8797,
      "upload_time": "2022-09-01T19:31:18",
      "upload_time_iso_8601": "2022-09-01T19:31:18.160026Z",
      "url": "https://files.pythonhosted.org/packages/ec/fb/f1f9bb649c7540729206be84874440529a78711b95abc2261325f58dee0a/python-divvy-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}