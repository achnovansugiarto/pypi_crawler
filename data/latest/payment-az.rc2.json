{
  "info": {
    "author": "Cavid Rzayev",
    "author_email": "rzayev592@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# odeme sistemleri ucun modul\n\nHazirda Azericard , NestPay, GoldenPay destekleyir\n\nModulda async odeme neticesini gonderen function var . Callback a gelen data ya gore 'success' emaili gonderir .\n\ndefault olarag False di\n\naktiv etmek ucun :\n\ncallbackda data_result a gonderdiyimiz request.POST da send_email = True ve:\n\n```python\nsend_email = True\nsender = ''\nto = ''\ncontent = ''\nhostname='',\nport='',\nusername='',\npassword='',\n\n```\ngondermeyiniz bes edir\n\n```python\n# Azericard ucun example \n\n\n@csrf_exempt\ndef callback(request):\n    ........\n    if request.method == 'POST':\n\n        data = request.POST\n        # email gondermek isdediyiniz teqdirde\n        ###################\n        data['send_email'] = True\n        data['sender'] = '' # gonderen\n        data['to'] = '' # kime\n        data['content'] = '' # mail terkibi ```html``` qebul edir\n        data['hostname']='', # email server\n        data['port']= 465, # port integer olmalidi\n        data['username']='', # email login\n        data['password']='', # email password\n        ####################### eger email gondermek isdemirsinizse commente aldigim hisseni gondermeye ehtiyac yoxdur\n        result = AzeriCard.data_result(**data)\n        return HttpResponse(result)\n    else:\n        return HttpResponse(\"Not found\")\n\n\n```\n\n# Example NestPay\n\n```python\n\n\n\nfrom payment.nestpay import NestPay\nfrom payment.utils import microtime\nfrom django.http import HttpResponse\nfrom django.views.decorators.csrf import csrf_exempt\n\n\n\n\ndef payment(request):\n    ......\n    temp = NestPay(\n        clientId = '', # bank terefinden verilir\n        amount = '', # mebleg : 1.00 azn (float)\n        oid = '', # order id unique - di\n        okUrl = '', # callback url. Success den sonra bura post gonderilir\n        failUrl = '', # error url \n        rnd = microtime(),\n        storekey = '2', # bank terefinden verilir\n        storetype = '', # bank terefinden verilir\n        lang = 'en', # hansi dilde odeme sehvesine redirect edecek\n        islemtipi = 'Auth', # default \n        hash = '', # hash edirik default bosh stringdi\n        refreshtime = '5', # sehifeler arasinda redirect timeout\n        instalment='', # taksid\n        currency = '944', # Azerbaycan manatinin kodu\n        post_url = 'https://entegrasyon.asseco-see.com.tr/fim/est3Dgate' # odeme sehifesi\n        ).bank_data()\n\n    return HttpResponse(temp)\n\n# callback yuxarda paymentde qeyd edeceyimiz okUrl di ve o url e bank post gonderir\n@csrf_exempt\ndef callback(request):\n    ........\n    if request.method == 'POST':\n        data = request.POST\n        data['storekey'] = '' #bank terefinden verilir\n        result = NestPay.data_result(**data)\n        return HttpResponse(result)\n    else:\n        return HttpResponse(\"Not found\")\n\n\n```\n\n\n# Example Azericard\n\n\n\n\n```python\n\n\n\n\nfrom payment.azericard import AzeriCard\nfrom django.http import HttpResponse\nfrom django.views.decorators.csrf import csrf_exempt\n\n\n\n\ndef payment(request):\n    ......\n    temp = AzeriCard(\n        AMOUNT = '1',\n        CURRENCY = \"AZN\",\n        ORDER = '100001', # order id si mininim 6 reqem olmalidi misal : 100001 : Order id olmadan script run olmur\n        TERMINAL = \"\", # bank terefinden verilir\n        TRTYPE = \"1\", # Auth\n        key_for_sign = \"\", #bank terefden onceden verilir\n        DESC = \"\",# description\n        MERCH_NAME = \"\", #magaza adi\n        MERCH_URL = \"\", # callback sehifesi\n        EMAIL = \"\", # emailiniz\n        COUNTRY = \"AZ\", \n        BACKREF = \"\",# geri donus sehifesi\n        ).bank_data()\n\n    return HttpResponse(temp)\n\n# callback yuxarda paymentde qeyd edeceyimiz MERCH_URL di ve o url e bank post gonderir\n@csrf_exempt\ndef callback(request):\n    ........\n    if request.method == 'POST':\n        data = request.POST\n        data['key_for_sign'] = '' # bank terefden onceden verilir\n        result = AzeriCard.data_result(**data)\n        # eger odenisin reversal nezerde tutmusunuzsa data['RRN'] ve data['INT_REF'] ni order.models de save edin\n        # Example\n        if result['action'] == '0':\n        try:\n            order = Order.models.get(id=data['ORDER'])\n            order.rrn == data['RRN']\n            order.int_ref = data['INT_REF']\n        except:\n            pass\n        return HttpResponse(result)\n    else:\n        return HttpResponse(\"Not found\")\n\n# ordenisin geri qaytarilmasi lazim oldugu halda (reversal)\ndef payment_reversal(request):\n    data = {}\n    data['key_for_sign'] = '' # bank terefden onceden verilir\n    data['AMOUNT'] = '1';\n\tdata['CURRENCY'] = 'AZN';\n\tdata['ORDER'] = '000001';\n\tdata['RRN'] = '';\t\t\t#Bank reference number\n\tdata['INT_REF'] = '';\t\t# Internal reference number\n\tdata['TERMINAL'] = '77777777';\t\t\t\n    reversal = AzeriCard.reversal(**data)\n    return HttpResponse(result) \n\n\n\n```\n\n\n# Example GoldenPay\n\n\n\n\n```python\n\nfrom payment.goldenpay import GoldenPay\nfrom django.http import HttpResponseRedirect\n\n\n\ndef payment(request):\n    temp = GoldenPay(\n        amount = 1, # qiymet\n        merchantName = \"\", # goldenpay terefden verilir \n        authKey = \"\", # goldenpay terefden verilir \n        cardType = \"\", # (Visa=v, Mastercard=m)\n        description = \"\", # \n        ).bank_data()\n    ######## Eger odenisin neticesini oyrenmek isdeyirsinizse remp['paymentKey'] database save edin \n    # Example    Order.objects.create(key = remp['paymentKey'])\n\n    ########\n    return HttpResponseRedirect(temp['url'])\n\n\ndef get_payment_result(request):  \n    temp = GoldenPay(\n        authKey = \"\", # goldenpay terefden verilir \n        paymentKey = \"\"\n    ).getPaymentResult()\n\n    # temp returnda xml qaytaracaq \n\n    return HttpResponse(temp)\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CavidRzayev/payment-az",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "payment-az",
    "package_url": "https://pypi.org/project/payment-az/",
    "platform": "",
    "project_url": "https://pypi.org/project/payment-az/",
    "project_urls": {
      "Homepage": "https://github.com/CavidRzayev/payment-az"
    },
    "release_url": "https://pypi.org/project/payment-az/1.1.0/",
    "requires_dist": [
      "requests",
      "django",
      "aiosmtplib"
    ],
    "requires_python": ">=3.6",
    "summary": "Django Azerbaycan getewaylari ucun modullar",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8947004,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b29949a96cd1183b0d2defe4ad6e4ec30d9e25a95ed4fed09443a53b593a6c17",
          "md5": "4533a56e6eea17c7dfba180ccbcab765",
          "sha256": "1080fea16ffd530e30ec1a9472dd655b32ac57638088a1b5ec2dfe0b809fa373"
        },
        "downloads": -1,
        "filename": "payment_az-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4533a56e6eea17c7dfba180ccbcab765",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 8098,
        "upload_time": "2020-12-20T16:10:03",
        "upload_time_iso_8601": "2020-12-20T16:10:03.406520Z",
        "url": "https://files.pythonhosted.org/packages/b2/99/49a96cd1183b0d2defe4ad6e4ec30d9e25a95ed4fed09443a53b593a6c17/payment_az-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3f19208d56a1d37e7c198206846229efbf855b18cf6d021e9c642bb1822a318",
          "md5": "83414aa1336cfca6422037a72ffa3b80",
          "sha256": "13994800d2a1dd167d6d4c421be2bd800e07374265a00e0263a38d46d5ce4a66"
        },
        "downloads": -1,
        "filename": "payment-az-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "83414aa1336cfca6422037a72ffa3b80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8093,
        "upload_time": "2020-12-20T16:10:04",
        "upload_time_iso_8601": "2020-12-20T16:10:04.686157Z",
        "url": "https://files.pythonhosted.org/packages/d3/f1/9208d56a1d37e7c198206846229efbf855b18cf6d021e9c642bb1822a318/payment-az-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de06c4b6eac2213d7c9004f7b48dcd774de7f94058c0f0c11d8de25b76d546bc",
          "md5": "437df75f640844dd9ad2a8d8e9a7343d",
          "sha256": "d50d456fac78ae81ed9d747a0fc3341cd38a4e0ffafd585ffad3aa4633c96c39"
        },
        "downloads": -1,
        "filename": "payment_az-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "437df75f640844dd9ad2a8d8e9a7343d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8109,
        "upload_time": "2020-12-20T17:38:02",
        "upload_time_iso_8601": "2020-12-20T17:38:02.523468Z",
        "url": "https://files.pythonhosted.org/packages/de/06/c4b6eac2213d7c9004f7b48dcd774de7f94058c0f0c11d8de25b76d546bc/payment_az-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cd6cbb6a7c2cc6610a23e9d1d1ca6d14aa2704cdca7ee34cb02626660aa354b",
          "md5": "14e61f6d8d5eea9498e543ff05463e83",
          "sha256": "6cf48012b4bdb970313a20ad636ac87a10868f091f881930c0eea051c42ade6c"
        },
        "downloads": -1,
        "filename": "payment-az-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14e61f6d8d5eea9498e543ff05463e83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8081,
        "upload_time": "2020-12-20T17:38:13",
        "upload_time_iso_8601": "2020-12-20T17:38:13.290945Z",
        "url": "https://files.pythonhosted.org/packages/0c/d6/cbb6a7c2cc6610a23e9d1d1ca6d14aa2704cdca7ee34cb02626660aa354b/payment-az-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de06c4b6eac2213d7c9004f7b48dcd774de7f94058c0f0c11d8de25b76d546bc",
        "md5": "437df75f640844dd9ad2a8d8e9a7343d",
        "sha256": "d50d456fac78ae81ed9d747a0fc3341cd38a4e0ffafd585ffad3aa4633c96c39"
      },
      "downloads": -1,
      "filename": "payment_az-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "437df75f640844dd9ad2a8d8e9a7343d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8109,
      "upload_time": "2020-12-20T17:38:02",
      "upload_time_iso_8601": "2020-12-20T17:38:02.523468Z",
      "url": "https://files.pythonhosted.org/packages/de/06/c4b6eac2213d7c9004f7b48dcd774de7f94058c0f0c11d8de25b76d546bc/payment_az-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cd6cbb6a7c2cc6610a23e9d1d1ca6d14aa2704cdca7ee34cb02626660aa354b",
        "md5": "14e61f6d8d5eea9498e543ff05463e83",
        "sha256": "6cf48012b4bdb970313a20ad636ac87a10868f091f881930c0eea051c42ade6c"
      },
      "downloads": -1,
      "filename": "payment-az-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "14e61f6d8d5eea9498e543ff05463e83",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8081,
      "upload_time": "2020-12-20T17:38:13",
      "upload_time_iso_8601": "2020-12-20T17:38:13.290945Z",
      "url": "https://files.pythonhosted.org/packages/0c/d6/cbb6a7c2cc6610a23e9d1d1ca6d14aa2704cdca7ee34cb02626660aa354b/payment-az-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}