{
  "info": {
    "author": "Julian Nash",
    "author_email": "julianjamesnash@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# jsonres\n\n![Python package](https://github.com/Julian-Nash/jsonres/workflows/Python%20package/badge.svg?branch=master)\n\n`jsonres` is a small, lightweight wrapper around Flask's `make_response` and `jsonify`, providing a fast and convenient\nway to return JSON data with the right HTTP status code.\n\n`jsonres` utilizes HTTP status code messages as methods in a declarative way, you simply call a static method \nsuch as `ok`, `not_found` or `internal_server_error` and optionally pass in the data you wish to return as JSON.\n\n> Python v3.6 +\n\n## Installation\n\n```shell script\npip install jsonres\n```\n\n## Usage\n\nImport the `jsonresonse` class\n\n```py3\nfrom jsonres import jsonresonse\n```\n\nYou can now call one of many staticmethods of the class\n\nReturn a `200 OK` status code and a dict\n\n```py3\n@app.route(\"/\")\ndef example():\n    \"\"\" Returns a dict with an HTTP 200 OK status code \"\"\"\n    return jsonresonse.ok({\"message\": \"ok\"})\n```\n\nPassing no data to the method returns an empty string\n\n```py3\n@app.route(\"/\")\ndef ok():\n    \"\"\" Return an empty HTTP 200 OK response \"\"\"\n    return jsonresonse.ok()\n```\n\nYou can optionally pass in a headers dict if required\n\n```py3\n@app.route(\"/\")\ndef example():\n    \"\"\" Return a dict with custom headers \"\"\"\n    return jsonresonse.ok(\n        data={\"message\": \"ok\"},\n        headers={\"X-Custom-Header\": \"hello!\"}\n    )\n```\n\nTaking a look in the Chrome developer tools, we can see our custom header:\n\n```shell script\nContent-Length: 17\nDate: Sun, 03 May 2020 16:49:41 GMT\nContent-Type: application/json\nServer: Werkzeug/1.0.1 Python/3.8.2\nX-Custom-Header: hello!\n```\n\n`jsonres` has methods for all HTTP status codes defined by the ietf - https://tools.ietf.org/html/rfc7231\n\nCommon status codes include, `404 NOT FOUND`, here being used in a Flask error handler\n\n```py3\ndef handle_not_found_error(e):\n    \"\"\" Handler for not found errors \"\"\"\n    app.logger.warning(e)\n    return jsonresonse.not_found(data={\"message\": \"Not found\"})\n\napp.register_error_handler(404, handle_not_found_error)\n```\n\nAnd `500 INTERNAL SERVER ERROR`\n\n```py3\n@app.route(\"/internal-server-error\")\ndef internal_server_error():\n    msg = {\"message\": \"Whoops, we did something wrong\"}\n    return jsonresonse.internal_server_error(msg)\n```\n\nVisiting this URL in the browser returns\n\n```shell script\n{\"message\":\"Whoops, we did something wrong\"}\n```\n\n## Flask example\n\nHere's a trivial example, showing `jsonres` in action\n\n```py3\nfrom flask import Flask\n\nfrom jsonres import jsonresonse\n\n\ndef create_app():\n\n    app = Flask(__name__)\n\n    @app.route(\"/\")\n    def ok():\n        \"\"\" Return an empty HTTP 200 OK response \"\"\"\n        return jsonresonse.ok()\n\n    @app.route(\"/dict\")\n    def d():\n        \"\"\" Return a dict \"\"\"\n        return jsonresonse.ok({\"message\": \"ok\"})\n\n    @app.route(\"/with-headers\")\n    def with_headers():\n        \"\"\" Return a dict with custom headers \"\"\"\n        return jsonresonse.ok(\n            data={\"message\": \"ok\"},\n            headers={\"X-Custom-Header\": \"hello!\"}\n        )\n\n    @app.route(\"/bad-request\")\n    def bad_request():\n        \"\"\" Return a 400 response with a dict \"\"\"\n        data = {\"message\": \"You did something wrong\"}\n        return jsonresonse.bad_request(data=data)\n\n    @app.route(\"/unauthorized\")\n    def unauthorized():\n        return jsonresonse.unauthorized()\n\n    @app.route(\"/internal-server-error\")\n    def internal_server_error():\n        msg = {\"message\": \"Whoops, we did something wrong\"}\n        return jsonresonse.internal_server_error(msg)\n\n    @app.route(\"/empty-list\")\n    def ok_empty_list():\n        \"\"\" Return an empty list \"\"\"\n        return jsonresonse.ok(data=[])\n\n    @app.route(\"/empty-dict\")\n    def ok_empty_dict():\n        \"\"\" Return an empty dict \"\"\"\n        return jsonresonse.ok(data={})\n\n    def handle_not_found_error(e):\n        \"\"\" Handler for not found errors \"\"\"\n        app.logger.warning(e)\n        return jsonresonse.not_found(data={\"message\": \"Not found\"})\n\n    def handle_internal_server_error(e):\n        \"\"\" Handler for internal server errors \"\"\"\n        app.logger.error(e)\n        return jsonresonse.internal_server_error()\n\n    app.register_error_handler(404, handle_not_found_error)\n    app.register_error_handler(500, handle_internal_server_error)\n\n    return app\n\n\nif __name__ == \"__main__\":\n    app = create_app()\n    app.run()\n\n```\n\n## Methods available\n\n**100 range (informational)**\n\n| method | HTTP Status code |\n| ------ | ---------------- |\n| `continue` | `100 `|\n| `switching_protocol` | `101 `|\n| `processing` | `102 `|\n| `early_hints` | `103 `|\n\n**200 range (success)**\n\n| method | HTTP Status code |\n| ------ | ---------------- |\n| `ok` | `200 `|\n| `created` | `201 `|\n| `accepted` | `202 `|\n| `non_authoritative_information` | `203 `|\n| `no_content` | `204 `|\n| `reset_content` | `205 `|\n| `partial_content` | `206 `|\n| `multi_status` | `207 `|\n| `already_reported` | `208 `|\n| `im_used` | `226 `|\n\n**300 range (redirection)**\n\n| method | HTTP Status code |\n| ------ | ---------------- |\n| `multiple_choice` | `300 `|\n| `moved_permanently` | `301 `|\n| `found` | `302 `|\n| `see_other` | `303 `|\n| `not_modified` | `304 `|\n| `use_proxy` | `305 `|\n| `unused` | `306 `|\n| `temporary_redirect` | `307 `|\n| `permanent_redirect` | `308 `|\n\n**400 range (client error)**\n\n| method | HTTP Status code |\n| ------ | ---------------- |\n| `bad_request` | `400 `|\n| `unauthorized` | `401 `|\n| `payment_required` | `402 `|\n| `forbidden` | `403 `|\n| `not_found` | `404 `|\n| `method_not_allowed` | `405 `|\n| `not_acceptable` | `406 `|\n| `proxy_authentication_required` | `407 `|\n| `request_timeout` | `408 `|\n| `conflict` | `409 `|\n| `gone` | `410 `|\n| `length_required` | `411 `|\n| `precondition_failed` | `412 `|\n| `payload_too_large` | `413 `|\n| `uri_too_long` | `414 `|\n| `unsupported_media_type` | `415 `|\n| `requested_range_not_satisfiable` | `416 `|\n| `expectation_failed` | `417 `|\n| `im_a_teapot` | `418 `|\n| `misdirected_request` | `421 `|\n| `unprocessable_entity` | `422 `|\n| `locked` | `423 `|\n| `failed_dependency` | `424 `|\n| `too_early` | `425 `|\n| `upgrade_required` | `426 `|\n| `precondition_required` | `428 `|\n| `too_many_requests` | `429 `|\n| `request_header_fields_too_large` | `431 `|\n| `unavailable_for_legal_reasons` | `451 `|\n\n**500 range (server error)**\n\n| method | HTTP Status code |\n| ------ | ---------------- |\n| `internal_server_error` | `500 `|\n| `not_implemented` | `501 `|\n| `bad_gateway` | `502 `|\n| `service_unavailable` | `503 `|\n| `gateway_timeout` | `504 `|\n| `http_version_not_supported` | `505 `|\n| `variant_also_negotiates` | `506 `|\n| `insufficient_storage` | `507 `|\n| `loop_detected` | `508 `|\n| `not_extended` | `510 `|\n| `network_authentication_required` | `511 `|\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Julian-Nash/jsonres",
    "keywords": "flask http request parser json rest",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jsonres",
    "package_url": "https://pypi.org/project/jsonres/",
    "platform": "",
    "project_url": "https://pypi.org/project/jsonres/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Julian-Nash/jsonres",
      "Documentation": "https://github.com/Julian-Nash/jsonres",
      "Homepage": "https://github.com/Julian-Nash/jsonres",
      "Source Code": "https://github.com/Julian-Nash/jsonres"
    },
    "release_url": "https://pypi.org/project/jsonres/0.1/",
    "requires_dist": [
      "flask",
      "httpz"
    ],
    "requires_python": "",
    "summary": "A lightweight and useful wrapper around Flask's make_response and jsonify",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7159256,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd56f2d22fa99157d277f2150dcbb51f7350147048fc73ae61310d2640478e8e",
          "md5": "c86d35b042df0ccdea7e94a18fb22531",
          "sha256": "d60b2c515eee7c11642c98097b47ff657c21f1c22570f935a201fefaab9e71da"
        },
        "downloads": -1,
        "filename": "jsonres-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c86d35b042df0ccdea7e94a18fb22531",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7401,
        "upload_time": "2020-05-03T19:33:54",
        "upload_time_iso_8601": "2020-05-03T19:33:54.790333Z",
        "url": "https://files.pythonhosted.org/packages/dd/56/f2d22fa99157d277f2150dcbb51f7350147048fc73ae61310d2640478e8e/jsonres-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ad3833f2d1734c0e32f42d4a4d5b4d3640b2b16aa58ce438c55ba879103ca01",
          "md5": "e8fb3765c8cf8bdeca10ec358dac8517",
          "sha256": "93194912d1ebff829a12b8bfedeafb143382e064f0b0d1b0bf1de5bc1086c1c0"
        },
        "downloads": -1,
        "filename": "jsonres-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e8fb3765c8cf8bdeca10ec358dac8517",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8972,
        "upload_time": "2020-05-03T19:33:56",
        "upload_time_iso_8601": "2020-05-03T19:33:56.915194Z",
        "url": "https://files.pythonhosted.org/packages/0a/d3/833f2d1734c0e32f42d4a4d5b4d3640b2b16aa58ce438c55ba879103ca01/jsonres-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd56f2d22fa99157d277f2150dcbb51f7350147048fc73ae61310d2640478e8e",
        "md5": "c86d35b042df0ccdea7e94a18fb22531",
        "sha256": "d60b2c515eee7c11642c98097b47ff657c21f1c22570f935a201fefaab9e71da"
      },
      "downloads": -1,
      "filename": "jsonres-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c86d35b042df0ccdea7e94a18fb22531",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7401,
      "upload_time": "2020-05-03T19:33:54",
      "upload_time_iso_8601": "2020-05-03T19:33:54.790333Z",
      "url": "https://files.pythonhosted.org/packages/dd/56/f2d22fa99157d277f2150dcbb51f7350147048fc73ae61310d2640478e8e/jsonres-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ad3833f2d1734c0e32f42d4a4d5b4d3640b2b16aa58ce438c55ba879103ca01",
        "md5": "e8fb3765c8cf8bdeca10ec358dac8517",
        "sha256": "93194912d1ebff829a12b8bfedeafb143382e064f0b0d1b0bf1de5bc1086c1c0"
      },
      "downloads": -1,
      "filename": "jsonres-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e8fb3765c8cf8bdeca10ec358dac8517",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8972,
      "upload_time": "2020-05-03T19:33:56",
      "upload_time_iso_8601": "2020-05-03T19:33:56.915194Z",
      "url": "https://files.pythonhosted.org/packages/0a/d3/833f2d1734c0e32f42d4a4d5b4d3640b2b16aa58ce438c55ba879103ca01/jsonres-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}