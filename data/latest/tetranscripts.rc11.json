{
  "info": {
    "author": "Ying Jin, Eric Paniagua, Talitha Forcier, Oliver Tam, Molly Hammell",
    "author_email": "yjin@cshl.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Unix",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "TEtranscripts\n=============\n\nVersion: 2.2.3\n\n*NOTE* TEtranscripts and TEcount rely on specially curated GTF files, which are not\npackaged with this software due to their size. Please go to\n`our website <http://hammelllab.labsites.cshl.edu/software#TEtranscripts>`_\nfor instructions to download the curated GTF files.\n\nTEtranscripts and TEcount takes RNA-seq (and similar data) and annotates reads to both\ngenes & transposable elements. TEtranscripts then performs differential analysis using\nDESeq2.\n\n\n`Github Page <https://github.com/mhammell-laboratory/TEtranscripts>`_\n\n`Pypi Page <https://pypi.python.org/pypi/TEtranscripts>`_\n\n`MHammell Lab <http://hammelllab.labsites.cshl.edu/software>`_\n\nCreated by Ying Jin, Eric Paniagua, Oliver Tam & Molly Hammell, February 2014\n\nCopyright (C) 2014-2021 Ying Jin, Eric Paniagua, Talitha Forcier, Oliver Tam & Molly Hammell\n\nContact: Oliver Tam (tam@cshl.edu) or Talitha Forcier (talitha@cshl.edu)\n\nRequirements\n------------\n\nPython:     2.7.x or 3.2.x (tested on Python 2.7.11 and 3.7.7)\n\npysam:      0.9.x or greater\n\nR:          2.15.x or greater\n\nDESeq2:     1.10.x or greater\n\n\nInstallation\n------------\n\n1. Download compressed tarball.\n2. Unpack tarball.\n3. Navigate into unpacked directory.\n4. Run the following::\n\n    $ python setup.py install\n\nIf you want to install locally (e.g. /local/home/usr),\nrun this command instead::\n\n    $ python setup.py install --prefix /local/home/usr\n\n*NOTE* In the above example, you must add\n\n    /local/home/usr/bin\n\nto the PATH variable, and\n\n     /local/home/usr/lib/pythonX.Y/site-packages\n\nto the PYTHONPATH variable, where X refers to the major\npython version, and Y refers to the minor python version.\n(e.g. `python2.7` if using python version 2.7.x, and\n`python3.6` if using python version 3.6.x)\n\n\nAlternative Singularity Installation for HPC\n--------------------------------------------\n\nMany High Performance Compunting clusters (HPCs) have\naccess to singularity which allows for the download and\nexectuation of containers, TEtranscripts also has a\ncontainer through docker, it can be downloaded by\nsingularity thusly:\n\n``singularity pull tetranscripts.sif docker://mhammelllab/tetranscripts:latest``\n\nExecution is then through singularity as well:\n\n``singularity exec tetranscripts.sif TEtranscripts -t <treatment sample> -c <control sample> --GTF <genic-GTF-file> --TE <TE-GTF-file>``\n\nTEtranscripts\n=============\n\nUsage\n-----\n\n::\n\n    usage: TEtranscripts -t treatment sample [treatment sample ...]\n                         -c control sample [control sample ...]\n                         --GTF genic-GTF-file\n                         --TE TE-GTF-file\n                         [optional arguments]\n\n    Required arguments:\n      -t | --treatment [treatment sample 1 treatment sample 2...]\n         Sample files in group 1 (e.g. treatment/mutant), separated by space\n      -c | --control [control sample 1 control sample 2 ...]\n         Sample files in group 2 (e.g. control/wildtype), separated by space\n      --GTF genic-GTF-file  GTF file for gene annotations\n      --TE TE-GTF-file      GTF file for transposable element annotations\n\n    Optional arguments:\n\n      *Input/Output options*\n      --format [input file format]\n         Input file format: BAM or SAM. DEFAULT: BAM\n      --stranded [option]   Is this a stranded library? (no, forward, or reverse).\n                 no      -  Library is unstranded\n                 forward -  \"Second-strand\" cDNA library\n                            (e.g. QIAseq stranded)\n                 reverse -  \"First-strand\" cDNA library\n                            (e.g. Illumina TruSeq stranded)\n                            DEFAULT: no.\n      --sortByPos           Input file is sorted by chromosome position.\n      --project [name]      Prefix used for output files (e.g. project name)\n                            DEFAULT: TEtranscript_out\n      --outdir [directory]  Directory for output files.\n                            DEFAULT: current directory\n\n      *Analysis options*\n      --mode [TE counting mode]\n         How to count TE:\n            uniq        (unique mappers only)\n            multi       (distribute among all alignments).\n         DEFAULT: multi\n      --minread [min_read] read count cutoff. DEFAULT: 1\n      -L | --fragmentLength [fragLength]\n         Average length of fragment used for single-end sequencing\n         DEFAULT: For paired-end, estimated from the input alignment file. For single-end, ignored by default.\n      -i | --iteration\n         maximum number of iterations used to optimize multi-reads assignment. DEFAULT: 100\n      -p | --padj [pvalue]\n         FDR cutoff for significance. DEFAULT: 0.05\n      -f | --foldchange [foldchange]\n         Fold-change ratio (absolute) cutoff for differential expression.\n         DEFAULT: 1\n\n      *DESeq1 compatibility options*\n      --DESeq\n         Use DESeq (instead of DESeq2) for differential analysis.\n      -n | --norm [normalization]\n         Normalization method : DESeq_default (default normalization method of DESeq), TC (total annotated read counts), quant (quantile normalization). Only applicable if DESeq is used instead of DESeq2.\n         DEFAULT: DESeq_default\n\n      *Other options*\n      -h | --help\n         Show help message\n      --verbose [number]\n         Set verbose level.\n           0: only show critical messages\n           1: show additional warning messages\n           2: show process information\n           3: show debug messages\n         DEFAULT: 2\n      --version\n         Show program's version and exit\n\n*NOTE* BAM files must be either unsorted or sorted by queryname. If the BAM files are sorted by position, please use the :code:`--sortByPos` option\n\n\nExample Command Lines\n---------------------\n\nIf BAM files are unsorted, or sorted by queryname::\n\n    TEtranscripts --format BAM --mode multi -t RNAseq1.bam RNAseq2.bam -c CtlRNAseq1.bam CtlRNAseq.bam --project sample_nosort_test\n\nIf BAM files are sorted by coordinates/position::\n\n    TEtranscripts --sortByPos --format BAM --mode multi -t RNAseq1.bam RNAseq2.bam -c CtlRNAseq1.bam CtlRNAseq.bam --project sample_sorted_test\n\nCluster Usage Recommendation\n----------------------------\n\nIn our experience, we recommend around 20-30Gb of memory for analyzing human samples (hg19) with around 20-30 million mapped reads when running on a cluster.\n\n\nTEcount\n=======\n\nUsage\n-----\n\n::\n\n    usage: TEcount -b RNAseq BAM\n                   --GTF genic-GTF-file\n                   --TE TE-GTF-file\n                   [optional arguments]\n\n    Required arguments:\n      -b | --BAM alignment-file  RNAseq alignment file (BAM preferred)\n      --GTF genic-GTF-file       GTF file for gene annotations\n      --TE TE-GTF-file           GTF file for transposable element annotations\n\n    Optional arguments:\n\n      *Input/Output options*\n      --format [input file format]\n         Input file format: BAM or SAM. DEFAULT: BAM\n      --stranded [option]   Is this a stranded library? (no, forward, or reverse).\n                 no      -  Library is unstranded\n                 forward -  \"Second-strand\" cDNA library\n                            (e.g. QIAseq stranded)\n                 reverse -  \"First-strand\" cDNA library\n                            (e.g. Illumina TruSeq stranded)\n                            DEFAULT: no.\n      --sortByPos           Input file is sorted by chromosome position.\n      --project [name]      Prefix used for output files (e.g. project name)\n                            DEFAULT: TEcount_out\n      --outdir [directory]  Directory for output files.\n                            DEFAULT: current directory\n\n      *Analysis options*\n      --mode [TE counting mode]\n         How to count TE:\n            uniq        (unique mappers only)\n            multi       (distribute among all alignments).\n         DEFAULT: multi\n      -L | --fragmentLength [fragLength]\n         Average length of fragment used for single-end sequencing\n         DEFAULT: For paired-end, estimated from the input alignment file. For single-end, ignored by default.\n      -i | --iteration\n         maximum number of iterations used to optimize multi-reads assignment. DEFAULT: 100\n\n      *Other options*\n      -h | --help\n         Show help message\n      --verbose [number]\n         Set verbose level.\n           0: only show critical messages\n           1: show additional warning messages\n           2: show process information\n           3: show debug messages\n         DEFAULT: 2\n      --version\n         Show program's version and exit\n\n*NOTE* BAM files must be either unsorted or sorted by queryname. If the BAM files are sorted by position, please use the :code:`--sortByPos` option\n\n\nExample Command Lines\n---------------------\n\nIf BAM files are unsorted, or sorted by queryname::\n\n    TEcount --format BAM --mode multi -b RNAseq.bam --project sample_nosort_test\n\nIf BAM files are sorted by coordinates/position::\n\n    TEtranscripts --sortByPos --format BAM --mode multi -b RNAseq.bam --project sample_sorted_test\n\nCluster Usage Recommendations\n-----------------------------\n\nTEcount is better suited than TEtranscripts for usage in the cluster environment, as each sample (e.g. replicates of an experiment) can be quantified on separate nodes. The output can then be merged into a single count table for differential analysis.\nIn our experience, we recommend around 20-30Gb of memory for analyzing human samples (hg19) with around 20-30 million mapped reads when running on a cluster.\n\n\nRecommendations for TEtranscripts input files\n=============================================\n\nTEtranscripts can perform transposable element quantification from alignment results (e.g. BAM files) generated from a variety of programs.\nGiven the variety of experimental systems, we could not provide an optimal alignment strategy for every approach. Therefore,\nwe recommend that users identify the optimal parameters for their particular genome and alignment program in order to get the best\nresults.\n\nWhen optimizing the alignment parameters, we recommend taking these points into consideration:\n\n*Allowing sufficient number of multi-mappers during alignment*\n\nMost alignment programs provide only 1 alignment per read by default. We recommend reporting multiple alignments per read. We have found\nthat reporting a maximum of 100 alignments per read provides an optimal compromise between the size of the alignment file and recovery\nof multi-mappers in many genome builds. However, we highly suggest that users optimize this parameter for their particular experiment,\nas this could significantly improve the quality of transposable element quantification.\n\n*Optimizing alignment parameters for non-reference strains*\n\nIt is common that the specific laboratory strains used in an experiment contains genomic variations not present in the reference strain.\nWhile this can be mitigated through allowing mismatches during alignments, certain lab strains (e.g. Drosophila melanogaster) have\ndiverged significantly from the reference genomes. We highly recommend that users should refine their alignment procedures to better\naccount for the expected variations between their lab strains and the reference genome, which will accordingly improve their analysis\nwith TEtranscripts. Users can also align to a custom genome build specific to their organism, though they would need GTF annotations for\ngenes and transposable elements that are compatible with their custom genome in order to utilize TEtranscripts. Please contact us if you\nrequire advice in generating these annotation files.\n\n*Paired end sequencing input*\n\nFor paired-end libraries, it is recommended that only alignments from properly paired reads are present in the input BAM file. I.e., each read 1 alignment should only have a single read 2 alignment. For example, if read 1 matched 3 genomic locations (A, B, C), then if read 2 also match 3 genomic locations (A', B', C'), then all three pairs of alignments could be used (and should be in the BAM file). However, if alignment C of read 1 was matched with more than one alignment of read 2 (e.g. C' and C*), then alignment C should be discarded (as there are unmatched alignments between read 1 and read 2). `STAR <https://github.com/alexdobin/STAR>`_ only outputs properly paired alignments by default, while `Bowtie2 <http://bowtie-bio.sourceforge.net/bowtie2/index.shtml>`_ requires the :code:`--no-mixed` parameter to be used.\n\n*Specific recommendations when using STAR*\n\n`STAR <https://github.com/alexdobin/STAR>`_ utilizes two parameters for optimal identification of multi-mappers `--outFilterMultimapNmax` and `--outAnchorMultimapNmax`.\nThe author of STAR recommends that `--winAnchorMultimapNmax` should be set at twice the value used in `--outFilterMultimapNmax`,\nbut no less than 50. In our study, we used the same number for both parameters (100), and found negligible differences in identifying\nmulti-mappers. Upon further discussion with the author of STAR, we recommend that setting the same value for `--winAnchorMultimapNmax`\nand `--outFilterMultimapNmax`, though we highly suggest users test multiple values of `--winAnchorMultimapNmax` to identify the\noptimal value for their experiment.\n\n\nCopying & distribution\n======================\n\nTEtranscripts and TEcount are part of `TEToolkit suite <http://hammelllab.labsites.cshl.edu/software/>`_.\n\nTEtranscripts is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut *WITHOUT ANY WARRANTY*; without even the implied warranty of\n*MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE*.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with TEtranscripts.  If not, see `this website <http://www.gnu.org/licenses/>`_.\n\nCitation\n======================\n\nIf using the software in a publication, please cite the\n`following <https://pubmed.ncbi.nlm.nih.gov/26206304/>`_:\n\nJin Y, Tam OH, Paniagua E, Hammell M. (2015) TEtranscripts: a package\nfor including transposable elements in differential expression\nanalysis of RNA-seq datasets. Bioinformatics. 31(22):3593-9.\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://hammelllab.labsites.cshl.edu/software#TEtranscripts",
    "keywords": "TE transposable element differential enrichment",
    "license": "GPLv3",
    "maintainer": null,
    "maintainer_email": null,
    "name": "TEtranscripts",
    "package_url": "https://pypi.org/project/TEtranscripts/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/TEtranscripts/",
    "project_urls": {
      "Homepage": "http://hammelllab.labsites.cshl.edu/software#TEtranscripts"
    },
    "release_url": "https://pypi.org/project/TEtranscripts/2.2.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Tools for estimating differential enrichment of Transposable Elements and other highly repetitive regions",
    "version": "2.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14976086,
  "releases": {
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "316134e7ab36639f60d9296d32d24ad103ce9d1781a43f748af4257bdffca06f",
          "md5": "805636cc1f2fdc68f803c1ebccd6ba7f",
          "sha256": "4878dd229eedff32b41134d5e064dfbb72712f5078c6646a23fa26876ba86cc4"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.0.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "805636cc1f2fdc68f803c1ebccd6ba7f",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 80185,
        "upload_time": "2019-10-12T00:41:28",
        "upload_time_iso_8601": "2019-10-12T00:41:28.866516Z",
        "url": "https://files.pythonhosted.org/packages/31/61/34e7ab36639f60d9296d32d24ad103ce9d1781a43f748af4257bdffca06f/TEtranscripts-2.0.4-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a66513b271f89f957d0d5244b23cd3b8d82232c764718cf39efb919239194516",
          "md5": "0072f84fc67de6327f57da6659c25a77",
          "sha256": "eeccacb676558a9c5429adca8f9f85fa0bc3a88b9164fb096243d6b8f9a5923a"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0072f84fc67de6327f57da6659c25a77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 105626,
        "upload_time": "2019-10-12T00:41:31",
        "upload_time_iso_8601": "2019-10-12T00:41:31.688017Z",
        "url": "https://files.pythonhosted.org/packages/a6/65/13b271f89f957d0d5244b23cd3b8d82232c764718cf39efb919239194516/TEtranscripts-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61c8ae78d2f8de688be200b33d7c69bbc9814718543ce44b79e25335c2dd36d8",
          "md5": "700865a5bae2b7dfae8f082af31ee58b",
          "sha256": "d58c00475fc6e171095c639fdd1634f742378f0885cd4621ef137bc1fbc3e193"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "700865a5bae2b7dfae8f082af31ee58b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 110636,
        "upload_time": "2019-11-07T16:42:24",
        "upload_time_iso_8601": "2019-11-07T16:42:24.505393Z",
        "url": "https://files.pythonhosted.org/packages/61/c8/ae78d2f8de688be200b33d7c69bbc9814718543ce44b79e25335c2dd36d8/TEtranscripts-2.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d452afde9894514bfa59b85e14140a04956467dfd44c8b0016c50544d970312b",
          "md5": "7f78124b55f332073313eb4615eb229a",
          "sha256": "b8ac3c0d343c69538e4eda6bae8221f64edfbd67c793aa8e0c9e9d85305272ce"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7f78124b55f332073313eb4615eb229a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 112871,
        "upload_time": "2019-12-13T19:42:41",
        "upload_time_iso_8601": "2019-12-13T19:42:41.897280Z",
        "url": "https://files.pythonhosted.org/packages/d4/52/afde9894514bfa59b85e14140a04956467dfd44c8b0016c50544d970312b/TEtranscripts-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cf3bc59e3b4698866ee3bca10b59d185013d92240e01be562702e3ccafe78e4",
          "md5": "f96bffb27f285ab381de19a26fd44ee7",
          "sha256": "4359753ab7e3f58342853e2db5e9b52ca2c810d379d90ee27ab1fc096d9e2e46"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f96bffb27f285ab381de19a26fd44ee7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 112781,
        "upload_time": "2019-12-13T20:16:07",
        "upload_time_iso_8601": "2019-12-13T20:16:07.383140Z",
        "url": "https://files.pythonhosted.org/packages/3c/f3/bc59e3b4698866ee3bca10b59d185013d92240e01be562702e3ccafe78e4/TEtranscripts-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8278cdd268033ece59dbe24bb31b4f48dbe2cb5b1569f234397af5f544e39cf8",
          "md5": "774c31e4c0d6e25ab0c0f4d6ae932629",
          "sha256": "f5ad6e7cb18bb5528cc6b0c72d812a9eebe3996389599255a4a661f4a93706e3"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "774c31e4c0d6e25ab0c0f4d6ae932629",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 112747,
        "upload_time": "2019-12-13T20:29:22",
        "upload_time_iso_8601": "2019-12-13T20:29:22.907592Z",
        "url": "https://files.pythonhosted.org/packages/82/78/cdd268033ece59dbe24bb31b4f48dbe2cb5b1569f234397af5f544e39cf8/TEtranscripts-2.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fc8bbd050576593147271cc85009337950389cbc38167db6f63f0119abd3f49",
          "md5": "4aa64de8bd8db0bd8571369e0f545f19",
          "sha256": "2315d8478ba811f6f52a71ff7c5f17703ad9dbdace8c2a67d4d70ad160f6df09"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4aa64de8bd8db0bd8571369e0f545f19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 112261,
        "upload_time": "2019-12-13T20:47:41",
        "upload_time_iso_8601": "2019-12-13T20:47:41.455897Z",
        "url": "https://files.pythonhosted.org/packages/1f/c8/bbd050576593147271cc85009337950389cbc38167db6f63f0119abd3f49/TEtranscripts-2.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "444340825b98484eee5eac602c24ec63cf9548447051180f1086790d5a4d428e",
          "md5": "306a7e801307e7c4c4ae4b362fa2f723",
          "sha256": "afbff101de3ebd42f35fed9e20e8ba5f958d426964f8052641d5add81cff475e"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "306a7e801307e7c4c4ae4b362fa2f723",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 112539,
        "upload_time": "2020-02-04T19:36:50",
        "upload_time_iso_8601": "2020-02-04T19:36:50.656414Z",
        "url": "https://files.pythonhosted.org/packages/44/43/40825b98484eee5eac602c24ec63cf9548447051180f1086790d5a4d428e/TEtranscripts-2.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a163af12dbff59806fb31decf01a40a1a701506a8d7571733933838995da2fe4",
          "md5": "912344a26aaeed0b48a20fd8c4b68322",
          "sha256": "ae39b5f2edfd007b0bc3c97904bffeca51c88f666f5f4edb5bc6cde32dfe30b8"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "912344a26aaeed0b48a20fd8c4b68322",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 94684,
        "upload_time": "2020-06-18T19:16:11",
        "upload_time_iso_8601": "2020-06-18T19:16:11.540233Z",
        "url": "https://files.pythonhosted.org/packages/a1/63/af12dbff59806fb31decf01a40a1a701506a8d7571733933838995da2fe4/TEtranscripts-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb409c54ccd1976bc41cfe04b29aa0f4cfaa113677aca6044fea954d6a145e2f",
          "md5": "2c83621aad832fe8006009263b725c01",
          "sha256": "1bd2534be2575d6a21bae35010d91ef8d4271ff4aaaf14029338f6072c3bee98"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2c83621aad832fe8006009263b725c01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 94839,
        "upload_time": "2020-07-27T16:47:02",
        "upload_time_iso_8601": "2020-07-27T16:47:02.158781Z",
        "url": "https://files.pythonhosted.org/packages/eb/40/9c54ccd1976bc41cfe04b29aa0f4cfaa113677aca6044fea954d6a145e2f/TEtranscripts-2.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "824a069b060ddcfa9930f98d4ea14b83e9ed5f49d1a7a34d9a183685194af03d",
          "md5": "0f3e4c1d34f7ac5f4555d118be047cb6",
          "sha256": "a6ce3bbac045383e2518bd34acc5081dd48e6a0243acb8d8b0fd9211a6b46370"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0f3e4c1d34f7ac5f4555d118be047cb6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89718,
        "upload_time": "2022-08-30T14:25:57",
        "upload_time_iso_8601": "2022-08-30T14:25:57.784909Z",
        "url": "https://files.pythonhosted.org/packages/82/4a/069b060ddcfa9930f98d4ea14b83e9ed5f49d1a7a34d9a183685194af03d/TEtranscripts-2.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1e79f6a4d3d466374c22fe732d79a6ae40fe86384182e97085b2b9a343b00db",
          "md5": "b425e56b123a65027a21bcafe555bed2",
          "sha256": "e53577e8e73e41c6495fb819977e3e537bbeac7b2fa1635029201a37ee0bf7b8"
        },
        "downloads": -1,
        "filename": "TEtranscripts-2.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b425e56b123a65027a21bcafe555bed2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 89724,
        "upload_time": "2022-09-02T16:03:32",
        "upload_time_iso_8601": "2022-09-02T16:03:32.880996Z",
        "url": "https://files.pythonhosted.org/packages/a1/e7/9f6a4d3d466374c22fe732d79a6ae40fe86384182e97085b2b9a343b00db/TEtranscripts-2.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1e79f6a4d3d466374c22fe732d79a6ae40fe86384182e97085b2b9a343b00db",
        "md5": "b425e56b123a65027a21bcafe555bed2",
        "sha256": "e53577e8e73e41c6495fb819977e3e537bbeac7b2fa1635029201a37ee0bf7b8"
      },
      "downloads": -1,
      "filename": "TEtranscripts-2.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b425e56b123a65027a21bcafe555bed2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 89724,
      "upload_time": "2022-09-02T16:03:32",
      "upload_time_iso_8601": "2022-09-02T16:03:32.880996Z",
      "url": "https://files.pythonhosted.org/packages/a1/e7/9f6a4d3d466374c22fe732d79a6ae40fe86384182e97085b2b9a343b00db/TEtranscripts-2.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}