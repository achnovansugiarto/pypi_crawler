{
  "info": {
    "author": "Park Sangjun",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3",
      "Topic :: Communications :: Chat",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# Quick slack\n\n[![codecov](https://codecov.io/gh/psj8252/quick-slack/branch/master/graph/badge.svg?token=MREUJNXE7L)](https://codecov.io/gh/psj8252/quick-slack)\n\n- CLI tool to send message to mornitor status, notify process end, etc by slack.\n- 한국어 README는 [여기](README.ko.md)를 클릭해주세요.\n\n# Install\n\nIt is recommended to install using pipx because command might not work depending on virtualenv state.\n\n## Install pipx\n\n```sh\n$ python3 -m pip install pipx\n```\n- see [here](https://github.com/pipxproject/pipx) for more information about installing pipx\n\n## Install Quick Slack for global\n\n```sh\n$ pipx install quick-slack\n```\nAfter complete the installation of pipx, install Quick-slack through pipx\n\n## Install Quick Slack for some environment\n\nIf you want to install it only in a specific environment, you can install it as a normal pip.\n```sh\n$ pip install quick-slack\n```\n\n# Usage\n\n## Add Bot to workspace\n\nFirst, go to https://api.slack.com/apps and create an app in Workspace.\n\nThen add the following permissions to the Bot Token Scope:\n\n![Permission](images/image1.png)\n![Permission](images/image2.png)\n\n- [chat:write](https://api.slack.com/scopes/chat:write)\n- [channels:read](https://api.slack.com/scopes/channels:read)\n- [groups:read](https://api.slack.com/scopes/groups:read)\n- [im:read](https://api.slack.com/scopes/im:read)\n- [mpim:read](https://api.slack.com/scopes/mpim:read)\n- [users:read](https://api.slack.com/scopes/users:read)\n- [usergroups:read](https://api.slack.com/scopes/usergroups:read)\n\nIf you install the app in Workspace from the Install App, you will receive a Bot User OAuth Access Token starting with xoxb.\n\n![Install](images/image3.png)\n![Token](images/image4.png)\n\n## Set Config\n\n```sh\n$ qslack config\nUsage: qslack config [OPTIONS] COMMAND [ARGS]...\n\n  Show or update configs\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  set   Set configurations Default channel is always only one, so you...\n  show  Show current configs\n```\n\n```\n$ qslack config show\nslack_oauth_token   : None\ndefault_channel_id  : None\ndefault_mentions    : None\n```\n'qslack config show' command allows you to view the current config.\n\n```\n$ qslack config set --help\nUsage: qslack config set [OPTIONS]\n\n  Set configurations\n\n  Default channel is always only one, so you cannot and don't need to pass default channel name and default channel id.\n  Default mention format is like '@user1 @here !subteam3'. Warn you should use ! with custom usergroup like 'engineer'.\n\nOptions:\n  --api-token TEXT             Slack oauth API token start with xoxb-...\n  --default-mentions TEXT      Default mention user or groups\n  --default-channel-name TEXT  Default channel name to send message, enter\n                               '@username' if channel is direct message\n\n  --default-channel-id TEXT    Default channel id to send message\n  --help                       Show this message and exit.\n```\n\n```\n$ qslack config set --api-token xoxb-1231-12312312 --default-mentions '@psj8252 @here' --default-channel-id C10100110\nSetting slack token is done.\nSetting default mentions is done.\nSetting default channel is done.\n```\nYou can set config as shown above\n- default-mentions are the target of mention when turning on `mention` option in using the command to send a message.\n- default channel means the channel to which a message is sent when using the command to send a message.\n- default channel is set by directly entering id as default-channel-id argument or channel name as default-channel-name argument.\n\n## Send Message\n\n```\n$ qslack send --help\nUsage: qslack send [OPTIONS] MESSAGE\n\n  Send message to the channel\n\nOptions:\n  -m, --mention            If use this flag, mention default mention\n                           user/groups\n\n  -c, --channel-name TEXT  Channel name to send message, use default channel\n                           in config if not passed\n\n  --help                   Show this message and exit.\n```\n\nYou can send message by using `qslack send` command.\n\n```\n$ qslack send hi\nError occured in sending message!\n{'ok': False, 'error': 'invalid_auth', 'warning': 'missing_charset', 'response_metadata': {'warnings': ['missing_charset']}}\n```\nIf the token is incorrect, the above error may occur.\n\n```\nqslack send hi\nError occured in sending message!\n{'ok': False, 'error': 'not_in_channel', 'warning': 'missing_charset', 'response_metadata': {'warnings': ['missing_charset']}}\n```\n- Bot must be added to the channel to send a message. If not, may result in errors such as 'not_in_channel' or 'channel_not_found'.\n- If an error occurs, it is related to the slack API, so if you enter the token incorrectly or miss the permission setting, you should set the token properly and add the missing permission.\n\n## Send a message based on command results\n\n```\nqslack cond --help\nUsage: qslack cond [OPTIONS] COMMAND\n\n  Run command and send message based on whether success command\n\nOptions:\n  -s, --success TEXT  Message sent if command success\n  -f, --fail TEXT     Message sent if command failed\n  -m, --mention       If use this flag, mention default mention users\n  --help              Show this message and exit.\n```\n- The command above is to send a message based on the results of the command. If exit code is 0, send the message of success argument and if not, send the message of failure argument.\n- If you have not set up a message, do not send a message.\n\n```\n$ qslack cond pwd -s hi -f hello\n/Users/psj8252/quick-slack\nCommand success\nSending message is done.\n```\nFor example, if the pwd command is successful, sends a message 'hi'.\n\n```\nqslack cond 'bash -c \"exit 1\"' -f good\nCommand exit with 1\nSending message is done.\n```\nIn the above case, send the message 'good' because the exit code failed to 1.\n\n## Periodically execute command and send results as a message\n\n```sh\nqslack watch --help\nUsage: qslack watch [OPTIONS] COMMAND\n\n  Execute command every interval and send message of excution output\n\nOptions:\n  -n, --interaval FLOAT  seconds to wait between updates\n  -m, --mention          If use this flag, mention default mention users\n  -s, --silent           If use this flag, ignore output else print output\n  -b, --backgroud        Run this command backgroud\n  --help                 Show this message and exit.\n```\nThe command above runs the command you enter regularly and sends the result as a message. It can be used like a watch command in linux.\n\n```\n$ qslack watch 'sh -c \"ls | wc -l\"'  -n 3\n      13\n\n      13\n\n      13\n```\nThis is an example of how many files in the current directory are monitored every 3 seconds to send messages in a slack.\n\n## Send a message at the end of the currently running process\n\n```\nqslack ifend --help\nUsage: qslack ifend [OPTIONS] PROCESS_ID MESSAGE\n\n  Check the process is alive in every three seconds and when the process is\n  dead, send message\n\n  the process_id is the id of process to mornitor. Warn this command run\n  python process as backgroud so can be infinitely running if the process is\n  not dead.\n\nOptions:\n  -m, --mention          If use this flag, mention default mention users\n  -n, --interaval FLOAT  seconds to wait between checking liveness\n  --help                 Show this message and exit.\n```\nWhen you enter a pid, sends a message to the slack at the end of the running process.\n\n```\n$ qslack ifend 18103 \"end end\"\nStart mornitoring process 18103...\n\n[+] QuickSlack: Process 18623 end\n[+] QuickSlack: Sent message\n```\nBecause it runs as background, if the process does not shut down for a long time, the qslack command remains running.\n\n## Usage in python\n\n```python\n$ python3\nPython 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 16:52:21)\n[Clang 6.0 (clang-600.0.57)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n>>> from quick_slack.low_api import send_message\n\n>>> send_message(\"hihi\", mention=True)\n{'ok': True, 'channel': 'CCCCCCCCCCC', 'ts': '1609145740.013500', 'message': {'bot_id': 'BBBBBBBBB', 'type': 'message', 'text': '<@UUUUUUU> <!here>\\nhihi', 'user': 'U01GEA37VL1', 'ts': '1609145740.013500', 'team': 'TTTTTTTTTT', 'bot_profile': {'id': 'BBBBBBBB', 'deleted': False, 'name': 'Slack CLI', 'updated': 1606963748, 'app_id': 'AAAAAAAAAA', 'icons': {}, 'team_id': 'TTTTTTTTTT'}}, 'warning': 'missing_charset', 'response_metadata': {'warnings': ['missing_charset']}}\n>>>\n```\nYou can also use quick_slack in Python as above.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/psj8252/quick-slack.git",
    "keywords": "slack,message",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quick-slack",
    "package_url": "https://pypi.org/project/quick-slack/",
    "platform": "",
    "project_url": "https://pypi.org/project/quick-slack/",
    "project_urls": {
      "Homepage": "https://github.com/psj8252/quick-slack.git"
    },
    "release_url": "https://pypi.org/project/quick-slack/1.0.2b0/",
    "requires_dist": [
      "click",
      "requests",
      "psutil"
    ],
    "requires_python": ">=3.7",
    "summary": "CLI tool to send message to mornitor status, notify process end, etc by slack.",
    "version": "1.0.2b0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8998034,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31e8660f35848a0717cdda3908e49e75f93bc25ec0facb7d1b6927c2f58af723",
          "md5": "e809030706bcfd92095f291efdf6c9bd",
          "sha256": "c31198c5fc1ca95dc4b4c3cba9e73f5cfb3480169e7020c5ae7133fc8c98d451"
        },
        "downloads": -1,
        "filename": "quick_slack-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e809030706bcfd92095f291efdf6c9bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6220,
        "upload_time": "2020-12-27T15:13:16",
        "upload_time_iso_8601": "2020-12-27T15:13:16.237878Z",
        "url": "https://files.pythonhosted.org/packages/31/e8/660f35848a0717cdda3908e49e75f93bc25ec0facb7d1b6927c2f58af723/quick_slack-1.0.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "1.0.2b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1facb67ebfcf1366f69e55548c7a3ac9caaa2dda8ef1b66ee0506df4a8db0ffd",
          "md5": "ccec188ffa8dbce8723aa69de29ca382",
          "sha256": "0dd4ce1cec41ef145c432823b3d367d7f857f013ea39bb88e714c822436bdeb2"
        },
        "downloads": -1,
        "filename": "quick_slack-1.0.2b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ccec188ffa8dbce8723aa69de29ca382",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9188,
        "upload_time": "2020-12-28T11:23:21",
        "upload_time_iso_8601": "2020-12-28T11:23:21.661105Z",
        "url": "https://files.pythonhosted.org/packages/1f/ac/b67ebfcf1366f69e55548c7a3ac9caaa2dda8ef1b66ee0506df4a8db0ffd/quick_slack-1.0.2b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1facb67ebfcf1366f69e55548c7a3ac9caaa2dda8ef1b66ee0506df4a8db0ffd",
        "md5": "ccec188ffa8dbce8723aa69de29ca382",
        "sha256": "0dd4ce1cec41ef145c432823b3d367d7f857f013ea39bb88e714c822436bdeb2"
      },
      "downloads": -1,
      "filename": "quick_slack-1.0.2b0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ccec188ffa8dbce8723aa69de29ca382",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9188,
      "upload_time": "2020-12-28T11:23:21",
      "upload_time_iso_8601": "2020-12-28T11:23:21.661105Z",
      "url": "https://files.pythonhosted.org/packages/1f/ac/b67ebfcf1366f69e55548c7a3ac9caaa2dda8ef1b66ee0506df4a8db0ffd/quick_slack-1.0.2b0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}