{
  "info": {
    "author": "Jose Llarena",
    "author_email": "jose.llarena@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "# Autoclean\n\nAutoclean is a set of tools to clean textual data with minimal human intervention:\n\n`autoclean.filtering` uses unsupervised learning to filter out of domain sequences\n`autoclean.segmentation` uses unsupervised learning to segment joined up sequences\n\n## Filtering\n\nThe filtering package contains both an api and a cli.\n\nAn example use through the cli to filter out out-of-domain/anomalous data points:\n\n1. Download an English book from Project Gutenberg\n```shell\n(venv) $ wget  https://www.gutenberg.org/cache/epub/29440/pg29440.txt\n--2022-02-15 00:14:04--  https://www.gutenberg.org/cache/epub/29440/pg29440.txt\nResolving www.gutenberg.org (www.gutenberg.org)... 152.19.134.47, 2610:28:3090:3000:0:bad:cafe:47\nConnecting to www.gutenberg.org (www.gutenberg.org)|152.19.134.47|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 890028 (869K) [text/plain]\nSaving to: ‘pg29440.txt’\n\npg29440.txt                                         100%[==================================================================================================================>] 869.17K   730KB/s    in 1.2s    \n\n2022-02-15 00:14:06 (730 KB/s) - ‘pg29440.txt’ saved [890028/890028]\n```\n2. Run the filtering giving a high cost-threshold, so the output is just all the lines but ordered in decreasing order of \ncost:\n```shell\n(venv)$ time python -m autoclean.filtering.cli filter pg29440.txt filtered.pg20440.txt 10000\n[2022-02-15 00:26:38][INFO][autoclean._estimate:178] > estimating [6]-gram from [pg29440.txt] ...\n[2022-02-15 00:26:40][INFO][autoclean._estimate:182] > binarising [6]-gram from [/tmp/pg29440.txt.2022-02-15T00:26:38.2265355794898408859.6.arpa] ...\n[2022-02-15 00:26:40][INFO][autoclean._estimate:178] > estimating [1]-gram from [pg29440.txt] ...\n[2022-02-15 00:26:40][INFO][autoclean._estimate:182] > binarising [1]-gram from [/tmp/pg29440.txt.2022-02-15T00:26:40.2265355794898408859.1.arpa] ...\n[2022-02-15 00:26:40][INFO][autoclean.filtering.filter_out: 30] > Reading from [pg29440.txt] and writing to [filtered.pg20440.txt] ...\n[2022-02-15 00:26:40][INFO][autoclean.filtering.filter_out: 43] > Done.\n\nreal\t0m3.201s\nuser\t0m1.882s\nsys\t\t0m2.803s\n```\n3. Check the top of the output file for standard English sentences:\n```shell\n(venv) $ head -n25 filtered.pg20440.txt \nin some\nof the country?\nof the whole:--\naccording to the poet,\nElection--Responsibility--Influence of the Church in such a\nin the original.\ncharacter of the schoolmaster, and the right and duty of the\nthere of the influence which the personal character of the\ntheir Church is the Church of the nation, and that it is they\ntrue, and in the just and the true only.\nstream of not half the volume of that in which the money of the\nsavageism of the other.\nclass with which the schoolmaster and the class with which the\nbetween the feelings of the people and the anticipations of some of\nthe light of the flames.'\nin any age of the Presbyterian Church, in one of the parish\nAccording to the poet,\ncircumstances of Scotland in his days and of Scotland in the present\nthe State is the money of the people, and that the people have a right\nis not according to the nature of things that the case of the tenant\ntheir part of the scheme.'\nwhich all recognition of the religious element on the part of the\nsimply those of the subject and the ratepayer.\ncharacter of our poor Highlanders, and of the influence of the bothie\nthemselves, and not the ministers of the Establishment, who are on\n```\n3. Check the bottom of the output file for non-standard English text:\n```shell\n(venv) $ tail -n25 filtered.pg20440.txt\nresidence.'\nperiodicals.\nconsistency.\npredecessor.\ndifferently?\nFINE-BODYISM.\nELIGIBLE.'{8}\nGlencalvie:--\nphotographer.\nresuscitated.\nPERIODICALISM.\ndouble-quote}\nrelinquished.\ncircumstances.\nProtestantism.\nsignificantly,\nimpossibility.\nresponsibility.\nredistribution.\ngbnewby@pglaf.org\nkingdom.'--SISMONDI.\nself-recommendation.\nhttp://www.gutenberg.org\nhttp://gutenberg.org/license).\nhttp://www.gutenberg.org/2/9/4/4/29440/\n```\n\nThe cli can also be used to evaluate the filtering algorithm with an in-domain and an out-of-domain text:\n\n1. Download French book from Project Gutenberg\n```shell\n(venv) $ wget  https://www.gutenberg.org/cache/epub/46916/pg46916.txt\n--2022-02-15 00:41:00--  https://www.gutenberg.org/cache/epub/46916/pg46916.txt\nResolving www.gutenberg.org (www.gutenberg.org)... 152.19.134.47, 2610:28:3090:3000:0:bad:cafe:47\nConnecting to www.gutenberg.org (www.gutenberg.org)|152.19.134.47|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 120716 (118K) [text/plain]\nSaving to: ‘pg46916.txt’\n\npg46916.txt                                         100%[==================================================================================================================>] 117.89K   347KB/s    in 0.3s    \n\n2022-02-15 00:41:01 (347 KB/s) - ‘pg46916.txt’ saved [120716/120716]\n```\n2. Run evaluation on the Downloaded English and French books, using the former as in-domain and the latter as out-of-domain\n```shell\n(venv) $ time python -m autoclean.filtering.cli eval pg29440.txt pg46916.txt \n[2022-02-15 00:47:29][INFO][autoclean.filtering.evaluate: 62] > Reading from [pg29440.txt] and to [pg46916.txt] ...\n[2022-02-15 00:47:29][INFO][autoclean._estimate:178] > estimating [6]-gram from [/tmp/pg29440.txt.pg46916.txt.2022-02-15T00:47:29.1382531328938857964.txt] ...\n[2022-02-15 00:47:31][INFO][autoclean._estimate:182] > binarising [6]-gram from [/tmp/pg29440.txt.pg46916.txt.2022-02-15T00:47:29.1382531328938857964.txt.2022-02-15T00:47:29.6537006284435656167.6.arpa] ...\n[2022-02-15 00:47:31][INFO][autoclean._estimate:178] > estimating [1]-gram from [/tmp/pg29440.txt.pg46916.txt.2022-02-15T00:47:29.1382531328938857964.txt] ...\n[2022-02-15 00:47:31][INFO][autoclean._estimate:182] > binarising [1]-gram from [/tmp/pg29440.txt.pg46916.txt.2022-02-15T00:47:29.1382531328938857964.txt.2022-02-15T00:47:31.6537006284435656167.1.arpa] ...\n[2022-02-15 00:47:31][INFO][autoclean.filtering.evaluate: 74] > Calculating 10%-cutoff rankings metrics ...\n\n@100% precision [ 94.6832%] recall [ 94.6832%] fallout [ 38.4824%]\n\n@ 90% precision [ 96.7801%] recall [ 87.1050%] fallout [ 20.9756%]\n\n@ 80% precision [ 97.4352%] recall [ 77.9467%] fallout [ 14.8509%]\n\n@ 70% precision [ 97.6359%] recall [ 68.3466%] fallout [ 11.9783%]\n\n@ 60% precision [ 97.8532%] recall [ 58.7090%] fallout [  9.3225%]\n\n@ 50% precision [ 98.1878%] recall [ 49.0939%] fallout [  6.5583%]\n\n@ 40% precision [ 98.4650%] recall [ 39.3889%] fallout [  4.4444%]\n\n@ 30% precision [ 98.4024%] recall [ 29.5192%] fallout [  3.4688%]\n\n@ 20% precision [ 98.5399%] recall [ 19.7095%] fallout [  2.1138%]\n\n@ 10% precision [ 98.4270%] recall [  9.8397%] fallout [  1.1382%]\n\n[2022-02-15 00:47:32][INFO][autoclean.filtering.evaluate:104] > Done.\n\nreal\t0m3.400s\nuser\t0m1.967s\nsys\t    0m2.622s\n```\n\n## Segmentation\n\nSegmentation is based on the recursive dynamic-programming algorithm presented by Peter Norvig in \n[chapter 14 of \"Beautiful Data\"](http://norvig.com/ngrams/ch14.pdf), by Seagaran and Hammerbacher. \n\nIt features an api and cli. An example usage through the cli:\n\n1. Download file to use as corpus (complete works of shakespeare)\n```shell\n(venv) $ wget http://norvig.com/ngrams/shakespeare.txt\n--2022-02-15 12:47:22--  http://norvig.com/ngrams/shakespeare.txt\nResolving norvig.com (norvig.com)... 158.106.138.13\nConnecting to norvig.com (norvig.com)|158.106.138.13|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 4538523 (4.3M) [text/plain]\nSaving to: ‘shakespeare.txt’\n\nshakespeare.txt                                     100%[==================================================================================================================>]   4.33M  3.29MB/s    in 1.3s    \n\n2022-02-15 12:47:24 (3.29 MB/s) - ‘shakespeare.txt’ saved [4538523/4538523]\n```\n2. Create the file to be segmented by deleting spaces between words:\n```shell\n(venv) $ sed  's/\\s//g' shakespeare.txt > joined.shakespeare.txt\n```\n3. Run the segmentation with a sixgram language model:\n```shell\n(venv) $ time python -m autoclean.segmentation.cli seg --lm=5 -c shakespeare.txt joined.shakespeare.txt seg.shakespeare.txt\n[2022-02-15 12:48:35][INFO][autoclean.segmentation.segment: 29] > Reading in corpus from [shakespeare.txt] ...\n[2022-02-15 12:48:35][INFO][autoclean.segmentation.segment: 42] > Estimating [6]-ngram language model from [shakespeare.txt] ...\n[2022-02-15 12:48:35][INFO][autoclean._estimate:178] > estimating [6]-gram from [/tmp/corpus.2022-02-15T12:48:35.6.txt] ...\n[2022-02-15 12:48:44][INFO][autoclean._estimate:182] > binarising [6]-gram from [/tmp/corpus.2022-02-15T12:48:35.6.txt.2022-02-15T12:48:35.3998131699779813468.6.arpa] ...\n[2022-02-15 12:48:45][INFO][autoclean.segmentation.segment: 45] > Segmenting and saving to [seg.shakespeare.txt] ...\n[2022-02-15 12:48:45][INFO][autoclean.segmentation.segment: 49] > Reading in file to segment from [joined.shakespeare.txt] ...\n[2022-02-15 12:52:56][INFO][autoclean.segmentation.segment: 59] > Done.\n\nreal\t4m32.020s\nuser\t4m30.212s\nsys\t0m2.493s\n```\n4. Evaluate the segmentation using the original text as a gold standard:\n\n```shell\n(venv) $ time python -m autoclean.segmentation.cli eval shakespeare.txt seg.shakespeare.txt \n[2022-02-15 12:55:32][INFO][autoclean.segmentation.evaluate: 70] > Reading segmented text from [shakespeare.txt] ...\n[2022-02-15 12:55:32][INFO][autoclean.segmentation.evaluate: 71] > Reading gold standard text from [seg.shakespeare.txt] ...\n[2022-02-15 12:55:32][INFO][autoclean.segmentation.evaluate: 84] > Accuracy: [99.80%], [128,844] correct out of [129,107] sequences\n[2022-02-15 12:55:32][INFO][autoclean.segmentation.evaluate: 87] > Done.\n\nreal\t0m0.624s\nuser\t0m0.732s\nsys\t0m0.723s\n```\n\n# Installation\n\nAs Autoclean is on Pypi and has direct dependencies like Pytorch and KenLM, and Pypi doesn't support them,\nthey need to be installed separately and previous to installing Autoclean: \n\n```shell\n$ git clone git@github.com:JoseLlarena/autoclean.git\n$ python3 virtualenv -p=3.8 venv\n$ source venv/bin/activate\n(venv) $ pip3 install -f https://download.pytorch.org/whl/cu113/torch_stable.html -r ./autoclean/requirements.txt \n```\nThen install Autoclean with pip:\n```shell\n(venv) $ pip3 install autoclean\n```\n\nThe code requires python 3.8+ on and Nvidia GPU. The KenLM/SRILM binaries have been compiled against Linux x86_64 and may \nnot work on other architectures.\n \n\n## Testing\n\nThe unit tests are written with [pytest](https://docs.pytest.org/en/stable). Run with:\n\n```shell\n$ pip3 install pytest\n\n$ pytest\n```\n\n## Changelog\n\nCheck the [Changelog](https://github.com/JoseLlarena/autoclean/blob/master/CHANGELOG.md) for fixes and enhancements of\neach version.\n\n## License\n\nCopyright Jose Llarena 2022.\n\nDistributed under the terms of the [MIT](https://github.com/JoseLlarena/autoclean/blob/master/LICENSE) license,\nautoclean is free and open source software.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JoseLlarena/autoclean",
    "keywords": "cleaning,text,unsupervised,segmentation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autoclean",
    "package_url": "https://pypi.org/project/autoclean/",
    "platform": "",
    "project_url": "https://pypi.org/project/autoclean/",
    "project_urls": {
      "Homepage": "https://github.com/JoseLlarena/autoclean"
    },
    "release_url": "https://pypi.org/project/autoclean/1.0.2/",
    "requires_dist": [
      "pypey",
      "click",
      "pytest ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "A library for cleaning text data",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12898721,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e120c986800b23f0f47935515612bdb37059368acc3922b8b63159d956b72bd",
          "md5": "367519a765e3234fa5172c6d9470a659",
          "sha256": "8ad4410ace480c2329ade77009b915549832b1145db2fe590da00ef0d591b74d"
        },
        "downloads": -1,
        "filename": "autoclean-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "367519a765e3234fa5172c6d9470a659",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 4151736,
        "upload_time": "2022-02-15T15:48:18",
        "upload_time_iso_8601": "2022-02-15T15:48:18.954023Z",
        "url": "https://files.pythonhosted.org/packages/0e/12/0c986800b23f0f47935515612bdb37059368acc3922b8b63159d956b72bd/autoclean-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1940fb04691458ffd685b1e9ddefa637ccd61ff5eda456de34b90c98b764c49f",
          "md5": "a2f4ccc569cde306a516267af8aa1b6c",
          "sha256": "1132f55f3a2e44cc9c44c65b28ccd66f5dbcafc8439bc0a7cf48af3e817233d3"
        },
        "downloads": -1,
        "filename": "autoclean-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a2f4ccc569cde306a516267af8aa1b6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 4135337,
        "upload_time": "2022-02-15T15:48:23",
        "upload_time_iso_8601": "2022-02-15T15:48:23.514305Z",
        "url": "https://files.pythonhosted.org/packages/19/40/fb04691458ffd685b1e9ddefa637ccd61ff5eda456de34b90c98b764c49f/autoclean-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e120c986800b23f0f47935515612bdb37059368acc3922b8b63159d956b72bd",
        "md5": "367519a765e3234fa5172c6d9470a659",
        "sha256": "8ad4410ace480c2329ade77009b915549832b1145db2fe590da00ef0d591b74d"
      },
      "downloads": -1,
      "filename": "autoclean-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "367519a765e3234fa5172c6d9470a659",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 4151736,
      "upload_time": "2022-02-15T15:48:18",
      "upload_time_iso_8601": "2022-02-15T15:48:18.954023Z",
      "url": "https://files.pythonhosted.org/packages/0e/12/0c986800b23f0f47935515612bdb37059368acc3922b8b63159d956b72bd/autoclean-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1940fb04691458ffd685b1e9ddefa637ccd61ff5eda456de34b90c98b764c49f",
        "md5": "a2f4ccc569cde306a516267af8aa1b6c",
        "sha256": "1132f55f3a2e44cc9c44c65b28ccd66f5dbcafc8439bc0a7cf48af3e817233d3"
      },
      "downloads": -1,
      "filename": "autoclean-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a2f4ccc569cde306a516267af8aa1b6c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 4135337,
      "upload_time": "2022-02-15T15:48:23",
      "upload_time_iso_8601": "2022-02-15T15:48:23.514305Z",
      "url": "https://files.pythonhosted.org/packages/19/40/fb04691458ffd685b1e9ddefa637ccd61ff5eda456de34b90c98b764c49f/autoclean-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}