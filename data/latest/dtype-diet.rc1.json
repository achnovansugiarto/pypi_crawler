{
  "info": {
    "author": "noklam",
    "author_email": "mediumnok@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# dtype_diet\n> Attempt to shrink Pandas `dtypes` without losing data so you have more RAM (and maybe more speed)\n\n\nThis file will become your README and also the index of your documentation.\n\n## Install\n\n`pip install dtype_diet`\n\n# Documentation\nhttps://noklam.github.io/dtype_diet/\n\n## How to use\n\n> This is a fork of https://github.com/ianozsvald/dtype_diet to continue supoprt and develop the library with approval from the original author @ianozsvald.\n\nThis tool checks each column to see if larger dtypes (e.g. 8 byte `float64` and `int64`) could be shrunk to smaller `dtypes` without causing any data loss. \nDropping an 8 byte type to a 4 (or 2 or 1 byte) type will keep halving the RAM requirement for that column.  Categoricals are proposed for `object` columns which can bring significant speed and RAM benefits.\n\n\nHere's an minimal example with 3 lines of code running on a Kaggle dataset showing a reduction of 957 -> 85MB, you can find the notebook in the [repository](https://github.com/noklam/dtype_diet/01_example.ipynb):\n\n```python\n#slow\n# sell_prices.csv.zip \n# Source data: https://www.kaggle.com/c/m5-forecasting-uncertainty/\nimport pandas as pd\nfrom dtype_diet import report_on_dataframe, optimize_dtypes\ndf = pd.read_csv('data/sell_prices.csv')\nproposed_df = report_on_dataframe(df, unit=\"MB\")\nnew_df = optimize_dtypes(df, proposed_df)\nprint(f'Original df memory: {df.memory_usage(deep=True).sum()/1024/1024} MB')\nprint(f'Propsed df memory: {new_df.memory_usage(deep=True).sum()/1024/1024} MB')\n```\n\n    Original df memory: 957.5197134017944 MB\n    Propsed df memory: 85.09655094146729 MB\n\n\n```python\n#slow\nproposed_df\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Current dtype</th>\n      <th>Proposed dtype</th>\n      <th>Current Memory (MB)</th>\n      <th>Proposed Memory (MB)</th>\n      <th>Ram Usage Improvement (MB)</th>\n      <th>Ram Usage Improvement (%)</th>\n    </tr>\n    <tr>\n      <th>Column</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>store_id</th>\n      <td>object</td>\n      <td>category</td>\n      <td>203763.920410</td>\n      <td>3340.907715</td>\n      <td>200423.012695</td>\n      <td>98.360403</td>\n    </tr>\n    <tr>\n      <th>item_id</th>\n      <td>object</td>\n      <td>category</td>\n      <td>233039.977539</td>\n      <td>6824.677734</td>\n      <td>226215.299805</td>\n      <td>97.071456</td>\n    </tr>\n    <tr>\n      <th>wm_yr_wk</th>\n      <td>int64</td>\n      <td>int16</td>\n      <td>26723.191406</td>\n      <td>6680.844727</td>\n      <td>20042.346680</td>\n      <td>74.999825</td>\n    </tr>\n    <tr>\n      <th>sell_price</th>\n      <td>float64</td>\n      <td>None</td>\n      <td>26723.191406</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\nRecommendations:\n\n* Run `report_on_dataframe(your_df)` to get recommendations\n* Run `optimize_dtypes(df, proposed_df)` to convert to recommeded dtypes.\n* Consider if Categoricals will save you RAM (see Caveats below)\n* Consider if f32 or f16 will be useful (see Caveats - f32 is _probably_ a reasonable choice unless you have huge ranges of floats)\n* Consider if int32, int16, int8 will be useful (see Caveats - overflow may be an issue)\n* Look at https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.convert_dtypes.html which recommends Pandas nullable dtype alternatives (e.g. to avoid promoting an int64 with NaN items to float64, instead you get Int64 with NaNs and no data loss)\n* Look at Extension arrays like https://github.com/JDASoftwareGroup/rle-array (thanks @repererum [for the tweet](https://twitter.com/crepererum/status/1267441357339201536))\n\nLook at `report_on_dataframe(your_df)` to get a printed report - no changes are made to your dataframe.\n\n## Caveats\n\n* reduced numeric ranges might lead to overflow (TODO document)\n* category dtype can have unexpected effects e.g. need for observed=True in groupby (TODO document)\n* f16 is likely to be simulated on modern hardware so calculations will be 2-3* slower than on f32 or f64\n* we could do with a link that explains binary representation of float & int for those wanting to learn more\n\n## Development \n\n\n### Contributors\n\n* Antony Milbourne https://github.com/amilbourne\n* Mani https://github.com/neomatrix369\n\n### Local Setup\n\n```\n$ conda create -n dtype_diet python=3.8 pandas jupyter pyarrow pytest\n$ conda activate dtype_diet\n```\n\n## Release\n```\nmake release\n```\n# Contributing\nThe repository is developed with `nbdev`, a system for developing library with notebook.\n\nMake sure you run this if you want to contribute to the library. For details, please refer to nbdev documentation (https://github.com/fastai/nbdev)\n```\nnbdev_install_git_hooks\n```\n\nSome other useful commands\n```\nnbdev_build_docs\nnbdev_build_lib\nnbdev_test_nbs\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/noklam/dtype_diet/tree/master/",
    "keywords": "pandas,optimization",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dtype-diet",
    "package_url": "https://pypi.org/project/dtype-diet/",
    "platform": "",
    "project_url": "https://pypi.org/project/dtype-diet/",
    "project_urls": {
      "Homepage": "https://github.com/noklam/dtype_diet/tree/master/"
    },
    "release_url": "https://pypi.org/project/dtype-diet/0.0.1/",
    "requires_dist": [
      "pandas (>=1.0.0)",
      "tabulate"
    ],
    "requires_python": ">=3.7",
    "summary": "Attempt to shrink Pandas `dtypes` without losing data so you have more RAM (and maybe more speed)",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8890020,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5b7ba1f9b5b0e5b2faa0152489c26702a760027300c8b60366977426b44e4c4",
          "md5": "cb04170b146922af494541bf65f17a43",
          "sha256": "77e8b46201f84dbd9d1e4453ac7fcb37587d1d2bbc831ae55a9c48addd4c56b0"
        },
        "downloads": -1,
        "filename": "dtype_diet-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb04170b146922af494541bf65f17a43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7253,
        "upload_time": "2020-12-13T15:48:08",
        "upload_time_iso_8601": "2020-12-13T15:48:08.871510Z",
        "url": "https://files.pythonhosted.org/packages/a5/b7/ba1f9b5b0e5b2faa0152489c26702a760027300c8b60366977426b44e4c4/dtype_diet-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42fbf42cd291a1649b8dc1254cfd0aa38f0f1e9038f1a059cdc1c419876b6ed6",
          "md5": "c61797bcf15f2d00466707f1fd112766",
          "sha256": "544f14fcef4d53312bf9b82f5ee5f890b4b54aadc470258f8f21b978e859ed05"
        },
        "downloads": -1,
        "filename": "dtype_diet-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c61797bcf15f2d00466707f1fd112766",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9900,
        "upload_time": "2020-12-13T15:48:10",
        "upload_time_iso_8601": "2020-12-13T15:48:10.598222Z",
        "url": "https://files.pythonhosted.org/packages/42/fb/f42cd291a1649b8dc1254cfd0aa38f0f1e9038f1a059cdc1c419876b6ed6/dtype_diet-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5b7ba1f9b5b0e5b2faa0152489c26702a760027300c8b60366977426b44e4c4",
        "md5": "cb04170b146922af494541bf65f17a43",
        "sha256": "77e8b46201f84dbd9d1e4453ac7fcb37587d1d2bbc831ae55a9c48addd4c56b0"
      },
      "downloads": -1,
      "filename": "dtype_diet-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cb04170b146922af494541bf65f17a43",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7253,
      "upload_time": "2020-12-13T15:48:08",
      "upload_time_iso_8601": "2020-12-13T15:48:08.871510Z",
      "url": "https://files.pythonhosted.org/packages/a5/b7/ba1f9b5b0e5b2faa0152489c26702a760027300c8b60366977426b44e4c4/dtype_diet-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42fbf42cd291a1649b8dc1254cfd0aa38f0f1e9038f1a059cdc1c419876b6ed6",
        "md5": "c61797bcf15f2d00466707f1fd112766",
        "sha256": "544f14fcef4d53312bf9b82f5ee5f890b4b54aadc470258f8f21b978e859ed05"
      },
      "downloads": -1,
      "filename": "dtype_diet-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c61797bcf15f2d00466707f1fd112766",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9900,
      "upload_time": "2020-12-13T15:48:10",
      "upload_time_iso_8601": "2020-12-13T15:48:10.598222Z",
      "url": "https://files.pythonhosted.org/packages/42/fb/f42cd291a1649b8dc1254cfd0aa38f0f1e9038f1a059cdc1c419876b6ed6/dtype_diet-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}