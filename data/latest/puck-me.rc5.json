{
  "info": {
    "author": "Nathan",
    "author_email": "nathansaccon10@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Puck Me\n\nPuck Me is a python package for scraping NHL stats from the internet.\n\n---\n\n### Basic Usage\n\n```\nfrom puck_me.players import Players\n\nyear = \"2020\"\n\nskaters = Players.all_skaters(year)\ngoalies = Players.all_goalies(year)\n\n# Print name of first three skaters\nfor skater in skaters[:3]:\n    print(skater.name)\n\n# Print name of first three goalies\nfor goalie in goalies[:3]:\n    print(goalie.name)\n```\n\nOutput:\n\n```\n>>> Justin Abdelkader\n>>> Pontus Aberg\n>>> Vitaly Abramov\n>>> Jake Allen\n>>> Frederik Andersen\n>>> Craig Anderson\n```\n\n---\n\n## Skater\n\n#### Name\n\n`skater.name` -> `str`\n\n#### Games Played\n\n`skater.games_played()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Goals\n\n`skater.goals()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Assists\n\n`skater.assists()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Points\n\n`skater.points()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Plus Minus\n\n`skater.plus_minus()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Penalty Minutes\n\n`skater.penalty_minutes()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Even-Strength Goals\n\n`skater.goals_even_strength()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Power-Play Goals\n\n`skater.goals_power_play()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Short-Handed Goals\n\n`skater.goals_short_handed()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Game Winning Goals\n\n`skater.goals_game_winning()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Shots\n\n`skater.shots()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Shooting Percentage\n\n`skater.shooting_percentage()` -> `float`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Shifts\n\n`skater.shifts()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Average Time On Ice\n\n`skater.time_on_ice_per_game()` -> `str`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Total Time On Ice\n\n`skater.time_on_ice_total()` -> `str`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Game Log\n\n`skater.gamelog()` -> `list[SkaterGame]`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\nBasic Usage:\n\n```\nfrom puck_me.players import Players\n\nyear = \"2020\"\nskaters = Players.all_skaters(year)\ncrosby = list(filter(lambda s: s.name == \"Sidney Crosby\", skaters))[0]\n\nfor game in crosby.gamelog()[:5]:\n    print(\n        f\"On {game.date} at arena '{game.arena}' {crosby.name} scored {game.points} points.\"\n    )\n```\n\nOutput:\n\n```\n>>> On 2019-10-03 at arena 'Home' Sidney Crosby scored 1 points.\n>>> On 2019-10-05 at arena 'Home' Sidney Crosby scored 2 points.\n>>> On 2019-10-08 at arena 'Home' Sidney Crosby scored 1 points.\n>>> On 2019-10-10 at arena 'Home' Sidney Crosby scored 2 points.\n>>> On 2019-10-12 at arena 'Away' Sidney Crosby scored 2 points.\n```\n\n#### Playoff Game Log\n\n`skater.gamelog_playoffs()` -> `list[SkaterGame]`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Regular Season Game Log\n\n`skater.gamelog_regular_season()` -> `list[SkaterGame]`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Split Data\n\n`skater.splits()` -> `list[SkaterSplit]`\n\nparams:\n\n- `required: split_type` | `see SplitType`\n- `optional: year` | `example: \"2009\"`\n\nBasic Usage:\n\n```\nfrom puck_me.players import Players\nfrom puck_me.lib.split_types import SplitType\n\nyear = \"2020\"\nskaters = Players.all_skaters(year)\ncrosby = list(filter(lambda s: s.name == \"Sidney Crosby\", skaters))[0]\n\nfor division_split in crosby.splits(SplitType.DIVISION):\n    print(\n        f\"Against the {division_split.value} division {crosby.name} scored {division_split.goals} goals.\"\n    )\n```\n\nOutput:\n\n```\n>>> Against the Atlantic division Sidney Crosby scored 7 goals.\n>>> Against the Metropolitan division Sidney Crosby scored 4 goals.\n>>> Against the Central division Sidney Crosby scored 4 goals.\n>>> Against the Pacific division Sidney Crosby scored 1 goals.\n```\n\n---\n\n## SkaterGame\n\n#### Date\n\n`game.date` -> `str`\n\n#### Age\n\n`game.age` -> `str`\n\n#### Team\n\n`game.team` -> `str`\n\n#### Arena\n\n`game.arena` -> `str`\n\n#### Opponent\n\n`game.opponent` -> `str`\n\n#### Result\n\n`game.result` -> `str`\n\n#### Game Won\n\n`game.is_win` -> `bool`\n\n#### Penalty Minutes\n\n`game.pim` -> `int`\n\n#### Time On Ice\n\n`game.time_on_ice` -> `str`\n\n#### Goals\n\n`game.goals` -> `int`\n\n#### Power Play Goals\n\n`game.goals_pp` -> `int`\n\n#### Even Strength Goals\n\n`game.goals_ev` -> `int`\n\n#### Short Handed Goals\n\n`game.goals_sh` -> `int`\n\n#### Game Winning Goals\n\n`game.goals_gw` -> `int`\n\n#### Assists\n\n`game.assists` -> `int`\n\n#### Even Strength Assists\n\n`game.assists_ev` -> `int`\n\n#### Power Play Assists\n\n`game.assists_pp` -> `int`\n\n#### Short Handed Assists\n\n`game.assists_sh` -> `int`\n\n#### Points\n\n`game.points` -> `int`\n\n#### Plus Minus\n\n`game.plus_minus` -> `int`\n\n#### Shots\n\n`game.shots` -> `int`\n\n#### Shot Percentage\n\n`game.shot_pct` -> `float`\n\n#### Shifts\n\n`game.shifts` -> `int`\n\n#### Hits\n\n`game.hits` -> `int`\n\n#### Blocks\n\n`game.blocks` -> `int`\n\n#### Face-Off Wins\n\n`game.faceoff_wins` -> `int`\n\n#### Face-Off Losses\n\n`game.faceoff_loss` -> `int`\n\n#### Face-Off Percentage\n\n`game.faceoff_pct` -> `float`\n\n---\n\n## SkaterSplit\n\n#### Value\n\n`split.value` -> `str`\n\n#### Games Played\n\n`split.games_played` -> `int`\n\n#### Goals\n\n`split.goals` -> `int`\n\n#### Assists\n\n`split.assists` -> `int`\n\n#### Points\n\n`split.points` -> `int`\n\n#### Plus Minus\n\n`split.plus_minus` -> `int`\n\n#### Penalty Minutes\n\n`split.penalty_minutes` -> `int`\n\n#### Even Strength Goals\n\n`split.goals_ev` -> `int`\n\n#### Power Play Goals\n\n`split.goals_pp` -> `int`\n\n#### Short Handed Goals\n\n`split.goals_sh` -> `int`\n\n#### Game Winning Goals\n\n`split.goals_gw` -> `int`\n\n#### Shots\n\n`split.shots` -> `int`\n\n#### Shooting Percentage\n\n`split.shooting_pct` -> `float`\n\n#### Shifts\n\n`split.shifts` -> `int`\n\n#### Total Time On Ice\n\n`split.time_on_ice_total` -> `str`\n\n#### Average Time On Ice\n\n`split.time_on_ice_average` -> `str`\n\n---\n\n## Goalie\n\n#### Name\n\n`goalie.name` -> `str`\n\n#### Games Played\n\n`goalie.games_played()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Wins\n\n`goalie.wins()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Losses\n\n`goalie.losses()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Tie Losses\n\n`goalie.tie_losses()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Goals Against\n\n`goalie.goals_against()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Shots Faced\n\n`goalie.shots_faced()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Saves\n\n`goalie.save_percent()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Goals Against Average\n\n`goalie.goals_against_avg()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Shutouts\n\n`goalie.shutouts()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Penalty Minutes\n\n`goalie.penalty_mins()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Time On Ice\n\n`goalie.time_on_ice()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Even Strength Goals Against\n\n`goalie.goals_against_ev()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Power Play Goals Against\n\n`goalie.goals_against_pp()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Short Handed Goals Against\n\n`goalie.goals_against_sh()` -> `int`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Game Log\n\n`goalie.gamelog()` -> `list[GoalieGame]`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\nBasic Usage:\n\n```\nfrom puck_me.players import Players\n\nyear = \"2020\"\ngoalies = Players.all_goalies(year)\nlundqvist = list(filter(lambda g: g.name == \"Henrik Lundqvist\", goalies))[0]\n\nfor game in lundqvist.gamelog()[:5]:\n    print(\n        f\"On {game.date} at arena '{game.arena}' {lundqvist.name} made {game.saves} saves.\"\n    )\n```\n\nOutput:\n\n```\n>>> On 2019-10-03 at arena 'Home' Henrik Lundqvist made 43 saves.\n>>> On 2019-10-12 at arena 'Home' Henrik Lundqvist made 23 saves.\n>>> On 2019-10-18 at arena 'Away' Henrik Lundqvist made 29 saves.\n>>> On 2019-10-20 at arena 'Home' Henrik Lundqvist made 40 saves.\n>>> On 2019-10-24 at arena 'Home' Henrik Lundqvist made 31 saves.\n```\n\n#### Playoff Game Log\n\n`goalie.gamelog_playoffs()` -> `list[GoalieGame]`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Regular Season Game Log\n\n`goalie.gamelog_regular_season()` -> `list[GoalieGame]`\n\nparams:\n\n- `optional: year` | `example: \"2009\"`\n\n#### Split Data\n\n`goalie.splits()` -> `list[GoalieSplit]`\n\nparams:\n\n- `required: split_type` | `see SplitType`\n- `optional: year` | `example: \"2009\"`\n\nBasic Usage:\n\n```\nfrom puck_me.players import Players\nfrom puck_me.lib.split_types import SplitType\n\nyear = \"2020\"\ngoalies = Players.all_goalies(year)\nlundqvist = list(filter(lambda g: g.name == \"Henrik Lundqvist\", goalies))[0]\n\nfor division_split in lundqvist.splits(SplitType.DIVISION):\n    print(\n        f\"Against the {division_split.value} division {crosby.name} scored {division_split.goals} goals.\"\n    )\n```\n\nOutput:\n\n```\n>>> Against the Atlantic division Henrik Lundqvist made 256 saves.\n>>> Against the Metropolitan division Henrik Lundqvist made 235 saves.\n>>> Against the Central division Henrik Lundqvist made 105 saves.\n>>> Against the Pacific division Henrik Lundqvist made 203 saves.\n```\n\n---\n\n## GoalieGame\n\n#### Date\n\n`game.date` -> `str`\n\n#### Age\n\n`game.age` -> `str`\n\n#### Team\n\n`game.team` -> `str`\n\n#### Arena\n\n`game.arena` -> `str`\n\n#### Opponent\n\n`game.opponent` -> `str`\n\n#### Result\n\n`game.result` -> `str`\n\n#### Game Won\n\n`game.is_win` -> `bool`\n\n#### Penalty Minutes\n\n`game.pim` -> `int`\n\n#### Time On Ice\n\n`game.time_on_ice` -> `str`\n\n#### Decision\n\n`game.decision` -> `str`\n\n#### Goals Against\n\n`game.goals_against` -> `int`\n\n#### Shots Against\n\n`game.shots_against` -> `int`\n\n#### Saves\n\n`game.saves` -> `int`\n\n#### Save Pct\n\n`game.save_pct` -> `int`\n\n#### Shutouts\n\n`game.shutouts` -> `int`\n\n---\n\n## GoalieSplit\n\n#### Value\n\n`split.value` -> `str`\n\n#### Games Played\n\n`split.games_played` -> `int`\n\n#### Wins\n\n`split.wins` -> `int`\n\n#### Losses\n\n`split.losses` -> `int`\n\n#### Tie Losses\n\n`split.tie_losses` -> `int`\n\n#### Goals Against\n\n`split.goals_against` -> `int`\n\n#### Shots Faced\n\n`split.shots_faced` -> `int`\n\n#### Saves\n\n`split.saves` -> `int`\n\n#### Save Percent\n\n`split.save_percent` -> `float`\n\n#### Average Goals Against\n\n`split.goals_against_avg` -> `float`\n\n#### Shutouts\n\n`split.shutouts` -> `int`\n\n#### Penalty Minutes\n\n`split.penalty_mins` -> `int`\n\n#### Time On Ice\n\n`split.time_on_ice` -> `str`\n\n#### Even Strength Goals Against\n\n`split.goals_against_ev` -> `int`\n\n#### Power Play Goals Against\n\n`split.goals_against_pp` -> `int`\n\n#### Short Handed Goals Against\n\n`split.goals_against_sh` -> `int`\n\n---\n\n## SplitType\n\nSplit type is an enum.\n\n#### Values\n\n`SplitType.SEASON`\n\n`SplitType.ARENA`\n\n`SplitType.ALL_STAR` (for splitting before and after All-Star break)\n\n`SplitType.RESULT`\n\n`SplitType.MONTH`\n\n`SplitType.CONFERENCE`\n\n`SplitType.DIVISION`\n\n`SplitType.OPPONENT`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nsaccon/hockey_ref_scraper",
    "keywords": "nhl,hockey,python",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "puck-me",
    "package_url": "https://pypi.org/project/puck-me/",
    "platform": "",
    "project_url": "https://pypi.org/project/puck-me/",
    "project_urls": {
      "Homepage": "https://github.com/nsaccon/hockey_ref_scraper",
      "Repository": "https://github.com/nsaccon/hockey_ref_scraper"
    },
    "release_url": "https://pypi.org/project/puck-me/0.3.0/",
    "requires_dist": [
      "requests (>=2.26.0,<3.0.0)",
      "beautifulsoup4 (>=4.9.3,<5.0.0)",
      "pandas (>=1.3.1,<2.0.0)",
      "lxml (>=4.6.3,<5.0.0)",
      "html5lib (>=1.1,<2.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Puck Me is a python package for scraping NHL stats from the internet.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11291030,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "634f033e276379b6df0f357605faf1e2093a7f085c6e919fc9638eee40c608ca",
          "md5": "ac385848f4b048c3c1fba82aed9fb66d",
          "sha256": "40e293d2f7c5eebf0e8958515e53e993b322c45fb9471bbef6105c9ecc0ad0f6"
        },
        "downloads": -1,
        "filename": "puck_me-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac385848f4b048c3c1fba82aed9fb66d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 6519,
        "upload_time": "2021-08-21T02:54:03",
        "upload_time_iso_8601": "2021-08-21T02:54:03.595275Z",
        "url": "https://files.pythonhosted.org/packages/63/4f/033e276379b6df0f357605faf1e2093a7f085c6e919fc9638eee40c608ca/puck_me-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca0326250f97adf2f717e251342f06103d5206ed19737223ead7c581cbc0b973",
          "md5": "db9e39525f637f8fe249adbda9f3fbb3",
          "sha256": "02c008996d599e26c5cc1dc66bc67744abe3b2fa9eb5404cbf283e30e766b4d3"
        },
        "downloads": -1,
        "filename": "puck-me-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "db9e39525f637f8fe249adbda9f3fbb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 5185,
        "upload_time": "2021-08-21T02:54:01",
        "upload_time_iso_8601": "2021-08-21T02:54:01.703500Z",
        "url": "https://files.pythonhosted.org/packages/ca/03/26250f97adf2f717e251342f06103d5206ed19737223ead7c581cbc0b973/puck-me-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a638b0e538e2472f2b4ba486f6b210477b516c74cdcb8f98ebf24113e3b3088",
          "md5": "da237ef99e21b9c70a40dd7c33107539",
          "sha256": "f79f23bb8aac3424b26f056f84e3611818f6e10cab6ada64ee34e3dc7b0de3c5"
        },
        "downloads": -1,
        "filename": "puck_me-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da237ef99e21b9c70a40dd7c33107539",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 6529,
        "upload_time": "2021-08-21T03:11:42",
        "upload_time_iso_8601": "2021-08-21T03:11:42.789512Z",
        "url": "https://files.pythonhosted.org/packages/1a/63/8b0e538e2472f2b4ba486f6b210477b516c74cdcb8f98ebf24113e3b3088/puck_me-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38edbd449d35ffa0b83b7f434d772ad20796e5026abb15fb02de860a36d5e3d2",
          "md5": "0f469200160c37357d777ceb49c27de9",
          "sha256": "bc8ed199ef8e65a3d1d8e969ea88b214edc2fb8afa6ce9d0c2665f4abb9ca902"
        },
        "downloads": -1,
        "filename": "puck-me-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0f469200160c37357d777ceb49c27de9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 5178,
        "upload_time": "2021-08-21T03:11:41",
        "upload_time_iso_8601": "2021-08-21T03:11:41.851640Z",
        "url": "https://files.pythonhosted.org/packages/38/ed/bd449d35ffa0b83b7f434d772ad20796e5026abb15fb02de860a36d5e3d2/puck-me-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e494dc2dc1f6e75a25cabf524f362110a3ad4725a33dcd4b2d40d1e22e612f2",
          "md5": "5cb203ebedfdc11945eaaeee3ded11e8",
          "sha256": "48e9924c8b6e807e48bc17034205a8c8e6bedfe1c28fd05795fa08febcf8fd40"
        },
        "downloads": -1,
        "filename": "puck_me-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cb203ebedfdc11945eaaeee3ded11e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 6897,
        "upload_time": "2021-08-22T01:55:40",
        "upload_time_iso_8601": "2021-08-22T01:55:40.794700Z",
        "url": "https://files.pythonhosted.org/packages/9e/49/4dc2dc1f6e75a25cabf524f362110a3ad4725a33dcd4b2d40d1e22e612f2/puck_me-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a36feaa7fdd15e4fe8c2a43c31053e29ecf879a972ed8a2bad334ff94c8a7820",
          "md5": "b00f7839f4c77241c5b19f493e2d0a8f",
          "sha256": "f7123f46a4da3f842c490a63df44fa3f654b4f6b00eb4452a121bdcd153afec4"
        },
        "downloads": -1,
        "filename": "puck-me-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b00f7839f4c77241c5b19f493e2d0a8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 5590,
        "upload_time": "2021-08-22T01:55:39",
        "upload_time_iso_8601": "2021-08-22T01:55:39.690580Z",
        "url": "https://files.pythonhosted.org/packages/a3/6f/eaa7fdd15e4fe8c2a43c31053e29ecf879a972ed8a2bad334ff94c8a7820/puck-me-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90c19ea942e62be5ee190d2ef15f746cb2bb53d5e9e5a8a828e2fc2d30ad01ce",
          "md5": "e5a75b03e8b6248a940c16a916180191",
          "sha256": "5e74da634fc09e08f177ccd94095b719c8bee086fce063459d560271d0d2e88b"
        },
        "downloads": -1,
        "filename": "puck_me-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5a75b03e8b6248a940c16a916180191",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 11121,
        "upload_time": "2021-08-22T21:37:59",
        "upload_time_iso_8601": "2021-08-22T21:37:59.441615Z",
        "url": "https://files.pythonhosted.org/packages/90/c1/9ea942e62be5ee190d2ef15f746cb2bb53d5e9e5a8a828e2fc2d30ad01ce/puck_me-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "300454d2b8c48aee34f758fdfc29626b2b10f9aa2789669989bb7dbe9d445cb3",
          "md5": "79cb821a68a37bcac03ce725407207a9",
          "sha256": "ed2c3d1239ea6031ca1506a1010808ae419e89fa58ad2de23cba1c57be680a94"
        },
        "downloads": -1,
        "filename": "puck-me-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "79cb821a68a37bcac03ce725407207a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 7713,
        "upload_time": "2021-08-22T21:37:58",
        "upload_time_iso_8601": "2021-08-22T21:37:58.262980Z",
        "url": "https://files.pythonhosted.org/packages/30/04/54d2b8c48aee34f758fdfc29626b2b10f9aa2789669989bb7dbe9d445cb3/puck-me-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "786ff484d877bbdb2e71284399c69e7f43fd55353c7e7a776098e71c2a95405d",
          "md5": "54e9ef5df39ff1b00d8aea4a461cefae",
          "sha256": "eab53f90c760e0e2b16da84b35f7ad068da0c41f9e4f459ac57f2900ea549886"
        },
        "downloads": -1,
        "filename": "puck_me-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54e9ef5df39ff1b00d8aea4a461cefae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 12818,
        "upload_time": "2021-08-27T01:34:43",
        "upload_time_iso_8601": "2021-08-27T01:34:43.246062Z",
        "url": "https://files.pythonhosted.org/packages/78/6f/f484d877bbdb2e71284399c69e7f43fd55353c7e7a776098e71c2a95405d/puck_me-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0bcbefd4c58e492a95f402c14be95dc0da60dcf803588a7d6a1e53a83331a07",
          "md5": "fb70badc8dd0ff01f34baf59f3285c21",
          "sha256": "f630b460dd60f3bff77c4b759494f6f91c8963d0bc08fbb57d031a3373c11020"
        },
        "downloads": -1,
        "filename": "puck-me-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb70badc8dd0ff01f34baf59f3285c21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 11741,
        "upload_time": "2021-08-27T01:34:42",
        "upload_time_iso_8601": "2021-08-27T01:34:42.186916Z",
        "url": "https://files.pythonhosted.org/packages/a0/bc/befd4c58e492a95f402c14be95dc0da60dcf803588a7d6a1e53a83331a07/puck-me-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "786ff484d877bbdb2e71284399c69e7f43fd55353c7e7a776098e71c2a95405d",
        "md5": "54e9ef5df39ff1b00d8aea4a461cefae",
        "sha256": "eab53f90c760e0e2b16da84b35f7ad068da0c41f9e4f459ac57f2900ea549886"
      },
      "downloads": -1,
      "filename": "puck_me-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "54e9ef5df39ff1b00d8aea4a461cefae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 12818,
      "upload_time": "2021-08-27T01:34:43",
      "upload_time_iso_8601": "2021-08-27T01:34:43.246062Z",
      "url": "https://files.pythonhosted.org/packages/78/6f/f484d877bbdb2e71284399c69e7f43fd55353c7e7a776098e71c2a95405d/puck_me-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0bcbefd4c58e492a95f402c14be95dc0da60dcf803588a7d6a1e53a83331a07",
        "md5": "fb70badc8dd0ff01f34baf59f3285c21",
        "sha256": "f630b460dd60f3bff77c4b759494f6f91c8963d0bc08fbb57d031a3373c11020"
      },
      "downloads": -1,
      "filename": "puck-me-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fb70badc8dd0ff01f34baf59f3285c21",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 11741,
      "upload_time": "2021-08-27T01:34:42",
      "upload_time_iso_8601": "2021-08-27T01:34:42.186916Z",
      "url": "https://files.pythonhosted.org/packages/a0/bc/befd4c58e492a95f402c14be95dc0da60dcf803588a7d6a1e53a83331a07/puck-me-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}