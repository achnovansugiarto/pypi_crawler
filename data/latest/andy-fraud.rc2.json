{
  "info": {
    "author": "Arraying",
    "author_email": "paul.huebner@googlemail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Andy\n\nAndy* is an anti-typosquatting suite created to **combat Steam Tradelink & Discord Nitro fraud** links. \nWith a correct configuration, Andy will achieve a ridiculous accuracy.\nIn my tests, Andy achieved a 100% accuracy rate (0% false-negatives) with 0% false positives.\n\nWhile Andy was developed with Steam and Discord in mind, it can hypothetically used for virtually any websites.\n\n*\\*any resemblance to persons, whether real or ficticious, is purely coincidental.*\n\n## How it works\n\nGiven a URL, called test URL henceforth, it should be checked whether or not it is a fraudulent URL given the config provided.\nIn essence, Andy will compute the normalized [Levenshtein distance](https://en.wikipedia.org/wiki/Levenshtein_distance) between the test URL and configured valid domains. \nIf this distance shows high similarity, or it contains part of a valid domain (think `discord-nitro` containing `discord` from `discord.com`) it will flag the URL as fraudulent.\nAlternatively, it will attempt to perform similar comparisons on the domain contents, URL path and URL querystrings in order to compute a final verdict.\n\n## Configuration\n\nAndy requires a valid configuration dictionary.\nThis will consist of the following keys:\n\n| Key | Type | Description |\n| --- | --- | --- |\n| `domain` | dict of string keys and string array values | A dictionary of all legitimate domains (2nd/3rd level) with their associated TLDs. |\n| `domain_threshold` | [0-1] | How similar the base domain should be to trigger suspicion. |\n| `domain_keywords` | string array | A list of fraudulent keywords in the domain. |\n| `domain_keywords_threshold` | [0-1] | How similar the base domain should be to trigger keyword processing.\n| `path` | string array | A list of fraudulent keywords in the path. |\n| `path_threshold` | [0-1] | How similar strings in the path should be to trigger suspicion. |\n| `path_split` | boolean | Whether to split on \"-\" in the path and check parts individually. |\n| `query` | string array | A list of fraudulent keywords in a querystring. |\n| `query_threshold` | [0-1] | How similar querystrings should be to trigger suspicion. |\n| `query_split` | boolean | Whether to split on \"-\" in the querystring and check parts individually. |\n\n**Note:** All categories except `domain_keywords` use Levenshtein distance to trigger with \"similar\" strings. \nFor example, the keyword \"gift\" will cause \"g1ft\" to trigger too.\nAdditionally, there must be at least one value in `domain`.\n\n**Warning:** Setting any of the split values to `true` may considerably increase your false positive rate if misconfigured.\n\n## Example\n\nFor example, using (not all config elements are shown):\n```python\n\"domain\": {\n  \"discord\": [\"com\", \"gg\", \"gift\"],\n  \"steamcommunity\": [\"com\"]\n}\n```\n\nThe following URLs will be evaluated as follows:\n* `discord.com` -> No fraud\n* `d1scorrd.com` -> Fraud\n* `discord.biz` -> Fraud\n* `steamcommunity.com` -> No fraud\n* `streamcommmunity.com` -> Fraud\n\n\n## Installation\n\n```\npip install andy-fraud\n```\n\n## Usage (library)\n\nAndy can be used as a library for other projects.\n\n#### Loading the config\n\nFirst, the config needs to be loaded. \nThe config can be stored anywhere, from purely in-memory to persisting in a JSON file.\nFor this example, let us assume the config is in a file, and we are parsing it as JSON.\n\n```python\nconfig = json.load(config_file)\n```\n\n#### Getting a parsed URL\n\nThe algorithm requires a parsed URL.\nThis can be obtained easily, where `string` is a variable that contains our link as a string.\n\n```python\nparsed = urllib.parse.urlparse(string)\n```\n\n#### Testing if the URL is fraudulent\n\nThis snippet demonstrates how to actually tell if a URL is fraudulent.\nIt includes the import of the package.\n```python\nfrom andy import suite\n\nif suite.is_scam(config, parsed):\n    print(\"Likely a scam link!\")\nelse:\n    print(\"Probably not a scam link!\")\n```\n\n\n## Usage (command line)\n\nAndy can be run from the command line to test the accuracy of detection.\nFor this, two files are needed.\nBoth files contain one domain per line (tailing and leading whitespace is ignored).\nThe first file, referred to as the legitimate file, will contain only URLs that are not considered fraud.\nThe second file, referred to as the scam file, will contain only URLs that are fraudulent.\nAndy will then test how many of the URLs from the legitimate file Andy flags as fraudulent, and vice versa.\n\n### Command line arguments\n\nAs such, 3 command line arguments are required:\n1. The path of the config file (must be stored in JSON format).\n2. The path of the legitimate file.\n3. The path of the scam file.\n\n### Running the script\n\nMake sure that the package is installed (see above). This is an example, your file names may differ!\n\n**General:** `python -m andy config.json legit.txt scam.txt`  \n**Windows:** `py -m andy config.json legit.txt scam.txt`\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Arraying/Andy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "andy-fraud",
    "package_url": "https://pypi.org/project/andy-fraud/",
    "platform": "",
    "project_url": "https://pypi.org/project/andy-fraud/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Arraying/Andy/issues",
      "Homepage": "https://github.com/Arraying/Andy"
    },
    "release_url": "https://pypi.org/project/andy-fraud/1.0.1/",
    "requires_dist": [
      "tldextract",
      "jsonschema"
    ],
    "requires_python": ">=3.8",
    "summary": "Anti-typosquatting suite",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11737898,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2d173d72fdf922bdc66b7d8bab68e363f623d6d456eca1326b8415f3a97478c",
          "md5": "c87a109bc0f8ab3d6b3a8ede63b9a189",
          "sha256": "080b1be5811a5ab288803a77a7f5f86e8bf95ec1e889ac6ee41c98144f61ea0a"
        },
        "downloads": -1,
        "filename": "andy_fraud-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c87a109bc0f8ab3d6b3a8ede63b9a189",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18870,
        "upload_time": "2021-10-14T12:43:20",
        "upload_time_iso_8601": "2021-10-14T12:43:20.141079Z",
        "url": "https://files.pythonhosted.org/packages/e2/d1/73d72fdf922bdc66b7d8bab68e363f623d6d456eca1326b8415f3a97478c/andy_fraud-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b04d49e27e293b9437a20bc1df168c70e833f81e3aaeee3074ed1bd5679aef71",
          "md5": "b7387557170476028d1531bd8b22c30c",
          "sha256": "4074b58d7dd47585a523b7c7a1ddfbf230a2503c3fc799cde7c64a44710a2abf"
        },
        "downloads": -1,
        "filename": "andy_fraud-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b7387557170476028d1531bd8b22c30c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20273,
        "upload_time": "2021-10-14T12:43:22",
        "upload_time_iso_8601": "2021-10-14T12:43:22.658692Z",
        "url": "https://files.pythonhosted.org/packages/b0/4d/49e27e293b9437a20bc1df168c70e833f81e3aaeee3074ed1bd5679aef71/andy_fraud-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3dd22a49957a67ed129a6bb0a8b1a9da3d15f5b56b1ff9b3e37e508234775b1",
          "md5": "9926d1ac98bdf8d1d42d2e31ea7b4915",
          "sha256": "143e4f6d1e0c7ac607b9b15aa3e1d5ca38e89715d23b4f0b8278a0050a3e94af"
        },
        "downloads": -1,
        "filename": "andy_fraud-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9926d1ac98bdf8d1d42d2e31ea7b4915",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19060,
        "upload_time": "2021-10-15T17:32:42",
        "upload_time_iso_8601": "2021-10-15T17:32:42.724872Z",
        "url": "https://files.pythonhosted.org/packages/b3/dd/22a49957a67ed129a6bb0a8b1a9da3d15f5b56b1ff9b3e37e508234775b1/andy_fraud-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab57ccc3c0c9d79cb4790ab5d4f5cccca73a581bb9b4459c8071a76ba2967ca5",
          "md5": "527f4b0dde3ec170d526b806494468e9",
          "sha256": "3ea537b2ba63ff610af3e40ff4838e8e3b0a806ed8001896359786f138d4c7f9"
        },
        "downloads": -1,
        "filename": "andy_fraud-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "527f4b0dde3ec170d526b806494468e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20551,
        "upload_time": "2021-10-15T17:32:44",
        "upload_time_iso_8601": "2021-10-15T17:32:44.460375Z",
        "url": "https://files.pythonhosted.org/packages/ab/57/ccc3c0c9d79cb4790ab5d4f5cccca73a581bb9b4459c8071a76ba2967ca5/andy_fraud-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3dd22a49957a67ed129a6bb0a8b1a9da3d15f5b56b1ff9b3e37e508234775b1",
        "md5": "9926d1ac98bdf8d1d42d2e31ea7b4915",
        "sha256": "143e4f6d1e0c7ac607b9b15aa3e1d5ca38e89715d23b4f0b8278a0050a3e94af"
      },
      "downloads": -1,
      "filename": "andy_fraud-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9926d1ac98bdf8d1d42d2e31ea7b4915",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 19060,
      "upload_time": "2021-10-15T17:32:42",
      "upload_time_iso_8601": "2021-10-15T17:32:42.724872Z",
      "url": "https://files.pythonhosted.org/packages/b3/dd/22a49957a67ed129a6bb0a8b1a9da3d15f5b56b1ff9b3e37e508234775b1/andy_fraud-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab57ccc3c0c9d79cb4790ab5d4f5cccca73a581bb9b4459c8071a76ba2967ca5",
        "md5": "527f4b0dde3ec170d526b806494468e9",
        "sha256": "3ea537b2ba63ff610af3e40ff4838e8e3b0a806ed8001896359786f138d4c7f9"
      },
      "downloads": -1,
      "filename": "andy_fraud-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "527f4b0dde3ec170d526b806494468e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 20551,
      "upload_time": "2021-10-15T17:32:44",
      "upload_time_iso_8601": "2021-10-15T17:32:44.460375Z",
      "url": "https://files.pythonhosted.org/packages/ab/57/ccc3c0c9d79cb4790ab5d4f5cccca73a581bb9b4459c8071a76ba2967ca5/andy_fraud-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}