{
  "info": {
    "author": "Geoffrey Bomarito",
    "author_email": "geoffrey.f.bomarito@nasa.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "![Bingo Logo](media/logo.png)\n\nmaster: [![Build Status](https://github.com/nasa/bingo/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/nasa/bingo/actions?query=branch%3Adevelop)\n[![Coverage Status](https://coveralls.io/repos/github/nasa/bingo/badge.svg?branch=master)](https://coveralls.io/github/nasa/bingo?branch=develop) \n\ndevelop: \n[![Build Status](https://github.com/nasa/bingo/actions/workflows/tests.yml/badge.svg?branch=develop)](https://github.com/nasa/bingo/actions?query=branch%3Adevelop)\n[![Coverage Status](https://coveralls.io/repos/github/nasa/bingo/badge.svg?branch=develop)](https://coveralls.io/github/nasa/bingo?branch=develop) \n\n## Description\nBingo is an open source package for performing symbolic regression, though it \ncan be used as a general purpose evolutionary optimization package.  \n\n## Key Features\n*   Integrated local optimization strategies\n*   Parallel island evolution strategy implemented with mpi4py\n*   Coevolution of fitness predictors\n\n# Quick Start\n\n## Documentation\n[Full Documentation Here](https://nightdr.github.io/bingo/)\n\n## Installation\n\nTo install Bingo, simply use pip.  Unfortunately the pip install is currently not working.  Please use source install for the time being.\n\n```sh\npip install bingo-nasa\n```\n\n## Usage Example\nA no-fuss way of using Bingo is by using the scikit-learn wrapper:\n`SymbolicRegressor`. Let's setup a test case to show how it works.\n\n### Setting Up the Regressor\n\nThere are many options that can be set in `SymbolicRegressor`. Here we set some basic ones including\n`population_size` (the number of equations in a population), `stack_size` (the max number of nodes per equation), and `use_simplification`\n(whether to use simplification to speed up equation evaluation and for easier reading). You can see all of `SymbolicRegressor`'s\noptions [here](https://nightdr.github.io/bingo/_apidocs/bingo.symbolic_regression.html#module-bingo.symbolic_regression.symbolic_regressor).\n\n\n```python\nfrom bingo.symbolic_regression.symbolic_regressor import SymbolicRegressor\nregressor = SymbolicRegressor(population_size=100, stack_size=16,\n                              use_simplification=True)\n```\n\n    /home/gbomarit/Projects/Genetic_Programming/bingo/bingo/symbolic_regression/__init__.py:31: UserWarning: Could not load C++ modules No module named 'bingocpp.build.bingocpp'\n      warnings.warn(f\"Could not load C++ modules {import_err}\")\n\n\n### Training Data\nHere we're just creating some dummy training data from the equation $5.0 X_0^2 + 3.5 X_0$. More on training data can be found\nin the [data formatting guide](https://nightdr.github.io/bingo/_high_level/data_formatting.html).\n```python\nimport numpy as np\nX_0 = np.linspace(-10, 10, num=30).reshape((-1, 1))\nX = np.array(X_0)\ny = 5.0 * X_0 ** 2 + 3.5 * X_0\n```\n\n\n```python\nimport matplotlib.pyplot as plt\nplt.scatter(X, y)\nplt.xlabel(\"X_0\")\nplt.ylabel(\"y\")\nplt.title(\"Training Data\")\nplt.show()\n```\n\n\n    \n![png](media/usage_example_1.png)\n    \n\n\n### Fitting the Regressor\n\nFitting is as simple as calling the `.fit()` method.\n\n\n```python\nregressor.fit(X, y)\n```\n\n    using 1 processes\n     Generating a diverse population took 274 iterations.\n    archipelago: <class 'bingo.evolutionary_optimizers.island.Island'>\n    done with opt, best_ind: X_0 + (5.0)((0.49999999999999967)(X_0) + (X_0)(X_0)), fitness: 5.4391466376923e-28\n    reran CLO, best_ind: X_0 + (5.0)((0.4999999999999999)(X_0) + (X_0)(X_0)), fitness: 5.352980018399097e-28\n\n\n### Getting the Best Individual\n\n\n```python\nbest_individual = regressor.get_best_individual()\nprint(\"best individual is:\", best_individual)\n```\n\n    best individual is: X_0 + (5.0)((0.4999999999999999)(X_0) + (X_0)(X_0))\n\n\n### Predicting Data with the Best Individual\n\nYou can use the regressor's `.predict(X)` or\nthe best_individual's `.evaluate_equation_at(X)` to get\nits predictions for `X`.\n\n\n```python\npred_y = regressor.predict(X)\npred_y = best_individual.evaluate_equation_at(X)\n\nplt.scatter(X, y)\nplt.plot(X, pred_y, 'r')\nplt.xlabel(\"X_0\")\nplt.ylabel(\"y\")\nplt.legend([\"Actual\", \"Predicted\"])\nplt.show()\n```\n\n\n    \n![png](media/usage_example_2.png)\n\n# Source\n\n## Installation from Source\n\nFor those looking to develop their own features in Bingo.\n\nFirst clone the repo and move into the directory:\n\n```sh\ngit clone --recurse-submodules https://github.com/nasa/bingo.git\ncd bingo\n```\n\nThen make sure you have the requirements necessary to use Bingo:\n\n```sh\npip install -r requirements.txt\n```\n\nor\n\n```sh\nconda install --channel conda-forge --file requirements.txt\n```\n\n(Optional) Then build the c++ performance library BingoCpp:\n\n```sh\n./.build_bingocpp.sh\n```\n\nNow you should be good to go! You can run Bingo's test suite to make sure that\nthe installation process worked properly:\n\n```sh\npytest tests\n```\n\nAdd Bingo to your Python path to begin using it from other directories.\n\n```sh\nexport PYTHONPATH=\"$PYTHONPATH:/path/to/bingo/\"\n```\n\nand test it with:\n\n```sh\npython -c 'import bingo; import bingocpp'\n```\n\n## Contributing\n1.  Fork it (<https://github.com/nasa/bingo/fork>)\n2.  Create your feature branch (`git checkout -b feature/fooBar`)\n3.  Commit your changes (`git commit -am 'Add some fooBar'`)\n4.  Push to the branch (`git push origin feature/fooBar`)\n5.  Create a new Pull Request\n\n# Versioning\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, \nsee the [tags on this repository](https://github.com/nasa/bingo/tags). \n\n# Authors\n*   Geoffrey Bomarito\n*   Tyler Townsend\n*   Jacob Hochhalter\n*   David Randall\n*   Ethan Adams\n*   Kathryn Esham\n*   Diana Vera\n  \n# License \nCopyright 2018 United States Government as represented by the Administrator of \nthe National Aeronautics and Space Administration. No copyright is claimed in \nthe United States under Title 17, U.S. Code. All Other Rights Reserved.\n\nThe Bingo Mini-app framework is licensed under the Apache License, Version 2.0 \n(the \"License\"); you may not use this application except in compliance with the \nLicense. You may obtain a copy of the License at \nhttp://www.apache.org/licenses/LICENSE-2.0 .\n\nUnless required by applicable law or agreed to in writing, software distributed \nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR \nCONDITIONS OF ANY KIND, either express or implied. See the License for the \nspecific language governing permissions and limitations under the License.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nasa/bingo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bingo-nasa",
    "package_url": "https://pypi.org/project/bingo-nasa/",
    "platform": null,
    "project_url": "https://pypi.org/project/bingo-nasa/",
    "project_urls": {
      "Homepage": "https://github.com/nasa/bingo"
    },
    "release_url": "https://pypi.org/project/bingo-nasa/0.4.1/",
    "requires_dist": null,
    "requires_python": "~=3.4",
    "summary": "A package for genetic optimization and symbolic regression",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14545607,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7a562a58ddcb5fbe3ea30041a37bdb948a50d591f5e5236f7c9aabc23c2a943",
          "md5": "5041d8d1530c0a3f9ab5106c8179405f",
          "sha256": "d773ebda8da6f5ab1902685389cec85d4854d28815470a229817b0719fa0ec79"
        },
        "downloads": -1,
        "filename": "bingo-nasa-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5041d8d1530c0a3f9ab5106c8179405f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.4",
        "size": 1656465,
        "upload_time": "2019-05-15T15:54:12",
        "upload_time_iso_8601": "2019-05-15T15:54:12.729035Z",
        "url": "https://files.pythonhosted.org/packages/f7/a5/62a58ddcb5fbe3ea30041a37bdb948a50d591f5e5236f7c9aabc23c2a943/bingo-nasa-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4a383f30487e53070ea7bbd52de6c39d6ae752fd9635f1fc8a96909e3f5746a",
          "md5": "45cdffcc00830c0d42481a3d34ca788c",
          "sha256": "4a195e50c09a39762aa92f795d38e0c6f202303fbaaac86d601a2b8b534db678"
        },
        "downloads": -1,
        "filename": "bingo-nasa-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45cdffcc00830c0d42481a3d34ca788c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.4",
        "size": 1639592,
        "upload_time": "2020-01-13T19:28:33",
        "upload_time_iso_8601": "2020-01-13T19:28:33.326975Z",
        "url": "https://files.pythonhosted.org/packages/c4/a3/83f30487e53070ea7bbd52de6c39d6ae752fd9635f1fc8a96909e3f5746a/bingo-nasa-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7ad680fefca9495d1581612d83db4ff3c5592c61639239fa741539f09ef64e4",
          "md5": "c561968fe9e7ae5ae3e6fe446b6c580a",
          "sha256": "dadf9815e751ecc47dade1b409b7845a57c8f2b47ae47da25f66557adcb4b638"
        },
        "downloads": -1,
        "filename": "bingo-nasa-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c561968fe9e7ae5ae3e6fe446b6c580a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.4",
        "size": 1670221,
        "upload_time": "2020-01-13T19:40:55",
        "upload_time_iso_8601": "2020-01-13T19:40:55.621106Z",
        "url": "https://files.pythonhosted.org/packages/f7/ad/680fefca9495d1581612d83db4ff3c5592c61639239fa741539f09ef64e4/bingo-nasa-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e56a1192b4ead2632b438c31aac3bf29a21087d27b5273ab74b4cecb4662d591",
          "md5": "33a22a035d3cb8bba38fed9dcf1f86ac",
          "sha256": "fead23177630b5348699cd82d0a55cce71f4d8776b8bcd709ed5b7dec05a95d0"
        },
        "downloads": -1,
        "filename": "bingo-nasa-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "33a22a035d3cb8bba38fed9dcf1f86ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.4",
        "size": 1700772,
        "upload_time": "2022-07-08T18:54:55",
        "upload_time_iso_8601": "2022-07-08T18:54:55.404138Z",
        "url": "https://files.pythonhosted.org/packages/e5/6a/1192b4ead2632b438c31aac3bf29a21087d27b5273ab74b4cecb4662d591/bingo-nasa-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0407d55658d366303e36e5ce925b6f204df7e1dfa486aa4d4ada5f4056cf6417",
          "md5": "3bbb2719e392ae43b3eaa37001abc67e",
          "sha256": "1c7f1d6ac6f4535f6d481db8ada2eebe21e623fc8a3009d1eb5d5780a3124cc9"
        },
        "downloads": -1,
        "filename": "bingo-nasa-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3bbb2719e392ae43b3eaa37001abc67e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.4",
        "size": 2220178,
        "upload_time": "2022-07-25T20:48:30",
        "upload_time_iso_8601": "2022-07-25T20:48:30.119101Z",
        "url": "https://files.pythonhosted.org/packages/04/07/d55658d366303e36e5ce925b6f204df7e1dfa486aa4d4ada5f4056cf6417/bingo-nasa-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0407d55658d366303e36e5ce925b6f204df7e1dfa486aa4d4ada5f4056cf6417",
        "md5": "3bbb2719e392ae43b3eaa37001abc67e",
        "sha256": "1c7f1d6ac6f4535f6d481db8ada2eebe21e623fc8a3009d1eb5d5780a3124cc9"
      },
      "downloads": -1,
      "filename": "bingo-nasa-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3bbb2719e392ae43b3eaa37001abc67e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.4",
      "size": 2220178,
      "upload_time": "2022-07-25T20:48:30",
      "upload_time_iso_8601": "2022-07-25T20:48:30.119101Z",
      "url": "https://files.pythonhosted.org/packages/04/07/d55658d366303e36e5ce925b6f204df7e1dfa486aa4d4ada5f4056cf6417/bingo-nasa-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}