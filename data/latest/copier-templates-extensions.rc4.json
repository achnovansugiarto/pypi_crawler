{
  "info": {
    "author": "",
    "author_email": "Timoth√©e Mazzucotelli <pawamoy@pm.me>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# Copier Templates Extensions\n\n[![ci](https://github.com/pawamoy/copier-templates-extensions/workflows/ci/badge.svg)](https://github.com/pawamoy/copier-templates-extensions/actions?query=workflow%3Aci)\n[![documentation](https://img.shields.io/badge/docs-mkdocs%20material-blue.svg?style=flat)](https://pawamoy.github.io/copier-templates-extensions/)\n[![pypi version](https://img.shields.io/pypi/v/copier-templates-extensions.svg)](https://pypi.org/project/copier-templates-extensions/)\n[![gitpod](https://img.shields.io/badge/gitpod-workspace-blue.svg?style=flat)](https://gitpod.io/#https://github.com/pawamoy/copier-templates-extensions)\n[![gitter](https://badges.gitter.im/join%20chat.svg)](https://gitter.im/copier-templates-extensions/community)\n\nSpecial Jinja2 extension for Copier that allows to load extensions using file paths relative to the template root instead of Python dotted paths.\n\n## Installation\n\nWith `pip`:\n```bash\npip install copier-templates-extensions\n```\n\nWith [`pipx`](https://github.com/pipxproject/pipx):\n```bash\npip install --user pipx\n\npipx install copier\npipx inject copier copier-templates-extensions\n```\n\n## Usage\n\nIn your template configuration,\nfirst add our loader extension,\nthen add your templates extensions\nusing relative file paths,\nand the class name after a colon:\n\n```yaml\n_jinja_extensions:\n- copier_templates_extensions.TemplateExtensionLoader\n- extensions/context.py:ContextUpdater\n- extensions/slugify.py:SlugifyExtension\n```\n\nWith this example, you are supposed to have an `extensions`\ndirectory at the root of your template containing two modules:\n`context.py` and `slugify.py`.\n\n```\nüìÅ template_root\n‚îú‚îÄ‚îÄ üìÑ abc.txt.jinja\n‚îú‚îÄ‚îÄ üìÑ copier.yml\n‚îî‚îÄ‚îÄ üìÅ extensions\n ¬†¬† ‚îú‚îÄ‚îÄ üìÑ context.py\n ¬†¬† ‚îî‚îÄ‚îÄ üìÑ slugify.py\n```\n\nSee [Context hook extension](#context-hook-extension)\nto see how the `ContextUpdater` class can be written.\n\nThe `SlugifyExtension` class could be written like this:\n\n```python\nimport re\nimport unicodedata\n\nfrom jinja2.ext import Extension\n\n\n# taken from Django\n# https://github.com/django/django/blob/main/django/utils/text.py\ndef slugify(value, allow_unicode=False):\n    \"\"\"\n    Convert to ASCII if 'allow_unicode' is False. Convert spaces or repeated\n    dashes to single dashes. Remove characters that aren't alphanumerics,\n    underscores, or hyphens. Convert to lowercase. Also strip leading and\n    trailing whitespace, dashes, and underscores.\n    \"\"\"\n    value = str(value)\n    if allow_unicode:\n        value = unicodedata.normalize('NFKC', value)\n    else:\n        value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii')\n    value = re.sub(r'[^\\w\\s-]', '', value.lower())\n    return re.sub(r'[-\\s]+', '-', value).strip('-_')\n\n\nclass SlugifyExtension(Extension):\n    def __init__(self, environment):\n        super().__init__(environment)\n        environment.filters[\"slugify\"] = slugify\n```\n\n### Context hook extension\n\nThis package also provides a convenient extension class\nallowing template writers to update the context used\nto render templates, in order to add, modify or remove\nitems of the context.\n\nIn one of your relative path extensions modules,\ncreate a class that inherits from `ContextHook`,\nand override its `hook` method:\n\n```python\nfrom copier_templates_extensions import ContextHook\n\n\nclass ContextUpdater(ContextHook):\n    def hook(self, context):\n        new_context = {}\n        new_context[\"say\"] = \"hello \" + context[\"name\"]\n        return new_context\n```\n\nUsing the above example, your context will be updated\nwith the `new_context` returned by the method.\nIf you prefer to modify the context in-place instead,\nfor example to *remove* items from it,\nset the `update` class attribute to `False`:\n\n```python\nfrom copier_templates_extensions import ContextHook\n\n\nclass ContextUpdater(ContextHook):\n    update = False\n\n    def hook(self, context):\n        context[\"say\"] = \"hello \" + context[\"name\"]\n        del context[\"name\"]\n```\n\nIn your Jinja templates, you will now have access\nto the `{{ say }}` variable directly.\n\nThis can be extremely useful in template projects\nwhere you don't want to ask too many questions to the users\nand instead infer some values from their answers.\n\nConsider the following example:\nyou ask your users if they want to generate\na CLI app or a web API.\nDepending on their answer,\nthe main Python module should be named\n`cli.py` or `app.py`.\n\nWithout the context hook,\nyou would need to write a Jinja macro somewhere,\nor update the context directly in Jinja,\nand import this file (still using Jinja)\n*in the filename of the module*:\n\n```jinja\n{# using macros #}\n{%- macro module_name() %}\n  {%- if project_type == \"webapi\" %}app{% else %}cli{% endif %}\n{%- endmacro %}\n```\n\n```jinja\n{# or enhancing the context #}\n{#- Initiate context with a copy of Copier answers -#}\n{%- set ctx = _copier_answers.copy() -%}\n\n{#- Populate our new variables -#}\n{%- set _ = ctx.update({\"module_name\": (\"app\" if project_type == \"webapi\" else \"cli\") -%}\n```\n\n```\nüìÅ template_root\n‚îú‚îÄ‚îÄ üìÑ copier.yml\n‚îú‚îÄ‚îÄ üìÑ macros      # the macros file\n‚îú‚îÄ‚îÄ üìÑ context     # the context file\n‚îú‚îÄ‚îÄ üìÅ extensions\n‚îÇ¬†¬† ‚îî‚îÄ‚îÄ üìÑ slugify.py\n‚îî‚îÄ‚îÄ üìÅ {{project_name|slugify}}\n    ‚îÇ\n    ‚îÇ   # using the macros\n    ‚îú‚îÄ‚îÄ üìÑ {% import 'macros' as macros with context %}{{macros.module_name()}}.py.jinja\n    ‚îÇ\n    ‚îÇ   # or using the enhanced context\n    ‚îî‚îÄ‚îÄ üìÑ {% from 'context' import ctx with context %}{{ctx.module_name}}.py.jinja\n```\n\nAs you can see, both forms are really ugly to write:\n\n- the `macros` or `context` can only be placed in the root,\n  as slashes `/` are not allowed in filenames\n- you must use spaces and single-quotes\n  (double-quotes are not valid filename characters on Windows)\n  in your templated filenames, which is not clean\n- filenames are very long\n\n**Using our context hook instead makes it so easy and clean!**\n\n```python\nfrom copier_templates_extensions import ContextHook\n\n\nclass ContextUpdater(ContextHook):\n    def hook(self, context):\n        return {\"module_name\": \"app\" if context[\"project_type\"] == \"webapi\" else \"cli\"}\n```\n\n```\nüìÅ template_root\n‚îú‚îÄ‚îÄ üìÑ copier.yml\n‚îú‚îÄ‚îÄ üìÅ extensions\n‚îÇ¬†¬† ‚îú‚îÄ‚îÄ üìÑ slugify.py\n‚îÇ¬†¬† ‚îî‚îÄ‚îÄ üìÑ context.py\n‚îî‚îÄ‚îÄ üìÅ {{project_name|slugify}}\n    ‚îî‚îÄ‚îÄ üìÑ {{module_name}}.py.jinja\n```\n\n## How does it work?\n\nBeware the ugly hack!\nUpon loading the special *loader* extension,\nthe function responsible for importing\na Python object using its dotted-path (a string)\nis patched in the `jinja.environment` module,\nwhere it's used to load extensions.\nThe patched version adds support\nfor loading extensions using relative file paths.\nThe file system loader of the Jinja environment\nand its `searchpaths` attribute are used to\nfind the local clone of the template and determine\nthe absolute path of the extensions to load.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "copier,templates,extension",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "copier-templates-extensions",
    "package_url": "https://pypi.org/project/copier-templates-extensions/",
    "platform": null,
    "project_url": "https://pypi.org/project/copier-templates-extensions/",
    "project_urls": {
      "Changelog": "https://pawamoy.github.io/copier-templates-extensions/changelog",
      "Discussions": "https://github.com/pawamoy/copier-templates-extensions/discussions",
      "Documentation": "https://pawamoy.github.io/copier-templates-extensions",
      "Funding": "https://github.com/sponsors/pawamoy",
      "Gitter": "https://gitter.im/copier-templates-extensions/community",
      "Homepage": "https://pawamoy.github.io/copier-templates-extensions",
      "Issues": "https://github.com/pawamoy/copier-templates-extensions/issues",
      "Repository": "https://github.com/pawamoy/copier-templates-extensions"
    },
    "release_url": "https://pypi.org/project/copier-templates-extensions/0.3.0/",
    "requires_dist": [
      "copier>=6"
    ],
    "requires_python": ">=3.7",
    "summary": "Special Jinja2 extension for Copier that allows to load extensions using file paths relative to the template root instead of Python dotted paths.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15068948,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1957867d88ea774c5bad9991511c0bf13e3456dac3de8a4e1ef0df075ed032e8",
          "md5": "868ac480e95eaa17723f89f73105760c",
          "sha256": "7dc23b847f189604faf729358f1de6b1d00c0725e61cafced6c69705f208996a"
        },
        "downloads": -1,
        "filename": "copier_templates_extensions-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "868ac480e95eaa17723f89f73105760c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<3.10",
        "size": 5996,
        "upload_time": "2021-03-29T07:17:08",
        "upload_time_iso_8601": "2021-03-29T07:17:08.975920Z",
        "url": "https://files.pythonhosted.org/packages/19/57/867d88ea774c5bad9991511c0bf13e3456dac3de8a4e1ef0df075ed032e8/copier_templates_extensions-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "759b5f70fd8d4bef4b27fde6c4fe100e75c96eb50a1fd7ced510dd5f7aa4f8ef",
          "md5": "88d1ad48d381975684028446e3c49af7",
          "sha256": "bc11dd4158ea85f667e2557a344ca850f4857ac0e3930094cc925bf9b6b9c626"
        },
        "downloads": -1,
        "filename": "copier-templates-extensions-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "88d1ad48d381975684028446e3c49af7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<3.10",
        "size": 5439,
        "upload_time": "2021-03-29T07:17:07",
        "upload_time_iso_8601": "2021-03-29T07:17:07.189295Z",
        "url": "https://files.pythonhosted.org/packages/75/9b/5f70fd8d4bef4b27fde6c4fe100e75c96eb50a1fd7ced510dd5f7aa4f8ef/copier-templates-extensions-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca430dc7759216603be625296b1f1704fe42da9a19040dbf798f665c7477fadf",
          "md5": "4138e9f4a75d429453b7eb2ab6761cd2",
          "sha256": "1f623213be9684383623a009f5c2853f2361005d841b541e803fc0d10a5e5123"
        },
        "downloads": -1,
        "filename": "copier_templates_extensions-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4138e9f4a75d429453b7eb2ab6761cd2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<3.10",
        "size": 6083,
        "upload_time": "2021-03-29T20:48:16",
        "upload_time_iso_8601": "2021-03-29T20:48:16.929657Z",
        "url": "https://files.pythonhosted.org/packages/ca/43/0dc7759216603be625296b1f1704fe42da9a19040dbf798f665c7477fadf/copier_templates_extensions-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96d21dec1ddd72de6f651d74e3bb0a616d4ef225de5bff3da355ed56d2bb8e20",
          "md5": "aae108f68378aaf3828eca29109369b5",
          "sha256": "1adfbf65dc3b300f96506083c285a0f8df9dc65127a35c29cb32c4d2af040e13"
        },
        "downloads": -1,
        "filename": "copier-templates-extensions-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aae108f68378aaf3828eca29109369b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<3.10",
        "size": 5574,
        "upload_time": "2021-03-29T20:48:15",
        "upload_time_iso_8601": "2021-03-29T20:48:15.465402Z",
        "url": "https://files.pythonhosted.org/packages/96/d2/1dec1ddd72de6f651d74e3bb0a616d4ef225de5bff3da355ed56d2bb8e20/copier-templates-extensions-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1bce1f7df2dd20f6f517f57dc473413478cfb0f80d30ce764ef93dcb9b49a9d",
          "md5": "61d6ac93dc30085862e3af6c420aadfa",
          "sha256": "81db1260315afa541d808eca145f99d7042b4e1d4fa7e8efcb3db65bca3db7c6"
        },
        "downloads": -1,
        "filename": "copier_templates_extensions-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "61d6ac93dc30085862e3af6c420aadfa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<3.11",
        "size": 8002,
        "upload_time": "2021-12-27T12:05:01",
        "upload_time_iso_8601": "2021-12-27T12:05:01.655202Z",
        "url": "https://files.pythonhosted.org/packages/a1/bc/e1f7df2dd20f6f517f57dc473413478cfb0f80d30ce764ef93dcb9b49a9d/copier_templates_extensions-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef9ba339679f180293abe6a8f377e4dd4a784576597b9dbce8996229809b017b",
          "md5": "2dfe802d45e038914ff2cbfbbb540bac",
          "sha256": "e560e1b96c9f914fe0baaa294fbb4cdedc0e3522a61182fdebecb8e97fdc4831"
        },
        "downloads": -1,
        "filename": "copier-templates-extensions-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2dfe802d45e038914ff2cbfbbb540bac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<3.11",
        "size": 12640,
        "upload_time": "2021-12-27T12:05:03",
        "upload_time_iso_8601": "2021-12-27T12:05:03.357631Z",
        "url": "https://files.pythonhosted.org/packages/ef/9b/a339679f180293abe6a8f377e4dd4a784576597b9dbce8996229809b017b/copier-templates-extensions-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03937ebfcbe54410f2d43c8bb8bda1910f7d921b2d5efc52289718969ab0a63d",
          "md5": "068450be6a57ff5d140a200ce4e70224",
          "sha256": "733e709536e03768b1201c79525534d7fd153932cf764492a0396692e513f244"
        },
        "downloads": -1,
        "filename": "copier_templates_extensions-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "068450be6a57ff5d140a200ce4e70224",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7417,
        "upload_time": "2022-09-12T15:42:27",
        "upload_time_iso_8601": "2022-09-12T15:42:27.229437Z",
        "url": "https://files.pythonhosted.org/packages/03/93/7ebfcbe54410f2d43c8bb8bda1910f7d921b2d5efc52289718969ab0a63d/copier_templates_extensions-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac0d3e047d28ffe6712e6936a72d8ae288a0e24e7995c645b011db82edb7fb3b",
          "md5": "ffd177b2eba2b18e64d2c87545c31030",
          "sha256": "48b3f5213ee913b931df40e4e9325b58b9c9a741f1052a7da1b247ed991f5150"
        },
        "downloads": -1,
        "filename": "copier-templates-extensions-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ffd177b2eba2b18e64d2c87545c31030",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12113,
        "upload_time": "2022-09-12T15:42:29",
        "upload_time_iso_8601": "2022-09-12T15:42:29.588525Z",
        "url": "https://files.pythonhosted.org/packages/ac/0d/3e047d28ffe6712e6936a72d8ae288a0e24e7995c645b011db82edb7fb3b/copier-templates-extensions-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03937ebfcbe54410f2d43c8bb8bda1910f7d921b2d5efc52289718969ab0a63d",
        "md5": "068450be6a57ff5d140a200ce4e70224",
        "sha256": "733e709536e03768b1201c79525534d7fd153932cf764492a0396692e513f244"
      },
      "downloads": -1,
      "filename": "copier_templates_extensions-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "068450be6a57ff5d140a200ce4e70224",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7417,
      "upload_time": "2022-09-12T15:42:27",
      "upload_time_iso_8601": "2022-09-12T15:42:27.229437Z",
      "url": "https://files.pythonhosted.org/packages/03/93/7ebfcbe54410f2d43c8bb8bda1910f7d921b2d5efc52289718969ab0a63d/copier_templates_extensions-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac0d3e047d28ffe6712e6936a72d8ae288a0e24e7995c645b011db82edb7fb3b",
        "md5": "ffd177b2eba2b18e64d2c87545c31030",
        "sha256": "48b3f5213ee913b931df40e4e9325b58b9c9a741f1052a7da1b247ed991f5150"
      },
      "downloads": -1,
      "filename": "copier-templates-extensions-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ffd177b2eba2b18e64d2c87545c31030",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 12113,
      "upload_time": "2022-09-12T15:42:29",
      "upload_time_iso_8601": "2022-09-12T15:42:29.588525Z",
      "url": "https://files.pythonhosted.org/packages/ac/0d/3e047d28ffe6712e6936a72d8ae288a0e24e7995c645b011db82edb7fb3b/copier-templates-extensions-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}