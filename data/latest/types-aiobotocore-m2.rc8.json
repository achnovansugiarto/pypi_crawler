{
  "info": {
    "author": "Vlad Emelianov",
    "author_email": "vlad.emelianov.nz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Typing :: Typed"
    ],
    "description": "<a id=\"types-aiobotocore-m2\"></a>\n\n# types-aiobotocore-m2\n\n[![PyPI - types-aiobotocore-m2](https://img.shields.io/pypi/v/types-aiobotocore-m2.svg?color=blue)](https://pypi.org/project/types-aiobotocore-m2)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/types-aiobotocore-m2.svg?color=blue)](https://pypi.org/project/types-aiobotocore-m2)\n[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/types-aiobotocore-m2?color=blue)](https://pypistats.org/packages/types-aiobotocore-m2)\n\n![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)\n\nType annotations for\n[aiobotocore.MainframeModernization 2.5.0](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/m2.html#MainframeModernization)\nservice compatible with [VSCode](https://code.visualstudio.com/),\n[PyCharm](https://www.jetbrains.com/pycharm/),\n[Emacs](https://www.gnu.org/software/emacs/),\n[Sublime Text](https://www.sublimetext.com/),\n[mypy](https://github.com/python/mypy),\n[pyright](https://github.com/microsoft/pyright) and other tools.\n\nGenerated by\n[mypy-boto3-builder 7.13.0](https://github.com/youtype/mypy_boto3_builder).\n\nMore information can be found on\n[types-aiobotocore](https://pypi.org/project/types-aiobotocore/) page and in\n[types-aiobotocore-m2 docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_m2/).\n\nSee how it helps to find and fix potential bugs:\n\n![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)\n\n- [types-aiobotocore-m2](#types-aiobotocore-m2)\n  - [How to install](#how-to-install)\n    - [From PyPI with pip](#from-pypi-with-pip)\n  - [How to uninstall](#how-to-uninstall)\n  - [Usage](#usage)\n    - [VSCode](#vscode)\n    - [PyCharm](#pycharm)\n    - [Emacs](#emacs)\n    - [Sublime Text](#sublime-text)\n    - [Other IDEs](#other-ides)\n    - [mypy](#mypy)\n    - [pyright](#pyright)\n  - [Explicit type annotations](#explicit-type-annotations)\n    - [Client annotations](#client-annotations)\n    - [Paginators annotations](#paginators-annotations)\n    - [Literals](#literals)\n    - [Typed dictionaries](#typed-dictionaries)\n  - [How it works](#how-it-works)\n  - [What's new](#what's-new)\n    - [Implemented features](#implemented-features)\n    - [Latest changes](#latest-changes)\n  - [Versioning](#versioning)\n  - [Thank you](#thank-you)\n  - [Documentation](#documentation)\n  - [Support and contributing](#support-and-contributing)\n\n<a id=\"how-to-install\"></a>\n\n## How to install\n\n<a id=\"from-pypi-with-pip\"></a>\n\n### From PyPI with pip\n\nInstall `types-aiobotocore` for `MainframeModernization` service.\n\n```bash\n# install with aiobotocore type annotations\npython -m pip install 'types-aiobotocore[m2]'\n\n\n# Lite version does not provide session.client/resource overloads\n# it is more RAM-friendly, but requires explicit type annotations\npython -m pip install 'types-aiobotocore-lite[m2]'\n\n\n# standalone installation\npython -m pip install types-aiobotocore-m2\n```\n\n<a id=\"how-to-uninstall\"></a>\n\n## How to uninstall\n\n```bash\npython -m pip uninstall -y types-aiobotocore-m2\n```\n\n<a id=\"usage\"></a>\n\n## Usage\n\n<a id=\"vscode\"></a>\n\n### VSCode\n\n- Install\n  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n- Install\n  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)\n- Set `Pylance` as your Python Language Server\n- Install `types-aiobotocore[m2]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[m2]'\n```\n\nBoth type checking and code completion should now work. No explicit type\nannotations required, write your `aiobotocore` code as usual.\n\n<a id=\"pycharm\"></a>\n\n### PyCharm\n\nInstall `types-aiobotocore-lite[m2]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore-lite[m2]'`\n```\n\nBoth type checking and code completion should now work. Explicit type\nannotations **are required**.\n\nUse `types-aiobotocore` package instead for implicit type discovery.\n\n<a id=\"emacs\"></a>\n\n### Emacs\n\n- Install `types-aiobotocore` with services you use in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[m2]'\n```\n\n- Install [use-package](https://github.com/jwiegley/use-package),\n  [lsp](https://github.com/emacs-lsp/lsp-mode/),\n  [company](https://github.com/company-mode/company-mode) and\n  [flycheck](https://github.com/flycheck/flycheck) packages\n- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package\n\n```elisp\n(use-package lsp-pyright\n  :ensure t\n  :hook (python-mode . (lambda ()\n                          (require 'lsp-pyright)\n                          (lsp)))  ; or lsp-deferred\n  :init (when (executable-find \"python3\")\n          (setq lsp-pyright-python-executable-cmd \"python3\"))\n  )\n```\n\n- Make sure emacs uses the environment where you have installed\n  `types-aiobotocore`\n\nType checking should now work. No explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"sublime-text\"></a>\n\n### Sublime Text\n\n- Install `types-aiobotocore[m2]` with services you use in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[m2]'\n```\n\n- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package\n\nType checking should now work. No explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"other-ides\"></a>\n\n### Other IDEs\n\nNot tested, but as long as your IDE supports `mypy` or `pyright`, everything\nshould work.\n\n<a id=\"mypy\"></a>\n\n### mypy\n\n- Install `mypy`: `python -m pip install mypy`\n- Install `types-aiobotocore[m2]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[m2]'`\n```\n\nType checking should now work. No explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"pyright\"></a>\n\n### pyright\n\n- Install `pyright`: `npm i -g pyright`\n- Install `types-aiobotocore[m2]` in your environment:\n\n```bash\npython -m pip install 'types-aiobotocore[m2]'\n```\n\nOptionally, you can install `types-aiobotocore` to `typings` folder.\n\nType checking should now work. No explicit type annotations required, write\nyour `aiobotocore` code as usual.\n\n<a id=\"explicit-type-annotations\"></a>\n\n## Explicit type annotations\n\n<a id=\"client-annotations\"></a>\n\n### Client annotations\n\n`MainframeModernizationClient` provides annotations for\n`session.create_client(\"m2\")`.\n\n```python\nfrom aiobotocore.session import get_session\n\nfrom types_aiobotocore_m2 import MainframeModernizationClient\n\nsession = get_session()\nasync with session.create_client(\"m2\") as client:\n    client: MainframeModernizationClient\n    # now client usage is checked by mypy and IDE should provide code completion\n```\n\n<a id=\"paginators-annotations\"></a>\n\n### Paginators annotations\n\n`types_aiobotocore_m2.paginator` module contains type annotations for all\npaginators.\n\n```python\nfrom aiobotocore.session import get_session\n\nfrom types_aiobotocore_m2 import MainframeModernizationClient\nfrom types_aiobotocore_m2.paginator import (\n    ListApplicationVersionsPaginator,\n    ListApplicationsPaginator,\n    ListBatchJobDefinitionsPaginator,\n    ListBatchJobExecutionsPaginator,\n    ListDataSetImportHistoryPaginator,\n    ListDataSetsPaginator,\n    ListDeploymentsPaginator,\n    ListEngineVersionsPaginator,\n    ListEnvironmentsPaginator,\n)\n\nsession = get_session()\nasync with session.create_client(\"m2\") as client:\n    client: MainframeModernizationClient\n\n    # Explicit type annotations are optional here\n    # Types should be correctly discovered by mypy and IDEs\n    list_application_versions_paginator: ListApplicationVersionsPaginator = client.get_paginator(\n        \"list_application_versions\"\n    )\n    list_applications_paginator: ListApplicationsPaginator = client.get_paginator(\n        \"list_applications\"\n    )\n    list_batch_job_definitions_paginator: ListBatchJobDefinitionsPaginator = client.get_paginator(\n        \"list_batch_job_definitions\"\n    )\n    list_batch_job_executions_paginator: ListBatchJobExecutionsPaginator = client.get_paginator(\n        \"list_batch_job_executions\"\n    )\n    list_data_set_import_history_paginator: ListDataSetImportHistoryPaginator = (\n        client.get_paginator(\"list_data_set_import_history\")\n    )\n    list_data_sets_paginator: ListDataSetsPaginator = client.get_paginator(\"list_data_sets\")\n    list_deployments_paginator: ListDeploymentsPaginator = client.get_paginator(\"list_deployments\")\n    list_engine_versions_paginator: ListEngineVersionsPaginator = client.get_paginator(\n        \"list_engine_versions\"\n    )\n    list_environments_paginator: ListEnvironmentsPaginator = client.get_paginator(\n        \"list_environments\"\n    )\n```\n\n<a id=\"literals\"></a>\n\n### Literals\n\n`types_aiobotocore_m2.literals` module contains literals extracted from shapes\nthat can be used in user code for type checking.\n\n```python\nfrom types_aiobotocore_m2.literals import (\n    ApplicationDeploymentLifecycleType,\n    ApplicationLifecycleType,\n    ApplicationVersionLifecycleType,\n    BatchJobExecutionStatusType,\n    BatchJobTypeType,\n    DataSetTaskLifecycleType,\n    DeploymentLifecycleType,\n    EngineTypeType,\n    EnvironmentLifecycleType,\n    ListApplicationVersionsPaginatorName,\n    ListApplicationsPaginatorName,\n    ListBatchJobDefinitionsPaginatorName,\n    ListBatchJobExecutionsPaginatorName,\n    ListDataSetImportHistoryPaginatorName,\n    ListDataSetsPaginatorName,\n    ListDeploymentsPaginatorName,\n    ListEngineVersionsPaginatorName,\n    ListEnvironmentsPaginatorName,\n    MainframeModernizationServiceName,\n    ServiceName,\n    ResourceServiceName,\n    PaginatorName,\n    RegionName,\n)\n\n\ndef check_value(value: ApplicationDeploymentLifecycleType) -> bool:\n    ...\n```\n\n<a id=\"typed-dictionaries\"></a>\n\n### Typed dictionaries\n\n`types_aiobotocore_m2.type_defs` module contains structures and shapes\nassembled to typed dictionaries for additional type checking.\n\n```python\nfrom types_aiobotocore_m2.type_defs import (\n    AlternateKeyTypeDef,\n    ApplicationSummaryTypeDef,\n    ApplicationVersionSummaryTypeDef,\n    FileBatchJobDefinitionTypeDef,\n    ScriptBatchJobDefinitionTypeDef,\n    FileBatchJobIdentifierTypeDef,\n    ScriptBatchJobIdentifierTypeDef,\n    CancelBatchJobExecutionRequestRequestTypeDef,\n    DefinitionTypeDef,\n    ResponseMetadataTypeDef,\n    CreateDeploymentRequestRequestTypeDef,\n    HighAvailabilityConfigTypeDef,\n    ExternalLocationTypeDef,\n    DataSetImportSummaryTypeDef,\n    DataSetSummaryTypeDef,\n    RecordLengthTypeDef,\n    GdgDetailAttributesTypeDef,\n    GdgAttributesTypeDef,\n    DeleteApplicationFromEnvironmentRequestRequestTypeDef,\n    DeleteApplicationRequestRequestTypeDef,\n    DeleteEnvironmentRequestRequestTypeDef,\n    DeployedVersionSummaryTypeDef,\n    DeploymentSummaryTypeDef,\n    EfsStorageConfigurationTypeDef,\n    EngineVersionsSummaryTypeDef,\n    EnvironmentSummaryTypeDef,\n    FsxStorageConfigurationTypeDef,\n    GetApplicationRequestRequestTypeDef,\n    LogGroupSummaryTypeDef,\n    GetApplicationVersionRequestRequestTypeDef,\n    GetBatchJobExecutionRequestRequestTypeDef,\n    GetDataSetDetailsRequestRequestTypeDef,\n    GetDataSetImportTaskRequestRequestTypeDef,\n    GetDeploymentRequestRequestTypeDef,\n    GetEnvironmentRequestRequestTypeDef,\n    PaginatorConfigTypeDef,\n    ListApplicationVersionsRequestRequestTypeDef,\n    ListApplicationsRequestRequestTypeDef,\n    ListBatchJobDefinitionsRequestRequestTypeDef,\n    ListBatchJobExecutionsRequestRequestTypeDef,\n    ListDataSetImportHistoryRequestRequestTypeDef,\n    ListDataSetsRequestRequestTypeDef,\n    ListDeploymentsRequestRequestTypeDef,\n    ListEngineVersionsRequestRequestTypeDef,\n    ListEnvironmentsRequestRequestTypeDef,\n    ListTagsForResourceRequestRequestTypeDef,\n    MaintenanceScheduleTypeDef,\n    PrimaryKeyTypeDef,\n    StartApplicationRequestRequestTypeDef,\n    StopApplicationRequestRequestTypeDef,\n    TagResourceRequestRequestTypeDef,\n    UntagResourceRequestRequestTypeDef,\n    UpdateEnvironmentRequestRequestTypeDef,\n    BatchJobDefinitionTypeDef,\n    BatchJobIdentifierTypeDef,\n    CreateApplicationRequestRequestTypeDef,\n    UpdateApplicationRequestRequestTypeDef,\n    CreateApplicationResponseTypeDef,\n    CreateDataSetImportTaskResponseTypeDef,\n    CreateDeploymentResponseTypeDef,\n    CreateEnvironmentResponseTypeDef,\n    GetApplicationVersionResponseTypeDef,\n    GetDeploymentResponseTypeDef,\n    ListApplicationVersionsResponseTypeDef,\n    ListApplicationsResponseTypeDef,\n    ListTagsForResourceResponseTypeDef,\n    StartBatchJobResponseTypeDef,\n    UpdateApplicationResponseTypeDef,\n    UpdateEnvironmentResponseTypeDef,\n    DataSetImportTaskTypeDef,\n    GetDataSetImportTaskResponseTypeDef,\n    ListDataSetsResponseTypeDef,\n    ListDeploymentsResponseTypeDef,\n    ListEngineVersionsResponseTypeDef,\n    ListEnvironmentsResponseTypeDef,\n    StorageConfigurationTypeDef,\n    GetApplicationResponseTypeDef,\n    ListApplicationVersionsRequestListApplicationVersionsPaginateTypeDef,\n    ListApplicationsRequestListApplicationsPaginateTypeDef,\n    ListBatchJobDefinitionsRequestListBatchJobDefinitionsPaginateTypeDef,\n    ListBatchJobExecutionsRequestListBatchJobExecutionsPaginateTypeDef,\n    ListDataSetImportHistoryRequestListDataSetImportHistoryPaginateTypeDef,\n    ListDataSetsRequestListDataSetsPaginateTypeDef,\n    ListDeploymentsRequestListDeploymentsPaginateTypeDef,\n    ListEngineVersionsRequestListEngineVersionsPaginateTypeDef,\n    ListEnvironmentsRequestListEnvironmentsPaginateTypeDef,\n    PendingMaintenanceTypeDef,\n    VsamAttributesTypeDef,\n    VsamDetailAttributesTypeDef,\n    ListBatchJobDefinitionsResponseTypeDef,\n    BatchJobExecutionSummaryTypeDef,\n    GetBatchJobExecutionResponseTypeDef,\n    StartBatchJobRequestRequestTypeDef,\n    ListDataSetImportHistoryResponseTypeDef,\n    CreateEnvironmentRequestRequestTypeDef,\n    GetEnvironmentResponseTypeDef,\n    DatasetOrgAttributesTypeDef,\n    DatasetDetailOrgAttributesTypeDef,\n    ListBatchJobExecutionsResponseTypeDef,\n    DataSetTypeDef,\n    GetDataSetDetailsResponseTypeDef,\n    DataSetImportItemTypeDef,\n    DataSetImportConfigTypeDef,\n    CreateDataSetImportTaskRequestRequestTypeDef,\n)\n\n\ndef get_structure() -> AlternateKeyTypeDef:\n    return {...}\n```\n\n<a id=\"how-it-works\"></a>\n\n## How it works\n\nFully automated\n[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully\ngenerates type annotations for each service, patiently waiting for\n`aiobotocore` updates. It delivers a drop-in type annotations for you and makes\nsure that:\n\n- All available `aiobotocore` services are covered.\n- Each public class and method of every `aiobotocore` service gets valid type\n  annotations extracted from the documentation (blame `botocore` docs if types\n  are incorrect).\n- Type annotations include up-to-date documentation.\n- Link to documentation is provided for every method.\n- Code is processed by [black](https://github.com/psf/black) and\n  [isort](https://github.com/PyCQA/isort) for readability.\n\n<a id=\"what's-new\"></a>\n\n## What's new\n\n<a id=\"implemented-features\"></a>\n\n### Implemented features\n\n- Fully type annotated `boto3`, `botocore` and `aiobotocore` libraries\n- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`\n  compatibility\n- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type\n  annotations for each service\n- Generated `TypeDefs` for each service\n- Generated `Literals` for each service\n- Auto discovery of types for `boto3.client` and `boto3.session` calls\n- Auto discovery of types for `session.client` and `session.session` calls\n- Auto discovery of types for `client.get_waiter` and `client.get_paginator`\n  calls\n- Auto discovery of types for `ServiceResource` and `Resource` collections\n- Auto discovery of types for `aiobotocore.Session.create_client` calls\n\n<a id=\"latest-changes\"></a>\n\n### Latest changes\n\nBuilder changelog can be found in\n[Releases](https://github.com/youtype/mypy_boto3_builder/releases).\n\n<a id=\"versioning\"></a>\n\n## Versioning\n\n`types-aiobotocore-m2` version is the same as related `aiobotocore` version and\nfollows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.\n\n<a id=\"thank-you\"></a>\n\n## Thank you\n\n- [Allie Fitter](https://github.com/alliefitter) for\n  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),\n  this package is based on top of his work\n- [black](https://github.com/psf/black) developers for an awesome formatting\n  tool\n- [Timothy Edmund Crosley](https://github.com/timothycrosley) for\n  [isort](https://github.com/PyCQA/isort) and how flexible it is\n- [mypy](https://github.com/python/mypy) developers for doing all dirty work\n  for us\n- [pyright](https://github.com/microsoft/pyright) team for the new era of typed\n  Python\n\n<a id=\"documentation\"></a>\n\n## Documentation\n\nAll services type annotations can be found in\n[aiobotocore docs](https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_m2/)\n\n<a id=\"support-and-contributing\"></a>\n\n## Support and contributing\n\nThis package is auto-generated. Please reports any bugs or request new features\nin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)\nrepository.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/youtype/mypy_boto3_builder",
    "keywords": "aiobotocore m2 type-annotations boto3-stubs mypy typeshed autocomplete",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "types-aiobotocore-m2",
    "package_url": "https://pypi.org/project/types-aiobotocore-m2/",
    "platform": null,
    "project_url": "https://pypi.org/project/types-aiobotocore-m2/",
    "project_urls": {
      "Documentation": "https://youtype.github.io/types_aiobotocore_docs/types_aiobotocore_m2/",
      "Homepage": "https://github.com/youtype/mypy_boto3_builder",
      "Source": "https://github.com/youtype/mypy_boto3_builder",
      "Tracker": "https://github.com/youtype/mypy_boto3_builder/issues"
    },
    "release_url": "https://pypi.org/project/types-aiobotocore-m2/2.5.0.post1/",
    "requires_dist": [
      "typing-extensions (>=4.1.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Type annotations for aiobotocore.MainframeModernization 2.5.0 service generated with mypy-boto3-builder 7.13.0",
    "version": "2.5.0.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17252802,
  "releases": {
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e0db7d27d0636f2fc147399b9e060e6dac9e3d63598eb499b57b747b1d0421c",
          "md5": "47914a51b05d4f613f1862b22751020c",
          "sha256": "1184f1f91e794b91a26bb956c42c2eca0158821db81c8e8856c422758b458000"
        },
        "downloads": -1,
        "filename": "types_aiobotocore_m2-2.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47914a51b05d4f613f1862b22751020c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 33520,
        "upload_time": "2022-08-26T02:18:12",
        "upload_time_iso_8601": "2022-08-26T02:18:12.747484Z",
        "url": "https://files.pythonhosted.org/packages/2e/0d/b7d27d0636f2fc147399b9e060e6dac9e3d63598eb499b57b747b1d0421c/types_aiobotocore_m2-2.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bba76ef720a0932f0180b9e2fda6a506ed1fff795df540cd19979680d6d79331",
          "md5": "e3b6541824c740abdcb6f6575c96e0cd",
          "sha256": "daf559a421b10281d710c80bbf0f8ff136ec0ef55ec07fa53bbe9d860ef47b22"
        },
        "downloads": -1,
        "filename": "types-aiobotocore-m2-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3b6541824c740abdcb6f6575c96e0cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27139,
        "upload_time": "2022-08-26T02:18:15",
        "upload_time_iso_8601": "2022-08-26T02:18:15.998539Z",
        "url": "https://files.pythonhosted.org/packages/bb/a7/6ef720a0932f0180b9e2fda6a506ed1fff795df540cd19979680d6d79331/types-aiobotocore-m2-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8864995c299290dfb8b6cadbdaaab7a726e85e170808e39e97f186e69e0918f3",
          "md5": "35c4836246a4f06a2c616f5d59df48dd",
          "sha256": "055a59001e0cc6dcf417ec9b510fba9ece54f40c818c49d3839572e4df3c1b7b"
        },
        "downloads": -1,
        "filename": "types_aiobotocore_m2-2.4.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35c4836246a4f06a2c616f5d59df48dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 33602,
        "upload_time": "2022-09-27T14:04:06",
        "upload_time_iso_8601": "2022-09-27T14:04:06.320847Z",
        "url": "https://files.pythonhosted.org/packages/88/64/995c299290dfb8b6cadbdaaab7a726e85e170808e39e97f186e69e0918f3/types_aiobotocore_m2-2.4.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2d72167a7c508906473aac9222711377f7692b8234e39e4d070d0e8f6e89d1e",
          "md5": "2bca3bc9cf5721fb230d764b152aa791",
          "sha256": "c9efb41ea57f2c2bc498aa4e0f83e5f0ef4aef5a41a08734ca9d2af978eb6e60"
        },
        "downloads": -1,
        "filename": "types-aiobotocore-m2-2.4.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "2bca3bc9cf5721fb230d764b152aa791",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27202,
        "upload_time": "2022-09-27T14:04:16",
        "upload_time_iso_8601": "2022-09-27T14:04:16.032887Z",
        "url": "https://files.pythonhosted.org/packages/f2/d7/2167a7c508906473aac9222711377f7692b8234e39e4d070d0e8f6e89d1e/types-aiobotocore-m2-2.4.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "169d1d9ba97107c99661f7f9ca4092ef228f4e14ae1de5cefd567797ec746fe7",
          "md5": "27a1897df811d11538bd72325e59a3c9",
          "sha256": "c7cfaf8d71e541b36c4e779d2e8b0373a47f68a739c8fbc3d2aa2803cbe86e8d"
        },
        "downloads": -1,
        "filename": "types_aiobotocore_m2-2.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27a1897df811d11538bd72325e59a3c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 33519,
        "upload_time": "2022-11-30T01:35:52",
        "upload_time_iso_8601": "2022-11-30T01:35:52.810196Z",
        "url": "https://files.pythonhosted.org/packages/16/9d/1d9ba97107c99661f7f9ca4092ef228f4e14ae1de5cefd567797ec746fe7/types_aiobotocore_m2-2.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0d3e57d738f344a8bf6f7f54a03367d791a297564d551939c24d82c80da5aa6",
          "md5": "deae6de618638e7328ab6691bda93f4a",
          "sha256": "52aa3be6a06f8fec996dd061bfe80e5de0c8d47f412c21c7917501da449b7009"
        },
        "downloads": -1,
        "filename": "types-aiobotocore-m2-2.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "deae6de618638e7328ab6691bda93f4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27160,
        "upload_time": "2022-11-30T01:36:01",
        "upload_time_iso_8601": "2022-11-30T01:36:01.381563Z",
        "url": "https://files.pythonhosted.org/packages/d0/d3/e57d738f344a8bf6f7f54a03367d791a297564d551939c24d82c80da5aa6/types-aiobotocore-m2-2.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6d7dcacf701be11d8157d248d0ce496c226539fcbfe991d7d310f2692d3b93e",
          "md5": "6882372379261f7894bd7da3eecc41d2",
          "sha256": "df43419d8beeb9a92ebe24cebb67e9c47747d13e0e5405431cd4d74892840cac"
        },
        "downloads": -1,
        "filename": "types_aiobotocore_m2-2.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6882372379261f7894bd7da3eecc41d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 33520,
        "upload_time": "2022-12-23T01:27:10",
        "upload_time_iso_8601": "2022-12-23T01:27:10.793607Z",
        "url": "https://files.pythonhosted.org/packages/c6/d7/dcacf701be11d8157d248d0ce496c226539fcbfe991d7d310f2692d3b93e/types_aiobotocore_m2-2.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6390549a9d728586957b2106754f57bb45c8bc5d23905415c2e661857276d2b",
          "md5": "a9da005efbdaa17741489b79cc4e6903",
          "sha256": "6d033c9dd9d0c39ac8f47dd7fe33fdc0ec7a7f0a03f5bc90b20e3a3cd2922cc4"
        },
        "downloads": -1,
        "filename": "types-aiobotocore-m2-2.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a9da005efbdaa17741489b79cc4e6903",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27158,
        "upload_time": "2022-12-23T01:27:15",
        "upload_time_iso_8601": "2022-12-23T01:27:15.735244Z",
        "url": "https://files.pythonhosted.org/packages/d6/39/0549a9d728586957b2106754f57bb45c8bc5d23905415c2e661857276d2b/types-aiobotocore-m2-2.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.2.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0ef4f7696598535efb3eb4ed1140797fc5c0b7719714c465ccac5fc0d6d4b5e",
          "md5": "1135e3ad785f0a6463a4c5fe3cd2f7d6",
          "sha256": "936e52b2295a214de87caadc0d43aae8183d0e76e3b080bb28245c05ca4287d4"
        },
        "downloads": -1,
        "filename": "types_aiobotocore_m2-2.4.2.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1135e3ad785f0a6463a4c5fe3cd2f7d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 33603,
        "upload_time": "2023-03-01T18:21:59",
        "upload_time_iso_8601": "2023-03-01T18:21:59.062559Z",
        "url": "https://files.pythonhosted.org/packages/d0/ef/4f7696598535efb3eb4ed1140797fc5c0b7719714c465ccac5fc0d6d4b5e/types_aiobotocore_m2-2.4.2.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43e67467d6d9ffbd537b3ba66100c8d484b01a1a3c8c2e3eb339ddef89f11ea9",
          "md5": "a47e9a4479f1369d352960d481931d0e",
          "sha256": "75e60d9e8083051dbee11baba80f2dc3b842745a5762a47b2323657f60cf28d4"
        },
        "downloads": -1,
        "filename": "types-aiobotocore-m2-2.4.2.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "a47e9a4479f1369d352960d481931d0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27159,
        "upload_time": "2023-03-01T18:22:27",
        "upload_time_iso_8601": "2023-03-01T18:22:27.390400Z",
        "url": "https://files.pythonhosted.org/packages/43/e6/7467d6d9ffbd537b3ba66100c8d484b01a1a3c8c2e3eb339ddef89f11ea9/types-aiobotocore-m2-2.4.2.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.2.post3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3111500301c3aa7c1f4e78ec4c8bc3980854e26816cd1680d689cd0378504b1f",
          "md5": "e3124636b8716df407737fed45a5696e",
          "sha256": "ed013ab5839791180f88dd61c0c384d959e7600807dfe8ecf44404c48338a749"
        },
        "downloads": -1,
        "filename": "types_aiobotocore_m2-2.4.2.post3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3124636b8716df407737fed45a5696e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 33608,
        "upload_time": "2023-03-11T13:11:36",
        "upload_time_iso_8601": "2023-03-11T13:11:36.210509Z",
        "url": "https://files.pythonhosted.org/packages/31/11/500301c3aa7c1f4e78ec4c8bc3980854e26816cd1680d689cd0378504b1f/types_aiobotocore_m2-2.4.2.post3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a7e97c0e4708ce7199a04d7b98f305ecd19fd993d486e2d9b37704dd30b5382",
          "md5": "2c2a99ff3c15c7a5d4ad7b54a0ae7fa5",
          "sha256": "a1db05d3ece6885bb97ff1a620bff06948b2dc2acfbbb129ccbb070c978b22bb"
        },
        "downloads": -1,
        "filename": "types-aiobotocore-m2-2.4.2.post3.tar.gz",
        "has_sig": false,
        "md5_digest": "2c2a99ff3c15c7a5d4ad7b54a0ae7fa5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27160,
        "upload_time": "2023-03-11T13:11:41",
        "upload_time_iso_8601": "2023-03-11T13:11:41.752137Z",
        "url": "https://files.pythonhosted.org/packages/9a/7e/97c0e4708ce7199a04d7b98f305ecd19fd993d486e2d9b37704dd30b5382/types-aiobotocore-m2-2.4.2.post3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb8f9c6bb9ad6cc240b1d4b9625fbcdd8d1f1751b91b96515518819cddf6672f",
          "md5": "c469d6a8b9809137c855008281b8b1f8",
          "sha256": "09b8263b70c10d539d3c88aa6c60d0ea9c984e0707e9e45a3f8435fa36aeb13e"
        },
        "downloads": -1,
        "filename": "types_aiobotocore_m2-2.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c469d6a8b9809137c855008281b8b1f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 33990,
        "upload_time": "2023-03-08T01:44:23",
        "upload_time_iso_8601": "2023-03-08T01:44:23.071476Z",
        "url": "https://files.pythonhosted.org/packages/fb/8f/9c6bb9ad6cc240b1d4b9625fbcdd8d1f1751b91b96515518819cddf6672f/types_aiobotocore_m2-2.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b802084c859ba25c71a98e85eed6fc30ff4cd942e1cc77b0d076519436e653a2",
          "md5": "775532d967811dd3231cc8998be6d57b",
          "sha256": "faf6b616af96dfab62b71524cc85a0e9f940ccb774c5e82f371e2ffd22bb2d3e"
        },
        "downloads": -1,
        "filename": "types-aiobotocore-m2-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "775532d967811dd3231cc8998be6d57b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27475,
        "upload_time": "2023-03-08T01:44:28",
        "upload_time_iso_8601": "2023-03-08T01:44:28.929528Z",
        "url": "https://files.pythonhosted.org/packages/b8/02/084c859ba25c71a98e85eed6fc30ff4cd942e1cc77b0d076519436e653a2/types-aiobotocore-m2-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23bce2d27bb9d9b313a4ec22b3f972e325dfe4f99c3b077a8049e17412aa645f",
          "md5": "02f5cdb3aa3b9968b5fa099dc4dc2a27",
          "sha256": "535844dd2bce554d4568c04f1fd48d0fdcdc54b7cb3455e91690ca78e1bd8890"
        },
        "downloads": -1,
        "filename": "types_aiobotocore_m2-2.5.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02f5cdb3aa3b9968b5fa099dc4dc2a27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 34076,
        "upload_time": "2023-03-11T12:33:38",
        "upload_time_iso_8601": "2023-03-11T12:33:38.639636Z",
        "url": "https://files.pythonhosted.org/packages/23/bc/e2d27bb9d9b313a4ec22b3f972e325dfe4f99c3b077a8049e17412aa645f/types_aiobotocore_m2-2.5.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e182ea6ada94b258c671a434d73b44c657610e7e7df0690ef4bb1e04ad32f83e",
          "md5": "44ce04cd25487a5c5c3a616a71cd60b5",
          "sha256": "ea1bbe584873537009b661447a58076da7aed7a361c1afaed252a16acebba34d"
        },
        "downloads": -1,
        "filename": "types-aiobotocore-m2-2.5.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "44ce04cd25487a5c5c3a616a71cd60b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 27488,
        "upload_time": "2023-03-11T12:33:41",
        "upload_time_iso_8601": "2023-03-11T12:33:41.979028Z",
        "url": "https://files.pythonhosted.org/packages/e1/82/ea6ada94b258c671a434d73b44c657610e7e7df0690ef4bb1e04ad32f83e/types-aiobotocore-m2-2.5.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23bce2d27bb9d9b313a4ec22b3f972e325dfe4f99c3b077a8049e17412aa645f",
        "md5": "02f5cdb3aa3b9968b5fa099dc4dc2a27",
        "sha256": "535844dd2bce554d4568c04f1fd48d0fdcdc54b7cb3455e91690ca78e1bd8890"
      },
      "downloads": -1,
      "filename": "types_aiobotocore_m2-2.5.0.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "02f5cdb3aa3b9968b5fa099dc4dc2a27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 34076,
      "upload_time": "2023-03-11T12:33:38",
      "upload_time_iso_8601": "2023-03-11T12:33:38.639636Z",
      "url": "https://files.pythonhosted.org/packages/23/bc/e2d27bb9d9b313a4ec22b3f972e325dfe4f99c3b077a8049e17412aa645f/types_aiobotocore_m2-2.5.0.post1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e182ea6ada94b258c671a434d73b44c657610e7e7df0690ef4bb1e04ad32f83e",
        "md5": "44ce04cd25487a5c5c3a616a71cd60b5",
        "sha256": "ea1bbe584873537009b661447a58076da7aed7a361c1afaed252a16acebba34d"
      },
      "downloads": -1,
      "filename": "types-aiobotocore-m2-2.5.0.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "44ce04cd25487a5c5c3a616a71cd60b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 27488,
      "upload_time": "2023-03-11T12:33:41",
      "upload_time_iso_8601": "2023-03-11T12:33:41.979028Z",
      "url": "https://files.pythonhosted.org/packages/e1/82/ea6ada94b258c671a434d73b44c657610e7e7df0690ef4bb1e04ad32f83e/types-aiobotocore-m2-2.5.0.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}