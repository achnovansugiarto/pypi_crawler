{
  "info": {
    "author": "Mutlu",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Heroku3.py\n==========\n\n.. image:: https://img.shields.io/pypi/v/heroku3.svg\n   :target: https://pypi.org/project/heroku3\n\n.. image:: https://circleci.com/gh/martyzz1/heroku3.py.svg?style=svg\n   :target: https://circleci.com/gh/martyzz1/heroku3.py\n\n.. image:: https://coveralls.io/repos/github/martyzz1/heroku3.py/badge.svg?branch=master\n   :target: https://coveralls.io/github/martyzz1/heroku3.py?branch=master\n\n.. image:: https://img.shields.io/pypi/pyversions/setuptools.svg\n\nThis is the updated Python wrapper for the Heroku `API V3. <https://devcenter.heroku.com/articles/platform-api-reference>`_\nThe Heroku REST API allows Heroku users to manage their accounts, applications, addons, and\nother aspects related to Heroku. It allows you to easily utilize the Heroku\nplatform from your applications.\n\nIntroduction\n============\n\nFirst instantiate a heroku_conn as above::\n\n    import heroku3\n    heroku_conn = heroku3.from_key('YOUR_API_KEY')\n\nInteract with your applications::\n\n    >>> heroku_conn.apps()\n    [<app 'sharp-night-7758'>, <app 'empty-spring-4049'>, ...]\n\n    >>> app = heroku_conn.apps()['sharp-night-7758']\n\nGeneral notes on Debugging\n--------------------------\n\nHeroku provides some useful debugging information. This code exposes the following\n\nRatelimit Remaining\n~~~~~~~~~~~~~~~~~~~\n\nGet the current ratelimit remaining::\n\n    num = heroku_conn.ratelimit_remaining()\n\nLast Request Id\n~~~~~~~~~~~~~~~\n\nGet the unique ID of the last request sent to heroku to give them for debugging::\n\n    id = heroku_conn.last_request_id\n\nGeneral notes about list Objects\n--------------------------------\n\nThe new heroku3 API gives greater control over the interaction of the returned data. Primarily this\ncentres around calls to the api which result in list objects being returned.\ne.g. multiple objects like apps, addons, releases etc.\n\nThroughout the docs you'll see references to using limit & order_by. Wherever you see these, you *should* be able to use *limit*, *order_by*, *sort* and *valrange*.\n\nYou can control ordering, limits and pagination by supplying the following keywords::\n\n    order_by=<'id'|'version'>\n    limit=<num>\n    valrange=<string> - See api docs for this, This value is passed straight through to the API call *as is*.\n    sort=<'asc'|'desc'>\n\n**You'll have to investigate the api for each object's *Accept-Ranges* header to work out which fields can be ordered by**\n\nExamples\n~~~~~~~~\n\nList all apps in name order::\n\n    heroku_conn.apps(order_by='name')\n\nList the last 10 releases::\n\n    app.releases(order_by='version', limit=10, sort='desc')\n    heroku_conn.apps()['empty-spring-4049'].releases(order_by='version', limit=10, sort='desc')\n\nList objects can be referred to directly by *any* of their primary keys too::\n\n    app = heroku_conn.apps()['myapp']\n    dyno = heroku_conn.apps()['myapp_id'].dynos()['web.1']\n    proc = heroku_conn.apps()['my_app'].process_formation()['web']\n\n**Be careful if you use *limit* in a list call *and* refer directly to an primary key**\nE.g.Probably stupid...::\n\n    dyno = heroku_conn.apps()['myapp'].dynos(limit=1)['web.1']\n\nGeneral Notes on Objects\n------------------------\n\nTo find out the Attributes available for a given object, look at the corresponding Documentation for that object.\ne.g.\n\n`Formation <https://devcenter.heroku.com/articles/platform-api-reference#formation>`_ Object::\n\n    >>>print(feature.command)\n    bundle exec rails server -p $PORT\n\n    >>>print(feature.created_at)\n    2012-01-01T12:00:00Z\n\n    >>>print(feature.id)\n    01234567-89ab-cdef-0123-456789abcdef\n\n    >>>print(feature.quantity)\n    1\n    >>>print(feature.size)\n    1\n    >>>print(feature.type)\n    web\n\n    >>>print(feature.updated_at)\n    2012-01-01T12:00:00Z\n\nSwitching Accounts Mid Flow\n---------------------------\n\nIt is also possible to change the underlying heroku_connection at any point on any object or listobject by creating a new heroku_conn and calling change_connection::\n\n    heroku_conn1 = heroku3.from_key('YOUR_API_KEY')\n    heroku_conn2 = heroku3.from_key('ANOTHER_API_KEY')\n    app = heroku_conn1.apps()['MYAPP']\n    app.change_connection(heroku_conn2)\n    app.config() # this call will use heroku_conn2\n    ## or on list objects\n    apps = heroku_conn1.apps()\n    apps.change_connection(heroku_conn2)\n    for app in apps:\n        config = app.config()\n\nLegacy API Calls\n================\n\nThe API has been built with an internal legacy=True ability, so any functionlity not implemented in the new API can be called via the previous `legacy API <https://legacy-api-docs.herokuapp.com/>`_. This is currently only used for *rollbacks*.\n\nObject API\n==========\n\nAccount\n-------\n\nGet account::\n\n    account = heroku_conn.account()\n\nChange Password::\n\n    account.change_password(\"<current_password>\", \"<new_password>\")\n\nSSH Keys\n~~~~~~~~\n\nList all configured keys::\n\n    keylist = account.keys(order_by='id')\n\nAdd Key::\n\n    account.add_key(<public_key_string>)\n\nRemove key::\n\n    account.remove_key(<public_key_string - or fingerprint>)\n\nAccount Features (Heroku Labs)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nList all configured account \"features\"::\n\n    featurelist = account.features()\n\nDisable a feature::\n\n    feature = account.disable_feature(id_or_name)\n    feature.disable()\n\nEnable a feature::\n\n    feature = account.enable_feature(id_or_name)\n    feature.enable()\n\nPlans - or Addon Services\n-------------------------\n\nList all available Addon Services::\n\n    addonlist = heroku_conn.addon_services(order_by='id')\n    addonlist = heroku_conn.addon_services()\n\nGet specific available Addon Service::\n\n    addonservice = heroku_conn.addon_services(<id_or_name>)\n\nApp\n--------\n\nThe App Class is the starting point for most of the api functionlity.\n\nList all apps::\n\n    applist = heroku_conn.apps(order_by='id')\n    applist = heroku_conn.apps()\n\nGet specific app::\n\n    app = heroku_conn.app(<id_or_name>)\n    app = heroku_conn.apps()[id_or_name]\n\nCreate an app::\n\n    app = heroku_conn.create_app(name=None, stack_id_or_name='cedar', region_id_or_name=<region_id>)\n\nDestroy an app (**Warning this is irreversible**)::\n\n    app.delete()\n\nAddons\n~~~~~~\n\nList all Addons::\n\n    addonlist = app.addons(order_by='id')\n    addonlist = applist[<id_or_name>].addons(limit=10)\n    addonlist = heroku_conn.addons(<app_id_or_name>)\n\nInstall an Addon::\n\n    addon = app.install_addon(plan_id_or_name='<id>', config={})\n    addon = app.install_addon(plan_id_or_name='<name>', config={})\n    addon = app.install_addon(plan_id_or_name=addonservice.id, config={})\n    addon = app.install_addon(plan_id_or_name=addonservice.id, config={}, attachment_name='ADDON_ATTACHMENT_CUSTOM_NAME')\n\nRemove an Addon::\n\n    addon = app.remove_addon(<id>)\n    addon = app.remove_addon(addonservice.id)\n    addon.delete()\n\nUpdate/Upgrade an Addon::\n\n    addon = addon.upgrade(plan_id_or_name='<name>')\n    addon = addon.upgrade(plan_id_or_name='<id>')\n\nBuildpacks\n~~~~~~~~~~~~~\n\nUpdate all buildpacks::\n\n    buildpack_urls = ['https://github.com/some/buildpack', 'https://github.com/another/buildpack']\n    app.update_buildpacks(buildpack_urls)\n\n*N.B. buildpack_urls can also be empty. This clears all buildpacks.*\n\nApp Labs/Features\n~~~~~~~~~~~~~~~~~\n\nList all features::\n\n    appfeaturelist = app.features()\n    appfeaturelist = app.labs() #nicename for features()\n    appfeaturelist = app.features(order_by='id', limit=10)\n\nAdd a Feature::\n\n    appfeature = app.enable_feature(<feature_id_or_name>)\n\nRemove a Feature::\n\n    appfeature = app.disable_feature(<feature_id_or_name>)\n\nApp Transfers\n~~~~~~~~~~~~~\n\nList all Transfers::\n\n    transferlist = app.transfers()\n    transferlist = app.transfers(order_by='id', limit=10)\n\nCreate a Transfer::\n\n    transfer = app.create_transfer(recipient_id_or_name=<user_id>)\n    transfer = app.create_transfer(recipient_id_or_name=<valid_email>)\n\nDelete a Transfer::\n\n    deletedtransfer = app.delete_transfer(<transfer_id>)\n    deletedtransfer = transfer.delete()\n\nUpdate a Transfer's state::\n\n    transfer.update(state)\n    transfer.update(\"Pending\")\n    transfer.update(\"Declined\")\n    transfer.update(\"Accepted\")\n\nCollaborators\n~~~~~~~~~~~~~\n\nList all Collaborators::\n\n    collaboratorlist = app.collaborators()\n    collaboratorlist = app.collaborators(order_by='id')\n\nAdd a Collaborator::\n\n    collaborator = app.add_collaborator(user_id_or_email=<valid_email>, silent=0)\n    collaborator = app.add_collaborator(user_id_or_email=user_id, silent=0)\n    collaborator = app.add_collaborator(user_id_or_email=user_id, silent=1) #don't send invitation email\n\nRemove a Collaborator::\n\n    collaborator = app.remove_collaborator(userid_or_email)\n\nConfigVars\n~~~~~~~~~~\n\nGet an apps config::\n\n    config = app.config()\n\nAdd a config Variable::\n\n    config['New_var'] = 'new_val'\n\nUpdate a config Variable::\n\n    config['Existing_var'] = 'new_val'\n\nRemove a config Variable::\n\n    del config['Existing_var']\n    config['Existing_var'] = None\n\nUpdate Multiple config Variables::\n\n    # newconfig will always be a new ConfigVars object representing all config values for an app\n    # i.e. there won't be partial configs\n    newconfig = config.update({u'TEST1': u'A1', u'TEST2': u'A2', u'TEST3': u'A3'})\n    newconfig = heroku_conn.update_appconfig(<app_id_or_name>, {u'TEST1': u'A1', u'TEST2': u'A2', u'TEST3': u'A3'})\n    newconfig = app.update_config({u'TEST1': u'A1', u'TEST2': u'A2', u'TEST3': u'A3'})\n\nCheck if a var exists::\n\n    if 'KEY' in config:\n        print(\"KEY = {0}\".format(config[KEY]))\n\nGet dict of config vars::\n\n    my_dict = config.to_dict()\n\nDomains\n~~~~~~~\n\nGet a list of domains configured for this app::\n\n    domainlist = app.domains(order_by='id')\n\nAdd a domain to this app::\n\n    domain = app.add_domain('domain_hostname', 'sni_endpoint_id_or_name')\n    domain = app.add_domain('domain_hostname', None)  # domain will not be associated with an SNI endpoint\n\nExample of finding a matching SNI, given a domain::\n\n    domain = 'subdomain.domain.com'\n    sni_endpoint_id = None\n    for sni_endpoint in app.sni_endpoints():\n        for cert_domain in sni_endpoint.ssl_cert.cert_domains:\n            # check root or wildcard\n            if cert_domain in domain or cert_domain[1:] in domain:\n                sni_endpoint_id_or_name = sni_endpoint.id\n    domain = app.add_domain(domain, sni_endpoint_id)\n\nRemove a domain from this app::\n\n    domain = app.remove_domain('domain_hostname')\n\nSNI Endpoints\n~~~~~~~~~~~~~\n\nGet a list of SNI Endpoints for this app::\n\n    sni_endpoints = app.sni_endpoints()\n\nAdd an SNI endpoint to this app::\n\n    sni_endpoint = app.add_sni_endpoint(\n        '-----BEGIN CERTIFICATE----- ...',\n        '-----BEGIN RSA PRIVATE KEY----- ...'\n    )\n\nUpdate an SNI endpoint for this app::\n\n    sni_endpoint = app.update_sni_endpoint(\n        'sni_endpoint_id_or_name',\n        '-----BEGIN CERTIFICATE----- ...',\n        '-----BEGIN RSA PRIVATE KEY----- ...'\n    )\n\nDelete an SNI endpoint for this app::\n\n    app.remove_sni_endpoint('sni_endpoint_id_or_name')\n\nDynos & Process Formations\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDynos\n_____\n\nDynos represent all your running dyno processes. Use dynos to investigate whats running on your app.\nUse Dynos to create one off processes/run commands.\n\n**You don't \"scale\" dyno Processes. You \"scale\" Formation Processes. See Formations section Below**\n\nGet a list of running dynos::\n\n    dynolist = app.dynos()\n    dynolist = app.dynos(order_by='id')\n\nKill a dyno::\n\n    app.kill_dyno(<dyno_id_or_name>)\n    app.dynos['run.1'].kill()\n    dyno.kill()\n\n**Restarting your dynos is achieved by killing existing dynos, and allowing heroku to auto start them. A Handy wrapper for this proceses has been provided below.**\n\n*N.B. This will only restart Formation processes, it will not kill off other processes.*\n\nRestart a Dyno::\n\n    #a simple wrapper around dyno.kill() with run protection so won't kill any proc of type='run' e.g. 'run.1'\n    dyno.restart()\n\nRestart all your app's Formation configured Dyno's::\n\n    app.restart()\n\nRun a command without attaching to it. e.g. start a command and return the dyno object representing the command::\n\n    dyno = app.run_command_detached('fab -l', size=1, env={'key': 'val'})\n    dyno = heroku_conn.run_command_on_app(<appname>, <command>, size=1, attach=False, printout=True, env={'key': 'val'})\n\nRun a command and attach to it, returning the commands output as a string::\n\n    #printout  is used to control if the task should also print to STDOUT - useful for long running processes\n    #size = is the processes dyno size 1X(default), 2X, 3X etc...\n    #env = Envrionment variables for the dyno\n    output, dyno = heroku_conn.run_command_on_app(<appname>, <command>, size=1, attach=True, printout=True, env={'key': 'val'})\n    output = app.run_command('fab -l', size=1, printout=True, env={'key': 'val'})\n    print output\n\nFormations\n__________\n\nFormations represent the dynos that you have configured in your Procfile - whether they are running or not.\nUse Formations to scale dynos up and down\n\nGet a list of your configured Processes::\n\n    proclist = app.process_formation()\n    proclist = app.process_formation(order_by='id')\n    proc = app.process_formation()['web']\n    proc = heroku_conn.apps()['myapp'].process_formation()['web']\n\nScale your Procfile processes::\n\n    app.process_formation()['web'].scale(2) # run 2 dynos\n    app.process_formation()['web'].scale(0) # don't run any dynos\n    proc = app.scale_formation_process(<formation_id_or_name>, <quantity>)\n\nResize your Procfile Processes::\n\n    app.process_formation()['web'].resize(2) # for 2X\n    app.process_formation()['web'].resize(1) # for 1X\n    proc = app.resize_formation_process(<formation_id_or_name>, <size>)\n\nLog Drains\n~~~~~~~~~~\n\nList all active logdrains::\n\n    logdrainlist = app.logdrains()\n    logdrainlist = app.logdrains(order_by='id')\n\nCreate a logdrain::\n\n    loggdrain = app.create_logdrain(<url>)\n\nRemove a logdrain::\n\n    delete_logdrain - app.remove_logdrain(<id_or_url>)\n\nLog Sessions\n~~~~~~~~~~~~\n\nAccess the logs::\n\n    log = heroku_conn.get_app_log(<app_id_or_name>, dyno='web.1', lines=2, source='app', timeout=False)\n    log = app.get_log()\n    log = app.get_log(lines=100)\n    print(app.get_log(dyno='web.1', lines=2, source='app'))\n    2011-12-21T22:53:47+00:00 heroku[web.1]: State changed from down to created\n    2011-12-21T22:53:47+00:00 heroku[web.1]: State changed from created to starting\n\nYou can even stream the tail::\n\n    #accepts the same params as above - lines|dyno|source|timeout (passed to requests)\n    log = heroku_conn.stream_app_log(<app_id_or_name>, lines=1, timeout=100)\n    #or\n    for line in app.stream_log(lines=1):\n         print(line)\n\n    2011-12-21T22:53:47+00:00 heroku[web.1]: State changed from down to created\n    2011-12-21T22:53:47+00:00 heroku[web.1]: State changed from created to starting\n\nMaintenance Mode\n~~~~~~~~~~~~~~~~\n\nEnable Maintenance Mode::\n\n    app.enable_maintenance_mode()\n\nDisable Maintenance Mode::\n\n    app.disable_maintenance_mode()\n\nOAuth\n~~~~~\nOAuthAuthorizations\n___________________\n\nList all OAuthAuthorizations::\n\n    authorizations = heroku_conn.oauthauthorizations(order_by=id)\n\nGet a specific OAuthAuthorization::\n\n    authorization = authorizations[<oauthauthorization_id>]\n    authorization = heroku_conn.oauthauthorization(oauthauthorization_id)\n\nCreate an OAuthAuthorization::\n\n    authorization = heroku_conn.oauthauthorization_create(scope, oauthclient_id=None, description=None)\n\nDelete an OAuthAuthorization::\n\n    authorization.delete()\n    heroku_conn.oauthauthorization_delete(oauthauthorization_id)\n\nOAuthClient\n___________\n\nList all OAuthClients::\n\n    clients = heroku_conn.oauthclients(order_by=id)\n\nGet a specific OAuthClient::\n\n    client = clients[<oauthclient_id>]\n    client = heroku_conn.oauthclient(oauthclient_id)\n\nCreate an OAuthClient::\n\n    client = heroku_conn.oauthclient_create(name, redirect_uri)\n\nUpdate an existing OAuthClient::\n\n    client = client.update(name=None, redirect_uri=None)\n\nDelete an OAuthClient::\n\n    client.delete()\n    heroku_conn.oauthclient_delete(oauthclient_id)\n\nOAuthToken\n__________\n\nCreate an OAuthToken::\n\n    heroku_conn.oauthtoken_create(client_secret=None, grant_code=None, grant_type=None, refresh_token=None)\n\nRelease\n~~~~~~~\n\nList all releases::\n\n    releaselist = app.releases()\n    releaselist = app.releases(order_by='version')\n\nRelease information::\n\n    for release in app.releases():\n        print(\"{0}-{1} released by {2} on {3}\".format(release.id, release.description, release.user.name, release.created_at))\n\nRollback to a release::\n\n    app.rollback(release.id)\n    app.rollback(\"489d7ce8-1cc3-4429-bb79-7907371d4c0e\")\n\nRename App\n~~~~~~~~~~\n\nRename App::\n\n    app.rename('Carrot-kettle-teapot-1898')\n\nCustomized Sessions\n-------------------\n\nHeroku.py is powered by `Requests <http://python-requests.org>`_ and supports all `customized sessions <http://www.python-requests.org/en/latest/user/advanced/#session-objects>`_:\n\nLogging\n-------\n\nNote: logging is now achieved by the following method::\n\n    import httplib\n    httplib.HTTPConnection.debuglevel = 1\n\n    logging.basicConfig() # you need to initialize logging, otherwise you will not see anything from requests\n    logging.getLogger().setLevel(logging.INFO)\n    requests_log = logging.getLogger(\"requests.packages.urllib3\")\n    requests_log.setLevel(logging.INFO)\n    requests_log.propagate = True\n\n    heroku_conn.ratelimit_remaining()\n\n    >>>INFO:requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): api.heroku.com\n    >>>send: 'GET /account/rate-limits HTTP/1.1\\r\\nHost: api.heroku.com\\r\\nAuthorization: Basic ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ=\\r\\nContent-Type: application/json\\r\\nAccept-Encoding: gzip, deflate, compress\\r\\nAccept: application/vnd.heroku+json; version=3\\r\\nUser-Agent: python-requests/1.2.3 CPython/2.7.2 Darwin/12.4.0\\r\\n\\r\\n'\n    >>>reply: 'HTTP/1.1 200 OK\\r\\n'\n    >>>header: Content-Encoding: gzip\n    >>>header: Content-Type: application/json;charset=utf-8\n    >>>header: Date: Thu, 05 Sep 2013 11:13:03 GMT\n    >>>header: Oauth-Scope: global\n    >>>header: Oauth-Scope-Accepted: global identity\n    >>>header: RateLimit-Remaining: 2400\n    >>>header: Request-Id: ZZZZZZ2a-b704-4bbc-bdf1-e4bc263586cb\n    >>>header: Server: nginx/1.2.8\n    >>>header: Status: 200 OK\n    >>>header: Strict-Transport-Security: max-age=31536000\n    >>>header: Vary: Accept-Encoding\n    >>>header: X-Content-Type-Options: nosniff\n    >>>header: X-Runtime: 0.032193391\n    >>>header: Content-Length: 44\n    >>>header: Connection: keep-alive\n\nInstallation\n------------\n\nTo install ``heroku3.py``, simply::\n\n    $ pip install heroku3\n\nOr, if you absolutely must::\n\n    $ easy_install heroku3\n\nBut, you `really shouldn't do that <http://www.pip-installer.org/en/latest/other-tools.html#pip-compared-to-easy-install>`_.\n\nLicense\n-------\n\nOriginal Heroku License left intact, The code in this repository is mostly my own, but credit where credit is due and all that :)\n\nCopyright (c) 2013 Heroku, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nHistory\n=======\n\n3.4.0\n-----\n* Support for python 2.6 dropped\n* Add Tests\n* Get project building on circleci/travis-ci & coveralls\n* Adding Slug to Release Models\n* bugfixes\n\n3.2.0-2\n-------\n* Various fixes for python3\n* Add newer features from Heroku API, support for Organisations\n\n3.1.4\n-----\n* bugfixes\n\n3.1.3 (2015-03-12)\n------------------\n* removed debug\n\n3.1.0 (2014-11-24)\n------------------\n* Moved to Heroku3 for pypi release\n* Updated heroku/data/cacert.pem\n\n3.0.0 - 3.1.0\n-------------\n* Add support for all of heroku's api\n* Various bugfixes and enhancements\n* Add Documentation\n* Add examples.py\n* Used in production on https://www.migreat.com & https://www.migreat.co.uk since 2013-10-01\n\n3.0.0 (2013-08-28)\n------------------\n* Rewrite to support V3 API\n\n* Initial release.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/MUTLCC/herokum/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MUTLCC/herokum",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "herokum",
    "package_url": "https://pypi.org/project/herokum/",
    "platform": "",
    "project_url": "https://pypi.org/project/herokum/",
    "project_urls": {
      "Download": "https://github.com/MUTLCC/herokum/",
      "Homepage": "https://github.com/MUTLCC/herokum"
    },
    "release_url": "https://pypi.org/project/herokum/5.1.8/",
    "requires_dist": [
      "requests (>=1.2.3)",
      "python-dateutil (>=2.6.0)"
    ],
    "requires_python": "",
    "summary": "Heroku API Wrapper.",
    "version": "5.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13027563,
  "releases": {
    "4.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "620976eb1705e4be2b7b7ef523694e2d29798df98bd5cee71f669980a0540196",
          "md5": "7c06df0258f35f78f50dc6a390456081",
          "sha256": "d15df2015d4bd10f0e0cb8ee3d6ccc8fc6427b1fcb80535f82d605b9e68a1d79"
        },
        "downloads": -1,
        "filename": "herokum-4.2.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c06df0258f35f78f50dc6a390456081",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 160623,
        "upload_time": "2021-07-23T11:02:12",
        "upload_time_iso_8601": "2021-07-23T11:02:12.297569Z",
        "url": "https://files.pythonhosted.org/packages/62/09/76eb1705e4be2b7b7ef523694e2d29798df98bd5cee71f669980a0540196/herokum-4.2.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d68d66f3c41679e92a6deab93c4ca211020ac86ad74c5ed6c5edc4131e50566",
          "md5": "87520fd49d4d9ddd0b4f3354669d5983",
          "sha256": "6c98eed33b61de1b99fa9b7772b5f0d5b090c0d86c34bd2b6a83ebec264bcc2a"
        },
        "downloads": -1,
        "filename": "herokum-4.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "87520fd49d4d9ddd0b4f3354669d5983",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 158988,
        "upload_time": "2021-07-23T11:02:13",
        "upload_time_iso_8601": "2021-07-23T11:02:13.620856Z",
        "url": "https://files.pythonhosted.org/packages/6d/68/d66f3c41679e92a6deab93c4ca211020ac86ad74c5ed6c5edc4131e50566/herokum-4.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e83f92a62d3bb2f557a364679897d03e22de3c5ff6752d9ce72136dd225842d",
          "md5": "165a897d509ee5bcff6ff3fd95dc5f56",
          "sha256": "efca7ef6459b123b7ab2a5744c7823457ab81caaf55b0872323194d1372d127f"
        },
        "downloads": -1,
        "filename": "herokum-4.2.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "165a897d509ee5bcff6ff3fd95dc5f56",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 160975,
        "upload_time": "2021-07-30T07:34:41",
        "upload_time_iso_8601": "2021-07-30T07:34:41.197025Z",
        "url": "https://files.pythonhosted.org/packages/8e/83/f92a62d3bb2f557a364679897d03e22de3c5ff6752d9ce72136dd225842d/herokum-4.2.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13f36269bec3dcf6de867ce2b699a6a287a3369c2a8353894deadabab99d68b0",
          "md5": "1d063e868c15d88285753dea60c13473",
          "sha256": "25e46467733ddaf517ef7b4ba709379c010e225f9b8f060c0cefa1c1b364ebb1"
        },
        "downloads": -1,
        "filename": "herokum-4.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "1d063e868c15d88285753dea60c13473",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 159257,
        "upload_time": "2021-07-30T07:34:42",
        "upload_time_iso_8601": "2021-07-30T07:34:42.307065Z",
        "url": "https://files.pythonhosted.org/packages/13/f3/6269bec3dcf6de867ce2b699a6a287a3369c2a8353894deadabab99d68b0/herokum-4.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63edc617dbaf642a45004050bcbf3fd570d804e1318d7f240caa24753cec4bdd",
          "md5": "c7cf8933ad384fcd26274a5cd1e3281f",
          "sha256": "3707b3d6f07595ec91a8e92835cac9cc37096ac0b117f62725e647e69190a523"
        },
        "downloads": -1,
        "filename": "herokum-5.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7cf8933ad384fcd26274a5cd1e3281f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 161976,
        "upload_time": "2022-01-31T19:23:08",
        "upload_time_iso_8601": "2022-01-31T19:23:08.214634Z",
        "url": "https://files.pythonhosted.org/packages/63/ed/c617dbaf642a45004050bcbf3fd570d804e1318d7f240caa24753cec4bdd/herokum-5.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74d808cb40a61dc905129bfc9117da809abeaf1f487c8d83838a6b9656e64cb1",
          "md5": "1e9715af729dbac8bcbcb8d24a3323ee",
          "sha256": "ab567a0b2e821906d19ea30fac977f5aeedae181b3824ef786c66a1778f1177b"
        },
        "downloads": -1,
        "filename": "herokum-5.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1e9715af729dbac8bcbcb8d24a3323ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 159990,
        "upload_time": "2022-01-31T19:23:09",
        "upload_time_iso_8601": "2022-01-31T19:23:09.445161Z",
        "url": "https://files.pythonhosted.org/packages/74/d8/08cb40a61dc905129bfc9117da809abeaf1f487c8d83838a6b9656e64cb1/herokum-5.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d962aeae638640975eb3fbb65abfe31d0ed58593c6a67d52542e815511463d9",
          "md5": "641fca9b0adde6e1deae5c62e15a6d1f",
          "sha256": "b090d17ae24fe697d3a0631da58ffa28d78c9a8cf54254135a80f1c9750e301a"
        },
        "downloads": -1,
        "filename": "herokum-5.1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "641fca9b0adde6e1deae5c62e15a6d1f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 161871,
        "upload_time": "2022-02-27T20:47:49",
        "upload_time_iso_8601": "2022-02-27T20:47:49.407433Z",
        "url": "https://files.pythonhosted.org/packages/2d/96/2aeae638640975eb3fbb65abfe31d0ed58593c6a67d52542e815511463d9/herokum-5.1.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9c0935676af51f06a9f78bbfd3149b86ea0bf3c8b35c0bb048db83eabd33d11",
          "md5": "f6ea68e027780a7b57d95374b71dbd71",
          "sha256": "5d35c40f1532d91593003a13b11ae94497cc64962ad633e7a4f4471f27c91544"
        },
        "downloads": -1,
        "filename": "herokum-5.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f6ea68e027780a7b57d95374b71dbd71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 159876,
        "upload_time": "2022-02-27T20:47:51",
        "upload_time_iso_8601": "2022-02-27T20:47:51.243238Z",
        "url": "https://files.pythonhosted.org/packages/f9/c0/935676af51f06a9f78bbfd3149b86ea0bf3c8b35c0bb048db83eabd33d11/herokum-5.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d962aeae638640975eb3fbb65abfe31d0ed58593c6a67d52542e815511463d9",
        "md5": "641fca9b0adde6e1deae5c62e15a6d1f",
        "sha256": "b090d17ae24fe697d3a0631da58ffa28d78c9a8cf54254135a80f1c9750e301a"
      },
      "downloads": -1,
      "filename": "herokum-5.1.8-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "641fca9b0adde6e1deae5c62e15a6d1f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 161871,
      "upload_time": "2022-02-27T20:47:49",
      "upload_time_iso_8601": "2022-02-27T20:47:49.407433Z",
      "url": "https://files.pythonhosted.org/packages/2d/96/2aeae638640975eb3fbb65abfe31d0ed58593c6a67d52542e815511463d9/herokum-5.1.8-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f9c0935676af51f06a9f78bbfd3149b86ea0bf3c8b35c0bb048db83eabd33d11",
        "md5": "f6ea68e027780a7b57d95374b71dbd71",
        "sha256": "5d35c40f1532d91593003a13b11ae94497cc64962ad633e7a4f4471f27c91544"
      },
      "downloads": -1,
      "filename": "herokum-5.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "f6ea68e027780a7b57d95374b71dbd71",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 159876,
      "upload_time": "2022-02-27T20:47:51",
      "upload_time_iso_8601": "2022-02-27T20:47:51.243238Z",
      "url": "https://files.pythonhosted.org/packages/f9/c0/935676af51f06a9f78bbfd3149b86ea0bf3c8b35c0bb048db83eabd33d11/herokum-5.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}