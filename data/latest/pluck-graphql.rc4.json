{
  "info": {
    "author": "Martin Galpin",
    "author_email": "galpin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Pluck üöÄ üçä\n\n![PyPI](https://img.shields.io/pypi/v/pluck-graphql) ![GitHub](https://img.shields.io/github/license/galpin/pluck)\n\nPluck is a GraphQL client that transforms queries into Pandas data-frames.\n\n## Installation\n\nInstall Pluck from [PyPi](https://pypi.org/project/pluck-graphql/):\n\n```bash\npip install pluck-graphql\n```\n\n## Introduction\n\nThe easiest way to get started is to use `pluck.read_graphql` to execute a query.\n\nLet's read the first five SpaceX launches into a data-frame:\n\n\n```python\nimport pluck\n\nSpaceX = \"https://api.spacex.land/graphql\"\n\nquery = \"\"\"\n{\n  launches(limit: 5) {\n    mission_name\n    launch_date_local\n    rocket {\n      rocket_name\n    }\n  }\n}\n\"\"\"\nframe, = pluck.read_graphql(query, url=SpaceX)\nframe\n```\n\n| launches.mission_name   | launches.launch_date_local   | launches.rocket.rocket_name   |\n|:------------------------|:-----------------------------|:------------------------------|\n| Thaicom 6           | 2014-01-06T14:06:00-04:00| Falcon 9                  |\n| AsiaSat 6           | 2014-09-07T01:00:00-04:00| Falcon 9                  |\n| OG-2 Mission 2      | 2015-12-22T21:29:00-04:00| Falcon 9                  |\n| FalconSat           | 2006-03-25T10:30:00+12:00| Falcon 1                  |\n| CRS-1               | 2012-10-08T20:35:00-04:00| Falcon 9                  |\n\n\n### Implicit Mode\n\nThe query above uses _implicit mode_. This is where the entire response is normalized into a single data-frame.\n\nThe return value from `read_graphql` is an instance of `pluck.Response`. This object is _iterable_ and enumerates the data-frames in the query. Because this query uses _implicit mode_, the iterator contains only a single data-frame (note that the trailing comma is still required).\n\n### @frame directive\n\nBut Pluck is more powerful than _implicit mode_ because it provides a custom `@frame` directive.\n\nThe `@frame` directive specifies portions of the GraphQL response that we want to transform into data-frames. The directive is removed before the query is sent to the GraphQL server.\n\nUsing the same query, rather than use implicit mode, let's pluck the `launches` field from the response:\n\n\n```python\nquery = \"\"\"\n{\n  launches(limit: 5) @frame {\n    mission_name\n    launch_date_local\n    rocket {\n      rocket_name\n    }\n  }\n}\n\"\"\"\nlaunches, = pluck.read_graphql(query, url=SpaceX)\nlaunches\n```\n\n| mission_name   | launch_date_local     | rocket.rocket_name   |\n|:---------------|:--------------------------|:---------------------|\n| Thaicom 6  | 2014-01-06T14:06:00-04:00 | Falcon 9         |\n| AsiaSat 6  | 2014-09-07T01:00:00-04:00 | Falcon 9         |\n| OG-2 Mission 2 | 2015-12-22T21:29:00-04:00 | Falcon 9         |\n| FalconSat  | 2006-03-25T10:30:00+12:00 | Falcon 1         |\n| CRS-1      | 2012-10-08T20:35:00-04:00 | Falcon 9         |\n\n\nThe column names are no longer prefixed with `launches` because it is now the root of the data-frame.\n\n### Multiple @frame directives\n\nWe can also pluck multiple data-frames from a single GraphQL query.\n\nLet's query the first five SpaceX `rockets` as well: \n\n\n```python\nquery = \"\"\"\n{\n  launches(limit: 5) @frame {\n    mission_name\n    launch_date_local\n    rocket {\n      rocket_name\n    }\n  }\n  rockets(limit: 5) @frame {\n    name\n    type\n    company\n    height {\n      meters\n    }\n    mass {\n      kg\n    }\n  }\n}\n\"\"\"\nlaunches, rockets = pluck.read_graphql(query, url=SpaceX)\n```\n\nNow we have the original `launches` and a new `rockets` data-frame:\n\n\n```python\nrockets\n```\n\n| name     | type   | company   |   height.meters |   mass.kg |\n|:-------------|:-------|:----------|----------------:|----------:|\n| Falcon 1 | rocket | SpaceX|           22.25 |     30146 |\n| Falcon 9 | rocket | SpaceX|           70|    549054 |\n| Falcon Heavy | rocket | SpaceX|           70|   1420788 |\n| Starship | rocket | SpaceX|          118|   1335000 |\n\n\n### Lists\n\nWhen a response includes a list, the data-frame is automatically expanded to include one row per item in the list. This is repeated for every subsequent list in the response.\n\nFor example, let's query the first five `capsules` and which missions they have been used for:\n\n\n```python\nquery = \"\"\"\n{\n  capsules(limit: 5) @frame {\n    id\n    type\n    status\n    missions {\n      name\n    }\n  }\n}\n\"\"\"\ncapsules, = pluck.read_graphql(query, url=SpaceX)\ncapsules\n```\n\n| id   | type   | status| missions.name   |\n|:-----|:-----------|:----------|:----------------|\n| C105 | Dragon 1.1 | unknown   | CRS-3       |\n| C101 | Dragon 1.0 | retired   | COTS 1      |\n| C109 | Dragon 1.1 | destroyed | CRS-7       |\n| C110 | Dragon 1.1 | active| CRS-8       |\n| C110 | Dragon 1.1 | active| CRS-14      |\n| C106 | Dragon 1.1 | active| CRS-4       |\n| C106 | Dragon 1.1 | active| CRS-11      |\n| C106 | Dragon 1.1 | active| CRS-19      |\n\n\nRather than five rows, we have seven; each row contains a capsule and a mission.\n\n### Nested @frame directives\n\nFrames can also be nested and if a nested `@frame` is within a list, the rows are combined into a single data-frame.\n\nFor example, we can pluck the top five `cores` and their `missions`:\n\n\n```python\nquery = \"\"\"\n{\n  cores(limit: 5) @frame {\n    id\n    status\n    missions @frame {\n      name\n      flight\n    }\n  }\n}\n\"\"\"\ncores, missions = pluck.read_graphql(query, url=SpaceX)\n```\n\nNow we have the `cores`:\n\n\n```python\ncores\n```\n\n| id| status   | missions.name            |   missions.flight |\n|:------|:---------|:-----------------------------|------------------:|\n| B1015 | lost | CRS-6                    |                22 |\n| B0006 | lost | CRS-1                    |                 9 |\n| B1034 | lost | Inmarsat-5 F4            |                40 |\n| B1016 | lost | T√ºrkmen√Ñlem 52¬∞E / MonacoSAT |                23 |\n| B1025 | inactive | CRS-9                    |                32 |\n| B1025 | inactive | Falcon Heavy Test Flight |                55 |\n\n\nAnd we also have the `missions` data-frame that has been combined from every item in `cores`:\n\n\n```python\nmissions\n```\n\n| name                     |   flight |\n|:-----------------------------|---------:|\n| CRS-6                    |       22 |\n| CRS-1                    |        9 |\n| Inmarsat-5 F4            |       40 |\n| T√ºrkmen√Ñlem 52¬∞E / MonacoSAT |       23 |\n| CRS-9                    |       32 |\n| Falcon Heavy Test Flight |       55 |\n\n\n### Aliases\n\nColumn names can be modified using normal GraphQL aliases.\n\nFor example, let's tidy-up the field names in the `launches` data-frame:\n\n\n```python\nquery = \"\"\"\n{\n  launches(limit: 5) @frame {\n    mission: mission_name\n    launch_date: launch_date_local\n    rocket {\n      name: rocket_name\n    }\n  }\n}\n\"\"\"\nlaunches, = pluck.read_graphql(query, url=SpaceX)\nlaunches\n```\n\n| mission    | launch_date           | rocket.name   |\n|:---------------|:--------------------------|:--------------|\n| Thaicom 6  | 2014-01-06T14:06:00-04:00 | Falcon 9  |\n| AsiaSat 6  | 2014-09-07T01:00:00-04:00 | Falcon 9  |\n| OG-2 Mission 2 | 2015-12-22T21:29:00-04:00 | Falcon 9  |\n| FalconSat  | 2006-03-25T10:30:00+12:00 | Falcon 1  |\n| CRS-1      | 2012-10-08T20:35:00-04:00 | Falcon 9  |\n\n\n### Leaf fields\n\nThe `@frame` directive can also be used on leaf fields.\n\nFor example, we can extract only the name of the mission from past launches:\n\n\n```python\nquery = \"\"\"\n{\n  launchesPast(limit: 5) {\n    mission: mission_name @frame\n  }\n}\n\"\"\"\nlaunches, = pluck.read_graphql(query, url=SpaceX)\nlaunches\n```\n\n| mission                 |\n|:----------------------------|\n| Starlink-15 (v1.0)      |\n| Sentinel-6 Michael Freilich |\n| Crew-1                  |\n| GPS III SV04 (Sacagawea)|\n| Starlink-14 (v1.0)      |\n\n\n### Responses\n\nMost of the time, Pluck is used to transform the GraphQL query directly into one or more data-frames. However, it is also possible to retreive the the raw GraphQL response (as well as the data-frames) by not immeadiately iterating over the return value.\n\nThe return value is a `pluck.Response` object and contains the `data` and `errors` from the raw GraphQL response and map of `Dict[str, DataFrame]` containing each data-frame in the query. The name of the frame corresponds to the field on which the `@frame` directive is placed or `default` when using implicit mode.\n\n\n```python\nquery = \"\"\"\n{\n  launches(limit: 5) @frame {\n    id\n    mission_name\n    rocket {\n      rocket_name\n    }\n  }\n  landpads(limit: 5) @frame {\n    id\n    full_name\n    location {\n      region\n      latitude\n      longitude\n    }\n  }\n}\n\"\"\"\nresponse = pluck.read_graphql(query, url=SpaceX)\n\n# print(response.data.keys())\n# print(response.errors)\n# print(response.frames.keys())\n\nlaunches, landpads = response\nlandpads\n```\n\n| id | full_name                 | location.region   |   location.latitude |   location.longitude |\n|:-------|:------------------------------|:------------------|--------------------:|---------------------:|\n| LZ-1   | Landing Zone 1            | Florida       |             28.4858 |             -80.5444 |\n| LZ-2   | Landing Zone 2            | Florida       |             28.4858 |             -80.5444 |\n| LZ-4   | Landing Zone 4            | California    |             34.633  |            -120.615  |\n| OCISLY | Of Course I Still Love You| Florida       |             28.4104 |             -80.6188 |\n| JRTI-1 | Just Read The Instructions V1 | Florida       |             28.4104 |             -80.6188 |\n\n\n### pluck.create\n\nPluck also provides a `create` factory function which returns a customized `read_graphql` function which closes over the `url` and other configuration.\n\n\n```python\nread_graphql = pluck.create(url=SpaceX)\n\nquery = \"\"\"\n{\n  launches(limit: 5) @frame {\n    id\n    mission_name\n    rocket {\n      rocket_name\n    }\n  }\n  landpads(limit: 5) @frame {\n    id\n    full_name\n    location {\n      region\n      latitude\n      longitude\n    }\n  }\n}\n\"\"\"\nlaunches, landpads = read_graphql(query)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/galpin/pluck",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pluck-graphql",
    "package_url": "https://pypi.org/project/pluck-graphql/",
    "platform": null,
    "project_url": "https://pypi.org/project/pluck-graphql/",
    "project_urls": {
      "Homepage": "https://github.com/galpin/pluck"
    },
    "release_url": "https://pypi.org/project/pluck-graphql/0.1.4/",
    "requires_dist": [
      "graphql-core (>=3.2.0)",
      "pandas (>=1.0.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "Transform GraphQL queries into Pandas data-frames.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13173910,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa915b0991a9ca3ae5cbb48093f45c3981d5ef5ecf7bbeb6146f685f26350b6f",
          "md5": "c73a2b54505ce20421402834d305b3eb",
          "sha256": "1e43f49c4991450c6b27cdac1f8c23920a1ab9304df8fdd3da9bf192dd9f4291"
        },
        "downloads": -1,
        "filename": "pluck_graphql-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c73a2b54505ce20421402834d305b3eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4244,
        "upload_time": "2022-03-06T15:38:37",
        "upload_time_iso_8601": "2022-03-06T15:38:37.646818Z",
        "url": "https://files.pythonhosted.org/packages/aa/91/5b0991a9ca3ae5cbb48093f45c3981d5ef5ecf7bbeb6146f685f26350b6f/pluck_graphql-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "680fdad271f7dbc900b2aa6d165145bc557beab4d661b9bb3c0b831977d56ecb",
          "md5": "e536838014b4c07d92b9c2a760230022",
          "sha256": "e8ab2609e822c12730c03234025d1a4b72ec8168f361bc9b91fbfb0c2eb3e44a"
        },
        "downloads": -1,
        "filename": "pluck-graphql-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e536838014b4c07d92b9c2a760230022",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4285,
        "upload_time": "2022-03-06T15:38:39",
        "upload_time_iso_8601": "2022-03-06T15:38:39.424130Z",
        "url": "https://files.pythonhosted.org/packages/68/0f/dad271f7dbc900b2aa6d165145bc557beab4d661b9bb3c0b831977d56ecb/pluck-graphql-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e571a88400cae40ca23ad0ddc471195d8ed16cda4c812e732e802c3664bfc435",
          "md5": "f1577a0e1ddf7c89bfef8666fb284496",
          "sha256": "6cc4161671a6a56b40fbfb8c857a3cb0bd11a60c7ce8059990d983ffa09a4964"
        },
        "downloads": -1,
        "filename": "pluck_graphql-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1577a0e1ddf7c89bfef8666fb284496",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4245,
        "upload_time": "2022-03-06T15:41:09",
        "upload_time_iso_8601": "2022-03-06T15:41:09.841301Z",
        "url": "https://files.pythonhosted.org/packages/e5/71/a88400cae40ca23ad0ddc471195d8ed16cda4c812e732e802c3664bfc435/pluck_graphql-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8881faea21859b34db45ecb2cbea4373422d4e1420f5f2286b89711759452a01",
          "md5": "2feeb33d357e214d104956233732e269",
          "sha256": "1c54e92966a5ff3ae75c8ef81961d1484dc76078d73b809e205fbfb8f883494e"
        },
        "downloads": -1,
        "filename": "pluck-graphql-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2feeb33d357e214d104956233732e269",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4286,
        "upload_time": "2022-03-06T15:41:11",
        "upload_time_iso_8601": "2022-03-06T15:41:11.414000Z",
        "url": "https://files.pythonhosted.org/packages/88/81/faea21859b34db45ecb2cbea4373422d4e1420f5f2286b89711759452a01/pluck-graphql-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a435445b76b5cade116f286972e36201be32ee2ee8cf762d59462dbebe3eb23e",
          "md5": "661b1364eaf2d9445626617469e23928",
          "sha256": "65a9e67639639a6853ae1d99001153a25a20512984bdab0eb547de9867aeac77"
        },
        "downloads": -1,
        "filename": "pluck_graphql-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "661b1364eaf2d9445626617469e23928",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4927,
        "upload_time": "2022-03-06T17:10:56",
        "upload_time_iso_8601": "2022-03-06T17:10:56.884591Z",
        "url": "https://files.pythonhosted.org/packages/a4/35/445b76b5cade116f286972e36201be32ee2ee8cf762d59462dbebe3eb23e/pluck_graphql-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe1ff9c1846826ba5a2c8057eb34f50779c8f6dc4542d45092eeea27cedafadb",
          "md5": "2199591c1faaa86512e5dba2421d6c8f",
          "sha256": "d27d51d47595cd54a8bacf9da7c7fbebf7c21180d118248b0b877635dcfaac6c"
        },
        "downloads": -1,
        "filename": "pluck-graphql-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2199591c1faaa86512e5dba2421d6c8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5023,
        "upload_time": "2022-03-06T17:10:58",
        "upload_time_iso_8601": "2022-03-06T17:10:58.388895Z",
        "url": "https://files.pythonhosted.org/packages/fe/1f/f9c1846826ba5a2c8057eb34f50779c8f6dc4542d45092eeea27cedafadb/pluck-graphql-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4836353adf112d69b6cde888274d901a2441f865b3441658d9cd5861f39358e",
          "md5": "d8199dcab6590f3903ac7bf76b592269",
          "sha256": "8edcf993d95b92fb1f5ba2a0843cebf884be5a6d905e15462aff2cbf7cddf204"
        },
        "downloads": -1,
        "filename": "pluck_graphql-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8199dcab6590f3903ac7bf76b592269",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 12307,
        "upload_time": "2022-03-14T20:31:21",
        "upload_time_iso_8601": "2022-03-14T20:31:21.520685Z",
        "url": "https://files.pythonhosted.org/packages/d4/83/6353adf112d69b6cde888274d901a2441f865b3441658d9cd5861f39358e/pluck_graphql-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7d5c1fe77d84c1d7e11f3d3a51897f3f0f38ee0e5854c6f571595070cf7ccbc",
          "md5": "10f9eac886e46effc059ce29aae203e2",
          "sha256": "5a6791815727e6210af22e1c926d5c55e693f0426c95599b770551198a42d08d"
        },
        "downloads": -1,
        "filename": "pluck-graphql-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "10f9eac886e46effc059ce29aae203e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12956,
        "upload_time": "2022-03-14T20:31:22",
        "upload_time_iso_8601": "2022-03-14T20:31:22.956691Z",
        "url": "https://files.pythonhosted.org/packages/b7/d5/c1fe77d84c1d7e11f3d3a51897f3f0f38ee0e5854c6f571595070cf7ccbc/pluck-graphql-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4836353adf112d69b6cde888274d901a2441f865b3441658d9cd5861f39358e",
        "md5": "d8199dcab6590f3903ac7bf76b592269",
        "sha256": "8edcf993d95b92fb1f5ba2a0843cebf884be5a6d905e15462aff2cbf7cddf204"
      },
      "downloads": -1,
      "filename": "pluck_graphql-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d8199dcab6590f3903ac7bf76b592269",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 12307,
      "upload_time": "2022-03-14T20:31:21",
      "upload_time_iso_8601": "2022-03-14T20:31:21.520685Z",
      "url": "https://files.pythonhosted.org/packages/d4/83/6353adf112d69b6cde888274d901a2441f865b3441658d9cd5861f39358e/pluck_graphql-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7d5c1fe77d84c1d7e11f3d3a51897f3f0f38ee0e5854c6f571595070cf7ccbc",
        "md5": "10f9eac886e46effc059ce29aae203e2",
        "sha256": "5a6791815727e6210af22e1c926d5c55e693f0426c95599b770551198a42d08d"
      },
      "downloads": -1,
      "filename": "pluck-graphql-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "10f9eac886e46effc059ce29aae203e2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 12956,
      "upload_time": "2022-03-14T20:31:22",
      "upload_time_iso_8601": "2022-03-14T20:31:22.956691Z",
      "url": "https://files.pythonhosted.org/packages/b7/d5/c1fe77d84c1d7e11f3d3a51897f3f0f38ee0e5854c6f571595070cf7ccbc/pluck-graphql-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}