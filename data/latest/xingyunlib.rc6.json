{
  "info": {
    "author": "严子昱",
    "author_email": "yanziyu252625@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "\n# xingyunlib\n[toc]\n\n开发者：严子昱|崔轩宇\n\nv1.2.20201004\n\n#v1.2.xx以后全是正式版#\n\n#hack-20201004:修复xesuser故障\n\n版权所有，侵权必究\n\n内置函数 导入方式：\n\n```python\nfrom xingyunlib import *\n```\n### 加密函数\n\n```python\nmd=md5(\"111\")#作用：用MD5加密\"111\"，返回一个字符串\ns1=sha1(\"111\")#作用：用sha1加密\"111\"，返回一个字符串\ns256=sha256(\"111\")#作用：用sha1加密\"111\"，返回一个字符串\n```\n\n### 颜色类\n\n```python\ncolor=colorX(颜色,传进去的颜色类型)#类型支持\"rgb\",\"hsv\",\"hex\"\n#示例：\ncolor=colorX((100,100,100),\"rgb\")\n```\n\n#### color.color\n\n返回颜色\n\n```python\nz=color.color\n```\n\n#### color_to(to_color,change=False)\n\n返回一个要转换的颜色\n\nto_color:转换的颜色，类型支持\"rgb\",\"hsv\",\"hex\"\n\nchange：是否更改原来的颜色\n\n```python\ncolor=colorX((255,255,255),\"rgb\")#实例化rgb\ncolor.color_to(\"hex\",True)#更改进制为16进制\nprint(color.color)#打印出color.color\n```\n\n\n\n# all（一次性导入扩展！可能出现覆盖现象！）\n\n## 使用方式\n\n```python\nfrom xingyunlib.all import*\n#或者\nimport xingyunlib.all as xingyunlib\n```\n\n# print_format（print格式化扩展）\n\n开发者：严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.print_format import*\n```\n\n\n\n### print() \n\n```python\nprint(*str,t=0,sepr=\" \",end=\"\\n\") \n```\n\n\n我们来逐个讲解他们的用法 \n\n首先来看t参数： \nt=每个字停留的时间(默认为不停留) \n比如说，要每个字停留1秒，输出\"nice\"的代码如下： \n`print(\"nice\",t=1)` \n\n然后我们来看end参数 \n这个end参数其实和原来print的end参数是同样的作用 \n默认是\"\\n\"(换行符) \n\n最后我们看sepr参数，这个参数也是和原来print的sepr是同样的作用 \n我们来看一个例子： \n`print(\"ni\",\"e\",sepr=\"c\")` \n最后输出的就是“nice” \n\n我们来看大家这个很关心的变色简洁方式 \n我们在变色具体支持这些颜色： \n红、白、绿、蓝、黄、青、紫 \n用法如下（注意是两个斜杠）： \n'\\\\'+颜色（字的颜色变化） \n'\\\\l'+颜色（字的颜色变化,亮色）\n'\\\\b'+颜色（字的背景变化） \n'\\\\bl'+颜色（字的背景变化,亮色） \n'\\\\'(去除所有的变色效果) \n\n### clear_os()\n\n```python\nclear_os()\n```\n\n清除屏幕上的所有文字\n\n# xes更改（去除xeslib里面所有的print）\n\n最新版本的xingyunlib增加了xeslib的内容\n\n## 导入方式\n\n```python\nfrom xingyunlib.xes import xeslib里面的库名\n```\n\n更改：\n\n把xeslib里面所有的print都去了\n\n修改AIspeak.speak函数\n\n```python\nfrom xingyunlib.xes import AIspeak\nxes.AIspeak.speak(\"hello python!\",\"file.mp3\")\n\"\"\"\n本程序作用：\n将hello python！\n保存到file.mp3音频文件里面，并且不播放\n\"\"\"\nxes.AIspeak.speak(\"hello python!\")\n\"\"\"\n本程序作用：\n播放hello python！这段音频\n\"\"\"\n```\n\n# xesapp（获取学而思站上某个作品的数据！已修复！）\n\n开发者：严子昱|崔轩语\n\n## 导入方式\n\n```python\nfrom xingyunlib.xesapp import*\n```\n\n\n\n### xesapp(url)\n\n```python\n<xesapp>=xesapp(url)\n```\n\n构建一个运行对象\nurl为学而思里面的py作品网址\n\n接下来讲这个类的方法：\n\n\n##### get_hot()<u></u>\n\n返回作品的热度\n\n```python\nprint(xesapp.get_hot())\n```\n\n##### get_cover()\n\n返回作品封面的url\n\n```python\nprint(xesapp.get_cover())\n```\n\n##### load_cover(filename)\n\n下载作品封面到filename\n\n```python\nxesapp.load_cover(\"\")\n```\n\n##### get_view()\n\n返回作品的观看人数\n\n```python\nprint(xesapp.get_view())\n```\n\n##### get_hot()\n\n返回作品的热度\n\n```python\nprint(xesapp.get_hot())\n```\n\n##### get_like()\n\n返回作品的点赞数\n\n```python\nprint(xesapp.get_like())\n```\n\n##### get_unlike()\n\n返回作品的点踩数\n\n```python\nprint(xesapp.get_unlike())\n```\n\n##### load_file(cache = \"\")\n\n默认下载作品源文件到工作目录\n如果cache不为空择下载到这个文件夹\n\n```python\nxesapp.load_file()\n```\n\n##### is_like()\n\n判断在程序运行这个作品有没有人点赞\n返回一个bool值\nTrue：点赞了\nFalse：点踩了\nNone：没有点赞也没有点踩\n\n```python\nif xesapp.is_like == True:\n    print(\"点赞了\")\nelif xesapp.is_like == False:\n    print(\"点踩了\")\nelse:\n    print(\"什么都没点\")\n```\n\n##### run_app()\n\n运行这个作品\n\n```python\nexec(xesapp.run_app())\n```\n\n\n##### get_published()\n\n获取作品第一次保存时间\n\n```python\nprint(xesapp.get_published())\n```\n\n##### get_modified()\n\n获取作品最后一次更新时间\n\n```python\nprint(xesapp.get_modified())\n```\n\n##### is_hidden_code()\n\n获取作品是否隐藏代码\n\n```python\nif xesapp.is_hidden_code():\n    print(\"作品的代码隐藏了\")\nelse:\n    print(\"作品的代码没有隐藏\")\n```\n\n##### get_description()\n\n获取作品的说明\n\n```python\nprint(xesapp.get_description())\n```\n\n##### get_comments()\n\n获取作品一共有多少人评论\n\n```python\nprint(xesapp.get_comments())\n```\n\n##### is_comments()\n\n获取从这个作品初始化到现在是否有人评论\n\n```python\nif xesapp.is_comments():\n    print(\"评论了\")\nelse:\n    print(\"没有评论\")\n```\n## cmt(url)\n\n这个是一个获取评论的api\n\n### dta_dic\n\n```python\n#获取一个包含所有评论的列表\na=cmt(\"http://code.xueersi.com/home/project/detail?lang=code&pid=9785566&version=offline&form=python&langType=python\")\nprint(a.dta_dic)\n#输出\n\"\"\"\n（略）\n\"\"\"\n```\n\n### fmt（）\n\n```python\n#返回一个字符串（评论的字符格式化）\na=cmt(\"http://code.xueersi.com/home/project/detail?lang=code&pid=9785566&version=offline&form=python&langType=python\")\nprint(a.fmt())\n#部分输出\n\"\"\"\n[2020-10-17 20:52:11]\n\t一维回复严子昱:快点=-=不取关就pen你\n\n[2020-10-17 20:51:31]\n\t一维回复严子昱:有时关注我这个人，并不是太好的选择\n\t取关我吧，有事请加qq：3456198711\n\t微信：huiyu431249891\n\n[2020-10-17 18:34:35]\n\t俊翔回复严子昱:作者是喜欢互关吗？居然关注我这样的蚂蚁，太感动了\n\n[2020-10-15 21:56:11]\n\t陈奕翰回复严子昱:考虑合作嘛\n\n\n[2020-10-10 19:29:26]\n\t茜幻回复严子昱:作者在吗\n\n[2020-10-10 19:10:42]\n\t蒋狄璁回复严子昱:互关\n\n.......(略)\n\"\"\"\n\n```\n\n### sorted（by=“likes”,reverse=True）\n\n```python\n#设置排序\na=cmt(\"http://code.xueersi.com/home/project/detail?lang=code&pid=9785566&version=offline&form=python&langType=python\")\na.sorted(by=\"likes\",reverse=True)#reverse为 从高到低排列\nprint(a.fmt())\n\n\"\"\"\n[2020-10-15 21:56:11]\n\t陈奕翰回复严子昱:考虑合作嘛\n\n\n[2020-10-17 20:52:11]\n\t一维回复严子昱:快点=-=不取关就pen你\n\n[2020-10-17 18:34:35]\n\t俊翔回复严子昱:作者是喜欢互关吗？居然关注我这样的蚂蚁，太感动了\n\n[2020-10-01 20:51:57]\n\t王玎珰回复严子昱:啊这\n...（略）\n\"\"\"\n\n\n```\n\n\n\n# **xesuser（获取学而思站上某个用户的数据！已修复！）**\n\n<u>***注意！！***</u>\n\n<u>***千万一定不要超高频率请求，否则会报错！！！***</u>\n\n作者：严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.xesuser import*\n```\n\n\n\n### get_user_id(\"作品网址\")\n\n```python\n   user_id=get_user_id(\"作品网址\")\n   #本作品最重要的函数，这个获取作品网址的作者的user_id\n```\n\n### get__fans(user_id) \n\n```python\n   fans_info=get_fans(user_id) \n   #这个user_id从上面拿\n   #获取这个人粉丝的大部分信息，返回一个列表\n   #每项是一个字典：\n      fans_info[x][\"realname\"]#:获取第x项他的名字\n      fans_info[x][\"avatar_path\"]#:获取第x项他头像的url\n      fans_info[x][\"fans\"]#:获取第x项他的粉丝数量\n      fans_info[x][\"follows\"]#:获取第x项他的关注数量\n```\n\n### get_follows(user_id) \n\n```python\n   follows_info=get_follows(user_id) \n   #大体和get_fans一样\n   #获取这个人粉丝的大部分信息，返回一个列表\n   #每项是一个字典：\n      follows_info[x][\"realname\"]#:获取第x项他的名字\n      follows_info[x][\"avatar_path\"]#:获取第x项他头像的url\n      follows_info[x][\"fans\"]#:获取第x项他的粉丝数量\n      follows_info[x][\"follows\"]#:获取第x项他的关注数量\n```\n\n### get_info(user_id) \n\n```python\n   user_info=get_info(user_id) \n   #获取这个人的大部分信息，返回一个字典\n   user_info[\"name\"]#:返回这个人的名字\n   user_info[\"slogan\"]#:返回这个人的口号(名字下面那段)\n   user_info[\"fans\"]#:返回这个人的粉丝数量\n   user_info[\"follows\"]#:返回这个人的关注数量\n   user_info[\"icon\"]#:返回这个人的头像url\n```\n\n### user(user_id)\n\n```python\n   user=user(user_id)#这个其实大部分都是前面的内容，不过前面的加载比较慢，这个适用需要数据比较多的程序\n   user.works#：获取发布的作品总数\n   #user.work_info#：获取发布的作品的信息，返回一个列表，列表的每项都是字典\n   user.work_num#：获取一共有多少个作品（曾经发过的也算）\n\n   user.fans#：获取粉丝总数\n   #user.fans_info#：获取粉丝信息（和get_fans返回一样的信息）\n\n   user.follows#：获取关注总数\n   #user.follows_info#：获取关注信息（和get_follows返回一样的信息）\n   user.like_num#：获取点赞总数\n   user.view_num#：获取浏览总数\n   user.favorites#：获取收藏总数\n\n```\n\n# xesapi\n\n## 导入方式\n\n```python\nfrom xingyunlib.xesapi import* \n```\n\n## get_api(url)\n\n返回url这个api上的数据\n\n示例->http://code.xueersi.com/api/index/works/modules\n\n```python\nprint(get_api(\"http://code.xueersi.com/api/index/works/modules\"))\n\"\"\"\n==输出==\n{'stat': 1, 'status': 1, 'msg': '操作成功', 'data': [{'title': '可多推荐', 'simple_title': '推荐', 'lines': 2, 'projects': [{'id': 11584188, 'name': '圆圈战争', 'category': 1, 'type': 'normal', 'user_id': 9686613, 'thumbnail': 'https://rescode.xesimg.com/hufu-code/common/mit/32f6766530dc287c1c8ab00c634e352b.png', 'published': 1, 'published_at': '2020-11-18 19:42:53', 'modified_at': '2020-11-18 19:42:53', 'likes': 4, 'views': 333, 'comments': 0, 'version': '3.0', 'source': 'xes_live', 'deleted_at': None, 'original_id': 2, 'created_at': '2020-11-17 20:46:43', 'updated_at': '2020-11-20 21:25:02', 'weight': 1, 'adapter': '', 'hidden_code': 2, 'source_code_views': 3, 'removed': 0, 'first_frame': 'https://rescode.xesimg.com/hufu-code/common/mit/32f6766530dc287c1c8ab00c634e352b.png', 'unlikes': 5, 'project_id': 11584188, 'works_id': 11584188, 'lang': 'scratch', 'popular_score': 12.13, 'username': '冯嘉睿', 'user_avatar': 'https://oot.xesimg.com/user/h/cc1e41a2dc511b8108a05b8f0dc8cf69.jpg', 'project_type': 'scratch', 'topic_id': 'CS_11584188'}, {'id': 11027485, 'name': '井字棋小游戏(双人)', 'category': 1, 'type': 'normal', 'user_id': 7818569, 'thumbnail': \n...(略)\n\"\"\"\n```\n\n## get_page(page,lang=\"\",tag=\"\",type=\"popular\")\n\npage：页码\n\nlang：语言\n\ntag：标签\n\ntype：爬取页面类型（默认为popular）\n\n```python\nprint(get_page(1,\"cpp\"))\n'''\n==输出==\n{'page': '1', 'per_page': '35', 'total': 7000, 'data': [{'id': 10443775, 'name': '教你如何黑电脑', 'category': 1, 'type': 'normal', 'user_id': 8730932, 'thumbnail': 'https://livefile.xesimg.com/programme/assets/b33adba6678f5e477f65d0f36d5581eb.jpg', 'la\n...(略)\n'''\n```\n\n## page_all_tags\n\n这个是一个常量(就是上面那个tag可以取得量)\n\n```python\nprint(page_all_tags)\n\"\"\"\n==输出==\n{'all_tags': ['游戏', '动画', '故事', '模拟', '艺术', '教程', '算法', '海龟', '沙盒专区', '其他'], 'tips': '1、为什么要给作品打分类标签？n为你的作品选择分类，更有利于其他小朋友精准的找到你的作品，这样，你的作品被别人看到的机率会更大哦。n一定要准确的选择分类，不要随便选择不或者不选呦！nn2、如何为自己的作品选择分类？n要想准确的选择分类，首先要先知道每个分类代表什么意思，一起来了解一下吧！n游戏：射击，冒险，跑酷，换装等等这些都算作游戏。n动画：用编程实现动画效果的作品。n故事：用编程表达一个奇妙的故事，比如写小说。n模拟：视频软件模拟器，音乐软件模拟器，浏览器模拟器，甚至做个模拟的系统。n艺术：美术，音乐等等类型的作品都可以。n教程：如果你是大牛，就快做作品教别人和你一样优秀吧！n算法：算法是解决一个问题的方法，C++用户请看这里。n海龟：海龟画图是python语言中专门用户画图的方法呦！n沙盒专区：MC？mini？为什么不自己创作一个类似的作品呢？n其他：如果没想好自己作品的分类，就选这个吧。'}\n\"\"\"\n```\n\n# pygame_extend（pygame扩展）\n\n导入方式：\n\n```python\nfrom xingyunlib.pygame_extend import *\n```\n\n(这样顺便导入pygame和sys欸嘿嘿)\n\n！没写完教程等需求多了在说把！\n\n# tkinter_extend（tkinter扩展）\n\n## 导入方式\n\n```python\nfrom xingyunlib.tkinter_extend import*\n```\n\n作者：严子昱\n\n##   inpu_box\n\n(class)\n\n```python\n#创建(就当button控件用)：\na=inpu_box(tk,函数名,**按钮的配置)\n\n#打包：\na.pack(**pack的配置)\n\n#配置：\na.config_entry(**文本框的配置)\na.config_button(**按钮的配置)\n#其实你基本可以当做Entry来用，除了初始化语句还有配置以外基本都是一样的\n#（剩下的教程还没写完）\n```\n\n## jitter()\n\n作用：抖动窗口（需要在窗口加载完毕后使用，否则可能会出现鬼畜）\n\n```python\nfrom tkinter import *\nroot = Tk()\na = Text(root)\na.pack(fill=BOTH)\n\njitter(root)\nroot.mainloop()\n```\n\n## center()\n\n作用：将窗口居中\n\n```python\nfrom tkinter import *\nroot = Tk()\na = Text(root)\na.pack(fill=BOTH)\n\njitter(root)\nroot.mainloop()\n```\n\n# dsfAdmin（自动安装第三方库）\n\n开发者|严子昱\n\n(暂时只支持windows)\n\n## 导入方式\n\n```python\nfrom xingyunlib.dsfAdmin import*\n```\n\n\n\n### get_pakages()\n\n作用：获取已安装每个包的版本\n\n```python\nfor x in range(len(get_pakages())):\n    print(\"库\"+x[0].center(19,\" \"),\"版本\"+x[1].center(10,\" \"))\n\n```\n\n### find_pakages(pakages,ver=None)\n\n作用：获取时否安装pakage这个库，ver代表版本，默认不进行版本监测\n\n```python\nif find_pakages(\"xingyunlib\"):\n    print(\"你有安装xingyunlib库！\")\nelse:\n    print(\"你没有安装xingyunlib库！\")\n```\n\n### upgrade_pakages(pakage)\n\n作用：更新pakage这个库\n\n```python\nupgrade_pakages(“xingyunlib”)\n```\n\n### install_pakages(pakage)\n\n作用：安装这个库,常和find_pakages一起用\n\n```python\nif not find_pakages(\"alsolib\"):\n\tinstall_pakages(\"alsolib\")\n#注意这个，这个非常重要的,可以在没安装第三方库的时候自动下载库\n```\n\n### dump_pip_list(filename)\n\n作用：将库的list保存到这个文件里面\n\n### load_pip_list(filename)\n\n作用：将这个文件里面的库导出到正在使用的编译器\n\n```python\ndump_pip_list(\"pip_pakages\")\n#同目录会出现一个‘pip_pakages.pip’文件\n# |把这个文件移到另一台电脑\n# v\nload_pip_list(\"pip_pakages\")\n#然后这个程序就会自动安装在第一台电脑上所有的第三方库了\n```\n\n\n\n# image（pillow及wordcloud扩展）\n\n开发者|严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.image import*\n```\n\n## resize(filename,XY)\n\n作用：将filename这个文件变成XY大的文件\n\n```python\nresive(\"img1.png\",(100,100))\n#将img1.png变成100x100的缩略图\n```\n\n## cloud(text,font_path,savafile=None,image=None,background_color=\"white\",color=True)\n（这个函数要安装numpy和wordcloud库）\n\n作用：text为列表，font_path为字体文件的位置\n\nsavafile为保存的文件名，image为模板图片的名字\n\nbackground_color为背景颜色 color为是否根据模板图片的颜色上色（在有模板的情况下）\n\n```python\nimport os\ntext=\"ahuidgayugwuydgatywefuwfdytafayuofdwtyfauyfatyfautfatyfatyufduyoawfgtydfeutoaftyaf\".split(\"a\")\ncloud(text,\"(你的字体文件)\",\"all.png\")\nos.startfile(\"all.png\")\n```\n\n## add_text(img, text, **args)\n\n这个**args包括以下内容\n\n```python\nfont=（”字体文件.ttf”，字号）\nXY=（x坐标，y坐标）#这个坐标以图片左上角为0，0（原点）\nfillColor=颜色（建议使用16进制颜色）\nshow_img=True#设置是否在修改完成后显示图片，默认为False\nchange_img=\"newimgname.png\"#设置输出的图片文件名\nadd_text(\"原图.png\",\"广告\",font=font,XY=XY,fillColor=fillColor,show_img=show_img,change_img=change_img)\n```\n\n# user（自定义用户类）\n\n开发者|严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.user import *\n```\n\n初始化：\n\n## user_login(filename=None)\n\nfilename:之前的保存数据的文件名，如果没有保存过请不要写filename\n\n```python\nuser=user_login()\n#导入之前的数据\nuser=user_login(\"<数据文件名称>\")\n```\n\n注册：\n\n#### user.registered(name,key,flag=True,filename=None)\n\nname:注册的名字\n\nkey:密码\n\nflag设置为True:如果已经导入数据则返回False(如果已经注册过了就不让你注册)否则返回True(注册成功）\n\nflag设置为False：都可以注册\n\nfilename：保存数据文件的名称\n\n```python\ntype=user.registered(input(\"请输入你的名字：\"),input(\"请输入你的密码：\"),flag=True,filename=\"data\")\nif type==True:\n    print(\"注册成功！\")\nelse:\n    print(\"注册失败！\")\n```\n\n#### user.login(name,key)\n\nname:注册时的名称\n\nkey:密码\n\n返回一个bool值，为True或False\n\nTrue：验证密码正确 False：验证失败\n\n```python\ntype=user.login(input(\"请输入你的名字：\"),input(\"请输入你的密码：\"))\nif type==True:\n    print(\"注册成功！\")\nelse:\n    print(\"注册失败！\")\n```\n\n#### user.load(filename)\n\n导入保存的数据，filename为文件名\n\n```python\nb=user_login()\nb.load(\"你保存的文件名\")\n```\n\n# mail\n\n## 导入方式\n\n```python\nfrom xingyunlib import mail\n```\n\n用法：\n\n## mail.send(to,title,txt)\n\n```python\nmail.send(\"3161399620@qq.com\",\"hello python\",\"hello world!\")\n```\n\nto:发送给的邮箱\n\ntitle:标题\n\ntxt:发送的文本\n\n# err（自定义抛出错误）\n\n## 导入方式\n\n```python\nfrom xingyunlib import err\n```\n\n当你有一些程序想在特定的情况终止怎么办？\n\n试试下面的程序\n\n## err(txt)\n\n```python\nfrom xingyunlib import err\na=input(\"请输入1：\")\nif a!=\"1\":#如果非1\n    err.err(\"你没有输入1。。。\")\nelse:\n    ...\n    #程序自然退出\n```\n\n# http_spider（爬虫）\n\n## 导入方式\n\n```python\nfrom xingyunlib import http_spider\n```\n\n## load_requests(str,between,line)\n\n默认值：between=\":\" ; line=\"\\n\"\n\nbetween：分隔符\n\nline：换行符\n\n这个概念有点难理解，具体看下面示例，能不能听懂由天命\n\n```python\nfrom xingyunlib import http_spider\nheader=http_spider.load_requests(\"\"\"Accept: application/json, text/plain, */*\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9,en;q=0.8\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.116 Safari/537.36\"\"\",\": \",\"\\n\")#那段字符串是从浏览器复制出来的\nprint(header)\n\"\"\"\n----------\n输出：\n{'Accept': 'application/json, text/plain, */*', 'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.116 Safari/537.36'}\n\"\"\"\n\n```\n\n主要作用是自动分析从浏览器复制出来的headers\n\n## spider(*args,**kwargs)\n\n这个函数就明显很水，完全是凑数用的，不过对于一些新手来说还是有点用的\n\n其实就是requests的变体，增加了一个判断是否状态码是否10x，40x，50x的功能而已\n\n```python\nfrom xingyunlib import http_spider\nprint(http_spider.spider(\"http://code.xueersi.com/api/compilers/6?id=6\").text)\n#略去输出结果\n```\n\n## ua_list\n\n话不多说，上代码\n\n```python\nfrom xingyunlib import http_spider\nprint(http_spider.ua_list)\n\"\"\"\n输出：\n['Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)', 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)', 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)', 'Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)', 'Mozilla/5.0 (compatible; rv:1.9.1) Gecko/20090702 Firefox/3.5', 'Mozilla/5.0 (compatible; rv:1.9.2) Gecko/20100101 Firefox/3.6', 'Mozilla/5.0 (compatible; rv:2.0) Gecko/20110101 Firefox/4.0', 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.2) Gecko/20100101 Firefox/6.0.2', 'Mozilla/5.0 (compatible) AppleWebKit/534.21 (KHTML, like Gecko) Chrome/11.0.682.0 Safari/534.21', 'Opera/9.80 (compatible; U) Presto/2.7.39 Version/11.00', 'Mozilla/5.0 (compatible; U) AppleWebKit/533.1 (KHTML, like Gecko) Maxthon/3.0.8.2 Safari/533.1', 'Mozilla/5.0 (Linux; U; Android 2.2) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1 ', 'Mozilla/5.0 (iPhone; U; CPU OS 4_2_1 like Mac OS X) AppleWebKit/532.9 (KHTML, like Gecko) Version/5.0.3 Mobile/8B5097d Safari/6531.22.7', 'Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/4.0.2 Mobile/8C148 Safari/6533.18.5', 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_7) AppleWebKit/534.16+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4']\n\"\"\"\n```\n\n这是一个列表，里面有很多笔者搜集的ua，（截至2020-9-19）收录了15个ua，足够你用了\n\n## get_xes_url(url)\n\n爬取一个xes的页面\n\n```python\nfrom xingyunlib import http_spider\nprint(http_spider.get_xes_url(\"http://code.xueersi.com/api/compilers/6?id=6\"))\n#略去输出结果\n```\n\n# data（保存数据）\n\n数据类方法\n\n2020-10-1\n\n作者：严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib import data\n```\n\n## Data\n\n初始化方法：\n\n```python\ndta=data.Data(filename,find=False)\n\"\"\"\nfilename:文件名，若没有则创建\nfind:搜索模式，若没有filename则报错\n\"\"\"\n```\n\n输入数据：\n\n### change_data(data)\n\n```python\ndta=data.Data(filename,find=False)\n#略\n\"\"\"\ndata参数支持的数据:\nlist,bool,tutle,str,set,dict,int,float\n\"\"\"\ndta.change_data(\"加油！\")\n```\n\n### eval_data()\n\n把从文件中保存的数据转换成可执行内容\n\n```python\n\"\"\"fruit.txt内容：\n[\"apple\",\"orange\"]\n\"\"\"\ndta=data.Data(\"fruit.txt\",find=False)\ndta.eval_data()\nfor x in dta.data:\n    print(f\"fruit:{x}\")\n\"\"\"\n输出结果：\nfruit:apple\nfruit:orange\n\"\"\"\n\n\n```\n\n### save()\n\n保存结果到文件中\n\n```python\ndta=data.Data(\"great\",find=False)\ndta.change_data([\"hhc\",\"hhv\"])\ndta.save()\n\"\"\"great内容:\n[\"hhc\",\"hhv\"]\"\"\"\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "严子昱",
    "maintainer_email": "yanziyu252625@qq.com",
    "name": "xingyunlib",
    "package_url": "https://pypi.org/project/xingyunlib/",
    "platform": "all",
    "project_url": "https://pypi.org/project/xingyunlib/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/xingyunlib/1.2.20210416/",
    "requires_dist": [
      "requests",
      "pygame",
      "zmail",
      "pillow",
      "numpy"
    ],
    "requires_python": "",
    "summary": "星光☆学而思专用库",
    "version": "1.2.20210416",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10083838,
  "releases": {
    "1.2.20201001": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70576fa18d3b3b7a0a99a587cf9599dc8635ad283e9049e1b1e3ed377951b202",
          "md5": "dcae7b8b36d31cba4a3c2839ac0745a6",
          "sha256": "633918ba82179b7cea93b33969313782c2b0e19dcb7aecbab0901533e109bfbb"
        },
        "downloads": -1,
        "filename": "xingyunlib-1.2.20201001-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcae7b8b36d31cba4a3c2839ac0745a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29082,
        "upload_time": "2020-10-01T11:28:39",
        "upload_time_iso_8601": "2020-10-01T11:28:39.866401Z",
        "url": "https://files.pythonhosted.org/packages/70/57/6fa18d3b3b7a0a99a587cf9599dc8635ad283e9049e1b1e3ed377951b202/xingyunlib-1.2.20201001-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5039abe5372d54460c07f202585e7da2cf53cf016bc884542732e07a3544275",
          "md5": "5036b06c89ada88b6baaffe20b5a77b6",
          "sha256": "8329cbfa3a12efca68b74d3d29e74a62e2fa84ed0ce68c5fde53b16b36171712"
        },
        "downloads": -1,
        "filename": "xingyunlib-1.2.20201001.tar.gz",
        "has_sig": false,
        "md5_digest": "5036b06c89ada88b6baaffe20b5a77b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28448,
        "upload_time": "2020-10-01T11:28:41",
        "upload_time_iso_8601": "2020-10-01T11:28:41.593956Z",
        "url": "https://files.pythonhosted.org/packages/d5/03/9abe5372d54460c07f202585e7da2cf53cf016bc884542732e07a3544275/xingyunlib-1.2.20201001.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.20201004": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd0268d7d8ee4fc752ea37d5540f23c03e7725c97a6a590e61a963fae988ee78",
          "md5": "05ead7e8271e41432d6cc38f1b2392f2",
          "sha256": "d105c9add2f36fe6e87612db6c68bf3032aa8847e7876d52e5822025edde64b0"
        },
        "downloads": -1,
        "filename": "xingyunlib-1.2.20201004-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05ead7e8271e41432d6cc38f1b2392f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30309,
        "upload_time": "2020-10-04T11:29:20",
        "upload_time_iso_8601": "2020-10-04T11:29:20.961422Z",
        "url": "https://files.pythonhosted.org/packages/dd/02/68d7d8ee4fc752ea37d5540f23c03e7725c97a6a590e61a963fae988ee78/xingyunlib-1.2.20201004-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32a2514b57c7c96394ff2743f8a9dcf996b73ef5d5750ed4ab9c5348ef8f6268",
          "md5": "430d85e1f6a4bdc690544fdf56f016c0",
          "sha256": "f22ddfaef0a62890585a9b48837085917412bc01380fb5dccc77bda197e4da07"
        },
        "downloads": -1,
        "filename": "xingyunlib-1.2.20201004.tar.gz",
        "has_sig": false,
        "md5_digest": "430d85e1f6a4bdc690544fdf56f016c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30012,
        "upload_time": "2020-10-04T11:29:22",
        "upload_time_iso_8601": "2020-10-04T11:29:22.656428Z",
        "url": "https://files.pythonhosted.org/packages/32/a2/514b57c7c96394ff2743f8a9dcf996b73ef5d5750ed4ab9c5348ef8f6268/xingyunlib-1.2.20201004.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.20201024": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "426f2139ef9d13f2ec06eda44f2eeb71d72ac1f54624c52b21eaaabd7e7ac5bd",
          "md5": "aa3dbf999f180918a4faaef0022e7675",
          "sha256": "bbd69ff506b9680e276be53969766fe26819127cbf3e76889b1c78ec1490c24e"
        },
        "downloads": -1,
        "filename": "xingyunlib-1.2.20201024.tar.gz",
        "has_sig": false,
        "md5_digest": "aa3dbf999f180918a4faaef0022e7675",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32398,
        "upload_time": "2020-10-24T03:45:38",
        "upload_time_iso_8601": "2020-10-24T03:45:38.995777Z",
        "url": "https://files.pythonhosted.org/packages/42/6f/2139ef9d13f2ec06eda44f2eeb71d72ac1f54624c52b21eaaabd7e7ac5bd/xingyunlib-1.2.20201024.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.20201120": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91347e4171228825970a015d80c1cb136a210b119fbbe81366290935851f439f",
          "md5": "3fd3c2854808ebddbf959d9347fae97e",
          "sha256": "52299ca9f30c03d5bf0be6ec5e07298e2a7e53b77daa4c7a5fa58f68766db13d"
        },
        "downloads": -1,
        "filename": "xingyunlib-1.2.20201120-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3fd3c2854808ebddbf959d9347fae97e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33705,
        "upload_time": "2020-11-20T13:57:37",
        "upload_time_iso_8601": "2020-11-20T13:57:37.558335Z",
        "url": "https://files.pythonhosted.org/packages/91/34/7e4171228825970a015d80c1cb136a210b119fbbe81366290935851f439f/xingyunlib-1.2.20201120-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9b59195e12bc910d9a2e0264e0b4c20006bed756e2e335036a9ca0325ef498a",
          "md5": "af26e5d65caa14d0c8729e2c3bb7f81e",
          "sha256": "e517a54df70baf123ca320bbffc07818bb86b3c288edab3b6ca5b245df5a8aaa"
        },
        "downloads": -1,
        "filename": "xingyunlib-1.2.20201120.tar.gz",
        "has_sig": false,
        "md5_digest": "af26e5d65caa14d0c8729e2c3bb7f81e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38115,
        "upload_time": "2020-11-20T13:57:48",
        "upload_time_iso_8601": "2020-11-20T13:57:48.588956Z",
        "url": "https://files.pythonhosted.org/packages/a9/b5/9195e12bc910d9a2e0264e0b4c20006bed756e2e335036a9ca0325ef498a/xingyunlib-1.2.20201120.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.20201206": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a272bb30fc2cb9eefac914fa14b095bc38733b3ec1d613a96c25545b74bfaa5",
          "md5": "c85a77d24228ec27a64ece6305252db7",
          "sha256": "90e73d6fb25c975940b2b419167675f953e52133412a95ebfef58b9f943316a8"
        },
        "downloads": -1,
        "filename": "xingyunlib-1.2.20201206.tar.gz",
        "has_sig": false,
        "md5_digest": "c85a77d24228ec27a64ece6305252db7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39090,
        "upload_time": "2020-12-06T02:32:08",
        "upload_time_iso_8601": "2020-12-06T02:32:08.899428Z",
        "url": "https://files.pythonhosted.org/packages/3a/27/2bb30fc2cb9eefac914fa14b095bc38733b3ec1d613a96c25545b74bfaa5/xingyunlib-1.2.20201206.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.20210416": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b2066efffd67e9a138f9ccfbb7aacd76e7988850738c0a17f6ee980114a570a",
          "md5": "16bb0b308d5af4007caf97e48d924fbe",
          "sha256": "c4608d482a50bb945c0cfb719bca3e0829d86e72fc62e67d6e672ec073089dd8"
        },
        "downloads": -1,
        "filename": "xingyunlib-1.2.20210416-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16bb0b308d5af4007caf97e48d924fbe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35041,
        "upload_time": "2021-04-16T12:28:29",
        "upload_time_iso_8601": "2021-04-16T12:28:29.908927Z",
        "url": "https://files.pythonhosted.org/packages/2b/20/66efffd67e9a138f9ccfbb7aacd76e7988850738c0a17f6ee980114a570a/xingyunlib-1.2.20210416-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d39dfb7ff19f3f8cfb7a60067681130ce6755b8c0fbce6594affa5c6537c7159",
          "md5": "5bbcc8306c2ca41a7c3ef3dd74a5f36f",
          "sha256": "3f9acc5fd617ebe1183c6336f488c5caea5c0cce68fc9fbdf6267e30d1faed58"
        },
        "downloads": -1,
        "filename": "xingyunlib-1.2.20210416.tar.gz",
        "has_sig": false,
        "md5_digest": "5bbcc8306c2ca41a7c3ef3dd74a5f36f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39133,
        "upload_time": "2021-04-16T12:28:31",
        "upload_time_iso_8601": "2021-04-16T12:28:31.510368Z",
        "url": "https://files.pythonhosted.org/packages/d3/9d/fb7ff19f3f8cfb7a60067681130ce6755b8c0fbce6594affa5c6537c7159/xingyunlib-1.2.20210416.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b2066efffd67e9a138f9ccfbb7aacd76e7988850738c0a17f6ee980114a570a",
        "md5": "16bb0b308d5af4007caf97e48d924fbe",
        "sha256": "c4608d482a50bb945c0cfb719bca3e0829d86e72fc62e67d6e672ec073089dd8"
      },
      "downloads": -1,
      "filename": "xingyunlib-1.2.20210416-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "16bb0b308d5af4007caf97e48d924fbe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 35041,
      "upload_time": "2021-04-16T12:28:29",
      "upload_time_iso_8601": "2021-04-16T12:28:29.908927Z",
      "url": "https://files.pythonhosted.org/packages/2b/20/66efffd67e9a138f9ccfbb7aacd76e7988850738c0a17f6ee980114a570a/xingyunlib-1.2.20210416-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d39dfb7ff19f3f8cfb7a60067681130ce6755b8c0fbce6594affa5c6537c7159",
        "md5": "5bbcc8306c2ca41a7c3ef3dd74a5f36f",
        "sha256": "3f9acc5fd617ebe1183c6336f488c5caea5c0cce68fc9fbdf6267e30d1faed58"
      },
      "downloads": -1,
      "filename": "xingyunlib-1.2.20210416.tar.gz",
      "has_sig": false,
      "md5_digest": "5bbcc8306c2ca41a7c3ef3dd74a5f36f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39133,
      "upload_time": "2021-04-16T12:28:31",
      "upload_time_iso_8601": "2021-04-16T12:28:31.510368Z",
      "url": "https://files.pythonhosted.org/packages/d3/9d/fb7ff19f3f8cfb7a60067681130ce6755b8c0fbce6594affa5c6537c7159/xingyunlib-1.2.20210416.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}