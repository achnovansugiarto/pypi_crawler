{
  "info": {
    "author": "Joish J Bosco",
    "author_email": "joishbosco99@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# JSONJ\n\nJsonJ is a simple Python Library that allows parsing Complicated Nested Json tree to a Simple Json data.\nThis Library allows converting Complicated Nested Json Data to an Intermediate Simple Json Data, which make it easier to process the original data.\n\n### Example Data Conversion\n\n```sh\n########################## FROM #########################################\n{\"menu\": {\n  \"id\": \"file\",\n  \"value\": \"File\",\n  \"popup\": {\n    \"menuitem\": [\n      {\"value\": \"New\", \"onclick\": \"CreateNewDoc()\"},\n      {\"value\": \"Open\", \"onclick\": \"OpenDoc()\"},\n      {\"value\": \"Close\", \"onclick\": \"CloseDoc()\"}\n    ]\n  }\n}}\n\n###########################  TO #########################################\n{\n  'menu': {\n   'path': 'menu',\n   'isRoot': True,\n   'children': ['menu/id', 'menu/value', 'menu/popup']\n  },\n  'menu/id': {\n   'path': 'menu/id',\n   'isRoot': False,\n   'children': []\n  },\n            .\n            .\n            .\n  'menu/popup/menuitem/2/value': {\n   'path': 'menu/popup/menuitem/2/value',\n   'isRoot': False,\n   'children': []\n  },\n  'menu/popup/menuitem/2/onclick': {\n   'path': 'menu/popup/menuitem/2/onclick',\n   'isRoot': False,\n   'children': []\n  }\n}\n```\n\nAs you can see, this converted format is Elegant and can be Applied to a Various Task.\n\n### Converted Data Format Description\n```sh\n            .\n            .\n            .\n'menu/popup/menuitem/2/value': {\n   'path': 'menu/popup/menuitem/2/value',\n   'isRoot': False,\n   'children': []\n  },\n            .\n            .\n            .\n```\n\n- The key of the data is set to be the path of that particular node from the root Node\n- Each Key has a value which in turn is a simple Json with 3 parameters.\n  - path: The path of the particular node from the root node (same as that of the key)\n  - isRoot: Either it's a Root node or not\n  - children: Wheather the particular node has any children or not \n\n### Installation\n\n\n```sh\n$ pip3 install JsonJ\n```\n\n### Usage\n\n\n```sh\nfrom JsonJ import JsonJ\njson = JsonJ(<sample_json_data>)\n```\nNOTE: PLEASE MAKE SURE THE JSON DATA IS VALID, AS OF NOW THE LIBRARY DOES NOT CHECK WHETHER THE DATA IS VALID OR NOT, BUT THIS VALIDATION WILL BE DONE SOON\n### Detailed Usage\n\n```sh\n- get_parsed_data() - This function call returns the Intermediate Parsed data\n- clean() - This function call clears all the data saved in local variables\n```\n\n\n### Development\n\nWant to contribute? Great!\nAll you have to do is a Pull Request and start Working\n\n### Todo's\n\n - Search by node\n - Search by value\n - Json data validator\n - And a lot has to be done\n\nLicense\n----\n\nMIT\n\n\n**PEACE**\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Joish/JsonJ/archive/v_0.1.6.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Joish/JsonParser",
    "keywords": "Python 3,Json,Tree,Tree Traversal,Recursive",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "JsonJ",
    "package_url": "https://pypi.org/project/JsonJ/",
    "platform": "",
    "project_url": "https://pypi.org/project/JsonJ/",
    "project_urls": {
      "Download": "https://github.com/Joish/JsonJ/archive/v_0.1.6.tar.gz",
      "Homepage": "https://github.com/Joish/JsonParser"
    },
    "release_url": "https://pypi.org/project/JsonJ/0.1.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A library to prase Json Tree data in-order to make things simpler",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5287820,
  "releases": {
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3087e9d9c22e994111c96e3683b8696b2620f01526d67f73ad879bec15755001",
          "md5": "36449ac2218d820d03aa2472073222b6",
          "sha256": "f009ab265a13f781d568d66d43d40b90a7909cdf54ded2a88998dd36433819e0"
        },
        "downloads": -1,
        "filename": "JsonJ-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36449ac2218d820d03aa2472073222b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4406,
        "upload_time": "2019-05-19T09:23:45",
        "upload_time_iso_8601": "2019-05-19T09:23:45.924834Z",
        "url": "https://files.pythonhosted.org/packages/30/87/e9d9c22e994111c96e3683b8696b2620f01526d67f73ad879bec15755001/JsonJ-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3ca202fe97c4828e9bf9384df236b024a089633b5b8f28797b060ca69a33e9a",
          "md5": "07e010a7c128a93f8fcb87e2c828702e",
          "sha256": "0fc9085939ce5e2c11bf5917ca5cb7a69dab739ecfc8f877a3287e069ae2dcc9"
        },
        "downloads": -1,
        "filename": "JsonJ-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "07e010a7c128a93f8fcb87e2c828702e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3930,
        "upload_time": "2019-05-19T09:23:48",
        "upload_time_iso_8601": "2019-05-19T09:23:48.377658Z",
        "url": "https://files.pythonhosted.org/packages/b3/ca/202fe97c4828e9bf9384df236b024a089633b5b8f28797b060ca69a33e9a/JsonJ-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3087e9d9c22e994111c96e3683b8696b2620f01526d67f73ad879bec15755001",
        "md5": "36449ac2218d820d03aa2472073222b6",
        "sha256": "f009ab265a13f781d568d66d43d40b90a7909cdf54ded2a88998dd36433819e0"
      },
      "downloads": -1,
      "filename": "JsonJ-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36449ac2218d820d03aa2472073222b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4406,
      "upload_time": "2019-05-19T09:23:45",
      "upload_time_iso_8601": "2019-05-19T09:23:45.924834Z",
      "url": "https://files.pythonhosted.org/packages/30/87/e9d9c22e994111c96e3683b8696b2620f01526d67f73ad879bec15755001/JsonJ-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3ca202fe97c4828e9bf9384df236b024a089633b5b8f28797b060ca69a33e9a",
        "md5": "07e010a7c128a93f8fcb87e2c828702e",
        "sha256": "0fc9085939ce5e2c11bf5917ca5cb7a69dab739ecfc8f877a3287e069ae2dcc9"
      },
      "downloads": -1,
      "filename": "JsonJ-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "07e010a7c128a93f8fcb87e2c828702e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3930,
      "upload_time": "2019-05-19T09:23:48",
      "upload_time_iso_8601": "2019-05-19T09:23:48.377658Z",
      "url": "https://files.pythonhosted.org/packages/b3/ca/202fe97c4828e9bf9384df236b024a089633b5b8f28797b060ca69a33e9a/JsonJ-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}