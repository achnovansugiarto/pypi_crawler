{
  "info": {
    "author": null,
    "author_email": "Jonathan Broadbent <jonbroad15@gmail.com>, Jared Simpson <jsimpson@oicr.on.ca>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Programming Language :: Rust"
    ],
    "description": "# Nanomix: Methylation Deconvolution of Nanopore Sequencing Data\nMethylation deconvolution is the process of determining the proportion of distinct cell types in a complex (hetergeneic) mixture of cell or cell free DNA.\nThis tool provides suitable models for performing deconvolution on Nanopore sequencing data. In particular our new models account for the non-uniform coverage distribution and high error rate in modified base calling. We also include more typical deconvolution models for deconvolution of bisulfite sequencing data or bead chip arrays.\n\n\n## Installation\nThis package is available on PyPI\n```\npip install nanomix\n```\nor alternatively on Conda:\n```\nconda install nanomix\n```\nInstalling from source requires [maturin](https://github.com/PyO3/maturin)\n```\nconda install maturin\ngit clone https://github.com/Jonbroad15/nanomix.git\ncd nanomix\nmaturin develop\n```\n\n## Usage\nTo deconvolute a sequencing run, one must simply provide `nanomix` with a methylome. We define a methylome as a `tsv` file with columns `{chr, start, end, total_calls, modified_calls}`. Such a file can be created from a `.bam` file using our associated program, [mbtools](https://github.com/jts/mbtools)\nThen the mixture proportion can be found by calling:\n```\nnanomix deconvolute <METHYLOME>\n```\n\n### Reference Atlas\nDeconvolution determines the mixture proportion based on methylation propensities of previously resolved sequencing runs of purified reference cells across the genome. This information is collated into an *atlas*. We suggest using the atlas from [Loyfer et. al](https://www.biorxiv.org/content/10.1101/2022.01.24.477547v1.full) which we have curated and labelled as `39Bisulfite.tsv` and is set for default. Their tool [wgbstools](https://github.com/nloyfer/wgbs_tools) also provides the means to create an atlas suited to the cell types you are interested in.\n```\nnanomix deconvolute <METHYLOME> -a <ATLAS>\n```\n\n### Model\nWe provide four deconvolution models\n\n- **llse (default):**   log-likelihood with sequencing errors. Maximize the likelihood of the methylome, atlas and sigma\n                    by assuming modification calls follow a binomial distribution. Good for sequencing data with high error\n                    rate and non-uniform coverage distribution. (Oxford Nanopore)\n- **nnls:**             non-negative least squares. Minimize the squared error between the methylome and what we expect for\n                    the methylome (given sigma and the atlas). Recommended for fast deconvolution of methylomes with high\n                    coverage. (Methylation Arrays)\n- **mmse:**             mixture model with sequencing errors. Also follows a binomial distribution, but softly assigns fragments\n                    to cell-types. Optimization uses expectation maximization (slower than above). Recommended for high resolution\n                    deconvolution (many cell types) and an atlas with large regions of grouped CpGs.\n- **llsp:**             log-likelihood with sequencing perfect. Same as llse, without error modelling. Useful for differentiating the\n                    effect of sequencing errors on deconvolution loss and accuracy.\nSelect a model by:\n```\nnanomix deconvolute <METHYLOME> -m <MODEL>\n```\nFor more info on other option hparams, run\n```\nnanomix deconvolute -h\n```\n\n### Assign fragments\nOur tools also allows you to assign fragments in the methylome to cell types in the atlas based off of the deconvoluted sigma vector.\n```\nnanomix assign <METHYLOME> -s <SIGMA> \n```\n### Simulate \nWe provide functionality to simulate methylomes of complex cell mixtures given a `sigma.tsv` file that indicates the cell\\_type in the first column and the corresponding proportion in the second column. All the proportions must add up to 1 and the cell-types must be the same as those in the supplied reference atlas. To simulate a methylome:\n```\nnanomix simulate <SIGMA>\n```\n\n### Evaluate\nSimulating data provides true cell-type assignments in the last column of the methylome. We can evaluate the performance of a models deconvolution on this methylome. This will output the deconvolution loss (euclidean distance between true and predicted sigma vector) and the read assignment accuracy at confidence levels from 0.5 to 0.9.\n```\nnanomix evaluate <METHYLOME>\n```\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "nanopore,methylation,deconvolution",
    "license": null,
    "maintainer": null,
    "maintainer_email": "Jonathan Broadbent <jonbroad15@gmail.com>",
    "name": "nanomix",
    "package_url": "https://pypi.org/project/nanomix/",
    "platform": null,
    "project_url": "https://pypi.org/project/nanomix/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/nanomix/0.1.1/",
    "requires_dist": [
      "pandas~=1.5.2",
      "pyranges==0.0.120",
      "numpy~=1.24.1",
      "scipy~=1.10.0"
    ],
    "requires_python": ">=3.7",
    "summary": "Methods for cell type deconvolution from Oxford Nanopore methylation calling",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16490567,
  "releases": {
    "0.1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "2e1e512fb10f5fc0123ac7049024ad0d974b5db56c95ef914fd91365dced822b",
          "md5": "68f2c8ae3303d7401c63368fed3acc7d",
          "sha256": "2781d34085c67c50c06261c8bf650dd1817f13dc547b6ba2edd51203518fbf4b"
        },
        "downloads": -1,
        "filename": "nanomix-0.1.0-cp39-cp39-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "68f2c8ae3303d7401c63368fed3acc7d",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 689650,
        "upload_time": "2023-01-17T22:08:25",
        "upload_time_iso_8601": "2023-01-17T22:08:25.469077Z",
        "url": "https://files.pythonhosted.org/packages/2e/1e/512fb10f5fc0123ac7049024ad0d974b5db56c95ef914fd91365dced822b/nanomix-0.1.0-cp39-cp39-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "2932c68c316668d4051e3c89871b6f05e210e3555cec60626f82d1d8dc389d97",
          "md5": "865adbd317ff9e96a72b4b598d6d1733",
          "sha256": "6db6e0f96ca9706d580c11670dce5d909ba29b5ed2a5fc7de182c43f03030b20"
        },
        "downloads": -1,
        "filename": "nanomix-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "865adbd317ff9e96a72b4b598d6d1733",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2908039,
        "upload_time": "2023-01-17T22:08:27",
        "upload_time_iso_8601": "2023-01-17T22:08:27.731881Z",
        "url": "https://files.pythonhosted.org/packages/29/32/c68c316668d4051e3c89871b6f05e210e3555cec60626f82d1d8dc389d97/nanomix-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "641cf7da489baa1f44b9b3872c362f0f7bcffc000e16a4e996600b31d33902d2",
          "md5": "d984a46c6b5f31cdd7ca57ad60fa7773",
          "sha256": "cd9ab0c4c0a387a5a5ec903a802eedbe44557fe516a379ee53ce5456d17d1e62"
        },
        "downloads": -1,
        "filename": "nanomix-0.1.1-cp39-cp39-manylinux_2_31_x86_64.whl",
        "has_sig": false,
        "md5_digest": "d984a46c6b5f31cdd7ca57ad60fa7773",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 692515,
        "upload_time": "2023-01-19T17:33:04",
        "upload_time_iso_8601": "2023-01-19T17:33:04.233060Z",
        "url": "https://files.pythonhosted.org/packages/64/1c/f7da489baa1f44b9b3872c362f0f7bcffc000e16a4e996600b31d33902d2/nanomix-0.1.1-cp39-cp39-manylinux_2_31_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "32ea194f230279b284baf46773b088fb814e1b7e2b61b59f6d894b6d45c4a1b2",
          "md5": "a8ab511d805970330942ec7ac27fc8e3",
          "sha256": "cb92bb568d76b7837ac4cd8767c0184bdb77585df8de4cb325369f65483765b4"
        },
        "downloads": -1,
        "filename": "nanomix-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a8ab511d805970330942ec7ac27fc8e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2912740,
        "upload_time": "2023-01-19T17:33:06",
        "upload_time_iso_8601": "2023-01-19T17:33:06.196785Z",
        "url": "https://files.pythonhosted.org/packages/32/ea/194f230279b284baf46773b088fb814e1b7e2b61b59f6d894b6d45c4a1b2/nanomix-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "641cf7da489baa1f44b9b3872c362f0f7bcffc000e16a4e996600b31d33902d2",
        "md5": "d984a46c6b5f31cdd7ca57ad60fa7773",
        "sha256": "cd9ab0c4c0a387a5a5ec903a802eedbe44557fe516a379ee53ce5456d17d1e62"
      },
      "downloads": -1,
      "filename": "nanomix-0.1.1-cp39-cp39-manylinux_2_31_x86_64.whl",
      "has_sig": false,
      "md5_digest": "d984a46c6b5f31cdd7ca57ad60fa7773",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.7",
      "size": 692515,
      "upload_time": "2023-01-19T17:33:04",
      "upload_time_iso_8601": "2023-01-19T17:33:04.233060Z",
      "url": "https://files.pythonhosted.org/packages/64/1c/f7da489baa1f44b9b3872c362f0f7bcffc000e16a4e996600b31d33902d2/nanomix-0.1.1-cp39-cp39-manylinux_2_31_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "32ea194f230279b284baf46773b088fb814e1b7e2b61b59f6d894b6d45c4a1b2",
        "md5": "a8ab511d805970330942ec7ac27fc8e3",
        "sha256": "cb92bb568d76b7837ac4cd8767c0184bdb77585df8de4cb325369f65483765b4"
      },
      "downloads": -1,
      "filename": "nanomix-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a8ab511d805970330942ec7ac27fc8e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 2912740,
      "upload_time": "2023-01-19T17:33:06",
      "upload_time_iso_8601": "2023-01-19T17:33:06.196785Z",
      "url": "https://files.pythonhosted.org/packages/32/ea/194f230279b284baf46773b088fb814e1b7e2b61b59f6d894b6d45c4a1b2/nanomix-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}