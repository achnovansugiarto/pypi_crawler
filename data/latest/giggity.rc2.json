{
  "info": {
    "author": "Adam Musciano",
    "author_email": "amusciano@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "#  Giggity - grab hierarchical data about a github organization, user, or repo\n\n<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/9204902/51312125-3aa4d700-1a53-11e9-89e8-a02063d93595.gif\"></img>\n</p>\n\nGet information about an organization, user, or repo on github. Stores all data in a json file, organized in a tree of dictionaries for easy database transfer or data analysis. All done through the github api, with or without authentication (authentication highly recommended).\n\n## Setup\n\n`pip3 install giggity`\n\n\nor clone the repository and run: \n\n`pip3 install -r requirements.txt`\n\n\n## Operation\n\n```\ngiggity.py [-h] [-v] [-a] [-u] [-o] [-O OUTPUT] path\n\npositional arguments:\n  path                  name of organization or user (or url of repository)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         increase output verbosity\n  -a, --authenticate    allows github authentication to avoid ratelimiting\n  -u, --user            denotes that given input is a user\n  -o, --org             denotes that given input is an organization\n  -O OUTPUT, --outfile OUTPUT\n                        location to put generated json file\n\n```\n\n**Example of Scraping a User**\n\n    python3 giggity.py -a -O needmorecowbell.json -v -u needmorecowbell\n\n- This will ask for authentication credentials, put the program into verbose mode, scrape github for the user needmorecowbell, then put the results into needmorecowbell.json\n\n**Example of Scraping an Organization**\n\n    python3 giggity.py -a -o github -O github.json\n\n- This will ask for authentication, scrape the github organization on github, then put out the results in github.json\n\n**Giggity as a Module** \n\n- giggity can also be used as a module -- all data is stored within orgTree as a nested dict.\n\n```python\nfrom giggity import giggity\n\ng = giggity(\"username\",\"password\")\ndata = g.getUsers(\"organization-name\", followers=True)\n\nprint(\"List of users in organization: \")\nfor user, info in data.items():\n    print(user)\n\ndata = g.getEmails(\"username\", verbose=True) # Get any emails found\n```\n\n**Other examples of how to use giggity are available in the util folder.**\n\n**Example Output**\n\n\nWhen `python3 giggity.py -a -u geohot -O output.json` is used..\n\noutput.json contains: \n\n```json\n{\n    \"emails\": [\n        \"george@comma.ai\",\n        \"other emails taken out of example\"\n    \n    ],\n    \"names\": [\n        \"Charles Ellis\",\n        \"George Hotz\"\n    ],\n    \"repos\": {\n        \"ORB_SLAM2\": {\n            \"created_at\": \"2017-04-08T00:21:13Z\",\n            \"description\": \"ORBSLAM2 running on Mac OS X cause I was on a plane and bored and maybe useful for someone?\",\n            \"fork\": true,\n            \"name\": \"ORB_SLAM2\",\n            \"updated_at\": \"2018-10-22T23:51:28Z\",\n            \"url\": \"https://github.com/geohot/ORB_SLAM2\"\n        },\n        { Many more repositories cut out for the example },\n        \"xnu-deps-linux\": {\n            \"created_at\": \"2013-10-02T00:36:29Z\",\n            \"description\": \"Mig/cctools for Linux combo makefile thingy\",\n            \"fork\": true,\n            \"name\": \"xnu-deps-linux\",\n            \"updated_at\": \"2016-05-01T16:04:45Z\",\n            \"url\": \"https://github.com/geohot/xnu-deps-linux\"\n        }\n    }\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/needmorecowbell/giggity",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "giggity",
    "package_url": "https://pypi.org/project/giggity/",
    "platform": "",
    "project_url": "https://pypi.org/project/giggity/",
    "project_urls": {
      "Homepage": "https://github.com/needmorecowbell/giggity"
    },
    "release_url": "https://pypi.org/project/giggity/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "CLI Git Sleuth Tool",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6646700,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c4dfebeac349abeb09fa4e7c32aaad101515c7d1cdaba71eda86c2e9176c107",
          "md5": "192f794ae1add50c6d250f46cfa1d5cc",
          "sha256": "7c7e33908f23dc6c21a33af491c145118e8b8c7d78fd400d2b4ce07c286b9456"
        },
        "downloads": -1,
        "filename": "giggity-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "192f794ae1add50c6d250f46cfa1d5cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4545,
        "upload_time": "2020-02-17T14:47:35",
        "upload_time_iso_8601": "2020-02-17T14:47:35.270163Z",
        "url": "https://files.pythonhosted.org/packages/8c/4d/febeac349abeb09fa4e7c32aaad101515c7d1cdaba71eda86c2e9176c107/giggity-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f963e601e0031b7377c88a0e6e55727a226298e747856f381135db41ccb651f7",
          "md5": "6fa97506041ba3b0c53999516366b361",
          "sha256": "5d64ec07b908c4e6452e02d196be946e985b586df93ed17d5ed420bf443d1c0c"
        },
        "downloads": -1,
        "filename": "giggity-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6fa97506041ba3b0c53999516366b361",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5117,
        "upload_time": "2020-02-17T15:01:41",
        "upload_time_iso_8601": "2020-02-17T15:01:41.279896Z",
        "url": "https://files.pythonhosted.org/packages/f9/63/e601e0031b7377c88a0e6e55727a226298e747856f381135db41ccb651f7/giggity-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f963e601e0031b7377c88a0e6e55727a226298e747856f381135db41ccb651f7",
        "md5": "6fa97506041ba3b0c53999516366b361",
        "sha256": "5d64ec07b908c4e6452e02d196be946e985b586df93ed17d5ed420bf443d1c0c"
      },
      "downloads": -1,
      "filename": "giggity-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6fa97506041ba3b0c53999516366b361",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5117,
      "upload_time": "2020-02-17T15:01:41",
      "upload_time_iso_8601": "2020-02-17T15:01:41.279896Z",
      "url": "https://files.pythonhosted.org/packages/f9/63/e601e0031b7377c88a0e6e55727a226298e747856f381135db41ccb651f7/giggity-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}