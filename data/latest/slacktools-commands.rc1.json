{
  "info": {
    "author": "Daniel Poland",
    "author_email": "dan@crispy.dev",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# slacktools-commands\nA simple framework for working with Slack slash-commands (https://api.slack.com/interactivity/slash-commands).\n\nRegister you custom `Command` class with the \n`ComandFactory` and when you receive a command request from Slack simply grab the command instance from the\nfactory and execute it.\n\n### Install\n\n`pip install slacktools-commands`\n\n### Basic Usage\n\nDefine your command:\n```python\nfrom commands import register_command, Command, CommandValidationError\n\nfrom myproject import get_status, post_status\n\n\n@register_command(\"/status\")\nclass StatusCommand(Command):\n    def _validate(self):\n        if not get_status(id=self.payload.text):\n            raise CommandValidationError(\"Not a valid id.\")\n\n    def _execute(self):\n        post_status(id=self.payload.text)\n\n``` \n\nHandle the Slack command request:\n```python\nfrom rest_framework.views import APIView\nfrom rest_framework.response import Response\n\nfrom commands import CommandFactory\n\nclass CommandsView(APIView):\n    def post(self, request):\n        command = CommandFactory.make_commmand(request.data)\n        command.execute()\n        return Response()\n```\n\n### Action Commands\nAction commands allow you execute many different actions from a single Slack command. The text following\nthe command is used to determine which action should be performed. The text is split by spaces, the first character\nset determines the action and the remain character sets are passed to the action as options/parameters.\n\n#### Example\nThe below class definitions will handle the following command: `/status service api`\n```python\nfrom commands import ActionCommand, Action, CommandValidationError, register_command\n\nfrom myproject import post_status_msg\n\n\nclass ServiceStatus(Action):\n    def validate(self):\n        if len(self.options) == 0:\n            CommandValidationError(self.payload, \"Missing service name\")\n\n    def execute(self):\n        post_status_msg(self.options[0])\n\n\n@register_command(\"/status\")\nclass StatusCommand(ActionCommand):\n    ACTIONS = {\n        \"service\": ServiceStatus\n    }\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/danpoland/slacktools-commands",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "slacktools-commands",
    "package_url": "https://pypi.org/project/slacktools-commands/",
    "platform": "",
    "project_url": "https://pypi.org/project/slacktools-commands/",
    "project_urls": {
      "Homepage": "https://github.com/danpoland/slacktools-commands"
    },
    "release_url": "https://pypi.org/project/slacktools-commands/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6744890,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c574c8562059294f9191dc243946b51008ba2610b9df137b5355434b6d2dbdb7",
          "md5": "a4b961cc4a1e136172679ec0d124a920",
          "sha256": "5e204d0cb373f84e2676264f044a7927348bd6c8f80e527ac132962349262501"
        },
        "downloads": -1,
        "filename": "slacktools_commands-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a4b961cc4a1e136172679ec0d124a920",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9003,
        "upload_time": "2020-03-04T02:17:35",
        "upload_time_iso_8601": "2020-03-04T02:17:35.227859Z",
        "url": "https://files.pythonhosted.org/packages/c5/74/c8562059294f9191dc243946b51008ba2610b9df137b5355434b6d2dbdb7/slacktools_commands-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3101c0b70cb46d1d63be1e8b1fb4fc8994d8921f1cc45b32cff9bab6d76a4e1c",
          "md5": "20c7f625c161c72b61a7a6dd19e846f2",
          "sha256": "c6248e9363eb4c555cdcb7e46c0e42dee3bba646e67f084e51082b1463efe589"
        },
        "downloads": -1,
        "filename": "slacktools-commands-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "20c7f625c161c72b61a7a6dd19e846f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5955,
        "upload_time": "2020-03-04T02:17:37",
        "upload_time_iso_8601": "2020-03-04T02:17:37.626512Z",
        "url": "https://files.pythonhosted.org/packages/31/01/c0b70cb46d1d63be1e8b1fb4fc8994d8921f1cc45b32cff9bab6d76a4e1c/slacktools-commands-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c574c8562059294f9191dc243946b51008ba2610b9df137b5355434b6d2dbdb7",
        "md5": "a4b961cc4a1e136172679ec0d124a920",
        "sha256": "5e204d0cb373f84e2676264f044a7927348bd6c8f80e527ac132962349262501"
      },
      "downloads": -1,
      "filename": "slacktools_commands-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a4b961cc4a1e136172679ec0d124a920",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9003,
      "upload_time": "2020-03-04T02:17:35",
      "upload_time_iso_8601": "2020-03-04T02:17:35.227859Z",
      "url": "https://files.pythonhosted.org/packages/c5/74/c8562059294f9191dc243946b51008ba2610b9df137b5355434b6d2dbdb7/slacktools_commands-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3101c0b70cb46d1d63be1e8b1fb4fc8994d8921f1cc45b32cff9bab6d76a4e1c",
        "md5": "20c7f625c161c72b61a7a6dd19e846f2",
        "sha256": "c6248e9363eb4c555cdcb7e46c0e42dee3bba646e67f084e51082b1463efe589"
      },
      "downloads": -1,
      "filename": "slacktools-commands-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "20c7f625c161c72b61a7a6dd19e846f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5955,
      "upload_time": "2020-03-04T02:17:37",
      "upload_time_iso_8601": "2020-03-04T02:17:37.626512Z",
      "url": "https://files.pythonhosted.org/packages/31/01/c0b70cb46d1d63be1e8b1fb4fc8994d8921f1cc45b32cff9bab6d76a4e1c/slacktools-commands-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}