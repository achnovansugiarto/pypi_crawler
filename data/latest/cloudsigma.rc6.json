{
  "info": {
    "author": "CloudSigma AG",
    "author_email": "dev-support@cloudsigma.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# CloudSigma's Python Library\n\n## Config file\n\nIn order for the CloudSigma library to interact with the API, you need to provide your credentials. These are set in the file `~/.cloudsigma.conf`. Here's a sample version of the file that talks to the ZÃ¼rich datacenter. If you instead want to use the Frankfurt datacenter, simply replace 'zrh' with 'fra' in the api_endpoint and ws_endpoint. Please note that this is not required in order to read back meta data on the server.\n\n\n```python\napi_endpoint = https://zrh.cloudsigma.com/api/2.0/\nws_endpoint = wss://direct.zrh.cloudsigma.com/websocket\nusername = user@domain.com\npassword = secret\n\n# Only needed for the integration/unit tests.\npersistent_drive_name=foobar\npersistent_drive_ssh_password=sshsecret\n```\n\nSince this file includes credentials, it is highly recommended that you set the permission of the file to 600 (`chmod 600 ~/.cloudsigma.conf`)\n\n\n## Installation\n\n\n### Mac OS X\n\n```bash\nsudo pip install cloudsigma\n```\n\n### Ubuntu / Debian\n\n```bash\nsudo apt -y install python-pip\npip install cloudsigma\n```\n\n### CentOS / RHEL\n\n```bash\nyum install -y python3-pip\npip install cloudsigma\n```\n\n## Using pycloudsigma\n\n### Imports and definitions\n\n```python\nimport cloudsigma\nfrom pprint import pprint\n\ndrive = cloudsigma.resource.Drive()\nserver = cloudsigma.resource.Server()\n```\n\n#### Create a drive\n\n```python\ntest_disk = {\n    'name': 'test_drive',\n    'size': 1073741824 * 1,\n    'media': 'disk'\n}\nmy_test_disk = drive.create(test_disk)\n```\n\nPrint back the result:\n\n```python\npprint(my_test_disk)\n{u'affinities': [],\n u'allow_multimount': False,\n u'jobs': [],\n u'licenses': [],\n u'media': u'disk',\n u'meta': {},\n u'mounted_on': [],\n u'name': u'test_drive',\n u'owner': {u'resource_uri': u'/api/2.0/user/b4b9XXX-ba52-4ad0-9837-a2672652XXX/',\n            u'uuid': u'b4b9XXX-ba52-4ad0-9837-a2672652XXX'},\n u'resource_uri': u'/api/2.0/drives/5c33e407-23b9-XXX-b007-3a302eXXXX/',\n u'size': 1073741824,\n u'status': u'creating',\n u'storage_type': None,\n u'tags': [],\n u'uuid': u'5c33e407-23b9-XXX-b007-3a302eXXXX'}\n```\n\n### Create a server without a drive\n\n```python\ntest_server = {\n    'name': 'My Test Server',\n    'cpu': 1000,\n    'mem': 512 * 1024 ** 2,\n    'vnc_password': 'test_server'\n}\nmy_test_server = server.create(test_server)\n```\n\nPrint back the result:\n\n```python\npprint(my_test_server)\n{u'context': True,\n u'cpu': 1000,\n u'cpus_instead_of_cores': False,\n u'drives': [],\n u'enable_numa': False,\n u'hv_relaxed': False,\n u'hv_tsc': False,\n u'mem': 536870912,\n u'meta': {},\n u'name': u'My Test Server',\n u'nics': [],\n u'owner': {u'resource_uri': u'/api/2.0/user/b4b9XXX-ba52-4ad0-9837-a2672652XXX/',\n            u'uuid': u'b4b9XXX-ba52-4ad0-9837-a2672652XXX'},\n u'requirements': [],\n u'resource_uri': u'/api/2.0/servers/4d5bXXX-4da0-43cd-83aY-18b047014XXXX/',\n u'runtime': None,\n u'smp': 1,\n u'status': u'stopped',\n u'tags': [],\n u'uuid': u'4d5bXXX-4da0-43cd-83aY-18b047014XXXX',\n u'vnc_password': u'test_server'}\n```\n\n### Attach a drive the drive and a NIC to the server\n\nWe could of course have attached this above, but in order to keep things simple, let's do this in two phases.\n\nAttach the drive:\n\n```python\nmy_test_server['drives'] = [{\n    'boot_order': 1,\n    'dev_channel': '0:0',\n    'device': 'virtio',\n    'drive': my_test_disk['uuid']\n}]\n```\n\nAttach a public network interface:\n\n```python\nmy_test_server['nics']  = [{\n    'ip_v4_conf': {\n        'conf': 'dhcp',\n        'ip': None\n    },\n    'model': 'virtio',\n    'vlan': None\n}]\n```\n\n**Optional**: Add a user-defined SSH key:\n\n```python\nmy_test_server['meta'] = {'ssh_public_key': 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDoHuFV7Skbu9G1iVokXBdB+zN4wEbqGKijlExUPmxuB6MXDBWCmXUEmMRLerTm3a8QMA+8Vyech0/TWQscYvs8xzM/HkRAqKwhhjPMRlfHgy+QKjRD8P989AYMnNcSYe8DayElFXoLYKwsDmoUcsnbf5H+f6agiBkWqz5odb8fvc2rka0X7+p3tDyKFJRt2OugPqLR9fhWddie65DBxAcycnScoqLW0+YAxakfWlKDUqwerIjuRN2VJ7T7iHywcXhvAU060CEtpWW7bE9T/PIoj/N753QDLYrmqtvqAQqU0Ss5rIqS8bYJXyM0zTKwIuncek+k+b9ButBf/Nx5ehjN vagrant@precise64'}\n```\n\nPush the settings:\n\n```python\nserver.update(my_test_server['uuid'], my_test_server)\n```\n\n### Start the server\n\n```python\nserver.start(my_test_server['uuid'])\n```\n\n### Stop the server\n\n```python\nserver.stop(my_test_server['uuid'])\n```\n\n### Reading Meta Data\n\nCloudSigma supports the notion of exposing meta data to guests. Using the Python library, this can be done very easily. **Please note** that you do not need `~/.cloudsigma.conf` in order to use this feature, as the data is read directly from `/dev/ttyS1`. More information on how to this works can be found [here](https://cloudsigma-docs.readthedocs.io/en/2.14.1/server_context.html#setting-up-the-virtual-serial-port).\n\nBy default, various system information is exposed, but it is also possible to push user-defined data, such as an SSH-key to the guest.\n\nHere's snippet that demonstrates how to read the meta meta data from a given server using the python library:\n\n```python\nimport cloudsigma\nmetadata = cloudsigma.metadata.GetServerMetadata().get()\n\nfrom pprint import pprint\npprint(metadata)\n{u'cpu': 1000,\n u'cpus_instead_of_cores': False,\n u'drives': [{u'boot_order': 1,\n              u'dev_channel': u'0:0',\n              u'device': u'virtio',\n              u'drive': {u'affinities': [],\n                         u'allow_multimount': False,\n                         u'licenses': [],\n                         u'media': u'disk',\n                         u'meta': {u'description': u'This is my test disk.'},\n                         u'name': u'SomeName',\n                         u'size': 21474836480,\n                         u'tags': [],\n                         u'uuid': u'19757XXX-8173-46ba-8822-YYYYc6bZZZZ'}}],\n u'enable_numa': False,\n u'hv_relaxed': False,\n u'hv_tsc': False,\n u'mem': 536870912,\n u'meta': {u'description': u'This is my test server.'},\n u'name': u'MyTestServer',\n u'nics': [{u'boot_order': None,\n            u'ip_v4_conf': {u'conf': u'dhcp',\n                            u'ip': {u'gateway': u'123.123.123.123',\n                                    u'meta': {},\n                                    u'nameservers': [u'123.123.123.123',\n                                                     u'123.123.123.123',\n                                                     u'8.8.8.8'],\n                                    u'netmask': 24,\n                                    u'tags': [],\n                                    u'uuid': u'123.123.123.123'}},\n            u'ip_v6_conf': None,\n            u'mac': u'22:bd:c4:XX:XX:XX',\n            u'model': u'virtio',\n            u'vlan': None}],\n u'requirements': [],\n u'smp': 1,\n u'tags': [],\n u'uuid': u'6cc0XXX-d024-4ecf-b0de-83dbc29ZZZ',\n u'vnc_password': u'NotMyPassword'}\n```\n\nIf you get a permission error while running the above command, make sure you have access to read from `/dev/ttyS1`. For instance, on Ubuntu, the default owner is `root` and the group is set to `dialout`. Hence you need to either change the permission, or add your user to the group `sudo usermod -a -G dialout $(whoami)`. Please note that you will need to logout and log in again for the permission change to take effect.\n\nFor more examples on how to read and write meta data, please visit our [API documentation](https://autodetect.cloudsigma.com/docs/meta.html#examples).\n\n## Sample: Install SSH key from meta data\n\nIn the example above, we pushed an SSH key as meta data to a server. That's great, but what if we want to put this to use? Don't worry, we got you covered.\n\nThe code snippet below assumes that you have installed your SSH key into the server's meta data with the key 'ssh_public_key'.\n\n```python\nimport cloudsigma\nimport os\nimport stat\n\nmetadata = cloudsigma.metadata.GetServerMetadata().get()\nssh_key = metadata['meta']['ssh_public_key']\n\n# Define paths\nhome = os.path.expanduser(\"~\")\nssh_path = os.path.join(home, '.ssh')\nauthorized_keys = os.path.join(ssh_path, 'authorized_keys')\n\n\ndef get_permission(path):\n    return oct(os.stat(ssh_path)[stat.ST_MODE])[-4:]\n\nif not os.path.isdir(ssh_path):\n    print('Creating folder %s' % ssh_path)\n    os.makedirs(ssh_path)\n\nif get_permission(ssh_path) != 0700:\n    print('Setting permission for %s' % ssh_path)\n    os.chmod(ssh_path, 0700)\n\n# We'll have to assume that there might be other keys installed.\n# We could do something fancy, like checking if the key is installed already,\n# but in order to keep things simple, we'll simply append the key.\nwith open(authorized_keys, 'a') as auth_file:\n    auth_file.write(ssh_key + '\\n')\n\nif get_permission(authorized_keys) != 0600:\n    print('Setting permission for %s' % authorized_keys)\n    os.chmod(authorized_keys, 0600)\n```\n\n[Download](https://raw.github.com/cloudsigma/pycloudsigma/master/samples/set_ssh_key.py)\n\n## Sample: Monitor websocket activity\n\nHere's a sample application that listens to activity on the websocket. You can run this application to see activity from the web interface.\n\n```python\nfrom cloudsigma.generic import GenericClient\nfrom cloudsigma.resource import Websocket\nfrom cloudsigma.errors import ClientError, PermissionError\n\nws = Websocket(timeout=None)\nclient = GenericClient()\n\nprint(\"Display Websocket activity.\\nExit with ^C.\")\n\nwhile True:\n    try:\n        get_action = ws.ws.recv()\n        action_uri = get_action['resource_uri']\n        print('Received Action: %s' % get_action)\n        print('Result:\\n%s' % client.get(action_uri))\n    except ClientError as e:\n        if e.args[0] == 404:\n            print(\"Resource %s was deleted\" % action_uri)\n        else:\n            print('Error retrieving: %s' % e)\n    except PermissionError as e:\n        print(\"No permissions for resource %s\" % action_uri)\n```\n\n[Download](https://raw.github.com/cloudsigma/pycloudsigma/master/samples/monitor_websocket_activity.py)\n\n## Sample: A CLI for taking snapshots\n\nOne handy functionality in our API is the ability to take snapshots of a drive. Since the drive can be running while you take the snapshot, combined with the fact that you only pay for the delta between the original disk and the snapshot, this becomes a very powerful backup tool.\n\nUsing the snippet below, you can easily create automated backups. All you need to do is to run the snapshot blow in an automated fashion, such as using the crontab.\n\n\n```python\nimport cloudsigma\nimport sys\nfrom time import sleep\n\nsnapshot = cloudsigma.resource.Snapshot()\nsnapshot_done = False\n\nif len(sys.argv) < 3:\n    print('\\nUsage: ./snapshot.py drive-uuid snapshot-name\\n')\n    sys.exit(1)\n\nsnapshot_data = {\n    'drive': sys.argv[1],\n    'name': sys.argv[2],\n}\n\ncreate_snapshot = snapshot.create(snapshot_data)\n\nwhile not snapshot_done:\n    snapshot_status = snapshot.get(create_snapshot['uuid'])\n\n    if snapshot_status['status'] == 'available':\n        snapshot_done = True\n        print('\\nSnapshot successfully created\\n')\n    else:\n        sleep(1)\n```\n\n[Download](https://raw.github.com/cloudsigma/pycloudsigma/master/samples/snapshot.py)\n\nThere's also another script named [snapshot_purge.py](https://raw.githubusercontent.com/cloudsigma/pycloudsigma/master/samples/snapshot_purge.py) that can used for automatically purging old snapshots.\n\n## Running the tests\n\nThere must be a VM available by the name that matches `persistent_drive_name`. This VM should be a server with SSH installed, where one can be log in as `root` with the password set in `persistent_drive_ssh_password`.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cloudsigma/pycloudsigma",
    "keywords": "cloud,cloudsigma,api,cloud,computing",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cloudsigma",
    "package_url": "https://pypi.org/project/cloudsigma/",
    "platform": "",
    "project_url": "https://pypi.org/project/cloudsigma/",
    "project_urls": {
      "Homepage": "https://github.com/cloudsigma/pycloudsigma"
    },
    "release_url": "https://pypi.org/project/cloudsigma/1.0/",
    "requires_dist": [
      "backports.ssl-match-hostname (>=3.4.0.2)",
      "configobj (>=5.0.6)",
      "future (>=0.18.2)",
      "iso8601 (>=0.1.12)",
      "pyserial (>=3.4)",
      "requests (>=2.23)",
      "simplejson (>=3.17.0)",
      "six (>=1.14.0)",
      "websocket-client (>=0.57.0)",
      "nose (>=1.3.7)"
    ],
    "requires_python": ">=3.5,<4.0",
    "summary": "CloudSigma's official python library.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8620100,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3551bf745fbcc05b5154b05e2e34355e95683e150e04a40bd572ea7b6cdd6152",
          "md5": "0f485cd4d7c61789341547755a555efd",
          "sha256": "5b54eb3ee61333467a9de5c3c0962a9e1efaadf341db505315e97d166c8b8435"
        },
        "downloads": -1,
        "filename": "cloudsigma-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0f485cd4d7c61789341547755a555efd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9197,
        "upload_time": "2013-07-08T11:38:55",
        "upload_time_iso_8601": "2013-07-08T11:38:55.635961Z",
        "url": "https://files.pythonhosted.org/packages/35/51/bf745fbcc05b5154b05e2e34355e95683e150e04a40bd572ea7b6cdd6152/cloudsigma-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e43273c409ec7844fb2407bd60246cf90769d97458591b50bc8d5d430fc67d7",
          "md5": "107ff19f4a0ee72d884c932d94b31899",
          "sha256": "2b2ded23fcf08b9f258e37a191bbcb9580b1c8ce56979a9199992680eff386c3"
        },
        "downloads": -1,
        "filename": "cloudsigma-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "107ff19f4a0ee72d884c932d94b31899",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9733,
        "upload_time": "2013-09-03T20:14:42",
        "upload_time_iso_8601": "2013-09-03T20:14:42.111064Z",
        "url": "https://files.pythonhosted.org/packages/9e/43/273c409ec7844fb2407bd60246cf90769d97458591b50bc8d5d430fc67d7/cloudsigma-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23d95e65e7572bb6a3c5e8b94e73aba689a6524533579e7c1a3405c0c484f49e",
          "md5": "8c10a2e56101fd84f2a3d4414af71042",
          "sha256": "fa9ca3938af77b0e5b9757fade8bd3df23ed53079b671fa4348374ea14e534eb"
        },
        "downloads": -1,
        "filename": "cloudsigma-0.3.macosx-10.10-intel.exe",
        "has_sig": false,
        "md5_digest": "8c10a2e56101fd84f2a3d4414af71042",
        "packagetype": "bdist_wininst",
        "python_version": "any",
        "requires_python": null,
        "size": 75230,
        "upload_time": "2014-12-03T15:10:58",
        "upload_time_iso_8601": "2014-12-03T15:10:58.428344Z",
        "url": "https://files.pythonhosted.org/packages/23/d9/5e65e7572bb6a3c5e8b94e73aba689a6524533579e7c1a3405c0c484f49e/cloudsigma-0.3.macosx-10.10-intel.exe",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71ae56d27b7b057a15d66eb32e2d442c73cb05789f1e72451edb0a01fd226102",
          "md5": "f13d533fe9e59e22ff0b9533f4839528",
          "sha256": "e8003dd2df2372e22551e9a4fdadd725da91829353a632dee13cd1759214cf26"
        },
        "downloads": -1,
        "filename": "cloudsigma-0.3.macosx-10.9-intel.exe",
        "has_sig": false,
        "md5_digest": "f13d533fe9e59e22ff0b9533f4839528",
        "packagetype": "bdist_wininst",
        "python_version": "any",
        "requires_python": null,
        "size": 75265,
        "upload_time": "2013-11-11T20:30:41",
        "upload_time_iso_8601": "2013-11-11T20:30:41.639109Z",
        "url": "https://files.pythonhosted.org/packages/71/ae/56d27b7b057a15d66eb32e2d442c73cb05789f1e72451edb0a01fd226102/cloudsigma-0.3.macosx-10.9-intel.exe",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8abd7f3f8260f7f54476183c4f542a90e4374d05979ab6269f0850ff68237139",
          "md5": "0799d674bc8b618987e7e84105c623d4",
          "sha256": "e343b5d9d49c9448077b4fa8242dcbc542f886753f1337abad2dfd4ad0224659"
        },
        "downloads": -1,
        "filename": "cloudsigma-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0799d674bc8b618987e7e84105c623d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10838,
        "upload_time": "2013-11-11T20:30:39",
        "upload_time_iso_8601": "2013-11-11T20:30:39.299325Z",
        "url": "https://files.pythonhosted.org/packages/8a/bd/7f3f8260f7f54476183c4f542a90e4374d05979ab6269f0850ff68237139/cloudsigma-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d92d6b8a72fe6f60ecfee69beb17c3f35b8dea97996810ef050cc1b41874385a",
          "md5": "2e5f75c20e6686aee1ad3a6fd934b214",
          "sha256": "3014bb562c3afccbf85cf1fd284b27db61f2abe419ff0ba90010fee6f583bbd5"
        },
        "downloads": -1,
        "filename": "cloudsigma-0.4.macosx-10.10-intel.exe",
        "has_sig": false,
        "md5_digest": "2e5f75c20e6686aee1ad3a6fd934b214",
        "packagetype": "bdist_wininst",
        "python_version": "any",
        "requires_python": null,
        "size": 79547,
        "upload_time": "2014-12-03T15:41:08",
        "upload_time_iso_8601": "2014-12-03T15:41:08.630059Z",
        "url": "https://files.pythonhosted.org/packages/d9/2d/6b8a72fe6f60ecfee69beb17c3f35b8dea97996810ef050cc1b41874385a/cloudsigma-0.4.macosx-10.10-intel.exe",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a7ea6a1bb4aafba71b4c8daacc0914f6d6e1a95d74e000192c6193b53f50e9f",
          "md5": "7660f0f08a8a6bd8e64a299d503b143d",
          "sha256": "6930fa2b48e80049954a365da3aff3536284a7e5e4ffb4c44f25feb90feb5343"
        },
        "downloads": -1,
        "filename": "cloudsigma-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7660f0f08a8a6bd8e64a299d503b143d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13869,
        "upload_time": "2014-12-03T15:41:04",
        "upload_time_iso_8601": "2014-12-03T15:41:04.772662Z",
        "url": "https://files.pythonhosted.org/packages/3a/7e/a6a1bb4aafba71b4c8daacc0914f6d6e1a95d74e000192c6193b53f50e9f/cloudsigma-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2d2361b1665beb80e182f9a8068a201b2b7f41f90445dca88c15122de974ca6",
          "md5": "5a78a92df74f4cb7b177eed84a09baf6",
          "sha256": "ba6740bcbfc4f1bb52b83e23e0bb727eea73b2806bbbb62f5c9cc113d068ba78"
        },
        "downloads": -1,
        "filename": "cloudsigma-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a78a92df74f4cb7b177eed84a09baf6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5,<4.0",
        "size": 21006,
        "upload_time": "2020-05-22T02:26:58",
        "upload_time_iso_8601": "2020-05-22T02:26:58.275588Z",
        "url": "https://files.pythonhosted.org/packages/d2/d2/361b1665beb80e182f9a8068a201b2b7f41f90445dca88c15122de974ca6/cloudsigma-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a67b2d1cd6f332a46a9db38bc456a761d4335bf4b187bcec1eddd173ec2744be",
          "md5": "a1feb016cf496a8f6e0f12b623bce47b",
          "sha256": "cb9558823951132837d3b41248b2cb19052c78bafab66cfbe1508829e2a01cff"
        },
        "downloads": -1,
        "filename": "cloudsigma-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a1feb016cf496a8f6e0f12b623bce47b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5,<4.0",
        "size": 23260,
        "upload_time": "2020-05-22T02:26:59",
        "upload_time_iso_8601": "2020-05-22T02:26:59.757141Z",
        "url": "https://files.pythonhosted.org/packages/a6/7b/2d1cd6f332a46a9db38bc456a761d4335bf4b187bcec1eddd173ec2744be/cloudsigma-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29026dbfa292442be2c24b1a5f7ba4df2a4c4c6e5d22e300ef24574c5dd022af",
          "md5": "5bbe85b8ebe0ce6f916e30f124c166fd",
          "sha256": "54a91540e87d1f4e59efe0d2b8ec215e3c75bf2b9a7cbcd621dfd7e8e45aa17c"
        },
        "downloads": -1,
        "filename": "cloudsigma-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bbe85b8ebe0ce6f916e30f124c166fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5,<4.0",
        "size": 22362,
        "upload_time": "2020-11-10T04:43:07",
        "upload_time_iso_8601": "2020-11-10T04:43:07.030521Z",
        "url": "https://files.pythonhosted.org/packages/29/02/6dbfa292442be2c24b1a5f7ba4df2a4c4c6e5d22e300ef24574c5dd022af/cloudsigma-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "833b10ceaed8550a08f4b228db7675700118ce426f262e18d7d830f079adef46",
          "md5": "298ef90a2bb65ce6a6dc7159a83c2a34",
          "sha256": "4eb3d44e19b4113ce278e2a265109a40b14979a652e17ad563773607984484a5"
        },
        "downloads": -1,
        "filename": "cloudsigma-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "298ef90a2bb65ce6a6dc7159a83c2a34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5,<4.0",
        "size": 24477,
        "upload_time": "2020-11-10T04:43:09",
        "upload_time_iso_8601": "2020-11-10T04:43:09.467928Z",
        "url": "https://files.pythonhosted.org/packages/83/3b/10ceaed8550a08f4b228db7675700118ce426f262e18d7d830f079adef46/cloudsigma-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29026dbfa292442be2c24b1a5f7ba4df2a4c4c6e5d22e300ef24574c5dd022af",
        "md5": "5bbe85b8ebe0ce6f916e30f124c166fd",
        "sha256": "54a91540e87d1f4e59efe0d2b8ec215e3c75bf2b9a7cbcd621dfd7e8e45aa17c"
      },
      "downloads": -1,
      "filename": "cloudsigma-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5bbe85b8ebe0ce6f916e30f124c166fd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5,<4.0",
      "size": 22362,
      "upload_time": "2020-11-10T04:43:07",
      "upload_time_iso_8601": "2020-11-10T04:43:07.030521Z",
      "url": "https://files.pythonhosted.org/packages/29/02/6dbfa292442be2c24b1a5f7ba4df2a4c4c6e5d22e300ef24574c5dd022af/cloudsigma-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "833b10ceaed8550a08f4b228db7675700118ce426f262e18d7d830f079adef46",
        "md5": "298ef90a2bb65ce6a6dc7159a83c2a34",
        "sha256": "4eb3d44e19b4113ce278e2a265109a40b14979a652e17ad563773607984484a5"
      },
      "downloads": -1,
      "filename": "cloudsigma-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "298ef90a2bb65ce6a6dc7159a83c2a34",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5,<4.0",
      "size": 24477,
      "upload_time": "2020-11-10T04:43:09",
      "upload_time_iso_8601": "2020-11-10T04:43:09.467928Z",
      "url": "https://files.pythonhosted.org/packages/83/3b/10ceaed8550a08f4b228db7675700118ce426f262e18d7d830f079adef46/cloudsigma-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}