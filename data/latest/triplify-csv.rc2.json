{
  "info": {
    "author": "Adrian Atley",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "triplify\\_csv\n=============\n\nFeatures\n========\n\nGenerates RDF triples or quads in Turtle or NQuad syntax from one or more CSV files and a configuration file.\n\nInstallation\n============\n\ntriplify\\_csv can be installed from PyPI using 'pip':\n\n```\npip install triplify_csv\n```\n\nUsage\n=====\n\ntriplify\\_csv installs as both a package and command line interface tool\n\n**Example of using the package**\n\n\tfrom TriplifyCsv import Rml, CsvOptions\n\t\n\t# config mapping files are .ttl files\n\tconfigfile = 'myconfig.ttl'\n\t\n\t# csv files should be .csv files\n\tcsvfile1, csvfile2 = 'mycsv1.csv', 'mycsv2.csv'\n\t\n\t# output file must have either a .ttl extension for turtle triples\n\t# or a .nq extension for quads\n\toutputfile = 'mytriples.ttl'\n\t\n\trml = Rml()\n\t\n\t# default date format of dates in your CSV files is '%Y-%m-%d'\n\t# default csv delimiter is ','\n\t# override the defaults by setting options\n\toptions = CsvOptions(dateformat='%d/%m/%Y', delimiter='|')\n\t\n\t# load one rml and one or more csvs\n\trml.loadFile(configfile, [csvfile1,csvfile2], options)\n\t \n\trml.create_triples()\n\t\n\t# \"nquads\" for named graphs need a .nq extension\n\t# here we are generating triples so .ttl for turtle syntax\n\trml.write_file(outputfile, format=\"ttl\")\n\n\n\n**Example of CLI use - help text**\n\nTo display full help text on the options enter the following at the command line\n\n```\ntriplify_csv --help\n```\n\n\n**Example of CLI use - making triples** The same example as the one in code above as a CLI call instead ...\n\n```\ntriplify_csv -m 'myconfig.ttl' -c 'mycsv1.csv' -c 'mycsv2.csv' -o 'mytriples.ttl'\n```\n\n**How to make your configuration file**\n\nThe configuration file contains a set of mappings for triplify\\_csv to follow to set the subjects, predicates and objects or literal values of your triples or nquads from the data in one or more CSV files. These mappings are RDF triples in the turtle syntax. The terms that can be used are a subset of the terms defined in the R2RML standard.\n\nR2RML was not designed for this purpose. R2RML is '.. a language for expressing customized mappings from relational databases to RDF datasets.' (see [https://www.w3.org/TR/r2rml/](https://www.w3.org/TR/r2rml/) ). Triplify\\_csv uses a subset of R2RML to express customised mappings from CSV files to RDF datasets. Where R2RML refers to the tables of a database using 'rr:logicalTable' this should be understood in the triplify\\_csv use of R2RML as referring to the name (without '.csv') of a corresponding csv file. 'rr:sqlQuery', the term of the R2RML language that lets you express mappings from database queries to RDF isn't supported in the triplify\\_csv usage. Also, there is no need to support 'rr:sqlVersion'.\n\nFor a complete list of what parts of the R2RML language are supported see the examples in the /tests folder and refer to the R2RML test cases document ([https://www.w3.org/TR/rdb2rdf-test-cases/](https://www.w3.org/TR/rdb2rdf-test-cases/)). As of version 0.2.0 the test cases supported are\n\n- R2RMLTC0007a - Typing resources by relying on rdf:type predicate\n- R2RMLTC0007b - Assigning triples to Named Graphs\n- R2RMLTC0007c - One column mapping, using rr:class\n- R2RMLTC0007d - One column mapping, specifying an rr:predicateObjectMap with rdf:type\n- R2RMLTC0007e - One column mapping, using rr:graphMap and rr:class\n- R2RMLTC0007f - One column mapping, using rr:graphMap and specifying an rr:predicateObjectMap with rdf:type\n- R2RMLTC0007g - Assigning triples to the default graph\n- R2RMLTC0007h - Assigning triples to a non-IRI named graph\n- R2RMLTC0008a - Generation of triples to a target graph by using rr:graphMap and rr:template\n- R2RMLTC0008b - Generation of triples referencing object map\n- R2RMLTC0008c - Generation of triples by using multiple predicateMaps within a rr:predicateObjectMap\n- R2RMLTC0009a - Generation of triples from foreign key relations\n- R2RMLTC0015a - Generation of language tags for plain literals from a CSV 'table' with language information\n\t- note: this test uses a separate CSV file for each language and differs from the original test case (in the [rdf-test-cases page](https://www.w3.org/TR/rdb2rdf-test-cases/)) which uses 'rr:sqlQuery' to select tags in each language from a single table.\n\nCopyright © 2015 W3C® (MIT, ERCIM, Keio, Beihang). This software or document includes material copied from or derived from 'R2RML: RDB to RDF Mapping Language' [http://www.w3.org/TR/2012/REC-r2rml-20120927/](http://www.w3.org/TR/2012/REC-r2rml-20120927/) and 'R2RML and Direct Mapping Test Cases' [http://www.w3.org/TR/2012/NOTE-rdb2rdf-test-cases-20120814/](http://www.w3.org/TR/2012/NOTE-rdb2rdf-test-cases-20120814/)\n\n**Simple config file example** Suppose you have a CSV file containing details of contacts (example CSV below) and you want to generate RDF data from this using FOAF, the R2RML config file might look like this ...\n\n\t@prefix rr: <http://www.w3.org/ns/r2rml#> .\n\t@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\t@prefix ex: <http://example.com/> .\n\t@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\t@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\t@base <http://example.com/base/> .\n\t\n\t<TriplesMap1> a rr:TriplesMap;\n\trr:logicalTable [ rr:tableName \"\\\"Contacts\\\"\" ];\n\t\n\trr:subjectMap [ rr:template \"http://example.com/Contact/{\\\"ID\\\"}/{\\\"Name\\\"}\";\n\t rr:class foaf:Person;\n\t];\n\t\n\trr:predicateObjectMap [ rr:predicate ex:id ;\n\t rr:objectMap [ rr:column \"\\\"ID\\\"\" ;  ] ;\n\t];\n\t\n\trr:predicateObjectMap [ rr:predicate foaf:name ;\n\t rr:objectMap [ rr:column \"\\\"Name\\\"\" ; ] ;\n\t];\n\t\n\trr:predicateObjectMap [ rr:predicate foaf:interest ;\n\t  rr:objectMap [ rr:column \"\\\"Interest\\\"\" ; ] ;\n\t];\n\t\n\t.\n\n\n\nCreate a CSV file called 'Contacts.csv' using commas as delimiters between the following values (shown here in a table) ...\n\nID  | Name | Interest\n:---- | :---- | :--------\n10 | John Smith | https://en.m.wikipedia.org/wiki/Tennis\n20 | Joe Bloggs | https://en.m.wikipedia.org/wiki/Golf\n30 | Mr Bun | https://en.m.wikipedia.org/wiki/Spam_(food) \n\n\nNow, with triplify_csv installed save the R2RML config file as 'contactsmap.ttl' and the csv file as 'Contacts.csv' and generate the output containing your triples to a file called 'contactstriples.ttl' (for example) with the following command ...\n\n```\ntriplify_csv -m 'contactsmap.ttl' -c 'Contacts.csv' -o 'contactstriples.ttl'\n```\n\nThe resulting triples in turtle syntax in the 'contactstriples.ttl' file would look like this ...\n\n\n\t@prefix ex: <http://example.com/> .\n\t@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\t@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\t\n\t<http://example.com/Contact/10/John%20Smith> a foaf:Person ;\n\t    ex:id 10 ;\n\t    foaf:interest \"https://en.m.wikipedia.org/wiki/Tennis\" ;\n\t    foaf:name \"John Smith\" .\n\t\n\t<http://example.com/Contact/20/Joe%20Bloggs> a foaf:Person ;\n\t    ex:id 20 ;\n\t    foaf:interest \"https://en.m.wikipedia.org/wiki/Golf\" ;\n\t    foaf:name \"Joe Bloggs\" .\n\t\n\t<http://example.com/Contact/30/Mr%20Bun> a foaf:Person ;\n\t    ex:id 30 ;\n\t    foaf:interest \"https://en.m.wikipedia.org/wiki/Spam\\_(food)\" ;\n\t    foaf:name \"Mr Bun\" .\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AAtley/triplify_csv",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "triplify-csv",
    "package_url": "https://pypi.org/project/triplify-csv/",
    "platform": null,
    "project_url": "https://pypi.org/project/triplify-csv/",
    "project_urls": {
      "Homepage": "https://github.com/AAtley/triplify_csv",
      "Repository": "https://github.com/AAtley/triplify_csv"
    },
    "release_url": "https://pypi.org/project/triplify-csv/0.2.1/",
    "requires_dist": [
      "rdflib (>=6.0.2,<7.0.0)",
      "pytest (>=6.2.5,<7.0.0)",
      "click (>=8.0.3,<9.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "A tool to generate triples from CSV files according to a configuration file.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14241153,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc579ebfa4f26dc164de24a626a17edc8adebe6ed5225dc98ca099ac094b541d",
          "md5": "be3926099506a92a1edaeb38a2204a80",
          "sha256": "ef7f9d12824672c0d91c0104fac4dd9555738d2599530229302499f4522026a5"
        },
        "downloads": -1,
        "filename": "triplify_csv-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be3926099506a92a1edaeb38a2204a80",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 9935,
        "upload_time": "2022-02-20T00:33:24",
        "upload_time_iso_8601": "2022-02-20T00:33:24.510908Z",
        "url": "https://files.pythonhosted.org/packages/cc/57/9ebfa4f26dc164de24a626a17edc8adebe6ed5225dc98ca099ac094b541d/triplify_csv-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25d9c33bba512d33394e330a824bf9c624bd9d9277b1c4f29d9844a4b800b1c8",
          "md5": "5f3670a21620ace7a392cf9d13be9c66",
          "sha256": "ecfbf839dcf1b727b507128ebaa9c1424d295a36d05815cf572afdfd282bde59"
        },
        "downloads": -1,
        "filename": "triplify_csv-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5f3670a21620ace7a392cf9d13be9c66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 10671,
        "upload_time": "2022-02-20T00:33:26",
        "upload_time_iso_8601": "2022-02-20T00:33:26.640889Z",
        "url": "https://files.pythonhosted.org/packages/25/d9/c33bba512d33394e330a824bf9c624bd9d9277b1c4f29d9844a4b800b1c8/triplify_csv-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45863efb7e278dd075b72a8c863d6721860758ecac0f1815eadad8a93a997625",
          "md5": "8aeae6fc53d8dad5359408b743236444",
          "sha256": "bc066ee08752c7cc6d1079794aff8a8dced98287955f5eb702a88983e296c893"
        },
        "downloads": -1,
        "filename": "triplify_csv-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8aeae6fc53d8dad5359408b743236444",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 10285,
        "upload_time": "2022-06-24T22:57:20",
        "upload_time_iso_8601": "2022-06-24T22:57:20.358384Z",
        "url": "https://files.pythonhosted.org/packages/45/86/3efb7e278dd075b72a8c863d6721860758ecac0f1815eadad8a93a997625/triplify_csv-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "779286bb84d9ea054f3bb46d0e6daa74f14769c91b59efee570a7cff36ec6b15",
          "md5": "b7f58128ff2f550c53a93bbf0a976396",
          "sha256": "135632b66ae98fa676483c28a0e8982d9e0f08a673f8d26f3748aa861a2d7084"
        },
        "downloads": -1,
        "filename": "triplify_csv-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b7f58128ff2f550c53a93bbf0a976396",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 12378,
        "upload_time": "2022-06-24T22:57:22",
        "upload_time_iso_8601": "2022-06-24T22:57:22.328751Z",
        "url": "https://files.pythonhosted.org/packages/77/92/86bb84d9ea054f3bb46d0e6daa74f14769c91b59efee570a7cff36ec6b15/triplify_csv-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45863efb7e278dd075b72a8c863d6721860758ecac0f1815eadad8a93a997625",
        "md5": "8aeae6fc53d8dad5359408b743236444",
        "sha256": "bc066ee08752c7cc6d1079794aff8a8dced98287955f5eb702a88983e296c893"
      },
      "downloads": -1,
      "filename": "triplify_csv-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8aeae6fc53d8dad5359408b743236444",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 10285,
      "upload_time": "2022-06-24T22:57:20",
      "upload_time_iso_8601": "2022-06-24T22:57:20.358384Z",
      "url": "https://files.pythonhosted.org/packages/45/86/3efb7e278dd075b72a8c863d6721860758ecac0f1815eadad8a93a997625/triplify_csv-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "779286bb84d9ea054f3bb46d0e6daa74f14769c91b59efee570a7cff36ec6b15",
        "md5": "b7f58128ff2f550c53a93bbf0a976396",
        "sha256": "135632b66ae98fa676483c28a0e8982d9e0f08a673f8d26f3748aa861a2d7084"
      },
      "downloads": -1,
      "filename": "triplify_csv-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b7f58128ff2f550c53a93bbf0a976396",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 12378,
      "upload_time": "2022-06-24T22:57:22",
      "upload_time_iso_8601": "2022-06-24T22:57:22.328751Z",
      "url": "https://files.pythonhosted.org/packages/77/92/86bb84d9ea054f3bb46d0e6daa74f14769c91b59efee570a7cff36ec6b15/triplify_csv-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}