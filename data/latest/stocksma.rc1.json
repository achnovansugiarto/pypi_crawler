{
  "info": {
    "author": "sovix",
    "author_email": "sed.labiad@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div align=\"center\">\n  <p>\n      <a href=\"https://pypi.org/project/StocksMA/\"><img width=\"500\" src=\"https://i.ibb.co/D73mr0j/stocks.png\" alt=\"StocksMA\" onerror=\"this.onerror=null;this.src='stocks.png';\"/></a>\n  </p>\n  <b>Creating easier access to the Moroccan stock market data</b>\n  \n  <br />\n</div>\n\n---\n\n<div align=\"center\">\n\n[![Language](https://img.shields.io/badge/Language-Python-green?style)](https://github.com/s0v1x)\n[![PyPI](https://img.shields.io/pypi/v/StocksMA)](https://pypi.org/project/StocksMA/)\n[![Star Badge](https://img.shields.io/static/v1?label=%F0%9F%8C%9F&message=If%20Useful&style=style=flatcolor=BC4E99)](https://github.com/s0v1x/StocksMA)\n[![GitHub license](https://img.shields.io/github/license/s0v1x/StocksMA)](https://github.com/s0v1x/StocksMA/blob/master/LICENSE)\n[![Check Code](https://github.com/s0v1x/StocksMA/actions/workflows/check_code.yml/badge.svg)](https://github.com/s0v1x/StocksMA/actions/workflows/check_code.yml)\n\n</div>\n\n## What is StocksMA ?\n\nStocksMA is a package to facilitate access to financial and economic data of Moroccan stocks. It tries to cover potentially valuable and interesting data points.\n\nThe package include functions to extract price data from [Leboursier](https://www.leboursier.ma/), financial ratios(income statement, balance sheet, cash flow) from [MarketWatch](https://www.marketwatch.com/), and profile data from [WSJ](https://www.wsj.com)\n\n> Note: Sometimes, some functions may fail to get the data from some sources due to WAF protection.\n\n## Installation\n\nPython3 is required.\n\n```bash\n$ pip install StocksMA\n```\n\n## Usage\n\n  - [Import the package](#import-the-package)\n  - [Get all availabale tickers](#get-all-availabale-tickers)\n  - [Get price data](#get-price-data)\n    - [Get price data of multiple companies](#get-price-data)\n    - [Get price data of single company](#get-price-data)\n  - [Get session information](#get-session-information)\n  - [Get intraday price data](#get-intraday-price-data)\n  - [Get Ask Bid data](#get-ask-bid-data)\n  - [Get balance sheet](#get-balance-sheet)\n    - [Annual balance sheet](#get-balance-sheet)\n    - [Quarter balance sheet](#get-balance-sheet)\n  - [Get income statement](#get-income-statement)\n    - [Annual income statement](#get-income-statement)\n    - [Quarter income statement](#get-income-statement)\n  - [Get cash flow](#get-cash-flow)\n    - [Annual cash flow](#get-cash-flow)\n    - [Quarter cash flow](#get-cash-flow)\n  - [Get quote table](#get-quote-table)\n  - [Get market status](#get-market-status)\n  - [Get company officers](#get-company-officers)\n  - [Get company information](#get-company-information)\n  \n### Import the package\n\n```python\n>> import StocksMA as stm\n```\n\n### Get all availabale tickers\nShow available tickers with the full name of the company\n**Example**:\n```python\nstm.get_tickers()\n```\n\n```bash\nADH / Douja Promotion Groupe Addoha\nADI / Alliances Developpement Immobilier S.A.\nAFI / Afric Industries S.A.\nAFM / AFMA S.A.\n.\n.\n.\nWAA / Wafa Assurance S.A.\nZDJ / Zellidja S.A.\n```\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get price data \nGet historical OHLCV data for a given symbol(s)\n\n**Args**:\n- **`tickers`** `Union[str, List[str]]` : List or str of companies names or ticker symbols(e.g. ['maroc telecom', 'MNG'] or 'CIH')\n- **`start_date`** `str`: `(YYYY-MM-DD)` Starting date to pull data from, limited to a maximum of six year\n- **`end_date`** `str`: `(YYYY-MM-DD)` Ending date. Defaults to the current local date\n\n**Returns**:\n- **`pd.DataFrame`**: Dataframe of historical OHLCV data\n\n**Example**:\n```python\n# Get price data of multiple companies\nstm.get_price_data(['CIH','maroc telecom', 'involys'], start_date='2020-11-14', end_date='2022-02-14')\n```\n\n|           \t|            \t| Close  \t| High   \t| Low    \t| Open   \t| Volume \t|\n|-----------\t|------------\t|--------\t|--------\t|--------\t|--------\t|--------\t|\n| **Company** | **Date**    |        \t|        \t|        \t|        \t|        \t|\n| CIH P     \t| 2020-11-16 \t| 248.15 \t| 248.15 \t| 248.00 \t| 248.00 \t| 8      \t|\n|           \t| 2020-11-17 \t| 250.00 \t| 250.00 \t| 248.00 \t| 248.10 \t| 220    \t|\n|           \t| 2020-11-19 \t| 245.20 \t| 248.00 \t| 245.10 \t| 248.00 \t| 133    \t|\n|           \t| ...        \t| ...    \t| ...    \t| ...    \t| ...    \t| ...    \t|\n| INVOLYS P \t| 2022-02-08 \t| 131.95 \t| 131.95 \t| 131.95 \t| 131.95 \t| 5      \t|\n|           \t| 2022-02-09 \t| 131.95 \t| 131.95 \t| 131.90 \t| 131.95 \t| 100    \t|\n|           \t| 2022-02-11 \t| 131.90 \t| 131.90 \t| 131.00 \t| 131.00 \t| 4      \t|\n\n[840 rows x 5 columns]\n\n\n```python\n# Get price data of single company\nstm.get_price_data('involys', start_date='2020-11-14', end_date='2022-02-14')\n```\n\n|           \t|            \t| Open   \t| High   \t| Low    \t| Close  \t| Volume \t|\n|-----------\t|------------\t|--------\t|--------\t|--------\t|--------\t|--------\t|\n| **Company**   | **Date**      |        \t|        \t|        \t|        \t|        \t|\n| INVOLYS P \t| 2020-11-16 \t| 119.50 \t| 121.00 \t| 119.50 \t| 121.00 \t| 11     \t|\n|           \t| 2020-11-17 \t| 118.60 \t| 121.00 \t| 118.60 \t| 121.00 \t| 22     \t|\n|           \t| 2020-11-19 \t| 121.00 \t| 121.00 \t| 121.00 \t| 121.00 \t| 1      \t|\n|           \t| ...        \t| ...    \t| ...    \t| ...    \t| ...    \t| ...    \t|\n|           \t| 2022-02-09 \t| 131.95 \t| 131.95 \t| 131.90 \t| 131.95 \t| 100    \t|\n|           \t| 2022-02-11 \t| 131.00 \t| 131.90 \t| 131.00 \t| 131.90 \t| 4      \t|\n\n[253 rows x 5 columns]\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get session information\nGet data related to the current trading session of a given symbol\n\n**Args**:\n- **`company`** `str`: Company name or ticker symbol(e.g. 'maroc telecom', 'MNG')\n\n**Returns**:\n- **`pd.DataFrame`**: Dataframe of session data\n\n**Example**:\n```python\nstm.get_session_info('involys')\n```\n\n|   \t| Name      \t| Name_2  \t| ISIN         \t| Number of Shares \t| Close   \t| Previous Close \t| Market Cap  \t| Quotation Datetime \t|  Change Volume \t| Change \t| Volume in Shares \t| Volume \t| Open    \t| Low     \t| High    \t|\n|---\t|-----------\t|---------\t|--------------\t|------------------\t|---------\t|----------------\t|-------------\t|--------------------\t|----------------\t|--------\t|------------------\t|--------\t|---------\t|---------\t|---------\t|\n| 1 \t| INVOLYS P \t| INVOLYS \t| MA0000011579 \t| 382716           \t| 109.950 \t| 109.95         \t| 42079624.20 \t| 18/03/2022 Ã  15:16 \t| 0.00           \t| 0.00   \t| 5387             \t| 49     \t| 109.400 \t| 109.400 \t| 109.950 \t|\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get intraday price data\nGet intraday price data of a given symbol\n\n**Args**:\n- **`company`** `str`: Company name or ticker symbol(e.g. 'maroc telecom', 'MNG')\n\n**Returns**:\n- **`pd.DataFrame`**: Dataframe of intraday price data\n\n**Example:**\n```python\nstm.get_data_intraday('CIH')\n```\n\n|                     \t| prices \t|\n|---------------------\t|--------\t|\n| **Datetime**          |        \t|\n| 2022-03-18 09:30:00 \t| 130.20 \t|\n| 2022-03-18 10:02:00 \t| 131.00 \t|\n| 2022-03-18 10:06:00 \t| 131.00 \t|\n| 2022-03-18 10:07:00 \t| 131.00 \t|\n| 2022-03-18 10:17:00 \t| 131.15 \t|\n| 2022-03-18 10:24:00 \t| 131.15 \t|\n| 2022-03-18 10:30:00 \t| 131.15 \t|\n| 2022-03-18 10:41:00 \t| 131.40 \t|\n| 2022-03-18 11:07:00 \t| 131.40 \t|\n| 2022-03-18 11:15:00 \t| 131.40 \t|\n| 2022-03-18 12:24:00 \t| 131.45 \t|\n| 2022-03-18 12:31:00 \t| 131.40 \t|\n| 2022-03-18 13:25:00 \t| 131.20 \t|\n| 2022-03-18 14:48:00 \t| 131.25 \t|\n| 2022-03-18 15:07:00 \t| 131.40 \t|\n| 2022-03-18 15:19:00 \t| 131.25 \t|\n| 2022-03-18 15:30:00 \t| 131.40 \t|\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get Ask Bid data\nGet ask bid data of a given symbol\n\n**Args**:\n- **`company`** `str`: Company name or ticker symbol(e.g. 'maroc telecom', 'MNG')\n\n**Returns**:\n- **`pd.DataFrame`**: Dataframe of ask bid data\n\n**Example:**\n```python\nstm.get_ask_bid('CIH')\n```\n\n|   \t| bidValue \t| bidQte \t| askValue \t| askQte \t| bidOrder \t| askOrder \t|\n|---\t|----------\t|--------\t|----------\t|--------\t|----------\t|----------\t|\n| 0 \t| 340.1    \t| 3      \t| 350.0    \t| 248    \t| 1        \t| 2        \t|\n| 1 \t| 340.0    \t| 950    \t| 352.0    \t| 702    \t| 2        \t| 1        \t|\n| 2 \t| 337.1    \t| 4      \t| 354.5    \t| 10     \t| 1        \t| 1        \t|\n| 3 \t| 336.2    \t| 10     \t| 354.9    \t| 3      \t| 1        \t| 1        \t|\n| 4 \t| 335.0    \t| 10     \t| 355.0    \t| 290    \t| 1        \t| 2        \t|\n| 5 \t| 334.0    \t| 4      \t| 356.0    \t| 200    \t| 1        \t| 2        \t|\n| 6 \t| 332.0    \t| 6      \t| 357.9    \t| 2      \t| 2        \t| 1        \t|\n| 7 \t| 330.5    \t| 10     \t| 358.0    \t| 482    \t| 1        \t| 2        \t|\n| 8 \t| 330.0    \t| 274    \t| 359.0    \t| 59     \t| 3        \t| 1        \t|\n| 9 \t| 321.5    \t| 300    \t| 359.4    \t| 20     \t| 1        \t| 1        \t|\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get balance sheet\nGet balance sheet data of a given symbol\n\n**Args**:\n- **`company`** `str`: Ticker symbol(e.g. 'IAM', 'MNG')\n- **`frequency`** `str`: Display either quarter or annual data. Defaults to \"annual\".\n\n**Returns**:\n- **`pd.DataFrame`**: Dataframe of balance sheet data\n\n**Example:**\n```python\n# Annual balance sheet\nstm.get_balance_sheet('ATW', frequency='annual')\n```\n\n|                                    \t|                                     \t| 2017   \t| 2018    \t| 2019    \t| 2020    \t| 2021      |\n|------------------------------------\t|-------------------------------------\t|---------\t|---------\t|---------\t|---------\t|---------\t|\n|                                    \t| **Item**                              |         \t|         \t|         \t|         \t|         \t|\n| Assets                             \t| Total Cash & Due from Banks         \t| 18.22B  \t| 18.54B  \t| 24.73B  \t| 26.33B  \t| 25.74B  \t|\n|                                    \t| Cash & Due from Banks Growth        \t| -       \t| 1.71%   \t| 33.42%  \t| 6.48%   \t| -2.26%  \t|\n|                                    \t| Investments - Total                 \t| 116.38B \t| 119.86B \t| 123.75B \t| 137.55B \t| 158.73B \t|\n|                                    \t| Investments Growth                  \t| -       \t| 2.99%   \t| 3.25%   \t| 11.15%  \t| 15.40%  \t|\n|                                    \t| Trading Account Securities          \t| -       \t| -       \t| 54.32B  \t| 58.67B  \t| 69.91B  \t|\n|                                    \t| ...                                 \t| ...     \t| ...     \t| ...     \t| ...     \t| ...     \t|\n| Liabilities & Shareholders' Equity \t| Total Shareholders' Equity / Assets \t| 8.40%   \t| 8.73%   \t| 8.94%   \t| 8.41%   \t| 8.80%   \t|\n|                                    \t| Return On Average Total Equity      \t| -       \t| -       \t| -       \t| -       \t| 10.26%  \t|\n|                                    \t| Accumulated Minority Interest       \t| 6.44B   \t| 5.95B   \t| 6.3B    \t| 6.49B   \t| 7.34B   \t|\n|                                    \t| Total Equity                        \t| 46.06B  \t| 50.47B  \t| 53.93B  \t| 54.29B  \t| 59.79B  \t|\n|                                    \t| Liabilities & Shareholders' Equity  \t| 471.47B \t| 509.93B \t| 532.6B  \t| 568.11B \t| 596.33B \t|\n\n[74 rows x 5 columns]\n\n\n```python\n# Quarter balance sheet\nstm.get_balance_sheet('ATW', frequency='quarter')\n```\n\n|                                     \t|                                     \t| 30-Jun-2021 \t| 30-Sep-2021 \t| 31-Dec-2020 \t| 31-Dec-2021 \t| 31-Mar-2021 \t|\n|-------------------------------------\t|-------------------------------------\t|-------------\t|-------------\t|-------------\t|-------------\t|-------------\t|\n|                                     \t| **Item**                                \t|             \t|             \t|             \t|             \t|             \t|\n| Assets                              \t| Total Cash & Due from Banks         \t| 23.41B      \t| 20.2B       \t| 26.33B      \t| 25.74B      \t| 22.79B      \t|\n|                                     \t| Cash & Due from Banks Growth        \t| 2.74%       \t| -13.73%     \t| -           \t| 27.43%      \t| -13.47%     \t|\n|                                     \t| Investments - Total                 \t| 148.98B     \t| 155.57B     \t| 137.55B     \t| 158.73B     \t| 141.76B     \t|\n|                                     \t| Investments Growth                  \t| 5.10%       \t| 4.42%       \t| -           \t| 2.04%       \t| 3.06%       \t|\n|                                     \t| Trading Account Securities          \t| 63.98B      \t| 64.94B      \t| 58.67B      \t| 69.91B      \t| 61.8B       \t|\n|                                     \t| ...                                 \t| ...         \t| ...         \t| ...         \t| ...         \t| ...         \t|\n| Liabilities & Shareholders' Equity  \t| Total Shareholders' Equity / Assets \t| 8.47%       \t| 8.73%       \t| 8.41%       \t| 8.80%       \t| 8.48%       \t|\n|                                     \t| Return On Average Total Equity      \t| -           \t| -           \t| -           \t| 10.26%      \t| -           \t|\n|                                     \t| Accumulated Minority Interest       \t| 6.88B       \t| 7.13B       \t| 6.49B       \t| 7.34B       \t| 6.69B       \t|\n|                                     \t| Total Equity                        \t| 56B         \t| 58.29B      \t| 54.29B      \t| 59.79B      \t| 54.45B      \t|\n|                                     \t| Liabilities & Shareholders' Equity  \t| 579.79B     \t| 586.09B     \t| 568.11B     \t| 596.33B     \t| 562.95B     \t|\n\n[74 rows x 5 columns]\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get income statement\nGet income statement data of a given symbol\n\n**Args**:\n- **`company`** `str`: Ticker symbol(e.g. 'IAM', 'MNG')\n- **`frequency`** `str`: Display either quarter or annual data. Defaults to \"annual\".\n\n**Returns**:\n- **`pd.DataFrame`**: Dataframe of income statement data\n\n**Example:**\n```python\n# Annual income statement\nstm.get_income_statement('IAM', frequency='annual')\n```\n\n|**Item**                               | 2017   \t| 2018   \t| 2019    \t| 2020    \t| 2021   \t|\n|-------------------------------------\t|--------\t|--------\t|---------\t|---------\t|--------\t|\n| Sales/Revenue                       \t| 34.96B \t| 36.03B \t| 36.52B  \t| 36.77B  \t| 35.79B \t|\n| Sales Growth                        \t| -      \t| 3.06%  \t| 1.35%   \t| 0.69%   \t| -2.66% \t|\n| Cost of Goods Sold (COGS) incl. D&A \t| 15.69B \t| 15.72B \t| 16.19B  \t| 15.93B  \t| 15.05B \t|\n| COGS Growth                         \t| -      \t| 0.24%  \t| 2.95%   \t| -1.57%  \t| -5.56% \t|\n| COGS excluding D&A                  \t| 9.08B  \t| 8.9B   \t| 8.77B   \t| 8.42B   \t| 7.99B  \t|\n| Non Operating Income/Expense        \t| (57M)  \t| 201M   \t| (49M)   \t| (1.49B) \t| (165M) \t|\n| ...                                 \t| ...    \t| ...    \t| ...     \t| ...     \t| ...    \t|\n| Equity in Affiliates (Pretax)       \t| -      \t| -      \t| -       \t| -       \t| -      \t|\n| Interest Expense                    \t| 586M   \t| 642M   \t| 756M    \t| 888M    \t| 826M   \t|\n| Interest Expense Growth             \t| -      \t| 9.56%  \t| 17.76%  \t| 17.46%  \t| -6.98% \t|\n| EBITDA                              \t| 17.03B \t| 17.87B \t| 15.65B  \t| 19.53B  \t| 18.63B \t|\n| EBITDA Growth                       \t| -      \t| 4.93%  \t| -12.44% \t| 24.80%  \t| -4.62% \t|\n| EBITDA Margin                       \t| -      \t| -      \t| -       \t| -       \t| 52.05% \t|\n\n```python\n# Quarter income statement\nstm.get_income_statement('IAM', frequency='quarter')\n```\n\n|**Item**                               | 31-Dec-2019 \t| 30-Jun-2020 \t| 31-Dec-2020 \t| 30-Jun-2021 \t| 31-Dec-2021 \t|\n|-------------------------------------\t|-------------\t|-------------\t|-------------\t|-------------\t|-------------\t|\n| Sales/Revenue                       \t| 18.67B      \t| 18.32B      \t| 18.45B      \t| 17.78B      \t| 18.01B      \t|\n| Sales Growth                        \t| -           \t| -1.87%      \t| 0.67%       \t| -3.61%      \t| 1.29%       \t|\n| Cost of Goods Sold (COGS) incl. D&A \t| 11.53B      \t| 4.92B       \t| 7.74B       \t| 7.9B        \t| 7.57B       \t|\n| COGS Growth                         \t| -           \t| -57.33%     \t| 57.23%      \t| 2.02%       \t| -4.08%      \t|\n| COGS excluding D&A                  \t| 4.42B       \t| 4.16B       \t| 4.26B       \t| 4.09B       \t| 3.91B       \t|\n| Depreciation & Amortization Expense \t| 7.12B       \t| 759M        \t| 3.48B       \t| 3.81B       \t| 3.67B       \t|\n| ...                                 \t| ...         \t| ...         \t| ...         \t| ...         \t| ...         \t|\n| EBITDA                              \t| 9.49B       \t| 6.6B        \t| 9.66B       \t| 9.37B       \t| 9.68B       \t|\n| EBITDA Growth                       \t| -           \t| -30.48%     \t| 46.52%      \t| -3.07%      \t| 3.38%       \t|\n| EBITDA Margin                       \t| -           \t| -           \t| -           \t| -           \t| 53.76%      \t|\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get cash flow\nGet cash flow data of a given symbol\n\n**Args**:\n- **`company`** `str`: Ticker symbol(e.g. 'IAM', 'MNG')\n- **`frequency`** `str`: Display either quarter or annual data. Defaults to \"annual\".\n\n**Returns**:\n- **`pd.DataFrame`**: Dataframe of cash flow data\n\n**Example:**\n```python\n# Annual cash flow\nstm.get_cash_flow('IAM', frequency='annual')\n```\n|                      \t|                                        \t| 2017    \t| 2018    \t| 2019    \t| 2020    \t| 2021    \t|\n|----------------------\t|----------------------------------------\t|---------\t|---------\t|---------\t|---------\t|---------\t|\n|                      \t| **Item**                                |         \t|         \t|         \t|         \t|         \t|\n| Operating Activities \t| Net Income before Extraordinaries      \t| 10.31B  \t| 11.05B  \t| 8.23B   \t| 12.02B  \t| 11.57B  \t|\n|                      \t| Net Income Growth                      \t| -       \t| 7.20%   \t| -25.52% \t| 46.01%  \t| -3.70%  \t|\n|                      \t| Depreciation, Depletion & Amortization \t| 6.61B   \t| 6.82B   \t| 7.42B   \t| 7.51B   \t| 7.06B   \t|\n|                      \t| ...                                    \t| ...     \t| ...     \t| ...     \t| ...     \t| ...     \t|\n|                      \t| Net Operating Cash Flow                \t| 14.13B  \t| 13.95B  \t| 14.81B  \t| 10.48B  \t| 12.87B  \t|\n|                      \t| Net Operating Cash Flow Growth         \t| -       \t| -1.32%  \t| 6.22%   \t| -29.28% \t| 22.80%  \t|\n|                      \t| Net Operating Cash Flow / Sales        \t| 40.42%  \t| 38.71%  \t| 40.57%  \t| 28.49%  \t| 35.95%  \t|\n| Investing Activities \t| Capital Expenditures                   \t| (8.37B) \t| (8.08B) \t| (7.95B) \t| (4.14B) \t| (5.29B) \t|\n|                      \t| Capital Expenditures Growth            \t| -       \t| 3.52%   \t| 1.56%   \t| 47.91%  \t| -27.75% \t|\n|                      \t| Capital Expenditures / Sales           \t| -23.94% \t| -22.41% \t| -21.77% \t| -11.26% \t| -14.78% \t|\n|                      \t| ...                                    \t| ...     \t| ...     \t| ...     \t| ...     \t| ...     \t|\n|                      \t| Net Investing Cash Flow                \t| (8.07B) \t| (8.37B) \t| (8.83B) \t| (4.23B) \t| (5.31B) \t|\n|                      \t| Net Investing Cash Flow Growth         \t| -       \t| -3.77%  \t| -5.42%  \t| 52.03%  \t| -25.42% \t|\n|                      \t| Net Investing Cash Flow / Sales        \t| -23.07% \t| -23.23% \t| -24.17% \t| -11.51% \t| -14.83% \t|\n| Financing Activities \t| Cash Dividends Paid - Total            \t| (5.6B)  \t| (5.73B) \t| (6B)    \t| (4.87B) \t| (3.53B) \t|\n|                      \t| Common Dividends                       \t| (5.6B)  \t| (5.73B) \t| (6B)    \t| (4.87B) \t| (3.53B) \t|\n|                      \t| Preferred Dividends                    \t| -       \t| -       \t| -       \t| -       \t| -       \t|\n|                      \t| ...                                    \t| ...     \t| ...     \t| ...     \t| ...     \t| ...     \t|\n|                      \t| Free Cash Flow                         \t| 5.76B   \t| 5.87B   \t| 6.87B   \t| 6.34B   \t| 7.58B   \t|\n|                      \t| Free Cash Flow Growth                  \t| -       \t| 1.89%   \t| 16.91%  \t| -7.72%  \t| 19.57%  \t|\n|                      \t| Free Cash Flow Yield                   \t| -       \t| -       \t| -       \t| -       \t| 3.30    \t|\n\n```python\n# Quarter cash flow\nstm.get_cash_flow('IAM', frequency='quarter')\n```\n\n|                      \t|                                        \t| 31-Dec-2019 \t| 30-Jun-2020 \t| 31-Dec-2020 \t| 30-Jun-2021 \t| 31-Dec-2021 \t|\n|----------------------\t|----------------------------------------\t|-------------\t|-------------\t|-------------\t|-------------\t|-------------\t|\n|                      \t| **Item**                                |             \t|             \t|             \t|             \t|             \t|\n| Operating Activities \t| Net Income before Extraordinaries      \t| 2.37B       \t| 5.84B       \t| 6.18B       \t| 5.56B       \t| 6.02B       \t|\n|                      \t| Net Income Growth                      \t| -           \t| 146.35%     \t| 5.93%       \t| -10.11%     \t| 8.26%       \t|\n|                      \t| Depreciation, Depletion & Amortization \t| 3.81B       \t| (759M)      \t| 8.27B       \t| 3.81B       \t| 3.25B       \t|\n|                      \t| ...                                    \t| ...         \t| ...         \t| ...         \t| ...         \t| ...         \t|\n|                      \t| Net Operating Cash Flow                \t| 8.95B       \t| 1.86B       \t| 8.62B       \t| 5.81B       \t| 7.05B       \t|\n|                      \t| Net Operating Cash Flow Growth         \t| -           \t| -79.27%     \t| 364.44%     \t| -32.56%     \t| 21.31%      \t|\n|                      \t| Net Operating Cash Flow / Sales        \t| 47.94%      \t| 10.13%      \t| 46.73%      \t| 32.69%      \t| 39.16%      \t|\n| Investing Activities \t| Capital Expenditures                   \t| (3.73B)     \t| (2.29B)     \t| (1.85B)     \t| (2.74B)     \t| (2.55B)     \t|\n|                      \t| Capital Expenditures Growth            \t| -           \t| 38.69%      \t| 18.93%      \t| -47.57%     \t| 6.65%       \t|\n|                      \t| Capital Expenditures / Sales           \t| -19.98%     \t| -12.48%     \t| -10.05%     \t| -15.39%     \t| -14.18%     \t|\n|                      \t| ...                                    \t| ...         \t| ...         \t| ...         \t| ...         \t| ...         \t|\n|                      \t| Net Investing Cash Flow                \t| (3.56B)     \t| (2.4B)      \t| (1.84B)     \t| (2.76B)     \t| (2.55B)     \t|\n|                      \t| Net Investing Cash Flow Growth         \t| -           \t| 32.71%      \t| 23.40%      \t| -50.11%     \t| 7.37%       \t|\n|                      \t| Net Investing Cash Flow / Sales        \t| -19.08%     \t| -13.08%     \t| -9.95%      \t| -15.50%     \t| -14.18%     \t|\n| Financing Activities \t| Cash Dividends Paid - Total            \t| (271M)      \t| -           \t| (4.87B)     \t| -           \t| (3.53B)     \t|\n|                      \t| Common Dividends                       \t| (271M)      \t| -           \t| (4.87B)     \t| -           \t| (3.53B)     \t|\n|                      \t| Preferred Dividends                    \t| -           \t| -           \t| -           \t| -           \t| -           \t|\n|                      \t| ...                                    \t| ...         \t| ...         \t| ...         \t| ...         \t| ...         \t|\n|                      \t| Free Cash Flow                         \t| 5.22B       \t| (431M)      \t| 6.77B       \t| 3.08B       \t| 4.5B        \t|\n|                      \t| Free Cash Flow Growth                  \t| -           \t| -108.25%    \t| 1,669.84%   \t| -54.52%     \t| 46.18%      \t|\n|                      \t| Free Cash Flow Yield                   \t| -           \t| -           \t| -           \t| -           \t| 3.30        \t|\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get quote table\nGet important data about a given symbol\n\n**Args**:\n- **`company`** `str`: Ticker symbol(e.g. 'IAM', 'MNG')\n\n**Returns**:\n- **`pd.DataFrame`**: Dataframe of data about the ticker\n\n**Example:**\n```python\nstm.get_quote_table('ATW')\n```\n\n|    \t| Key Data           \t| Value           \t|\n|----\t|--------------------\t|-----------------\t|\n| 0  \t| Open               \t| 473.00          \t|\n| 1  \t| Day Range          \t| 464.00 - 473.00 \t|\n| 2  \t| 52 Week Range      \t| N/A             \t|\n| 3  \t| Market Cap         \t| 93.69B          \t|\n| 4  \t| Shares Outstanding \t| 215.14M         \t|\n| 5  \t| Public Float       \t| 69.09M          \t|\n| 6  \t| Beta               \t| N/A             \t|\n| 7  \t| Rev. per Employee  \t| 1.933M          \t|\n| 8  \t| P/E Ratio          \t| 18.04           \t|\n| 9  \t| EPS                \t| 25.72           \t|\n| 10 \t| Yield              \t| 3.23%           \t|\n| 11 \t| Dividend           \t| 6.75            \t|\n| 12 \t| Ex-Dividend Date   \t| Jul 5, 2021     \t|\n| 13 \t| Short Interest     \t| N/A             \t|\n| 14 \t| % of Float Shorted \t| N/A             \t|\n| 15 \t| Average Volume     \t| 160.21K         \t|\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get market status\nGet status of the Moroccan market\n**Returns**:\n- **`str`**: Status of the market(Open/Closed)\n\n**Example:**\n```python\nstm.get_market_status()\n```\n```bash\nClosed\n```\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get company officers\nGet company officers of a given symbol\n\n**Args**:\n- **`company`** `str`: Ticker symbol(e.g. 'IAM', 'MNG')\n\n**Returns**:\n- **`pd.DataFrame`**: Dataframe of names and roles of the officers\n\n**Example:**\n```python\nstm.get_company_officers('MNG')\n```\n\n|    \t| Name                   \t| Role                                              \t|\n|----\t|------------------------\t|---------------------------------------------------\t|\n| 0  \t| Imad Toumi             \t| Chairman & Chief Executive Officer                \t|\n| 1  \t| Mouna Mahfoud          \t| Executive Director-Finance                        \t|\n| 2  \t| Naoual Zine            \t| General Manager-Reminex & Projects                \t|\n| 3  \t| Lhou Maacha            \t| Executive Director-Exploration                    \t|\n| 4  \t| Youssef el Hajjam      \t| General Manager-Bases Metal Operations            \t|\n| 5  \t| Karim Khettouch        \t| Director                                          \t|\n| 6  \t| Samir Oudghiri Idrissi \t| Director                                          \t|\n| 7  \t| Bassim JaÃ¯ Hokimi      \t| Director                                          \t|\n| 8  \t| Hassan Ouriagli        \t| Director                                          \t|\n| 9  \t| Amina Benkhadra        \t| Director                                          \t|\n| 10 \t| Noufissa Kessar        \t| Director                                          \t|\n| 11 \t| Mohamed Amine Afsahi   \t| Executive Director-Marketing & Commercial         \t|\n| 12 \t| Laila Karam            \t| Investor Relations Contact                        \t|\n| 13 \t| Zakaria Rbii           \t| Executive Director-HR, Communication & Develop... \t|\n| 14 \t| FrÃ©dÃ©ric Bernard Tona  \t| Independent Director                              \t|\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n### Get company information\nGet information related to the company's location, adresse...\n\n**Args**:\n- **`company`** `str`: Ticker symbol(e.g. 'IAM', 'MNG')\n\n**Returns**:\n- **`pd.DataFrame`**: Dataframe of information related to the company (e.g. Name, Adresse, Phone...)\n\n**Example:**\n```python\nstm.get_company_info('MNG')\n```\n\n|   \t| Item        \t| Value                                             \t|\n|---\t|-------------\t|---------------------------------------------------\t|\n| 0 \t| Name        \t| Managem                                           \t|\n| 1 \t| Adresse     \t| Twin Center, Tower A Angle Boulevards Zerktoun... \t|\n| 2 \t| Phone       \t| +212 522 956-565                                  \t|\n| 3 \t| Industry    \t| General Mining                                    \t|\n| 4 \t| Sector      \t| Basic Materials/Resources                         \t|\n| 5 \t| Description \t| Managem SA engages in mining and hydrometallur... \t|\n\n\n<div align=\"right\"><a href=\"#usage\" style=\"float: right;font-size: 12px;font-weight: bold;\">Back to top</a></div>\n\n\n---\n\n## License\nThis project is licensed under the terms of the MIT license.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/s0v1x/StocksMA",
    "keywords": "pandas,stocks,finance,morocco,ma,yahoo finance,marketwatch,wsj,data,timeseries",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "StocksMA",
    "package_url": "https://pypi.org/project/StocksMA/",
    "platform": null,
    "project_url": "https://pypi.org/project/StocksMA/",
    "project_urls": {
      "Bug Tracker": "https://github.com/s0v1x/StocksMA/issues",
      "Homepage": "https://github.com/s0v1x/StocksMA"
    },
    "release_url": "https://pypi.org/project/StocksMA/0.1.0/",
    "requires_dist": [
      "numpy",
      "pandas",
      "requests",
      "beautifulsoup4",
      "lxml",
      "types-requests",
      "types-python-dateutil"
    ],
    "requires_python": ">=3.6",
    "summary": "Retrieve data related to Moroccan stocks from diffrent sources",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13255170,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01c224e940e9115263e8c5e1daeeac0bc916ea51b2b87949691eba913a72fcfe",
          "md5": "837b33f558a7c16600fa041025f170b9",
          "sha256": "2d708cc340dd6924fe6f606a23308032b117375700ea84c6fe3b161408eae657"
        },
        "downloads": -1,
        "filename": "StocksMA-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "837b33f558a7c16600fa041025f170b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24316,
        "upload_time": "2022-03-22T22:31:12",
        "upload_time_iso_8601": "2022-03-22T22:31:12.969930Z",
        "url": "https://files.pythonhosted.org/packages/01/c2/24e940e9115263e8c5e1daeeac0bc916ea51b2b87949691eba913a72fcfe/StocksMA-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8f87c78ab533ee4b3635b26be6a3777a7cd8afa68cfae7de8f3d9ffd548634b",
          "md5": "a922b04012469365d9f63bd89e0f67b6",
          "sha256": "0c03b127810918223fa86388bd8082919eebc33ba4029e5258d990aa5324fc67"
        },
        "downloads": -1,
        "filename": "StocksMA-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a922b04012469365d9f63bd89e0f67b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36585,
        "upload_time": "2022-03-22T22:31:14",
        "upload_time_iso_8601": "2022-03-22T22:31:14.734675Z",
        "url": "https://files.pythonhosted.org/packages/a8/f8/7c78ab533ee4b3635b26be6a3777a7cd8afa68cfae7de8f3d9ffd548634b/StocksMA-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "01c224e940e9115263e8c5e1daeeac0bc916ea51b2b87949691eba913a72fcfe",
        "md5": "837b33f558a7c16600fa041025f170b9",
        "sha256": "2d708cc340dd6924fe6f606a23308032b117375700ea84c6fe3b161408eae657"
      },
      "downloads": -1,
      "filename": "StocksMA-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "837b33f558a7c16600fa041025f170b9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 24316,
      "upload_time": "2022-03-22T22:31:12",
      "upload_time_iso_8601": "2022-03-22T22:31:12.969930Z",
      "url": "https://files.pythonhosted.org/packages/01/c2/24e940e9115263e8c5e1daeeac0bc916ea51b2b87949691eba913a72fcfe/StocksMA-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8f87c78ab533ee4b3635b26be6a3777a7cd8afa68cfae7de8f3d9ffd548634b",
        "md5": "a922b04012469365d9f63bd89e0f67b6",
        "sha256": "0c03b127810918223fa86388bd8082919eebc33ba4029e5258d990aa5324fc67"
      },
      "downloads": -1,
      "filename": "StocksMA-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a922b04012469365d9f63bd89e0f67b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 36585,
      "upload_time": "2022-03-22T22:31:14",
      "upload_time_iso_8601": "2022-03-22T22:31:14.734675Z",
      "url": "https://files.pythonhosted.org/packages/a8/f8/7c78ab533ee4b3635b26be6a3777a7cd8afa68cfae7de8f3d9ffd548634b/StocksMA-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}