{
  "info": {
    "author": "Cesar Merjan",
    "author_email": "cesarmerjan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development",
      "Topic :: Software Development :: Bug Tracking",
      "Topic :: Software Development :: Debuggers",
      "Topic :: Software Development :: Libraries",
      "Topic :: System :: Logging",
      "Topic :: System :: Software Distribution",
      "Topic :: Utilities"
    ],
    "description": "# Stack Frame Analyzer\nThis package was created to help improve the quality of application logs.\n\nIt's only uses building libraries, therefore, it has no external dependency.\nIt is also lightweight and thread-safe, which makes it ideal for use in services and micro-services.\n\nHowever, the module has some limitations.\nThe most important thing to note in this scenario is that it only works with the **CPython** implementation.\n\nThe returned context is formatted according to the following pattern:\n    *project_name:package_name:module_name:class_name:callable_name(callable_arguments)*\n\nAn example of the context returned could be:\n    *authentication_service:src.domain.user:model:UserModel:has_permission(self=..., permission=\"add_user\")*\n\n## Typical usage example:\n\n\n### With Caller's Stack Frame Depth 0\n```python\nstack_frame_analyzer = StackFrameAnalyzer(\"my_service_name\")\n\ndef foo(bar):\n    try:\n        ...\n    except Exception as error:\n        context = stack_frame_analyzer.get_caller_context()\n        logging.error(context)\n```\n\n### With Caller's Stack Frame Depth 1\n```python\nstack_frame_analyzer = StackFrameAnalyzer(\"my_service_name\")\n\nclass MyException(Exception):\n    def __init__(self):\n        self.context = stack_frame_analyzer.get_caller_context(depth_in_the_stack=1)\n        super().__init__()\n\n\ndef foo(bar):\n    try:\n        ...\n    except MyException as error:\n        logging.error(error.context)\n```\n\n### With Caller's Stack Frame Depth 2\n\n\n------------\n\n```python\nclass ExceptionWithContext(Exception):\n    \"\"\"\n    Base class to make exceptions capture the context of whoever raises them.\n    \"\"\"\n    def __init__(self, message: str):\n        self.message = message\n        self.context = stack_frame_analyzer.get_caller_context(depth_in_the_stack=2)\n        super().__init__(self.message)\n\n\nclass FooException(ExceptionWithContext):\n    def __init__(self, message: str = \"message\"):\n        self.message = message\n        super().__init__(self.message)\n\n\ndef foo(bar):\n    try:\n        raise FooException\n    except FooException as error:\n        logging.error(error.context)\n```\n\n## Test Coverage\n```\nName                                                      Stmts   Miss  Cover\n-----------------------------------------------------------------------------\nsrc/__init__.py                                               1      0   100%\nsrc/stack_frame_analyzer/__init__.py                          2      0   100%\nsrc/stack_frame_analyzer/exceptions.py                       36      0   100%\nsrc/stack_frame_analyzer/main.py                            100      0   100%\ntests/__init__.py                                             0      0   100%\ntests/stack_frame_analyzer/__init__.py                        0      0   100%\ntests/stack_frame_analyzer/test_exceptions.py                27      0   100%\ntests/stack_frame_analyzer/test_in_class.py                  17      0   100%\ntests/stack_frame_analyzer/test_main.py                     131      0   100%\ntests/stack_frame_analyzer/test_memory_leak.py               55      0   100%\ntests/stack_frame_analyzer/test_on_function.py               12      0   100%\ntests/stack_frame_analyzer/test_speed.py                      7      0   100%\ntests/stack_frame_analyzer/test_with_decorator.py             8      0   100%\ntests/stack_frame_analyzer/test_with_depth_two_frame.py      13      0   100%\ntests/stack_frame_analyzer/test_with_exception.py             8      0   100%\ntests/stack_frame_analyzer/test_with_threads.py              33      0   100%\ntests/stack_frame_analyzer/utils/__init__.py                  0      0   100%\ntests/stack_frame_analyzer/utils/bar.py                       4      0   100%\ntests/stack_frame_analyzer/utils/baz.py                      13      0   100%\ntests/stack_frame_analyzer/utils/child.py                     7      0   100%\ntests/stack_frame_analyzer/utils/foo.py                       4      0   100%\ntests/stack_frame_analyzer/utils/foo_with_decorator.py       11      0   100%\ntests/stack_frame_analyzer/utils/foo_with_exception.py        7      0   100%\ntests/stack_frame_analyzer/utils/main.py                      2      0   100%\ntests/stack_frame_analyzer/utils/memory_leak.py               6      0   100%\ntests/stack_frame_analyzer/utils/parent.py                    8      0   100%\ntests/stack_frame_analyzer/utils/solve_with_queue.py          7      0   100%\n-----------------------------------------------------------------------------\nTOTAL                                                       519      0   100%\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/cesarmerjan/stack_frame_analyzer/archive/refs/heads/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cesarmerjan/stack_frame_analyzer",
    "keywords": "logging,stack,frame",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Stack-Frame-Analyzer",
    "package_url": "https://pypi.org/project/Stack-Frame-Analyzer/",
    "platform": null,
    "project_url": "https://pypi.org/project/Stack-Frame-Analyzer/",
    "project_urls": {
      "Download": "https://github.com/cesarmerjan/stack_frame_analyzer/archive/refs/heads/master.zip",
      "Homepage": "https://github.com/cesarmerjan/stack_frame_analyzer"
    },
    "release_url": "https://pypi.org/project/Stack-Frame-Analyzer/0.2.1/",
    "requires_dist": null,
    "requires_python": ">3.6",
    "summary": "It helps to get the context of a frame from the caller's stack. Can be used to improve service and microservice logs.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13449025,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df932275e57544f2bee89ddc3c29411e4f24fd3d25e535bc286500a625a7f34a",
          "md5": "73eef8f7d7f34ba1e4837172fac724be",
          "sha256": "b05b40059f7bba3afa9ec436f192ebef88a3ee1818bf287d63be9b19eef99899"
        },
        "downloads": -1,
        "filename": "Stack_Frame_Analyzer-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73eef8f7d7f34ba1e4837172fac724be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 6365,
        "upload_time": "2022-03-31T15:56:42",
        "upload_time_iso_8601": "2022-03-31T15:56:42.078552Z",
        "url": "https://files.pythonhosted.org/packages/df/93/2275e57544f2bee89ddc3c29411e4f24fd3d25e535bc286500a625a7f34a/Stack_Frame_Analyzer-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c8a5acf12e252e8862a61e4a64cfd55fbfd57a21b1a36486423ffbb02d25e5b",
          "md5": "46bd60ba39dfb959e760cad5915952a6",
          "sha256": "67f38771d52a7368b7aaf6e3bdee49ebb09a0d1fda6884fa30b6d721e4d75451"
        },
        "downloads": -1,
        "filename": "Stack Frame Analyzer-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "46bd60ba39dfb959e760cad5915952a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 5407,
        "upload_time": "2022-03-31T15:56:44",
        "upload_time_iso_8601": "2022-03-31T15:56:44.110954Z",
        "url": "https://files.pythonhosted.org/packages/8c/8a/5acf12e252e8862a61e4a64cfd55fbfd57a21b1a36486423ffbb02d25e5b/Stack%20Frame%20Analyzer-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be3c33fc85a4975aaff9d1920d05b773ab31e43da6ce2dab82ffa3f76510431a",
          "md5": "a6700588818d0d00204e1090667c6cb5",
          "sha256": "d8f36abf2285c38c45820227c7ff505b275ec19b2b48ab0ea97fafbc3a28eb2e"
        },
        "downloads": -1,
        "filename": "Stack_Frame_Analyzer-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6700588818d0d00204e1090667c6cb5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 7298,
        "upload_time": "2022-04-08T01:20:22",
        "upload_time_iso_8601": "2022-04-08T01:20:22.326892Z",
        "url": "https://files.pythonhosted.org/packages/be/3c/33fc85a4975aaff9d1920d05b773ab31e43da6ce2dab82ffa3f76510431a/Stack_Frame_Analyzer-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6dfdcc9366451a5f1587ac7860b8fbf40975c8535004beadba96768f1f13c66",
          "md5": "358d69f2b2e9b7575400a3448528e895",
          "sha256": "b1dafb839751c9df1725c692303100323a74ba95844bb3164644fbee2643fe7c"
        },
        "downloads": -1,
        "filename": "Stack Frame Analyzer-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "358d69f2b2e9b7575400a3448528e895",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 6296,
        "upload_time": "2022-04-08T01:20:24",
        "upload_time_iso_8601": "2022-04-08T01:20:24.831639Z",
        "url": "https://files.pythonhosted.org/packages/f6/df/dcc9366451a5f1587ac7860b8fbf40975c8535004beadba96768f1f13c66/Stack%20Frame%20Analyzer-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be3c33fc85a4975aaff9d1920d05b773ab31e43da6ce2dab82ffa3f76510431a",
        "md5": "a6700588818d0d00204e1090667c6cb5",
        "sha256": "d8f36abf2285c38c45820227c7ff505b275ec19b2b48ab0ea97fafbc3a28eb2e"
      },
      "downloads": -1,
      "filename": "Stack_Frame_Analyzer-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6700588818d0d00204e1090667c6cb5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.6",
      "size": 7298,
      "upload_time": "2022-04-08T01:20:22",
      "upload_time_iso_8601": "2022-04-08T01:20:22.326892Z",
      "url": "https://files.pythonhosted.org/packages/be/3c/33fc85a4975aaff9d1920d05b773ab31e43da6ce2dab82ffa3f76510431a/Stack_Frame_Analyzer-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6dfdcc9366451a5f1587ac7860b8fbf40975c8535004beadba96768f1f13c66",
        "md5": "358d69f2b2e9b7575400a3448528e895",
        "sha256": "b1dafb839751c9df1725c692303100323a74ba95844bb3164644fbee2643fe7c"
      },
      "downloads": -1,
      "filename": "Stack Frame Analyzer-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "358d69f2b2e9b7575400a3448528e895",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.6",
      "size": 6296,
      "upload_time": "2022-04-08T01:20:24",
      "upload_time_iso_8601": "2022-04-08T01:20:24.831639Z",
      "url": "https://files.pythonhosted.org/packages/f6/df/dcc9366451a5f1587ac7860b8fbf40975c8535004beadba96768f1f13c66/Stack%20Frame%20Analyzer-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}