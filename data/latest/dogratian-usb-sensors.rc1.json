{
  "info": {
    "author": "NetInvent - Orsiris de Jong",
    "author_email": "contact@netinvent.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: Microsoft",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: BSD :: FreeBSD",
      "Operating System :: POSIX :: BSD :: NetBSD",
      "Operating System :: POSIX :: BSD :: OpenBSD",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development",
      "Topic :: System",
      "Topic :: System :: Operating System",
      "Topic :: System :: Shells"
    ],
    "description": "# DogRatIan USB-TnH, USB-PA and USB-VOC python lib\n\nThis library makes usage of https://www.dogratian.com sensors easy\n\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/netinvent/dogratian_usb_sensors.svg)](http://isitmaintained.com/project/netinvent/dogratian_usb_sensors \"Percentage of issues still open\")\n[![linux-tests](https://github.com/netinvent/dogratian_usb_sensors/actions/workflows/linux.yaml/badge.svg)](https://github.com/netinvent/dogratian_usb_sensors/actions/workflows/linux.yaml)\n[![windows-tests](https://github.com/netinvent/dogratian_usb_sensors/actions/workflows/windows.yaml/badge.svg)](https://github.com/netinvent/dogratian_usb_sensors/actions/workflows/windows.yaml)\n[![GitHub Release](https://img.shields.io/github/release/netinvent/dogratian_usb_sensors.svg?label=Latest)](https://github.com/netinvent/dogratian_usb_sensors/releases/latest)\n\nSetup:\n`pip install dogratian_usb_sensors`\n\nQuick Usage:\n```python\nfrom dogratian_usb_sensors import USBSensor\n\n# Returns serial port names for every connected DogRatIan device\nsensor_ports = USBSensor.find_sensors()\n\n# Read data for every sensor on system\nfor sensor_port in sensor_ports:\n    sensor = USBSensor(sensor_port)\n    print(sensor.model)\n    print(sensor.version)\n    print(sensor.temperature)       # Only on USB-PA and USB-TnH sensors\n    print(sensor.humidity)          # Only on USB-PA and USB-TnH sensors\n    print(sensor.name)\n    print(sensor.pressure)          # Only on USB-PA sensor\n    print(sensor.voc)               # Only on USB-VOC sensor\n    print(sensor.co2eq)             # Only on USB-VOC sensor\n    print(sensor.identification)\n```\n\nReading all possible measurement values from a sensor\n```python\nfor sensor_port in USBSensor.find_sensors():\n    sensor = USBSensor(sensor_port)\n    print(sensor.all)\n```\n\n# Sensor differences\n\nDogRatIan uses USB-TnH (temperature and humidity), USB-PA (temperature, humidity and atmospheric pressure) as well as USB-VOC (volatile organic compounds) sensors.\nAll three sensors are returned by `USBSensor.find_sensors()`.\n\nDepending on the sensor you have, not all commands will run.\nYou can identify a sensor by using `sensor.model` property.\n\n# Basic usage\n\n```python\nfrom time import sleep\nfrom dogratian_usb_sensors import USBSensor\n\nsensor_ports = USBSensor.find_sensors()\n\nfor sensor_port in sensor_ports:\n    print(\"Found sensor at port {}\".format(sensor_port))\n    sensor = USBSensor(sensor_port, state_led=True)\n    print(\"Sensor model is {}\".format(sensor.model))\n\n    count = 0\n    while count < 10:\n        print(\"Current temperature: {}\".format(sensor.temperature))\n        print(\"Current humidity: {}\".format(sensor.humidity))\n        sleep(.1)\n        count += 1\n\n```\n# Writing data to the sensor\n\nAs DogRatIan suggests, you can set Name sensor to a max 8 char string, and turn on/off led.\nThe light will always flash when data is read on the sensor, regarless if it has been turned off.\nUSBSensor class has write methods implemented as setter properties, eg:\n\n```python\nfrom dogratian_usb_sensors import USBSensor\n\nsensor = USBSensor('/dev/ttyUSB2')\nsensor.name = 'MYSENSOR'\nsensor.led = True\n# Some code\nsensor.led = False\n```\n\n# State led\nBy default, DogRatIan sensors will turn on their standby light when plugged in.\nUSBSensor will disable the standby light by default, unless initialized with \nOptionally, we can automatically enable the led indicator while reading with `state_led=True`.\n\n```python\nfrom dogratian_usb_sensors import USBSensor\n\nsensor = USBSensor('COM4', state_led=True)\nprint(sensor.name)  # Light flashes while reading value\n```\n\n# Error handling\n\nUSBSensor class will raise two types of exceptions:\n- ValueError when invalid opcode is given to sensor\n- OSError when serial communication fails (most time you need to be root/administrator to have permissions over serial ports, and ports must not already been open by another application)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/netinvent/dogratian_usb_sensors",
    "keywords": "sensor,temperature,humidity,pressure,usb",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dogratian-usb-sensors",
    "package_url": "https://pypi.org/project/dogratian-usb-sensors/",
    "platform": null,
    "project_url": "https://pypi.org/project/dogratian-usb-sensors/",
    "project_urls": {
      "Homepage": "https://github.com/netinvent/dogratian_usb_sensors"
    },
    "release_url": "https://pypi.org/project/dogratian-usb-sensors/1.1/",
    "requires_dist": [
      "pyserial"
    ],
    "requires_python": "",
    "summary": "Pythonic library for Dogratian USB sensors",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15232638,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "517cfae1e1c1fa7cb9337c1458dbb5c53024881b46330e2fb50da9060b10934e",
          "md5": "c6901757dc903167143cd59fa8240ab5",
          "sha256": "a7bb0aee34ce13689c43bad43d5ea501925fac69fccdfc46910c04e5e014901b"
        },
        "downloads": -1,
        "filename": "dogratian_usb_sensors-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6901757dc903167143cd59fa8240ab5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6142,
        "upload_time": "2022-09-27T19:31:58",
        "upload_time_iso_8601": "2022-09-27T19:31:58.942737Z",
        "url": "https://files.pythonhosted.org/packages/51/7c/fae1e1c1fa7cb9337c1458dbb5c53024881b46330e2fb50da9060b10934e/dogratian_usb_sensors-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a04c6f5d79d81c405d01ea94bcf4c879eb517e86171fd09874c3f6794b36c78",
          "md5": "be3a298861e396cd6f91bd38faed2302",
          "sha256": "61526e9dc79b6d1d28d72e1ade9af965e311c5a33587c7bc73182bbdc3e2a82c"
        },
        "downloads": -1,
        "filename": "dogratian_usb_sensors-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "be3a298861e396cd6f91bd38faed2302",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6595,
        "upload_time": "2022-09-27T19:32:00",
        "upload_time_iso_8601": "2022-09-27T19:32:00.372313Z",
        "url": "https://files.pythonhosted.org/packages/7a/04/c6f5d79d81c405d01ea94bcf4c879eb517e86171fd09874c3f6794b36c78/dogratian_usb_sensors-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "517cfae1e1c1fa7cb9337c1458dbb5c53024881b46330e2fb50da9060b10934e",
        "md5": "c6901757dc903167143cd59fa8240ab5",
        "sha256": "a7bb0aee34ce13689c43bad43d5ea501925fac69fccdfc46910c04e5e014901b"
      },
      "downloads": -1,
      "filename": "dogratian_usb_sensors-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c6901757dc903167143cd59fa8240ab5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6142,
      "upload_time": "2022-09-27T19:31:58",
      "upload_time_iso_8601": "2022-09-27T19:31:58.942737Z",
      "url": "https://files.pythonhosted.org/packages/51/7c/fae1e1c1fa7cb9337c1458dbb5c53024881b46330e2fb50da9060b10934e/dogratian_usb_sensors-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a04c6f5d79d81c405d01ea94bcf4c879eb517e86171fd09874c3f6794b36c78",
        "md5": "be3a298861e396cd6f91bd38faed2302",
        "sha256": "61526e9dc79b6d1d28d72e1ade9af965e311c5a33587c7bc73182bbdc3e2a82c"
      },
      "downloads": -1,
      "filename": "dogratian_usb_sensors-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "be3a298861e396cd6f91bd38faed2302",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6595,
      "upload_time": "2022-09-27T19:32:00",
      "upload_time_iso_8601": "2022-09-27T19:32:00.372313Z",
      "url": "https://files.pythonhosted.org/packages/7a/04/c6f5d79d81c405d01ea94bcf4c879eb517e86171fd09874c3f6794b36c78/dogratian_usb_sensors-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}