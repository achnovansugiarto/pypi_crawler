{
  "info": {
    "author": "wqshen",
    "author_email": "wqshen91@163.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# python reader for satellite product format data (.AWX)\n\nThis package provide a user-friendly interface to AWX data, it can read 3 type AWX, that is\n\n- Product Type 1, geostationary satellite image product\n- Product Type 2, polar orbiting satellite image product\n- Product Type 3, Grid product\n\n# README\n\n- en [English](README.md)\n- zh_CN [简体中文](README.zh-CN.md)\n\n## Install\n\ninstall from pypi\n\n```shell\npip install awx\n```\n\n## Quick Start\n\n### Basic usage for library\n\n**1 Read data, access data values, slicing longitude and latitude and save to netCDF**\n\n```python\n\nimport os\nfrom awx import Awx\n\npathfile = r'../data/ANI_VIS_R02_20230217_1000_FY2G.AWX'\nds = Awx(pathfile)\n\n# print file head information\nprint(ds)\n\n# get satellite observation data in xarray.DataArray format\nprint(ds.values)\n\n# clip data to given longitude and latitude extent\nprint(ds.sel(lat=slice(20, 40), lon=slice(100, 130)))\n\n# save data to netcdf4\nds.values.to_netcdf('ANI_VIS_R02_20230217_1000_FY2G.nc')\n```\n\n**2 Basic draw data without projection**\n\n```python\n# draw data use matplotlib\n\nimport matplotlib.pyplot as plt\nfrom awx import Awx\n\nfpath = r'./data/ANI_VIS_R02_20230217_1000_FY2G.AWX'\nds = Awx(pathfile=fpath)\nprint(ds)\ndar = ds.values.squeeze()\nplt.pcolormesh(dar.lon, dar.lat, dar, cmap='Greys_r')\nplt.savefig('ANI_VIS_R02_20230217_1000_FY2G_NoProj.png', dpi=300)\nplt.show()\n```\n\n![ANI_VIS_R02_20230217_1000_FY2G_NoProj.png](https://raw.githubusercontent.com/wqshen/awxreader/master/doc/ANI_VIS_R02_20230217_1000_FY2G_NoProj.png)\n\n**3 Draw data in native projection**\n\n```python\n# draw data in projection coordination\nimport os\nimport cartopy.crs as ccrs\nimport matplotlib.pyplot as plt\nfrom awx import Awx\n\n# fpath = r'./data/ANI_VIS_R02_20230217_1000_FY2G.AWX'  # Mercator\nfpath = r'./data/ANI_IR2_R01_20230217_0800_FY2G.AWX'  # lambert\nds = Awx(pathfile=fpath)\nprint(ds)\ndar = ds.values.squeeze()\n\nplt.figure(figsize=(8, 8))\n\nif dar.projection == 1:\n    proj = ccrs.LambertConformal(central_longitude=dar.clon / 100,\n                                 central_latitude=dar.clat / 100,\n                                 standard_parallels=(dar.std_lat1_or_lon / 100.,\n                                                     dar.std_lat2 / 100.))\n    extent = [dar.x.min(), dar.x.max(), dar.y.min(), dar.y.max()]\nelif dar.projection == 2:\n    proj = ccrs.Mercator(central_longitude=dar.clon / 100,\n                         latitude_true_scale=dar.std_lat1_or_lon / 100.)\n    extent = [dar.x.min(), dar.x.max(), dar.y.min(), dar.y.max()]\nelif dar.projection == 4:\n    proj = ccrs.PlateCarree(central_longitude=dar.clon / 100.)\n    extent = [dar.lon.min(), dar.lon.max(), dar.lat.min(), dar.lat.max()]\nelse:\n    raise NotImplementedError()\nax = plt.axes(projection=proj)\nax.set_extent(extent, crs=proj)\nax.coastlines(resolution='110m')\nax.gridlines(draw_labels=True)\nax.pcolormesh(dar.x, dar.y, dar, cmap='Greys_r')\nplt.savefig(os.path.splitext(os.path.basename(fpath))[0] + '.png', dpi=300, bbox_inches='tight')\nplt.show()\n\n```\n\n![ANI_VIS_R02_20230217_1000_FY2G.png](https://raw.githubusercontent.com/wqshen/awxreader/master/doc/ANI_VIS_R02_20230217_1000_FY2G.png)\n\n![ANI_IR2_R01_20230217_0800_FY2G.png](https://raw.githubusercontent.com/wqshen/awxreader/master/doc/ANI_IR2_R01_20230217_0800_FY2G.png)\n\n### Command line procedure\n\n#### awx_info\n\nPrint AWX file head information\n\nUsage:\n    \n    awx_info AWX_File_Name\n\nExample:\n\n    awx_info FY2G_TBB_IR1_OTG_20150729_0000.AWX\n\n#### awx_to_nc\n\nConvert AWX file to netCDF4 file\n\nUsage:\n\n    awx_to_nc AWX_File_Name NetCDF_File_Name\n\nExample:\n\n    awx_to_nc FY2G_TBB_IR1_OTG_20150729_0000.AWX FY2G_TBB_IR1_OTG_20150729_0000.nc\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wqshen/AwxReader",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "awx",
    "package_url": "https://pypi.org/project/awx/",
    "platform": null,
    "project_url": "https://pypi.org/project/awx/",
    "project_urls": {
      "Homepage": "https://github.com/wqshen/AwxReader"
    },
    "release_url": "https://pypi.org/project/awx/0.1.1/",
    "requires_dist": [
      "numpy",
      "xarray",
      "pyproj"
    ],
    "requires_python": ">=3.7",
    "summary": "AWX Satellite Data Reader",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17120687,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55457dc7b7bcf526d69bbb18b83e4af65d3acc6df6eef9968a369552901b1ef9",
          "md5": "deea826ab872e3d51228146c4614776d",
          "sha256": "5047b71c8e84ee47cf58a01201568f7d6f1ff2dad909d2a8c5103ef041eaabb8"
        },
        "downloads": -1,
        "filename": "awx-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "deea826ab872e3d51228146c4614776d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4517032,
        "upload_time": "2023-02-19T01:49:03",
        "upload_time_iso_8601": "2023-02-19T01:49:03.286784Z",
        "url": "https://files.pythonhosted.org/packages/55/45/7dc7b7bcf526d69bbb18b83e4af65d3acc6df6eef9968a369552901b1ef9/awx-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a36be09bb2506b012f6b04f7c3ca82c72f66e5af929ba3a9390e79d62d588baa",
          "md5": "d7d1b0b6884124e273ab52af3c4d2e9e",
          "sha256": "ab1e3cabcc96b605cd529d729f7c7d849b9fb92d7a6bf7106783fd27b0746b23"
        },
        "downloads": -1,
        "filename": "awx-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d7d1b0b6884124e273ab52af3c4d2e9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3022174,
        "upload_time": "2023-02-19T01:49:06",
        "upload_time_iso_8601": "2023-02-19T01:49:06.851282Z",
        "url": "https://files.pythonhosted.org/packages/a3/6b/e09bb2506b012f6b04f7c3ca82c72f66e5af929ba3a9390e79d62d588baa/awx-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2e823b328efcdc6c63f92afe071eca6b286aa59cd59d154937e0eed697d586a",
          "md5": "b76325529f96f0640792c2511ae8c3e8",
          "sha256": "22b6767df58172a077abc16b2ac5d92a8a1d735cfddb71a728a01f6acc402810"
        },
        "downloads": -1,
        "filename": "awx-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b76325529f96f0640792c2511ae8c3e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4518385,
        "upload_time": "2023-03-02T01:35:06",
        "upload_time_iso_8601": "2023-03-02T01:35:06.226164Z",
        "url": "https://files.pythonhosted.org/packages/a2/e8/23b328efcdc6c63f92afe071eca6b286aa59cd59d154937e0eed697d586a/awx-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bf4596042ccc8067d383daff419405daaf3e94331462f5b9e5d94cf0bc043f5",
          "md5": "948da6171d5ce49f329fb054bb14e0ac",
          "sha256": "fdc9c83c6c4ab6ff834f37fe25d9d73552e0ef3fd7b8e19e944d83828b39ba03"
        },
        "downloads": -1,
        "filename": "awx-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "948da6171d5ce49f329fb054bb14e0ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3023584,
        "upload_time": "2023-03-02T01:35:18",
        "upload_time_iso_8601": "2023-03-02T01:35:18.703784Z",
        "url": "https://files.pythonhosted.org/packages/8b/f4/596042ccc8067d383daff419405daaf3e94331462f5b9e5d94cf0bc043f5/awx-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2e823b328efcdc6c63f92afe071eca6b286aa59cd59d154937e0eed697d586a",
        "md5": "b76325529f96f0640792c2511ae8c3e8",
        "sha256": "22b6767df58172a077abc16b2ac5d92a8a1d735cfddb71a728a01f6acc402810"
      },
      "downloads": -1,
      "filename": "awx-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b76325529f96f0640792c2511ae8c3e8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4518385,
      "upload_time": "2023-03-02T01:35:06",
      "upload_time_iso_8601": "2023-03-02T01:35:06.226164Z",
      "url": "https://files.pythonhosted.org/packages/a2/e8/23b328efcdc6c63f92afe071eca6b286aa59cd59d154937e0eed697d586a/awx-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8bf4596042ccc8067d383daff419405daaf3e94331462f5b9e5d94cf0bc043f5",
        "md5": "948da6171d5ce49f329fb054bb14e0ac",
        "sha256": "fdc9c83c6c4ab6ff834f37fe25d9d73552e0ef3fd7b8e19e944d83828b39ba03"
      },
      "downloads": -1,
      "filename": "awx-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "948da6171d5ce49f329fb054bb14e0ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 3023584,
      "upload_time": "2023-03-02T01:35:18",
      "upload_time_iso_8601": "2023-03-02T01:35:18.703784Z",
      "url": "https://files.pythonhosted.org/packages/8b/f4/596042ccc8067d383daff419405daaf3e94331462f5b9e5d94cf0bc043f5/awx-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}