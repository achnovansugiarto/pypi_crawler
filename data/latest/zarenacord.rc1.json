{
  "info": {
    "author": "Bravestone",
    "author_email": "admin@zarena.ga",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "zarenacord\n===========\n\nA modern, easy to use, feature-rich, and async ready API wrapper for Discord written in Python.\n\n|\n\n.. image:: https://discord.com/api/guilds/456574328990072838/embed.png\n   :target: `Support Server`_\n   :alt: Discord server invite\n.. image:: https://img.shields.io/pypi/v/zarenacord.svg\n   :target: https://pypi.python.org/pypi/zarenacord\n   :alt: PyPI version info\n.. image:: https://img.shields.io/pypi/pyversions/zarenacord.svg\n   :target: https://pypi.python.org/pypi/zarenacord\n   :alt: PyPI supported Python versions\n.. image:: https://readthedocs.org/projects/zarenacord/badge/?version=latest\n   :target: http://zarenacord.readthedocs.io/?badge=latest\n   :alt: Documentation Status\n\n|\n\n**PLEASE NOTE: This is a fork of OG** |discord.py|_ **by** |Rapptz!|_ **Since Danny no longer maintains dpy so I created this lib in order to add any upcoming feature from Discord**\n**and I'm using** |Maya|_ **slash command wrapper for application commands.**\n\nKey Features\n-------------\n\n- Modern Pythonic API using ``async`` and ``await``.\n- Proper rate limit handling.\n- Command extension to aid with bot creation\n- Easy to use with an object oriented design\n- 100% coverage of the supported Discord API.\n- Optimised in both speed and memory.\n\nInstalling\n----------\n\n**Python 3.8 or higher is required**\n\nTo install the library without full voice support, you can just run the following command:\n\n.. code:: sh\n\n    # Linux/macOS\n    python3 -m pip install -U zarenacord\n\n    # Windows\n    py -3 -m pip install -U zarenacord\n\nOtherwise to get voice support you should run the following command:\n\n.. code:: sh\n\n    # Linux/macOS\n    python3 -m pip install -U \"zarenacord[voice]\"\n\n    # Windows\n    py -3 -m pip install -U zarenacord[voice]\n\n\nTo install the development version, do the following:\n\n.. code:: sh\n\n    $ git clone https://github.com/Zarenalabs/zarenacord.git\n    $ cd zarenacord\n    $ python3 -m pip install -U .[voice]\n\n\nOptional Packages\n~~~~~~~~~~~~~~~~~~\n\n* `PyNaCl <https://pypi.org/project/PyNaCl/>`__ (for voice support)\n\nPlease note that on Linux installing voice you must install the following packages via your favourite package manager (e.g. ``apt``, ``dnf``, etc) before running the above commands:\n\n* libffi-dev (or ``libffi-devel`` on some systems)\n* python-dev (e.g. ``python3.6-dev`` for Python 3.6)\n\nQuick Example\n--------------\n\n.. code:: py\n\n    import discord\n\n    class MyClient(discord.Client):\n        async def on_ready(self):\n            print('Logged in as', self.user)\n\n        async def on_message(self, message):\n            # don't respond to ourselves\n            if message.author == self.user:\n                return\n\n            if message.content == 'ping':\n                await message.channel.send('pong')\n\n    client = MyClient()\n    client.run('token')\n\nBot Example\n~~~~~~~~~~~~~\n\n.. code:: py\n\n    import discord\n    from discord.ext import commands\n\n    bot = commands.Bot(command_prefix='!')\n\n    @bot.command()\n    async def ping(ctx):\n        await ctx.send('pong')\n\n    bot.run('token')\n\nApplication Commands Example\n-----------------------------\n``zarena`` defines a bot subclass to automatically handle posting updated commands to discords api. This isn't required but highly recommended to use.\n\n.. code:: py\n\n    class MyBot(zarena.Bot):\n        def __init__(self):\n            super().__init__(command_prefix=\"!\")  # command prefix only applies to message based commands\n\n            self.load_extension(\"cogs.my_cog\")  # important!\n            \n    if __name__ == '__main__':\n        MyBot().run(\"token\")\n\n**Sample cog:**\n\n.. code:: py\n\n    class MyCog(zarena.ApplicationCog):\n\n        # slash command\n        @zarena.slash_command()  \n        async def slash(self, ctx: zarena.Context, number: int):\n            await ctx.send(f\"You selected #{number}!\", ephemeral=True)\n        \n        #  message context menus\n        @zarena.message_command(name=\"Quote\")\n        async def quote(self, ctx: zarena.Context, message: discord.Message):\n            await ctx.send(f'> {message.clean_content}\\n- {message.author}')\n        \n        # user context menus\n        @zarena.user_command(name='Cookie')\n        async def cookie(self, ctx: zarena.Context, user: discord.Member):\n            await ctx.send(f'{ctx.author} gave cookie to {user} üç™')\n\nLinks\n------\n\nDocumentation_ | `Support Server`_ | `Discord API`_\n\n.. _Documentation: https://zarenacord.readthedocs.io/en/latest/index.html\n.. _`Support Server`: https://discord.gg/SwfNRrmr3p\n.. _`Discord API`: https://discord.gg/discord-api\n\n.. _discord.py: https://github.com/Rapptz/discord.py\n.. |discord.py| replace:: **discord.py** \n.. _Rapptz!: https://github.com/Rapptz\n.. |Rapptz!| replace:: **Rapptz!**\n.. _Maya: https://github.com/XuaTheGrate\n.. |Maya| replace:: **Maya's**\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Zarenalabs/zarenacord.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zarenacord",
    "package_url": "https://pypi.org/project/zarenacord/",
    "platform": "",
    "project_url": "https://pypi.org/project/zarenacord/",
    "project_urls": {
      "Documentation": "https://zarenacord.readthedocs.io/en/latest/",
      "Homepage": "https://github.com/Zarenalabs/zarenacord.git",
      "Issue tracker": "https://github.com/Zarenalabs/zarenacord/issues"
    },
    "release_url": "https://pypi.org/project/zarenacord/2.0.0/",
    "requires_dist": [
      "aiohttp (<3.8.0,>=3.6.0)",
      "sphinx (==4.0.2) ; extra == 'docs'",
      "sphinxcontrib-trio (==1.1.2) ; extra == 'docs'",
      "sphinxcontrib-websupport ; extra == 'docs'",
      "orjson (>=3.5.4) ; extra == 'speed'",
      "PyNaCl (<1.5,>=1.3.0) ; extra == 'voice'"
    ],
    "requires_python": ">=3.8.0",
    "summary": "A Python wrapper for the Discord API",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12288728,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d8fb7097b44a1f3cb1f415807ade82c868de68ac0397e00f9323bd231ac8478",
          "md5": "a8f6208686dfa1063e35efae7f82219e",
          "sha256": "70ee3b7a0514027f5e0b7e52b8bacf86084d998c04ee65488de007504c54f3c5"
        },
        "downloads": -1,
        "filename": "zarenacord-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8f6208686dfa1063e35efae7f82219e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.0",
        "size": 913436,
        "upload_time": "2021-12-13T12:12:23",
        "upload_time_iso_8601": "2021-12-13T12:12:23.554122Z",
        "url": "https://files.pythonhosted.org/packages/3d/8f/b7097b44a1f3cb1f415807ade82c868de68ac0397e00f9323bd231ac8478/zarenacord-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99fd851fdde76395f5fc5d1b82ffc173fcad9e6ff6e3065f085bfd9664b0bb81",
          "md5": "935fa967e8fb5bfbb165609694afce68",
          "sha256": "dce2f2ea14507705abf17408ba123b95a897088285b31b80600b42c4ca3d80f8"
        },
        "downloads": -1,
        "filename": "zarenacord-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "935fa967e8fb5bfbb165609694afce68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0",
        "size": 824521,
        "upload_time": "2021-12-13T12:12:32",
        "upload_time_iso_8601": "2021-12-13T12:12:32.015278Z",
        "url": "https://files.pythonhosted.org/packages/99/fd/851fdde76395f5fc5d1b82ffc173fcad9e6ff6e3065f085bfd9664b0bb81/zarenacord-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d8fb7097b44a1f3cb1f415807ade82c868de68ac0397e00f9323bd231ac8478",
        "md5": "a8f6208686dfa1063e35efae7f82219e",
        "sha256": "70ee3b7a0514027f5e0b7e52b8bacf86084d998c04ee65488de007504c54f3c5"
      },
      "downloads": -1,
      "filename": "zarenacord-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a8f6208686dfa1063e35efae7f82219e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.0",
      "size": 913436,
      "upload_time": "2021-12-13T12:12:23",
      "upload_time_iso_8601": "2021-12-13T12:12:23.554122Z",
      "url": "https://files.pythonhosted.org/packages/3d/8f/b7097b44a1f3cb1f415807ade82c868de68ac0397e00f9323bd231ac8478/zarenacord-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99fd851fdde76395f5fc5d1b82ffc173fcad9e6ff6e3065f085bfd9664b0bb81",
        "md5": "935fa967e8fb5bfbb165609694afce68",
        "sha256": "dce2f2ea14507705abf17408ba123b95a897088285b31b80600b42c4ca3d80f8"
      },
      "downloads": -1,
      "filename": "zarenacord-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "935fa967e8fb5bfbb165609694afce68",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.0",
      "size": 824521,
      "upload_time": "2021-12-13T12:12:32",
      "upload_time_iso_8601": "2021-12-13T12:12:32.015278Z",
      "url": "https://files.pythonhosted.org/packages/99/fd/851fdde76395f5fc5d1b82ffc173fcad9e6ff6e3065f085bfd9664b0bb81/zarenacord-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}