{
  "info": {
    "author": "Luis Tavares",
    "author_email": "luistavares10@outlook.pt",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# areas<!-- omit in toc -->\n\n![GitHub Workflow Status](https://img.shields.io/github/workflow/status/luist18/areas/Deploy%20Docker%20image?logo=github)\n![Docker Image Size (latest by date)](https://img.shields.io/docker/image-size/luist188/areas?logo=docker)\n[![GitHub license](https://img.shields.io/github/license/luist18/areas?color=blue)](https://github.com/luist18/areas/blob/main/LICENSE)\n\n**A**RM64 and **R**ISC-V (**e**xtensible) **A**ssessment **S**ystem.\n\n*areas* is originally a fork from [João Damas'](https://github.com/cyrilico) [Automatic Observation and (grade) Calculation for (subroutine) Operations tool](https://github.com/cyrilico/aoco-code-correction). It is a tool to automate student's grading in the assignments done during the Microprocessor and Personal Computers course unit.\n\n## Differences with the original tool<!-- omit in toc -->\n\nTo ease the communication between the backend server and the tool the output demanded changes. Output `.txt` and `.csv` files are now combined in a more complete `.json` file. Structure of the `.zip` input file is simplified. Unsupported data types such as long and double are now supported. A new input parameter - weight - is introduced.\n\n---\n\n## Table of contents<!-- omit in toc -->\n\n- [1. Installation](#1-installation)\n- [2. Developing](#2-developing)\n- [3. Running](#3-running)\n- [4. Usage](#4-usage)\n- [5. File syntax and structure](#5-file-syntax-and-structure)\n  - [5.1. Available data types](#51-available-data-types)\n    - [5.1.1. Primitive data types](#511-primitive-data-types)\n    - [5.1.2. Array data types](#512-array-data-types)\n  - [5.2. subroutines.yaml](#52-subroutinesyaml)\n  - [5.3. tests.yaml](#53-testsyaml)\n  - [5.4. submission.zip](#54-submissionzip)\n- [6. Results](#6-results)\n\n## 1. Installation\n\nUsing Docker:\n\n```bash\ndocker pull luist188/areas\n```\n\n## 2. Developing\n\nTo develop the tool you must setup a Docker development environment to ease the dependencies installation and setup an isolated environment.\n\n1. Build the Docker development image:\n\n   ```bash\n   docker build -f Dockerfile.dev -t areas .\n   ```\n\n2. Run the image with the shared folder:\n\n   ```bash\n   docker run -it -v $(pwd):/usr/app areas\n   ```\n\n## 3. Running\n\n1. Place the input files inside any directory.\n2. Run the image with a shared volume pointing to the input directory: `docker run -v input:destination -it luist188/areas` (you can learn more about `docker run` usage [here](https://docs.docker.com/engine/reference/run/))\n3. Run the alias command (assure you are using `/bin/bash`) `areas` or run `python main.py` in the tool's source.\n\n## 4. Usage\n\n```console\n$ areas [-h] -sr SR -t T -sm SM [SM ...] [-gfd GFD] [-ffd FFD] [-grf GRF] [-tout TOUT] [-fpre FPRE]\n\n$ areas [args]\n\nOptions:\n  --help, -h                Show help                                         [boolean]\n  -sr <subroutines.yaml>    .yaml file containing subroutine declaration      [required] [string]\n  -t <tests.yaml>           .yaml file containing the test cases              [required] [string]\n  -sm <submission.zip...>   .zip files containing user submission             [required] [string array]\n  -gfd <directory>          path to the directory to store temporary files\n    (e.g., compiled binaries)                                                 [default:grading] [string]\n  -ffd <directory>          path to the directory to store the grading for\n    each submission                                                           [default:feedback] [string]\n  -tout <timeout>           float timeout value                               [default:2.0] [float]\n  -fpre <precision>         floating point threshold for comparing floating\n    points in test cases                                                      [default:1e-6] [float]\n```\n\n## 5. File syntax and structure\n\n### 5.1. Available data types\n\n#### 5.1.1. Primitive data types\n\n- `int`\n- `long`\n- `float`\n- `double`\n- `char`\n- `chari` (char represented as an unsgined intenger - similar to char but has to be used when printed characters are not ASCII characters)\n\n#### 5.1.2. Array data types\n\n- `char*/string`\n- `array int`\n- `array long`\n- `array float`\n- `array double`\n- `array char`\n- `array chari`\n\n### 5.2. subroutines.yaml\n\nThe input file for the subroutine declaration has to follow a specific structure and syntax described as follows:\n\n```yaml\nfoo: \n  params: \n    - int\n    - array char\n    - array int\n    - array int\n  return: \n    - int\n    - array int\n\nbar: \n  params: \n    - long\n  return: \n    - long\n```\n\nEach subroutine has an optional parameter to define the subroutine architecture, the syntax is as follows:\n\n```yaml\nfoo: \n  architecture: arm\n  params: \n    - int\n    - array char\n    - array int\n    - array int\n  return: \n    - int\n    - array int\n```\n\nBy default, if the architecture parameter is omitted, the system will assume ARM64 as the subroutine architecture. The available architectures are the following:\n\n- `arm` - ARM64 architecture\n- `riscv` - RISC-V architecture\n\nThe subroutine name has to match the `.s` to test and is case insensitive. Thus, the subroutine `foo` or `bar` is going to check any `.s` file that matches its name case insensitive. All subroutines must contain an array of parameters, `params`, and an array of returns, `return`.\n\n### 5.3. tests.yaml\n\nThe input file for the test cases declaration has to follow a specific structure and syntax described as follows:\n\n```yaml\nbar:\n  - inputs:\n    - 6\n    outputs: \n    - 36\n    weight: 0.5\n  - inputs:\n    - 5\n    outputs: \n    - 25\n    weight: 0.5\n```\n\nThe root declaration of a test case must match the name declared in the `subroutines.yaml` file. Test cases have an array of inputs that has a list of outputs and a test weight. The sum of the test weights must be 1.0.\n\n### 5.4. submission.zip\n\nThe submission `zip` file must contain a `.s` file in its root. For example, for the subroutine `foo` and `bar` the `zip` structure should be as follows:\n\n```tree\nsubmission.zip\n├── foo.s\n└── bar.s\n```\n\n## 6. Results\n\nFor each submission file a `.json` file is created in the feedback directory with the same name of the `.zip` file. The file contains all information about compilation status and test cases. In addition, a simplified version of the result of all submissions is created in a `result.json`. The content of the files look as follows:\n\nFile **submission.json**\n\n```json\n[\n    {\n        \"name\": \"foo\",\n        \"compiled\": true,\n        \"ok\": true,\n        \"passed_count\": 2,\n        \"test_count\": 2,\n        \"score\": 1,\n        \"tests\": [\n            {\n                \"weight\": 1,\n                \"run\": true,\n                \"input\": [\n                    6,\n                    [\"-\", \"+\", \"+\", \"-\", \"-\", \"+\"],\n                    [1, 2, 3, 0, 1, -25],\n                    [13, 2, 8, 4, 5, 25]\n                ],\n                \"output\": [\n                    \"0\",\n                    [\"12\", \"4\", \"11\", \"4\", \"4\", \"0\"]\n                ],\n                \"passed\": true\n            }\n        ]\n    },\n    {\n        \"name\": \"bar\",\n        \"compiled\": true,\n        \"ok\": true,\n        \"passed_count\": 2,\n        \"test_count\": 2,\n        \"score\": 1,\n        \"tests\": [\n            {\n                \"weight\": 0.5,\n                \"run\": true,\n                \"input\": [\n                    6\n                ],\n                \"output\": [\n                    \"36\"\n                ],\n                \"passed\": true\n            },\n            {\n                \"weight\": 0.5,\n                \"run\": true,\n                \"input\": [\n                    5\n                ],\n                \"output\": [\n                    \"25\"\n                ],\n                \"passed\": true\n            }\n        ]\n    }\n]\n```\n\nFile **result.json**\n\n```json\n[\n    {\n        \"submission_name\": \"submission\",\n        \"subroutines\": [\n            {\n                \"name\": \"foo\",\n                \"score\": 0\n            },\n            {\n                \"name\": \"bar\",\n                \"score\": 0.5\n            }\n        ]\n    },\n    {\n        \"submission_name\": \"submission2\",\n        \"subroutines\": [\n            {\n                \"name\": \"foo\",\n                \"score\": 1\n            },\n            {\n                \"name\": \"bar\",\n                \"score\": 1\n            }\n        ]\n    }\n]\n```\n\n## License<!-- omit in toc -->\n\n[MIT](https://choosealicense.com/licenses/mit/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/luist18/areasear",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "areas",
    "package_url": "https://pypi.org/project/areas/",
    "platform": null,
    "project_url": "https://pypi.org/project/areas/",
    "project_urls": {
      "Homepage": "https://github.com/luist18/areasear",
      "Repository": "https://github.com/luist18/areasear"
    },
    "release_url": "https://pypi.org/project/areas/0.1.1/",
    "requires_dist": [
      "PyYAML (>=6.0,<7.0)",
      "Unidecode (>=1.3.4,<2.0.0)",
      "pytest (>=7.1.3,<8.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "ARM64 and RISC-V (extensible) assessment system",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15154850,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac2400aad9bc6caba6a550a581e799cd7b53b7595ed2bef7419e618c6740026d",
          "md5": "fb438415eb5b169c625274008821f8f0",
          "sha256": "42fb287469d5385f1eeb341864c0916ac4ab69546e9b23215cb49235d90485f9"
        },
        "downloads": -1,
        "filename": "areas-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb438415eb5b169c625274008821f8f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 22346,
        "upload_time": "2022-09-20T12:40:53",
        "upload_time_iso_8601": "2022-09-20T12:40:53.096624Z",
        "url": "https://files.pythonhosted.org/packages/ac/24/00aad9bc6caba6a550a581e799cd7b53b7595ed2bef7419e618c6740026d/areas-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d62c8eb09f4e42f9a33bd87f8b943691a0531d0b1848fae28c96520b17820f9c",
          "md5": "2bdd8b745ae0404b0e686640e654875a",
          "sha256": "bd9cdce194c6e36193b2c09296eef800cf90d1aa4f5e860dab1002717ea76a74"
        },
        "downloads": -1,
        "filename": "areas-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2bdd8b745ae0404b0e686640e654875a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 18692,
        "upload_time": "2022-09-20T12:40:55",
        "upload_time_iso_8601": "2022-09-20T12:40:55.266485Z",
        "url": "https://files.pythonhosted.org/packages/d6/2c/8eb09f4e42f9a33bd87f8b943691a0531d0b1848fae28c96520b17820f9c/areas-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cc8b5ba436e5a3004b7e86b7f56ae06ce4f21dba57edf904e496adb77a01817",
          "md5": "f6f6dcd3f63cdc9d0484f669a6fa5a11",
          "sha256": "daa05c5a298b1150a94f4145bd5ca424d1ee570412ada12889cb04f08e15a9f3"
        },
        "downloads": -1,
        "filename": "areas-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6f6dcd3f63cdc9d0484f669a6fa5a11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 22325,
        "upload_time": "2022-09-20T13:40:48",
        "upload_time_iso_8601": "2022-09-20T13:40:48.828801Z",
        "url": "https://files.pythonhosted.org/packages/8c/c8/b5ba436e5a3004b7e86b7f56ae06ce4f21dba57edf904e496adb77a01817/areas-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9034c0166b4e0e4775b7f1ed3370fe5c717cd7d83f12a99f92ae6298686d1f60",
          "md5": "f6ddb6e32c8a559be25b8747f4b11c48",
          "sha256": "9141bec85c6388f37601e7706e2fe1fd44b612085b8806a369b0329dd1f2846e"
        },
        "downloads": -1,
        "filename": "areas-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f6ddb6e32c8a559be25b8747f4b11c48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 18572,
        "upload_time": "2022-09-20T13:40:51",
        "upload_time_iso_8601": "2022-09-20T13:40:51.052772Z",
        "url": "https://files.pythonhosted.org/packages/90/34/c0166b4e0e4775b7f1ed3370fe5c717cd7d83f12a99f92ae6298686d1f60/areas-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8cc8b5ba436e5a3004b7e86b7f56ae06ce4f21dba57edf904e496adb77a01817",
        "md5": "f6f6dcd3f63cdc9d0484f669a6fa5a11",
        "sha256": "daa05c5a298b1150a94f4145bd5ca424d1ee570412ada12889cb04f08e15a9f3"
      },
      "downloads": -1,
      "filename": "areas-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f6f6dcd3f63cdc9d0484f669a6fa5a11",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 22325,
      "upload_time": "2022-09-20T13:40:48",
      "upload_time_iso_8601": "2022-09-20T13:40:48.828801Z",
      "url": "https://files.pythonhosted.org/packages/8c/c8/b5ba436e5a3004b7e86b7f56ae06ce4f21dba57edf904e496adb77a01817/areas-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9034c0166b4e0e4775b7f1ed3370fe5c717cd7d83f12a99f92ae6298686d1f60",
        "md5": "f6ddb6e32c8a559be25b8747f4b11c48",
        "sha256": "9141bec85c6388f37601e7706e2fe1fd44b612085b8806a369b0329dd1f2846e"
      },
      "downloads": -1,
      "filename": "areas-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f6ddb6e32c8a559be25b8747f4b11c48",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 18572,
      "upload_time": "2022-09-20T13:40:51",
      "upload_time_iso_8601": "2022-09-20T13:40:51.052772Z",
      "url": "https://files.pythonhosted.org/packages/90/34/c0166b4e0e4775b7f1ed3370fe5c717cd7d83f12a99f92ae6298686d1f60/areas-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}