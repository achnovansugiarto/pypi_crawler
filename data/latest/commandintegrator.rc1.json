{
  "info": {
    "author": "Simon Olofsson",
    "author_email": "dotchetter@protonmail.ch",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# commandintegrator\n\n## What it does\nCommandIntegrator is a lightweight framework and API for creating apps controlled with human language interfaces.\nIt concists of base classes and ready-to-use objects along with a set and clear structure for how to develop and scale a chat bot / Virtual assistant. \n\nObjects such as the `Feature`, which can be thought of a micro service within your app, makes it easier to keep the OOP structure clean and well maintained. Automatic command parsing with the `CommandParser` and `CommandProcessor` makes it very  straight forward to build and scale your command-controlled application without having to worry about name and word collisions, edge-case actions etcetera.\n\n\n\n## Objects and wrappers for more effective and easier development\n\ncommandintegrator exists for one reason: To make development of language-driven apps easier.  Decorator wrappers for automated logging, scheduling of function execution, caching objects and API DAO's are a few that are included in the package.\n\nYou can build the backend of your virtual assistant / chatbot with the tools and structures of commandintegrator and use it in your chatbot for whichever platform you want to use. commandintegrator is platform independent and can be used even with a simple command-line app as demonstrated below.\n\n\n## Example\n\nHere's a short example of how to create a virtual assistant that tells you what time it is.\nFor a more comprehensive example, please read the `demo_feature.py` file [here](https://github.com/dotchetter/commandintegrator/blob/master/examples/demo_feature.py)\n\n```python\nimport commandintegrator as ci\nimport time\nfrom pprint import pprint\n\nclass ClockFeature(ci.FeatureBase):\n    def __init__(self, *args, **kwargs):\n        super().__init__(self, *args, **kwargs)\n        self.command_parser = ci.CommandParser()\n\n        # Defines which keywords that this Feature identifies with initially\n        self.command_parser.keywords = ('what')\n\n        # The Callback object is a more intricate and well defined way of \n        # binding a sentence / sequence of words to a function. \n        self.command_parser.callbacks = ci.Callback(lead = 'time', trail = ('is', 'it'), func = self.get_time)\n\n    @ci.logger.loggedmethod\n    def get_time(self):\n        ci.logger.log(message = \"Manual log entry here\", level = \"info\")\n        return f'The time is {time.strftime(\"%H:%M\")}.'\n\n\n\nif __name__ == '__main__':\n    processor = ci.CommandProcessor()\n    processor.features = (ClockFeature(),)\n    msg = ci.Message()\n\n    while True:\n        msg.content = input(\"-> \")\n        response = processor.process(msg)\n\n        print(\"\\n-> Response received:\\n\")\n        pprint(f\"\\t{response.__dict__}\")\n        print(\"\\n-> Bot said: \", response.response(), \"\\n\")\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dotchetter/commandintegrator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "commandintegrator",
    "package_url": "https://pypi.org/project/commandintegrator/",
    "platform": "",
    "project_url": "https://pypi.org/project/commandintegrator/",
    "project_urls": {
      "Homepage": "https://github.com/dotchetter/commandintegrator"
    },
    "release_url": "https://pypi.org/project/commandintegrator/1.3.0/",
    "requires_dist": [
      "pytz",
      "requests",
      "urllib3"
    ],
    "requires_python": ">=3.8",
    "summary": "A framework and API for developing chatbots and other command-driven applications",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8395526,
  "releases": {
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c6fb4c9024499a4ae04fb1968005044129df01fb501b7659c53735de2125272",
          "md5": "b074bbb58a935188bc452f9c9deb6f49",
          "sha256": "8847b3843f408f5c770a4907d32ec6b05ffc18984889a5aedec5a6af9e0edce4"
        },
        "downloads": -1,
        "filename": "commandintegrator-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b074bbb58a935188bc452f9c9deb6f49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 29825,
        "upload_time": "2020-10-12T17:30:46",
        "upload_time_iso_8601": "2020-10-12T17:30:46.678472Z",
        "url": "https://files.pythonhosted.org/packages/6c/6f/b4c9024499a4ae04fb1968005044129df01fb501b7659c53735de2125272/commandintegrator-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "311436f0fb416efca6f8f9905c8ae91811b638406f726074b3f765623d47f43e",
          "md5": "b9cf8c7c1986bd77f46c2c949860048c",
          "sha256": "1fd1190f4edcad85e2fd87abe86077960187dccade0f34feb46e09141b9fc739"
        },
        "downloads": -1,
        "filename": "commandintegrator-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b9cf8c7c1986bd77f46c2c949860048c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19584,
        "upload_time": "2020-10-12T17:30:49",
        "upload_time_iso_8601": "2020-10-12T17:30:49.150793Z",
        "url": "https://files.pythonhosted.org/packages/31/14/36f0fb416efca6f8f9905c8ae91811b638406f726074b3f765623d47f43e/commandintegrator-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c6fb4c9024499a4ae04fb1968005044129df01fb501b7659c53735de2125272",
        "md5": "b074bbb58a935188bc452f9c9deb6f49",
        "sha256": "8847b3843f408f5c770a4907d32ec6b05ffc18984889a5aedec5a6af9e0edce4"
      },
      "downloads": -1,
      "filename": "commandintegrator-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b074bbb58a935188bc452f9c9deb6f49",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 29825,
      "upload_time": "2020-10-12T17:30:46",
      "upload_time_iso_8601": "2020-10-12T17:30:46.678472Z",
      "url": "https://files.pythonhosted.org/packages/6c/6f/b4c9024499a4ae04fb1968005044129df01fb501b7659c53735de2125272/commandintegrator-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "311436f0fb416efca6f8f9905c8ae91811b638406f726074b3f765623d47f43e",
        "md5": "b9cf8c7c1986bd77f46c2c949860048c",
        "sha256": "1fd1190f4edcad85e2fd87abe86077960187dccade0f34feb46e09141b9fc739"
      },
      "downloads": -1,
      "filename": "commandintegrator-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b9cf8c7c1986bd77f46c2c949860048c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 19584,
      "upload_time": "2020-10-12T17:30:49",
      "upload_time_iso_8601": "2020-10-12T17:30:49.150793Z",
      "url": "https://files.pythonhosted.org/packages/31/14/36f0fb416efca6f8f9905c8ae91811b638406f726074b3f765623d47f43e/commandintegrator-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}