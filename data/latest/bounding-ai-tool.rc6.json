{
  "info": {
    "author": "Simerse",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Bounding AI Tool\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\n<p align=\"center\">\n</p>\n\nA procedural Blender pipeline for photorealistic rendering.\n\n[Documentation](https://dlr-rm.github.io/BlenderProc) | [Tutorials](#tutorials) | [Examples](#examples) | [ArXiv paper](https://arxiv.org/abs/1911.01911) | [Workshop paper](https://sim2real.github.io/assets/papers/2020/denninger.pdf)\n## Features\n\n* Loading: `*.obj`, `*.ply`, `*.blend`, BOP, ShapeNet, Haven, 3D-FRONT, etc.\n* Objects: Set or sample object poses, apply physics and collision checking.\n* Materials: Set or sample physically-based materials and textures\n* Lighting: Set or sample lights, automatic lighting of 3D-FRONT scenes.\n* Cameras: Set, sample or load camera poses from file.\n* Rendering: RGB, stereo, depth, normal and segmentation images/sequences.\n* Writing: .hdf5 containers, COCO & BOP annotations.\n\n\n## Installation\n\n### Via pip\n\nThe simplest way to install bounding_ai_tool is via pip:\n\n```bash\npip install bounding_ai_tool\n```\n\n### Git clone\n\nIf you need to make changes to bounding_ai_tool or you want to make use of the most recent version on the main-branch, clone the repository:\n\n```bash\ngit clone https://github.com/DLR-RM/BlenderProc\n```\n\nTo still make use of the bounding_ai_tool command and therefore use bounding_ai_tool anywhere on your system, make a local pip installation:\n\n```bash\ncd bounding_ai_tool\npip install -e .\n```\n\n## Usage\n\nBounding AI Tool has to be run inside the blender python environment, as only there we can access the blender API. \nTherefore, instead of running your script with the usual python interpreter, the command line interface of Bounding AI Tool has to be used.\n\n```bash\nbounding_ai_tool run <your_python_script>\n```\n\nIn general, one run of your script first loads or constructs a 3D scene, then sets some camera poses inside this scene and renders different types of images (RGB, distance, semantic segmentation, etc.) for each of those camera poses.\nUsually, you will run your script multiple times, each time producing a new scene and rendering e.g. 5-20 images from it.\nWith a little more experience, it is also possible to change scenes during a single script call, read [here](docs/tutorials/key_frames.md#render-multiple-times) how this is done.\n\n## Quickstart\n\nYou can test your Bounding AI Tool pip installation by running\n\n```bash\nbounding_ai_tool quickstart\n```\n\nThis is an alias to `bounding_ai_tool run quickstart.py` where `quickstart.py` is:\n\n```python\nimport bounding_ai_tool as bproc\nimport numpy as np\n\nbproc.init()\n\n# Create a simple object:\nobj = bproc.object.create_primitive(\"MONKEY\")\n\n# Create a point light next to it\nlight = bproc.types.Light()\nlight.set_location([2, -2, 0])\nlight.set_energy(300)\n\n# Set the camera to be in front of the object\ncam_pose = bproc.math.build_transformation_mat([0, -5, 0], [np.pi / 2, 0, 0])\nbproc.camera.add_camera_pose(cam_pose)\n\n# Render the scene\ndata = bproc.renderer.render()\n\n# Write the rendering into an hdf5 file\nbproc.writer.write_hdf5(\"output/\", data)\n```\n\nBounding AI Tool creates the specified scene and renders the image into `output/0.hdf5`.\nTo visualize that image, simply call:\n\n```bash\nbounding_ai_tool vis hdf5 output/0.hdf5\n```\n\nThats it! You rendered your first image with Bounding AI Tool!\n\n### Debugging in the Blender GUI\n\nTo understand what is actually going on, Bounding AI Tool has the great feature of visualizing everything inside the blender UI.\nTo do so, simply call your script with the `debug` instead of `run` subcommand:\n```bash\nbounding_ai_tool debug quickstart.py\n```\n\nNow the Blender UI opens up, the scripting tab is selected and the correct script is loaded.\nTo start the Bounding AI Tool pipeline, one now just has to press `Run bounding_ai_tool` (see red circle in image).\nAs in the normal mode, print statements are still printed to the terminal.\n\n<p align=\"center\">\n<img src=\"images/debug.jpg\" alt=\"Front readme image\" width=500>\n</p>\n\nThe pipeline can be run multiple times, as in the beginning of each run the scene is cleared.\n\n### Breakpoint-Debugging in IDEs\n\nAs bounding_ai_tool runs in blenders separate python environment, debugging your bounding_ai_tool script cannot be done in the same way as with any other python script.\nTherefore, remote debugging is necessary, which is explained for vscode and PyCharm in the following:\n\n#### Debugging with vscode\n\nFirst, install the `debugpy` package in blenders python environment.\n\n```\nbounding_ai_tool pip install debugpy\n```\n\nNow add the following configuration to your vscode [launch.json](https://code.visualstudio.com/docs/python/debugging#_initialize-configurations).\n\n```json\n{                        \n    \"name\": \"Attach\",\n    \"type\": \"python\",\n    \"request\": \"attach\",\n    \"connect\": {\n        \"host\": \"localhost\",\n        \"port\": 5678\n    }\n}\n```\n\nFinally, add the following lines to the top (after the imports) of your bounding_ai_tool script which you want to debug.\n\n```python\nimport debugpy\ndebugpy.listen(5678)\ndebugpy.wait_for_client()\n```\n\nNow run your bounding_ai_tool script as usual via the CLI and then start the added \"Attach\" configuration in vscode.\nYou are now able to add breakpoints and go through the execution step by step.\n\n#### Debugging with PyCharm Professional\n\nIn Pycharm, go to `Edit configurations...` and create a [new configuration](https://www.jetbrains.com/help/pycharm/remote-debugging-with-product.html#remote-debug-config) based on `Python Debug Server`.\nThe configuration will show you, specifically for your version, which pip package to install and which code to add into the script.\nThe following assumes Pycharm 2021.3:\n\nFirst, install the `pydevd-pycharm` package in blenders python environment.\n\n```\nbounding_ai_tool pip install pydevd-pycharm~=212.5457.59\n```\n\nNow, add the following code to the top (after the imports) of your bounding_ai_tool script which you want to debug.\n\n```python\nimport pydevd_pycharm\npydevd_pycharm.settrace('localhost', port=12345, stdoutToServer=True, stderrToServer=True)\n```\n\nThen, first run your `Python Debug Server` configuration in PyCharm and then run your bounding_ai_tool script as usual via the CLI.\nPyCharm should then go in debug mode, blocking the next code line.\nYou are now able to add breakpoints and go through the execution step by step.\n\n## What to do next?\n\nAs you now ran your first bounding_ai_tool script, your ready to learn the basics:\n\n### Tutorials\n\nRead through the tutorials, to get to know with the basic principles of how Bounding AI Tool is used:\n\n1. [Loading and manipulating objects](docs/tutorials/loader.md)\n2. [Configuring the camera](docs/tutorials/camera.md)\n3. [Rendering the scene](docs/tutorials/renderer.md)\n4. [Writing the results to file](docs/tutorials/writer.md)\n5. [How key frames work](docs/tutorials/key_frames.md)\n6. [Positioning objects via the physics simulator](docs/tutorials/physics.md)\n\n### Examples\n\nWe provide a lot of [examples](examples/README.md) which explain all features in detail and should help you understand how Bounding AI Tool works. Exploring our examples is the best way to learn about what you can do with Bounding AI Tool. We also provide support for some datasets.\n\n* [Basic scene](examples/basics/basic/README.md): Basic example, this is the ideal place to start for beginners\n* [Camera sampling](examples/basics/camera_sampling/README.md): Sampling of different camera positions inside of a shape with constraints for the rotation.\n* [Object manipulation](examples/basics/entity_manipulation/README.md): Changing various parameters of objects.\n* [Material manipulation](examples/basics/material_manipulation/README.md): Material selecting and manipulation.\n* [Physics positioning](examples/basics/physics_positioning/README.md): Enabling simple simulated physical interactions between objects in the scene.\n* [Semantic segmentation](examples/basics/semantic_segmentation/README.md): Generating semantic segmentation labels for a given scene.\n* [BOP Challenge](README_bounding_ai_tool4BOP.md): Generate the pose-annotated data used at the BOP Challenge 2020\n* [COCO annotations](examples/advanced/coco_annotations/README.md): Write COCO annotations to a .json file for selected objects in the scene.\n\nand much more, see our [examples](examples/README.md) for more details.\n\n\n## Contributions\n\nFound a bug? help us by reporting it. Want a new feature in the next Bounding AI Tool release? Create an issue. Made something useful or fixed a bug? Start a PR. Check the [contributions guidelines](CONTRIBUTING.md).\n\nThis repository was forked from BlenderProc, another GPL-licensed project. We intend to build upon the great work of BlenderProc with additional features.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Simerse/bounding_ai_tool",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bounding-ai-tool",
    "package_url": "https://pypi.org/project/bounding-ai-tool/",
    "platform": null,
    "project_url": "https://pypi.org/project/bounding-ai-tool/",
    "project_urls": {
      "Homepage": "https://github.com/Simerse/bounding_ai_tool"
    },
    "release_url": "https://pypi.org/project/bounding-ai-tool/0.3.0/",
    "requires_dist": [
      "setuptools",
      "pyyaml",
      "requests",
      "matplotlib",
      "numpy",
      "Pillow",
      "h5py",
      "progressbar"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13482219,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91e308afd943a8f20b29cf7134afc30429025eed40ed98a37245ebcd4ff00ad5",
          "md5": "8c13caac85e1d5d1c5f3709dd6f0fcdc",
          "sha256": "9f9f830849d77b6f551941a43f4f5dc712339d15efc0c506d4c2e3f7a032b4b0"
        },
        "downloads": -1,
        "filename": "bounding_ai_tool-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c13caac85e1d5d1c5f3709dd6f0fcdc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 457974,
        "upload_time": "2022-04-04T20:08:27",
        "upload_time_iso_8601": "2022-04-04T20:08:27.663300Z",
        "url": "https://files.pythonhosted.org/packages/91/e3/08afd943a8f20b29cf7134afc30429025eed40ed98a37245ebcd4ff00ad5/bounding_ai_tool-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "264787422125f2f02a51c2c3430cb237472c4d9cc15a9edf2155041819c726c9",
          "md5": "a186e7ad965cd2f4b8cb968f37422028",
          "sha256": "2c8bd17edc5e741d80741a3e73e30abf869417be9a58efbaa845763b928ad6e5"
        },
        "downloads": -1,
        "filename": "bounding_ai_tool-0.1.0.win-amd64.zip",
        "has_sig": false,
        "md5_digest": "a186e7ad965cd2f4b8cb968f37422028",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1087456,
        "upload_time": "2022-04-04T20:01:31",
        "upload_time_iso_8601": "2022-04-04T20:01:31.762990Z",
        "url": "https://files.pythonhosted.org/packages/26/47/87422125f2f02a51c2c3430cb237472c4d9cc15a9edf2155041819c726c9/bounding_ai_tool-0.1.0.win-amd64.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20771b387d4e8fecadfd206a16e0ee59bd7c02e224ff1f6d2a7147bc1ca8ca9c",
          "md5": "75dd355e6d07461e4e9a8b1f06a772a0",
          "sha256": "a189b2d4dd2249a55e71ae82af5d30f5969f1596decf461507530e24f6a9a28e"
        },
        "downloads": -1,
        "filename": "bounding_ai_tool-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75dd355e6d07461e4e9a8b1f06a772a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 457975,
        "upload_time": "2022-04-04T20:10:15",
        "upload_time_iso_8601": "2022-04-04T20:10:15.383007Z",
        "url": "https://files.pythonhosted.org/packages/20/77/1b387d4e8fecadfd206a16e0ee59bd7c02e224ff1f6d2a7147bc1ca8ca9c/bounding_ai_tool-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "389335142bc536b4d4b5c521177027173e716b755677602ffba55057ce9b873b",
          "md5": "040e78f2e140b92042b3a9b6ec894916",
          "sha256": "f06bba916d749ec332626038c002aa975b749f50fd95f2ac166ca86be4331453"
        },
        "downloads": -1,
        "filename": "bounding_ai_tool-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "040e78f2e140b92042b3a9b6ec894916",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 457975,
        "upload_time": "2022-04-04T20:13:57",
        "upload_time_iso_8601": "2022-04-04T20:13:57.943492Z",
        "url": "https://files.pythonhosted.org/packages/38/93/35142bc536b4d4b5c521177027173e716b755677602ffba55057ce9b873b/bounding_ai_tool-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7e27caf8cb95566f98c8e3fd71864330e329540f044d75b4bf1fb6f6708d811",
          "md5": "f5f1e9f784778df7680d1ffc66605af7",
          "sha256": "5b125ad0529e26a38f3e101dd64b290533588b1b8b32b08f1c452fa1c6c966f9"
        },
        "downloads": -1,
        "filename": "bounding_ai_tool-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5f1e9f784778df7680d1ffc66605af7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 405611,
        "upload_time": "2022-04-07T17:43:55",
        "upload_time_iso_8601": "2022-04-07T17:43:55.862424Z",
        "url": "https://files.pythonhosted.org/packages/d7/e2/7caf8cb95566f98c8e3fd71864330e329540f044d75b4bf1fb6f6708d811/bounding_ai_tool-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f66280d3da28a696f82c5eedad95e1eceee6885eaed218bb7dd2eca65c364f5",
          "md5": "2e2406b5414ffdc29fd32e78f25a1caf",
          "sha256": "2179cb4bd7aa1c5283abf11a3a2aab245abdb9c04ff310da0ea08712e861b3ab"
        },
        "downloads": -1,
        "filename": "bounding_ai_tool-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e2406b5414ffdc29fd32e78f25a1caf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 405600,
        "upload_time": "2022-04-07T18:33:33",
        "upload_time_iso_8601": "2022-04-07T18:33:33.213402Z",
        "url": "https://files.pythonhosted.org/packages/5f/66/280d3da28a696f82c5eedad95e1eceee6885eaed218bb7dd2eca65c364f5/bounding_ai_tool-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23d838e3fe0f1cf152617445a3722009cb3583adb44e9187591d895a0bb06aac",
          "md5": "3f7f3a98151c19dfe05dd1a97aca8a14",
          "sha256": "31c194ba4cc889075073106f3a3caf806fa04f62626eaeae9169240e626af5d5"
        },
        "downloads": -1,
        "filename": "bounding_ai_tool-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f7f3a98151c19dfe05dd1a97aca8a14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 405485,
        "upload_time": "2022-04-11T21:34:35",
        "upload_time_iso_8601": "2022-04-11T21:34:35.731521Z",
        "url": "https://files.pythonhosted.org/packages/23/d8/38e3fe0f1cf152617445a3722009cb3583adb44e9187591d895a0bb06aac/bounding_ai_tool-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23d838e3fe0f1cf152617445a3722009cb3583adb44e9187591d895a0bb06aac",
        "md5": "3f7f3a98151c19dfe05dd1a97aca8a14",
        "sha256": "31c194ba4cc889075073106f3a3caf806fa04f62626eaeae9169240e626af5d5"
      },
      "downloads": -1,
      "filename": "bounding_ai_tool-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3f7f3a98151c19dfe05dd1a97aca8a14",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 405485,
      "upload_time": "2022-04-11T21:34:35",
      "upload_time_iso_8601": "2022-04-11T21:34:35.731521Z",
      "url": "https://files.pythonhosted.org/packages/23/d8/38e3fe0f1cf152617445a3722009cb3583adb44e9187591d895a0bb06aac/bounding_ai_tool-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}