{
  "info": {
    "author": "IMJIE",
    "author_email": "imjie@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# 框架介绍\nfasttest-selenium 是由Python语言开发的WEB端自动化框架，通过yaml编写相应的action即可调用Selenium API完成自动化测试。  \n[文档介绍](https://www.yuque.com/books/share/99dcee33-a99d-4364-ab48-eb511d7ceb2d?#)\n## idea\n- 能否同时运行多个不同的浏览器，解决兼容性测试问题\n- 通过插件快速输入关键字\n## 已完成功能\n- selenium 90%的Action支持\n- 可拓展的公共方法和公共函数\n- 高度还原steps的报告输出\n## 待完成功能\n- 数据类型优化：支持自定义复杂数据结构\n- 结果报告优化：支持图片放大\n\n\n# 快速体验\n## 框架下载\n\nfasttest-selenium已经发布到Python PyPi平台，可通过以下两种方式完成安装\n1.在终端输入下方命令进行安装：\n\n```bash\npip3 install fasttest-selenium\n```\n\n2.可前往[代码仓库](https://github.com/Jodeee/fasttest_selenium)直接clone或下载源码。\n\n> 下载源码后需要将包导入到当前项目中\n\n## 项目依赖\n\n该框架在Python3.7版本下开发，部分功能依赖第三方模块，故需要安装以下模块\n\n1. `PyYAML` 用于解析yaml测试用例文件\n\n```basic\npip3 install PyYAML\n```\n\n2. `selenium` WEB自动化框架\n\n```basic\npip3 install selenium\n```\n\n3. `colorama` 日志高亮输出\n\n```basic\npip3 install colorama\n```\n\n4.`opencv-contrib-python` 图片对比识别\n\n```basic\npip3 install opencv-contrib-python==3.4.2.16\n```\n\n> 说明：opencv在3.4.2以上版本使用其算法需要**授权确认**，该版本最高支持Python3.7，如不需要图片对比能力，可安装最新版Python和opencv-contrib-python\n\n## 测试Demo\n\n[Demo](https://github.com/Jodeee/fasttestSeleniumDemo)包含完整项目结构以及关键字测试用例，下载后可通过运行 `runtest.py` 启动测试执行\n\n# 项目结构\n\n## 项目树状图\n\n```\n├── Common           // 自定义关键字库  \n|   ├── common.yaml  // 自定义关键字文件\n├── Resource         // 文件资源目录\n|   ├── test.png     // 图片资源\n├── Report           // 结果报告目录  \n├── Scripts          // 脚本函数目录 \n|   ├── __init__.py  // 包标识文件\n|   ├── test.py      // 脚本文件\n├── TestCase         // 测试用例目录\n|   ├── test.yaml    // 测试用例文件\n├── config.yaml      // 项目配置文件  \n├── data.json        // 数据配置文件  \n├── runtest.py       // 项目执行文件\n```\n\n## config 项目配置\n\n`config.yaml` 包含了项目运行时必要参数，结构如下：  \n`driver` 固定参数，值为 `selenium`   \n`browser` 指定浏览器，包括 `chrome` 、 `firefox` 、 `safari` 、 `ie` 、 `opera`   \n`isReset` 每条用例执行完后是否重置浏览器，推荐设置为 `True` \n`saveScreenshot` 执行步骤是否保存截图，如果为`True` 将大大增加执行时间，推荐设置为 `False` ，只在执行异常时保存截图  \n`implicitlyWait` 隐式等待时间  \n`maxWindow` 窗口最大化  \n`desiredcaps` 启动参数配置，会根据 `browser` 拿到对应浏览器参数  \n`driver` 浏览器驱动，如驱动未添加环境变量中，可通过此参数指定驱动路径  \n`options` 浏览器启动参数，会自动添加到对应浏览器的`options`  \n`testcast` 用例执行路径，可指定某一条用例路径或者某一文件夹下面所有用例  \n\n\n```yaml\ndriver: selenium\nbrowser: chrome\nisReset: True\nsaveScreenshot: False\nimplicitlyWait: 10\nmaxWindow: True\ndesiredcaps:\n    - chrome:\n        - driver: '/Users/xiongjunjie/Desktop/chromedriver'\n          options: # 无头模式运行\n            - '--headless'\n            - '--dissble-gpu'\n            - '--window-size=1920,1050'\n      firefox:\n        - driver: '/Users/xiongjunjie/Desktop/geckodriver'\n          options:\n            - '--headless'\n            - '--dissble-gpu'\n            - '--window-size=1920,1050'\n\ntestcase:\n    - TestCase/common/\n    - TestCase/selenium/cookies.yaml\n\n```\n\n## data 数据配置\n\n`data.json` 为数据配置，结构如下：  \n`variable` 全局变量配置，用例中可直接获取该配置下的数据  \n`resource` 资源路径配置，用例中可直接访问该相对路径下的文件资源  \n`keywords` 脚本函数配置，用例中可直接调用该配置下的函数  \n\n```json\n{\n  \"variable\": {\n    \"userid\": \"admin\",\n    \"password\": 13456\n  },\n  \"resource\": {\n    \"baidu_logo\": \"Resource/baidu.png\"\n  },\n  \"keywords\": [\n    \"keyDown\",\n    \"getText\"\n  ]\n}\n```\n\n例：直接调用 `keywords` 函数并传递userid的值和baidu_logo的路径\n\n```yaml\n- keyDown(${userid},${baidu_logo})\n```\n\n## runtest 执行入口\n\n`runtest.py` 为整个项目执行入口，可直接执行该文件或在终端运行 `python3 runtest.py` 启动项目  \n`start` 方法有返回整体执行结果，方便接入持续集成或者生成自定义报告           \n\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\nfrom fasttest_selenium import *\n\nif __name__ == '__main__':\n\n    project = Project()\n\n    project.start()\n\n```\n\n## Common 自定义关键字\n\n`Common` 目录用于存放自定义的关键字，类似于PO模式中的Page，可以将用例中公共逻辑抽离出来保存到这里，它需要一个关键字来表达它的作用，所以我们需要为它指定一个唯一的名字，以便于我们在用例中可调用。  \n**关键字结构：**  \n`common_action` 关键字名称，性感且唯一  \n`description` 关键字描述，简短有力  \n`input`  传入参数，一个不漏  \n`output` 返回参数，暂未实现  \n`steps` 执行步骤  \n关键字定义：\n\n```yaml\ncommon_action:        \n description: 公共方法\n input: [key,value]\n output: []\n steps:\n    - click(${value})\n    - sleep(5)\n\ncommon_action1:        \n description: 公共方法1\n input: [key,value]\n output: []\n steps:\n    - click(${value})\n    - sleep(5)\n```\n\n调用方式：在用例中call + 关键字名称为调用该关键字的语法，参数个数应和 `input` 相对应\n\n```yaml\n- call common_action('key','测试数据')\n```\n\n## Scripts 脚本函数\n\n`Scripts` 为Python脚本目录，在 [`data.json`]下 `keywords` 中注册方法名后，就可直接在用例中调用脚本\n如现有关键字无法完成的特殊操作，可以导入框架中 `driver` 模块，通过 `driver` 调用底层API  \n函数定义：\n\n```python\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\nfrom fasttest_selenium.driver import *\n\ndef getText():\n    '''\n    调用selenium api获取当前页面标题\n    '''\n    log_info(driver.title)\n    return driver.title\n\ndef getTest(test):\n    '''\n    普通函数\n    '''\n    log_info(test)\n```\n\n调用方式：如果需要拿到函数返回的数据，可以直接用变量保存，如不需要，可以直接调用函数\n\n```yaml\n- ${title} = getText() # 获取返回值\n- getTest('测试数据') # 普通函数\n```\n\n## Resource 文件资源\n\n`Resource` 目录下的文件资源在 [`data.json`](#nNDdu) 下 `resource` 中指定文件名称和相对路径后，可以直接在用例中访问该资源文件\n\n```yaml\n- matchImage(${baesImage}, ${baidu_logo})\n```\n\n## TestCase 测试用例\n\n`TestCase` 用于存放测试用例，测试用例为 `YAML` 文件，如果对`YAML` 语法不熟悉可参考[菜鸟教程](https://www.runoob.com/w3cnote/yaml-intro.html)，用例结构如下：  \n`module` 用例所属业务模块，同一业务下用例的`module` 应保持一致，在结果报告中它们将展示在同一个分组下面  \n`skip` 是否跳过该用例，默认为false  \n`description` 用例描述  \n`steps` 用例步骤  \n\n```yaml\nmodule: selenium\nskip: false\ndescription: action相关\nsteps:\n  - openUrl('https://www.baidu.com')\n  # 检查元素\n  - check('id=su')\n  # 单击元素\n  - click('id=su')\n  # 右击元素\n  - contextClick('id=su')\n  # 双击元素\n  - doubleClick('class=hot-refresh-text')\n  # 按住鼠标左键\n  - holdClick('class=hot-refresh-text')\n```\n\n## Report 结果报告\n\n`Report` 为测试结果目录，用例执行完毕后会自动生成高度还原测试用例步骤的测试报告，可点击具体步骤\n查看截图和错误信息\n\n# 关键字\n\n测试用例中的关键字包含4中场景，项目结构中已经介绍了自定义关键字 [`Common`](https://www.yuque.com/jodeee/vt6gkg/iqc0hn#yiqZY) 和 [`Scripts`](https://www.yuque.com/jodeee/vt6gkg/iqc0hn#YU0b2) ，接下来两种是固定关键字\n\n## 讲在前面\n\n在介绍关键字之前，先介绍下用例中经常用到的两个点\n\n1. 关于变量的定义，占位符${} + 变量名test来表示这是一个变量，获取该变量同样如此\n   1. 关于赋值：它可以直接被赋值或者其他关键字返回值给变量\n   1. 关于取值：一条用例中${test}会从多个地方尝试获取值，所以具有一定优先级\n      1. 最高优先级：如果在for循环中，会优先获取for循环迭代值\n      1. 第二优先级：如果for循环中无法获取该变量，会尝试从当前用例中获取变量值\n      1. 第三优先级：如果当前用例中未定义该变量，会判断是否在 `Common` 库中 `input` 有定义\n      1. 第四优先级：如果以上三种均未获取该变量，会尝试从 `data.json` 下 `variable` 、 `resource` 获取变量值\n2. 元素定位方法：selenium有八种元素定位方式，为了简化步骤描述，用例中按照 `type=element` 的方式即可定位到相关元素\n   1. 元素定位方式：_id、name、class、tag_name、link_text、partial_link_text、xpath、css_selector_\n   1. 例：点击百度按钮 click(\"id=su\") \n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/499819/1608438016248-05bad871-ec48-4fb6-a6f1-c8bfc1c5ba62.png#align=left&display=inline&height=685&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1370&originWidth=2822&size=634969&status=done&style=none&width=1411)\n\n## Selenium Action\n\n### Browser\n\n#### 打开网页(openUrl)\n\n`openUrl` 打开一个网页，参数: `URL` \n\n```yaml\n- ${url} = 'https://www.baidu.com'\n- openUrl(${url})\n# 或者\n- openUrl('https://www.baidu.com')\n```\n\n对应Selenium API ：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\n```\n\n#### 关闭标签页或窗口(close)\n\n`close` 关闭当前标签页或窗口\n\n```yaml\n- openUrl('https://www.baidu.com')\n- close()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.close()\n```\n\n#### 后退(back)\n\n`back` 退回到上一页\n\n```yaml\n- back()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.find_element_by_xpath('//*[@id=\"s-top-left\"]/a[1]').click()\ndriver.back()\n```\n\n#### 前进(forward)\n\n`forward` 前进到下一页\n\n```yaml\n- forward()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.find_element_by_xpath('//*[@id=\"s-top-left\"]/a[1]').click()\ndriver.back()\ndriver.forward()\n```\n\n#### 刷新(refresh)\n\n`refresh` 刷新当前页面\n\n```yaml\n- refresh()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.refresh()\n```\n\n#### 窗口最大化(maxWindow)\n\n`maxWindow` 窗口最大化\n\n```yaml\n- maxWindow()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.maximize_window()\n```\n\n#### 窗口最小化(minWindow)\n\n`minWindow` 窗口最小化\n\n```yaml\n- minWindow()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.minimize_window()\n```\n\n#### 窗口全屏(fullscreenWindow)\n\n`fullscreenWindow` 窗口全屏\n\n```yaml\n- fullscreenWindow()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.fullscreen_window()\n```\n\n#### 设置窗口大小(setWindowSize)\n\n`setWindowSize` 设置窗口大小，参数： `width` ， `height` \n\n```yaml\n- setWindowSize(3000,2000)\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.set_window_size(3000,2000)\n```\n\n#### 设置窗口坐标(setWindowPosition)\n\n`setWindowPosition` 设置窗口起始坐标，参数： `x` ， `y` \n\n```yaml\n- setWindowPosition(10,20)\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.set_window_position(10,20)\n```\n\n#### 获取窗口大小($.getWindowSize)\n\n`$.getWindowSize` 获取窗口大小\n\n```yaml\n- ${w_size} = $.getWindowSize()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nw_size = driver.get_window_size()\n```\n\n#### 获取窗口坐标($.getWindowPosition)\n\n`$.getWindowPosition` 获取窗口起始坐标\n\n```yaml\n- ${w_position} = $.getWindowPosition()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nw_position = driver.get_window_position()\n```\n\n#### 获取当前窗口句柄($.getCurrentWindowHandle)\n\n`$.getCurrentWindowHandle` 获取当前窗口句柄\n\n```yaml\n- ${handle} = $.getCurrentWindowHandle()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nhandle = driver.current_window_handle\n```\n\n#### 获取所有窗口句柄($.getWindowHandles)\n\n`$.getWindowHandles` 获取所有窗口句柄\n\n```yaml\n- ${handles} = $.getWindowHandles()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nhandles = driver.window_handles\n```\n\n#### 切换窗口句柄(switchToWindow)\n\n`switchToWindow` 切换窗口句柄，参数: `handle` \n\n> 获取所有的窗口句柄是无序的，建议用for循环切换窗口句柄\n\n```yaml\n- ${all_handle} = $.getWindowHandles()\n- for ${handle} in ${all_handle}:\n    # 切换窗口句柄\n    - switchToWindow(${handle})\n    - ${title} = $.getTitle()\n    - if ${title} == '百度新闻——海量中文资讯平台':\n        - break\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nhandles = driver.window_handles\nfor handle in handles:\n    # 切换窗口句柄\n    switch_to.window(handle)\n    title = driver.title\n    if title == '百度新闻——海量中文资讯平台':\n        break\n```\n\n#### 获取窗口标题($.getTitle)\n\n`$.getTitle` 获取窗口标题\n\n```yaml\n- ${title} = $.getTitle()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ntitle = driver.title\n```\n\n#### 获取窗口URL($.getCurrentUrl)\n\n`$.getCurrentUrl` 获取窗口URL\n\n```yaml\n- ${title} = $.getCurrentUrl()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ntitle = driver.current_url\n```\n\n#### 获取浏览器名称($.getName)\n\n`$.getName` 获取浏览器名称\n\n```yaml\n- ${name} = $.getName()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ntitle = driver.name\n```\n\n\n### Action\n\n#### 单击(click)\n\n`click` 鼠标左键单击，参数: `element` \n\n```yaml\n- click('id=su')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_id('su')\nelement.click()\n```\n\n#### 右击(contextClick)\n\n`contextClick` 鼠标右键单击，参数: `element`\n\n```yaml\n- contextClick('id=su')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_id('su')\nActionChains(driver).context_click(element).perform()\n```\n\n#### 双击(doubleClick)\n\n`doubleClick` 鼠标左键双击，参数: `element`\n\n```yaml\n- doubleClick('id=su')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_id('su')\nActionChains(driver).double_click(element).perform()\n```\n\n#### 长按(holdClick)\n\n`holdClick` 长按鼠标左键不放，参数: `element`\n\n```yaml\n- holdClick('id=su')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_id('su')\nActionChains(driver).click_and_hold(element).perform()\n```\n\n#### 拖放元素到另一个元素位置(dragDrop)\n\n`dragDrop` 拖放元素到另一个元素位置，参数: `element`，`target`\n\n```yaml\n- dragDrop('xpath=//*[@id=\"sbox\"]/tbody/tr/td[1]/div[1]/a/img','id=s_btn_wr')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_xpath('//*[@id=\"sbox\"]/tbody/tr/td[1]/div[1]/a/img')\ntarget = find_element_by_id('s_btn_wr')\nActionChains(driver).drag_and_drop(element, target).perform()\n```\n\n#### 拖放元素到某个位置(dragDropByOffset)\n\n`dragDropByOffset` _拖放元素到某个位置_，参数: `element` ， `x` ， `y` \n\n```yaml\n- dragDropByOffset('xpath=//*[@id=\"sbox\"]/tbody/tr/td[1]/div[1]/a/img',10,10)\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_xpath('//*[@id=\"sbox\"]/tbody/tr/td[1]/div[1]/a/img')\nActionChains(driver).drag_and_drop_by_offset(element, 10, 10).perform()\n```\n\n#### 鼠标移动到某个位置(moveByOffset)\n\n`moveByOffset` _鼠标从当前位置移动到某个坐标_，参数：`x` ， `y`\n\n```yaml\n- moveByOffset(10,10)\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nActionChains(driver).move_by_offset(10, 10).perform()\n```\n\n#### 鼠标移动到某个元素(moveToElement)\n\n`moveToElement` _鼠标移动到某个元素上_，参数: `element`\n\n```yaml\n- moveToElement('xpath=//*[@id=\"hotsearch-content-wrapper\"]/li[1]/a/span[2]')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_xpath('//*[@id=\"hotsearch-content-wrapper\"]/li[1]/a/span[2]')\nActionChains(driver).move_to_element(element).perform()\n```\n\n#### 鼠标_移动到距某个元素多少距离的位置_(moveToElementWithOffset)\n\n`moveToElementWithOffset` 鼠标_移动到距某个元素(左上角坐标)多少距离的位置_，参数: `element` ， `x` ， `y`\n\n```yaml\n- moveToElementWithOffset('id=su',10,20)\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_id('su')\nActionChains(driver).move_to_element_with_offset(element, 10, 20).perform()\n```\n\n#### 输入(sendKeys)\n\n`sendKeys` 输入文案，参数： `element` ， `Keys(可选)` ， `text` \n\n```yaml\n- sendKeys('name=wd','测试文案') # 普通输入\n# 复制粘贴\n- sendKeys('name=wd','Keys.CONTROL', 'c') # control + c\n- sendKeys('name=wd','Keys.CONTROL', 'v') # control + v\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_name('wd')\nelement.send_keys('测试文案')\n# 复制粘贴\nelement.send_keys(Keys.CONTROL, 'c')\nelement.send_keys(Keys.CONTROL, 'v')\n```\n\n#### 清除(clear)\n\n`clear` 清除输入框文案、元素选中状态\n\n```yaml\n- clear('name=wd')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_name('wd')\nelement.clear()\n```\n\n#### 执行JS(executeScript)\n\n`executeScript` 执行JS代码，参数: `script`   \n\n```yaml\n- ${js} = \"window.open('http://www.taobao.com')\"\n- executeScript(${js})\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\njs = \"window.open('http://www.taobao.com')\"\ndriver.execute_script(js)\n```\n\n#### 截图($.saveScreenshot)\n\n`$.saveScreenshot` 对屏幕或者元素截图，参数: `element(可选，如果为空则截全屏)`， `name`   \n\n```yaml\n# 对元素截图，返回图片路径\n- ${path} = $.saveScreenshot('id=su', 'biadu.png')\n# 全屏截图，返回图片路径\n- ${path} = $.saveScreenshot('biadu.png')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement = find_element_by_id('su')\n# 元素截图\nelement.screenshot(path)\n# 全屏截图\ndriver.save_screenshot(path)\n```\n\n### Element\n\n#### 获取单个元素($.getElement)\n\n`$.getElement` 获取单个元素，参数: `element`   \n\n```yaml\n# 获取单个元素 id|name|class|tag_name|link_text|partial_link_text|xpath|css_selector\n- ${element_id} = $.getElement('id=su')\n- ${element_name} = $.getElement('name=f')\n- ${element_class} = $.getElement('class=s_ipt')\n- ${element_tag_name} = $.getElement('tag_name=form')\n- ${element_link_text} = $.getElement('link_text=新闻')\n- ${element_partial_link_text} = $.getElement('partial_link_text=新')\n- ${element_xpath} = $.getElement('xpath=//*[@id=\"su\"]')\n- ${element_css_selector} = $.getElement('css_selector=[name=\"wd\"]')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\n'''\n        by = Dict({\n            'id': By.ID,\n            'name': By.NAME,\n            'xpath': By.XPATH,\n            'class': By.CLASS_NAME,\n            'tag_name': By.TAG_NAME,\n            'link_text': By.LINK_TEXT,\n            'css_selector': By.CSS_SELECTOR,\n            'partial_link_text': By.PARTIAL_LINK_TEXT,\n        })\n'''\nelement_id = find_element(By.ID, 'su')\n```\n\n#### 获取多个元素($.getElement)\n\n`$.getElement` 获取单个元素，参数: `element`   \n\n```yaml\n# 获取多个元素 id|name|class|tag_name|link_text|partial_link_text|xpath|css_selector\n- ${elements_class} = $.getElements('class=title-content-title')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelements_class = find_elements(By.CLASS_NAME, 'title-content-title')\n```\n\n#### 判断元素是否选中($.isSelected)\n\n`$.isSelected` 判断元素是否选中，参数: `element`   \n\n```yaml\n- ${element_id} = $.getElement('id=su')\n- ${is_selected} = $.isSelected(${element_id})\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement_id = find_element(By.ID, 'su')\nis_selected = element_id.is_selected()\n```\n\n#### 判断元素是否显示($.isDisplayed)\n\n`$.isDisplayed` 判断元素是否显示，参数: `element`   \n\n```yaml\n- ${element_id} = $.getElement('id=su')\n- ${is_displayed} = $.isDisplayed(${element_id})\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement_id = find_element(By.ID, 'su')\nis_displayed = .is_displayed()\n```\n\n#### 判断元素是否可用($.isEnabled)\n\n`$.isEnabled` 判断元素是否可用，参数: `element`   \n\n```yaml\n- ${element_id} = $.getElement('id=su')\n- ${is_enabled} = $.isEnabled(${element_id})\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement_id = find_element(By.ID, 'su')\nis_enabled = element_id.is_enabled()\n```\n\n#### 获取元素大小($.getSize)\n\n`$.getSize` 判断元素是否选中，参数: `element`   \n\n```yaml\n- ${element_id} = $.getElement('id=su')\n- ${size} = $.getSize(${element_id})\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement_id = find_element(By.ID, 'su')\nsize = element_id.size\n```\n\n#### 获取元素坐标($.getLocation)\n\n`$.getLocation` 获取元素坐标，参数: `element`   \n\n```yaml\n- ${element_id} = $.getElement('id=su')\n- ${location} = $.getLocation(${element_id})\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement_id = find_element(By.ID, 'su')\nlocation = element_id.location\n```\n\n#### 获取元素位置大小($.getRect)\n\n`$.getRect` 获取元素位置大小，参数: `element`   \n\n```yaml\n- ${element_id} = $.getElement('id=su')\n- ${rect} = $.getRect(${element_id})\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement_id = find_element(By.ID, 'su')\nrect = element_id.rect\n```\n\n#### 获取元素标签($.getTagName)\n\n`$.getTagName` 获取元素标签，参数: `element`   \n\n```yaml\n- ${element_id} = $.getElement('id=su')\n- ${tag} = $.getTagName(${element_id})\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement_id = find_element(By.ID, 'su')\ntag = element_id.tag_name\n```\n\n#### 获取元素文案($.getText)\n\n`$.getText` 获取元素位置文案，参数: `element`   \n\n```yaml\n- ${element_id} = $.getElement('id=su')\n- ${text} = $.getText(${element_id})\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement_id = find_element(By.ID, 'su')\ntext = element_id.text\n```\n\n#### 获取元素属性($.getAttribute)\n\n`$.getAttribute` 获取元素位置属性，参数: `element` ， `attribute` \n\n```yaml\n- ${element_id} = $.getElement('id=su')\n- ${attribute} = $.getAttribute(${element_id}, 'value')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement_id = find_element(By.ID, 'su')\nattribute = element.get_attribute('value')\n```\n\n#### 获取元素CSS($.getCssProperty)\n\n`$.getCssProperty` 获取元素CSS，参数: `element` ， `css` \n\n```yaml\n- ${element_id} = $.getElement('id=su')\n- ${css} = $.getCssProperty(${element_id}, 'height')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nelement_id = find_element(By.ID, 'su')\ncss = element_id.value_of_css_property('height')\n```\n\n### \n\n### Cookie\n\n#### 获取所有Cookie($.getCookies)\n\n`$.getCookies` 获取所有Cookie\n\n```yaml\n- ${cookies} = $.getCookies()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ncookies = driver.get_cookies()\n```\n\n#### 获取指定Cookie($.getCookie)\n\n`$.getCookie` 获取指定Cookie，参数: `name`\n\n```yaml\n- ${cookie} = $.getCookie('BAIDUID')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ncookie = driver.get_cookie('BAIDUID')\n```\n\n#### 删除指定Cookie(deleteCookie)\n\n`deleteCookie` 删除指定Cookie，参数: `name`\n\n```yaml\n- deleteCookie('BAIDUID')\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.delete_cookie('BAIDUID')\n```\n\n#### 删除所有Cookie(_deleteAllCookies_)\n\n`deleteAllCookies` 删除所有Cookie\n\n```yaml\n- deleteAllCookies()\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\ndriver.delete_all_cookies()\n```\n\n#### 添加指定Cookie(addCookie)\n\n`addCookie` 添加指定Cookie，参数: `cookie`\n\n```yaml\n- ${add_cookie} = {'name':'ADDCOOKIE','value':'123adc'}\n- addCookie(${add_cookie})\n```\n\n对应Selenium API：\n\n```python\ndriver = webdriver.Chrome()\ndriver.get(url)\nadd_cookie = {'name':'ADDCOOKIE','value':'123adc'}\ndriver.add_cookie(add_cookie)\n```\n\n\n## Other Action\n\n### **变量(**${variables}**)**\n\n关于变量已经在开头介绍过，这里演示变量几种写法\n\n```yaml\n# 直接赋值\n- ${t1} = 1\n- ${t2} = '2'\n- ${t3} = \"3\"\n- ${t4} = True\n- ${t5} = False\n- ${t6} = None\n- ${t7} = [1,2,3]\n- ${t8} = {'key':'value'}\n# 调用方法返回\n- ${elements} = $.getElements('class=title-content-title')\n```\n\n如果变量值为列表或字典，可以指定index或者key来获取其中某一个元素的值\n\n```yaml\n- keyDown(${7}[0], ${t8}['key'])\n```\n\n### 设置全局变量(setVar)**\n\n`setVar` 设置全局变量，该变量在整个测试执行结束后才会销毁，参数： `key` ， `value` \n\n```yaml\n- setVar('key','测试')\n```\n\n### 获取全局变量($.getVar)**\n\n`$.getVar` 获取全局变量，参数： `key`\n\n```yaml\n- ${test} = $.getVar('key')\n```\n\n### 获取长度($.getLen)\n\n`$.getLen` 可以获取其他变量的长度，这对于循环是有帮助的，参数： `variables` \n\n```yaml\n- ${t7} = [1,2,3]\n- ${len} = $.getLen(${t7})\n```\n\n### 睡眠(sleep)\n\n`sleep` 在当前步骤等待指定时间，参数： `s` \n\n```yaml\n- sleep(5) # 等待5s\n```\n\n### 断言(assert)\n\n`assert` 用例中可以直接断言来检查执行是否符合预期效果，参数：`条件表达式` \n\n```yaml\n- assert 5 > 4\n- ${text} = '测试文案'\n- assert '文案' == ${text}\n- assert '文案' in '测试文案'\n```\n\n### 执行表达式($.id)\n\n`$.id` 用于执行一个表达式，参数：`表达式`\n\n```yaml\n- ${index} = $.id(1+1) # 2\n- ${str} = $.id('测试'+'文案') # 测试文案\n```\n\n### 条件语句(if、elif、else)\n\n`if` 、 `elif` 、 `else` 根据条件表达式来决定执行代码，参数：`条件表达式`\n\n```yaml\n- ${index} = $.id(1+1) # 2\n- if ${index} == 2:\n    - ${test} = 1\n  elif ${index} > 2:\n    - ${test} = 2\n  else:\n    - ${test} = 3\n```\n\n### 循环语句(while)\n\n`while` 用于循环执行程序， 参数：`条件表达式`\n`break` 在某一条件成立时，可以跳出循环\n\n```yaml\n- ${list} = [1,2,3,4]\n- ${len} = $.getLen(${list})\n- while ${len}:\n    - ${len} = $.id(${len}-1)\n    - if ${list}[${len}] == 2:\n      - break\n```\n\n### 循环语句(for)\n\n`for` 循环可以遍历任何序列的项目，如一个列表或者一个字符串， 参数： `可迭代对象` \n`break` 在某一条件成立时，可以跳出循环\n\n```yaml\n# 打开URL\n- openUrl('https://www.baidu.com')\n# 打开一个新窗口  \n- click('xpath=//*[@id=\"s-top-left\"]/a[1]')\n# 获取所有窗口句柄\n- ${all_handle} = $.getWindowHandles()\n# for 循环\n- for ${handle} in ${all_handle}:\n    # 切换窗口句柄\n    - switchToWindow(${handle})\n    - ${title} = $.getTitle()\n    - if ${title} == '百度新闻——海量中文资讯平台':\n        - break\n```\n\n# End\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Jodeee/fasttest_selenium",
    "keywords": "selenium,WEB自动化,关键字驱动",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fasttest-selenium",
    "package_url": "https://pypi.org/project/fasttest-selenium/",
    "platform": "",
    "project_url": "https://pypi.org/project/fasttest-selenium/",
    "project_urls": {
      "Homepage": "https://github.com/Jodeee/fasttest_selenium"
    },
    "release_url": "https://pypi.org/project/fasttest-selenium/0.1.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "WEB自动化快速编写工具",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9245114,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aacfe64898b3ced32d7474a74bf4daa396ae0365e560256c768ae3d04b5d7a7b",
          "md5": "23f1994cd7289a6df47a5bfa45206a18",
          "sha256": "bb11175f0e094d1fd3b9e26b5faae73562f4c040ee17788f98a851706ecda31e"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "23f1994cd7289a6df47a5bfa45206a18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24639,
        "upload_time": "2020-12-12T08:04:58",
        "upload_time_iso_8601": "2020-12-12T08:04:58.539261Z",
        "url": "https://files.pythonhosted.org/packages/aa/cf/e64898b3ced32d7474a74bf4daa396ae0365e560256c768ae3d04b5d7a7b/fasttest-selenium-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "251257f2697bb88aabc12970503ce80e0ad7653723960277aba222d036d7fa47",
          "md5": "aca340ad483cbd3125957db460f1126d",
          "sha256": "2e81af7b67b12a8b544d7dc74cb7127c09d38f386a647517815eeef807875c89"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aca340ad483cbd3125957db460f1126d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34107,
        "upload_time": "2020-12-13T05:55:23",
        "upload_time_iso_8601": "2020-12-13T05:55:23.390625Z",
        "url": "https://files.pythonhosted.org/packages/25/12/57f2697bb88aabc12970503ce80e0ad7653723960277aba222d036d7fa47/fasttest_selenium-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f03edb677a6d662827cff6cd96bb73d4a074d0f1f66c48836d3823cfd0b8e33",
          "md5": "516672a5547e00977e0b7140f1bb9ab8",
          "sha256": "de57e9dc66e6b5e389c10fd3e8d090702d0ed949a30169c069068c5ce0e86dd1"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "516672a5547e00977e0b7140f1bb9ab8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24684,
        "upload_time": "2020-12-13T05:55:26",
        "upload_time_iso_8601": "2020-12-13T05:55:26.567085Z",
        "url": "https://files.pythonhosted.org/packages/1f/03/edb677a6d662827cff6cd96bb73d4a074d0f1f66c48836d3823cfd0b8e33/fasttest-selenium-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c5058319e1dfec3f4c0872ca59e3b327646e13f1d8d29b2d2a7643a427fd359",
          "md5": "d3370fabca53e6ae96266b46d912281d",
          "sha256": "223ce339a3fa74b68279a2df4e8d2bfe30f20dd51884c9a092f91092b35c0848"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3370fabca53e6ae96266b46d912281d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 36263,
        "upload_time": "2020-12-14T14:57:26",
        "upload_time_iso_8601": "2020-12-14T14:57:26.029361Z",
        "url": "https://files.pythonhosted.org/packages/8c/50/58319e1dfec3f4c0872ca59e3b327646e13f1d8d29b2d2a7643a427fd359/fasttest_selenium-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92c898198f317b91bf9b5d1496d84a4bbd6e9187c251225508d0bf5df84a121a",
          "md5": "8359a7a717071f717a5e8988ecf1fec9",
          "sha256": "ece0f32907bb6d8f0a834ab0f096e083dcc168e3103cae81b842b5677acc3eb5"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8359a7a717071f717a5e8988ecf1fec9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29383,
        "upload_time": "2020-12-14T14:57:29",
        "upload_time_iso_8601": "2020-12-14T14:57:29.515005Z",
        "url": "https://files.pythonhosted.org/packages/92/c8/98198f317b91bf9b5d1496d84a4bbd6e9187c251225508d0bf5df84a121a/fasttest-selenium-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39694e799f72b59fe0a7d4c7d71611c44afde41f614ccd57fdb840d76f466991",
          "md5": "a3609fde5ab71934b67642df75d421b0",
          "sha256": "2f4c44a674939dca4991b1bbdaa9faafbca26502b1dd19ed8cf4d1d6bfa75ccc"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3609fde5ab71934b67642df75d421b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 36061,
        "upload_time": "2020-12-19T13:53:35",
        "upload_time_iso_8601": "2020-12-19T13:53:35.845518Z",
        "url": "https://files.pythonhosted.org/packages/39/69/4e799f72b59fe0a7d4c7d71611c44afde41f614ccd57fdb840d76f466991/fasttest_selenium-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3187cfb3b680c7a382c14750a811cd38e3f5f0113488ebe8e01095119fd69e5",
          "md5": "b725b8ef39ede22e3f83c28ea9d1c983",
          "sha256": "957b699cb4cfae1a19712afa747ce2464d795e7980bd81dab8cdb2b4eb1f6688"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b725b8ef39ede22e3f83c28ea9d1c983",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29262,
        "upload_time": "2020-12-19T13:53:44",
        "upload_time_iso_8601": "2020-12-19T13:53:44.555829Z",
        "url": "https://files.pythonhosted.org/packages/e3/18/7cfb3b680c7a382c14750a811cd38e3f5f0113488ebe8e01095119fd69e5/fasttest-selenium-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0fe95209be3e0197d0e98a039766135a68518648c2f3105af5667b91e007364",
          "md5": "4d3738103f70268d2fa20dd81355b6d7",
          "sha256": "1d40034344c44e63af468e83d3b9ebc3d414fb8cbe9dc1b6303dbdb11e5e008e"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d3738103f70268d2fa20dd81355b6d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42155,
        "upload_time": "2020-12-20T11:19:03",
        "upload_time_iso_8601": "2020-12-20T11:19:03.229696Z",
        "url": "https://files.pythonhosted.org/packages/c0/fe/95209be3e0197d0e98a039766135a68518648c2f3105af5667b91e007364/fasttest_selenium-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31fc60805c5ef623d34a2102463ba118df33c5e1f3d956efe8c4b48342a0d9db",
          "md5": "1b44dfca7c58fe9101f052bc8052386c",
          "sha256": "82b8ba4b266d16a0921364e1643838d5ab0dc16db846e34afceb39537ad0d9ca"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1b44dfca7c58fe9101f052bc8052386c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48261,
        "upload_time": "2020-12-20T11:19:06",
        "upload_time_iso_8601": "2020-12-20T11:19:06.225512Z",
        "url": "https://files.pythonhosted.org/packages/31/fc/60805c5ef623d34a2102463ba118df33c5e1f3d956efe8c4b48342a0d9db/fasttest-selenium-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "819a175dc11f394b8a850219eef7b0bf67444ca266d1a967e91c7614fbc13514",
          "md5": "066362ed71f0387a5fe52053afaea91a",
          "sha256": "b27b9f753f10254370e2b57865a8d0f7b0766ce17d814f1d84348d8468262822"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "066362ed71f0387a5fe52053afaea91a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42163,
        "upload_time": "2020-12-21T16:18:44",
        "upload_time_iso_8601": "2020-12-21T16:18:44.997793Z",
        "url": "https://files.pythonhosted.org/packages/81/9a/175dc11f394b8a850219eef7b0bf67444ca266d1a967e91c7614fbc13514/fasttest_selenium-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec739a34f11e35b2df4f37537df3a567f984064e11b77eaae7c371a7dffbec60",
          "md5": "eecf2da4566b5094b10b22879de0d8ae",
          "sha256": "0f38fb9dec05e7c76dbf7cf4f5e45074d279d4d82fe48b0c0b99c67208de1620"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "eecf2da4566b5094b10b22879de0d8ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48294,
        "upload_time": "2020-12-21T16:18:48",
        "upload_time_iso_8601": "2020-12-21T16:18:48.250053Z",
        "url": "https://files.pythonhosted.org/packages/ec/73/9a34f11e35b2df4f37537df3a567f984064e11b77eaae7c371a7dffbec60/fasttest-selenium-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ba22f3266b7f273d9c0ba97e952aafcc289bee9dad47df11350b895a0671d83",
          "md5": "e1d2b95a65f4a9a2446eb00a62bfd177",
          "sha256": "4397f050526169f154936f2fa2f312d056721ecb443ca862430213ccd7a35698"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1d2b95a65f4a9a2446eb00a62bfd177",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42236,
        "upload_time": "2020-12-29T16:28:18",
        "upload_time_iso_8601": "2020-12-29T16:28:18.259035Z",
        "url": "https://files.pythonhosted.org/packages/4b/a2/2f3266b7f273d9c0ba97e952aafcc289bee9dad47df11350b895a0671d83/fasttest_selenium-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eefb496e2ab6f219df6188e1f150490d797f50ece70c806f2956198b6f2193c5",
          "md5": "8e91522339fc815c635e93f1c62e5750",
          "sha256": "949b79ed318fe5c07b9a2daaeedfb96941d85f190260167a49178ecbe40f1e56"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "8e91522339fc815c635e93f1c62e5750",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48382,
        "upload_time": "2020-12-29T16:28:21",
        "upload_time_iso_8601": "2020-12-29T16:28:21.148584Z",
        "url": "https://files.pythonhosted.org/packages/ee/fb/496e2ab6f219df6188e1f150490d797f50ece70c806f2956198b6f2193c5/fasttest-selenium-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a96938fb31a2b6fd29edb4b555329da70b077f732257ba1a5d1e6b55d6ac6ae",
          "md5": "7ccbbb405e128cd5fb99097851bbeb3d",
          "sha256": "ed8b517329e2b20c147daac44084ce36ab76e7f5f821f258629fa53b89f4b959"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ccbbb405e128cd5fb99097851bbeb3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42602,
        "upload_time": "2020-12-30T16:25:08",
        "upload_time_iso_8601": "2020-12-30T16:25:08.132160Z",
        "url": "https://files.pythonhosted.org/packages/6a/96/938fb31a2b6fd29edb4b555329da70b077f732257ba1a5d1e6b55d6ac6ae/fasttest_selenium-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0c735e8ccb6fc3d506250bc7128a15829f50c64477b8ce14eb39ed7b5a88d3f",
          "md5": "99906370c1f4fd4bab40e66b5ecdf065",
          "sha256": "b8ec855ccb6f6da1532e10a1ca340e0ef46ea2fdac84bf04d4b1c66eb9416699"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "99906370c1f4fd4bab40e66b5ecdf065",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48476,
        "upload_time": "2020-12-30T16:25:11",
        "upload_time_iso_8601": "2020-12-30T16:25:11.922120Z",
        "url": "https://files.pythonhosted.org/packages/c0/c7/35e8ccb6fc3d506250bc7128a15829f50c64477b8ce14eb39ed7b5a88d3f/fasttest-selenium-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "475c162629a1a122fa2ebcfc0e6014ec862cecff2d12e41c410aa243c322f9c9",
          "md5": "d782330e7567f7a6882ab15c8b4a7afb",
          "sha256": "f1e2bc68f0e9761ff702e6aba858bd157e0cc1d5b3c8e9777a72c6d5f98ccc08"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d782330e7567f7a6882ab15c8b4a7afb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 44210,
        "upload_time": "2021-01-03T08:47:30",
        "upload_time_iso_8601": "2021-01-03T08:47:30.850357Z",
        "url": "https://files.pythonhosted.org/packages/47/5c/162629a1a122fa2ebcfc0e6014ec862cecff2d12e41c410aa243c322f9c9/fasttest_selenium-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36caf85185b72ffa5cbf7c1accc812892e020d747553c35a501fbd47bd5d17df",
          "md5": "ccd5a4c075ab32911d33fb50572ad510",
          "sha256": "5bd43cff0eebacfc869cf243d5d16fef4d5fb72e6295259c5031e7f8a868681d"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ccd5a4c075ab32911d33fb50572ad510",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49477,
        "upload_time": "2021-01-03T08:47:35",
        "upload_time_iso_8601": "2021-01-03T08:47:35.285225Z",
        "url": "https://files.pythonhosted.org/packages/36/ca/f85185b72ffa5cbf7c1accc812892e020d747553c35a501fbd47bd5d17df/fasttest-selenium-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e00c925af5ec0919ab0e01bb33424e351a1ea5b4603132692eef8b3df456c05d",
          "md5": "218d6785b14e235ae2902a1d3af381be",
          "sha256": "9c43ca240a39effa51ece22c70a9813f3be661514e81a0babbe64b3ed89ea55d"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "218d6785b14e235ae2902a1d3af381be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 44679,
        "upload_time": "2021-01-05T16:10:48",
        "upload_time_iso_8601": "2021-01-05T16:10:48.397488Z",
        "url": "https://files.pythonhosted.org/packages/e0/0c/925af5ec0919ab0e01bb33424e351a1ea5b4603132692eef8b3df456c05d/fasttest_selenium-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8c8ac7217df0379f759534656b8d42313558e63011e9dbfa44cbe1dee51a6e6",
          "md5": "b3ae48424a29e8b6154b5fb5655d00d1",
          "sha256": "5c5037c07e687c92fb6f67eb22c20a2553abf9d808bfc9ab154a98b1a83473f7"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b3ae48424a29e8b6154b5fb5655d00d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49580,
        "upload_time": "2021-01-05T16:10:50",
        "upload_time_iso_8601": "2021-01-05T16:10:50.250223Z",
        "url": "https://files.pythonhosted.org/packages/e8/c8/ac7217df0379f759534656b8d42313558e63011e9dbfa44cbe1dee51a6e6/fasttest-selenium-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3ee525bec333433e2e2356a20fa38814772802ea61c5e93028a39c690b29446",
          "md5": "ce9af6bb43f8b55d6df7271bedb98356",
          "sha256": "f3bfe798f902e19af717c393c9e08963594e0fae14d53319010643271fec88cd"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce9af6bb43f8b55d6df7271bedb98356",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 44755,
        "upload_time": "2021-01-07T15:53:57",
        "upload_time_iso_8601": "2021-01-07T15:53:57.296673Z",
        "url": "https://files.pythonhosted.org/packages/d3/ee/525bec333433e2e2356a20fa38814772802ea61c5e93028a39c690b29446/fasttest_selenium-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61610c38ef5b3e0e7b43916207ee5ff522f5bac608aeb9abdc7c91e612a15de5",
          "md5": "3ad5379109a1c83e4459ef0cde4fca18",
          "sha256": "290fc6d90c38b3ac9477b8e1a57bfca000a00cc2dbd1c87553323818df13e1cf"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3ad5379109a1c83e4459ef0cde4fca18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49595,
        "upload_time": "2021-01-07T15:54:02",
        "upload_time_iso_8601": "2021-01-07T15:54:02.405565Z",
        "url": "https://files.pythonhosted.org/packages/61/61/0c38ef5b3e0e7b43916207ee5ff522f5bac608aeb9abdc7c91e612a15de5/fasttest-selenium-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b0dd2a2d8d35be55c47aa5987e4b0e14b4c71c6abe20462e70ca35c5f0a9cb3",
          "md5": "7a0d7a7f2dce2d99ec0e64d777a17826",
          "sha256": "35fd53b7614cf770afafde9027f2291ff66532b0f277f7fbf00f55dca33d8191"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a0d7a7f2dce2d99ec0e64d777a17826",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 45025,
        "upload_time": "2021-01-10T05:04:05",
        "upload_time_iso_8601": "2021-01-10T05:04:05.441939Z",
        "url": "https://files.pythonhosted.org/packages/8b/0d/d2a2d8d35be55c47aa5987e4b0e14b4c71c6abe20462e70ca35c5f0a9cb3/fasttest_selenium-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c911811a2f2198f8cc388c8640bdc27d58f3a57bb341f021b55f80eeadb48efc",
          "md5": "06d5fd23d0be16f24f5ddb3c847f8321",
          "sha256": "b7c89f5937f5246940fd4ec34656e78af2bf3ab580b4b2e03bcdf877930b1e54"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "06d5fd23d0be16f24f5ddb3c847f8321",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49879,
        "upload_time": "2021-01-10T05:04:07",
        "upload_time_iso_8601": "2021-01-10T05:04:07.930163Z",
        "url": "https://files.pythonhosted.org/packages/c9/11/811a2f2198f8cc388c8640bdc27d58f3a57bb341f021b55f80eeadb48efc/fasttest-selenium-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00dd9fd12a44d1e0f33f4da949ab06ba6a4b4b212dde63d9c1126190ade28991",
          "md5": "35dbabede563e6b4898ef8e9be603c40",
          "sha256": "08c884642218562ce7e5a18686b45e6b096f449032b88adf4209a17ca184148f"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35dbabede563e6b4898ef8e9be603c40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 45028,
        "upload_time": "2021-01-11T14:19:56",
        "upload_time_iso_8601": "2021-01-11T14:19:56.496929Z",
        "url": "https://files.pythonhosted.org/packages/00/dd/9fd12a44d1e0f33f4da949ab06ba6a4b4b212dde63d9c1126190ade28991/fasttest_selenium-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c21c26950d81546c1c8592892bf040956f79561cfe2e786b7640e98c516b4f5f",
          "md5": "97a664175a48a1bf74c93465e698b7df",
          "sha256": "d6bbef2db8afaa008bebfb36963eaa310757e3025be7127ab20749e399d825e7"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "97a664175a48a1bf74c93465e698b7df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49876,
        "upload_time": "2021-01-11T14:20:01",
        "upload_time_iso_8601": "2021-01-11T14:20:01.006791Z",
        "url": "https://files.pythonhosted.org/packages/c2/1c/26950d81546c1c8592892bf040956f79561cfe2e786b7640e98c516b4f5f/fasttest-selenium-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c07cd493e03db2452bcb52d6dd5a1af4a03c1092e46d9663d2c0f258e30c670",
          "md5": "57ccd245bb496e502a553c5f8e90189d",
          "sha256": "1c6e25ce23f92f4d633e5d1ff33232791b87f3c3f8d4bc18d6b0376b2ce09013"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57ccd245bb496e502a553c5f8e90189d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 45151,
        "upload_time": "2021-01-17T04:50:59",
        "upload_time_iso_8601": "2021-01-17T04:50:59.525316Z",
        "url": "https://files.pythonhosted.org/packages/3c/07/cd493e03db2452bcb52d6dd5a1af4a03c1092e46d9663d2c0f258e30c670/fasttest_selenium-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76bb11e5736aad9dba1efc002ae242a35dcf0a9329f46148627a13f41fb9e220",
          "md5": "4d6f9856a330c86500e0a6499cff1110",
          "sha256": "30bd34cd109b304d11aa9c7f94ecc4db2d0307427cb45a5716f14cb46dfadc58"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4d6f9856a330c86500e0a6499cff1110",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49973,
        "upload_time": "2021-01-17T04:51:03",
        "upload_time_iso_8601": "2021-01-17T04:51:03.462670Z",
        "url": "https://files.pythonhosted.org/packages/76/bb/11e5736aad9dba1efc002ae242a35dcf0a9329f46148627a13f41fb9e220/fasttest-selenium-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a49c0aaaa95c58591a088c90a4943165f1b2cc74de2915cd38f6fc43d4c44b30",
          "md5": "b97934d562069ab3c4b5217a10a9870c",
          "sha256": "369222e33599767e2b78475dd264f400b63b19bf99a6a53c37cfac7990c0904e"
        },
        "downloads": -1,
        "filename": "fasttest_selenium-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b97934d562069ab3c4b5217a10a9870c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 45753,
        "upload_time": "2021-01-27T15:06:05",
        "upload_time_iso_8601": "2021-01-27T15:06:05.362784Z",
        "url": "https://files.pythonhosted.org/packages/a4/9c/0aaaa95c58591a088c90a4943165f1b2cc74de2915cd38f6fc43d4c44b30/fasttest_selenium-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "315907784992988d65490639762c3f4d68adca7cfefa1109547600f2c67d72a9",
          "md5": "e8e47ab960922e3e4a8154acc06eb035",
          "sha256": "d5f87dc0cdeb70f0f89731c6df6a81d52cbb07656baa29966daa2d106cb564d4"
        },
        "downloads": -1,
        "filename": "fasttest-selenium-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e8e47ab960922e3e4a8154acc06eb035",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50582,
        "upload_time": "2021-01-27T15:06:07",
        "upload_time_iso_8601": "2021-01-27T15:06:07.497580Z",
        "url": "https://files.pythonhosted.org/packages/31/59/07784992988d65490639762c3f4d68adca7cfefa1109547600f2c67d72a9/fasttest-selenium-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a49c0aaaa95c58591a088c90a4943165f1b2cc74de2915cd38f6fc43d4c44b30",
        "md5": "b97934d562069ab3c4b5217a10a9870c",
        "sha256": "369222e33599767e2b78475dd264f400b63b19bf99a6a53c37cfac7990c0904e"
      },
      "downloads": -1,
      "filename": "fasttest_selenium-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b97934d562069ab3c4b5217a10a9870c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 45753,
      "upload_time": "2021-01-27T15:06:05",
      "upload_time_iso_8601": "2021-01-27T15:06:05.362784Z",
      "url": "https://files.pythonhosted.org/packages/a4/9c/0aaaa95c58591a088c90a4943165f1b2cc74de2915cd38f6fc43d4c44b30/fasttest_selenium-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "315907784992988d65490639762c3f4d68adca7cfefa1109547600f2c67d72a9",
        "md5": "e8e47ab960922e3e4a8154acc06eb035",
        "sha256": "d5f87dc0cdeb70f0f89731c6df6a81d52cbb07656baa29966daa2d106cb564d4"
      },
      "downloads": -1,
      "filename": "fasttest-selenium-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "e8e47ab960922e3e4a8154acc06eb035",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 50582,
      "upload_time": "2021-01-27T15:06:07",
      "upload_time_iso_8601": "2021-01-27T15:06:07.497580Z",
      "url": "https://files.pythonhosted.org/packages/31/59/07784992988d65490639762c3f4d68adca7cfefa1109547600f2c67d72a9/fasttest-selenium-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}