{
  "info": {
    "author": "FactSet Research Systems",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<img alt=\"FactSet\" src=\"https://www.factset.com/hubfs/Assets/images/factset-logo.svg\" height=\"56\" width=\"290\">\n\n# Intraday Tick History client library for Python\n\n[![PyPi](https://img.shields.io/pypi/v/fds.sdk.IntradayTickHistory)](https://pypi.org/project/fds.sdk.IntradayTickHistory/)\n[![Apache-2 license](https://img.shields.io/badge/license-Apache2-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\n\n<p>FactSetâ€™s Tick History provides cost-effective access to real-time and delayed global exchange data. Proprietary technology normalizes over 200 global exchanges and 19 tick history fields. Asset types integrated include equities, futures, options, fixed income, mutual funds, ETFs, indices, commodities, and FX rates.</p><p>Tick History provides dynamic access to tick data for a specific security intra-day or historically via standard HTTPS protocol. History is available for all quotes and trades for a trailing 6 months or 1-year, respectively. Quotes and trade data for Options is available for 30 days. Tick History data is also available in a separate end-of-day feed.</p>\n \n\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 1.0.0\n- Package version: 0.20.0\n- Build package: org.openapitools.codegen.languages.PythonClientCodegen\n\n## Requirements\n\n* Python >= 3.6\n\n## Installation\n\n### Poetry\n\n```shell\npoetry add fds.sdk.utils fds.sdk.IntradayTickHistory\n```\n\n### pip\n\n```shell\npip install fds.sdk.utils fds.sdk.IntradayTickHistory\n```\n\n## Usage\n\n1. [Generate authentication credentials](../../../../README.md#authentication).\n2. Setup Python environment.\n   1. Install and activate python 3.6+. If you're using [pyenv](https://github.com/pyenv/pyenv):\n\n      ```sh\n      pyenv install 3.9.7\n      pyenv shell 3.9.7\n      ```\n\n   2. (optional) [Install poetry](https://python-poetry.org/docs/#installation).\n3. [Install dependencies](#installation).\n4. Run the following:\n\n```python\n\nfrom fds.sdk.utils.authentication import ConfidentialClient\nimport fds.sdk.IntradayTickHistory\nfrom fds.sdk.IntradayTickHistory.api import first_trade_api\nfrom fds.sdk.IntradayTickHistory.model.tickhistory_response import TickhistoryResponse\nfrom pprint import pprint\n\n# See configuration.py for a list of all supported configuration parameters.\n\n# Examples for each supported authentication method are below,\n# choose one that satisfies your use case.\n\n# (Preferred) OAuth 2.0: FactSetOAuth2\n# See https://github.com/FactSet/enterprise-sdk#oauth-20\n# for information on how to create the app-config.json file\n# See https://github.com/FactSet/enterprise-sdk-utils-python#authentication\n# for more information on using the ConfidentialClient class\nconfiguration = fds.sdk.IntradayTickHistory.Configuration(\n    fds_oauth_client=ConfidentialClient('/path/to/app-config.json')\n)\n\n# Basic authentication: FactSetApiKey\n# See https://github.com/FactSet/enterprise-sdk#api-key\n# for information how to create an API key\n# configuration = fds.sdk.IntradayTickHistory.Configuration(\n#     username='USERNAME-SERIAL',\n#     password='API-KEY'\n# )\n\n# Enter a context with an instance of the API client\nwith fds.sdk.IntradayTickHistory.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = first_trade_api.FirstTradeApi(api_client)\n    id = \"id_example\" # str | Requested symbol or security. The symbol can be a FactSet exchange symbol, CUSIP, or SEDOL. **NOTE**: Only one identifier can be requested per request.<P>**TRY IT OUT** - Choose One from - BABA-USA,WALMEX-MX,7203-TKS,VOD-LON,NPN-JSE,MABAX,NZF,SPY-USA,AGG-USA,GLD-USA,AOR-USA,MNA-USA,UUP-USA,SP50-SPX,ESX-STX,XAO-ASX,WD-MSX,NG00-USA,GC00-USA,CC00-USA,C00-USA,FC00-USA,ER00-USA,EURUSD-FX1,USDMXN-FX1,AUDJPY-FX1,EURCZK-FX1,USDILS-FX1,USDZAR-FX1,US10YY-TU1,FDS#190621C00145000-USA,FDS#190621P00145000-USA\n    req_id = \"req_id_example\" # str | Request Identification String. Can be used by the application to keep track of requests. The id is not used by this service, however, it is included in the XML response. (optional)\n    start_date = \"start_date_example\" # str | This is the start date for the Snapshot History. Requests should be made in the format YYYYMMDD Default is current business day. Field can be sd or date. TRY IT OUT Cannot use current day. (optional)\n    start_time = \"040000\" # str | This is the start time for the snapshot history requested. Requests should be made in a **HHMMSSS** format.Range from 000000 - 235959. **TRY IT OUT** Cannot use current day (optional) (default to \"040000\")\n    format = \"XML\" # str | The format of the output file. TRY IT OUT Choose from JSON, CSV, CSV_NO_HEADER (optional) (default to \"XML\")\n    include_request = \"false\" # str | Flag to include request id and key in the CSV output. (optional) (default to \"false\")\n    dataset = \"\" # str | Decides what type of trades to return, default is all trades and quotes, alternatively charting can be selected which will filter out unofficial trades. (optional)\n\n    # Get response\n    try:\n        # Request returns data for the first trade (official and unofficial) after the specified time\n        api_response = api_instance.tick_history_firsttrade_get(id, req_id=req_id, start_date=start_date, start_time=start_time, format=format, include_request=include_request, dataset=dataset)\n        pprint(api_response)\n    except fds.sdk.IntradayTickHistory.ApiException as e:\n        print(\"Exception when calling FirstTradeApi->tick_history_firsttrade_get: %s\\n\" % e)\n\n    # Get response, http status code and response headers\n    # try:\n    #     # Request returns data for the first trade (official and unofficial) after the specified time\n    #     api_response, http_status_code, response_headers = api_instance.tick_history_firsttrade_get_with_http_info(id, req_id=req_id, start_date=start_date, start_time=start_time, format=format, include_request=include_request, dataset=dataset)\n    #     pprint(api_response)\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.IntradayTickHistory.ApiException as e:\n    #     print(\"Exception when calling FirstTradeApi->tick_history_firsttrade_get: %s\\n\" % e)\n\n    # Get response asynchronous\n    # try:\n    #     # Request returns data for the first trade (official and unofficial) after the specified time\n    #     async_result = api_instance.tick_history_firsttrade_get_async(id, req_id=req_id, start_date=start_date, start_time=start_time, format=format, include_request=include_request, dataset=dataset)\n    #     api_response = async_result.get()\n    #     pprint(api_response)\n    # except fds.sdk.IntradayTickHistory.ApiException as e:\n    #     print(\"Exception when calling FirstTradeApi->tick_history_firsttrade_get: %s\\n\" % e)\n\n    # Get response, http status code and response headers asynchronous\n    # try:\n    #     # Request returns data for the first trade (official and unofficial) after the specified time\n    #     async_result = api_instance.tick_history_firsttrade_get_with_http_info_async(id, req_id=req_id, start_date=start_date, start_time=start_time, format=format, include_request=include_request, dataset=dataset)\n    #     api_response, http_status_code, response_headers = async_result.get()\n    #     pprint(api_response)\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.IntradayTickHistory.ApiException as e:\n    #     print(\"Exception when calling FirstTradeApi->tick_history_firsttrade_get: %s\\n\" % e)\n\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://api-sandbox.factset.com*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*FirstTradeApi* | [**tick_history_firsttrade_get**](docs/FirstTradeApi.md#tick_history_firsttrade_get) | **GET** /TickHistory/firsttrade | Request returns data for the first trade (official and unofficial) after the specified time\n*LastTradeApi* | [**tick_history_lasttrade_get**](docs/LastTradeApi.md#tick_history_lasttrade_get) | **GET** /TickHistory/lasttrade | Request returns data for the last trade and associated quotes before the specified time\n*QuoteAtTimeApi* | [**tick_history_qat_get**](docs/QuoteAtTimeApi.md#tick_history_qat_get) | **GET** /TickHistory/qat | Request returns a quote at the specified time\n*TickHistoryApi* | [**get_tick_history**](docs/TickHistoryApi.md#get_tick_history) | **GET** /TickHistory/history | Tick History service returns trade data and associated quotes for a client specified interval and time period\n*TradesAtTimeApi* | [**tick_history_tradesattime_get**](docs/TradesAtTimeApi.md#tick_history_tradesattime_get) | **GET** /TickHistory/tradesattime | Request returns the before and after trade data along with the associated quotes for the specified time\n\n\n## Documentation For Models\n\n - [Fields](docs/Fields.md)\n - [Intervals](docs/Intervals.md)\n - [Specialfield](docs/Specialfield.md)\n - [TickhistoryResponse](docs/TickhistoryResponse.md)\n\n\n## Documentation For Authorization\n\n\n## FactSetApiKey\n\n- **Type**: HTTP basic authentication\n\n\n## FactSetOAuth2\n\n- **Type**: OAuth\n- **Flow**: application\n- **Authorization URL**: \n- **Scopes**: N/A\n\n\n## Notes for Large OpenAPI documents\nIf the OpenAPI document is large, imports in fds.sdk.IntradayTickHistory.apis and fds.sdk.IntradayTickHistory.models may fail with a\nRecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:\n\nSolution 1:\nUse specific imports for apis and models like:\n- `from fds.sdk.IntradayTickHistory.api.default_api import DefaultApi`\n- `from fds.sdk.IntradayTickHistory.model.pet import Pet`\n\nSolution 2:\nBefore importing the package, adjust the maximum recursion limit as shown below:\n```\nimport sys\nsys.setrecursionlimit(1500)\nimport fds.sdk.IntradayTickHistory\nfrom fds.sdk.IntradayTickHistory.apis import *\nfrom fds.sdk.IntradayTickHistory.models import *\n```\n\n## Contributing\n\nPlease refer to the [contributing guide](../../../../CONTRIBUTING.md).\n\n## Copyright\n\nCopyright 2022 FactSet Research Systems Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/IntradayTickHistory/v1",
    "keywords": "FactSet,API,SDK",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fds.sdk.IntradayTickHistory",
    "package_url": "https://pypi.org/project/fds.sdk.IntradayTickHistory/",
    "platform": null,
    "project_url": "https://pypi.org/project/fds.sdk.IntradayTickHistory/",
    "project_urls": {
      "Homepage": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/IntradayTickHistory/v1"
    },
    "release_url": "https://pypi.org/project/fds.sdk.IntradayTickHistory/0.20.0/",
    "requires_dist": [
      "urllib3 (>=1.25.3)",
      "python-dateutil",
      "fds.sdk.utils (>=1.0.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Intraday Tick History client library for Python",
    "version": "0.20.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13923017,
  "releases": {
    "0.20.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30b111cc2189319bf90d07ac1a9d514d475968eefc746ad84eeb5e1649b7ccd1",
          "md5": "8278eedff07b8d3df279009e25146f49",
          "sha256": "d28e73f8f4fd7e7babdc161bc856ef872278c35ae341dbd0ff7ef4854f21ec53"
        },
        "downloads": -1,
        "filename": "fds.sdk.IntradayTickHistory-0.20.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8278eedff07b8d3df279009e25146f49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 78484,
        "upload_time": "2022-05-24T16:06:12",
        "upload_time_iso_8601": "2022-05-24T16:06:12.871750Z",
        "url": "https://files.pythonhosted.org/packages/30/b1/11cc2189319bf90d07ac1a9d514d475968eefc746ad84eeb5e1649b7ccd1/fds.sdk.IntradayTickHistory-0.20.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3dd22910dd0fa299a1cce0a55acea7acde74f9eed53e54149a4b3d6d78702fa",
          "md5": "3d3a93c8e15d5d5a9b2a65cc1132eed6",
          "sha256": "658f873031c0defb2e4b356f8d609e62ebf1772e2f4dc7bde3b30f0275ad52f1"
        },
        "downloads": -1,
        "filename": "fds.sdk.IntradayTickHistory-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d3a93c8e15d5d5a9b2a65cc1132eed6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 71656,
        "upload_time": "2022-02-02T14:39:22",
        "upload_time_iso_8601": "2022-02-02T14:39:22.515124Z",
        "url": "https://files.pythonhosted.org/packages/f3/dd/22910dd0fa299a1cce0a55acea7acde74f9eed53e54149a4b3d6d78702fa/fds.sdk.IntradayTickHistory-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ee6204223b9c8c888ac9031ec5852c8f9cf46ba6f2f4b7021d7634afb0bb3ae",
          "md5": "c30d3cbdf9ac68f6127536a807877a7e",
          "sha256": "48757ddac6028dcf5863a4f4be01240284ef0ee71be50d7b8030a229e563b115"
        },
        "downloads": -1,
        "filename": "fds.sdk.IntradayTickHistory-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c30d3cbdf9ac68f6127536a807877a7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 74632,
        "upload_time": "2022-02-14T21:42:50",
        "upload_time_iso_8601": "2022-02-14T21:42:50.237925Z",
        "url": "https://files.pythonhosted.org/packages/7e/e6/204223b9c8c888ac9031ec5852c8f9cf46ba6f2f4b7021d7634afb0bb3ae/fds.sdk.IntradayTickHistory-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30b111cc2189319bf90d07ac1a9d514d475968eefc746ad84eeb5e1649b7ccd1",
        "md5": "8278eedff07b8d3df279009e25146f49",
        "sha256": "d28e73f8f4fd7e7babdc161bc856ef872278c35ae341dbd0ff7ef4854f21ec53"
      },
      "downloads": -1,
      "filename": "fds.sdk.IntradayTickHistory-0.20.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8278eedff07b8d3df279009e25146f49",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 78484,
      "upload_time": "2022-05-24T16:06:12",
      "upload_time_iso_8601": "2022-05-24T16:06:12.871750Z",
      "url": "https://files.pythonhosted.org/packages/30/b1/11cc2189319bf90d07ac1a9d514d475968eefc746ad84eeb5e1649b7ccd1/fds.sdk.IntradayTickHistory-0.20.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}