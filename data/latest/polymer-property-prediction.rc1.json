{
  "info": {
    "author": "flowdisc@br.ibm.com",
    "author_email": "flowdisc@br.ibm.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Polymer Property Prediction\n\nA Python Library that calculates the physical properties of molecules based on their SMILES representations.\n\n## Dependencies\n\n* [NumPy](https://numpy.org) is the fundamental package for scientific computing with Python.\n* [RDKit](https://www.rdkit.org/) is a collection of cheminformatics and machine-learning software written in C++ and Python.\n* [Pandas](https://pandas.pydata.org/) is an open source data analysis and manipulation tool, built on top of the Python programming language.\n\n## Developer tips\n\nThese tips are not mandatory, but they are a sure way of helping you develop the code while maintaining consistency with the current style, structure and formatting choices.\n\n### Coding style guide\n\nWe recommend these tools to ensure code style compatibility.\n\n* [autopep8](https://pypi.org/project/autopep8/) automatically formats Python code to conform to the PEP8 style guide.\n* [Flake8](https://flake8.pycqa.org) is your tool for style guide enforcement.\n\n## Installation\n\n### Option 1: Using `setup.py`\n\nClone `polymer_property_prediction` repository if you haven't done it yet.\n\nGo to `polymer_property_prediction`'s root folder, there you will find `setup.py` file, and run the command below:\n\n```Shell\npython setup.py install\n```\n\n### Option 2: Using pip/pipenv to install from Pypi.org\n\nIf you intend to use `pipenv`, please add the following to your `Pipfile`:\n\n```Pipfile\n[[source]]\nurl = \"https://pypi.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[packages]\npolymer_property_prediction = \"*\"\n```\n\nIf you intend to use `pip`, please run the command below:\n\n```Shell\npip install polymer_property_prediction\n```\n\n### Option 3: Using pip to install directly from the GitHub repo\n\nYou can run\n\n```Shell\npip install git+https://github.com/IBM/polymer_property_prediction.git\n```\n\nand then you will be prompted to enter your GitHub username and password/access token.\n\nIf you already have a SSH key configured, you can run\n\n```Shell\npip install git+ssh://git@github.com/IBM/polymer_property_prediction.git\n```\n\n### Option 4: Using pip/pipenv to install from Artifactory\n\nLog into Artifactory and access your user profile. There you will find your API key and username. Then export your credentials as environment variables for later use in the installation process.\n\n```Shell\nexport ARTIFACTORY_USERNAME=username@email.com\nexport ARTIFACTORY_API_KEY=your-api-key\nexport ARTIFACTORY_URL=your-artifactory-url\n```\n\nIf you intend to use `pipenv`, please add the following to your `Pipfile`:\n\n```Pipfile\n[[source]]\nurl = \"https://$ARTIFACTORY_USERNAME:$ARTIFACTORY_API_KEY@$ARTIFACTORY_URL\"\nverify_ssl = true\nname = \"artifactory\"\n\n[packages]\npolymer_property_prediction = {version=\"*\", index=\"artifactory\"}\n```\n\nIf you intend to use `pip`, please run the command below:\n\n```Shell\npip install polymer_property_prediction --extra-index-url=https://$ARTIFACTORY_USERNAME:$ARTIFACTORY_API_KEY@$ARTIFACTORY_URL\n```\n\n## Usage example\n\nThis is a small example of how to use our package:\n\n```Python\n>>> from polymer_property_prediction import polymer_properties_from_smiles as ppf\n>>> smiles_opsin = '[*:1]CC(=O)O[*:2]'\n>>> ppf.ConvertOpsinToMolSmiles(smiles_opsin)\n'CC(=O)O'\n>>> ppf.HeadTailAtoms(smiles_opsin)\narray([0, 3], dtype=int32)\n>>> smiles_mol = ppf.ConvertOpsinToMolSmiles(smiles_opsin)\n>>> mol = ppf.Chem.MolFromSmiles(smiles_mol)\n```\n\nYou can also access our [tutorial](polymer_property_prediction_tutorial.ipynb).\n\n## Python package deployment\n\n### Deploying to Artifactory\n\nWe have an automated CI/CD pipeline running on TravisCI that takes every single `git push` event and executes the build/test/deploy instructions in the `.travis.yml`. If you are deploying `master` or `release` branches, a Python package will be generated and published to a private Pypi registry on Artifactory.\n\n### Deploying to Pypi\n\nWe have an automated CI/CD pipeline running on TravisCI that takes every single `git push` event and executes the build/test/deploy instructions in the `.travis.yml`. If you are deploying `main` branch, a Python package will be generated and published to Pypi.org registry.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/IBM/polymer_property_prediction",
    "keywords": "",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "polymer-property-prediction",
    "package_url": "https://pypi.org/project/polymer-property-prediction/",
    "platform": null,
    "project_url": "https://pypi.org/project/polymer-property-prediction/",
    "project_urls": {
      "Homepage": "https://github.com/IBM/polymer_property_prediction"
    },
    "release_url": "https://pypi.org/project/polymer-property-prediction/1.0.11/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "Library to calculate the physical properties of molecules based on their SMILES representations",
    "version": "1.0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13737147,
  "releases": {
    "1.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66052b3efed7b03e489278c39ca67fc58e67099faacc0cb3c6b7d83e771f416b",
          "md5": "831314a9aa70604de740cf06294f3243",
          "sha256": "d32cfdb363a27c61190701045488e925c4a6fcd90cd7e182ec229fea4e32b1a9"
        },
        "downloads": -1,
        "filename": "polymer_property_prediction-1.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "831314a9aa70604de740cf06294f3243",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 30776,
        "upload_time": "2022-05-06T20:06:38",
        "upload_time_iso_8601": "2022-05-06T20:06:38.000743Z",
        "url": "https://files.pythonhosted.org/packages/66/05/2b3efed7b03e489278c39ca67fc58e67099faacc0cb3c6b7d83e771f416b/polymer_property_prediction-1.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66052b3efed7b03e489278c39ca67fc58e67099faacc0cb3c6b7d83e771f416b",
        "md5": "831314a9aa70604de740cf06294f3243",
        "sha256": "d32cfdb363a27c61190701045488e925c4a6fcd90cd7e182ec229fea4e32b1a9"
      },
      "downloads": -1,
      "filename": "polymer_property_prediction-1.0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "831314a9aa70604de740cf06294f3243",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 30776,
      "upload_time": "2022-05-06T20:06:38",
      "upload_time_iso_8601": "2022-05-06T20:06:38.000743Z",
      "url": "https://files.pythonhosted.org/packages/66/05/2b3efed7b03e489278c39ca67fc58e67099faacc0cb3c6b7d83e771f416b/polymer_property_prediction-1.0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}