{
  "info": {
    "author": "FactSet Research Systems",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![FactSet](https://raw.githubusercontent.com/factset/enterprise-sdk/main/docs/images/factset-logo.svg)](https://www.factset.com)\n\n# Optimization Engine API (Multi-period) client library for Python\n\n[![PyPi](https://img.shields.io/pypi/v/fds.sdk.OptimizationEngineAPIMultiperiod)](https://pypi.org/project/fds.sdk.OptimizationEngineAPIMultiperiod/)\n[![Apache-2 license](https://img.shields.io/badge/license-Apache2-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\nNo description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 1\n- Package version: 0.21.2\n- Build package: org.openapitools.codegen.languages.PythonClientCodegen\n\n## Requirements\n\n* Python >= 3.7\n\n## Installation\n\n### Poetry\n\n```shell\npoetry add fds.sdk.utils fds.sdk.OptimizationEngineAPIMultiperiod\n```\n\n### pip\n\n```shell\npip install fds.sdk.utils fds.sdk.OptimizationEngineAPIMultiperiod\n```\n\n## Usage\n\n1. [Generate authentication credentials](../../../../README.md#authentication).\n2. Setup Python environment.\n   1. Install and activate python 3.7+. If you're using [pyenv](https://github.com/pyenv/pyenv):\n\n      ```sh\n      pyenv install 3.9.7\n      pyenv shell 3.9.7\n      ```\n\n   2. (optional) [Install poetry](https://python-poetry.org/docs/#installation).\n3. [Install dependencies](#installation).\n4. Run the following:\n\n```python\nfrom fds.sdk.utils.authentication import ConfidentialClient\n\nimport fds.sdk.OptimizationEngineAPIMultiperiod\nfrom fds.sdk.OptimizationEngineAPIMultiperiod.api import default_api\nfrom fds.sdk.OptimizationEngineAPIMultiperiod.models import *\nfrom dateutil.parser import parse as dateutil_parser\nfrom pprint import pprint\n\n# See configuration.py for a list of all supported configuration parameters.\n\n# Examples for each supported authentication method are below,\n# choose one that satisfies your use case.\n\n# (Preferred) OAuth 2.0: FactSetOAuth2\n# See https://github.com/FactSet/enterprise-sdk#oauth-20\n# for information on how to create the app-config.json file\n# See https://github.com/FactSet/enterprise-sdk-utils-python#authentication\n# for more information on using the ConfidentialClient class\nconfiguration = fds.sdk.OptimizationEngineAPIMultiperiod.Configuration(\n    fds_oauth_client=ConfidentialClient('/path/to/app-config.json')\n)\n\n# Basic authentication: FactSetApiKey\n# See https://github.com/FactSet/enterprise-sdk#api-key\n# for information how to create an API key\n# configuration = fds.sdk.OptimizationEngineAPIMultiperiod.Configuration(\n#     username='USERNAME-SERIAL',\n#     password='API-KEY'\n# )\n\n# Enter a context with an instance of the API client\nwith fds.sdk.OptimizationEngineAPIMultiperiod.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = default_api.DefaultApi(api_client)\n    multi_period_input = OptimizerInputsMultiPeriodInput(\n        strategy=OptimizerInputsMultiPeriodStrategy(\n            objective=OptimizerInputsMultiPeriodObjective(\n                factor_exposure=[\n                    OptimizerInputsMPFactorExposureTerm(\n                        term=OptimizerInputsFactorExposureTerm(\n                            name=\"name_example\",\n                            multiplier=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            factors=[\n                                \"factors_example\",\n                            ],\n                            direction=OptimizerInputsEObjectiveTermDirectionEnum(0),\n                            rel_to_benchmark=True,\n                            benchmark_index=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                volatility=[\n                    OptimizerInputsMPVolatilityTerm(\n                        term=OptimizerInputsVolatilityTerm(\n                            name=\"name_example\",\n                            multiplier=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            direction=OptimizerInputsEObjectiveTermDirectionEnum(0),\n                            risk_type=OptimizerInputsEObjectiveRiskTypeEnum(0),\n                            factors=[\n                                \"factors_example\",\n                            ],\n                            active_risk=True,\n                            benchmark_index=1,\n                        ),\n                        term_on=OptimizerInputsBoundSourceEnum(0),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                general_linear=[\n                    OptimizerInputsMPGeneralLinearTerm(\n                        term=OptimizerInputsGeneralLinearTerm(\n                            name=\"name_example\",\n                            multiplier=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            attribute=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            direction=OptimizerInputsEObjectiveTermDirectionEnum(0),\n                            method=OptimizerInputsEAggregationMethodEnum(0),\n                            rel_to_benchmark=True,\n                            benchmark_index=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                expected_return=[\n                    OptimizerInputsMPExpectedReturnTerm(\n                        term=OptimizerInputsExpectedReturnTerm(\n                            name=\"name_example\",\n                            multiplier=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            return_values=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            direction=OptimizerInputsEObjectiveTermDirectionEnum(0),\n                            use_alpha=True,\n                            rel_to_benchmark=True,\n                            benchmark_index=1,\n                        ),\n                        term_on=OptimizerInputsBoundSourceEnum(0),\n                        annualization_factor=3.14,\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                sensitivity=[\n                    OptimizerInputsMPSensitivityTerm(\n                        term=OptimizerInputsSensitivityTerm(\n                            name=\"name_example\",\n                            multiplier=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            sensitivity_attribute=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            direction=OptimizerInputsEObjectiveTermDirectionEnum(0),\n                            rel_to_benchmark=True,\n                            benchmark_index=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                objective_ratio=OptimizerInputsMPObjectiveRatioTerm(\n                    sharpe_ratio=OptimizerInputsSharpeRatioTerm(\n                        name=\"name_example\",\n                        multiplier=OptimizerInputsValue(\n                            value_type=OptimizerInputsEValueTypeEnum(0),\n                            raw_value=3.14,\n                            ref_index=1,\n                        ),\n                        risk_free_rate=OptimizerInputsValue(\n                            value_type=OptimizerInputsEValueTypeEnum(0),\n                            raw_value=3.14,\n                            ref_index=1,\n                        ),\n                        direction=OptimizerInputsEObjectiveTermDirectionEnum(0),\n                        active_risk=True,\n                        benchmark_index=1,\n                    ),\n                    starr=OptimizerInputsSTARRTerm(\n                        name=\"name_example\",\n                        multiplier=OptimizerInputsValue(\n                            value_type=OptimizerInputsEValueTypeEnum(0),\n                            raw_value=3.14,\n                            ref_index=1,\n                        ),\n                        risk_free_rate=OptimizerInputsValue(\n                            value_type=OptimizerInputsEValueTypeEnum(0),\n                            raw_value=3.14,\n                            ref_index=1,\n                        ),\n                        direction=OptimizerInputsEObjectiveTermDirectionEnum(0),\n                        confidence_level=3.14,\n                        use_centered_etl=True,\n                        active_risk=True,\n                        benchmark_index=1,\n                    ),\n                    diversification_ratio=OptimizerInputsDiversificationRatioTerm(\n                        name=\"name_example\",\n                        multiplier=OptimizerInputsValue(\n                            value_type=OptimizerInputsEValueTypeEnum(0),\n                            raw_value=3.14,\n                            ref_index=1,\n                        ),\n                        direction=OptimizerInputsEObjectiveTermDirectionEnum(0),\n                    ),\n                    on_periods=OptimizerInputsOnPeriods(\n                        periods=[\n                            1,\n                        ],\n                    ),\n                    across_periods=OptimizerInputsAcrossPeriods(\n                        start_period=1,\n                        end_period=1,\n                        rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                            frequency=1,\n                            method=OptimizerInputsRollingMethodEnum(0),\n                        ),\n                    ),\n                ),\n                tail_risk=[\n                    OptimizerInputsMPTailRiskTerm(\n                        term=OptimizerInputsTailRiskTerm(\n                            name=\"name_example\",\n                            multiplier=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            direction=OptimizerInputsEObjectiveTermDirectionEnum(0),\n                            risk_measure=OptimizerInputsTailRiskMeasureEnum(0),\n                            confidence_level=3.14,\n                            use_centered_etl=True,\n                            active_risk=True,\n                            benchmark_index=1,\n                        ),\n                        term_on=OptimizerInputsBoundSourceEnum(0),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                target_probability=[\n                    OptimizerInputsMPTargetProbabilityTerm(\n                        term=OptimizerInputsTargetProbabilityTerm(\n                            name=\"name_example\",\n                            multiplier=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            direction=OptimizerInputsEObjectiveTermDirectionEnum(0),\n                            threshold_min=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            threshold_max=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                        ),\n                        constrain_on=OptimizerInputsBoundSourceEnum(0),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n            ),\n            constraints=OptimizerInputsMultiPeriodConstraints(\n                expected_returns=[\n                    OptimizerInputsMPExpectedReturnConstraint(\n                        constraint=OptimizerInputsExpectedReturnConstraint(\n                            name=\"name_example\",\n                            min=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            max=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            return_value=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            use_strategy_return_value=True,\n                            penalty=OptimizerInputsPenalty(\n                                enabled=True,\n                                penalty_type=OptimizerInputsEConstraintPenaltyTypeEnum(0),\n                                penalty_value=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                                max_violation=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            return_type=OptimizerInputsEConstraintReturnTypeEnum(0),\n                            rel_to_benchmark=True,\n                            benchmark_index=1,\n                            hierarchy=1,\n                        ),\n                        constraint_on=OptimizerInputsBoundSourceEnum(0),\n                        annualization_factor=3.14,\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                diversification=[\n                    OptimizerInputsMPDiversificationConstraint(\n                        constraint=OptimizerInputsDiversificationConstraint(\n                            name=\"name_example\",\n                            asset_value=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            max_percent=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            penalty=OptimizerInputsPenalty(\n                                enabled=True,\n                                penalty_type=OptimizerInputsEConstraintPenaltyTypeEnum(0),\n                                penalty_value=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                                max_violation=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            unit=OptimizerInputsEConstraintUnitTypeEnum(0),\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            hierarchy=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                    ),\n                ],\n                factor_exposures=[\n                    OptimizerInputsMPFactorExposureConstraint(\n                        constraint=OptimizerInputsFactorExposureConstraint(\n                            name=\"name_example\",\n                            penalty=OptimizerInputsPenalty(\n                                enabled=True,\n                                penalty_type=OptimizerInputsEConstraintPenaltyTypeEnum(0),\n                                penalty_value=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                                max_violation=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                            ),\n                            rel_to_benchmark=True,\n                            benchmark_index=1,\n                            factors=OptimizerInputsFactorExposureAttributes(\n                                min=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                                max=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                            ),\n                            hierarchy=1,\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                general_linear=[\n                    OptimizerInputsMPGeneralLinearConstraint(\n                        constraint=OptimizerInputsGeneralLinearConstraint(\n                            name=\"name_example\",\n                            security_attribute=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            min=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            max=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            penalty=OptimizerInputsPenalty(\n                                enabled=True,\n                                penalty_type=OptimizerInputsEConstraintPenaltyTypeEnum(0),\n                                penalty_value=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                                max_violation=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            weighting_method=OptimizerInputsEWeightingMethodTypeEnum(0),\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            hierarchy=1,\n                            rel_to_benchmark=True,\n                            benchmark_index=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                holding_threshold=[\n                    OptimizerInputsMPHoldingsThresholdConstraint(\n                        constraint=OptimizerInputsHoldingsThresholdConstraint(\n                            name=\"name_example\",\n                            custom_asset=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            min=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            asset_type=OptimizerInputsEFPOConstraintAssetTypeEnum(0),\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            unit=OptimizerInputsEConstraintUnitTypeEnum(0),\n                            hierarchy=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                    ),\n                ],\n                leverage=[\n                    OptimizerInputsMPLeverageConstraint(\n                        constraint=OptimizerInputsLeverageConstraint(\n                            name=\"name_example\",\n                            value=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            value_type=OptimizerInputsELeverageValueTypeEnum(0),\n                            hierarchy=1,\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                    ),\n                ],\n                num_of_assets=[\n                    OptimizerInputsMPNumberofAssetsConstraint(\n                        constraint=OptimizerInputsNumberofAssetsConstraint(\n                            name=\"name_example\",\n                            min=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            max=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            hierarchy=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                    ),\n                ],\n                sensitivity=[\n                    OptimizerInputsMPSensitivityConstraint(\n                        constraint=OptimizerInputsSensitivityConstraint(\n                            name=\"name_example\",\n                            min=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            max=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            sensitivity_attribute=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            penalty=OptimizerInputsPenalty(\n                                enabled=True,\n                                penalty_type=OptimizerInputsEConstraintPenaltyTypeEnum(0),\n                                penalty_value=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                                max_violation=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            rel_to_benchmark=True,\n                            benchmark_index=1,\n                            hierarchy=1,\n                            unit=OptimizerInputsEConstraintUnitTypeEnum(0),\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                weight_constraint=[\n                    OptimizerInputsMPHoldingsWeightConstraint(\n                        constraint=OptimizerInputsHoldingsWeightConstraint(\n                            name=\"name_example\",\n                            custom_asset=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            min=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            max=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            penalty=OptimizerInputsPenalty(\n                                enabled=True,\n                                penalty_type=OptimizerInputsEConstraintPenaltyTypeEnum(0),\n                                penalty_value=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                                max_violation=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            unit=OptimizerInputsEConstraintUnitTypeEnum(0),\n                            weight_type=OptimizerInputsEFPOConstraintWeightTypeEnum(0),\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            asset_type=OptimizerInputsEFPOConstraintAssetTypeEnum(0),\n                            rel_to_benchmark=True,\n                            benchmark_index=1,\n                            hierarchy=1,\n                            apply_only_to_direct=True,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                    ),\n                ],\n                number_of_buys=[\n                    OptimizerInputsMPNumberOfBuysConstraint(\n                        constraint=OptimizerInputsNumberOfBuysConstraint(\n                            name=\"name_example\",\n                            max=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            hierarchy=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                    ),\n                ],\n                number_of_sells=[\n                    OptimizerInputsMPNumberOfSellsConstraint(\n                        constraint=OptimizerInputsNumberOfSellsConstraint(\n                            name=\"name_example\",\n                            max=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            hierarchy=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                    ),\n                ],\n                round_lots=[\n                    OptimizerInputsMPRoundlotsConstraint(\n                        constraint=OptimizerInputsRoundlotsConstraint(\n                            name=\"name_example\",\n                            asset_level=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            custom_asset=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            asset_type=OptimizerInputsEFPOConstraintAssetTypeEnum(0),\n                            general_value=3.14,\n                            hierarchy=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                    ),\n                ],\n                trade_threshold=[\n                    OptimizerInputsMPTradeThresholdConstraint(\n                        constraint=OptimizerInputsTradeThresholdConstraint(\n                            name=\"name_example\",\n                            min=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            custom_asset=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            unit=OptimizerInputsEConstraintUnitTypeEnum(0),\n                            asset_type=OptimizerInputsEFPOConstraintAssetTypeEnum(0),\n                            hierarchy=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                    ),\n                ],\n                trading_turnover=[\n                    OptimizerInputsMPTurnoverConstraint(\n                        constraint=OptimizerInputsTurnoverConstraint(\n                            name=\"name_example\",\n                            max=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            custom_asset=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            penalty=OptimizerInputsPenalty(\n                                enabled=True,\n                                penalty_type=OptimizerInputsEConstraintPenaltyTypeEnum(0),\n                                penalty_value=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                                max_violation=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            value_type=OptimizerInputsEConstraintValueTypeEnum(0),\n                            asset_type=OptimizerInputsEFPOConstraintAssetTypeEnum(0),\n                            turnover_type=OptimizerInputsEConstraintTurnoverTypeEnum(0),\n                            hierarchy=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                risk_contribution=[\n                    OptimizerInputsMPRiskContributionConstraint(\n                        constraint=OptimizerInputsRiskContributionConstraint(\n                            name=\"name_example\",\n                            max_percent=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            custom_asset=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            asset_type=OptimizerInputsEFPOConstraintAssetTypeEnum(0),\n                            risk_type=OptimizerInputsEConstraintRiskTypeEnum(0),\n                            hierarchy=1,\n                        ),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                    ),\n                ],\n                risk_volatility=[\n                    OptimizerInputsMPRiskVolatilityConstraint(\n                        constraint=OptimizerInputsRiskVolatilityConstraint(\n                            name=\"name_example\",\n                            max_value_of_risk=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            level=OptimizerInputsEConstraintLevelEnum(0),\n                            penalty=OptimizerInputsPenalty(\n                                enabled=True,\n                                penalty_type=OptimizerInputsEConstraintPenaltyTypeEnum(0),\n                                penalty_value=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                                max_violation=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                            ),\n                            groups=[\n                                OptimizerInputsConstraintGroup(\n                                    min=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    max=OptimizerInputsValue(\n                                        value_type=OptimizerInputsEValueTypeEnum(0),\n                                        raw_value=3.14,\n                                        ref_index=1,\n                                    ),\n                                    id=\"id_example\",\n                                    nested_groups=[],\n                                    group_lookup_index=1,\n                                ),\n                            ],\n                            risk_type=OptimizerInputsEConstraintRiskTypeEnum(0),\n                            active_risk=True,\n                            benchmark_index=1,\n                            hierarchy=1,\n                        ),\n                        constraint_on=OptimizerInputsBoundSourceEnum(0),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                tail_risk=[\n                    OptimizerInputsMPLimitTailRiskConstraint(\n                        constraint=OptimizerInputsLimitTailRiskConstraint(\n                            name=\"name_example\",\n                            risk_measure=OptimizerInputsTailRiskMeasureEnum(0),\n                            max_risk=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            confidence_level=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            penalty=OptimizerInputsPenalty(\n                                enabled=True,\n                                penalty_type=OptimizerInputsEConstraintPenaltyTypeEnum(0),\n                                penalty_value=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                                max_violation=OptimizerInputsValue(\n                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                    raw_value=3.14,\n                                    ref_index=1,\n                                ),\n                            ),\n                            active_risk=True,\n                            benchmark_index=1,\n                            hierarchy=1,\n                        ),\n                        constraint_on=OptimizerInputsBoundSourceEnum(0),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n                target_probability=[\n                    OptimizerInputsMPTargetProbabilityConstraint(\n                        constraint=OptimizerInputsTargetProbabilityConstraint(\n                            name=\"name_example\",\n                            threshold_min=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            threshold_max=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            min_probability=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            max_probability=OptimizerInputsValue(\n                                value_type=OptimizerInputsEValueTypeEnum(0),\n                                raw_value=3.14,\n                                ref_index=1,\n                            ),\n                            hierarchy=1,\n                        ),\n                        constraint_on=OptimizerInputsBoundSourceEnum(0),\n                        on_periods=OptimizerInputsOnPeriods(\n                            periods=[\n                                1,\n                            ],\n                        ),\n                        across_periods=OptimizerInputsAcrossPeriods(\n                            start_period=1,\n                            end_period=1,\n                            rolling=OptimizerInputsAcrossPeriodsRollingPeriods(\n                                frequency=1,\n                                method=OptimizerInputsRollingMethodEnum(0),\n                            ),\n                        ),\n                    ),\n                ],\n            ),\n            transaction_cost=OptimizerInputsTransactionCost(\n                unit_type=OptimizerInputsETransactionCostUnitTypeEnum(0),\n                buy_cost=OptimizerInputsValue(\n                    value_type=OptimizerInputsEValueTypeEnum(0),\n                    raw_value=3.14,\n                    ref_index=1,\n                ),\n                sell_cost=OptimizerInputsValue(\n                    value_type=OptimizerInputsEValueTypeEnum(0),\n                    raw_value=3.14,\n                    ref_index=1,\n                ),\n            ),\n            options=OptimizerInputsMultiPeriodOptions(\n                options=OptimizerInputsOptions(\n                    max_run_time=1,\n                    convergence_tolerance=3.14,\n                    cash_flow_formula=OptimizerInputsValue(\n                        value_type=OptimizerInputsEValueTypeEnum(0),\n                        raw_value=3.14,\n                        ref_index=1,\n                    ),\n                    convert_weights_to_cash_for_ip=True,\n                    convert_weights_to_cash_for_bmk=True,\n                    composite_asset_lookthrough_level=1,\n                ),\n                weight_rebalance_periods=[\n                    1,\n                ],\n                total_periods_count=1,\n                initial_point_randomization_count=1,\n            ),\n            expected_return=OptimizerInputsExpectedReturn(\n                alpha=OptimizerInputsValue(\n                    value_type=OptimizerInputsEValueTypeEnum(0),\n                    raw_value=3.14,\n                    ref_index=1,\n                ),\n                alpha_unit=OptimizerInputsEAlphaUnitTypeEnum(0),\n            ),\n        ),\n        universe=OptimizerInputsTotalUniverse(\n            assets=[\n                OptimizerInputsAsset(\n                    symbol=\"symbol_example\",\n                    price=3.14,\n                ),\n            ],\n            composite_assets=OptimizerInputsCompositeAsset(\n                constituents=[\n                    OptimizerInputsCompositeConstituent(\n                        univ_index=1,\n                        weight=3.14,\n                        price=OptimizerInputsAssetPrice(\n                            source=OptimizerInputsAssetPriceEPriceSource(0),\n                            price_override=3.14,\n                        ),\n                    ),\n                ],\n            ),\n            derivatives=OptimizerInputsDerivative(\n                offset_index=1,\n                future=OptimizerInputsDerivativeFuture(\n                    contract_size=3.14,\n                    method=OptimizerInputsDerivativeFutureEComputationMethodEnum(0),\n                    using_pa_multiply=True,\n                ),\n                forward=True,\n            ),\n        ),\n        portfolios=OptimizerInputsPortfolios(\n            initial=OptimizerInputsPortfolio(\n                holdings=[\n                    OptimizerInputsPortfolioItem(\n                        univ_index=1,\n                        price=OptimizerInputsAssetPrice(\n                            source=OptimizerInputsAssetPriceEPriceSource(0),\n                            price_override=3.14,\n                        ),\n                        shares=3.14,\n                    ),\n                ],\n            ),\n            benchmarks=[\n                OptimizerInputsPortfolio(\n                    holdings=[\n                        OptimizerInputsPortfolioItem(\n                            univ_index=1,\n                            price=OptimizerInputsAssetPrice(\n                                source=OptimizerInputsAssetPriceEPriceSource(0),\n                                price_override=3.14,\n                            ),\n                            shares=3.14,\n                        ),\n                    ],\n                ),\n            ],\n            buylist=[\n                OptimizerInputsBuyListItem(\n                    univ_index=1,\n                    price=OptimizerInputsAssetPrice(\n                        source=OptimizerInputsAssetPriceEPriceSource(0),\n                        price_override=3.14,\n                    ),\n                ),\n            ],\n            cash_univ_index=1,\n        ),\n        riskmodels=OptimizerInputsMultiPeriodRiskModels(\n            risk_models=[\n                OptimizerInputsRiskModelForPeriods(\n                    risk_model=OptimizerInputsRiskModel(\n                        simulated_risk_model=OptimizerInputsSimulatedRiskModel(\n                            raw_data=VARDistributionDataMessage(\n                                description=VARDistributionDescription(\n                                    risk_model=\"risk_model_example\",\n                                    factor_group=\"factor_group_example\",\n                                    factors=[\n                                        \"factors_example\",\n                                    ],\n                                    distribution_type=VARDistributionType(0),\n                                    report_date=1,\n                                    report_currency=\"report_currency_example\",\n                                    horizon_in_trading_days=3.14,\n                                    return_dates=[\n                                        1,\n                                    ],\n                                ),\n                                security_simulations=[\n                                    VARSimulatedReturns(\n                                        entity=\"entity_example\",\n                                        returns=[\n                                            3.14,\n                                        ],\n                                    ),\n                                ],\n                                status=VARDistributionStatus(\n                                    indicator=VARStatusIndicator(0),\n                                    message=\"message_example\",\n                                ),\n                            ),\n                            request_info=OptimizerInputsSimulatedRiskRequestInfo(\n                                url=\"url_example\",\n                                lima_header=\"lima_header_example\",\n                            ),\n                        ),\n                        quant_risk_model=OptimizerInputsQuantRiskModel(\n                            raw_data=OptimizerInputsQuantRiskModelRawData(\n                                labels=OptimizerInputsLabels(\n                                    factor=OptimizerInputsFactor(\n                                        ids=[\n                                            \"ids_example\",\n                                        ],\n                                        names=[\n                                            \"names_example\",\n                                        ],\n                                    ),\n                                    security=OptimizerInputsSecurity(\n                                        ids=[\n                                            \"ids_example\",\n                                        ],\n                                    ),\n                                ),\n                                raw_asset_covariance_matrix=OptimizerInputsSparseMatrix(\n                                    rows=1,\n                                    columns=1,\n                                    index_pointer=[\n                                        1,\n                                    ],\n                                    indices=[\n                                        1,\n                                    ],\n                                    value=[\n                                        3.14,\n                                    ],\n                                ),\n                                raw_factor_exposure=OptimizerInputsSparseMatrix(\n                                    rows=1,\n                                    columns=1,\n                                    index_pointer=[\n                                        1,\n                                    ],\n                                    indices=[\n                                        1,\n                                    ],\n                                    value=[\n                                        3.14,\n                                    ],\n                                ),\n                                raw_factor_covariance_matrix=OptimizerInputsDenseMatrix(\n                                    value=[\n                                        GoogleProtobufListValue(\n                                            values=[\n                                                OptimizerInputsValue(\n                                                    value_type=OptimizerInputsEValueTypeEnum(0),\n                                                    raw_value=3.14,\n                                                    ref_index=1,\n                                                ),\n                                            ],\n                                        ),\n                                    ],\n                                ),\n                                risk_model_coverage_flag=[\n                                    1,\n                                ],\n                            ),\n                            request_info=OptimizerInputsQuantRiskRequestInfo(\n                                service_url=\"service_url_example\",\n                                json_post_body=\"json_post_body_example\",\n                                lima_header=\"lima_header_example\",\n                                pickup_base_url=\"pickup_base_url_example\",\n                            ),\n                        ),\n                        raw_model=OptimizerInputsRawRiskModel(\n                            simulations=[\n                                OptimizerInputsRawRiskModelSimulations(\n                                    id=\"id_example\",\n                                    simulated_returns=[\n                                        3.14,\n                                    ],\n                                ),\n                            ],\n                        ),\n                    ),\n                    periods=OptimizerInputsOnPeriods(\n                        periods=[\n                            1,\n                        ],\n                    ),\n                ),\n            ],\n        ),\n        lookup_tables=OptimizerInputsLookupTables(\n            groups=[\n                OptimizerInputsGroupDefinition(\n                    univ_indices=[\n                        1,\n                    ],\n                ),\n            ],\n            values=[\n                OptimizerInputsValueReference(\n                    asset_values=3.14,\n                ),\n            ],\n        ),\n        output_statistics=True,\n    ) # OptimizerInputsMultiPeriodInput | Multiperiod protobuf input (optional)\n\n    try:\n        api_response = api_instance.mpo_v1_optimize_fpo_post(multi_period_input=multi_period_input)\n        pprint(api_response)\n    except fds.sdk.OptimizationEngineAPIMultiperiod.ApiException as e:\n        print(\"Exception when calling DefaultApi->mpo_v1_optimize_fpo_post: %s\\n\" % e)\n\n    # Get response, http status code and response headers\n    # try:\n    #     api_response, http_status_code, response_headers = api_instance.mpo_v1_optimize_fpo_post_with_http_info(multi_period_input=multi_period_input)\n    #     pprint(api_response)\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.OptimizationEngineAPIMultiperiod.ApiException as e:\n    #     print(\"Exception when calling DefaultApi->mpo_v1_optimize_fpo_post: %s\\n\" % e)\n\n    # Get response asynchronous\n    # try:\n    #     async_result = api_instance.mpo_v1_optimize_fpo_post_async(multi_period_input=multi_period_input)\n    #     api_response = async_result.get()\n    #     pprint(api_response)\n    # except fds.sdk.OptimizationEngineAPIMultiperiod.ApiException as e:\n    #     print(\"Exception when calling DefaultApi->mpo_v1_optimize_fpo_post: %s\\n\" % e)\n\n    # Get response, http status code and response headers asynchronous\n    # try:\n    #     async_result = api_instance.mpo_v1_optimize_fpo_post_with_http_info_async(multi_period_input=multi_period_input)\n    #     api_response, http_status_code, response_headers = async_result.get()\n    #     pprint(api_response)\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.OptimizationEngineAPIMultiperiod.ApiException as e:\n    #     print(\"Exception when calling DefaultApi->mpo_v1_optimize_fpo_post: %s\\n\" % e)\n\n```\n\n### Using Pandas\n\nTo convert an API response to a Pandas DataFrame, it is necessary to transform it first to a dictionary.\n```python\nimport pandas as pd\n\nresponse_dict = api_response.to_dict()['data']\n\nsimple_json_response = pd.DataFrame(response_dict)\nnested_json_response = pd.json_normalize(response_dict)\n```\n\n### Debugging\n\nThe SDK uses the standard library [`logging`](https://docs.python.org/3/library/logging.html#module-logging) module.\n\nSetting `debug` to `True` on an instance of the `Configuration` class sets the log-level of related packages to `DEBUG` \nand enables additional logging in Pythons [HTTP Client](https://docs.python.org/3/library/http.client.html).\n\n**Note**: This prints out sensitive information (e.g. the full request and response). Use with care.\n\n```python\nimport logging\nimport fds.sdk.OptimizationEngineAPIMultiperiod\n\nlogging.basicConfig(level=logging.DEBUG)\n\nconfiguration = fds.sdk.OptimizationEngineAPIMultiperiod.Configuration(...)\nconfiguration.debug = True\n```\n\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *http://localhost*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*DefaultApi* | [**mpo_v1_optimize_fpo_post**](docs/DefaultApi.md#mpo_v1_optimize_fpo_post) | **POST** /mpo/v1/optimizeFPO | \n\n\n## Documentation For Models\n\n - [GoogleProtobufListValue](docs/GoogleProtobufListValue.md)\n - [GoogleProtobufNullValue](docs/GoogleProtobufNullValue.md)\n - [GoogleProtobufStruct](docs/GoogleProtobufStruct.md)\n - [GoogleProtobufValue](docs/GoogleProtobufValue.md)\n - [OptimizerInputsAcrossPeriods](docs/OptimizerInputsAcrossPeriods.md)\n - [OptimizerInputsAcrossPeriodsRollingPeriods](docs/OptimizerInputsAcrossPeriodsRollingPeriods.md)\n - [OptimizerInputsAsset](docs/OptimizerInputsAsset.md)\n - [OptimizerInputsAssetPrice](docs/OptimizerInputsAssetPrice.md)\n - [OptimizerInputsAssetPriceEPriceSource](docs/OptimizerInputsAssetPriceEPriceSource.md)\n - [OptimizerInputsBoundSourceEnum](docs/OptimizerInputsBoundSourceEnum.md)\n - [OptimizerInputsBuyListItem](docs/OptimizerInputsBuyListItem.md)\n - [OptimizerInputsCompositeAsset](docs/OptimizerInputsCompositeAsset.md)\n - [OptimizerInputsCompositeConstituent](docs/OptimizerInputsCompositeConstituent.md)\n - [OptimizerInputsConstraintGroup](docs/OptimizerInputsConstraintGroup.md)\n - [OptimizerInputsConstraints](docs/OptimizerInputsConstraints.md)\n - [OptimizerInputsDenseMatrix](docs/OptimizerInputsDenseMatrix.md)\n - [OptimizerInputsDerivative](docs/OptimizerInputsDerivative.md)\n - [OptimizerInputsDerivativeFuture](docs/OptimizerInputsDerivativeFuture.md)\n - [OptimizerInputsDerivativeFutureEComputationMethodEnum](docs/OptimizerInputsDerivativeFutureEComputationMethodEnum.md)\n - [OptimizerInputsDiversificationConstraint](docs/OptimizerInputsDiversificationConstraint.md)\n - [OptimizerInputsDiversificationRatioTerm](docs/OptimizerInputsDiversificationRatioTerm.md)\n - [OptimizerInputsDrawdownTerm](docs/OptimizerInputsDrawdownTerm.md)\n - [OptimizerInputsEAggregationMethodEnum](docs/OptimizerInputsEAggregationMethodEnum.md)\n - [OptimizerInputsEAlphaUnitTypeEnum](docs/OptimizerInputsEAlphaUnitTypeEnum.md)\n - [OptimizerInputsEConstraintGroupTypeEnum](docs/OptimizerInputsEConstraintGroupTypeEnum.md)\n - [OptimizerInputsEConstraintLevelEnum](docs/OptimizerInputsEConstraintLevelEnum.md)\n - [OptimizerInputsEConstraintPenaltyTypeEnum](docs/OptimizerInputsEConstraintPenaltyTypeEnum.md)\n - [OptimizerInputsEConstraintReturnTypeEnum](docs/OptimizerInputsEConstraintReturnTypeEnum.md)\n - [OptimizerInputsEConstraintRiskRelativeInterpretationTypeEnum](docs/OptimizerInputsEConstraintRiskRelativeInterpretationTypeEnum.md)\n - [OptimizerInputsEConstraintRiskTypeEnum](docs/OptimizerInputsEConstraintRiskTypeEnum.md)\n - [OptimizerInputsEConstraintTurnoverTypeEnum](docs/OptimizerInputsEConstraintTurnoverTypeEnum.md)\n - [OptimizerInputsEConstraintUnitTypeEnum](docs/OptimizerInputsEConstraintUnitTypeEnum.md)\n - [OptimizerInputsEConstraintValueTypeEnum](docs/OptimizerInputsEConstraintValueTypeEnum.md)\n - [OptimizerInputsEFPOConstraintAssetTypeEnum](docs/OptimizerInputsEFPOConstraintAssetTypeEnum.md)\n - [OptimizerInputsEFPOConstraintWeightTypeEnum](docs/OptimizerInputsEFPOConstraintWeightTypeEnum.md)\n - [OptimizerInputsELeverageValueTypeEnum](docs/OptimizerInputsELeverageValueTypeEnum.md)\n - [OptimizerInputsEObjectiveRiskTypeEnum](docs/OptimizerInputsEObjectiveRiskTypeEnum.md)\n - [OptimizerInputsEObjectiveTermDirectionEnum](docs/OptimizerInputsEObjectiveTermDirectionEnum.md)\n - [OptimizerInputsETransactionCostUnitTypeEnum](docs/OptimizerInputsETransactionCostUnitTypeEnum.md)\n - [OptimizerInputsEValueTypeEnum](docs/OptimizerInputsEValueTypeEnum.md)\n - [OptimizerInputsEWeightingMethodTypeEnum](docs/OptimizerInputsEWeightingMethodTypeEnum.md)\n - [OptimizerInputsExpectedReturn](docs/OptimizerInputsExpectedReturn.md)\n - [OptimizerInputsExpectedReturnConstraint](docs/OptimizerInputsExpectedReturnConstraint.md)\n - [OptimizerInputsExpectedReturnTerm](docs/OptimizerInputsExpectedReturnTerm.md)\n - [OptimizerInputsExpectedTailLossTerm](docs/OptimizerInputsExpectedTailLossTerm.md)\n - [OptimizerInputsFactor](docs/OptimizerInputsFactor.md)\n - [OptimizerInputsFactorExposureAttributes](docs/OptimizerInputsFactorExposureAttributes.md)\n - [OptimizerInputsFactorExposureConstraint](docs/OptimizerInputsFactorExposureConstraint.md)\n - [OptimizerInputsFactorExposureTerm](docs/OptimizerInputsFactorExposureTerm.md)\n - [OptimizerInputsFrontierSettings](docs/OptimizerInputsFrontierSettings.md)\n - [OptimizerInputsGeneralLinearConstraint](docs/OptimizerInputsGeneralLinearConstraint.md)\n - [OptimizerInputsGeneralLinearTerm](docs/OptimizerInputsGeneralLinearTerm.md)\n - [OptimizerInputsGroupDefinition](docs/OptimizerInputsGroupDefinition.md)\n - [OptimizerInputsHoldingsThresholdConstraint](docs/OptimizerInputsHoldingsThresholdConstraint.md)\n - [OptimizerInputsHoldingsWeightConstraint](docs/OptimizerInputsHoldingsWeightConstraint.md)\n - [OptimizerInputsLabels](docs/OptimizerInputsLabels.md)\n - [OptimizerInputsLeverageConstraint](docs/OptimizerInputsLeverageConstraint.md)\n - [OptimizerInputsLimitRiskETLConstraint](docs/OptimizerInputsLimitRiskETLConstraint.md)\n - [OptimizerInputsLimitTailRiskConstraint](docs/OptimizerInputsLimitTailRiskConstraint.md)\n - [OptimizerInputsLookupTables](docs/OptimizerInputsLookupTables.md)\n - [OptimizerInputsMPDiversificationConstraint](docs/OptimizerInputsMPDiversificationConstraint.md)\n - [OptimizerInputsMPExpectedReturnConstraint](docs/OptimizerInputsMPExpectedReturnConstraint.md)\n - [OptimizerInputsMPExpectedReturnTerm](docs/OptimizerInputsMPExpectedReturnTerm.md)\n - [OptimizerInputsMPFactorExposureConstraint](docs/OptimizerInputsMPFactorExposureConstraint.md)\n - [OptimizerInputsMPFactorExposureTerm](docs/OptimizerInputsMPFactorExposureTerm.md)\n - [OptimizerInputsMPFrontierInput](docs/OptimizerInputsMPFrontierInput.md)\n - [OptimizerInputsMPGeneralLinearConstraint](docs/OptimizerInputsMPGeneralLinearConstraint.md)\n - [OptimizerInputsMPGeneralLinearTerm](docs/OptimizerInputsMPGeneralLinearTerm.md)\n - [OptimizerInputsMPHoldingsThresholdConstraint](docs/OptimizerInputsMPHoldingsThresholdConstraint.md)\n - [OptimizerInputsMPHoldingsWeightConstraint](docs/OptimizerInputsMPHoldingsWeightConstraint.md)\n - [OptimizerInputsMPLeverageConstraint](docs/OptimizerInputsMPLeverageConstraint.md)\n - [OptimizerInputsMPLimitTailRiskConstraint](docs/OptimizerInputsMPLimitTailRiskConstraint.md)\n - [OptimizerInputsMPNumberOfBuysConstraint](docs/OptimizerInputsMPNumberOfBuysConstraint.md)\n - [OptimizerInputsMPNumberOfSellsConstraint](docs/OptimizerInputsMPNumberOfSellsConstraint.md)\n - [OptimizerInputsMPNumberofAssetsConstraint](docs/OptimizerInputsMPNumberofAssetsConstraint.md)\n - [OptimizerInputsMPObjectiveRatioTerm](docs/OptimizerInputsMPObjectiveRatioTerm.md)\n - [OptimizerInputsMPRiskContributionConstraint](docs/OptimizerInputsMPRiskContributionConstraint.md)\n - [OptimizerInputsMPRiskVolatilityConstraint](docs/OptimizerInputsMPRiskVolatilityConstraint.md)\n - [OptimizerInputsMPRoundlotsConstraint](docs/OptimizerInputsMPRoundlotsConstraint.md)\n - [OptimizerInputsMPSensitivityConstraint](docs/OptimizerInputsMPSensitivityConstraint.md)\n - [OptimizerInputsMPSensitivityTerm](docs/OptimizerInputsMPSensitivityTerm.md)\n - [OptimizerInputsMPTailRiskTerm](docs/OptimizerInputsMPTailRiskTerm.md)\n - [OptimizerInputsMPTargetProbabilityConstraint](docs/OptimizerInputsMPTargetProbabilityConstraint.md)\n - [OptimizerInputsMPTargetProbabilityTerm](docs/OptimizerInputsMPTargetProbabilityTerm.md)\n - [OptimizerInputsMPTradeThresholdConstraint](docs/OptimizerInputsMPTradeThresholdConstraint.md)\n - [OptimizerInputsMPTransactionCostConstraint](docs/OptimizerInputsMPTransactionCostConstraint.md)\n - [OptimizerInputsMPTurnoverConstraint](docs/OptimizerInputsMPTurnoverConstraint.md)\n - [OptimizerInputsMPVolatilityTerm](docs/OptimizerInputsMPVolatilityTerm.md)\n - [OptimizerInputsMultiPeriodConstraints](docs/OptimizerInputsMultiPeriodConstraints.md)\n - [OptimizerInputsMultiPeriodInput](docs/OptimizerInputsMultiPeriodInput.md)\n - [OptimizerInputsMultiPeriodObjective](docs/OptimizerInputsMultiPeriodObjective.md)\n - [OptimizerInputsMultiPeriodOptions](docs/OptimizerInputsMultiPeriodOptions.md)\n - [OptimizerInputsMultiPeriodRiskModels](docs/OptimizerInputsMultiPeriodRiskModels.md)\n - [OptimizerInputsMultiPeriodStrategy](docs/OptimizerInputsMultiPeriodStrategy.md)\n - [OptimizerInputsNumberOfBuysConstraint](docs/OptimizerInputsNumberOfBuysConstraint.md)\n - [OptimizerInputsNumberOfSellsConstraint](docs/OptimizerInputsNumberOfSellsConstraint.md)\n - [OptimizerInputsNumberofAssetsConstraint](docs/OptimizerInputsNumberofAssetsConstraint.md)\n - [OptimizerInputsObjective](docs/OptimizerInputsObjective.md)\n - [OptimizerInputsOnPeriods](docs/OptimizerInputsOnPeriods.md)\n - [OptimizerInputsOptions](docs/OptimizerInputsOptions.md)\n - [OptimizerInputsPenalty](docs/OptimizerInputsPenalty.md)\n - [OptimizerInputsPortfolio](docs/OptimizerInputsPortfolio.md)\n - [OptimizerInputsPortfolioItem](docs/OptimizerInputsPortfolioItem.md)\n - [OptimizerInputsPortfolios](docs/OptimizerInputsPortfolios.md)\n - [OptimizerInputsQuantRiskModel](docs/OptimizerInputsQuantRiskModel.md)\n - [OptimizerInputsQuantRiskModelRawData](docs/OptimizerInputsQuantRiskModelRawData.md)\n - [OptimizerInputsQuantRiskRequestInfo](docs/OptimizerInputsQuantRiskRequestInfo.md)\n - [OptimizerInputsRange](docs/OptimizerInputsRange.md)\n - [OptimizerInputsRawRiskModel](docs/OptimizerInputsRawRiskModel.md)\n - [OptimizerInputsRawRiskModelSimulations](docs/OptimizerInputsRawRiskModelSimulations.md)\n - [OptimizerInputsRiskContributionConstraint](docs/OptimizerInputsRiskContributionConstraint.md)\n - [OptimizerInputsRiskModel](docs/OptimizerInputsRiskModel.md)\n - [OptimizerInputsRiskModelForPeriods](docs/OptimizerInputsRiskModelForPeriods.md)\n - [OptimizerInputsRiskParityTerm](docs/OptimizerInputsRiskParityTerm.md)\n - [OptimizerInputsRiskVolatilityConstraint](docs/OptimizerInputsRiskVolatilityConstraint.md)\n - [OptimizerInputsRollingMethodEnum](docs/OptimizerInputsRollingMethodEnum.md)\n - [OptimizerInputsRoundlotsConstraint](docs/OptimizerInputsRoundlotsConstraint.md)\n - [OptimizerInputsSTARRTerm](docs/OptimizerInputsSTARRTerm.md)\n - [OptimizerInputsSecurity](docs/OptimizerInputsSecurity.md)\n - [OptimizerInputsSensitivityConstraint](docs/OptimizerInputsSensitivityConstraint.md)\n - [OptimizerInputsSensitivityTerm](docs/OptimizerInputsSensitivityTerm.md)\n - [OptimizerInputsSharpeRatioTerm](docs/OptimizerInputsSharpeRatioTerm.md)\n - [OptimizerInputsSimulatedRiskModel](docs/OptimizerInputsSimulatedRiskModel.md)\n - [OptimizerInputsSimulatedRiskRequestInfo](docs/OptimizerInputsSimulatedRiskRequestInfo.md)\n - [OptimizerInputsSparseMatrix](docs/OptimizerInputsSparseMatrix.md)\n - [OptimizerInputsSpecificPoints](docs/OptimizerInputsSpecificPoints.md)\n - [OptimizerInputsStartEndRange](docs/OptimizerInputsStartEndRange.md)\n - [OptimizerInputsTailRiskMeasureEnum](docs/OptimizerInputsTailRiskMeasureEnum.md)\n - [OptimizerInputsTailRiskTerm](docs/OptimizerInputsTailRiskTerm.md)\n - [OptimizerInputsTargetProbabilityConstraint](docs/OptimizerInputsTargetProbabilityConstraint.md)\n - [OptimizerInputsTargetProbabilityTerm](docs/OptimizerInputsTargetProbabilityTerm.md)\n - [OptimizerInputsTotalUniverse](docs/OptimizerInputsTotalUniverse.md)\n - [OptimizerInputsTradeThresholdConstraint](docs/OptimizerInputsTradeThresholdConstraint.md)\n - [OptimizerInputsTradingLimitTradeConstraint](docs/OptimizerInputsTradingLimitTradeConstraint.md)\n - [OptimizerInputsTransactionCost](docs/OptimizerInputsTransactionCost.md)\n - [OptimizerInputsTransactionCostConstraint](docs/OptimizerInputsTransactionCostConstraint.md)\n - [OptimizerInputsTransactionCostTerm](docs/OptimizerInputsTransactionCostTerm.md)\n - [OptimizerInputsTurnoverConstraint](docs/OptimizerInputsTurnoverConstraint.md)\n - [OptimizerInputsValue](docs/OptimizerInputsValue.md)\n - [OptimizerInputsValueReference](docs/OptimizerInputsValueReference.md)\n - [OptimizerInputsVolatilityTerm](docs/OptimizerInputsVolatilityTerm.md)\n - [OptimizerOutputsMultiPeriodOutput](docs/OptimizerOutputsMultiPeriodOutput.md)\n - [OptimizerOutputsPeriods](docs/OptimizerOutputsPeriods.md)\n - [VARDistributionDataMessage](docs/VARDistributionDataMessage.md)\n - [VARDistributionDescription](docs/VARDistributionDescription.md)\n - [VARDistributionStatus](docs/VARDistributionStatus.md)\n - [VARDistributionType](docs/VARDistributionType.md)\n - [VARSimulatedReturns](docs/VARSimulatedReturns.md)\n - [VARStatusIndicator](docs/VARStatusIndicator.md)\n\n\n## Documentation For Authorization\n\n\n## FactSetApiKey\n\n- **Type**: HTTP basic authentication\n\n\n## FactSetOAuth2\n\n- **Type**: OAuth\n- **Flow**: application\n- **Authorization URL**: \n- **Scopes**: N/A\n\n\n## Notes for Large OpenAPI documents\nIf the OpenAPI document is large, imports in fds.sdk.OptimizationEngineAPIMultiperiod.apis and fds.sdk.OptimizationEngineAPIMultiperiod.models may fail with a\nRecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:\n\nSolution 1:\nUse specific imports for apis and models like:\n- `from fds.sdk.OptimizationEngineAPIMultiperiod.api.default_api import DefaultApi`\n- `from fds.sdk.OptimizationEngineAPIMultiperiod.model.pet import Pet`\n\nSolution 2:\nBefore importing the package, adjust the maximum recursion limit as shown below:\n```\nimport sys\nsys.setrecursionlimit(1500)\nimport fds.sdk.OptimizationEngineAPIMultiperiod\nfrom fds.sdk.OptimizationEngineAPIMultiperiod.apis import *\nfrom fds.sdk.OptimizationEngineAPIMultiperiod.models import *\n```\n\n## Contributing\n\nPlease refer to the [contributing guide](../../../../CONTRIBUTING.md).\n\n## Copyright\n\nCopyright 2022 FactSet Research Systems Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/OptimizationEngineAPIMultiperiod/v1",
    "keywords": "FactSet,API,SDK",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fds.sdk.OptimizationEngineAPIMultiperiod",
    "package_url": "https://pypi.org/project/fds.sdk.OptimizationEngineAPIMultiperiod/",
    "platform": null,
    "project_url": "https://pypi.org/project/fds.sdk.OptimizationEngineAPIMultiperiod/",
    "project_urls": {
      "Homepage": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/OptimizationEngineAPIMultiperiod/v1"
    },
    "release_url": "https://pypi.org/project/fds.sdk.OptimizationEngineAPIMultiperiod/0.21.2/",
    "requires_dist": [
      "urllib3 (>=1.25.3)",
      "python-dateutil",
      "fds.sdk.utils (>=1.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Optimization Engine API (Multi-period) client library for Python",
    "version": "0.21.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17016843,
  "releases": {
    "0.20.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7da4e0d67f03bc32e67f79a7d447eab41dbe893e0b8f3ae78a80d090782d068",
          "md5": "bbe602fb902b9c16fd9d35a8806f58f3",
          "sha256": "37ba88c378063f106cd34334ff81311afd42d96d9d9194b63ee77a6e993844f1"
        },
        "downloads": -1,
        "filename": "fds.sdk.OptimizationEngineAPIMultiperiod-0.20.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbe602fb902b9c16fd9d35a8806f58f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 459110,
        "upload_time": "2022-05-24T16:06:21",
        "upload_time_iso_8601": "2022-05-24T16:06:21.001060Z",
        "url": "https://files.pythonhosted.org/packages/b7/da/4e0d67f03bc32e67f79a7d447eab41dbe893e0b8f3ae78a80d090782d068/fds.sdk.OptimizationEngineAPIMultiperiod-0.20.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50fd9d42c197b4df4d8a670cb8c971b0245b2bd44f05e630245ff021874476dc",
          "md5": "b111cff4df373d533fe6bacd94d0a706",
          "sha256": "5f2010bdb5192a0bd271659be3d19c98980d6e6e2d2d0d26d5b9c1485cf61cf3"
        },
        "downloads": -1,
        "filename": "fds.sdk.OptimizationEngineAPIMultiperiod-0.21.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b111cff4df373d533fe6bacd94d0a706",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 459137,
        "upload_time": "2022-07-21T13:52:36",
        "upload_time_iso_8601": "2022-07-21T13:52:36.470955Z",
        "url": "https://files.pythonhosted.org/packages/50/fd/9d42c197b4df4d8a670cb8c971b0245b2bd44f05e630245ff021874476dc/fds.sdk.OptimizationEngineAPIMultiperiod-0.21.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ddb82c9dad9a3ef5ae06928e1f480b203a2ab913df1b3aea16586f3a64c4f8f",
          "md5": "67da0ed53c3fa389a25092d2316cc0e1",
          "sha256": "d405a931eb9badb072e4c7fae238f12f00581f698c4890f63dafca4a1752848b"
        },
        "downloads": -1,
        "filename": "fds.sdk.OptimizationEngineAPIMultiperiod-0.21.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "67da0ed53c3fa389a25092d2316cc0e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 459143,
        "upload_time": "2022-08-31T19:38:16",
        "upload_time_iso_8601": "2022-08-31T19:38:16.082769Z",
        "url": "https://files.pythonhosted.org/packages/1d/db/82c9dad9a3ef5ae06928e1f480b203a2ab913df1b3aea16586f3a64c4f8f/fds.sdk.OptimizationEngineAPIMultiperiod-0.21.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40d40e67683514e031bd0f7c71542f6c6b1bc71dee247741856d2d274d4d3695",
          "md5": "ae3c3ec3228294441583226e287e8c10",
          "sha256": "99e84f408f95f201a78e6f34d02467053b83431a208379b1b2e7c0beb41ba0ca"
        },
        "downloads": -1,
        "filename": "fds.sdk.OptimizationEngineAPIMultiperiod-0.21.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae3c3ec3228294441583226e287e8c10",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 459561,
        "upload_time": "2023-02-24T17:25:50",
        "upload_time_iso_8601": "2023-02-24T17:25:50.475125Z",
        "url": "https://files.pythonhosted.org/packages/40/d4/0e67683514e031bd0f7c71542f6c6b1bc71dee247741856d2d274d4d3695/fds.sdk.OptimizationEngineAPIMultiperiod-0.21.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40d40e67683514e031bd0f7c71542f6c6b1bc71dee247741856d2d274d4d3695",
        "md5": "ae3c3ec3228294441583226e287e8c10",
        "sha256": "99e84f408f95f201a78e6f34d02467053b83431a208379b1b2e7c0beb41ba0ca"
      },
      "downloads": -1,
      "filename": "fds.sdk.OptimizationEngineAPIMultiperiod-0.21.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ae3c3ec3228294441583226e287e8c10",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 459561,
      "upload_time": "2023-02-24T17:25:50",
      "upload_time_iso_8601": "2023-02-24T17:25:50.475125Z",
      "url": "https://files.pythonhosted.org/packages/40/d4/0e67683514e031bd0f7c71542f6c6b1bc71dee247741856d2d274d4d3695/fds.sdk.OptimizationEngineAPIMultiperiod-0.21.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}