{
  "info": {
    "author": "Kristinn Gudjonsson",
    "author_email": "kristinn.gudjonsson@lacework.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Lacework Jupyter Helper\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/lacework/python-sdk/blob/master/jupyter/notebooks/colab_sample.ipynb)\n\n**laceworkjupyter** is a community developed Python library for interacting with the Lacework APIs in a\nJupyter notebook environment.\n\nThe purpose of this library is to simplify using the Lacework SDK in a Jupyter notebook environment. This allows\nusers to more easily work with the output of all API calls to the SDK in a notebook environment.\n\nTo get a data frame with the events within a time range one can simply write this code:\n\n```\nimport laceworkjupyter\n\nwith laceworkjupyter.LaceworkHelper() as lw:\n    client = lw.get_client()\n    df = client.events.get_for_date_range('2021-08-25T00:00:00', '2021-08-27T23:59:23')\n```\n\nAnd to get events from the last 5 days:\n\n```\nimport laceworkjupyter\n\nwith laceworkjupyter.LaceworkHelper() as lw:\n    client = lw.get_client()\n    start_time, end_time = lw.parse_date_offset('LAST 5 DAYS')\n\n    df = client.events.get_for_date_range(start_time=start_time, end_time=end_time)\n```\n\n## Requirements\n\n- Python 3.6 or higher\n- Lacework API Credentials\n  - Account Name\n  - API Key\n  - API Secret\n- Lacework Python SDK\n- Pandas version 1.0.1 or higher\n\n## Lacebook - Docker Container\n\nThe easiest way to start using the Lacework Jupyter helper is to make use of the docker notebook container called\n`lacebook`. To run the container fetch the docker-compose file:\n\n```shell\n$ curl -O https://raw.githubusercontent.com/lacework/python-sdk/master/jupyter/docker/docker-compose.yml\n```\n\nOr you can create your own docker config file, create the file `docker-compose.yml` with the content of:\n\n```\nversion: '3'\nservices:\n  lacebook:\n    container_name: lacebook\n    image: docker.io/lacework/lacebook:latest\n    ports:\n      - 127.0.0.1:8899:8899\n    restart: on-failure\n    volumes:\n      - $HOME/.lacework.toml:/home/lacework/.lacework.toml\n      - /tmp:/usr/local/src/lacedata/\n```\n\nThe next step is to pull the image and run the container:\n\n```shell\n$ docker-compose pull\n$ docker-compose up -d\n```\n\nThis will start up a lacebook container which starts a Jupyter container listening on port 8899.\nTo access the lacebook container visit http://localhost:8899. When prompted for a password\nuse `lacework`.\n\n### Customize Container\n\nThe compose file will map up a drive on your host machine that is used as a persistent drive. That way the notebooks\nyou create in the container will not be deleted once you upgrade the container. This also gives you option to\nshare files with the container (CSV files for instance). By default this points to `/tmp/`, which is not a persistent\nfolder on a Linux system.\n\nTherefore if you want a true persistent storage you will need to change the line in the docker-compose file into\nanother folder of your choice. Edit the file `docker-compose.yml' and change the line:\n\n```\n      - /tmp/:/usr/local/src/lacedata/\n```\n\nTo a directory that persists through reboots. This can be any folder on your host system,\nthe only limitations are that the folder needs to be readable and writeable by a user \nwith UID/GID 1000:1000 for the container user to be able to make use of it.\n\n### Upgrade Container\n\nThe container gets rebuilt with each commit to the codebase. To upgrade the container run the following commands:\n\n```shell\ndocker-compose down\ndocker-compose pull\ndocker-compose up -d\n```\n\n(*This assumes you are running the command in the same folder as the docker-compose.yml file*)\n\n### Use Lacebook with Colab\n\nThe lacebook container can also be used with Colab notebooks. Select `Connect to a local runtime`\nand enter the backend URL: `http://localhost:8899/?token=lacework`\n\n## How-To\n\nThe docker container will by default initialize few things, among them is to expose a variable called `lw`, which\nis an instance of the LaceworkHelper object. \n\nOne way to explore what features the `lw` object has is to run inside a container:\n\n```python\nlw.*?\n```\n\nOr by typing `lw.` and then hit the `<TAB>` key for an autocomplete.\n\nMost of the documentation will be written with notebook demonstrations. Here is a list of available notebooks to\nstart exploring `lacebook`:\n\n+ [The first notebook sample](https://colab.research.google.com/github/lacework/python-sdk/blob/master/jupyter/notebooks/colab_sample.ipynb)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/laceworkjupyter",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lacework/python-sdk",
    "keywords": "lacework,api,sdk,python,api,jupyter,notebook",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "laceworkjupyter",
    "package_url": "https://pypi.org/project/laceworkjupyter/",
    "platform": "",
    "project_url": "https://pypi.org/project/laceworkjupyter/",
    "project_urls": {
      "Download": "https://pypi.python.org/pypi/laceworkjupyter",
      "Homepage": "https://github.com/lacework/python-sdk"
    },
    "release_url": "https://pypi.org/project/laceworkjupyter/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Community-developed Jupyter helper for the Lacework Python SDK",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12369258,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "240edec3f94d8211ffb4346a6db53a8b8b88dafc091f433383e1206a3a0eefba",
          "md5": "c69f3ea3dcd6a11c2848ab25eca36d04",
          "sha256": "a9ddc16a3b2d8ed7b1b067fa6b20270a67da212c15a0e18a06a91f2e7954f99c"
        },
        "downloads": -1,
        "filename": "laceworkjupyter-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c69f3ea3dcd6a11c2848ab25eca36d04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19424,
        "upload_time": "2021-12-21T09:27:32",
        "upload_time_iso_8601": "2021-12-21T09:27:32.126375Z",
        "url": "https://files.pythonhosted.org/packages/24/0e/dec3f94d8211ffb4346a6db53a8b8b88dafc091f433383e1206a3a0eefba/laceworkjupyter-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "240edec3f94d8211ffb4346a6db53a8b8b88dafc091f433383e1206a3a0eefba",
        "md5": "c69f3ea3dcd6a11c2848ab25eca36d04",
        "sha256": "a9ddc16a3b2d8ed7b1b067fa6b20270a67da212c15a0e18a06a91f2e7954f99c"
      },
      "downloads": -1,
      "filename": "laceworkjupyter-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c69f3ea3dcd6a11c2848ab25eca36d04",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19424,
      "upload_time": "2021-12-21T09:27:32",
      "upload_time_iso_8601": "2021-12-21T09:27:32.126375Z",
      "url": "https://files.pythonhosted.org/packages/24/0e/dec3f94d8211ffb4346a6db53a8b8b88dafc091f433383e1206a3a0eefba/laceworkjupyter-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}