{
  "info": {
    "author": "Jeff Wright",
    "author_email": "jeff.washcloth@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# faker_music: music provider for Faker\n\nAn add-on provider for the Python Faker module to generate random and/or fake data for music-related categories.\n\n## Description\n\n`faker_music` provides music-related fake data for testing purposes.  The definition of \"fake\" in this context really means \"random,\" as the musical data are real. Invocation of this module simply provides a random choice from the underlying real-world data.\n\nNo claims are made as to the accuracy or completeness of this data. However, suggestions/corrections/additional data are happily accepted.\n\nCurrently implemented:\n- Music genres\n- Musical instruments\n\nComing soon:\n- Composers\n- Performers\n\nFor future implementation:\n- Band names (existing)\n- Fake band name generator\n- Theory (notes/scales/chord-types/progressions)\n- ...?\n\n## Installation\n\nFrom PyPi:\n\n``` bash\npip install faker_music\n```\n\nFrom source code:\n\n``` bash\ngit clone https://github.com/jeffwright13/faker_music/\ncd faker_music && python setup.py install\n```\n\n## Execution\n\nAdd as a provider to your Faker instance:\n``` python\n>>> from faker import Faker\n>>> from faker_music import MusicProvider\n>>> fake = Faker()\n>>> fake.add_provider(MusicProvider)\n```\n\nNow you can start to generate data:\n```python\n>>> fake.music_genre()\n>>> fake.music_subgenre()\n>>> fake.music_instrument()\n>>> fake.music_instrument_category()\n```\n\n## About faker_music Objects\n\nThe `music_genre_object` is a dictionary consisting of a 'genre' string, and an associated 'subgenre' list. The purpose is to provide data that ties together a given genre with all of it known subgenres.\n\nFor example:\n\n``` python\n>>> fake.music_genre_object()\n\n{'genre': 'Singer/Songwriter',\n 'subgenres': [\n  'Alternative Folk',\n  'Contemporary Folk',\n  'Contemporary Singer/Songwriter',\n  'Indie Folk',\n  'Folk-Rock',\n  'Love Song',\n  'New Acoustic',\n  'Traditional Folk']}\n```\n\nSimilarly, The `music_instrument_object` is a dictionary consisting of an instrument 'category' string, and an associated 'instrument' list. The purpose is to provide data that ties together a given caegory with all of it known instruments.\n\nFor example:\n\n``` python\n>>> fake.music_instrument_object()\n\n{'category': 'electronics',\n 'instruments': [\n  'Drum machine',\n  'Electric guitar',\n  'Keyboard',\n  'Synthesizer',\n  'Theremin',\n  'Turntable']}\n```\n\n## Data Sources\n\nOriginal data for this project (stored in `genres.py`, `instruments.py`) was lifted from https://www.musicgenreslist.com and [Wikipedia](https://simple.wikipedia.org/wiki/List_of_musical_instruments), and massaged into a format suitable for coding using the `genre_parser.py` and `instrument_parser.py` code [found here](https://gist.github.com/jeffwright13/ded48a18ba6db7feb47eea5892665d86).\n\n## Acknowlegements\n\n- I would like to thank the maintainer of the [faker_airtravel](https://github.com/dkotschessa/faker_airtravel/) repository, since I used its structure to create this one.\n- Big thanks also to [Bob Belderbos](https://github.com/bbelderbos) for his expert guidance in getting this litte project off the ground.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jeffwright13/faker_music/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "faker_music",
    "package_url": "https://pypi.org/project/faker_music/",
    "platform": "",
    "project_url": "https://pypi.org/project/faker_music/",
    "project_urls": {
      "Homepage": "https://github.com/jeffwright13/faker_music/"
    },
    "release_url": "https://pypi.org/project/faker_music/0.4/",
    "requires_dist": [
      "pytest ; extra == \"test\"",
      "pytest-cov ; extra == \"test\"",
      "tox ; extra == \"test\""
    ],
    "requires_python": "",
    "summary": "Music Faker Community Provider",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10462964,
  "releases": {
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c356a6a2717a0a6e5ef04b27b11f09a70b3cfbd12cc656495f1261bee429dcc",
          "md5": "04aa2c60e05a166fec1b1fcd4b8b66db",
          "sha256": "7ad13d9a085cccc87d2b1f0510ff8a95c2176b41122ae289d38c321dbc29d8f2"
        },
        "downloads": -1,
        "filename": "faker_music-0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04aa2c60e05a166fec1b1fcd4b8b66db",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14930,
        "upload_time": "2021-05-25T11:05:08",
        "upload_time_iso_8601": "2021-05-25T11:05:08.527771Z",
        "url": "https://files.pythonhosted.org/packages/1c/35/6a6a2717a0a6e5ef04b27b11f09a70b3cfbd12cc656495f1261bee429dcc/faker_music-0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51ba601f53ce5bfa6cd9e3efbb67a697d23658a30de43b9183acd2c626c155e6",
          "md5": "9502b1978d1f643ba7eac1ea10fad9b7",
          "sha256": "119293298f29c77994675e3f5dfeb7d065ef24aeb84810eb0bd2846b38fb59e7"
        },
        "downloads": -1,
        "filename": "faker_music-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9502b1978d1f643ba7eac1ea10fad9b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15268,
        "upload_time": "2021-05-25T11:05:30",
        "upload_time_iso_8601": "2021-05-25T11:05:30.895127Z",
        "url": "https://files.pythonhosted.org/packages/51/ba/601f53ce5bfa6cd9e3efbb67a697d23658a30de43b9183acd2c626c155e6/faker_music-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c356a6a2717a0a6e5ef04b27b11f09a70b3cfbd12cc656495f1261bee429dcc",
        "md5": "04aa2c60e05a166fec1b1fcd4b8b66db",
        "sha256": "7ad13d9a085cccc87d2b1f0510ff8a95c2176b41122ae289d38c321dbc29d8f2"
      },
      "downloads": -1,
      "filename": "faker_music-0.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04aa2c60e05a166fec1b1fcd4b8b66db",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 14930,
      "upload_time": "2021-05-25T11:05:08",
      "upload_time_iso_8601": "2021-05-25T11:05:08.527771Z",
      "url": "https://files.pythonhosted.org/packages/1c/35/6a6a2717a0a6e5ef04b27b11f09a70b3cfbd12cc656495f1261bee429dcc/faker_music-0.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51ba601f53ce5bfa6cd9e3efbb67a697d23658a30de43b9183acd2c626c155e6",
        "md5": "9502b1978d1f643ba7eac1ea10fad9b7",
        "sha256": "119293298f29c77994675e3f5dfeb7d065ef24aeb84810eb0bd2846b38fb59e7"
      },
      "downloads": -1,
      "filename": "faker_music-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "9502b1978d1f643ba7eac1ea10fad9b7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15268,
      "upload_time": "2021-05-25T11:05:30",
      "upload_time_iso_8601": "2021-05-25T11:05:30.895127Z",
      "url": "https://files.pythonhosted.org/packages/51/ba/601f53ce5bfa6cd9e3efbb67a697d23658a30de43b9183acd2c626c155e6/faker_music-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}