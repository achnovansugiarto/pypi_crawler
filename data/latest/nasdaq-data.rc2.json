{
  "info": {
    "author": "Aidzillafont",
    "author_email": "aheffernan0@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Install guide\r\n\r\n```python\r\npip install nasdaq-data\r\n```\r\n\r\n# How to\r\nFirst import and create an instance of your nasdaq data grabber object\r\n\r\n\r\n```python\r\nfrom nasdaq_data import nasdaq_grabber as ng\r\n```\r\n\r\n\r\n```python\r\nmy_ng = ng() \r\n```\r\n\r\n## Get Top Stocks by Market Cap\r\nCall nasdaq_stocks and input the number of tickers you want and you will get info on stocks in order of Market Cap\r\n\r\n\r\n```python\r\nmy_ng.nasdaq_stocks(10)\r\n```\r\n\r\n\r\n\r\n\r\n<div>\r\n<table border=\"1\" class=\"dataframe\">\r\n  <thead>\r\n    <tr style=\"text-align: right;\">\r\n      <th></th>\r\n      <th>symbol</th>\r\n      <th>name</th>\r\n      <th>lastsale</th>\r\n      <th>netchange</th>\r\n      <th>pctchange</th>\r\n      <th>marketCap</th>\r\n      <th>url</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th>0</th>\r\n      <td>AAPL</td>\r\n      <td>Apple Inc. Common Stock</td>\r\n      <td>$150.43</td>\r\n      <td>-2.31</td>\r\n      <td>-1.512%</td>\r\n      <td>2,608,056,056,200</td>\r\n      <td>/market-activity/stocks/aapl</td>\r\n    </tr>\r\n    <tr>\r\n      <th>1</th>\r\n      <td>MSFT</td>\r\n      <td>Microsoft Corporation Common Stock</td>\r\n      <td>$237.92</td>\r\n      <td>-3.06</td>\r\n      <td>-1.27%</td>\r\n      <td>1,774,381,634,186</td>\r\n      <td>/market-activity/stocks/msft</td>\r\n    </tr>\r\n    <tr>\r\n      <th>2</th>\r\n      <td>GOOG</td>\r\n      <td>Alphabet Inc. Class C Capital Stock</td>\r\n      <td>$99.17</td>\r\n      <td>-1.40</td>\r\n      <td>-1.392%</td>\r\n      <td>1,293,573,480,000</td>\r\n      <td>/market-activity/stocks/goog</td>\r\n    </tr>\r\n    <tr>\r\n      <th>3</th>\r\n      <td>GOOGL</td>\r\n      <td>Alphabet Inc. Class A Common Stock</td>\r\n      <td>$98.74</td>\r\n      <td>-1.40</td>\r\n      <td>-1.398%</td>\r\n      <td>1,287,964,560,000</td>\r\n      <td>/market-activity/stocks/googl</td>\r\n    </tr>\r\n    <tr>\r\n      <th>4</th>\r\n      <td>AMZN</td>\r\n      <td>Amazon.com, Inc. Common Stock</td>\r\n      <td>$113.78</td>\r\n      <td>-3.53</td>\r\n      <td>-3.009%</td>\r\n      <td>1,157,926,339,396</td>\r\n      <td>/market-activity/stocks/amzn</td>\r\n    </tr>\r\n    <tr>\r\n      <th>5</th>\r\n      <td>TSLA</td>\r\n      <td>Tesla, Inc. Common Stock</td>\r\n      <td>$275.33</td>\r\n      <td>-13.26</td>\r\n      <td>-4.595%</td>\r\n      <td>862,738,307,490</td>\r\n      <td>/market-activity/stocks/tsla</td>\r\n    </tr>\r\n    <tr>\r\n      <th>6</th>\r\n      <td>BRK/A</td>\r\n      <td>Berkshire Hathaway Inc.</td>\r\n      <td>$404485.25</td>\r\n      <td>-889.76</td>\r\n      <td>-0.219%</td>\r\n      <td>594,946,837,609</td>\r\n      <td>/market-activity/stocks/brk/a</td>\r\n    </tr>\r\n    <tr>\r\n      <th>7</th>\r\n      <td>BRK/B</td>\r\n      <td>Berkshire Hathaway Inc.</td>\r\n      <td>$267.77</td>\r\n      <td>-0.74</td>\r\n      <td>-0.276%</td>\r\n      <td>590,783,995,813</td>\r\n      <td>/market-activity/stocks/brk/b</td>\r\n    </tr>\r\n    <tr>\r\n      <th>8</th>\r\n      <td>UNH</td>\r\n      <td>UnitedHealth Group Incorporated Common Stock (DE)</td>\r\n      <td>$513.61</td>\r\n      <td>-3.85</td>\r\n      <td>-0.744%</td>\r\n      <td>480,421,913,683</td>\r\n      <td>/market-activity/stocks/unh</td>\r\n    </tr>\r\n    <tr>\r\n      <th>9</th>\r\n      <td>JNJ</td>\r\n      <td>Johnson &amp; Johnson Common Stock</td>\r\n      <td>$166.72</td>\r\n      <td>0.54</td>\r\n      <td>0.325%</td>\r\n      <td>438,336,872,094</td>\r\n      <td>/market-activity/stocks/jnj</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n</div>\r\n\r\n\r\n\r\n## Get Historical Prices\r\nPass a start date and end date in ISO format along with your ticker to nasdaq_historical_price to get historical prices\r\n\r\n\r\n```python\r\nfrom dateutil.relativedelta import relativedelta\r\nimport time\r\nimport datetime as dt\r\n\r\n#today\r\nt = dt.date.today().replace(day=1)\r\n#one year ago\r\nt0 = t - relativedelta(years=1)\r\n\r\n#isoformat\r\niso_t0, iso_t = t0.isoformat(), t.isoformat()\r\n\r\nmy_ng.nasdaq_historical_price('AAPL', iso_t0, iso_t)\r\n```\r\n\r\n\r\n\r\n\r\n<div>\r\n<table border=\"1\" class=\"dataframe\">\r\n  <thead>\r\n    <tr style=\"text-align: right;\">\r\n      <th></th>\r\n      <th>date</th>\r\n      <th>close</th>\r\n      <th>volume</th>\r\n      <th>open</th>\r\n      <th>high</th>\r\n      <th>low</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th>0</th>\r\n      <td>09/01/2022</td>\r\n      <td>$157.96</td>\r\n      <td>74,229,900</td>\r\n      <td>$156.64</td>\r\n      <td>$158.42</td>\r\n      <td>$154.67</td>\r\n    </tr>\r\n    <tr>\r\n      <th>1</th>\r\n      <td>08/31/2022</td>\r\n      <td>$157.22</td>\r\n      <td>87,991,090</td>\r\n      <td>$160.305</td>\r\n      <td>$160.58</td>\r\n      <td>$157.14</td>\r\n    </tr>\r\n    <tr>\r\n      <th>2</th>\r\n      <td>08/30/2022</td>\r\n      <td>$158.91</td>\r\n      <td>77,906,200</td>\r\n      <td>$162.13</td>\r\n      <td>$162.56</td>\r\n      <td>$157.72</td>\r\n    </tr>\r\n    <tr>\r\n      <th>3</th>\r\n      <td>08/29/2022</td>\r\n      <td>$161.38</td>\r\n      <td>73,313,950</td>\r\n      <td>$161.145</td>\r\n      <td>$162.9</td>\r\n      <td>$159.82</td>\r\n    </tr>\r\n    <tr>\r\n      <th>4</th>\r\n      <td>08/26/2022</td>\r\n      <td>$163.62</td>\r\n      <td>78,960,980</td>\r\n      <td>$170.57</td>\r\n      <td>$171.05</td>\r\n      <td>$163.56</td>\r\n    </tr>\r\n    <tr>\r\n      <th>...</th>\r\n      <td>...</td>\r\n      <td>...</td>\r\n      <td>...</td>\r\n      <td>...</td>\r\n      <td>...</td>\r\n      <td>...</td>\r\n    </tr>\r\n    <tr>\r\n      <th>248</th>\r\n      <td>09/08/2021</td>\r\n      <td>$155.11</td>\r\n      <td>74,420,210</td>\r\n      <td>$156.98</td>\r\n      <td>$157.04</td>\r\n      <td>$153.975</td>\r\n    </tr>\r\n    <tr>\r\n      <th>249</th>\r\n      <td>09/07/2021</td>\r\n      <td>$156.69</td>\r\n      <td>82,278,260</td>\r\n      <td>$154.97</td>\r\n      <td>$157.26</td>\r\n      <td>$154.39</td>\r\n    </tr>\r\n    <tr>\r\n      <th>250</th>\r\n      <td>09/03/2021</td>\r\n      <td>$154.3</td>\r\n      <td>57,866,070</td>\r\n      <td>$153.76</td>\r\n      <td>$154.63</td>\r\n      <td>$153.09</td>\r\n    </tr>\r\n    <tr>\r\n      <th>251</th>\r\n      <td>09/02/2021</td>\r\n      <td>$153.65</td>\r\n      <td>71,171,320</td>\r\n      <td>$153.87</td>\r\n      <td>$154.72</td>\r\n      <td>$152.4</td>\r\n    </tr>\r\n    <tr>\r\n      <th>252</th>\r\n      <td>09/01/2021</td>\r\n      <td>$152.51</td>\r\n      <td>80,313,710</td>\r\n      <td>$152.83</td>\r\n      <td>$154.98</td>\r\n      <td>$152.34</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n<p>253 rows Ã— 6 columns</p>\r\n</div>\r\n\r\n\r\n\r\n## Get Stocks Financal Data\r\nCall nasdaq_financals and pass in a frequency you desire \r\n1. Annual\r\n2. Semi Annual\r\n\r\n\r\n```python\r\nmy_ng.nasdaq_financals('AAPL', 1)\r\n```\r\n\r\n\r\n\r\n\r\n<div>\r\n<table border=\"1\" class=\"dataframe\">\r\n  <thead>\r\n    <tr style=\"text-align: right;\">\r\n      <th></th>\r\n      <th>symbol</th>\r\n      <th>tabs.incomeStatementTable</th>\r\n      <th>tabs.balanceSheetTable</th>\r\n      <th>tabs.cashFlowTable</th>\r\n      <th>tabs.financialRatiosTable</th>\r\n      <th>incomeStatementTable.headers.value1</th>\r\n      <th>incomeStatementTable.headers.value2</th>\r\n      <th>incomeStatementTable.headers.value3</th>\r\n      <th>incomeStatementTable.headers.value4</th>\r\n      <th>incomeStatementTable.headers.value5</th>\r\n      <th>...</th>\r\n      <th>cashFlowTable.headers.value3</th>\r\n      <th>cashFlowTable.headers.value4</th>\r\n      <th>cashFlowTable.headers.value5</th>\r\n      <th>cashFlowTable.rows</th>\r\n      <th>financialRatiosTable.headers.value1</th>\r\n      <th>financialRatiosTable.headers.value2</th>\r\n      <th>financialRatiosTable.headers.value3</th>\r\n      <th>financialRatiosTable.headers.value4</th>\r\n      <th>financialRatiosTable.headers.value5</th>\r\n      <th>financialRatiosTable.rows</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th>0</th>\r\n      <td>AAPL</td>\r\n      <td>Income Statement</td>\r\n      <td>Balance Sheet</td>\r\n      <td>Cash Flow</td>\r\n      <td>Financial Ratios</td>\r\n      <td>Period Ending:</td>\r\n      <td>9/25/2021</td>\r\n      <td>9/26/2020</td>\r\n      <td>9/28/2019</td>\r\n      <td>9/29/2018</td>\r\n      <td>...</td>\r\n      <td>9/26/2020</td>\r\n      <td>9/28/2019</td>\r\n      <td>9/29/2018</td>\r\n      <td>[{'value1': 'Net Income', 'value2': '$94,680,0...</td>\r\n      <td>Period Ending:</td>\r\n      <td>9/25/2021</td>\r\n      <td>9/26/2020</td>\r\n      <td>9/28/2019</td>\r\n      <td>9/29/2018</td>\r\n      <td>[{'value1': 'Liquidity Ratios', 'value2': '', ...</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n<p>1 rows Ã— 29 columns</p>\r\n</div>\r\n\r\n\r\n\r\n## Get Other Data\r\n\r\nCalling the nasdaq_data function and supplying type to any of the numbers below will get you \r\n\r\n1. Analyst Target Price and Ratings\r\n2. PEG Ratio\r\n3. Momentum Estimate\r\n4. Earnings Forecast\r\n5. Earnings Surprise\r\n6. EPS\r\n\r\n\r\n```python\r\n#analysts ratings\r\nmy_ng.nasdaq_data('AAPL',1)\r\n```\r\n\r\n\r\n\r\n\r\n<div>\r\n<table border=\"1\" class=\"dataframe\">\r\n  <thead>\r\n    <tr style=\"text-align: right;\">\r\n      <th></th>\r\n      <th>symbol</th>\r\n      <th>historicalConsensus</th>\r\n      <th>consensusOverview.lowPriceTarget</th>\r\n      <th>consensusOverview.highPriceTarget</th>\r\n      <th>consensusOverview.priceTarget</th>\r\n      <th>consensusOverview.buy</th>\r\n      <th>consensusOverview.sell</th>\r\n      <th>consensusOverview.hold</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th>0</th>\r\n      <td>aapl</td>\r\n      <td>[{'z': {'buy': 19, 'hold': 5, 'sell': 0, 'date...</td>\r\n      <td>136.0</td>\r\n      <td>220.0</td>\r\n      <td>183.45</td>\r\n      <td>23</td>\r\n      <td>1</td>\r\n      <td>4</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n</div>\r\n\r\n\r\n\r\n\r\n```python\r\n#PEG Ratio\r\nmy_ng.nasdaq_data('AAPL',2)\r\n```\r\n\r\n\r\n\r\n\r\n<div>\r\n<table border=\"1\" class=\"dataframe\">\r\n  <thead>\r\n    <tr style=\"text-align: right;\">\r\n      <th></th>\r\n      <th>pegr.label</th>\r\n      <th>pegr.text</th>\r\n      <th>pegr.pegValue</th>\r\n      <th>per.peRatioChart</th>\r\n      <th>per.label</th>\r\n      <th>per.text</th>\r\n      <th>per.dataProvider</th>\r\n      <th>gr.peGrowthChart</th>\r\n      <th>gr.title</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <th>0</th>\r\n      <td>Forecast 12 Month Forward PEG Ratio</td>\r\n      <td>Investors are always looking for companies wit...</td>\r\n      <td>1.95</td>\r\n      <td>[{'x': '2021 Actual', 'y': 26.81}, {'x': '2022...</td>\r\n      <td>Price/Earnings Ratio</td>\r\n      <td>Price/Earnings Ratio is a widely used stock ev...</td>\r\n      <td>&lt;b&gt;Data Provider:&lt;/b&gt; Zacks Investment Research</td>\r\n      <td>[{'z': 'Growth', 'x': '2022', 'y': 8.8}, {'z':...</td>\r\n      <td>Forecast P/E Growth Rates</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n</div>\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Aidzillafont/nasdaq_app",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nasdaq-data",
    "package_url": "https://pypi.org/project/nasdaq-data/",
    "platform": null,
    "project_url": "https://pypi.org/project/nasdaq-data/",
    "project_urls": {
      "Homepage": "https://github.com/Aidzillafont/nasdaq_app"
    },
    "release_url": "https://pypi.org/project/nasdaq-data/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A handy tool to get nasdaq data in python",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16914510,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5dde57de73ef72376c3b752d13f8008d5a3573ddf420285d61d0fdd6f2ba5e1",
          "md5": "eb41fdad5fd9ba53eb8cf9f2b1e6af42",
          "sha256": "bad6bac57b1953e89df4475779544af876c5250457106a2bf5d543b999ba2ff8"
        },
        "downloads": -1,
        "filename": "nasdaq_data-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb41fdad5fd9ba53eb8cf9f2b1e6af42",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5721,
        "upload_time": "2022-09-25T15:36:41",
        "upload_time_iso_8601": "2022-09-25T15:36:41.265012Z",
        "url": "https://files.pythonhosted.org/packages/b5/dd/e57de73ef72376c3b752d13f8008d5a3573ddf420285d61d0fdd6f2ba5e1/nasdaq_data-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1773fb8b9be23b6196770c493a0f08cbac91d6253ad711fa2aee2490e3da00e5",
          "md5": "9e96b00f84bfa04af732f143e36b295f",
          "sha256": "6d337c3771475c809dffb00d890a22c0bfa64b89a5b7de62b353293acceb2392"
        },
        "downloads": -1,
        "filename": "nasdaq_data-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e96b00f84bfa04af732f143e36b295f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5680,
        "upload_time": "2022-09-25T15:36:43",
        "upload_time_iso_8601": "2022-09-25T15:36:43.518747Z",
        "url": "https://files.pythonhosted.org/packages/17/73/fb8b9be23b6196770c493a0f08cbac91d6253ad711fa2aee2490e3da00e5/nasdaq_data-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6ebe505e65b3f28eb593be2a7e1b39d0a07ba41639b8855e267b0adcd67191f",
          "md5": "1fba58e2563da0f2a19d42a3fdd79e3e",
          "sha256": "1f98e131cb73bd181e1f1a1634a027ae3f90a964dddb9fcdbef95d097c690c15"
        },
        "downloads": -1,
        "filename": "nasdaq_data-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1fba58e2563da0f2a19d42a3fdd79e3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5870,
        "upload_time": "2023-02-18T12:44:23",
        "upload_time_iso_8601": "2023-02-18T12:44:23.525836Z",
        "url": "https://files.pythonhosted.org/packages/b6/eb/e505e65b3f28eb593be2a7e1b39d0a07ba41639b8855e267b0adcd67191f/nasdaq_data-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9403596c24123a79c3de7e433e38c3ed86463f64689734dcfbb1794bdad55d14",
          "md5": "d6149795cc4ae6ff1e7080d4ffaad87f",
          "sha256": "7a3809f46469c346c9905f4aeee11705476e2fd628305969435c7cb9c9713185"
        },
        "downloads": -1,
        "filename": "nasdaq_data-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d6149795cc4ae6ff1e7080d4ffaad87f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5798,
        "upload_time": "2023-02-18T12:44:25",
        "upload_time_iso_8601": "2023-02-18T12:44:25.560317Z",
        "url": "https://files.pythonhosted.org/packages/94/03/596c24123a79c3de7e433e38c3ed86463f64689734dcfbb1794bdad55d14/nasdaq_data-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6ebe505e65b3f28eb593be2a7e1b39d0a07ba41639b8855e267b0adcd67191f",
        "md5": "1fba58e2563da0f2a19d42a3fdd79e3e",
        "sha256": "1f98e131cb73bd181e1f1a1634a027ae3f90a964dddb9fcdbef95d097c690c15"
      },
      "downloads": -1,
      "filename": "nasdaq_data-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1fba58e2563da0f2a19d42a3fdd79e3e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5870,
      "upload_time": "2023-02-18T12:44:23",
      "upload_time_iso_8601": "2023-02-18T12:44:23.525836Z",
      "url": "https://files.pythonhosted.org/packages/b6/eb/e505e65b3f28eb593be2a7e1b39d0a07ba41639b8855e267b0adcd67191f/nasdaq_data-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9403596c24123a79c3de7e433e38c3ed86463f64689734dcfbb1794bdad55d14",
        "md5": "d6149795cc4ae6ff1e7080d4ffaad87f",
        "sha256": "7a3809f46469c346c9905f4aeee11705476e2fd628305969435c7cb9c9713185"
      },
      "downloads": -1,
      "filename": "nasdaq_data-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d6149795cc4ae6ff1e7080d4ffaad87f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5798,
      "upload_time": "2023-02-18T12:44:25",
      "upload_time_iso_8601": "2023-02-18T12:44:25.560317Z",
      "url": "https://files.pythonhosted.org/packages/94/03/596c24123a79c3de7e433e38c3ed86463f64689734dcfbb1794bdad55d14/nasdaq_data-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}