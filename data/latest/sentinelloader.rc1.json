{
  "info": {
    "author": "Fl√°vio Stutz",
    "author_email": "Flavio Stutz <flaviostutz@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# sentinelloader\nSentinel-2 satellite tiles images downloader from Copernicus. \n\nWith this utility you can specify the desired polygon, image resolution, band name and aproximate dates and it will do the best effort to find all tiles needed to satisfy your requirement. Then it will download minimal data by selecting just the needed .jp2 files inside Products, combine downloaded tiles, crop the combined tiles image to the polygon and cache the results, returning a GeoTIFF image with raster for the selected area.\n\nAll API calls are in ESP:4326 reference.\n\n# Background\n\nGranules are packages containing data taken from Sentinel-2 satellite for a region on the globe in a specific time. They contain a lot of data for that area (13 bands in different resolutions and other derived bands and quality data). Level-2A products, for example, have ~1GB of data for a single tile (100km2 x 100km2). \n\nWith this utility you can select which bands/resolutions to download. For example, if you need only the TCI band (true color) tile at 60m resolution, you will can use the utility to download just ~3MB of data (instead of 1GB!). For max resolution(10m), each band will have ~120MB. Some caching will be applied to avoid re-downloading of data that is already present in disk.\n\n* For more information on Sentinel-2 satellite product data, go to https://sentinel.esa.int/documents/247904/685211/Sentinel-2-Products-Specification-Document\n\n* If you want to download whole Granules (instead of only some files inside Granules), you can go to https://github.com/sentinelsat/sentinelsat or https://scihub.copernicus.eu/twiki/do/view/SciHubUserGuide/BatchScripting?redirectedfrom=SciHubUserGuide.8BatchScripting\n\n\n## Usage\n\n### Docker example\n\n* Create docker-compose.yml\n\n```yml\nversion: '3.3'\nservices:\n  sentinelloader:\n    image: flaviostutz/sentinelloader\n    environment:\n      - COPERNICUS_USER=auser\n      - COPERNICUS_PASSWORD=apass\n    ports:\n      - 8686:8888\n```\n\n* Create an account in Copernicus and change info in docker-compose.yml accordingly\n\n* Run ```docker-compose up -d```\n\n* Open your browser at http://localhost:8686/\n\n* Open Jupyter notebook \"example.ipynb\" and press \"Run\"\n\n* You should see something like [this](/notebooks/example.ipynb)\n\n### Python example\n\n```shell\npip install git+https://github.com/flaviostutz/sentinelloader\n```\n\n```python\nimport logging\nimport os\nfrom osgeo import gdal\nimport matplotlib.pyplot as plt\nfrom sentinelloader import Sentinel2Loader\nfrom shapely.geometry import Polygon\n\nsl = SentinelLoader('/notebooks/data/output/sentinelcache', \n                    'mycopernicususername', 'mycopernicuspassword',\n                    apiUrl='https://scihub.copernicus.eu/apihub/', showProgressbars=True, loglevel=logging.DEBUG)\n\narea = Polygon([(-47.873796, -16.044801), (-47.933796, -16.044801),\n        (-47.933796, -15.924801), (-47.873796, -15.924801)])\n\ngeoTiffs = sl.getRegionHistory(area, 'TCI', '60m', '2019-01-06', '2019-01-30', daysStep=5)\nfor geoTiff in geoTiffs:\n    print('Desired image was prepared at')\n    print(geoTiff)\n    os.remove(geoTiff)\n)\n```\n\nFor a Jupyter example, [click here](notebooks/example.ipynb)\n\n### API\n\n```python\ndef getRegionHistory(self, geoPolygon, bandOrIndexName, resolution, dateFrom, dateTo, daysStep=5, ignoreMissing=True, minVisibleLand=0, visibleLandPolygon=None, keepVisibleWithCirrus=False, interpolateMissingDates=False):\n        \"\"\"Gets a series of GeoTIFF files for a region for a specific band and resolution in a date range. It will make the best effort to get images near the desired dates and filter out images that have poor land visibility due to cloudy days\"\"\"\n```\n\nminVisibleLand - a value from 0 to 1 indicating the percentage of land that must be visible on the image (according to cloud coverage at the time)\n\nsl = SentinelLoader('/notebooks/data/output/sentinelcache', \n                    'mycopernicususername', 'mycopernicuspassword',\n                    apiUrl='https://scihub.copernicus.eu/apihub/', showProgressbars=True, loglevel=logging.DEBUG)\n\ndesired_region = Polygon([(-47.873796, -16.044801), (-47.933796, -16.044801),(-47.933796, -15.924801), (-47.873796, -15.924801)])\n\ngeoTiffs = sl.getRegionHistory(desired_region, 'TCI', '60m', '2019-01-06', '2019-01-30', daysStep=5)\n\n* In this example, sentinelloader will connect to Coperrnicus with your account and try to get various images in the band \"TCI\" of the desired region at a resolution of 60m fom 2019-01-06 to 2019-01-30 (if still available in Copernicus Hub) each 5 days (it will try to get the closes image to the days selected, because not every day we have images for every places).\n\n* Supported band names\n\n  * All bands that are part of Sentinel 2 products at Copernicus Hub (SCL, TCI, B01-08, B1A etc)\n  * Sintetic indexes implemented by this tool: NDVI, NDWI, NDWI_MacFeeters or NDMI\n   * If you implement a newer one, please send a PR with it!\n\n## Publishing package to pypi\n\n```sh\npython3 -m pip install --upgrade build\n\npython3 -m build\n\npython3 -m twine upload --repository sentinelloader dist/*\n```\n\nhttps://packaging.python.org/en/latest/tutorials/packaging-projects/#uploading-the-distribution-archives\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/flaviostutz/sentinelloader.git",
    "keywords": "",
    "license": "MIT License Copyright (c) 2019 Flavio Stutz Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sentinelloader",
    "package_url": "https://pypi.org/project/sentinelloader/",
    "platform": null,
    "project_url": "https://pypi.org/project/sentinelloader/",
    "project_urls": {
      "Bug Tracker": "https://github.com/flaviostutz/sentinelloader/issues",
      "Homepage": "https://github.com/flaviostutz/sentinelloader"
    },
    "release_url": "https://pypi.org/project/sentinelloader/1.1.1/",
    "requires_dist": [
      "uuid (>=1.3.0)",
      "gdal (>=2.2.2)",
      "requests (>=2.21.0)",
      "pandas (>=0.24.1)",
      "geopandas (>=0.4.1)",
      "shapely (>=1.6.4)",
      "sentinelsat (>=0.12.2)"
    ],
    "requires_python": ">=3.7",
    "summary": "Sentinel-2 satellite tiles images downloader from Copernicus",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14374254,
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a767e73f0f141e59cca03095bdd169baab203ea92376ef1fd801d23dd1d9531",
          "md5": "65592ca1860a6d0930fc07a722902c31",
          "sha256": "298a1a9c0d4d401321af017e0953ab5ebde197143bfc9a08ef0a6949c73dd0aa"
        },
        "downloads": -1,
        "filename": "sentinelloader-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65592ca1860a6d0930fc07a722902c31",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12234,
        "upload_time": "2022-07-08T10:32:16",
        "upload_time_iso_8601": "2022-07-08T10:32:16.945195Z",
        "url": "https://files.pythonhosted.org/packages/9a/76/7e73f0f141e59cca03095bdd169baab203ea92376ef1fd801d23dd1d9531/sentinelloader-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f25615d5df2617399aa42aeaa85449c984636555c7219b8c6ab3bc6681bad070",
          "md5": "941dd06c4f29b8277b57c7477d65e307",
          "sha256": "d9ba14f75cbbd981e181b31aa0d444c00d5031b1b8f5ccebd7db2cc4110d907e"
        },
        "downloads": -1,
        "filename": "sentinelloader-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "941dd06c4f29b8277b57c7477d65e307",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13486,
        "upload_time": "2022-07-08T10:32:19",
        "upload_time_iso_8601": "2022-07-08T10:32:19.226124Z",
        "url": "https://files.pythonhosted.org/packages/f2/56/15d5df2617399aa42aeaa85449c984636555c7219b8c6ab3bc6681bad070/sentinelloader-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a767e73f0f141e59cca03095bdd169baab203ea92376ef1fd801d23dd1d9531",
        "md5": "65592ca1860a6d0930fc07a722902c31",
        "sha256": "298a1a9c0d4d401321af017e0953ab5ebde197143bfc9a08ef0a6949c73dd0aa"
      },
      "downloads": -1,
      "filename": "sentinelloader-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "65592ca1860a6d0930fc07a722902c31",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12234,
      "upload_time": "2022-07-08T10:32:16",
      "upload_time_iso_8601": "2022-07-08T10:32:16.945195Z",
      "url": "https://files.pythonhosted.org/packages/9a/76/7e73f0f141e59cca03095bdd169baab203ea92376ef1fd801d23dd1d9531/sentinelloader-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f25615d5df2617399aa42aeaa85449c984636555c7219b8c6ab3bc6681bad070",
        "md5": "941dd06c4f29b8277b57c7477d65e307",
        "sha256": "d9ba14f75cbbd981e181b31aa0d444c00d5031b1b8f5ccebd7db2cc4110d907e"
      },
      "downloads": -1,
      "filename": "sentinelloader-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "941dd06c4f29b8277b57c7477d65e307",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13486,
      "upload_time": "2022-07-08T10:32:19",
      "upload_time_iso_8601": "2022-07-08T10:32:19.226124Z",
      "url": "https://files.pythonhosted.org/packages/f2/56/15d5df2617399aa42aeaa85449c984636555c7219b8c6ab3bc6681bad070/sentinelloader-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}