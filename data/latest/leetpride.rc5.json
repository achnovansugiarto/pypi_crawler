{
  "info": {
    "author": "Alicia Yingling",
    "author_email": "AliciaYingling@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 style = font-size:80px>\n<div style=\"text-align: center;\">\n<span style=\"color:purple\">L</span>\n<span style=\"color:violet\">e</span>\n<span style=\"color:blue\">e</span>\n<span style=\"color:green\">t</span>\n<span style=\"color:yellow\">P</span>\n<span style=\"color:orange\">r</span>\n<span style=\"color:orange\">i</span>\n<span style=\"color:red\">d</span>\n<span style=\"color:violet\">e</span>\n</div>\n</h1>\n<center>\n💜 💙 🍏 💚 💛 📙 🍎\n</center>\n\n# To make algorithm and data structure learning more exciting, colorful and enjoyable.\n\nLeetPride interrogates the created classes and \nruns the tests specified to ensure success and optimize focus on problem-solving maximizing \ndata structure an algorithm absorption, groking and satisfaction.\n\n[TreeNode](docs/TreeNode.md) and [ListNode](docs/ListNode.md) support with helper\nmethods for easy test setup and printout of representations of trees and\nlinked lists are now available. \n\n\n><h3>One time Setup</h3>\n>>simply install with \n```pip install LeetPride```\n\nScreenshot of the 4 simple steps running in seconds.\n![img](LP_Examples/LeetPride-001.png)\n\n>><h3>Happy Problem Solving and Happy Pride !!</h3>\n> \n>>Quickly get going on given any problem by simply creating a py file to \n> begin coding solutions starting with import then common python boilerplate for \n> generating and running tests on solutions.\n>>\n>>\n> \n>>There are 4 basic simple setups to get going in seconds. The last is the code you will \n> write and generally goes first, followed by generate_tests() and then the \n> main boilierplate runners. \n> Also, there are capabilities to easily \ntest and time multiple method implementations and different class method call sequencing for\nclass testing. \n\n<ol>\n<li>\n\n    from LeetPride import run_process\n</li>\n\n<li>\n\n>> The standard main for running Class and Method solution tests is as follows:\n\n    def main() -> int:\n        return run_process(generate_tests())\n    \n    \n    if __name__ == '__main__':\n        exit(main())\n</li>\n\n<li>\n\n>>[Multiple examples can be found in the /Examples folder of test generation simplicity and support for\n> complex cases.](LP_Examples)\n>\n[Online gist example with screenshot of results for Daily LeetCode](https://gist.github.com/Tallicia/dcbfc28ee34b0685a88ad1bd07f90830)\n>\n>>Example of required generate_tests() method using separate tests and\nexpected results zipped together: \n\n \n    def generate_tests():\n        tests = (['Pride', 'loving', ],\n                 [None,\n                  'forever',\n                  ])\n        expected_test_results = [True, 'LGBTQ Lover forever !!!!', ]\n        return list(zip(tests[0], tests[1], expected_test_results))\n</li>\n\n<h2>For either -method- or -class- solutions:</h2>\n<li>\n\n> >\n>><ul>\n>>A or B ( but supports mixing too even. )\n>A. Class - class questions generally entail verifying output of sequenced method calls:\n>\n>\n\n    class Pride:\n        def __init__(self, always: bool = True):\n            self.love = always\n    \n        def loving(self, equality: str = 'forever more') -> bool:\n            return 'LGBTQ Lover ' + equality + ' !!!!' if self.love else 'Send Love'\n></ul>\n><ul>\n>B. Method - general class Solution, so to align with LC practices:\n>\n>\n\n\n    class Solution:\n        # @timeit\n        def method1(self, nums: List[int], target: int) -> List[int | None]:\n            return [nums[target]]\n</ul>\n</li>\n\n</ol>\n\n>> All together for reference example:\n> \n> ```pip install LeetPride```\n \n\n    from LeetPride import run_process\n    \n    \n    class Pride:\n        def __init__(self, always: bool = True):\n            self.love = always\n    \n        def loving(self, equality: str = 'forever more') -> bool:\n            return 'LGBTQ Lover ' + equality + ' !!!!' if self.love else 'Send Love'\n    \n    \n    def generate_tests():\n        tests = (['Pride', 'loving', ],\n                 [None,\n                  'forever',\n                  ])\n        expected_test_results = [True, 'LGBTQ Lover forever !!!!', ]\n        return list(zip(tests[0], tests[1], expected_test_results))\n    \n    \n    def main() -> int:\n        return run_process(generate_tests())\n    \n    \n    if __name__ == '__main__':\n        exit(main())\n\n\n<br>\n\n>Leet Code Daily N Queens II\n![img](LP_Examples/LeetPride-002.png)\n\n# A few notes:\nInstantiating the LeetCodeCore object takes an optional time_all bool parameter.\n-- If enabled to True, this will dynamically wrap any non @timeit wrapped methods\ndesignated for testing with a @timeit decorator and provide timing\nduration information detail.\n\nGraphies are being cleaned up and will be included in very near term update.\n\nEnjoy!\n<br>\nTallicia\n\n\n>\n>[LeetPride depends on modules listed in requirements.txt](requirements.txt)\n>\n>It is recommended to create a venv and install requirements.\n>>\n>>```\n>>    python3 -m venv venv\n>>    ./venv/scripts/activate\n>>    python3 -m pip install -U pip\n>>    python3 -m pip install -r requirements.txt \n>>\n\nPURPLE HEART (&#x1F49C;): 💜\nBLUE HEART (&#x1F499;): 💙\nGREEN APPLE (&#x1F34F;): 🍏\nGREEN HEART (&#x1F49A;): 💚\nYELLOW HEART (&#x1F49B;): 💛\nORANGE BOOK (&#x1F4D9;): 📙\nRED APPLE (&#x1F34E;): 🍎\nGREEN BOOK (&#x1F4D7;): 📗\nBLUE BOOK (&#x1F4D8;): 📘\nLARGE RED CIRCLE (&#x1F534;): 🔴\n\n<center>\n💜 💙 🍏 💚 💛 📙 🍎\n</center>\n<h1 style = font-size:80px>\n<div style=\"text-align: center;\">\n<span style=\"color:purple\">L</span>\n<span style=\"color:violet\">e</span>\n<span style=\"color:blue\">e</span>\n<span style=\"color:green\">t</span>\n<span style=\"color:yellow\">P</span>\n<span style=\"color:orange\">r</span>\n<span style=\"color:orange\">i</span>\n<span style=\"color:red\">d</span>\n<span style=\"color:violet\">e</span>\n</div>\n</h1>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Tallicia/LeetPride",
    "keywords": "",
    "license": "GNU AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "LeetPride",
    "package_url": "https://pypi.org/project/LeetPride/",
    "platform": null,
    "project_url": "https://pypi.org/project/LeetPride/",
    "project_urls": {
      "Homepage": "https://github.com/Tallicia/LeetPride"
    },
    "release_url": "https://pypi.org/project/LeetPride/0.6.9.2.6/",
    "requires_dist": [
      "colorama",
      "pystyle"
    ],
    "requires_python": ">=3.6",
    "summary": "LeetPride makes for a beautiful problem solving and learning environment for test and timing data structures and algorithms. Happy Pride everyone and may the leet coding favor your fortune.",
    "version": "0.6.9.2.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14087720,
  "releases": {
    "0.6.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b4e08a2c63981bdba0a421e334372cd03433b198c2fbd4b69158e4d2440d465",
          "md5": "d432d2a3dbd91eb467c88d794e8512c4",
          "sha256": "c94fb224cbea1f79e3fa448f36473e6c16c87544288cc860e3cf8546f21ef4fb"
        },
        "downloads": -1,
        "filename": "LeetPride-0.6.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d432d2a3dbd91eb467c88d794e8512c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17744,
        "upload_time": "2022-06-05T15:16:16",
        "upload_time_iso_8601": "2022-06-05T15:16:16.386486Z",
        "url": "https://files.pythonhosted.org/packages/5b/4e/08a2c63981bdba0a421e334372cd03433b198c2fbd4b69158e4d2440d465/LeetPride-0.6.9.2-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.6.9.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "183bd06693d44cab0bb4e41d7398ffa7ad449d0699e1036729879fa37911e639",
          "md5": "247880d8d0345cd7b08f75dbdc053453",
          "sha256": "3aaa105a0feaaf5d34f801017bf50062357151be3111168735bf08aca2042db0"
        },
        "downloads": -1,
        "filename": "LeetPride-0.6.9.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "247880d8d0345cd7b08f75dbdc053453",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25626,
        "upload_time": "2022-06-05T19:30:57",
        "upload_time_iso_8601": "2022-06-05T19:30:57.162476Z",
        "url": "https://files.pythonhosted.org/packages/18/3b/d06693d44cab0bb4e41d7398ffa7ad449d0699e1036729879fa37911e639/LeetPride-0.6.9.2.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.6.9.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80776edbb54d6550c35efb7fe90dd2dcc4f8906da9568374c793eb7af275d642",
          "md5": "b9ea80a2920a4006d8b1ac11f3b024eb",
          "sha256": "8222a860317b944914b4c03198c87a74301cb32125597e0adc879cc438454e2c"
        },
        "downloads": -1,
        "filename": "LeetPride-0.6.9.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9ea80a2920a4006d8b1ac11f3b024eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21364,
        "upload_time": "2022-06-05T20:33:34",
        "upload_time_iso_8601": "2022-06-05T20:33:34.484889Z",
        "url": "https://files.pythonhosted.org/packages/80/77/6edbb54d6550c35efb7fe90dd2dcc4f8906da9568374c793eb7af275d642/LeetPride-0.6.9.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.9.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84d4f800da8ff9aef4c11eab3175ce9728b51753cc458dd7e420542be8c29bc1",
          "md5": "dca8b238ac28e77c9f8c9fb6be8e0118",
          "sha256": "1860ac79883f29dd9a4b77e0657556fc3bb0e7b183124cdf6cf89050c6fbca73"
        },
        "downloads": -1,
        "filename": "LeetPride-0.6.9.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dca8b238ac28e77c9f8c9fb6be8e0118",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24925,
        "upload_time": "2022-06-08T13:03:21",
        "upload_time_iso_8601": "2022-06-08T13:03:21.681965Z",
        "url": "https://files.pythonhosted.org/packages/84/d4/f800da8ff9aef4c11eab3175ce9728b51753cc458dd7e420542be8c29bc1/LeetPride-0.6.9.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.9.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bd1df523de7d4f32243e969fafa1c75f8cd29c6d3d1a3ce7e1f9631be5740b0",
          "md5": "94f74c4b346765b92f81f150a11cd2a4",
          "sha256": "309bbf72261015ad670bee4856560f17ec191dedffce00e79f4b360feb20e592"
        },
        "downloads": -1,
        "filename": "LeetPride-0.6.9.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94f74c4b346765b92f81f150a11cd2a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25325,
        "upload_time": "2022-06-09T22:19:38",
        "upload_time_iso_8601": "2022-06-09T22:19:38.594537Z",
        "url": "https://files.pythonhosted.org/packages/8b/d1/df523de7d4f32243e969fafa1c75f8cd29c6d3d1a3ce7e1f9631be5740b0/LeetPride-0.6.9.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8bd1df523de7d4f32243e969fafa1c75f8cd29c6d3d1a3ce7e1f9631be5740b0",
        "md5": "94f74c4b346765b92f81f150a11cd2a4",
        "sha256": "309bbf72261015ad670bee4856560f17ec191dedffce00e79f4b360feb20e592"
      },
      "downloads": -1,
      "filename": "LeetPride-0.6.9.2.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94f74c4b346765b92f81f150a11cd2a4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 25325,
      "upload_time": "2022-06-09T22:19:38",
      "upload_time_iso_8601": "2022-06-09T22:19:38.594537Z",
      "url": "https://files.pythonhosted.org/packages/8b/d1/df523de7d4f32243e969fafa1c75f8cd29c6d3d1a3ce7e1f9631be5740b0/LeetPride-0.6.9.2.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}