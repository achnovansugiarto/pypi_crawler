{
  "info": {
    "author": "Yunfeng Wang",
    "author_email": "wyf.brz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<pre align=center style='color:green'>\n\n    ______            __  __  \n   / __/ /___  ____  / /_/ /_ \n  / /_/ / __ \\/ __ \\/ __/ __ \\\n / __/ / /_/ / /_/ / /_/ / / /\n/_/ /_/\\____/ .___/\\__/_/ /_/ \n           /_/                \n\n</pre>\n\n# flopth\n\nA simple program to calculate and visualize the FLOPs and Parameters of Pytorch models, with cli tool and Python API.\n\n# Features\n - Handy cli command to show flops and params quickly\n - Visualization percent of flops and params in each layer\n - Support multiple inputs in model's `forward` function\n - Support Both CPU and GPU mode\n - Support Torchscript Model (Only Parameters are shown)\n - Support Python3.5 and above\n\n# Installation\nInstall stable version of flopth via pypi:\n```bash\npip install flopth \n```\n\nor install latest version via github:\n```bash\npip install -U git+https://github.com/vra/flopth.git\n```\n\n# Usage examples\n## cli command\nflopth provide cli command `flopth` after installation. You can use it to get information of pytorch models quickly\n### Running on models in torchvision.models\nwith `flopth -m <model_name>`, flopth gives you all information about the `<model_name>`, input shape, output shape, parameter and flops of each layer, and total flops and params.\n\nHere is an example running on alexnet (default input size in (3, 224, 224)):\n```plain\n$ flopth -m alexnet \n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| module_name   | module_type       | in_shape    | out_shape   | params   | params_percent   | params_percent_vis             | flops    | flops_percent   | flops_percent_vis   |\n+===============+===================+=============+=============+==========+==================+================================+==========+=================+=====================+\n| features.0    | Conv2d            | (3,224,224) | (64,55,55)  | 23.296K  | 0.0381271%       |                                | 70.4704M | 9.84839%        | ####                |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.1    | ReLU              | (64,55,55)  | (64,55,55)  | 0.0      | 0.0%             |                                | 193.6K   | 0.027056%       |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.2    | MaxPool2d         | (64,55,55)  | (64,27,27)  | 0.0      | 0.0%             |                                | 193.6K   | 0.027056%       |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.3    | Conv2d            | (64,27,27)  | (192,27,27) | 307.392K | 0.50309%         |                                | 224.089M | 31.3169%        | ###############     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.4    | ReLU              | (192,27,27) | (192,27,27) | 0.0      | 0.0%             |                                | 139.968K | 0.0195608%      |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.5    | MaxPool2d         | (192,27,27) | (192,13,13) | 0.0      | 0.0%             |                                | 139.968K | 0.0195608%      |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.6    | Conv2d            | (192,13,13) | (384,13,13) | 663.936K | 1.08662%         |                                | 112.205M | 15.6809%        | #######             |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.7    | ReLU              | (384,13,13) | (384,13,13) | 0.0      | 0.0%             |                                | 64.896K  | 0.00906935%     |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.8    | Conv2d            | (384,13,13) | (256,13,13) | 884.992K | 1.44841%         |                                | 149.564M | 20.9018%        | ##########          |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.9    | ReLU              | (256,13,13) | (256,13,13) | 0.0      | 0.0%             |                                | 43.264K  | 0.00604624%     |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.10   | Conv2d            | (256,13,13) | (256,13,13) | 590.08K  | 0.965748%        |                                | 99.7235M | 13.9366%        | ######              |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.11   | ReLU              | (256,13,13) | (256,13,13) | 0.0      | 0.0%             |                                | 43.264K  | 0.00604624%     |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| features.12   | MaxPool2d         | (256,13,13) | (256,6,6)   | 0.0      | 0.0%             |                                | 43.264K  | 0.00604624%     |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| avgpool       | AdaptiveAvgPool2d | (256,6,6)   | (256,6,6)   | 0.0      | 0.0%             |                                | 9.216K   | 0.00128796%     |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| classifier.0  | Dropout           | (9216)      | (9216)      | 0.0      | 0.0%             |                                | 0.0      | 0.0%            |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| classifier.1  | Linear            | (9216)      | (4096)      | 37.7528M | 61.7877%         | ############################## | 37.7487M | 5.27547%        | ##                  |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| classifier.2  | ReLU              | (4096)      | (4096)      | 0.0      | 0.0%             |                                | 4.096K   | 0.000572425%    |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| classifier.3  | Dropout           | (4096)      | (4096)      | 0.0      | 0.0%             |                                | 0.0      | 0.0%            |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| classifier.4  | Linear            | (4096)      | (4096)      | 16.7813M | 27.4649%         | #############                  | 16.7772M | 2.34465%        | #                   |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| classifier.5  | ReLU              | (4096)      | (4096)      | 0.0      | 0.0%             |                                | 4.096K   | 0.000572425%    |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n| classifier.6  | Linear            | (4096)      | (1000)      | 4.097M   | 6.70531%         | ###                            | 4.096M   | 0.572425%       |                     |\n+---------------+-------------------+-------------+-------------+----------+------------------+--------------------------------+----------+-----------------+---------------------+\n\n\nFLOPs: 715.553M\nParams: 61.1008M\n```\n\n### Running on custom models\nAlso, given model name and the file path where the model defined, flopth will output model information:\n\nFor the dummpy network `MyModel` defined in `/tmp/my_model.py`,\n```python\n# file path: /tmp/my_model.py\n# model name:  MyModel\nimport torch.nn as nn\n\n\nclass MyModel(nn.Module):\n    def __init__(self):\n        super(MyModel, self).__init__()\n        self.conv1 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv2 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv3 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv4 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n\n    def forward(self, x1):\n        x1 = self.conv1(x1)\n        x1 = self.conv2(x1)\n        x1 = self.conv3(x1)\n        x1 = self.conv4(x1)\n        return x1\n```\nYou can use `flopth -m MyModel -p /tmp/my_model -i 3 224 224` to print model information:\n\n```plain\n$ flopth -m MyModel -p /tmp/my_model.py -i 3 224 224\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| module_name   | module_type   | in_shape    | out_shape   |   params | params_percent   | params_percent_vis   | flops    | flops_percent   | flops_percent_vis   |\n+===============+===============+=============+=============+==========+==================+======================+==========+=================+=====================+\n| conv1         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 25.0%           | ############        |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv2         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 25.0%           | ############        |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv3         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 25.0%           | ############        |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv4         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 25.0%           | ############        |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n\nFLOPs: 16.8591M\nParams: 336.0\n```\n\n#### Multiple inputs\nIf your model has more than one input in `forward`, you can add multiple `-i` parameters to flopth:\n\n```python\n# file path: /tmp/my_model.py\n# model name:  MyModel\nimport torch.nn as nn\n\n\nclass MyModel(nn.Module):\n    def __init__(self):\n        super(MyModel, self).__init__()\n        self.conv1 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv2 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv3 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv4 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n\n    def forward(self, x1, x2):\n        x1 = self.conv1(x1)\n        x1 = self.conv2(x1)\n        x2 = self.conv3(x2)\n        x2 = self.conv4(x2)\n        return (x1, x2)\n```\nYou can use `flopth -m MyModel -p /tmp/my_model -i 3 224 224 -i 3 128 128` to print model information:\n\n```plain\n flopth -m MyModel -p /tmp/my_model.py  -i 3 224 224 -i 3 128 128\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| module_name   | module_type   | in_shape    | out_shape   |   params | params_percent   | params_percent_vis   | flops    | flops_percent   | flops_percent_vis   |\n+===============+===============+=============+=============+==========+==================+======================+==========+=================+=====================+\n| conv1         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 37.6923%        | ##################  |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv2         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 37.6923%        | ##################  |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv3         | Conv2d        | (3,128,128) | (3,128,128) |       84 | 25.0%            | ############         | 1.37626M | 12.3077%        | ######              |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv4         | Conv2d        | (3,128,128) | (3,128,128) |       84 | 25.0%            | ############         | 1.37626M | 12.3077%        | ######              |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n\n\nFLOPs: 11.1821M\nParams: 336.0\n```\n\n#### Extra arguments in model's initialization\nflopth with options like `-x param1=int:3 param2=float:5.2` to process the extra parameters in model's initialization:\n```python\n# file path: /tmp/my_model.py\n# model name:  MyModel\nimport torch.nn as nn\n\n\nclass MyModel(nn.Module):\n    # Please Notice the parameters ks1 and ks2 here!\n    def __init__(self, ks1, ks2):\n        super(MyModel, self).__init__()\n        self.conv1 = nn.Conv2d(3, 3, kernel_size=ks1, padding=1)\n        self.conv2 = nn.Conv2d(3, 3, kernel_size=ks1, padding=1)\n        self.conv3 = nn.Conv2d(3, 3, kernel_size=ks2, padding=1)\n        self.conv4 = nn.Conv2d(3, 3, kernel_size=ks2, padding=1)\n\n    def forward(self, x1, x2):\n        x1 = self.conv1(x1)\n        x1 = self.conv2(x1)\n        x2 = self.conv3(x2)\n        x2 = self.conv4(x2)\n        return (x1, x2)\n```\nIn order to pass value to the arguments of `ks1` and `ks2`, we can run flopth like this:\n```plain\n$ flopth -m MyModel -p /tmp/my_model.py -i 3 224 224 -i 3 128 128 -x ks1=int:3 ks2=int:1\n+---------------+---------------+-------------+-------------+----------+------------------+-----------------------+----------+-----------------+-------------------------+\n| module_name   | module_type   | in_shape    | out_shape   |   params | params_percent   | params_percent_vis    | flops    | flops_percent   | flops_percent_vis       |\n+===============+===============+=============+=============+==========+==================+=======================+==========+=================+=========================+\n| conv1         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 43.75%           | ##################### | 4.21478M | 47.6707%        | ####################### |\n+---------------+---------------+-------------+-------------+----------+------------------+-----------------------+----------+-----------------+-------------------------+\n| conv2         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 43.75%           | ##################### | 4.21478M | 47.6707%        | ####################### |\n+---------------+---------------+-------------+-------------+----------+------------------+-----------------------+----------+-----------------+-------------------------+\n| conv3         | Conv2d        | (3,128,128) | (3,130,130) |       12 | 6.25%            | ###                   | 202.8K   | 2.29374%        | #                       |\n+---------------+---------------+-------------+-------------+----------+------------------+-----------------------+----------+-----------------+-------------------------+\n| conv4         | Conv2d        | (3,130,130) | (3,132,132) |       12 | 6.25%            | ###                   | 209.088K | 2.36486%        | #                       |\n+---------------+---------------+-------------+-------------+----------+------------------+-----------------------+----------+-----------------+-------------------------+\n\n\nFLOPs: 8.84146M\nParams: 192.0\n```\n\n### Line number mode\nOne of the fancy features of flopth is that given the line number where the model **object** is definited, flopth can print model information:\n```python\n# file path: /tmp/my_model.py\n# model name:  MyModel\nimport torch.nn as nn\n\n\nclass MyModel(nn.Module):\n    def __init__(self):\n        super(MyModel, self).__init__()\n        self.conv1 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv2 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv3 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv4 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n\n    def forward(self, x1, x2):\n        x1 = self.conv1(x1)\n        x1 = self.conv2(x1)\n        x2 = self.conv3(x2)\n        x2 = self.conv4(x2)\n        return (x1, x2)\n\n\nif __name__ == '__main__':\n    my_model = MyModel()\n```\n\nSince the model object `my_model` in defined in line 23, we can run flopth like this:\n```plain\n$ flopth -n 23 -p /tmp/my_model.py -i 3 224 224 -i 3 128 128\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| module_name   | module_type   | in_shape    | out_shape   |   params | params_percent   | params_percent_vis   | flops    | flops_percent   | flops_percent_vis   |\n+===============+===============+=============+=============+==========+==================+======================+==========+=================+=====================+\n| conv1         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 37.6923%        | ##################  |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv2         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 37.6923%        | ##################  |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv3         | Conv2d        | (3,128,128) | (3,128,128) |       84 | 25.0%            | ############         | 1.37626M | 12.3077%        | ######              |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv4         | Conv2d        | (3,128,128) | (3,128,128) |       84 | 25.0%            | ############         | 1.37626M | 12.3077%        | ######              |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n\n\nFLOPs: 11.1821M\nParams: 336.0\n```\n\n**Notice: Although line number mode of flopth is quite handy, it may fail when the model definition is too complex, e.g., using outer config file to initialize a model. In this case, I recommend you to use flopth's Python API detailed below.**\n\n## Python API\nThe Python API of flopth is quite simple:\n```python\nimport torch\nimport torch.nn as nn\n\n# import flopth\nfrom flopth import flopth\n\n# define Model\nclass MyModel(nn.Module):\n    def __init__(self):\n        super(MyModel, self).__init__()\n        self.conv1 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv2 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv3 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n        self.conv4 = nn.Conv2d(3, 3, kernel_size=3, padding=1)\n\n    def forward(self, x1):\n        x1 = self.conv1(x1)\n        x1 = self.conv2(x1)\n        x1 = self.conv3(x1)\n        x1 = self.conv4(x1)\n        return x1\n\n\n# declare Model object\nmy_model = MyModel()\n\n# Use input size\nflops, params = flopth(my_model, in_size=((3, 224, 224),))\nprint(flops, params)\n\n# Or use input tensors\ndummy_inputs = torch.rand(1, 3, 224, 224)\nflops, params = flopth(my_model, inputs=(dummy_inputs,))\nprint(flops, params)\n```\n\nThe output is like this:\n```plain\n16.8591M 336.0\n```\n\nTo show detail information of each layer, add `show_detail=True` in flopth function call:\n```python\nflops, params = flopth(my_model, in_size=((3, 224, 224),), show_detail=True)\n```\n\nThe outputs:\n```plain\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| module_name   | module_type   | in_shape    | out_shape   |   params | params_percent   | params_percent_vis   | flops    | flops_percent   | flops_percent_vis   |\n+===============+===============+=============+=============+==========+==================+======================+==========+=================+=====================+\n| conv1         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 25.0%           | ############        |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv2         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 25.0%           | ############        |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv3         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 25.0%           | ############        |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n| conv4         | Conv2d        | (3,224,224) | (3,224,224) |       84 | 25.0%            | ############         | 4.21478M | 25.0%           | ############        |\n+---------------+---------------+-------------+-------------+----------+------------------+----------------------+----------+-----------------+---------------------+\n\n\n16.8591M 336.0\n```\n\nTo show only the value of flops and params (no unit conversion), add `bare_number=True` to flopth function call:\n```python\nflops, params = flopth(my_model, in_size=((3, 224, 224),), bare_number=True)\n```\n\nThe outputs:\n```plain\n16859136 336\n```\n\n# Known issues\n 1. When use a module more than one time during `forward`, the FLOPs calculation is not correct, For example:\n ```python\nimport torch.nn as nn\n\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n\n        self.l1 = nn.Linear(10, 10)\n\n    def forward(self, x, y):\n        x = self.l1(x)\n        x = self.l1(x)\n        x = self.l1(x)\n\n        return x\n ```\n Will give wrong FLOPs value, because we use [register_buffer ](https://pytorch.org/docs/stable/_modules/torch/nn/modules/module.html#Module.register_buffer), which is bind to a `nn.Module` (in this example, `l1`). \n\n# TODOs\n - [x] Support multiple inputs\n - [x] Add parameter size\n - [x] Add file line mode\n - [x] Add line number mode \n - [ ] Support more modules \n\n# Contribution and issue\nAny discussion and contribution are very welcomed. Please open an issue to reach me. \n\n# Acknowledge\nThis program is mostly inspired by [torchstat](https://github.com/Swall0w/torchstat), great thanks to the creators of it.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vra/flopth",
    "keywords": "flopth,Pytorch,Flops,Deep-learning",
    "license": "MIT Licence",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flopth",
    "package_url": "https://pypi.org/project/flopth/",
    "platform": "any",
    "project_url": "https://pypi.org/project/flopth/",
    "project_urls": {
      "Homepage": "https://github.com/vra/flopth"
    },
    "release_url": "https://pypi.org/project/flopth/0.1.3/",
    "requires_dist": [
      "numpy",
      "tabulate",
      "torch",
      "torchvision"
    ],
    "requires_python": "",
    "summary": "A program to calculate FLOPs and Parameters of Pytorch models",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16621435,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b94601807c4eed0753d4959640a7577da65a121a0a160ffca022dcc1d9f5a3db",
          "md5": "7266b808b9fc4e29a0206b1dd462d281",
          "sha256": "9862ff7317c1ec4b65121466421b224ba8cf6f2513eaadf730ae2a93d535bc9a"
        },
        "downloads": -1,
        "filename": "flopth-0.0.1-py3.5.egg",
        "has_sig": false,
        "md5_digest": "7266b808b9fc4e29a0206b1dd462d281",
        "packagetype": "bdist_egg",
        "python_version": "3.5",
        "requires_python": null,
        "size": 13894,
        "upload_time": "2019-02-21T14:26:27",
        "upload_time_iso_8601": "2019-02-21T14:26:27.064791Z",
        "url": "https://files.pythonhosted.org/packages/b9/46/01807c4eed0753d4959640a7577da65a121a0a160ffca022dcc1d9f5a3db/flopth-0.0.1-py3.5.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ef48d3c025cd87330082201e97ed9180a8c58a9b71273033068ee5a58ffbeed",
          "md5": "25463f8bae67d9bf4a1c91657dae189f",
          "sha256": "459274609ba3264cf76e328c4f3f35472e2a39c3fd6dabb35301fae37208a69a"
        },
        "downloads": -1,
        "filename": "flopth-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25463f8bae67d9bf4a1c91657dae189f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4889,
        "upload_time": "2019-02-21T14:26:29",
        "upload_time_iso_8601": "2019-02-21T14:26:29.846302Z",
        "url": "https://files.pythonhosted.org/packages/8e/f4/8d3c025cd87330082201e97ed9180a8c58a9b71273033068ee5a58ffbeed/flopth-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f30b521819a9ebad9f28debfe12749e726454d0b93f9badd804778bb3e61f8b",
          "md5": "55626b823f7ffdf139726c42ee1a0cf3",
          "sha256": "bd59516aa7397e1cdc0755b98765322abe18a99b482c2e8952a0357c84ef8786"
        },
        "downloads": -1,
        "filename": "flopth-0.0.2-py3.6.egg",
        "has_sig": false,
        "md5_digest": "55626b823f7ffdf139726c42ee1a0cf3",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": null,
        "size": 11032,
        "upload_time": "2020-08-15T10:21:09",
        "upload_time_iso_8601": "2020-08-15T10:21:09.201152Z",
        "url": "https://files.pythonhosted.org/packages/7f/30/b521819a9ebad9f28debfe12749e726454d0b93f9badd804778bb3e61f8b/flopth-0.0.2-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03e6b665454257102111bdc4b110780b9ae2d9b8f8f9b9c801b0ce6f579cfcab",
          "md5": "38868a1d24f02b3b3dff509512a88177",
          "sha256": "1a4b5c5ec1f9e0096a34da62fc96689c5db9944acdaae00c9dbd664c386ea75d"
        },
        "downloads": -1,
        "filename": "flopth-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "38868a1d24f02b3b3dff509512a88177",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5247,
        "upload_time": "2020-08-15T10:21:10",
        "upload_time_iso_8601": "2020-08-15T10:21:10.947920Z",
        "url": "https://files.pythonhosted.org/packages/03/e6/b665454257102111bdc4b110780b9ae2d9b8f8f9b9c801b0ce6f579cfcab/flopth-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7db05f4da5d3077f9a51dcbc39a3b19c309ecc064b1f5fff3ff7183845a68ee",
          "md5": "99961f5c2d3ca799d8f4bf38bcab635b",
          "sha256": "5884dc7fcdd3ef3aee235ea7db08c17f14d105cba6bca9035be2c1f14dab6e3c"
        },
        "downloads": -1,
        "filename": "flopth-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "99961f5c2d3ca799d8f4bf38bcab635b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5320,
        "upload_time": "2020-08-15T10:37:58",
        "upload_time_iso_8601": "2020-08-15T10:37:58.561173Z",
        "url": "https://files.pythonhosted.org/packages/c7/db/05f4da5d3077f9a51dcbc39a3b19c309ecc064b1f5fff3ff7183845a68ee/flopth-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e42fca7c32de55509d97ea84d10f78053da7b14c690c15d34525e51de906dd3",
          "md5": "471e224c7e48dde70d43d8d9b600092d",
          "sha256": "fc4c31ab1ffa228d97748e575c44e9f2b59256d3162ecaef28e92ebaac86a2ce"
        },
        "downloads": -1,
        "filename": "flopth-0.0.4-py3.8.egg",
        "has_sig": false,
        "md5_digest": "471e224c7e48dde70d43d8d9b600092d",
        "packagetype": "bdist_egg",
        "python_version": "0.0.4",
        "requires_python": null,
        "size": 15844,
        "upload_time": "2022-10-22T15:20:12",
        "upload_time_iso_8601": "2022-10-22T15:20:12.447397Z",
        "url": "https://files.pythonhosted.org/packages/1e/42/fca7c32de55509d97ea84d10f78053da7b14c690c15d34525e51de906dd3/flopth-0.0.4-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b7a0420f851624a5110de5b9aea1388877904d4741b7af1d5773959765ff9ae",
          "md5": "71405959603048340b817fd6504aaee2",
          "sha256": "b46dc695220df3c3d4067ccec893649477538d4bdca7622ed3191614806c124f"
        },
        "downloads": -1,
        "filename": "flopth-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "71405959603048340b817fd6504aaee2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5690,
        "upload_time": "2020-09-11T15:24:49",
        "upload_time_iso_8601": "2020-09-11T15:24:49.278839Z",
        "url": "https://files.pythonhosted.org/packages/8b/7a/0420f851624a5110de5b9aea1388877904d4741b7af1d5773959765ff9ae/flopth-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "235583580842d1a9ad95f98be32420f049b29691b8a0e522bead33c38bfc8400",
          "md5": "846caf9fab5bb73b407a1de5b5d79931",
          "sha256": "18b145efd7b123cfedc62a567dd26306721a5f8580af96973edf846c4bf3134e"
        },
        "downloads": -1,
        "filename": "flopth-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "846caf9fab5bb73b407a1de5b5d79931",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7753,
        "upload_time": "2021-12-19T02:46:44",
        "upload_time_iso_8601": "2021-12-19T02:46:44.990968Z",
        "url": "https://files.pythonhosted.org/packages/23/55/83580842d1a9ad95f98be32420f049b29691b8a0e522bead33c38bfc8400/flopth-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "695c5c126781a82659a4d2f1fc4023099abc41c1e3e932bc97fbcee9aab2cff6",
          "md5": "1cc9c2bf0eeaa6fa38900cf79fa280dd",
          "sha256": "374dc450ebc3b46958b9fcc77c906dc013c2a76c618666285fd37acd26e67858"
        },
        "downloads": -1,
        "filename": "flopth-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1cc9c2bf0eeaa6fa38900cf79fa280dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6821,
        "upload_time": "2021-12-19T02:46:46",
        "upload_time_iso_8601": "2021-12-19T02:46:46.757030Z",
        "url": "https://files.pythonhosted.org/packages/69/5c/5c126781a82659a4d2f1fc4023099abc41c1e3e932bc97fbcee9aab2cff6/flopth-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.501": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34c6a3f0c13687d039108451730bc6ef032d00accc6aa9330389fe009a27449f",
          "md5": "cb646240393863a46d976ebacd79655c",
          "sha256": "890b1d029baaf1cb61acc58430c93a630d1db01374276725ef3f93ab15b1ce81"
        },
        "downloads": -1,
        "filename": "flopth-0.0.501-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb646240393863a46d976ebacd79655c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7786,
        "upload_time": "2021-12-19T02:54:07",
        "upload_time_iso_8601": "2021-12-19T02:54:07.417238Z",
        "url": "https://files.pythonhosted.org/packages/34/c6/a3f0c13687d039108451730bc6ef032d00accc6aa9330389fe009a27449f/flopth-0.0.501-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96876b720a2b93868919b37ec43710bd94ddfce265de6404f9eba6b0e593cc40",
          "md5": "8420c1770049c819386e85e934e788b8",
          "sha256": "0a9c73fdab341926fe5505bf370c2e36a5f81853943d296c17f7248957dd35a4"
        },
        "downloads": -1,
        "filename": "flopth-0.0.501.tar.gz",
        "has_sig": false,
        "md5_digest": "8420c1770049c819386e85e934e788b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10322,
        "upload_time": "2021-12-19T02:54:09",
        "upload_time_iso_8601": "2021-12-19T02:54:09.505506Z",
        "url": "https://files.pythonhosted.org/packages/96/87/6b720a2b93868919b37ec43710bd94ddfce265de6404f9eba6b0e593cc40/flopth-0.0.501.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.502": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9ce32b7f5bb0d5685aa9b30c94998eb1803a8d6befe2591641ce2c63cbc34d2",
          "md5": "5062cfb325e358c4b30bac9385eed7f8",
          "sha256": "21084a1c8045c98bc035dfd06388548de93922fb9648e41fce28b8ee5ed20438"
        },
        "downloads": -1,
        "filename": "flopth-0.0.502-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5062cfb325e358c4b30bac9385eed7f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7785,
        "upload_time": "2021-12-19T02:56:48",
        "upload_time_iso_8601": "2021-12-19T02:56:48.647893Z",
        "url": "https://files.pythonhosted.org/packages/a9/ce/32b7f5bb0d5685aa9b30c94998eb1803a8d6befe2591641ce2c63cbc34d2/flopth-0.0.502-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b46c8dc312a84815e7d5444a069813d05222e44c68f3b9ab04be9aa58fa93b8d",
          "md5": "d853d91445266e6f6f8c60a123adc8d6",
          "sha256": "f909d14614bab4f1165206294892d30a3d53aee27f69ec6bd5e308756f598ef8"
        },
        "downloads": -1,
        "filename": "flopth-0.0.502.tar.gz",
        "has_sig": false,
        "md5_digest": "d853d91445266e6f6f8c60a123adc8d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10320,
        "upload_time": "2021-12-19T02:56:50",
        "upload_time_iso_8601": "2021-12-19T02:56:50.643710Z",
        "url": "https://files.pythonhosted.org/packages/b4/6c/8dc312a84815e7d5444a069813d05222e44c68f3b9ab04be9aa58fa93b8d/flopth-0.0.502.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1d16a71a6cc07c0d112b397091a9262b977c74d2469dbc8361292dc2b125bc0",
          "md5": "e526e127f0f4459f2c9d2998fae48443",
          "sha256": "bc88658e6e1c12e07ac48321ccd1a8033f4b30b05662249c4730abd56b1601e7"
        },
        "downloads": -1,
        "filename": "flopth-0.1.0.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "e526e127f0f4459f2c9d2998fae48443",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13209,
        "upload_time": "2022-10-22T15:20:17",
        "upload_time_iso_8601": "2022-10-22T15:20:17.843269Z",
        "url": "https://files.pythonhosted.org/packages/f1/d1/6a71a6cc07c0d112b397091a9262b977c74d2469dbc8361292dc2b125bc0/flopth-0.1.0.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08d1a864668a7ce332f97aeb9aed2bed94a9fb1f1367a4341065c6bac22709f8",
          "md5": "2587524be3e130dc0018b39a0a4652d7",
          "sha256": "9eb0cf585d11d6ebd7a4e281438bc42e9a7a34574c4ae636b4843bfc21213432"
        },
        "downloads": -1,
        "filename": "flopth-0.1.0-py3.8.egg",
        "has_sig": false,
        "md5_digest": "2587524be3e130dc0018b39a0a4652d7",
        "packagetype": "bdist_egg",
        "python_version": "0.1.0",
        "requires_python": null,
        "size": 16098,
        "upload_time": "2022-10-22T15:20:14",
        "upload_time_iso_8601": "2022-10-22T15:20:14.733210Z",
        "url": "https://files.pythonhosted.org/packages/08/d1/a864668a7ce332f97aeb9aed2bed94a9fb1f1367a4341065c6bac22709f8/flopth-0.1.0-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc15447050fa48f7c0ac90da088fc2754d0821d92d3e33dc7e1be9cbc4bd8c25",
          "md5": "a1d566a221ccd10ab42f63b49973b198",
          "sha256": "e26ace51080a0f3ae2c200df1a995120d92156be1dd12ed3f50ed2dc188ca98a"
        },
        "downloads": -1,
        "filename": "flopth-0.1.1.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "a1d566a221ccd10ab42f63b49973b198",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16470,
        "upload_time": "2022-10-22T15:25:30",
        "upload_time_iso_8601": "2022-10-22T15:25:30.692265Z",
        "url": "https://files.pythonhosted.org/packages/fc/15/447050fa48f7c0ac90da088fc2754d0821d92d3e33dc7e1be9cbc4bd8c25/flopth-0.1.1.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50a400b51e1968c2a7011cca8fad1e6df565c655efd2f2fe6495361f4213cd1d",
          "md5": "85fbb711a4be19ba8b021065be20aba9",
          "sha256": "78a7dce3b7820bf648a9d0e300eac3dd9394ffc28637b34f91894d4bf99baa5b"
        },
        "downloads": -1,
        "filename": "flopth-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85fbb711a4be19ba8b021065be20aba9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11530,
        "upload_time": "2022-10-23T15:25:52",
        "upload_time_iso_8601": "2022-10-23T15:25:52.491760Z",
        "url": "https://files.pythonhosted.org/packages/50/a4/00b51e1968c2a7011cca8fad1e6df565c655efd2f2fe6495361f4213cd1d/flopth-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55688acaf99b2eb10fecf16f79bed3eedd76db4e1e567a48c96d5a0712e8eb94",
          "md5": "664cd0b55e496ca7a9453ab1993602a3",
          "sha256": "ecd774ea2dd7ad570c21e33edfefe676532623533f8169d61a4ccd669821a7cc"
        },
        "downloads": -1,
        "filename": "flopth-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "664cd0b55e496ca7a9453ab1993602a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11531,
        "upload_time": "2022-10-23T15:27:22",
        "upload_time_iso_8601": "2022-10-23T15:27:22.510825Z",
        "url": "https://files.pythonhosted.org/packages/55/68/8acaf99b2eb10fecf16f79bed3eedd76db4e1e567a48c96d5a0712e8eb94/flopth-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a2ffee6b5c45277ca8a6f12834f607c53e67c78968ea4c31e2df2be256af2c9",
          "md5": "434df4bcb0035054f721c141ca93afe9",
          "sha256": "bc76693e1cbd6a063eb11e7ce784a41d7e9b5352a35c43138f82223d15afd8bd"
        },
        "downloads": -1,
        "filename": "flopth-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "434df4bcb0035054f721c141ca93afe9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13817,
        "upload_time": "2022-10-23T15:27:24",
        "upload_time_iso_8601": "2022-10-23T15:27:24.951906Z",
        "url": "https://files.pythonhosted.org/packages/1a/2f/fee6b5c45277ca8a6f12834f607c53e67c78968ea4c31e2df2be256af2c9/flopth-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5de38a118480ed989ab9c45ed4ed26d959267ab43a4dfb4922f00b8aeb7bc823",
          "md5": "59a06ddd2865dd920740ba3707e17bef",
          "sha256": "288935088cbf0120778dc6639cc2a94bd51003c0d85831b2057dadcd57f53302"
        },
        "downloads": -1,
        "filename": "flopth-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59a06ddd2865dd920740ba3707e17bef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11811,
        "upload_time": "2023-01-30T16:19:34",
        "upload_time_iso_8601": "2023-01-30T16:19:34.326063Z",
        "url": "https://files.pythonhosted.org/packages/5d/e3/8a118480ed989ab9c45ed4ed26d959267ab43a4dfb4922f00b8aeb7bc823/flopth-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b452ee6bbca51f47680883a22f2e4f7dfaa7a1aab3447855a6db5e80d4eeefb2",
          "md5": "098fa7f93b1c493e3e87bea5a4cb6240",
          "sha256": "83b129c76156a6f5234607ea53c58f1bfa052047c047d3e366e6caad2333cf0f"
        },
        "downloads": -1,
        "filename": "flopth-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "098fa7f93b1c493e3e87bea5a4cb6240",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14052,
        "upload_time": "2023-01-30T16:19:36",
        "upload_time_iso_8601": "2023-01-30T16:19:36.798888Z",
        "url": "https://files.pythonhosted.org/packages/b4/52/ee6bbca51f47680883a22f2e4f7dfaa7a1aab3447855a6db5e80d4eeefb2/flopth-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5de38a118480ed989ab9c45ed4ed26d959267ab43a4dfb4922f00b8aeb7bc823",
        "md5": "59a06ddd2865dd920740ba3707e17bef",
        "sha256": "288935088cbf0120778dc6639cc2a94bd51003c0d85831b2057dadcd57f53302"
      },
      "downloads": -1,
      "filename": "flopth-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "59a06ddd2865dd920740ba3707e17bef",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11811,
      "upload_time": "2023-01-30T16:19:34",
      "upload_time_iso_8601": "2023-01-30T16:19:34.326063Z",
      "url": "https://files.pythonhosted.org/packages/5d/e3/8a118480ed989ab9c45ed4ed26d959267ab43a4dfb4922f00b8aeb7bc823/flopth-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b452ee6bbca51f47680883a22f2e4f7dfaa7a1aab3447855a6db5e80d4eeefb2",
        "md5": "098fa7f93b1c493e3e87bea5a4cb6240",
        "sha256": "83b129c76156a6f5234607ea53c58f1bfa052047c047d3e366e6caad2333cf0f"
      },
      "downloads": -1,
      "filename": "flopth-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "098fa7f93b1c493e3e87bea5a4cb6240",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14052,
      "upload_time": "2023-01-30T16:19:36",
      "upload_time_iso_8601": "2023-01-30T16:19:36.798888Z",
      "url": "https://files.pythonhosted.org/packages/b4/52/ee6bbca51f47680883a22f2e4f7dfaa7a1aab3447855a6db5e80d4eeefb2/flopth-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}