{
  "info": {
    "author": "",
    "author_email": "Johanna England <johanna.england@sikt.no>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Monitoring"
    ],
    "description": "# argus_ticket_github\n\nThis is a plugin to create tickets in Github from [Argus](https://github.com/Uninett/argus-server)\n\n## Settings\n\n* `TICKET_ENDPOINT`: `\"https://github.com/\"` or link to self-hosted instance, absolute URL\n* `TICKET_AUTHENTICATION_SECRET`: Create a [personal access token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token) with the scope `repo`:\n\n    ```\n    {\n        \"token\": token\n    }\n    ```\n\n    It is recommended to create a Github API user and to ensure that that user\n    has the necessary authorization for creating issues in the relevant\n    repository.\n\n* `TICKET_INFORMATION`:\n\n    Project namespace and name (obligatory)\n\n    ```\n    {\n        \"project_namespace_and_name\": project_namespace_and_name\n    }\n    ```\n\n    To know which project to create the ticket in the Github API needs to know\n    the owner and name of it. The owner is the user or organization the Github\n    repository belongs to and the name is the name of the Github project.\n\n    For the Github project\n    [Hello Git World](https://github.com/githubtraining/hellogitworld) the\n    dictionary would look like this:\n\n    ```\n    {\n       \"project_namespace_and_name\": \"githubtraining/hellogitworld\",\n    }\n    ```\n\n    Labels (optional)\n\n    There are two ways of automatically filling labels:\n\n    1. Labels that are always the same, independent of the incident.\n    These will be set in `labels_set`.\n\n\n        ```\n        {\n            \"labels_set\" : [\n                label1,\n                label2,\n                label3,\n            ]\n        }\n        ```\n\n    2. Labels that are filled by attributes of the Argus incident.\n    These are set in `labels_mapping` which is a list of the names of the\n    attributes as they are returned by the API (e.g. `start_time`). If the\n    information can be found in the tags the it has to be a dictionary with\n    `tag` as the key and the name of the tag as the value (e.g.\n    {\"tag\": \"host\"}).\n\n        ```\n        {\n            \"labels_mapping\" : [\n                attribute_of_incident,\n                {\"tag\": name_of_tag},\n            ]\n        }\n        ```\n\n## Code style\n\nargus_ticket_github uses black as a source code formatter. Black can be installed\nby running\n\n```console\n$ pip install black\n```\n\nA pre-commit hook will format new code automatically before committing.\nTo enable this pre-commit hook, run\n\n```console\n$ pre-commit install\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "Johanna England <johanna.england@sikt.no>",
    "name": "argus-ticket-github",
    "package_url": "https://pypi.org/project/argus-ticket-github/",
    "platform": null,
    "project_url": "https://pypi.org/project/argus-ticket-github/",
    "project_urls": {
      "Home": "https://github.com/Uninett/argus_ticket_github",
      "Issues": "https://github.com/Uninett/argus_ticket_github/issues"
    },
    "release_url": "https://pypi.org/project/argus-ticket-github/1.0/",
    "requires_dist": [
      "argus-server>=1.9",
      "markdownify>=0.11",
      "PyGithub>=1.58",
      "requests>=2.14",
      "tox ; extra == \"test\"",
      "coverage ; extra == \"test\""
    ],
    "requires_python": ">=3.7",
    "summary": "Allow argus-server to create tickets in Github",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17508812,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1931c88e9c1f4b612970c2ce96d9be772975007860898662c51cec478a81300a",
          "md5": "c4f94b909f0342515aee1458b8f3d183",
          "sha256": "ab942c8dc6f3ceb3449d6ecbe34087e8e4fa75cd428790f6c0e046d39bd7e607"
        },
        "downloads": -1,
        "filename": "argus_ticket_github-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4f94b909f0342515aee1458b8f3d183",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 3910,
        "upload_time": "2023-03-30T10:54:09",
        "upload_time_iso_8601": "2023-03-30T10:54:09.431342Z",
        "url": "https://files.pythonhosted.org/packages/19/31/c88e9c1f4b612970c2ce96d9be772975007860898662c51cec478a81300a/argus_ticket_github-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b342448290bc1d70ab6c4afbf5d6b6a96620f907ecaee1bf3770e538e308609",
          "md5": "a5d64c84ac40b87584db9e0ab60c9693",
          "sha256": "ab6b1e6572b49d10e2e0f76aeefdf68db909fa409f3449ab5d23ae2e061ce0e2"
        },
        "downloads": -1,
        "filename": "argus_ticket_github-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a5d64c84ac40b87584db9e0ab60c9693",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3515,
        "upload_time": "2023-03-30T10:54:11",
        "upload_time_iso_8601": "2023-03-30T10:54:11.172899Z",
        "url": "https://files.pythonhosted.org/packages/1b/34/2448290bc1d70ab6c4afbf5d6b6a96620f907ecaee1bf3770e538e308609/argus_ticket_github-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1931c88e9c1f4b612970c2ce96d9be772975007860898662c51cec478a81300a",
        "md5": "c4f94b909f0342515aee1458b8f3d183",
        "sha256": "ab942c8dc6f3ceb3449d6ecbe34087e8e4fa75cd428790f6c0e046d39bd7e607"
      },
      "downloads": -1,
      "filename": "argus_ticket_github-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c4f94b909f0342515aee1458b8f3d183",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 3910,
      "upload_time": "2023-03-30T10:54:09",
      "upload_time_iso_8601": "2023-03-30T10:54:09.431342Z",
      "url": "https://files.pythonhosted.org/packages/19/31/c88e9c1f4b612970c2ce96d9be772975007860898662c51cec478a81300a/argus_ticket_github-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b342448290bc1d70ab6c4afbf5d6b6a96620f907ecaee1bf3770e538e308609",
        "md5": "a5d64c84ac40b87584db9e0ab60c9693",
        "sha256": "ab6b1e6572b49d10e2e0f76aeefdf68db909fa409f3449ab5d23ae2e061ce0e2"
      },
      "downloads": -1,
      "filename": "argus_ticket_github-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a5d64c84ac40b87584db9e0ab60c9693",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 3515,
      "upload_time": "2023-03-30T10:54:11",
      "upload_time_iso_8601": "2023-03-30T10:54:11.172899Z",
      "url": "https://files.pythonhosted.org/packages/1b/34/2448290bc1d70ab6c4afbf5d6b6a96620f907ecaee1bf3770e538e308609/argus_ticket_github-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}