{
  "info": {
    "author": "Ben Carlsson",
    "author_email": "ben@twos.dev",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Indenter\n\n[![pypi badge](https://img.shields.io/pypi/v/indenter)](https://pypi.org/project/indenter/)\n\nIndenter is a Python package that assists with programmatically indenting text to\narbitrary levels using `with` blocks and `+`/`-` operators. It has zero dependencies.\n\nUse Indenter to get easy structured output, even as your control flow weaves through\nmultiple functions:\n\n```python\nfrom indenter import Indenter\n\ndef validate_email(ind, email):\n  print(ind + 'Validating email...')\n  # ...\n\ndef parse_date(ind, date):\n  print(ind + f'Parsing date {date}')\n  # ...\n  with ind:\n    print(ind + 'Checking components')\n    y, m, d = date.split('-')\n  print(ind + 'Date is valid!')\n\ndef get_user_record(ind):\n  print(ind + 'Fetching user from database...')\n  validate_email(ind + 1, 'ben@twos.dev')\n  birthday = parse_date(ind + 1, '1990-08-21')\n  print(ind + 'Fetched user!')\n  # ...\n\nind = Indenter(symbol='→ ')\nget_user_record(ind)\n```\nOutput:\n```plain\nFetching user from database...\n→ Validating email...\n→ Parsing date 1990-08-21\n→ → Checking components\n→ Date is valid!\nFetched user!\n```\n\n## Getting started\n\n### Requirements\n\n- Python 3.6+\n\n### Installing\n\n```sh\npip install indenter\n```\n\n## Usage\n\n```python\nfrom indenter import Indenter\nwith Indenter() as ind:\n  print(ind + \"Text to be indented\")\n\n# Output:\n#   Text to be indented\n```\n\nYou can nest an arbitrary number of `with` calls:\n\n```python\nfrom indenter import Indenter\nind = Indenter()\nwith ind:\n  print(ind + \"I'm one level deep\")\n  with ind:\n    print(ind + \"I'm two levels deep\")\n  print(ind + \"I'm one level deep again\")\n\n# Output:\n#   I'm one level deep\n#     I'm two levels deep\n#   I'm one level deep again\n```\n\nYou can manually adjust the indentation level using `+`/`-`. Use this to indent output\nby nested function calls correctly:\n\n```python\nimport logging\nfrom indenter import Indenter\n\nind = Indenter()\n\nfunc do_work(ind):\n  logging.debug(ind + \"Doing some work\")\n\nfunc do_business_logic():\n  ind = Indenter()\n  logging.debug(ind + \"Doing some business logic\")\n  do_work(ind + 1)\n  logging.debug(ind + \"Finishing some busines logic\")\n\ndo_some_business_logic()\n\n# Output:\n# Doing some business logic\n#   Doing some work\n# Finishing some busines logic\n```\n\n### Customization\n\nThe default indentation symbol is two spaces. You can override this by passing `symbol`:\n\n```python\nfrom indenter import Indenter\n\n# Indent with arrows\nwith Indenter(symbol=\"→ \") as ind:\n  print(ind + \"I'm indented with an arrow\")\n  with ind:\n    print(ind + \"I'm indented with two arrows\")\n\n# Indent with 4 spaces per level\nwith Indenter(symbol=\"    \") as ind:\n  print(ind + \"I'm indented by four spaces\")\n\n# Indent with tabs\nwith Indenter(symbol=\"\\t\") as ind:\n  print(ind + \"I'm indented by one tab\")\n\n# Output:\n# → I'm indented by an arrow\n# → → I'm indented by two arrows\n#     I'm indented by four spaces\n# \tI'm indented by one tab\n```\n\nWhen using custom symbols, nested `with`s will inherit the symbol of\ntheir parent. If you need more than one type of indentation at once,\nyou must make and manage multiple `Indenter`s.\n\nThe indenter starts at zero levels of indentation by default, and\nincreases by one level for each `with` block. This can be overridden\nto start at other levels, such as 1:\n\n```python\nfrom indenter import Indenter\nind = Indenter(start=1)\nprint(ind + \"First-level indentation\")\nwith ind:\n  print(ind + \"Second-level indentation\")\n\n# Output:\n#   First-level indentation\n#     Second-level indentation\n```\n\n## Contributing\n\nI welcome contributions and foster an inclusive environment.\n\n### Testing\n\nTesting requires `pytest` (`pip install pytest`).\n\n```sh\npytest\n```\n\n### Releasing\n\n_(mostly notes for myself)_\n\nTo release, first bump the version number in `setup.cfg`, commit the result, then run:\n\n```sh\nrm -rf dist\npip install build twine\npython -m build --wheel\ntwine check dist/* # optional; check for common issues\ntwine upload dist/*\n```\n\nFor ease of browsing by users, you should also cut a release on GitHub.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/glacials/indenter",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "indenter",
    "package_url": "https://pypi.org/project/indenter/",
    "platform": "any",
    "project_url": "https://pypi.org/project/indenter/",
    "project_urls": {
      "Homepage": "https://github.com/glacials/indenter"
    },
    "release_url": "https://pypi.org/project/indenter/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Programmatically increase and decrease text indentation.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12780603,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a8534b81301651155da4b4a5f9b44219cc57df403a60cb7523c92bbcdf86709",
          "md5": "dfe30eb8f304143fded8f2fbe65c4e9f",
          "sha256": "dc14af8756332aba281510e14e9f8362c885e19befcf423259f50d305327394d"
        },
        "downloads": -1,
        "filename": "indenter-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfe30eb8f304143fded8f2fbe65c4e9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2974,
        "upload_time": "2021-01-23T02:55:04",
        "upload_time_iso_8601": "2021-01-23T02:55:04.785363Z",
        "url": "https://files.pythonhosted.org/packages/4a/85/34b81301651155da4b4a5f9b44219cc57df403a60cb7523c92bbcdf86709/indenter-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d93319a290ed981186ab33aebf13a4ea94ff5b1e47617ebf6cdf7e902cd1a83",
          "md5": "221a08fa518454bf680859946cc9d6bc",
          "sha256": "4f488d299f85016b8b65c5268a45964ff9dbd384786ff9500961cae6026846e1"
        },
        "downloads": -1,
        "filename": "indenter-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "221a08fa518454bf680859946cc9d6bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2589,
        "upload_time": "2021-01-23T02:55:06",
        "upload_time_iso_8601": "2021-01-23T02:55:06.021496Z",
        "url": "https://files.pythonhosted.org/packages/8d/93/319a290ed981186ab33aebf13a4ea94ff5b1e47617ebf6cdf7e902cd1a83/indenter-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11b2bc6ae12ca6221c441d6f1f5a4aae77dc7a0a39d05bcab050c22470663ede",
          "md5": "dd5196adf38411f648808a88a9b25477",
          "sha256": "8ac22f0477adbb6b52df36fbc7aa7ea76bb74ccc548166ef50b2b3b354616634"
        },
        "downloads": -1,
        "filename": "indenter-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd5196adf38411f648808a88a9b25477",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3574,
        "upload_time": "2021-01-23T03:16:35",
        "upload_time_iso_8601": "2021-01-23T03:16:35.080101Z",
        "url": "https://files.pythonhosted.org/packages/11/b2/bc6ae12ca6221c441d6f1f5a4aae77dc7a0a39d05bcab050c22470663ede/indenter-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "530706005060814ac61f176a949bc0319e2aa695de96f31ad6d59a657ccddade",
          "md5": "6a24664d0ed2f97d0e4cb419c23d186f",
          "sha256": "19b70ad879bad1eba8e1103e0a37eb3cd47f950b9ac7a46de5360686ea2079ca"
        },
        "downloads": -1,
        "filename": "indenter-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6a24664d0ed2f97d0e4cb419c23d186f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3234,
        "upload_time": "2021-01-23T03:16:36",
        "upload_time_iso_8601": "2021-01-23T03:16:36.316286Z",
        "url": "https://files.pythonhosted.org/packages/53/07/06005060814ac61f176a949bc0319e2aa695de96f31ad6d59a657ccddade/indenter-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c3bf755ed6068ce924257ec8938cfbd22bb729fcd124fa855cc408f27be469c",
          "md5": "f313882a7398b294baa73fb0c166dd7d",
          "sha256": "f43b81d7793718766e191a548db688e9f066cda86e8d0d456ecbca0cdde4a9c9"
        },
        "downloads": -1,
        "filename": "indenter-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f313882a7398b294baa73fb0c166dd7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5439,
        "upload_time": "2022-02-03T20:51:54",
        "upload_time_iso_8601": "2022-02-03T20:51:54.271024Z",
        "url": "https://files.pythonhosted.org/packages/0c/3b/f755ed6068ce924257ec8938cfbd22bb729fcd124fa855cc408f27be469c/indenter-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "088504213e58c39c012490867d81f1729de04f921dcc3b96052ee5ba4bb75eac",
          "md5": "217d2d26daf076372345e45e93e0f084",
          "sha256": "9167e3cc61d6ddfbbe5892fb7a288a52cf640dda516beace756192fd57bbbb0e"
        },
        "downloads": -1,
        "filename": "indenter-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "217d2d26daf076372345e45e93e0f084",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5456,
        "upload_time": "2022-02-03T21:08:33",
        "upload_time_iso_8601": "2022-02-03T21:08:33.597622Z",
        "url": "https://files.pythonhosted.org/packages/08/85/04213e58c39c012490867d81f1729de04f921dcc3b96052ee5ba4bb75eac/indenter-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "088504213e58c39c012490867d81f1729de04f921dcc3b96052ee5ba4bb75eac",
        "md5": "217d2d26daf076372345e45e93e0f084",
        "sha256": "9167e3cc61d6ddfbbe5892fb7a288a52cf640dda516beace756192fd57bbbb0e"
      },
      "downloads": -1,
      "filename": "indenter-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "217d2d26daf076372345e45e93e0f084",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5456,
      "upload_time": "2022-02-03T21:08:33",
      "upload_time_iso_8601": "2022-02-03T21:08:33.597622Z",
      "url": "https://files.pythonhosted.org/packages/08/85/04213e58c39c012490867d81f1729de04f921dcc3b96052ee5ba4bb75eac/indenter-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}