{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# Trainer ⏱\n\n[![PyPI](https://img.shields.io/pypi/v/trainer-py?color=green)](https://pypi.org/project/trainer-py)\n\nLightweight benchmarking package with zero dependencies\n\n## Installation\n\n```sh\npip install trainer-py\n```\n\n## Usage\n\n```Python\nfrom trainer import Trainer\n\nt = Trainer().round(2)\n\nwith t('metric1'):\n    time.sleep(0.5)\n\nwith t('metric2'):\n    time.sleep(0.3)\n\nm = t.add_total('total').metrics\nprint(m)\n```\n\n**output:**\n\n```\n{\n    'metric1': {'start': 1656844808.09, 'end': 1656844808.59, 'interval': 0.5},\n    'metric2': {'start': 1656844808.59, 'end': 1656844808.89, 'interval': 0.3},\n    'total': {'start': 1656844808.09, 'end': 1656844808.89, 'interval': 0.8}\n}\n```\n\n> for more, see\n[examples](https://github.com/MichalMoravik/trainer/blob/4bace6cdcdead86ab7d5574c5fe0e73159b6e2e6/examples/example.py)\n\n## Features\n\n### Contexts\n\n- using Python [contexts](https://docs.python.org/3/library/contextlib.html),\nyou can indent specific parts of the code you want to benchmark\n- each measured code part produces a 'metric' dictionary with name (key),\nstart (epoch), end (epoch), interval (epoch)\n- all metrics can be retrieved at any point by calling `trainer.metrics`\n\n### Total Execution Time\n\n- you can add the total execution time by executing `trainer.add_total()`\nat the end\n- by default, the total time considers the first metric's start time as its\nstart, but it is possible to prematurely start measurement by calling\n`trainer.start_measuring()` instead\n\n### Rounding\n\n- all epoch timestamps can be rounded to any number of decimals using\n`trainer.round(<int>)`\n- all epoch timestamps can be rounded to full seconds (making them\nintegers instead of floats) by executing `trainer.round()` or `trainer.round(0)`\n\n### Turning off Trainer\n\n- to turn off trainer, the DummyTrainer class is provided. This class can be\nswitched on, for example, based on a value of an environment variable\n\n```Python\n    trainer = Trainer() if ENV_VAR else DummyTrainer()\n```\n\n- calling `.metrics` at the end will always return in an empty dictionary which\nis falsy in Python. Your following code that uses the `metrics` dictionary can\nfirst do a check for this falsy value\n\n</br>\n\n[go to examples](https://github.com/MichalMoravik/trainer/blob/4bace6cdcdead86ab7d5574c5fe0e73159b6e2e6/examples/example.py)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MichalMoravik/trainer",
    "keywords": "metrics,benchmark",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "trainer-py",
    "package_url": "https://pypi.org/project/trainer-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/trainer-py/",
    "project_urls": {
      "Homepage": "https://github.com/MichalMoravik/trainer"
    },
    "release_url": "https://pypi.org/project/trainer-py/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Lightweight context-based library for benchmarking",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14325197,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "400f51df0aaf444a64e1e736fe97d9fd4c3beff5510a9262321e2993f43e6ae6",
          "md5": "52221502ff86a0c22cc37d8d7ad4a7f9",
          "sha256": "8941515745936ae66ecffa7d6e548b5c9d8ae479773368efbbfe7b0406cae126"
        },
        "downloads": -1,
        "filename": "trainer-py-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "52221502ff86a0c22cc37d8d7ad4a7f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2872,
        "upload_time": "2022-07-03T12:52:37",
        "upload_time_iso_8601": "2022-07-03T12:52:37.208032Z",
        "url": "https://files.pythonhosted.org/packages/40/0f/51df0aaf444a64e1e736fe97d9fd4c3beff5510a9262321e2993f43e6ae6/trainer-py-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5935754a9cf80e4a3665c786796b4cc175ba40f0c99fcf7e305c07e8359ccf2",
          "md5": "9831c876551b65812efad08d8a88c21e",
          "sha256": "5d97fcff15454b3b607770d2583bc2d09e56a03a550e76c1edb44f082468a126"
        },
        "downloads": -1,
        "filename": "trainer-py-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9831c876551b65812efad08d8a88c21e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3108,
        "upload_time": "2022-07-03T14:35:22",
        "upload_time_iso_8601": "2022-07-03T14:35:22.330912Z",
        "url": "https://files.pythonhosted.org/packages/f5/93/5754a9cf80e4a3665c786796b4cc175ba40f0c99fcf7e305c07e8359ccf2/trainer-py-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cea20afa4ce450807909668a44f138b81efb28cc0d0835852e05fb741cc809a1",
          "md5": "b7f9874199cca61c634ee02d226e4d42",
          "sha256": "37e458982d2e2c09692f405336fa027ec9be215d593741046984841b2d6bdca1"
        },
        "downloads": -1,
        "filename": "trainer-py-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b7f9874199cca61c634ee02d226e4d42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3260,
        "upload_time": "2022-07-03T20:04:46",
        "upload_time_iso_8601": "2022-07-03T20:04:46.383869Z",
        "url": "https://files.pythonhosted.org/packages/ce/a2/0afa4ce450807909668a44f138b81efb28cc0d0835852e05fb741cc809a1/trainer-py-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adfc723c36afdeb1873f8976923cd1168a5d4958493023f4cdef1137996190bd",
          "md5": "6c0dcf654e23f344c89f72a6e4ed3f80",
          "sha256": "b3fe2303d95aef58163c8c67ba4d7bad1c5f209b5f0b2a6918f2f8db1b2536a9"
        },
        "downloads": -1,
        "filename": "trainer-py-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6c0dcf654e23f344c89f72a6e4ed3f80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3588,
        "upload_time": "2022-07-03T23:26:39",
        "upload_time_iso_8601": "2022-07-03T23:26:39.452948Z",
        "url": "https://files.pythonhosted.org/packages/ad/fc/723c36afdeb1873f8976923cd1168a5d4958493023f4cdef1137996190bd/trainer-py-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "adfc723c36afdeb1873f8976923cd1168a5d4958493023f4cdef1137996190bd",
        "md5": "6c0dcf654e23f344c89f72a6e4ed3f80",
        "sha256": "b3fe2303d95aef58163c8c67ba4d7bad1c5f209b5f0b2a6918f2f8db1b2536a9"
      },
      "downloads": -1,
      "filename": "trainer-py-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6c0dcf654e23f344c89f72a6e4ed3f80",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3588,
      "upload_time": "2022-07-03T23:26:39",
      "upload_time_iso_8601": "2022-07-03T23:26:39.452948Z",
      "url": "https://files.pythonhosted.org/packages/ad/fc/723c36afdeb1873f8976923cd1168a5d4958493023f4cdef1137996190bd/trainer-py-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}