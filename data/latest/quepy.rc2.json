{
  "info": {
    "author": "Rafael Carrascosa, Gonzalo Garcia Berrotaran",
    "author_email": "rafacarrascosa@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Database",
      "Topic :: Scientific/Engineering :: Human Machine Interfaces",
      "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Linguistic",
      "Topic :: Utilities"
    ],
    "description": "::                              \n\n    __ _ _   _  ___ _ __  _   _\n   / _` | | | |/ _ \\ '_ \\| | | |\n  | (_| | |_| |  __/ |_) | |_| |\n   \\__, |\\__,_|\\___| .__/ \\__, |\n      |_|          |_|    |___/\n\n\nWhat's quepy?\n=============\n\nQuepy is a python framework to transform natural language questions to queries\nin a database query language. It can be easily customized to different kinds of\nquestions in natural language and database queries. So, with little coding you\ncan build your own system for natural language access to your database.\n\nCurrently **Quepy** provides support for\n`Sparql <http://www.w3.org/TR/rdf-sparql-query/>`_ and\n`MQL <http://www.freebase.com/>`_\nquery languages. \nWe plan to extended it to other database query languages.\n\n\nAn example\n==========\n\nTo illustrate what can you do with quepy, we included an example application to\naccess `DBpedia <http://dbpedia.org/>`_ contents via their `sparql` endpoint.\n\nYou can try the example online here: `Online demo <http://quepy.machinalis.com/>`_\n\nOr, you can try the example yourself by doing:\n\n::\n\n    python examples/dbpedia/main.py \"Who is Tom Cruise?\"\n\nAnd it will output something like this:\n\n.. code-block:: sparql\n\n    SELECT DISTINCT ?x1 WHERE {\n        ?x0 rdf:type foaf:Person.\n        ?x0 rdfs:label \"Tom Cruise\"@en.\n        ?x0 rdfs:comment ?x1.\n    }\n    \n    Thomas Cruise Mapother IV, widely known as Tom Cruise, is an...\n\nThe transformation from natural language to sparql is done by first using a\nspecial form of regular expressions:\n\n.. code-block:: python\n\n    person_name = Group(Plus(Pos(\"NNP\")), \"person_name\")\n    regex = Lemma(\"who\") + Lemma(\"be\") + person_name + Question(Pos(\".\"))\n\nAnd then using and a convenient way to express semantic relations:\n\n.. code-block:: python\n\n    person = IsPerson() + HasKeyword(person_name)\n    definition = DefinitionOf(person)\n\nThe rest of the transformation is handled automatically by the framework to\nfinally produce this sparql:\n\n.. code-block:: sparql\n\n    SELECT DISTINCT ?x1 WHERE {\n        ?x0 rdf:type foaf:Person.\n        ?x0 rdfs:label \"Tom Cruise\"@en.\n        ?x0 rdfs:comment ?x1.\n    }\n\n\nUsing a very similar procedure you could generate and MQL query for the same question\nobtaining:\n\n.. code-block:: javascript\n\n    [{\n        \"/common/topic/description\": [{}],\n        \"/type/object/name\": \"Tom Cruise\",\n        \"/type/object/type\": \"/people/person\"\n    }]\n\n\nInstallation\n============\n\nYou need to have installed `numpy <http://numpy.scipy.org/>`_.\nOther than that, you can just type:\n\n::\n    \n    pip install quepy\n\nYou can get more details on the installation here:\n\n`<http://quepy.readthedocs.org/en/latest/installation.html>`_\n\nLearn more\n==========\n\nYou can find a tutorial here:\n\n`<http://quepy.readthedocs.org/en/latest/tutorial.html>`_\n\nAnd the full documentation here:\n\n`<http://quepy.readthedocs.org/>`_\n\nJoin our `mailing list <http://groups.google.com/group/quepy>`_\n\n\nContribute!\n===========\n\nWant to help develop quepy? Welcome aboard! Find us in\n\n    - #quepy at freenode\n    - quepydev at librelist.com",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/machinalis/quepy",
    "keywords": "regular expressions,regexp,re,NLP,natural language processing,natural language interface to database,sparql,database,interface,quepy",
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "quepy",
    "package_url": "https://pypi.org/project/quepy/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/quepy/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/machinalis/quepy"
    },
    "release_url": "https://pypi.org/project/quepy/0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A framework to convert natural language to database queries.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3834195,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ede72fb3279bd5c8ea7ad7ca40d6e370b641a81f1145dbfa8a6301f4458f3b9b",
          "md5": "1a899b23931d978c90adfbab69917e7b",
          "sha256": "4db0da7ead185aaf2d73e00f7668427349c79f8d8c1125114dfb89c6bc011d0e"
        },
        "downloads": -1,
        "filename": "quepy-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1a899b23931d978c90adfbab69917e7b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38216,
        "upload_time": "2012-12-05T19:18:42",
        "upload_time_iso_8601": "2012-12-05T19:18:42.628209Z",
        "url": "https://files.pythonhosted.org/packages/ed/e7/2fb3279bd5c8ea7ad7ca40d6e370b641a81f1145dbfa8a6301f4458f3b9b/quepy-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9bc42d951d3f4cb95186c7be736f493a75852f21e6d11484927963a09c16514",
          "md5": "093bebdf2f09535311f7bd6b0da72d78",
          "sha256": "72b563c5f181935f66c9f3b6105400cfbe382f0821c60a119445374dc16cec52"
        },
        "downloads": -1,
        "filename": "quepy-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "093bebdf2f09535311f7bd6b0da72d78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42299,
        "upload_time": "2013-09-10T18:02:28",
        "upload_time_iso_8601": "2013-09-10T18:02:28.078197Z",
        "url": "https://files.pythonhosted.org/packages/e9/bc/42d951d3f4cb95186c7be736f493a75852f21e6d11484927963a09c16514/quepy-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9bc42d951d3f4cb95186c7be736f493a75852f21e6d11484927963a09c16514",
        "md5": "093bebdf2f09535311f7bd6b0da72d78",
        "sha256": "72b563c5f181935f66c9f3b6105400cfbe382f0821c60a119445374dc16cec52"
      },
      "downloads": -1,
      "filename": "quepy-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "093bebdf2f09535311f7bd6b0da72d78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 42299,
      "upload_time": "2013-09-10T18:02:28",
      "upload_time_iso_8601": "2013-09-10T18:02:28.078197Z",
      "url": "https://files.pythonhosted.org/packages/e9/bc/42d951d3f4cb95186c7be736f493a75852f21e6d11484927963a09c16514/quepy-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}