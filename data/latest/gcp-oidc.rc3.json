{
  "info": {
    "author": "Total Wine",
    "author_email": "crsintegrations@totalwine.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# gcp-oidc\n\nGenerate OpenID Connect tokens for GCP service accounts\n\n## **About**\n\nThis library is a wrapper around the google-cloud-iam client library. It's primary function is to support automatically refreshing an expired id token.\n\n## **How it Works**\n\nTwo identities are involved in generating an id token:\nthe caller, and the client service account for whom the credential is created. The caller is responsible for requesting a token from Google for the client service account.\n\nThe caller is a Google service account that's derived from the `GOOGLE_APPLICATION_CREDENTIALS` environment variable. Alternatively, the caller can be explicitly set through the client constructor by specifying a path to a service account file.\n\nThe client service account (for whom the credential is created) is automatically set to the caller service account if not explicitly provided.\n\n**The caller must have the `serviceAccountTokenCreator` role on the client service account in order to generate an id token for that account.**\n\n\n## **Examples**\n\nInstall the package\n\n    pip install gcp-oidc\n\n\n\nGenerate an id token for the default service account.\n\n\n    from oidcutils import GCPOIDCClient\n\n    # Instantiate a OIDC client object and generate a token.\n    # Hang on to the client instance for future invocations.\n    # Any subsequent calls to get_id_token() will automatically \n    # refresh the token if the token has expired.\n    client = GCPOIDCClient()\n    token = client.get_id_token()\n\n\nGenerate an id token for a specific client service account when you know the client service account email address.\n\n\n    from oidcutils import GCPOIDCClient\n\n    options = {\n        'debug': True,\n\t    'client_service_account_email': 'my-service-123@mygcproject.iam.gserviceaccount.com'\n    }\n    client = GCPOIDCClient(options)\n    token = client.get_id_token()\n\n\nGenerate an id token for a specific client service account when you have a client service account JSON key file.\n\n\n    from oidcutils import GCPOIDCClient\n\n    options = {\n        'debug': True,\n\t    'client_service_account_file': '/path_to_service_account_file.json'\n    }\n    client = GCPOIDCClient(options)\n    token = client.get_id_token()\n\nGenerate an id token for a specific client service account using a specific caller.\n\n\n    from oidcutils import GCPOIDCClient\n\n    options = {\n        'debug': True,\n        'caller_service_account_file': '/path_to_caller_service_account_file.json'\n\t    'client_service_account_email': 'my-service-123@mygcproject.iam.gserviceaccount.com'\n    }\n    client = GCPOIDCClient(options)\n    token = client.get_id_token()\n\n\n## Client Methods and Properties\n\n\n|  Property| Description  |\n|--|--|\n| expiry | Date time when the token expires |\n| audience | The configured JWT audience claim |\n| client_email | The client email address |\n\n--\n\n| Method | Description  |\n|--|--|\n| refresh_id_token(options)| Forces a token refresh. Takes an optional dict positional parameter. '**service_account_id**' and '**audience**' keys can be provided values. Return nothing.  |\n| get_id_token()| Returns a valid id token |\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gcp-oidc",
    "package_url": "https://pypi.org/project/gcp-oidc/",
    "platform": "",
    "project_url": "https://pypi.org/project/gcp-oidc/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/gcp-oidc/0.0.12/",
    "requires_dist": [
      "google-cloud-iam"
    ],
    "requires_python": ">=3.6",
    "summary": "Generate OIDC tokens for GCP Service accounts.",
    "version": "0.0.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8040348,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f979d91e7a4dcee596519735bda895258d021cac9af6230ab4b1923895d5ace3",
          "md5": "db7f98a90b857d24fac98a68e8ef63b4",
          "sha256": "71197f61351c6ea351488922cbfc78b7ce663386cd72169042d3cf970bbcc93d"
        },
        "downloads": -1,
        "filename": "gcp_oidc-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db7f98a90b857d24fac98a68e8ef63b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3307,
        "upload_time": "2020-08-25T03:34:28",
        "upload_time_iso_8601": "2020-08-25T03:34:28.132640Z",
        "url": "https://files.pythonhosted.org/packages/f9/79/d91e7a4dcee596519735bda895258d021cac9af6230ab4b1923895d5ace3/gcp_oidc-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "354e78c5d9d0eeaf83a588cc024a4fb3d3453f78d175d80f2de6a31889dd0930",
          "md5": "e597cc818b5404488e9b5786fc826904",
          "sha256": "89f22241b29df1adef17923ee3f230f08622baa6cd720ac3c11512a4a4cbebb9"
        },
        "downloads": -1,
        "filename": "gcp-oidc-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "e597cc818b5404488e9b5786fc826904",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2020,
        "upload_time": "2020-08-25T03:34:29",
        "upload_time_iso_8601": "2020-08-25T03:34:29.303839Z",
        "url": "https://files.pythonhosted.org/packages/35/4e/78c5d9d0eeaf83a588cc024a4fb3d3453f78d175d80f2de6a31889dd0930/gcp-oidc-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94cd2fba5ee9824b486ec8a5be74bdd29b84d68b73ce1313f614eb90550faae3",
          "md5": "9915c8414936706df8a3bed2d0d1e819",
          "sha256": "b9763ba82a590a60bd406d4f8d9e5cabf33444e7c4dc7a0076bb2ce188ef4f81"
        },
        "downloads": -1,
        "filename": "gcp_oidc-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9915c8414936706df8a3bed2d0d1e819",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4327,
        "upload_time": "2020-08-26T01:58:14",
        "upload_time_iso_8601": "2020-08-26T01:58:14.490971Z",
        "url": "https://files.pythonhosted.org/packages/94/cd/2fba5ee9824b486ec8a5be74bdd29b84d68b73ce1313f614eb90550faae3/gcp_oidc-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2681010a62db57bb5c0822ef819a80cb8721c696bfbd83957850186a8e48d536",
          "md5": "fce590412cf468cea4b55a9daf50f4ff",
          "sha256": "965e3b240e55c7ad276a96a990325b1485286483c57c1634f7daf94169ffebc0"
        },
        "downloads": -1,
        "filename": "gcp-oidc-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "fce590412cf468cea4b55a9daf50f4ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3220,
        "upload_time": "2020-08-26T01:58:15",
        "upload_time_iso_8601": "2020-08-26T01:58:15.436349Z",
        "url": "https://files.pythonhosted.org/packages/26/81/010a62db57bb5c0822ef819a80cb8721c696bfbd83957850186a8e48d536/gcp-oidc-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ac2c1662d263fe8a28655e403152fb9e90fe3f2f4c7c35b1260961385e730bd",
          "md5": "472b12741921b602827ee7a8cd18c7a2",
          "sha256": "8ad5c7c0c58707445be271bf19c11c5709486590bf781feaea664928d90141f8"
        },
        "downloads": -1,
        "filename": "gcp_oidc-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "472b12741921b602827ee7a8cd18c7a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4322,
        "upload_time": "2020-08-26T03:17:00",
        "upload_time_iso_8601": "2020-08-26T03:17:00.906569Z",
        "url": "https://files.pythonhosted.org/packages/7a/c2/c1662d263fe8a28655e403152fb9e90fe3f2f4c7c35b1260961385e730bd/gcp_oidc-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc9a95a693bb051dadb91c27f5d9b46dcfe72cefc6d54f6d2b6deb5a25d1e09d",
          "md5": "7874089e47502e1ec53bec8d7b387b80",
          "sha256": "4e95faf9d60c90cc3dd58b8d308be5f19e69602f99393143bb7f0c6b8a2709aa"
        },
        "downloads": -1,
        "filename": "gcp-oidc-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "7874089e47502e1ec53bec8d7b387b80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3219,
        "upload_time": "2020-08-26T03:17:01",
        "upload_time_iso_8601": "2020-08-26T03:17:01.690867Z",
        "url": "https://files.pythonhosted.org/packages/fc/9a/95a693bb051dadb91c27f5d9b46dcfe72cefc6d54f6d2b6deb5a25d1e09d/gcp-oidc-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ac2c1662d263fe8a28655e403152fb9e90fe3f2f4c7c35b1260961385e730bd",
        "md5": "472b12741921b602827ee7a8cd18c7a2",
        "sha256": "8ad5c7c0c58707445be271bf19c11c5709486590bf781feaea664928d90141f8"
      },
      "downloads": -1,
      "filename": "gcp_oidc-0.0.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "472b12741921b602827ee7a8cd18c7a2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4322,
      "upload_time": "2020-08-26T03:17:00",
      "upload_time_iso_8601": "2020-08-26T03:17:00.906569Z",
      "url": "https://files.pythonhosted.org/packages/7a/c2/c1662d263fe8a28655e403152fb9e90fe3f2f4c7c35b1260961385e730bd/gcp_oidc-0.0.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc9a95a693bb051dadb91c27f5d9b46dcfe72cefc6d54f6d2b6deb5a25d1e09d",
        "md5": "7874089e47502e1ec53bec8d7b387b80",
        "sha256": "4e95faf9d60c90cc3dd58b8d308be5f19e69602f99393143bb7f0c6b8a2709aa"
      },
      "downloads": -1,
      "filename": "gcp-oidc-0.0.12.tar.gz",
      "has_sig": false,
      "md5_digest": "7874089e47502e1ec53bec8d7b387b80",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3219,
      "upload_time": "2020-08-26T03:17:01",
      "upload_time_iso_8601": "2020-08-26T03:17:01.690867Z",
      "url": "https://files.pythonhosted.org/packages/fc/9a/95a693bb051dadb91c27f5d9b46dcfe72cefc6d54f6d2b6deb5a25d1e09d/gcp-oidc-0.0.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}