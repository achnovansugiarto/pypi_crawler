{
  "info": {
    "author": "Scott Rothbarth",
    "author_email": "srserves85@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "==================\navro-to-python-etp\n==================\n\navro-to-python-etp is a light tool for compiling avro schema files (.avsc) to python classes making using avro schemata easy.\n\n\n* Free software: MIT license\n* Documentation: https://avro-to-python-etp.readthedocs.io.\n\nInstallation\n^^^^^^^^^^^^\n\nPip install (recommended)\n-------------------------\nTo install avro-to-python-etp, run this command in your terminal:\n\n.. code-block:: console\n\n    $ pip install avro-to-python-etp\n\nInstall From Source ()\n----------------------\n\nThe sources for avro-to-python-etp can be downloaded source as well.\n\nClone the public repository:\n\n.. code-block:: console\n\n    $ git clone git://github.com/srserves85/avro-to-python-etp\n\n\nOnce you have a copy of the source, you can install it with:\n\n\n.. code-block:: console\n\n    $ python setup.py install\n\nor\n\n.. code-block:: console\n\n    $ pip install -e .\n\n\nExamples\n^^^^^^^^\n\nMajority of the use of avro-to-python-etp is assumed to be used as a cli, but you can still import and use the python classes under the hood as well.\n\nCLI (without --pip)\n-------------------\nTo use the cli, here is the available cli commands:\n\n.. code-block:: bash\n\n    avro-to-python-etp [source] [target]\n        Options:\n            --pip TEXT              make package pip installable using this name\n            --author TEXT           author name of the pip installable package\n            --package_version TEXT  version of the pip intallable package  [default: 0.1.0]\n            --help                  Show this message and exit\n\n\nThe above will compile the avsc files and convert the to python classes found in [path_to_target_directory]\n\nAn example of doing this is the following:\n\n.. code-block:: bash\n\n    avro-to-python-etp [path_to_source_avsc_files] [path_to_target_directory]\n\n\nIf you run the above on a valid avro avsc file, you should then be able to import them as you would in the avro idl namespace Here is an example of a single avsc record from the namespace: *name.space* and name: *RecordClass*:\n\n.. code-block:: python\n\n    from name.space import RecordClass\n\n    record = RecordClass({'foo': True, 'bar': 'true', 'baz': 10, 'food': 'CHOCOLATE'})\n\n\nCLI (with --pip)\n----------------\nYou can also choose to make compiled avro packages ***pip installable*** by adding the \"--pip\" flags. An example of this is the following:\n.. code-block:: bash\n\n    avro-to-python-etp [path_to_source_avsc_files] [path_to_target_directory] --pip test_avro\n\nBy running this, you should be able to pip install the above package you created from the target directory you specified by running:\n\n.. code-block:: bash\n\n    pip install -e path_to_target_directory\n\nNow that you have the package installed, you can import it by it's package name and namespace. Here is the same example of the same avsc from above, only with a pip package of *test_avro*:\n\n.. code-block:: python\n\n    from test_avro.name.space import RecordClass\n\n    record = RecordClass({'foo': True, 'bar': 'true', 'baz': 10, 'food': 'CHOCOLATE'})\n\n\navro-to-python-etp in a Script\n------------------------------\nYou can also use the reader and writer packages in avro-to-python-etp as you would any other python package. Avro to python is split between a *reader* and *writer* classes. avro-to-python-etp treates namespaces as acyclic trees and uses depth first search to ensure no duplication or namespace collisions on read and write. An example useage is below:\n\n.. code-block:: python\n\n    from avro_to_python.reader import AvscReader\n    from avro_to_python.writer import AvroWriter\n\n    # initialize the reader object\n    reader = AvscReader(directory='tests/avsc/records/')\n\n    # generate the acyclic tree object\n    reader.read()\n\n    # initialize the writer object\n    writer = AvroWriter(reader.file_tree, pip='test_pip')\n\n    # compile python files using 'tests/test_records as the namespace root'\n    writer.write(root_dir='tests/test_records')\n\n\n\nRoadmap\n^^^^^^^\n\nReader\n\n- [X] Create Namespace Trees on nested namespaces\n- [X] Read Record and Enum File\n- [X] Primitive types\n- [X] Array Types\n- [X] Union types\n- [X] References to other files\n- [X] Map Types\n- [ ] Logical Types (Currently just converts to primitive types)\n\nWriter\n\n- [X] Base Schema Writer\n- [X] Base Record Schema\n- [X] Base Enum Schema\n- [X] Primitive Types Schema\n- [X] Array Types Schema\n- [X] Union Types Schema\n- [X] Map Types\n- [ ] Logical Types Schema (Currently just converts to primitive types)\n- [X] Add configs to pip install package\n\nCLI\n\n- [X] Wrap Writer and Reader into one cli commmit\n- [X] Add pip install option (would include all files to pip install compiled package)\n- [ ] Add better --help documentation\n\nDocumentation\n\n- [ ] Document reader class\n- [ ] Document writer class\n- [ ] Document cli",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/geosiris-technologies/avro-to-python-etp",
    "keywords": "avro,etp",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "avro-to-python-etp",
    "package_url": "https://pypi.org/project/avro-to-python-etp/",
    "platform": null,
    "project_url": "https://pypi.org/project/avro-to-python-etp/",
    "project_urls": {
      "Homepage": "https://github.com/geosiris-technologies/avro-to-python-etp",
      "Repository": "https://github.com/geosiris-technologies/avro-to-python-etp"
    },
    "release_url": "https://pypi.org/project/avro-to-python-etp/1.0.1/",
    "requires_dist": [
      "Jinja2 (>=3.1.2,<4.0.0)",
      "click (>=8.1.3,<9.0.0)",
      "anytree (>=2.8.0,<3.0.0)",
      "nested-lookup (>=0.2.25,<0.3.0)",
      "typingx (>=0.6.0,<0.7.0)",
      "wheel (>=0.37.1,<0.38.0)",
      "avro (>=1.11.1,<2.0.0)"
    ],
    "requires_python": ">=3.8,<3.11",
    "summary": "Light tool for compiling avro schema files (.avsc) to python classes making using avro schemata easy.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15178465,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58fe05aaf06fe483adba5b16afaf2c50066eae596f440889fdba5acc42a10dc8",
          "md5": "c03c3fc767344f8e49d0eef48704d81e",
          "sha256": "1d4b0dd9431e0f5a5ce2e9ea9f152be72712f3905486e325cf9940f07f2b5756"
        },
        "downloads": -1,
        "filename": "avro_to_python_etp-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c03c3fc767344f8e49d0eef48704d81e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 40963,
        "upload_time": "2022-09-21T14:59:54",
        "upload_time_iso_8601": "2022-09-21T14:59:54.930165Z",
        "url": "https://files.pythonhosted.org/packages/58/fe/05aaf06fe483adba5b16afaf2c50066eae596f440889fdba5acc42a10dc8/avro_to_python_etp-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4810fcacde83907b29343dfbaa905f8c7b81bfbc7b77446b7cf88d47fe194bf1",
          "md5": "fe5790b645de3d2f59a5cc7a0fce5cc0",
          "sha256": "8cd317a1a90f6f324bda4def946595898c05c6603744e33e60a5fa3f0eeed988"
        },
        "downloads": -1,
        "filename": "avro-to-python-etp-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fe5790b645de3d2f59a5cc7a0fce5cc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 25480,
        "upload_time": "2022-09-21T14:59:52",
        "upload_time_iso_8601": "2022-09-21T14:59:52.764983Z",
        "url": "https://files.pythonhosted.org/packages/48/10/fcacde83907b29343dfbaa905f8c7b81bfbc7b77446b7cf88d47fe194bf1/avro-to-python-etp-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "958ed1c160f1f94df43c9419ef94e17410bfe1e4468a2ee147a888965e2f1759",
          "md5": "8adc814567fd25b0794ca33b48041a92",
          "sha256": "1517a0e3cfb59ad984701c357c5cf83ece500d086acf5fad362a1149740fb65d"
        },
        "downloads": -1,
        "filename": "avro_to_python_etp-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8adc814567fd25b0794ca33b48041a92",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 41009,
        "upload_time": "2022-09-22T12:08:47",
        "upload_time_iso_8601": "2022-09-22T12:08:47.058524Z",
        "url": "https://files.pythonhosted.org/packages/95/8e/d1c160f1f94df43c9419ef94e17410bfe1e4468a2ee147a888965e2f1759/avro_to_python_etp-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ddc64c2924be78025274a3b5431bdba31e3562c3543e4e21a24d08275f861cb",
          "md5": "a63c9ecebd2989674219c79648e5ed9b",
          "sha256": "ec4bd7e9556532c799baf571c0c022cc101b24de48ed0bfd3aee12d0f588c9f5"
        },
        "downloads": -1,
        "filename": "avro-to-python-etp-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a63c9ecebd2989674219c79648e5ed9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 25536,
        "upload_time": "2022-09-22T12:08:45",
        "upload_time_iso_8601": "2022-09-22T12:08:45.296157Z",
        "url": "https://files.pythonhosted.org/packages/1d/dc/64c2924be78025274a3b5431bdba31e3562c3543e4e21a24d08275f861cb/avro-to-python-etp-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "958ed1c160f1f94df43c9419ef94e17410bfe1e4468a2ee147a888965e2f1759",
        "md5": "8adc814567fd25b0794ca33b48041a92",
        "sha256": "1517a0e3cfb59ad984701c357c5cf83ece500d086acf5fad362a1149740fb65d"
      },
      "downloads": -1,
      "filename": "avro_to_python_etp-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8adc814567fd25b0794ca33b48041a92",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<3.11",
      "size": 41009,
      "upload_time": "2022-09-22T12:08:47",
      "upload_time_iso_8601": "2022-09-22T12:08:47.058524Z",
      "url": "https://files.pythonhosted.org/packages/95/8e/d1c160f1f94df43c9419ef94e17410bfe1e4468a2ee147a888965e2f1759/avro_to_python_etp-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ddc64c2924be78025274a3b5431bdba31e3562c3543e4e21a24d08275f861cb",
        "md5": "a63c9ecebd2989674219c79648e5ed9b",
        "sha256": "ec4bd7e9556532c799baf571c0c022cc101b24de48ed0bfd3aee12d0f588c9f5"
      },
      "downloads": -1,
      "filename": "avro-to-python-etp-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a63c9ecebd2989674219c79648e5ed9b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<3.11",
      "size": 25536,
      "upload_time": "2022-09-22T12:08:45",
      "upload_time_iso_8601": "2022-09-22T12:08:45.296157Z",
      "url": "https://files.pythonhosted.org/packages/1d/dc/64c2924be78025274a3b5431bdba31e3562c3543e4e21a24d08275f861cb/avro-to-python-etp-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}