{
  "info": {
    "author": "Daniel Steck",
    "author_email": "daniel.m.steck@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "This is a Python script for printing *performance profiles* as defined by\n[E. D. Dolan and J. J. Mor&eacute;](http://dx.doi.org/10.1007/s101070100263).\n\nIt is based on [`perfprof.m`](https://github.com/higham/matlab-guide-3ed/blob/master/perfprof.m)\nfrom the MATLAB Guide by D. J. Higham and N. J. Higham.\n\n## Performance profiles\n\nPerformance profiles are a mechanism to visualise the performance of multiple algorithms on multiple test problems.\nGiven `m` problems and `n` algorithms, we're interested in the relative performance of all algorithms across the entire problem set.\n\nLet `t = t(i, j) > 0` be a measure of the performance of solver `j` on problem `i`, where lower means \"better\".\nCommon choices for `t` are:\n\n*  execution/CPU time;\n*  number of iterations (assuming the algorithms are iterative);\n*  the number of evaluations of some reference function (e.g., the ordering predicate in a sorting algorithm, or the objective function in an optimisation algorithm).\n\nGiven this data, a typical performance profile may look like this:\n\n![Example](https://raw.githubusercontent.com/dmsteck/perfprof.py/master/examples/example.svg \"Example performance profile\")\n\nEach algorithm has one line plot, where a point `(x, y)` means that, for `x` of the problem set, the algorithm in question was within a factor of `y` of the respective best algorithm.\nFor example:\n\n*  the point &asymp;`(1, 0.6)` means that `Alg2` was the fastest algorithm on around 60% of the problem set;\n*  the point &asymp;`(1.5, 0.4)` means that `Alg3` was within a factor of 1.5 of the respective best algorithm for 40% of problems;\n   *  note that the \"best\" algorithm may be different for each problem;\n*  the point &asymp;`(1.5, 0.95)` means that `Alg1` was within a factor of 1.5 of the respective best algorithm for 95% of problems;\n*  etc.\n\nGenerally speaking, an algorithm is considered efficient (relative to the others) when its performance profile comes close to the top left corner `(1, 1)`.\n\nIt is possible for algorithms to fail on certain problems.\nThis can be achieved by simply setting the performance measure `t(i, j)` to `+inf` or `NaN`.\n\n## Usage examples\n\n```python\nimport matplotlib.pyplot as plt\nimport perfprof\n\npalette = ['-r', ':b', '--c', '-.g', '-y']\n\nperfprof.perfprof(data, palette)\nplt.show()\n```\n\n### Marking y-intercepts\n\nMarkers can be inserted using the standard `matplotlib` pattern.\n\n```python\nimport matplotlib.pyplot as plt\nimport perfprof\n\npalette = ['o-r', 'o:b', 'o--c', 'o-.g', 'o-y']\n\nperfprof.perfprof(data, palette, markersize=4, markevery=[0])\nplt.show()\n```\n\n### Displaying legends\n\nLegends can be displayed using `matplotlib.pyplot.legend`.\n\n```python\nimport matplotlib.pyplot as plt\nimport perfprof\n\npalette = ['o-r', 'o:b', 'o--c', 'o-.g', 'o-y']\nlegend = ['Algorithm 1', 'Algorithm 2']\n\nperfprof.perfprof(data, palette, markersize=4, markevery=[0])\nplt.legend(legend)\nplt.show()\n```\n\n## Why another implementation?\n\nMultiple implementations of performance profiles already exist in the public domain.\n\nThe design of `perfprof` was driven by a few key desires:\n\n*  **Simplicity:** provide a clearly scoped, easy to use implementation that integrates with `matplotlib`;\n*  **Flexibility:** unlock the full power of `matplotlib` for plot styling, legends, subplots etc.;\n*  **Robustness:** the implementation must work in all edge cases including `inf`, `NaN`, etc.;\n*  **Usability:** full Python3 compatibility and sensible defaults where possible.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dmsteck/perfprof.py",
    "keywords": "profile,benchmark,performance,algorithms,optimization,Dolan,More",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "perfprof",
    "package_url": "https://pypi.org/project/perfprof/",
    "platform": "",
    "project_url": "https://pypi.org/project/perfprof/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dmsteck/perfprof.py/issues",
      "Homepage": "https://github.com/dmsteck/perfprof.py"
    },
    "release_url": "https://pypi.org/project/perfprof/0.2/",
    "requires_dist": [
      "numpy (>=1.9)",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "A Python package for performance profiles as defined by Dolan and More.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10577085,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08d6c373ead0d62a135d7bc9fdfc266f1f54a9c3b52cc011d00b9c17f5dfc0eb",
          "md5": "175cefebed00bdee74dadfbae117ac42",
          "sha256": "f13d56fb309a63d7d1e467a40ab24c4feac062aa2bbc13d4ecb2fb9bfaf2ab7f"
        },
        "downloads": -1,
        "filename": "perfprof-0.2-py3.8.egg",
        "has_sig": false,
        "md5_digest": "175cefebed00bdee74dadfbae117ac42",
        "packagetype": "bdist_egg",
        "python_version": "0.2",
        "requires_python": ">=3.6",
        "size": 7546,
        "upload_time": "2021-06-07T12:06:23",
        "upload_time_iso_8601": "2021-06-07T12:06:23.013809Z",
        "url": "https://files.pythonhosted.org/packages/08/d6/c373ead0d62a135d7bc9fdfc266f1f54a9c3b52cc011d00b9c17f5dfc0eb/perfprof-0.2-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13f02e442e4c590fcbeeb938604215090d314d9e1f34b994010775d5b44a6285",
          "md5": "e00f6abf1e5b5c5e100d0ecf63fc4930",
          "sha256": "2d053c52b21229014aab94ce1866dd234381e2badce45eb522ae6f81148c4b0f"
        },
        "downloads": -1,
        "filename": "perfprof-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e00f6abf1e5b5c5e100d0ecf63fc4930",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5592,
        "upload_time": "2021-06-07T12:06:21",
        "upload_time_iso_8601": "2021-06-07T12:06:21.781759Z",
        "url": "https://files.pythonhosted.org/packages/13/f0/2e442e4c590fcbeeb938604215090d314d9e1f34b994010775d5b44a6285/perfprof-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73257248b257255f30b60db4fa61c1583a470d56eecb1336546df85183b35eb1",
          "md5": "02f510c076dadb5dd1fe150ce90d2f70",
          "sha256": "4d54aeca8e2646fc7c9c2be5e397de0b72bf03d449235a48afe5ee3661085cc9"
        },
        "downloads": -1,
        "filename": "perfprof-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "02f510c076dadb5dd1fe150ce90d2f70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5539,
        "upload_time": "2021-06-07T12:06:24",
        "upload_time_iso_8601": "2021-06-07T12:06:24.138665Z",
        "url": "https://files.pythonhosted.org/packages/73/25/7248b257255f30b60db4fa61c1583a470d56eecb1336546df85183b35eb1/perfprof-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08d6c373ead0d62a135d7bc9fdfc266f1f54a9c3b52cc011d00b9c17f5dfc0eb",
        "md5": "175cefebed00bdee74dadfbae117ac42",
        "sha256": "f13d56fb309a63d7d1e467a40ab24c4feac062aa2bbc13d4ecb2fb9bfaf2ab7f"
      },
      "downloads": -1,
      "filename": "perfprof-0.2-py3.8.egg",
      "has_sig": false,
      "md5_digest": "175cefebed00bdee74dadfbae117ac42",
      "packagetype": "bdist_egg",
      "python_version": "0.2",
      "requires_python": ">=3.6",
      "size": 7546,
      "upload_time": "2021-06-07T12:06:23",
      "upload_time_iso_8601": "2021-06-07T12:06:23.013809Z",
      "url": "https://files.pythonhosted.org/packages/08/d6/c373ead0d62a135d7bc9fdfc266f1f54a9c3b52cc011d00b9c17f5dfc0eb/perfprof-0.2-py3.8.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13f02e442e4c590fcbeeb938604215090d314d9e1f34b994010775d5b44a6285",
        "md5": "e00f6abf1e5b5c5e100d0ecf63fc4930",
        "sha256": "2d053c52b21229014aab94ce1866dd234381e2badce45eb522ae6f81148c4b0f"
      },
      "downloads": -1,
      "filename": "perfprof-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e00f6abf1e5b5c5e100d0ecf63fc4930",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5592,
      "upload_time": "2021-06-07T12:06:21",
      "upload_time_iso_8601": "2021-06-07T12:06:21.781759Z",
      "url": "https://files.pythonhosted.org/packages/13/f0/2e442e4c590fcbeeb938604215090d314d9e1f34b994010775d5b44a6285/perfprof-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73257248b257255f30b60db4fa61c1583a470d56eecb1336546df85183b35eb1",
        "md5": "02f510c076dadb5dd1fe150ce90d2f70",
        "sha256": "4d54aeca8e2646fc7c9c2be5e397de0b72bf03d449235a48afe5ee3661085cc9"
      },
      "downloads": -1,
      "filename": "perfprof-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "02f510c076dadb5dd1fe150ce90d2f70",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5539,
      "upload_time": "2021-06-07T12:06:24",
      "upload_time_iso_8601": "2021-06-07T12:06:24.138665Z",
      "url": "https://files.pythonhosted.org/packages/73/25/7248b257255f30b60db4fa61c1583a470d56eecb1336546df85183b35eb1/perfprof-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}