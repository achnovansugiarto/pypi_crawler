{
  "info": {
    "author": "Fabian Thomczyk",
    "author_email": "fabian.thomczyk@uniklinik-freiburg.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# i2b2rls\n\n[![pipeline status](https://gitlab.com/mds-imbi-freiburg/i2b2/i2b2rls/badges/master/pipeline.svg)](https://gitlab.com/mds-imbi-freiburg/i2b2/i2b2rls/-/commits/master)\n[![coverage report](https://gitlab.com/mds-imbi-freiburg/i2b2/i2b2rls/badges/master/coverage.svg)](https://gitlab.com/mds-imbi-freiburg/i2b2/i2b2rls/-/commits/master)\n[![License: MIT](https://img.shields.io/gitlab/license/24181795)](https://gitlab.com/mds-imbi-freiburg/i2b2/i2b2rls/-/blob/master/LICENSE)\n\n\nThis package provides a cli and python api to manage users and projects\nin the dockerized [i2b2](https://www.i2b2.org/) clinical data warehousing platform\nusing PostgreSQL Row Level Security (RLS) templates.\n\nThe key functionality is registering a single database schema\nas multiple Data Repositories (CRC) in i2b2.\nEach CRC connects to the same database as a different user with its own RLS policies defined.\nThis enables the usage of a single datasource for multiple projects to\ncircumvent the costly and complex replication of data into project specific databases,\nby utilising PostgreSQL's Row Level Security feature.\n\nIn the examples each project connects with a role that has RLS policies enabled,\nwhich allows access only to patients with the `provider_id` set in the project configuration.\nThe required data is defined in and derived from `i2b2.yaml`, the central config file.\n\nThe corresponding docker-compose based project is the [i2b2-stack](https://gitlab.com/mds-imbi-freiburg/i2b2/i2b2-stack)\n\n## Getting Started\n### Prerequisites\n#### Dependencies\n\n~~~bash\n# On Ubuntu / Debian\nsudo apt install -y python3 python3-pip gcc postgresql postgresql-server-dev-all\n# On Manjaro / Arch\nsudo pacman -S python3 python-pip gcc postgresql postgresql-libs libffi\n~~~\n\n#### Install repository\n~~~bash\n# pip install from pypi\npython3 -m pip install i2b2rls\n# pip install from gitlab repository\npython -m pip install git+https://gitlab.com/mds-imbi-freiburg/i2b2/i2b2rls.git\n~~~\n\n## Usage\nCreate a folder and initiate the i2b2 project dir:\n~~~bash\nmkdir i2b2-demo && cd i2b2-demo/\ni2b2rls --conf=. --init\n~~~\n\nCreate a new project in `i2b2.yaml`:\n\n~~~yaml\nsubdepartment1:  # Name of project\n  crc: # Register a new CRC\n    ds-user: dep1  # Create role in database & datasource\n    ds-pass: demouser # Password for databse role\n    provider-filter: LCS-I2B2:D000109075%  # Filter for observation_facts provider\n    members:\n      user1:\n~~~\n\nRegister the project:\n~~~bash\ni2b2rls project register subdepartment1\n~~~\n\nThis creates all required resources for an i2b2 project:\n* i2b2 __Project__ `subdepartment1`\n* i2b2 __Frontend User__ `user1`\n* i2b2 __Project Roles__ for `user1` (based on default-project-roles in [i2b2.yaml](i2b2rls/config.default/i2b2.yaml))\n* Postgres __Database User__ `dep1` with password `demouser` (based on [example sql files](i2b2rls/config.default/roles/example))\n* Wildfly __Datasource__ using `dep1` user to connect to the Database (based on [template datasource](i2b2rls/config.default/template-ds.xml))\n\n\n__NOTE:__ You may need to restart the stack for all settings to apply.\n\n### Manual steps\nTo manually run the steps for a project one can use the API from the command line:\n\n```bash\n# Run SQL scripts in user folder\ni2b2rls project run_rls subdepartment1 --script=main.sql\n\n# Generate and deploy datasource to Wildfly container\ni2b2rls project generate_ds subdepartment1 deploy=True\n\n# Register project in PM cell\ni2b2rls project add_pm_project_data subdepartment1\n\n# Register project members and their roles\ni2b2rls project register_members subdepartment1\n\n# Add Project roles for Service user (AGG_SERVICE_ACCOUNT)\ni2b2rls project add_service_roles subdepartment1\n\n# Register Cells (crc, ont, im, work) for new Project\ni2b2rls project create_db_lookups subdepartment1\n```\n\n\n## Help\nCLI and API are built with the awesome [Fire](https://google.github.io/python-fire/guide/) library.\nIt provides a help page for every possible command:\n\n~~~bash\ni2b2rls - --help\n~~~\n\nFor example:\n~~~bash\n$ i2b2rls project register --help\n> NAME\n>     i2b2rls project register - Create all resources for a RLS project\n>\n> SYNOPSIS\n>     i2b2rls project register PROJECT_ID <flags>\n>\n> DESCRIPTION\n>     Steps:\n>     * (Optional) Create SQL script from template\n>     * Run SQL files in role folder\n>     * Create & deploy Datasource file for CRC cell\n>     * Create the project in i2b2pm.pm_project_data\n>     * Create mandatory i2b2-roles for AGG_SERVICE_ACCOUNT\n>     * Register project db_lookups in i2b2hive.{im,ont,work,crc}_db_lookup\n>\n> POSITIONAL ARGUMENTS\n>     PROJECT_ID\n>         Type: str\n>         ID of project as in i2b2.yaml\n>\n> FLAGS\n>     --cell_id=CELL_ID\n>         Type: str\n>         Default: 'crc'\n>         The cell data to deploy (Default: 'crc')\n>     --force=FORCE\n>         Type: bool\n>         Default: False\n>         Delete Existing resources and recreate them\n>     --ignore_errors=IGNORE_ERRORS\n>         Type: bool\n>         Default: False\n>         Ignore errors and continue creating resources\n>     --add_i2b2=ADD_I2B2\n>         Type: bool\n>         Default: True\n>         Add 'i2b2' user to project with default roles\n>     --deploy_ds=DEPLOY_DS\n>         Type: bool\n>         Default: True\n>         Copy Datasource file to wildfly server and reload\n>     --extract_ds=EXTRACT_DS\n>         Type: bool\n>         Default: True\n>         Pull Datasource file from wildfly server to local folder\n~~~\n\n\n## Configuration\n#### Folder layout\nThe init command creates the template files for an i2b2rls instance structure:\n~~~bash\ni2b2-demo/\n├── i2b2.yaml            # Central project definition and configuration\n├── template-ds.xml      # Template for XML Datasource Objects\n├── datasources/         # Temporary folder for wildfly datasources\n├── roles/               # Each RLS user has a folder here\n│   ├── template         # Template folder other roles inherit from\n│   │   └── main.sql     # Main file, write RLS struff or reference other files\n│   ├── example          # demouser example RLS files\n│   │   └── main.sql     # Main file, includes other sql files with \\ir\n│   │   ├── drop.sql     # Script for dropping all sql resources\n│   │   ├── test.sql     # Contains PgTAP tests\n└── └── └── rls.sql      # Creates roles and RLS policies\n~~~\n\nStart by editing the file `i2b2.yaml` and change the basic settings for your i2b2 instance in the `default` section.\nThese settings will be inherited by any further project you define and can be overwritten by setting the value explicitly.\n\n#### General\n~~~yaml\nlog-level: DEBUG                                                  # Application logging level: INFO, WARN, ERROR, DEBUG\nlog-file: /tmp/i2b2rls.log                                        # Log to file - Off by default\nchangeby-user: i2b2rls                                            # Will appear in database entries at changeby_user\nwildfly-container: i2b2-wildfly                                   # Name of wildfly docker container\nwildfly-datasources: /opt/jboss/wildfly/standalone/deployments/   # Path to datasources in container\n~~~\n\n#### Configuration Levels\nAny configuration option from `i2b2.yaml` has sane defaults configured in [conf.py](i2b2rls/conf.py)\nto ensure every possible configuration option has a value. This is the `code-level` config.\nThe values there are recursively overwritten by settings you make in `i2b2.yaml`.\n\nIn `i2b2.yaml` is a default configuration tree for projects, the `default` project.\nEvery option there is inherited by other projects, and can be overwritten by them.\nThe hierarchy of overriding values for projects looks like this:\n`code-level < default-project-level < project-level`\n\nFor the deeper nested LDAP-settings of a user:\n`code-level < default-project-level < project-level < user-level`\n\n\n#### Default Project\nAs mentioned above the default project holds configurations that apply to all projects,\nand can be overridden by settings them explicitly on a project.\n~~~yaml\ndomain: i2b2demo                            # i2b2 domain (c_domain_id in db_lookups)\nowner: \"@\"                                  # Owner (c_owner_id in db_lookups)\ndefault-project-roles: [USER, EDITOR, ...]  # Default roles each user in each project gets, if not overridden\ncrc:\n  host: other-pg-host\n~~~\n\n\n#### Cell Configurations\nEach project needs access to the core modules (cells) of i2b2.\nFor that, each project's cells are registered in the corresponding `db_lookup` table in the\n`i2b2hive` schema.\n\nEach Cell type (except Project Management) has its own db_lookup table:\n+ __Ontology__: ont_db_lookup\n+ __Workplace__: work_db_lookup\n+ __Identity Management (IM)__: im_db_lookup\n+ __Data Repository (CRC)__: crc_db_lookup\n+ __Project Management (PM)__: Tables in schema `i2b2pm`\n\nAs these can be hosted on various postgres servers, the connection details from\nthe wildfly server need to be configured in the datasources.\n\nIf the Datasource already exists in wildfly, `ds-user` and `ds-pass` can be omitted.\nIf the Datasource should be created, `admin-user` and `admin-pass` must be set,\nso the application can connect to the postgres instance and create the db_lookup entry.\n\n~~~yaml\nont:\n  host: i2b2-pg  # Postgres server\n  port: 5432\n  database: i2b2\n  schema: i2b2metadata\n  pool-name: OntologyDemoDS\n  jndi-name: java:/OntologyDemoDS\n  ds-user: i2b2metadata\n  ds-pass: demouser\n~~~\n\n#### Users, Roles and Members\nThere are several types of roles, users and groups involved, so here is an overview:\n\n##### Postgres Roles\nPostgres does not differentiate between users and groups, both are summarized in the concept `role`.\nThis way a user can inherit privileges from any other user and group, or vice versa.\nThe only difference is that some roles have the `LOGIN` flag and a password set,\nwhich technically makes them users.\n\nIn context of `i2b2rls` there are the config objects `ds-user` and `admin-user`,\neach referring to a `role` in the Postgres database:\n* __ds-user__: Role that is created in the target Data Repository (Postgres server) by the application.\n  It enables the overlying project to connect to the CRC through a Wildfly Datasource, limited by your RLS rules.\n* __admin-user__: Used to connect to the Postgres server to create the Datasource user above.\n  Must be highly privileged to create resources like roles, policies and grants.\n\n##### i2b2 Users\nUsers of the i2b2 frontend are registered in the table `pm_user_data` of the Project Management cell.\nThey are identified by their `user_id` (username) and may have a password, full name, email address and status (active/disabled).\nIn `i2b2.yaml` users of a project are defined in the `members` section:\n\n~~~yaml\nyour_project:\n  members:\n    rls:  # Username\n      password: demouser  # Login password\n      fullname: RLS Demo User  # Users full name\n      email: demouser@example.com  # User email address\n      project-roles: [USER, DATA_OBFSC, MANAGER]\n~~~\n\nIf a user already exists in the database it can simply be referred by the user_id as a key without values:\n~~~yaml\nother_project:\n  members:\n    rls:\n    demo:\n    i2b2:\n~~~\n\n##### Project Roles\nTo login to a project a user needs __Project Roles__, defined by the key `project-roles`.\nRoles are inherited by a project's `default-project-roles` if a user has no explicit project-roles set.\nThe command `ì2b2rls project register_members yourproject user_name` collects these settings and creates\nthe database resources in `pm_user_data` and `pm_project_user_roles`.\n\n##### User LDAP\nTo enable LDAP authentication for a project, make sure you have the correct ldap settings in your Postgres `pg_hba.conf`\nand the ldap object in your `i2b2.yaml` populated with corresponding values.\n\nJust like any setting LDAP can be configured for all projects in the default project\nand overridden by your specific project.\nThe project-level settings can then be overridden by user-level settings:\n~~~yaml\nprojects:\n  your_project:\n    ldap:  # LDAP Settings used in i2b2pm.pm_user_params\n      authentication-method: LDAP  # LDAP / LDAPS\n      connection-url: ldap.mycompany.com  # LDAP Server\n      distinguished-name: uid=  # Field to user for login\n      search-base: ou=people,dc=mycompany,dc=com  # Where to find users\n      security-authentication: simple  # Auth mechanism (none/simple/sasl)\n    members:\n      rls:\n        ldap:\n          # Override project-level search-base\n          search-base: ou=department,ou=people,dc=example,dc=org\n~~~\n\nTo enable the LDAP login for a user _on project registration_ set at least an empty `ldap:` key.\n\nTo enable LDAP login manually use:\n~~~\ni2b2rls project set_user_ldap rlsdemo rls\n~~~\n\nTo manually register LDAP for a user while setting a certain value explicitly:\n~~~bash\ni2b2rls project set_user_ldap rlsdemo rls --data='{\"search-base\":\"\"}'\n~~~\n\n\n### SQL Templates\nThe example folder features a set of scripts that split the creation of Postgres Roles and its RLS policies into multiple steps:\n\n* __main.sql__:\n  Incorporates the .sql files into a single transaction. A SAVEPOINT is created before the tests and rolled back to after the tests.\n  If any of the tests fail, the whole transaction is rolled back.\n* __drop.sql__:\n  Used to remove any (preexisting) objects in the database that should be created by the application.\n  This should be called before the Role and the Policies are created, and can be called if the Role is to be removed.\n* __init.sql__:\n  Initialisation script that ensures the extension `pgtap` exists and the view `v_observation_facts` is present and contains the required fields.\n* __rls.sql__:\n  Contains the statements for creating the Role and its privileges: `CREATE ROLE, GRANT, CREATE POLICY`.\n* __test.sql__:\n  PgTAP tests that validate the role is created with necessary privileges and the RLS policies filter correctly.\n\nThe SQL scripts are called with the `psql` Commandline client for postgres.\nThis enables the usage of variables in the scripts that are passed by the application (e.g. :variable_name).\nBy default the following variables are passed to the client and can be used in scripts:\n\n* **project_id:** Project id, the object name of a project\n* **role_name:** Name of postgres role defined in `ds-user`\n* **role_pass:** Password of postgres role, defined in `ds-pass`\n* **db:** Database name of datasource defined in `crc > database` (default i2b2)\n* **cell_schema:** Schema of i2b2 data defined in `crc > schema` (default i2b2demodata)\n* Any `key: value` pair in `pg-vars`. The keys __must__ only contain lower dashes as seperator!\n  Also, any of the above values can be overwritten by setting it in `pg-vars`!\n\nA full call from the application to psql may look like this:\n\n```bash\npsql postgresql://i2b2:demouser@i2b2-pg:5432/i2b2 \\\n    -v project_id=rlsdemo \\\n    -v role_name=rlsuser \\\n    -v role_pass=rlsuserpass \\\n    -v db=i2b2 \\\n    -v cell_schema=i2b2demodata \\\n    -v provider_filter=LCS-I2B2:D000109061% \\\n    -f \"/path/to/config/roles/example/main.sql\"\n```\n\n__NOTE:__ The view `v_observation_fact` is required for the RLS policies.\n It joins the clinic's departments table `provider_dimension` to the patients observations `observation_fact` by the `provider_id`.\n\n\n#### Ressources\nTo sum up, following resources are managed by the tool:\n* i2b2 Project and User Management (i2b2pm)\n  * Frontend users (pm_user_data)\n  * Frontent user LDAP settings (pm_user_params)\n  * Project roles (pm_project_user_roles)\n  * Project data (pm_project_data)\n* i2b2 Cells\n  * Datasource's manipulation and deployment to Wildfly\n  * Cell db_lookups in i2b2hive\n* PostgreSQL resources\n  * Executor for SQL templates via `psql` client\n  * Instantiation of custom SQL templates\n  * Definition of postgres database roles\n\n### Simple CLI\nThe cli features a set of simplified commands for management of users and groups.\nThese commands are accessed through the subcommand `i2b2rls cmd [user|group]`\nand will return 1 on error or 0 on success.\nThese commands are designed for use in CI processes.\n\n### Docker.\nAs `i2b2rls` is built to work with a dockerized setup it needs access to the docker daemon.\nFor this work, the image is built on top of `docker-in-docker` and requires\nthe docker socket as a volume:\n\n~~~bash\ndocker run \\\n  -v /tmp/data:/data \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  --network i2b2-stack_i2b2-net \\\n  -ti i2b2rls \\\n  i2b2rls --init --conf=/data\n~~~\n\n\n\n### Development\n```bash\npip install -r requirements.dev.txt\npre-commit install\npre-commit install --hook-type commit-msg\n```\n\n#### Test\nStart the i2b2 postgres backend:\n```bash\ndocker run -p 5432:5432 i2b2/i2b2-pg:p1\n```\n\nRun tests:\n```bash\npython -m pytest --cov=.\n```\n\nTo simulate the hostname of the postgres server on your machine for testing it in `/etc/hosts`:\n~~~bash\nsudo echo \"127.0.0.1    i2b2-pg\" >> /etc/hosts\n~~~\n\n\n#### Debugging\n##### Enable logging in Wildfly\n~~~bash\ndocker exec -it -u root i2b2-wildfly bash -c \"sed -i 's/INFO/DEBUG/g' /opt/jboss/wildfly/standalone/configuration/standalone.xml\"\n~~~\n\n##### Logging in Postgres backend\n~~~\nclient_min_messages = debug1\nlog_line_prefix = '%m [%p] %q%u@%d '\nlog_statement = 'all'\n~~~\n\n\n### How it works\nFirst the application parses the i2b2.yaml file and creates a full configuration tree for every project.\n\n\n#### Glossary\n\n| Short  | Long               | Explanation\n|:------ |:-----------------  |:---------------------------------------------- |\n| RLS    | Row Level Security | PostgresSQL access policies based on row values. Allows granular filtering of user access to patient/observation information\n| CRC    | Data Repository    | Database schema and REST API (cell) for i2b2 medical data, e.g. the tables `observation_facts`, patient_dimension etc.\n| PM     | Project Management | Database schema (cell) for i2b2 project data: users, projects, project_roles  etc.\n| ONT    | Ontology           | Database schema and REST API (cell) for i2b2 ontologies. Used to query patient data by diagnosis\n| DS     | Datasources        | XML object (e.g. crc-ds.xml) that defines a database connection for the i2b2 wildfly server\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/mds-imbi-freiburg/i2b2/i2b2rls",
    "keywords": "",
    "license": "License :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "i2b2rls",
    "package_url": "https://pypi.org/project/i2b2rls/",
    "platform": null,
    "project_url": "https://pypi.org/project/i2b2rls/",
    "project_urls": {
      "Homepage": "https://gitlab.com/mds-imbi-freiburg/i2b2/i2b2rls"
    },
    "release_url": "https://pypi.org/project/i2b2rls/0.0.5/",
    "requires_dist": [
      "sqlalchemy",
      "psycopg2-binary",
      "fire",
      "automapdb (==0.1.5)"
    ],
    "requires_python": ">=3.6",
    "summary": "i2b2 user management with PostgreSQL Row Level Security",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14973187,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5404360baf952670daf93ef13b529233ba30d57a214486273af74e8816f4d0b8",
          "md5": "11668a394f4321c3ffbb20d3553db3e5",
          "sha256": "9f2a1a362d1444e4808823bd5864f7084e1fa154cbc618d46dd0c86f487516c0"
        },
        "downloads": -1,
        "filename": "i2b2rls-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11668a394f4321c3ffbb20d3553db3e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46098,
        "upload_time": "2021-10-22T12:31:01",
        "upload_time_iso_8601": "2021-10-22T12:31:01.974568Z",
        "url": "https://files.pythonhosted.org/packages/54/04/360baf952670daf93ef13b529233ba30d57a214486273af74e8816f4d0b8/i2b2rls-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4205a32d1e320b2bced28320f634d6fd7380ac0fa7ed9df30262e45361a84638",
          "md5": "113461822409248ac39d9639d54badf3",
          "sha256": "57a3256242399d6c7bb2b6f8123c7bd91c2e7bff0b26bef224272318c78f3308"
        },
        "downloads": -1,
        "filename": "i2b2rls-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "113461822409248ac39d9639d54badf3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 46829,
        "upload_time": "2021-10-22T12:31:04",
        "upload_time_iso_8601": "2021-10-22T12:31:04.271047Z",
        "url": "https://files.pythonhosted.org/packages/42/05/a32d1e320b2bced28320f634d6fd7380ac0fa7ed9df30262e45361a84638/i2b2rls-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efa89c76bba2234768d07c18ac80fe5d9e3dd07bd2903df097b7321937802a25",
          "md5": "2c9221cf3d7547e289cdb4e14f2a8e97",
          "sha256": "94dfc30f8ec32da65db4a635565c27e6fdb845aa4ba03d9680629a10aff61289"
        },
        "downloads": -1,
        "filename": "i2b2rls-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c9221cf3d7547e289cdb4e14f2a8e97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46066,
        "upload_time": "2021-12-08T08:32:33",
        "upload_time_iso_8601": "2021-12-08T08:32:33.637166Z",
        "url": "https://files.pythonhosted.org/packages/ef/a8/9c76bba2234768d07c18ac80fe5d9e3dd07bd2903df097b7321937802a25/i2b2rls-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d168bdeb4cf3db4e0d8431a6e3b0b759186e74e91331d188f1ff4040bd27b796",
          "md5": "7c64b3bcd755cde800b9eb701de0f044",
          "sha256": "ddb4afd111bf6754c6fe435cf7c1a69fdec7d383ae5cd0aeab3ad5727de9e348"
        },
        "downloads": -1,
        "filename": "i2b2rls-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7c64b3bcd755cde800b9eb701de0f044",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 46835,
        "upload_time": "2021-12-08T08:32:35",
        "upload_time_iso_8601": "2021-12-08T08:32:35.832222Z",
        "url": "https://files.pythonhosted.org/packages/d1/68/bdeb4cf3db4e0d8431a6e3b0b759186e74e91331d188f1ff4040bd27b796/i2b2rls-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45bf30b99dd02ba13ecaa111843ea157b8807c7e8cbecd34a2b00979b254510c",
          "md5": "87c28a34c2da7f17f486f2a95fd770aa",
          "sha256": "9090893d56944311e24cd9fafdd841f4daf4513708562351dda2b047dea8e3fc"
        },
        "downloads": -1,
        "filename": "i2b2rls-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87c28a34c2da7f17f486f2a95fd770aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34994,
        "upload_time": "2022-08-30T10:16:40",
        "upload_time_iso_8601": "2022-08-30T10:16:40.104965Z",
        "url": "https://files.pythonhosted.org/packages/45/bf/30b99dd02ba13ecaa111843ea157b8807c7e8cbecd34a2b00979b254510c/i2b2rls-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa35d27141e14782e30b105bcce071702bee79bb3d74d94cfa7af972914bc5bb",
          "md5": "d67a0ea7867d130289a6fe74dfd30cf1",
          "sha256": "de7c1cdc710d4391dfbc9d0b2b6814d2630d5ab37eb325836822793d32b5c3d4"
        },
        "downloads": -1,
        "filename": "i2b2rls-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d67a0ea7867d130289a6fe74dfd30cf1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33974,
        "upload_time": "2022-08-30T10:16:41",
        "upload_time_iso_8601": "2022-08-30T10:16:41.387964Z",
        "url": "https://files.pythonhosted.org/packages/aa/35/d27141e14782e30b105bcce071702bee79bb3d74d94cfa7af972914bc5bb/i2b2rls-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b26eedbc562a759aa4571a7f8339e48158ce5a67a01e447617192cdaa65d47cc",
          "md5": "52c5f5139b9874ee5ead0bc0cfb77bb2",
          "sha256": "07f320c5defbe61b79f71f0f3fd5eae89e0d416ec01ac8d8067da2c25cf61e88"
        },
        "downloads": -1,
        "filename": "i2b2rls-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52c5f5139b9874ee5ead0bc0cfb77bb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33413,
        "upload_time": "2022-09-02T10:13:12",
        "upload_time_iso_8601": "2022-09-02T10:13:12.063916Z",
        "url": "https://files.pythonhosted.org/packages/b2/6e/edbc562a759aa4571a7f8339e48158ce5a67a01e447617192cdaa65d47cc/i2b2rls-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e95b686875ff64b9e68838395c6690ee64be67e6e8fa9cc6a7111d393f51553",
          "md5": "0885faef892e6143cf25516a673325fc",
          "sha256": "eb5c7d8351e4fed57db29ac927a402e7d4b6d5c9e93a0e5794537847b28a9959"
        },
        "downloads": -1,
        "filename": "i2b2rls-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0885faef892e6143cf25516a673325fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34934,
        "upload_time": "2022-09-02T10:13:14",
        "upload_time_iso_8601": "2022-09-02T10:13:14.200281Z",
        "url": "https://files.pythonhosted.org/packages/7e/95/b686875ff64b9e68838395c6690ee64be67e6e8fa9cc6a7111d393f51553/i2b2rls-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "185d49b7917b566717be0015ce8b34acd8561e7f743b6b12c0a83e566e89c97f",
          "md5": "81b5223fb5838fb19534418e74b7e27a",
          "sha256": "f26c67307b9746fafe55d4117790d587a806c050aafaf9930e21af2d649ea659"
        },
        "downloads": -1,
        "filename": "i2b2rls-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81b5223fb5838fb19534418e74b7e27a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33413,
        "upload_time": "2022-09-02T10:36:41",
        "upload_time_iso_8601": "2022-09-02T10:36:41.416986Z",
        "url": "https://files.pythonhosted.org/packages/18/5d/49b7917b566717be0015ce8b34acd8561e7f743b6b12c0a83e566e89c97f/i2b2rls-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3d18c4bee928f94c28ac951a6c27d8b732d5bffd6d82745e2385d56528a5bf7",
          "md5": "48b86fbaeb2a058c888a6fca7486fe4c",
          "sha256": "0d63c312749e050014d50838dc5e15b501614d45ab6681216eeefb5d853c3dc9"
        },
        "downloads": -1,
        "filename": "i2b2rls-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "48b86fbaeb2a058c888a6fca7486fe4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34952,
        "upload_time": "2022-09-02T10:36:42",
        "upload_time_iso_8601": "2022-09-02T10:36:42.770437Z",
        "url": "https://files.pythonhosted.org/packages/a3/d1/8c4bee928f94c28ac951a6c27d8b732d5bffd6d82745e2385d56528a5bf7/i2b2rls-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "185d49b7917b566717be0015ce8b34acd8561e7f743b6b12c0a83e566e89c97f",
        "md5": "81b5223fb5838fb19534418e74b7e27a",
        "sha256": "f26c67307b9746fafe55d4117790d587a806c050aafaf9930e21af2d649ea659"
      },
      "downloads": -1,
      "filename": "i2b2rls-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "81b5223fb5838fb19534418e74b7e27a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 33413,
      "upload_time": "2022-09-02T10:36:41",
      "upload_time_iso_8601": "2022-09-02T10:36:41.416986Z",
      "url": "https://files.pythonhosted.org/packages/18/5d/49b7917b566717be0015ce8b34acd8561e7f743b6b12c0a83e566e89c97f/i2b2rls-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3d18c4bee928f94c28ac951a6c27d8b732d5bffd6d82745e2385d56528a5bf7",
        "md5": "48b86fbaeb2a058c888a6fca7486fe4c",
        "sha256": "0d63c312749e050014d50838dc5e15b501614d45ab6681216eeefb5d853c3dc9"
      },
      "downloads": -1,
      "filename": "i2b2rls-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "48b86fbaeb2a058c888a6fca7486fe4c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 34952,
      "upload_time": "2022-09-02T10:36:42",
      "upload_time_iso_8601": "2022-09-02T10:36:42.770437Z",
      "url": "https://files.pythonhosted.org/packages/a3/d1/8c4bee928f94c28ac951a6c27d8b732d5bffd6d82745e2385d56528a5bf7/i2b2rls-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}