{
  "info": {
    "author": "ALI B OTHMAN",
    "author_email": "alosh.othman55@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# easylogging2\r\n###### Simple and Easy Logging lib for python3\r\n\r\n[![easylogging2](https://img.shields.io/badge/build-passing-brightgreen.svg)]()\r\n[![version](https://img.shields.io/badge/version-2.1.1-green.svg)]()\r\n[![status](https://img.shields.io/badge/status-stable-brightgreen.svg)]()\r\n[![python](https://img.shields.io/badge/python-3-blue.svg)](http://www.python.org/download/)\r\n[![windows](https://img.shields.io/badge/windows-tested-brightgreen.svg)]()\r\n[![linux](https://img.shields.io/badge/linux-tested-brightgreen.svg)]()\r\n[![license](https://img.shields.io/badge/license-GNU-blue.svg)](https://github.com/AI35/easylogging2/blob/master/LICENSE)\r\n\r\n## REQUIREMENTS\r\n- Python-3 --> http://www.python.org/download/\r\n\r\n## Notes\r\n- After 9 months this library has returned better and more useful.\r\n- This library is very simple so it is not better than a logging library and it is derived from it.\r\n- This library was created because I wanted a simple and easy logging library.\r\n\r\n## Installation\r\n\r\n- Clone this repo:\r\n\t\r\n\t```\r\n\t$ git clone https://github.com/AI35/easylogging2\r\n\t```\r\n- Using pip:\r\n\t\r\n\t```\r\n\t$ pip install easylogging2\r\n\t```\r\n\r\n## Usage\r\n- First you need import lib and Set name :\r\n  ```\r\n    import easylogging2\r\n    \r\n    log = easylogging2.logname(__file__)\r\n  ```\r\n- Use the functions you need:\r\n  - log.critical(msg)\r\n  - log.error(msg, exc_info) **default: exc_info=False**\r\n  - log.warning(msg)\r\n  - log.info(msg)\r\n  - log.debug(msg)\r\n- You can start logging from Cmd or PowerShell :\r\n  ```\r\n    $ Python yourfile.py --logging --logfile\r\n    \r\n    usage: youefile.py [--logging] [--logfile]\r\n    \r\n    optional arguments:\r\n      --logging            Display log in Console\r\n      --logfile            Create log file\r\n  ```\r\n- After first run you will see new file **logging.conf** :\r\n  - Change **level** number to display log in console (0 display all level).\r\n  \t```\r\n  \t  level=60\r\n  \t```\r\n  - Change **file_level** number to set level in log file **with** --logfile (50 hide all level).\r\n  \t###### - This option work on --logfile\r\n  \t```\r\n   \t  file_level=0\r\n  \t```\r\n - Show and hide error info from **logging.conf** :\r\n  \t###### - Show Error info (easylogging.error(msg, exc_info))\r\n\t###### - True or False or None\r\n\t###### - * (None) means that exc_info takes the value entered from the user, example: easylogging.error(msg, exc_info=True)\r\n  \t```\r\n  \t  exc_info=None\r\n  \t```\r\n\t\r\n - You can run the **test.py** file to see how it works.\r\n - You can use all logging functions from this lib (ex: easylogging.logging.**function**)\r\n \r\n - **formatter** :\r\n    ###### - You can use all defaults logging formats.\r\n  \t```\r\n\t  formatter = %(asctime)s - %(name)s - %(levelname)s - %(message)s\r\n\t```\r\n\t###### - From logging formatter function :\r\n\t```\r\n    Formatter instances are used to convert a LogRecord to text.\r\n    Formatters need to know how a LogRecord is constructed. They are\r\n    responsible for converting a LogRecord to (usually) a string which can\r\n    be interpreted by either a human or an external system. The base Formatter\r\n    allows a formatting string to be specified. If none is supplied, the\r\n    the style-dependent default value, \"%(message)s\", \"{message}\", or\r\n    \"${message}\", is used.\r\n    The Formatter can be initialized with a format string which makes use of\r\n    knowledge of the LogRecord attributes - e.g. the default value mentioned\r\n    above makes use of the fact that the user's message and arguments are pre-\r\n    formatted into a LogRecord's message attribute. Currently, the useful\r\n    attributes in a LogRecord are described by:\r\n    %(name)s            Name of the logger (logging channel)\r\n    %(levelno)s         Numeric logging level for the message (DEBUG, INFO,\r\n                        WARNING, ERROR, CRITICAL)\r\n    %(levelname)s       Text logging level for the message (\"DEBUG\", \"INFO\",\r\n                        \"WARNING\", \"ERROR\", \"CRITICAL\")\r\n    %(pathname)s        Full pathname of the source file where the logging\r\n                        call was issued (if available)\r\n    %(filename)s        Filename portion of pathname\r\n    %(module)s          Module (name portion of filename)\r\n    %(lineno)d          Source line number where the logging call was issued\r\n                        (if available)\r\n    %(funcName)s        Function name\r\n    %(created)f         Time when the LogRecord was created (time.time()\r\n                        return value)\r\n    %(asctime)s         Textual time when the LogRecord was created\r\n    %(msecs)d           Millisecond portion of the creation time\r\n    %(relativeCreated)d Time in milliseconds when the LogRecord was created,\r\n                        relative to the time the logging module was loaded\r\n                        (typically at application startup time)\r\n    %(thread)d          Thread ID (if available)\r\n    %(threadName)s      Thread name (if available)\r\n    %(process)d         Process ID (if available)\r\n    %(message)s         The result of record.getMessage(), computed just as\r\n                        the record is emitted\r\n\t```\r\n## Changlog\r\n### V 2.1.1\r\n###### - Add Decorator @func_set(level).\r\n\t\r\n\t  Use @Yourlog.func_set(level) to set logger and handler level to function and ignore all level config in function.\r\n\t\r\n##### - Fix Bug handler write all level and ignore file_level when using --logging with --logfile\r\n\r\n### V 2.0.5 Some fixes:\r\n###### - Make some variables private.\r\n\r\n### V 2.0.1 Performance:\r\n###### - Increase performance.\r\n\r\n##\r\n - Level table :\r\n\r\n    | Level  | Numeric value |\r\n    | ------------- | ------------- |\r\n    | CRITICAL  |  50  |\r\n    | ERROR  |  40  |\r\n    | WARNING  |  30  |\r\n    | INFO  |  20  |\r\n    | DEBUG  |  10  |\r\n    | NOTSET  | 0  |\r\n   \r\n\r\n\r\n  \r\n## LICENSE\r\n```\r\nCopyright 2019 ALI B OTHMAN(AI35), Inc.\r\n\r\neasylogging2\r\n\r\n   Licensed under the GNU License , you may not use this\r\n   file except in compliance with the License.\r\n   You may obtain a copy of the License at :\r\n\r\n   https://github.com/AI35/easylogging2/blob/master/LICENSE\r\n```\r\n###### ALI .B .OTH - ORG : LinePY  \r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AI35/easylogging2",
    "keywords": "logging logger log python",
    "license": "GNU v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easylogging2",
    "package_url": "https://pypi.org/project/easylogging2/",
    "platform": null,
    "project_url": "https://pypi.org/project/easylogging2/",
    "project_urls": {
      "Bug Reports": "https://github.com/AI35/easylogging2/issues",
      "Homepage": "https://github.com/AI35/easylogging2",
      "Source": "https://github.com/AI35/easylogging2"
    },
    "release_url": "https://pypi.org/project/easylogging2/2.1.1/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Simple Python logging lib",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13371474,
  "releases": {
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e42737a19937e6de269b608a7e5d20071f4ba8581c9e95fc16d54e66e44ec8f4",
          "md5": "201331512130137e51ac3f69af4ed335",
          "sha256": "423866f118673c6c9a73afc296f3c4044dfb7e53c56bc5084352cf4aae78a014"
        },
        "downloads": -1,
        "filename": "easylogging2-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "201331512130137e51ac3f69af4ed335",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 3927,
        "upload_time": "2019-07-14T14:22:22",
        "upload_time_iso_8601": "2019-07-14T14:22:22.443980Z",
        "url": "https://files.pythonhosted.org/packages/e4/27/37a19937e6de269b608a7e5d20071f4ba8581c9e95fc16d54e66e44ec8f4/easylogging2-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0fc8d77c16367d28b104d8036048428e97aeeabd8442aceaeef1cc56bf637a6",
          "md5": "53d386a6e2fd249dc580c26772e54ed6",
          "sha256": "b06e3956bb9ee4a84f671c1f7a87363afe70df9c3d75676643f5a4b6ffe7d2f2"
        },
        "downloads": -1,
        "filename": "easylogging2-2.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53d386a6e2fd249dc580c26772e54ed6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 4940,
        "upload_time": "2020-02-03T20:40:35",
        "upload_time_iso_8601": "2020-02-03T20:40:35.765833Z",
        "url": "https://files.pythonhosted.org/packages/a0/fc/8d77c16367d28b104d8036048428e97aeeabd8442aceaeef1cc56bf637a6/easylogging2-2.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ed532069df2ae01e0786fb98de2fe4d34ffa85c98b7326952e5c73eb108c0a7",
          "md5": "17c21b1332c6acb4ad4bbea95616136b",
          "sha256": "d27a4a3b2d356f9e63a7f7ce9d7031c75cd66fb46f6b4310244d9fad632bfbae"
        },
        "downloads": -1,
        "filename": "easylogging2-2.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "17c21b1332c6acb4ad4bbea95616136b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 5065,
        "upload_time": "2020-02-03T20:40:37",
        "upload_time_iso_8601": "2020-02-03T20:40:37.400017Z",
        "url": "https://files.pythonhosted.org/packages/4e/d5/32069df2ae01e0786fb98de2fe4d34ffa85c98b7326952e5c73eb108c0a7/easylogging2-2.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5810b2ba76c24c0978dbbef9fa33e19dbd25f11f046a0d06272d74e6fcf81ec5",
          "md5": "e4d840f4968b084e91f33b4380817a78",
          "sha256": "6df371a5622724dac0c9dd4643ec78dd1a120458c8f0e366d14fd6021332a3f8"
        },
        "downloads": -1,
        "filename": "easylogging2-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e4d840f4968b084e91f33b4380817a78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 17189,
        "upload_time": "2022-04-01T09:02:55",
        "upload_time_iso_8601": "2022-04-01T09:02:55.620884Z",
        "url": "https://files.pythonhosted.org/packages/58/10/b2ba76c24c0978dbbef9fa33e19dbd25f11f046a0d06272d74e6fcf81ec5/easylogging2-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5810b2ba76c24c0978dbbef9fa33e19dbd25f11f046a0d06272d74e6fcf81ec5",
        "md5": "e4d840f4968b084e91f33b4380817a78",
        "sha256": "6df371a5622724dac0c9dd4643ec78dd1a120458c8f0e366d14fd6021332a3f8"
      },
      "downloads": -1,
      "filename": "easylogging2-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e4d840f4968b084e91f33b4380817a78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 17189,
      "upload_time": "2022-04-01T09:02:55",
      "upload_time_iso_8601": "2022-04-01T09:02:55.620884Z",
      "url": "https://files.pythonhosted.org/packages/58/10/b2ba76c24c0978dbbef9fa33e19dbd25f11f046a0d06272d74e6fcf81ec5/easylogging2-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}