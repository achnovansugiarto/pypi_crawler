{
  "info": {
    "author": "Shahin Darvishpoor",
    "author_email": "Shahindarvishpoor@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MFAC\n<a><img align=\"right\" src=\"https://img.shields.io/github/license/shahind/MFAC\"/></a>\n<a><img align=\"right\" src=\"https://img.shields.io/pypi/v/MFAC\"/></a>\n<a><img align=\"right\" src=\"https://img.shields.io/pypi/pyversions/MFAC\"/></a>\n<a><img align=\"right\" src=\"https://img.shields.io/github/languages/code-size/shahind/MFAC?color=blueviolet\"/></a>\n<p align=\"center\">\n  <img src=\"https://github.com/shahind/MFAC/raw/main/logo.png\" />\n</p>\nModel Free Adaptive Control Toolbox for Python\n\nThis project aims to provide a simple and fast python package for model-free adaptive control. The package includes compact form dynamic linearization (CFDL), partial form dynamic linearization (PFDL) and full form dynamic linearization (FFDL) model free adaptive control methods both for SISO and MIMO systems.\n\n## Installation\nYou can easily install MFAC Toolbox from PyPI:\n```\npip install MFAC\n```\n\n## Simple Example\nThe following code shows the functionality of MFAC Toolbox in controlling a simple SISO system using CFDL method from (`\\examples\\siso_cfdl_simple.py`):\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mfac.plants.siso import Model1\nfrom mfac.controllers import CompactFormDynamicLinearization\n\n# define the model and set the initial values\nmodel = Model1(initial_state=np.array([0]))\n\n# Simulation conditions\ntotal_time = 8\nstep_time = 0.01\n\n# Desired output (y_desire)\ny_d = np.zeros(int(total_time / step_time) + 1)\nfor k in range(int(total_time / step_time) + 1):\n    y_d[k] = 0.5 + 0.5*np.power(-1, np.round(k/200))\n\n# log function which will be ran after each iteration\ndef log_function(cfdl):\n    print('iteration: ', cfdl.iteration)\n\n# define the controller\ncontroller = CompactFormDynamicLinearization(model=model,\n                                             iteration_function=log_function,\n                                             time_step=step_time,\n                                             reference_output=y_d,\n                                             simulation_time=total_time,\n                                             labda=1,\n                                             eta=1,\n                                             mu=1,\n                                             rho=0.45,\n                                             )\n\n# run the simulation\ncontroller.run()\n\n# plot the output\nfig, ax = plt.subplots()\nax.plot(model.Y)\nax.plot(y_d)\nax.set(xlabel='time (t)', ylabel='output (y)',\n       title='system output')\nax.grid()\n# fig.savefig(\"test.png\")\nplt.show()\n```\nthe output will be like:  \n![img.png](https://github.com/shahind/MFAC/raw/main/img.png)\n  \n# Components\nTo control a system using the current MFAC library, two major components are required; model and controller.\n## Model\nA model is simply a class with the following structure:\n\n|    Part    |                                                                            Variables/Methods                                                                            |                                                                                                                                                                                             Description                                                                                                                                                                                             |\n|:----------:|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|\n| Input      |                                                                          Initial_state (array)                                                                          |                                                                                                                                                                            Initial position of the plant in state space                                                                                                                                                                             |\n| Parameters | number_of_inputs (int)<br>number_of_states (int)<br>number_of_outputs (int)<br>x (array)<br>y (array)<br>u (array)<br>X (array)<br>Y (array)<br>U (array)<br>time (int) |       Number of control inputs<br>Number of state parameters<br>Number of outputs<br>The current state of the system<br>The current output of the system<br>Current input control of the system<br>States of the system during the simulation<br>Outputs of the system during the simulation<br>Controls of the system during the simulation<br>The current time of the simulation (discrete)       |\n| Functions  |                                                         reset()<br>step()<br>observe()<br>render()<br>predict()                                                         | Resets the plant for the next simulation<br>Gets the input controller and moves one step forward, returns the output<br>Observes the system's state or output variable defined by `full_state` input parameter<br>Renders the system based on input parameter `mode` which can be `print`, `plot`, or `visual`<br>Gets a series of inputs (k future steps) and predicts the systems state or output |\n\n## Controller\nA controller is simply a class with the following structure:\n\n|    Part    |                                                                        Variables/Methods                                                                         |                                                                                                                     Description                                                                                                                      |\n|:----------:|:----------------------------------------------------------------------------------------------------------------------------------------------------------------:|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|\n| Input      | model (Model)<br>iteration_function (Function)<br>reference_output (array)<br>simulation_time (int)<br>time_step (Float)<br>mimo (Boolean)<br>Control parameters | The plant to be controlled<br>The function which will be called in each step<br>The desired output<br>Simulation duration in seconds<br>Timestep for each step<br>The control for using the MIMO form<br>Control parameters for each specific method |\n| Parameters |                                                       u (array)<br>fai (array)<br>U (array)<br>Fai (array)                                                       |                                                            The current control input<br>The current fai value<br>Control inputs during the simulation<br>Fai values during the simulation                                                            |\n| Functions  |                                                                              run()                                                                               |                                    Runs the simulation based on the time and time step, in each step calles the `model.step()` with the calculated control and calls the `iteration_function` at the end of step                                     |\n\n\n# Development Status\nCurrently developed methods:  \n- [x] CFDL\n- [ ] FFDL\n- [ ] PFDL\n\nCurrently developed models:\n- [x] Simple SISO model 1 (Model1)\n- [x] Simple MIMO model 1 (Model1)\n\nCurrently tested scenarios:\n- [x] CFDL on SISO Model1\n- [x] CFDL on MIMO Model1\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shahind/MFAC",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mfac",
    "package_url": "https://pypi.org/project/mfac/",
    "platform": null,
    "project_url": "https://pypi.org/project/mfac/",
    "project_urls": {
      "Bug Tracker": "https://github.com/shahind/MFAC/issues",
      "Homepage": "https://github.com/shahind/MFAC"
    },
    "release_url": "https://pypi.org/project/mfac/0.1.17/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Model Free Adaptive Control Toolbox",
    "version": "0.1.17",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16273805,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ebbc87c70144680a8c15f63ee079455a28781e45d056b4e8e2cd7de093775af",
          "md5": "2d7cea305ae22855afb57b9463ff13a9",
          "sha256": "69c7187dddcade431131c73d8293a93d50c1c218b89fcdab529bf91816e85528"
        },
        "downloads": -1,
        "filename": "MFAC-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2d7cea305ae22855afb57b9463ff13a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13373,
        "upload_time": "2022-12-05T23:22:06",
        "upload_time_iso_8601": "2022-12-05T23:22:06.003562Z",
        "url": "https://files.pythonhosted.org/packages/1e/bb/c87c70144680a8c15f63ee079455a28781e45d056b4e8e2cd7de093775af/MFAC-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccf549e225bdd3cbd822cd57e29e91f0a983c99b9394a402b65ec6e5597bb7cd",
          "md5": "652dc06c010eb6a9d96deb3457f7988d",
          "sha256": "2866aac3c138c680bd49c63e7a4c0d8d92dbba81b267d3c03238d19aba8d8747"
        },
        "downloads": -1,
        "filename": "MFAC-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "652dc06c010eb6a9d96deb3457f7988d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15096,
        "upload_time": "2022-12-05T23:24:50",
        "upload_time_iso_8601": "2022-12-05T23:24:50.176536Z",
        "url": "https://files.pythonhosted.org/packages/cc/f5/49e225bdd3cbd822cd57e29e91f0a983c99b9394a402b65ec6e5597bb7cd/MFAC-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d65b9c13b04f578bbef3f91e950da86f21f03f6020ae8cf8df6a876b1de50c66",
          "md5": "40763dc62e88673f3c1d3420b4e5b845",
          "sha256": "fbf79db02af5338cbf61008370e3a5d0d52bbfa62c1f353cf711d47edd980947"
        },
        "downloads": -1,
        "filename": "mfac-0.1.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40763dc62e88673f3c1d3420b4e5b845",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17896,
        "upload_time": "2023-01-01T18:54:01",
        "upload_time_iso_8601": "2023-01-01T18:54:01.626104Z",
        "url": "https://files.pythonhosted.org/packages/d6/5b/9c13b04f578bbef3f91e950da86f21f03f6020ae8cf8df6a876b1de50c66/mfac-0.1.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a985e026f40ceeef00929e4d878c10f05b83119ec5f3e1f4258970486dcb46e5",
          "md5": "869bb70d0f750d5c20838a807e351c0d",
          "sha256": "89345c5e3cbe58859822b2838ab0d33bd79b0cd0e920c80a19f56dd0b2688bcc"
        },
        "downloads": -1,
        "filename": "mfac-0.1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "869bb70d0f750d5c20838a807e351c0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18046,
        "upload_time": "2023-01-01T18:54:02",
        "upload_time_iso_8601": "2023-01-01T18:54:02.850274Z",
        "url": "https://files.pythonhosted.org/packages/a9/85/e026f40ceeef00929e4d878c10f05b83119ec5f3e1f4258970486dcb46e5/mfac-0.1.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2645364448e4312307c4f319acd71ffd2ddcb7d40b32aa0b080ef770326ea03b",
          "md5": "2b04ece8211f9b533e74aa94c1f8ed59",
          "sha256": "9d6e527967cf8fd1565790fed846eab5f564fae12cc722529796abec63ab0af3"
        },
        "downloads": -1,
        "filename": "mfac-0.1.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b04ece8211f9b533e74aa94c1f8ed59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17902,
        "upload_time": "2023-01-01T19:08:24",
        "upload_time_iso_8601": "2023-01-01T19:08:24.971138Z",
        "url": "https://files.pythonhosted.org/packages/26/45/364448e4312307c4f319acd71ffd2ddcb7d40b32aa0b080ef770326ea03b/mfac-0.1.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a1173620dd56aad97c0c6f05979e93b68653a2132efefabdb92a64366739435",
          "md5": "f753a36b1d8833cf2a11f5c3e7324e57",
          "sha256": "c36acc67ca530cdeb12359321b52c159fffcb70d4214d81b735868c82a896676"
        },
        "downloads": -1,
        "filename": "mfac-0.1.17.tar.gz",
        "has_sig": false,
        "md5_digest": "f753a36b1d8833cf2a11f5c3e7324e57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18047,
        "upload_time": "2023-01-01T19:08:26",
        "upload_time_iso_8601": "2023-01-01T19:08:26.228161Z",
        "url": "https://files.pythonhosted.org/packages/6a/11/73620dd56aad97c0c6f05979e93b68653a2132efefabdb92a64366739435/mfac-0.1.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70c15bcd406a6ab6e176fca83f997e6bfb98b902eef7cb82665afc118f8ab2dc",
          "md5": "482d6cce5695cf5bd5c70ad4006c8753",
          "sha256": "31c1a3dd3ee495144b024323c2a2be10f232e2ec4acc7dc01113446f4dcac6f8"
        },
        "downloads": -1,
        "filename": "MFAC-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "482d6cce5695cf5bd5c70ad4006c8753",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15294,
        "upload_time": "2022-12-05T23:40:27",
        "upload_time_iso_8601": "2022-12-05T23:40:27.543539Z",
        "url": "https://files.pythonhosted.org/packages/70/c1/5bcd406a6ab6e176fca83f997e6bfb98b902eef7cb82665afc118f8ab2dc/MFAC-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82b6d57539cd04ea006b91c354931875b2d070d6022984709f9a459d41654ef7",
          "md5": "7aff6b3685a40db2017bda803e181f3a",
          "sha256": "ce74e838bf1ab52bcd12936ebaad22d87b68cf6d624c3aca923ae7c8203a40e0"
        },
        "downloads": -1,
        "filename": "MFAC-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7aff6b3685a40db2017bda803e181f3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15217,
        "upload_time": "2022-12-06T19:17:46",
        "upload_time_iso_8601": "2022-12-06T19:17:46.467481Z",
        "url": "https://files.pythonhosted.org/packages/82/b6/d57539cd04ea006b91c354931875b2d070d6022984709f9a459d41654ef7/MFAC-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0a22bedb51051d28627cf1eb43ee738d2ed0b9d18655aa5442dd060980b7bd1",
          "md5": "a13c76fdcb36aa5fe14d2fac5be58cf5",
          "sha256": "0ce31aa14cc68f206c5d15bdeaad311081bc711567c16e54a049251a1dc0e573"
        },
        "downloads": -1,
        "filename": "MFAC-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a13c76fdcb36aa5fe14d2fac5be58cf5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15371,
        "upload_time": "2022-12-11T10:26:12",
        "upload_time_iso_8601": "2022-12-11T10:26:12.977300Z",
        "url": "https://files.pythonhosted.org/packages/d0/a2/2bedb51051d28627cf1eb43ee738d2ed0b9d18655aa5442dd060980b7bd1/MFAC-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50837b69b713149322c05062936fc3c134e86459fd4430ab0871e37bfde003bb",
          "md5": "a519b3887121c7eeaf9fdd069eeaf1a6",
          "sha256": "6cdaa47f0f7b39bf74f89ae94418ac9d9e794272ac6bdf1d9dc80eaae32c2ee9"
        },
        "downloads": -1,
        "filename": "mfac-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a519b3887121c7eeaf9fdd069eeaf1a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17887,
        "upload_time": "2023-01-01T18:58:31",
        "upload_time_iso_8601": "2023-01-01T18:58:31.829283Z",
        "url": "https://files.pythonhosted.org/packages/50/83/7b69b713149322c05062936fc3c134e86459fd4430ab0871e37bfde003bb/mfac-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2533cb8ace1db5f982bf2d1d9fd161e2362881d3ecaef3f46df6f735ff0686f",
          "md5": "9abc2c9f59605b4973966ae7dbbdf3cb",
          "sha256": "9efddcea40036e2b927b798e5488afd24c265ee1c69bfe56eccf5c7303395d85"
        },
        "downloads": -1,
        "filename": "mfac-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9abc2c9f59605b4973966ae7dbbdf3cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18058,
        "upload_time": "2023-01-01T18:58:33",
        "upload_time_iso_8601": "2023-01-01T18:58:33.237360Z",
        "url": "https://files.pythonhosted.org/packages/d2/53/3cb8ace1db5f982bf2d1d9fd161e2362881d3ecaef3f46df6f735ff0686f/mfac-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2645364448e4312307c4f319acd71ffd2ddcb7d40b32aa0b080ef770326ea03b",
        "md5": "2b04ece8211f9b533e74aa94c1f8ed59",
        "sha256": "9d6e527967cf8fd1565790fed846eab5f564fae12cc722529796abec63ab0af3"
      },
      "downloads": -1,
      "filename": "mfac-0.1.17-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2b04ece8211f9b533e74aa94c1f8ed59",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17902,
      "upload_time": "2023-01-01T19:08:24",
      "upload_time_iso_8601": "2023-01-01T19:08:24.971138Z",
      "url": "https://files.pythonhosted.org/packages/26/45/364448e4312307c4f319acd71ffd2ddcb7d40b32aa0b080ef770326ea03b/mfac-0.1.17-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a1173620dd56aad97c0c6f05979e93b68653a2132efefabdb92a64366739435",
        "md5": "f753a36b1d8833cf2a11f5c3e7324e57",
        "sha256": "c36acc67ca530cdeb12359321b52c159fffcb70d4214d81b735868c82a896676"
      },
      "downloads": -1,
      "filename": "mfac-0.1.17.tar.gz",
      "has_sig": false,
      "md5_digest": "f753a36b1d8833cf2a11f5c3e7324e57",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18047,
      "upload_time": "2023-01-01T19:08:26",
      "upload_time_iso_8601": "2023-01-01T19:08:26.228161Z",
      "url": "https://files.pythonhosted.org/packages/6a/11/73620dd56aad97c0c6f05979e93b68653a2132efefabdb92a64366739435/mfac-0.1.17.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}