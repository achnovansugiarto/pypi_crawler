{
  "info": {
    "author": "Ben Timby",
    "author_email": "btimby@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "A `SmartFile`_ Open Source project. `Read more`_ about how SmartFile\nuses and contributes to Open Source software.\n\n.. figure:: http://www.smartfile.com/images/logo.jpg\n   :alt: SmartFile\n\nIntroduction\n------------\n\nThis package consists of a library and command line tool. The library allows\nyou to dump the Python objects in memory to a dump file.\n\nThe command line tool is used to examine the dump file contents.\n\nCreating a dump file.\n---------------------\n\nTo add memory dump capability to one of your Python applications, import the caulk\nlibrary and register a signal handler.\n\n::\n\n    import caulk\n\n    caulk.handler()\n\nA number of kwargs can control the operation of the signal handler.\n\n * signum - The signal to react to, signal.SIGUSR1 by default.\n * path - The path to which to write the dump file /var/tmp by default.\n * name - The name of the dump file, 'caulk' by default..\n\nA dump file's name will be: '{0}-{1}-{2}.dump'.format(name, pid, time).\n\nTo generate a dump file, use kill:\n\n::\n\n    # kill -usr1 <pid>\n\nWhere <pid> is the pid of your running application.\n\nYou can also use the low-level API to generate a dump file directly\ninstead of relying on a signal handler.\n\n::\n\n    import caulk\n\n    caulk.dump('/var/tmp/my.dump')\n\nExamining a dump file.\n----------------------\n\nTo examine the dump file, use the caulk command.\n\n::\n\n    # caulk --classes /var/tmp/caulk-1025-1346255743.435316.dump\n    count total  average min/max   class                                  \n    ----------------------------------------------------------------------\n    4     256    64      64/64     unittest.suite.TestSuite               \n    1     64     64      64/64     unittest.runner._WritelnDecorator      \n    1     64     64      64/64     site._Helper                           \n    ...\n\nFor more information on using the caulk command, see it's help.\n\n::\n\n    # caulk --help\n\n\n.. _SmartFile: http://www.smartfile.com/\n.. _Read more: http://www.smartfile.com/open-source.html",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/downloads/smartfile/caulk/caulk-0.1-5.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/smartfile/caulk/",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "caulk",
    "package_url": "https://pypi.org/project/caulk/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/caulk/",
    "project_urls": {
      "Download": "https://github.com/downloads/smartfile/caulk/caulk-0.1-5.tar.gz",
      "Homepage": "http://github.com/smartfile/caulk/"
    },
    "release_url": "https://pypi.org/project/caulk/0.1-5/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Python tool for diagnosing memory leaks.",
    "version": "0.1-5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 802809,
  "releases": {
    "0.1-1": [],
    "0.1-2": [],
    "0.1-3": [],
    "0.1-4": [],
    "0.1-5": []
  },
  "urls": [],
  "vulnerabilities": []
}