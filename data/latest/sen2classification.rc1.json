{
  "info": {
    "author": "Luka Raspovic",
    "author_email": "<lraspovic993@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# sen2classification\n\nsen2classification is a Python library for automatic land cover classification of Sentinel 2 satellite images using machine learning. \n# Features\n- support for L1C and L2A Sentinel products\n- uses machine learning algorithms in combination with tresholding for classifying land covers\n- calculates spectral indices used for tresholding \n- Two classification methods are available:\n  - ALCC (Automatic Land Cover Classification)\n  - Gradient boosting\n- the end result is a classification raster which pixel values range from 0 to 5:\n  - 0 = no data\n  - 1 = water\n  - 2 = low vegetation\n  - 3 = high vegetation\n  - 4 = soil\n  - 5 = built up\n\n*Clouds are not classified, for optimal results use images with none or minimal cloud cover*\n\n# ALCC\nAutomatic Land Cover Classification algorithm uses k-means clustering and tresholding for classifying land cover. The concept of ALCC was first introduced by [GaÅ¡paroviÄ‡ et al. (2019)](https://www.sciencedirect.com/science/article/pii/S0198971518305891). They used it to classify Landsat-8 images at 30â€¯m spatial resolution. This version of ALCC algorithm is adapted for use on Sentinel 2 images with 10 m spatial resolution.\n# Gradient boosting \nGradient boosting classification is implemented using [xboost](https://xgboost.readthedocs.io/en/latest/) library. Collection of training data is automated by tresholding spectral indices.\n\n# Installation\n\n## Important!\nLibrary dependency that must be installed before installing sen2classification is [rasterio](https://rasterio.readthedocs.io/en/latest/) (and [GDAL](https://gdal.org/) which is rasterio dependency). Installing sen2classification won't install rasterio.\n\nSimplest way to install GDAL and rasterio is by using conda with conda-forge channel\n```bash\nconda install -c conda-forge gdal rasterio\n```\n\nAfter that use pip to install sen2classification.\n\n```bash\npip install sen2classification\n```\n\n## Usage\n\n```python\nfrom sen2classification import ALCC\nfrom sen2classification import GBClassification\n\n# input is Sentinel 2 L2A product folder\nalcc = ALCC(product='path to unzipped Sentinel 2 L2A product (.SAFE)', product_type='L2A')\n# input is Sentinel 2 L1C product folder\nxgb = GBClassification(product='path to unzipped Sentinel 2 L1C product (.SAFE)', product_type='L1C')\n\n\n# sets up band file paths\nalcc.setup_bands()\n\n# swir bands must be resampled to 10m for calculating spectral indices\nalcc.resample_swir_to_10m()\n\n# calculate AWEI, NDVI, NDTI and BAEI spectra indices\nalcc.calculate_spectral_indices()\n\n# run ALCC algorithm\n# final classification raster is saved in current working directory\nalcc.run()\n\n# setup and execution is identical for xgb\n\n\n```\n\n\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lraspovic/sen2classification",
    "keywords": "python,sentinel 2,machine learning,land cover,classification,automatic,satellite,image classification",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sen2classification",
    "package_url": "https://pypi.org/project/sen2classification/",
    "platform": "",
    "project_url": "https://pypi.org/project/sen2classification/",
    "project_urls": {
      "Homepage": "https://github.com/lraspovic/sen2classification"
    },
    "release_url": "https://pypi.org/project/sen2classification/0.0.1/",
    "requires_dist": [
      "scikit-learn",
      "imbalanced-learn",
      "xgboost"
    ],
    "requires_python": ">=3.6",
    "summary": "Python library for automatic land cover classification of Sentinel 2 satellite images",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12181661,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d801cab8f3acc0a650d04239862c95327cd1062a0ad8fee23514ca53d294c48",
          "md5": "24cdc8e39f315e812287d50bcd087d30",
          "sha256": "df3c809267f369acf186688d0df762c9aeb3b913923c9a94ee7f67dedf180c0b"
        },
        "downloads": -1,
        "filename": "sen2classification-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24cdc8e39f315e812287d50bcd087d30",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21748,
        "upload_time": "2021-12-01T21:16:36",
        "upload_time_iso_8601": "2021-12-01T21:16:36.021466Z",
        "url": "https://files.pythonhosted.org/packages/7d/80/1cab8f3acc0a650d04239862c95327cd1062a0ad8fee23514ca53d294c48/sen2classification-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cec0f5a66327a1c669db738f03aa79f0965cd426c4fc5fce0c966be7e923257c",
          "md5": "7f91e54e8b61ade65b4fae9c05401024",
          "sha256": "d366b78d243e55b81a0e1634f812eb78a0260f32af9571c5205dbe66efe99718"
        },
        "downloads": -1,
        "filename": "sen2classification-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7f91e54e8b61ade65b4fae9c05401024",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18213,
        "upload_time": "2021-12-01T21:16:38",
        "upload_time_iso_8601": "2021-12-01T21:16:38.210702Z",
        "url": "https://files.pythonhosted.org/packages/ce/c0/f5a66327a1c669db738f03aa79f0965cd426c4fc5fce0c966be7e923257c/sen2classification-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d801cab8f3acc0a650d04239862c95327cd1062a0ad8fee23514ca53d294c48",
        "md5": "24cdc8e39f315e812287d50bcd087d30",
        "sha256": "df3c809267f369acf186688d0df762c9aeb3b913923c9a94ee7f67dedf180c0b"
      },
      "downloads": -1,
      "filename": "sen2classification-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "24cdc8e39f315e812287d50bcd087d30",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 21748,
      "upload_time": "2021-12-01T21:16:36",
      "upload_time_iso_8601": "2021-12-01T21:16:36.021466Z",
      "url": "https://files.pythonhosted.org/packages/7d/80/1cab8f3acc0a650d04239862c95327cd1062a0ad8fee23514ca53d294c48/sen2classification-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cec0f5a66327a1c669db738f03aa79f0965cd426c4fc5fce0c966be7e923257c",
        "md5": "7f91e54e8b61ade65b4fae9c05401024",
        "sha256": "d366b78d243e55b81a0e1634f812eb78a0260f32af9571c5205dbe66efe99718"
      },
      "downloads": -1,
      "filename": "sen2classification-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7f91e54e8b61ade65b4fae9c05401024",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 18213,
      "upload_time": "2021-12-01T21:16:38",
      "upload_time_iso_8601": "2021-12-01T21:16:38.210702Z",
      "url": "https://files.pythonhosted.org/packages/ce/c0/f5a66327a1c669db738f03aa79f0965cd426c4fc5fce0c966be7e923257c/sen2classification-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}