{
  "info": {
    "author": "Yue Zhao",
    "author_email": "zhaoy@cmu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "Automating Outlier Detection via Meta-Learning (MetaOD)\n=====================================================================\n\n\n.. image:: https://img.shields.io/pypi/v/metaod.svg?color=brightgreen\n   :target: https://pypi.org/project/metaod/\n   :alt: PyPI version\n\n.. image:: https://img.shields.io/github/stars/yzhao062/metaod.svg\n   :target: https://github.com/yzhao062/metaod/stargazers\n   :alt: GitHub stars\n\n.. image:: https://img.shields.io/github/forks/yzhao062/metaod.svg?color=blue\n   :target: https://github.com/yzhao062/metaod/network\n   :alt: GitHub forks\n\n.. image:: https://circleci.com/gh/yzhao062/MetaOD.svg?style=svg\n   :target: https://circleci.com/gh/yzhao062/MetaOD\n   :alt: Circle CI\n\n.. image:: https://travis-ci.org/yzhao062/MetaOD.svg?branch=master\n    :target: https://travis-ci.org/yzhao062/MetaOD\n\n----\n\n**Development Status**: **As of 09/26/2020, MetaOD is under active development and in its alpha stage. Please follow, star, and fork to get the latest update**!\nFor paper reproducibility, please see the paper_reproducibility folder for instruction.\n\n**Given an unsupervised outlier detection (OD) task on a new dataset, how can we automatically select a good outlier detection method and its hyperparameter(s) (collectively called a model)?**\nThus far, model selection for OD has been a \"black art\"; as any model evaluation is infeasible due to the lack of (i) hold-out data with labels, and (ii) a universal objective function.\nIn this work, we develop the first principled data-driven approach to model selection for OD, called MetaOD, based on meta-learning.\nIn short, MetaOD is trained on extensive OD benchmark datasets to capitalize the prior experience so that **it could select the potentially best performing model for unseen datasets**.\n\nUsing MetaOD is easy.\n**You could pass in a dataset, and MetaOD will return the most performing outlier detection models for it**, which boosts both detection quality and reduces the cost of running multiple models.\n\n\n**API Demo for selecting outlier detection model on a new dataset (within 3 lines)**\\ :\n\n\n.. code-block:: python\n\n   from metaod.models.utility import prepare_trained_model\n   from metaod.models.predict_metaod import select_model\n\n   # load pretrained MetaOD model\n   prepare_trained_model()\n\n   # use MetaOD to recommend models. It returns the top n model for new data X_train\n   selected_models = select_model(X_train, n_selection=100)\n\n\n\n`Preprint paper <https://arxiv.org/abs/2009.10606>`_ | `Reproducibility instruction <https://github.com/yzhao062/MetaOD/tree/master/paper_reproducibility>`_\n\n**Citing MetaOD**\\ :\n\nIf you use MetaOD in a scientific publication, we would appreciate\ncitations to the following paper::\n\n    @article{zhao2020automating,\n      author  = {Zhao, Yue and Ryan Rossi and Leman Akoglu},\n      title   = {Automating Outlier Detection via Meta-Learning},\n      journal = {arXiv preprint arXiv:2009.10606},\n      year    = {2020},\n    }\n\nor::\n\n    Zhao, Y., Rossi, R., and Akoglu, L., 2020. Automating Outlier Detection via Meta-Learning. arXiv preprint arXiv:2009.10606.\n    \n    \n**Table of Contents**\\ :\n\n\n* `Installation <#installation>`_\n* `API Cheatsheet & Reference <#api-cheatsheet--reference>`_\n* `Quick Start for Model Selection <#quick-start-for-model-selection>`_\n* `Quick Start for Meta Feature Generation <#quick-start-for-meta-feature-generation>`_\n\n\n------------\n\nSystem Introduction\n^^^^^^^^^^^^^^^^^^^\n\nAs shown in the figure below, MetaOD contains offline meta-learner training and online model selection.\nFor selecting an outlier detection model for a new dataset, one only needs the online model selection. Specifically, to be finished.\n\n\n.. image:: https://raw.githubusercontent.com/yzhao062/MetaOD/master/docs/images/MetaOD_Flowchart.jpg\n   :target: https://raw.githubusercontent.com/yzhao062/MetaOD/master/docs/images/MetaOD_Flowchart.jpg\n   :alt: metaod_flow\n   :align: center\n\n-----\n\n\nInstallation\n^^^^^^^^^^^^\n\nIt is recommended to use **pip** for installation. Please make sure\n**the latest version** is installed, as MetaOD is updated frequently:\n\n.. code-block:: bash\n\n   pip install metaod            # normal install\n   pip install --upgrade metaod  # or update if needed\n   pip install --pre metaod      # or include pre-release version for new features\n\nAlternatively, you could clone and run setup.py file:\n\n.. code-block:: bash\n\n   git clone https://github.com/yzhao062/metaod.git\n   cd metaod\n   pip install .\n  \n  \n**Required Dependencies**\\ :\n\n\n* Python 3.5, 3.6, or 3.7\n* joblib>=0.14.1\n* liac-arff\n* numpy>=1.18.1\n* scipy>=0.20\n* **scikit_learn==0.22.1**\n* pandas>=0.20\n* pyod>=0.8\n\n**Note**: Since we need to load trained models, we fix the scikit-learn version\nto 0.20. We recommend you to use MetaOD in a fully fresh env to have the right dependency.\n\n\nQuick Start for Model Selection\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n`\"examples/model_selection_example.py\" <https://github.com/yzhao062/MetaOD/blob/master/examples/model_selection_example.py>`_\nprovide an example on using MetaOD for selecting top models on a new datasets, which is fully unsupervised.\n\nThe key procedures are below:\n\n#. Load some synthetic datasets\n\n   .. code-block:: python\n\n    # Generate sample data\n    X_train, y_train, X_test, y_test = \\\n        generate_data(n_train=1000,\n                      n_test=100,\n                      n_features=3,\n                      contamination=0.5,\n                      random_state=42)\n\n#. Use MetaOD to select top 100 models\n\n   .. code-block:: python\n\n    from metaod.models.utility import prepare_trained_model\n    from metaod.models.predict_metaod import select_model\n\n    # load pretrained models\n    prepare_trained_model()\n\n    # recommended models. this returns the top model for X_train\n    selected_models = select_model(X_train, n_selection=100)\n\n\n#. Show the selected models' performance evaluation.\n\n   .. code-block:: python\n\n\n    1st model Average Precision 0.9729833161334711\n    10th model Average Precision 0.9631787029256742\n    50th model Average Precision 0.9228434081007967\n    100th model Average Precision 0.9228434081007967\n\n\nQuick Start for Meta Feature Generation\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nGetting the embedding of an arbitrary dataset is first step of MetaOD, which\ncam be done by our specialized meta-feature generation function.\n\nIt may be used for other purposes as well, e.g., measuring the similarity of\ntwo datasets.\n\n.. code-block:: python\n\n    # import meta-feature generator\n    from metaod.models.gen_meta_features import gen_meta_features\n\n    meta_features = gen_meta_features(X)\n\nA simple example of visualizing two different environments using TSNE with\nour meta-features are shown below. The environment on the left is composed\n100 datasets with similarity, and the same color stands for same group of datasets.\nThe environment on the left is composed\n62 datasets without known similarity. Our meta-features successfully capture\nthe underlying similarity in the left figure.\n\n.. image:: https://raw.githubusercontent.com/yzhao062/MetaOD/master/docs/images/meta_vis.jpg\n   :target: https://raw.githubusercontent.com/yzhao062/MetaOD/master/docs/images/meta_vis.jpg\n   :alt: meta_viz\n   :align: center",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/yzhao062/metaod/archive/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yzhao062/metaod",
    "keywords": "outlier detection,anomaly detection,outlier ensembles,data mining,meta learning,AutoML",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metaod",
    "package_url": "https://pypi.org/project/metaod/",
    "platform": "",
    "project_url": "https://pypi.org/project/metaod/",
    "project_urls": {
      "Download": "https://github.com/yzhao062/metaod/archive/master.zip",
      "Homepage": "https://github.com/yzhao062/metaod"
    },
    "release_url": "https://pypi.org/project/metaod/0.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Automating Outlier Detection via Meta-Learning (selece/recommend OD model(s) for new datasets)",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8285909,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "298cc841870e156e64dcf5b412d131933006b4b9eec9da57eb3cbd478b6fa0da",
          "md5": "6f2dc4dda9605cd2f4a5acbd13dd37ca",
          "sha256": "8949577e28a690ec4ba9f19f206bc6726ccf60319b192402dff39f8e7f91f43e"
        },
        "downloads": -1,
        "filename": "metaod-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6f2dc4dda9605cd2f4a5acbd13dd37ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15305,
        "upload_time": "2020-09-26T20:43:30",
        "upload_time_iso_8601": "2020-09-26T20:43:30.820978Z",
        "url": "https://files.pythonhosted.org/packages/29/8c/c841870e156e64dcf5b412d131933006b4b9eec9da57eb3cbd478b6fa0da/metaod-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e8b08110584200f2a1656677d821ede8ab0de62abd9f2f6340bd48ec4375c0e",
          "md5": "c0d3df6466ce7d405dd4f30edfbd9c19",
          "sha256": "9b6f58590a667e2fdd5176bfe6dab662ebf324e57c1f1d9fd6bdda66b6e20898"
        },
        "downloads": -1,
        "filename": "metaod-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c0d3df6466ce7d405dd4f30edfbd9c19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15999,
        "upload_time": "2020-09-26T21:51:59",
        "upload_time_iso_8601": "2020-09-26T21:51:59.414095Z",
        "url": "https://files.pythonhosted.org/packages/7e/8b/08110584200f2a1656677d821ede8ab0de62abd9f2f6340bd48ec4375c0e/metaod-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59561b3e6f6053e3aeb8f38bce2caa348c1ca9ab841c450ce017cb79a8ebb54e",
          "md5": "f8545a96d8eae4fd4aa38267ac684f82",
          "sha256": "34e076d6941b683efc4be60699d38614647888ac8a75d67f72d3600d47622f95"
        },
        "downloads": -1,
        "filename": "metaod-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f8545a96d8eae4fd4aa38267ac684f82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17275,
        "upload_time": "2020-09-27T01:04:56",
        "upload_time_iso_8601": "2020-09-27T01:04:56.235700Z",
        "url": "https://files.pythonhosted.org/packages/59/56/1b3e6f6053e3aeb8f38bce2caa348c1ca9ab841c450ce017cb79a8ebb54e/metaod-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dca1895c6097c9799107327871a605cf9cd9b62a21dc4886b8bf8a27ae1edcec",
          "md5": "9a4c07a1d8e8af631654b4b106225d1d",
          "sha256": "629fafde015bca551613e4f160cf1335a127fa643e44151707bc86939832ae5e"
        },
        "downloads": -1,
        "filename": "metaod-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9a4c07a1d8e8af631654b4b106225d1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17701,
        "upload_time": "2020-09-27T01:29:31",
        "upload_time_iso_8601": "2020-09-27T01:29:31.299158Z",
        "url": "https://files.pythonhosted.org/packages/dc/a1/895c6097c9799107327871a605cf9cd9b62a21dc4886b8bf8a27ae1edcec/metaod-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bb62ca10a75035ddf09652441a3dd62234d88468d5300b407fc81b7911a2961",
          "md5": "340355516a960439ad9b6f6d6973dea5",
          "sha256": "52bbf51b145284458c76d9f66e5ba296861828fa951d81d86857ed3242d11092"
        },
        "downloads": -1,
        "filename": "metaod-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "340355516a960439ad9b6f6d6973dea5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17697,
        "upload_time": "2020-09-27T01:38:38",
        "upload_time_iso_8601": "2020-09-27T01:38:38.706787Z",
        "url": "https://files.pythonhosted.org/packages/9b/b6/2ca10a75035ddf09652441a3dd62234d88468d5300b407fc81b7911a2961/metaod-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bc20a4e1a6a4b62ffd04f2e769abdb5b24747dcbfe3355abd0ee13ea9167e44",
          "md5": "568b2708290b7727cafa7f0582e9897d",
          "sha256": "74efa80cd71b81e74ef13dc31824fa33d3b681743c3d17f89ac120510f5c5570"
        },
        "downloads": -1,
        "filename": "metaod-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "568b2708290b7727cafa7f0582e9897d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17696,
        "upload_time": "2020-09-27T02:01:31",
        "upload_time_iso_8601": "2020-09-27T02:01:31.289033Z",
        "url": "https://files.pythonhosted.org/packages/7b/c2/0a4e1a6a4b62ffd04f2e769abdb5b24747dcbfe3355abd0ee13ea9167e44/metaod-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ecb3c6980d484b2b3d0b8f58eda73651584cff68d180025105b10d6abbef056",
          "md5": "32fa21a7fa5c0ddb4f2793af446da640",
          "sha256": "d5264b16f8cb796d8b5874f0fe2e902dab129951fc031d3332bebff8f9a94ab2"
        },
        "downloads": -1,
        "filename": "metaod-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "32fa21a7fa5c0ddb4f2793af446da640",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17902,
        "upload_time": "2020-09-28T00:42:38",
        "upload_time_iso_8601": "2020-09-28T00:42:38.514406Z",
        "url": "https://files.pythonhosted.org/packages/6e/cb/3c6980d484b2b3d0b8f58eda73651584cff68d180025105b10d6abbef056/metaod-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6ecb3c6980d484b2b3d0b8f58eda73651584cff68d180025105b10d6abbef056",
        "md5": "32fa21a7fa5c0ddb4f2793af446da640",
        "sha256": "d5264b16f8cb796d8b5874f0fe2e902dab129951fc031d3332bebff8f9a94ab2"
      },
      "downloads": -1,
      "filename": "metaod-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "32fa21a7fa5c0ddb4f2793af446da640",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17902,
      "upload_time": "2020-09-28T00:42:38",
      "upload_time_iso_8601": "2020-09-28T00:42:38.514406Z",
      "url": "https://files.pythonhosted.org/packages/6e/cb/3c6980d484b2b3d0b8f58eda73651584cff68d180025105b10d6abbef056/metaod-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}