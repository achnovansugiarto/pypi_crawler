{
  "info": {
    "author": "Tiago Coutinho",
    "author_email": "tcoutinho@cells.es",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Julabo library\n\n<img align=\"right\" alt=\"Julabo CF31\" width=\"280\" src=\"docs/cf31.png\" />\n\nThis library is used to control basic features of Julabo equipment. It is\ncomposed of a core library, an optional simulator and an optional\n[tango](https://tango-controls.org/) device server.\n\nIt has been tested with CF31, HL-4, MS-1000f and FC models, but should work with\nother models too.\n\nIt can be used with either with a direct serial line (read below\non the recommended way to setup a serial line connection) or remotely\nthrough TCP socket (either raw socket or rfc2217). In the latter case\nthe master device to which the Julabo serial line is connected must\nprovide a raw socket or rfc2217 interface.\n\n## Installation\n\nFrom within your favorite python environment type:\n\n`$ pip install julabo`\n\n\n## Library\n\nThe core of the julabo library consists of JulaboCF, JulaboHL, JulaboMS and\n JulaboFC objects.\nTo create a Julabo object you need to pass a communication object.\nHere is how to connect to a julabo CF31 through a raw tcp socket:\n\n```python\n\nfrom julabo import JulaboCF, connection_for_url\n\n\nasync def main():\n    conn = connection_for_url(\"tcp://controls.lab.org:17890\")\n    dev = JulaboCF(conn)\n    await conn.open()\n\n    ident = await dev.identification()\n    status = await dev.status()\n    print(f\"{ident} status is: {status}\")\n\n    # read temperature:\n    temp = await dev.bath_temperature()\n    print(f\"Bath temperature: {temp} degC\")\n\n    # start the device\n    started = await dev.is_started()\n    if not started:\n       await cryo.start()\n\n    # define a new set point\n    await dev.set_point_1(34.56)\n\nasyncio.run(main())\n```\n\n#### Serial line\n\nTo access a serial line based Julabo device it is strongly recommended you spawn\na serial to tcp bridge using [ser2net](https://linux.die.net/man/8/ser2net),\n[ser2sock](https://github.com/tiagocoutinho/ser2sock) or\n[socat](https://linux.die.net/man/1/socat)\n\nAssuming your device is connected to `/dev/ttyS0` and the baudrate is set to 9600,\nhere is how you could use socat to expose your device on the machine port 5000:\n\n`socat -v TCP-LISTEN:5000,reuseaddr,fork file:/dev/ttyS0,rawer,b9600,cs8,eol=10,icanon=1`\n\nIt might be worth considering starting socat, ser2net or ser2sock as a service using\n[supervisor](http://supervisord.org/) or [circus](https://circus.rtfd.io/).\n\n### Simulator\n\nA Julabo simulator is provided.\n\nBefore using it, make sure everything is installed with:\n\n`$ pip install julabo[simulator]`\n\nThe [sinstruments](https://pypi.org/project/sinstruments/) engine is used.\n\nTo start a simulator you need to write a YAML config file where you define\nhow many devices you want to simulate and which properties they hold.\n\nThe following example exports 1 hardware device with a minimal configuration\nusing default values:\n\n```yaml\n# config.yml\n\ndevices:\n- class: JulaboCF\n  package: julabo.simulator\n  transports:\n  - type: serial\n    url: /tmp/julabo-cf31\n    baudrate: 9600\n```\n\nTo start the simulator type:\n\n```terminal\n$ sinstruments-server -c ./config.yml --log-level=DEBUG\n2020-09-01 21:04:43,172 INFO  simulator: Bootstraping server\n2020-09-01 21:04:43,173 INFO  simulator: no backdoor declared\n2020-09-01 21:04:43,173 INFO  simulator: Creating device JulaboCF ('JulaboCF')\n2020-09-01 21:04:43,186 INFO  simulator: Created symbolic link \"/tmp/julabo-cf31\" to simulator pseudo terminal '/dev/pts/4'\n2020-09-01 21:04:43,186 INFO  simulator.JulaboCF[/tmp/julabo-cf31]: listening on /tmp/julabo-cf31 (baud=9600)\n\n```\n\n(To see the full list of options type `sinstruments-server --help`)\n\nYou can access it as you would a real hardware. Here is an example using python\nserial library on the same machine as the simulator:\n\n```python\n$ python\n>>> from julabo import JulaboCF, connection_for_url\n>>> conn = connection_for_url(\"serial:///tmp/julabo-cf31\", concurrency=\"syncio\")\n>>> dev = JulaboCF(conn)\n>>> conn.open()\n>>> print(dev.identification())\nJULABO CRYOCOMPACT CF31 VERSION 5.0\n```\n\n### Tango server\n\nA [tango](https://tango-controls.org/) device server is also provided.\n\nMake sure everything is installed with:\n\n`$ pip install julabo[tango]`\n\nRegister a julabo tango server in the tango database:\n```\n$ tangoctl server add -s Julabo/test -d JulaboCF test/julabo/1\n$ tangoctl device property write -d test/julabo/1 -p url -v \"tcp://controls.lab.org:17890\"\n```\n\n(the above example uses [tangoctl](https://pypi.org/project/tangoctl/). You would need\nto install it with `pip install tangoctl` before using it. You are free to use any other\ntango tool like [fandango](https://pypi.org/project/fandango/) or Jive)\n\nLaunch the server with:\n\n```terminal\n$ Julabo test\n```\n\n## TODO\n\n* Add `on_connection_made` callback to initialize controller with:\n  * support for async local serial line connection\n  * cache identification()",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tiagocoutinho/julabo",
    "keywords": "julabo,library,tango",
    "license": "LGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "julabo",
    "package_url": "https://pypi.org/project/julabo/",
    "platform": null,
    "project_url": "https://pypi.org/project/julabo/",
    "project_urls": {
      "Documentation": "https://github.com/tiagocoutinho/julabo",
      "Homepage": "https://github.com/tiagocoutinho/julabo",
      "Source": "https://github.com/tiagocoutinho/julabo"
    },
    "release_url": "https://pypi.org/project/julabo/2.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "julabo library",
    "version": "2.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15642848,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bfd6a9c742b28dd392131d4aee374a6759b0832c349f54db3a0e320abae7d5b",
          "md5": "b1e007e5d62401d86ba3e864fb594ddd",
          "sha256": "815fa2b7b32c3509be3701243538a536ac3d04ae32ca357e2636e478fef99206"
        },
        "downloads": -1,
        "filename": "julabo-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b1e007e5d62401d86ba3e864fb594ddd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11724,
        "upload_time": "2020-09-01T19:21:07",
        "upload_time_iso_8601": "2020-09-01T19:21:07.318785Z",
        "url": "https://files.pythonhosted.org/packages/3b/fd/6a9c742b28dd392131d4aee374a6759b0832c349f54db3a0e320abae7d5b/julabo-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d7b882e30760b451017235bf66ec008cacdadef641f24311609dd36e8f1dbc2",
          "md5": "94c17c92b3e8abe85952689dcec457e7",
          "sha256": "6b31d757a47d221cd9b6f891fc9b8ffe02dbf1bed0d989ade1a8513588061612"
        },
        "downloads": -1,
        "filename": "julabo-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "94c17c92b3e8abe85952689dcec457e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12115,
        "upload_time": "2020-09-04T15:27:46",
        "upload_time_iso_8601": "2020-09-04T15:27:46.470783Z",
        "url": "https://files.pythonhosted.org/packages/0d/7b/882e30760b451017235bf66ec008cacdadef641f24311609dd36e8f1dbc2/julabo-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3d56d39ff86a84b52dbe93913ecc9f788341709b94ef9f71479fa4ee7c0ff17",
          "md5": "3fc4b35748b6b432eca8b31104b4a149",
          "sha256": "d360533ae79d7535b3a39e0a76290aec09966fe0f29f4412cdc9a52f5120e127"
        },
        "downloads": -1,
        "filename": "julabo-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3fc4b35748b6b432eca8b31104b4a149",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12061,
        "upload_time": "2020-09-07T14:42:20",
        "upload_time_iso_8601": "2020-09-07T14:42:20.096359Z",
        "url": "https://files.pythonhosted.org/packages/e3/d5/6d39ff86a84b52dbe93913ecc9f788341709b94ef9f71479fa4ee7c0ff17/julabo-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99daa837101659922a03219be71a36a94aa18dc433229fc980bc938768ccfcd2",
          "md5": "989e88666f86301872e350f4b207f066",
          "sha256": "6cda90f49473c9ab24de72d66c883abc2698d2ea88216d6a6b6e53782cac2e6a"
        },
        "downloads": -1,
        "filename": "julabo-2.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "989e88666f86301872e350f4b207f066",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12532,
        "upload_time": "2021-06-04T17:12:54",
        "upload_time_iso_8601": "2021-06-04T17:12:54.546410Z",
        "url": "https://files.pythonhosted.org/packages/99/da/a837101659922a03219be71a36a94aa18dc433229fc980bc938768ccfcd2/julabo-2.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0b3a4d207d07d9336afabe24a8afc5fb93e09a186158d78a55a443cc724d2f8",
          "md5": "616e34b694aa10c469773fadc3f8310c",
          "sha256": "9265fa6c9294ed4f66f31889a2905bdc0584ffac58905258053608dd3bc7f0d9"
        },
        "downloads": -1,
        "filename": "julabo-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "616e34b694aa10c469773fadc3f8310c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12313,
        "upload_time": "2022-11-03T14:59:32",
        "upload_time_iso_8601": "2022-11-03T14:59:32.123573Z",
        "url": "https://files.pythonhosted.org/packages/e0/b3/a4d207d07d9336afabe24a8afc5fb93e09a186158d78a55a443cc724d2f8/julabo-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0b3a4d207d07d9336afabe24a8afc5fb93e09a186158d78a55a443cc724d2f8",
        "md5": "616e34b694aa10c469773fadc3f8310c",
        "sha256": "9265fa6c9294ed4f66f31889a2905bdc0584ffac58905258053608dd3bc7f0d9"
      },
      "downloads": -1,
      "filename": "julabo-2.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "616e34b694aa10c469773fadc3f8310c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12313,
      "upload_time": "2022-11-03T14:59:32",
      "upload_time_iso_8601": "2022-11-03T14:59:32.123573Z",
      "url": "https://files.pythonhosted.org/packages/e0/b3/a4d207d07d9336afabe24a8afc5fb93e09a186158d78a55a443cc724d2f8/julabo-2.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}