{
  "info": {
    "author": null,
    "author_email": "Snjypl <toepoe.py@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Apache Airflow",
      "Framework :: Apache Airflow :: Provider"
    ],
    "description": "\n\n<p align=\"center\">\n  <a href=\"https://www.airflow.apache.org\">\n    <img alt=\"Airflow\" src=\"https://cwiki.apache.org/confluence/download/attachments/145723561/airflow_transparent.png?api=v2\" width=\"60\" />\n  </a>\n</p>\n<h1 align=\"center\">\n  Airflow Grafana Loki Provider\n</h1>\n  <h3 align=\"center\">\n  Log Handler for pushing Airflow Task Log to Grafana Loki\n</h3>\n<br/>\n\nThis package provides Hook and LogHandler that integrates with Grafana Loki. LokiTaskLogHandler is a python log handler that handles and reads task instance logs. It extends airflow FileTaskHandler and uploads to and reads from Grafana Loki.\n\nInstallation\n--------------\nInstall using `pip` \n\n`pip install airflow-provider-grafana-loki` \n\nConfiguration Airflow to write logs to Grafana Loki\n---------------------------------------------------\n\nAirflow can be configured to read and write task logs in Grafana Loki. It uses an existing\nAirflow connection to read or write logs. If you don't have a connection properly setup,\nthis process will fail.\n\nFollow the steps below to enable Grafana Loki logging:\n\n1. Airflow's logging system requires a custom ``.py`` file to be located in the :envvar:`PYTHONPATH`, so that it's importable from Airflow. Start by creating a directory to store the config file, ``$AIRFLOW_HOME/config`` is recommended.\n2. Create empty files called ``$AIRFLOW_HOME/config/log_config.py`` and ``$AIRFLOW_HOME/config/__init__.py``.\n3. Copy the contents of ``airflow/config_templates/airflow_local_settings.py`` into the ``log_config.py`` file created in ``Step 2``.\n4. Customize the following portions of the template:\n\n```\n     elif REMOTE_BASE_LOG_FOLDER.startswith('loki'):\n        LOKI_HANDLER: Dict[str, Dict[str, Union[str, bool]]] = {\n            'task': {\n                'class': 'grafana_loki_provider.log.loki_task_handler.LokiTaskHandler',\n                'formatter': 'airflow',\n                'name':\"airflow_task\",\n                'base_log_folder': str(os.path.expanduser(BASE_LOG_FOLDER)),\n                'filename_template': FILENAME_TEMPLATE\n            },\n        }\n\n        DEFAULT_LOGGING_CONFIG['handlers'].update(LOKI_HANDLER)\n    else:\n        raise AirflowException(\n            \"Incorrect remote log configuration. Please check the configuration of option 'host' in \"\n            \"section 'elasticsearch' if you are using Elasticsearch. In the other case, \"\n            \"'remote_base_log_folder' option in the 'logging' section.\"\n        )\n\n\n\n\n```\n\n5. Make sure a Grafana Loki (Loki) connection hook has been defined in Airflow. The hook should have read and write access to the Grafana Loki Api.\n\n6. Update ``$AIRFLOW_HOME/airflow.cfg`` to contain:\n\n```\n\n        [logging]\n        remote_logging = True\n        remote_base_log_folder = loki\n        logging_config_class= log_config.DEFAULT_LOGGING_CONFIG\n        remote_log_conn_id = <name of the Grafana Loki connection>\n```\n\n7. Restart the Airflow webserver and scheduler, and trigger (or wait for) a new task execution.\n8. Verify that logs are showing up for newly executed tasks is showing up in Airflow UI. \n\n\nin case you are using gevent worker class, you might face `RecursionError: maximum recursion depth exceeded` error while reading logs from Loki. \nplease refer following issue for more info:[gevent/gevent/#1016]() [apache/airflow/#9118](https://github.com/apache/airflow/issues/9118)\n\ncurrent workaround is to add monkey patching at the top of the airflow log settings file. in this above case, ``$AIRFLOW_HOME/config/log_config.py``\n\neg:\n```\n\"\"Airflow logging settings.\"\"\"\nfrom __future__ import annotations\n\nimport gevent.monkey\ngevent.monkey.patch_all()\nimport os\n```\n\n\n----\n\n<h3> Note: The provider is in active  development stage. All sorts of feedback, and bug reports are welcome. I will try to addresss and resolve all issues to the best of my ability </h3> \n<h3>Incase of any issue or you need any help, please feel free to open an issue. </h3>\n<h3>Your contribution to the projects is highly appreciated and welcome.</h3>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "airflow-provider-grafana-loki",
    "package_url": "https://pypi.org/project/airflow-provider-grafana-loki/",
    "platform": null,
    "project_url": "https://pypi.org/project/airflow-provider-grafana-loki/",
    "project_urls": {
      "Homepage": "http://grafana.com/"
    },
    "release_url": "https://pypi.org/project/airflow-provider-grafana-loki/0.0.1a3/",
    "requires_dist": [
      "apache-airflow>=2.0.0",
      "pytest-mock; extra == 'test'",
      "pytest>=7.0.0; extra == 'test'",
      "requests-mock; extra == 'test'"
    ],
    "requires_python": "~=3.7",
    "summary": "A provider package for pushing and reading airflow task log from Grafana Loki.",
    "version": "0.0.1a3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16373033,
  "releases": {
    "0.0.1a1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "9403ae89883f4e3f81e67ac1530ef9320871bd4dce5fc3e17c17d04ad4d4cf87",
          "md5": "2a3d5f8ab0d625434fb291f61004f736",
          "sha256": "d0f1c546b978a9c543af329e5fc8b052dfd871ee3bbf733370d7e532fa80d41d"
        },
        "downloads": -1,
        "filename": "airflow_provider_grafana_loki-0.0.1a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a3d5f8ab0d625434fb291f61004f736",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 9848,
        "upload_time": "2022-08-14T21:04:34",
        "upload_time_iso_8601": "2022-08-14T21:04:34.580969Z",
        "url": "https://files.pythonhosted.org/packages/94/03/ae89883f4e3f81e67ac1530ef9320871bd4dce5fc3e17c17d04ad4d4cf87/airflow_provider_grafana_loki-0.0.1a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "ca2d486dff8e83b94ce61d628abd30959c1a6a15673a545789292a7730ffc8c5",
          "md5": "e09774d37f4f431cb092a390e6134b9b",
          "sha256": "23975b859e659ea8fbeb4c8cd60f3be87dd5734db62f862099fd38cf59e66149"
        },
        "downloads": -1,
        "filename": "airflow_provider_grafana_loki-0.0.1a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e09774d37f4f431cb092a390e6134b9b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 11411,
        "upload_time": "2022-12-20T20:00:17",
        "upload_time_iso_8601": "2022-12-20T20:00:17.210217Z",
        "url": "https://files.pythonhosted.org/packages/ca/2d/486dff8e83b94ce61d628abd30959c1a6a15673a545789292a7730ffc8c5/airflow_provider_grafana_loki-0.0.1a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "2d886146e73070f2ca10cbb8f03111f4a9890c406c8fd36c7950b41a47e4e7ea",
          "md5": "8646d0fc243b5ddd1044979bcdb74bc0",
          "sha256": "0a2857004bae8dddea5f675655049abec2dbe2a42250f0eea3f94d74c2ef3834"
        },
        "downloads": -1,
        "filename": "airflow_provider_grafana_loki-0.0.1a2.tar.gz",
        "has_sig": false,
        "md5_digest": "8646d0fc243b5ddd1044979bcdb74bc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 10622,
        "upload_time": "2022-12-20T20:00:19",
        "upload_time_iso_8601": "2022-12-20T20:00:19.651199Z",
        "url": "https://files.pythonhosted.org/packages/2d/88/6146e73070f2ca10cbb8f03111f4a9890c406c8fd36c7950b41a47e4e7ea/airflow_provider_grafana_loki-0.0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a3": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b52685efb2a99cb8f60c133d172467aa61158f2a95ba5c7ef83ebee59675431e",
          "md5": "86a413d626a57fc15cae3c1c2a18055d",
          "sha256": "37075418d01e063f88cc2f0601e959dff8363eda4dcfb717321b9f7763056e68"
        },
        "downloads": -1,
        "filename": "airflow_provider_grafana_loki-0.0.1a3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86a413d626a57fc15cae3c1c2a18055d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 11523,
        "upload_time": "2023-01-10T10:00:05",
        "upload_time_iso_8601": "2023-01-10T10:00:05.711464Z",
        "url": "https://files.pythonhosted.org/packages/b5/26/85efb2a99cb8f60c133d172467aa61158f2a95ba5c7ef83ebee59675431e/airflow_provider_grafana_loki-0.0.1a3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "0eb12bb69a238d21f4956cd2e9992970142652abb60b17734bf3aca445b730f1",
          "md5": "6e5afec05a8f400e70dd99ce6176de4d",
          "sha256": "53b179beeb648595a20cd53d575f9928473e1ba71d10f70e09f6c8de1cb6c0a2"
        },
        "downloads": -1,
        "filename": "airflow_provider_grafana_loki-0.0.1a3.tar.gz",
        "has_sig": false,
        "md5_digest": "6e5afec05a8f400e70dd99ce6176de4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 10785,
        "upload_time": "2023-01-10T10:00:08",
        "upload_time_iso_8601": "2023-01-10T10:00:08.467559Z",
        "url": "https://files.pythonhosted.org/packages/0e/b1/2bb69a238d21f4956cd2e9992970142652abb60b17734bf3aca445b730f1/airflow_provider_grafana_loki-0.0.1a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "b52685efb2a99cb8f60c133d172467aa61158f2a95ba5c7ef83ebee59675431e",
        "md5": "86a413d626a57fc15cae3c1c2a18055d",
        "sha256": "37075418d01e063f88cc2f0601e959dff8363eda4dcfb717321b9f7763056e68"
      },
      "downloads": -1,
      "filename": "airflow_provider_grafana_loki-0.0.1a3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "86a413d626a57fc15cae3c1c2a18055d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.7",
      "size": 11523,
      "upload_time": "2023-01-10T10:00:05",
      "upload_time_iso_8601": "2023-01-10T10:00:05.711464Z",
      "url": "https://files.pythonhosted.org/packages/b5/26/85efb2a99cb8f60c133d172467aa61158f2a95ba5c7ef83ebee59675431e/airflow_provider_grafana_loki-0.0.1a3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "0eb12bb69a238d21f4956cd2e9992970142652abb60b17734bf3aca445b730f1",
        "md5": "6e5afec05a8f400e70dd99ce6176de4d",
        "sha256": "53b179beeb648595a20cd53d575f9928473e1ba71d10f70e09f6c8de1cb6c0a2"
      },
      "downloads": -1,
      "filename": "airflow_provider_grafana_loki-0.0.1a3.tar.gz",
      "has_sig": false,
      "md5_digest": "6e5afec05a8f400e70dd99ce6176de4d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.7",
      "size": 10785,
      "upload_time": "2023-01-10T10:00:08",
      "upload_time_iso_8601": "2023-01-10T10:00:08.467559Z",
      "url": "https://files.pythonhosted.org/packages/0e/b1/2bb69a238d21f4956cd2e9992970142652abb60b17734bf3aca445b730f1/airflow_provider_grafana_loki-0.0.1a3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}