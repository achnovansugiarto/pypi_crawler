{
  "info": {
    "author": "Ond≈ôej ≈†ebek",
    "author_email": "xsebek@fi.muni.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console :: Curses",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Topic :: Education"
    ],
    "description": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/xsebek/karel/master/images/window.gif\"/> \n</p>\n\n\n# Karel the Robot (now in Python)\n\n<p>\n<a href=\"https://www.python.org/downloads/release/python-360/\">\n  <img alt=\"Python Version\" src=\"https://img.shields.io/pypi/pyversions/karel-robot\">\n</a>\n<a href=\"https://pypi.org/project/karel-robot/\">\n  <img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/karel-robot\">\n</a>\n<a href=\"https://github.com/psf/black\">\n  <img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\">\n</a>\n</p>\n\n\n> Karel is a pretty snazzy environment for learning to program.\n> You can [read about it here](https://en.wikipedia.org/wiki/Karel_(programming_language)).\\\n> I decided to write a Karel environment for Python, after seeing that all of the others\n> had too many dependencies for beginners.\n>\n> *Stephen Altamirano (`alts/karel`)*\n\n\n\n## Installation\n\nInstalling should be as simple as opening your terminal and writing:\n```bash\npip3 install karel_robot\n```\n\n## Write simple Karel programs\n\nCoding in Python is **super fast and easy**!\nSave a text file `example.py` in this folder, use import and start coding!\n\n```python\nfrom karel_robot.run import *\n# you can call imported functions\nturn_left()\n\n# or use Python, like loops ('while') or logical 'not'\nwhile not front_is_blocked():\n    move()\n```\n\n> For a true unix executable, add the [shebang](https://stackoverflow.com/a/19305076/11105559),\n> then the right to execute with `chmod +x example.py` and run it as `./example.py`.\n\n\n\nIf you break a Karel program, it should not leave your terminal screen broken in retaliation, otherwise please\nfile an [Issue](https://github.com/xsebek/karel/issues/new/choose).\nMore advanced or courageous programmers are welcome to look into the `karel_robot` folder and read about the details.\n\n\n\n## Karel functions\n\nThese are the functions you can use to command Karel after importing from `karel_robot.run`:\n\n| Function              | Result                                            |\n|-----------------------|---------------------------------------------------|\n| **Movement**          |                                                   |\n| `move()`              | Karel moves in the direction he is facing         |\n| `turn_left()`         | Karel turns left                                  |\n| `turn_right()`        | Karel turns right                                 |\n| **Beepers**           |                                                   |\n| `pick_beeper()`       | Karel tries to pick up a beeper                   |\n| `put_beeper()`        | Karel puts down a beeper (if he has any)          |\n| `beeper_is_present()` | True iff Karel stands on a beeper                 |\n| **Walls**             |                                                   |\n| `front_is_blocked()`  | True iff Karel can't move forward                 |\n| `front_is_treasure()` | True iff Karel is standing in front of a Treasure |\n| **Direction**         |                                                   |\n| `facing_north()`      | True iff Karel is facing north (`^`)              |\n| `facing_south()`      | True iff Karel is facing south (`v`)              |\n| `facing_east()`       | True iff Karel is facing east (`>`)               |\n| `facing_west()`       | True iff Karel is facing west (`<`)               |\n| **Execution**         |                                                   |\n| `set_karel_beepers(None)`| Set Karel's beepers, with `None` as inf.       |\n| `set_speed(100)`      | How fast Karel moves, 0 to 100                    |\n| `pause()`             | Pause execution, press any key to continue        |\n| `message(text, pause)`    | Show a text message to user.                  |\n| `save()`              | Save the map in file specified by `--output`.     |\n| `exit()`              | End execution                                     |\n\n\nNote that the map is loaded and screen started in the moment of import:\n```python\nfrom karel_robot.run import *\n```\nIf you only need raw objects and methods see the directory [karel_robot](./karel_robot).\n\n\n\n## Karel world\n\nThere are many maps in [`world`](.world) directory. Karel maps are simple text files and look like this one:\n\n    1..#...\n    #....^.\n\nKarel is represented by the arrow (`^`) looking up on the empty tile (`.`).\\\nThere are two walls (`#`) and one beeper in the upper right corner (`1`).\nThere is no treasure (`$`).\n\nThis does not allow us to use more then 9 beepers and place Karel on beeper or other non-empty tile.\n\n#### New Karel map format\n\nA new map format has file extension `.km2` but it is still plain text file ‚àí you can change it to `.txt`:\n\n```\nKAREL 2 1 > N\n#  1  .  #  #  .  . 21\n#  #  9  .  #  .  #  #\n6  .  .  .  .  .  .  #\n```\n\nThe above map places Karel right on the 9 beepers.\nNote that there are 21 beepers in the upper right corner in one tile, which the original format does not support.\nThe mysterious `N` in Karel's header sets the number of beepers he starts with to unlimited, which is the most fun.\n\n#### Editor support\n\nDo you want to write or edit maps? Check out the vim highlighting!\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/xsebek/karel/master/images/vim.png\"/> \n</p>\n\n\n## Run your program\n\nOpen the terminal and write this command:\n\n```bash\npython3 YOUR_PROGRAM.py  # -m YOUR_MAP.km or other options\n```\n\nPress <kbd>Q</kbd> to quit or <kbd>P</kbd> to pause program.\nProgram pauses when Karel tries to make an illegal move.\n\n### Example treasure üí∞\n\n<details>\n  <summary>Click to expand!</summary>\nRun the program `treasure.py` (also below) with worlds `00` - `03_window`.\nKarel will walk to the wall and then search for a treasure in the walls.\n\n\n![Karel finds the treasure.](https://raw.githubusercontent.com/xsebek/karel/master/images/00_window.gif)&emsp;![Karel cycles.](https://raw.githubusercontent.com/xsebek/karel/master/images/01_window.gif)&emsp;![Karel goes around.](https://raw.githubusercontent.com/xsebek/karel/master/images/02_window.gif)&emsp;![Karel hits the wall.](https://raw.githubusercontent.com/xsebek/karel/master/images/03_window.gif)\n\nThe idea comes from a [paper on cooperative learning in CS1](https://dl.acm.org/doi/abs/10.1145/2492686).\n\n<details>\n  <summary>Karel searching for treasure Python code</summary>\n\n  ```python\n  from karel_robot.run import *\n\n  while not front_is_blocked():\n      move()\n\n  while not front_is_treasure():\n      turn_left()\n      if front_is_blocked():\n          turn_left()\n      # FIX: add else\n      move()\n      turn_right()\n  ```\n\n</details>\n\n</details>\n\n\n### Langton's ant üêú\n\n<details>\n  <summary>Click to expand!</summary>\n\nHere is a short animation of Karel playing\nLangton's ant.<sup>[[wiki]](https://en.wikipedia.org/wiki/Langton%27s_ant)</sup>\n\n<p>\n  <img src=\"https://raw.githubusercontent.com/xsebek/karel/master/images/langton_optimized.gif\" alt=\"langton_optimized\" width=\"40%\"/>\n</p>\nThe program `ant.py` (also below)  uses a single beeper to mark a tile as \"Black\"\nand Karel can pick it up to make it \"White\".\nThe ant moves seemingly randomly, but makes a nice picture in about 11000 steps.\nThe command to recreate the recording is:\n\n```bash\nprograms/ant.py -x 70 -y 50 --karelpos 35 25 --kareldir ^ --output langton.km2\n```\n\n<details>\n  <summary>Langton's ant Python code</summary>\n\n  ```python\n  from karel_robot.run import *\n  set_speed(100)\n\n  while True:  # repeat\n      if beeper_is_present(): # At a black square\n          pick_beeper()           # flip the color of the square\n          turn_left()             # turn 90¬∞ left\n          move()                  # move forward one unit\n      else:                   # At a white square\n          put_beeper()            # flip the color of the square\n          turn_right()            # turn 90¬∞ right\n          move()                  # move forward one unit\n  ```\n\n</details>\n\n</details>\n\n\n\n\n## Try out your map with *interactive*\n\nRun the `karel` script with any of the options:\n```bash\nkarel --help                       # 0. prints the actual usage\nkarel                              # 1. opens in infinite map, fills the whole screen\nkarel -m \"world/1_window.km\"      # 2. opens the simple text file map in world directory\nkarel --ix -m \"world/easy/tiny.km2\"  # 3. simillar to 2., but forces the\n```\n\nYou can now use your keyboard to control Karel.\n\n|     Key    |  Function       |\n|------------|-----------------|\n|<kbd>‚Üë</kbd>| `move()`        |\n|<kbd>‚Üê</kbd>| `turn_left()`   |\n|<kbd>‚Üí</kbd>| `turn_right()`  |\n|<kbd>I</kbd>| `pick_beeper()` |\n|<kbd>U</kbd>| `put_beeper()`  |\n|<kbd>Q</kbd>| `stop()`        |\n\n> There is also <kbd>W</kbd> for saving to file (specified by `--output`) and couple of keys for ~~cheating~~ testing!\n\n\n\n\n## Recursive Karel\n\nYou can try your wits in creating iterative programs with only **if** statements, procedure definition and recursion!\nIt is pretty mind bending so lets look at an example:\n\n```markdown\nDEFINE MAIN\n    IFWALL PUT MOVE\n    IFWALL SKIP MAIN\nEND\nRUN MAIN\n```\n\nAfter the program is parsed and run, the `MAIN` function will call itself again until it reaches a wall.\nWhen that happens, Karel will put down a beeper and the execution stops.\n\nHere is a more complex recursive program searching through a maze for a tile with two beepers:\n\n<p>\n  <img src=\"https://raw.githubusercontent.com/xsebek/karel/master/images/program_treasure.gif\" alt=\"Recursive program to find treasure\"/>\n</p>\nYou can define new procedures by writing <kbd>DEFINE <i>new_name</i></kbd>\nand then writing names of procedures and statements into its body,\nwhich you then <kbd>END</kbd>.\n\nThese statements are the simple building blocks you can use\nand combine with your new procedures:\n\n|                  Statement                  | Note                                                                  |\n| :-----------------------------------------: | --------------------------------------------------------------------- |\n|               <kbd>MOVE</kbd>               | Karel steps forward.                                                  |\n|               <kbd>LEFT</kbd>               | Karel turns 90¬∞ left - note that there is no `RIGHT` :)               |\n|               <kbd>PUT</kbd>                | Karel puts down one beeper.                                           |\n|               <kbd>PICK</kbd>               | Karel picks up one beeper.                                            |\n|               <kbd>SKIP</kbd>               | Does nothing - like `pass` in Python.                                 |\n| <kbd>IFWALL</kbd> <kbd>‚úì</kbd> <kbd>êÑÇ</kbd> | If `front_is_blocked()` then run the first procedure else the second  |\n| <kbd>IFMARK</kbd> <kbd>‚úì</kbd> <kbd>êÑÇ</kbd> | If `beeper_is_present()` then run the first procedure else the second |\n\nThe interpret in `karel_robot.parsers.interpret` is used by the `karel` executable script:\n\n```sh\nkarel --program programs/graph/3_treasure.ks --map world/maze/treasure/07.km2 --speed 20\n```\n\n\n\n## Credits ü§ñ\n\nThe original author is Stephen Altamirano (@alts).\nRecently this has been updated by @Tetragramm and @xsebek.\n\nThe package on PyPI is maintained by @xsebek.\n\nIf you want to contribute, check out the `karel_robot` folder [README](karel_robot/README.md).\n\n\n## LICENSE\n\nThis project is released under GNU GPLv3 (or later) license in hopes that\nit will be useful. You are encouraged to share this *freely* and can\neven sell it provided everyone will still be able to read and modify\nthe source code (just like you are) and keeps the license. :wink:\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xsebek/karel",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "karel-robot",
    "package_url": "https://pypi.org/project/karel-robot/",
    "platform": "",
    "project_url": "https://pypi.org/project/karel-robot/",
    "project_urls": {
      "Homepage": "https://github.com/xsebek/karel"
    },
    "release_url": "https://pypi.org/project/karel-robot/1.1.0/",
    "requires_dist": [
      "windows-curses (>=2.2) ; platform_system == \"Windows\""
    ],
    "requires_python": ">=3.6",
    "summary": "Karel the Robot simple library and interactive executable",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9499208,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03b2d9eabb1f727b9eae2260191404e9d29b8f1dc194a75448f2bdb74ba6e567",
          "md5": "4ebe33c0c40536d6997a5df773ce974f",
          "sha256": "14f5ab7d288163b819f101b202c7920c921697214c3a9b9d99f9523d36ed5b95"
        },
        "downloads": -1,
        "filename": "karel_robot-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ebe33c0c40536d6997a5df773ce974f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 43192,
        "upload_time": "2020-08-24T07:38:47",
        "upload_time_iso_8601": "2020-08-24T07:38:47.501572Z",
        "url": "https://files.pythonhosted.org/packages/03/b2/d9eabb1f727b9eae2260191404e9d29b8f1dc194a75448f2bdb74ba6e567/karel_robot-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f065d860f32d8bcce452091861a11e0fcc332f78ac20926ae0579fb91a6d9e08",
          "md5": "9111603a2afff43d180de497da9a2835",
          "sha256": "1de7429d19fdc831777a531f544f4bcef22310dcfa3c3019ac6a0b1bed203341"
        },
        "downloads": -1,
        "filename": "karel_robot-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9111603a2afff43d180de497da9a2835",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28230,
        "upload_time": "2020-08-24T07:38:50",
        "upload_time_iso_8601": "2020-08-24T07:38:50.029088Z",
        "url": "https://files.pythonhosted.org/packages/f0/65/d860f32d8bcce452091861a11e0fcc332f78ac20926ae0579fb91a6d9e08/karel_robot-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c17849f1ec7d5b1ab952259f38f26362a6ad12fdaac77b6c2f58ad3714aa9a11",
          "md5": "60887d4bf683a9cd447a04b30fd62eaf",
          "sha256": "33b1e53dbeeab34745d2abca240da683f5c3716f3be10aa1b45c83a95a216709"
        },
        "downloads": -1,
        "filename": "karel_robot-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60887d4bf683a9cd447a04b30fd62eaf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 45990,
        "upload_time": "2020-08-26T20:43:42",
        "upload_time_iso_8601": "2020-08-26T20:43:42.105663Z",
        "url": "https://files.pythonhosted.org/packages/c1/78/49f1ec7d5b1ab952259f38f26362a6ad12fdaac77b6c2f58ad3714aa9a11/karel_robot-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a9a7cc5e3270a9114fd45eaad0f46e3ba964adf5e8b6941b13d29a9cb53bf93",
          "md5": "074b81ccf50e922cf75b83a960529a75",
          "sha256": "5ca3d2eeba07f6189202614ee05a61498e972c13bdeb493fcbdd5eb19e64a39f"
        },
        "downloads": -1,
        "filename": "karel_robot-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "074b81ccf50e922cf75b83a960529a75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29722,
        "upload_time": "2020-08-26T20:43:43",
        "upload_time_iso_8601": "2020-08-26T20:43:43.133719Z",
        "url": "https://files.pythonhosted.org/packages/5a/9a/7cc5e3270a9114fd45eaad0f46e3ba964adf5e8b6941b13d29a9cb53bf93/karel_robot-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76670fa8095e7657b8468d860a6abe276edc0238d02d236a76d7cb522496be8a",
          "md5": "98a577b097dd56db272ce1ba1fabcaec",
          "sha256": "89af8b1a7a0fb217e4cfbd5eceeafd1661d61c032cd796434cad5a421d068f2b"
        },
        "downloads": -1,
        "filename": "karel_robot-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98a577b097dd56db272ce1ba1fabcaec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46096,
        "upload_time": "2021-02-23T13:14:53",
        "upload_time_iso_8601": "2021-02-23T13:14:53.688631Z",
        "url": "https://files.pythonhosted.org/packages/76/67/0fa8095e7657b8468d860a6abe276edc0238d02d236a76d7cb522496be8a/karel_robot-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1d347967c05fc4bf2484b7021459054465c72022a828daeaae90705b2a9ee1a",
          "md5": "b32daecc2bd36c03bc632ea136b40508",
          "sha256": "e2007213efa6a91ef1af560e5f1fe43c10320a6ffa24b1b7f0178ec137df755a"
        },
        "downloads": -1,
        "filename": "karel_robot-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b32daecc2bd36c03bc632ea136b40508",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29951,
        "upload_time": "2021-02-23T13:14:54",
        "upload_time_iso_8601": "2021-02-23T13:14:54.783724Z",
        "url": "https://files.pythonhosted.org/packages/c1/d3/47967c05fc4bf2484b7021459054465c72022a828daeaae90705b2a9ee1a/karel_robot-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76670fa8095e7657b8468d860a6abe276edc0238d02d236a76d7cb522496be8a",
        "md5": "98a577b097dd56db272ce1ba1fabcaec",
        "sha256": "89af8b1a7a0fb217e4cfbd5eceeafd1661d61c032cd796434cad5a421d068f2b"
      },
      "downloads": -1,
      "filename": "karel_robot-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "98a577b097dd56db272ce1ba1fabcaec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 46096,
      "upload_time": "2021-02-23T13:14:53",
      "upload_time_iso_8601": "2021-02-23T13:14:53.688631Z",
      "url": "https://files.pythonhosted.org/packages/76/67/0fa8095e7657b8468d860a6abe276edc0238d02d236a76d7cb522496be8a/karel_robot-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1d347967c05fc4bf2484b7021459054465c72022a828daeaae90705b2a9ee1a",
        "md5": "b32daecc2bd36c03bc632ea136b40508",
        "sha256": "e2007213efa6a91ef1af560e5f1fe43c10320a6ffa24b1b7f0178ec137df755a"
      },
      "downloads": -1,
      "filename": "karel_robot-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b32daecc2bd36c03bc632ea136b40508",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 29951,
      "upload_time": "2021-02-23T13:14:54",
      "upload_time_iso_8601": "2021-02-23T13:14:54.783724Z",
      "url": "https://files.pythonhosted.org/packages/c1/d3/47967c05fc4bf2484b7021459054465c72022a828daeaae90705b2a9ee1a/karel_robot-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}