{
  "info": {
    "author": "Kunal Pandit",
    "author_email": "kpandit@nygenome.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PySeq2500\nControl an Illumina HiSeq 2500 System Interactively\n\n[Read the Docs](https://pyseq2500.readthedocs.io/en/latest/)\n\n# Installation\n\n## Requirements\nPySeq2500 has only been tested on PCs that were previously used to control the HiSeq2500s with the Illumina Control Software.\n\n### PC Specs\n- Windows 7 64 bit\n- Dual Intel Xeon CPU 2.00 GHx\n- 64 GB RAM\n- Active Silicon Phoenix Camera Link Frame Grabbers (D48CL PE4)\n\nNewer operating systems have not been tried yet because the [drivers](https://dcam-api.com/downloads/#archive) for the cameras/frame grabber are not compatible.\n\n### Software Requirements\n- Windows 7\n- Python 3.7\n- compiler such as Build Tools for Visual Studio 2019 (version 16.11)\n\n## PySeq2500 Installation\n```\npip install pyseq2500\n\npip remove qtpy\n\npip install qtpy==1.11.2\n\npip install pyqt5==5.15.4\n```\n\n## Verify Installation\n```\npyseq -h\n\nusage: pyseq [-h] [-config PATH] [-name NAME] [-output PATH] [-list]\n             [-method METHOD] [-virtual] [-settings] [-ports] [-diagnostics]\n\noptional arguments:\n  -h, --help      show this help message and exit\n  -config PATH    path to config file\n  -name NAME      experiment name\n  -output PATH    directory to save data\n  -list           list installed methods\n  -method METHOD  print method details\n  -virtual        use virtual HiSeq\n  -settings       print optional HiSeq settings\n  -ports          view com ports\n  -diagnostics    perform a diagnostics run\n```\n\n## Issues\nPySeq2500 relies on napari for manual focusing and displaying images with the\nimage analysis module. However the dependencies for napari do not get installed\ncorrectly so there are some additional pip install commands.\n\n# HiSeq Modifications\nSee [Wiki on HiSeq Modification](https://github.com/nygctech/PySeq2500/wiki/PySeq2500-Wiki)\n\n# Initializing HiSeq\n\n```python\nimport pyseq\n\nhs = pyseq.HiSeq()                  \nhs.initializeCams()                \nhs.initializeInstruments()          # Initialize x,y,z & objective stages. Initialize lasers and optics (filters)\n```\n\nNote that the `pyseq.HiSeq()` constructor accepts serial ports assignments in case your setup is different, i.e:\n\n```python\nhs = pyseq.HiSeq(xCOM='COM67', yCOM='COM68', fpgaCOM=['COM10', 'COM11'], laser1COM='COM12', laser2COM='COM13')\n```\n\n# Basic setup of HiSeq\n\n```python\nhs.lasers['green'].set_power(100)   #Set green laser power to 100 mW\nhs.lasers['red'].set_power(100)     #Set red laser power to 100 mW\n\nhs.y.move(-180000)                  #Move stage to top right corner of Flow Cell A\nhs.x.move(17571)\nhs.z.move([21250, 21250, 21250])    #Raise z stage\n\nhs.obj.move(30000)                  #Move objective to middle-ish\n\nhs.move_ex('green','open')                #Move excitation filter 1 to open position\nhs.move_ex('red','open')                #Move excitation filter 2 to open position\n\nhs.lasers['green'].get_power()      #Get green laser power (mW i think)\nhs.lasers['red'].get_power()        #Get red laser power   (mW i think)\n```\n\n# Image acquisition\n\nThe following code takes a picture from each of the cameras, splits each image into 2, saves all 4 images as tiffs, and writes a metadata textfile.\nImages and metafile are saved in the directory set in `hs.image_path`.\n\n```python\n# Image destination path\nhs.image_path = 'C:\\\\Users\\\\Public\\\\Documents\\\\PySeq2500\\\\Images\\\\'\n\n# Take an image\nhs.take_picture(32, 128) # take_picture(# frames, bundle height, image_name)\n```\n\nNames of the images are `hs.cam1.left_emission + image_name`. The name of the metafile is just `image_name`. The `image_name`\nargument is optional, if not used it defaults to a time stamp.\n\nCurrently all of the image prefixes (`camN.L/R_emission`) are set to the emission wavelength in `hs.InitializeCams()`\n\nThe images are `# frames` x `bundle height` rows of pixels (length of scan) and 2048 columns of pixels.\nChanging the `# frames` is the best way to change the length of the scan.\nOnly certain values are acceptable for the bundle height, the default, which Illumina uses, is 128.\n\nThe metadata textfile contains info like time, stage position, laser power, filter settings.\n\n# Moving the stage\n\n```python\n# Positioning the stage\n# Currently all of the stages move to absolute positions that are defined in steps\nhs.y.move(Y)         # Y should be between -7000000 and 7500000\nhs.x.move(X)         # X should be between 1000 and 50000\nhs.z.move([Z, Z, Z]) # Z should be between 0 and 25000\n\nhs.obj.move(31000)   # Objective should be between 0 and 65000\n```\n\nTo move the stage out to load slides onto it is `hs.move_stage_out()`.\n\nGenerally, when moving the stage, position the stage in the y direction first, into the hiseq, and then position it in the x direction because there are some knobs at the front of the hiseq that the stage can run into.\n\nDuring `hs.intializeInstruments()`, the staged is homed to **Y=0, X=30000, Z=0, and O=30000** (although there is no homing for the objective).\n\n# Setting up optics\nBefore taking a picture, the laser power should be set, the excitation filters should be set, and the emission filter should be in the light path.\n\n## Lasers\n\n```python\nhs.lasers['green'].set_power(100)  # sets laser 1 (green) to 100 mW\nhs.lasers['red'].set_power(100)    # sets laser 2 (red) to 100 mW\n\nhs.lasers['green'].get_power()     # returns the power of laser 1 and stores it in hs.lasers['green'].power\nhs.lasers['red'].get_power()       # returns the power of laser 2 and stores it in hs.lasers['red'].power\n```\n\nDuring `hs.initializeInstruments()`, both lasers are set to 10 mW\n\n## Filters\n\nDuring `hs.initializeInstruments()`, the excitation filters are homed to the block position and the emission filter is moved into the light path.\n\n```python\nhs.optics.move_ex(color, filter)\t\t #  moves the excitation filter wheel in the color ('green' or 'red') light path to the filter.\nhs.optics.ex_dict \t\t\t\t\t      # stores the positions and names of the filters in a dictionary\nhs.optics.move_em_in(True/False) \t# \"True\" moves the emission filter into the light path, False moves it out.\n```\n\n# Automate a method/recipe on a HiSeq2500\nThe following files are necessary to automate a method on a HiSeq 2500 System.\n 1. experiment config\n 1. method recipe\n 1. method config (optional)\n\n## Experiment Config\nThe experiment config has 4 sections.\n```\n[experiment]\n[sections]\n[reagents]\n[cycles]\n[filters]\n[method] #optional\n```\n\n### [experiment]\nexperiment details (required, unless noted)\n- method: name of installed method, path to method config file, or section name in config file\n- cycle: number of cycles to run (integer)\n- first flowcell: which flowcell to start first if running 2, optional (A or B)\n```\n[experiment]\nmethod = 4i            \ncycles = 2              \nfirst flowcell = A\n```\n\n### [sections]\nposition of sections on flowcell as measured with slide ruler (required for imaging).\n\n`section name = F: LLx, LLy, URx, URy`\n\n- section name: unique name/id of section to image (string)\n- F: flowcell section is on (A or B)\n- LLx: lower left x coordinate of section, use slide ruler (float)\n- LLy: lower left y coordinate of section, use slide ruler (float)\n- URx: upper right x coordinate of section, use slide ruler (float)\n- URy: upper right y coordinate of section, use slide ruler (float)\n```\n[sections]\nsection1 = A: 15.5, 45, 10.5, 35\n```\n\n### [reagents]\nSpecify ports (optional).\nIt is possible to also to specify ports in a seperate method config file.\n\n`N = name`\n\n- N: port number (integer)\n- Name: name of reagent (string)\n```\n[reagents]\n6 = GFAP\n7 = IBA1\n8 = AF547 + Cy5\n```\n\n### [cycles]\nSpecify cycle specific reagents (optional).\n\n`variablereagent N = name`\n\n- variablereagent: cycle dependent reagent in recipe, specified in method config (string)\n- N: cycle (integer)\n- name: reagent used for variablereagent at cycle N (string)\n```\n[cycles]\n1stab 1 = GFAP\n1stab 2 = IBA1\n2ndab 1 = AF547 + Cy5\n2ndab 2 = AF547 + Cy5\n```\n\n### [filters]\nSpecify cycle specific optical filters (optional).\nIf a filter is not specified for a cycle, **default focus filter 1** is used for the green laser and **default focus filter 2** is used for the red laser.\n\n`lasercolor N = name`\n\nThe HiSeq uses neutral density filters of various optical densities to reduce the intensity of light.\nThe `open` filter allows the laser to pass without reduction.\nThe `'home` filter completely blocks the laser.\n- lasercolor: color of laser line\n- N: cycle (integer)\n- name: optical density of filter to use (float/string), see table below.\n\nlaser color | filters (Optical Density)\n-----------:|  ----------------------------------------\ngreen (g/G) | open, 0.2, 0.6, 1.4, 1.6, 2.0, 4.0, home\nred (r,R)   | open, 0.2, 0.9, 1.0, 2.0, 3.0, 4.5, home\n\n\n```\n[filters]\ngreen 1 = 1.6\ng 2 = 1.4\nG 3 = 0.6\nred 1 = 1.0\nr 1 = 0.9\nR 1 = 2.0\n```\n\n### [`method name`]\nMethod specific HiSeq settings (optional)  \nMust match the `method` item in the **[experiment]** section.\nInstead of a method specific section in the experiment config file, a seperate method config file may be used.\n\nSee **Method Config** below for details.\n\n## Method Config\nThe method config file has 2 possible sections.\nInstead of a seperate method config file, a method specific section in the experiment config file may be used (in which case only use 1 **[reagent]** section).\n```\n['method name'] #required\n[reagents] #optional,\n```\n### [`method name`]\nHiSeq settings specific to the method.\nThe name of this section should match the name of the method.\nThe only required key in this section is **recipe** that has the path to the method recipe as its value.\n```\n[4i]\nrecipe = 4i_recipe.txt\n```\nThe other keys are optional.\n- **flush speed**: flowrate to flush lines with in uL/min (integer), default is 700\n- **flush volume**:  volume to flush line with in uL (integer), default is 2000\n- **reagent speed**: flowrate to pump reagents during recipe in uL/min (integer), default is 40\n- **variable reagents**: name of variable ports in recipes that are cycle dependent (string)\n- **first port**: port to start recipe at on first cycle (string)\n- **barrels per lane**: number of syringe barrels that are used per lane on flowcell (integer), default is 8\n- **laser power**: set power of laser in mW (integer), default is 10\n- **z position**: step of tilt motors when imaging (integer), default is 21500\n- **focus filter 1**: filter for green laser for autofocus routine, default is 2.0\n- **focus filter 2**: filter for red laser for autofocus routine, default is 2.0\n- **default em filter**: emission filter used for imaging, True for in path, False for out of path (bool), default is True\n- **default filter 1**: filter for green laser if not specified in **[filter]** section of experiment config file (float/string), default is `home`\n- **default filter 2**: filter for red laser if not specified in **[filter]** section of experiment config file (float/string), default is `home`\n- **rinse**: reagent to rinse the flowcell with between completion of the experiment and flushing of the lines during shutdown (string), default is `None`\n- **autofocus**: routine used for autofocusing (string), see **Autofocus** for more info, default is `partial once`\n- **bundle height:** sensor bundle height of cameras (integer), only certain values are valid, default is 128\n```\n[4i]\nrecipe = 4i_recipe.txt\nflush speed = 500\nflush volume = 1000\nreagent speed = 200\nvariable reagents = 1stab, 2ndab\nfirst port = blocking\nbarrels per lane = 8\nlaser power = 400\n```\n\n### [reagents]\nSpecify method required ports (optional).\n\n`N = name`\n\nUseful if running the same method repeatedly and only some of the ports change from each experiment.\n- N: port number (integer)\n- Name: name of reagent (string)\n```\n[valve24]\n1 = PBS\n2 = water\n3 = elution\n4 = blocking\n5 = imaging\n```\n\n## Method Recipe\nThere are 6 basic actions to build a recipe.\n1. **PORT**: *port name* (string)\n>Valve switches to specified port.\n```\nPORT: water\n```\n2. **PUMP**: *pump volume in uL* (integer)\n>Syringe pump draws specified volume through flowcell lane.\n```\nPUMP: 2000\n```\n3. **HOLD**: *hold time in min.* (integer)\n>Recipe pauses for specified time.\n```\nHOLD: 10\n```\n4. **WAIT**: **IMAG** or port name* (string)\n>Recipe waits to continue until the other flowcell is imaging (**IMAG**) or switches to *port name*. If there is only one flowcell, **WAIT** is ignored.\n```\nWAIT: water\n```\n5. **IMAG**: *z focal planes* (integer)\n>The flowcell is imaged at the specified number of z focal planes at the sections listed in the experiment config.\n```\nIMAG: 15\n```\n6. **TEMP**: *temperature in degrees Celsius* (integer/float)\n>The temperature of the stage is change to the specified temperature.\n```\nTEMP: 55\n```\n\n\n# Run an automated experiment\nStart a method on a HiSeq2500 System from the command line.\nAll arguments are optional.\n```\nusage: pyseq [-h] [-config PATH] [-name NAME] [-output PATH] [-list]\n             [-method METHOD] [-virtual]\n```\n- **h**: **See usage of pyseq**\n- **config**: path to the configuration file, default is config.cfg in the current working directory\n- **name**: name of the experiment, default is a YYYYMMDD_HHMMSS time stamp.\n- **output**: path to the output directory to save images and logs, default is the current working directory\n- **list**: **See installed methods**\n- **method**: **See an installed method config and method recipe**\n- **virtual**: **Run a virtual experiment**\n- **settings**: **See available configuration options**\n- **ports**: **List COM port identifier of instruments**\n- **diagnostics**: **Perform a simple diagnostics run**\n\n## Run an experiment\nAssumes an experiment file, config.cfg, is in the current working directory.\n```\npyseq -n MyFirstHiSeqExperiment\n```\n\n## Run a virtual experiment\nAssumes an experiment file, config.cfg, is in the current working directory.\nUseful for building and testing new methods.\n```\npyseq -n TestCustomExperiment -v\n```\n\n## See usage of pyseq\n```\npyseq -h, --help\n```\n\n## See installed methods\n```\npyseq -l\n```\n\n## See an installed method config and method recipe\nThe example here is to see the config and recipe for a method called 4i.\n```\npyseq -m 4i\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nygctech/PySeq2500",
    "keywords": "sequencing,HiSeq,automation,biology",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyseq2500",
    "package_url": "https://pypi.org/project/pyseq2500/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyseq2500/",
    "project_urls": {
      "Bug Reports": "https://github.com/nygctech/PySeq2500/issues",
      "Homepage": "https://github.com/nygctech/PySeq2500",
      "Source": "https://github.com/nygctech/PySeq2500",
      "Support": "https://www.hackteria.org/wiki/HiSeq2000_-_Next_Level_Hacking#Control_Software"
    },
    "release_url": "https://pypi.org/project/pyseq2500/0.64/",
    "requires_dist": [
      "pyserial (>=3)",
      "numpy",
      "scipy",
      "imageio",
      "tabulate",
      "dask",
      "xarray",
      "zarr",
      "qtpy",
      "napari",
      "scikit-image (>=0.17)",
      "wmi",
      "qtpy (==1.11.2)",
      "pyqt5 (==5.15.4)"
    ],
    "requires_python": "==3.7*",
    "summary": "Control an Illumina HiSeq 2500 System",
    "version": "0.64",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13335097,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab9310aef6af27e3857826397a758fee367c41476a7bfb2b0d3cd1d76e0802e8",
          "md5": "c8d4efe28187ce3f4d58730ffea8f75a",
          "sha256": "c6bf6c1bf95bd40dcbc78101e85087cc2e573b680cd50695863b31e5fe39a137"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8d4efe28187ce3f4d58730ffea8f75a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 40344,
        "upload_time": "2020-03-18T16:08:41",
        "upload_time_iso_8601": "2020-03-18T16:08:41.919780Z",
        "url": "https://files.pythonhosted.org/packages/ab/93/10aef6af27e3857826397a758fee367c41476a7bfb2b0d3cd1d76e0802e8/pyseq2500-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72229d8b1e8ed8de1cb7430ddef030cf6d139bd617135b5fb5131e76667b0619",
          "md5": "e9ef2b7f5e8f28f128f7b4dcba0caf38",
          "sha256": "0868d23283c88197c9ac0e3122c80cc89a86ca5bff609b2c5ccfcd9b172fb0b4"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e9ef2b7f5e8f28f128f7b4dcba0caf38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 35951,
        "upload_time": "2020-03-18T16:08:44",
        "upload_time_iso_8601": "2020-03-18T16:08:44.162254Z",
        "url": "https://files.pythonhosted.org/packages/72/22/9d8b1e8ed8de1cb7430ddef030cf6d139bd617135b5fb5131e76667b0619/pyseq2500-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c33487109e9736291e4c2dd8c0f8bf0513437fb06abb3c06239a0c94b6d5e710",
          "md5": "a3b6e2685ad85090132cb6f0e60ae333",
          "sha256": "ec2a7342bbbacdd23f02043e4851ccab3f7216b6010fe4b29ccee203cc1ca76d"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3b6e2685ad85090132cb6f0e60ae333",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 53928,
        "upload_time": "2020-03-23T17:06:38",
        "upload_time_iso_8601": "2020-03-23T17:06:38.704158Z",
        "url": "https://files.pythonhosted.org/packages/c3/34/87109e9736291e4c2dd8c0f8bf0513437fb06abb3c06239a0c94b6d5e710/pyseq2500-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99988b7e2cc59538dd661ebaa02879f7546867a589498eb11664f325692f7b9d",
          "md5": "ce0b6b4f5efd5c73641354d78c0bd440",
          "sha256": "18f217d6c3b4ce3a3762b2c7b5c9cc646b576660f2a8568e69a25df8d89223b3"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ce0b6b4f5efd5c73641354d78c0bd440",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 42151,
        "upload_time": "2020-03-23T17:06:41",
        "upload_time_iso_8601": "2020-03-23T17:06:41.034097Z",
        "url": "https://files.pythonhosted.org/packages/99/98/8b7e2cc59538dd661ebaa02879f7546867a589498eb11664f325692f7b9d/pyseq2500-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e080763432ef81c2f77b5b8acf41a1ba27f94815b210c769fed0fe54f4983a44",
          "md5": "c441e5a7270199e17d1de816dee2cd60",
          "sha256": "3cc8be00d81482d44a4e05aa6e6c18f06d3f45529f642a8fa8b07ce459fc43a8"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c441e5a7270199e17d1de816dee2cd60",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 38367770,
        "upload_time": "2020-10-15T19:09:51",
        "upload_time_iso_8601": "2020-10-15T19:09:51.646477Z",
        "url": "https://files.pythonhosted.org/packages/e0/80/763432ef81c2f77b5b8acf41a1ba27f94815b210c769fed0fe54f4983a44/pyseq2500-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49f4e0eaf22d7fa00a189d7c7489696c40505c4872a42430cf4bc07a9d1ceb72",
          "md5": "117c1fbfdb8b703986097d3c5ebc0992",
          "sha256": "4f5ff650e976170c37c417b3bd331d23d6bc93a44a6b39be1d869ccb0fcc63f1"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "117c1fbfdb8b703986097d3c5ebc0992",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 38526087,
        "upload_time": "2020-10-15T19:10:00",
        "upload_time_iso_8601": "2020-10-15T19:10:00.957806Z",
        "url": "https://files.pythonhosted.org/packages/49/f4/e0eaf22d7fa00a189d7c7489696c40505c4872a42430cf4bc07a9d1ceb72/pyseq2500-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51c41542d075dc05ca916279e3e74c3a94b705149ba243d8cfb373739567919e",
          "md5": "b4895815356cbe330230038a5c1b977e",
          "sha256": "88127ff974c321ad5ba7da5b611fb9325c214a3f0dd1e66dffe050744922e5dc"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4895815356cbe330230038a5c1b977e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 38397166,
        "upload_time": "2021-04-21T22:15:26",
        "upload_time_iso_8601": "2021-04-21T22:15:26.526075Z",
        "url": "https://files.pythonhosted.org/packages/51/c4/1542d075dc05ca916279e3e74c3a94b705149ba243d8cfb373739567919e/pyseq2500-0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f663201ac532bc52b1a7feb5d8c9fafe22b2d4e8cc8e04fa821d0d54f99bd48",
          "md5": "d14546148be86f5816d69094100fa97b",
          "sha256": "5d68e869fcf25f8659137f57d35282ddfdcec82cf49906ba6a2f189705dbdd6e"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d14546148be86f5816d69094100fa97b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 38551272,
        "upload_time": "2021-04-21T22:15:42",
        "upload_time_iso_8601": "2021-04-21T22:15:42.007727Z",
        "url": "https://files.pythonhosted.org/packages/8f/66/3201ac532bc52b1a7feb5d8c9fafe22b2d4e8cc8e04fa821d0d54f99bd48/pyseq2500-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.61": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da0d0c49873b7dbb66b3290ae6ce4f25fad31c150067a8422adf3a1309c060e1",
          "md5": "416c89f31d8a79bd1b6bc36c3f47113f",
          "sha256": "2ea088a2b067979dc590268228269157f7cc7882c411c0343cb00985a0172701"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.61-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "416c89f31d8a79bd1b6bc36c3f47113f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 38403050,
        "upload_time": "2021-05-13T19:20:16",
        "upload_time_iso_8601": "2021-05-13T19:20:16.584061Z",
        "url": "https://files.pythonhosted.org/packages/da/0d/0c49873b7dbb66b3290ae6ce4f25fad31c150067a8422adf3a1309c060e1/pyseq2500-0.61-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cb1e25b9349693bcb6b876689d8b0aa53d9820d58eb1ad13cb73151a19ca949",
          "md5": "2e58d6461fdc1713d2ce2ba79b31e3a2",
          "sha256": "2d392d3c70e47678fdad8fdabba812fb1bb7e772d6dc3d05e8a8508fb3eb9507"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.61.tar.gz",
        "has_sig": false,
        "md5_digest": "2e58d6461fdc1713d2ce2ba79b31e3a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 38554121,
        "upload_time": "2021-05-13T19:20:31",
        "upload_time_iso_8601": "2021-05-13T19:20:31.256382Z",
        "url": "https://files.pythonhosted.org/packages/8c/b1/e25b9349693bcb6b876689d8b0aa53d9820d58eb1ad13cb73151a19ca949/pyseq2500-0.61.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.62": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfe743acda5008def96abf8cffb5812c6467363f4566f89cc819f0d66dbea8a1",
          "md5": "19b8a22cf3f6f65e613961d1676e5235",
          "sha256": "f72b92868157bd6e180a66f7c887e0bcfa1b53f78449c341199403c0e3db578d"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.62-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19b8a22cf3f6f65e613961d1676e5235",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.7",
        "size": 38405031,
        "upload_time": "2021-11-29T19:38:34",
        "upload_time_iso_8601": "2021-11-29T19:38:34.659461Z",
        "url": "https://files.pythonhosted.org/packages/bf/e7/43acda5008def96abf8cffb5812c6467363f4566f89cc819f0d66dbea8a1/pyseq2500-0.62-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5afd4e800155e0155c347fa7b6b84fd60bea495c6fe585e71899f8b275b706b9",
          "md5": "cf8dd872a5a8fbd9837e25ae006ce585",
          "sha256": "419255cd1c43ede9aa16e90f1105068ec6642eb684896e0c8130ffa777d7c22b"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.62.tar.gz",
        "has_sig": false,
        "md5_digest": "cf8dd872a5a8fbd9837e25ae006ce585",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.7",
        "size": 38555330,
        "upload_time": "2021-11-29T19:38:55",
        "upload_time_iso_8601": "2021-11-29T19:38:55.880857Z",
        "url": "https://files.pythonhosted.org/packages/5a/fd/4e800155e0155c347fa7b6b84fd60bea495c6fe585e71899f8b275b706b9/pyseq2500-0.62.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.63": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "721f692b17c6469b46dd47cb0007573bae0f7b5a650d9c01927aecf4d576107a",
          "md5": "c63eca78d7dae7dfae31fc6e7f62ce83",
          "sha256": "b51a884c4023473ae46b4f2f58708dd38bfd3c29ffb26f6a8c6fa6ab381d099f"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.63-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c63eca78d7dae7dfae31fc6e7f62ce83",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.7",
        "size": 38405058,
        "upload_time": "2021-12-01T14:16:53",
        "upload_time_iso_8601": "2021-12-01T14:16:53.507867Z",
        "url": "https://files.pythonhosted.org/packages/72/1f/692b17c6469b46dd47cb0007573bae0f7b5a650d9c01927aecf4d576107a/pyseq2500-0.63-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e42fa7cc00b0735686332cd98432a0ea6d8a0be440b983a6ad39cec2f235564d",
          "md5": "1c9520e45f5cbb441590549589e7a86d",
          "sha256": "8f9868872b3dce5a910ede122cedc84698a02c1094a07fdcae6501ac8ada1092"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.63.tar.gz",
        "has_sig": false,
        "md5_digest": "1c9520e45f5cbb441590549589e7a86d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.7",
        "size": 38555353,
        "upload_time": "2021-12-01T14:17:29",
        "upload_time_iso_8601": "2021-12-01T14:17:29.043925Z",
        "url": "https://files.pythonhosted.org/packages/e4/2f/a7cc00b0735686332cd98432a0ea6d8a0be440b983a6ad39cec2f235564d/pyseq2500-0.63.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.64": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67071a41eaea2093ccbaeebf0b8459b82c46a7a37e33380a508bd668424c8d07",
          "md5": "e15533d24e2b110dd15cc0d2cf885bad",
          "sha256": "33480c70b3afe3d935340cf86ef5209b17a10eb9be8ca9a4cad1aced4f1af6f8"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.64-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e15533d24e2b110dd15cc0d2cf885bad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "==3.7*",
        "size": 38416035,
        "upload_time": "2022-03-29T15:40:04",
        "upload_time_iso_8601": "2022-03-29T15:40:04.245097Z",
        "url": "https://files.pythonhosted.org/packages/67/07/1a41eaea2093ccbaeebf0b8459b82c46a7a37e33380a508bd668424c8d07/pyseq2500-0.64-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e747e3442613b0179e226d0e14de934a0a4dd33cd6f7ce0c866051e97ba1b2d",
          "md5": "f03ed64c1511047d1ba06b98f93b156e",
          "sha256": "73f9bbfa340aeb595bf5c670c99b3f3385bdf9390cc15872dcef0b5cdbf6102a"
        },
        "downloads": -1,
        "filename": "pyseq2500-0.64.tar.gz",
        "has_sig": false,
        "md5_digest": "f03ed64c1511047d1ba06b98f93b156e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.7*",
        "size": 38566941,
        "upload_time": "2022-03-29T15:40:09",
        "upload_time_iso_8601": "2022-03-29T15:40:09.313154Z",
        "url": "https://files.pythonhosted.org/packages/8e/74/7e3442613b0179e226d0e14de934a0a4dd33cd6f7ce0c866051e97ba1b2d/pyseq2500-0.64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67071a41eaea2093ccbaeebf0b8459b82c46a7a37e33380a508bd668424c8d07",
        "md5": "e15533d24e2b110dd15cc0d2cf885bad",
        "sha256": "33480c70b3afe3d935340cf86ef5209b17a10eb9be8ca9a4cad1aced4f1af6f8"
      },
      "downloads": -1,
      "filename": "pyseq2500-0.64-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e15533d24e2b110dd15cc0d2cf885bad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "==3.7*",
      "size": 38416035,
      "upload_time": "2022-03-29T15:40:04",
      "upload_time_iso_8601": "2022-03-29T15:40:04.245097Z",
      "url": "https://files.pythonhosted.org/packages/67/07/1a41eaea2093ccbaeebf0b8459b82c46a7a37e33380a508bd668424c8d07/pyseq2500-0.64-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e747e3442613b0179e226d0e14de934a0a4dd33cd6f7ce0c866051e97ba1b2d",
        "md5": "f03ed64c1511047d1ba06b98f93b156e",
        "sha256": "73f9bbfa340aeb595bf5c670c99b3f3385bdf9390cc15872dcef0b5cdbf6102a"
      },
      "downloads": -1,
      "filename": "pyseq2500-0.64.tar.gz",
      "has_sig": false,
      "md5_digest": "f03ed64c1511047d1ba06b98f93b156e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "==3.7*",
      "size": 38566941,
      "upload_time": "2022-03-29T15:40:09",
      "upload_time_iso_8601": "2022-03-29T15:40:09.313154Z",
      "url": "https://files.pythonhosted.org/packages/8e/74/7e3442613b0179e226d0e14de934a0a4dd33cd6f7ce0c866051e97ba1b2d/pyseq2500-0.64.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}