{
  "info": {
    "author": "Elior Erez",
    "author_email": "elior123@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Testing"
    ],
    "description": "\n# RabbitMQ Decorator\n* Work in progress\n\nEasily send and receive messages to and from RabbitMQ message broker.\n\n\n## Installation\n\n```bash\npip install rabbitmq-decorator\n```\n\n\n##  Usage \n\n### Optional:\n```shell\nexport RABBITMQ_HOST=localhost\nexport RABBITMQ_PORT=5672\nexport RABBITMQ_USERNAME=username\nexport RABBITMQ_PASSWORD=password\n```\n\n### Example:\n\n```python\nimport asyncio\nfrom typing import Dict, Any\n\nfrom rabbitmq_decorator import RabbitMQHandler, RabbitMQConsumer, RabbitMQProducer, RabbitMQMessage, Exchange\n\nevent_loop = asyncio.get_event_loop()\n\n# If environment variables was set\nrabbit_handler = RabbitMQHandler(event_loop=event_loop)\n\n# Or if environment variables wasn't set \nrabbit_handler = RabbitMQHandler(\n    event_loop=event_loop,\n    rabbitmq_host=\"localhost\",\n    rabbitmq_port=5672,\n    rabbitmq_username=\"username\",\n    rabbitmq_password=\"password\"\n)\n\n\n@rabbit_handler\nclass SomeClass:\n    EXCHANGE = Exchange(\"test_exchange\", durable=True)\n    _producer: RabbitMQProducer = rabbit_handler.get_new_producer(EXCHANGE)\n\n    def some_unrelated_function(self):\n        pass\n\n    @RabbitMQConsumer(EXCHANGE)\n    async def consumer_1(self, body: Dict[str, Any]):\n        print(\"I'm getting all the messages on test_exchange\")\n        self._producer.publish(RabbitMQMessage(routing_key=\"response.consumer1\", body={\"status\": \"Success\"}))\n\n    @RabbitMQConsumer(EXCHANGE, route=\"*.*.*\")\n    async def consumer_2(self, body: Dict[str, Any]):\n        print(\"I'm getting only the messages on test_exchange with *.*.* as routing-key \")\n        response_exchange = Exchange(\"response_exchanges\", durable=True)\n        self._producer.publish(\n            exchange=response_exchange,\n            message=RabbitMQMessage(routing_key=\"response.consumer2\", body={\"status\": \"Success\"})\n        )\n\n\n# ================ main ================\n\nasync def main():\n    \"\"\"do something\"\"\"\n\n\nif __name__ == '__main__':\n    some_class = SomeClass()\n    rabbit_handler.start(some_class)\n    event_loop.run_until_complete(main())\n    rabbit_handler.stop_consume(some_class)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eliorerz/rabbitmq-decorator",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rabbitmq-decorator",
    "package_url": "https://pypi.org/project/rabbitmq-decorator/",
    "platform": null,
    "project_url": "https://pypi.org/project/rabbitmq-decorator/",
    "project_urls": {
      "Homepage": "https://github.com/eliorerz/rabbitmq-decorator"
    },
    "release_url": "https://pypi.org/project/rabbitmq-decorator/0.0.1/",
    "requires_dist": [
      "pika (~=1.3.0)",
      "setuptools (~=65.0.0)"
    ],
    "requires_python": ">=3.7.0",
    "summary": "Easily send and receive messages to and from RabbitMQ message broker",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14838816,
  "releases": {
    "0.0.0.post3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5490980e86049f3fa02b702f86acadcf5c42acf6fb1aa0e58f257b4f27d1818d",
          "md5": "86a77f67fb71c3b8a65703236b991172",
          "sha256": "3e71369992e5301991a0c86b08fef15a0e8a35935af2f4751a53433e4dab01d6"
        },
        "downloads": -1,
        "filename": "rabbitmq_decorator-0.0.0.post3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86a77f67fb71c3b8a65703236b991172",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 14904,
        "upload_time": "2022-08-22T17:42:22",
        "upload_time_iso_8601": "2022-08-22T17:42:22.383164Z",
        "url": "https://files.pythonhosted.org/packages/54/90/980e86049f3fa02b702f86acadcf5c42acf6fb1aa0e58f257b4f27d1818d/rabbitmq_decorator-0.0.0.post3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22d88d1871e573d93e30f066fbad9ee9f7310c797affec2aa4cee914f8581c8b",
          "md5": "2f1b70a85bbcac1337491c3dbdcc2953",
          "sha256": "633bb5d60be15af929aa9b108874253bc10638156fbdca507b6a6b12525a5c47"
        },
        "downloads": -1,
        "filename": "rabbitmq-decorator-0.0.0.post3.tar.gz",
        "has_sig": false,
        "md5_digest": "2f1b70a85bbcac1337491c3dbdcc2953",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 11750,
        "upload_time": "2022-08-22T17:42:24",
        "upload_time_iso_8601": "2022-08-22T17:42:24.157530Z",
        "url": "https://files.pythonhosted.org/packages/22/d8/8d1871e573d93e30f066fbad9ee9f7310c797affec2aa4cee914f8581c8b/rabbitmq-decorator-0.0.0.post3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c18ed28107e05894d8a1ae125c2f0468a9f7119002417aa5fe3501b995bc957",
          "md5": "ce397d56beab39360975adcba2b52a81",
          "sha256": "2b23a9ea03d2cd650dad5463a8d52667fc9a960694e5e23ea03d750e79f23010"
        },
        "downloads": -1,
        "filename": "rabbitmq_decorator-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce397d56beab39360975adcba2b52a81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 13954,
        "upload_time": "2022-08-22T17:51:32",
        "upload_time_iso_8601": "2022-08-22T17:51:32.416123Z",
        "url": "https://files.pythonhosted.org/packages/5c/18/ed28107e05894d8a1ae125c2f0468a9f7119002417aa5fe3501b995bc957/rabbitmq_decorator-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f09871e0d5b1c8eb792b2a70b6c70dae3eb3670dd0f3e7293dd02f472a6479f",
          "md5": "fe82a28907a0a99b429e847e847f1a9b",
          "sha256": "ac1acfc1484e27366b3d79c31b674caaefda66e209eb4d26c43b10795eb7fda3"
        },
        "downloads": -1,
        "filename": "rabbitmq-decorator-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fe82a28907a0a99b429e847e847f1a9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 11391,
        "upload_time": "2022-08-22T17:51:34",
        "upload_time_iso_8601": "2022-08-22T17:51:34.262729Z",
        "url": "https://files.pythonhosted.org/packages/3f/09/871e0d5b1c8eb792b2a70b6c70dae3eb3670dd0f3e7293dd02f472a6479f/rabbitmq-decorator-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c18ed28107e05894d8a1ae125c2f0468a9f7119002417aa5fe3501b995bc957",
        "md5": "ce397d56beab39360975adcba2b52a81",
        "sha256": "2b23a9ea03d2cd650dad5463a8d52667fc9a960694e5e23ea03d750e79f23010"
      },
      "downloads": -1,
      "filename": "rabbitmq_decorator-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ce397d56beab39360975adcba2b52a81",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 13954,
      "upload_time": "2022-08-22T17:51:32",
      "upload_time_iso_8601": "2022-08-22T17:51:32.416123Z",
      "url": "https://files.pythonhosted.org/packages/5c/18/ed28107e05894d8a1ae125c2f0468a9f7119002417aa5fe3501b995bc957/rabbitmq_decorator-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f09871e0d5b1c8eb792b2a70b6c70dae3eb3670dd0f3e7293dd02f472a6479f",
        "md5": "fe82a28907a0a99b429e847e847f1a9b",
        "sha256": "ac1acfc1484e27366b3d79c31b674caaefda66e209eb4d26c43b10795eb7fda3"
      },
      "downloads": -1,
      "filename": "rabbitmq-decorator-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fe82a28907a0a99b429e847e847f1a9b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.0",
      "size": 11391,
      "upload_time": "2022-08-22T17:51:34",
      "upload_time_iso_8601": "2022-08-22T17:51:34.262729Z",
      "url": "https://files.pythonhosted.org/packages/3f/09/871e0d5b1c8eb792b2a70b6c70dae3eb3670dd0f3e7293dd02f472a6479f/rabbitmq-decorator-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}