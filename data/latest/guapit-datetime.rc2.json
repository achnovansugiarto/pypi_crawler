{
  "info": {
    "author": "guapit",
    "author_email": "guapit <guapit@qq.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Guapit Datetime(日期时间简化插件)\r\n\r\n<p align=\"center\">\r\n<a href=\"#\"><img src=\"https://img.shields.io/badge/Module-guapit--datetime-critical.svg\"/></a>\r\n<a href=\"#\"><img src=\"https://img.shields.io/badge/Language-Python-blue\"/></a>\r\n    <a href=\"#\"><img src=\"https://img.shields.io/badge/Version-0.1.0-f1c232\"/></a>\r\n<img src=\"https://img.shields.io/badge/Author-guapit-ff69b4\"/>\r\n<a href=\"https://www.github.com/guapit\"><img src=\"https://img.shields.io/badge/Github-guapit-success\"/></a>\r\n<a href=\"https://www.gitee.com/guapit\"><img src=\"https://img.shields.io/badge/Gitee-guapit-yellowgreen\"/></a>\r\n<a href=\"#\"><img src=\"https://img.shields.io/badge/E--mail-guapit%40qq.com-yellowgreen\"/></a>\r\n</p><br>\r\n\r\n\r\n\r\n   This is a standard date-time library based on Python: `datetime` and `time` module, Secondary development of the gtime time function enhancement and simplification plug-in, greatly simplifies the date time format conversion, no longer for a variety of date time format conversion trouble, come to use it, if you encounter a 'Bug' in the use, welcome to `https://github.com/guapit/guapit-datetime` message\r\n\r\n这是一个基于Python标准日期时间库: `datetime` `time`模块, 二次开发的gtime时间功能增强简化插件,极大的简化了日期时间格式的转化,不用再为各种日期时间格式的转化的烦恼,快来使用吧,如果你在使用中遇到`Bug`,欢迎到 `githb.com/guapit`留言\r\n\r\nhttps://github.com/guapit/guapit-datetime\r\n\r\nRequired plugins 必要的插件\r\n\r\n```pthon\r\npip install -U pydantic\r\npip install -U pytz\r\n```\r\n\r\n## pip安装\r\n\r\n```bash\r\npip install guapit-datetime\r\n```\r\n\r\n\r\n\r\n## 常用功能\r\n\r\nFunction 1: According to the custom time zone conversion time, please refer to the documentation at github.com/guapit/guapit-datetime\r\n\r\nFeature 2: According to the datetime format can be arbitrary conversion type\r\n\r\nFunction 3: You can import any string, meta ancestor, dictionary, list date time format\r\n\r\nFunction 4: Greatly simplifies the method of time calculation\r\n\r\n功能1: 根据自定义时区转换时间, 查找时区表,请参考:`github.com/guapit/guapit-datetime`里面的文档\r\n\r\n功能2: 根据日期时间格式可以任意转换类型\r\n\r\n功能3: 可以任意导入字符串, 元祖, 字典,列表日期时间格式\r\n\r\n功能4: 极大的简化了时间相互运算的方法\r\n\r\n```python\r\n# 导入模块\r\nfrom guapit-datetime import gtime\r\n\r\n# Gets the current computer standard date and time\r\n# 获取当前计算机标准日期时间\r\ndt = gtime.now(\"utc\")\r\nprint(dt)\r\n# <class gtime, 时间格式: 2023-02-12 05:39:19.090008 ,如果需要转换成字符串使用tostr()方法 >\r\n\r\n\r\n# Gets the date and time for the specified time zone\r\n# 获取指定时区的日期时间\r\n# 如果你是中国用户,你可以输入 `cn`,`china`,`chinese`,`beijing`, `shanghai`,`Asia/Shanghai`\r\ndt = gtime.now('cn')\r\nprint(dt)\r\n# <class gtime, 时间格式: 2023-02-12 13:39:19.241579 ,如果需要转换成字符串使用tostr()方法 >\r\n\r\n\r\n# # If you want structured data, it's also very simple\r\n# 如果你想得到结构化的数据,也非常简单\r\ndt = gtime.now('beijing')\r\nprint(dt.year)   # Get year 获取年份\r\nprint(dt.month)  # Get month 获取月份\r\nprint(dt.day)    # Get day 获取日份\r\nprint(dt.hour)   # Get hour 获取小时\r\nprint(dt.minute) # Get minute 获取分钟\r\nprint(dt.sec)    # Get second 获取秒数\r\nprint(dt.msec)   # Get microsecond 获取微秒\r\nprint(dt.week)   # Get week: Sunday: 0 -> Saturday: 6 获取星期: 星期日: 0 -> 星期六: 6\r\nprint(dt.iweek)  # Get week: Monday: 1 -> Sunday: 7 获取星期: 星期一: 1 -> 星期日: 7\r\nprint(dt.days)   # Gets the number of days since January 1 of the current year 获取从当前年份 1月1日开始到现在的天数\r\nprint(dt.tzone)  # Gets the name of the time zone 获取时区的名称\r\n\r\n\r\n# Import data of any data type and convert to time\r\n# 导入任意数据类型的数据转换成时间\r\n# 1. 自定义日期时间\r\ndt = gtime(2023,2,12,12,28,58)\r\nprint(dt)\r\n# <class gtime, 时间格式: 2023-02-12 12:28:58 ,如果需要转换成字符串使用tostr()方法 >\r\n\r\ndt = gtime.fromstr(\"2023-2-15 10:30:58.666666\",\"autom\")\r\nprint(dt)\r\n# <class gtime, 时间格式: 2023-02-15 10:30:58.666666 ,如果需要转换成字符串使用tostr()方法 >\r\n\r\ndt = gtime.fromstr(\"2023-2-16 10:30:58\",\"auto\")\r\nprint(dt)\r\n# <class gtime, 时间格式: 2023-02-16 10:30:58 ,如果需要转换成字符串使用tostr()方法 >\r\n\r\n# 2. 导入字典转换时间\r\nDateTimeDict = {\r\n    'year': 2023,\r\n    \"month\": 2,\r\n    \"day\": 16,\r\n    \"hour\": 12,\r\n    \"minute\": 23,\r\n    \"second\": 58,\r\n    \"microsecond\": 0,\r\n}\r\n\r\ndt = gtime.fromdict(DateTimeDict)\r\nprint(dt)\r\n# <class gtime, 时间格式: 2023-02-16 12:23:58 ,如果需要转换成字符串使用tostr()方法 >\r\n\r\n# 3. 导入元祖转换时间\r\ndatetime_tuple = (2023,2,17,8,8,8,6)\r\ndt = gtime.fromtuple(datetime_tuple)\r\nprint(dt)\r\n# <class gtime, 时间格式: 2023-02-17 08:08:08.000006 ,如果需要转换成字符串使用tostr()方法 >\r\n\r\n# 4. 导入列表转换成时间\r\ndatetime_list = [2023,2,18,8,28,58,666666]\r\ndt = gtime.fromlist(datetime_list)\r\nprint(dt)\r\n# <class gtime, 时间格式: 2023-02-18 08:28:58.666666 ,如果需要转换成字符串使用tostr()方法 >\r\n\r\n# 5. 导入秒数转换成时间\r\ndt = gtime.now('cn').tosec(True)\r\nprint(dt) # 1676182254.425069\r\ndt = gtime.fromsec(dt)\r\nprint(dt)\r\n# <class gtime, 时间格式: 2023-02-12 14:10:54.425069 ,如果需要转换成字符串使用tostr()方法 >\r\n\r\n# 将时间格式化输出任意类型\r\n\"\"\"\r\n格式化转换时间类型\r\nauto:  \"%Y-%m-%d %H:%M:%S\"       # No Microseconds 标准模式无微秒\r\nautom: \"%Y-%m-%d %H:%M:%S.%f\"    # Are Microseconds 标准模式有微秒\r\nautod: \"%Y-%m-%d\"    # Standard mode only has dates 标准模式只有日期\r\nautot: \"%H:%M:%S\"    # Standard mode only has dates 标准模式只有时间\r\nautotm: \"%H:%M:%S.%f\"    # Standard mode comes with a timestamp time 标准模式带有时间戳时间\r\nslash: \"%Y/%m/%d %H:%M:%S\"       # Time with slash and no microseconds 带有斜杠的时间无微秒\r\nslashm: \"%Y/%m/%d %H:%M:%S.%f\"   # Time with slash and microseconds 带有斜杠的时间有微秒\r\nlslash: \"%H:%M:%S %Y/%m/%d\"      # Time with right slash and microseconds 左边时间右边日期带有斜杠的时间无微秒\r\nlslashm: \"%H:%M:%S.%f %Y/%m/%d\"  # Time with right slash and microseconds 左边时间右边日期带有斜杠的时间有微秒\r\ndot: \"%Y.%m.%d %H:%M:%S\"         # Time with dot and microseconds 带有圆点的日期时间无微秒\r\ndotm: \"%Y.%m.%d %H:%M:%S.%f\"     # Time with dot and microseconds 带有圆点的日期时间有微秒\r\ncn: \"%Y年%m月%d日 %H时%M分%S秒\"      # chinese format microseconds 带有中文标签的日期时间无微秒\r\ncnm: \"%Y年%m月%d日 %H时%M分%S秒.%f微秒\"  # # chinese format microseconds 带有中文标签的日期时间有微秒\r\ncnd: \"%Y年%m月%d日\"  # 只有中文日期\r\ncnt: \"%H时%M分%S秒\"  # 只有中文时间\r\nIf the above format conversion doesn't have what you need, you can customize it, for example:  \"%Y-%m-%d %H:%M:%S\"\r\n如果以上格式转换没有你需要的,可以重新自定义,比如\"%Y-%m-%d %H:%M:%S\"\r\n    \"\"\"\r\n# 1.转换成 字符串\r\ndt = gtime.now('cn')\r\nprint(dt.tostr('auto')) # 默认: 2023-02-12 14:13:06\r\nprint(dt.tostr('autom')) # 2023-02-12 14:13:06.888888\r\nprint(dt.tostr('autod')) # 2023-02-12\r\nprint(dt.tostr('autotm')) # 14:13:06.666666\r\nprint(dt.tostr('slash')) # 2023/02/12 14:13:06\r\nprint(dt.tostr('slashm')) # 2023/02/12 14:13:06.666666\r\nprint(dt.tostr('lslash')) #  14:13:06 2023/02/12\r\nprint(dt.tostr('lslashm')) #  14:13:06.666666 2023/02/12\r\nprint(dt.tostr('dot')) #  2023.02.12 14:13:06\r\nprint(dt.tostr('dotm')) #  2023.02.12 14:13:06.666666\r\nprint(dt.tostr('cn')) #  2023年02月12日 14时13分06秒\r\nprint(dt.tostr('cnm')) #  2023年02月12日 14时13分06秒666666微秒\r\nprint(dt.tostr('cnd')) #  2023年02月12日\r\nprint(dt.tostr('cnt')) #  14时13分06秒\r\n\r\n# 如果以上的格式都不需要,你可以自定义格式\r\nprint(dt.tostr('%Y-%m-%d %H:%M:%S %f')) #  2023-02-12 14:28:03 383898\r\n\r\n\r\n# 2.转换成秒数\r\ndt = gtime.now('cn')\r\nprint(dt.tosec(False))  # False 默认不含有时间戳\r\n# 1676182386\r\nprint(dt.tosec(True))  # True 含有时间戳\r\n# 1676182386.403169\r\n\r\n# 3.转换成字典\r\ndt = gtime.now('cn')\r\nprint(dt.todict())\r\n# {'year': 2023, 'month': 2, 'day': 12, 'hour': 14, 'minute': 29, 'sec': 12, 'msec': 282045, 'week': 0, 'iweek': 7, 'tzone': 'cn', 'isdst': -1}\r\n\r\n# 3.转换成元祖\r\ndt = gtime.now('cn')\r\nprint(dt.totuple())\r\n# (2023, 2, 12, 14, 29, 12, 282045, 0, 7, 43, 'cn', -1)\r\n\r\n# 3.转换成列表\r\ndt = gtime.now('cn')\r\nprint(dt.tolist())\r\n# [2023, 2, 12, 14, 29, 12, 282045, 0, 7, 43, 'cn', -1]\r\n\r\n# 日期时间算术计算\r\n# 自增加法\r\ndt = gtime.now('cn')\r\nprint(dt)  # 2023-02-12 14:31:37.132624\r\ndt = dt + 60  # 表示当前时间加上60秒\r\nprint(dt)# 2023-02-12 14:32:37.132624\r\n\r\n# 自增减法\r\ndt = gtime.now('cn')\r\nprint(dt)  # 2023-02-12 14:31:37.132624\r\ndt = dt - 120 # 表示当前时间减去120秒\r\nprint(dt) # 2023-02-12 14:29:37.132624\r\n\r\n# 加法\r\ndt = gtime.now('cn') + 86400\r\n\r\n# 减法 \r\ndt = gtime.now('cn') - 3600\r\n\r\n# 日期时间逻辑运算\r\n# ==\r\nprint(gtime(2023, 2, 11, 12, 30, 50) == gtime(2023, 2, 11, 12, 30, 50)) # True\r\n\r\n# <\r\nprint(gtime(2023, 2, 11, 12, 30, 50) < gtime(2023, 2, 11, 12, 30, 55)) # True\r\n\r\n# >\r\nprint(gtime(2023, 2, 11, 12, 30, 50) > gtime(2023, 2, 11, 12, 30, 55)) # False\r\n\r\n# <=\r\nprint(gtime(2023, 2, 11, 12, 30, 50) <= gtime(2023, 2, 11, 12, 30, 50)) # True\r\n\r\n# >=\r\nprint(gtime(2023, 2, 11, 12, 30, 50) >= gtime(2023, 2, 11, 12, 30, 30)) # True\r\n\r\n# 转换成python标准库: datetime, date, time类\r\n# gtime -> datetime\r\ndt = gtime.now(\"cn\")\r\ndt.datetime\r\n\r\n# gtime -> date\r\ndt = gtime.now(\"cn\")\r\ndt.data\r\n\r\n# gtime -> time\r\ndt = gtime.now(\"cn\")\r\ndt.time\r\n\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/guapit/flask-auto-router",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "guapit-datetime",
    "package_url": "https://pypi.org/project/guapit-datetime/",
    "platform": null,
    "project_url": "https://pypi.org/project/guapit-datetime/",
    "project_urls": {
      "Bug Tracker": "https://github.com/guapit/guapit-datetime/issues",
      "Homepage": "https://github.com/guapit/guapit-datetime"
    },
    "release_url": "https://pypi.org/project/guapit-datetime/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Python Datetime simplified operation plugin, 日期时间简化插件",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16819316,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "097b4d97401f666069029d564ba6274f02326b104ba7348c02f2209badf715cb",
          "md5": "61349da7e16d9836e068d11baa3ef375",
          "sha256": "3f9250226b1ad97b8d4750b3158505ca412d29345e8042d9426bb4ce3f0e28d7"
        },
        "downloads": -1,
        "filename": "guapit_datetime-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "61349da7e16d9836e068d11baa3ef375",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5339,
        "upload_time": "2023-02-12T07:06:20",
        "upload_time_iso_8601": "2023-02-12T07:06:20.323741Z",
        "url": "https://files.pythonhosted.org/packages/09/7b/4d97401f666069029d564ba6274f02326b104ba7348c02f2209badf715cb/guapit_datetime-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc9555cd7e32e39dc1b9d468c199058c0a458982d077867d65c98319c4b5deb4",
          "md5": "00f89287f01c93622c8b1353ee0a8c5f",
          "sha256": "af0a2e1b804d03e0be8adcead0b38b7be421229eb16acfeb37616673efb9e601"
        },
        "downloads": -1,
        "filename": "guapit-datetime-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "00f89287f01c93622c8b1353ee0a8c5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5834,
        "upload_time": "2023-02-12T07:06:22",
        "upload_time_iso_8601": "2023-02-12T07:06:22.663015Z",
        "url": "https://files.pythonhosted.org/packages/dc/95/55cd7e32e39dc1b9d468c199058c0a458982d077867d65c98319c4b5deb4/guapit-datetime-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a0d0689815b1d28bbb20ea4fb903f76cb34275c53dc50d8ef67d200fbd34f40",
          "md5": "5094584098a0a0a295b8cf4538df2be9",
          "sha256": "a420a10af73fb9eb77d78e7c67872b8f26625618787c9f03afc37e2f3694e14d"
        },
        "downloads": -1,
        "filename": "guapit_datetime-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5094584098a0a0a295b8cf4538df2be9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5366,
        "upload_time": "2023-02-12T09:12:57",
        "upload_time_iso_8601": "2023-02-12T09:12:57.121049Z",
        "url": "https://files.pythonhosted.org/packages/5a/0d/0689815b1d28bbb20ea4fb903f76cb34275c53dc50d8ef67d200fbd34f40/guapit_datetime-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f5d05c45ecc8db9d55c5fbca2a61d6f7831806b78db8696c556b22c0c691c45",
          "md5": "c816b5ef60177b4856bfd8fc5b1eb6d8",
          "sha256": "26e125c9d4f8a79debe0e9637bbdf67952e645bb1482c1b6e9612dae5a4b22ef"
        },
        "downloads": -1,
        "filename": "guapit-datetime-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c816b5ef60177b4856bfd8fc5b1eb6d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5856,
        "upload_time": "2023-02-12T09:12:59",
        "upload_time_iso_8601": "2023-02-12T09:12:59.295567Z",
        "url": "https://files.pythonhosted.org/packages/1f/5d/05c45ecc8db9d55c5fbca2a61d6f7831806b78db8696c556b22c0c691c45/guapit-datetime-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a0d0689815b1d28bbb20ea4fb903f76cb34275c53dc50d8ef67d200fbd34f40",
        "md5": "5094584098a0a0a295b8cf4538df2be9",
        "sha256": "a420a10af73fb9eb77d78e7c67872b8f26625618787c9f03afc37e2f3694e14d"
      },
      "downloads": -1,
      "filename": "guapit_datetime-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5094584098a0a0a295b8cf4538df2be9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5366,
      "upload_time": "2023-02-12T09:12:57",
      "upload_time_iso_8601": "2023-02-12T09:12:57.121049Z",
      "url": "https://files.pythonhosted.org/packages/5a/0d/0689815b1d28bbb20ea4fb903f76cb34275c53dc50d8ef67d200fbd34f40/guapit_datetime-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f5d05c45ecc8db9d55c5fbca2a61d6f7831806b78db8696c556b22c0c691c45",
        "md5": "c816b5ef60177b4856bfd8fc5b1eb6d8",
        "sha256": "26e125c9d4f8a79debe0e9637bbdf67952e645bb1482c1b6e9612dae5a4b22ef"
      },
      "downloads": -1,
      "filename": "guapit-datetime-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c816b5ef60177b4856bfd8fc5b1eb6d8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5856,
      "upload_time": "2023-02-12T09:12:59",
      "upload_time_iso_8601": "2023-02-12T09:12:59.295567Z",
      "url": "https://files.pythonhosted.org/packages/1f/5d/05c45ecc8db9d55c5fbca2a61d6f7831806b78db8696c556b22c0c691c45/guapit-datetime-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}