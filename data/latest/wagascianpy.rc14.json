{
  "info": {
    "author": "Pintaudi Giorgio",
    "author_email": "giorgio-pintaudi-kx@ynu.jp",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: X11 Applications",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: Unix",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# WAGASCI ANPAN for Python v0.3.5\n\nThis package contains all the Python modules used by the ANPAN\n framework of the WAGASCI/T2K experiment.\n\n## What is ANPAN?\n\nANPAN (Acquisition Networked Program for Accelerated Neutrinos) is a collective\n name to identify all the software used to acquire data and analyze it for\n  the WAGASCI experiment. It is composed of many packages:\n  - [Pyrame](http://llr.in2p3.fr/sites/pyrame/) (C/Python2)\n  - [ANPAN DAQ](https://llrgit.in2p3.fr/online/wagasci) (C/Python2)\n  - [WagasciCalibration](https://git.t2k.org/wagasci_babymind/WagasciCalibration) (C++11)\n  - [WagasciMidas](https://git.t2k.org/wagasci_babymind/WagasciMidas) (C++11/JS)\n  - [WagasciRunControl](https://git.t2k.org/wagasci_babymind/WagasciRunControl) (Python2)\n  - [WagasciAnpy (this package)](https://git.t2k.org/wagasci_babymind/WagasciAnpy) (Python2/3)\n\n## Python compatibility\n\n - **Python2.7 or Python3.4+**\n\n This package is fully compatible with both Python2.7 and Python3.4+. It is\n tested usually with Python 3.8 and sporadically with other Python versions.\n\n However, I strongly suggest you to use Python 3 whenever possible because\n Python 2 has now reached end of life and many packages are starting to drop \n support for it. I am still trying to ensure Python 2 compatibility but I might \n drop it in the future for non DAQ related modules.\n\n## Dependencies\n\nMany functions of this package depend on ROOT\n\n - [ROOT](https://ph-root-2.cern.ch/)\n\nTo use the analysis programs, you need the WagasciCalibration package:\n\n  - [WagasciCalibration](https://git.t2k.org/wagasci_babymind/WagasciCalibration)\n\nTo download and update the WAGASCI run database you may need the BorgBackup\n program:\n\n  - [BorgBackup](https://borgbackup.readthedocs.io/en/stable/installation.html)\n\nThe ``pyrmod`` module depends on Pyrame. This module is used only by the DAQ\nso no need to install Pyrame on a non DAQ machine. \n\n### ROOT\n\nBe sure that the version of ROOT that you installed is compatible with\nyour Python version. The precompiled binaries for ROOT until version 6.22.0\nare usually only compatible with Python 2. From ROOT version 6.22.0 on,\nROOT should be compatible with both Python 2 and Python 3, so my suggestion\nis to just update your ROOT version.\n\n### WAGASCI calibration software (optional)\n\nTo analyze the raw data you need the WAGASCI calibration software.\nFor the installation instructions refer to \n [this page](https://git.t2k.org/wagasci_babymind/WagasciCalibration).\n\n## Installation (Linux)\n\nOpen a terminal and issue\n```shell script\npython3 -m pip install --upgrade --user wagascianpy\n```\n\n## Installation (MacOS)\n\nCurrently the support for MacOS is only partial. The SSH connection is broken\nbecause of some issues internal to the [Python paramiko\nmodule](http://www.paramiko.org/), so the program can be used in local mode\nonly. I tried to fix the issue but the problem is beyond my skills.  Probably in\nthe following months the paramiko developers will come up with a solution. At\nthe time of writing, the current (broken) version of paramiko is 2.7.1. When a\nnew version of paramiko is released, try again to run the software and see what\nhappens.\n\nI have tested the program only in MacOS Mojave and MacOS Catalina. Both showed\nmore or less the same problems. You can try older versions of MacOS and might\nhave better luck.\n\n#### MacOS Mojave/Catalina\n\nBecause MacOS Mojave does not bundle Python3 we need to install it manually. The\neasiest way is by using the package manager brew. The following commands are\ntaken from this [webpage](https://installpython3.com/mac/).\n\nThe first step is to install the Apple's Xcode suite. Most probably you already\nhave it already installed, in that case you can skip this step. In your Terminal\napp, run the following command to install XCode and its command-line tools:\n\n```shell script\n$ xcode-select --install\n```\n\nNext install Homebrew by copy/pasting the following command into Terminal and\nthen type Enter:\n\n```shell script\n$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n$ brew update\n```\n\nTo confirm Homebrew installed correctly, run this command:\n```shell script\n$ brew doctor\nYour system is ready to brew.\n```\n\nNow we can install the latest version of Python 3. Type the following command\ninto Terminal and press Enter:\n\n```shell script\n$ brew install python3\n```\n\nTo confirm which version of Python was installed, run the following command in\nTerminal:\n\n```shell script\n$ /usr/local/bin/python3 --version\nPython 3.7.7\n```\n\nMany functions of the WAGASCI database viewer use borgbackup. We can easily\ninstall it using brew.\n\n```shell script\n$ brew cask install borgbackup\n```\n\nFor other ways of installing borg refer to the\n[borg website](https://borgbackup.readthedocs.io/en/stable/installation.html).\n\nThen we can finally install the wagascianpy package\n\n```shell script\n$ python3 -m pip install --user --upgrade wagascianpy\n```\n\nIf you use MacOS Catalina continue reading the next section.\n\n#### MacOS Catalina - troubleshooting\n\n**MacOS Catalina comes with its own version of Python3. However\n[as stated in the Python website](https://www.python.org/download/mac/tcltk/)\nthe Apple-supplied Tcl/Tk 8.5 has serious bugs that can cause application \ncrashes.\n\nSo follow the same instructions as MacOS Mojave but also install tkinter:\n```shell script\n$ brew install tcl-tk\n```\n\n## Configuration\n\n### Environment parameters\n\nYou can easily configure all the parameters from the GUI itself (or from the\ncommand line if you run the programs from the shell). However, because\ninserting the same values over and over again can be tedius, you can modify the\nconfiguration file called `wagasci.ini`. This file is created in the\n`${HOME}/.wagasci` folder on the first execution of the program and filled with\nthe default values. You can just open and edit it with any text editor. The\noptions names and values are in one to one correlation with the GUI fields\nand CLI arguments.\n\nUpon start, the program tries to load the configuration file from the following\n directories in this order:\n- Environment : `${WAGASCI_CONFIGDIR}`\n- User : `${HOME}/.wagasci`\n- System : `/usr/local/wagasci`\n\nThe configuration file must be called `wagasci.ini`. Both the WAGASCI database\nviewer and the spill history plotter can use the same configuration file.\n\n### Good runs \n\nThe list of good runs and bad runs is hardcoded at the beginning of the \n`wagascianpy/database/wagascidb.py` file. If a run is completely bad, add it \nto the `_BAD_RUNS` list. If a run is bad only for a single detector, add it \nto the `_BAD_RUNS_X` where X is the name of the detector. After modifying \nthe bad run list, to apply it again, please rerun `wagascidb_viewer.py \n--rebuild-wagasci-database --batch-mode`, and then `wagascidb_viewer.py \n--apply-detector-flags --batch-mode`.\n\n### Markers\n\nWhen drawing the history plots, the trouble markers and maintenance day \nmarkers can be drawn along with the data. The start time and stop time of \nthese markers is hardcoded at the beginning of the \n`wagascianpy/plotting/marker.py` file.\n\n## WAGASCI database viewer\n\n![](../WagasciAnpy/docs/images/wagascidb_viewer.gif)\n\nThe following subsections explain the usage of the WAGASCI database viewer GUI\n program.\n\n### Run the program\n\nTo open the GUI program, just type in a terminal:\n\n```shell script\nwagascidb_viewer.py\n````\n\nIf you wish to run the program without a GUI in batch mode, just type in a\n terminal\n\n ```shell script\nwagascidb_viewer.py --batch-mode <other arguments>\n```\n\n### WAGASCI run repository\n\nThe word repository refers to the place where the runs are backed up. It might\nbe a simple repository where the runs are stored without encription (plain file\nand folders), or a borg repository where all the files are encripted. The\nrepository can be either local (same machine) or remote (remote machine\nreachable by SSH). In case of a borg repository it is necessary for borgbackup\nto be installed on both the local machine and the remote machine.\n\n* **Simple repository** : Unencripted repository\n* **Borg repository** : Borg repository\n* **Repository location** : For a remote repository the syntax is\n  `<hostname>:<path of repository>`. The SSH configuration is taken from the\n  user `~/.ssh/config` file by looking for `<hostname>`, so make sure that you\n  can connect to the remote machine by just opening the terminal and `ssh\n  <hostname>`. In case of local repository just insert the repository path. For\n  more info about how to connect to KEKCC by SSH refer to the [WAGASCI expert\n  shifter manual](https://ja.overleaf.com/7887288445tmqmnjknrynm)\n  (Troubleshooting - KEKCC (8.6)).\n\n### WAGASCI run database\n\nLocation of the WAGASCI run database. The database is a file (usually named\n`wagascidb.db`) that contains some info about each run. If the update database\ncheckbox is checked, the software checks if the database is synchronized with\nthe repository (if the database describes the current state of the repository).\n\n* **Database location**: location of the database file. Usually it is the same\n  as the repository. In case you specify a different location, enter the\n  filename too. Leave as it is if in doubt.\n* **Update database**: If left unchecked the database is read as is. If checked,\n  the runs that are present in both the repository and database the database are\n  not updated and only the runs that are present in the repository but not in\n  the database are added. Leave disabled if in doubt.\n* **Rebuild database**: If checked each run in the repository is\n  inserted/overwritten into the database even if already present. Leave disabled\n  if in doubt.\n* **WAGASCI library**: path to the directory containing the WAGASCI\n  calibration software libraries. It is only used to update the database and\n  analyze the raw data. Not needed if you only wish to visualize the database.\n\n### Beam Summary Data repository\n\nThe word repository refers to the place where the Beam Summary Data files are\nstored.  The local repository can be an empty folder or a folder containing\nthe BSD files.  If the remote repository field is left empty the program assumes\nthat the BSD files are already present in the local folder. If the remote\nrepository field is filled, the remote repository and the local repository are\nsynchronized using rsync.\n\n\n* **Local repository** : Location of BSD files in the local machine.\n* **Remote repository** : Location of the BSD files in the remote machine (the\n  syntax is the same as the WAGASCI run repository). If left empty only the\n  local repository is used.\n\n### Beam Summary Data database\n\nLocation of the BSD database. The database is a file (usually named `bsddb.db`)\nthat contains some info about each BSD file. If the update or rebuild database\ncheckbox is checked, the software checks if the database is synchronized with\nthe repository (if the database describes the current state of the repository).\n\n* **Database location**: location of the database file. Usually it is the same\n  as the repository. In case you specify a different location, enter the\n  filename too. Leave as it is if in doubt.\n* **Update database**: If left unchecked the database is read as is. If checked,\n  the runs that are present in both the repository and database the database are\n  not updated and only the runs that are present in the repository but not in\n  the database are added. Leave disabled if in doubt.\n* **Rebuild database**: If checked each run in the repository is\n  inserted/overwritten into the database even if already present. Leave disabled\n  if in doubt.\n\n### Query\n\n#### Getters\n* **Get time interval**: Select an interval and the push the Get interval\n button. In the Run list frame will appear all the runs in that period.\n* **Get run interval**: Select all runs whose number is within the interval.\n* **Get all**: Get all runs regardless of the interval.\n\n#### Conditions:\n* **Include overlapping runs**: If unchecked only the runs that start AND stop\n  inside the time interval are shown. If checked all the runs that start OR stop\n  inside the interval are shown.\n* **Only good runs**: select only the runs marked as good (good_run_flag == 1)\n\n#### Analyzers:\n* **Download**: download the selected runs from the WAGASCI run repository into\n a local directory selected by the user (both borg and simple repositories\n  are supported)\n* **Decoder**: decode the downloaded runs using the wgDecoder program\n* **ADC histogram**: plot the ADC distribution channel by channel\n* **BCID histogram**: plot the BCID distribution for the whole DIF\n* **Spill Number Fixer**: fix the spill number for the decoded runs using the\n wgFixSpillNumber program\n* **Beam Summary Data**: integrate the BSD info into the decoded runs using the\n wgBeamSummaryData program\n* **Temperature**: integrate the temperature info into the decoded runs using\n the wgTemperature program\n* **Data Quality**: insert PEU information in the decoded data TTree using\n the wgDataQuality program\n* **Start analysis**: apply all the selected analyzers above to the downloaded\n runs\n\n#### Topology\n* **Topology**: select which sub-detectors to download (not used for analysis)\n\n### Run list\n\nList of runs that meet the conditions in the query. You can click on the run\nname to show more info about that particular run.\n\n### Run info\n\nShow all the info about one particular run.\n\n### GUI customization\nThe GUI can be partially customized using the\n[PyGubu](https://github.com/alejandroautalan/pygubu) program. PyGubu is\n automatically installed by pip as a dependence of this package.\n\n To customize the GUI, locate the package installation folder and the gui.ui\n  file inside it, open a terminal and\n ```shell script\nmkdir -p $HOME/.wagasci\ncp gui.ui $HOME/.wagasci/\npygubu-designer $HOME/.wagasci/gui.ui\n```\n\nThe program tries to load the GUI file `gui.ui` in the same way as the\n configuration file as explained above.\n\n## WAGASCI spill history plotter\n\nThe ``spill_history.py`` script is provided by this package. It creates various\nhistory plots for the WAGASCI experiment. It is a CLI only script and all its\nfeatures can be controlled by command line arguments. However it also tries to\nread the configuration file ``wagasci.ini`` for required arguments that are not\nspecified in the command line.\n\nFor further information, please consult the help message of the script:\n\n```shell script\nspill_history.py --help\n```\n\n## MIDAS history to SQLite converter\n\nTo convert midas history files into SQLite format, please use the\n ``mhistory_sqlite_converter.py``, script. You need to have MIDAS installed\n  to run the script.\n\n  For further information, please consult the help message of the script:\n\n```shell script\nmhistory_sqlite_converter.py --help\n```\n\n## Calibration scripts\n\nMany calibration scripts are provided by this package. They all take the raw\ndata as input and perform some calibration analysis on it. They depend\nstrongly on the [WAGASCI calibration software](https://git.t2k.org/wagasci_babymind/WagasciCalibration).\n\nThe documentation about how to use them is included in the [WAGASCI expert\n shifter manual](https://ja.overleaf.com/7887288445tmqmnjknrynm).\n\n## Other Python modules\n\nList of all the Python modules provided by this package:\n\n- `wagascianpy.analysis`\n\n  Contains modules for analysing the WAGASCI raw data, decoded data and slow\n   data.\n  - `wagascianpy.analysis.analysis` : Ctypes wrappers around\n   WagasciCalibration libraries.\n  - `wagascianpy.analysis.analyzer` : Takes the Ctypes wrappers and organize\n   them in a abstract factory design patter.\n  - `wagascianpy.analysis.beam_summary_data` : module to integrate the BSD\n   information inside the decoded WAGASCI data. It can be used as a\n    standalone program or as a analyzer of `wagascianpy.analysis.analyzer`.\n  - `wagascianpy.analysis.mhistory2sqlite` : module to convert many mhistory\n   files containing slow devices data into a SQLite database.\n  - `wagascianpy.analysis.spill` : factory design patter to generate\n   various spill objects. A spill object contains information about the spill\n   number. It is useful when fixing the spill number bugs or when\n   integrating the BSD information.\n\n- `wagascianpy.database`\n\n    Modules to manage the WAGASCI run database and the BSD database.\n\n  - `wagascianpy.database.bsddb` : BSD database creation and access.\n  - `wagascianpy.database.db_record` : Virtual database record that is\n   inherited by the WAGASCI run record and BSD record.\n  - `wagascianpy.database.my_tinydb` : Virtual database build upon the\n   `tinydb` external module. It is inherited by the WAGASCI run database and\n    BSD database.\n  - `wagascianpy.database.wagascidb` : WAGASCI run database creation and access.\n\n- `wagascianpy.plotting`\n\n    Modules to generate history plots (plots where the X axis is time).\n\n  - `wagascianpy.plotting.colors` : manage plot colors\n  - `wagascianpy.plotting.detector` : class to store the read TTrees for each\n   subdetector and to iterate over them.\n  - `wagascianpy.plotting.graph` : class to build a generic graph\n  - `wagascianpy.plotting.harvest` : class to harvest the needed data from the\n   TTrees. It returns the X points and Y points. It is implemented using the\n    strategy design pattern.\n  - `wagascianpy.plotting.marker` : class to plot time markers as the\n   maintenance days, WAGASCI runs start and stop time, electronics troubles\n   , etc...\n  - `wagascianpy.plotting.plotter` : class to plot the actual TMultiGraph\n  - `wagascianpy.plotting.topology` : class to specify which subdetectors to\n   plot and which not\n\n- `wagascianpy.program`\n\n    Modules to generate a runnable program using the analyzers of\n    `wagascianpy.analysis.analyzer`. Implemented using the builder design\n     pattern.\n\n  - `wagascianpy.program.director` : director of the builder design pattern.\n  - `wagascianpy.program.program` : final program that is builded.\n  - `wagascianpy.program.program_builder` : builder that builds the program.\n\n- `wagascianpy.pyrmod`\n\n    Interface for the Pyrame modules. Used only for DAQ.\n\n  - `wagascianpy.pyrmod.CCC` : control the CCC board\n  - `wagascianpy.pyrmod.pyrmod` : wrapper around generic Pyrame module\n\n- `wagascianpy.utils`\n\n    Miscellaneous utilities.\n\n  - `wagascianpy.utils.change_bitstream` : module to change the configuration of\n   the SPIROC chip for all the chips in one go.\n  - `wagascianpy.utils.classproperty` : implement Python property for classes\n   and not only for instances\n  - `wagascianpy.utils.configuration` : parse the configuration file and\n   create a global configuration class\n  - `wagascianpy.utils.environment` : module to read the WAGASCI\n   environmental variables from a file or from the shell environment.\n  - `wagascianpy.utils.utils` : all other utilities are gathered here.\n\n- `wagascianpy.viewer`\n\n    Module used by the WAGASCI database viewer GUI program. They are not\n     supposed to be used anywhere else.\n\n   - `wagascianpy.viewer.configuration` : fill the global configuration\n   - `wagascianpy.viewer.downloader` : download runs from remote repository\n   - `wagascianpy.viewer.parse_args` : parse the CLI arguments\n   - `wagascianpy.viewer.show_run_info` : build the 'run info' tab in the GUI\n   - `wagascianpy.viewer.topology` : little class to select which sub\n   -detectors are enabled and which not\n   - `wagascianpy.viewer.utils` - GUI utilities\n\n## Troubleshooting\n\n - If you get an error about SSH trying to set a different locale in the KEKCC\nrepository try the solution explained in this\n[stackoverflow post](https://stackoverflow.com/questions/29609371/how-do-not-pass-locale-through-ssh).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.t2k.org/wagasci_babymind/WagasciAnpy",
    "keywords": "WAGASCI ANPAN for Python",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wagascianpy",
    "package_url": "https://pypi.org/project/wagascianpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/wagascianpy/",
    "project_urls": {
      "Homepage": "https://git.t2k.org/wagasci_babymind/WagasciAnpy"
    },
    "release_url": "https://pypi.org/project/wagascianpy/0.3.5/",
    "requires_dist": [
      "argparse (>=1.1)",
      "bitarray (>=0.8.1)",
      "dependency-injector (>=3.15.6)",
      "inflection (>=0.3.1)",
      "mock (>=1.0.1)",
      "numpy (>=1.7.1)",
      "paramiko (>=2.6.0)",
      "pyfakefs (>=3.7.2)",
      "pygubu (<=0.9.8.6)",
      "pytz (>=2016.10)",
      "recordclass (>=0.13.2)",
      "scp (>=0.7.1)",
      "setuptools (>=44.0.0)",
      "six (<=1.14.0,>=1.7.0)",
      "tinydb (>=3.15.2)",
      "typing (>=3.5.2.2)",
      "undecorated (>=0.3.0)",
      "borgbackup (>=1.1.11) ; extra == 'with_borg'"
    ],
    "requires_python": "",
    "summary": "WAGASCI ANPAN for Python",
    "version": "0.3.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11753706,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b47df430bd5c9312bf52979bf7f06d85f6b78626bea756b5f016787c82bfaf96",
          "md5": "4cf77b23f5b5c973e2e405830f03110b",
          "sha256": "4e45583b08bd9c644c9b124a9233c2ab8285f7fcf1b9b57ba84252d231a1cc44"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4cf77b23f5b5c973e2e405830f03110b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 63803,
        "upload_time": "2020-05-02T09:27:43",
        "upload_time_iso_8601": "2020-05-02T09:27:43.036791Z",
        "url": "https://files.pythonhosted.org/packages/b4/7d/f430bd5c9312bf52979bf7f06d85f6b78626bea756b5f016787c82bfaf96/wagascianpy-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6508d3da83f54d9e384c1bef8dfad7a8f4673787379e7c74d7c9274c7b7d0ae5",
          "md5": "bea807e69a97983cc987016d394fcd82",
          "sha256": "5c1004e31de47e22ab3c2ab5628e4f798aff066c5814d1fe13eec4907530a148"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bea807e69a97983cc987016d394fcd82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 63722,
        "upload_time": "2020-05-02T10:41:07",
        "upload_time_iso_8601": "2020-05-02T10:41:07.730425Z",
        "url": "https://files.pythonhosted.org/packages/65/08/d3da83f54d9e384c1bef8dfad7a8f4673787379e7c74d7c9274c7b7d0ae5/wagascianpy-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6713d6feae496ae4fa4d37205a4c8b2f57f008ee9e19574915e90f7a78dafe77",
          "md5": "dddf02084f088b17bda900f7a0858443",
          "sha256": "8f8f1fae4ec0978c77f6daefca0cd3b062ec4e5ec50dda4c389f0d05b0129b45"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dddf02084f088b17bda900f7a0858443",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 67221,
        "upload_time": "2020-05-09T08:07:31",
        "upload_time_iso_8601": "2020-05-09T08:07:31.142747Z",
        "url": "https://files.pythonhosted.org/packages/67/13/d6feae496ae4fa4d37205a4c8b2f57f008ee9e19574915e90f7a78dafe77/wagascianpy-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c11897361d77279ed752558ecdc3c2336b6dee120ae004f3405f1338fb34ea57",
          "md5": "e1f69397c3835104b662a495390041cd",
          "sha256": "0ad59f550a99b100a58b1c62c17c1d039f01333419596fda76937e0c26fafdea"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1f69397c3835104b662a495390041cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 106539,
        "upload_time": "2020-05-15T12:06:13",
        "upload_time_iso_8601": "2020-05-15T12:06:13.342999Z",
        "url": "https://files.pythonhosted.org/packages/c1/18/97361d77279ed752558ecdc3c2336b6dee120ae004f3405f1338fb34ea57/wagascianpy-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c70c8f7ca641771b93e9baf0927bc29a76286707eae1b421358d7d9854c5e1df",
          "md5": "2f17ba3aace50b49cd2fbb0e32503f36",
          "sha256": "5429f17d30b9f4cebcfaf564e0667bbdbdd98a5180c702798ed8165421bc342c"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f17ba3aace50b49cd2fbb0e32503f36",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 111838,
        "upload_time": "2020-05-21T07:52:37",
        "upload_time_iso_8601": "2020-05-21T07:52:37.260961Z",
        "url": "https://files.pythonhosted.org/packages/c7/0c/8f7ca641771b93e9baf0927bc29a76286707eae1b421358d7d9854c5e1df/wagascianpy-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a4b7a97ef7473f209bdb7867d20711e6c94745dfeb605df1c970391f17d1bbc",
          "md5": "9e3c4afd4f0f3bd6ba490fb045e74c11",
          "sha256": "7809c5f483729830b6bffcd71586e54e73e0d8bea1f4ef22cad158d10076a620"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e3c4afd4f0f3bd6ba490fb045e74c11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 118506,
        "upload_time": "2020-06-01T02:37:07",
        "upload_time_iso_8601": "2020-06-01T02:37:07.713851Z",
        "url": "https://files.pythonhosted.org/packages/3a/4b/7a97ef7473f209bdb7867d20711e6c94745dfeb605df1c970391f17d1bbc/wagascianpy-0.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e9cd5563ade004d35c6fcf05dc549d59b63ec0bbe0ad7da03369c631fedabda",
          "md5": "3a0421d8338243538dbe1892dc547ad9",
          "sha256": "46b6f3c8945b8a926cfc3134cf8d89a93a197d02c4a855d4411e91a9dad0f259"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a0421d8338243538dbe1892dc547ad9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 118575,
        "upload_time": "2020-06-03T08:41:35",
        "upload_time_iso_8601": "2020-06-03T08:41:35.656315Z",
        "url": "https://files.pythonhosted.org/packages/3e/9c/d5563ade004d35c6fcf05dc549d59b63ec0bbe0ad7da03369c631fedabda/wagascianpy-0.2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3623d6644933b57f43d85a0132dbc5afe18ccc578585854c11aa54486a00516",
          "md5": "8c25d6dd40eb23d8c26ad5ef8315e857",
          "sha256": "fea2056c2555e2f09750a21d308d5249ed6355504d93110811a865c39bf66d68"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.2.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c25d6dd40eb23d8c26ad5ef8315e857",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 132107,
        "upload_time": "2020-06-09T06:56:36",
        "upload_time_iso_8601": "2020-06-09T06:56:36.170607Z",
        "url": "https://files.pythonhosted.org/packages/e3/62/3d6644933b57f43d85a0132dbc5afe18ccc578585854c11aa54486a00516/wagascianpy-0.2.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1bb8b1aa56471682f6398ab9921ca4e678f20acce40e729c35360a56a10e558",
          "md5": "0e90572b1ff4b1938f4869bec8a10ab9",
          "sha256": "97631cc7d7b4f1d39c224cded1f564d49d706b6115c188bcca97452f3408f25e"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e90572b1ff4b1938f4869bec8a10ab9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1829850,
        "upload_time": "2020-06-13T15:11:50",
        "upload_time_iso_8601": "2020-06-13T15:11:50.391508Z",
        "url": "https://files.pythonhosted.org/packages/c1/bb/8b1aa56471682f6398ab9921ca4e678f20acce40e729c35360a56a10e558/wagascianpy-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f7533085f0c12a51be74fbc5a08f0258a69d703e6d851ea52aaa01a55a9d4db",
          "md5": "3a756e70b7763e791450f884a99da018",
          "sha256": "e7f780e5248178f50931b7e61ba535d4e7a8eb5d86aee0448cea4e493887c38e"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a756e70b7763e791450f884a99da018",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1833523,
        "upload_time": "2020-06-14T09:56:32",
        "upload_time_iso_8601": "2020-06-14T09:56:32.175245Z",
        "url": "https://files.pythonhosted.org/packages/1f/75/33085f0c12a51be74fbc5a08f0258a69d703e6d851ea52aaa01a55a9d4db/wagascianpy-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8074f8f4128dd74f39bd1669be7f3ca2101576de6b3b8c42aabc8c949e2b61ca",
          "md5": "b5814b7f105a4d4283e98f91437caf62",
          "sha256": "87f75fd286fca8a9485103987380112f908c5bd21cc87ae870db1ec3a0ead80d"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.3.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5814b7f105a4d4283e98f91437caf62",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 1804509,
        "upload_time": "2020-06-27T10:21:52",
        "upload_time_iso_8601": "2020-06-27T10:21:52.745568Z",
        "url": "https://files.pythonhosted.org/packages/80/74/f8f4128dd74f39bd1669be7f3ca2101576de6b3b8c42aabc8c949e2b61ca/wagascianpy-0.3.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fffa13f53d34beec6cc0c12fafd2222fda0b558d184d906cac869fabf449c697",
          "md5": "b0315c7651ac7a1b282abf42e93115c2",
          "sha256": "b68ccc64446d457a048c3248f8920ceb8c51b497897bed98ac7162d58ff9927e"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0315c7651ac7a1b282abf42e93115c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1839417,
        "upload_time": "2020-06-27T10:19:29",
        "upload_time_iso_8601": "2020-06-27T10:19:29.549982Z",
        "url": "https://files.pythonhosted.org/packages/ff/fa/13f53d34beec6cc0c12fafd2222fda0b558d184d906cac869fabf449c697/wagascianpy-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fef5b056fef75e0c4e3549aafef668ca79cac8ec2e1cf87b541ef5da30cea8a",
          "md5": "678f8c9cc6552acb32957ab34e9f9749",
          "sha256": "938491bb0e9fbeff0195708696f6afc5ce29d63404435ecdc62392d8cee01046"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.3.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "678f8c9cc6552acb32957ab34e9f9749",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 1813163,
        "upload_time": "2020-07-24T18:10:16",
        "upload_time_iso_8601": "2020-07-24T18:10:16.204548Z",
        "url": "https://files.pythonhosted.org/packages/5f/ef/5b056fef75e0c4e3549aafef668ca79cac8ec2e1cf87b541ef5da30cea8a/wagascianpy-0.3.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "238ac09deb5bfdcdfdda8585e71b355f65845f7fd98006d42a4e14715094ee2f",
          "md5": "27f1dd1746eaea4f68c5185500c4f63e",
          "sha256": "9d19ee8fd86f5df84ef9c0fc7f76aa60fa58db62709adde5ef0b21fdc281305b"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27f1dd1746eaea4f68c5185500c4f63e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1848071,
        "upload_time": "2020-07-24T18:09:59",
        "upload_time_iso_8601": "2020-07-24T18:09:59.057002Z",
        "url": "https://files.pythonhosted.org/packages/23/8a/c09deb5bfdcdfdda8585e71b355f65845f7fd98006d42a4e14715094ee2f/wagascianpy-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cf241f5f082814e730de660f9ca52b2eaec69e9f3f0d7e340605cc737b6e04a",
          "md5": "5965dc506f59a358555722d8fb72303c",
          "sha256": "a4db71b04da0a54bf67715e2639e0282907290b65f13b1c21854df7561710db5"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.3.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "5965dc506f59a358555722d8fb72303c",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 3954368,
        "upload_time": "2020-10-10T14:17:58",
        "upload_time_iso_8601": "2020-10-10T14:17:58.442606Z",
        "url": "https://files.pythonhosted.org/packages/7c/f2/41f5f082814e730de660f9ca52b2eaec69e9f3f0d7e340605cc737b6e04a/wagascianpy-0.3.4-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d7fe2caeea51f6634c80a9ba41c48c97ac3f10a363862ed0caa883a0b1ea22e",
          "md5": "9491b6be16325b08a3e32660bf4474cc",
          "sha256": "292c95d1ef82778d5ed93e86b6a514f1c833142beec4888ce197f391375ea67e"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9491b6be16325b08a3e32660bf4474cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3989279,
        "upload_time": "2020-10-10T14:11:38",
        "upload_time_iso_8601": "2020-10-10T14:11:38.751619Z",
        "url": "https://files.pythonhosted.org/packages/2d/7f/e2caeea51f6634c80a9ba41c48c97ac3f10a363862ed0caa883a0b1ea22e/wagascianpy-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7c7202812faf4dc8e4c03f7749e88e14050aac8777b748a6a681278b4e651e5",
          "md5": "829fa7c71ba168747feacf45fe5fa7d8",
          "sha256": "0154cb27b99263c8b90b68c7e85266b8eec7b89140e81a9347660d0b0e8a6695"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.3.5-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "829fa7c71ba168747feacf45fe5fa7d8",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 3976473,
        "upload_time": "2021-10-18T01:23:16",
        "upload_time_iso_8601": "2021-10-18T01:23:16.500885Z",
        "url": "https://files.pythonhosted.org/packages/c7/c7/202812faf4dc8e4c03f7749e88e14050aac8777b748a6a681278b4e651e5/wagascianpy-0.3.5-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85c6f64a940a98a968cb5eb9ecf6323a13cdbfdae3f60bf7af3915e596b7ae00",
          "md5": "9cb99bd6187455a3434b36b2e4b3ccb8",
          "sha256": "3a756e50916683516905099bf798796098e1b36e6ca4b3a65bd8c58ccca4b57e"
        },
        "downloads": -1,
        "filename": "wagascianpy-0.3.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cb99bd6187455a3434b36b2e4b3ccb8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4011382,
        "upload_time": "2021-10-18T01:22:42",
        "upload_time_iso_8601": "2021-10-18T01:22:42.152600Z",
        "url": "https://files.pythonhosted.org/packages/85/c6/f64a940a98a968cb5eb9ecf6323a13cdbfdae3f60bf7af3915e596b7ae00/wagascianpy-0.3.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7c7202812faf4dc8e4c03f7749e88e14050aac8777b748a6a681278b4e651e5",
        "md5": "829fa7c71ba168747feacf45fe5fa7d8",
        "sha256": "0154cb27b99263c8b90b68c7e85266b8eec7b89140e81a9347660d0b0e8a6695"
      },
      "downloads": -1,
      "filename": "wagascianpy-0.3.5-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "829fa7c71ba168747feacf45fe5fa7d8",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 3976473,
      "upload_time": "2021-10-18T01:23:16",
      "upload_time_iso_8601": "2021-10-18T01:23:16.500885Z",
      "url": "https://files.pythonhosted.org/packages/c7/c7/202812faf4dc8e4c03f7749e88e14050aac8777b748a6a681278b4e651e5/wagascianpy-0.3.5-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85c6f64a940a98a968cb5eb9ecf6323a13cdbfdae3f60bf7af3915e596b7ae00",
        "md5": "9cb99bd6187455a3434b36b2e4b3ccb8",
        "sha256": "3a756e50916683516905099bf798796098e1b36e6ca4b3a65bd8c58ccca4b57e"
      },
      "downloads": -1,
      "filename": "wagascianpy-0.3.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9cb99bd6187455a3434b36b2e4b3ccb8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4011382,
      "upload_time": "2021-10-18T01:22:42",
      "upload_time_iso_8601": "2021-10-18T01:22:42.152600Z",
      "url": "https://files.pythonhosted.org/packages/85/c6/f64a940a98a968cb5eb9ecf6323a13cdbfdae3f60bf7af3915e596b7ae00/wagascianpy-0.3.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}