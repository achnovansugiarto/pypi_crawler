{
  "info": {
    "author": "Xavier Hinaut",
    "author_email": "xavier.hinaut@inria.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "<div align=\"center\">\n  <!-- <img src=\"https://github.com/reservoirpy/reservoirpy/raw/master/static/rpy_banner_bw.png\"><br> !-->\n  <img src=\"./static/rpy_banner_bw_small-size.jpg\"><br>\n</div>\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/reservoirpy)\n[![PyPI version](https://badge.fury.io/py/reservoirpy.svg)](https://badge.fury.io/py/reservoirpy)\n[![Documentation Status](https://readthedocs.org/projects/reservoirpy/badge/?version=latest)](https://reservoirpy.readthedocs.io/en/latest/?badge=latest)\n[![Testing](https://github.com/reservoirpy/reservoirpy/actions/workflows/test.yml/badge.svg?branch=master)](https://github.com/reservoirpy/reservoirpy/actions/workflows/test.yml)\n[![codecov](https://codecov.io/gh/reservoirpy/reservoirpy/branch/master/graph/badge.svg?token=JC8R1PB5EO)](https://codecov.io/gh/reservoirpy/reservoirpy)\n\n# ReservoirPy (v0.3.6) ðŸŒ€ðŸ§ \n**Simple and flexible code for Reservoir Computing architectures like Echo State Networks (ESN).**\n\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/reservoirpy/reservoirpy/HEAD)\n\n```python\nfrom reservoirpy.nodes import Reservoir, Ridge, Input\n\ndata = Input(input_dim=1)\nreservoir = Reservoir(100, lr=0.3, sr=1.1)\nreadout = Ridge(ridge=1e-6)\n\nesn = data >> reservoir >> readout\n\nforecast = esn.fit(X, y).run(timeseries)\n```\n\nReservoirPy is a simple user-friendly library based on Python scientific modules.\nIt provides a **flexible interface to implement efficient Reservoir Computing** (RC)\narchitectures with a particular focus on *Echo State Networks* (ESN).\nAdvanced features of ReservoirPy allow to improve computation time efficiency\non a simple laptop compared to basic Python implementation, with datasets of\nany size.\n\nSome of its features are: **offline and online training**, **parallel implementation**,\n**sparse matrix computation**, fast spectral initialization, **advanced learning rules**\n(e.g. *Intrinsic Plasticity*) etc. It also makes possible\nto **easily create complex architectures with multiple reservoirs** (e.g. *deep reservoirs*),\nreadouts, and **complex feedback loops**.\nMoreover, graphical tools are included to **easily explore hyperparameters**\nwith the help of the *hyperopt* library.\nFinally, it includes several tutorials exploring exotic architectures\nand examples of scientific papers reproduction.\n\nThis library works for **Python 3.8** and higher.\n\n[Follow @reservoirpy](https://twitter.com/reservoirpy) updates and new releases on Twitter.\n\n## Official documentation ðŸ“–\n\nSee [the official ReservoirPy's documentation](https://reservoirpy.readthedocs.io/en/latest/?badge=latest)\nto learn more about the main features of ReservoirPy, its API and the installation process. Or you can access directly the [User Guide with tutorials](https://reservoirpy.readthedocs.io/en/latest/user_guide/index.html#user-guide).\n\n## Quick example of how to code a deep reservoir\n![Image](deep-reservoir.gif)\n\n## Installation\n\n```bash\npip install reservoirpy\n```\n\n(See below for more advanced installation options)\n\n\n## Quick try âš¡\n\n### An example on Chaotic timeseries prediction (MackeyGlass)\n\n**Step 1: Load the dataset**\n\nReservoirPy comes with some handy data generator able to create synthetic timeseries\nfor well-known tasks such as Mackey-Glass timeseries forecasting.\n\n```python\nfrom reservoirpy.datasets import mackey_glass\n\nX = mackey_glass(n_timesteps=2000)\n```\n\n**Step 2: Create an Echo State Network...**\n\n...or any kind of model you wish to use to solve your task. In this simple\nuse case, we will try out Echo State Networks (ESNs), one of the\nmost minimal architecture of Reservoir Computing machines.\n\nAn ESN is made of\na *reservoir*, a random recurrent network used to encode our\ninputs in a high-dimensional (non-linear) space, and a *readout*, a simple\nfeed-forward layer of neurons in charge with *reading-out* the desired output from\nthe activations of the reservoir.\n```python\nfrom reservoirpy.nodes import Reservoir, Ridge\n\nreservoir = Reservoir(units=100, lr=0.3, sr=1.25)\nreadout = Ridge(output_dim=1, ridge=1e-5)\n```\n\nWe here obtain a reservoir with 100 neurons, a *spectral radius* of 1.25 and\na *leak rate* of 0.3 (you can learn more about these hyperparameters going through\nthe tutorial\n[Understand and optimize hyperparameters](./tutorials/4-Understand_and_optimize_hyperparameters.ipynb)).\nHere, our readout layer is just a single unit, that we will receive connections from (all units of) the reservoir.\nNote that only the readout layer connections are trained.\nThis is one of the cornerstone of all Reservoir Computing techniques. In our\ncase, we will train these connections using linear regression, with a regularization\ncoefficient of 10<sup>-5</sup>.\n\nNow, let's connect everything using the `>>` operator.\n\n```python\nesn = reservoir >> readout\n```\n\nThat's it! Next step: fit the readout weights to perform the task we want.\nWe will train the ESN to make one-step-ahead forecasts of our timeseries.\n\n**Step 3: Fit and run the ESN**\n\nWe train our ESN on the first 500 timesteps of the timeseries, with 100 steps used to warm up the reservoir states.\n\n```python\nesn.fit(X[:500], X[1:501], warmup=100)\n```\n\nOur ESN is now trained and ready to use. Let's run it on the remainder of the timeseries:\n\n```python\npredictions = esn.run(X[501:-1])\n```\n\nAs a shortcut, both operations can be performed in just one line!\n\n```python\npredictions = esn.fit(X[:500], X[1:501]).run(X[501:-1])\n```\n\nLet's now evaluate its performances.\n\n**Step 4: Evaluate the ESN**\n\n```python\nfrom reservoirpy.observables import rmse, rsquare\n\nprint(\"RMSE:\", rmse(X[502:], predictions), \"R^2 score:\", rsquare(X[502:], predictions))\n```\n\nRun and analyse this simple file (in the \"tutorials/Simple Examples with Mackey-Glass\" folder) to see a complete example of timeseries prediction with ESNs:\n- simple_example_MackeyGlass.py (using the ESN class)\n\n    ```bash\n    python simple_example_MackeyGlass.py\n    ```\n\nIf you have some issues testing some examples, have a look at the [extended packages requirements in readthedocs](https://reservoirpy.readthedocs.io/en/latest/developer_guide/advanced_install.html?highlight=requirements#additional-dependencies-and-requirements).\n\n## More installation options \n\nTo install it, use one of the following command:\n\n```bash\npip install reservoirpy\n```\nor\n\n```bash\npip install reservoirpy==0.3.5\n```\n\nIf you want to run the Python Notebooks of the _tutorials_ folder, install the packages in requirements file (warning: this may downgrade the version of hyperopt installed):\n```bash\npip install -r tutorials/requirements.txt\n```\n\nIf you want to use the previous version 0.2.4, you can install ReservoirPy using:\n\n```bash\npip install reservoirpy==0.2.4\n```\n\nIf you want to enable the `hyper` package and its hyperparameter optimization helpers using\n[hyperopt](http://hyperopt.github.io/hyperopt/), use:\n\n```bash\npip install reservoirpy[hyper]\n```\n\n## More examples and tutorials ðŸŽ“\n\n[Go to the tutorial folder](./tutorials/) for tutorials in Jupyter Notebooks.\n\n[Go to the examples folder](./examples/) for examples and papers with codes, also in Jupyter Notebooks.\n\n## Paper with tutorials\nTutorial for ReservoirPy (v0.2) can be found in this [Paper (Trouvain et al. 2020)](https://hal.inria.fr/hal-02595026).\n\n## Explore Hyper-Parameters with Hyperopt\nA quick tutorial on how to explore hyperparameters with ReservoirPy and Hyperopt can be found in this [paper (Trouvain et al. 2020)](https://hal.inria.fr/hal-02595026).\n\nTake a look at our **advices and our method to explore hyperparameters** for reservoirs in our [recent paper: (Hinaut et al 2021)](https://hal.inria.fr/hal-03203318/) [HTML](https://link.springer.com/chapter/10.1007/978-3-030-86383-8_7) [HAL](https://hal.inria.fr/hal-03203318)\n\n[Turorial and Jupyter Notebook for hyper-parameter exploration](./tutorials/4-Understand_and_optimize_hyperparameters.ipynb)\n\nMore info on hyperopt: [Official website](http://hyperopt.github.io/hyperopt/)\n\n## Papers and projects using ReservoirPy\n\nIf you want your paper to appear here, please contact us (see contact link below).\n\n- Chaix-Eichel et al. (2022) From implicit learning to explicit representations. arXiv preprint arXiv:2204.02484. [arXiv](https://arxiv.org/abs/2204.02484) [PDF](https://arxiv.org/pdf/2204.02484)\n- Trouvain & Hinaut (2021) Canary Song Decoder: Transduction and Implicit Segmentation with ESNs and LTSMs. ICANN 2021 [HTML](https://link.springer.com/chapter/10.1007/978-3-030-86383-8_6) [HAL](https://hal.inria.fr/hal-03203374) [PDF](https://hal.inria.fr/hal-03203374/document)\n- Pagliarini et al. (2021) Canary Vocal Sensorimotor Model with RNN Decoder and Low-dimensional GAN Generator. ICDL 2021. [HTML](https://ieeexplore.ieee.org/abstract/document/9515607?casa_token=QbpNhxjtfFQAAAAA:3klJ9jDfA0EEbckAdPFeyfIwQf5qEicaKS-U94aIIqf2q5xkX74gWJcm3w9zxYy9SYOC49mQt6vF)\n- Pagliarini et al. (2021) What does the Canary Say? Low-Dimensional GAN Applied to Birdsong. HAL preprint. [HAL](https://hal.inria.fr/hal-03244723/) [PDF](https://hal.inria.fr/hal-03244723/document)\n- Which Hype for My New Task? Hints and Random Search for Echo State Networks Hyperparameters. ICANN 2021 [HTML](https://link.springer.com/chapter/10.1007/978-3-030-86383-8_7) [HAL](https://hal.inria.fr/hal-03203318) [PDF](https://hal.inria.fr/hal-03203318)\n\n## Contact\nIf you have a question regarding the library, please open an Issue. If you have more general question or feedback you can [contact us on twitter](https://twitter.com/reservoirpy) or by email to xavier dot hinaut the-famous-home-symbol inria dot fr.\n\n## Citing ReservoirPy\n\nTrouvain, N., Pedrelli, L., Dinh, T. T., Hinaut, X. (2020) Reservoirpy: an efficient and user-friendly library to design echo state networks. In International Conference on Artificial Neural Networks (pp. 494-505). Springer, Cham. [HTML](https://link.springer.com/chapter/10.1007/978-3-030-61616-8_40) [HAL](https://hal.inria.fr/hal-02595026) [PDF](https://hal.inria.fr/hal-02595026/document)\n\nIf you're using ReservoirPy in your work, please cite our package using the following bibtex entry:\n\n```\n\n@incollection{Trouvain2020,\n  doi = {10.1007/978-3-030-61616-8_40},\n  url = {https://doi.org/10.1007/978-3-030-61616-8_40},\n  year = {2020},\n  publisher = {Springer International Publishing},\n  pages = {494--505},\n  author = {Nathan Trouvain and Luca Pedrelli and Thanh Trung Dinh and Xavier Hinaut},\n  title = {{ReservoirPy}: An Efficient and User-Friendly Library to Design Echo State Networks},\n  booktitle = {Artificial Neural Networks and Machine Learning {\\textendash} {ICANN} 2020}\n}\n```\n\n<div align=\"left\">\n  <img src=\"./static/inr_logo_rouge.jpg\" width=300><br>\n</div>\n\n\nThis package is developped and supported by Inria at Bordeaux, France in [Mnemosyne](https://team.inria.fr/mnemosyne/) group. [Inria](https://www.inria.fr/en) is a French Research Institute in Digital Sciences (Computer Science, Mathematics, Robotics, ...).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/reservoirpy/reservoirpy/v0.3.13.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/reservoirpy/reservoirpy",
    "keywords": "",
    "license": "",
    "maintainer": "Xavier Hinaut, Nathan Trouvain",
    "maintainer_email": "xavier.hinaut@inria.fr, nathan.trouvain@inria.fr",
    "name": "reservoirpy-fbessou",
    "package_url": "https://pypi.org/project/reservoirpy-fbessou/",
    "platform": null,
    "project_url": "https://pypi.org/project/reservoirpy-fbessou/",
    "project_urls": {
      "Bug Tracker": "https://github.com/reservoirpy/reservoirpy/issues",
      "Documentation": "https://reservoirpy.readthedocs.io/en/latest/index.html",
      "Download": "https://github.com/reservoirpy/reservoirpy/v0.3.13.tar.gz",
      "Homepage": "https://github.com/reservoirpy/reservoirpy",
      "Source Code": "https://github.com/reservoirpy/reservoirpy"
    },
    "release_url": "https://pypi.org/project/reservoirpy-fbessou/0.3.13/",
    "requires_dist": [
      "tqdm (>=4.43.0)",
      "joblib (>=0.12)",
      "dill (>=0.3.0)",
      "numpy (>=1.21.1)",
      "scipy (<=1.7.3,>=1.0.0)",
      "matplotlib (>=2.2.0) ; extra == 'hyper'",
      "hyperopt ; extra == 'hyper'",
      "seaborn ; extra == 'hyper'"
    ],
    "requires_python": ">=3.6",
    "summary": "A simple and flexible code for Reservoir Computing architectures like Echo State Networks.",
    "version": "0.3.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16904655,
  "releases": {
    "0.3.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcef7c0b1e00478aca6f883509e420bd473f59f19b6e3363c42aafb3e36f33d7",
          "md5": "bdaad0bfafdb6b744248b91cc0428654",
          "sha256": "a523545068b76250ab1a0e7e8d6018deb197ecf30629bfa6b7b9ca53830f10e0"
        },
        "downloads": -1,
        "filename": "reservoirpy_fbessou-0.3.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdaad0bfafdb6b744248b91cc0428654",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 167380,
        "upload_time": "2023-02-17T16:01:16",
        "upload_time_iso_8601": "2023-02-17T16:01:16.036878Z",
        "url": "https://files.pythonhosted.org/packages/fc/ef/7c0b1e00478aca6f883509e420bd473f59f19b6e3363c42aafb3e36f33d7/reservoirpy_fbessou-0.3.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4fd3b07d690b5532a46f74a424a8ddb6172de68c1f96326ccb8a9fe3d40802d",
          "md5": "2aef5aab50940857fd44f7868ac5c97a",
          "sha256": "5e31b0ec6212b71b8d4dbbcb8d89f9c79039da27555abd84ac090b0d8360b383"
        },
        "downloads": -1,
        "filename": "reservoirpy-fbessou-0.3.13.tar.gz",
        "has_sig": false,
        "md5_digest": "2aef5aab50940857fd44f7868ac5c97a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 131250,
        "upload_time": "2023-02-17T16:01:17",
        "upload_time_iso_8601": "2023-02-17T16:01:17.617142Z",
        "url": "https://files.pythonhosted.org/packages/e4/fd/3b07d690b5532a46f74a424a8ddb6172de68c1f96326ccb8a9fe3d40802d/reservoirpy-fbessou-0.3.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4caf9909ee40e5009b5d47009b486eb2185978a5f682c1a3bf93733dd18364ed",
          "md5": "ea4a37b80479c4409f852428f6e3c827",
          "sha256": "c6af497c0017d5f683e1e2d6a31fc55993068c9acc6448ac01e9e79e439bbbcf"
        },
        "downloads": -1,
        "filename": "reservoirpy_fbessou-0.3.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea4a37b80479c4409f852428f6e3c827",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 167369,
        "upload_time": "2023-02-17T14:36:54",
        "upload_time_iso_8601": "2023-02-17T14:36:54.614978Z",
        "url": "https://files.pythonhosted.org/packages/4c/af/9909ee40e5009b5d47009b486eb2185978a5f682c1a3bf93733dd18364ed/reservoirpy_fbessou-0.3.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4715b93f5cdc92471ace10699a79e6b2691b0abf97e4d5ac324e5f854e2604a0",
          "md5": "b6a09190511a90650e557fa8e181893b",
          "sha256": "fce102843009929d15441d3233d7c036a97979621d011b54f46c70f8a5e546b6"
        },
        "downloads": -1,
        "filename": "reservoirpy-fbessou-0.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b6a09190511a90650e557fa8e181893b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 131329,
        "upload_time": "2023-02-17T14:12:56",
        "upload_time_iso_8601": "2023-02-17T14:12:56.610682Z",
        "url": "https://files.pythonhosted.org/packages/47/15/b93f5cdc92471ace10699a79e6b2691b0abf97e4d5ac324e5f854e2604a0/reservoirpy-fbessou-0.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "480d0121abc78d2b40b3950d324402f9cdb594e69002df4b77d456c27fd2c0b7",
          "md5": "77248ea7cb983c2b569302ad44e4580f",
          "sha256": "9997e9d5388e1bb82e858d04d6da1bb0865cb0cead654d6b86c44a5b6a775272"
        },
        "downloads": -1,
        "filename": "reservoirpy_fbessou-0.3.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77248ea7cb983c2b569302ad44e4580f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 167368,
        "upload_time": "2023-02-17T14:41:17",
        "upload_time_iso_8601": "2023-02-17T14:41:17.473474Z",
        "url": "https://files.pythonhosted.org/packages/48/0d/0121abc78d2b40b3950d324402f9cdb594e69002df4b77d456c27fd2c0b7/reservoirpy_fbessou-0.3.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a6a6bca6b91fa9339c3dc1e34a7aea0f3174fe69049f41217f6584e6c95e916",
          "md5": "d756081f2278e3e6de679f03673c0d6e",
          "sha256": "692e337b937670ab1fa961c68d853e248684953db9eae1daf2c69c7d1b05bbb7"
        },
        "downloads": -1,
        "filename": "reservoirpy-fbessou-0.3.9.tar.gz",
        "has_sig": false,
        "md5_digest": "d756081f2278e3e6de679f03673c0d6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 131265,
        "upload_time": "2023-02-17T14:41:19",
        "upload_time_iso_8601": "2023-02-17T14:41:19.102587Z",
        "url": "https://files.pythonhosted.org/packages/8a/6a/6bca6b91fa9339c3dc1e34a7aea0f3174fe69049f41217f6584e6c95e916/reservoirpy-fbessou-0.3.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcef7c0b1e00478aca6f883509e420bd473f59f19b6e3363c42aafb3e36f33d7",
        "md5": "bdaad0bfafdb6b744248b91cc0428654",
        "sha256": "a523545068b76250ab1a0e7e8d6018deb197ecf30629bfa6b7b9ca53830f10e0"
      },
      "downloads": -1,
      "filename": "reservoirpy_fbessou-0.3.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bdaad0bfafdb6b744248b91cc0428654",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 167380,
      "upload_time": "2023-02-17T16:01:16",
      "upload_time_iso_8601": "2023-02-17T16:01:16.036878Z",
      "url": "https://files.pythonhosted.org/packages/fc/ef/7c0b1e00478aca6f883509e420bd473f59f19b6e3363c42aafb3e36f33d7/reservoirpy_fbessou-0.3.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4fd3b07d690b5532a46f74a424a8ddb6172de68c1f96326ccb8a9fe3d40802d",
        "md5": "2aef5aab50940857fd44f7868ac5c97a",
        "sha256": "5e31b0ec6212b71b8d4dbbcb8d89f9c79039da27555abd84ac090b0d8360b383"
      },
      "downloads": -1,
      "filename": "reservoirpy-fbessou-0.3.13.tar.gz",
      "has_sig": false,
      "md5_digest": "2aef5aab50940857fd44f7868ac5c97a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 131250,
      "upload_time": "2023-02-17T16:01:17",
      "upload_time_iso_8601": "2023-02-17T16:01:17.617142Z",
      "url": "https://files.pythonhosted.org/packages/e4/fd/3b07d690b5532a46f74a424a8ddb6172de68c1f96326ccb8a9fe3d40802d/reservoirpy-fbessou-0.3.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}