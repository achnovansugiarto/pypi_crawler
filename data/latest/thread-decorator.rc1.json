{
  "info": {
    "author": "Jorge Riveros",
    "author_email": "christian.riveros@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Thread Decorator\nSimple parallel processing interface for python\n\n## Why?\nPython's built in parallel processing and threading library is pretty simple to implement but sometimes you just want to chuck data at a function and make it run faster\n\n## Requirements\nPython 3+\n\n## Installation\n```shell\n$ pip install thread_decorator\n```\n\n## Quickstart\nUse the `threaded` decorator to turn a method into a threaded method.\n```python\n@threaded()\ndef my_func():\n    '''Your Code'''\n```\n\nAlternatively, use `run_threaded` function\n```python\nrun_threaded(my_func)\n```\n\nBoth the `threaded` decorator and `run_threaded` method will return an instance of\n`ResultThread`. This allow you to optionally wait for the function to finish executing \nand get the return value. To get the return value, use `.await_output()`\n```python\nresult = threaded_print()\nresult.await_output()  # this will return 1\n```\n\nIf you have a function that needs to execute on a large list of data, use `run_chunked`\n```python\ndef update_items(items):\n    ...\n\nitems = [...]\nrun_chunked(update_items, items)\n```\n`.await_output()` also work with `run_chunked` but will return a list of return values instead\n\n## Run the tests\nRun tests with\n```python\npython tests.py\n```\n\n## Todo\n- [x] threaded function decorator\n- [x] run something in a separate thread function\n- [x] split data into chunk and run in separate threads\n- [ ] add way for errors to fail loudly\n- [ ] auto spawn to run fx on a set of data\n- [ ] explore multi processing?\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cocuni80/thread_decorator",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "thread-decorator",
    "package_url": "https://pypi.org/project/thread-decorator/",
    "platform": "",
    "project_url": "https://pypi.org/project/thread-decorator/",
    "project_urls": {
      "Homepage": "https://github.com/cocuni80/thread_decorator"
    },
    "release_url": "https://pypi.org/project/thread-decorator/0.2/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python package for Multithread processing",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10963151,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d361fd6e1bdb7ee461eff249ba8b176c44572f0d7de0e1c0b2968fe10ffdcbd0",
          "md5": "b51827730f477c6fb4fa574fb961cccd",
          "sha256": "7356416719b69e3bf664da6b49dc9f4b83ffcceee513dc256e24b2da3b456304"
        },
        "downloads": -1,
        "filename": "thread_decorator-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b51827730f477c6fb4fa574fb961cccd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4572,
        "upload_time": "2021-07-21T03:33:29",
        "upload_time_iso_8601": "2021-07-21T03:33:29.715161Z",
        "url": "https://files.pythonhosted.org/packages/d3/61/fd6e1bdb7ee461eff249ba8b176c44572f0d7de0e1c0b2968fe10ffdcbd0/thread_decorator-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71883a7c98dc0b29f3e46d62af7a17738b1f01276ec640c84bbaf66c5852f286",
          "md5": "dd98b99fd6c78863661f27fe6710bf60",
          "sha256": "39990f58eb025fabaeadd884411abd52e95a61bb78c23ea1a85b4b1ebbf356d2"
        },
        "downloads": -1,
        "filename": "thread_decorator-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dd98b99fd6c78863661f27fe6710bf60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4166,
        "upload_time": "2021-07-21T03:33:30",
        "upload_time_iso_8601": "2021-07-21T03:33:30.805580Z",
        "url": "https://files.pythonhosted.org/packages/71/88/3a7c98dc0b29f3e46d62af7a17738b1f01276ec640c84bbaf66c5852f286/thread_decorator-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d361fd6e1bdb7ee461eff249ba8b176c44572f0d7de0e1c0b2968fe10ffdcbd0",
        "md5": "b51827730f477c6fb4fa574fb961cccd",
        "sha256": "7356416719b69e3bf664da6b49dc9f4b83ffcceee513dc256e24b2da3b456304"
      },
      "downloads": -1,
      "filename": "thread_decorator-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b51827730f477c6fb4fa574fb961cccd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4572,
      "upload_time": "2021-07-21T03:33:29",
      "upload_time_iso_8601": "2021-07-21T03:33:29.715161Z",
      "url": "https://files.pythonhosted.org/packages/d3/61/fd6e1bdb7ee461eff249ba8b176c44572f0d7de0e1c0b2968fe10ffdcbd0/thread_decorator-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71883a7c98dc0b29f3e46d62af7a17738b1f01276ec640c84bbaf66c5852f286",
        "md5": "dd98b99fd6c78863661f27fe6710bf60",
        "sha256": "39990f58eb025fabaeadd884411abd52e95a61bb78c23ea1a85b4b1ebbf356d2"
      },
      "downloads": -1,
      "filename": "thread_decorator-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "dd98b99fd6c78863661f27fe6710bf60",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4166,
      "upload_time": "2021-07-21T03:33:30",
      "upload_time_iso_8601": "2021-07-21T03:33:30.805580Z",
      "url": "https://files.pythonhosted.org/packages/71/88/3a7c98dc0b29f3e46d62af7a17738b1f01276ec640c84bbaf66c5852f286/thread_decorator-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}