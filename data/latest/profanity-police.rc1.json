{
  "info": {
    "author": "Vivek Kamal Kumar",
    "author_email": "kumar.vivek2696@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Profanity Police\nThis is a python API which allows you to check for swear words in a youtube video, srt file, text file, custom source with multi language support. There are additional features like getting youtube transcript of a video, srt parser etc.\n\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat)](http://opensource.org/licenses/MIT)  [![image](https://img.shields.io/pypi/v/profanity-police.svg)](https://pypi.org/project/profanity-police/) [![image](https://img.shields.io/pypi/pyversions/profanity-police.svg)](https://pypi.org/project/profanity-police/)\n\n\n\n# Install\n\nInstall package using pip\n```\npip install profanity-police\n```\nIf you want to use it from source, you'll have to install the dependencies manually:\n```\npip install -r requirements.txt\n```\n\n# API\n\n## Youtube\nBasic implementation to check for swear words in a youtube video in a particular language\n\n```python\nfrom profanity_police.transcript_checker import TranscriptChecker\n\nchecker = TranscriptChecker()\nprint(checker.check_transcript(source = \"youtube\", url = \"https://www.youtube.com/watch?v=Vev2ybF2Z6g\", language_code = \"en\"))\n# video id can be passed directly instead of url if needed\n# print(checker.check_transcript(source = \"youtube\", video_id = \"Vev2ybF2Z6g\", language_code = \"hi\"))\n```\nThis would print something like this:-\n```\n[\n   {\n      \"text\":\"The whole fucking bruhaha was happening..\",\n      \"start\":298.91,\n      \"duration\":2.06,\n      \"found\":[\n         \"fucking\"\n      ]\n   },\n   {\n      \"text\":\"What the fuck is happening?\",\n      \"start\":330.99,\n      \"duration\":0.91,\n      \"found\":[\n         \"fuck\"\n      ]\n   },\n   {\n      \"text\":\"Shit scripts how do you say it's shit?\",\n      \"start\":1218.77,\n      \"duration\":1.63,\n      \"found\":[\n         \"shit\"\n      ]\n   }\n]\n```\nThe duration is depicted in seconds.\n\nGet youtube transcript for a video\n```python\nfrom profanity_police.youtube import YoutubeTranscript\n\ny_transcript = YoutubeTranscript(url = \"https://www.youtube.com/watch?v=Vev2ybF2Z6g\")\n# Get the original transcripts available for a video\ny_transcript.get_original_languages()\n\n# Get the languages to which the video can be translated to\ny_transcript.get_translation_languages()\n\ntranscript_en = y_transcript.get_transcript(language_code = \"en-GB\")\ntranscript_fr = y_transcript.get_transcript(language_code = \"fr\")\ntranscript_hi = y_transcript.get_transcript(language_code = \"hi\")\n```\n\n## Custom File\n\n### SRT file\n```python\nfrom profanity_police.transcript_checker import TranscriptChecker\n\nchecker = TranscriptChecker()\nswear_phrases = checker.check_transcript(source = \"file\", file_path = \"sample_srt_files/panchayat_episode_6.srt\", file_type = \"srt\", language_code = \"en\")\nprint(swear_phrases)\n```\n\n### Text file\n\n```python\nfrom profanity_police.transcript_checker import TranscriptChecker\n\nchecker = TranscriptChecker()\n\nswear_phrases = checker.check_transcript(source = \"file\", file_path = \"y\", file_type = \"txt\", language_code = \"en\")\nprint(swear_phrases)\n```\n\n# Additional APIs\n\n### Custom checker\n```python\nfrom profanity_police.checker import Checker\nchecker = Checker()\ntranscript = [{\"text\": \"What is your name?\"}, {\"text\": \"shut the fuck up\"}]\nlanguage_code = \"en\"\n# `transcript` needs to be a list of dictionaries with one mandatory key - `text` \nswear_words_in_transcript = checker.check_swear_word(transcript, language_code)\n```             \n### SRT text Extractor\n```python\nfrom profanity_police.srt_extractor import SrtExtractor\nfile_path = \"sample_srt_files/panchayat_episode_3.srt\"\ntranscript = SrtExtractor().extract_text(file_path)\n\"\"\"\ntranscript is a list of dictionary with the below format\n[\n    {\"text\": \"what is your name?\", \"start\": 10, \"end\": 12}\n]\nstart and end are in seconds\n\"\"\"\n```\n\n## Languages\n\nFor swear word checker\n\n| Name             | Code |\n| ---------------- | ---- |\n| [English](en)    | en   |\n| [French](fr)     | fr   |\n| [Hindi](hi)      | hi   |\n| [Italian](it)    | it   |\n| [Korean](ko)     | ko   |\n| [Portuguese](pt) | pt   |\n| [Russian](ru)    | ru   |\n| [Spanish](es)    | es   |\n\nFor youtube translation:-\nAll languages supported by youtube.\n\nIf you liked it and it was helpful, then\n<a href=\"https://www.buymeacoffee.com/vivekkumar2696\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ></a>\n\n# License\nMIT",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vivekkumar2696/profanity-police",
    "keywords": "transcript,profanity,profanity-detection,swearword,srt-parser,youtube-transcripts,youtube-captions",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "profanity-police",
    "package_url": "https://pypi.org/project/profanity-police/",
    "platform": "",
    "project_url": "https://pypi.org/project/profanity-police/",
    "project_urls": {
      "Homepage": "https://github.com/vivekkumar2696/profanity-police"
    },
    "release_url": "https://pypi.org/project/profanity-police/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This is a python API which allows you to check for swear words in a youtube video, srt file, text file, custom source with multi language support. There are additional features like getting youtube transcript of a video, srt parser etc.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10706599,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02abc33745d510d390ea1afa80de700cb42323ab059f9aee254eecb38d064385",
          "md5": "0265e1b487ecf7f53943fba93a70b588",
          "sha256": "e92a33dc11677ab33da16f834c9faa126b7d1bc51985a2263153798a6e8cb3c0"
        },
        "downloads": -1,
        "filename": "profanity_police-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0265e1b487ecf7f53943fba93a70b588",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34700,
        "upload_time": "2021-06-21T21:17:54",
        "upload_time_iso_8601": "2021-06-21T21:17:54.319351Z",
        "url": "https://files.pythonhosted.org/packages/02/ab/c33745d510d390ea1afa80de700cb42323ab059f9aee254eecb38d064385/profanity_police-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02abc33745d510d390ea1afa80de700cb42323ab059f9aee254eecb38d064385",
        "md5": "0265e1b487ecf7f53943fba93a70b588",
        "sha256": "e92a33dc11677ab33da16f834c9faa126b7d1bc51985a2263153798a6e8cb3c0"
      },
      "downloads": -1,
      "filename": "profanity_police-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0265e1b487ecf7f53943fba93a70b588",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 34700,
      "upload_time": "2021-06-21T21:17:54",
      "upload_time_iso_8601": "2021-06-21T21:17:54.319351Z",
      "url": "https://files.pythonhosted.org/packages/02/ab/c33745d510d390ea1afa80de700cb42323ab059f9aee254eecb38d064385/profanity_police-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}