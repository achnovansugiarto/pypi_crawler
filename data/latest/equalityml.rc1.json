{
  "info": {
    "author": "Ben Brintz, Mark Zhang, James Ng, Janice Davis, Jared Hansen, Ji won Chang, João Granja, Rizwan Muhammad",
    "author_email": "support@equalityai.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n[![Continuous Integration](https://github.com/EqualityAI/EqualityML/actions/workflows/ci.yml/badge.svg)](https://github.com/EqualityAI/EqualityML/actions/workflows/ci.yml)\n[![License](https://img.shields.io/github/license/EqualityAI/EqualityML.svg?color=blue)](https://github.com/EqualityAI/EqualityML/blob/main/LICENSE)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg)](https://github.com/EqualityAI/EqualityML/blob/main/CODE_OF_CONDUCT.md)\n<!---\n[![Documentation](https://readthedocs.org/projects/aif360/badge/?version=latest)](http://aif360.readthedocs.io/en/latest/?badge=latest)\n[![PyPI version](https://badge.fury.io/py/equalityml.svg)](https://badge.fury.io/py/equalityml)\n[![CRAN\\_Status\\_Badge](http://www.r-pkg.org/badges/version/equalityml)](https://cran.r-project.org/package=equalityml)\n--->\n# Equality AI `EqualityML`\n\n### Let's end algorithmic bias together!\n\n[Equality AI (EAI)](https://equalityai.com/) is a public-benefit corporation dedicated to providing developers with \nevidence-based tools to end algorithmic bias. Our tools are built by developers for developers. So, we know that \ndevelopers want their models to be fair, but we also understand that bias is <b> difficult and intimidating.</b> \n\nThe EAI `EqualityML` repository provides tools and guidance on how to include fairness and bias mitigation methods to \nmodel fitting so as to safeguard the people on the receiving end of our models from bias. \n\nIf you like what we're doing, give us a star and join our [EAI Manifesto!](https://equalityai.com/community/#manifesto)!</br>\n\n>We have extented `EqualityML` to include other aspects of Responsible AI (see full framework <b>Figure 1.</b>) and \ncollaboration features to create our Beta MLOps Developer Studio. <b>Become a Beta user by going to our \n[website!](https://equalityai.com/)</b>\n\n![](https://github.com/EqualityAI/EqualityML/blob/main/img/framework.png?raw=true)\n<sub><b>Figure 1:</b> Full Responsible AI Framework.</sub>\n\n## Introduction\nIncorporating bias mitigation methods and fairness metrics into the traditional end-to-end MLOps is called \nfairness-based machine learning (ML) or fair machine learning. However, fair ML comes with its own challenges. \nWe assembled a diverse team of statisticians and ML experts to provide evidence-based guidance on fairness metrics \nuse/selection and validated code to properly run bias mitigation methods.\n\n<details>\n  <summary> Click to read our findings: </summary>\n  \n#### Fairness Metric\n* Statistical measure of the output of a machine learning model based a mathematical definition of fairness.\n\n> [Fairness Metric Guide:](https://github.com/EqualityAI/EqualityML/raw/main/Fairness%20Metrics%20User%20Manual.pdf)\nWe have combined fairness metrics and bias mitigation into a unified syntax.</br><sub> Statistical Parity | \nConditional Statistical Parity | Negative Predictive Parity | Equal Opportunity | Balance for Positive Class | \nPredictive Parity | Well Calibration | Calibration | Conditional Use Accuracy | Predictive Equality | Balance for \nNegative Class | Equalized Odds | Overall Balance\n</sub>\n\n#### Bias Mitigation\n* Methods or algorithms applied to a machine learning dataset or model to improve the fairness of the model output. \nMany mitigation methods have been proposed in the literature, which can be broadly classified into the application of \na mitigation method on the data set (pre-processing), in the model fitting (in-processing), and to the model \npredictions (post-processing).\n\n> [Bias Mitigation Guide:](https://github.com/EqualityAI/EqualityML/blob/main/Fairness%20Metrics%20User%20Manual.pdf)</br>\n<sub> Resampling | Reweighting | Disparate Impact Remover | Correlation Remover \n</sub>\n\n![](https://github.com/EqualityAI/EqualityML/blob/main/img/pre_in_post_nw.png?raw=true)\n<sub><b>Figure 2:</b> Bias mitigation can be performed in the pre-processing, in-processing, and post-processing of a model.</sub>\n<br>\n\n> Need a specific metric or method? [Just let us know!](https://equalityai.slack.com/join/shared_invite/zt-1claqpebo-MnGnGoqCM9Do~40HqbSaww#/shared-invite/email)\n\n#### Potential Uses\n\n* Bias mitigation methods are employed to address bias in data and/or machine learning models and fairness metrics are needed to mathematically represent the fairness or bias levels of a ML model.\n  \n| Use                                                         | Description                                                                                                                                                                                                    |\n|:-------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| As a metric                                      | Quantify a measure of fairness (a.k.a a fairness metric) targeting a bias                                                                                                                                      |\n| Evaluate fairness                                            | Fairness metrics can be used to mathematically represent the fairness levels of a ML model. This can also be used to monitor a model.                                                                          |\n| Create parity on fairness                                    | Unlike model performance metrics (e.g., loss, accuracy, etc.), fairness metrics affect your final model selection by creating parity (i.e., equality) on appropriate fairness metrics before model deployment. |\n| Select most fair model                                       | Balance fairness with performance metrics when selecting the final model.                                                                                                                                      |\n| Apply methods to improve the fairness & performance tradeoff | Methods to improve the fairness by applying a.k.a bias mitigation methods                                                                                                                                      |\n\n<sub><b>Table 1:</b> The potential uses for fairness metrics and bias mitigation methods.\n</sub>\n\n<b>Note:</b> Parity is achieved when a fairness metric (such as the percent of positive predictions) have the same value across all levels of a sensitive attribute.  <i>Sensitive attributes</i> are attributes such as race, gender, age, and other patient attributes that are of primary concern when it comes to fairness, and are typically protected by law. \n  <br></br>\n\nThrough these steps we <b>safeguard against bias</b> by:\n> 1. Creating metrics targeting sources of bias to balance alongside our performance metrics in evaluation, model selection, and monitoring.\n> 2. Applying bias mitigation methods to improve fairness without compromising performance.\n <br></br>\n  \n</details>\n\n\n## EAI `EqualityML` Workflow\nWe have conducted extensive literature review and theoretical analysis on dozens of fairness metrics and mitigation methods. Theoretical properties of those fairness mitigation methods were analyzed to determine their suitability under various conditions to create our framework for a pre-processing workflow. \n\n| Pre-processing Workflow                                                  | Tool or Guidance provided                                                                                                                                                                                                               |\n|:-------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 1. Select Fairness Metric                                                | Use our [Fairness Metric Selection Questionnaire & Tree](https://github.com/EqualityAI/EqualityML/blob/main/Equality%20AI%20Fairness%20Metric%20Selection%20Questionnaire%20%26%20Tree.pdf) to determine appropriate fairness metric(s) |\n| 2. Data Preparation                                                      ||\n| 3. Fit Prediction Model                                                  ||\n| 4. Compute Model Results and Evaluate Fairness Metric                    | Use `EqualityML` method `fairness_metric` to evaluate the fairness of a model                                                                                                                                                           |\n| 5. Run Bias Mitigation                                                   | Use `EqualityML` method `bias_mitigation` to run various bias mitigation methods on your dataset                                                                                                                                        |\n| 6. Compute Model Results and Fairness Metric After Mitigation            | `fairness_metric` `bias_mitigation`                                                                                                                                                                                                     |\n| 7. Compare Model Results and Fairness Metric Before and After Mitigation | `fairness_metric` `bias_mitigation`                                                                                                                                                                                                     |\n\n<sub><b>Table 2:</b> The Equality AI recommended pre-processing workflow with tools and guidance made available per step.\n</sub> </br>\n\nWe recommend assessing the fairness of the same ML model after bias mitigation is applied. By comparing the predictions before and \nafter mitigation, we will be able to assess whether and to what extent the fairness can be improved. Furthermore, \nthe trade-offs between the accuracy and fairness of the machine learning model will be examined.\n\n> In-processing and Post-processing are still under development. Do you need this now? [Let us know!](https://equalityai.slack.com/join/shared_invite/zt-1claqpebo-MnGnGoqCM9Do~40HqbSaww#/shared-invite/email)\n\n## Guidance on selecting Fairness Metrics\nTo make fairness metric selection easy we have provided a few essential questions you must answer to identify the \nappropriate fairness metric for your use case. [Click here for the questionnaire](https://github.com/EqualityAI/EqualityML/blob/main/Equality%20AI%20Fairness%20Metric%20Selection%20Questionnaire%20%26%20Tree.pdf). Complete the answers to this questionnaire, then refer to the scoring guide to map your inputs to the desired metrics.\n\nAfter identifying the important fairness criteria, we recommend you attempt to use multiple bias mitigation strategies \nto try to optimize the efficiency-fairness tradeoff.</br>\n\n## `EqualityML` Installation\n\n## Python\nThe `EqualityML` python package can be installed from [PyPI](https://pypi.org/project/equalityml/).\n\n```bash\npip install equalityml\n```\n\n### Manual Installation\nClone the last version of this repository:\n```bash\nhttps://github.com/EqualityAI/EqualityML.git\n```\nIn the root directory of the project run the command:\n```bash\npip install -e '.[all]'\n```\n\n### Package Testing\nTo run the bunch of tests over the EqualityML package, dependencies shall be first installed before calling pytest.\n\n```sh\npip install -e '.[tests]'\npytest tests\n```\n### Quick Tour\n\nCheck out the example below to see how EqualityML can be used to assess fairness metrics and mitigate unwanted bias in \nthe dataset.\n\n```python\nfrom sklearn.linear_model import LogisticRegression\nfrom equalityml import FAIR\nimport numpy as np\nimport pandas as pd\n\n# Sample unfair dataset\nrandom_col = np.random.normal(size=30)\nsex_col = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n           0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nweight_col = [80, 75, 70, 65, 60, 85, 70, 75, 70, 70, 70, 80, 70, 70, 70, 80, 75, 70, 65, 70,\n              70, 75, 80, 75, 75, 70, 65, 70, 75, 65]\ntarget_col = [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n              0, 1, 0, 1, 1, 0, 0, 1, 1, 0]\ntraining_data = pd.DataFrame({\"random\": random_col, \"sex\": sex_col, \"weight\": weight_col, \n                              \"Y\": target_col})\n    \n# Train a machine learning model (for example LogisticRegression)\nml_model = LogisticRegression()\nml_model.fit(training_data.drop(columns=\"Y\"), training_data[\"Y\"])\n\n# Instantiate a FAIR object\nfair_obj = FAIR(ml_model=ml_model, \n                training_data=training_data,\n                target_variable=\"Y\",\n                protected_variable=\"sex\", \n                privileged_class=1)\n\n# Evaluate a fairness metric (for example statistical parity ratio)\nmetric_name = 'statistical_parity_ratio'\nfairness_metric = fair_obj.fairness_metric(metric_name)\n\n# In case the model is unfair in terms of checked fairness metric (value is not close to 1), \n# EqualityML provides a range of methods to try to mitigate bias in Machine Learning models. \n# For example, we can use 'resampling' to perform mitigation on training dataset.\n\nmitigation_method = \"resampling\"\nmitigation_result = fair_obj.bias_mitigation(mitigation_method)\n\n# Now we can re-train the machine learning model based on that mitigated data and \n# evaluate again the fairness metric\nmitigated_data = mitigation_result['training_data']\nml_model.fit(mitigated_data.drop(columns=\"Y\"), mitigated_data[\"Y\"])\n\nfair_obj.update_classifier(ml_model)\nnew_fairness_metric = fair_obj.fairness_metric(metric_name)\n\n# print the unmitigated fairness metric\nprint(f\"Unmitigated fairness metric = {fairness_metric}\")\n\n# print the mitigated fairness metric\nprint(f\"Mitigated fairness metric = {new_fairness_metric}\")\n\n# All available fairness metrics and bias mitigation can be printed calling the methods:\nfair_obj.print_fairness_metrics()\nfair_obj.print_bias_mitigation_methods()\n```\n\n## R\nThe `EqualityML` R package can be installed from [CRAN](https://cran.r-project.org/web/packages/equalityml/index.html):\n```\ninstall.packages(\"equalityml\")\n```\nor developer version from GitHub:\n```\ndevtools::install_github(\"EqualityAI/equalityml/equalityml-r\")\n```\nFor more details regarding the R package, please check [here](https://github.com/EqualityAI/EqualityML/tree/main/equalityml-r). \n\n\n## Responsible AI Takes a Community\nThe connections and trade-offs between fairness, explainability, and privacy require a holistic approach to Responsible \nAI development in the machine learning community. We are starting with the principle of fairness and working towards a \nsolution that incorporates multiple aspects of Responsible AI for data scientists and healthcare professionals. We have \nmuch more in the works, and we want to know—what do you need? Do you have a Responsible AI challenge you need to solve? \n[Drop us a line and let’s see how we can help!](https://equalityai.slack.com/join/shared_invite/zt-1claqpebo-MnGnGoqCM9Do~40HqbSaww#/shared-invite/email)\n\n## Contributing to the project\nEquality AI uses both GitHub and Slack to manage our open source community. To participate:\n\n1. Join the Slack community (https://equalityai.com/slack)\n    + Introduce yourself in the #Introductions channel. We're all friendly people!\n2. Check out the [CONTRIBUTING](https://github.com/EqualityAI/EqualityML/blob/main/CONTRIBUTING.md) file to learn how \nto contribute to our project, report bugs, or make feature requests.\n3. Try out the [`EqualityML`](https://github.com/EqualityAI/EqualityML)\n    + Hit the top right \"star\" button on GitHub to show your love!\n    + Follow the recipe above to use the code. \n4. Provide feedback on your experience using the [GitHub discussions](https://github.com/EqualityAI/EqualityML/discussions) \nor the [Slack #support](https://equalityai.slack.com/archives/C03HF7G4N0Y) channel\n    + For any questions or problems, send a message on Slack, or send an email to support@equalityai.com.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://equalityai.com",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "equalityml",
    "package_url": "https://pypi.org/project/equalityml/",
    "platform": null,
    "project_url": "https://pypi.org/project/equalityml/",
    "project_urls": {
      "GitHub": "https://github.com/EqualityAI/EqualityML",
      "Homepage": "https://equalityai.com",
      "Manifesto": "https://equalityai.com/community/#manifesto",
      "Slack": "https://equalityai.slack.com/ssb/redirect#/shared-invite/email",
      "Website": "https://equalityai.com"
    },
    "release_url": "https://pypi.org/project/equalityml/0.1.0a1/",
    "requires_dist": [
      "BlackBoxAuditing",
      "aif360 (>=0.5.0)",
      "dalex (>=1.5.0)",
      "fairlearn (>=0.7.0)",
      "pandas (>=1.2.5)",
      "numpy (>=1.20.3)",
      "scikit-learn (>=0.22.1)",
      "sphinx ; extra == 'doc'",
      "pytest (>=3.5.0) ; extra == 'tests'",
      "pytest-cov (>=2.8.1) ; extra == 'tests'"
    ],
    "requires_python": ">=3.7",
    "summary": "Algorithms for evaluating fairness metrics and mitigating unfairness in supervised machine learning",
    "version": "0.1.0a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16282546,
  "releases": {
    "0.1.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc47acd32ef432e498884d711c728530c1d89f7ba965e439b89c843c99107185",
          "md5": "96579df15c853c8335aafddc98788635",
          "sha256": "16687a039a61cda375cd35c10c96e15218c0df6877255670e5471c98c7fb0fe9"
        },
        "downloads": -1,
        "filename": "equalityml-0.1.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "96579df15c853c8335aafddc98788635",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18725,
        "upload_time": "2023-01-02T21:25:51",
        "upload_time_iso_8601": "2023-01-02T21:25:51.332339Z",
        "url": "https://files.pythonhosted.org/packages/dc/47/acd32ef432e498884d711c728530c1d89f7ba965e439b89c843c99107185/equalityml-0.1.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b30474fc10d6636476e8081c65f6846f900a88400d714d1f9253d7babab1ffd",
          "md5": "48e29c3d55228ff59c1b29059d7bbebf",
          "sha256": "44ee017a175306ae84c983a44cf665d81092073c66cdf6e0545a24a84ecf486c"
        },
        "downloads": -1,
        "filename": "equalityml-0.1.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "48e29c3d55228ff59c1b29059d7bbebf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26390,
        "upload_time": "2023-01-02T21:25:53",
        "upload_time_iso_8601": "2023-01-02T21:25:53.321764Z",
        "url": "https://files.pythonhosted.org/packages/5b/30/474fc10d6636476e8081c65f6846f900a88400d714d1f9253d7babab1ffd/equalityml-0.1.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc47acd32ef432e498884d711c728530c1d89f7ba965e439b89c843c99107185",
        "md5": "96579df15c853c8335aafddc98788635",
        "sha256": "16687a039a61cda375cd35c10c96e15218c0df6877255670e5471c98c7fb0fe9"
      },
      "downloads": -1,
      "filename": "equalityml-0.1.0a1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "96579df15c853c8335aafddc98788635",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 18725,
      "upload_time": "2023-01-02T21:25:51",
      "upload_time_iso_8601": "2023-01-02T21:25:51.332339Z",
      "url": "https://files.pythonhosted.org/packages/dc/47/acd32ef432e498884d711c728530c1d89f7ba965e439b89c843c99107185/equalityml-0.1.0a1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5b30474fc10d6636476e8081c65f6846f900a88400d714d1f9253d7babab1ffd",
        "md5": "48e29c3d55228ff59c1b29059d7bbebf",
        "sha256": "44ee017a175306ae84c983a44cf665d81092073c66cdf6e0545a24a84ecf486c"
      },
      "downloads": -1,
      "filename": "equalityml-0.1.0a1.tar.gz",
      "has_sig": false,
      "md5_digest": "48e29c3d55228ff59c1b29059d7bbebf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26390,
      "upload_time": "2023-01-02T21:25:53",
      "upload_time_iso_8601": "2023-01-02T21:25:53.321764Z",
      "url": "https://files.pythonhosted.org/packages/5b/30/474fc10d6636476e8081c65f6846f900a88400d714d1f9253d7babab1ffd/equalityml-0.1.0a1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}