{
  "info": {
    "author": "Peter Varney, OpenWayside",
    "author_email": "pyDictStore@OpenWayside.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![GitHub release](https://img.shields.io/github/release/OpenWayside/pyDictStore.svg?label=GitHub%20release)](https://github.com/OpenWayside/pyDictStore/releases)\n![PyPI](https://img.shields.io/pypi/v/pyDictStore)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pyDictStore)\n![GitHub](https://img.shields.io/github/license/OpenWayside/pyDictStore)\n\n# What is pyDictStore\n\npyDictStore adds automated dictionary storage to properties eliminating the need for code bodies, property getters and setters. It also provides a property change event.\n\n\n# Minimum usage\nThe minimum usage of this library requires you to add the @storage decorator to your class. This will automatically wrap your properties with the auto storage capabilities. The default value applied to any property is None. To override this, you will need to apply the @default decorator to your propperty's getter. \n```python\n@storage\nclass ExampleClass(): \n    @property\n    def exampleProperty(self): ...\n    @exampleProperty.setter\n    def exampleProperty(self,value): ...\n```\n\n## ...with default value\n```python\n@storage\nclass ExampleClass(): \n    @property\n    @default(10)\n    def exampleProperty(self) -> int: ...\n    @exampleProperty.setter\n    def exampleProperty(self,value) -> None: ...\n```\n# Overriding the getter and setter\n\n## getter\n\nIf the getter returns a value other than None it will override the value pulled by pyDictStore. The example below will result in the property always returning 12.\n\n```python\n@storage\nclass ExampleClass(): \n    @property\n    @default(10)\n    def exampleProperty(self) -> int: \n        return 12\n```\n\n## setter\n\nOverriding the setter allows you to modify the value that is saved into storage. This is helpful if you need to perform logic against the value being passed in or if you want to force the storage type; such as parsing an integer from a string or storing a Boolean value as an integer. To do this requires ignoring normal setter conventions by using a return statement.\n\n> :warning: **Warning:** Overriding the output does not work if you return a value of None.\n\n```python\n@storage\nclass ExampleClass():\n    @property \n    @default(10)\n    def exampleProperty(self) -> int: ...\n    @exampleProperty.setter\n    def exampleProperty(self,value) -> None: \n        return value * 3\n```\n\n# Event Handling\nWhen the setter of a property is called it will raise a PropertyChanged Event within your class. This provides you the instance of the class that raised the event, the name of the property, the previous value, and the new value.\n\n> :bulb: **Note:** When the default value is instantiated the PropertyChanged event does not fire.\n\n## ...event handler within class\n\n```python\n@storage\nclass ExampleClass(): \n    def __init__(self) -> None:\n        self.PropertyChanged += self.onPropertyChanged\n        \n    @staticmethod\n    def onPropertyChanged(sender, name:str, oldValue, newValue):\n        ... #Your Custom Action here\n        \n    @property\n    @default(10)\n    def exampleProperty(self) -> int: ...\n    @exampleProperty.setter\n    def exampleProperty(self,value) -> None: ...\n```\n\n## ...event handler external from class\n\n```python\ndef onPropertyChanged(sender, name:str, oldValue, newValue):\n    ... #Your Custom Action here\n\n@storage\nclass ExampleClass(): \n    def __init__(self) -> None:\n        self.PropertyChanged += onPropertyChanged\n              \n    @property\n    @default(10)\n    def exampleProperty(self) -> int: ...\n    @exampleProperty.setter\n    def exampleProperty(self,value) -> None: ...\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://OpenWayside.org",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyDictStore",
    "package_url": "https://pypi.org/project/pyDictStore/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyDictStore/",
    "project_urls": {
      "Documentation": "https://openwayside.org/rtm/pyDictStore/",
      "Homepage": "https://OpenWayside.org",
      "Issues": "https://github.com/OpenWayside/pyDictStore/issues",
      "Source": "https://github.com/OpenWayside/pyDictStore"
    },
    "release_url": "https://pypi.org/project/pyDictStore/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "pyDictStore adds automated dictionary storage to properties eliminating the need for code bodies, property getters and setters. It also provides a property change event.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14671453,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a851a530a12e3671b022191ac49d0ff8cddf3740041d843ed962e167ed00c975",
          "md5": "82cc9a479e1f48fee0e10455ee73a817",
          "sha256": "2a0e7767dad3f89da523c9ea8a5b33bc3b2cd0597b4e29541212f6165b66f070"
        },
        "downloads": -1,
        "filename": "pyDictStore-1.0.0-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "82cc9a479e1f48fee0e10455ee73a817",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 5037,
        "upload_time": "2022-08-06T00:55:05",
        "upload_time_iso_8601": "2022-08-06T00:55:05.073476Z",
        "url": "https://files.pythonhosted.org/packages/a8/51/a530a12e3671b022191ac49d0ff8cddf3740041d843ed962e167ed00c975/pyDictStore-1.0.0-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fca03f32be34c94329b6182080337a0e2d603ac9f99319be0861a66698647d3",
          "md5": "c41be7c3847822fc9c57c0e9f41610de",
          "sha256": "cc9435c7c42951542d7dea6c37f6ddc71ac9eee1787d8f9eae23905452744c09"
        },
        "downloads": -1,
        "filename": "pyDictStore-1.0.0-1.tar.gz",
        "has_sig": false,
        "md5_digest": "c41be7c3847822fc9c57c0e9f41610de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 4889,
        "upload_time": "2022-08-06T00:55:06",
        "upload_time_iso_8601": "2022-08-06T00:55:06.220447Z",
        "url": "https://files.pythonhosted.org/packages/4f/ca/03f32be34c94329b6182080337a0e2d603ac9f99319be0861a66698647d3/pyDictStore-1.0.0-1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a851a530a12e3671b022191ac49d0ff8cddf3740041d843ed962e167ed00c975",
        "md5": "82cc9a479e1f48fee0e10455ee73a817",
        "sha256": "2a0e7767dad3f89da523c9ea8a5b33bc3b2cd0597b4e29541212f6165b66f070"
      },
      "downloads": -1,
      "filename": "pyDictStore-1.0.0-1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "82cc9a479e1f48fee0e10455ee73a817",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 5037,
      "upload_time": "2022-08-06T00:55:05",
      "upload_time_iso_8601": "2022-08-06T00:55:05.073476Z",
      "url": "https://files.pythonhosted.org/packages/a8/51/a530a12e3671b022191ac49d0ff8cddf3740041d843ed962e167ed00c975/pyDictStore-1.0.0-1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4fca03f32be34c94329b6182080337a0e2d603ac9f99319be0861a66698647d3",
        "md5": "c41be7c3847822fc9c57c0e9f41610de",
        "sha256": "cc9435c7c42951542d7dea6c37f6ddc71ac9eee1787d8f9eae23905452744c09"
      },
      "downloads": -1,
      "filename": "pyDictStore-1.0.0-1.tar.gz",
      "has_sig": false,
      "md5_digest": "c41be7c3847822fc9c57c0e9f41610de",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 4889,
      "upload_time": "2022-08-06T00:55:06",
      "upload_time_iso_8601": "2022-08-06T00:55:06.220447Z",
      "url": "https://files.pythonhosted.org/packages/4f/ca/03f32be34c94329b6182080337a0e2d603ac9f99319be0861a66698647d3/pyDictStore-1.0.0-1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}