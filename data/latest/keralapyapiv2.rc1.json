{
  "info": {
    "author": "Mario",
    "author_email": "KeralaPyApi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Communications",
      "Topic :: Communications :: Chat",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<b>Telegram MTProto API Framework for Python</b>\n    <br>\n    <a href=\"https://docs.pyrogram.org\">\n        Documentation\n    </a>\n    •\n    <a href=\"https://github.com/pyrogram/pyrogram/releases\">\n        Releases\n    </a>\n    •\n    <a href=\"https://t.me/Pyrogram\">\n        Community\n    </a>\n</p>\n\n## Program\n\n``` python\nfrom pyrogram import Client, Filters\n\napp = Client(\"my_account\")\n\n\n@app.on_message(Filters.private)\ndef hello(client, message):\n    message.reply_text(\"Hello {}\".format(message.from_user.first_name))\n\n\napp.run()\n```\n\n**Pyrogram** is an elegant, easy-to-use [Telegram](https://telegram.org/) client library and framework written from the\nground up in Python and C. It enables you to easily create custom apps for both user and bot identities (bot API alternative) via the [MTProto API](https://core.telegram.org/api#telegram-api).\n\n> [Program in fully-asynchronous mode is also available »](https://github.com/pyrogram/pyrogram/issues/181)\n>\n> [Working PoC of Telegram voice calls using Pyrogram »](https://github.com/bakatrouble/pytgvoip)\n\n### Features\n\n- **Easy**: You can install Pyrogram with pip and start building your applications right away.\n- **Elegant**: Low-level details are abstracted and re-presented in a much nicer and easier way.\n- **Fast**: Crypto parts are boosted up by [TgCrypto](https://github.com/pyrogram/tgcrypto), a high-performance library\n  written in pure C.\n- **Documented**: Pyrogram API methods, types and public interfaces are well documented.\n- **Type-hinted**: Exposed Pyrogram types and method parameters are all type-hinted.\n- **Updated**, to make use of the latest Telegram API version and features.\n- **Bot API-like**: Similar to the Bot API in its simplicity, but much more powerful and detailed.\n- **Pluggable**: The Smart Plugin system allows to write components with minimal boilerplate code.\n- **Comprehensive**: Execute any advanced action an official client is able to do, and even more.\n\n### Requirements\n\n- Python 3.5.3 or higher.\n- A [Telegram API key](https://docs.pyrogram.org/intro/setup#api-keys).\n\n### Installing\n\n``` bash\npip3 install KeralaPyApiV2\n```\n\n### Resources\n\n- The Docs contain lots of resources to help you getting started with Pyrogram: https://docs.pyrogram.org.\n- Reading [Examples in this repository](https://github.com/pyrogram/pyrogram/tree/master/examples) is also a good way\n  for learning how Pyrogram works.\n- Seeking extra help? Don't be shy, come join and ask our [Community](https://t.me/PyrogramChat)!\n- For other requests you can send an [Email](mailto:dan@pyrogram.org) or a [Message](https://t.me/haskell).\n\n### Contributing\n\nPyrogram is brand new, and **you are welcome to try it and help make it even better** by either submitting pull\nrequests or reporting issues/bugs as well as suggesting best practices, ideas, enhancements on both code\nand documentation. Any help is appreciated!\n\n### Copyright & License\n\n- Copyright (C) 2020 KeralaPyApi\n- Licensed under the terms of the [GNU Lesser General Public License v3 or later (LGPLv3+)](COPYING.lesser)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/KeralaPyApi/KeralaPyApi/releases/latest",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KeralaPyApi",
    "keywords": "telegram chat messenger mtproto api client library python",
    "license": "LGPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "KeralaPyApiV2",
    "package_url": "https://pypi.org/project/KeralaPyApiV2/",
    "platform": "",
    "project_url": "https://pypi.org/project/KeralaPyApiV2/",
    "project_urls": {
      "Community": "https://t.me/Pyrogram",
      "Documentation": "https://docs.pyrogram.org",
      "Download": "https://github.com/KeralaPyApi/KeralaPyApi/releases/latest",
      "Homepage": "https://github.com/KeralaPyApi",
      "Source": "https://github.com/pyrogram/pyrogram",
      "Tracker": "https://github.com/pyrogram/pyrogram/issues"
    },
    "release_url": "https://pypi.org/project/KeralaPyApiV2/2.0.2020/",
    "requires_dist": null,
    "requires_python": "~=3.5",
    "summary": "Telegram MTProto API Client Library and Framework for Python",
    "version": "2.0.2020",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6549909,
  "releases": {
    "2.0.2020": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cacc322268fff13f9ad21a34bd6ceec874ea27aaff24910904d30bca5e21834e",
          "md5": "c3683ba027f6f8545e245979cc0743bc",
          "sha256": "c76daf6c5727fa84b6fd736cb013f510404443fc6682b964a25df4bb6654fc01"
        },
        "downloads": -1,
        "filename": "KeralaPyApiV2-2.0.2020.tar.gz",
        "has_sig": false,
        "md5_digest": "c3683ba027f6f8545e245979cc0743bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 312863,
        "upload_time": "2020-01-31T15:04:29",
        "upload_time_iso_8601": "2020-01-31T15:04:29.635179Z",
        "url": "https://files.pythonhosted.org/packages/ca/cc/322268fff13f9ad21a34bd6ceec874ea27aaff24910904d30bca5e21834e/KeralaPyApiV2-2.0.2020.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cacc322268fff13f9ad21a34bd6ceec874ea27aaff24910904d30bca5e21834e",
        "md5": "c3683ba027f6f8545e245979cc0743bc",
        "sha256": "c76daf6c5727fa84b6fd736cb013f510404443fc6682b964a25df4bb6654fc01"
      },
      "downloads": -1,
      "filename": "KeralaPyApiV2-2.0.2020.tar.gz",
      "has_sig": false,
      "md5_digest": "c3683ba027f6f8545e245979cc0743bc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.5",
      "size": 312863,
      "upload_time": "2020-01-31T15:04:29",
      "upload_time_iso_8601": "2020-01-31T15:04:29.635179Z",
      "url": "https://files.pythonhosted.org/packages/ca/cc/322268fff13f9ad21a34bd6ceec874ea27aaff24910904d30bca5e21834e/KeralaPyApiV2-2.0.2020.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}