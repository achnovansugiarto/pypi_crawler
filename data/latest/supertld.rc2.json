{
  "info": {
    "author": "Yu Wei Zhang",
    "author_email": "ywzhang224@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SuperTLD\r\n\r\n![Flow_chart_of_SuperTLD](overview.png)\r\n\r\nSuperTLD is a novel method proposed to infer the hierarchical structure of TAD-like domains (TLDs) from RNA-associated interactions (RAIs). \r\nSuperTLD comprises the data imputation and hierarchical domain detection. \r\nSuperTLD supports RAI's asymmetric or symmetric contact map as input. \r\nUsers can test the TAD inference potentiality from the integration of Hi-C and RAIs via SuperTAD.   \r\nWe also provide the scripts of evaluation performed in the paper.\r\n\r\n## Requirements\r\n* python3\r\n* numpy\r\n* pandas\r\n* scipy\r\n* SuperTAD v1.2 (https://github.com/deepomicslab/SuperTAD)\r\n\r\n## Installation\r\nRun the following from a terminal\r\n```angular2html\r\npip install supertld\r\n```\r\n\r\n## Instructions\r\nIn this section, we show how to run SuperTLD with the example data.\r\n### Data preparation \r\nThe example data can be downloaded from the [zenode repository](https://zenodo.org/record/5501849#.YT3xwI4zaUk).\r\nDownload the example_data.zip and uncompress the example_data.zip into the directory of `./data`.\r\n\r\n### Run SuperTLD\r\n\r\n```python\r\nimport supertld\r\nimport numpy as np\r\n\r\n# load the RAI contact map and declare its chromosome and resolution\r\nraiMap = np.loadtxt(\"./data/iMARGI_chr22_RAI_matrix_100kb.txt\")\r\nraiChrom=\"chr22\"\r\nraiResolution=100000\r\noutputFile = \"./data/iMARGI_chr22_result.txt\"   # declare the path of output file\r\n\r\n# create a SuperTLD object \r\nmodel = supertld.SupertadSparse(chrom=raiChrom, resolution=raiResolution, supertad=<executing_path_of_SuperTAD>)\r\n\r\n# run SuperTLD on RAI contact map to infer TLDs\r\n_, TLDresult = model.pipeline(inputMatrix=raiMap, outpath=outputFile)\r\n\r\n# perform evaluation\r\n# load Hi-C, TF ChIP-seq, and histone ChIP-seq data\r\nhicMap = \"./data/HEK293T_chr22_100KR_matrix.txt\"    \r\nbed = [\"./data/CTCF_ENCFF206AQV.bed\"]   \r\nbedgraph = [\"./data/H3K27ME3_hg38_GSM3907592.bedgraph\", \"./data/H3K36me3_hg38_ENCSR910LIE.bedgraph\"]\r\n# create the evaluate object\r\nevaluateModel = supertld.Evaluate(chrom=raiChrom, resolution=raiResolution, hicPath=hicMap, bed=bed, bedgraph=bedgraph)\r\n# run the evaluation \r\nevaluateResult = evaluateModel.run(resultList=[outputFile], outPath=outputFile+\".evaluateResult.txt\")\r\n\r\n\r\n# run SuperTLD on integration of RAIs and Hi-C\r\n# test integrated data where alpha ranges from 0 to 1\r\nmatrixLists, TLDresults = model.pipeline(inputMatrix=raiMap, outpath=outputFile, hic=hicMap, alpha=None)\r\n\r\n# run evaluation on all the integrated data\r\nevaluateResult = evaluateModel.run(resultList=matrixLists, outPath=outputFile+\".allAlpha_evaluateResult.txt\")\r\n```\r\n### Parameters\r\n```python\r\nmodel = SupertadSparse(chrom=\"chr1\", resolution=100000, supertad=None)\r\n```\r\n* chrom: string, required, default: chr1\\\r\nThe chromosome of the input RAI interaction map.\r\n* resolution: int, required, default: 100000\\\r\nThe bin resolution of the input RAI interaction map.\r\n* supertad: string, required\\\r\nThe executing path of SuperTAD.\r\n```python\r\nmodel.pipeline(inputMatrix=None, outpath=\"./norm_matrix.txt\", hic=None, alpha=None)\r\n```\r\n* inputMatrix: 2darray, required\\\r\nThe RAI interaction map.\r\n* outpath: string, optional, default: \"./norm_matrix.txt\"\\\r\nThe output path of SuperTLD.\r\n* hic: string, optional\\\r\nIf the file path of Hi-C contact map is given, perform the integration of RAI and HI-C.\r\n* alpha: float, optional, default: None\r\nIf hic parameter is given, alpha is needed to control the integration. User can provide a value ranging from 0 to 1. \r\nThe default None gives all the integration result (set alpha from 0 to 1 by 0.05).\r\n```python\r\nevaluateModel = Evaluate(chrom=\"chr1\", resolution=100000, hicPath=None, bed=None, bedgraph=None)\r\n```\r\n* chrom: string, required, default: chr1\\\r\nThe chromosome of the result.\r\n* resolution: int, required, default: 100000\\\r\nThe bin resolution of the RAI interaction map.\r\n* hicPath: string, required\\\r\nThe path of corresponding Hi-C contact map.\r\n* bed: list, optional\\\r\nThe list of TF ChIP-seq data (.bed).\r\n* bedgraph: list, optional\\\r\nThe list of H3K27me3/H3K36me3 ChIP-seq data (.bedgraph)\r\n```python\r\nevaluateModel(resultList=None, outPath=\"./\")\r\n```\r\n* resultList: list, required\\\r\nThe list of result matrix.\r\n* outPath: string, optional, default: \"./\"\\\r\nThe output path of evaluation result.\r\n\r\nThe result of inferred TLDs are suffixed with `.multi2D_AllH2_sparse.tsv`.  \r\nFor the evaluation result, the first row is the result of TLDs, and the second row is the result of TLDs.\r\nThe first column is the PCC of contact map (compared with Hi-C), the second column is the PCC of distance decay, \r\nthe third and fourth column are OR and NMI respectively,\r\nthe fifth and sixth are the CTCF fold change and its pvalue, and the seventh column is the percentage of domains enriched in H3K27me3/H3K36me3 marks.\r\n\r\n\r\n## Contact\r\nFeel free to open an issue in Github or contact `yuwzhang7-c@my.cityu.edu.hk` if you have any problem in using SuperTLD.\r\n\r\n## License\r\nThis project is licensed under the MIT License - see the LICENSE.md file for details.\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deepomicslab/SuperTLD",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "supertld",
    "package_url": "https://pypi.org/project/supertld/",
    "platform": null,
    "project_url": "https://pypi.org/project/supertld/",
    "project_urls": {
      "Homepage": "https://github.com/deepomicslab/SuperTLD"
    },
    "release_url": "https://pypi.org/project/supertld/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "SuperTLD: Detecting TAD-like domains from RNA-associated interactions",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13162254,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6a3d3471f064d434c3cf57de0a9c82dc46be1710e3e6b9ac8e626a1e47568f6",
          "md5": "8191c62005b0abc4dbdc1a94dce7ad58",
          "sha256": "d16220cbf5bea44bfea0e9d1245a27a425e05ba8a3350c8eb5aaad496c3d48cf"
        },
        "downloads": -1,
        "filename": "supertld-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8191c62005b0abc4dbdc1a94dce7ad58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24503,
        "upload_time": "2022-03-13T09:59:55",
        "upload_time_iso_8601": "2022-03-13T09:59:55.324531Z",
        "url": "https://files.pythonhosted.org/packages/d6/a3/d3471f064d434c3cf57de0a9c82dc46be1710e3e6b9ac8e626a1e47568f6/supertld-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff6cd6d6ac976ce661766d01115535ee202abb646861c4e7511cceb40770581f",
          "md5": "c61b53ac384ddea668a87b828f113c14",
          "sha256": "9aa62c58957d309b63dcd78793710dc5c2bb005b63b3dfe16e70066c98d8361c"
        },
        "downloads": -1,
        "filename": "supertld-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c61b53ac384ddea668a87b828f113c14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33965,
        "upload_time": "2022-03-13T13:14:09",
        "upload_time_iso_8601": "2022-03-13T13:14:09.566402Z",
        "url": "https://files.pythonhosted.org/packages/ff/6c/d6d6ac976ce661766d01115535ee202abb646861c4e7511cceb40770581f/supertld-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff6cd6d6ac976ce661766d01115535ee202abb646861c4e7511cceb40770581f",
        "md5": "c61b53ac384ddea668a87b828f113c14",
        "sha256": "9aa62c58957d309b63dcd78793710dc5c2bb005b63b3dfe16e70066c98d8361c"
      },
      "downloads": -1,
      "filename": "supertld-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c61b53ac384ddea668a87b828f113c14",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 33965,
      "upload_time": "2022-03-13T13:14:09",
      "upload_time_iso_8601": "2022-03-13T13:14:09.566402Z",
      "url": "https://files.pythonhosted.org/packages/ff/6c/d6d6ac976ce661766d01115535ee202abb646861c4e7511cceb40770581f/supertld-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}