{
  "info": {
    "author": "",
    "author_email": "Bowen Feng <857514.leofeng@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Fast Async\n\n![Publish to PyPi](https://github.com/thebowenfeng/FastAsync/actions/workflows/build_and_dist.yml/badge.svg)\n\nA thread based, asynchronous programming framework built for Python.\nDesigned and optimized for speed. \n\nAsyncio, the go-to asynchronous programming framework for Python, uses\na single-threaded event loop to achieve concurrency. Although this prevents\nunnecessary computational overheads and race conditions, it is inherently not\nas fast as threads (even with inefficiencies brought along with GIL). In some\nscenarios where speed is of utmost importance and where computational resources\nare abundant, then it makes sense to use a multi-threading approach to concurrency.\n\nFast Async is a high-level API for Python `threads`, providing users with the\nability to `await` asynchronous code, and other features such as event-driven,\npubsub model (similar to Javascript's ```Promise.then()```). It aims to serve as\nan alternative to asyncio, for users who require faster execution speed.\n\n## Installation\n\nRun ```pip install fast-async```\n\n#### Running locally\n\nClone the repository and make the working directory ```src/```. \n\nAlternatively, extract the folder ```src/fast_async```.\n\n\n## Benchmarks\n\n#### Scenario (```sample.py```)\n\nA long-running network request and an expensive operation is executed asynchronously\n\n#### Result\n\n```fast-async``` is, on average, almost 50% faster than ```asyncio``` due to\nasyncio executing the two tasks almost sequentially whilst fast-async leverages threads\nto execute them in parallel.\n\n## FAQ\n\n#### When to use fast-async\n\nFast-async should be used when execution speed is a higher priority.\nFor example, uploading each frame of a video stream to a remote server.\nFor cases where execution speed is not important, or when well-written code\nmake the speed differences negligible, asyncio is preferred.\n\n#### What about ThreadPoolExecutor?\n\n```ThreadPoolExecutor``` is a Python built-in class that offers some of the\nsame functionalities as fast-async, namely the ability to wait for tasks, and\nlimiting threads to conserve resources. However, fast-async is more feature-rich, \nsuch as the event-driven model (subscribers and callbacks) and various utility functions\nthat mirror certain useful functionalities from other languages (such as JavaScript). \nFast-async is designed to enhance developer experience when working with threads, by\noffering an easy-to-use interface and minimal pre-requisite knowledge.\n\n## Documentation\n\n### Decorators\n\n```@make_async```\n\nMake a function asynchronous. Functions that are decorated with \n```make_async``` will return an object of type ```AsyncTask```\n\nAside from its type, decorated functions can be treated as a normal function.\nThis means arguments can be passed in, much like a regular function.\n\nExceptions raised within the decorated function will be caught and re-thrown\nin the caller thread.\n\n#### Example:\n\n```python\nfrom fast_async import make_async\n\n@make_async\ndef hello(message):\n    print(\"hello world\")\n    return message\n\n# Awaits hello to finish executing\nreturn_val = hello(\"hello world\").wait()\n\n# Prints \"hello world\"\nprint(return_val)\n```\n\n### Classes\n\nPackage: fast_async.types.tasks\n\n```class AsyncTask(func: Callable, *args, **kwargs)```\n\n#### Attributes\n\n- func: A function or ```Callable```.\n- *args: Non-keyworded arguments for func\n- **kwargs: Keyworded arguments for func\n- status: Current status of func (pending, success, failure)\n- result: Return value of func\n- thread: ```Thread``` that func is being ran on\n- exception: First caught ```Exception``` raised in func\n\n#### Methods\n\n```run()```\n\nRuns ```func``` on a child thread, returns ```None```.\n\n```wait()```\n\nAwaits ```func``` to finish executing (blocks the caller thread),\nreturns the return value of ```func```.\n\n```subscribe(on_success: Callable, on_failure: Callable, blocks: bool = False)```\n\nSubscribes success and failure callbacks that is invoked when task is \nfinished executing or raised an exception. Optional blocks argument \ncontrols whether subscribe blocks the caller thread (by default subscribe does not block)\n\n### Functions\n\n```set_max_threads(num: int): None```\n\nSet the max number of threads available to be consumed by tasks.\nDefault is 64 threads. Useful when wanting to dynamically scale \nusage.\n\n#### Example:\n\n```python\nfrom fast_async import set_max_threads\n\nset_max_threads(3) # Only allows a maximum of 3 concurrent threads\n```\n\n```await_all(tasks: List[AsyncTask]): List```\n\nWaits for all tasks in the ```tasks``` list to finish executing, or\nwhen a task fails, then the function will immediately raise an exception and exit.\n\nReturns a list of results corresponding to the list of tasks provided.\n\nSimilar to JavaScript's ```Promise.all()```\n\n#### Example:\n\n```python\nfrom fast_async import make_async\nfrom fast_async.utils import await_all\n\n@make_async\ndef func1():\n    return 1\n\n@make_async\ndef func2():\n    return 2\n\nawait_all([func1(), func2()]) # Will return [1, 2]\n```\n\n```await_first(tasks: List[AsyncTask]): Any```\n\nWaits for the first task in ```tasks``` list to finish executing\nand immediately returns the result. If all tasks fail, then the first\nfailed task is raised in an exception.\n\nReturns the result of the first successful task.\n\nSimilar to JavaScript's ```Promise.race()```\n\n#### Example\n\n```python\nfrom fast_async import make_async\nfrom fast_async.utils import await_first\nimport time\n\n@make_async\ndef func1():\n    time.sleep(1)\n    return 1\n\n@make_async\ndef func2():\n    time.sleep(2)\n    return 2\n\nawait_first([func1(), func2()]) # Will return 1, because func1 finishes first\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "async,threads",
    "license": "The MIT License (MIT) Copyright © 2023  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fast-async",
    "package_url": "https://pypi.org/project/fast-async/",
    "platform": null,
    "project_url": "https://pypi.org/project/fast-async/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/fast-async/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Thread based async library for python",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16666697,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ace1d11b0d623048541eaa55ed1076c0e63c423eb7c04f5ffe221ceea8b24b43",
          "md5": "949660e455ab50159f1c60836ac88a62",
          "sha256": "7bee0c0a89a38a69762fc416cf02d4007812ab73395960f71061d59d22ea8507"
        },
        "downloads": -1,
        "filename": "fast_async-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "949660e455ab50159f1c60836ac88a62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4746,
        "upload_time": "2023-01-29T02:04:50",
        "upload_time_iso_8601": "2023-01-29T02:04:50.308389Z",
        "url": "https://files.pythonhosted.org/packages/ac/e1/d11b0d623048541eaa55ed1076c0e63c423eb7c04f5ffe221ceea8b24b43/fast_async-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "917ff8500b65e2c7482b99fbb7a199875aa099cef20863757a8ec21b1a4cb875",
          "md5": "6ecc0b8a0db075f2eb909e42c644b2fc",
          "sha256": "d2dbdbe8591eabcac5f730e600120ca76527a3568d25abb903b38bd6f1adca8b"
        },
        "downloads": -1,
        "filename": "fast-async-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6ecc0b8a0db075f2eb909e42c644b2fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3156,
        "upload_time": "2023-01-29T02:04:52",
        "upload_time_iso_8601": "2023-01-29T02:04:52.580879Z",
        "url": "https://files.pythonhosted.org/packages/91/7f/f8500b65e2c7482b99fbb7a199875aa099cef20863757a8ec21b1a4cb875/fast-async-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb24cbd65057b17a16140fd566fcb5fd113583bcc10738c25b4f79c4855fa80c",
          "md5": "efa5a762316370714bff3dac766f5fa4",
          "sha256": "954d3cca246917f9e33900f3de2bb15c7376c3115f3840ec3bdd8de305d6c4ba"
        },
        "downloads": -1,
        "filename": "fast_async-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "efa5a762316370714bff3dac766f5fa4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4703,
        "upload_time": "2023-01-29T02:19:21",
        "upload_time_iso_8601": "2023-01-29T02:19:21.794029Z",
        "url": "https://files.pythonhosted.org/packages/bb/24/cbd65057b17a16140fd566fcb5fd113583bcc10738c25b4f79c4855fa80c/fast_async-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e59144ee9181919eee4eae08a734ecd87e56a739085797eb6b5005d2b885ab84",
          "md5": "d99b805d494c7720357db28b71b2a3ca",
          "sha256": "84bceb925c6755d515306f9a8192a51e842d91f767dac9cf91dd2a51ce1142d2"
        },
        "downloads": -1,
        "filename": "fast-async-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d99b805d494c7720357db28b71b2a3ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3067,
        "upload_time": "2023-01-29T02:19:23",
        "upload_time_iso_8601": "2023-01-29T02:19:23.630494Z",
        "url": "https://files.pythonhosted.org/packages/e5/91/44ee9181919eee4eae08a734ecd87e56a739085797eb6b5005d2b885ab84/fast-async-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "998d01cc5744fe08924ce16bf7140fc6908dc5ce1513d96c9b32eb5f78cf4712",
          "md5": "f15217bf2fba93f3e46e8d03c861113e",
          "sha256": "0623bd8d38bd37d853ad228bef2a95483fbdacfbce2810ec5fd4cae296db39d2"
        },
        "downloads": -1,
        "filename": "fast_async-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f15217bf2fba93f3e46e8d03c861113e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5859,
        "upload_time": "2023-01-29T03:27:13",
        "upload_time_iso_8601": "2023-01-29T03:27:13.035501Z",
        "url": "https://files.pythonhosted.org/packages/99/8d/01cc5744fe08924ce16bf7140fc6908dc5ce1513d96c9b32eb5f78cf4712/fast_async-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3db5c03671e992067036e6fe00694debca40ad943d7c4de9b54ebab9dced4344",
          "md5": "48aad2111db97468bb7aff4324e94e0e",
          "sha256": "3b46d693109b570ea3534c1cda977f1470522ab6fbbf0c6241266ee0aed6e9d2"
        },
        "downloads": -1,
        "filename": "fast-async-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "48aad2111db97468bb7aff4324e94e0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4210,
        "upload_time": "2023-01-29T03:27:14",
        "upload_time_iso_8601": "2023-01-29T03:27:14.550631Z",
        "url": "https://files.pythonhosted.org/packages/3d/b5/c03671e992067036e6fe00694debca40ad943d7c4de9b54ebab9dced4344/fast-async-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ceb74cc2f393c5d4bad3ab30838474741808ca8bbb0c3117352c6070f30f4ab",
          "md5": "6021dd9a059683302df5e4110f3b533b",
          "sha256": "bd2bf82218c42f2e7eb7d72e04c1809f17b96de674a50d24d0758af43a9256fe"
        },
        "downloads": -1,
        "filename": "fast_async-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6021dd9a059683302df5e4110f3b533b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8379,
        "upload_time": "2023-02-02T14:16:45",
        "upload_time_iso_8601": "2023-02-02T14:16:45.606013Z",
        "url": "https://files.pythonhosted.org/packages/0c/eb/74cc2f393c5d4bad3ab30838474741808ca8bbb0c3117352c6070f30f4ab/fast_async-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54ed05b08eb6952b802270e910ba9949921b14ef3537d3eee345ed950a8f9c55",
          "md5": "7ec1e22e6183c69307ed7b07dde5870a",
          "sha256": "2fd90aca302a34377fd6687f8b2fba50a48563414957df1f7ec1915a00ad48b5"
        },
        "downloads": -1,
        "filename": "fast-async-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7ec1e22e6183c69307ed7b07dde5870a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9353,
        "upload_time": "2023-02-02T14:16:47",
        "upload_time_iso_8601": "2023-02-02T14:16:47.356116Z",
        "url": "https://files.pythonhosted.org/packages/54/ed/05b08eb6952b802270e910ba9949921b14ef3537d3eee345ed950a8f9c55/fast-async-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ceb74cc2f393c5d4bad3ab30838474741808ca8bbb0c3117352c6070f30f4ab",
        "md5": "6021dd9a059683302df5e4110f3b533b",
        "sha256": "bd2bf82218c42f2e7eb7d72e04c1809f17b96de674a50d24d0758af43a9256fe"
      },
      "downloads": -1,
      "filename": "fast_async-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6021dd9a059683302df5e4110f3b533b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8379,
      "upload_time": "2023-02-02T14:16:45",
      "upload_time_iso_8601": "2023-02-02T14:16:45.606013Z",
      "url": "https://files.pythonhosted.org/packages/0c/eb/74cc2f393c5d4bad3ab30838474741808ca8bbb0c3117352c6070f30f4ab/fast_async-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54ed05b08eb6952b802270e910ba9949921b14ef3537d3eee345ed950a8f9c55",
        "md5": "7ec1e22e6183c69307ed7b07dde5870a",
        "sha256": "2fd90aca302a34377fd6687f8b2fba50a48563414957df1f7ec1915a00ad48b5"
      },
      "downloads": -1,
      "filename": "fast-async-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7ec1e22e6183c69307ed7b07dde5870a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9353,
      "upload_time": "2023-02-02T14:16:47",
      "upload_time_iso_8601": "2023-02-02T14:16:47.356116Z",
      "url": "https://files.pythonhosted.org/packages/54/ed/05b08eb6952b802270e910ba9949921b14ef3537d3eee345ed950a8f9c55/fast-async-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}