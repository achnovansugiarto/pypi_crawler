{
  "info": {
    "author": "Towhee Team",
    "author_email": "towhee-team@zilliz.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Towhee Compiler\n\nTowhee compiler is a Python JIT compiler that speeds up AI-related codes by native code generation. The project is inspired by [Numba](https://github.com/numba/numba), [Pyjion](https://www.trypyjion.com) and [TorchDynamo](https://github.com/pytorch/torchdynamo). Towhee compiler uses a frame evaluation hook (see [PEP 523]: https://www.python.org/dev/peps/pep-0523/) to get the chance of compiling python bytecodes into native code.\n\n> The code is based on a forked version of torchdynamo, which extract `fx.Graph` by trace the execution of python code. But the goal of towhee compiler is `whole program code generation`, which also includes program that can not be represented by `fx.Graph`.\n\n## Install\n\n### Install with pip\n\n> If install towhee.compiler failed with pip, please install it from source.\n\n```bash\n$ pip install towhee.compiler\n```\n\n### Install from source code\n\n```bash\n$ git clone -b 0.1.0 https://github.com/towhee-io/towhee-compiler.git\n$ cd towhee-compiler && pip install -r requirements\n$ python3 setup.py develop\n```\n\n## Examples\n\n### Run with Torch Model\n\n- **Compile**\n\nTowhee compiler can speedup any models, for example, we just need to add `jit_compile` context to the `image_embedding` function.\n\n```python\nimport torch\nimport torchvision.models as models\nimport numpy as np\nimport towhee.compiler\nfrom towhee.compiler import jit_compile\n\n# towhee.compiler.config.debug = True\n\ntorch_model = models.resnet50()\ntorch_model = torch.nn.Sequential(*(list(torch_model.children())[:-1]))\ntorch_model = torch_model.eval()\n\ndef image_embedding(inputs):\n    imgs = torch.tensor(inputs)\n    embedding = torch_model(imgs).detach().numpy()\n    return embedding.reshape([2048])\n  \ninputs = np.random.randn(1, 3, 244, 244).astype(np.float32)\nwith jit_compile():\n    embeddings = image_embedding(inputs)\n```\n\n- **Timer**\n\nWe have compiled the model with the nebullvm backend (the default backend in towhee.compiler ), and we can define a Timer class to record the time spent.\n\n```python\nimport time\n\nclass Timer:\n    def __init__(self, name):\n        self._name = name\n\n    def __enter__(self):\n        self._start = time.time()\n        return self\n\n    def __exit__(self, *args):\n        self._interval = time.time() - self._start\n        print('%s: %.2fs'%(self._name, self._interval))\n```\n\nAnd we can see that the compiled function is more than 3 times faster.\n\n```python\nwith Timer('Image Embedding'):\n    embeddings = image_embedding(inputs)\n    \nwith Timer('Image Embedding with towhee compiler'), jit_compile():\n    embeddings_jit = image_embedding(inputs)\n```\n\nImage Embedding: 0.14s\n\nImage Embedding with towhee compiler: 0.04s\n\n### Run with Towhee\n\nTowhee supports setting JIT to use **towhee.compiler** to compile. \n\n- **Set JIT**\n\nFor example, we can add `set_jit('towhee')` in image embedding pipeline, then the following operator will be automatically compiled\n\n```python\nimport towhee\n\nembeddings_towhee = (\n    towhee.dc(['https://raw.githubusercontent.com/towhee-io/towhee/main/towhee_logo.png'])\n          .image_decode()\n          .set_jit('towhee')\n          .image_embedding.timm(model_name='resnet50')\n)\n```\n\n- **Timer**\n\nAnd we can make two towhee pipeline function to record the time cost.\n\n```python\ntowhee_func = (towhee.dummy_input()\n            .image_embedding.timm(model_name='resnet50')\n            .as_function()\n            )\n\ntowhee_func_jit = (towhee.dummy_input()\n            .set_jit('towhee')\n            .image_embedding.timm(model_name='resnet50')\n            .as_function()\n            )\n```\n\n```python\ndata = towhee.ops.image_decode()('https://raw.githubusercontent.com/towhee-io/towhee/main/towhee_logo.png')\n\nwith Timer('Towhee function'):\n    emb = towhee_func(data)\n    \nwith Timer('Towhee function with Compiler'):\n    emb_jit = towhee_func_jit(data)\n```\n\nTowhee function: 0.14s\n\nTowhee function with Compiler: 0.08s\n\n### Tests in Towhee Hub\n\nAccording to the README of Operator on [Towhee Hub](https://towhee.io/tasks/operator), we set jit to compile and speedup model , theresults are as follows:\n> 5.5 means that the performance after jit is 5.5 times, and N means no speedup or compilation failure. And more test results will be updated continuously. \n\n<table>\n   <tr>\n      <td><b>Field</b></td>\n      <td><b>Task</b></td>\n      <td><b>Operator</b></td>\n      <td><b>Speedup(CPU/GPU)</b></td>\n   </tr>\n   <tr>\n      <td rowspan=\"5\">Image</td>\n      <td rowspan=\"3\">Image Embedding</td>\n      <td><a href=\"https://towhee.io/image-embedding/timm\">image_embedding.timm</a></td>\n      <td>1.3/1.3</td>\n   </tr>\n   <tr>\n      <td><a href=\"https://towhee.io/image-embedding/data2vec\">image_embedding.data2vec</a></td>\n      <td>1.2/1.7</td>\n   </tr>\n   <tr>\n      <td><a href=\"https://towhee.io/image-embedding/swag\">image_embedding.swag</a></td>\n      <td>1.4/N</td>\n   </tr>\n   <tr>\n      <td rowspan=\"1\">Face Embedding</td>\n      <td><a href=\"https://towhee.io/face-embedding/inceptionresnetv1\">face_embedding.inceptionresnetv1</a></td>\n      <td>3.2/N</td>\n   </tr>\n   <tr>\n      <td rowspan=\"1\">Face Landmark</td>\n      <td><a href=\"https://towhee.io/face-landmark-detection/mobilefacenet\">face_landmark_detection.mobilefacenet</a></td>\n      <td>2.1/2.1</td>\n   </tr>\n   <tr>\n      <td rowspan=\"4\">NLP</td>\n      <td rowspan=\"4\">Text Embedding</td>\n      <td><a href=\"https://towhee.io/text-embedding/transformers\">text_embedding.transformers</a></td>\n      <td>2.6/N</td>\n   </tr>\n   <tr>\n      <td><a href=\"https://towhee.io/text-embedding/data2vec\">text_embedding.data2vec</a></td>\n      <td>1.8/N</td>\n   </tr>\n   <tr>\n      <td><a href=\"https://towhee.io/text-embedding/realm\">text_embedding.realm</a></td>\n      <td>5.5/1.9</td>\n   </tr>\n   <tr>\n      <td><a href=\"https://towhee.io/text-embedding/xlm_prophetnet\">text_embedding.xlm_prophetnet</a></td>\n      <td>2.1/2.8</td>\n   </tr>\n   <tr>\n      <td rowspan=\"3\">Audio</td>\n      <td rowspan=\"1\">Audio Classification</td>\n      <td><a href=\"https://towhee.io/audio-classification/panns\">audio_classification.panns</a></td>\n      <td>1.6/N</td>\n   </tr>\n   <tr>\n      <td rowspan=\"2\">Audio Embedding</td>\n      <td><a href=\"https://towhee.io/audio-embedding/vggish\">audio_embedding.vggish</a></td>\n      <td>1.5/N</td>\n   </tr>\n   <tr>\n      <td><a href=\"https://towhee.io/audio-embedding/data2vec\">audio_embedding.data2vec</a></td>\n      <td>1.5/N</td>\n   </tr>\n   <tr>\n      <td rowspan=\"3\">Multimodal</td>\n      <td rowspan=\"1\">Image Text</td>\n      <td><a href=\"https://towhee.io/image-text-embedding/blip\">image_text_embedding.blip</a></td>\n      <td>2.3/N</td>\n   </tr>\n   <tr>\n      <td rowspan=\"2\">Video Text</td>\n      <td><a href=\"https://towhee.io/video-text-embedding/bridge-former\">video_text_embedding.bridge_former(modality='text')</a></td>\n      <td>2.1/N</td>\n   </tr>\n   <tr>\n      <td><a href=\"https://towhee.io/video-text-embedding/frozen-in-time\">video_text_embedding.frozen_in_time(modality='text')</a></td>\n      <td>2.2/N</td>\n   </tr>\n</table>\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/towhee-io/towhee-compiler",
    "keywords": "pytorch machine learning compilers",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "towhee.compiler",
    "package_url": "https://pypi.org/project/towhee.compiler/",
    "platform": null,
    "project_url": "https://pypi.org/project/towhee.compiler/",
    "project_urls": {
      "Homepage": "https://github.com/towhee-io/towhee-compiler"
    },
    "release_url": "https://pypi.org/project/towhee.compiler/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7, <3.11",
    "summary": "A JIT compiler for accelerating AI programs written in python.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15089609,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b76ff77a5fea25604ab9d73656a29277e700420541fa85b183b8311024b1a7fd",
          "md5": "1b132639d436a476958aa9a87fae4bcb",
          "sha256": "370b795b05c2f1448ebba6182e5276930a7f79a422ce2c05a696efe6e71008a9"
        },
        "downloads": -1,
        "filename": "towhee.compiler-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1b132639d436a476958aa9a87fae4bcb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.11",
        "size": 127960,
        "upload_time": "2022-09-14T09:41:58",
        "upload_time_iso_8601": "2022-09-14T09:41:58.721878Z",
        "url": "https://files.pythonhosted.org/packages/b7/6f/f77a5fea25604ab9d73656a29277e700420541fa85b183b8311024b1a7fd/towhee.compiler-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b76ff77a5fea25604ab9d73656a29277e700420541fa85b183b8311024b1a7fd",
        "md5": "1b132639d436a476958aa9a87fae4bcb",
        "sha256": "370b795b05c2f1448ebba6182e5276930a7f79a422ce2c05a696efe6e71008a9"
      },
      "downloads": -1,
      "filename": "towhee.compiler-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1b132639d436a476958aa9a87fae4bcb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <3.11",
      "size": 127960,
      "upload_time": "2022-09-14T09:41:58",
      "upload_time_iso_8601": "2022-09-14T09:41:58.721878Z",
      "url": "https://files.pythonhosted.org/packages/b7/6f/f77a5fea25604ab9d73656a29277e700420541fa85b183b8311024b1a7fd/towhee.compiler-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}