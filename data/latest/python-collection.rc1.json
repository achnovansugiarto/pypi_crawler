{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Collection\n\nA utility data structure for python! This enpowers the power of dicts to the next level!<br/>\nThis module is inspired from discordjs collections\n\n## Links\n\n- [GitHub](https://github.com/Scientific-Guy/python-collection)\n- [Discord Support Server](https://discord.gg/FrduEZd)\n\n# Usage\n\n```py\nfrom Collection import Collection\n\nmycol = Collection()\n\nmycol.set('key', 'value')\nprint(mycol.get('key')) # Prints 'value'!\n```\n\n# Properties\n\n```py\ncol.dict # The data stored in dict\ncol.size # The size of the dict len(self.dict)\ncol.keys # Returns the array of keys of dict\ncol.values # Returns the array of values of dict\ncol.items # Returns the items of values of dict [(key, value), ...]\n```\n\n# Basic methods\n\n```py\ncol.set(key, value) # Sets a value to the dict\ncol.get(key) # Returns the value of the key, if no value then returns None\ncol.clear() # Similar to dict.clear()\ncol.has(key) # Returns a boolean wheater the key has its value!\n```\n\n# Utility methods\n\n```py\ncol.first() # Returns the first value of the dict\ncol.first(2) # Returns the array of values of the dict from first to second\ncol.last() # Returns the last value of the dict \ncol.last(2) # Returns the array of values of the dict from last to second last\ncol.random() # Returns a random value of the dict\ncol.random(2) # Returns a array of 2 random values of dict \n\n# Similar to the above functions there are methods to get the keys of it\n\ncol.firstkey() # Returns the first key of the dict\ncol.firstkey(2) # Returns the array of keys of the dict from first to second\ncol.lastkey() # Returns the last key of the dict \ncol.lastkey(2) # Returns the array of keys of the dict from last to second last\ncol.randomkey() # Returns a random key of the dict\ncol.randomkey(2) # Returns a array of 2 random keys of dict \n```\n\n# Extending a Collection\n\nExtend the collection\n\n```py\ncol1 = Collection()\ncol2 = Collection()\n\ncol1.set('key', 'value')\ncol2.extend(col1)\n\nprint(col2.get('key')) # Will return value\n```\n\nWill work with dicts too\n\n```py\ncol = Collection()\n\ncol.extend({ 'key': 'value' })\n\nprint(col.get('key')) # Will return value\n```\n\n# Cloning\n\nWill return a duplicate collection of the current collection\n\n```py\nprint(col.clone())\n```\n\n# To a object\n\nConvert the collection dict to object\n\n```py\ncol = Collection()\n\ncol.set('key', 'value')\nobj = col.to_object()\n\nprint(obj.key) # Returns value\n```\n\n# List methods\n\n### Find\n\nFind an item in the items of dict\n\n```py\ndef find(key, value):\n    return key == 'key'\n\nprint(col.find(find)) # Returns an item (key, value)\n```\n\n### Some\n\nVerifies if the callback satisfies any of the items in the dict\n\n```py\ndef some(key, value):\n    return key == 'key'\n\nprint(col.some(some)) # Returns boolean stating the existence of the key which satisfies the callback\n```\n\n### Find\n\nFind an item in the items of dict\n\n```py\ndef find(key, value):\n    return key == 'key'\n\nprint(col.find(find)) # Returns an item (key, value)\n```\n\n### FindMany\n\nFind array of items which satisfies the callback\n\n```py\ndef findmany(key, value):\n    return key == 'key'\n\nprint(col.findmany(findmany)) # Returns an array of items (key, value)\n```\n\n### Sweep\n\nRemoves the item of the dict which satisfies the callback\n\n```py\ndef sweep(key, value):\n    return key == 'key'\n\nprint(col.sweep(sweep)) # Returns nothing\n```\n\n### Filter\n\nSimilar to sweep but instead returns a new duplicate collection and filters it\n\n```py\ndef sweep(key, value):\n    return key == 'key'\n\nprint(col.sweep(sweep)) # Returns a new collection\n```\n\n### Sweep\n\nRemoves the item of the dict which satisfies the callback\n\n```py\ndef sweep(key, value):\n    return key == 'key'\n\nprint(col.sweep(sweep)) # Returns an item (key, value)\n```\n\n### Maps\n\nMaps the values of the dict and returns a duplicate collection\n\n```py\ncol.set(1, 5) # Current value = { 1: 5 }\n\ndef map(key, value):\n    return value + 1\n\nprint(col.map(map)) # Returns an collection\n# Collection with value { 1: 6 }\n```\n\n### ForEach\n\nWill run the function on each item\n\n```py\ndef foreach(key, value):\n    print(key)\n\nprint(col.foreach(foreach)) # Returns an item (key, value)\n```\n\n### Concat\n\nWill return a duplicate collection by concatting the both collection\n\n```py\ncol1 = Collection()\ncol2 = Collection()\n\ncol1.set('key', 'value')\nprint(col2.concat(col1)) # Will return value\n```\n\nWill work with dicts too\n\n```py\ncol = Collection()\n\nprint(col.extend({ 'key': 'value' })) # Will print value\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Scientific-Guy/python-collection",
    "keywords": "collection",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-collection",
    "package_url": "https://pypi.org/project/python-collection/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-collection/",
    "project_urls": {
      "Homepage": "https://github.com/Scientific-Guy/python-collection"
    },
    "release_url": "https://pypi.org/project/python-collection/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple utility structure for python",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8761190,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93638cbdb2bbbe9445c2dfd05f6e0abb62efb2af4d4934ca6423fd18ba220897",
          "md5": "acb1257de8f7d3c06c6726fd9509565f",
          "sha256": "069f0b44c2c6c1422286fcedb2f137d9533fce2c9efce937e85d0fd3ddb0d3d0"
        },
        "downloads": -1,
        "filename": "python_collection-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acb1257de8f7d3c06c6726fd9509565f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3460,
        "upload_time": "2020-11-27T08:32:25",
        "upload_time_iso_8601": "2020-11-27T08:32:25.290045Z",
        "url": "https://files.pythonhosted.org/packages/93/63/8cbdb2bbbe9445c2dfd05f6e0abb62efb2af4d4934ca6423fd18ba220897/python_collection-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a850c441bf3946b2a3bfda0944f86528cfa52609c2e4d130f03a82bc1f897a19",
          "md5": "974901cd6687f5dc4fd14e1f7c29a9c2",
          "sha256": "fdc07fa3661b37e3f705b8777de6aeb5490e29a7b1eb7be5ec7eb8f461e232fc"
        },
        "downloads": -1,
        "filename": "python-collection-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "974901cd6687f5dc4fd14e1f7c29a9c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3540,
        "upload_time": "2020-11-27T08:32:27",
        "upload_time_iso_8601": "2020-11-27T08:32:27.120599Z",
        "url": "https://files.pythonhosted.org/packages/a8/50/c441bf3946b2a3bfda0944f86528cfa52609c2e4d130f03a82bc1f897a19/python-collection-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93638cbdb2bbbe9445c2dfd05f6e0abb62efb2af4d4934ca6423fd18ba220897",
        "md5": "acb1257de8f7d3c06c6726fd9509565f",
        "sha256": "069f0b44c2c6c1422286fcedb2f137d9533fce2c9efce937e85d0fd3ddb0d3d0"
      },
      "downloads": -1,
      "filename": "python_collection-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "acb1257de8f7d3c06c6726fd9509565f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 3460,
      "upload_time": "2020-11-27T08:32:25",
      "upload_time_iso_8601": "2020-11-27T08:32:25.290045Z",
      "url": "https://files.pythonhosted.org/packages/93/63/8cbdb2bbbe9445c2dfd05f6e0abb62efb2af4d4934ca6423fd18ba220897/python_collection-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a850c441bf3946b2a3bfda0944f86528cfa52609c2e4d130f03a82bc1f897a19",
        "md5": "974901cd6687f5dc4fd14e1f7c29a9c2",
        "sha256": "fdc07fa3661b37e3f705b8777de6aeb5490e29a7b1eb7be5ec7eb8f461e232fc"
      },
      "downloads": -1,
      "filename": "python-collection-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "974901cd6687f5dc4fd14e1f7c29a9c2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3540,
      "upload_time": "2020-11-27T08:32:27",
      "upload_time_iso_8601": "2020-11-27T08:32:27.120599Z",
      "url": "https://files.pythonhosted.org/packages/a8/50/c441bf3946b2a3bfda0944f86528cfa52609c2e4d130f03a82bc1f897a19/python-collection-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}