{
  "info": {
    "author": "Václav Blažej",
    "author_email": "vaclavblazej@seznam.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "**DISCLAIMER (WORK IN PROGRESS):**\nAs of May 2020 this project is work in progress.\nThe alpha release is planned for June.\n\nIt **IS** designed to\n\n* make a clear overview of custom-made commands\n* provide a common user interface for the commands\n* provide a clear way to setup commands which work well with this tool\n\nIt **IS NOT** designed to\n\n* provide standard functions or libraries to be used in the custom-made commands\n* check correctness or analyse the commands\n\n## TODOs\n\n* refine the structure of modules\n* fix over-escaping, e.g. in 'proot' test command\n* improve search (not only one whole regex)\n* help for arguments\n* completion for arguments\n* think of possible project configuration variables\n* fix optional parameter load order\n* release to pypi and get it tested by somebody else\n* (seems hard) copy the command into command line instead of executing it\n\n## Installation\n\nFor stable release, run\n\n```sh\npip3 install shcmdmgr\n```\n\n## Basic usage\n\nUse `cmd -s` (or `cmd --save`) to catalogue a command. For example `lsb_release -a`.\n\n```sh\n$ lsb_release -a\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 20.04 LTS\nRelease:\t20.04\nCodename:\tfocal\n\n$ cmd --save\nThe command to be saved: lsb_release -a   % note that this was pre-filled from history\nAlias: sysversion\nShort description: Shows the system version\n```\n\nRun the command either by invoking the alias\n\n```sh\n$ cmd sysversion\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 20.04 LTS\nRelease:\t20.04\nCodename:\tfocal\n```\n\nor use search `cmd -f` (or `cmd --find`) to find and run the command.\n\n```sh\n$ cmd --find\n========================================\nquery $ system                            % items matching the regex are displayed\n--- 1 ------------------------------\ncmd: do-release-upgrade\ndes: Upgrades the system to the newest released version\n--- 2 ------------------------------\ncmd: lsb_release -a\ndes: Shows the system version\n========================================\nquery $ 2                                 % choose the command by entering its number\nrun command: lsb_release -a\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 20.04 LTS\nRelease:\t20.04\nCodename:\tfocal\n```\n\nTo edit the command catalogue run `cmd --edit` (or `cmd -e`) which runs `$EDITOR ./<script_location>/commands.json` command or open and edit the catalogue file manually.\n\n```sh\n$ cmd --edit\n% The \"$EDITOR\" opens the content similar to the following\n[\n    {\n        \"command\": \"lsb_release -a\",\n        \"description\": \"Show the version number of the system\",\n        \"alias\": \"sysversion\",\n        \"creation_time\": \"2020-04-11 00:24:27\"\n    },\n    {\n        \"command\": \"do-release-upgrade\",\n        \"description\": \"Upgrades the system to the newest released version\",\n        \"alias\": \"sysupgrade\",\n        \"creation_time\": \"2020-04-11 00:25:08\"\n    }\n]\n```\n\n### Completion\n\nCompletion is supported in `bash` and `zsh` shells, and must be enabled explicitly.\nInstalling the completion is the matter of adding file-source to the RC file.\n\nThe correct command can be emited by invoking `--completion <shell>` command.\nSo you can use the following for bash or zsh respectively.\n\n```sh\ncmd --completion bash >> ~/.bashrc\ncmd --completion zsh >> ~/.zshrc\n```\n\n---\n\n## Advanced (work in progress)\n\n### Installation\n\nTo get the latest (non-stable) development version run the following.\n\n```sh\npip3 install git+https://github.com/vaclavblazej/shell-command-manager.git\n```\n\nFor development setup you may fork the repository, clone it, and create a symlink.\n\n```sh\ngit clone git@github.com:vaclavblazej/shell-command-manager.git\nln -s \"$PWD/shell-command-manager/bin/cmd.sh\" ~/bin/cmd\n```\n\n### Parts\n\nWe manage custom scripts, their help, and completion.\n\n* execution\n* help\n* completion\n\nOne function for all three because they have too much in common.\nFlags used to determine what we want to return.\n\nAll three variants are delegated lower (into arguments) and in the lowest level, we return (or do) the wanted result.\nIn execution, we perform the task.\nIn help and completion, we set the result into the relevant location.\n\n### Execution\n\nThe custom script should be an executable file.\n\n### Help\n\nHelp is invoked by calling `script --help <arguments>` where arguments are in the precise form as they would have been without the `--help` argument.\nIt prints a string to standard output which describes what our current command does, and if there are any expected arguments.\n\n### Completion\n\nCompletion is invoked by calling `script --complete <arguments>` and prints out the list of words which are sensible arguments in the next places.\nThe last argument is considered as *argument prefix* and is used to filter out possible words.\nIf no filtering is wanted, the last argument should be empty-string.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vaclavblazej/shell-command-manager",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "shcmdmgr",
    "package_url": "https://pypi.org/project/shcmdmgr/",
    "platform": "",
    "project_url": "https://pypi.org/project/shcmdmgr/",
    "project_urls": {
      "Homepage": "https://github.com/vaclavblazej/shell-command-manager"
    },
    "release_url": "https://pypi.org/project/shcmdmgr/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Tool for managing custom commands from a central location",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7226264,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aad9d83bcdacad6e79ca4bd7749dd1054df69ea2ba21c50d447abef628ab2ca",
          "md5": "1356f595eae45649fc373f058ff33857",
          "sha256": "1de302c610eea6b988b8693ea69403f331e34be05f24d8b7d252fb6eb5e74ead"
        },
        "downloads": -1,
        "filename": "shcmdmgr-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1356f595eae45649fc373f058ff33857",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 26379,
        "upload_time": "2020-05-11T11:37:23",
        "upload_time_iso_8601": "2020-05-11T11:37:23.339940Z",
        "url": "https://files.pythonhosted.org/packages/6a/ad/9d83bcdacad6e79ca4bd7749dd1054df69ea2ba21c50d447abef628ab2ca/shcmdmgr-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8954c77d776ba94bbef0ca5bf5bd7657d7f2daca92a35a9c4013b175a390f6fe",
          "md5": "7b6decb5b11593720e6be82c5f61e75f",
          "sha256": "5dd2ae9ce6547b6e57d98727ae9211aaac609c85d9f679e289089d5cce2a419c"
        },
        "downloads": -1,
        "filename": "shcmdmgr-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7b6decb5b11593720e6be82c5f61e75f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14264,
        "upload_time": "2020-05-11T11:37:24",
        "upload_time_iso_8601": "2020-05-11T11:37:24.910786Z",
        "url": "https://files.pythonhosted.org/packages/89/54/c77d776ba94bbef0ca5bf5bd7657d7f2daca92a35a9c4013b175a390f6fe/shcmdmgr-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25aef2a088b706a698778684ec05f11c70be654a656fc4d78462030b18db5e13",
          "md5": "1f3d68669af14eff07210b4d6c6a2d23",
          "sha256": "d9915ac2cb03ea685c06a182d1e38f04a508b5db243504488d5449ecf80b706c"
        },
        "downloads": -1,
        "filename": "shcmdmgr-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f3d68669af14eff07210b4d6c6a2d23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 28505,
        "upload_time": "2020-05-12T19:29:44",
        "upload_time_iso_8601": "2020-05-12T19:29:44.257574Z",
        "url": "https://files.pythonhosted.org/packages/25/ae/f2a088b706a698778684ec05f11c70be654a656fc4d78462030b18db5e13/shcmdmgr-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55c4c0295d5aeb1d8eac5b4dd221c396fa39744c392507ed9dd28ac1d26165f5",
          "md5": "71db68c7d0becfc3a70eed050905dd52",
          "sha256": "23879366e1907f950a8c86b9f0caaba9f8f664309200194bdb8afc820a1c67a3"
        },
        "downloads": -1,
        "filename": "shcmdmgr-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "71db68c7d0becfc3a70eed050905dd52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12517,
        "upload_time": "2020-05-12T19:29:45",
        "upload_time_iso_8601": "2020-05-12T19:29:45.333887Z",
        "url": "https://files.pythonhosted.org/packages/55/c4/c0295d5aeb1d8eac5b4dd221c396fa39744c392507ed9dd28ac1d26165f5/shcmdmgr-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25aef2a088b706a698778684ec05f11c70be654a656fc4d78462030b18db5e13",
        "md5": "1f3d68669af14eff07210b4d6c6a2d23",
        "sha256": "d9915ac2cb03ea685c06a182d1e38f04a508b5db243504488d5449ecf80b706c"
      },
      "downloads": -1,
      "filename": "shcmdmgr-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1f3d68669af14eff07210b4d6c6a2d23",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 28505,
      "upload_time": "2020-05-12T19:29:44",
      "upload_time_iso_8601": "2020-05-12T19:29:44.257574Z",
      "url": "https://files.pythonhosted.org/packages/25/ae/f2a088b706a698778684ec05f11c70be654a656fc4d78462030b18db5e13/shcmdmgr-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55c4c0295d5aeb1d8eac5b4dd221c396fa39744c392507ed9dd28ac1d26165f5",
        "md5": "71db68c7d0becfc3a70eed050905dd52",
        "sha256": "23879366e1907f950a8c86b9f0caaba9f8f664309200194bdb8afc820a1c67a3"
      },
      "downloads": -1,
      "filename": "shcmdmgr-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "71db68c7d0becfc3a70eed050905dd52",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 12517,
      "upload_time": "2020-05-12T19:29:45",
      "upload_time_iso_8601": "2020-05-12T19:29:45.333887Z",
      "url": "https://files.pythonhosted.org/packages/55/c4/c0295d5aeb1d8eac5b4dd221c396fa39744c392507ed9dd28ac1d26165f5/shcmdmgr-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}