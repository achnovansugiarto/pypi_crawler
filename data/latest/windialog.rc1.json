{
  "info": {
    "author": "MissingNo42",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Win32 (MS Windows)",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: Microsoft :: Windows :: Windows 7",
      "Operating System :: Microsoft :: Windows :: Windows 8",
      "Operating System :: Microsoft :: Windows :: Windows 8.1",
      "Operating System :: Microsoft :: Windows :: Windows Vista",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Description - windialog\n\n[![License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)](https://en.wikipedia.org/wiki/MIT_License)\n\nwindialog is as single file and standalone module allowing, without any external dependency, the full use of\nthe native Windows Dialogue Explorer, for **open file(s)** (OPEN), **open folder(s)**, and **save file** (SAVE AS).\nAll useful features are implemented. (It is like, but more complete than, tkinter.filedialog)\n\nIt is written in **pure python / ctypes** avoiding any dependency and supports all useful\nfeatures and more. It only depend on ctypes, already installed.\n\nOnly Python 3.8 and later are supported (but can be adapted to Python 3 in general)\n\n*(Only tested on CPython 3.9.4 - 64 bits)*\n\n\n# Supported OS\n\nBecause the future is now and Windows XP is dead, only the new API is supported so\nONLY **WINDOWS VISTA AND LATER** ARE SUPPORTED, 32 and 64 bits.\n\n*(Only tested on Windows 10 Pro 21H1 - 64-bits)*\n\n\n# Installation\n\nYou can just copy the file, but [PIP](https://pypi.org/project/windialog/) is also supported\n```cmd\npip install windialog\n```\n\n\n# Usage\n\nIt provides 3 main functions:\n-   getfile: open an Explorer Dialogue for file(s).\n-   getsave: open an Explorer Dialogue for save a file.\n-   getdir: open an Explorer Dialogue for folder(s), in NewStyle Mode (same interface as getfile() or tkinter.filedialog.askdirectory(), not as the old Win32 one).\n\n```py\nfrom windialog import *\n\n# open an Explorer Dialogue for a file.\n\nf = getfile()\n# f is [] if the user cancel, else [\"c:\\\\file\\\\chose\\\\by\\\\user\"]\n\n\nf = getfile(multi = True)\n# f can now contains multiple files paths e.g. [\"c:\\\\file1\", \"c:\\\\file2\", ...]\n\n\n\nfrom tkinter import Tk()\nwd = Tk()\n\n\n# You can also attach the Explorer to a window by passing its Window Handle (HWND) as first argument\n# indeed, it work with any GUI lib, not only tkinter (see your GUI lib doc to get HWND)\n\nf = getfile(wd.winfo_id())\n\n\n\n# You can also custom many things (exhaustive example)\n\nhwnd = 0 # No window attachment\n\nfiletypes = ((\"Word Documents\", \"*.docx;*.doc\"), # when \"Word Documents\" is selected in explorer, \n             (\"Excel Sheets\", \"*.xlsx\"),         # only .docx and .doc files are visible. ('*' is important)\n             (\"All Files\", \"*.*\"))\n\ntitle   = \"Select a document\" # explorer window title (in title bar)\ninitdir = \"c:\\\\users\\\\john\\\\documents\" # default folder where start the explorer\nok_text = \"Confirm Please\" # text on the OK button\nfile_text = \"Selected Document\" # text next to the text-field\n\nf = getfile(hwnd, *filetypes, title = title, initdir = initdir, multi = False, ok_text = ok_text, file_text = file_text)\n\n\n# A last argument is also available: '__fos_flags' it is only need in extremely special cases (= never)\n# and take a binary combination (using |) of flags from windialog.FOS.\n# e.g.: getfile(..., __fos_flags = FOS.PICKFOLDERS) is an alias of getdir(...)\n\n\n\n# getdir works as getfile, but *filestypes is not supported (logic), and 'file_text' is here 'dir_text'\n\nd = getdir(hwnd, title = title, initdir = initdir, multi = True, ok_text = ok_text, dir_text = file_text)\n# d contains [] if the user cancel, else [\"c:\\\\selected\\\\dir\"] or [\"c:\\\\dir1\", \"c:\\\\dir2\", ...] if multi = True\n\n\n\n# getsave works as getfile too, but not supports 'multi' so it return a str and not a list\n\ns = getsave(hwnd, *filetypes, title = title, initdir = initdir, ok_text = ok_text, file_text = file_text)\ns # take care that s is an empty string ('') if user cancel, else it is a path str ('c:\\\\path\\\\to\\\\save\\\\file')\n\n\n# for more details:\n\nhelp(getfile)\nhelp(getdir)\nhelp(getsave)\n```\n\n\n\n# Changelog\n\n## [1.0.2] - First release\n\nFirst release\n\n# Copyright\n\nCopyright (c) 2021 - MissingNo42\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this file, to deal it without any restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the file.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/windialog/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MissingNo42/windialog",
    "keywords": "Windows,Files,Folders,Explorer,Python 3,Python 3.8",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "windialog",
    "package_url": "https://pypi.org/project/windialog/",
    "platform": "",
    "project_url": "https://pypi.org/project/windialog/",
    "project_urls": {
      "Download": "https://pypi.org/project/windialog/",
      "Homepage": "https://github.com/MissingNo42/windialog"
    },
    "release_url": "https://pypi.org/project/windialog/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An API to use the new Windows file & folder Dialogue Explorer",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10558405,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4bf7132d81325d7ae58edb257f3718521bc19fef21eef3ace2f0b46ae3af663",
          "md5": "cad25a80a1a6494bb75a72c2bc074587",
          "sha256": "bfc6c392c05f3afad3e47c5905a351b7cf7ad01c8c240f9ac2d599c5334f231d"
        },
        "downloads": -1,
        "filename": "windialog-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cad25a80a1a6494bb75a72c2bc074587",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8166,
        "upload_time": "2021-06-04T13:36:46",
        "upload_time_iso_8601": "2021-06-04T13:36:46.952112Z",
        "url": "https://files.pythonhosted.org/packages/c4/bf/7132d81325d7ae58edb257f3718521bc19fef21eef3ace2f0b46ae3af663/windialog-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e0d1744340db482761e8d3b125d2ac9560379f18c8e4226b81e1b78ddeb70a2",
          "md5": "25f4f203bec31f8a628f2fd0cdcb359b",
          "sha256": "8814346c5f7c69ca55c1a44d31c62ce1aa517292dfecff7dc6eca6c312738409"
        },
        "downloads": -1,
        "filename": "windialog-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "25f4f203bec31f8a628f2fd0cdcb359b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8267,
        "upload_time": "2021-06-04T13:36:48",
        "upload_time_iso_8601": "2021-06-04T13:36:48.469753Z",
        "url": "https://files.pythonhosted.org/packages/6e/0d/1744340db482761e8d3b125d2ac9560379f18c8e4226b81e1b78ddeb70a2/windialog-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4bf7132d81325d7ae58edb257f3718521bc19fef21eef3ace2f0b46ae3af663",
        "md5": "cad25a80a1a6494bb75a72c2bc074587",
        "sha256": "bfc6c392c05f3afad3e47c5905a351b7cf7ad01c8c240f9ac2d599c5334f231d"
      },
      "downloads": -1,
      "filename": "windialog-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cad25a80a1a6494bb75a72c2bc074587",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8166,
      "upload_time": "2021-06-04T13:36:46",
      "upload_time_iso_8601": "2021-06-04T13:36:46.952112Z",
      "url": "https://files.pythonhosted.org/packages/c4/bf/7132d81325d7ae58edb257f3718521bc19fef21eef3ace2f0b46ae3af663/windialog-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e0d1744340db482761e8d3b125d2ac9560379f18c8e4226b81e1b78ddeb70a2",
        "md5": "25f4f203bec31f8a628f2fd0cdcb359b",
        "sha256": "8814346c5f7c69ca55c1a44d31c62ce1aa517292dfecff7dc6eca6c312738409"
      },
      "downloads": -1,
      "filename": "windialog-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "25f4f203bec31f8a628f2fd0cdcb359b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8267,
      "upload_time": "2021-06-04T13:36:48",
      "upload_time_iso_8601": "2021-06-04T13:36:48.469753Z",
      "url": "https://files.pythonhosted.org/packages/6e/0d/1744340db482761e8d3b125d2ac9560379f18c8e4226b81e1b78ddeb70a2/windialog-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}