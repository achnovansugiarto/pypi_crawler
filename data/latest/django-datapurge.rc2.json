{
  "info": {
    "author": "MichaÅ‚ Jaworski",
    "author_email": "swistakm@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 1.4",
      "Framework :: Django :: 1.5",
      "Framework :: Django :: 1.6",
      "Framework :: Django :: 1.7",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "|Build Status|\n\nDjango Datapurge\n================\n\nSimple app to help purging old data like sesions, nonces, logs etc..\nIt's like ``django-admin.py clearsessions`` command but gives you\npossibility to purge anything. Simpliest way to use ``datapurge`` is to\nrun management command (manually or via cron):\n\n::\n\n    python manage.py purge\n\nIt's easy to integrate datapurge with ``celery`` or ``kronos``. Just\nwrap ``datapurge.actions.purge`` function with code corresponding to\nyour task backend and run it the way you want.\n\nRequirements\n============\n\n-  Python (2.6, 2.7, 3.4, 3.5)\n-  Django>=1.3.7\n\nInstallation\n============\n\nInstall from PyPI using pip:\n\n::\n\n    pip install django-datapurge\n\nOr clone this repo:\n\n::\n\n    git clone git@github.com:swistakm/django-datapurge.git\n\nAdd ``'datapurge'`` to your ``INSTALLED_APPS`` setting.\n\n::\n\n    INSTALLED_APPS = (\n        ...\n        'datapurge',\n    )\n\nConfiguration\n=============\n\nAdd ``DATAPURGE_MODELS`` to your settings file and specify which models\nshould be purged:\n\n::\n\n    DATAPURGE_MODELS = {\n        'app_name.ModelName1': {\n            # policy settings\n            ...\n            },\n        'app_name.ModelName2': {\n            ...\n            },\n    }\n\nAvailable purge policies\n========================\n\nThere are a few available policies for your use. Use what you find most\nconvienient. Policy is guessed from set parameters provided.\n\nExpireFieldPolicy\n-----------------\n\nDeletes all objects which ``expire_field`` datetime is older than\n``timezone.now()``.\n\nParameters:\n\n-  ``'expire_field'`` - name of datetime field holding expiration date\n\nExample:\n\n::\n\n    DATAPURGE_MODELS = {\n        \"sessions.Session\": {\n            \"expire_field\": \"expire_date\",\n        }\n    }\n\nLifetimePolicy\n--------------\n\nDeletes all objects which are older than specified ``lifetime``\n\nParameters:\n\n-  ``'lifetime'`` - timedelta object specifying maximum lifetime of\n   object\n-  ``'created_field'`` - name of datetime field holding object creation\n   time\n\nExample:\n\n::\n\n    from timezone import timedelta\n\n    DATAPURGE_MODELS = {\n        \"oauth_provider.Nonce\": {\n            \"lifetime\": timedelta(seconds=300),\n            \"created_field\": \"timestamp\",\n        }\n\nCallablePolicy\n--------------\n\nDeletes all objects from query returned by provided callable\n\nParameters:\n\n-  ``'callable'`` - function accepting model class and returning\n   QuerySet\n\nExample:\n\n::\n\n    DATAPURGE_MODELS = {\n        \"some_app.Log\": {\n            \"callable\": lambda model: model.objects.all(),\n        }\n\n.. |Build Status| image:: https://travis-ci.org/swistakm/django-datapurge.png\n   :target: https://travis-ci.org/swistakm/django-datapurge",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/swistakm/django-datapurge",
    "keywords": null,
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-datapurge",
    "package_url": "https://pypi.org/project/django-datapurge/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-datapurge/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/swistakm/django-datapurge"
    },
    "release_url": "https://pypi.org/project/django-datapurge/0.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A simple Django app to easily handle cleanup of old data (sessions, nonces, etc.)",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2051038,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04d4471380aea27b59e94b9226682ea719465c2330aab45ea2ce7e561fec6977",
          "md5": "42362ba573f5ed3528a82fb439a7ea99",
          "sha256": "012001ebc5420b52cde50ad7b62698683b1bd33d654025e739f8e6c3938e3666"
        },
        "downloads": -1,
        "filename": "django-datapurge-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "42362ba573f5ed3528a82fb439a7ea99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8881,
        "upload_time": "2013-08-16T11:10:08",
        "upload_time_iso_8601": "2013-08-16T11:10:08.366733Z",
        "url": "https://files.pythonhosted.org/packages/04/d4/471380aea27b59e94b9226682ea719465c2330aab45ea2ce7e561fec6977/django-datapurge-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcc6445768996faeb012bfa135cdbf0fd893c935bed3b8b086a59e653d3a427b",
          "md5": "383504dc8e641af4cef56232f3d9dec3",
          "sha256": "ad41df6319f18e9fd4d06c1c33f240af92ad3099f938fbcfb652eb8d8815efdf"
        },
        "downloads": -1,
        "filename": "django_datapurge-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "383504dc8e641af4cef56232f3d9dec3",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 13351,
        "upload_time": "2016-04-07T09:54:37",
        "upload_time_iso_8601": "2016-04-07T09:54:37.767007Z",
        "url": "https://files.pythonhosted.org/packages/fc/c6/445768996faeb012bfa135cdbf0fd893c935bed3b8b086a59e653d3a427b/django_datapurge-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79818fc41150f9007ebb157dce68aca022dfc39cd0adfc34cc1afee09d64ca65",
          "md5": "e3c419369c13df26fd5a42572ce8be30",
          "sha256": "f6ca5512abfe1f183028ee6f6bdaa15c3729c4c77fbffb803871e98b41fffb5e"
        },
        "downloads": -1,
        "filename": "django-datapurge-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e3c419369c13df26fd5a42572ce8be30",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7954,
        "upload_time": "2016-04-07T09:54:22",
        "upload_time_iso_8601": "2016-04-07T09:54:22.425073Z",
        "url": "https://files.pythonhosted.org/packages/79/81/8fc41150f9007ebb157dce68aca022dfc39cd0adfc34cc1afee09d64ca65/django-datapurge-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcc6445768996faeb012bfa135cdbf0fd893c935bed3b8b086a59e653d3a427b",
        "md5": "383504dc8e641af4cef56232f3d9dec3",
        "sha256": "ad41df6319f18e9fd4d06c1c33f240af92ad3099f938fbcfb652eb8d8815efdf"
      },
      "downloads": -1,
      "filename": "django_datapurge-0.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "383504dc8e641af4cef56232f3d9dec3",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 13351,
      "upload_time": "2016-04-07T09:54:37",
      "upload_time_iso_8601": "2016-04-07T09:54:37.767007Z",
      "url": "https://files.pythonhosted.org/packages/fc/c6/445768996faeb012bfa135cdbf0fd893c935bed3b8b086a59e653d3a427b/django_datapurge-0.0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79818fc41150f9007ebb157dce68aca022dfc39cd0adfc34cc1afee09d64ca65",
        "md5": "e3c419369c13df26fd5a42572ce8be30",
        "sha256": "f6ca5512abfe1f183028ee6f6bdaa15c3729c4c77fbffb803871e98b41fffb5e"
      },
      "downloads": -1,
      "filename": "django-datapurge-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e3c419369c13df26fd5a42572ce8be30",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7954,
      "upload_time": "2016-04-07T09:54:22",
      "upload_time_iso_8601": "2016-04-07T09:54:22.425073Z",
      "url": "https://files.pythonhosted.org/packages/79/81/8fc41150f9007ebb157dce68aca022dfc39cd0adfc34cc1afee09d64ca65/django-datapurge-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}