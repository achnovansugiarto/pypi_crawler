{
  "info": {
    "author": "Khuyen Tran",
    "author_email": "khuyentran1476@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# prefect-alert\n\n<p align=\"center\">\n    <a href=\"https://pypi.python.org/pypi/prefect-alert/\" alt=\"PyPI version\">\n        <img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/prefect-alert?color=0052FF&labelColor=090422\"></a>\n    <a href=\"https://prefect-community.slack.com\" alt=\"Slack\">\n        <img src=\"https://img.shields.io/badge/slack-join_community-red.svg?color=0052FF&labelColor=090422&logo=slack\" /></a>\n    <a href=\"https://discourse.prefect.io/\" alt=\"Discourse\">\n        <img src=\"https://img.shields.io/badge/discourse-browse_forum-red.svg?color=0052FF&labelColor=090422&logo=discourse\" /></a>\n</p>\n\n## Welcome!\n\n[Prefect](https://www.prefect.io/) is an open-source library that allows you to orchestrate and observe your dataflow defined in Python.\n\nprefect-alert is a decorator that allows you to send alert when a Prefect flow fails.\n\nRead [this article](https://medium.com/the-prefect-blog/sending-slack-notifications-in-python-with-prefect-840a895f81c?sk=ab9bba5b59c8f3468bb01cabe04b2953) if you are not familiar with how to send notifications with Prefect. \n\n## Getting Started\n\n### Python setup\n\nRequires an installation of Python 3.8+.\n\nWe recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.\n\nThe decorator is designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the [Prefect documentation](https://orion-docs.prefect.io/).\n\n### Installation\n\nInstall `prefect-alert` with `pip`:\n\n```bash\npip install prefect-alert\n```\n### Create a notification block\n[Blocks](https://docs.prefect.io/concepts/blocks/) enable you to store configuration and provide an interface for interacting with external systems. \n\nFirst, start with creating a [notification block](https://docs.prefect.io/api-ref/prefect/blocks/notifications/) through [UI](https://docs.prefect.io/ui/blocks/) or a Python script:\n\n```python\nfrom prefect.blocks.notifications import SlackWebhook\n\nslack_block = SlackWebhook(url=\"https://hooks.slack.com/services/XXX/XXX/XXX\")\n``` \n### Send an alert\nNext, use the block created and the decorator `prefect_alert.alert_on_failure` to send alert when a flow fails.\n#### Send an alert when a flow fails\n\n```python\nfrom prefect import flow, task \nfrom prefect.blocks.notifications import SlackWebhook\nfrom prefect_alert import alert_on_failure\n\n@task\ndef may_fail():\n    raise ValueError()\n\n@alert_on_failure(block_type=SlackWebhook, block_name=\"test\")\n@flow\ndef failed_flow():\n    res = may_fail()\n    return res\n\nif __name__==\"__main__\":\n    failed_flow()\n```\nAnd you will see something like this on your Slack:\n![](img/slack-notification.png)\n\n#### Send an alert when a asynchronous flow fails\n\n```python\nfrom prefect import flow, task \nfrom prefect.blocks.notifications import SlackWebhook\nfrom prefect_alert import alert_on_failure\nimport asyncio\n\n@task\nasync def may_fail():\n    raise ValueError()\n\n@alert_on_failure(block_type=SlackWebhook, block_name=\"test\")\n@flow\nasync def failed_flow():\n    res = await may_fail()\n    return res\n\nif __name__==\"__main__\":\n    asyncio.run(failed_flow())\n```\n## Resources\n\nIf you encounter any bugs while using `prefect-alert`, feel free to open an issue in the [prefect-alert](https://github.com/khuyentran1401/prefect-alert) repository.\n\nIf you have any questions or issues while using `prefect-alert`, you can find help in either the [Prefect Discourse forum](https://discourse.prefect.io/) or the [Prefect Slack community](https://prefect.io/slack).\n\nFeel free to ⭐️ or watch [`prefect-alert`](https://github.com/khuyentran1401/prefect-alert) for updates too!\n\n## Development\n\nIf you'd like to install a version of `prefect-alert` for development, clone the repository and perform an editable install with `pip`:\n\n```bash\ngit clone https://github.com/khuyentran1401/prefect-alert.git\n\ncd prefect-alert/\n\npip install -e \".[dev]\"\n\n# Install linting pre-commit hooks\npre-commit install\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/khuyentran1401/prefect-alert",
    "keywords": "prefect",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prefect-alert",
    "package_url": "https://pypi.org/project/prefect-alert/",
    "platform": null,
    "project_url": "https://pypi.org/project/prefect-alert/",
    "project_urls": {
      "Homepage": "https://github.com/khuyentran1401/prefect-alert"
    },
    "release_url": "https://pypi.org/project/prefect-alert/0.1.3/",
    "requires_dist": [
      "prefect (>=2.0.0)",
      "pytest ; extra == 'dev'",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "mkdocs ; extra == 'dev'",
      "mkdocs-material ; extra == 'dev'",
      "mkdocstrings[python] ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest-asyncio ; extra == 'dev'",
      "mkdocs-gen-files ; extra == 'dev'",
      "interrogate ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "pillow ; extra == 'dev'",
      "mock ; (python_version < \"3.8\") and extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Decorator to send alert when a Prefect task or flow fails",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15569623,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9b9a7463c6a6fa9bc457db17dd8b6e351bf39e0e733cf085262383a96eecfb6",
          "md5": "8e13bf1e927bb28fbfdbe564f18f2e60",
          "sha256": "10c84effaa7ed23ba308d904f467ce310e244a873e021b46bef47526abe8d064"
        },
        "downloads": -1,
        "filename": "prefect_alert-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e13bf1e927bb28fbfdbe564f18f2e60",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9125,
        "upload_time": "2022-10-21T22:28:16",
        "upload_time_iso_8601": "2022-10-21T22:28:16.380113Z",
        "url": "https://files.pythonhosted.org/packages/c9/b9/a7463c6a6fa9bc457db17dd8b6e351bf39e0e733cf085262383a96eecfb6/prefect_alert-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "961811780d33403e0a706a921944962f86f13cd9840304151d27e830451234d8",
          "md5": "1d7fa7c62a3d18066dc0a13b5178ad7a",
          "sha256": "e2c06b23e47c3dfc7c78f60eeca6620129f05d8a6c3990824b2ba9eab9ec12b4"
        },
        "downloads": -1,
        "filename": "prefect-alert-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1d7fa7c62a3d18066dc0a13b5178ad7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25899,
        "upload_time": "2022-10-21T22:28:17",
        "upload_time_iso_8601": "2022-10-21T22:28:17.611741Z",
        "url": "https://files.pythonhosted.org/packages/96/18/11780d33403e0a706a921944962f86f13cd9840304151d27e830451234d8/prefect-alert-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73c075f6785cb8e578517ff253a47d2942369bea69ba80695a693e850897c2d6",
          "md5": "a6718420cf0755964a7ccce9f1c7182e",
          "sha256": "4d248a97ffd52a66e21d4afc112687d492a01057a8efbf2a2b94dda00e30c297"
        },
        "downloads": -1,
        "filename": "prefect_alert-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6718420cf0755964a7ccce9f1c7182e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9777,
        "upload_time": "2022-10-28T18:23:47",
        "upload_time_iso_8601": "2022-10-28T18:23:47.229561Z",
        "url": "https://files.pythonhosted.org/packages/73/c0/75f6785cb8e578517ff253a47d2942369bea69ba80695a693e850897c2d6/prefect_alert-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bad1b1d045e6ad3d68e8ea4d0bf2a06d8c440d6d1d02175d2b6bee54420c3ee",
          "md5": "54212c5d1209395cd1389e853d3902ac",
          "sha256": "c79dd5e353fd79253253b5aa78f05fb0b16baf56844fb534a452bd2c03ee98a9"
        },
        "downloads": -1,
        "filename": "prefect-alert-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "54212c5d1209395cd1389e853d3902ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26221,
        "upload_time": "2022-10-28T18:23:49",
        "upload_time_iso_8601": "2022-10-28T18:23:49.441645Z",
        "url": "https://files.pythonhosted.org/packages/1b/ad/1b1d045e6ad3d68e8ea4d0bf2a06d8c440d6d1d02175d2b6bee54420c3ee/prefect-alert-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73c075f6785cb8e578517ff253a47d2942369bea69ba80695a693e850897c2d6",
        "md5": "a6718420cf0755964a7ccce9f1c7182e",
        "sha256": "4d248a97ffd52a66e21d4afc112687d492a01057a8efbf2a2b94dda00e30c297"
      },
      "downloads": -1,
      "filename": "prefect_alert-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6718420cf0755964a7ccce9f1c7182e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9777,
      "upload_time": "2022-10-28T18:23:47",
      "upload_time_iso_8601": "2022-10-28T18:23:47.229561Z",
      "url": "https://files.pythonhosted.org/packages/73/c0/75f6785cb8e578517ff253a47d2942369bea69ba80695a693e850897c2d6/prefect_alert-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1bad1b1d045e6ad3d68e8ea4d0bf2a06d8c440d6d1d02175d2b6bee54420c3ee",
        "md5": "54212c5d1209395cd1389e853d3902ac",
        "sha256": "c79dd5e353fd79253253b5aa78f05fb0b16baf56844fb534a452bd2c03ee98a9"
      },
      "downloads": -1,
      "filename": "prefect-alert-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "54212c5d1209395cd1389e853d3902ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26221,
      "upload_time": "2022-10-28T18:23:49",
      "upload_time_iso_8601": "2022-10-28T18:23:49.441645Z",
      "url": "https://files.pythonhosted.org/packages/1b/ad/1b1d045e6ad3d68e8ea4d0bf2a06d8c440d6d1d02175d2b6bee54420c3ee/prefect-alert-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}