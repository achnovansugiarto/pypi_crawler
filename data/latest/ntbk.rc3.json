{
  "info": {
    "author": "Blake Bengtson",
    "author_email": "blake@bengtson.us",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Topic :: Utilities"
    ],
    "description": "<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/356577/146586531-01bbc413-a876-4c7b-a0a5-889b99558e19.png\" />\n</p>\n<p align=\"center\">\nA simple, opinionated terminal notebook inspired by bullet journaling. \n</p>\n\n![](https://img.shields.io/pypi/v/ntbk)\n![](https://img.shields.io/pypi/pyversions/ntbk)\n![](https://github.com/bbeng89/ntbk/workflows/Tests/badge.svg)\n![](https://img.shields.io/github/license/bbeng89/ntbk)\n\n# Contents\n\n- [Contents](#contents)\n  - [Why does this exist?](#why-does-this-exist)\n  - [Project philosophy](#project-philosophy)\n  - [Installation](#installation)\n  - [Folder structure](#folder-structure)\n  - [Usage](#usage)\n    - [Opening today's log](#opening-todays-log)\n    - [Opening logs for other days](#opening-logs-for-other-days)\n    - [Listing log files](#listing-log-files)\n    - [Jotting notes](#jotting-notes)\n    - [Opening collections](#opening-collections)\n    - [Listing collections](#listing-collections)\n    - [Subdirectories in collections and logs](#subdirectories-in-collections-and-logs)\n    - [Writing Templates](#writing-templates)\n    - [Using templates](#using-templates)\n    - [Listing available templates](#listing-available-templates)\n    - [Default templates](#default-templates)\n    - [Providing additional template variables in config](#providing-additional-template-variables-in-config)\n    - [Providing additional template variables with --vars flag](#providing-additional-template-variables-with---vars-flag)\n    - [Finding files](#finding-files)\n    - [Finding directories](#finding-directories)\n    - [Abbreviated commands](#abbreviated-commands)\n  - [Config](#config)\n  - [Roadmap](#roadmap)\n  - [Contributing](#contributing)\n\n## Why does this exist?\n\nI used to be a dedicated bullet journaler until I got tired of not always having my notebook and the slowness of writing by hand. I moved my todo list to Todoist and scheduling to a web calendar, however, I still didn't have a good way of handling the long-form writing and journaling I did in my bullet journal. I tried apps like Joplin but I really wanted to only be in the terminal with Vim and nothing else. I tried Vim and NERDTree in Dropbox, which worked, but I felt I needed a way of automating common tasks like opening todays log and collections, so ntbk was born. \n\n## Project philosophy\n\n- Don't reinvent the wheel. Todo lists and scheduling are handled better by other apps. Versioning and backup can be done by Dropbox and git. Grep works great for search. These tasks are up to the user and outside the scope of this project. ntbk only provides shortcuts to working with plain text files within its opinionated structure.\n- It should be easy to navigate the generated file tree without ntbk.\n- No databases. Only work with the filesystem.\n\n## Installation\n\n```console\nfoo@bar:~$ pip install ntbk\n```\n\nOnce installed, just run:\n\n```console\nfoo@bar:~$ ntbk\n```\n\nYou will be prompted for the notebook directory and editor you want to use. This will create the config file and notebook folders for you then immediately open today's log. By default a simple template for log entries will be created for you at `_templates/log_default.md`.\n\n## Folder structure\n\nThere are two main entities in ntbk - `logs` and `collections`. Logs are similar to the \"daily log\" in bullet journaling. They contain text for the current day. Collections on the other hand contain related ideas and topics that don't belong to a particular day. For instance you might have a `recipes` collection or `books` collection. \n\nAn ntbk directory will look like the following:\n\n```\n    ntbk/\n    ├─ _templates/\n    │  ├─ diary.md\n    │  ├─ book-review.md\n    ├─ collections/\n    │  ├─ reading/\n    │  │  ├─ 1984.md\n    │  ├─ recipes/\n    │  │  ├─ index.md\n    ├─ log/\n    │  ├─ 2021/\n    │  │  ├─ 01-january/\n    │  │  │  ├─ 2021-01-01/\n    │  │  │  │  ├─ index.md\n    │  │  │  │  ├─ work.md\n    │  │  │  ├─ 2021-01-02/\n    │  │  │  │  ├─ index.md\n```\n\nLog files are organized by year, month, then day. The default file for the day is `index.md` however, you can create as many files for the day as you like. This allows you to separate out different things for the day. For instance, you may want to keep your work notes in a separate file, or diary entries in a separate file. \n\nCollections are very similar, but are not structured by date. A collection is essentially a folder, and the default file within it is `index.md`, though you can create any files within the collection you want.\n\n## Usage\n\nIn the following examples it will be assumed today's date is 2021-12-16.\n\n### Opening today's log\n\nTo open today's log file you can use the `today` command.\n\n```console\nfoo@bar:~$ ntbk today\n```\n\nThis will open the file `log/2021/12-december/2021-12-16/index.md`. The file will be created if it doesn't already exist.\n\nSimply running the script without any arguments is the same as using the today command, however, you cannot add any additional arguments like `--template` or specify a different file (covered later). It's simply a shortcut to open today's index file.\n \n ```console\n foo@bar:~$ ntbk\n ```\n\nIf you want to open a different file than `index.md` you can specify it as another parameter.\n\n```console\nfoo@bar:~$ ntbk today work\n```\n\nWould open/create `log/2021/12-december/2021-12-16/work.md`\n\n### Opening logs for other days\n\n```console\nfoo@bar:~$ ntbk yesterday\n```\n\nWould open/create `log/2021/12-december/2021-12-15/index.md`\n\n```console\nfoo@bar:~$ ntbk tomorrow work\n```\n\nWould open/create `log/2021/12-december/2021-12-17/work.md`\n\n```console\nfoo@bar:~$ ntbk date 2021-12-01\n```\n\nWould open/create `log/2021/12-december/2021-12-01/index.md`\n\nNote that in all of these commands the `index.md` file is implied, unless you specify a different file name.\n\n*Note - the filename `index.md` can be changed with the `default_filename` [config](#config) variable.*\n\n### Listing log files\n\nTo list all the files for a given date use the `--list` flag\n\n```console\nfoo@bar:~$ ntbk today --list\nwork\nindex\nnotes\n```\n\n```console\nfoo@bar:~$ ntbk date 2021-12-14 --list\nindex\n```\n\n### Jotting notes\n\nSometimes you just want to make a quick note without having to open your editor. To do this you can use the `jot` command. This command will only write to today's log.\n\n```console\nfoo@bar:~$ ntbk jot \"some quick note\"\nJotted note to today's index file\n```\n\nIf you'd like to jot to a different file you can specify the file after your note.\n\n```console\nfoo@bar:~$ ntbk jot \"some quick note\" notes\nJotted note to today's notes file\n```\n\nTo automatically add the current time before your jotted note use the `--timestamp` or `-s` flag.\n\n```console\nfoo@bar:~$ ntbk jot \"some note\" --timestamp\nJotted note to today's index file\n```\n\n### Opening collections\n\nCollections function very similarly to logs. To open/create a collection you use the `collection` command:\n\n```console\nfoo@bar:~$ ntbk collection books\n```\n\nThis would create the file `collections/books/index.md`\n\nIf you want to create a new file inside a collection, just pass it as another argument.\n\n```console\nfoo@bar:~$ ntbk collection books 1984\n```\n\nWould create `collections/books/1984.md`\n\n### Listing collections\n\nTo list all your collections:\n\n```console\nfoo@bar:~$ ntbk collections\nbooks [2 files]\ntravel-2022 [1 file]\nrecipes [1 file]\n```\n\nTo list all the files within a collection\n\n```console\nfoo@bar:~$ ntbk collection books --list\n1984\nbrave-new-world\n```\n\n### Subdirectories in collections and logs\n\nFor collections, subdirectories are specified as part of the collection name:\n\n```console\nfoo@bar:~$ ntbk collection books/fiction the-hobbit\n```\nThis would open/create `collections/books/fiction/the-hobbit.md`\n\nListing a subdirectory is the same:\n\n```console\nfoo@bar:~$ ntbk collection books/fiction --list\n```\n\nLogs are different since an alias like `today` or `yesterday` is often used. So for logs you specify the path with the filename.\n\n```console\nfoo@bar:~$ ntbk today work/meeting-notes\n```\n\nThis would open/create `log/2021/12-december/2021-12-16/work/meeting-notes.md`\n\nTo list files for this new `work` directory, just add a forward slash to the directory name and use the `--list` flag:\n\n```console\nfoo@bar:~$: ntbk today work/ --list\n```\n\nYou can go as deep as you want with this:\n\n```console\nfoo@bar:~$: ntbk today work/meetings/ --list\n```\n\nIn both collections and logs you can use the `--recursive` or `-r` flag to recursively list all files:\n\n```console\nfoo@bar:~$: ntbk c books -lr\n```\n\n```console\nfoo@bar:~$: ntbk tod -lr\n```\n\n### Writing Templates\n\nThe third directory in the `ntbk/` folder is `_templates`. Here you can create markdown files that will be used as a starting point for new files. Templates use the [Jinja2](https://jinja2docs.readthedocs.io/en/stable/templates.html) templating library, so all functions provided by jinja are available. \n\nThe following variables are available to templates by default. Additional variables can be provided in the [config file](#providing-additional-template-variables-in-config) and also with the [--vars flag](#providing-additional-template-variables-with---vars-flag).\n\n| Variable     | Type     | Example                              | Notes                                                                       |\n|--------------|----------|--------------------------------------|-----------------------------------------------------------------------------|\n| `now`        | datetime |                                      | All python datetime methods are available                                   |\n| `today_iso`  | string   | 2021-12-16                           |                                                                             |\n| `now_iso`    | string   | 2021-12-16T13:18:37                  |                                                                             |\n| `today_long` | string   | Thursday, December 16, 2021          |                                                                             |\n| `now_long`   | string   | Thursday, December 16, 2021 01:18 PM |                                                                             |\n| `log_date`   | datetime |                                      | Only available in templates for log files. Represents the date of the file. |\n\nGiven this template:\n\n```markdown\n## Built in variables\n\n{{ now.strftime('%A') }}\n{{ today_iso }}\n{{ now_iso }}\n{{ today_long }}\n{{ now_long }}\n```\n\nThe following would be rendered:\n\n```markdown\n## Built in variables\n\nThursday\n2021-12-16\n2021-12-16T13:18:37\nThursday, December 16, 2021\nThursday, December 16, 2021 01:18 PM\n```\n\n### Using templates\n\nYou can specify a template to be used with the `--template` or `-t` argument.\n\n```console\nfoo@bar:~$ ntbk today diary --template diary\n```\n\nThis will create the `diary.md` file for today using the `_templates/diary.md` template.\n\nCollections can also use templates.\n\n```console\nfoo@bar:~$ ntbk collection recipes meatloaf --template recipe\n```\n\n### Listing available templates\n\nTo see a list of templates available use the `templates` command. \n\n```console\nfoo@bar:~$ ntbk templates\nbible-entry\ngrocery-list\nbook-review\njournal_default\nlog_default\nwork-notes\n```\n\n### Default templates\n\nYou can also set a default template to be used for log entries and collections in your [config](#config) file:\n\n```yaml\ndefault_templates:\n  log:\n    index: log_default\n    work: work_notes\n  collection:\n    books: book_review\n    recipes: recipe\n```\n\nThe `log` section defines the template to use for each type of log file. \n\nFor example:\n\n```console\nfoo@bar:~$ ntbk today\n```\n\nWould use the `log_default.md` template (note the .md extension is implicit in the config).\n\n```console\nfoo@bar:~$ ntbk today work\n```\n\nWould use the `work_notes.md` template\n\nFor collections you can only specify a single template to be used by every file in the collection.\n\n```console\nfoo@bar:~$ ntbk collection books 1984\n```\n\nWould use the `book_review.md` template\n\n```console\nfoo@bar:~$ ntbk collection recipes\n```\n\nWould create an `index.md` file and use the `recipe.md` template.\n\nIf you have a default configured, but also use the `--template` argument, the default will be overridden. \n\n*Note - templates will only be used if the file you're opening doesn't exist or is empty. It will not overwrite existing files with the template content*\n\n### Providing additional template variables in config\n\nIf you have variables you want to be available to every template you can define them in the `template_vars` setting in [your config](#config). You can provide any kind of data you like here. \n\n```yaml\ntemplate_vars:\n  owner: John Doe\n  diary_tags:\n    - diary\n    - 2021\n```\n\nThe `owner` and `diary_tags` variables would now be available in your templates. \n\n```markdown\n# Diary Entry\nAuthor: {{ owner }}\nTags: {% for tag in diary_tags %}#{{ tag }} {% endfor %}\n```\n\n### Providing additional template variables with --vars flag\n\nYou can also provide additional variables at runtime with the `--vars` flag. These variables can only be simple strings in the format of `key=value`. You can provide as many as you like. Any values that contain spaces should be enclosed in quotes.\n\n```console\nfoo@bar:~$ ntbk collection books dune --template book_review --vars title=Dune author=\"Frank Herbert\"\n```\n\n### Finding files\n\nPassing the `--find` or `-f` flag will output the files path rather than opening it in your editor.\n\n```console\nfoo@bar:~$ ntbk today --find\n/home/blake/ntbk/2021/12-december/2021-12-16/index.md\nfoo@bar:~$ ntbk today notes -f\n/home/blake/ntbk/2021/12-december/2021-12-16/notes.md\nfoo@bar:~$ ntbk collection books --find\n/home/blake/ntbk/collections/books\n```\n\nThis can be useful if you want to do things like `cat` the contents of the file:\n\n```console\nfoo@bar:~$ cat `ntbk today --find`\n```\n\n### Finding directories\n\nPassing the `--find-dir` or `-d` flag will output the directory path.\n\n```console\nfoo@bar:~$ ntbk today --find-dir\n/home/blake/ntbk/2021/12-december/2021-12-16\nfoo@bar:~$ ntbk collection books -d\n/home/blake/ntbk/collections/books\n```\n\nThis can be useful if you want to do things like `cd` to the directory:\n\n```console\nfoo@bar:~$ cd `ntbk today -d`\n```\n\n### Abbreviated commands\n\nThe following command abbreviations are available:\n\n`today` = `tod`\n\n`tomorrow` = `tom`\n\n`yesterday` = `yest`\n\n`date` = `dt` or `d`\n\n`collection` = `col` or `c`\n\n`collections` = `cols`\n\nThey can be used in place of any normal command. For example, to open the file for date 2021-12-01:\n\n```console\nfoo@bar:~$ ntbk d 2021-12-01\n```\n\n## Config\n\nThe config file is located at `~/.config/ntbk/ntbk.yml`\n\nBelow is a sample config file with all options documented.\n\n```yml\n# Your notebook folder\nntbk_dir: ~/ntbk\n\n# The editor to be used when opening files\neditor: vim \n\n# Location of templates, relative to ntbk_dir\ntemplate_dir: _templates\n\n# Filename to use if one is not specified\ndefault_filename: index\n\n# Mapping of default templates for log and collection files\ndefault_templates:\n  log:\n    # use the log_default.md template any time an index.md file is created\n    index: log_default\n    # use the work_notes.md template any time a work.md file is created\n    work: work_notes\n  collection:\n    # use the book_review.md template for all files created in the books collection\n    books: book_review\n    # use the recipe.md template for all files created in the recipes collection\n    recipes: recipe\n\n# User-defined variables that will be available in every template\ntemplate_vars:\n  # the author var will be in every template and can be used like {{ author.first_name }}\n  author:\n    first_name: John\n    last_name: Doe\n  # this list will be available to every template\n  default_tags:\n    - \"2020\"\n```\n\n## Roadmap\n\nThere is a lot more that can be done with this app. The following are ideas/features I'd like to pursue:\n\n- Vim plugin - I'd like to have a plugin so you can run ntbk commands from within vim, rather than going back to the terminal\n- Html/PDF/etc generation with something like pandoc (or maybe even jekyll)\n- Natural language processing so you can do things like `ntbk last monday`\n- Possibly an accompanying mobile app one day. I'd like a very basic mobile markdown editor that worked with Dropbox (and maybe others) and had the ntbk shortcuts (today, collections, etc.)\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bbeng89/ntbk",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ntbk",
    "package_url": "https://pypi.org/project/ntbk/",
    "platform": "",
    "project_url": "https://pypi.org/project/ntbk/",
    "project_urls": {
      "Homepage": "https://github.com/bbeng89/ntbk"
    },
    "release_url": "https://pypi.org/project/ntbk/0.2.0/",
    "requires_dist": [
      "python-dateutil (==2.8.2)",
      "astroid (==2.9.0)",
      "attrs (==21.2.0)",
      "colorama (==0.4.4)",
      "freezegun (==1.1.0)",
      "iniconfig (==1.1.1)",
      "isort (==5.10.1)",
      "Jinja2 (==3.0.3)",
      "lazy-object-proxy (==1.7.1)",
      "MarkupSafe (==2.0.1)",
      "mccabe (==0.6.1)",
      "packaging (==21.3)",
      "platformdirs (==2.4.0)",
      "pluggy (==1.0.0)",
      "py (==1.11.0)",
      "pydantic (==1.7.4)",
      "pylint (==2.12.2)",
      "pyparsing (==3.0.6)",
      "pytest (==6.2.5)",
      "pytest-mock (==3.6.1)",
      "PyYAML (==6.0)",
      "six (==1.16.0)",
      "toml (==0.10.2)",
      "typing-extensions (==4.0.1)",
      "wrapt (==1.13.3)"
    ],
    "requires_python": ">=3.7",
    "summary": "A simple, opinionated terminal notebook inspired by bullet journaling.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12700551,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ea5e8c3b81f0e71210ef51dc5c1f4ff2d84de21503dcbe981edafac85ecc80b",
          "md5": "4ad0c7270614fa65ecdb1cc92019e136",
          "sha256": "a75cdf3e1a01a001d270a82c7e94a6d75eb33ae33fc72852c5e6f5a6d57d9e9d"
        },
        "downloads": -1,
        "filename": "ntbk-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ad0c7270614fa65ecdb1cc92019e136",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 26077,
        "upload_time": "2021-12-22T18:14:40",
        "upload_time_iso_8601": "2021-12-22T18:14:40.609010Z",
        "url": "https://files.pythonhosted.org/packages/6e/a5/e8c3b81f0e71210ef51dc5c1f4ff2d84de21503dcbe981edafac85ecc80b/ntbk-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28bf3743573274cd71053b117e78dea03fe62b6316e9e2732ed6a40a974b4541",
          "md5": "b830d1828891802e3600c9ba83a470be",
          "sha256": "a7d564e309a2c94576bfc806d3ddeb62cc4c617adf8fff45381133b95e1f3dc4"
        },
        "downloads": -1,
        "filename": "ntbk-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b830d1828891802e3600c9ba83a470be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 24829,
        "upload_time": "2021-12-22T18:14:44",
        "upload_time_iso_8601": "2021-12-22T18:14:44.799908Z",
        "url": "https://files.pythonhosted.org/packages/28/bf/3743573274cd71053b117e78dea03fe62b6316e9e2732ed6a40a974b4541/ntbk-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c843baddde81a810337e68857b0068900171e9f3fab9d7f9b6ce034c43fd695a",
          "md5": "5d9795c98f15a844501f09efb359b907",
          "sha256": "711675e7152888cef0d66edcb20906b661904cd9cae187061766e21937f67751"
        },
        "downloads": -1,
        "filename": "ntbk-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d9795c98f15a844501f09efb359b907",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 26124,
        "upload_time": "2021-12-22T18:57:50",
        "upload_time_iso_8601": "2021-12-22T18:57:50.546056Z",
        "url": "https://files.pythonhosted.org/packages/c8/43/baddde81a810337e68857b0068900171e9f3fab9d7f9b6ce034c43fd695a/ntbk-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe1cb31809631a541f9f2d6af091985e19a044850661218ca5de7a8794366359",
          "md5": "7e297bf24b0f3de945ddeb31edad42e7",
          "sha256": "c2e7c052a0c21920aef09a0ffdb98727b4c0b7f934e9113c74df5f8607c3581a"
        },
        "downloads": -1,
        "filename": "ntbk-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7e297bf24b0f3de945ddeb31edad42e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 24915,
        "upload_time": "2021-12-22T18:57:54",
        "upload_time_iso_8601": "2021-12-22T18:57:54.039245Z",
        "url": "https://files.pythonhosted.org/packages/fe/1c/b31809631a541f9f2d6af091985e19a044850661218ca5de7a8794366359/ntbk-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f84948a5c87a727e69857710522b24eaf0c2758fe31ff4f72150ce2d6b7a762",
          "md5": "fab056c8525dce68f173db1945fccfd7",
          "sha256": "9aa832891ccc0b90732874eb2dab3eb66edf893e480184ab3843e31bf338fbcd"
        },
        "downloads": -1,
        "filename": "ntbk-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fab056c8525dce68f173db1945fccfd7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 27672,
        "upload_time": "2022-01-26T16:51:45",
        "upload_time_iso_8601": "2022-01-26T16:51:45.771743Z",
        "url": "https://files.pythonhosted.org/packages/8f/84/948a5c87a727e69857710522b24eaf0c2758fe31ff4f72150ce2d6b7a762/ntbk-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d2329da4df0f13861419ded7fdf3c6ef4bdadd7ad8a15ecae04833842ab65de",
          "md5": "b5c44ed6bacd429e3d6fe38393aa46f8",
          "sha256": "e5ad733cf027313baf6ce8d9d2c6cb4fff2eadd362d64b07a85dbfc9b0834e36"
        },
        "downloads": -1,
        "filename": "ntbk-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b5c44ed6bacd429e3d6fe38393aa46f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26649,
        "upload_time": "2022-01-26T16:51:48",
        "upload_time_iso_8601": "2022-01-26T16:51:48.023100Z",
        "url": "https://files.pythonhosted.org/packages/4d/23/29da4df0f13861419ded7fdf3c6ef4bdadd7ad8a15ecae04833842ab65de/ntbk-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f84948a5c87a727e69857710522b24eaf0c2758fe31ff4f72150ce2d6b7a762",
        "md5": "fab056c8525dce68f173db1945fccfd7",
        "sha256": "9aa832891ccc0b90732874eb2dab3eb66edf893e480184ab3843e31bf338fbcd"
      },
      "downloads": -1,
      "filename": "ntbk-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fab056c8525dce68f173db1945fccfd7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 27672,
      "upload_time": "2022-01-26T16:51:45",
      "upload_time_iso_8601": "2022-01-26T16:51:45.771743Z",
      "url": "https://files.pythonhosted.org/packages/8f/84/948a5c87a727e69857710522b24eaf0c2758fe31ff4f72150ce2d6b7a762/ntbk-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d2329da4df0f13861419ded7fdf3c6ef4bdadd7ad8a15ecae04833842ab65de",
        "md5": "b5c44ed6bacd429e3d6fe38393aa46f8",
        "sha256": "e5ad733cf027313baf6ce8d9d2c6cb4fff2eadd362d64b07a85dbfc9b0834e36"
      },
      "downloads": -1,
      "filename": "ntbk-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b5c44ed6bacd429e3d6fe38393aa46f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26649,
      "upload_time": "2022-01-26T16:51:48",
      "upload_time_iso_8601": "2022-01-26T16:51:48.023100Z",
      "url": "https://files.pythonhosted.org/packages/4d/23/29da4df0f13861419ded7fdf3c6ef4bdadd7ad8a15ecae04833842ab65de/ntbk-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}