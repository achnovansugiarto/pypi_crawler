{
  "info": {
    "author": "AuReMe",
    "author_email": "gem-aureme@inria.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/emapper2gbk.svg\n\t:target: https://pypi.org/project/emapper2gbk\n\n.. image:: https://img.shields.io/github/license/AuReMe/emapper_to_gbk.svg\n\t:target: https://github.com/AuReMe/emapper_to_gbk/blob/master/LICENSE\n\n.. image:: https://github.com/AuReMe/emapper_to_gbk/workflows/Python%20package/badge.svg\n    :target: https://github.com/AuReMe/emapper_to_gbk/actions\n\n.. image:: https://img.shields.io/badge/doi-10.7554/eLife.61968-blueviolet.svg\n\t:target: https://doi.org/10.7554/eLife.61968\n\nemapper2gbk: creation of genbank files from Eggnog-mapper annotation outputs\n============================================================================\n\nStarting from fasta and `Eggnog-mapper <http://eggnog-mapper.embl.de/>`__ annotation files, build a gbk file that is suitable for metabolic network reconstruction with `Pathway Tools <http://bioinformatics.ai.sri.com/ptools/>`__. Adds the GO terms and EC numbers annotations in the genbank file.\nThere are two main modes:\n\n* **genes mode**: suitable when a list of isolated genes/proteins have been annotated with Eggnog-mapper, typically the gene catalogue of a metagenome.\n\n* **genomes mode**: usually when focusing on a single organism, with a ``.gff`` file. The creation of genbanks can be performed in parallel by providing directories (with matching names for genomes, proteomes and annotation files) as inputs.\n\n**If you use emapper2gbk, please cite**\n\nBelcour* A, Frioux* C, Aite M, Bretaudeau A, Hildebrand F, Siegel A. Metage2Metabo, microbiota-scale metabolic complementarity for the identification of key species. eLife 2020;9:e61968 `https://doi.org/10.7554/eLife.61968 <https://doi.org/10.7554/eLife.61968>`_ .\n\nMain inputs\n-----------\n\nemapper2gbk genes\n~~~~~~~~~~~~~~~~~\n\nFor each annotated list of genes, inputs are:\n\n* a nucleotide fasta file containing the CDS sequence of each genes or a folder containing multiple nucleotide fasta files.\n* the translated sequences in amino-acids in fasta or a folder containing the corresponding protein sequences to the nucleotide sequences (must be the same name).\n* the annotation file obtained after Eggnog-mapper annotation (usually ``xxx.emapper.annotation``) or a folder with multiple annotation files (must be the same name as nucleotide fasta file and ends with '.tsv' extension).\n\nIn addition, as optional files:\n\n* the name of the considered organism (can be \"bacteria\" or \"metagenome\") or a file with organisms names (matching the genomes names).\n* the merge option to merge genes into fake contigs.\n* the number of available cores for multiprocessing (when working on multiple genomes).\n* a go-basic file of GO ontology (if not given, emapper2gbk will download a copy and use it).\n\nExample:\n\nInput with files:\n\n.. code-block:: text\n\n    nucleotide_sequences.fna\n    protein_sequence.faa\n    annotation.emapper.annotation\n\nInput with folders:\n\n.. code-block:: text\n\n    nucleotide_sequences\n    ├── gene_list_1.fna\n    ├── gene_list_2.fna\n    protein_sequence\n    ├── gene_list_1.faa\n    ├── gene_list_2.faa\n    annotation\n    ├── gene_list_1.tsv\n    ├── gene_list_2.tsv\n\n.. image:: pictures/emapper2gbk_genes.svg\n\nTo work the ID of the genes in the nucleic fasta file (``-fn``) must be the same than the ID of the proteins in the protein fasta file (``-fp``) and in the annotation file (``-a``).\n\nemapper2gbk genomes\n~~~~~~~~~~~~~~~~~~~\n\nFor each genomes, inputs are:\n\n* a nucleotide fasta file containing the sequence of each contigs/chromosomes for the genome or a folder containing multiple nucleotide fasta files.\n* the proteome corresponding to the genome or a folder containing the corresponding protein sequences to the nucleotide sequences (having the same name as the nucleotides files).\n* the GFF file corresponding to the genome or a folder containing multiple GFF files (each GFF files must have the same name as the corresponding nucleotide files).\n* the annotation file obtained after Eggnog-mapper annotation (usually ``xxx.emapper.annotation``) or a folder with multiple annotation files (must be the same name as nucleotide fasta file and ends with '.tsv' extension)\n\nIn addition, as optional files:\n\n* the name of the considered organism (can be \"bacteria\") or a file with organisms names (matching the genomes names).\n* the number of available cores for multiprocessing (when working on multiple genomes).\n* a go-basic file of GO ontology (if not given, emapper2gbk will download a copy and use it).\n\nExample:\n\nInput with files:\n\n.. code-block:: text\n\n    nucleotide_sequences.fna\n    protein_sequence.faa\n    annotation.emapper.annotation\n    genome.gff\n\nInput with folders:\n\n.. code-block:: text\n\n    nucleotide_sequences\n    ├── genome_1.fna\n    ├── genome_2.fna\n    protein_sequence\n    ├── genome_1.faa\n    ├── genome_2.faa\n    annotation\n    ├── genome_1.tsv\n    ├── genome_2.tsv\n    gff\n    ├── genome_1.gff\n    ├── genome_2.gff\n\n.. image:: pictures/emapper2gbk_genomes.svg\n\nThe ID in the chromosome/contigs/scaffolds fasta file (``-fn``) must correspond to region in the gff file (``-g``).\nThen the genes in the region will be found and the child CDS associated to the genes wil be extracted.\nThe CDS ID must be the same than the ID in the protein fasta file (``-fp``) and the ID in the eggnog-mapper annotation file (``-a``).\n\n\nBy default emapper2gbk searches for inheritance between genes and CDS in the GFF files.\nA gene feature is required and the CDS feature must have the gene feature as a parent, like in this example:\n\n.. code-block:: text\n\n    ##gff file\n    region_1\tRefSeq\tregion\t1\t12642\t.\t+\t.\tID=region_1\n    region_1\tRefSeq\tgene\t1\t2445\t.\t-\t.\tID=gene_1\n    region_1\tRefSeq\tCDS\t1\t2445\t.\t-\t0\tID=cds_1;Parent=gene_1\n\nDepending on which field (CDS, mRNA or gene) of the gff is associated with the proteome IDs in faa file, the gff-type (``-gt``) option can take into account these 3 parameters (``CDS``, ``mRNA``, ``gene``).\nThe tool also takes into account particular gff formats (Gmove and eggnog) and the gff-type option (``-gt``) can take these 2 parameters (``gmove``, ``eggnog``).\n\n**CDS gff type**\n\nFor example, some GFF files can be formatted differently with only CDS (such as in `Prodigal <https://github.com/hyattpd/Prodigal>`__ or `Prokka <https://github.com/tseemann/prokka>`__ GFF), it is possible to use them with ``-gt CDS`` (case sensitive).\nHere is an example of the format accepted by this command (with ID cds_1 being the same as the one in the faa and eggnogg-mapper files):\n\n.. code-block:: text\n\n    ##gff file\n    region_1\tRefSeq\tCDS\t1\t2445\t.\t-\t0\tID=cds_1\n\n**mRNA gff type**\n\nThe ``-gt mRNA`` option (case sensitive) is to be used in case the protein identifiers in the faa file match the identifiers in the \"mRNA\" field of the gff.\nHere is an example of the format accepted by this command (with ID cds_1 being the same as the one in the faa and eggnogg-mapper files):\n\n.. code-block:: text\n\n    ##gff file\n    region_1\tRefSeq\tmRNA\t1\t2445\t.\t-\t0\tID=cds_1\n\n\nIt is useful for gff formats containing multiple \"CDS\" fields associated with 1 gene and/or 1 mRNA and a single sequence in the faa file.\n\n**gene gff type**\n\nThe ``-gt gene`` option is to be used in case the protein identifiers in the faa file match the identifiers in the \"gene\" field of the gff.\nHere is an example of the format accepted by this command (with ID cds_1 being the same as the one in the faa and eggnogg-mapper files):\n\n.. code-block:: text\n\n    ##gff file\n    region_1\tRefSeq\tgene\t1\t2445\t.\t-\t0\tID=cds_1\n\n\n**Gmove gff type**\n\nThe tool handle GFF from `Gmove <https://www.genoscope.cns.fr/gmove/>`__ (with ``-gt gmove``) with the following format:\n\n.. code-block:: text\n\n    ##gff file\n    region_1\tGmove\tmRNA\t1\t2445\t.\t+\t.\tID=mRNA_gene_1;Name=mRNA_gene_1\n    region_1\tGmove\tCDS\t1\t2445\t.\t-\t0\tParent=mRNA_gene_1\n\nFor gmove, the proteins in the faa and eggnogg-mapper files will be prefixed with ``prot_`` (like ``prot_gene_1`` for ``mRNA_gene_1``). Emapper2gbk should be able to handle these differences.\n\n**EggNog gff type**\n\nIt is also possible to use the GFF created by eggnog-mapper (if a fasta genome was given as input to eggnog-mapper) with ``-gt eggnog``.\nAn example of such use can be seen in the `test folder <https://github.com/AuReMe/emapper2gbk/tree/master/tests/data_eggnog>`__ \n\nDependencies and installation\n-----------------------------\n\nDependencies\n~~~~~~~~~~~~\n\nAll are described in ``requirements.txt`` and can be installed with ``pip install -r requirements.txt``.\n\n* biopython\n* gffutils\n* pandas\n* pronto\n* requests\n\nInstall\n~~~~~~~\n\n* From this cloned repository\n\n.. code-block:: sh\n\n    pip install -r requirements.txt\n    pip install .\n\n* From Pypi\n\n.. code-block:: sh\n\n    pip install emapper2gbk\n\nUsage\n-----\n\nConvert GFF, fastas, annotation table and species name into Genbank.\n\n.. code-block:: sh\n\n    usage: emapper2gbk [-h] [-v] {genes,genomes} ...\n\n    Starting from fasta and Eggnog-mapper annotation files, build a gbk file that is suitable for metabolic network reconstruction with Pathway Tools. Adds the GO terms and EC numbers annotations in the genbank file.\n\n    Two modes:\n    - genomes (one genome/proteome/gff/annot file --> one gbk).\n    - genes with the annotation of the full gene catalogue and fasta files (nucleic and protein) corresponding to list of genes.\n\n    Examples:\n\n    * Genomic - single mode\n\n    emapper2gbk genomes -fn genome.fna -fp proteome.faa -gff genome.gff -n \"Escherichia coli\" -o coli.gbk -a eggnog_annotation.tsv [-go go-basic.obo]\n\n    * Genomic - multiple mode, \"bacteria\" as default name\n\n    emapper2gbk genes -fn genome_dir/ -fp proteome_dir/ -n metagenome -o gbk_dir/ -a eggnog_annotation_dir/ [-go go-basic.obo]\n\n    * Genomic - multiple mode, tsv file for organism names\n\n    emapper2gbk genes -fn genome_dir/ -fp proteome_dir/ -nf matching_genome_orgnames.tsv -o gbk_dir/ -a eggnog_annotation_dir/ [-go go-basic.obo]\n\n    * Metagenomic\n\n    emapper2gbk genes -fn genome_dir/ -fp proteome_dir/ -o gbk_dir/ -a gene_cat_ggnog_annotation.tsv --one-annot-file [-go go-basic.obo]\n\n    You can give the GO ontology as an input to the program, it will be otherwise downloaded during the run. You can download it here: http://purl.obolibrary.org/obo/go/go-basic.obo .\n    The program requests the NCBI database to retrieve taxonomic information of the organism. However, if the organism is \"bacteria\" or \"metagenome\", the taxonomic information will not have to be retrieved online.\n    Hence, if you need to run the program from a cluster with no internet access, it is possible for a \"bacteria\" or \"metagenome\" organism, and by providing the GO-basic.obo file.\n    For specific help on each subcommand use: emapper2gbk {cmd} --help\n\n    optional arguments:\n    -h, --help       show this help message and exit\n    -v, --version    show program's version number and exit\n\n    subcommands:\n    valid subcommands:\n\n    {genes,genomes}\n        genes          genes mode : 1-n annot, 1-n faa, 1-n fna (gene sequences) --> 1 gbk\n        genomes        genomes mode: 1-n contig/chromosome fasta, 1-n protein fasta, 1-n GFF, 1-n annot --> 1 gbk\n\n\n* Genomes mode\n\n  * Usage\n\n    .. code-block:: sh\n\n        usage: emapper2gbk genomes [-h] -fn FASTANUCLEIC -fp FASTAPROT -o OUPUT_DIR -g GFF [-gt GFF_TYPE] [-nf NAMEFILE]\n                                [-n NAME] -a ANNOTATION [-c CPU] [-go GOBASIC] [-q] [--keep-gff-annotation]\n\n        Build a gbk file for each genome with an annotation file for each\n\n        optional arguments:\n        -h, --help            show this help message and exit\n        -fn FASTANUCLEIC, --fastanucleic FASTANUCLEIC\n                                fna file or directory\n        -fp FASTAPROT, --fastaprot FASTAPROT\n                                faa file or directory\n        -o OUPUT_DIR, --out OUPUT_DIR\n                                output directory/file path\n        -g GFF, --gff GFF     gff file or directory\n        -gt GFF_TYPE, --gff-type GFF_TYPE\n                                gff type, by default emapper2gbk search for CDS with gene as Parent in the GFF, but by using\n                                the '-gt cds_only' option emapper2gbk will only use the CDS information from the genome\n        -nf NAMEFILE, --namefile NAMEFILE\n                                organism/genome name (col 2) associated to genome file basenames (col 1). Default =\n                                'metagenome' for metagenomic and 'cellular organisms' for genomic\n        -n NAME, --name NAME  organism/genome name in quotes\n        -a ANNOTATION, --annotation ANNOTATION\n                                eggnog annotation file or directory\n        -c CPU, --cpu CPU     cpu number for metagenomic mode or genome mode using input directories\n        -go GOBASIC, --gobasic GOBASIC\n                                go ontology, GOBASIC is either the name of an existing file containing the GO Ontology or the\n                                name of the file that will be created by emapper2gbk containing the GO Ontology\n        -q, --quiet           quiet mode, only warning, errors logged into console\n        --keep-gff-annotation\n                                Copy the annotation from the GFF (product) into the genbank output file.\n\n  * Examples\n\n    * Genomic - single mode\n\n    .. code:: sh\n\n      emapper2gbk genomes -fn genome.fna -fp proteome.faa -gff genome.gff -n \"Escherichia coli\" -o coli.gbk -a eggnog_annotation.tsv [-go go-basic.obo]\n\n    * Genomic - multiple mode, \"bacteria\" as default name\n\n* genes mode\n\n  * Usage\n\n    .. code-block:: sh\n\n        usage: emapper2gbk genes [-h] -fn FASTANUCLEIC -fp FASTAPROT -o OUPUT_DIR [--one-annot-file] -a ANNOTATION [-c CPU]\n                                [-n NAME] [-nf NAMEFILE] [-go GOBASIC] [--merge MERGE] [-q]\n\n        Build a gbk file for each genome/set of genes with an annotation file for each\n\n        optional arguments:\n        -h, --help            show this help message and exit\n        -fn FASTANUCLEIC, --fastanucleic FASTANUCLEIC\n                                fna file or directory\n        -fp FASTAPROT, --fastaprot FASTAPROT\n                                faa file or directory\n        -o OUPUT_DIR, --out OUPUT_DIR\n                                output directory/file path\n        --one-annot-file      Option to use when there is only one annotation file for multiples genes fastas.\n        -a ANNOTATION, --annotation ANNOTATION\n                                eggnog annotation file or directory\n        -c CPU, --cpu CPU     cpu number for metagenomic mode or genome mode using input directories\n        -n NAME, --name NAME  organism/genome name in quotes\n        -nf NAMEFILE, --namefile NAMEFILE\n                                organism/genome name (col 2) associated to genome file basenames (col 1). Default =\n                                'metagenome' for metagenomic and 'cellular organisms' for genomic\n        -go GOBASIC, --gobasic GOBASIC\n                                go ontology, GOBASIC is either the name of an existing file containing the GO Ontology or the\n                                name of the file that will be created by emapper2gbk containing the GO Ontology\n        --merge MERGE         Number of gene sequences to merge into fake contig from a same file in the genbank file.\n        -q, --quiet           quiet mode, only warning, errors logged into console\n\n  * Example\n\n    .. code:: sh\n\n      emapper2gbk genes -fn genome_dir/ -fp proteome_dir/ -o gbk_dir/ -a gene_cat_ggnog_annotation.tsv [-go go-basic.obo]\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AuReMe/emapper2gbk",
    "keywords": "emapper2gbk",
    "license": "LGPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "emapper2gbk",
    "package_url": "https://pypi.org/project/emapper2gbk/",
    "platform": null,
    "project_url": "https://pypi.org/project/emapper2gbk/",
    "project_urls": {
      "Homepage": "https://github.com/AuReMe/emapper2gbk"
    },
    "release_url": "https://pypi.org/project/emapper2gbk/0.3.0/",
    "requires_dist": [
      "biopython",
      "ete3",
      "gffutils",
      "pandas",
      "pronto",
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "Build .gbk files starting from eggnog annotation files and genomes (fasta)",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15550476,
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6eb390df5161b0be37b5ed9645deec27c485a12a7d49de83caee7f21a4a7d61d",
          "md5": "6d27e1aaaa10b3fc9e1ac6bef27ab6c0",
          "sha256": "d6242e29e90846b9e425efd0410a44e83abd92456d0bc85735b6523de0d86ce0"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d27e1aaaa10b3fc9e1ac6bef27ab6c0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 19654,
        "upload_time": "2020-06-24T13:51:50",
        "upload_time_iso_8601": "2020-06-24T13:51:50.312712Z",
        "url": "https://files.pythonhosted.org/packages/6e/b3/90df5161b0be37b5ed9645deec27c485a12a7d49de83caee7f21a4a7d61d/emapper2gbk-0.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49185db1e64679c54be24783dfbe47f8d1b799801028c2d47aeedc8edd09c9a5",
          "md5": "268f37c46ac41c8b26a37e4e82891521",
          "sha256": "e64d285237f78041098e9c9563794d87d11872e451551c255dbf8119a5a735f9"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "268f37c46ac41c8b26a37e4e82891521",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4260757,
        "upload_time": "2020-06-24T13:51:51",
        "upload_time_iso_8601": "2020-06-24T13:51:51.377799Z",
        "url": "https://files.pythonhosted.org/packages/49/18/5db1e64679c54be24783dfbe47f8d1b799801028c2d47aeedc8edd09c9a5/emapper2gbk-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c292a8d6fa7c7244b9788a6224192a704b07f42466bab547d188ff6b09a63747",
          "md5": "cdc24d22e481de6476dc0c359f90a956",
          "sha256": "f8b6cd7f9bff7ea698573ef5dfe47fa4be3f7824ac56905c12a9955648301552"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cdc24d22e481de6476dc0c359f90a956",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 19760,
        "upload_time": "2020-09-08T14:14:00",
        "upload_time_iso_8601": "2020-09-08T14:14:00.713985Z",
        "url": "https://files.pythonhosted.org/packages/c2/92/a8d6fa7c7244b9788a6224192a704b07f42466bab547d188ff6b09a63747/emapper2gbk-0.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c538c781c7f481233119517e52178baba2ded2e88e260f73a7ce83e6a6534ba8",
          "md5": "a5edd6bf352f888f7504cf8cc4cc57c7",
          "sha256": "422feacf3e263c55a2e5068c05f5cfe810e2a8ba7a6834bf8ac60aa8e1416a46"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a5edd6bf352f888f7504cf8cc4cc57c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4260851,
        "upload_time": "2020-09-08T14:14:02",
        "upload_time_iso_8601": "2020-09-08T14:14:02.002779Z",
        "url": "https://files.pythonhosted.org/packages/c5/38/c781c7f481233119517e52178baba2ded2e88e260f73a7ce83e6a6534ba8/emapper2gbk-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5688bddb6e1dab3cfb22564e7912a86924e8ff338be6e6dbc430af4e79629b75",
          "md5": "1c1f231a753b1d9a71633adb947f9d0c",
          "sha256": "d4803419c36ea07041105ad8d9873f2106c7cc4b0e5fe6832ad9ff95ea5a0ddd"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c1f231a753b1d9a71633adb947f9d0c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27897,
        "upload_time": "2021-06-29T17:53:39",
        "upload_time_iso_8601": "2021-06-29T17:53:39.662989Z",
        "url": "https://files.pythonhosted.org/packages/56/88/bddb6e1dab3cfb22564e7912a86924e8ff338be6e6dbc430af4e79629b75/emapper2gbk-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f510e10a459782f802bb0fa17002fbb12a67f0370265575cdab00c311af12ef7",
          "md5": "9ba6c5293d0bac14075fb199728d288a",
          "sha256": "289473ae89b993a99f8e850c6bad5afa89ce5971b89553668e1b67db06509571"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9ba6c5293d0bac14075fb199728d288a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22389,
        "upload_time": "2021-06-29T17:53:41",
        "upload_time_iso_8601": "2021-06-29T17:53:41.031155Z",
        "url": "https://files.pythonhosted.org/packages/f5/10/e10a459782f802bb0fa17002fbb12a67f0370265575cdab00c311af12ef7/emapper2gbk-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76abfa6838eeb88562e9b3c49cfc51a3a83ce82fc820dc4af9afef47ef4a77d5",
          "md5": "98f8d92b5e28457cdada479543515a96",
          "sha256": "207da30326a1a6a6fd64b8368b917f2c3dd7ec949555464ccc2400270781de6d"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "98f8d92b5e28457cdada479543515a96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27198,
        "upload_time": "2022-09-29T12:18:12",
        "upload_time_iso_8601": "2022-09-29T12:18:12.308279Z",
        "url": "https://files.pythonhosted.org/packages/76/ab/fa6838eeb88562e9b3c49cfc51a3a83ce82fc820dc4af9afef47ef4a77d5/emapper2gbk-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1d1f182ac13da80bfa76d11414632e6b8e21a0982ac1b2a1d22fd36c6fc4c60",
          "md5": "ce6eaa180867b281dbf2556c7f1d9fc9",
          "sha256": "fdd96c568de2746f7d86eefb5f894ad44876c798b9a5eae01dab846fcc97a72a"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce6eaa180867b281dbf2556c7f1d9fc9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29835,
        "upload_time": "2022-09-29T12:40:25",
        "upload_time_iso_8601": "2022-09-29T12:40:25.628808Z",
        "url": "https://files.pythonhosted.org/packages/f1/d1/f182ac13da80bfa76d11414632e6b8e21a0982ac1b2a1d22fd36c6fc4c60/emapper2gbk-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f1a20138187896a1927446db3637f5279f0c8db5ed4669030235928365cecc0",
          "md5": "7c4afa458d68b9a54b8fbd2899470424",
          "sha256": "bc85a44e09359b2e97944f29cdece2a9adf0cd4b5b717be92ed56506320b1b3a"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7c4afa458d68b9a54b8fbd2899470424",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24744,
        "upload_time": "2022-09-29T12:40:26",
        "upload_time_iso_8601": "2022-09-29T12:40:26.880164Z",
        "url": "https://files.pythonhosted.org/packages/2f/1a/20138187896a1927446db3637f5279f0c8db5ed4669030235928365cecc0/emapper2gbk-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec5f144ba1d6e0705a310ef7d4373736f7fcc4d442b85acb1cadc2f2563d3570",
          "md5": "a5491dfd4c3291c450d2b00d8497c638",
          "sha256": "e7b9f256e260ae4abdd4dc3da7e1a3bfd07a9a5838a660aec22e8cd6193a8b56"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5491dfd4c3291c450d2b00d8497c638",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 30189,
        "upload_time": "2022-10-27T10:06:39",
        "upload_time_iso_8601": "2022-10-27T10:06:39.266281Z",
        "url": "https://files.pythonhosted.org/packages/ec/5f/144ba1d6e0705a310ef7d4373736f7fcc4d442b85acb1cadc2f2563d3570/emapper2gbk-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72bf333e0c220f6d67bbe9ebb9318c656859481ed6da2ba0619f4393862b913a",
          "md5": "f0d1f2c7b0e1042d090e476ddd921066",
          "sha256": "460f65f9a0659347cc8239a6e627681392d0852021da3616d2f7b189f2cc9ee1"
        },
        "downloads": -1,
        "filename": "emapper2gbk-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0d1f2c7b0e1042d090e476ddd921066",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25542,
        "upload_time": "2022-10-27T10:06:41",
        "upload_time_iso_8601": "2022-10-27T10:06:41.032634Z",
        "url": "https://files.pythonhosted.org/packages/72/bf/333e0c220f6d67bbe9ebb9318c656859481ed6da2ba0619f4393862b913a/emapper2gbk-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec5f144ba1d6e0705a310ef7d4373736f7fcc4d442b85acb1cadc2f2563d3570",
        "md5": "a5491dfd4c3291c450d2b00d8497c638",
        "sha256": "e7b9f256e260ae4abdd4dc3da7e1a3bfd07a9a5838a660aec22e8cd6193a8b56"
      },
      "downloads": -1,
      "filename": "emapper2gbk-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a5491dfd4c3291c450d2b00d8497c638",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 30189,
      "upload_time": "2022-10-27T10:06:39",
      "upload_time_iso_8601": "2022-10-27T10:06:39.266281Z",
      "url": "https://files.pythonhosted.org/packages/ec/5f/144ba1d6e0705a310ef7d4373736f7fcc4d442b85acb1cadc2f2563d3570/emapper2gbk-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "72bf333e0c220f6d67bbe9ebb9318c656859481ed6da2ba0619f4393862b913a",
        "md5": "f0d1f2c7b0e1042d090e476ddd921066",
        "sha256": "460f65f9a0659347cc8239a6e627681392d0852021da3616d2f7b189f2cc9ee1"
      },
      "downloads": -1,
      "filename": "emapper2gbk-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f0d1f2c7b0e1042d090e476ddd921066",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 25542,
      "upload_time": "2022-10-27T10:06:41",
      "upload_time_iso_8601": "2022-10-27T10:06:41.032634Z",
      "url": "https://files.pythonhosted.org/packages/72/bf/333e0c220f6d67bbe9ebb9318c656859481ed6da2ba0619f4393862b913a/emapper2gbk-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}