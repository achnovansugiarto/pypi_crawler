{
  "info": {
    "author": null,
    "author_email": "Stephan Helma <s.p.helma@gmx.net>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# licence\n\nIf you ever wanted to add a license file automatically or wanted to add a\nlicense header to an automatically generated file, look no further, because\nthat is exactly what this module does. It allows you to select from the\npreconfigured licenses and you can also add your own licenses.\n\nIt does not need any external modules at all!\n\nAnother advantage is, that it is easy to add new licenses: Just prepare the\nlicense file and save it either in the default directory (see `License.paths`)\nor a directory of your own and tell `Licence` to use it. No fiddling with\nPython code!\n\n\n## Homepage\n\n- https://codeberg.org/sph/licence/\n- https://pypi.org/project/licence/\n\n\n## A word of warning\n\nWatch the British spelling of \"licen**c**e\" with regard to computer code\nthroughout! This avoids a name conflict with the built-in statement `license`.\n\n\n## How to install?\n\n```shell\npip3 install licence\n```\n\nor to upgrade an existing installation\n\n```shell\npip3 install --upgrade licence\n```\n\n\n## How to use?\n\nImport the module:\n```python3\n>>> from licence import Licence\n```\n\nLoad the license:\n```python3\n>>> lic = Licence('GPL-3.0')\n```\n\nRender the license with default values:\n```python3\n>>> t = lic.licence()\n>>> # `t` now contains a string with the license text, which can be written\n>>> # to a file, such as:\n>>> with open('LICENSE', 'w') as f:\n...     f.write(t)\n```\n\nRender the header string to be included into each file:\n```python3\n>>> t = lic.header()\n```\nIf the license does not support rendering a `header`, an `AttributeError` will\nbe thrown!\n\nIf you want the header to be enclosed in triple quotations marks:\n```python3\n>>> t = lic.header(prolog='\"\"\"', epilog='\"\"\"')\n```\n\nor if you want to have it as a comment:\n```python3\n>>> t = lic.header(comment=\"# \")\n```\n\n\n## How to find a license?\n\nImport the module:\n```python3\n>>> from licence import Licence\n```\n\nFind the license:\n```python3\n>>> lice = Licence.find(id='MIT')\n>>> # `lice` now contains a list with licenses, whose ids are 'MIT' - since\n>>> # ids is unique, there should be only one license\n>>> lice\n[<Licence('MIT')]\n```\n\nFind all GNU licenses:\n```python3\n>>> lice = Licence.find(pypi='License :: OSI Approved :: GNU')\n>>> lice\n[<Licence('GPL-2.0+')>, <Licence('GPL-2.0')>, <Licence('AGPL-3.0')>, ...]\n```\n\nGet all available licenses:\n```python3\n>>> lice = Licence.find()\n```\n\nNote, that after a license has been found, the license texts have to be loaded,\notherwise an `AttributeError` will be thrown!\n```python3\n>>> lice = Licence.find(id='MIT')\n>>> lice\n[<Licence('MIT')]\n>>> lic = lice[0]\n>>> t = lic.licence()\nAttributeError: 'The MIT license' does not use 'licence'\n>>> lic.load()\n>>> t = lic.licence()\n```\n\nThe `Licence.find()` class method takes keyword arguments and will filter the\navailable licenses based on these keywords, e.g. \"id='MIT'\" looks for all\nlicenses whose id is exactly 'MIT'. Other keywords are:\n- `id`: Exact match\n  (see https://spdx.org/licenses/)\n- `name`: Exact match\n  (see https://spdx.org/licenses/)\n- `pypi`: Matches the start of the meta data value\n  (see https://pypi.org/classifiers/)\n- `rpm`: Exact match\n  (see https://fedoraproject.org/wiki/Licensing:Main#SoftwareLicenses)\n- `url`: Exact match\n\nMultiple keywords are supported and they are `AND`ed together.\n\n\n## How to add a new license?\n\nAll that is required is to add a license file to a location from the list\n`Licence.paths`!\n\nStart with a text file containing the license text. Then add the meta data at\nthe beginning of the file:\n```\n# name: <full name of the license>\n# rpm: <identifier used by rpm>\n# pypi: <identifier used by PyPi>\n# url: <link to the license>\n```\n\n- The `<full name of the license>` can be looked up at https://spdx.org/licenses/\n- The `<identifier used by rpm>` can be looked up at\n  https://fedoraproject.org/wiki/Licensing:Main#SoftwareLicenses\n- The `<identifier used by PyPi>` can be looked up at\n  https://pypi.org/classifiers/\n\nIf the license asks for a header to be included into each source file, add a\nheader section:\n```\n# header:\n#    Copyright (C) yyyy  author name\n# header: end\n```\nIf the license asks to display some information for interactive programs, add\na interactive section:\n```\n# interactive:\n#     program  Copyright (C) yyyy  author name\n# interactive: end\n```\n\nNow replace the variable parts of the license with tokens starting with `$`.\nThese are replaced, when the text is rendered. Standard tokens are:\n- `$year`: The year (or current year, if not given)\n- `$login`: The author's login name (if not given, the login name of the\n  current user as provided by the operating system will be used).\n- `$author`: The author's full name (if not given, the full name of the\n  current user as provided by the operating system will be used).\n- `$email`: The author's email address (if not given, the email address of\n  the current user as provided by the operating system will be used - note,\n  that this is not available most of the time).\n- `$name_email`: The string \"name <email>\" (if not given, it will be\n  calculated from `$author` and `$email`).\n\nAny other tokens can be used as well, but they do not have a default value.\n\nNow look back to https://spdx.org/licenses/ and make a note of the identifier.\nThis will be the file name and the internal 'id' of the license. So save the\nfile under the identifier with a suffix of '.txt' in any location mentioned in\nthe `Licence.paths` (see next section).\n\nPlease also consider to make it available at https://codeberg.org/sph/licence,\neither by making a [pull request](https://codeberg.org/sph/license/pulls/)\nwith the new license file or open a\n[new issue](https://codeberg.org/sph/license/issues/) and attach the new\nlicense file.\n\n\n## How to have your own repository of license files?\n\nThe license files are stored in any location mentioned in the `Licence.paths`.\nThe standard paths, such as the user and site data directories as well as this\nmodule's path, are implemented in the module, but the list can be modified, if\nthe nees should arise:\n\n- Add a new path at the beginning of the list:\n```python3\n>>> Licence.add_path('~/licenses')\n```\n- Remove a path:\n```python3\n>>> Licence.del_path('~/licenses')\n```\n- Show all paths:\n```python3\n>>> Licence.paths\n```\n- Clear the list of paths - it will be empty afterwards:\n```python3\n>>> Licence.clear_paths()\n```\n- Reset the list of paths to its default values:\n```python3\n>>> Licence.reset_paths()\n```\n\nNote, that it is possible to modify `Licence.paths` directly (but you have to\nuse `pathlib.Path` objects!), but the above mentioned methods take care of\nthat and also make some sanity checks, so they are preferred.\n\n\n## Alternatives\n\n- [license](https://pypi.org/project/license/): The original license module,\n  but the author lost interest and does not want to hand over the project. BTW\n  that project names clashes with the Python built-in `license` statement.\n- [licenraptor](https://pypi.org/project/licenraptor/): Based on the original\n  [license](https://pypi.org/project/license/) with one (Chinese) license\n  added.\n\nCommand line utilities:\n- [choosealicense-cli](https://pypi.python.org/project/choosealicense-cli>)\n- [licenser](https://pypi.python.org/project/licenser>)\n- [licen](https://pypi.python.org/project/licen>)\n- [lice](https://pypi.python.org/project/lice>)\n- [garnish](https://pypi.python.org/project/garnish>)\n\n\n## API\n\n### Class `Licence(id, meta_only=False)`\n\nThis class reads the license file and renders the license texts. It also makes\nthe meta data accessible. In addition it provides some useful class methods,\nwhich can be called without initiating a class object.\n\n#### Initialization\n\n##### Parameters\n\n- `id` (`str`):\n  The [SPDX](https://spdx.org/licenses/) identifier of the license (this is\n  the name of the license file).\n- `meta_only` (`bool`, optional):\n  If `True`, return only the meta data, but no template or multi-line meta\n  data (multi-line data is replaced with their boolean value).\n  The default is `False`.\n\n##### Exceptions\n\nA `ValueError` is raised, if the license file `<id>.txt` does not exist in any\nof the directories specified in `Licence.paths`.\n\nA `KeyError` is raised, if the license file states a key twice (or uses any of\nthe reserved keys 'file' or 'id').\n\n#### Meta data\n\nThe class behaves like a dictionary, albeit a read-only one, so that the meta\ndata can be accessed with their key, e.g.\n```python3\n>>> l = Licence('MIT')\n>>> l['name']\n```\nreturns the full name (the `name` meta data) of the MIT license.\n\nBasically every key given in the license file is accessed in that manner; the\nmain keys are:\n- `id`: The [SPDX](https://spdx.org/licenses/) identifier of the license (not\n  read from the license file)\n- `file`: The file path to the license file (not read from the license file)\n- `name`: The full [SPDX](https://spdx.org/licenses/) name of the license\n- `rpm`: The identifier used by\n  [RPM](https://fedoraproject.org/wiki/Licensing:Main#SoftwareLicenses)\n- `pypi`: The identifier used by [PyPi](https://pypi.org/classifiers/)\n- `url`: The link to the license\n\nSome licenses specify a `header` and even an `interactive` text. These are used\nto be included into the every file of the project or as message for interactive\nprograms, respectively. They are accessed with the `header` and `interactive`\nkeys (and return a list of strings, were each string is one line of the text).\n\nThe license text itself is accessible with the `licence` key (and again is a\nlist of strings, where each string is one line of the license text).\n\n#### Method `load(meta_only=False)\n\nLoads the contents of the file stored in the 'file' key. This can be used to\nreload the contents of the file, e.g. to read in the contents of the templates,\nif the class was initialized with `meta_only=True` (which is done when finding\nlicenses).\n\nThe `meta_only` keyword parameter, has the same meaning as during the\ninitialization of the class.\n\n#### Static method `text(template, prolog=None, comment=None, epilog=None, **kwargs)`\n\nGenerate any license string, encapsulating it between `prolog` and `epilog` and\nprepending `comment` in front of every line.\n\nThe `kwargs` are used to substitute the placeholders with the same name in the\ntemplate.\n\nSince this is a static method, it can theoretically be used without loading the\nlicense file first.\n\n##### Parameters\n\n- `template` (`list`):\n   The list with the lines of the template text.\n- `prolog` (`str`|`None, optional):\n   A string to be put before the header, e.g. \"/*\" for C. If `None`, no prolog\n   is added, if the empty string \"\", an empty line is added.\n   The default is `None`.\n- `comment` (`str`|`None`):\n   A string to be put in front of each header line, e.g. \" * \" for C (or \"# \"\n   for Python). If `None`, nothing is added before the line.\n   The default is `None`.\n- `epilog` (`str`|`None`):\n   A string to be put after the header, e.g. \" */\" for C. If `None`, no epilog\n   is added, if the empty string \"\", an empty line is added.\n   The default is `None`.\n- `**kwargs`:\n    Keyword arguments with replacements for tokens in the license file.\n    The most important keys are:\n    - `year` (optional):\n        The year to be put into the copyright line.\n        The default is the current year.\n    - `login` (optional):\n        The author`s login name. The default is extracted from information\n        provided by the operating system.\n    - `author` (optional):\n        The author`s full name to be put into the copyright line.\n        The default is extracted from information provided by the\n        operating system.\n    - `email` (optional):\n        The author's email address to be put into the copyright line. Mainly\n        used to calculate the `name_email` key: If empty, no email address is\n        inserted into the `name_email` key.\n        The default is extracted from information provided by the operating\n        system (which most of the time is an empty string!)\n    - `name_email` (optional):\n        The author's full name and the email address to be put into the\n        copyright line.\n        The default is calculated from the `author` and `email` keys:\n        \"author <email>\" (if the `email` key is empty, no email is added and\n        `name_email` simply becomes \"author\").\n\n#### Class method `find(**kwargs)`\n\nLooks for licenses using the given criteria. It uses the meta data and returns\na list with all licenses matching the criteria.\n\nThe keyword arguments are the criteria used to filter the available licenses,\ne.g. `id='MIT'` looks for all licenses whose id is exactly 'MIT' (there should\nbe only one license in the list, because the `id` should be unique). The main\nkeywords are (see also the section about the meta data above):\n- `id` (exact match):\n  See https://spdx.org/licenses/ for standard identifiers.\n- `name` (exact match):\n  See https://spdx.org/licenses/ for standard names.\n- `pypi` (matches the start of the meta data value):\n  See https://pypi.org/classifiers/ for valid identifiers.\n- `rpm` (exact match):\n  See https://fedoraproject.org/wiki/Licensing:Main#SoftwareLicenses for valid\n  names.\n- `url` (exact match)\n- `header` (boolean)\n  Filter if the license asks for a header to be included into each source file.\n- `interactive` (boolean)\n  Filter if the license asks to display some information for interactive\n  programs.\n\nMultiple keywords are supported and they are `AND`ed together.\n\nNote that a license found that way does not contain the license texts yet. These\nneed to be loaded with `load()`!\n\n#### Class methods `licence()`, `header()`, `interactive()`, …\n\nIf some data should be rendered into a license text, call that meta data with\nthe same arguments as the `text()` method, but without the `template`\nparameter, which will be gotten from the meta data, e.g. `licence()` will\nrender the meta data `licence`, `header(comment='# ')` will render the meta\ndata `header` and adds a '# ' in front of each line.\n\n#### `paths` manipulation\n\n##### Class attribute `paths`\n\nThe class attribute `Licence.paths` contains the list of `pathlib.Path`s for\neach directory, where license files are stored. It already contains the path\nto the licenses supplied with the module.\n\nThis class attribute can be accessed without initiating the `Licence` class!\n\nThe list of paths can be manipulated with the help of the `.…_path()` class\nmethods (see below). Any subsequent calls of `Licence()` will then use this\nmodified list of paths to look for a license file.\n\n##### Class method `add_path(path)`\n\nAdd the new directory `path` the list of paths at its end. The `path` can\neither be a string or a `pathlib.Path`. The special character `~` will be\nexpanded with the user's home directory. It checks, if the path is an\nexisting directory and if it is not already in the list.\n\nRaises `FileNotFoundError`, if the `path` does not exists.\n\n##### Class method `del_path(path)`\n\nDeletes the directory `path` from the list of paths. The `path` can either be\na string or a `pathlib.Path`. The special character `~` will be expanded with\nthe user's home directory.\n\nRaises `AttributeError`, if the `path` is not in the list of paths.\n\n##### Class method `clear_path(path)`\n\nClears the list of paths and set it to the empty list.\n\n### Helper functions\n\n#### Function `get_year()`\n\nReturns the current year.\n\n#### Function `get_login()`\n\nReturns the login name for the current user.\n\n#### Function `get_fullname()`\n\nReturns the full user name from the information provided by the operating\nsystem.\n\n#### Function `get_email()`\n\nReturns the email address from the information provided by the operating\nsystem.\n\n#### Decorator `classproperty`\n\nMakes a class property attribute and can be used very similar to the\n`@property` decorator.\n\n\n## CLI\n\nThe file can be called from the command line:\n```shell\npython3 id licence|header|... **kwargs\n```\n\nwhere `id` is the license identifier (as in the class initialization),\n`licence|header|...` the part of the license to be rendered and the keyword\narguments `**kwargs` the same as for the `text()` method (without the\n`template` parameter).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "license,osi",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "licence",
    "package_url": "https://pypi.org/project/licence/",
    "platform": null,
    "project_url": "https://pypi.org/project/licence/",
    "project_urls": {
      "Homepage": "https://codeberg.org/sph/licence",
      "Issues": "https://codeberg.org/sph/licence/issues"
    },
    "release_url": "https://pypi.org/project/licence/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "License texts and header strings.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14966982,
  "releases": {
    "0.0.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "7d8ef7981b602895fab1f04c84b808b428170bb92bbf0e35ba06d1f4e389eff1",
          "md5": "a321882fcc4fec11554b97636fa8d768",
          "sha256": "5bee6124fa86939fc7fa228a7f7b7e324c067ceab9ed42237f77474e3a170891"
        },
        "downloads": -1,
        "filename": "licence-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a321882fcc4fec11554b97636fa8d768",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 116150,
        "upload_time": "2022-08-30T22:34:20",
        "upload_time_iso_8601": "2022-08-30T22:34:20.322675Z",
        "url": "https://files.pythonhosted.org/packages/7d/8e/f7981b602895fab1f04c84b808b428170bb92bbf0e35ba06d1f4e389eff1/licence-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "f62a22a556b795b192c14fdc20c1865795bda87d587a74f93c23b23a45808819",
          "md5": "071ce05d657afab15322256ccbfe64fd",
          "sha256": "17aae45629bfec8ee2aaa092d8bbd10ccc1ac363b97b0f8f486e736ab4855437"
        },
        "downloads": -1,
        "filename": "licence-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "071ce05d657afab15322256ccbfe64fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 84472,
        "upload_time": "2022-08-30T22:34:24",
        "upload_time_iso_8601": "2022-08-30T22:34:24.455476Z",
        "url": "https://files.pythonhosted.org/packages/f6/2a/22a556b795b192c14fdc20c1865795bda87d587a74f93c23b23a45808819/licence-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "eb425945bf45474bc2da017e84cdbd2eb887f639d13787d0b89546dd85f1632f",
          "md5": "93053cb73d07f6619b64b82b874d243d",
          "sha256": "a616d8cf7e4a8f267c16e59a5b7f2e2b0f6a7e25759138b12242a8e9067789cb"
        },
        "downloads": -1,
        "filename": "licence-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93053cb73d07f6619b64b82b874d243d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 132568,
        "upload_time": "2022-08-31T19:10:38",
        "upload_time_iso_8601": "2022-08-31T19:10:38.115467Z",
        "url": "https://files.pythonhosted.org/packages/eb/42/5945bf45474bc2da017e84cdbd2eb887f639d13787d0b89546dd85f1632f/licence-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "5fe5971e6fd30ce7bda1ed9d8a2fe2a517df960d899049ccbea8a3b1cd243f5e",
          "md5": "dd0a38db423f2e772737b212863c61c2",
          "sha256": "6d7f80b6e2bb7374c379bf2fc256cd6b1eb83e6a04080a80635bbae8418a8240"
        },
        "downloads": -1,
        "filename": "licence-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dd0a38db423f2e772737b212863c61c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 101657,
        "upload_time": "2022-08-31T19:10:40",
        "upload_time_iso_8601": "2022-08-31T19:10:40.464023Z",
        "url": "https://files.pythonhosted.org/packages/5f/e5/971e6fd30ce7bda1ed9d8a2fe2a517df960d899049ccbea8a3b1cd243f5e/licence-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "19d4817aa31a9faa0c923a884844bf964acfef22fa8fe53eb09f3f865fed425a",
          "md5": "6e133e4e579c8fa2161bdca552faca43",
          "sha256": "35cbb6c090d805b1832c3da986a42bc8a86225edba6c1318008c9bb7fb273bb5"
        },
        "downloads": -1,
        "filename": "licence-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e133e4e579c8fa2161bdca552faca43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 133170,
        "upload_time": "2022-09-01T07:51:53",
        "upload_time_iso_8601": "2022-09-01T07:51:53.624173Z",
        "url": "https://files.pythonhosted.org/packages/19/d4/817aa31a9faa0c923a884844bf964acfef22fa8fe53eb09f3f865fed425a/licence-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "29f971a3e3461e81597393aa928aaeb909bf68645bdc908f5c739f93e6e6dd15",
          "md5": "772eefb72097b388b3e8051a8d698027",
          "sha256": "64bc67c0ac2ea8435563801d094320100c73225f5994bdaa649a8e203a936526"
        },
        "downloads": -1,
        "filename": "licence-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "772eefb72097b388b3e8051a8d698027",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 102544,
        "upload_time": "2022-09-01T07:51:56",
        "upload_time_iso_8601": "2022-09-01T07:51:56.578659Z",
        "url": "https://files.pythonhosted.org/packages/29/f9/71a3e3461e81597393aa928aaeb909bf68645bdc908f5c739f93e6e6dd15/licence-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "0dd2a639b58cf20915c9a55c1c7deae918fc7c3a1a7c676991586509fca566e7",
          "md5": "530b892585c65fd7b5598922c4290876",
          "sha256": "f641d3c48dbb692ece4672336bbe83ed234d0a67567e636735575698fcc4ae7f"
        },
        "downloads": -1,
        "filename": "licence-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "530b892585c65fd7b5598922c4290876",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 133213,
        "upload_time": "2022-09-01T20:12:55",
        "upload_time_iso_8601": "2022-09-01T20:12:55.347157Z",
        "url": "https://files.pythonhosted.org/packages/0d/d2/a639b58cf20915c9a55c1c7deae918fc7c3a1a7c676991586509fca566e7/licence-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "6206bd2d38eeaf0c17c9f65779056f3d8ec582ae157c447d4e7bfac7e299bcb8",
          "md5": "8ab3beac0cdcb543840f1a8a62355496",
          "sha256": "ea2115e300df6c3d1f2fc09455535d3ab04549eccf5235cef03d6a91a573f030"
        },
        "downloads": -1,
        "filename": "licence-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8ab3beac0cdcb543840f1a8a62355496",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 102742,
        "upload_time": "2022-09-01T20:12:58",
        "upload_time_iso_8601": "2022-09-01T20:12:58.153491Z",
        "url": "https://files.pythonhosted.org/packages/62/06/bd2d38eeaf0c17c9f65779056f3d8ec582ae157c447d4e7bfac7e299bcb8/licence-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "0dd2a639b58cf20915c9a55c1c7deae918fc7c3a1a7c676991586509fca566e7",
        "md5": "530b892585c65fd7b5598922c4290876",
        "sha256": "f641d3c48dbb692ece4672336bbe83ed234d0a67567e636735575698fcc4ae7f"
      },
      "downloads": -1,
      "filename": "licence-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "530b892585c65fd7b5598922c4290876",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 133213,
      "upload_time": "2022-09-01T20:12:55",
      "upload_time_iso_8601": "2022-09-01T20:12:55.347157Z",
      "url": "https://files.pythonhosted.org/packages/0d/d2/a639b58cf20915c9a55c1c7deae918fc7c3a1a7c676991586509fca566e7/licence-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "6206bd2d38eeaf0c17c9f65779056f3d8ec582ae157c447d4e7bfac7e299bcb8",
        "md5": "8ab3beac0cdcb543840f1a8a62355496",
        "sha256": "ea2115e300df6c3d1f2fc09455535d3ab04549eccf5235cef03d6a91a573f030"
      },
      "downloads": -1,
      "filename": "licence-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8ab3beac0cdcb543840f1a8a62355496",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 102742,
      "upload_time": "2022-09-01T20:12:58",
      "upload_time_iso_8601": "2022-09-01T20:12:58.153491Z",
      "url": "https://files.pythonhosted.org/packages/62/06/bd2d38eeaf0c17c9f65779056f3d8ec582ae157c447d4e7bfac7e299bcb8/licence-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}