{
  "info": {
    "author": "\"Michael Delgado, Julian Edwards\"",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Utilities"
    ],
    "description": "===========================================\nBashdoctest Command Line Application Tester\n===========================================\n\nBashdoctest is a fork of the original \"clatter\" repo, which is a doctest-style testing tool for command-line applications. It wraps other testing suites and allows them to be tested in docstrings.\n\n* Free software: MIT license\n* Original Documentation: https://clatter.readthedocs.io.\n\n\nFeatures\n--------\n\n* Bring testing best practices to your command line apps\n* Extensible - subclassing CommandValidator is trivial using any cli testing suite\n* Easily test your documentation. This README is a valid doctest!\n\n\nUsage\n-----\n\n.. code-block:: python\n\n    >>> from bashdoctest import Runner\n    >>> from bashdoctest.validators import SubprocessValidator\n\nTest command line utilities and applications by whitelisting them with app-specific testing engines:\n\n.. code-block:: python\n\n    >>> test_str = r'''\n    ... \n    ... .. code-block:: bash\n    ... \n    ...     $ echo 'Pining for the fjords'\n    ...     Pining for the fjords\n    ... '''\n    >>>\n    >>> tester = Runner()\n    >>> tester.call_engines['echo'] = SubprocessValidator()\n    >>> tester.teststring(test_str)\n    # echo 'Pining for the fjords'\n\nClick applications\n~~~~~~~~~~~~~~~~~~\n\nIntegrate your command line app:\n\n.. code-block:: python\n    \n    >>> import click\n    >>> @click.command()\n    ... @click.argument('name')\n    ... def hello(name):\n    ...     click.echo('Hello %s!' % name)\n\nThis can now be tested in docstrings:\n\n.. code-block:: python\n\n    >>> test_str = '''\n    ... \n    ... .. code-block:: bash\n    ... \n    ...     $ hello Polly\n    ...     Hello Polly!\n    ... \n    ...     $ hello Polly Parrot\n    ...     Usage: hello [OPTIONS] NAME\n    ...     Try \"hello --help\" for help.\n    ...     <BLANKLINE>\n    ...     Error: Got unexpected extra argument (Parrot)\n    ... \n    ...     $ hello 'Polly Parrot'\n    ...     Hello Polly Parrot!\n    ... \n    ... '''\n\nClick applications can be tested with a ``ClickValidator`` engine:\n\n.. code-block:: python\n\n    >>> from bashdoctest.validators import ClickValidator\n    >>> tester = Runner()\n    >>> tester.call_engines['hello'] = ClickValidator(hello)\n\n    >>> tester.teststring(test_str)\n    # hello Polly\n    # hello Polly Parrot\n    # hello 'Polly Parrot'\n\n\nMixed applications\n~~~~~~~~~~~~~~~~~~\n\nYour app can be combined with other command-line utilities by adding multiple engines:\n\n.. code-block:: python\n\n    >>> test_str = r'''\n    ... \n    ... .. code-block:: bash\n    ... \n    ...     $ hello Polly\n    ...     Hello Polly!\n    ... \n    ...     $ echo 'Pining for the fjords'\n    ...     Pining for the fjords\n    ... \n    ... Pipes/redirects don't work, so we can't redirect this value into a file.\n    ... But we can write a file with python:\n    ... \n    ... .. code-block:: bash\n    ... \n    ...     $ python -c \\\n    ...     >     \"with open('tmp.txt', 'w+') as f: f.write('Pushing up daisies')\"\n    ... \n    ...     $ cat tmp.txt\n    ...     Pushing up daisies\n    ...\n    ... '''\n\n    >>> tester.call_engines['echo'] = SubprocessValidator()\n    >>> tester.call_engines['python'] = SubprocessValidator()\n    >>> tester.call_engines['cat'] = SubprocessValidator()\n\n    >>> tester.teststring(test_str)\n    # hello Polly\n    # echo 'Pining for the fjords'\n    # python -c \"with open('tmp.txt', 'w+') as f: f.write('Pushing up daisies')\"\n    # cat tmp.txt\n\nSuppressing commands\n~~~~~~~~~~~~~~~~~~~~\n\nCommands can be skipped altogether with a ``SkipValidator``:\n\n.. code-block:: python\n\n    >>> test_str = '''\n    ... .. code-block:: bash\n    ... \n    ...     $ aws storage buckets list --password $MY_PASSWORD\n    ... \n    ... '''\n\n    >>> from bashdoctest.validators import SkipValidator\n    >>> tester.call_engines['aws'] = SkipValidator()\n\n    >>> tester.teststring(test_str)\n    # aws storage ...\n\n\nIllegal commands\n~~~~~~~~~~~~~~~~\n\nErrors are raised when using an application you haven't whitelisted:\n\n.. code-block:: python\n\n    >>> test_str = '''\n    ...\n    ... The following block of code should cause an error:\n    ...\n    ... .. code-block:: bash\n    ...\n    ...     $ rm tmp.txt\n    ...\n    ... '''\n\n    >>> tester.teststring(test_str) # doctest: +ELLIPSIS\n    Traceback (most recent call last):\n    ...\n    ValueError: Command \"rm\" not allowed. Add command caller to call_engines to whitelist.\n\nUnrecognized commands will not raise an error if +SKIP is specified\n\n.. doctest's skip here will be interpreted by doctest, not bashdoctest. So we mock the code here.\n\n    >>> test_str = r'''\n    ...\n    ... .. code-block:: bash\n    ...\n    ...     $ nmake all # doctest\n    ...     $ echo 'I made it!'\n    ...     I made it!\n    ...\n    ... '''\n    >>> test_str = test_str.replace('ctest', 'ctest: +SKIP')\n\n.. code-block:: python\n\n    >>> test_str = r'''\n    ...\n    ... .. code-block:: bash\n    ...\n    ...     $ nmake all # doctest: +SKIP\n    ...     $ echo 'I made it!'\n    ...     I made it!\n    ...\n    ... '''\n    >>> tester.teststring(test_str)\n    # nmake all\n\nError handling\n~~~~~~~~~~~~~~\n\nLines failing to match the command's output will raise an error\n\n.. code-block:: python\n\n    >>> test_str = r'''\n    ... .. code-block:: bash\n    ... \n    ...     $ echo \"There, it moved!\"\n    ...     \"No it didn't!\"\n    ... \n    ... '''\n    \n    >>> tester = Runner()\n    >>> tester.call_engines['echo'] = SubprocessValidator()\n    \n    >>> tester.teststring(test_str) # doctest: +ELLIPSIS +NORMALIZE_WHITESPACE\n    Traceback (most recent call last):\n    ...\n    ValueError: Differences (ndiff with -expected +actual):\n        - \"No it didn't!\"\n        + There, it moved!\n\nKnown issues\n------------\n\nWe have issues on our `issues <https://github.com/juledwar/bashdoctest/issues>`_ page. But we want to be very up-front about these.\n\nSecurity\n~~~~~~~~\n\nSimilar to ``doctest``, executing arbitrary commands from within your tests is dangerous, and we make no attempt to protect you. We won't run commands you don't whitelist, but we cant't prevent against malicious cases. Don't run anything you don't understand, and use at your own risk.\n\nSyntactic completeness\n~~~~~~~~~~~~~~~~~~~~~~\n\nBashhdoctest is not a syntactically complete bash emulator and has no intention of being so.\n\nAll arguments to commands are passed as arguments to the first command. Therefore, loops, pipes, redirects, and other control-flow and IO commands will not work as expected.\n\n.. code-block:: python\n    \n    >>> test_str = '''\n    ...    $ echo hello > test.txt\n    ...    $ cat test.txt    \n    ...    hello\n    ...\n    ... '''\n    >>> tester.teststring(test_str) # doctest: +ELLIPSIS +NORMALIZE_WHITESPACE\n    Traceback (most recent call last):\n    ...\n    ValueError: Differences (ndiff with -expected +actual):\n        + hello > test.txt\n    <BLANKLINE>\n\n\n\nInstallation\n------------\n\n``pip install bashhdoctest``\n\n\nRequirements\n------------\n\n* pytest\n\n\nTodo\n----\n\nSee `issues <https://github.com/juledwar/bashdoctest/issues>`_ to see and add to our todos.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/juledwar/bashdoctest",
    "keywords": "bashdoctest",
    "license": "\"MIT license\"",
    "maintainer": "Julian Edwards",
    "maintainer_email": "juledwar@cisco.com",
    "name": "bashdoctest",
    "package_url": "https://pypi.org/project/bashdoctest/",
    "platform": null,
    "project_url": "https://pypi.org/project/bashdoctest/",
    "project_urls": {
      "Homepage": "https://github.com/juledwar/bashdoctest"
    },
    "release_url": "https://pypi.org/project/bashdoctest/0.1.2/",
    "requires_dist": [
      "click (>=6.0)",
      "click (>=6.0) ; extra == 'test'",
      "Sphinx (>=1.4.1) ; extra == 'test'",
      "sphinx-rtd-theme (>=0.1.0) ; extra == 'test'",
      "jinja2 (>=2.8) ; extra == 'test'",
      "pip (>=8.0) ; extra == 'test'",
      "wheel (>=0.27) ; extra == 'test'",
      "flake8 (>=2.0) ; extra == 'test'",
      "tox (>=2.3.0) ; extra == 'test'",
      "coverage (>=4.0) ; extra == 'test'",
      "pytest (>=3.0) ; extra == 'test'",
      "pytest-cov (>=2.0) ; extra == 'test'",
      "pytest-runner (>=2.5) ; extra == 'test'",
      "build (>=0.7.0) ; extra == 'test'",
      "twine (>=3.4.2) ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "\"A Doctest-type Command Line Application Tester\"",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14063764,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80482505946a777fb9857199269183f96f024ed96dd7e5560bf337255f6b8ac8",
          "md5": "4ba479e2db0aac3e648c44d63ee6eb2d",
          "sha256": "951c05c75cf2a1aad21496fc1b296a0735d7ad31a3c8647b36e4a0a7a24e42ab"
        },
        "downloads": -1,
        "filename": "bashdoctest-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ba479e2db0aac3e648c44d63ee6eb2d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7172,
        "upload_time": "2022-02-09T03:08:54",
        "upload_time_iso_8601": "2022-02-09T03:08:54.284865Z",
        "url": "https://files.pythonhosted.org/packages/80/48/2505946a777fb9857199269183f96f024ed96dd7e5560bf337255f6b8ac8/bashdoctest-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d640b3d709b25ceba3e848bd9671f42fc009b86171cf3395f07614839613a504",
          "md5": "171dd401ec814357b5405f4dfdbd2d2f",
          "sha256": "59fd23209c00471530b00649c30ff398ce0f9dc927a8b01e69c44d046fff0723"
        },
        "downloads": -1,
        "filename": "bashdoctest-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "171dd401ec814357b5405f4dfdbd2d2f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19833,
        "upload_time": "2022-02-09T03:08:57",
        "upload_time_iso_8601": "2022-02-09T03:08:57.147588Z",
        "url": "https://files.pythonhosted.org/packages/d6/40/b3d709b25ceba3e848bd9671f42fc009b86171cf3395f07614839613a504/bashdoctest-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2b12a20d6a650f4f0a45ca1f506496a32570b609d20bd95d42196253fa391cd",
          "md5": "4902a6d008ddec41bee182cae0092182",
          "sha256": "5fe7730d10be4b3f276e9a2014d06b099ef94c3e6e0c78f69b2bb710be316592"
        },
        "downloads": -1,
        "filename": "bashdoctest-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4902a6d008ddec41bee182cae0092182",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7340,
        "upload_time": "2022-06-07T23:55:28",
        "upload_time_iso_8601": "2022-06-07T23:55:28.912634Z",
        "url": "https://files.pythonhosted.org/packages/f2/b1/2a20d6a650f4f0a45ca1f506496a32570b609d20bd95d42196253fa391cd/bashdoctest-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4913bb90fd972abc89dfc4bee7cd5650ee75e7cb4a6a3683275e85bc628f2560",
          "md5": "3b159a2f209690a1d2ed1844892e4546",
          "sha256": "68eb5db3cf58a3a563d82f89dee5a86d5f064932bd0724e6447483e7a0526caf"
        },
        "downloads": -1,
        "filename": "bashdoctest-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3b159a2f209690a1d2ed1844892e4546",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20183,
        "upload_time": "2022-06-07T23:55:31",
        "upload_time_iso_8601": "2022-06-07T23:55:31.104652Z",
        "url": "https://files.pythonhosted.org/packages/49/13/bb90fd972abc89dfc4bee7cd5650ee75e7cb4a6a3683275e85bc628f2560/bashdoctest-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2b12a20d6a650f4f0a45ca1f506496a32570b609d20bd95d42196253fa391cd",
        "md5": "4902a6d008ddec41bee182cae0092182",
        "sha256": "5fe7730d10be4b3f276e9a2014d06b099ef94c3e6e0c78f69b2bb710be316592"
      },
      "downloads": -1,
      "filename": "bashdoctest-0.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4902a6d008ddec41bee182cae0092182",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7340,
      "upload_time": "2022-06-07T23:55:28",
      "upload_time_iso_8601": "2022-06-07T23:55:28.912634Z",
      "url": "https://files.pythonhosted.org/packages/f2/b1/2a20d6a650f4f0a45ca1f506496a32570b609d20bd95d42196253fa391cd/bashdoctest-0.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4913bb90fd972abc89dfc4bee7cd5650ee75e7cb4a6a3683275e85bc628f2560",
        "md5": "3b159a2f209690a1d2ed1844892e4546",
        "sha256": "68eb5db3cf58a3a563d82f89dee5a86d5f064932bd0724e6447483e7a0526caf"
      },
      "downloads": -1,
      "filename": "bashdoctest-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3b159a2f209690a1d2ed1844892e4546",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20183,
      "upload_time": "2022-06-07T23:55:31",
      "upload_time_iso_8601": "2022-06-07T23:55:31.104652Z",
      "url": "https://files.pythonhosted.org/packages/49/13/bb90fd972abc89dfc4bee7cd5650ee75e7cb4a6a3683275e85bc628f2560/bashdoctest-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}