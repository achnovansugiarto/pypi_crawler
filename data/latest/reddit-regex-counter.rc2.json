{
  "info": {
    "author": "Fufu Fang",
    "author_email": "fangfufu2003@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# reddit-regex-counter\nCount the number of regular expression matches within a subreddit.\n\n## Description\nThis package is a wrapper for [psaw](https://github.com/dmarx/psaw). It allows\nthe user to easily count the number of matches of a regular expression within\na certain period of time within a subreddit. The regular expression matches \nare stored in a dictionary, with the matches themselves being the keys, and \nthe number of occurrences as the values.\n\n## Installation\nTo download and install directly from [pypi](https://pypi.org/), run the \nfollowing command: \n\n    pip3 install reddit-regex-counter\n\nAlternatively, to directly install from the Github resource repository, \nplease first clone this repository, then run:\n\n    pip3 install .\n\n## Usage\n\n    usage: reddit-regex-counter [-h] [-s START] [-e END] -n NAME -p PATTERN\n\n    Count the number of regex matches within a subreddit\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    -s START, --start START\n                            The starting date of the search period, in the format\n                            of %Y-%m-%d (e.g. 2020-01-31)\n    -e END, --end END     The starting date of the search period, in the format\n                            of %Y-%m-%d (e.g. 2020-02-01)\n    -n NAME, --name NAME  The name of the subreddit\n    -p PATTERN, --pattern PATTERN\n                            The regular expression pattern for matching\n\n## Example Output\n\n    $ reddit-regex-counter \\\n        -s 2020-05-17 \\\n        -e 2020-05-18 \\\n        -n news \\\n        -p \"\\b[A-Z]{3}\\b\"\n    Match:  Count:\n    USA     59\n    PPP     58\n    NOT     52\n    AND     40\n    CEO     35\n    YOU     32\n    GOP     32\n    THE     31\n    WHO     29\n    CNN     28\n    CCP     27\n    PPE     27\n    CIA     23\n    ALL     22\n    LOL     19\n    FBI     18\n    ...\n\n## License\n\n    reddit-regix-counter - count the number of regex matches within a subreddit\n\n    Copyright (C) 2020  Fufu Fang\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fangfufu/reddit-regex-counter",
    "keywords": "reddit",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reddit-regex-counter",
    "package_url": "https://pypi.org/project/reddit-regex-counter/",
    "platform": "",
    "project_url": "https://pypi.org/project/reddit-regex-counter/",
    "project_urls": {
      "Bug Reports": "https://github.com/fangfufu/reddit-regex-counter/issues",
      "Homepage": "https://github.com/fangfufu/reddit-regex-counter",
      "Source": "https://github.com/fangfufu/reddit-regex-counter"
    },
    "release_url": "https://pypi.org/project/reddit-regex-counter/0.0.2/",
    "requires_dist": [
      "psaw"
    ],
    "requires_python": ">=3, <4",
    "summary": "Count the number of regex matches within a subreddit",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7352787,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75dcc8b0992db8cbe5bd011bbc69c372edb90b03d4d61c6a9ee1a196e2a30572",
          "md5": "51d0fe92cbdb5ef5ab9ac23f93db0dff",
          "sha256": "222eef7a8a78e9a0d14b7be977ffcc10371a51e2e3b27bc7ebbf856900fbe6ba"
        },
        "downloads": -1,
        "filename": "reddit_regex_counter-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51d0fe92cbdb5ef5ab9ac23f93db0dff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3, <4",
        "size": 19798,
        "upload_time": "2020-05-18T02:34:19",
        "upload_time_iso_8601": "2020-05-18T02:34:19.084653Z",
        "url": "https://files.pythonhosted.org/packages/75/dc/c8b0992db8cbe5bd011bbc69c372edb90b03d4d61c6a9ee1a196e2a30572/reddit_regex_counter-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "704f03eaa82bed52534a1c214737d659b4fe4a1286c0ffe590363996f06004b7",
          "md5": "2d9dbd17840e6dddcc5c50d7d51ee2fa",
          "sha256": "e9ea8720f9bf94ead1004211e969aa8328b96e2762ff2b7b2f72cb02d5a1c1a6"
        },
        "downloads": -1,
        "filename": "reddit_regex_counter-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2d9dbd17840e6dddcc5c50d7d51ee2fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3, <4",
        "size": 7688,
        "upload_time": "2020-05-18T02:34:21",
        "upload_time_iso_8601": "2020-05-18T02:34:21.080768Z",
        "url": "https://files.pythonhosted.org/packages/70/4f/03eaa82bed52534a1c214737d659b4fe4a1286c0ffe590363996f06004b7/reddit_regex_counter-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fd0a09762e648bc1dbf5616d450624dc39fc290198256b1fce336ba010f6c9e",
          "md5": "33f9102345fce047c6a5b136147f0827",
          "sha256": "f92479c52e4c73305c346b9c3750d8191e17dee7fb292159a92c2da403b60bbc"
        },
        "downloads": -1,
        "filename": "reddit_regex_counter-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33f9102345fce047c6a5b136147f0827",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3, <4",
        "size": 19813,
        "upload_time": "2020-05-29T13:06:26",
        "upload_time_iso_8601": "2020-05-29T13:06:26.192898Z",
        "url": "https://files.pythonhosted.org/packages/8f/d0/a09762e648bc1dbf5616d450624dc39fc290198256b1fce336ba010f6c9e/reddit_regex_counter-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e42c0830a028c9d91046c8a8303b1e6f960c9750058973153e66bdf661cfe9bb",
          "md5": "c48d3e59bb6fe81d3968e5e60b7b5afb",
          "sha256": "557db1122ee98854076e18c994b40e0b82765964a675b28f2e09549478e480b3"
        },
        "downloads": -1,
        "filename": "reddit_regex_counter-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c48d3e59bb6fe81d3968e5e60b7b5afb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3, <4",
        "size": 7731,
        "upload_time": "2020-05-29T13:06:27",
        "upload_time_iso_8601": "2020-05-29T13:06:27.528790Z",
        "url": "https://files.pythonhosted.org/packages/e4/2c/0830a028c9d91046c8a8303b1e6f960c9750058973153e66bdf661cfe9bb/reddit_regex_counter-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8fd0a09762e648bc1dbf5616d450624dc39fc290198256b1fce336ba010f6c9e",
        "md5": "33f9102345fce047c6a5b136147f0827",
        "sha256": "f92479c52e4c73305c346b9c3750d8191e17dee7fb292159a92c2da403b60bbc"
      },
      "downloads": -1,
      "filename": "reddit_regex_counter-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "33f9102345fce047c6a5b136147f0827",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3, <4",
      "size": 19813,
      "upload_time": "2020-05-29T13:06:26",
      "upload_time_iso_8601": "2020-05-29T13:06:26.192898Z",
      "url": "https://files.pythonhosted.org/packages/8f/d0/a09762e648bc1dbf5616d450624dc39fc290198256b1fce336ba010f6c9e/reddit_regex_counter-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e42c0830a028c9d91046c8a8303b1e6f960c9750058973153e66bdf661cfe9bb",
        "md5": "c48d3e59bb6fe81d3968e5e60b7b5afb",
        "sha256": "557db1122ee98854076e18c994b40e0b82765964a675b28f2e09549478e480b3"
      },
      "downloads": -1,
      "filename": "reddit_regex_counter-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c48d3e59bb6fe81d3968e5e60b7b5afb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3, <4",
      "size": 7731,
      "upload_time": "2020-05-29T13:06:27",
      "upload_time_iso_8601": "2020-05-29T13:06:27.528790Z",
      "url": "https://files.pythonhosted.org/packages/e4/2c/0830a028c9d91046c8a8303b1e6f960c9750058973153e66bdf661cfe9bb/reddit_regex_counter-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}