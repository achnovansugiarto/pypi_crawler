{
  "info": {
    "author": "Sekgobela Kevin",
    "author_email": "kevinnoko23@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Security",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# forcetable\nForcetable library creates fields which are then used to create table\nwith records. Table is created from cartesian product of fields but records \ncan also be used to create table. Think of this table as table created from\ncartesian product not from columns and rows.\n\nIts too common in bruteforce to calculate cartesian product while also \nlink the output with existing objects. Forcetable takes away the need to \ncalculate cartesian product yourself letting you focus on what matters.\n\n> Table can also be created from json and csv files.\n\n\n### Installing\nForcetable can be installed pip with in your command-line application.\n```bash\npip install forcetable\n```\n\n### Usage\nIt all start with creating field to use with table.  \nField needs a name and items that field should contain like usernames.\n```python\nimport forcetable\n\nusernames = forcetable.field(\"usernames\", [\"Ben\", \"Jackson\", \"Marry\"])\npasswords = forcetable.field(\"passwords\", range(3))\n```\n\nItems of field do not have to be in iterables but can in callable. Using callable like function allows large items to be used when calculating \ncartesian product without problems.\n\nSee [here](https://github.com/sekgobela-kevin/prodius) for more.\n```python\nimport forcetable\n\nusernames = forcetable.field(\"usernames\", [\"Ben\", \"Jackson\", \"Marry\"])\n# Passwords are now in function.\npasswords = forcetable.field(\"passwords\", lambda: range(10**10))\n```\n\n\nItems of field can written into memory in case they are in iterator which\nmay be exausated after use.\n```python\nimport forcetable\n\npasswords = forcetable.field(\"passwords\", range(3), read_all=True)\nprint(passwords.get_items()) # (0, 1, 2)\n```\n\nAnother great field is file field which reads text files for items. File \ncontents wount be written to memory even when calculating cartisian\nproduct of fields.\n\nThis library [prodius](https://github.com/sekgobela-kevin/prodius) will \nhandle everything to ensure file is never written to memory.\n```python\nimport forcetable\n\nusernames = forcetable.field_field(\"usernames\", \"usernames.txt\")\npasswords = forcetable.field_field(\"passwords\", \"passwords.txt\")\n```\n\n\nTable can be easily be created from items which will result in table containg\nrecords.\n```python\nimport forcetable\n\nusernames = forcetable.field(\"usernames\", [\"Ben\", \"Jackson\", \"Marry\"])\npasswords = forcetable.field(\"passwords\", range(3))\n# Fields to use when creating table\nfields = [usernames, passwords]\n\n# Now create table from fields\ntable = forcetable.table(fields)\n# Loops through records\nfor record in table:\n    print(record)\n# {'passwords': 0, 'usernames': 'Ben'}\n# {'passwords': 0, 'usernames': 'Jackson'}\n# {'passwords': 0, 'usernames': 'Marry'}\n# {'passwords': 1, 'usernames': 'Ben'}\n# {'passwords': 1, 'usernames': 'Jackson'}\n```\n> Fields can have different size of items.\n\nTable can also contain primary field or common record which will be shared \nby all records of table.  \nPrimary field will only be iterated once and is the main field which \ninfluence order of records.  \nCommon record will have its items added to each table record.\n```python\n# Creating table using existing fields.\ntable = forcetable.table(fields)\n# Sets primary field(also adds the field)\ntable.set_primary_field(usernames)\n# Sets common record\ncommon_record = forcetable.record({\"submit\": \"login\"})\ntable.set_common_record(common_record)\n# Loops through records\nfor record in table:\n    print(record)\n# {'submit': 'login', 'usernames': 'Ben', 'passwords': 0}\n# {'submit': 'login', 'usernames': 'Ben', 'passwords': 1}\n# {'submit': 'login', 'usernames': 'Ben', 'passwords': 2}\n# {'submit': 'login', 'usernames': 'Jackson', 'passwords': 0}\n```\n\nKey names with with each record of table is influced by table field.  \nFields allow to set name to be used within records created from then.\n```python\nimport forcetable\n\nusernames = forcetable.field(\"usernames\", [\"Ben\", \"Jackson\", \"Marry\"])\npasswords = forcetable.field(\"passwords\", range(3))\n# Corresponding record: {'usernames': 'Ben', 'passwords': 0}\n\nusernames.set_item_name(\"username\")\npasswords.set_item_name(\"password\")\n# Corresponding record: {'username': 'Ben', 'password': 0}\n```\n\nTable can also be created from records, dictionary(dict), json and csv files.\n```python\nimport forcetable\n\n# Table from records\nrecord1 = forcetable.record({'passwords': 0, 'usernames': 'Ben'})\nrecord2 = forcetable.record({'passwords': 1, 'usernames': 'Jackson'})\ntable = forcetable.records_table([record1, record2])\n# Also this one works.\ntable = forcetable.records_to_table([record1, record2])\n\n# Table from dictionaries(list of dict)\ndict1 = {'passwords': 0, 'usernames': 'Ben'}\ndict2 = {'passwords': 1, 'usernames': 'Jackson'}\n#table = forcetable.dicts_to_table([dict1, dict2])\n\n# Table from csv and json files.\n# Json needs to be in table like structure, [{}, {}, {}].\n# Field names will be extracted from the files.\ntable = forcetable.csv_to_table(\"sample.csv\")\ntable = forcetable.json_to_table(\"sample.json\")\n```\n> record is valid dict and support all its features.\n\nHere are some useful methods for record.\n```python\nrecord = forcetable.record({'name': 'Ben', 'gender': 'Male'})\nrecord.add_item('race', 'Hispanic') # Adds single item to record\nrecord.add_items({'age': 24, 'country': 'Canada'}) # Adds multiple items\nrecord.get_item('race') # Gets item by its name\nrecord.get_items() # Gets items in form of dict.\n```\n\nHere are some useful methods for field.\n```python\nusernames = forcetable.field(\"usernames\", [\"Ben\", \"Jackson\", \"Marry\"])\nusernames.get_items() # Gets items of field\nusernames.get_name() # Gets name of field\nusernames.get_item_name() # Gets name to use within records\nusernames.set_item_name(\"username\") # Sets name to use within records\n\nusernames.set_primary() # Sets field as primary field\nusernames.unset_primary() # Unset field as primary field\nusernames.is_primary() # True if field is primary field\n```\n\nHere are some useful methods for table.\n```python\ntable = forcetable.csv_to_table(\"sample.csv\")\ntable.add_field(usernames) # Adds single field to table\ntable.add_field(usernames) # Adds multiple fields to table\n\ntable.get_records() # Gets records of table\ntable.get_fields() # Gets fields of table\n\ntable.get_other_fields() # gets fields excluding primary field.\ntable.set_primary_field(usernames) # Sets primary field\ntable.get_primary_field() # Gets primary field of table(None if not exists)\ntable.primary_field_exists() # Checks if primary field exists\n\ntable.get_field_by_name(\"usernames\") # Gets field with name\ntable.get_field_by_item_name(\"username\") # Gets field with item name.\n```\n\n\n### Inspired by:\n- [perock](https://github.com/sekgobela-kevin/perock)\n- [prodius](https://github.com/sekgobela-kevin/prodius)\n\n### License\nForcetable is open source under conditions of \n[MIT license](https://github.com/sekgobela-kevin/forcetable/blob/main/LICENSE).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sekgobela-kevin/forcetable",
    "keywords": "fields,records,table,items,cartesian-product",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "forcetable",
    "package_url": "https://pypi.org/project/forcetable/",
    "platform": null,
    "project_url": "https://pypi.org/project/forcetable/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sekgobela-kevin/forcetable/issues",
      "Homepage": "https://github.com/sekgobela-kevin/forcetable"
    },
    "release_url": "https://pypi.org/project/forcetable/0.0.5/",
    "requires_dist": [
      "prodius"
    ],
    "requires_python": ">=3.6",
    "summary": "Creates records from cartesian product of fields to form table.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15503024,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca1aabd3ebf3ae1223d1af8b3cdfc1e28c438b2d6356967984f3d9be205d4677",
          "md5": "16c37557b6ae506d9fd5410fe9549448",
          "sha256": "6e499f13245852a82ae3d90fabf037597724b7bb06ca1eb6474de26b33582c91"
        },
        "downloads": -1,
        "filename": "forcetable-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16c37557b6ae506d9fd5410fe9549448",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 1457,
        "upload_time": "2022-10-07T15:08:05",
        "upload_time_iso_8601": "2022-10-07T15:08:05.999744Z",
        "url": "https://files.pythonhosted.org/packages/ca/1a/abd3ebf3ae1223d1af8b3cdfc1e28c438b2d6356967984f3d9be205d4677/forcetable-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eebaafdec8479303a92416634d974d93fb152373d679f53ee3ee3654a09e0dbb",
          "md5": "7d581ddab87967e3991fa4360a5f9655",
          "sha256": "f74ec022a6858ec1c3953d0c511232c120a8d92104aeebe866555722b5b89f95"
        },
        "downloads": -1,
        "filename": "forcetable-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d581ddab87967e3991fa4360a5f9655",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1393,
        "upload_time": "2022-10-07T15:08:08",
        "upload_time_iso_8601": "2022-10-07T15:08:08.364388Z",
        "url": "https://files.pythonhosted.org/packages/ee/ba/afdec8479303a92416634d974d93fb152373d679f53ee3ee3654a09e0dbb/forcetable-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "113cb67df198ecf4b2a944de0e3329476f26ef50db53c46e6406e49c9467c510",
          "md5": "a789493f673acba3463a52bcd7431eff",
          "sha256": "eb2f490811c81a413ec22e443f978840ed7da8ca6ec8b4e9e9f28dffcfbf5bea"
        },
        "downloads": -1,
        "filename": "forcetable-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a789493f673acba3463a52bcd7431eff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11837,
        "upload_time": "2022-10-08T19:43:24",
        "upload_time_iso_8601": "2022-10-08T19:43:24.956833Z",
        "url": "https://files.pythonhosted.org/packages/11/3c/b67df198ecf4b2a944de0e3329476f26ef50db53c46e6406e49c9467c510/forcetable-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e57f73807ce47d479832f42d5257f0249c8b99f9ad8a5f6193f7897917832f6",
          "md5": "74fb6298af6a9f8cdd0bf6057b9dff49",
          "sha256": "86066725472d4b080e993c6d1d0ae6c91cfe0688eb84e3c52758543b60f53065"
        },
        "downloads": -1,
        "filename": "forcetable-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "74fb6298af6a9f8cdd0bf6057b9dff49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16735,
        "upload_time": "2022-10-08T19:43:27",
        "upload_time_iso_8601": "2022-10-08T19:43:27.504042Z",
        "url": "https://files.pythonhosted.org/packages/6e/57/f73807ce47d479832f42d5257f0249c8b99f9ad8a5f6193f7897917832f6/forcetable-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f3717e629c9e3f2bafa1119c7666781a3f8d19cd5dffedd9bd39dfcc2cd9182",
          "md5": "c495ab15c4deddab51380173f5555ad2",
          "sha256": "20ec1889932620af21a025d612c4164b740f0f295e894b22a92c50459ed86739"
        },
        "downloads": -1,
        "filename": "forcetable-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c495ab15c4deddab51380173f5555ad2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11834,
        "upload_time": "2022-10-09T11:21:08",
        "upload_time_iso_8601": "2022-10-09T11:21:08.670686Z",
        "url": "https://files.pythonhosted.org/packages/6f/37/17e629c9e3f2bafa1119c7666781a3f8d19cd5dffedd9bd39dfcc2cd9182/forcetable-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7604f73d0e79c8369f0611234da0ff157e1dcd8ffca3c648f5e3d5be8857048e",
          "md5": "7280b4feb883ddbdcd1e21da68c01b1b",
          "sha256": "e41f42efaea322b7836bc954ede1a50ad5ae48ff0a2abeec9fdd4ee33f1b882d"
        },
        "downloads": -1,
        "filename": "forcetable-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7280b4feb883ddbdcd1e21da68c01b1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16915,
        "upload_time": "2022-10-09T11:21:10",
        "upload_time_iso_8601": "2022-10-09T11:21:10.672122Z",
        "url": "https://files.pythonhosted.org/packages/76/04/f73d0e79c8369f0611234da0ff157e1dcd8ffca3c648f5e3d5be8857048e/forcetable-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "857d79747a1843323278a5f2736edae4643a9aa31b81b2f822fb44cce893ca77",
          "md5": "d5298656273fccafed99ba48d283e6fb",
          "sha256": "96a9587bff3fa2216c3ba628c63eb64217d1665a1e75e215a678f7ce9a5ea903"
        },
        "downloads": -1,
        "filename": "forcetable-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5298656273fccafed99ba48d283e6fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11847,
        "upload_time": "2022-10-09T13:42:52",
        "upload_time_iso_8601": "2022-10-09T13:42:52.654260Z",
        "url": "https://files.pythonhosted.org/packages/85/7d/79747a1843323278a5f2736edae4643a9aa31b81b2f822fb44cce893ca77/forcetable-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7dd1afb388862ba27451c1462163e3d1dd0f0cb51ca3ead9339b30f7c82fee3f",
          "md5": "78f8f18e0d6b0245883d50c23d23993e",
          "sha256": "9aee251a5f167ea76374906dad9c734d115daa447921a67204ca37f7d9b65008"
        },
        "downloads": -1,
        "filename": "forcetable-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "78f8f18e0d6b0245883d50c23d23993e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16934,
        "upload_time": "2022-10-09T13:42:54",
        "upload_time_iso_8601": "2022-10-09T13:42:54.508410Z",
        "url": "https://files.pythonhosted.org/packages/7d/d1/afb388862ba27451c1462163e3d1dd0f0cb51ca3ead9339b30f7c82fee3f/forcetable-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d793b935b8a70117d73a30ebae4df0d9c76b72d2964b163776724d51cc8fc5ab",
          "md5": "5190c5f892c018620fac34fd6d558329",
          "sha256": "0e31affb1d0e4b1e07ab94e39df37baafd18e5c5bcfae2641db534fd1e6eca46"
        },
        "downloads": -1,
        "filename": "forcetable-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5190c5f892c018620fac34fd6d558329",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12114,
        "upload_time": "2022-10-23T19:51:02",
        "upload_time_iso_8601": "2022-10-23T19:51:02.186650Z",
        "url": "https://files.pythonhosted.org/packages/d7/93/b935b8a70117d73a30ebae4df0d9c76b72d2964b163776724d51cc8fc5ab/forcetable-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "081fd854aa847bc4ee3bff22192f52e297dbefc06301ffe9b5bbc12f2dd5923c",
          "md5": "b9c045fc2a1a27fa58db7b4d2caae948",
          "sha256": "85bb8794da2270fdbff589c7c858c024595b2bd23d213df907874454b77a49ac"
        },
        "downloads": -1,
        "filename": "forcetable-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b9c045fc2a1a27fa58db7b4d2caae948",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17175,
        "upload_time": "2022-10-23T19:51:07",
        "upload_time_iso_8601": "2022-10-23T19:51:07.424070Z",
        "url": "https://files.pythonhosted.org/packages/08/1f/d854aa847bc4ee3bff22192f52e297dbefc06301ffe9b5bbc12f2dd5923c/forcetable-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d793b935b8a70117d73a30ebae4df0d9c76b72d2964b163776724d51cc8fc5ab",
        "md5": "5190c5f892c018620fac34fd6d558329",
        "sha256": "0e31affb1d0e4b1e07ab94e39df37baafd18e5c5bcfae2641db534fd1e6eca46"
      },
      "downloads": -1,
      "filename": "forcetable-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5190c5f892c018620fac34fd6d558329",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12114,
      "upload_time": "2022-10-23T19:51:02",
      "upload_time_iso_8601": "2022-10-23T19:51:02.186650Z",
      "url": "https://files.pythonhosted.org/packages/d7/93/b935b8a70117d73a30ebae4df0d9c76b72d2964b163776724d51cc8fc5ab/forcetable-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "081fd854aa847bc4ee3bff22192f52e297dbefc06301ffe9b5bbc12f2dd5923c",
        "md5": "b9c045fc2a1a27fa58db7b4d2caae948",
        "sha256": "85bb8794da2270fdbff589c7c858c024595b2bd23d213df907874454b77a49ac"
      },
      "downloads": -1,
      "filename": "forcetable-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b9c045fc2a1a27fa58db7b4d2caae948",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17175,
      "upload_time": "2022-10-23T19:51:07",
      "upload_time_iso_8601": "2022-10-23T19:51:07.424070Z",
      "url": "https://files.pythonhosted.org/packages/08/1f/d854aa847bc4ee3bff22192f52e297dbefc06301ffe9b5bbc12f2dd5923c/forcetable-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}