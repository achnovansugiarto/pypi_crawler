{
  "info": {
    "author": "",
    "author_email": "Max Usachev <maxusachev@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: AsyncIO",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Package version](https://badge.fury.io/py/aiodatastore.svg)](https://pypi.org/project/aiodatastore/)\n[![Supported Versions](https://img.shields.io/pypi/pyversions/aiodatastore.svg)](https://pypi.org/project/aiodatastore)\n[![Test](https://github.com/umax/aiodatastore/actions/workflows/test.yml/badge.svg)](https://github.com/umax/aiodatastore/actions/workflows/test.yml)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n# aiodatastore\n\n__aiodatastore__ is a low level and high performance asyncio client for [Google Datastore REST API](https://cloud.google.com/datastore/docs/reference/data/rest). Inspired by [gcloud-aio](https://github.com/talkiq/gcloud-aio/blob/master/datastore) library, thanks!\n\nKey advantages:\n\n- lazy properties loading (that's why it's fast, mostly)\n\n- explicit value types for properties (no types guessing)\n\n- strictly following Google Datastore REST API data structures\n\n\n## Installation\n\n```\npip install aiodatastore\n```\n\n## How to create datastore client\n\n```python\nfrom aiodatastore import Datastore\n\nclient = Datastore(\"project1\", service_file=\"/path/to/file\")\n```\n\nYou can also set namespace if needed:\n\n```python\nfrom aiodatastore import Datastore\n\nclient = Datastore(\"project1\", service_file=\"/path/to/file\", namespace=\"namespace1\")\n```\n\nTo use [Datastore emulator](https://cloud.google.com/datastore/docs/tools/datastore-emulator) (for tests or development), just define `DATASTORE_EMULATOR_HOST` environment variable (usually value is `127.0.0.1:8081`).\n\n## How to create [keys](https://cloud.google.com/datastore/docs/reference/data/rest/Shared.Types/Value#Key) and [entities](https://cloud.google.com/datastore/docs/reference/data/rest/Shared.Types/Value#entity)\n\n```python\nfrom aiodatastore import Key, PartitionId, PathElement\n\nkey = Key(PartitionId(\"project1\"), [PathElement(\"Kind1\")])\n```\n\nYou can also set [namespace](https://cloud.google.com/datastore/docs/concepts/multitenancy) for key:\n```python\nfrom aiodatastore import Key, PartitionId, PathElement\n\nkey = Key(PartitionId(\"project1\", namespace_id=\"namespace1\"), [PathElement(\"Kind1\")])\n```\n\nAnd `id` or `name` for path element:\n```python\nfrom aiodatastore import Key, PartitionId, PathElement\n\nkey1 = Key(PartitionId(\"project1\"), [PathElement(\"Kind1\", id=\"12345\")])\nkey2 = Key(PartitionId(\"project1\"), [PathElement(\"Kind1\", name=\"name1\")])\n```\n\nTo create an entity object, you have to specify key and properties. Properties is a dict with string keys and typed values. For each [data type](https://cloud.google.com/datastore/docs/reference/data/rest/Shared.Types/Value) the library provides corresponding value class. Every value (except ArrayValue) can be indexed or not (indexed by default):\n```python\nfrom aiodatastore import Entity, Key, PartitionId, PathElement\nfrom aiodatastore import (\n    ArrayValue,\n    BoleanValue,\n    BlobValue,\n    DoubleValue,\n    GeoPointValue,\n    IntegerValue,\n    LatLng,\n    NullValue,\n    StringValue,\n    TimestampValue,\n)\n\nkey = Key(PartitionId(\"project1\"), [PathElement(\"Kind1\")])\nentity = Entity(key, properties={\n    \"array-prop\": ArrayValue([NullValue(), IntegerValue(123), StringValue(\"str1\")]),\n    \"bool-prop\": BooleanValue(True),\n    \"blob-prop\": BlobValue(\"data to store as blob\"),\n    \"double-prop\": DoubleValue(1.23, indexed=False),\n    \"geo-prop\": GeoPointValue(LatLng(1.23, 4.56)),\n    \"integer-prop\": IntegerValue(123),\n    \"null-prop\": NullValue(),\n    \"string-prop\": StringValue(\"str1\"),\n    \"timestamp-prop\": TimestampValue(datetime.datetime.utcnow()),\n})\n```\n\nTo access property value use `.value` attribute:\n```python\nprint(entity.properties[\"integer-prop\"].value)\n123\n```\n\nUse `.value` attribute to change property value and keep index status. Or assign new value and set index:\n```python\nprint(entity.properties[\"integer-prop\"].value, entity.properties[\"integer-prop\"].indexed)\n123, True\nentity.properties[\"integer-prop\"].value = 456\nprint(entity.properties[\"integer-prop\"].value, entity.properties[\"integer-prop\"].indexed)\n456, True\n\nentity.properties[\"integer-prop\"] = IntegerValue(456, indexed=True)\nprint(entity.properties[\"integer-prop\"].value, entity.properties[\"integer-prop\"].indexed)\n456, True\n```\n\nUse `.indexed` attribute to access or change index:\n```python\nprint(entity.properties[\"integer-prop\"].indexed)\nTrue\n\nentity.properties[\"integer-prop\"].indexed = False\nprint(entity.properties[\"integer-prop\"].indexed)\nFalse\n```\n\nTo insert new entity (the entity key's final path element may be incomplete):\n```python\nkey = Key(PartitionId(\"project1\"), [PathElement(\"Kind1\")])\nentity = Entity(key, properties={\n    \"string-prop\": StringValue(\"some value\"),\n})\nawait client.insert(entity)\n```\n\nTo update an entity (the entity must already exist. Must have a complete key path):\n```python\nentity.properties[\"string-prop\"] = StringValue(\"new value\")\nawait client.update(entity)\n```\n\nTo upsert an entity (the entity may or may not already exist. The entity key's final path element may be incomplete):\n```python\nkey = Key(PartitionId(\"project1\"), [PathElement(\"Kind1\")])\nentity = Entity(key, properties={\n    \"string-prop\": StringValue(\"some value\"),\n})\nawait client.upsert(entity)\n```\n\nTo delete an entity (the entity may or may not already exist. Must have a complete key path and must not be reserved/read-only):\n```python\nawait client.delete(entity)\n```\n\nIf you have entity's key or know how to build it:\n```python\nawait client.delete(key)\n````\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiodatastore",
    "package_url": "https://pypi.org/project/aiodatastore/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiodatastore/",
    "project_urls": {
      "Changelog": "https://github.com/umax/aiodatastore/blob/main/CHANGELOG.md",
      "Homepage": "https://github.com/umax/aiodatastore",
      "Source": "https://github.com/umax/aiodatastore"
    },
    "release_url": "https://pypi.org/project/aiodatastore/0.1.3/",
    "requires_dist": [
      "gcloud-aio-auth<5.0.0,>=3.1.0"
    ],
    "requires_python": ">=3.8",
    "summary": "Low level and high performance asyncio client for Google Datastore REST API",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16153230,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3317976e9d03a1515f7663a251ccce1b413e6c5363e02d4026134d95b36e93e2",
          "md5": "2adf5da7adbafe0545001ae43650207f",
          "sha256": "d8b79824ce99263d9cfb43f0a82532c5ada4546ee5b31dd66337640febc90932"
        },
        "downloads": -1,
        "filename": "aiodatastore-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2adf5da7adbafe0545001ae43650207f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14360,
        "upload_time": "2022-12-07T18:02:41",
        "upload_time_iso_8601": "2022-12-07T18:02:41.487493Z",
        "url": "https://files.pythonhosted.org/packages/33/17/976e9d03a1515f7663a251ccce1b413e6c5363e02d4026134d95b36e93e2/aiodatastore-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bafbad7dc1c465c39c8f1b3155a140becb120aa93637ded39e5a50ac43839d9e",
          "md5": "5debd5545357097a26cebf5fb95a814e",
          "sha256": "973c1055ecea03dfbffed346b523162ca5496b24045f8641a8fbbbafed161821"
        },
        "downloads": -1,
        "filename": "aiodatastore-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5debd5545357097a26cebf5fb95a814e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20156,
        "upload_time": "2022-12-07T18:02:43",
        "upload_time_iso_8601": "2022-12-07T18:02:43.097094Z",
        "url": "https://files.pythonhosted.org/packages/ba/fb/ad7dc1c465c39c8f1b3155a140becb120aa93637ded39e5a50ac43839d9e/aiodatastore-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cb7ff1fe2c213e27a1548c288903ef36ae8ff1941d3f2c7af706808f9b63bbd",
          "md5": "613511c1e7568068734c4f2090e614dc",
          "sha256": "64a411b8d347178ef798013ae691fbd1a8cfdb19dd2f7521bcf3b4127082937c"
        },
        "downloads": -1,
        "filename": "aiodatastore-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "613511c1e7568068734c4f2090e614dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14370,
        "upload_time": "2022-12-08T10:27:52",
        "upload_time_iso_8601": "2022-12-08T10:27:52.328796Z",
        "url": "https://files.pythonhosted.org/packages/1c/b7/ff1fe2c213e27a1548c288903ef36ae8ff1941d3f2c7af706808f9b63bbd/aiodatastore-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5628a9b80505d0cc3c1e4c0f8417d96c6b4b012a184afe0dbaf480dcf2258896",
          "md5": "0397e3e6a494dcfd6dc0cadabdfc7897",
          "sha256": "73c7519c90e7b63e9ce69dac097fa48d8bd9728e7a638f568c6f42b975819843"
        },
        "downloads": -1,
        "filename": "aiodatastore-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0397e3e6a494dcfd6dc0cadabdfc7897",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 20187,
        "upload_time": "2022-12-08T10:27:54",
        "upload_time_iso_8601": "2022-12-08T10:27:54.273138Z",
        "url": "https://files.pythonhosted.org/packages/56/28/a9b80505d0cc3c1e4c0f8417d96c6b4b012a184afe0dbaf480dcf2258896/aiodatastore-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1558b1e182164a6023415b4e5aee83e5b9f4efc8b6dac129a5027702472cbc8a",
          "md5": "7fa6e5ed735e13fdac60fd33d8ee499b",
          "sha256": "173918d4a1e55748c945c0a0f2dc2efb85a5b0097aec219a7f4144a3713ab0c2"
        },
        "downloads": -1,
        "filename": "aiodatastore-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7fa6e5ed735e13fdac60fd33d8ee499b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 15595,
        "upload_time": "2022-12-19T18:17:47",
        "upload_time_iso_8601": "2022-12-19T18:17:47.530720Z",
        "url": "https://files.pythonhosted.org/packages/15/58/b1e182164a6023415b4e5aee83e5b9f4efc8b6dac129a5027702472cbc8a/aiodatastore-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6207fea17b9d2772ecb66ffce8df6a6633eedc095b5c0fb17b8dc3ba523f9b10",
          "md5": "89b87f2940680f59fbbda0c3ecdf4fc3",
          "sha256": "d649acc226c967ccf001bd2c1a70a9380a7f415e8d37f77ae4835fc1d33faeae"
        },
        "downloads": -1,
        "filename": "aiodatastore-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "89b87f2940680f59fbbda0c3ecdf4fc3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 22070,
        "upload_time": "2022-12-19T18:17:49",
        "upload_time_iso_8601": "2022-12-19T18:17:49.263207Z",
        "url": "https://files.pythonhosted.org/packages/62/07/fea17b9d2772ecb66ffce8df6a6633eedc095b5c0fb17b8dc3ba523f9b10/aiodatastore-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1558b1e182164a6023415b4e5aee83e5b9f4efc8b6dac129a5027702472cbc8a",
        "md5": "7fa6e5ed735e13fdac60fd33d8ee499b",
        "sha256": "173918d4a1e55748c945c0a0f2dc2efb85a5b0097aec219a7f4144a3713ab0c2"
      },
      "downloads": -1,
      "filename": "aiodatastore-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7fa6e5ed735e13fdac60fd33d8ee499b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 15595,
      "upload_time": "2022-12-19T18:17:47",
      "upload_time_iso_8601": "2022-12-19T18:17:47.530720Z",
      "url": "https://files.pythonhosted.org/packages/15/58/b1e182164a6023415b4e5aee83e5b9f4efc8b6dac129a5027702472cbc8a/aiodatastore-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6207fea17b9d2772ecb66ffce8df6a6633eedc095b5c0fb17b8dc3ba523f9b10",
        "md5": "89b87f2940680f59fbbda0c3ecdf4fc3",
        "sha256": "d649acc226c967ccf001bd2c1a70a9380a7f415e8d37f77ae4835fc1d33faeae"
      },
      "downloads": -1,
      "filename": "aiodatastore-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "89b87f2940680f59fbbda0c3ecdf4fc3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 22070,
      "upload_time": "2022-12-19T18:17:49",
      "upload_time_iso_8601": "2022-12-19T18:17:49.263207Z",
      "url": "https://files.pythonhosted.org/packages/62/07/fea17b9d2772ecb66ffce8df6a6633eedc095b5c0fb17b8dc3ba523f9b10/aiodatastore-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}