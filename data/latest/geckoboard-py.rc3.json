{
  "info": {
    "author": "Geckoboard",
    "author_email": "dan@geckoboard.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License"
    ],
    "description": "geckoboard-python\n=================\n\nA Python client library for `Geckoboard datasets\nAPI <https://developer.geckoboard.com/api-reference/>`__.\n\n*Note: This library is still in Beta and the API has potential to change\nbefore the release of V1.*\n\nInstallation\n------------\n\nInstall the package with pip\n\n::\n\n    pip install geckoboard.py\n\nUsage\n-----\n\nThe latest documentation and user guide can be found on the `Geckoboard\ndeveloper\ndocs <https://developer.geckoboard.com/api-reference/python/>`__\n\n--------------\n\nGetting started\n---------------\n\nInstall the python client from PIP\n\n::\n\n    pip install geckoboard.py\n\nImport the Geckoboard package and create an instance of the client using\nyour API key:\n\n.. code:: python\n\n    import geckoboard\n\n    client = geckoboard.client(API_KEY)\n\n**Note:** You can find your API key by logging into the Geckoboard\napplication and visiting the Account section.\n\nAuthentication\n--------------\n\nVerify that your API key is valid and that you can reach the Geckoboard\nAPI with the ``ping`` method.\n\n.. code:: python\n\n    client.ping()\n\nExample:\n~~~~~~~~\n\n.. code:: python\n\n    client('good-api-key').ping() # => true\n    client('bad-api-key').ping() # => raises Exception\n\nFinding or creating a dataset\n-----------------------------\n\nFind and verify an existing dataset or create a new dataset with the\n``find_or_create`` method. ``unique_by`` is an optional list of one or\nmore field names whose values will be unique across all your records.\n\n.. code:: python\n\n    client.datasets.find_or_create(dataset_id, fields, unique_by)\n\nParams:\n~~~~~~~\n\n-  ``dataset_id`` [required] <`str <https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange>`__>\n-  ``fields`` [required] <`dict <https://docs.python.org/2/library/stdtypes.html#mapping-types-dict>`__>\n    - ``type`` [required] <`str <https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange>`__>\n    - ``name`` [required] <`str <https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange>`__>\n    - ``optional`` <`boolean <https://docs.python.org/2/library/stdtypes.html#boolean-values>`__>\n-  ``unique_by``\n   <`list <https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange>`__>\n\nExample:\n~~~~~~~~\n\n.. code:: python\n\n    dataset = client.datasets.find_or_create('sales.by_night', {\n      'amount': { 'type': 'number', 'name': 'Amount', 'optional': False },\n      'timestamp': { 'type': 'datetime', 'name': 'Time' }\n    }, ['timestamp'])\n\nThe full list of available field types is described at the top of this\npage.\n\nReplacing all data in a dataset\n-------------------------------\n\nReplace all data in the dataset by calling the ``put`` method.\n\n.. code:: python\n\n    dataset.put(items)\n\nParams:\n~~~~~~~\n\n-  ``items`` [required]\n   <`list <https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange>`__>\n\nExample:\n~~~~~~~~\n\n.. code:: python\n\n    dataset.put([\n      { 'timestamp': '2016-01-01T12:00:00Z', 'amount': 819 },\n      { 'timestamp': '2016-01-02T12:00:00Z', 'amount': 409 },\n      { 'timestamp': '2016-01-03T12:00:00Z', 'amount': 164 }\n    ])\n\nAppending data to a dataset\n---------------------------\n\nAppend records to a dataset by calling the ``post`` method.\n\nShould the number of records in your dataset exceed the limit following\na post `old records will be discarded <#record-count-limit>`__.\n\n.. code:: python\n\n    dataset.post(items, delete_by)\n\nParams:\n~~~~~~~\n\n-  ``items`` [required]\n   <`list <https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange>`__>\n-  ``delete_by``\n   <`str <https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange>`__>\n\nExample:\n~~~~~~~~\n\n.. code:: python\n\n    dataset.post([\n      { 'timestamp': '2016-01-03T12:00:00Z', 'amount': 312 },\n      { 'timestamp': '2016-01-04T12:00:00Z', 'amount': 665 },\n      { 'timestamp': '2016-01-05T12:00:00Z', 'amount': 453 }\n    ], 'timestamp')\n\nDeleting a dataset\n------------------\n\nDelete the dataset and all data with the given id.\n\n.. code:: python\n\n    client.datasets.delete(dataset_id)\n\nParams:\n~~~~~~~\n\n-  ``dataset_id`` [required]\n   <`str <https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange>`__>\n\nExample:\n~~~~~~~~\n\n.. code:: python\n\n    client.datasets.delete('sales.gross') # => true\n\nYou can also delete a dataset by calling the ``delete`` method on a\ndataset.\n\n.. code:: python\n\n    dataset = client.datasets.find_or_create(...)\n    dataset.delete() # => true\n\n--------------\n\nDevelopment\n-----------\n\nClone this repo\n\n::\n\n    git clone https://github.com/geckoboard/geckoboard-python && cd geckoboard-python\n\nInstall package dependencies\n\n::\n\n    python setup.py develop\n\nRun tests\n\n::\n\n    nosetests\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/geckoboard/geckoboard-python",
    "keywords": "geckoboard,datasets,api,python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "geckoboard.py",
    "package_url": "https://pypi.org/project/geckoboard.py/",
    "platform": "",
    "project_url": "https://pypi.org/project/geckoboard.py/",
    "project_urls": {
      "Homepage": "https://github.com/geckoboard/geckoboard-python"
    },
    "release_url": "https://pypi.org/project/geckoboard.py/1.1.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Official Python client for the Geckoboard Datasets API",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7145159,
  "releases": {
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd95a423131ce199915ee91b94d6a79ec46718a0716506dfeae0e6bc3056d2a2",
          "md5": "46f6a81b6c02ef035be25bd82dc2ab41",
          "sha256": "6561e68a41bd5b37946426d85de249d863ffcc68a5058ad9cad91b2932232798"
        },
        "downloads": -1,
        "filename": "geckoboard.py-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "46f6a81b6c02ef035be25bd82dc2ab41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3780,
        "upload_time": "2017-08-23T16:03:56",
        "upload_time_iso_8601": "2017-08-23T16:03:56.113703Z",
        "url": "https://files.pythonhosted.org/packages/bd/95/a423131ce199915ee91b94d6a79ec46718a0716506dfeae0e6bc3056d2a2/geckoboard.py-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ec8d1a9bbafc06842627bc41d35425f6b8f3ad462af07abe314e366e0375df7",
          "md5": "44ec904bca3414663718ca859a9eb53a",
          "sha256": "374e68093a43c2fed9074889acd45ea83aac79bdb9d5119519fb4eb648321b88"
        },
        "downloads": -1,
        "filename": "geckoboard.py-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "44ec904bca3414663718ca859a9eb53a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4761,
        "upload_time": "2017-10-20T15:49:15",
        "upload_time_iso_8601": "2017-10-20T15:49:15.270416Z",
        "url": "https://files.pythonhosted.org/packages/4e/c8/d1a9bbafc06842627bc41d35425f6b8f3ad462af07abe314e366e0375df7/geckoboard.py-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5bb1fdc1feb81d5570e09fe56939026a62766d5efbe5a27f94234a6300d8f9b",
          "md5": "f19bf848d4c4d00513d3dd9665ed4d53",
          "sha256": "2224c94104e2464f111e55bcefb1c3cd29d8f90916c12d3ec9772daf295119e6"
        },
        "downloads": -1,
        "filename": "geckoboard.py-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f19bf848d4c4d00513d3dd9665ed4d53",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6618,
        "upload_time": "2020-05-01T14:04:35",
        "upload_time_iso_8601": "2020-05-01T14:04:35.297056Z",
        "url": "https://files.pythonhosted.org/packages/d5/bb/1fdc1feb81d5570e09fe56939026a62766d5efbe5a27f94234a6300d8f9b/geckoboard.py-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c297ec2f5264c6dbc963a26e9840de21fb5bf4dd156b96860bd1360715ac202",
          "md5": "17fec3599ca3b7e267e56ab4dc3c2af4",
          "sha256": "77558ed9e171d27dc7c85f6ddebcea29e03851ab89bca0882c3cd84a167d8d84"
        },
        "downloads": -1,
        "filename": "geckoboard.py-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "17fec3599ca3b7e267e56ab4dc3c2af4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4829,
        "upload_time": "2020-05-01T14:04:36",
        "upload_time_iso_8601": "2020-05-01T14:04:36.526154Z",
        "url": "https://files.pythonhosted.org/packages/9c/29/7ec2f5264c6dbc963a26e9840de21fb5bf4dd156b96860bd1360715ac202/geckoboard.py-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5bb1fdc1feb81d5570e09fe56939026a62766d5efbe5a27f94234a6300d8f9b",
        "md5": "f19bf848d4c4d00513d3dd9665ed4d53",
        "sha256": "2224c94104e2464f111e55bcefb1c3cd29d8f90916c12d3ec9772daf295119e6"
      },
      "downloads": -1,
      "filename": "geckoboard.py-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f19bf848d4c4d00513d3dd9665ed4d53",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6618,
      "upload_time": "2020-05-01T14:04:35",
      "upload_time_iso_8601": "2020-05-01T14:04:35.297056Z",
      "url": "https://files.pythonhosted.org/packages/d5/bb/1fdc1feb81d5570e09fe56939026a62766d5efbe5a27f94234a6300d8f9b/geckoboard.py-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c297ec2f5264c6dbc963a26e9840de21fb5bf4dd156b96860bd1360715ac202",
        "md5": "17fec3599ca3b7e267e56ab4dc3c2af4",
        "sha256": "77558ed9e171d27dc7c85f6ddebcea29e03851ab89bca0882c3cd84a167d8d84"
      },
      "downloads": -1,
      "filename": "geckoboard.py-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "17fec3599ca3b7e267e56ab4dc3c2af4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4829,
      "upload_time": "2020-05-01T14:04:36",
      "upload_time_iso_8601": "2020-05-01T14:04:36.526154Z",
      "url": "https://files.pythonhosted.org/packages/9c/29/7ec2f5264c6dbc963a26e9840de21fb5bf4dd156b96860bd1360715ac202/geckoboard.py-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}