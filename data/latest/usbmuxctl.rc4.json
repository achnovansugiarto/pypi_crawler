{
  "info": {
    "author": "Chris Fiege",
    "author_email": "python@pengutronix.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)"
    ],
    "description": "Welcome to usbmuxctl\n====================\n\n|license|\n|pypi|\n\nPurpose\n-------\n\nThis is the control software for the Linux Automation GmbH USB-Mux. This repository contains\na standalone command line application and a python module, both of which may be used to\ncontrol USB-Muxes on Linux.\n\nUSB-Muxes contain an USB Hub, high speed analog switches, power switches and a microcontroller\nfor control. USB-Muxes enable the automated testing of embedded USB devices by\nallowing the connection of a USB device to a DUT (device under test) without requiring\nphysical access.\n\nThe USB-Mux hardware and software is usually used with `Labgrid <https://github.com/labgrid-project/labgrid>`_,\nbut can also be made to fit your workflow by using it standalone or in a custom application.\n\nFunctional overview\n-------------------\n\n``usbmuxctl`` provides the following sub-commands:\n\n* ``usbmuxctl list`` - Get a list of available USB-Muxes\n* ``usbmuxctl status`` - Get the current status of a particular USB-Mux\n* ``usbmuxctl update`` - Perform firmware upgrades\n* ``usbmuxctl disconnect`` - Tear down all USB connections to the DUT and Device ports\n* ``usbmuxctl connect`` - Create a connection between USB ports. Possible connections are:\n\n  * ``--dut-device`` - Connect the DUT (e.g. a single board computer) to the Device port (e.g. an USB flash drive)\n  * ``--host-dut`` - Connect the Host (e.g. a PC running ``usbmuxctl``) to the DUT (acting as an USB device)\n  * ``--host-device`` - Connect the Host to the Device port\n\n* ``usbmuxctl id`` - Set the status of the DUT's ``id`` pin used for USB OTG negotiation\n\nPossible example use cases are:\n\n* Testing the hot-plug reliability by toggling between ``usbmuxctl disconnect``\n  and ``usbmuxctl connect --dut-device``.\n* Testing USB-based firmware upgrades by sharing a flash drive using ``usbmuxctl --host-device``\n  and ``usbmuxctl --dut-device``.\n* Testing USB OTG functionality using ``usbmuxctl --dut-device`` (DUT in the USB host role)\n  and ``usbmuxctl --host-dut`` (DUT in the USB device role).\n\nFurther documentation is available in the `handbook <https://linux-automation.com/umx-M01>`_.\n\nQuickstart\n----------\n\nYou can install usbmuxctl either directly from git or from pypi.\nIf you just want to give the tool a spin you should use the `pypi`-method.\n\nInstall from git\n~~~~~~~~~~~~~~~~\n\nClone this repository and create a virtualenv for usbmuxctl:\n\n.. code-block:: bash\n\n   $ git clone https://github.com/linux-automation/usbmuxctl.git\n   $ cd usbmuxctl\n   $ python3 -m venv venv\n   $ source venv/bin/activate\n\nInstall usbmuxctl into the virtualenv:\n\n.. code-block:: bash\n\n   $ pip3 install .\n\nYou can now continue to test your installation using the help command.\n\nInstall from pypi\n~~~~~~~~~~~~~~~~~\n\nCreate and activate a virtualenv for usbmuxctl:\n\n.. code-block:: bash\n\n   $ python3 -m venv venv\n   $ source venv/bin/activate\n\nInstall usbmuxctl into the virtualenv:\n\n.. code-block:: bash\n\n   $ pip3 install usbmuxctl\n\nTest your installation\n~~~~~~~~~~~~~~~~~~~~~~\n\nYou can now run ``usbmuxctl -h`` to get a list of available sub-commands:\n\n.. code-block:: bash\n\n   $ usbmuxctl -h\n   usage: usbmuxctl [-h] [--serial SERIAL] [--path PATH] [--json | --raw] {list,status,update,\n   disconnect,connect,id,dfu} ...\n\n   USB-Mux control\n\n   positional arguments:\n     {list,status,update,disconnect,connect,id,dfu}\n                           Supply one of the following commands to interact with the USB-Mux\n       list                Lists all connected USB-Mux\n       status              Get the status of a USB-Mux\n       update              Update software on the USB-Mux\n       disconnect          Clear all connections between the ports of the USB-Mux\n       connect             Make connections between the ports of the USB-Mux\n       id                  Set the state of the ID-Pin to the DUT\n       dfu                 Send the USB-Mux into the USB-Bootloader mode.\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     --serial SERIAL       Serial number of the USB-Mux\n     --path PATH           path to the USB-Mux\n     --json                Format output as json. Useful for scripting.\n     --raw                 Format output as raw info. Useful for command line scripting.\n\nUsing as root\n~~~~~~~~~~~~~\n\nTo communicate with the USB-Muxes ``usbmuxctl`` needs permissions to access the\nUSB-connected microcontroller. The section below describes the correct way to\ngrant these permissions to your user.\n\nTo rule out issues with the configuration of these permissions for the initial test\nyou can run ``usbmuxctl`` as root by using ``sudo`` and a path to the\n``usbmuxctl`` file inside the previously set up virtualenv [1]_:\n\n.. code-block:: text\n\n   $ sudo venv/bin/usbmuxctl list\n   Serial      | USB-Path           | Host-DUT Lock? | Connections\n   ----------- | ------------------ | -------------- | -----------\n   22          | 1-3.1              | unlocked       | None\n\n   $ sudo venv/bin/usbmuxctl --serial 22 connect --host-device\n                                        +-----------------------+\n                                        | USB-Mux               |\n                                     +--|                       |\n                                     |  | SN:   22              |\n                                     |  | Path: 1-3.1           |\n                                     |  +-----------------------+\n          VCC: 4.95V    +---------+  |\n   Host |>--------------|       1 |--+         ID: High\n                        |         |           VCC: 0.00V\n                        |       2 |----x    ------------|> DUT\n                        |         |\n                        |       3 |---------------------|> Device\n                        +---------+           VCC: 4.62V\n\n\n.. [1] The ``sudo`` command discards most environment variables when executing commands,\n       making it incompatible with the usual virtual env workflow.\n\nUsing as non-root user\n~~~~~~~~~~~~~~~~~~~~~~\n\nTo use ``usbmuxctl`` as non-root user you should use an ``udev`` rule to grant access\nto the USB-Mux device to your user.\nAn example rule for Debian and Debian based distributions (like Ubuntu or Mint) [2]_\nis included in the ``contrib/udev`` folder of this repository.\nThe content of this rule file should be placed in a file in the\n``/etc/udev/rules.d/`` directory. An example installation, including the reloading of\n``udev`` rules is shown below:\n\n.. code-block:: text\n\n   $ echo 'ATTRS{idVendor}==\"33f7\", ATTRS{idProduct}==\"0001\", TAG+=\"uaccess\", GROUP=\"plugdev\"' \\\n    | sudo tee /etc/udev/rules.d/99-usbmux.rules\n   $ sudo udevadm control --reload-rules\n\nAfter reattaching the USB-Mux you should be able to able to use it without\nrequiring ``sudo`` permissions.\n\n.. [2] The ``plugdev`` group may not be present in your Linux distribution of choice.\n       Please adapt the rule according to the groups provided by your distribution.\n\nUsing on Windows\n----------------\n\nMost features of the ``usbmuxctl`` utility can also be used on Windows.\n\nLimitations on Windows\n~~~~~~~~~~~~~~~~~~~~~~\n\nOn Windows the following limitations apply:\n\n* Updating the firmware: this feature has not been tested successfully on Windows.\n  (In theory it should be possible to install  ``dfu-util`` and the drivers needed - but it has not yet been\n  documented.)\n* Using the USB path to select an USB-Mux.\n  (On Linux this feature can be used to select which USB-Mux to use by the physical path on the USB.\n  On Windows the path is not exposed by ``libusb`` and thus this field is empty.)\n\nInstallation of dependencies\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInstall ``python3``.\nMake sure to add the Python binaries to your path during installation.\n\nAfterwards install the `Windows driver package <contrib/windows/libusb_USB-Mux_driver_installer.zip>`_:\nDownload and extract the archive. Then run ``InstallDriver.exe``.\n\nInstall from pypi\n~~~~~~~~~~~~~~~~~\n\nWe suggest to use the PowerShell to use this tool.\n\nCreate and activate a virtualenv for usbmuxctl:\n\n.. code-block:: raw\n\n   PS > python -m venv venv\n   PS >.\\venv\\Scripts\\Activate.ps1\n\nInstall usbmuxctl into the virtualenv:\n\n.. code-block:: raw\n\n   (venv) PS > pip install usbmuxctl\n\nYou can now run ``usbmuxctl.exe -h`` to get a list of available sub-commands.\n\nContributing\n------------\n\nThank you for considering a contribution to this project!\nChanges should be submitted via a\n`Github pull request <https://github.com/linux-automation/usbmuxctl/pulls>`_.\n\nWe use the `black <https://black.readthedocs.io/en/stable/>`_ code formatter,\nplease run `black` when contributing changes:\n\n.. code-block:: bash\n\n    $ python3 -m pip install black\n    $ black *.py usbmuxctl/\n    All done! ‚ú® üç∞ ‚ú®\n    8 files left unchanged.\n\nThis project uses the `Developer's Certificate of Origin 1.1\n<https://developercertificate.org/>`_ with the same `process\n<https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin>`_\nas used for the Linux kernel:\n\n  Developer's Certificate of Origin 1.1\n\n  By making a contribution to this project, I certify that:\n\n  (a) The contribution was created in whole or in part by me and I\n      have the right to submit it under the open source license\n      indicated in the file; or\n\n  (b) The contribution is based upon previous work that, to the best\n      of my knowledge, is covered under an appropriate open source\n      license and I have the right under that license to submit that\n      work with modifications, whether created in whole or in part\n      by me, under the same open source license (unless I am\n      permitted to submit under a different license), as indicated\n      in the file; or\n\n  (c) The contribution was provided directly to me by some other\n      person who certified (a), (b) or (c) and I have not modified\n      it.\n\n  (d) I understand and agree that this project and the contribution\n      are public and that a record of the contribution (including all\n      personal information I submit with it, including my sign-off) is\n      maintained indefinitely and may be redistributed consistent with\n      this project or the open source license(s) involved.\n\nThen you just add a line (using ``git commit -s``) saying:\n\n  Signed-off-by: Random J Developer <random@developer.example.org>\n\nusing your real name (sorry, no pseudonyms or anonymous contributions).\n\n.. |license| image:: https://img.shields.io/badge/license-LGPLv2.1-blue.svg\n    :alt: LGPLv2.1\n    :target: https://raw.githubusercontent.com/linux-automation/usbmuxctl/master/COPYING\n\n.. |pypi| image:: https://img.shields.io/pypi/v/usbmuxctl.svg\n    :alt: pypi.org\n    :target: https://pypi.org/project/usbmuxctl",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/linux-automation/usbmuxctl",
    "keywords": "",
    "license": "LGPL-2.1-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "usbmuxctl",
    "package_url": "https://pypi.org/project/usbmuxctl/",
    "platform": null,
    "project_url": "https://pypi.org/project/usbmuxctl/",
    "project_urls": {
      "Homepage": "https://github.com/linux-automation/usbmuxctl"
    },
    "release_url": "https://pypi.org/project/usbmuxctl/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Tool to control an USB-Mux from the command line",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17069976,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d0b5c03c8b50b8b0740a546c7e433c7dc1845ee459d7bbda53d5b23fcf5f3e7",
          "md5": "4dff3892c9f8d01388c7fb77762c9655",
          "sha256": "713a99c6839f52737b4e5391527866fdded99de767dea6b020c1592ba0f3bded"
        },
        "downloads": -1,
        "filename": "usbmuxctl-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4dff3892c9f8d01388c7fb77762c9655",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28350,
        "upload_time": "2021-04-16T14:27:55",
        "upload_time_iso_8601": "2021-04-16T14:27:55.150079Z",
        "url": "https://files.pythonhosted.org/packages/1d/0b/5c03c8b50b8b0740a546c7e433c7dc1845ee459d7bbda53d5b23fcf5f3e7/usbmuxctl-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8159919d2383aa36690401882aea22cc69f8110097d053ed09b5e28c99b0b07a",
          "md5": "fa1368da9681fc96692120fc3b26447a",
          "sha256": "e4f3d4b9d37e01550ed7b777895f6c73543594d1ea34ab209d79f882a17a392d"
        },
        "downloads": -1,
        "filename": "usbmuxctl-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fa1368da9681fc96692120fc3b26447a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39909,
        "upload_time": "2021-04-16T14:43:05",
        "upload_time_iso_8601": "2021-04-16T14:43:05.426770Z",
        "url": "https://files.pythonhosted.org/packages/81/59/919d2383aa36690401882aea22cc69f8110097d053ed09b5e28c99b0b07a/usbmuxctl-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "035863de00887847c65caf5d8920d05ddbafec7fa34eb93911baa1604c0ab7d0",
          "md5": "e12b6371046de4a16726de2e2eaaf973",
          "sha256": "f605ca0511e8a967fb9fd5e76d37d2e77b61cec384f416de8e17935c5db4b2c0"
        },
        "downloads": -1,
        "filename": "usbmuxctl-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e12b6371046de4a16726de2e2eaaf973",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41642,
        "upload_time": "2022-11-24T10:26:44",
        "upload_time_iso_8601": "2022-11-24T10:26:44.076586Z",
        "url": "https://files.pythonhosted.org/packages/03/58/63de00887847c65caf5d8920d05ddbafec7fa34eb93911baa1604c0ab7d0/usbmuxctl-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c747b1ac61fc60a254b71e210843bf5b4e85b7c7e0f19b2801b874d1995d372",
          "md5": "b0e8f8a91328694f7acee9f1b01022d2",
          "sha256": "b7a9c7bf0645e0d2026fc63307a6724c24be6a33961f0f65cc313be7c8d45feb"
        },
        "downloads": -1,
        "filename": "usbmuxctl-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b0e8f8a91328694f7acee9f1b01022d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2096059,
        "upload_time": "2023-02-27T17:05:34",
        "upload_time_iso_8601": "2023-02-27T17:05:34.353514Z",
        "url": "https://files.pythonhosted.org/packages/9c/74/7b1ac61fc60a254b71e210843bf5b4e85b7c7e0f19b2801b874d1995d372/usbmuxctl-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c747b1ac61fc60a254b71e210843bf5b4e85b7c7e0f19b2801b874d1995d372",
        "md5": "b0e8f8a91328694f7acee9f1b01022d2",
        "sha256": "b7a9c7bf0645e0d2026fc63307a6724c24be6a33961f0f65cc313be7c8d45feb"
      },
      "downloads": -1,
      "filename": "usbmuxctl-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b0e8f8a91328694f7acee9f1b01022d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2096059,
      "upload_time": "2023-02-27T17:05:34",
      "upload_time_iso_8601": "2023-02-27T17:05:34.353514Z",
      "url": "https://files.pythonhosted.org/packages/9c/74/7b1ac61fc60a254b71e210843bf5b4e85b7c7e0f19b2801b874d1995d372/usbmuxctl-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}