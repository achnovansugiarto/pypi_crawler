{
  "info": {
    "author": "Scramjet.org",
    "author_email": "<info@scramjet.org>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Scramjet in Python\n==================\n\n<p align=\"center\">\n    <a><img src=\"https://img.shields.io/github/license/scramjetorg/framework-python?color=green&style=plastic\" alt=\"GitHub license\" /></a>\n    <a><img src=\"https://img.shields.io/github/v/tag/scramjetorg/framework-python?label=version&color=blue&style=plastic\" alt=\"version\" /></a>\n    <a><img src=\"https://img.shields.io/github/stars/scramjetorg/framework-python?color=pink&style=plastic\" alt=\"GitHub stars\" /></a>\n    <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=7F7V65C43EBMW\">\n        <img src=\"https://img.shields.io/badge/Donate-PayPal-green.svg?color=yellow&style=plastic\" alt=\"Donate\" />\n    </a>\n</p>\n<p align=\"center\">‚≠ê Star us on GitHub ‚Äî it motivates us a lot! üöÄ </p>\n<p align=\"center\">\n    <img src=\"https://assets.scramjet.org/images/framework-logo-256.svg\" width=\"420\" alt=\"Scramjet Framework\">\n</p>\n\nScramjet is a simple reactive stream programming framework. The code is written\nby chaining functions that transform the streamed data, including well known\nmap, filter and reduce.\n\nThe main advantage of Scramjet is running asynchronous operations on your data\nstreams concurrently. It allows you to perform the transformations both\nsynchronously and asynchronously by using the same API - so now you can \"map\"\nyour stream from whatever source and call any number of API's consecutively.\n\n[Originally written](https://github.com/scramjetorg/scramjet) on top of node.js\nobject streams, Scramjet is now being ported into Python. This is what is\nhappening in this repository.\n\n>_Tested with Python 3.8.10 and Ubuntu 20.04._\n## Table of contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Requesting features](#requesting-features)\n- [Reporting bugs](#reporting-bugs)\n- [Contributing](#contributing)\n- [Development Setup](#development-setup)\n\n## Installation\n\nSince this is a pre-release version it is not available as a pip package yet. However, it can be used in your `requirements.txt` file by referring to this git repository:\n\n```bash\npip install scramjet-framework-py\n```\n\nAfter adding Scramjet Framework as dependency, it needs to be instaled via `pip`.\n\n## Usage\n\nBasic building block of Scramjet is the `Stream` class. It reads input in\nchunks, performs operations on these chunks and produces an iterable output\nthat can be collected and written somewhere.\n\n**Creating a stream** is done using `read_from` class method. It accepts\nany iterable or an object implementing .read() method as the input, and returns\na `Stream` instance.\n\n**Transforming a stream:**\n\n* `map` - transform each chunk in a stream using specified function.\n* `filter` - keep only chunks for which specified function evaluates to `True`.\n* `flatmap` - run specified function on each chunk, and return all of its results as separate chunks.\n* `batch` - convert a stream of chunks into a stream of lists of chunks.\n\nEach of these methods return the modified stream, so they can be chained like\nthis: `some_stream.map(...).filter(...).batch(...)`\n\n**Collecting data** from the stream (asynchronous):\n\n* `write_to` - write all resulting stream chunks into a target.\n* `to_list` - return a list with all stream chunks.\n* `reduce` - combine all chunks using specified function.\n\n\nExamples :books:\n--------\n\nLet's say we have a `fruits.csv` file like this:\n\n```csv\norange,sweet,1\nlemon,sour,2\npigface,salty,5\nbanana,sweet,3\ncranberries,bitter,6\n```\n\nand we want to write the names of the sweet fruits to a separate file.\nTo do this, write an async function like this:\n\n```python\nwith open(\"misc/fruits.csv\") as file_in, open(\"sweet.txt\", \"w\") as file_out:\n    await (\n        Stream\n        .read_from(file_in)\n        .map(lambda line: line.split(','))\n        .filter(lambda record: record[1] == \"sweet\")\n        .map(lambda record: f\"{record[0]}\\n\")\n        .write_to(file_out)\n    )\n```\n\nand that's it!\n\n\nYou can find more examples in [`hello_datastream.py`](./hello_datastream.py)\nfile. They don't require any additional dependencies, just the standard library,\nso you can run them simply with:\n\n```bash\npython hello_datastream.py\n```\n\n## Requesting Features\n\nAnything missing? Or maybe there is something which would make using Scramjet Framework much easier or efficient? Don't hesitate to fill up a [new feature request](https://github.com/scramjetorg/framework-python/issues/new)! We really appreciate all feedback.\n\n## Reporting bugs\n\nIf you have found a bug, inconsistent or confusing behavior please fill up a [new bug report](https://github.com/scramjetorg/framework-python/issues/new).\n\n## Contributing\n\nYou can contribute to this project by giving us feedback ([reporting bugs](#reporting-bugs) and [requesting features](#reporting-features)) and also by writing code yourself!\n\nThe easiest way is to [create a fork](https://docs.github.com/en/get-started/quickstart/fork-a-repo) of this repository and then [create a pull request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork) with all your changes. In most cases, you should branch from and target `main` branch.\n\nPlease refer to [Development Setup](#development-setup) section on how to setup this project.\n\n## Development Setup\n\n1. Install Python3 interpreter on your computer. Refer to [official docs](https://wiki.python.org/moin/BeginnersGuide/Download).\n\n2. Install `git` version control system. Refer to [official docs](https://git-scm.com/downloads).\n\n3. Clone this repository:\n\n```bash\ngit clone git@github.com:scramjetorg/framework-python.git\n```\n4. Create and activate a virtualenv:\n\n```bash\nsudo apt install python3-virtualenv\nvirtualenv -p python3 venv\n.venv/bin/activate\n```\n\n5. Check Python version:\n\n```bash\n$ python --version\nPython 3.8.10\n```\n\n6. Install dependencies:\n\n```bash\npip install -r dev-requirements.txt\n```\n\n7. Run test cases (with activated virtualenv):\n\n```bash\npytest\n```\n\n> :bulb: **HINT:** add a filename if you want to limit which tests are run\n\n\n8. If you want to enable detailed debug logging, set one of the following env variables:\n\n```bash\nPYFCA_DEBUG=1       # debug pyfca\nDATASTREAM_DEBUG=1  # debug datastream\nSCRAMJET_DEBUG=1    # debug both\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,streams",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scramjet-framework-py",
    "package_url": "https://pypi.org/project/scramjet-framework-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/scramjet-framework-py/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/scramjet-framework-py/0.10/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Scramjet is a simple reactive stream programming framework.",
    "version": "0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13589213,
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25b508fa84edbaaddda694e92071d1c9f3e7d7c2fe88c99125af35d20e4ee206",
          "md5": "a6c4305d327258abfe07476f7bc46630",
          "sha256": "0e0c463499c022ec7bf8e9a213bf475e1878ddf883202802fe05a6f0931769b0"
        },
        "downloads": -1,
        "filename": "scramjet_framework_py-0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6c4305d327258abfe07476f7bc46630",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11827,
        "upload_time": "2022-04-22T10:55:02",
        "upload_time_iso_8601": "2022-04-22T10:55:02.316407Z",
        "url": "https://files.pythonhosted.org/packages/25/b5/08fa84edbaaddda694e92071d1c9f3e7d7c2fe88c99125af35d20e4ee206/scramjet_framework_py-0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6c671ed12b67b60ef237fb2da4d5869eb1c7a6764493be6ff63e31ec679e609",
          "md5": "7be8e0563fc9731ea869c3102831d063",
          "sha256": "f74f12983da2aa21847315d4753635e88c29351192b91a158ae6187ef9874446"
        },
        "downloads": -1,
        "filename": "scramjet-framework-py-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "7be8e0563fc9731ea869c3102831d063",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25989,
        "upload_time": "2022-04-22T10:55:03",
        "upload_time_iso_8601": "2022-04-22T10:55:03.776834Z",
        "url": "https://files.pythonhosted.org/packages/d6/c6/71ed12b67b60ef237fb2da4d5869eb1c7a6764493be6ff63e31ec679e609/scramjet-framework-py-0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "25b508fa84edbaaddda694e92071d1c9f3e7d7c2fe88c99125af35d20e4ee206",
        "md5": "a6c4305d327258abfe07476f7bc46630",
        "sha256": "0e0c463499c022ec7bf8e9a213bf475e1878ddf883202802fe05a6f0931769b0"
      },
      "downloads": -1,
      "filename": "scramjet_framework_py-0.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6c4305d327258abfe07476f7bc46630",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11827,
      "upload_time": "2022-04-22T10:55:02",
      "upload_time_iso_8601": "2022-04-22T10:55:02.316407Z",
      "url": "https://files.pythonhosted.org/packages/25/b5/08fa84edbaaddda694e92071d1c9f3e7d7c2fe88c99125af35d20e4ee206/scramjet_framework_py-0.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6c671ed12b67b60ef237fb2da4d5869eb1c7a6764493be6ff63e31ec679e609",
        "md5": "7be8e0563fc9731ea869c3102831d063",
        "sha256": "f74f12983da2aa21847315d4753635e88c29351192b91a158ae6187ef9874446"
      },
      "downloads": -1,
      "filename": "scramjet-framework-py-0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "7be8e0563fc9731ea869c3102831d063",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 25989,
      "upload_time": "2022-04-22T10:55:03",
      "upload_time_iso_8601": "2022-04-22T10:55:03.776834Z",
      "url": "https://files.pythonhosted.org/packages/d6/c6/71ed12b67b60ef237fb2da4d5869eb1c7a6764493be6ff63e31ec679e609/scramjet-framework-py-0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}