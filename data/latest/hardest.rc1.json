{
  "info": {
    "author": "Jonathan Sadeghi",
    "author_email": "jonathan.sadeghi@five.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Hardest\n\n[![Run tests](https://github.com/fiveai/hardest/actions/workflows/python-package.yml/badge.svg)](https://github.com/fiveai/hardest/actions/workflows/python-package.yml)\n[![Upload Python Package](https://github.com/fiveai/hardest/actions/workflows/deploy.yml/badge.svg)](https://github.com/fiveai/hardest/actions/workflows/deploy.yml)\n[![pre-commit](https://github.com/fiveai/hardest/actions/workflows/pre-commit.yml/badge.svg)](https://github.com/fiveai/hardest/actions/workflows/pre-commit.yml)\n\nThe HARDness ESTimation package: A library for ranking images from a dataset by hardness with respect to a specific detector.\nCurrently, we provide examples in the library for torchvision datasets and detectors, but other datasets and detectors\ncan be used by converting the data to the torchvision format.\n\n## Getting started\nTo install:\n```bash\npip install hardest\n```\n\nHere we provide instructions for computing the hardness of an entire dataset.\nFirstly obtain a pytorch dataset:\n```python\nfrom torchvision.datasets.coco import CocoDetection\nimport itertools\ndataset = CocoDetection(...)\n\n# Run on a subset of the dataset\nn_examples = 50\nimages, targets = zip(*itertools.islice(dataset, n_examples))\n\n```\nObtain detections:\n```python\nimport torch, torchvision\n\nmodel = torchvision.models.detection.retinanet_resnet50_fpn(pretrained=True)\nmodel.eval()\nwith torch.no_grad():\n    detections = [model([image])[0] for image in images]\n```\n\nChoose a definition of hardness:\n```python\nfrom hardest.pycocotools import TotalFalse\nhardness_definition = TotalFalse()\n```\n\nEstimate hardness using annotations:\n```python\nfrom hardest.hardness_strategies import SupervisedHardnessCalculation\nrank = SupervisedHardnessCalculation(hardness_definition).eval_dataset(\n    detections,\n    targets,\n    images,\n)\n```\n\nIf annotations are not available, you can estimate hardness without annotations:\n```python\nfrom hardest.hardness_strategies import ScoreSamplingHardnessCalculation\nrank = ScoreSamplingHardnessCalculation(hardness_definition, n_samples=10).eval_dataset(detections, images)\n```\n\n## Reproducing published results\nTo repeat the experiments from our paper (details here), first install the [COCO](https://cocodataset.org) as well as the [nuImages](https://www.nuscenes.org/nuimages) datasets and convert it to a COCO compatible format [using these instructions](https://github.com/open-mmlab/mmdetection3d/blob/master/configs/nuimages/README.md).\nThen export the detections for your desired detector to torchvision json format.\n\nFinally, run the script:\n```bash\npython scripts/paper_experiments.py --coco-root datasets/coco --nuimages-root datasets/nuimages-coco --save-dir ./results --detection-path-coco detections/coco --detection-path-nuimages detections/nuimages\n```\nThis will require that you have stored detections in json files in the appropriate paths and downloaded the datasets to\nthe specified paths.\n\nTo reproduce the nuimages results you will need to convert the nuimages dataset to the coco schema:\nhttps://github.com/open-mmlab/mmdetection3d/blob/master/configs/nuimages/README.md\n\nIf you use the package in your research please consider citing our paper:\n```\ndetails here\n```\n\n## Contributors\n\n### Authors\n\n- Jonathan Sadeghi\n- Edward Ayres\n\n### Internal Review\n\n- Anuj Sharma\n- Blaine Rogers\n- Romain Mueller\n- Zygmunt Lenyk\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hardest",
    "package_url": "https://pypi.org/project/hardest/",
    "platform": null,
    "project_url": "https://pypi.org/project/hardest/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/hardest/0.0.0/",
    "requires_dist": [
      "torch",
      "torchvision",
      "torchmetrics",
      "scipy",
      "sklearn",
      "num2words",
      "pandas",
      "tqdm",
      "tueplots",
      "pytest ; extra == 'test'",
      "requests ; extra == 'test'",
      "pycocotools ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "The HARDness ESTimation package: ranks an object detection dataset by the expected hardness of the images.",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15207614,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99db791774ef6af32dd01f226d26a63d5b660807c76fd722d9b8c0f0684d6bf4",
          "md5": "ce50c32e159f543f5c0cc72da3b23b49",
          "sha256": "6faaa29170d5154a423c30ec1c8ed23d7428f8d194fb5ef4a09db015320d5310"
        },
        "downloads": -1,
        "filename": "hardest-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce50c32e159f543f5c0cc72da3b23b49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 23303,
        "upload_time": "2022-09-25T22:35:12",
        "upload_time_iso_8601": "2022-09-25T22:35:12.314222Z",
        "url": "https://files.pythonhosted.org/packages/99/db/791774ef6af32dd01f226d26a63d5b660807c76fd722d9b8c0f0684d6bf4/hardest-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87e529a3646bbfe82e95765f2c3137d6d54a13aef9a814bdfc9a8a45868317e9",
          "md5": "01e794351d508ffecdaf8b075ab1da44",
          "sha256": "92551484427e6179d7d7f1daa19a544a80f4f0da4585f0901004221a6299943c"
        },
        "downloads": -1,
        "filename": "hardest-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01e794351d508ffecdaf8b075ab1da44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 22517,
        "upload_time": "2022-09-25T22:35:14",
        "upload_time_iso_8601": "2022-09-25T22:35:14.513084Z",
        "url": "https://files.pythonhosted.org/packages/87/e5/29a3646bbfe82e95765f2c3137d6d54a13aef9a814bdfc9a8a45868317e9/hardest-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99db791774ef6af32dd01f226d26a63d5b660807c76fd722d9b8c0f0684d6bf4",
        "md5": "ce50c32e159f543f5c0cc72da3b23b49",
        "sha256": "6faaa29170d5154a423c30ec1c8ed23d7428f8d194fb5ef4a09db015320d5310"
      },
      "downloads": -1,
      "filename": "hardest-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ce50c32e159f543f5c0cc72da3b23b49",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 23303,
      "upload_time": "2022-09-25T22:35:12",
      "upload_time_iso_8601": "2022-09-25T22:35:12.314222Z",
      "url": "https://files.pythonhosted.org/packages/99/db/791774ef6af32dd01f226d26a63d5b660807c76fd722d9b8c0f0684d6bf4/hardest-0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87e529a3646bbfe82e95765f2c3137d6d54a13aef9a814bdfc9a8a45868317e9",
        "md5": "01e794351d508ffecdaf8b075ab1da44",
        "sha256": "92551484427e6179d7d7f1daa19a544a80f4f0da4585f0901004221a6299943c"
      },
      "downloads": -1,
      "filename": "hardest-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "01e794351d508ffecdaf8b075ab1da44",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 22517,
      "upload_time": "2022-09-25T22:35:14",
      "upload_time_iso_8601": "2022-09-25T22:35:14.513084Z",
      "url": "https://files.pythonhosted.org/packages/87/e5/29a3646bbfe82e95765f2c3137d6d54a13aef9a814bdfc9a8a45868317e9/hardest-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}