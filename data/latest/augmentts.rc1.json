{
  "info": {
    "author": "Sasan Barak",
    "author_email": "s.barak@soton.ac.uk",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# AugmentTS :: Time Series Data Augmentation using Deep Generative Models\n**Note!!!** The package is under development so be careful for using in production!\n## Features\n- Time Series Data Augmentation using Deep Generative Models\n- Visualizing the Latent Space of Generative Models\n- Time Series Forecasting using Deep Neural Networks\n\n## Installation\nYou can install the last stable version using pip\n```\npip install augmentts\n```\n## How to Use\n### Augmentation Guide\n#### Create an augmenter\n```python\nfrom augmentts.augmenters.vae import LSTMVAE, VAEAugmenter\n\n# create a variational autoencoder\nvae = LSTMVAE(series_len=100)\n# create an augmenter\naugmenter = VAEAugmenter(vae)\n```\nThe above code uses the default settings for the LSTM-VAE model. You can customize its architecture or use your own model for encoder and decoder. Note currently we only support Keras models.  \n#### Train the augmenter\n```python\naugmenter.fit(data, epochs=50, batch_size=32)\n```\n#### Generate new time series!\nTwo strategies for sampling have been implemented.  \nYou can simply sample from the latent space. Here `n` is the number of generated series\n```python\naugmenter.sample(n=1000)\n```\nYou also can generate time series by reconstructing a set of series.\n```python\naugmenter.sample(X=data)\n```\nIn both cases you can control the variety of generated time series using `sigma`\n```python\naugmenter.sample(n=1000, sigma=0.2)\n```\n### Forecasting Guide\nFirst we create a random dataset then use `prepare_ts` helper function to prepare the dataset for forecasting.\n```python\nfrom augmentts.forecasters.deep import LSTMCNNForecaster\nfrom augmentts.utils import prepare_ts\nimport numpy as np\n\n# creating a random dataset\nts = np.random.rand(100, 10)\n# preparing data for rolling window regression\nX, y = prepare_ts(ts, 8, 4)\n```\nNow we can create a forecaster and train it. Note the `fit` function is just an alias for Keras fit function thus you can pass all of the supported arguments of Keras fit function.\n```python\nmodel = LSTMCNNForecaster(window_size=8, steps_ahead=4, n_series=10)\nmodel.fit(X, y, epochs=10)\n```\nAfter training you can use `predict` to evaluate the model. \n```python\nmodel.predict(X)\n```\n\n\n## Supported Augmenters\nSupported models for augmentation currently are as follows:\n|  Model  |           Type          |   Supported Time Series  |                                Description                                |\n|:-------:|:-----------------------:|:------------------------:|:-------------------------------------------------------------------------:|\n| LSTMVAE | Variational Autoencoder | Univariate, fixed length | A Variational Autoencoder with stacked LSTM layers for encoder and decoder based on the paper [paper citation] |\n\n## Supported Forecasters\nCurrently an LSTM-CNN forecaster is implemented. You can either customize it or just implement your own architecture.\n\n## Examples\n### Augmenting ETS Time Series \nLet's see how to use AugmentTS to generate time series similiar to one of the ETS families.  \n```python\nimport matplotlib.pyplot as plt\nimport seaborn as sb\nsb.set(style='white')\nimport pandas as pd\n```\nUsing `ETSDataset` class we can sample time series from any ETS model.  \n```python\nfrom augmentts.datasets import ETSDataset\n```\nFor the sake of simplicity we sample 60 series from ANA model (Additive error, No trend, Additive seasonality) and 30 seris from MNN model (Multiplicative error, no trend, no seasonality):\n```python\n# sampling a few series from ETS model\nets = ETSDataset(ets_families={\n    'A,N,A' : 60, # 60 samples from ANA model\n    'M,N,N' : 30  # 30 samples from MNN model\n}, length=100)\n\nts_data, family = ets.load(return_family=True)\n```\nWe can use any dimensionality reduction or manifold learning method for visulizing the series in plane. Let's just use t-SNE.\n```python\nfrom sklearn.manifold import TSNE\n\ntsne = TSNE(n_components=2)\nz = tsne.fit_transform(ts_data)\n```\nWe simply use Pandas and Seaborn to draw a scatte plot\n```python\noriginal_df = pd.DataFrame({'family' : family})\noriginal_df[['z1', 'z2']] = z\n\nsb.scatterplot(data=original_df, x='z1', y='z2', hue='family')\n```\n![image](https://user-images.githubusercontent.com/8543469/143130228-28473bcd-1201-403e-ba73-76b390609839.png)\n\nNow we use AugmentTS to augment the MNN family:\n```python\nfrom augmentts.augmenters.vae import LSTMVAE, VAEAugmenter\n\n# creating the VAE\nvae = LSTMVAE(series_len=100, encoder_hiddens=[512, 256, 128], decoder_hiddens=[128, 256, 512])\naugmenter = VAEAugmenter(vae)\n# training the VAE on MNN family\nvae_data = ts_data[-30:, :].reshape(-1, 1, 100)\naugmenter.fit(vae_data, epochs=100, batch_size=16)\n```\nGenerating 30 new time series.\n```python\nn_generated = 30\ngenerated = augmenter.sample(n=n_generated, sigma=0.5)\ngenerated = generated.numpy()[:, 0, :]\n```\nNow we visualize the augmented time series and the original ones\n```python\nz = tsne.fit_transform(np.vstack([ts_data, generated]))\naugmented_df = pd.DataFrame({'family' : family + ['Generated M,N,N']*n_generated})\naugmented_df[['z1', 'z2']] = z\nsb.scatterplot(data=augmented_df, x='z1', y='z2', hue='family')\n```\nHere is the result of augmentation!  \n![image](https://user-images.githubusercontent.com/8543469/143130434-57e70b76-c242-4f8d-9a0e-44659d83d3e1.png)\n\n\n## Contributors\nThe list of the current contributors:\n- Sasan Barak\n- Amirabbas Asadi\n- Ehsan Mirafzali\n- Mohammad Joshaghani\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DrSasanBarak/AugmentTS",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AugmentTS",
    "package_url": "https://pypi.org/project/AugmentTS/",
    "platform": "",
    "project_url": "https://pypi.org/project/AugmentTS/",
    "project_urls": {
      "Homepage": "https://github.com/DrSasanBarak/AugmentTS"
    },
    "release_url": "https://pypi.org/project/AugmentTS/0.1.0/",
    "requires_dist": [
      "tensorflow (>=2.0.0)",
      "keras",
      "tensorflow-addons",
      "sktime (>=0.7.0)"
    ],
    "requires_python": "",
    "summary": "Time Series Forecasting and Data Augmentation using Deep Generative Models",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12119389,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e4c997c32cbb3942743c6e3175e0bef1ef4aace7832e32fe1ab52d7fd454cdb",
          "md5": "9d9f3f13e3e291422b1debd5b9d97672",
          "sha256": "e3c9dffdcebd1e1b4278172142c83fccf728cec265e76b3d7b9618ecfb5b0e82"
        },
        "downloads": -1,
        "filename": "AugmentTS-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d9f3f13e3e291422b1debd5b9d97672",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12831,
        "upload_time": "2021-11-25T04:30:09",
        "upload_time_iso_8601": "2021-11-25T04:30:09.995390Z",
        "url": "https://files.pythonhosted.org/packages/8e/4c/997c32cbb3942743c6e3175e0bef1ef4aace7832e32fe1ab52d7fd454cdb/AugmentTS-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "031db4abe204b61616292ec1743c95109313c75ed025e394be526c8346fb3a07",
          "md5": "5d47b0a6369665dea389a73840ac2b6c",
          "sha256": "82f558ca8877c6c9e9847ec7d08874995cd7fbc0bb538cdd4436271e1f989e91"
        },
        "downloads": -1,
        "filename": "AugmentTS-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5d47b0a6369665dea389a73840ac2b6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12255,
        "upload_time": "2021-11-25T04:30:11",
        "upload_time_iso_8601": "2021-11-25T04:30:11.712678Z",
        "url": "https://files.pythonhosted.org/packages/03/1d/b4abe204b61616292ec1743c95109313c75ed025e394be526c8346fb3a07/AugmentTS-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e4c997c32cbb3942743c6e3175e0bef1ef4aace7832e32fe1ab52d7fd454cdb",
        "md5": "9d9f3f13e3e291422b1debd5b9d97672",
        "sha256": "e3c9dffdcebd1e1b4278172142c83fccf728cec265e76b3d7b9618ecfb5b0e82"
      },
      "downloads": -1,
      "filename": "AugmentTS-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9d9f3f13e3e291422b1debd5b9d97672",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12831,
      "upload_time": "2021-11-25T04:30:09",
      "upload_time_iso_8601": "2021-11-25T04:30:09.995390Z",
      "url": "https://files.pythonhosted.org/packages/8e/4c/997c32cbb3942743c6e3175e0bef1ef4aace7832e32fe1ab52d7fd454cdb/AugmentTS-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "031db4abe204b61616292ec1743c95109313c75ed025e394be526c8346fb3a07",
        "md5": "5d47b0a6369665dea389a73840ac2b6c",
        "sha256": "82f558ca8877c6c9e9847ec7d08874995cd7fbc0bb538cdd4436271e1f989e91"
      },
      "downloads": -1,
      "filename": "AugmentTS-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5d47b0a6369665dea389a73840ac2b6c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12255,
      "upload_time": "2021-11-25T04:30:11",
      "upload_time_iso_8601": "2021-11-25T04:30:11.712678Z",
      "url": "https://files.pythonhosted.org/packages/03/1d/b4abe204b61616292ec1743c95109313c75ed025e394be526c8346fb3a07/AugmentTS-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}