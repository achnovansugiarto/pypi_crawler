{
  "info": {
    "author": "Johannes Fischer",
    "author_email": "<aulasparticularesdealemaosp@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Editors :: Text Processing",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Utilities"
    ],
    "description": "\n# Print and capture the output of a subprocess simultaneously\n\n\n\n\n\n```python\n\n\n\n$pip install subprocess-print-and-capture\n\n\n\nfrom subprocess_print_and_capture import execute_subprocess, execute_subprocess_multiple_commands, execute_subprocess_multiple_commands_v2\n\n\n\n\n\n\n\n# -----------------------------------------------------------------------------------------------------------------------------\n\n\n\n# Update: you can now pass multiple \"subcommands\", you will see the output on screen, get the printed text as a list, and can kill the process with a hotkey (and still getting the output)  \n\nadboutput = execute_subprocess_multiple_commands(\n\n    \"adb shell\", [\"ls\", \"sleep 1\", \"ls -R -s -i -n -H\"], exit_keys=\"ctrl+x\"\n\n)\n\nadboutput = execute_subprocess_multiple_commands_v2(\n\n    \"adb shell\", [\"ls\", \"sleep 1\", \"ls -R -s -i -n -H\"], exit_keys=\"ctrl+x\"\n\n) #alternative, works sometimes better\n\n\n\n\n\n# output screen\n\nacct\n\nboot\n\nbugreports\n\ncache\n\ncharger\n\nconfig\n\nd\n\ndata\n\ndefault.prop\n\ndev\n\netc\n\nfile_contexts.bin\n\nfstab.nougat\n\nfstab_sdcard.nougat\n\ninit\n\ninit.environ.rc\n\ninit.nougat.rc\n\ninit.rc\n\ninit.usb.configfs.rc\n\ninit.usb.rc\n\ninit.zygote32.rc\n\nlib\n\nmnt\n\noem\n\nproc\n\nproperty_contexts\n\nroot\n\nsbin\n\nsdcard\n\nseapp_contexts\n\nselinux_version\n\nsepolicy\n\nservice_contexts\n\nstorage\n\nsys\n\nsystem\n\nueventd.nougat.rc\n\nueventd.rc\n\nvendor\n\n\n\n\n\nadboutput\n\nOut[3]: \n\n['acct\\n',\n\n 'boot\\n',\n\n 'bugreports\\n',\n\n 'cache\\n',\n\n 'charger\\n',\n\n 'config\\n',\n\n 'd\\n',\n\n 'data\\n',\n\n 'default.prop\\n',\n\n 'dev\\n',\n\n 'etc\\n',\n\n 'file_contexts.bin\\n',\n\n 'fstab.nougat\\n',\n\n 'fstab_sdcard.nougat\\n',\n\n 'init\\n',\n\n 'init.environ.rc\\n',\n\n 'init.nougat.rc\\n',\n\n 'init.rc\\n',\n\n 'init.usb.configfs.rc\\n',\n\n 'init.usb.rc\\n',\n\n 'init.zygote32.rc\\n',\n\n 'lib\\n',\n\n 'mnt\\n',\n\n 'oem\\n',\n\n 'proc\\n',\n\n 'property_contexts\\n',\n\n 'root\\n',\n\n 'sbin\\n',\n\n 'sdcard\\n',\n\n 'seapp_contexts\\n',\n\n 'selinux_version\\n',\n\n 'sepolicy\\n',\n\n 'service_contexts\\n',\n\n 'storage\\n',\n\n 'sys\\n',\n\n 'system\\n',\n\n 'ueventd.nougat.rc\\n',\n\n 'ueventd.rc\\n',\n\n 'vendor\\n',\n\n '.:\\n',\n\n 'total 1680\\n',\n\n '     1    0 dr-xr-xr-x  68 0    0          0 2022-11-19 15:28 acct\\n',\n\n '  3524    0 drwxrwxr-x   6 1000 1000     240 2022-11-19 15:28 boot\\n',\n\n '  4108    0 lrwxrwxrwx   1 0    0         50 2022-11-19 15:28 bugreports -> /data/user_de/0/com.android.shell/files/bugreports\\n',\n\n '  6103    0 drwxrwx---   6 1000 2001     120 2022-11-19 15:28 cache\\n',\n\n '  4110    0 lrwxrwxrwx   1 0    0         13 2022-11-19 15:28 charger -> /sbin/healthd\\n',\n\n '  4111    0 dr-x------   2 0    0         40 2022-11-19 15:28 config\\n',\n\n '  4112    0 lrwxrwxrwx   1 0    0         17 2022-11-19 15:28 d -> /sys/kernel/debug\\n',\n\n '     2    8 drwxrwx--x  38 1000 1000    4096 2022-11-19 15:28 data\\n',\n\n '  4114    4 -rw-r--r--   1 0    0        958 2022-11-19 15:28 default.prop\\n',\n\n '  4387    0 drwxr-xr-x  13 0    0       3840 2022-11-19 15:28 dev\\n',\n\n '  4115    0 lrwxrwxrwx   1 0    0         11 2022-11-19 15:28 etc -> /system/etc\\n',\n\n '  4116   76 -rw-r--r--   1 0    0      77090 2022-11-19 15:28 file_contexts.bin\\n',\n\n '  4117    4 -rw-r-----   1 0    0        564 2022-11-19 15:28 fstab.nougat\\n',\n\n '  4118    4 -rw-r-----   1 0    0        354 2022-11-19 15:28 fstab_sdcard.nougat\\n',\n\n '  4119 1304 -rwxr-x---   1 0    0    1334780 2022-11-19 15:28 init\\n',\n\n '  4120    4 -rwxr-x---   1 0    0        887 2022-11-19 15:28 init.environ.rc\\n',\n\n '  4121    4 -rwxr-x---   1 0    0       3690 2022-11-19 15:28 init.nougat.rc\\n',\n\n '  4122   28 -rwxr-x---   1 0    0      27803 2022-11-19 15:28 init.rc\\n',\n\n '  4123   12 -rwxr-x---   1 0    0       9283 2022-11-19 15:28 init.usb.configfs.rc\\n',\n\n '  4124    8 -rwxr-x---   1 0    0       5694 2022-11-19 15:28 init.usb.rc\\n',\n\n '  4125    4 -rwxr-x---   1 0    0        411 2022-11-19 15:28 init.zygote32.rc\\n',\n\n '  4443    0 lrwxrwxrwx   1 0    0         10 2022-11-19 15:28 lib -> system/lib\\n',\n\n '  4457    0 drwxr-xr-x  11 0    1000     240 2022-11-19 15:28 mnt\\n',\n\n '  4127    0 drwxr-xr-x   2 0    0         40 2022-11-19 15:28 oem\\n',\n\n\n\n\n\n# -----------------------------------------------------------------------------------------------------------------------------\n\n\n\ncmd = r\"\"\"adb shell getevent -l\"\"\"\n\nresults = execute_subprocess(cmd, exit_keys=\"ctrl+e\", end_of_printline=\"\")\n\n\n\n#output on screen\n\nadd device 1: /dev/input/event3\n\n  name:     \"fts\"\n\nadd device 2: /dev/input/event2\n\n  name:     \"STM VL53L1 proximity sensor\"\n\nadd device 3: /dev/input/event1\n\n  name:     \"qwerty\"\n\nadd device 4: /dev/input/event0\n\n  name:     \"gpio_keys\"\n\n/dev/input/event3: EV_KEY       BTN_TOUCH            DOWN                \n\n/dev/input/event3: EV_ABS       ABS_MT_TRACKING_ID   00001830            \n\n/dev/input/event3: EV_ABS       ABS_MT_POSITION_X    00000299            \n\n/dev/input/event3: EV_ABS       ABS_MT_POSITION_Y    000006f5            \n\n/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MAJOR   00000040            \n\n/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MINOR   00000030            \n\n/dev/input/event3: EV_ABS       ABS_MT_PRESSURE      0000000d            \n\n/dev/input/event3: EV_SYN       SYN_REPORT           00000000            \n\n/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MAJOR   00000080            \n\n/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MINOR   00000080            \n\n/dev/input/event3: EV_ABS       ABS_MT_PRESSURE      00000022            \n\n/dev/input/event3: EV_SYN       SYN_REPORT           00000000            \n\n/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MINOR   00000070            \n\n/dev/input/event3: EV_ABS       ABS_MT_PRESSURE      00000028            \n\n/dev/input/event3: EV_SYN       SYN_REPORT           00000000            \n\n/dev/input/event3: EV_ABS       ABS_MT_PRESSURE      0000002a      \n\n....\n\n\n\n\n\nresults\n\nOut[3]: \n\n['add device 1: /dev/input/event3\\n',\n\n '  name:     \"fts\"\\n',\n\n 'add device 2: /dev/input/event2\\n',\n\n '  name:     \"STM VL53L1 proximity sensor\"\\n',\n\n 'add device 3: /dev/input/event1\\n',\n\n '  name:     \"qwerty\"\\n',\n\n 'add device 4: /dev/input/event0\\n',\n\n '  name:     \"gpio_keys\"\\n',\n\n '/dev/input/event3: EV_KEY       BTN_TOUCH            DOWN                \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_TRACKING_ID   00001830            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_POSITION_X    00000299            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_POSITION_Y    000006f5            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MAJOR   00000040            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MINOR   00000030            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_PRESSURE      0000000d            \\n',\n\n '/dev/input/event3: EV_SYN       SYN_REPORT           00000000            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MAJOR   00000080            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MINOR   00000080            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_PRESSURE      00000022            \\n',\n\n '/dev/input/event3: EV_SYN       SYN_REPORT           00000000            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MINOR   00000070            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_PRESSURE      00000028            \\n',\n\n '/dev/input/event3: EV_SYN       SYN_REPORT           00000000            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_PRESSURE      0000002a            \\n',\n\n '/dev/input/event3: EV_SYN       SYN_REPORT           00000000            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_POSITION_X    0000029a            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_POSITION_Y    000006f4            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_TOUCH_MINOR   00000080            \\n',\n\n '/dev/input/event3: EV_ABS       ABS_MT_PRESSURE      0000002c            \\n',\n\n ....\n\n \n\n \n\n # -----------------------------------------------------------------------------------------------------------------------------\n\n# Update 2022-12-01: added timeout / new functions\n\ncmd = r\"ls -R -s -i -n -H\"\n\nresults = execute_subprocess(cmd, exit_keys=\"ctrl+e\", end_of_printline=\"\",timeout=2) # Useful if the process is frozen, will return the captured stdout\n\n\n\nfrom subprocess_print_and_capture import execute_subprocess, execute_subprocess_multiple_commands, execute_subprocess_multiple_commands_v2,execute_subprocess_multiple_commands_with_timeout_bin ,execute_subprocess_multiple_commands_with_timeout_str  \n\n\n\nadb_path = \"C:\\\\Users\\\\Gamer\\\\AppData\\\\Local\\\\Android\\\\Sdk\\\\platform-tools\\\\adb.exe\"\n\ndeviceserial = \"localhost:5745\"\n\ncmd = rf\"{adb_path} -s {deviceserial} shell\"\n\nsubcommands=[\"ls\", \"sleep 1\", \"ls -R -s -i -n -H\"]\n\nresults1 = execute_subprocess_multiple_commands_with_timeout_bin(cmd=cmd, subcommands=subcommands, exit_keys=\"ctrl+e\", end_of_printline=\"\",print_output=True,timeout=2) # returns a list containing bin (to avoid encoding problems)\n\nresults2 = execute_subprocess_multiple_commands_with_timeout_str(cmd=cmd, subcommands=subcommands, exit_keys=\"ctrl+e\", end_of_printline=\"\",print_output=True,timeout=2) # returns a list containing str\n\n \n\n  # -----------------------------------------------------------------------------------------------------------------------------\n\n\n\n \n\n# Update 2023-03-14:  Added some new stuff:\n\nexecute_subprocess_multiple_commands_with_timeout_bin2\n\n    Executes a subprocess and runs one or more commands in it, with the option to add a timeout and exit keys.\n\n\n\n    :param cmd: The command to be executed in the subprocess.\n\n    :type cmd: str\n\n\n\n    :param subcommands: Additional commands to run in the subprocess, as a list or tuple of strings or a single string. Defaults to None.\n\n    :type subcommands: Union[list, tuple, None, str]\n\n\n\n    :param exit_keys: If set, the process can be terminated by pressing the specified key combination (e.g. \"ctrl+alt+x\"). Defaults to None.\n\n    :type exit_keys: Union[str, None]\n\n\n\n    :param end_of_printline: The string to be printed at the end of each line of output. Defaults to \"\".\n\n    :type end_of_printline: str\n\n\n\n    :param print_output: Whether to print the output of the subprocess to the console. Defaults to True.\n\n    :type print_output: bool\n\n\n\n    :param timeout: The maximum amount of time to allow the subprocess to run before terminating it. Defaults to None.\n\n    :type timeout: Optional[float]\n\n\n\n    :param cwd: The working directory for the subprocess. Defaults to the current working directory.\n\n    :type cwd: str\n\n\n\n    :param decodestdout: The character encoding to use for decoding the output of the subprocess. Defaults to None.\n\n    :type decodestdout: Optional[str]\n\n\n\n    :param decodestdouterrors: The error handling mode to use for decoding the output of the subprocess. Defaults to \"ignore\".\n\n    :type decodestdouterrors: str\n\n\n\n    :param stderrfile: The file path to write standard error output to. Defaults to None.\n\n    :type stderrfile: Optional[str]\n\n\n\n    :param stdoutfile: The file path to write standard output to. Defaults to None.\n\n    :type stdoutfile: Optional[str]\n\n\n\n    :param create_no_window: Whether to create a new console window for the subprocess. Defaults to True.\n\n    :type create_no_window: bool\n\n\n\n    :param use_shlex: Whether to use the shlex module to split the command string into arguments. Defaults to False.\n\n    :type use_shlex: bool\n\n\n\n    :param pyinstaller_module_name: The name of the PyInstaller module to run in the subprocess. Defaults to None.\n\n    :type pyinstaller_module_name: Optional[str]\n\n\n\n    :param pyinstaller_entry: The name of the PyInstaller entry point to run in the subprocess. Defaults to None.\n\n    :type pyinstaller_entry: Optional[str]\n\n\n\n    :param argsforpyinstaller: Additional arguments to pass to the PyInstaller subprocess. Defaults to ().\n\n    :type argsforpyinstaller: Tuple\n\n\n\n    :param kwargs: Additional keyword arguments to pass to the subprocess.Popen() constructor.\n\n    :type kwargs: Any\n\n\n\n    :return: A list \n\n\n\nexecute_as_mainprocess\n\n    Starts a new process using the `start` command on Windows.\n\n\n\n    Args:\n\n        cmd (Union[str, List[str]]): The command to execute. Can be a string or a list of strings.\n\n        nameofexe (Optional[str]): The name of the executable file to look for after the process has started. Defaults to None.\n\n        returnpid (bool): Whether to return the PID of the new process or not. Defaults to True.\n\n        timeout_get_pid (int): The maximum amount of time (in seconds) to wait for the new process to start. Defaults to 5.\n\n        creationtimebreak (int): The maximum amount of time (in seconds) to wait for the new process to start after its creation time - if found, returns immediately. If not, the function returns the process after timeout_get_pid Defaults to 1.\n\n\n\n    Returns:\n\n        Union[subprocess.Popen, psutil.Process]: If `returnpid` is True, returns the `psutil.Process` object corresponding to the new process. Otherwise, returns the `subprocess.Popen` object that was used to start the new process.\n\n\n\n# Examples\n\nadb_path = \"C:\\\\Users\\\\Gamer\\\\AppData\\\\Local\\\\Android\\\\Sdk\\\\platform-tools\\\\adb.exe\"\n\ndeviceserial = \"localhost:62037\"\n\ncmd2 = f\"adb -s {deviceserial} shell su -c 'ls -la'\"\n\nfor q in range(2):\n\n    pap = execute_subprocess_multiple_commands_with_timeout_bin2(cmd=cmd2)\n\n    with open(\"c:\\\\asdfasdfasdfasdfasdfasdf.txt\", mode=\"a\", encoding=\"utf-8\") as f:\n\n        f.write(b\"\".join(pap).decode(\"utf-8\", \"ignore\"))\n\n\n\nfor q in range(2):\n\n    pap = execute_subprocess_multiple_commands_with_timeout_bin2(\n\n        cmd=cmd2,\n\n        decodestdout=\"utf-8\",\n\n        decodestdouterrors=\"ignore\",\n\n        stdoutfile=\"f:\\\\lologo.txt\",\n\n    )\n\n    print(pap)\n\n    with open(\"c:\\\\asdfasdfasdfasdfasdfasdf.txt\", mode=\"a\", encoding=\"utf-8\") as f:\n\n        f.write(\"\".join(pap))\n\n\n\nfor q in range(2):\n\n    pap = execute_subprocess_multiple_commands_with_timeout_bin2(\n\n        cmd='dir /bvabds /dsxds \"\"', stderrfile=\"f:\\\\testtestloglog.txt\"\n\n    )\n\n    with open(\"c:\\\\asdfasdfasdfasdfasdfasdf.txt\", mode=\"a\", encoding=\"utf-8\") as f:\n\n        f.write(b\"\".join(pap).decode(\"utf-8\", \"ignore\"))\n\n\n\nfor q in range(2):\n\n    pap = execute_subprocess_multiple_commands_with_timeout_bin2(\n\n        cmd='dir /b \"\"',\n\n        stderrfile=\"f:\\\\testtestloglog.txt\",\n\n        stdoutfile=\"f:\\\\lologo.txt\",\n\n    )\n\n    with open(\"c:\\\\asdfasdfasdfasdfasdfasdf.txt\", mode=\"a\", encoding=\"utf-8\") as f:\n\n        f.write(b\"\".join(pap).decode(\"utf-8\", \"ignore\"))\n\n\n\n\n\npap = execute_subprocess_multiple_commands_with_timeout_bin2(\n\n    cmd=\"notepad.exe\", subcommands=None, timeout=2\n\n)\n\n\n\nfor q in range(2):\n\n    pap = execute_subprocess_multiple_commands_with_timeout_bin2(\n\n        cmd=[\"ls\"],\n\n        stderrfile=\"f:\\\\testtestloglog.txt\",\n\n        stdoutfile=\"c:\\\\locccclogo.txt\",\n\n    )\n\n\n\nmainp = execute_as_mainprocess(\n\n    cmd=\"notepad.exe\",\n\n    nameofexe=\"notepad.exe\",\n\n    returnpid=True,\n\n    timeout_get_pid=5,\n\n    creationtimebreak=1,\n\n)\n\nprint(mainp)\n\n\n\npap = execute_subprocess_multiple_commands_with_timeout_bin2(\n\n    cmd='notepad.exe \"C:\\locccclogo.txt\"',\n\n    stdoutfile=\"c:\\\\locccclogo.txt2\",\n\n    stderrfile=\"f:\\\\testtestloglog2.txt\",\n\n    subcommands=None,\n\n    timeout=2,\n\n    use_shlex=True,\n\n)\n\n\n\nbab = execute_subprocess_multiple_commands_with_timeout_bin2(\n\n    cmd=\"notepad.exe\",\n\n    subcommands=None,\n\n    exit_keys=None,\n\n    end_of_printline=\"\",\n\n    print_output=True,\n\n    timeout=None,\n\n    cwd=os.getcwd(),\n\n    decodestdout=None,\n\n    decodestdouterrors=\"ignore\",\n\n    stdoutfile=\"c:\\\\locccclogo3.txt\",\n\n    stderrfile=\"f:\\\\testtestloglog3.txt\",\n\n    create_no_window=False,\n\n    use_shlex=False,\n\n    pyinstaller_module_name=\"tes\",\n\n    pyinstaller_entry=\"tete\",\n\n    argsforpyinstaller=(),\n\n)\n\n\n\n\n\nbab2 = execute_subprocess_multiple_commands_with_timeout_bin2_thread(\n\n    cmd=\"dir\",\n\n    subcommands=None,\n\n    exit_keys=None,\n\n    end_of_printline=\"\",\n\n    print_output=True,\n\n    timeout=None,\n\n    cwd=os.getcwd(),\n\n    decodestdout=None,\n\n    decodestdouterrors=\"ignore\",\n\n    stdoutfile=\"c:\\\\locccclogo3.txt\",\n\n    stderrfile=\"f:\\\\testtestloglog3.txt\",\n\n    CREATE_NO_WINDOW=False,\n\n    use_shlex=False,\n\n    pyinstaller_module_name=\"tes\",\n\n    pyinstaller_entry=\"tete\",\n\n    argsforpyinstaller=(),\n\n)\n\n\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hansalemaos/subprocess_print_and_capture",
    "keywords": "subprocess,simultaneously,print,capture",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "subprocess-print-and-capture",
    "package_url": "https://pypi.org/project/subprocess-print-and-capture/",
    "platform": null,
    "project_url": "https://pypi.org/project/subprocess-print-and-capture/",
    "project_urls": {
      "Homepage": "https://github.com/hansalemaos/subprocess_print_and_capture"
    },
    "release_url": "https://pypi.org/project/subprocess-print-and-capture/0.16/",
    "requires_dist": [
      "keyboard",
      "kthread",
      "kthread-sleep",
      "psutil",
      "tolerant-isinstance",
      "touchtouch"
    ],
    "requires_python": "",
    "summary": "Print and capture the output of a subprocess simultaneously",
    "version": "0.16",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17282868,
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "607e13547b51186fab656bdcf87e659502823868f8e0f40f71907ce722bef6b8",
          "md5": "515b85b2be68bd2a05af9599599760a7",
          "sha256": "3ba36544d350b1d3301a9e12d066869d70d91abc4a15a157eec61127b41d1e15"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "515b85b2be68bd2a05af9599599760a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5734,
        "upload_time": "2022-11-18T04:56:02",
        "upload_time_iso_8601": "2022-11-18T04:56:02.556045Z",
        "url": "https://files.pythonhosted.org/packages/60/7e/13547b51186fab656bdcf87e659502823868f8e0f40f71907ce722bef6b8/subprocess_print_and_capture-0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "504ad8d353e573e89e734e765ea8283e86f368b024896c44733d3d5153036975",
          "md5": "375ae8823329e88f90530de84c8a9188",
          "sha256": "cb1716d30f585931bc42ecb63b5a65216b8c4d17843f667460e0bbcc1f0fcf7d"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "375ae8823329e88f90530de84c8a9188",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4396,
        "upload_time": "2022-11-18T04:56:04",
        "upload_time_iso_8601": "2022-11-18T04:56:04.170417Z",
        "url": "https://files.pythonhosted.org/packages/50/4a/d8d353e573e89e734e765ea8283e86f368b024896c44733d3d5153036975/subprocess_print_and_capture-0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80efb18e4420b0aa2f9992a889402aa40cec3dc741af9a35b0f209d39853d5a3",
          "md5": "fb4c2c6c9cacf2fce34e8acb1a75d642",
          "sha256": "71fe7e6ba9630e08cd9ccd0b0149b461e6a2fce594111dea43cec0882a92f3d2"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb4c2c6c9cacf2fce34e8acb1a75d642",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5965,
        "upload_time": "2022-11-19T05:21:17",
        "upload_time_iso_8601": "2022-11-19T05:21:17.120563Z",
        "url": "https://files.pythonhosted.org/packages/80/ef/b18e4420b0aa2f9992a889402aa40cec3dc741af9a35b0f209d39853d5a3/subprocess_print_and_capture-0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ff3827876a07d341efcfc32c013e4e5300346aec7cd9981a129e2f493545327",
          "md5": "3c8d528cc7b7726e8694a4c6b0289413",
          "sha256": "a2e4a4f3d29c846c1e2f43619af05ba79125571de57647d2c75073338fcf1ec5"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "3c8d528cc7b7726e8694a4c6b0289413",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4642,
        "upload_time": "2022-11-19T05:21:18",
        "upload_time_iso_8601": "2022-11-19T05:21:18.305425Z",
        "url": "https://files.pythonhosted.org/packages/0f/f3/827876a07d341efcfc32c013e4e5300346aec7cd9981a129e2f493545327/subprocess_print_and_capture-0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7c86e917b8a3f0949ed246efe0825fd031f24c7b6c755f6d592f7e1af7ea96d",
          "md5": "4087bb820932b11ab1ba18968891495a",
          "sha256": "5f3cff3691a6f04f4beadf29b19e3516e9f921a4da3cb4ecbd5758cb56d35aef"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4087bb820932b11ab1ba18968891495a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8197,
        "upload_time": "2022-11-19T21:18:48",
        "upload_time_iso_8601": "2022-11-19T21:18:48.460489Z",
        "url": "https://files.pythonhosted.org/packages/a7/c8/6e917b8a3f0949ed246efe0825fd031f24c7b6c755f6d592f7e1af7ea96d/subprocess_print_and_capture-0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10228de2d9a3ec9952d207ad1fb34873de3484d3906409503e8a7afd0f7ad63f",
          "md5": "f6d655f1f83bfe70d58e3ab8d405ffbf",
          "sha256": "67168f2f6b923045364188bb0e21df3e768f9c0c9b03ec66a829a214e81a5e0a"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "f6d655f1f83bfe70d58e3ab8d405ffbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6631,
        "upload_time": "2022-11-19T21:18:50",
        "upload_time_iso_8601": "2022-11-19T21:18:50.189107Z",
        "url": "https://files.pythonhosted.org/packages/10/22/8de2d9a3ec9952d207ad1fb34873de3484d3906409503e8a7afd0f7ad63f/subprocess_print_and_capture-0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca7fd40bcf7e9e9a7380dfcaf039d76c0040a7f735d6e95ce911d31c974b225d",
          "md5": "f18934ccbe3f51032cf1ea347d5c334d",
          "sha256": "4cbfc2b24da4ff80544b6f95185f9a128c906754a045b76d4caacd3a35f9dee4"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f18934ccbe3f51032cf1ea347d5c334d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8380,
        "upload_time": "2022-11-20T00:45:43",
        "upload_time_iso_8601": "2022-11-20T00:45:43.341971Z",
        "url": "https://files.pythonhosted.org/packages/ca/7f/d40bcf7e9e9a7380dfcaf039d76c0040a7f735d6e95ce911d31c974b225d/subprocess_print_and_capture-0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f302f83d58ae45a29bd8b4b403cb04eb578de9d3ccdd8df85b44b73c4d9cf236",
          "md5": "6b2fdd035cc5cef10e120bc78c5e258d",
          "sha256": "6e54f0eca014760a57b6ef1ff320a190eeceead6004b23fb8c34cb02fea76050"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "6b2fdd035cc5cef10e120bc78c5e258d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6974,
        "upload_time": "2022-11-20T00:45:45",
        "upload_time_iso_8601": "2022-11-20T00:45:45.321894Z",
        "url": "https://files.pythonhosted.org/packages/f3/02/f83d58ae45a29bd8b4b403cb04eb578de9d3ccdd8df85b44b73c4d9cf236/subprocess_print_and_capture-0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69aba0eee1bc298f14170659240c63427661664cea86d6cc3592270d5e82c3c6",
          "md5": "86317647500acf94d1742da8f8844024",
          "sha256": "93764ff549d9f874e2b38613a974e2a882985dcf3a2d57310f5eeec5335ad2e5"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86317647500acf94d1742da8f8844024",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8379,
        "upload_time": "2022-11-20T01:03:08",
        "upload_time_iso_8601": "2022-11-20T01:03:08.133354Z",
        "url": "https://files.pythonhosted.org/packages/69/ab/a0eee1bc298f14170659240c63427661664cea86d6cc3592270d5e82c3c6/subprocess_print_and_capture-0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75101b9ecb9830f7bc4cf14423fe3e23142fda72d72004f913997f874435689b",
          "md5": "eb52cc66029d0bc447c0a212d8280120",
          "sha256": "f0bef434f5c6e9f3761b8f4cb0ce9db1f1e65e3b2e776357af360bdb0755dff6"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "eb52cc66029d0bc447c0a212d8280120",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6956,
        "upload_time": "2022-11-20T01:03:09",
        "upload_time_iso_8601": "2022-11-20T01:03:09.752419Z",
        "url": "https://files.pythonhosted.org/packages/75/10/1b9ecb9830f7bc4cf14423fe3e23142fda72d72004f913997f874435689b/subprocess_print_and_capture-0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ac86bd4bd8423d82c6b8b6257a4418d095cf077cf7efc27a6c9ba7e75bfd73c",
          "md5": "6d52f2ca1493a1baa0e92a51d9b11b0a",
          "sha256": "67e3b34832a2da2eb5cc4541831f7a9aa29f02ac9ad68784656d79aad8ae3b7c"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d52f2ca1493a1baa0e92a51d9b11b0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9436,
        "upload_time": "2022-12-01T14:35:13",
        "upload_time_iso_8601": "2022-12-01T14:35:13.952048Z",
        "url": "https://files.pythonhosted.org/packages/0a/c8/6bd4bd8423d82c6b8b6257a4418d095cf077cf7efc27a6c9ba7e75bfd73c/subprocess_print_and_capture-0.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6054836fa98d1d55825117df474ec4a65bf1faa6fbbe50abd66a8b608f9f8810",
          "md5": "663de374e5f61922480400140cbfa60a",
          "sha256": "80ded102e82a1a71f3a9bd6e2b2b8469c0a54c368e15e18c9fcb1ae7107dc682"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "663de374e5f61922480400140cbfa60a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9588,
        "upload_time": "2022-12-01T14:35:15",
        "upload_time_iso_8601": "2022-12-01T14:35:15.572024Z",
        "url": "https://files.pythonhosted.org/packages/60/54/836fa98d1d55825117df474ec4a65bf1faa6fbbe50abd66a8b608f9f8810/subprocess_print_and_capture-0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82179340cef6cf7a3e6ef6a2a7128f51b61340154076a7214cb6b5b8a0324265",
          "md5": "588ca27853aae2607a6e7945956b33d6",
          "sha256": "8556c9cfdceffb50ca195e6a6e6120b4f8621e2d612e0bbb45d72b477c405dd8"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "588ca27853aae2607a6e7945956b33d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15676,
        "upload_time": "2023-03-14T06:17:20",
        "upload_time_iso_8601": "2023-03-14T06:17:20.895700Z",
        "url": "https://files.pythonhosted.org/packages/82/17/9340cef6cf7a3e6ef6a2a7128f51b61340154076a7214cb6b5b8a0324265/subprocess_print_and_capture-0.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "723f71161315a53cd49c708bd69775bc2fc0227dfaecce719086e0d43d62696c",
          "md5": "0c185ec75f5a370bca5af90e4ff32b5f",
          "sha256": "1e00f4e63ae77fb0b2def94a54bac7ea72cecbcc73d079bf6aa8cfd08574f40c"
        },
        "downloads": -1,
        "filename": "subprocess_print_and_capture-0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "0c185ec75f5a370bca5af90e4ff32b5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14927,
        "upload_time": "2023-03-14T06:17:22",
        "upload_time_iso_8601": "2023-03-14T06:17:22.407053Z",
        "url": "https://files.pythonhosted.org/packages/72/3f/71161315a53cd49c708bd69775bc2fc0227dfaecce719086e0d43d62696c/subprocess_print_and_capture-0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82179340cef6cf7a3e6ef6a2a7128f51b61340154076a7214cb6b5b8a0324265",
        "md5": "588ca27853aae2607a6e7945956b33d6",
        "sha256": "8556c9cfdceffb50ca195e6a6e6120b4f8621e2d612e0bbb45d72b477c405dd8"
      },
      "downloads": -1,
      "filename": "subprocess_print_and_capture-0.16-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "588ca27853aae2607a6e7945956b33d6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15676,
      "upload_time": "2023-03-14T06:17:20",
      "upload_time_iso_8601": "2023-03-14T06:17:20.895700Z",
      "url": "https://files.pythonhosted.org/packages/82/17/9340cef6cf7a3e6ef6a2a7128f51b61340154076a7214cb6b5b8a0324265/subprocess_print_and_capture-0.16-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "723f71161315a53cd49c708bd69775bc2fc0227dfaecce719086e0d43d62696c",
        "md5": "0c185ec75f5a370bca5af90e4ff32b5f",
        "sha256": "1e00f4e63ae77fb0b2def94a54bac7ea72cecbcc73d079bf6aa8cfd08574f40c"
      },
      "downloads": -1,
      "filename": "subprocess_print_and_capture-0.16.tar.gz",
      "has_sig": false,
      "md5_digest": "0c185ec75f5a370bca5af90e4ff32b5f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14927,
      "upload_time": "2023-03-14T06:17:22",
      "upload_time_iso_8601": "2023-03-14T06:17:22.407053Z",
      "url": "https://files.pythonhosted.org/packages/72/3f/71161315a53cd49c708bd69775bc2fc0227dfaecce719086e0d43d62696c/subprocess_print_and_capture-0.16.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}