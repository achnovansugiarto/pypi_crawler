{
  "info": {
    "author": "Hauteclere",
    "author_email": "hauteclere.code@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "# Phractal\n\nPhractal is a tool for creating documents programmatically with Python, powered by [`Pydantic`](https://docs.pydantic.dev/) and [`Jinja2`](https://jinja.palletsprojects.com/en/3.1.x/). \n\nPhractal solves the complexity that can arise when templating complex documents in Python by using *nesting*. Hence the name; a Phractal document is a fractal arrangement of simple components nested inside one another. Phractal is inspired by `React.js`'s component-driven development style, with the additional utility of Pydantic-enforced type-checking before the page is rendered, making debugging a breeze!\n\nIn addition to building your own pages from the ground up, any package that produces HTML output can be integrated into your Phractal documents. For example, Plotly graphs can be inserted into your components with just a few lines of code.\n\nPhractal was originally designed to automatically generate bespoke templated statistical reports in the style of [`pandas-profiling`](https://pypi.org/project/pandas-profiling/). This is just the tip of the iceberg, though: anywhere you need to generate a document programmatically, Phractal is useful. Try creating invoices with it!\n\n- [Phractal](#phractal)\n  - [Key Features](#key-features)\n    - [`phractal.Phraction`](#phractalphraction)\n      - [Args:](#args)\n      - [Methods:](#methods)\n      - [Example - phraction useage:](#example---phraction-useage)\n      - [Example - `with_boilerplate` useage:](#example---with_boilerplate-useage)\n    - [`phractal.ValidatedCachedProperty`](#phractalvalidatedcachedproperty)\n      - [Example 1:](#example-1)\n      - [Example 2 (nesting):](#example-2-nesting)\n  - [Incorporating Other Packages](#incorporating-other-packages)\n    - [Example - Plotly:](#example---plotly)\n\n\n---\n\n## Key Features\n\nThere are two main tools that Practal makes available for document building:\n\n[`phractal.Phraction`](#phractalphraction)\n\n[`phractal.ValidatedCachedProperty`](#phractalvalidatedcachedproperty)\n\nIn the simple examples below, Phractal is barely more efficient than basic Jinja templating. The more complex your documents become, the more Phractal can help.\n\n\n### `phractal.Phraction`\nThe base unit of construction of a Phractal document - analagous to `React.Component`.\n- Renders a supplied template as an HTML string, automatically inserting its field values into the template where they are referenced.\n- Performs Pydantic-based field validation/type-checking. \n\n#### Args:\n- `template`: A Jinja2-formatted string defining the HTML structure of the Phraction.\n\n#### Methods:\n- [`save(path: str)`](#example---phraction-useage): Save the rendered document to the specified filepath.\n- [`with_boilerplate(bootstrap: bool=False, title: str=\"Phractal Document\")`](): Returns a Phraction which wraps the calling Phraction in HTML boilerplate.\n\n#### Example - phraction useage:\n\n```python\nfrom phractal import Phraction\n\n# A Phraction to render a simple \"hello\" message\nclass HelloPara(Phraction):\n    template = \"<p>Hello {{ name }}</p>\"\n    name: str \n\n# Creating an instance of the Phraction\nhello_para = HelloPara(name=\"Murderbot\")\n\n# Practions can be rendered to HTML strings using their __str__ method.\nprint(hello_para)\n\n# Alternatively we can save to file.\n# Adding HTML boilerplate here is a good idea.\n# hello_para.with_boilerplate().save(\"./hello_para.html\")\n```\n\nOutput:  \n\n```\n<p>Hello Murderbot</p>\n```\n\n#### Example - `with_boilerplate` useage:\n```python\nfrom phractal import Phraction\n\nclass MyDoc(Phraction):\n    template=\"<p>{{ msg }}</p>\"\n    msg: str\n\nmy_doc = MyDoc(msg=\"Hi!\")\n\n# Note that the returned object is an instance subclassed from the \"Phraction\" class.\nprint(isinstance(my_doc.with_boilerplate(), Phraction))\nprint(my_doc.with_boilerplate())\n\n# We can save with boilerplate like so.\nmy_doc.with_boilerplate().save(\"./my_doc.html\")\n```\nOutput:\n```\nTrue\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Phractal Document</title>\n  </head>\n  <body>\n\t<p>Hi!</p>\n  </body>\n</html>\n\n```\n---\n\n### `phractal.ValidatedCachedProperty`\n\nA decorator that turns a method on a class into a property which is cached and validated at time of first access, and inserted into the template where its name is referenced. **Note that this can be used to nest Phractions!**\n    \n- Validation is based on return type hints (type hints are compulsory).\n- Supports Pydantic style parameterized generics. (Ex: `list[int]` matches [1, 2, 3] but not [\"a\", \"b\",\"c\"])\n- Arbitrary type hinting is allowed. Ex: `def foo(self) -> list[MyCustomClass]:`\n- Value is calculated and cached at first access.\n- `phractal.ValidatedCachedProperty` is subclassed from the inbuilt `functools.cached_property`.\n- To avoid caching and validation, use the built-in `@property` decorator.\n- To skip validation but still cache the result, we recommend using the `typing.Any` hint. Ex: `def foo(self) -> Any:`\n\n#### Example 1:\n\n```python\nfrom phractal import Phraction, ValidatedCachedProperty\n\n# A Phraction to display calculated total prices with tax\nclass TaxBox(Phraction):\n    template = '''\n        <p>\n            Gross: {{ \"$%.2f\"|format(gross_amount) }}\n            Total (incl. tax): {{ \"$%.2f\"|format(total_amount) }}\n        </p>\n    '''\n    gross_amount: float\n\n    @ValidatedCachedProperty\n    def total_amount(self):\n        return self.gross_amount*1.1\n\n# Creating an instance of the Phraction\nmy_taxbox = TaxBox(gross_amount=1000)\n\n# Rendering to the console as an HTML string using __str__\nprint(my_taxbox)\n```\n\nOutput: \n\n```\n<p>\n    Gross: $1000.00\n    Total (incl. tax): $1100.00\n</p>\n```\n\n#### Example 2 (nesting):\n\n```python\nfrom phractal import Phraction, ValidatedCachedProperty\n\n# Phraction to render a simple \"hello\" message as an H1 heading\nclass HelloHeading(Phraction):\n    template = \"<h1>Hello {{ name }}</h1>\"\n    name: str \n\n# A Phraction to render a list item\nclass ClientItem(Phraction):\n    template = \"<li>{{ client_name }}</li>\"\n    client_name: str\n\n# A Phraction to contain the heading and the list items as nested components\nclass HelloDiv(Phraction):\n    template = '''\n        <div>\n            {{ hello_para }}\n            Here's a list of clients:\n            <ol>\n                {% for client_item in clients %}\n                    {{ client_item }}\n                {% endfor %}\n            </ol>\n        </div>\n    '''\n\n    name: str\n    client_names: list[str]\n    \n    # Validated and cached (calculated at access-time)\n    @ValidatedCachedProperty\n    def hello_para(self) -> HelloPara: \n        return HelloPara(name=self.name)\n    \n    # Neither validated nor cached.\n    @property\n    def clients(self):\n        return [\n            ClientItem(\n                client_name=client_name\n            ) for client_name in self.client_names\n        ]\n\n# Creating an instance of the top-level/parent Phraction\n#   (No need to create instances for the nested Phractions;\n#   the parent Phraction does this for us when it is rendered)\nmy_div = HelloDiv(\n    name=\"Murderbot\",\n    client_names=[\n        \"Dr. Mensah\",\n        \"Dr. Arada\",\n        \"Dr. Ratthi\",\n        \"Dr. Bharadwaj\"\n    ]\n)\n\n# Rendering to the console with __str__\nprint(my_div)\n```\n\nOutput:\n\n```\n<div>\n    <h1>Hello Murderbot</h1>\n    <p>Here's a list of clients:</p>\n    <ol>\n        <li>Dr. Mensah</li>\n        <li>Dr. Arada</li>\n        <li>Dr. Ratthi</li>\n        <li>Dr. Bharadwaj</li>\n    </ol>\n</div>\n```\n\n---\n\n## Incorporating Other Packages\n\nTo incorporate output from other packages that generate document assets, simply incorporate these outputs into your `Phraction`s using `@Property` or `@ValidatedCachedProperty`. \n\n### Example - Plotly:\n\nHere we incorporate a `Plotly` Gauge Plot.\n\n```python\nfrom phractal import Phraction, ValidatedCachedProperty\nfrom pydantic import Field\nimport plotly.graph_objects as go\nimport plotly.offline\n\n# A Phraction that renders a gauge plot\nclass GaugePlot(Phraction):\n    template = \"\"\"\n        <div style=\"width: 700px; height: 400px;\">\n            {{ gauge }}\n        </div>\n    \"\"\"\n        \n    label: str\n    numerator: int = Field(ge=0)\n\n    # This works because plotly.offline.plot returns the plot as an HTML string \n    #   when the output_type='div' kwarg is supplied.\n    @ValidatedCachedProperty\n    def gauge(self) -> str:\n        fig = go.Figure(go.Indicator(\n            mode = \"gauge+number\",\n            value = self.numerator/100,\n            number = { \"valueformat\": \"%\" },\n            domain = {'x': [0, 1], 'y': [0, 1]},\n            title = {'text': self.label},\n            gauge = {\n                'axis': {'range': [None, 1]},\n            },\n        ))\n        return plotly.offline.plot(\n            fig, \n            include_plotlyjs=False, \n            output_type='div'\n        )\n\n# A parent Phraction to combine three GaugePlot Phractions under a heading\nclass AcademicPerformance(Phraction):\n    # Plotly wants us to include plotly-latest.min.js to render the plot\n    #   The best place for both of this is here in the top-level Phraction.\n    template = \"\"\"\n    <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script> \n    <h1>Academic Performance</h1>\n    {% for plot in plots %}\n        {{ plot }}\n    {% endfor %}  \n    \"\"\"\n    \n    grades: list[tuple]\n\n    # Nesting those gauge plots\n    @ValidatedCachedProperty\n    def plots(self) -> list:\n        return [\n            GaugePlot(\n                label=label, \n                numerator=numerator\n            ) for (label, numerator) in self.grades\n        ]\n\n# Data to feed to the instance\ngrades = [\n    (\"English\", 82), \n    (\"Art\", 64), \n    (\"History\", 79)\n]\n\n# Creating the instance\nacademic_performance = AcademicPerformance(grades=grades)\n\n# The output here is a bit longer\n# Let's save it to file instead of printing to console\nacademic_performance.with_boilerplate(bootstrap=True).save(\"./test.html\")\n```\n\nOutput:\n\n![A series of gauge graphs rendered in an HTML Document](https://raw.github.com/hauteclere/phractal/main/readme_img/example_plotly.png)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Hauteclere/phractal",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Phractal",
    "package_url": "https://pypi.org/project/Phractal/",
    "platform": null,
    "project_url": "https://pypi.org/project/Phractal/",
    "project_urls": {
      "Homepage": "https://github.com/Hauteclere/phractal"
    },
    "release_url": "https://pypi.org/project/Phractal/1.0.1/",
    "requires_dist": [
      "Jinja2 (>=3.1.2)",
      "MarkupSafe (>=2.1.2)",
      "pydantic (>=1.10.6)",
      "typing-extensions (>=4.5.0)",
      "twine (>=4.0.2) ; extra == 'dev'"
    ],
    "requires_python": ">=3.10",
    "summary": "A tool for creating HTML documents programmatically with Python",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17350436,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c2378db1f191bcc45ec66e2f562167b279c87e5573136f2ec79037217257c8d",
          "md5": "6455b355fa776b7974ec1e5cbf43d3a6",
          "sha256": "00633ddd2d217c8af3afc36be7e79151383ef206d7fc5a3bf338a11af09f51f7"
        },
        "downloads": -1,
        "filename": "Phractal-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6455b355fa776b7974ec1e5cbf43d3a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 10118,
        "upload_time": "2023-03-15T08:17:23",
        "upload_time_iso_8601": "2023-03-15T08:17:23.731864Z",
        "url": "https://files.pythonhosted.org/packages/3c/23/78db1f191bcc45ec66e2f562167b279c87e5573136f2ec79037217257c8d/Phractal-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e2dd43371596f116663f73419feaecb9e17ea07317032e1532f1b539b4866b0",
          "md5": "3ccad46bb7a63ff49e2214066281c50b",
          "sha256": "41a192f4d0503baf85ab86f444b6335a7477d3f94b22c89ef40513276f387950"
        },
        "downloads": -1,
        "filename": "Phractal-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3ccad46bb7a63ff49e2214066281c50b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 8823,
        "upload_time": "2023-03-15T08:17:25",
        "upload_time_iso_8601": "2023-03-15T08:17:25.172516Z",
        "url": "https://files.pythonhosted.org/packages/9e/2d/d43371596f116663f73419feaecb9e17ea07317032e1532f1b539b4866b0/Phractal-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf275136afea6bd85f045dd06d66f85246cc4c7ef40a48d87818677b0f103b12",
          "md5": "d1f70f03bcb5a584253351d9bc5f5e97",
          "sha256": "86a0f4548609dd1f80bca0f8260b5c8e85f287d06b63f5500e896feac85c133d"
        },
        "downloads": -1,
        "filename": "Phractal-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1f70f03bcb5a584253351d9bc5f5e97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 11926,
        "upload_time": "2023-03-16T01:40:19",
        "upload_time_iso_8601": "2023-03-16T01:40:19.439961Z",
        "url": "https://files.pythonhosted.org/packages/bf/27/5136afea6bd85f045dd06d66f85246cc4c7ef40a48d87818677b0f103b12/Phractal-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab9d28f3526d690ea42f76217083adb09645ed0475645c40af2c44090e2d6981",
          "md5": "6efc620ce6d202c887d305322ba62536",
          "sha256": "cf9f0386f6924b6fd27e1ef1df5843e511175b16e1c4f5709ff3d17da0bb4ed3"
        },
        "downloads": -1,
        "filename": "Phractal-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6efc620ce6d202c887d305322ba62536",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 9698,
        "upload_time": "2023-03-16T01:40:21",
        "upload_time_iso_8601": "2023-03-16T01:40:21.726718Z",
        "url": "https://files.pythonhosted.org/packages/ab/9d/28f3526d690ea42f76217083adb09645ed0475645c40af2c44090e2d6981/Phractal-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57ecfdb3fcd09b1e1afd2e769a67fecf4d3fe1c475f4ae96d3e5daba29b67e14",
          "md5": "5f5801dedb51512f899c52e66f0ef60b",
          "sha256": "bba689c37bcd2523acea3bf1cc2e4f597973fc3c00549422788c3c23e63abbd3"
        },
        "downloads": -1,
        "filename": "Phractal-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f5801dedb51512f899c52e66f0ef60b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12666,
        "upload_time": "2023-03-18T14:25:03",
        "upload_time_iso_8601": "2023-03-18T14:25:03.742278Z",
        "url": "https://files.pythonhosted.org/packages/57/ec/fdb3fcd09b1e1afd2e769a67fecf4d3fe1c475f4ae96d3e5daba29b67e14/Phractal-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9d93fc19c8187da18bcbb013c251492c6d12cb3eaea84aeeb42d8c420a227a0",
          "md5": "2eab9443d7c8426613f53b79a0a71ba8",
          "sha256": "2c78499befb8ded68bd0b9064930e0e6a115c6b4d52927f5663d9cac350f0277"
        },
        "downloads": -1,
        "filename": "Phractal-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2eab9443d7c8426613f53b79a0a71ba8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 10235,
        "upload_time": "2023-03-18T14:25:06",
        "upload_time_iso_8601": "2023-03-18T14:25:06.955140Z",
        "url": "https://files.pythonhosted.org/packages/e9/d9/3fc19c8187da18bcbb013c251492c6d12cb3eaea84aeeb42d8c420a227a0/Phractal-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3975c0c9d67f9bb8ffd8d01eb13e517db09f7074371e16f77cff6cf4eec2de2",
          "md5": "48b15b78600eb27a12e8f941dbabae1e",
          "sha256": "e9cce5331c155bdfb4921c573f191a08c4fe0a83aede62d3698e6099a78baaaf"
        },
        "downloads": -1,
        "filename": "Phractal-0.0.3a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48b15b78600eb27a12e8f941dbabae1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12680,
        "upload_time": "2023-03-18T14:39:08",
        "upload_time_iso_8601": "2023-03-18T14:39:08.267899Z",
        "url": "https://files.pythonhosted.org/packages/b3/97/5c0c9d67f9bb8ffd8d01eb13e517db09f7074371e16f77cff6cf4eec2de2/Phractal-0.0.3a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e622c12e9e0c2f0dd758dcd8e68fa30cf2aec0b5b32cc390196f33f0adb1a8b",
          "md5": "5ac3270816577c3b75025592d1113cd5",
          "sha256": "bc8dcf9825484bc1e2dac2e4d9a81a5718e407083e41764a380b95f574a7e660"
        },
        "downloads": -1,
        "filename": "Phractal-0.0.3a0.tar.gz",
        "has_sig": false,
        "md5_digest": "5ac3270816577c3b75025592d1113cd5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 10239,
        "upload_time": "2023-03-18T14:39:10",
        "upload_time_iso_8601": "2023-03-18T14:39:10.987526Z",
        "url": "https://files.pythonhosted.org/packages/8e/62/2c12e9e0c2f0dd758dcd8e68fa30cf2aec0b5b32cc390196f33f0adb1a8b/Phractal-0.0.3a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c39e70824e1c66e2f44ed25c5603243e47a1ccd2ce6e9c210931c7cc385df0c3",
          "md5": "d88da564201abde4f07b057f32367f4c",
          "sha256": "2904ac72be4c7442f72818eb13c4c09d82076780df62bbe3d9aefee135931578"
        },
        "downloads": -1,
        "filename": "Phractal-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d88da564201abde4f07b057f32367f4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12655,
        "upload_time": "2023-03-18T14:53:14",
        "upload_time_iso_8601": "2023-03-18T14:53:14.304266Z",
        "url": "https://files.pythonhosted.org/packages/c3/9e/70824e1c66e2f44ed25c5603243e47a1ccd2ce6e9c210931c7cc385df0c3/Phractal-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d97b8f3ccf7d65d9dc73137f137f1c08ba39fa816bad679dc1cd9548aee5432a",
          "md5": "5aabca84be1921ffee2430fd2bf5b182",
          "sha256": "3bd0c6e9610f98cd7584fb54b6f90d3575b56f6388b1740f3efe22bd5a658208"
        },
        "downloads": -1,
        "filename": "Phractal-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5aabca84be1921ffee2430fd2bf5b182",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 10235,
        "upload_time": "2023-03-18T14:53:19",
        "upload_time_iso_8601": "2023-03-18T14:53:19.251190Z",
        "url": "https://files.pythonhosted.org/packages/d9/7b/8f3ccf7d65d9dc73137f137f1c08ba39fa816bad679dc1cd9548aee5432a/Phractal-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3fb5bab8ef5efecdc74757776c2127864300aaa6e6260de245718c55fda89a6",
          "md5": "27c8743af12008077ad4afa2988a1543",
          "sha256": "a21085d6b75fd5e455fd10b9d6b0fd69f5d9de6d60f9fdc3ef3a784d474f29f8"
        },
        "downloads": -1,
        "filename": "Phractal-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27c8743af12008077ad4afa2988a1543",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 12612,
        "upload_time": "2023-03-19T02:14:48",
        "upload_time_iso_8601": "2023-03-19T02:14:48.243101Z",
        "url": "https://files.pythonhosted.org/packages/f3/fb/5bab8ef5efecdc74757776c2127864300aaa6e6260de245718c55fda89a6/Phractal-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4ec0895ecf1b35fa8fb205c647d3b8414ed3dbc027892bd33c278ba9d689990",
          "md5": "ad847a3588d5de7d734f38252fa77c30",
          "sha256": "809bb3a02461af01d86849428d385c5a42d5b77b7c076a184df9659f4c55081c"
        },
        "downloads": -1,
        "filename": "Phractal-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ad847a3588d5de7d734f38252fa77c30",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 10224,
        "upload_time": "2023-03-19T02:14:53",
        "upload_time_iso_8601": "2023-03-19T02:14:53.827296Z",
        "url": "https://files.pythonhosted.org/packages/c4/ec/0895ecf1b35fa8fb205c647d3b8414ed3dbc027892bd33c278ba9d689990/Phractal-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3fb5bab8ef5efecdc74757776c2127864300aaa6e6260de245718c55fda89a6",
        "md5": "27c8743af12008077ad4afa2988a1543",
        "sha256": "a21085d6b75fd5e455fd10b9d6b0fd69f5d9de6d60f9fdc3ef3a784d474f29f8"
      },
      "downloads": -1,
      "filename": "Phractal-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "27c8743af12008077ad4afa2988a1543",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 12612,
      "upload_time": "2023-03-19T02:14:48",
      "upload_time_iso_8601": "2023-03-19T02:14:48.243101Z",
      "url": "https://files.pythonhosted.org/packages/f3/fb/5bab8ef5efecdc74757776c2127864300aaa6e6260de245718c55fda89a6/Phractal-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4ec0895ecf1b35fa8fb205c647d3b8414ed3dbc027892bd33c278ba9d689990",
        "md5": "ad847a3588d5de7d734f38252fa77c30",
        "sha256": "809bb3a02461af01d86849428d385c5a42d5b77b7c076a184df9659f4c55081c"
      },
      "downloads": -1,
      "filename": "Phractal-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ad847a3588d5de7d734f38252fa77c30",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 10224,
      "upload_time": "2023-03-19T02:14:53",
      "upload_time_iso_8601": "2023-03-19T02:14:53.827296Z",
      "url": "https://files.pythonhosted.org/packages/c4/ec/0895ecf1b35fa8fb205c647d3b8414ed3dbc027892bd33c278ba9d689990/Phractal-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}