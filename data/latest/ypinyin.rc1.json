{
  "info": {
    "author": "Eric Lo",
    "author_email": "liuguangyuan0532@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "ypinyin\n==========\n\n.. image:: https://img.shields.io/travis/liuguangyuan/ypinyin.svg\n    :target: https://travis-ci.org/liuguangyuan/ypinyin\n\n.. image:: https://img.shields.io/pypi/v/ypinyin.svg\n    :target: https://pypi.python.org/pypi/ypinyin/\n\n.. image:: https://img.shields.io/pypi/dm/ypinyin.svg\n    :target: https://pypi.python.org/pypi/ypinyin/\n\ntranslate chinese hanzi to pinyin by python, inspired by flyerhzm’s\n`chinese\\_pinyin`_ gem\n\nInstall\n----------\n\n::\n\n    pip install ypinyin\n\n\nUsage\n-----\n\n::\n\n    >>> from ypinyin import Pinyin\n    >>> p = Pinyin()\n    >>> # default splitter is `-`\n    >>> p.get_pinyin(u\"上海\")\n    'shang-hai'\n    >>> # show tone marks\n    >>> p.get_pinyin(u\"上海\", show_tone_marks=True)\n    'shàng-hǎi'\n    >>> # remove splitter\n    >>> p.get_pinyin(u\"上海\", '')\n    'shanghai'\n    >>> # set splitter as whitespace\n    >>> p.get_pinyin(u\"上海\", ' ')\n    'shang hai'\n    >>> p.get_initial(u\"上\")\n    'S'\n    >>> p.get_initials(u\"上海\")\n    'S-H'\n    >>> p.get_initials(u\"上海\", u'')\n    'SH'\n    >>> p.get_initials(u\"上海\", u' ')\n    'S H'\n    \n    如果方法中传入变量，那么直接加前缀是不可以了。而是要将变量转为utf-8编码：\n    >>> wordvalue = '中国'\n    >>> wordvalue= unicode(wordvalue,'utf-8')\n    >>> s = p.get_initials(wordvalue, u'').lower()\n    'zg'\n    \n\n请输入utf8编码汉字\n\n\n\n.. _chinese\\_pinyin: https://github.com/flyerhzm/chinese_pinyin\n\n\nChangelog\n=========\n\n\n0.5.5 - Feb. 28, 2016\n----------------------\n- add a new staticmethod which can convert pinyin to upper, lower or capitalize.\n  https://github.com/liuguangyuan/ypinyin/pull/28\n\n- Removed extraneous \"!\" being appended to non 'a' vowel replacements when show_tone_marks=True; also added simple unitest.main() for non-nose users\n  https://github.com/liuguangyuan/ypinyin/pull/30\n\n\n0.5.4 - Dec. 14, 2015\n----------------------\n\n- replace open() calls with io.open() for Python 3 compatibility,\n  fix `UnicodeDecodeError`\n- change \\u730E 猎 to LIE4\n- improve readme\n\n\n0.5.3 - Dec. 25, 2014\n----------------------\n\n- adjust default pinyin for character '什' and '么', 什么 => 'shén-me'\n\n\n0.5.2 - Jul. 6, 2014\n----------------------\n\n- 修复一些常用字的拼音标注\n\n0.4.9 - Oct. 25, 2013\n----------------------\n\n- change README and get_initials; add get_initial\n  [tangsty]\n\n\n0.4.8 - Jun. 16, 2013\n----------------------\n\n- change README and get_initials; add get_initial\n  [tangsty]\n\n- add download status image to README.rst\n  [liuguangyuan]\n\n- add travis status image to README.rst\n  [liuguangyuan]\n\n- add .travis.yml\n  [liuguangyuan]\n\n- 添加测试\n  [liuguangyuan]\n\n- 解决翻译中英文混合句子问题\n  [liuguangyuan]\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/liuguangyuan0532/ypinyin",
    "keywords": "pinyin",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ypinyin",
    "package_url": "https://pypi.org/project/ypinyin/",
    "platform": "",
    "project_url": "https://pypi.org/project/ypinyin/",
    "project_urls": {
      "Homepage": "https://github.com/liuguangyuan0532/ypinyin"
    },
    "release_url": "https://pypi.org/project/ypinyin/0.5.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "translate chinese hanzi to pinyin by python",
    "version": "0.5.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4127654,
  "releases": {
    "0.5.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f63a6250aa225bb7f204bdf59e4bcf8c7c719857b8270191546394af8ea21ca5",
          "md5": "7e7c6c682ce556963e6fe2a2afcddd1b",
          "sha256": "82f12bf9cefc7c74a6f271407858a4cd5ada24a260835e3746e0235ab5565cb6"
        },
        "downloads": -1,
        "filename": "ypinyin-0.5.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7e7c6c682ce556963e6fe2a2afcddd1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 129197,
        "upload_time": "2018-08-02T08:07:53",
        "upload_time_iso_8601": "2018-08-02T08:07:53.098632Z",
        "url": "https://files.pythonhosted.org/packages/f6/3a/6250aa225bb7f204bdf59e4bcf8c7c719857b8270191546394af8ea21ca5/ypinyin-0.5.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f63a6250aa225bb7f204bdf59e4bcf8c7c719857b8270191546394af8ea21ca5",
        "md5": "7e7c6c682ce556963e6fe2a2afcddd1b",
        "sha256": "82f12bf9cefc7c74a6f271407858a4cd5ada24a260835e3746e0235ab5565cb6"
      },
      "downloads": -1,
      "filename": "ypinyin-0.5.6.tar.gz",
      "has_sig": false,
      "md5_digest": "7e7c6c682ce556963e6fe2a2afcddd1b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 129197,
      "upload_time": "2018-08-02T08:07:53",
      "upload_time_iso_8601": "2018-08-02T08:07:53.098632Z",
      "url": "https://files.pythonhosted.org/packages/f6/3a/6250aa225bb7f204bdf59e4bcf8c7c719857b8270191546394af8ea21ca5/ypinyin-0.5.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}