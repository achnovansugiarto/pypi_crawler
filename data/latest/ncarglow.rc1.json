{
  "info": {
    "author": "Michael Hirsch, Ph.D.",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Fortran",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Atmospheric Science"
    ],
    "description": "[![DOI](https://zenodo.org/badge/162534283.svg)](https://zenodo.org/badge/latestdoi/162534283)\n\n[![Build Status](https://dev.azure.com/mhirsch0512/NCAR-GLOW/_apis/build/status/space-physics.NCAR-GLOW?branchName=master)](https://dev.azure.com/mhirsch0512/NCAR-GLOW/_build/latest?definitionId=4&branchName=master)\n[![Build status](https://ci.appveyor.com/api/projects/status/9q837fimex3vf3en?svg=true)](https://ci.appveyor.com/project/scivision/ncar-glow)\n\n\n# GLOW\n\nThe GLobal airglOW Model, independently and easily accessed from **Fortran 2003** compiler.\nOptionally available from scripting languages including:\n\n* Python &ge; 3.6\n* Matlab\n* GNU Octave &ge; 4.2\n* IDL / GDL\n\nWe describe each language below; pick the one(s) that apply for you.\nPython is the easiest and recommennded choice.\nA Fortran compiler is required in any case.\n\n## Python\n\nInstall/compile by:\n\n```sh\ngit clone https://github.com/space-physics/ncar-glow\n\npip install -e ncar-glow\n```\n\nConfirm the install with:\n\n```sh\npytest ncar-glow\n```\n\nThen use examples such as:\n\n* Simple.py:  Maxwellian precipiation, specify Q and E0.\n* Monoenergetic.py: Specify unit flux for one energy bin, all other energy bins are zero flux.\n\nor use GLOW in your own Python program by:\n```python\nimport ncarglow as glow\n\niono = glow.simple(time, glat, glon, Q, Echar, Nbins)\n```\n\n`iono` is an\n[xarray.Dataset](http://xarray.pydata.org/en/stable/generated/xarray.Dataset.html)\ncontaining outputs from GLOW, including:\n\n* number densities of neutrals, ions and electrons\n* Pedersen and Hall currents\n* volume emssion rate vs. wavelength and altitude\n* precipitating flux vs. energy\n* many more, request if you want it.\n\n## Fortran\n\nYou can call this repo from a Meson wrap or CMake Fetch.\nTo build Fortran code by itself, do either:\n\n```sh\nmeson build\n\nmeson test -C build\n```\n\nor\n\n```sh\ncmake -B build\n\ncmake --build build\n```\n\n### MPI / NetCDF\n\nThe parallel version of GLOW requires MPI and NetCDF for TIEGCM I/O.\n```sh\nmpirun -np 2 ./mpi_glow.bin < ~/data/in.namelist.tgcm\n```\n\nNote, for an unknown reason, `in.namelist.msis` only works with -O0 or -O1 with gfortran 7. We didn't look into why.\nOtherwise, -O3 works fine.\n\n## Matlab / GNU Octave\n\nThe Matlab interface is in the [matlab](./matlab) directory, and passes data to / from Glow over stdin / stdout pipes.\n\nFirst, compile the Fortran code by running [setup.m](./matlab/setup.m)\n\nThen,\n\n* Use built-in energy and altitude bins: [Simple.m](./matlab/Simple.m)\n* user input energy grid: [Monoenergetic.m](./matlab/Monoenergetic.m)\n\nNOTE: if using GNU Octave, version &ge; 4.2 is required for proper [textscan() functionality](https://www.gnu.org/software/octave/NEWS-4.2.html)\n\n## IDL / GDL\n\nWe have a small script for IDL / GDL thanks to Guy Grubbs.\nLet us know if you want this, we haven't taken the time to upload it yet.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/scivision/ncar-glow",
    "keywords": "thermosphere,ionosphere",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ncarglow",
    "package_url": "https://pypi.org/project/ncarglow/",
    "platform": "",
    "project_url": "https://pypi.org/project/ncarglow/",
    "project_urls": {
      "Homepage": "https://github.com/scivision/ncar-glow"
    },
    "release_url": "https://pypi.org/project/ncarglow/1.1.1/",
    "requires_dist": null,
    "requires_python": ">= 3.6",
    "summary": "NCAR GLOW model",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5559155,
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db80372894ae69407335d369fa53a6add2113e4df00f9227a8d0ae42f5b616a3",
          "md5": "803d0bcd275ec4f196b9b8606568b046",
          "sha256": "0e470a4df84372574d02b5bb89c45772b85a3695d753d2d2e28017ba6412239f"
        },
        "downloads": -1,
        "filename": "ncarglow-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "803d0bcd275ec4f196b9b8606568b046",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 362169,
        "upload_time": "2019-07-19T23:23:11",
        "upload_time_iso_8601": "2019-07-19T23:23:11.430958Z",
        "url": "https://files.pythonhosted.org/packages/db/80/372894ae69407335d369fa53a6add2113e4df00f9227a8d0ae42f5b616a3/ncarglow-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db80372894ae69407335d369fa53a6add2113e4df00f9227a8d0ae42f5b616a3",
        "md5": "803d0bcd275ec4f196b9b8606568b046",
        "sha256": "0e470a4df84372574d02b5bb89c45772b85a3695d753d2d2e28017ba6412239f"
      },
      "downloads": -1,
      "filename": "ncarglow-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "803d0bcd275ec4f196b9b8606568b046",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.6",
      "size": 362169,
      "upload_time": "2019-07-19T23:23:11",
      "upload_time_iso_8601": "2019-07-19T23:23:11.430958Z",
      "url": "https://files.pythonhosted.org/packages/db/80/372894ae69407335d369fa53a6add2113e4df00f9227a8d0ae42f5b616a3/ncarglow-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}