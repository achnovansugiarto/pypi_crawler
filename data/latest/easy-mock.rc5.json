{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Easy Mock\n\n针对个人和公司提供有偿UI自动化技术、接口自动化技术、接口mock技术等培训及测试工具定制开发\n* **有意者请联系 QQ:40690263**\n\n## 简单、易用的接口Mock工具\n\n- 根据Yaml文件快速生成接口Mock服务\n- 要求python版本 > 3.7\n\n## Yaml文件示例\n```yaml\nexample.yml\n\napis:\n  # 最精简写法\n  - url: login # 接口路径\n    method: GET # 接口方法\n    defined_data_list: # request与response的匹配关系\n      [\n        {\n          body: { \"username\": \"edison\", \"password\": \"123\" },\n          response: { \"code\": -1, \"msg\": \"密码输入不正确\" }\n        }\n      ]\n```\n\n## v 1.0 主要功能\n- 根据Yaml文件内容返回Mock数据，两种方式： \n  - 一、根据request内容返回defined_data_list中与之匹配的response\n  - 二、若defined_data_list未定义或无与request内容匹配的response,则根据response_schema返回随机数据：\n    - 支持的随机数据类型: bool, int, float, double, string\n- 根据PB(.proto)生成Mock接口文件(yml)\n- 支持输入文件和目录\n- 支持http/https\n- 支持对request和response做定制化处理（见自定义扩展）\n\n\n## 安装\n\n```sh\n两种安装方式：\n一、pip安装（不需要源码）\npip install easy-mock\n\n二、源码安装(需安装setuptools)\n下载源码并进入到setup.py所在目录\npython setup.py install\n```\n\n## 使用\n\n### 查看帮助\n\n```sh\n$ easy_mock -h\nusage: easy_mock [-h] [-v] [-p PORT] [-https] [-req] [-res] file_path\n\nGenerate mock service according to the YAML file\n\npositional arguments:\n  file_path      yaml configuration file, directory or .proto file\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -v, --version  show version\n  -p             mock service port\n  -https         enable mock server https protocol\n  -req           generate request_schema in yaml\n  -res           generate response_schema in yaml\n\n```\n\n### 启动Mock Server\n服务启动后可调用yml中定义的mock服务\n```sh\neasy_mock example.yml\ncurl -H \"Content-Type: application/json\" -X POST 'http://127.0.0.1:9000/login' -d '{\"username\":\"edison\", \"password\": \"123\"}' | python -m json.tool\n```\n\n\n## 自定义扩展\n\n在当前目录下新建python文件 `processor.py`\n\n```sh\n$ touch processor.py\n$ vim processor.py\n\n# 函数命名无限制，在yaml指定函数名即可 \ndef xxx_setup(req): \n\n    req[\"username\"] = \"abc\"\n\n    return req\n\ndef xxx_teardown(req, resp):\n\n    resp[\"age\"] = 100\n\n    return resp\n```\n\n在YAML文件中新增`setup` or `teardown`字段\n\n```yaml\napis:\n  login:\n    name: 用户登录\n    desc: 用户登录成功，接口会返回一个token\n    method: POST\n    setup: xxxx_setup # 指定前置处理函数名，此函数接受一个参数, 对请求体做前置操作\n    teardown: xxx_teardown # 指定后置处理函数名，此函数接受两个参数, 对请求体和响应体做后置操作\n```\n\n### Yaml文件示例及详解(复杂写法)\n```yaml\n  - url: login # 接口路径\n    method: POST # 接口方法\n    request_schema: # （可选）用于对request body做合法性校验\n      {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n        },\n        \"required\": [\n            \"username\",\n            \"password\"\n        ]\n      }\n    response_schema: # (可选) 根据schema生成response随机数据  response_schema 和 defined_data_list 二者不可全为空\n      {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\", # 数据类型\n            \"maximun\": 100, # 数据范围 最大\n            \"minimun\": 1 # 数据范围 最小\n          },\n          \"msg\": {\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"type\": \"string\"\n          },\n        },\n        \"required\": [ # required中的字段，response中必须返回, token字段则随机返回\n            \"code\",\n            \"msg\"\n        ]\n      }\n    defined_data_list: # 自定义返回 如果请求体于list中的body匹配， 则返回对应的response  response_schema 和 defined_data_list必须有一个匹配\n      [\n        {\n          body: { \"username\": \"edison\", \"password\": \"123\" },\n          response: { \"code\": -1, \"msg\": \"密码输入不正确\" }\n        },\n        {\n          body: { \"password\": \"123\" },\n          response: { \"code\": -1, \"msg\": \"用户名是必填的\" }\n        }\n      ]\n```\n\n\n## 将PB转换为Yaml\n\n**参数为.proto文件类型时生成yaml文件**\n```sh\neasy_mock server.proto -res\n输出server.yml\n```\n\n## To Do\n\n- 支持Swagger定义的接口文件\n- 支持Request,Response schema存放在单独的文件\n- 支持延时返回(sleep关键字)\n\n\n## 参考文档\n\n- Json schema用法 http://json-schema.org/\n- JSON Schema入门 https://www.jianshu.com/p/1711f2f24dcf?utm_campaign=hugo\n- python打包及支持pip安装 https://blog.csdn.net/sinat_33718563/article/details/88928950\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "har converter HttpRunner yaml json",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easy-mock",
    "package_url": "https://pypi.org/project/easy-mock/",
    "platform": "",
    "project_url": "https://pypi.org/project/easy-mock/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/easy-mock/1.1/",
    "requires_dist": [
      "PyYAML",
      "jsonschema",
      "loguru",
      "flask"
    ],
    "requires_python": ">=3",
    "summary": "Generate mock service according to the YAML/JSON file in the current directory",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9925589,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c56a7ab83bad37a10081063a213db0e8cf7ec1237a38e53831b51d9fda6db7c",
          "md5": "6a9d921c9270ad70da92f1171952b9da",
          "sha256": "18affab8d14a302d4915e4f716fb8a431f8b9ab7d767952c7fa4689cc9723c83"
        },
        "downloads": -1,
        "filename": "easy_mock-1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a9d921c9270ad70da92f1171952b9da",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3",
        "size": 15730,
        "upload_time": "2021-03-30T14:53:19",
        "upload_time_iso_8601": "2021-03-30T14:53:19.360486Z",
        "url": "https://files.pythonhosted.org/packages/0c/56/a7ab83bad37a10081063a213db0e8cf7ec1237a38e53831b51d9fda6db7c/easy_mock-1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.2.256rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44f918ce903d26bb9f1f8a59cf3f3dd67c57936551d60a49cd48e5ab42051037",
          "md5": "2cfd6c64b36da9be276cf96201ec796b",
          "sha256": "4e464d840051f51f89a7ff5780dee04febadf7c4e025fe0e101ee44dfd4e82e5"
        },
        "downloads": -1,
        "filename": "easy_mock-2021.2.256rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cfd6c64b36da9be276cf96201ec796b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.7",
        "size": 9933,
        "upload_time": "2021-02-26T10:56:06",
        "upload_time_iso_8601": "2021-02-26T10:56:06.098295Z",
        "url": "https://files.pythonhosted.org/packages/44/f9/18ce903d26bb9f1f8a59cf3f3dd67c57936551d60a49cd48e5ab42051037/easy_mock-2021.2.256rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.2.256rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cecc7f08b185a33909307eebd24923c668fb9da881bd10071b3e1389285b2f4d",
          "md5": "97f52c4eb3d00f36cb39e0fe8e3d0307",
          "sha256": "61179915d3f80d6a3c845e2d03b619cb5f0cf792f0d5056e386722f3e5be7674"
        },
        "downloads": -1,
        "filename": "easy_mock-2021.2.256rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97f52c4eb3d00f36cb39e0fe8e3d0307",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 9934,
        "upload_time": "2021-02-26T11:16:42",
        "upload_time_iso_8601": "2021-02-26T11:16:42.874842Z",
        "url": "https://files.pythonhosted.org/packages/ce/cc/7f08b185a33909307eebd24923c668fb9da881bd10071b3e1389285b2f4d/easy_mock-2021.2.256rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.2.256rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0ce1b870f726662f426ad518e214acc7d7056726b2e251af712be6ffc1e79eb",
          "md5": "17250e34361e00b29171253d3313d031",
          "sha256": "11855c5b0f99f30a9e8f69ab4e4a91cc7f9648f8f9ce133bcd67ca6a4647718e"
        },
        "downloads": -1,
        "filename": "easy_mock-2021.2.256rc3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17250e34361e00b29171253d3313d031",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 10072,
        "upload_time": "2021-02-26T14:03:08",
        "upload_time_iso_8601": "2021-02-26T14:03:08.292529Z",
        "url": "https://files.pythonhosted.org/packages/e0/ce/1b870f726662f426ad518e214acc7d7056726b2e251af712be6ffc1e79eb/easy_mock-2021.2.256rc3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.3.5rc4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1a2f695d685beb139b782848546c4a91636909fd1a3861829d679bad0b8d416",
          "md5": "5930e0000f62b5d7c38c83daa9fae5db",
          "sha256": "e5b61f55dc744f198f615dcd377a0b9955b693d0c9b8c519bed56fefa8ca24ca"
        },
        "downloads": -1,
        "filename": "easy_mock-2021.3.5rc4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5930e0000f62b5d7c38c83daa9fae5db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 12994,
        "upload_time": "2021-03-05T06:51:07",
        "upload_time_iso_8601": "2021-03-05T06:51:07.747000Z",
        "url": "https://files.pythonhosted.org/packages/b1/a2/f695d685beb139b782848546c4a91636909fd1a3861829d679bad0b8d416/easy_mock-2021.3.5rc4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c56a7ab83bad37a10081063a213db0e8cf7ec1237a38e53831b51d9fda6db7c",
        "md5": "6a9d921c9270ad70da92f1171952b9da",
        "sha256": "18affab8d14a302d4915e4f716fb8a431f8b9ab7d767952c7fa4689cc9723c83"
      },
      "downloads": -1,
      "filename": "easy_mock-1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6a9d921c9270ad70da92f1171952b9da",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3",
      "size": 15730,
      "upload_time": "2021-03-30T14:53:19",
      "upload_time_iso_8601": "2021-03-30T14:53:19.360486Z",
      "url": "https://files.pythonhosted.org/packages/0c/56/a7ab83bad37a10081063a213db0e8cf7ec1237a38e53831b51d9fda6db7c/easy_mock-1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}