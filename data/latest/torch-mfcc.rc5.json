{
  "info": {
    "author": "Shimin Zhang",
    "author_email": "shmzhang@npu-aslp.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Librosa STFT/Fbank/MFCC in PyTorch\nAuthor: Shimin Zhang\n\nA librosa STFT/Fbank/mfcc feature extration written up in PyTorch using 1D Convolutions.\n\n## Installation\n\nInstall easily with pip:`pip install torch_mfcc` or download this repo, `python setup.py install`.\n\n## Usage\n\nIf you want the same timesteps as kaldi, make sure that:\n- the window length, window hop length and fft length are same.\n- set enframed_mode(str)='break', which defaults to 'continue'. \n- set center(bool)=False. which defaults to True.\n\n```python3\nimport torch as th\nimport torch.nn.functional as tf\nimport scipy\nfrom torch_mfcc import STFT, FBANK, MFCC\nimport numpy as np\nimport librosa\n\n\ndef CalMfcc(signal, sr, fft_len, win_hop, win_len,\n            n_mfcc=13, center=True, dct_type=2, norm='ortho'):\n    spec_amp, n_fft = librosa.spectrum._spectrogram(signal, n_fft=fft_len, hop_length=win_hop, win_length=win_len,\n                                                    center=center, power=2.0, window='hann')\n    mel_basis = librosa.filters.mel(sr, n_fft)\n    S = np.dot(mel_basis, spec_amp)\n    fbank = librosa.core.power_to_db(S, top_db=None)\n    mfcc_spec = scipy.fftpack.dct(\n        fbank, axis=0, type=dct_type, norm=norm)[:n_mfcc]\n    return spec_amp, fbank, mfcc_spec\n\n\nsig = librosa.load(\n    librosa.util.example_audio_file(), duration=10.0, offset=30)[0]\ndevice='cpu'\nsig_th = th.from_numpy(sig)[None, :].float().to(device)\nfft_len = 1024\nwin_hop = 256\nwin_len = 1024\nwindow = 'hann'\nn_mel = 128\nn_mfcc = 13\ndct_type = 4\nnorm = 'ortho'\ncenter = False\nsr = 22050\n\nspec_amp, fbank_spec, mfcc_spec = CalMfcc(\n    signal=sig,\n    sr=sr,\n    fft_len=fft_len,\n    win_hop=win_hop,\n    win_len=win_len,\n    n_mfcc=n_mfcc,\n    center=center,\n    dct_type=dct_type,\n    norm=norm)\n\n# librosa STFT VS conv_stft\n# see more test at :https://github.com/echocatzh/conv-stft/blob/master/tests/test_stft.py\nstft = STFT(\n    win_len=win_len,\n    win_hop=win_hop,\n    fft_len=fft_len,\n    pad_center=center,\n    win_type=window).to(device)\nreal, imag = stft.transform(sig_th, return_type='realimag')\nspectrum_th = th.square(real) + th.square(imag)\nprint(tf.mse_loss(th.FloatTensor(spec_amp).to(device),\n                  spectrum_th.squeeze(0)))  # 8.4275e-10\n\n# librosa fbank VS torch_fbank\nfbank = FBANK(win_len, win_hop, fft_len, sr,  win_type=window,\n              top_db=None,\n              center=center, n_mel=n_mel).to(device)\nfbank_spec_th = fbank(sig_th)\nprint(tf.mse_loss(th.FloatTensor(fbank_spec).to(device),\n                  fbank_spec_th.transpose(1, 2).squeeze(0)))  # 1.4462e-09\n\n# librosa mfcc VS torch_mfcc\nmfcc = MFCC(win_len, win_hop, fft_len, sr, win_type=window,\n            top_db=None, dct_type=dct_type, norm=norm,\n            center=center, n_mfcc=n_mfcc, n_mel=n_mel).to(device)\nmfcc_spec_th = mfcc(sig_th)\nprint(tf.mse_loss(th.FloatTensor(mfcc_spec).to(device),\n                  mfcc_spec_th.transpose(1, 2).squeeze(0)))  # 7.2581e-10\n\n```\n\n## Contact\nIf you have any questions, welcome to contact me at shmzhang@npu-aslp.org",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/echocatzh/torch-mfcc",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torch-mfcc",
    "package_url": "https://pypi.org/project/torch-mfcc/",
    "platform": "",
    "project_url": "https://pypi.org/project/torch-mfcc/",
    "project_urls": {
      "Homepage": "https://github.com/echocatzh/torch-mfcc"
    },
    "release_url": "https://pypi.org/project/torch-mfcc/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A librosa's STFT/FBANK/MFCC implement based on Torch",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10688151,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10ce9a01af5d8d3e65d20802b705f314e81978453fb2ef0e644a1a37163709c3",
          "md5": "e2336446ac79cb27dd138c8cc8f53c35",
          "sha256": "20b5c22dd1ab8d6cb9c50781efe3621df280f3870347b22e95a4e8716e7353d7"
        },
        "downloads": -1,
        "filename": "torch_mfcc-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2336446ac79cb27dd138c8cc8f53c35",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 8357,
        "upload_time": "2020-08-21T13:29:41",
        "upload_time_iso_8601": "2020-08-21T13:29:41.032859Z",
        "url": "https://files.pythonhosted.org/packages/10/ce/9a01af5d8d3e65d20802b705f314e81978453fb2ef0e644a1a37163709c3/torch_mfcc-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9eb234df957e24f11c70f584ca1323323e071a46e8ec3d483435813af9c6dabe",
          "md5": "7467dc90b200eb3b4cc873ec1da9f3e1",
          "sha256": "86c35ac2acf7d2e874ee187a95e1375fdcd068de3d5ba5cb13af5c175ed4a6c1"
        },
        "downloads": -1,
        "filename": "torch_mfcc-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7467dc90b200eb3b4cc873ec1da9f3e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6010,
        "upload_time": "2020-08-21T13:29:47",
        "upload_time_iso_8601": "2020-08-21T13:29:47.440478Z",
        "url": "https://files.pythonhosted.org/packages/9e/b2/34df957e24f11c70f584ca1323323e071a46e8ec3d483435813af9c6dabe/torch_mfcc-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac1bcd81a46e9ec63870907bb3bc23a2475748904a98dbab37eada9a73fed77e",
          "md5": "8d5f04159f38f7727b2037710c14d99a",
          "sha256": "f4e8d110a4b08963cf5719a266a737fc2829917e5cdfb44afa646ab07ad612ea"
        },
        "downloads": -1,
        "filename": "torch_mfcc-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8d5f04159f38f7727b2037710c14d99a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5956,
        "upload_time": "2020-09-02T07:21:13",
        "upload_time_iso_8601": "2020-09-02T07:21:13.302865Z",
        "url": "https://files.pythonhosted.org/packages/ac/1b/cd81a46e9ec63870907bb3bc23a2475748904a98dbab37eada9a73fed77e/torch_mfcc-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c4e97eb66d48e74acf0c6eec9325e36e90f07fe760cf98e00bf9488407af924",
          "md5": "6517b45256c2ee65ef2bcdbb17ed6b02",
          "sha256": "cc3ffe8276de9afdf77ceae20ab4b94265774729326dbe572b82e1d41f25059d"
        },
        "downloads": -1,
        "filename": "torch_mfcc-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6517b45256c2ee65ef2bcdbb17ed6b02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6089,
        "upload_time": "2020-09-02T07:52:51",
        "upload_time_iso_8601": "2020-09-02T07:52:51.727085Z",
        "url": "https://files.pythonhosted.org/packages/7c/4e/97eb66d48e74acf0c6eec9325e36e90f07fe760cf98e00bf9488407af924/torch_mfcc-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b29bbe3867bf59a98b0a8d5536958c78ebe5f91c73c3033e43cd2308cc1af42",
          "md5": "db10dfea59967bd1b4fa8e6a01043db3",
          "sha256": "0461592f91504405973bda8a6da8fc3266660160ee275588bbdf4c5af1a2d454"
        },
        "downloads": -1,
        "filename": "torch_mfcc-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db10dfea59967bd1b4fa8e6a01043db3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8846,
        "upload_time": "2021-06-15T04:13:58",
        "upload_time_iso_8601": "2021-06-15T04:13:58.397039Z",
        "url": "https://files.pythonhosted.org/packages/1b/29/bbe3867bf59a98b0a8d5536958c78ebe5f91c73c3033e43cd2308cc1af42/torch_mfcc-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5774d358b565549dce1441ece31094df726b37cd2c4b19b8656b9845a3fb4e46",
          "md5": "c4cf27c76442cac1824f0c1e58812cfc",
          "sha256": "6b4e477a9899e9f90774db194e876c83a4704a6f3c611f89d73fc43b6f36519d"
        },
        "downloads": -1,
        "filename": "torch_mfcc-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c4cf27c76442cac1824f0c1e58812cfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6387,
        "upload_time": "2021-06-15T04:13:59",
        "upload_time_iso_8601": "2021-06-15T04:13:59.821043Z",
        "url": "https://files.pythonhosted.org/packages/57/74/d358b565549dce1441ece31094df726b37cd2c4b19b8656b9845a3fb4e46/torch_mfcc-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1fab3a5a03d6f73bc5f7ab5d31c616e421e9fdd07ffcc7360ce0dceb20d3dce",
          "md5": "7d2569ead5c14c92dedcf0528cfc8ee8",
          "sha256": "8f0b9908e4ae4b6d8be91876dbb0ff7294bf0c070329476321956328befba8b4"
        },
        "downloads": -1,
        "filename": "torch_mfcc-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d2569ead5c14c92dedcf0528cfc8ee8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6277,
        "upload_time": "2021-06-19T01:38:21",
        "upload_time_iso_8601": "2021-06-19T01:38:21.403966Z",
        "url": "https://files.pythonhosted.org/packages/e1/fa/b3a5a03d6f73bc5f7ab5d31c616e421e9fdd07ffcc7360ce0dceb20d3dce/torch_mfcc-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1fab3a5a03d6f73bc5f7ab5d31c616e421e9fdd07ffcc7360ce0dceb20d3dce",
        "md5": "7d2569ead5c14c92dedcf0528cfc8ee8",
        "sha256": "8f0b9908e4ae4b6d8be91876dbb0ff7294bf0c070329476321956328befba8b4"
      },
      "downloads": -1,
      "filename": "torch_mfcc-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7d2569ead5c14c92dedcf0528cfc8ee8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6277,
      "upload_time": "2021-06-19T01:38:21",
      "upload_time_iso_8601": "2021-06-19T01:38:21.403966Z",
      "url": "https://files.pythonhosted.org/packages/e1/fa/b3a5a03d6f73bc5f7ab5d31c616e421e9fdd07ffcc7360ce0dceb20d3dce/torch_mfcc-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}