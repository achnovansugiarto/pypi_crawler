{
  "info": {
    "author": "Manuela Salvucci",
    "author_email": "ms@msalvucci.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Free To Use But Restricted",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![License](https://img.shields.io/badge/License-BSD%202--Clause-blue.svg)](LICENSE)\n\n# Table of contents\n[TOC]\n\n# What is PyAnatomogram?\nPyAnatomogram is a python package to annotate and highlight organs and tissues in figures.\n\n![human](https://bytebucket.org/manuela_s/pyanatomogram/raw/9ec3777972a01848f3fdece26dcef26b0d3c2486/examples/human_condition1_vs_condition2.svg)\n\nPyAnatomogram parses anatomy svg images from the EBI Gene Expression Group's \n[anatomogram repository](https://github.com/ebi-gene-expression-group/anatomogram) and provides\na python interface for programmatically annotating the individual organs with colors or other style attributes.\nSee ebi-gene-expression-group anatomogram repository for a\n[for a full list](https://github.com/ebi-gene-expression-group/anatomogram/tree/master/src/svg)\nof animal and plant organisms that are supported.\n\nThis package was inspired by the [gganatogram](https://github.com/jespermaag/gganatogram) R-package by\nJesper Maag, and was written to provide similar functionality in python and to provide full resolution figures.\n\n# Example use - Gallus Gallus (chicken)\n\n## Highlight individual organs\nLet's color-code the heart and lung in a chicken image according to some measurement of interest.\n\n```python\nimport pyanatomogram\nanatomogram = pyanatomogram.Anatomogram('gallus_gallus')\nanatomogram.set_tissue_style('heart', fill='red')\nanatomogram.set_tissue_style('lung', fill='blue')\nanatomogram.to_matplotlib()\n```\n\n![Gallus Gallus with heart and lung highlighted](https://bytebucket.org/manuela_s/pyanatomogram/raw/9ec3777972a01848f3fdece26dcef26b0d3c2486/examples/highlight_individual_organs.svg)\n\nA full list of organs that can be highlighted in the gallus gallus svg image can be obtained by:\n\n```python\nimport pyanatomogram\nanatomogram = pyanatomogram.Anatomogram('gallus_gallus')\nanatomogram.get_tissue_names()\n```\n\n![Gallus Gallus with all tissues highlighted](https://bytebucket.org/manuela_s/pyanatomogram/raw/9ec3777972a01848f3fdece26dcef26b0d3c2486/examples/all_tissues_highlighted_gallus_gallus.svg)\n\n## Highlight multiple organs with measurement using a matplotlib colormap\nMultiple organs can be highlighted by passing a dictionary or a pandas Series to `hightlight_tissues`. Values will be\nmapped to colors using a matplotlib colormap.\n\n```python\nimport pyanatomogram\nanatomogram = pyanatomogram.Anatomogram('gallus_gallus')\nanatomogram.highlight_tissues({'heart': 0, 'lung': 2, 'brain': 3, 'colon': 1, 'liver': 4}, cmap='Reds')\nanatomogram.to_matplotlib()\n```\n\n![Highlight multiple organs](https://bytebucket.org/manuela_s/pyanatomogram/raw/9ec3777972a01848f3fdece26dcef26b0d3c2486/examples/highlight_multiple_organs.svg)\n\n## Style organs with CSS\nCustom CSS style attributes can be used to tailor the visualization.\n\n```python\nimport pyanatomogram\nanatomogram = pyanatomogram.Anatomogram('gallus_gallus')\nanatomogram.set_tissue_style('heart', **{'fill': 'red', 'stroke': 'black', 'stroke-width': 1, 'fill-opacity': 0.8})\nanatomogram.set_tissue_style('lung', **{'fill': 'cornflowerblue', 'stroke': 'darkblue', 'stroke-width': 1,\n                                        'fill-opacity': 0.5})\nanatomogram.to_matplotlib()\n```\n\n![Style organs with CSS](https://bytebucket.org/manuela_s/pyanatomogram/raw/9ec3777972a01848f3fdece26dcef26b0d3c2486/examples/style_organs_with_css.svg)\n\n## Import into matplotlib axes\nThe anatomogram can be imported into a matplotlib figure with the `to_matplotlib()` method, and combined with\nother figure elements in matplotlib.\n\n```python\nimport matplotlib.pyplot\nimport pandas\nimport pyanatomogram\n\ndata = pandas.Series({'heart': 0, 'lung': 2, 'brain': 3, 'colon': 1, 'liver': 4})\n\nfig, axes = matplotlib.pyplot.subplots(nrows=1, ncols=2)\n\ndata.plot(kind='barh', ax=axes[0])\naxes[0].set_xlabel('Relative expression')\naxes[0].set_ylabel('Organ')\n\ncmap = matplotlib.cm.Reds\nnorm = matplotlib.colors.Normalize()\nnorm.autoscale(data)\nanatomogram = pyanatomogram.Anatomogram('gallus_gallus')\nanatomogram.highlight_tissues(data.to_dict(), cmap=cmap, norm=norm)\nanatomogram.to_matplotlib(ax=axes[1])\n\nmatplotlib.pyplot.colorbar(matplotlib.cm.ScalarMappable(norm=norm, cmap=cmap), ax=axes[1],\n                           orientation='horizontal', label='Relative expression')\n```\n\n![Import into matplotlib axes](https://bytebucket.org/manuela_s/pyanatomogram/raw/9ec3777972a01848f3fdece26dcef26b0d3c2486/examples/import_into_matplotlib_axes.svg)\n\n## helper for use in seaborn facetgrid\n\nPyAnatomogram comes with a helper function `facetgrid_helper()` to be used together with the seaborn `FacetGrid`\nclass to generate multiple anatomogram subplots faceted by grouping variable(s).\n\n```python\nimport pandas\nimport pyanatomogram\nimport seaborn\nimport matplotlib\n\ndata = pandas.DataFrame({\n    'Condition1': {'heart': 0, 'lung': 2, 'brain': 3, 'colon': 1, 'liver': 4},\n    'Condition2': {'heart': 3, 'lung': 4, 'brain': 2, 'colon': 2, 'liver': 3},\n    'Condition3': {'heart': 7, 'lung': 9, 'brain': 1, 'colon': 7, 'liver': 2},\n}).stack().rename_axis(['organ', 'condition']).to_frame('expression')\n\ng = seaborn.FacetGrid(data.reset_index(), col='condition')\ncmap = matplotlib.cm.Reds\nnorm = matplotlib.colors.Normalize()\nnorm.autoscale(data)\ng.map(pyanatomogram.facetgrid_helper, 'organ', 'expression', name='gallus_gallus', cmap=cmap, norm=norm)\ng.fig.colorbar(matplotlib.cm.ScalarMappable(norm=norm, cmap=cmap), label='Relative expression')\n```\n\n![Seaborn FacetGrid helper](https://bytebucket.org/manuela_s/pyanatomogram/raw/9ec3777972a01848f3fdece26dcef26b0d3c2486/examples/seaborn_facetgrid_helper.svg)\n\n## Generate SVG file\n\nAlternatively to importing the anatomogram into a matplotlib figure, the anatomogram can be saved directly to svg\nwith the `save_svg()` method.\n\n```python\nimport pyanatomogram\nanatomogram = pyanatomogram.Anatomogram('gallus_gallus')\nanatomogram.set_tissue_style('heart', fill='red')\nanatomogram.set_tissue_style('lung', fill='blue')\nanatomogram.save_svg('anatomogram.svg')\n```\n \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/manuela_s/pyanatomogram/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyanatomogram",
    "package_url": "https://pypi.org/project/pyanatomogram/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyanatomogram/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/manuela_s/pyanatomogram/"
    },
    "release_url": "https://pypi.org/project/pyanatomogram/0.1.1/",
    "requires_dist": [
      "lxml",
      "matplotlib",
      "pandas",
      "pylustrator"
    ],
    "requires_python": ">=3.8",
    "summary": "PyAnatomogram is a python package to annotate and highlight organs and tissues in figures",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12014989,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac2e2620a87b7e018cdf3af6a2a4fa74942815476f844c9bf5d2b1b3d585d8c1",
          "md5": "259e810494b51ea355c298f6bdf25120",
          "sha256": "7f751ca15fefc9cba344750f053576c6e2fae3659c9b913c40b45641f75237c7"
        },
        "downloads": -1,
        "filename": "pyanatomogram-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "259e810494b51ea355c298f6bdf25120",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5079036,
        "upload_time": "2021-11-13T21:57:38",
        "upload_time_iso_8601": "2021-11-13T21:57:38.116018Z",
        "url": "https://files.pythonhosted.org/packages/ac/2e/2620a87b7e018cdf3af6a2a4fa74942815476f844c9bf5d2b1b3d585d8c1/pyanatomogram-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80dd9eaf1d49426f7fbc71349ce78da72a07c555d1a0b6642c4ace93d2501c18",
          "md5": "648ad931319717124335525392e43a38",
          "sha256": "7f7caa1ca844de3f5ac749682fc2963d4d73197ec2c312dcd3f4a77de7073919"
        },
        "downloads": -1,
        "filename": "pyanatomogram-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "648ad931319717124335525392e43a38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5063073,
        "upload_time": "2021-11-13T21:57:42",
        "upload_time_iso_8601": "2021-11-13T21:57:42.711030Z",
        "url": "https://files.pythonhosted.org/packages/80/dd/9eaf1d49426f7fbc71349ce78da72a07c555d1a0b6642c4ace93d2501c18/pyanatomogram-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ac2e2620a87b7e018cdf3af6a2a4fa74942815476f844c9bf5d2b1b3d585d8c1",
        "md5": "259e810494b51ea355c298f6bdf25120",
        "sha256": "7f751ca15fefc9cba344750f053576c6e2fae3659c9b913c40b45641f75237c7"
      },
      "downloads": -1,
      "filename": "pyanatomogram-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "259e810494b51ea355c298f6bdf25120",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 5079036,
      "upload_time": "2021-11-13T21:57:38",
      "upload_time_iso_8601": "2021-11-13T21:57:38.116018Z",
      "url": "https://files.pythonhosted.org/packages/ac/2e/2620a87b7e018cdf3af6a2a4fa74942815476f844c9bf5d2b1b3d585d8c1/pyanatomogram-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80dd9eaf1d49426f7fbc71349ce78da72a07c555d1a0b6642c4ace93d2501c18",
        "md5": "648ad931319717124335525392e43a38",
        "sha256": "7f7caa1ca844de3f5ac749682fc2963d4d73197ec2c312dcd3f4a77de7073919"
      },
      "downloads": -1,
      "filename": "pyanatomogram-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "648ad931319717124335525392e43a38",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 5063073,
      "upload_time": "2021-11-13T21:57:42",
      "upload_time_iso_8601": "2021-11-13T21:57:42.711030Z",
      "url": "https://files.pythonhosted.org/packages/80/dd/9eaf1d49426f7fbc71349ce78da72a07c555d1a0b6642c4ace93d2501c18/pyanatomogram-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}