{
  "info": {
    "author": "Dawid Plocki",
    "author_email": "dawid.plocki@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Podcast Downloader\n\nThe Python module for downloading files from given RSS feeds.\nIt is not using database of any sort. It require configuration file.\n\nThe script is analyzing the directory where it put the previously downloaded files.\nIt is compering the last added file with the rss feed, finding the missing ones, and downloading them.\n\nAs name suggested, the script is designed for podcasts. The files searched by default are mp3.\n\n## Setup\n\n### Installation from PyPI\n\n```bash\npip install podcast_downloader\n```\n\n## Running the script\n\nAfter installation, the script is called as Python module.\n\n```bash\npython -m podcast_downloader\n```\n\n### In action\n\nUsing the [example above](#example), the result will be:\n\n```log\n[2020-06-16 19:54:35] Loading configuration (from file: \"~/.podcast_downloader_config.json\")\n[2020-06-16 19:54:35] Checking \"The Skeptic Guide\"\n[2020-06-16 19:54:35] Last downloaded file \"skepticast2020-06-13.mp3\"\n[2020-06-16 19:54:39] The Skeptic Guide: Nothing new\n[2020-06-16 19:54:39] ------------------------------\n[2020-06-16 19:54:39] Finished\n```\n\n## Configuration\n\n### The configuration file\n\nThe configuration file is placed in home directory.\n\nThe name: `.podcast_downloader_config.json`. The file is format in [JSON](https://en.wikipedia.org/wiki/JSON).\n\n### The settings hierarchy\n\nThe script will replace default values by read from configuration file.\nThose will be cover by all values given by command line.\n\n```\n command line parameters > configuration file > default values\n```\n\n### The main options\n\n| Property             | Type       | Required | Default                  | Note |\n|:---------------------|:----------:|:--------:|:------------------------:|:-----|\n| `downloads_limit`    | number     | no       | infinity                 |      |\n| `if_directory_empty` | string     | no       | download_last            | See [In case of empty directory](#in-case-of-empty-directory) |\n| `podcast_extensions` | key-value  | no       | `{\".mp3\": \"audio/mpeg\"}` | The file filter |\n| `podcasts`           | subsection | yes      | `[]`                     | See [Podcasts sub category](#podcasts-sub-category) |\n\n### Podcasts sub category\n\n`Podcasts` is the part of configuration file where you provide the array of objects with fallowing content:\n\n| Property             | Type      | Required | Default                        | Note |\n|:---------------------|:---------:|:--------:|:------------------------------:|:-----|\n| `name`               | string    | yes      | -                              | The name of channel (used in logger) |\n| `rss_link`           | string    | yes      | -                              | The URL of RSS channel |\n| `path`               | string    | yes      | -                              | The path to directory, for podcast files |\n| `file_name_template` | string    | no       | `%file_name%.%file_extension%` | The template for the downloaded files, more \n| `disable`            | boolean   | no       | `false`                        | This podcast will be ignored |\n| `podcast_extensions` | key-value | no       | `{\".mp3\": \"audio/mpeg\"}`       | The file filter |\n| `if_directory_empty` | string    | no       | `download_last`                | See [In case of empty directory](#in-case-of-empty-directory) |\n| `require_date`       | boolean   | no       | `false`                        | **Deprecated** Is date of podcast should be added into name of file - use the `file_name_template`: `[%publish_date%] %file_name%.%file_extension%\"` |\n\n### An example of configuration file\n\n```json\n{\n    \"if_directory_empty\": \"download_from_4_days\",\n    \"podcasts\": [\n        {\n            \"name\": \"The Skeptic Guide\",\n            \"rss_link\": \"http://www.theskepticsguide.org/feed/rss.aspx\",\n            \"path\": \"~/podcasts/SGTTU\"\n        }\n    ]\n}\n```\n\n## Script arguments\n\nThe script accept following command line arguments:\n\n| Short version | Long name              | Parameter           | Default         | Note |\n|:--------------|:-----------------------|:-------------------:|:---------------:|:-----|\n|               | `--downloads_limit`    | number              | infinity        | The maximum number of downloaded mp3 files |\n|               | `--if_directory_empty` | string              | `download_last` | The general approach on empty directory' |\n\n## Adding date to file name\n\nIf RSS channel doesn't have single and constant name convention, it may causing the script to working incorrectly. The solution is force files to have common and meaningful prefix. The script is able to adding the date on beginning of downloaded file name.\n\nUse [File name template](#file-name-template) and option `%publish_date%`.\n\n## File name template\n\nUse to change the name of downloaded file after its downloading.\n\nDefault value (the `%file_name%.%file_extension%`) will simple save up the file as it was uploaded by original creator. The file name and its extension is taken from the link to podcast file.\n\nTemplate values:\n\n| Name               | Notes |\n|:-------------------|:------|\n| `%file_name%`      | The file name taken from link, without extension |\n| `%file_extension%` | The extension for the file, taken from link |\n| `%publish_date%`   | The publish date of the RSS entry, in format `YEARMMDD` |\n| `%title%`          | The title of the RSS entry |\n\nExamples:\n\n* `[%publish_date%] %file_name%.%file_extension%`\n* `[%publish_date%] %title%.%file_extension%`\n\n## File types filter\n\nPodcasts are mostly stored as `*.mp3` files. By default Podcast Downloader will look just for them.\n\nIf your podcast support other types of media files, you can precised your own podcast file filter, by providing extension for the file (like `.mp3`), and type of link in RSS feed itself (for `mp3` it is `audio/mpeg`).\n\nIf you don't know the type of the file, you can check the RSS file. Seek for `enclosure` tags, should looks like this:\n\n```xml\n    <enclosure\n        url=\"https://an.apple.supporter.page/podcast/episode23.m4a\"\n        length=\"14527149\"\n        type=\"audio/x-m4a\" />\n```\n\nNotes: the dot on the file extension is require.\n\n### Example\n\n```json\n  \"podcast_extensions\": {\n    \".mp3\": \"audio/mpeg\",\n    \".m4a\": \"audio/x-m4a\"\n  }\n```\n\n## In case of empty directory\n\nIf a directory for podcast is empty, the script needs to recognize what to do. Due to lack of database, you can:\n\n* [download all episodes from feed](#download-all-from-feed)\n* [download only the last episode](#only-last)\n* [download all new episode from last n days](#download-all-from-n-days)\n* [download all new episode since day after, the last episode should appear](#download-all-episode-since-last-excepted)\n\n### Download all from feed\n\nThe script will download all episodes from the feed.\n\nSet by `download_all_from_feed`.\n\n### Only last\n\nThe script will download only the last episode from the feed.\nIt is a good approach when you wish to start listening the podcast.\nIt is also default approach of the script.\n\nSet by `download_last`.\n\n### Download all from n days\n\nThe script will download all episodes which appear in last *n* days. I can be use when you are downloading on regular schedule.\nThe *n* number is given within the setup value: `download_from_n_days`. For example: `download_from_3_days` means download all episodes from last 3 days.\n\n### Download all episode since last excepted\n\nThe script will download all episodes which appear after the day of release of last episode.\n\nThe *n* number is the day of the normal episode.\nYou can provide here week days as word (size of the letters is ignored)\n\n| Full week day | Shorten name |\n|:--------------|:-------------|\n| Monday        | Mon          |\n| Tuesday       | Tues         |\n| Wednesday     | Weds         |\n| Thursday      | Thurs        |\n| Friday        | Fri          |\n| Saturday      | Sat          |\n| Sunday        | Sun          |\n\nYou can provide the number, it will means the day of the month. The script accepts only number from 1 to 28.\n\nSet by `download_from_`.\n\nExamples:\n\n| Example value          | Meaning |\n|------------------------|---------|\n| `download_from_monday` | New episodes appear in Monday. The script will download all episodes since last Tuesday (including it) |\n| `download_from_Fri`    | New episodes appear in Friday. The script will download all episodes since last Saturday (including it) |\n| `download_from_12`     | New episodes appear each 12th of month. The script will download all episodes since 13 month before |\n\n## The analyze of the RSS feed\n\nThe script is look through all the `items` nodes in RSS file. The `item` node can contain the `enclosure` node. Those nodes are used to passing the files. According to the convention the single `item` should contain only one `enclosure`, but script (as [the library used](https://pypi.org/project/feedparser/) under it) can handle the multiple files attached into podcast `item`.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dplocki/podcast-downloader",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "podcast-downloader",
    "package_url": "https://pypi.org/project/podcast-downloader/",
    "platform": null,
    "project_url": "https://pypi.org/project/podcast-downloader/",
    "project_urls": {
      "Homepage": "https://github.com/dplocki/podcast-downloader"
    },
    "release_url": "https://pypi.org/project/podcast-downloader/0.4.0/",
    "requires_dist": [
      "feedparser"
    ],
    "requires_python": ">=3.6",
    "summary": "The script for downloading the recent mp3 from given RSS channels",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16523015,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e5b0f1d908dfea9ce6858cd7456622ad72434be594f3f437e85492e7b634478",
          "md5": "0429d2d526945e3559bc6ffd627e960d",
          "sha256": "73f2a1f499b8d622165895162eef445098272b5f456828912851f8595ee12a5d"
        },
        "downloads": -1,
        "filename": "podcast_downloader-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0429d2d526945e3559bc6ffd627e960d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17525,
        "upload_time": "2020-05-24T16:19:49",
        "upload_time_iso_8601": "2020-05-24T16:19:49.536103Z",
        "url": "https://files.pythonhosted.org/packages/5e/5b/0f1d908dfea9ce6858cd7456622ad72434be594f3f437e85492e7b634478/podcast_downloader-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e95cce863a37d4098fbca0e42f5fd19ff8addbde16cfc7ab28aeabcad38036e8",
          "md5": "72b8ee950876c139c0bbe7fa05a954a3",
          "sha256": "e86780be2010347df485ee0e872eda58a04c1d25171b88cdb1e2a402c109e789"
        },
        "downloads": -1,
        "filename": "podcast_downloader-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72b8ee950876c139c0bbe7fa05a954a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17423,
        "upload_time": "2020-05-25T16:21:34",
        "upload_time_iso_8601": "2020-05-25T16:21:34.674786Z",
        "url": "https://files.pythonhosted.org/packages/e9/5c/ce863a37d4098fbca0e42f5fd19ff8addbde16cfc7ab28aeabcad38036e8/podcast_downloader-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6ebd94d5d95c44afff66a59fab295964ac144ea8109c6f4cd47efe3100c2d68",
          "md5": "5dc43db6e94916eda3fd46063ccb4483",
          "sha256": "40b04da62e1fb6f3460690fc148b1a730ed7326170515d459f4139d6f6aaeb7b"
        },
        "downloads": -1,
        "filename": "podcast_downloader-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5dc43db6e94916eda3fd46063ccb4483",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4211,
        "upload_time": "2020-05-25T16:21:35",
        "upload_time_iso_8601": "2020-05-25T16:21:35.815700Z",
        "url": "https://files.pythonhosted.org/packages/b6/eb/d94d5d95c44afff66a59fab295964ac144ea8109c6f4cd47efe3100c2d68/podcast_downloader-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4c0ae2df92965c23bb31779a936b6a7048a2ab52cb4a5853b3c126be5f49f4d",
          "md5": "fc1a5b91816c2a57dfad869d824f3ac1",
          "sha256": "80aa5cc0ca2318febfc7800d41bd6156e34b0beb4e5c0294157e4aba6919ad3f"
        },
        "downloads": -1,
        "filename": "podcast_downloader-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc1a5b91816c2a57dfad869d824f3ac1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19006,
        "upload_time": "2022-06-04T18:44:49",
        "upload_time_iso_8601": "2022-06-04T18:44:49.997134Z",
        "url": "https://files.pythonhosted.org/packages/c4/c0/ae2df92965c23bb31779a936b6a7048a2ab52cb4a5853b3c126be5f49f4d/podcast_downloader-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aba8de82c922d13a9a7905c03d0392bc008dec42b584c79a537bd4f2e16f486d",
          "md5": "de227dd78b1399b364097fa252558234",
          "sha256": "95f0c635b392e22762e7bf85d9506e49f96c9fc44bbdb6767ab5f9c8c669a4a1"
        },
        "downloads": -1,
        "filename": "podcast_downloader-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de227dd78b1399b364097fa252558234",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19080,
        "upload_time": "2022-06-04T19:31:53",
        "upload_time_iso_8601": "2022-06-04T19:31:53.881785Z",
        "url": "https://files.pythonhosted.org/packages/ab/a8/de82c922d13a9a7905c03d0392bc008dec42b584c79a537bd4f2e16f486d/podcast_downloader-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afee986be31f94cdc708e8e061ce1deec9a812583f95a3f7de5e921817ecc104",
          "md5": "218c18a25bc300b9666454ece16b981f",
          "sha256": "6215f29f11d805fbba159dbff59d34f478e253b71782ab6268193689f228d8ea"
        },
        "downloads": -1,
        "filename": "podcast_downloader-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "218c18a25bc300b9666454ece16b981f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17938,
        "upload_time": "2022-06-04T19:31:55",
        "upload_time_iso_8601": "2022-06-04T19:31:55.438634Z",
        "url": "https://files.pythonhosted.org/packages/af/ee/986be31f94cdc708e8e061ce1deec9a812583f95a3f7de5e921817ecc104/podcast_downloader-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5b44524ff05cce0da3c01bd4945c42e0c219148a15600dd59310ff2893f989a",
          "md5": "478999ebf88057d9fc032e62e149c280",
          "sha256": "837dc0decf81bb78f5750041020278b4597183408cded7d15f7f6d02c4521fd5"
        },
        "downloads": -1,
        "filename": "podcast_downloader-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "478999ebf88057d9fc032e62e149c280",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22007,
        "upload_time": "2022-11-11T13:33:55",
        "upload_time_iso_8601": "2022-11-11T13:33:55.753038Z",
        "url": "https://files.pythonhosted.org/packages/a5/b4/4524ff05cce0da3c01bd4945c42e0c219148a15600dd59310ff2893f989a/podcast_downloader-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1656f69caaf6b26f84b08708018628d407afe5f2a73ae5c22f421cf536c1a15",
          "md5": "22c7c83055799c0ea8bef03b552cfaa8",
          "sha256": "716a82c73b317d85ed1ffcdf3af51d386ecd4d5ac5f2a0334a2c0a5378bbf9f5"
        },
        "downloads": -1,
        "filename": "podcast_downloader-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "22c7c83055799c0ea8bef03b552cfaa8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22767,
        "upload_time": "2022-11-11T13:33:57",
        "upload_time_iso_8601": "2022-11-11T13:33:57.472841Z",
        "url": "https://files.pythonhosted.org/packages/e1/65/6f69caaf6b26f84b08708018628d407afe5f2a73ae5c22f421cf536c1a15/podcast_downloader-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e40d535d8ac4a45bf147fdf68edb0723cc2d849dddfcfcfe2af393baaaa0fa32",
          "md5": "8de826480f80dfa4954292c14fe956b5",
          "sha256": "1231c72ea2efde88c69ac574a54959c390d2e5cc0ac117ef86e6f4bac7a1dbc4"
        },
        "downloads": -1,
        "filename": "podcast_downloader-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8de826480f80dfa4954292c14fe956b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22923,
        "upload_time": "2023-01-22T17:02:07",
        "upload_time_iso_8601": "2023-01-22T17:02:07.557029Z",
        "url": "https://files.pythonhosted.org/packages/e4/0d/535d8ac4a45bf147fdf68edb0723cc2d849dddfcfcfe2af393baaaa0fa32/podcast_downloader-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52de24d2c30f4bb92bdbc0a552be46885630c165a2a33eecdcfee93a5d572f2e",
          "md5": "a3cc147b73806834cfaae11d7aa3264c",
          "sha256": "9a4a359eafe6420d70f9ab6315aca8a278204d2b33e81cd9a9e22dfba4010ecf"
        },
        "downloads": -1,
        "filename": "podcast_downloader-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a3cc147b73806834cfaae11d7aa3264c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23927,
        "upload_time": "2023-01-22T17:02:08",
        "upload_time_iso_8601": "2023-01-22T17:02:08.620231Z",
        "url": "https://files.pythonhosted.org/packages/52/de/24d2c30f4bb92bdbc0a552be46885630c165a2a33eecdcfee93a5d572f2e/podcast_downloader-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e40d535d8ac4a45bf147fdf68edb0723cc2d849dddfcfcfe2af393baaaa0fa32",
        "md5": "8de826480f80dfa4954292c14fe956b5",
        "sha256": "1231c72ea2efde88c69ac574a54959c390d2e5cc0ac117ef86e6f4bac7a1dbc4"
      },
      "downloads": -1,
      "filename": "podcast_downloader-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8de826480f80dfa4954292c14fe956b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 22923,
      "upload_time": "2023-01-22T17:02:07",
      "upload_time_iso_8601": "2023-01-22T17:02:07.557029Z",
      "url": "https://files.pythonhosted.org/packages/e4/0d/535d8ac4a45bf147fdf68edb0723cc2d849dddfcfcfe2af393baaaa0fa32/podcast_downloader-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52de24d2c30f4bb92bdbc0a552be46885630c165a2a33eecdcfee93a5d572f2e",
        "md5": "a3cc147b73806834cfaae11d7aa3264c",
        "sha256": "9a4a359eafe6420d70f9ab6315aca8a278204d2b33e81cd9a9e22dfba4010ecf"
      },
      "downloads": -1,
      "filename": "podcast_downloader-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a3cc147b73806834cfaae11d7aa3264c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23927,
      "upload_time": "2023-01-22T17:02:08",
      "upload_time_iso_8601": "2023-01-22T17:02:08.620231Z",
      "url": "https://files.pythonhosted.org/packages/52/de/24d2c30f4bb92bdbc0a552be46885630c165a2a33eecdcfee93a5d572f2e/podcast_downloader-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}