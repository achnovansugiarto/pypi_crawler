{
  "info": {
    "author": "liunux",
    "author_email": "liunux@qq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# raw ECharts component for streamlit\n\nA Streamlit component for the [ECharts](https://echarts.apache.org/en/index.html) library.\n\n## Features\n\nIt has following advantages comparing to [Streamlit-echarts](https://github.com/andfanilo/streamlit-echarts):\n- It is written in pure html/js without react/vue/webpack, no need to install nodejs when developping. It can also be used as template to write other html/js based component for traditional frontend-developpers.\n- It supports raw ECharts api, i.e, useing \"`new echarts.graphic.LinearGradient(...)`\" as color in chart option.\n- Benifit from ECharts design scheme, chart can be dynamiclly updated without remounted by specifying a key.\n- It can returns the `chart.getDataURL()` as component value, so can easily save or download chart as picutre by code.\n- It integrates basic ECharts libraries and map resources from [pyecharts-assets](https://github.com/pyecharts/pyecharts-assets), so can be used in off-line environments.\n\nShort conclusion: with this component, streamlit user can display any ECharts by setting params on the python side, no development on the frontend is necessary anymore.\n\n## Install\n\n1. `pip install streamlit-raw-echarts`\n2. basic charts and 3D charts already be available with a fresh installation. If additional geo map needed, user can:\n    - download [pyecharts-assets](https://github.com/pyecharts/pyecharts-assets) zipball, then copy pyecharts-assets/assets/maps folder to {streamlit_raw_echarts installation folder}/frontend/. This repo contains maps of lots countries.\n    - pass custome geo json data to component your self.\n\n## Usage examples\n```python\nimport streamlit as st\nfrom streamlit_raw_echarts import st_echarts,JsCode,CustomMap\nimport random\n\n\nwith st.echo('below'):\n    option={\n        'backgroundColor':'#fff',\n        'title':{\n            'text':'example chart',\n            'subtext':'using pyecharts-assets',\n        },\n        'tooltip':{\n            'trigger':'item',\n        },\n        'visualMap':{\n            'seriesIndex':1,\n        },\n        'grid':{'bottom':'55%'},\n        'xAxis':{\n            'data':[1,2,3,4,5],\n        },\n        'yAxis':{},\n        'series':[\n            {\n                'type':'bar',\n                'name':'KPI',\n                'data':[1,2,3,4,5],\n                'label':{\n                    'show':True,\n                    'position':'top',\n                },\n                'visualMap':False,\n                'color':JsCode('new echarts.graphic.LinearGradient(0,0,0,1,[{\"offset\":0,\"color\":\"red\"},{\"offset\":1,\"color\":\"yellow\"}])')             \n            },\n            {\n                'name':'users',\n                'type':'map',\n                'mapType':'world',\n                'top':'55%',\n                'label':{'show':False},\n                'roam':True,\n                'data':[\n                    {\n                        'name':'China',\n                        'value':150,\n                        'label':{\n                            'show':True,\n                            'formatter':JsCode('function(p){return p.data.name+\":\"+p.value;}')\n                            }\n                    },\n                    {\n                        'name':'United States',\n                        'value':200,\n                        'label':{\n                            'show':True,\n                            'formatter':JsCode('function(p){return p.data.name+\":\"+p.value;}')\n                            }\n                    },\n                    {'name':'Brazil','value':100},\n                ]\n            }\n        ]\n    }\n\n    st.title('example:')\n\n    for i in range(3):\n        option['series'][1]['data'][i]['value']=random.randint(1,200)\n    for i in range(5):\n        option['series'][0]['data'][i]=random.randint(1,10)\n\n    chart=st_echarts(option=option,\n                    theme='shine',\n                    height=600,\n                    events={\n                        'click':'function(param){alert(\"your click:\"+param.data.name);}'\n                        },\n                    returnData={},\n                    key='echarts1',\n                    )\n    st.button('refresh',help='update chart dynamiclly')\n    if chart:\n        st.write('the component returns as :')\n        st.write(chart[:25]+' ... '+chart[-25:])\n        st.markdown('<a href=\"{}\" download=\"{}\">download chart as picture</a>'.format(chart,'echarts1.png'),unsafe_allow_html=True)\n```\n\n## API\nThe APIs are similar with [Streamlit-echarts](https://github.com/andfanilo/streamlit-echarts).\n\nAdditional parameters:\n- notMerge/lazyUpdate: passed to chart.setOption, whether merge the option or not.\n- returnData: dict with values same to chart.getDataURL(), will set chart's image data as component value. Be careful this will slows down your app.\n\n## Further development\nUser can add any params to `frontend/index.html.updateChart`, then pass params through st_echarts.\n\n## Credit\nThanks to [andfanilo](https://github.com/andfanilo), I take some ideas from his [Streamlit-echarts](https://github.com/andfanilo/streamlit-echarts).\n\nThanks to [pyecharts team](https://github.com/pyecharts), they provide lots of assets especially usefull for Chinese users.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/liunux4odoo/streamlit-raw-echarts",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "streamlit-raw-echarts",
    "package_url": "https://pypi.org/project/streamlit-raw-echarts/",
    "platform": "",
    "project_url": "https://pypi.org/project/streamlit-raw-echarts/",
    "project_urls": {
      "Homepage": "https://github.com/liunux4odoo/streamlit-raw-echarts"
    },
    "release_url": "https://pypi.org/project/streamlit-raw-echarts/0.1.4/",
    "requires_dist": [
      "streamlit (>=0.63)",
      "simplejson (>=3.00)"
    ],
    "requires_python": ">=3.6",
    "summary": "Echarts component for streamlit supporting raw Echarts api.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12042331,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a94e847f115b833a8b78b3ad19c3d8993355a8dcc236ceb48efb93d2ff064b5f",
          "md5": "1811b1a3789d7acb0e508f8f8f1a8e9d",
          "sha256": "2195089d3d2b1b59a10f2841200796f9e9a7a491f6eaf70ffdff3ed59e5a2b67"
        },
        "downloads": -1,
        "filename": "streamlit_raw_echarts-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1811b1a3789d7acb0e508f8f8f1a8e9d",
        "packagetype": "bdist_wheel",
        "python_version": "3.8",
        "requires_python": null,
        "size": 771947,
        "upload_time": "2021-09-26T11:26:23",
        "upload_time_iso_8601": "2021-09-26T11:26:23.288783Z",
        "url": "https://files.pythonhosted.org/packages/a9/4e/847f115b833a8b78b3ad19c3d8993355a8dcc236ceb48efb93d2ff064b5f/streamlit_raw_echarts-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b34b8eb739d9abc6bba7aedd23e4864d4baa8faba1bee07456eda0d1cbe32c92",
          "md5": "fe934d5068c5b4591ec044b9566c8194",
          "sha256": "f6dbb5ca9ca346580d3144c84a1b5842c94ab3cdc018284094aa1f9e7c06bb55"
        },
        "downloads": -1,
        "filename": "streamlit_raw_echarts-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe934d5068c5b4591ec044b9566c8194",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 773176,
        "upload_time": "2021-09-26T11:34:32",
        "upload_time_iso_8601": "2021-09-26T11:34:32.262026Z",
        "url": "https://files.pythonhosted.org/packages/b3/4b/8eb739d9abc6bba7aedd23e4864d4baa8faba1bee07456eda0d1cbe32c92/streamlit_raw_echarts-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3c9694a8eeb086cfe3addb7f9fc634c3e0557e7571b8bc3e4667275b9adcc40",
          "md5": "60bc836192f55687c902f78b7841c09a",
          "sha256": "6c495ce8853fdb23f2e5adcdb4d9c6a4177839a384d154ea355a00941f2571af"
        },
        "downloads": -1,
        "filename": "streamlit_raw_echarts-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60bc836192f55687c902f78b7841c09a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 773815,
        "upload_time": "2021-09-28T09:54:21",
        "upload_time_iso_8601": "2021-09-28T09:54:21.719400Z",
        "url": "https://files.pythonhosted.org/packages/d3/c9/694a8eeb086cfe3addb7f9fc634c3e0557e7571b8bc3e4667275b9adcc40/streamlit_raw_echarts-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ba2aa8c9f7a8c1d4eb1789c24991884fdcc057012bbe006fd960798eda50cf2",
          "md5": "51514f810f4ced2469c6e6d3511e06fc",
          "sha256": "dfe9e6ced666176f03a8b88817c59b401ed6276fc80a4ad8501ca40b4d10422d"
        },
        "downloads": -1,
        "filename": "streamlit_raw_echarts-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51514f810f4ced2469c6e6d3511e06fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 773838,
        "upload_time": "2021-09-29T10:04:17",
        "upload_time_iso_8601": "2021-09-29T10:04:17.644970Z",
        "url": "https://files.pythonhosted.org/packages/9b/a2/aa8c9f7a8c1d4eb1789c24991884fdcc057012bbe006fd960798eda50cf2/streamlit_raw_echarts-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcd7b5465e839d64028e9f8516fae5e19acc3d22a9f7bc458773f684bfb31e5f",
          "md5": "e8e49350ec0bfaf470c1f280c675ee30",
          "sha256": "a81fd69214b80d6b6fd5d92a933672d40fed7145df74c2274f39e691c120fcf6"
        },
        "downloads": -1,
        "filename": "streamlit_raw_echarts-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8e49350ec0bfaf470c1f280c675ee30",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 773845,
        "upload_time": "2021-11-16T23:00:01",
        "upload_time_iso_8601": "2021-11-16T23:00:01.151342Z",
        "url": "https://files.pythonhosted.org/packages/bc/d7/b5465e839d64028e9f8516fae5e19acc3d22a9f7bc458773f684bfb31e5f/streamlit_raw_echarts-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcd7b5465e839d64028e9f8516fae5e19acc3d22a9f7bc458773f684bfb31e5f",
        "md5": "e8e49350ec0bfaf470c1f280c675ee30",
        "sha256": "a81fd69214b80d6b6fd5d92a933672d40fed7145df74c2274f39e691c120fcf6"
      },
      "downloads": -1,
      "filename": "streamlit_raw_echarts-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e8e49350ec0bfaf470c1f280c675ee30",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 773845,
      "upload_time": "2021-11-16T23:00:01",
      "upload_time_iso_8601": "2021-11-16T23:00:01.151342Z",
      "url": "https://files.pythonhosted.org/packages/bc/d7/b5465e839d64028e9f8516fae5e19acc3d22a9f7bc458773f684bfb31e5f/streamlit_raw_echarts-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}