{
  "info": {
    "author": "",
    "author_email": "Yannick Jadoul <Yannick.Jadoul@mpi.nl>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![PyPI version](https://img.shields.io/pypi/v/pygellermann.svg)](https://pypi.python.org/pypi/pygellermann)\n[![PyPI Python versions](https://img.shields.io/pypi/pyversions/pygellermann.svg)](https://pypi.python.org/pypi/pygellermann)\n[![GitHub Actions status](https://github.com/YannickJadoul/PyGellermann/actions/workflows/ci.yml/badge.svg)](https://github.com/YannickJadoul/PyGellermann/actions/workflows/ci.yml)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/YannickJadoul/PyGellermann/main.svg)](https://results.pre-commit.ci/latest/github/YannickJadoul/PyGellermann/main)\n\n# PyGellerman: A Python Gellermann series generator\n\nThis is a Python implementation of a random genenerator for Gellermann series, pseudorandom binary sequences for human and non-human animal behavioural experiments[^Gellermann1933]. It includes both a graphical user interface (GUI) as well as a simple Python API.\n\nGellermann series aim to avoid inflating a partipant's experimental performance by excluding random sequences that would match simple psychological or behavioural patterns. More specifically, a Gellermann series is a random sequence which satisfies five criteria; each series of length $n$:\n- must contain an equal number (= $n/2$) of As and Bs;\n- must contain at most 3 As or Bs in a row;\n- must contain at least 20% (= $n/5$) As and Bs within both the first and last\nhalf;\n- must contain at most $n/2$ reversals (A-B or B-A transitions);\n- must provide a correct response rate close to 50% chance when responses are provided as simple alternation (ABAB...) or double alternation (AABBAA... and ABBAAB...).\n\n## Installation\nPyGellermann is available on PyPI and can be installed using pip:\n\n    pip install pygellermann\n\nFor details on how to use `pip`, see the [Python Packaging User Guide](https://packaging.python.org/tutorials/installing-packages/) or [pip's User Guide](https://pip.pypa.io/en/stable/user_guide/).\n\nAlternatively, you can download the GUI as a standalone executable for Linux, macOS, and Windows from the [releases page](https://github.com/YannickJadoul/PyGellermann/releases).\n\n**Note**: On macOS, opening the PyGellermann app bundle might at first be blocked because it is not signed or distributed through the App Store. To override this and open the app, right-click on the app bundle and select *Open* from the context menu. This will open a dialog asking you to confirm that you want to open the app. After that, you can open the app by double-clicking on it. For more details, see [the macOS User Guide](https://support.apple.com/guide/mac-help/open-a-mac-app-from-an-unidentified-developer-mh40616/mac).\n\n## Usage\n### Graphical User Interface\nAfter installation, you can run the GUI by typing `pygellermann-gui` in your terminal or by running the standalone executable (`PyGellermann`, `PyGellermann.app`, or `PyGellermann.exe`). The following window should appear:\n\n![PyGellermann GUI](https://raw.githubusercontent.com/YannickJadoul/PyGellermann/main/docs/gui.png)\n\nFour parameters can be set to customize the generated Gellermann series:\n- *Sequence length*: The length of each generated sequence.\n- *Number of sequences*: The number of sequences to generate.\n- *Alternation tolerance*: How close to 50% chance level a sequence needs to be when compared to single or double alternation.\n- *Choices*: The two possible choices for each stimulus in the sequences.\n- *Random seed*: The seed for the random number generator, allowing to deterministically generate the same sequences.\n\nThe *Generate* button will then generate the requested number of sequences, and display them in the table underneath.\n\nFinally, the generated Gellermann series can be copied to the clipboard (*Copy*) or saved to a CSV file (*Save...*).\n\n### Python API\nThe Python API consists of 4 simple functions:\n\n- `is_gellermann_series(s, alternation_tolerance=DEFAULT_ALTERNATION_TOLERANCE)`\n\n  Check if a binary sequence is a Gellermann series.\n\n  #### Parameters\n  - `s` : `Sequence[Any]`\n\n    A binary series (i.e., containing two different elements) of even length.\n\n  - `alternation_tolerance` : `float`, optional\n\n    The tolerance around 50% chance level compared to single or double alternation, a value between 0 and 0.5 (default: 0.1).\n\n  #### Returns\n  - `bool`\n\n    True if the given sequence is a Gellermann series, False otherwise.\n\n  #### Raises\n  - `ValueError`\n\n    If the sequence length is not even, or if the sequence contains more than two different elements, or if the alternation tolerance is not between 0 and 0.5.\n\n  #### Examples\n  ```pycon\n  >>> is_gellermann_series(['B', 'B', 'A', 'B', 'A', 'B', 'B', 'A', 'A', 'A'])\n  True\n  >>> is_gellermann_series('1112212122122211', alternation_tolerance=0.2)\n  True\n  >>> is_gellermann_series('1112212122122211', alternation_tolerance=0.0)\n  False\n  ```\n\n- `generate_gellermann_series(n, m, choices=('A', 'B'), rng=None, **kwargs)`\n\n  Generate m random Gellermann series of length n.\n\n  #### Parameters\n  - `n` : `int`\n\n    The length of the series.\n\n  - `m` : `int`\n\n    The number of series to generate.\n\n  - `choices` : `Tuple[Any, Any]`, optional\n\n    The two elements of the series (default: ('A', 'B')).\n\n  - `rng` : `np.random.Generator`, optional\n\n    A NumPy random number generator (default: `None`, which uses the default NumPy random number generator).\n\n  - `max_iterations` : `int`, optional\n\n    The maximum number of iterations to try to generate all Gellermann series (default: `None`, which tries indefinitely).\n\n  - `kwargs`\n\n    Additional keyword arguments passed to `is_gellermann_series`.\n\n  #### Yields\n  - `Iterator[Sequence[Any]]`\n\n    A generator object with m Gellermann series of length n.\n\n\n- `generate_all_gellermann_series(n, choices, **kwargs)`\n  Generate all Gellermann series of length n in lexicographic order.\n\n  #### Parameters\n  - `n` : `int`\n\n    The length of the series.\n\n  - `choices` : `Tuple[Any, Any]`, optional\n\n      The two elements of the series (default: ('A', 'B')).\n\n  - `kwargs`\n\n      Additional keyword arguments passed to `is_gellermann_series`.\n\n  #### Yields\n  - `Iterator[Sequence[Any]]`\n\n    A generator object with all Gellermann series of length n.\n\n\n- `generate_gellermann_series_table(n, m, long_format: bool = False, **kwargs)`\n\n  Generate a Pandas DataFrame of m random Gellermann series of length n.\n\n  In the wide format, the DataFrame has columns 'series_i', 'element_0', 'element_1', ..., 'element_{n-1}', and each row contains a full series. In the long format, the DataFrame has columns 'series_i', 'element_i', 'element', and each row contains a single element of a series.\n\n  #### Parameters\n  - `n` : `int`\n\n    The length of the series.\n\n  - `m` : `int`\n\n    The number of series to generate.\n\n  - `long_format` : `bool`, optional\n\n    If True, the DataFrame is in long format (default: False).\n\n  - `kwargs`\n\n    Additional keyword arguments passed to `generate_gellermann_series`.\n\n  #### Returns\n  - `pd.DataFrame`\n\n    A Pandas DataFrame of m random Gellermann series of length n.\n\n\n## License\n\nPyGellermann is released under the GNU General Public License v3 or later. See the LICENSE file for details.\n\nPyGellermann was developed at the [Comparative Bioacoustics Group](https://www.mpi.nl/department/comparative-bioacoustics/20) of the [Max Planck Institute for Psycholinguistics](https://www.mpi.nl/), Nijmegen, the Netherlands.\n\n## References\n\n[^Gellermann1933]: Gellermann, L. W. (1933). Chance orders of alternating stimuli in visual discrimination experiments. *The Journal of Genetic Psychology, 42*, 206-208.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pygellermann",
    "package_url": "https://pypi.org/project/pygellermann/",
    "platform": null,
    "project_url": "https://pypi.org/project/pygellermann/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pygellermann/0.1.0/",
    "requires_dist": [
      "pandas",
      "qtpy",
      "PyQt6",
      "pyqtdarktheme"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python Gellermann series generator",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17134763,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c8e6006f26053569e1a7c7ec568a50a347b158d3b8d1a5e5d4662b5766e2e1a",
          "md5": "b256e4cc7ee978fa1abca3800f210f9f",
          "sha256": "ff2dde10fb86d137f1eb2ade9125e5abb846fce159291ea7f92b01943e1233a9"
        },
        "downloads": -1,
        "filename": "pygellermann-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b256e4cc7ee978fa1abca3800f210f9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23184,
        "upload_time": "2023-03-02T21:26:56",
        "upload_time_iso_8601": "2023-03-02T21:26:56.006417Z",
        "url": "https://files.pythonhosted.org/packages/6c/8e/6006f26053569e1a7c7ec568a50a347b158d3b8d1a5e5d4662b5766e2e1a/pygellermann-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4de3c23a6b691f1ec7a84831c95babebb4e38892781ebf5c92cfa8f3f8d00014",
          "md5": "12f7b83d04bb90e01fa088401e1eddd9",
          "sha256": "19b2e1562a617bde69fe13608bed2d83aa10c53909edca533833e4a5e63608f5"
        },
        "downloads": -1,
        "filename": "pygellermann-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "12f7b83d04bb90e01fa088401e1eddd9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 59813,
        "upload_time": "2023-03-02T21:26:58",
        "upload_time_iso_8601": "2023-03-02T21:26:58.214290Z",
        "url": "https://files.pythonhosted.org/packages/4d/e3/c23a6b691f1ec7a84831c95babebb4e38892781ebf5c92cfa8f3f8d00014/pygellermann-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c8e6006f26053569e1a7c7ec568a50a347b158d3b8d1a5e5d4662b5766e2e1a",
        "md5": "b256e4cc7ee978fa1abca3800f210f9f",
        "sha256": "ff2dde10fb86d137f1eb2ade9125e5abb846fce159291ea7f92b01943e1233a9"
      },
      "downloads": -1,
      "filename": "pygellermann-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b256e4cc7ee978fa1abca3800f210f9f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23184,
      "upload_time": "2023-03-02T21:26:56",
      "upload_time_iso_8601": "2023-03-02T21:26:56.006417Z",
      "url": "https://files.pythonhosted.org/packages/6c/8e/6006f26053569e1a7c7ec568a50a347b158d3b8d1a5e5d4662b5766e2e1a/pygellermann-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4de3c23a6b691f1ec7a84831c95babebb4e38892781ebf5c92cfa8f3f8d00014",
        "md5": "12f7b83d04bb90e01fa088401e1eddd9",
        "sha256": "19b2e1562a617bde69fe13608bed2d83aa10c53909edca533833e4a5e63608f5"
      },
      "downloads": -1,
      "filename": "pygellermann-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "12f7b83d04bb90e01fa088401e1eddd9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 59813,
      "upload_time": "2023-03-02T21:26:58",
      "upload_time_iso_8601": "2023-03-02T21:26:58.214290Z",
      "url": "https://files.pythonhosted.org/packages/4d/e3/c23a6b691f1ec7a84831c95babebb4e38892781ebf5c92cfa8f3f8d00014/pygellermann-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}