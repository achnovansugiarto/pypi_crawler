{
  "info": {
    "author": "Nathan A. Rooy",
    "author_email": "nathanrooy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![gh-actions-ci](https://img.shields.io/github/workflow/status/nathanrooy/taxicab/ci?style=flat-square)](https://github.com/nathanrooy/taxicab/actions?query=workflow%3Aci)\n[![GitHub license](https://img.shields.io/github/license/nathanrooy/taxicab?style=flat-square)](https://github.com/nathanrooy/taxicab/blob/main/LICENSE)\n[![codecov](https://img.shields.io/codecov/c/github/nathanrooy/taxicab.svg?style=flat-square)](https://codecov.io/gh/nathanrooy/taxicab)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/taxicab.svg?style=flat-square)](https://pypi.org/pypi/taxicab/)\n[![PyPi Version](https://img.shields.io/pypi/v/taxicab.svg?style=flat-square)](https://pypi.org/project/taxicab)\n\n## Taxicab\nWhen routing between two points of longitude and latitude, the built in routing functionality in <a href=\"https://github.com/gboeing/osmnx\">OSMnx</a> will find the nearest network nodes and route between those. This assumption is fine, and works for many applications but when you need routing with a little more accuracy you'll want to consider using Taxicab. Below are a few examples which highlight Taxicab usecases:\n\n<b>When the nearest nodes are not that close:</b>\n<img style=\"padding-top:5em;\" src=\"https://github.com/nathanrooy/taxicab/blob/main/docs/ex_03.jpg\">\n\n<b>When routing along a single edge:</b>\n<img src=\"https://github.com/nathanrooy/taxicab/blob/main/docs/ex_01.jpg\">\n\n<b>When routing along short routes:</b>\n<img src=\"https://github.com/nathanrooy/taxicab/blob/main/docs/ex_02.jpg\">\n\n## Installation\nThe easiest way to use Taxicab is probably via a PyPi install:\n```sh\npip install taxicab\n```\nYou can also install directly from this repo:\n```sh\npip install git+https://github.com/nathanrooy/taxicab\n```\n\n## Example usage\nTaxicab is designed to be used as a drop in replacement for the standard routing functionality found on OSMnx. So, like usual, download a portion of the OpenStreetMap graph:\n\n```python\nfrom osmnx import graph_from_bbox\nxmin, xmax = -84.323, -84.305\nymin, ymax =  39.084,  39.092\nG = graph_from_bbox(ymax, ymin, xmin, xmax, network_type='drive', simplify=True)\n```\n\nNow, specify your origin and destination:\n```python\norig = (39.08710, -84.31050)\ndest = (39.08800, -84.32000) \n```\n\nCompute the route via the following:\n```python\nimport taxicab as tc\nroute = tc.distance.shortest_path(G, orig, dest)\n```\n\nWhich can then be plotted:\n```python\ntc.plot.plot_graph_route(G, route)\n```\n<img src=\"https://github.com/nathanrooy/taxicab/blob/main/docs/readme.png\">\n\n\nThe returned route tuple is comprised of four elements:\n- Route length in meters\n```python\n>>> route[0]\n669.0529395595279\n```\n- List of node IDs representing the bulk of the route (this is identical to OSMnx).\n```python\n>>> route[1]\n[197546973, 2090608743, 197656382, 197633479]\n```\n- And two partial edges represented by `shapely.geometry.linestring.LineString` objects. If populated, these represent the first and last segments of the route that extend from the first or last node to some point along that edge.\n```python\n>>> route[2], route[3]\n(<shapely.geometry.linestring.LineString at 0x7f1aa08067c0>,\n <shapely.geometry.linestring.LineString at 0x7f1a3ccbd580>)\n```\n\n## User reference\n```python\ntaxicab.distance.shortest_route(G, orig, dest)\n```\nParameters:\n- G : (networkx.MultiDiGraph) – input graph\n- orig : (tuple) – a (lat, lng) or (y, x) point\n- dest : (tuple) – a (lat, lng) or (y, x) point\n\nReturns: (tuple)\n- route[0] : float – distance in meters of computed route.\n- route[1] : path – list of node IDs constituting the shortest path (this is identical to routes found in OSMnx).\n- route[2] : `shapely.geometry.linestring.LineString` – a partial edge representing the first non-complete edge in the route.\n- route[3] : `shapely.geometry.linestring.LineString` – a partial edge representing the last non-complete edge in the route.\n- Note that if a route is successfully computed the distance will always be returned. However, depending on the length of the route and the underlying network, elements 1, 2, or 3 may be `null`.\n\n```python\ntaxicab.plot.plot_graph_route()\n```\nUsed exactly the same way as `osmnx.plot.plot_graph_route` except that it uses the route produced by Taxicab instead. See OSMnx function reference [<a href=\"https://osmnx.readthedocs.io/en/stable/osmnx.html#osmnx.plot.plot_graph_route\">here</a>] \n\n\n## Performance Considerations\nComing soon...\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nathanrooy/taxicab",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Taxicab",
    "package_url": "https://pypi.org/project/Taxicab/",
    "platform": "",
    "project_url": "https://pypi.org/project/Taxicab/",
    "project_urls": {
      "Homepage": "https://github.com/nathanrooy/taxicab"
    },
    "release_url": "https://pypi.org/project/Taxicab/0.0.3/",
    "requires_dist": [
      "matplotlib (>=3.3.0)",
      "networkx (>=2.5)",
      "numpy (>=1.19)",
      "osmnx (>=1.0.0)",
      "Shapely (>=1.7)"
    ],
    "requires_python": ">=3.5",
    "summary": "Accurate routing for Open Street Maps and OSMnx",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10490683,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f9b30fea765d65fdb24fa92d7294d7ac683acb2b83ca9be3f8702ff0b3c3416",
          "md5": "d502e9ac3be1ad38a57c53f39e56e7e6",
          "sha256": "eb76432a5ce8f0fe7a3e67ac380b6720b91ebb44ccd9a43d74593f99479be7f2"
        },
        "downloads": -1,
        "filename": "Taxicab-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d502e9ac3be1ad38a57c53f39e56e7e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8565,
        "upload_time": "2021-02-21T20:38:00",
        "upload_time_iso_8601": "2021-02-21T20:38:00.025300Z",
        "url": "https://files.pythonhosted.org/packages/0f/9b/30fea765d65fdb24fa92d7294d7ac683acb2b83ca9be3f8702ff0b3c3416/Taxicab-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "130491096b29d2c79a30c30feaa52b2f98376b5bdddc2e3f40a9bcbbfe811b52",
          "md5": "4c0f196a1b3244d970dfee75012bc994",
          "sha256": "8902e70fe62d9a63496e5835aeba79f0c40af1c0e8414342169dd043fdc3a5e2"
        },
        "downloads": -1,
        "filename": "Taxicab-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4c0f196a1b3244d970dfee75012bc994",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6893,
        "upload_time": "2021-02-21T20:38:01",
        "upload_time_iso_8601": "2021-02-21T20:38:01.323305Z",
        "url": "https://files.pythonhosted.org/packages/13/04/91096b29d2c79a30c30feaa52b2f98376b5bdddc2e3f40a9bcbbfe811b52/Taxicab-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d91474b3129e678eb50331d6d2e416da5003c7779fce54bf19fa01b9228ec33",
          "md5": "e1b19fe05356d2950f6fc41f04c51334",
          "sha256": "fba2e500b8e80eaf0c9636ebf5e4a283fad8324535cdeb720e4ad3295b7968e3"
        },
        "downloads": -1,
        "filename": "Taxicab-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1b19fe05356d2950f6fc41f04c51334",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7746,
        "upload_time": "2021-05-11T22:29:21",
        "upload_time_iso_8601": "2021-05-11T22:29:21.286613Z",
        "url": "https://files.pythonhosted.org/packages/6d/91/474b3129e678eb50331d6d2e416da5003c7779fce54bf19fa01b9228ec33/Taxicab-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c69c218ceb64a5d83497e046a88992d3b625f112bfce72cf113eaaeb37c87c48",
          "md5": "f84e0872e27b36220bac3ae9d3052d68",
          "sha256": "b61418e5138cda91b33b2dd163ecce5a8abf6328ad47bf5fa257535cbfea509e"
        },
        "downloads": -1,
        "filename": "Taxicab-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f84e0872e27b36220bac3ae9d3052d68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6977,
        "upload_time": "2021-05-11T22:29:23",
        "upload_time_iso_8601": "2021-05-11T22:29:23.232715Z",
        "url": "https://files.pythonhosted.org/packages/c6/9c/218ceb64a5d83497e046a88992d3b625f112bfce72cf113eaaeb37c87c48/Taxicab-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c49cfdadfeb192922f622f992a944966936890b9832ee92b7d97de528e764e8d",
          "md5": "c15c57ae74bd0be8f88766dc9d1197bd",
          "sha256": "42670b5aad89fb5ccb76098a4b6ee5ef0aa8eb80133dc3b4974bc0cebde93deb"
        },
        "downloads": -1,
        "filename": "Taxicab-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c15c57ae74bd0be8f88766dc9d1197bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7772,
        "upload_time": "2021-05-27T17:44:19",
        "upload_time_iso_8601": "2021-05-27T17:44:19.470188Z",
        "url": "https://files.pythonhosted.org/packages/c4/9c/fdadfeb192922f622f992a944966936890b9832ee92b7d97de528e764e8d/Taxicab-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f90db979d726495b9cea60068adad22df762a3bbd188d3a821496d83c58f541",
          "md5": "34ebef3ad0a1254a1ea48317ff77f748",
          "sha256": "ed0fcabc690f45197dd012a98a74530d5f11e442700e4e0ea8c6dcd87cc6c22f"
        },
        "downloads": -1,
        "filename": "Taxicab-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "34ebef3ad0a1254a1ea48317ff77f748",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6992,
        "upload_time": "2021-05-27T17:44:20",
        "upload_time_iso_8601": "2021-05-27T17:44:20.536481Z",
        "url": "https://files.pythonhosted.org/packages/9f/90/db979d726495b9cea60068adad22df762a3bbd188d3a821496d83c58f541/Taxicab-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c49cfdadfeb192922f622f992a944966936890b9832ee92b7d97de528e764e8d",
        "md5": "c15c57ae74bd0be8f88766dc9d1197bd",
        "sha256": "42670b5aad89fb5ccb76098a4b6ee5ef0aa8eb80133dc3b4974bc0cebde93deb"
      },
      "downloads": -1,
      "filename": "Taxicab-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c15c57ae74bd0be8f88766dc9d1197bd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 7772,
      "upload_time": "2021-05-27T17:44:19",
      "upload_time_iso_8601": "2021-05-27T17:44:19.470188Z",
      "url": "https://files.pythonhosted.org/packages/c4/9c/fdadfeb192922f622f992a944966936890b9832ee92b7d97de528e764e8d/Taxicab-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f90db979d726495b9cea60068adad22df762a3bbd188d3a821496d83c58f541",
        "md5": "34ebef3ad0a1254a1ea48317ff77f748",
        "sha256": "ed0fcabc690f45197dd012a98a74530d5f11e442700e4e0ea8c6dcd87cc6c22f"
      },
      "downloads": -1,
      "filename": "Taxicab-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "34ebef3ad0a1254a1ea48317ff77f748",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 6992,
      "upload_time": "2021-05-27T17:44:20",
      "upload_time_iso_8601": "2021-05-27T17:44:20.536481Z",
      "url": "https://files.pythonhosted.org/packages/9f/90/db979d726495b9cea60068adad22df762a3bbd188d3a821496d83c58f541/Taxicab-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}