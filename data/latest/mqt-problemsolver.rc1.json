{
  "info": {
    "author": "",
    "author_email": "Nils Quetschlich <nils.quetschlich@tum.de>, Lukas Burgholzer <lukas.burgholzer@jku.at>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
    ],
    "description": "[![Lint](https://github.com/cda-tum/MQTProblemSolver/actions/workflows/linter.yml/badge.svg)](https://github.com/cda-tum/MQTProblemSolver/actions/workflows/linter.yml)\n[![CodeCov](https://github.com/cda-tum/MQTProblemSolver/actions/workflows/coverage.yml/badge.svg)](https://github.com/cda-tum/MQTProblemSolver/actions/workflows/coverage.yml)\n[![Deploy to PyPI](https://github.com/cda-tum/MQTProblemSolver/actions/workflows/deploy.yml/badge.svg)](https://github.com/cda-tum/MQTProblemSolver/actions/workflows/deploy.yml)\n\n# MQT ProblemSolver\n\nMQT ProblemSolver is a framework to utilize quantum computing as a technology for users with little to no\nquantum computing knowledge.\nAll necessary quantum parts are embedded by domain experts while the interfaces provided are similar to the ones\nclassical solver provide:\n\n<p align=\"center\">\n<img src=\"img/framework.png\" height=300px>\n</p>\n\nWhen provided with a problem description, MQT ProblemSolver offers a selection of implemented quantum algorithms.\nThe user just has to chose one and all further (quantum) calculation steps are encapsulated within MQT ProblemSolver.\nAfter the calculation finished, the respective solution is returned - again in the same format as classical\nsolvers use.\n\nIn the current implementation, two case studies are conducted:\n\n1. A SAT Problem: Constraint Satisfaction Problem\n2. A Graph-based Optimization Problem: Travelling Salesman Problem\n\n# A SAT Problem: Constraint Satisfaction Problem\n\nThis exemplary implementation can be found in the [CSP_example.ipynb](src/mqt/problemsolver/csp_example.ipynb) Jupyter notebook.\nHere, the solution to a Kakuro riddle with a 2x2 grid can be solved for arbitrary sums `s0` to `s3`:\n\n<p align=\"center\">\n<img src=\"img/kakuro.png\" height=100px>\n</p>\n\nMQT ProblemSolver will return valid values to `a`, `b`, `c`, and `d` if a solution exists.\n\n# A Graph-based Optimization Problem: Travelling Salesman Problem\n\nThis exemplary implementation can be found in the [TSP_example.ipynb](src/mqt/problemsolver/tsp_example.ipynb) Jupyter notebook.\nHere, the solution to a Travelling Salesman Problem with 4 cities can be solved for arbitrary distances `dist_1_2` to `dist_3_4`between the cities.\n\n<p align=\"center\">\n<img src=\"img/tsp.png\" height=200px>\n</p>\n\nMQT ProblemSolver will return the shortest path visiting all cities as a list.\n\n# Repository Structure\n\n```\n.\n├── src\n│ └── mqt\n│     └── problemsolver\n│        └── csp.py\n│        └── csp_example.ipynb\n│        └── tsp.py\n│        └── tsp_example.ipynb\n└── tests\n    └── ...\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "MQT,quantum computing",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mqt.problemsolver",
    "package_url": "https://pypi.org/project/mqt.problemsolver/",
    "platform": null,
    "project_url": "https://pypi.org/project/mqt.problemsolver/",
    "project_urls": {
      "Bug Tracker": "https://github.com/cda-tum/mqtproblemsolver/issues",
      "Discussions": "https://github.com/cda-tum/mqtproblemsolver/discussions",
      "Homepage": "https://github.com/cda-tum/mqtproblemsolver",
      "Research": "https://www.cda.cit.tum.de/research/quantum/"
    },
    "release_url": "https://pypi.org/project/mqt.problemsolver/0.1.0/",
    "requires_dist": [
      "qiskit (~=0.36)",
      "numpy (~=1.23.3)",
      "matplotlib (~=3.5.1)",
      "mqt.ddsim (~=1.11.0)",
      "networkx (~=2.8.6)",
      "python-tsp (~=0.3.1)",
      "mqt.problemsolver[test] ; extra == 'coverage'",
      "coverage[toml] (~=6.5.0) ; extra == 'coverage'",
      "pytest-cov (~=4.0.0) ; extra == 'coverage'",
      "mqt.problemsolver[coverage] ; extra == 'dev'",
      "pytest (>=7) ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "MQT ProblemSolver - A MQT tool for Solving Problems Using Quantum Computing",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15534054,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "770f4c7e66424980b04663beec082ac27e7d3e7fb5bfc3a08851537bb872df48",
          "md5": "ce901044fdaad85c9dbe501b5be648f3",
          "sha256": "eacfdabcb3ef7ea970f1ce6ca1c5e004e43d47b37bc683381c68fb0704abc628"
        },
        "downloads": -1,
        "filename": "mqt.problemsolver-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce901044fdaad85c9dbe501b5be648f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 57908,
        "upload_time": "2022-10-26T07:24:00",
        "upload_time_iso_8601": "2022-10-26T07:24:00.788585Z",
        "url": "https://files.pythonhosted.org/packages/77/0f/4c7e66424980b04663beec082ac27e7d3e7fb5bfc3a08851537bb872df48/mqt.problemsolver-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a6aa2828304f5982df63bd4017d7f1b1189f4111d38c2013a39a4cf60fa8821",
          "md5": "2f7d25c2aed178105ce195dfdd7de4c7",
          "sha256": "303c3485ccf2fc91ff48c49933a76435c6bb1fbce6da95dd221c7dbff6ae8b0b"
        },
        "downloads": -1,
        "filename": "mqt.problemsolver-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2f7d25c2aed178105ce195dfdd7de4c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 615097,
        "upload_time": "2022-10-26T07:24:02",
        "upload_time_iso_8601": "2022-10-26T07:24:02.467901Z",
        "url": "https://files.pythonhosted.org/packages/9a/6a/a2828304f5982df63bd4017d7f1b1189f4111d38c2013a39a4cf60fa8821/mqt.problemsolver-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "770f4c7e66424980b04663beec082ac27e7d3e7fb5bfc3a08851537bb872df48",
        "md5": "ce901044fdaad85c9dbe501b5be648f3",
        "sha256": "eacfdabcb3ef7ea970f1ce6ca1c5e004e43d47b37bc683381c68fb0704abc628"
      },
      "downloads": -1,
      "filename": "mqt.problemsolver-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ce901044fdaad85c9dbe501b5be648f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 57908,
      "upload_time": "2022-10-26T07:24:00",
      "upload_time_iso_8601": "2022-10-26T07:24:00.788585Z",
      "url": "https://files.pythonhosted.org/packages/77/0f/4c7e66424980b04663beec082ac27e7d3e7fb5bfc3a08851537bb872df48/mqt.problemsolver-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a6aa2828304f5982df63bd4017d7f1b1189f4111d38c2013a39a4cf60fa8821",
        "md5": "2f7d25c2aed178105ce195dfdd7de4c7",
        "sha256": "303c3485ccf2fc91ff48c49933a76435c6bb1fbce6da95dd221c7dbff6ae8b0b"
      },
      "downloads": -1,
      "filename": "mqt.problemsolver-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2f7d25c2aed178105ce195dfdd7de4c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 615097,
      "upload_time": "2022-10-26T07:24:02",
      "upload_time_iso_8601": "2022-10-26T07:24:02.467901Z",
      "url": "https://files.pythonhosted.org/packages/9a/6a/a2828304f5982df63bd4017d7f1b1189f4111d38c2013a39a4cf60fa8821/mqt.problemsolver-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}