{
  "info": {
    "author": "Michael Aigner, Florian Preis",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "The Graph Converter is a tool for creating a graph representation out of the content of PDFs.\n\nA graph representation can act as the basis for further document processing steps.\n\nGeometric relationships are encapsulated. By those, a document structure can be retrieved.\n\nThe tool works independent of different document layouts.\n\nThe graph construction can be controlled via parameter settings mentioned subsequently.\n\nFurthermore, layout-based optimizations without the need parameter tweaks are supported using a regression estimation based on document layout characteristics.\n\nThe processing of PDF documents is done using the ``PDFContentConverter`` library.\n\nHow-to\n========\n\n* Pass the path of the PDF file which is wanted to be converted to ``GraphConverter``.\n\n* Call the function ``convert()``. The document graph representations are returned page-wise as a list of ``networkx`` graphs.\n\n* Media boxes of a PDF can be accessed using ``get_media_boxes()``, the page count over ``get_page_count()``\n\nExample call: \n\n\tconverter = GraphConverter(pdf)\n\n\tresult = converter.convert()\n\nA file is the only parameter mandatory for a graph construction.\n\nBeside the graph conversion, media boxes of a document can be accessed using ``get_media_boxes()`` and the page count over ``get_page_count()``.\n\nGeneral document layout characteristics are stored in a ``converter.meta`` object.\n\nA more detailed example usage is also given in ``Tester.py``.\n\nSettings\n==========\n\nGeneral parameters:\n\n* ``file``: file name\n\n* ``merge_boxes``: indicating if PDF text boxes should be graph nodes, based on visual rectangles present in documents.\n\n* ``regress_parameters``: indicating if graph parameters are regressed or used as a priori optimized default ones.\n\nEdge restrictions:\n\n* ``use_font``: differing font size\n\n* ``use_width``: differing width\n\n* ``use_rect``: nodes contained in differing visual structures\n\n* ``use_horizontal_overlap``: indicating if horizontal edges should be built on overlap. If not, default deltas are used.\n\n* ``use_vertical_overlap``: indicating if vertical edges should be built on overlap. If not, default deltas are used.\n\nEdge thresholds:\n\n* ``page_ratio_x``: maximal relative horizontal distance of two nodes where an edge can be created\n\n* ``page_ratio_y``: maximal relative vertical distance of two nodes where an edge can be created\n\n* ``x_eps``: alignment epsilon for vertical edges in points if ``use_horizontal_overlap`` is not enabled\n\n* ``y_eps``: alignment epsilon for horizontal edges in points if ``use_vertical_overlap`` is not enabled\n\n* ``font_eps_h``: indicates how much font sizes of nodes are allowed to differ as a constraint for building horizontal edges when ``use_font`` is enabled\n\n* ``font_eps_v``: indicates how much font sizes of nodes are allowed to differ as a constraint for building vertical edges when ``use_font`` is enabled\n\n* ``width_pct_eps``: relative width difference of nodes as a condition for vertical edges if ``use_width`` is enabled\n\n* ``width_page_eps``: indicating at which maximal width of a node the width should act as an edge condition if ``use_width`` is enabled\n\nProject Structure\n===================\n\n* ``GraphConverter.py``: contains the ``GraphConverter`` class for converting documents into graphs.\n\n* ``util``:\n\n  * ``constants``: \n\n  * ``StorageUtil``: store/load functionalities\n* ``Tester.py``: Python script for testing the ``GraphConverter``\n\n* ``pdf``: example pdf input files for tests\n\nOutput Format\n===============\n\nAs a result, a list of ``networkx`` graphs is returned.\n\nEach graph encapsulates a structured representation of a single page.\n\nEdges are attributed with the following features:\n\n* ``direction``: shows the direction of an edge.\n\n    * ``v``: Vertical edge\n\n    * ``h``: Horizontal edge\n\n    * ``l``: Rectangular loop. This represents a novel concept encapsulating structural characteristics of document segments by observing if two different paths end up in the same node.\n\n* ``length``: Scaled length of an edge\n\n* ``lengthx_phys``: Horizontal edge length\n\n* ``lengthy_phys``: Vertical edge length\n\n* ``weight``: Scaled total length\n\nAll nodes contain the following content attributes:\n\n* ``id``: unique identifier of the PDF element\n\n* ``page``: page number, starting with 0\n\n* ``text``: text of the PDF element\n\n* ``x_0``: left x coordinate\n\n* ``x_1``: right x coordinate\n\n* ``y_0``: top y coordinate\n\n* ``y_1``: bottom y coordinate\n\n* ``pos_x``: center x coordinate\n\n* ``pos_y``: center y coordinate\n\n* ``abs_pos``: tuple containing a page independent representation of ``(pos_x,pos_y)`` coordinates\n\n* ``original_font``: font as extracted by pdfminer\n\n* ``font_name``: name of the font extracted from ``original_font``\n\n* ``code``: font code as provided by pdfminer\n\n* ``bold``: factor 1 indicating that a text is bold and 0 otherwise\n\n* ``italic``: factor 1 indicating that a text is italic and 0 otherwise\n\n* ``font_size``: size of the text in points\n\n* ``masked``: text with numeric content substituted as #\n\n* ``frequency_hist``: histogram of character type frequencies in a text, stored as a tuple containing percentages of textual, numerical, text symbolic and other symbols\n\n* ``len_text``: number of characters\n\n* ``n_tokens``: number of words\n\n* ``tag``: tag for key-value pair extractions, indicating keys or values based on simple heuristics\n\n* ``box``: box extracted by pdfminer Layout Analysis\n\n* ``in_element_ids``: contains IDs of surrounding visual elements such as rectangles or lists. They are stored as a list [left, right, top, bottom]. -1 is indicating that there is no adjacent visual element.\n\n* ``in_element``: indicates based on in_element_ids whether an element is stored in a visual rectangle representation (stored as \"rectangle\") or not (stored as \"none\").\n\nThe media boxes possess the following entries in a dictionary:\n\n* ``x0``: Left x page crop box coordinate\n\n* ``x1``: Right x page crop box coordinate\n\n* ``y0``: Top y page crop box coordinate\n\n* ``y1``: Bottom y page crop box coordinate\n\n* ``x0page``: Left x page coordinate\n\n* ``x1page``: Right x page coordinate\n\n* ``y0page``: Top y page coordinate\n\n* ``y1page``: Bottom y page coordinate\n\n\nFuture Work\n=============\n\n* The ``GraphConverter`` will be extended using OCR processing for images in order to support more unstructured types than solely PDFs.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/MBAigner/GraphConverter/archive/v0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MBAigner/Graph-Converter",
    "keywords": "python,pdf,pdf-converter,graph,graph-algorithms,graph-representation,visibility-graph,document-analysis",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GraphConverter",
    "package_url": "https://pypi.org/project/GraphConverter/",
    "platform": "",
    "project_url": "https://pypi.org/project/GraphConverter/",
    "project_urls": {
      "Download": "https://github.com/MBAigner/GraphConverter/archive/v0.1.tar.gz",
      "Homepage": "https://github.com/MBAigner/Graph-Converter"
    },
    "release_url": "https://pypi.org/project/GraphConverter/0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A tool for creating a graph representation out of the content of PDF documents.",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8156172,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c7f618a3c056de9c34fdfcd07f2718ae47c64cd60c7691f531410a3d3ee6dac",
          "md5": "c5d3ebab690a37f0151ec0c07936d457",
          "sha256": "7832b8c7b56e745d3b74a9f6041cf2eac6a2d185e64550f7a34af0e859396319"
        },
        "downloads": -1,
        "filename": "GraphConverter-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5d3ebab690a37f0151ec0c07936d457",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 498939,
        "upload_time": "2020-09-10T13:53:49",
        "upload_time_iso_8601": "2020-09-10T13:53:49.511986Z",
        "url": "https://files.pythonhosted.org/packages/5c/7f/618a3c056de9c34fdfcd07f2718ae47c64cd60c7691f531410a3d3ee6dac/GraphConverter-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ed99fb398277c80baad70342ddbea4dafb73710285d7636bec580b62876b258",
          "md5": "9c3040c10be0638db94d9555cc2d024e",
          "sha256": "ccc72d4997944955d632f37fd8f48dc7ee65fccb097ab6077be4e7285729f3e6"
        },
        "downloads": -1,
        "filename": "GraphConverter-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9c3040c10be0638db94d9555cc2d024e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 498717,
        "upload_time": "2020-09-10T13:55:16",
        "upload_time_iso_8601": "2020-09-10T13:55:16.004684Z",
        "url": "https://files.pythonhosted.org/packages/9e/d9/9fb398277c80baad70342ddbea4dafb73710285d7636bec580b62876b258/GraphConverter-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51b4a4dbb6a781f222b4aeab8f0b700ee59a8e3cf6ce8d96ba2b04aae23af7d8",
          "md5": "6d6930fe3b68ef6d1690750a2c016ba5",
          "sha256": "051da4b422cc175ae0393596bacafdf2bd77ea53fe807bb1a3b3c1ec882dae06"
        },
        "downloads": -1,
        "filename": "GraphConverter-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6d6930fe3b68ef6d1690750a2c016ba5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 498737,
        "upload_time": "2020-09-10T14:09:19",
        "upload_time_iso_8601": "2020-09-10T14:09:19.574588Z",
        "url": "https://files.pythonhosted.org/packages/51/b4/a4dbb6a781f222b4aeab8f0b700ee59a8e3cf6ce8d96ba2b04aae23af7d8/GraphConverter-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd1ef4a457172892ff7cfeaa0439a904fffd90a0e81dd7f315dbe3bc9a984592",
          "md5": "835866f4c6adc3d9763a5e8ecfdcb9cc",
          "sha256": "4e3bdaf862868e7db67c0ab0f325e3099739fd82b998422e531d80f9d64cd8c7"
        },
        "downloads": -1,
        "filename": "GraphConverter-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "835866f4c6adc3d9763a5e8ecfdcb9cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 498829,
        "upload_time": "2020-09-10T17:08:42",
        "upload_time_iso_8601": "2020-09-10T17:08:42.371346Z",
        "url": "https://files.pythonhosted.org/packages/bd/1e/f4a457172892ff7cfeaa0439a904fffd90a0e81dd7f315dbe3bc9a984592/GraphConverter-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd1ef4a457172892ff7cfeaa0439a904fffd90a0e81dd7f315dbe3bc9a984592",
        "md5": "835866f4c6adc3d9763a5e8ecfdcb9cc",
        "sha256": "4e3bdaf862868e7db67c0ab0f325e3099739fd82b998422e531d80f9d64cd8c7"
      },
      "downloads": -1,
      "filename": "GraphConverter-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "835866f4c6adc3d9763a5e8ecfdcb9cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 498829,
      "upload_time": "2020-09-10T17:08:42",
      "upload_time_iso_8601": "2020-09-10T17:08:42.371346Z",
      "url": "https://files.pythonhosted.org/packages/bd/1e/f4a457172892ff7cfeaa0439a904fffd90a0e81dd7f315dbe3bc9a984592/GraphConverter-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}