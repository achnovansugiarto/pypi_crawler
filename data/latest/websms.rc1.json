{
  "info": {
    "author": "W&Z FinTech GmbH",
    "author_email": "dk@ownly.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "websms\n==============\n\nPython library that allows to send messages using websms platform. \n\nBased on [sms_plusserver](https://github.com/W-Z-FinTech-GmbH/sms_plusserver) package.\n\n\nInstallation\n------------\n\n```\npip install websms\n```\n\n\nUsage\n-----\n\nIn order to use this library users need to have an account on\nwebsms platform (https://websms.com/).\n\n#### Quick start\n\n`websms` provides module-level convenience functions to make sending messages easier:\n\n```python\nfrom websms import configure, send_sms\n\n# Configure service:\nconfigure(username='user', password='pass')\n\n# Send a message:\nsend_sms(\n    recipients_address_list=['+4911122233344'], \n    message_content='Hello!'\n)\n```\n\n#### Configuration\n\n`configure` function allows to set all configuration options. These options\nwill be used by other functions / classes of the module by default.\n\n```python\n\nfrom websms import configure\n\nconfigure(\n    # Your websms credentials (required):\n    username='user',\n    password='pass',\n    # Optional parameters:\n    sender_address='Foo',  # SMS sender address or name\n    sender_address_type='alphanumeric',  # SMS sender address format\n    max_sms_per_message=3,  # Maximum number of messages for a long SMS\n    timeout=60  # Default timeout for service API calls\n)\n```\n\n#### Sending messages\n\nThe easiest way to send a message is to call `send_sms` function:\n\n```python\n>> > from websms import send_sms\n\n>> > send_sms(['+4911122233344'], 'Hello!')\n'006214b5440071843da1'  # Transfer ID - unique message identifier\n```\n\nUser can provide a custom sender name or number in `sender_address` parameter:\n```python\nsend_sms(\n    recipients_address_list=['+4911122233344'], \n    message_content='Hello!',\n    sender_address='+4955544433300', \n    sender_address_type='international'\n)\n```\n\nIn order to test SMS service without sending actual message, user can set\n`test` parameter to `True`:\n```python\nsend_sms(\n    recipients_address_list=['+4911122233344'], \n    message_content='Hello!',\n    test=True\n)\n```\n\nAll API calls are made using HTTP requests to websms web API. User can\nspecify network timeout for each request:\n```python\nsend_sms(\n    recipients_address_list=['+4911122233344'], \n    message_content='Hello!',\n    timeout=30\n)\n```\n\nTo silence exceptions raised due to network errors or errors returned from\nprovider's API, user can set `fail_silently` parameter to `True`:\n```python\nsend_sms(\n    recipients_address_list=['+4911122233344'], \n    message_content='Hello!',\n    fail_silently=True\n)\n```\n\nIn this case, `send_sms` function will return `None` when error occurs.\n\n\n#### Using Object-Oriented API\n\nAll functions of `websms` package can be accessed using object-oriented\nAPI - `SMS` class:\n\n```python\n>> > from websms import SMS\n\n>> > sms = SMS(['+4911122233344'], 'Hello!')\n>> > sms.send()\n'006214b5440071843da1'\n```\n\nAll parameters available in module-level functions are also valid for\nmethods of `SMS` class:\n\n```python\n>> > from websms import SMS\n\n>> > sms = SMS(['+4911122233344'], 'Hello!')\n>> > sms.send(fail_silently=True)\n'006214b5440071843da1'\n```\n\n\n#### Multiple configurations\n\n`webserver` supports global and local configurations.\nBy default, module level functions and classes use global configuration\n(`webserver.default_service`) which can be altered using `configure` function.\nTo create independent configurations' user can create new instance of `SMSService`\nclass and pass it to module-level functions or methods of `SMS` class\nas `service` parameter:\n\n```python\n>> > from websms import SMS, SMSService\n>> > service = SMSService(username='user', password='password')\n>> > sms = SMS(['+4911122233344'], 'Hello!')\n>> > sms.send(service=service)\n'006214b5440071843da1'\n```\n\n#### SMS Response objects\n\nAll technical parameters returned by websms API calls, can be inspected\nby using `post_response` and `state_response` attributes of `SMS` objects.\n\n#### Exceptions\n\n`websms` calls may raise the following exceptions:\n\n* `ConfigurationError`: Service is improperly configured.\n* `CommunicationError`: Unable to communicate to API\n* `RequestError`: API responded with an error\n\nRequirements\n------------\n\n* Python 3.6+\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/W-Z-FinTech-GmbH/websms",
    "keywords": "sms websms message text phone sender mobile",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "websms",
    "package_url": "https://pypi.org/project/websms/",
    "platform": null,
    "project_url": "https://pypi.org/project/websms/",
    "project_urls": {
      "Homepage": "https://github.com/W-Z-FinTech-GmbH/websms"
    },
    "release_url": "https://pypi.org/project/websms/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python library that allows to send messages using websms platform.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13111720,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f98c8c2897e54fd4bc9e6e661aefd49b8919f6bc0e01a1cb3aeabf9f685672ae",
          "md5": "832856a5f41b49b62d26ba9bf13b68e8",
          "sha256": "f31d31faf099bfb2ea0aa9815389caecaf270d809cc254cadd0cdc0ebbd8a922"
        },
        "downloads": -1,
        "filename": "websms-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "832856a5f41b49b62d26ba9bf13b68e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10711,
        "upload_time": "2022-03-08T10:28:48",
        "upload_time_iso_8601": "2022-03-08T10:28:48.247207Z",
        "url": "https://files.pythonhosted.org/packages/f9/8c/8c2897e54fd4bc9e6e661aefd49b8919f6bc0e01a1cb3aeabf9f685672ae/websms-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f98c8c2897e54fd4bc9e6e661aefd49b8919f6bc0e01a1cb3aeabf9f685672ae",
        "md5": "832856a5f41b49b62d26ba9bf13b68e8",
        "sha256": "f31d31faf099bfb2ea0aa9815389caecaf270d809cc254cadd0cdc0ebbd8a922"
      },
      "downloads": -1,
      "filename": "websms-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "832856a5f41b49b62d26ba9bf13b68e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10711,
      "upload_time": "2022-03-08T10:28:48",
      "upload_time_iso_8601": "2022-03-08T10:28:48.247207Z",
      "url": "https://files.pythonhosted.org/packages/f9/8c/8c2897e54fd4bc9e6e661aefd49b8919f6bc0e01a1cb3aeabf9f685672ae/websms-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}