{
  "info": {
    "author": null,
    "author_email": "\"QuantCo, Inc.\" <noreply@quantco.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# multiregex\n\n[![CI](https://github.com/Quantco/multiregex/actions/workflows/ci.yml/badge.svg)](https://github.com/Quantco/multiregex/actions/workflows/ci.yml)\n[![Documentation](https://img.shields.io/badge/docs-latest-success?style=plastic)](https://docs.dev.quantco.cloud/qc-github-artifacts/Quantco/multiregex/latest/index.html)\n\nQuickly match many regexes against a string. Provides 2-10x speedups over naïve regex matching.\n\n## Installation\n\nYou can install the package in development mode using:\n\n```bash\ngit clone git@github.com:quantco/multiregex.git\ncd multiregex\n\n# create and activate a fresh environment named multiregex\n# see environment.yml for details\nmamba env create\nconda activate multiregex\n\npre-commit install\npip install --no-build-isolation -e .\n```\n\n\n## Usage\n\n```py\nimport multiregex\n\n# Create matcher from multiple regexes.\nmy_patterns = [r\"\\w+@\\w+\\.com\", r\"\\w\\.com\"]\nmatcher = multiregex.RegexMatcher(my_patterns)\n\n# Run `re.search` for all regexes.\n# Returns a set of matches as (re.Pattern, re.Match) tuples.\nmatcher.search(\"john.doe@example.com\")\n# => [(re.compile('\\\\w+@\\\\w+\\\\.com'), <re.Match ... 'doe@example.com'>),\n#     (re.compile('\\\\w+\\\\.com'), <re.Match ... 'example.com'>)]\n\n# Same as above, but with `re.match`.\nmatcher.match(...)\n# Same as above, but with `re.fullmatch`.\nmatcher.fullmatch(...)\n```\n\n### Custom prematchers\n\nTo be able to quickly match many regexes against a string, `multiregex` uses\n\"prematchers\" under the hood. Prematchers are lists of non-regex strings of which\nat least one can be assumed to be present in the haystack if the corresponding regex matches.\nAs an example, a valid prematcher of `r\"\\w+\\.com\"` could be `[\".com\"]` and a valid\nprematcher of `r\"(B|b)aNäNa\"` could be `[\"b\"]` or `[\"anäna\"]`.\nNote that prematchers must be all-lowercase (in order for ``multiregex`` to be able to support ``re.IGNORECASE``).\n\nYou will likely have to provide your own prematchers for all but the simplest\nregex patterns:\n\n```py\nmultiregex.RegexMatcher([r\"\\d+\"])\n# => ValueError: Could not generate prematcher : '\\\\d+'\n```\n\nTo provide custom prematchers, pass `(pattern, prematchers)` tuples:\n\n```py\nmultiregex.RegexMatcher([(r\"\\d+\", map(str, range(10)))])\n```\n\nTo use a mixture of automatic and custom prematchers, pass `prematchers=None`:\n\n```py\nmatcher = multiregex.RegexMatcher([(r\"\\d+\", map(str, range(10))), (r\"\\w+\\.com\", None)])\nmatcher.prematchers\n# => {(re.compile('\\\\d+'), {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'}),\n#     (re.compile('\\\\w+\\\\.com'), {'com'})}\n```\n\n### Disabling prematchers\n\nTo disable prematching for certain pattern entirely (ie., always run the regex\nwithout first running any prematchers), pass an empty list of prematchers:\n\n```py\nmultiregex.RegexMatcher([(r\"super complicated regex\", [])])\n```\n\n### Profiling prematchers\n\nTo check if your prematchers are effective, you can use the built-in prematcher \"profiler\":\n\n```py\nyyyy_mm_dd = r\"(19|20)\\d\\d-\\d\\d-\\d\\d\"  # Default prematchers: {'-'}\nmatcher = multiregex.RegexMatcher([yyyy_mm_dd], count_prematcher_false_positives=True)\nfor string in my_benchmark_dataset:\n    matcher.search(string)\nprint(matcher.format_prematcher_false_positives())\n# => For example:\n# FP count | FP rate | Pattern / Prematchers\n# ---------+---------+----------------------\n#      137 |    0.72 | (19|20)\\d\\d-\\d\\d-\\d\\d / {'-'}\n```\n\nIn this example, there were 137 input strings that were matched positive by the prematcher but negative by the regex.\nIn other words, the prematcher failed to prevent slow regex evaluation in 72% of the cases.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": "Jonas Haag <jonas.haag@quantco.com>",
    "name": "multiregex",
    "package_url": "https://pypi.org/project/multiregex/",
    "platform": null,
    "project_url": "https://pypi.org/project/multiregex/",
    "project_urls": {
      "Home": "https://github.com/quantco/multiregex"
    },
    "release_url": "https://pypi.org/project/multiregex/2.0.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Speed up regex matching with non-regex substring \"prematchers\", similar to Bloom filters.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17241578,
  "releases": {
    "1.0.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "892b371543601c6b1a6c4280b54a87754090603f8733e45e926f455d59404899",
          "md5": "d9d0744fd33fcec0f4243531653483fd",
          "sha256": "46fb3545c5a377d9b4756cb197e05f32d6b524014fb17f33c3b5fba8e94c7aea"
        },
        "downloads": -1,
        "filename": "multiregex-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9d0744fd33fcec0f4243531653483fd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6207,
        "upload_time": "2022-05-16T20:20:45",
        "upload_time_iso_8601": "2022-05-16T20:20:45.033511Z",
        "url": "https://files.pythonhosted.org/packages/89/2b/371543601c6b1a6c4280b54a87754090603f8733e45e926f455d59404899/multiregex-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "59ce4f1154777b6e58d492e2eecabfeac820eb6c2bfbe7ab17d7bc9f82860507",
          "md5": "d99acf6d99dbbd8afe2591169d1a16bc",
          "sha256": "c541e90910ed6a5a3762ded8622618f0193f360504e337adbe9d52a1db81534b"
        },
        "downloads": -1,
        "filename": "multiregex-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d99acf6d99dbbd8afe2591169d1a16bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19993,
        "upload_time": "2022-05-16T20:20:47",
        "upload_time_iso_8601": "2022-05-16T20:20:47.704571Z",
        "url": "https://files.pythonhosted.org/packages/59/ce/4f1154777b6e58d492e2eecabfeac820eb6c2bfbe7ab17d7bc9f82860507/multiregex-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "58e5512e74cad2f1996c9522e46564d6589a2677e4db1429af7771147755e769",
          "md5": "92896603673e173343a013fddc43895f",
          "sha256": "b97805b0a69aaaf0d37a88e0597c83b7a9f56d6e3b7a03c648fa7b9c90777e88"
        },
        "downloads": -1,
        "filename": "multiregex-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92896603673e173343a013fddc43895f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7281,
        "upload_time": "2023-03-10T15:22:06",
        "upload_time_iso_8601": "2023-03-10T15:22:06.044061Z",
        "url": "https://files.pythonhosted.org/packages/58/e5/512e74cad2f1996c9522e46564d6589a2677e4db1429af7771147755e769/multiregex-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "3859f36277fecdb19c12d01d0f8ec6f725854cfeab5f571a4f64b7c60191c95d",
          "md5": "5119532726c4050e4d4e77cc5b79c59b",
          "sha256": "0f52a148e1f793a7c7974eb06145db039bb64366bb6758b57899eab8d90f7355"
        },
        "downloads": -1,
        "filename": "multiregex-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5119532726c4050e4d4e77cc5b79c59b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21521,
        "upload_time": "2023-03-10T15:22:45",
        "upload_time_iso_8601": "2023-03-10T15:22:45.439237Z",
        "url": "https://files.pythonhosted.org/packages/38/59/f36277fecdb19c12d01d0f8ec6f725854cfeab5f571a4f64b7c60191c95d/multiregex-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "58e5512e74cad2f1996c9522e46564d6589a2677e4db1429af7771147755e769",
        "md5": "92896603673e173343a013fddc43895f",
        "sha256": "b97805b0a69aaaf0d37a88e0597c83b7a9f56d6e3b7a03c648fa7b9c90777e88"
      },
      "downloads": -1,
      "filename": "multiregex-2.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92896603673e173343a013fddc43895f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7281,
      "upload_time": "2023-03-10T15:22:06",
      "upload_time_iso_8601": "2023-03-10T15:22:06.044061Z",
      "url": "https://files.pythonhosted.org/packages/58/e5/512e74cad2f1996c9522e46564d6589a2677e4db1429af7771147755e769/multiregex-2.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "3859f36277fecdb19c12d01d0f8ec6f725854cfeab5f571a4f64b7c60191c95d",
        "md5": "5119532726c4050e4d4e77cc5b79c59b",
        "sha256": "0f52a148e1f793a7c7974eb06145db039bb64366bb6758b57899eab8d90f7355"
      },
      "downloads": -1,
      "filename": "multiregex-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5119532726c4050e4d4e77cc5b79c59b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21521,
      "upload_time": "2023-03-10T15:22:45",
      "upload_time_iso_8601": "2023-03-10T15:22:45.439237Z",
      "url": "https://files.pythonhosted.org/packages/38/59/f36277fecdb19c12d01d0f8ec6f725854cfeab5f571a4f64b7c60191c95d/multiregex-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}