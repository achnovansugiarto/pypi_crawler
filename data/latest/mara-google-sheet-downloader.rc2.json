{
  "info": {
    "author": "Mara contributors",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Mara Google Sheet Downloader\n\n[![Build Status](https://travis-ci.org/mara/mara-google-sheet-downloader.svg?branch=master)](https://travis-ci.org/mara/mara-google-sheet-downloader)\n[![PyPI - License](https://img.shields.io/pypi/l/mara-google-sheet-downloader.svg)](https://github.com/mara/mara-google-sheet-downloader/blob/master/LICENSE)\n[![PyPI version](https://badge.fury.io/py/mara-google-sheet-downloader.svg)](https://badge.fury.io/py/mara-google-sheet-downloader)\n[![Slack Status](https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&style=social)](https://communityinviter.com/apps/mara-users/public-invite)\n\n\nThis package contains a google sheet downloader to be used with the mara ETL framework:\n\n- Download a Google sheet to a database table\n- Cells can be validated and formatted during download\n\n&nbsp;\n\n## Installation\n\nTo use the library directly, use pip:\n\n```\npip install mara-google-sheet-downloader\n```\n\nor\n\n```\npip install git+https://github.com/mara/mara-google-sheet-downloader.git\n```\n\n&nbsp;\n\n## Example\n\nHere is a pipeline \"gs_demo\" which downloads to a table. This assumes you have a spread sheet under the\nURL https://docs.google.com/spreadsheets/d/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/edit. This sheet must be shared with the\nemail address for which you configured the credentials (see below).\n\nThe spreadsheet contains a worksheet 'test' which contains the following colums:\n\n|city | some_date | amount | already paid? | price | comments |\n|---|---|---|---|---| --- |\n|Berlin | 01.01.2020 | 3 | ja | 2.3 | added by JK on 2020-03-12 |\n\nNote that it doesn't contain an id column at the start!\n\n```python\nfrom mara_pipelines.pipelines import Pipeline, Task\nfrom mara_pipelines.commands.sql import ExecuteSQL\nfrom mara_google_sheet_downloader.mara_integration import DownloadGoogleSpreadsheet\n\npipeline = Pipeline(\n    id='gs_demo',\n    description='A small pipeline that demonstrates the a google sheet download')\n\npipeline.add(Task(\n    id='download_', description='Download a google sheet',\n    commands=[\n        ExecuteSQL(\n            sql_statement=f\"\"\"\n-- Creates the table where the google sheet data should end up in\nDROP TABLE IF EXISTS public.gs_test;\nCREATE TABLE public.gs_test (\nid BIGINT PRIMARY KEY,\ncity TEXT,\nsome_date DATE,\namount INTEGER,\nis_paid BOOLEAN,\nprice DOUBLE PRECISION,\ncomments TEXT\n)\n\"\"\",\n            echo_queries=False,\n        ),\n        DownloadGoogleSpreadsheet(\n            spreadsheet_key='xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',  # from the URL\n            worksheet_name='test',  # worksheet\n            # Validators:\n            # c: counter (additional column, will start at 1 and count each row),\n            # s: string,\n            # d(in_fmt=%d.%m.%Y): date in YYYY.mm.dd format,\n            # i: integer,\n            # b(true:ja,false=nein): boolean with ja/nein interpreted as True/False,\n            # f: float,\n            # s: string\n            # any cell which does not confirm to this spec will fail the import!\n            columns_definition='csd(in_fmt=%d.%m.%Y)ib(true:ja,false=nein)fs',\n            target_table_name='public.gs_test', # table where the data should end up\n            target_db_alias='dwh', # alias of the DB where the data should end up\n            skip_rows=1), # how many rows at the top should be skipped\n    ]),\n)\n```\n\n## Config\n\nThe downloader needs OAuth2 credentials, either use a service account or a user account.\n* For service accounts, see https://gspread.readthedocs.io/en/latest/oauth2.html. All required information is in the\n  downloaded json file.\n* For user account credentials, see https://developers.google.com/sheets/api/quickstart/python, Step 1.\n  For getting the initial refresh token, you can use\n  `flask mara_google_sheet_downloader.generate-user-refresh-token /path/to/downloaded/credential.json`\n\nCredentials will need the scopes `'https://www.googleapis.com/auth/spreadsheets.readonly', 'https://www.googleapis.com/auth/drive.readonly'`.\n\nExample with OAuth2 credentials for a user account:\n\n```python\nfrom mara_app.monkey_patch import patch\nimport mara_google_sheet_downloader.config\npatch(mara_google_sheet_downloader.config.gs_user_account_client_id)(lambda:\"....client_id...\")\npatch(mara_google_sheet_downloader.config.gs_user_account_client_secret)(lambda:\"...client_secret...\")\npatch(mara_google_sheet_downloader.config.gs_user_account_refresh_token)(lambda:\"...initial_refresh_token...\")\n```\n\n## Setup access to sheets to be downloaded\n\nAll sheets which should be accessed by the downloader must be shared with the email address associated with these\ncredentials. This email address is:\n\n* for user account credentials: the email address of the user who created the credentials.\n* for service accounts: the email address of the service account itself (e.g. \"*@*.iam.gserviceaccount.com\").\n  This email address is e.g. included in the json file you can download.\n\n## CLI\n\nThis package contains a small cli app which downloads a google sheet and outputs it as csv.\n\nYou can use it stand alone, see `python -m mara_google_sheet_downloader --help ` for how to use it.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mara/mara-google-sheet-downloader",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mara-google-sheet-downloader",
    "package_url": "https://pypi.org/project/mara-google-sheet-downloader/",
    "platform": "",
    "project_url": "https://pypi.org/project/mara-google-sheet-downloader/",
    "project_urls": {
      "Homepage": "https://github.com/mara/mara-google-sheet-downloader"
    },
    "release_url": "https://pypi.org/project/mara-google-sheet-downloader/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Opinionated lightweight ETL pipeline framework",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7615963,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99e5594ff43a4415301adf5e5204bcc8b308115fece6f2912af21087d56b0538",
          "md5": "c8f3e2326cbbfd5cc8c1187fe41b6645",
          "sha256": "c5f130b0c62eba7a4ed00f6d318ef53b48bb481395b4b226126951efbe3e89b2"
        },
        "downloads": -1,
        "filename": "mara-google-sheet-downloader-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c8f3e2326cbbfd5cc8c1187fe41b6645",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15167,
        "upload_time": "2020-03-31T10:06:37",
        "upload_time_iso_8601": "2020-03-31T10:06:37.211203Z",
        "url": "https://files.pythonhosted.org/packages/99/e5/594ff43a4415301adf5e5204bcc8b308115fece6f2912af21087d56b0538/mara-google-sheet-downloader-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e6593b4905431dcaf8f5569848cbe22830f23630af95482939a6c671aabc9c0",
          "md5": "0f7a4d17af38b6497fd3db93f121cc5d",
          "sha256": "c635bc9acf39efd4c96fa150b7567103c9007ba1fa14a153e0facaf980eb0b85"
        },
        "downloads": -1,
        "filename": "mara-google-sheet-downloader-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0f7a4d17af38b6497fd3db93f121cc5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15967,
        "upload_time": "2020-07-02T15:19:39",
        "upload_time_iso_8601": "2020-07-02T15:19:39.896526Z",
        "url": "https://files.pythonhosted.org/packages/8e/65/93b4905431dcaf8f5569848cbe22830f23630af95482939a6c671aabc9c0/mara-google-sheet-downloader-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e6593b4905431dcaf8f5569848cbe22830f23630af95482939a6c671aabc9c0",
        "md5": "0f7a4d17af38b6497fd3db93f121cc5d",
        "sha256": "c635bc9acf39efd4c96fa150b7567103c9007ba1fa14a153e0facaf980eb0b85"
      },
      "downloads": -1,
      "filename": "mara-google-sheet-downloader-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0f7a4d17af38b6497fd3db93f121cc5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15967,
      "upload_time": "2020-07-02T15:19:39",
      "upload_time_iso_8601": "2020-07-02T15:19:39.896526Z",
      "url": "https://files.pythonhosted.org/packages/8e/65/93b4905431dcaf8f5569848cbe22830f23630af95482939a6c671aabc9c0/mara-google-sheet-downloader-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}