{
  "info": {
    "author": null,
    "author_email": "Vedran Sego <vsego@vsego.org>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# HowIGotHere\n\nA package containing a single function `howigothere` that returns a condensed\nstack preview. Useful for debugging to easily trace how some call was made,\neven through a jungle of calls made by frameworks and other packages.\n\nTo see it in action, you can run\n[`example.py`](https://github.com/vsego/howigothere/blob/master/example.py) or, if\nyou didn't install the package but you only downloaded this repository,\n[`example.sh`](https://github.com/vsego/howigothere/blob/master/example.sh). Both\napproaches require that\n[`settings-collector`](https://pypi.org/project/settings-collector/) is\ninstalled. The result should look like this:\n\n![Screenshot](https://raw.githubusercontent.com/vsego/howigothere/master/images/example.png)\n\n## Content\n\n1. [The name](#the-name)\n2. [Usage](#usage)\n3. [Global setup](#global-setup)\n4. [Local setup](#local-setup)\n\n## The name\n\nThe name of the package is \"How I Got Here?\". If your question is \"How I Go\nThere?\", wherever \"there\" might be, you'll need to ask some other package.\n\n## Usage\n\nMake an import:\n```python\nfrom howigothere import howigothere\n```\nand then call\n```python\nprint(howigothere())  # or logger.debug(howigothere())\n```\nsomewhere in your code.\n\n## Global setup\n\nThis package relies on\n[`settings-collector`](https://pypi.org/project/settings-collector/) to collect\nsettings from various frameworks. This means that you can set it up through\nstandard mechanisms of the framework used by your project.\n\nFor example, if you are using Django, you can set the separator colour by\ndefining `HOWIGOTHERE__COLOR_SEP` (note two underscores before `COLOR`, but\nonly one after it) in your Django settings. The frameworks' settings character\ncasing is respected, so - for example - in TurboGears this will be\n`howigothere__color_sep`\n\nIf you don't use a framework (or, at least, not one supported by\n`settings-collector`), you can also use `sc_settings` (`settings-collector`'s\n`dict`-like equivalent of frameworks' configs) and do something this:\n```python\nfrom settings_collector import sc_settings\n\nsc_settings[\"howigothere__color_sep\"] = colorama.Fore.RED\n```\n\nFor more details, please see the documentation of `settings-collector`.\n\nIf the setup (either in `sc_settings` or in framework's settings) contains\n`settings-collector`'s scopes, you can specify the scope to use like this:\n```python\nhowigothere(namespace=\"some_scope\")\n```\n\n## Local setup\n\nLastly, you can also configure values when calling the function. For example,\n```python\nhowigothere(color_sep=colorama.Fore.RED)\n```\n\nHere is the list of all arguments accepted by the function. All but `namespace`\nare also available in `sc_settings` and frameworks' settings. The default\nvalues are as shown, unless overridden in `sc_settings` or framework's setup.\n\n* `namespace` [default: `None`]: If set, it is used as scope identifier in\n  `settings_collector`.\n* `keep_dirs` [default: 1]: The number of directories to keep in output (`None`\n  to keep them all). For example, if set to `2`, path `/a/b/c/d/e/f.py` will be\n  displayed as `d/e/f.py`. This is to reduce the output while still being able\n  to distinguish between files with the same name.\n* `sep` [default: `\" > \"`]: Separator between calls.\n* `call_format` [default: `\"{function} ({path}:{lineno})\"`]: The format of each\n  call.\n* `no_color` [default: `False`]: If set to `True`, colours won't be used even\n  if they are properly defined. This is useful if you want to have properly\n  coloured printouts most of the times, but you sometimes want to add these to\n  some logging system that doesn't support your preferred way of colouring\n  text.\n* `start_from_dir` [default: `None`]: If set, output is suppressed until the\n  first file having `start_from_dir` as its parent. This can also be a tuple of\n  strings, in which case encountering any of them starts the output.\n\nTo add to those, colours can also be redefined. Their defaults depend on the\npresence of `colorama` package (if it's not there, these are all empty strings\nby default). The displayed defaults assume that `colorama` is installed and\nthat its `Fore` and `Style` constants are imported.\n\n* `color_reset` [default: `Style.RESET_ALL`]: This is added to the end of each\n  colourisable chunk (separator, function name, etc.).\n* `color_sep` [default: `\"\"`, i.e., no colouring]: Colour used for the\n  separators between calls.\n* `color_func`[ default: `Style.BRIGHT + Fore.GREEN`]: Colour used for\n  functions' names in each call.\n* `color_path` [default: `Style.BRIGHT + Fore.CYAN`]: Colour used for path of\n  the each file containing called functions.\n* `color_lineno` [default: `Fore.CYAN`]: Colour used for the line numbers where\n  calls were made.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "debugging",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "howigothere",
    "package_url": "https://pypi.org/project/howigothere/",
    "platform": null,
    "project_url": "https://pypi.org/project/howigothere/",
    "project_urls": {
      "Bug Tracker": "https://github.com/vsego/howigothere/issues",
      "Changelog": "https://github.com/vsego/howigothere/blob/master/CHANGELOG.md",
      "Homepage": "https://github.com/vsego/howigothere"
    },
    "release_url": "https://pypi.org/project/howigothere/1.0.0/",
    "requires_dist": [
      "settings-collector>=1.2.1"
    ],
    "requires_python": ">=3.6",
    "summary": "Python module to create a condensed stack preview",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16136030,
  "releases": {
    "1.0.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "439a0d5497e122f3e45cebe0b4073bd6c292342c2ab73525b81bb1e899ef0630",
          "md5": "0a8847d8eede055b29d069ea95433720",
          "sha256": "43ee7cf16ddd6955a03e735cd227a903cafff3b73384c2fb9b9baeabf26dbb15"
        },
        "downloads": -1,
        "filename": "howigothere-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a8847d8eede055b29d069ea95433720",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6290,
        "upload_time": "2022-12-17T19:04:59",
        "upload_time_iso_8601": "2022-12-17T19:04:59.446933Z",
        "url": "https://files.pythonhosted.org/packages/43/9a/0d5497e122f3e45cebe0b4073bd6c292342c2ab73525b81bb1e899ef0630/howigothere-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "3d34fb174b288d89f8a595f1414c2bb34b82f541169166ac0575f22ddc41c3fd",
          "md5": "5c2ea83c6dd38a1b40f24493baeaef07",
          "sha256": "cb8c312228ea395e93ff179bdabd55aaea70e8ed22115eabf29d205b6f6c985a"
        },
        "downloads": -1,
        "filename": "howigothere-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5c2ea83c6dd38a1b40f24493baeaef07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22017,
        "upload_time": "2022-12-17T19:05:01",
        "upload_time_iso_8601": "2022-12-17T19:05:01.831513Z",
        "url": "https://files.pythonhosted.org/packages/3d/34/fb174b288d89f8a595f1414c2bb34b82f541169166ac0575f22ddc41c3fd/howigothere-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "439a0d5497e122f3e45cebe0b4073bd6c292342c2ab73525b81bb1e899ef0630",
        "md5": "0a8847d8eede055b29d069ea95433720",
        "sha256": "43ee7cf16ddd6955a03e735cd227a903cafff3b73384c2fb9b9baeabf26dbb15"
      },
      "downloads": -1,
      "filename": "howigothere-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a8847d8eede055b29d069ea95433720",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6290,
      "upload_time": "2022-12-17T19:04:59",
      "upload_time_iso_8601": "2022-12-17T19:04:59.446933Z",
      "url": "https://files.pythonhosted.org/packages/43/9a/0d5497e122f3e45cebe0b4073bd6c292342c2ab73525b81bb1e899ef0630/howigothere-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "3d34fb174b288d89f8a595f1414c2bb34b82f541169166ac0575f22ddc41c3fd",
        "md5": "5c2ea83c6dd38a1b40f24493baeaef07",
        "sha256": "cb8c312228ea395e93ff179bdabd55aaea70e8ed22115eabf29d205b6f6c985a"
      },
      "downloads": -1,
      "filename": "howigothere-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5c2ea83c6dd38a1b40f24493baeaef07",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22017,
      "upload_time": "2022-12-17T19:05:01",
      "upload_time_iso_8601": "2022-12-17T19:05:01.831513Z",
      "url": "https://files.pythonhosted.org/packages/3d/34/fb174b288d89f8a595f1414c2bb34b82f541169166ac0575f22ddc41c3fd/howigothere-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}