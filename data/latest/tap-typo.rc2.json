{
  "info": {
    "author": "Typo",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Topic :: Database :: Database Engines/Servers",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "# tap-typo\n\n[Singer](https://singer.io) tap that extracts data from the [Typo](https://www.typo.ai?utm_source=github&utm_medium=tap-typo) platform. The tap produces JSON-formatted data output\nfollowing the [Singer spec](https://github.com/singer-io/getting-started/blob/master/docs/SPEC.md).\n\n- [Usage](#usage)\n  - [Installation](#installation)\n  - [Create a configuration file](#create-a-configuration-file)\n  - [Discovery mode](#discovery-mode)\n  - [Sync mode](#sync-mode)\n  - [Saving state and resuming](#saving-state-and-resuming)\n    - [Saving state messages](#saving-state-messages)\n    - [Creating a State file](#creating-a-state-file)\n    - [Resuming with a State file](#resuming-with-a-state-file)\n  - [Catalog file](#catalog-file)\n- [Typo registration and setup](#typo-registration-and-setup)\n- [Development](#development)\n- [Support](#support)\n\n\n\n## Usage\n\nThis section describes the basic usage of **tap-typo** through an example data extraction from a Typo dataset. It assumes that you already have a Typo account, with an existing repository and a dataset. If you do not meet these prerequisites, please go to [Typo Registration and Setup](#typo-registration-and-setup).\n\n\n\n### Installation\n\nPython 3 is required. It is recommended to create a separate virtual environment for each tap or target as their may be incompatibilities between dependency versions.\n\n```bash\n> pip install tap-typo\n```\n\n\n\n### Create a configuration file\n\nThe config file (usually config.json) is a JSON file describing the tap's settings.\n\nThe following sample configuration can be used as a starting point:\n\n\n```json\n{\n  \"api_key\": \"my_apikey\",\n  \"api_secret\": \"my_apisecret\",\n  \"cluster_api_endpoint\": \"https://cluster.typo.ai/management/api/v1\",\n  \"repository\": \"my_repository\",\n  \"dataset\": \"my_dataset\",\n  \"audit_id\": \"audit_id\",\n  \"output_rfc3339_datetime\": false\n}\n```\n\n**Please note: the `dataset` and `audit_id` parameters are optional. When not specified the tap-typo will automatically run in sync mode using the selected datasets from the catalog.**\n\n- **api_key**, **api_secret** and **cluster_api_endpoint** can be obtained by logging into the [Typo Console](https://console.typo.ai/?utm_source=github&utm_medium=tap-typo), clicking on your username, and then on **My Account**.\n- **repository** and **dataset** correspond to their respective names and **audit_id** is optional and should be only provided when syncing data from an audit.\n- Additionally, a **records_per_page** parameter can be provided to override the number of records requested at once, and a **record_limit** parameter can indicate the maximum number of records that will be obtained when the tap is executed.\n\n\n\n### Discovery mode\n\nIn discovery mode, **tap-typo** will infer the Singer Catalog from the config file and data in Typo. The output can be redirected to a file in order to be modified and used as input to **tap-typo** (see [Catalog file section](#catalog-file)).\n\n```bash\n> tap-typo -c config.json -d > catalog.json\n```\n\n\n\n### Sync mode\n\nSync mode will fetch data from Typo and output to stdout. Each record has two additional fields: `__typo_result`, that can have a value of `Error` or `OK` and `__typo_record_id`, which indicates the record's internal ID in Typo. Before starting the sync, unless a custom Catalog file is provided, Typo will run discovery and build the catalog.\n\n\n```bash\n> tap-typo -c config.json\n```\n\n\n\n### Saving state and resuming\n\n#### Saving state messages\n\nWhen **tap-typo** runs in Sync mode it will emit one [STATE message](https://github.com/singer-io/getting-started/blob/master/docs/SPEC.md#state-message) for every RECORD message emitted.  STATE messages contain a value JSON property with the state information.\n\nA Singer target should output the contents of the value JSON property in a STATE message.  By redirecting this target output to a file, the value property of each STATE message will be stored per line.\n\n```bash\n> tap-typo -c config.json | target-google-bigquery > state-history.txt\n```\n\n\n\n#### Creating a State file\n\nTo resume from a failed or terminated transfer, you will need create a STATE file from the last line in the redirected output (state-history.txt in our example).  Below is an example command that performs the step to create a STATE file, state.json, from state-history.txt.  You may edit this STATE file as necessary. The STATE file can be used as input to **tap-typo** to resume.\n\n```bash\ntail -n 1 state-history.txt > state.json\n```\n\nExample STATE file:\n\n```json\n{\n\t\"bookmarks\": {\n\t\t\"tap-typo-repository-repo1-dataset-dataset1\": {\n\t\t\t\"__typo_record_id\": 26\n\t\t}\n\t}\n}\n```\n\n\n\n#### Resuming with a State file\n\nTo resume by providing a State file, **tap-typo** can be started with a -s parameter and providing a path to a STATE file. **tap-typo** searches the bookmarks property for a key that matches the stream name.  If found, **tap-typo** will try to resume from the location defined in the bookmark.\n\n```bash\n> tap-typo -c config.json -s state.json | target-google-bigquery > state-history.txt\n```\n\n\n\n### Catalog file\n\nA catalog file can be provided by adding the --catalog parameter with a file path. This will prevent the discovery process and use the catalog provided in the file path.\n\n```bash\n> tap-typo -c config.json --catalog catalog.json | target-google-bigquery > state-history.txt\n```\n\n\n\n## Typo registration and setup\n\nIn order to create a Typo account, visit [https://www.typo.ai/signup](https://www.typo.ai/signup?utm_source=github&utm_medium=tap-typo) and follow the instructions.\n\nOnce registered you can log in to the Typo Console ([https://console.typo.ai/](https://console.typo.ai/?utm_source=github&utm_medium=tap-typo)) and go to the Repositories section to create a new Repository.\n\nNext, you can start uploading data by using [target-typo](https://github.com/typo-ai/target-typo). A new dataset will be created automatically when data is submitted.\n\n\n\n## Development\n\nTo work on development of tap-typo, clone the repository, create and activate a new virtual environment, go into the cloned folder and install tap-typo in editable mode.\n\n```bash\ngit clone https://github.com/typo-ai/tap-typo.git\ncd tap-typo\npython3 -m venv .venv\nsource .venv/bin/activate\npip install -e .\n```\n\n\n\n## Support\n\nYou may reach Typo Support at the email address support@ followed by the typo domain or see the full contact information at [https://www.typo.ai](https://www.typo.ai?utm_source=github&utm_medium=tap-typo).\n\n\n\n---\n\nCopyright &copy; 2020 Stitch",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.typo.ai/",
    "keywords": "typo.ai data quality singer tap",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tap-typo",
    "package_url": "https://pypi.org/project/tap-typo/",
    "platform": "",
    "project_url": "https://pypi.org/project/tap-typo/",
    "project_urls": {
      "Homepage": "https://www.typo.ai/"
    },
    "release_url": "https://pypi.org/project/tap-typo/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Typo is the intelligent data quality barrier for enterprise information systems. The Typo tap retrieves results and data from the Typo platform.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7197516,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba0e9f45a199df491ba568266adafdbe546d0c68d40eea978025871fefae1a4a",
          "md5": "9432da0da3804b302dde3086666bc22d",
          "sha256": "c7424755bce6161152a4d81f5261bbfc6245998d2407bd650a20447ce6c4e04c"
        },
        "downloads": -1,
        "filename": "tap_typo-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9432da0da3804b302dde3086666bc22d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13170,
        "upload_time": "2019-12-30T23:10:53",
        "upload_time_iso_8601": "2019-12-30T23:10:53.639553Z",
        "url": "https://files.pythonhosted.org/packages/ba/0e/9f45a199df491ba568266adafdbe546d0c68d40eea978025871fefae1a4a/tap_typo-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65f248ca6659e5fcd92810da03cda81eef7cfff2391efcd510ab40ffdbfa29c6",
          "md5": "7f2986d3339f49c9f4e77b1c21b8bd6d",
          "sha256": "df44cb7a80df1093085ce3dfde91ffc4223c5cd23c59dbf54e0f46fa0b73f20a"
        },
        "downloads": -1,
        "filename": "tap-typo-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7f2986d3339f49c9f4e77b1c21b8bd6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10610,
        "upload_time": "2019-12-30T23:10:56",
        "upload_time_iso_8601": "2019-12-30T23:10:56.222795Z",
        "url": "https://files.pythonhosted.org/packages/65/f2/48ca6659e5fcd92810da03cda81eef7cfff2391efcd510ab40ffdbfa29c6/tap-typo-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b728faf3fa3a6d6e88fcba8b819591e8f6a8bad97e6168e4b008a8b4cf37c95d",
          "md5": "feb15f653fa40c7e4bea0d4351833174",
          "sha256": "0c69872d5099377698e4c83b1fa88dd217c2d515caf5c485a88c8ce2eb8cf783"
        },
        "downloads": -1,
        "filename": "tap-typo-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "feb15f653fa40c7e4bea0d4351833174",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29706,
        "upload_time": "2020-05-08T14:31:57",
        "upload_time_iso_8601": "2020-05-08T14:31:57.294176Z",
        "url": "https://files.pythonhosted.org/packages/b7/28/faf3fa3a6d6e88fcba8b819591e8f6a8bad97e6168e4b008a8b4cf37c95d/tap-typo-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b728faf3fa3a6d6e88fcba8b819591e8f6a8bad97e6168e4b008a8b4cf37c95d",
        "md5": "feb15f653fa40c7e4bea0d4351833174",
        "sha256": "0c69872d5099377698e4c83b1fa88dd217c2d515caf5c485a88c8ce2eb8cf783"
      },
      "downloads": -1,
      "filename": "tap-typo-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "feb15f653fa40c7e4bea0d4351833174",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29706,
      "upload_time": "2020-05-08T14:31:57",
      "upload_time_iso_8601": "2020-05-08T14:31:57.294176Z",
      "url": "https://files.pythonhosted.org/packages/b7/28/faf3fa3a6d6e88fcba8b819591e8f6a8bad97e6168e4b008a8b4cf37c95d/tap-typo-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}