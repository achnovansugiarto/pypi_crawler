{
  "info": {
    "author": "Joey Morris",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: End Users/Desktop",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Security"
    ],
    "description": "# sillypass\n\nIdeally, services would allow you to choose any arbitrary string of characters as your password. Unfortunately, though, some impose silly restrictions such as requiring at least one letter, one number, and one symbol, where the symbol must be one of `!@#$^`. Or they limit you to a small number of characters, such as 12 or even 8. `sillypass` is a Python package and command-line tool that generates random passwords meeting these silly restrictions.\n\n## Installation\n\nTo run `sillypass` as a command-line script, the recommended installation method is through [pipx](https://github.com/pipxproject/pipx): `pipx install sillypass`.\n\nTo use `sillypass` as a package in your project, install it to your virtual environment with `pip install sillypass`. It will also be available as a command-line script in your virtual environment.\n\n## Usage from the command line\n\nYou can run `sillypass` without arguments to produce a decent general-purpose password. Or you can provide arguments to change the password length or require specific character groups (such as digits) to appear a minimum number of times. Run `sillypass --help` for a description of all available arguments.\n\n### Examples\n\nWith no arguments, `sillypass` generates a password containing 24 characters chosen randomly from ASCII letters, digits, and punctuation characters. The resulting password is printed to standard output. For example:\n\n```\n$ sillypass\n<O^Ljc+[9#-a{(Lm-&c`;flZ\n```\n\nDoes your service require fewer characters?\n\n```\n$ sillypass --length 12\nUX\\k#LMpqJDR\n```\n\nDoes your service require at least one uppercase letter, one lowercase letter, and one digit?\n\n```\n$ sillypass --min-upper 1 --min-lower 1 --min-digits 1\n4f5NUp]1Ih=86*+,$g77F.Yj\n```\n\nDoes your service require at least one symbol, but the symbol is limited to a small set of characters?\n\n```\n$ sillypass --min-symbols 1 --symbols \"@#$%_\"\n6I_@vyFs6mdK6UBv0IY6I#mA\n```\n\nDoes your service prohibit symbols?\n\n```\n$ sillypass --symbols \"\"\ndcCnIqcbohv5rBPbpiPiS3WE\n```\n\nDoes your service limit you to uppercase and lowercase ASCII letters only?\n\n```\n$ sillypass --length 24 --min-letters 24\nJwzDWLZDeyHXFsSPmsZqaDiI\n```\n\n### Limitations and workarounds\n\n`sillypass` can't accommodate every potential restriction a service may place on your password. In these cases, it's usually pretty easy to work around this by generating a less restrictive password with `sillypass` and then editing it by hand afterwards.\n\nDoes your service limit your password to no more than 2 symbols? `sillypass` handles minimum-count requirements well, but it doesn't support maximum-count requirements. The easiest approach here is probably to generate a longer password than you want and then delete any extra symbols:\n\n```\n$ sillypass --length 32\nbHc@SrFX0F6kEO(rj!ByHy3v0E^J&X}]\n```\n\nAnd then edit it down to `bHc@SrFX0F6kEO(rjByHy3v0`. A more automated approach would be to make sure the minimum counts of each character group add up to the total length, implying that the minimum counts will be the exact counts:\n\n```\n$ sillypass --length 24 --min-letters 18 --min-digits 4 --min-symbols 2\nvrAIYy&YTHQL9x0[Dg7hSQi0\n```\n\nDoes your service require your password to start with a letter? `sillypass` doesn't support positional restrictions like this. The easiest approach is probably to keep generating passwords until you get one that starts with a letter. A more direct approach (but longer to type) would be to combine two calls to `sillypass`:\n\n```\n$ echo $(sillypass --length 1 --min-letters 1)$(sillypass --length 23)\nY:vI$F_MT]K5wfyT/WNymdLX\n```\n\n## Usage as an imported package\n\nYou can use `sillypass` in your Python project by importing it as a package. It is a very simple package, exposing two functions:\n\n- `create_password()`\n- `create_counts()`\n\nand a set of pre-defined character groups:\n\n- `LETTERS`\n- `UPPERCASE`\n- `LOWERCASE`\n- `DIGITS`\n- `SYMBOLS`\n\nUse `create_password` to generate a random string containing a specified number of characters from various character groups. For example:\n\n```\nimport secrets\nfrom sillypass import create_password\n\nrng = secrets.SystemRandom()\n\ncounts = {\n    \"abc\": 5,\n    \"123456\": 1,\n    \"@\": 1,\n}\n\npassword = create_password(counts=counts, rng=rng)\n```\n\nwould create a password with 7 characters, 5 of which are chosen from \"a\", \"b\", or \"c\" (repeating the same character multiple times is allowed); 1 of which is chosen from \"1\", \"2\", \"3\", \"4\", \"5\", or \"6\"; and 1 of which would be \"@\".\n\nUse `create_counts` to create a dictionary suitable for passing to `create_password`. It accepts parameters that mimic the command-line script. For example:\n\n```\nfrom sillypass import create_counts\n\ncounts = create_counts(\n    length=24,\n    min_upper=1,\n    min_lower=1,\n    min_digits=1,\n)\n```\n\nwould create the following dictionary:\n\n```\n{\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\": 1,\n    \"abcdefghijklmnopqrstuvwxyz\": 1,\n    \"0123456789\" 1,\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~\": 21,\n}\n```\n\nThat last entry is the \"remainder\" group, formed by the union of letters, digits, and symbols by default. (You can provide your own remainder group with the `remainder` argument.) Its count is computed to pad the length to the total desired length.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/rjmorris/sillypass",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sillypass",
    "package_url": "https://pypi.org/project/sillypass/",
    "platform": "",
    "project_url": "https://pypi.org/project/sillypass/",
    "project_urls": {
      "Homepage": "https://gitlab.com/rjmorris/sillypass"
    },
    "release_url": "https://pypi.org/project/sillypass/1.0.0/",
    "requires_dist": null,
    "requires_python": ">= 3.6",
    "summary": "Generate random passwords following silly rules like 1 letter, 1 number, 1 symbol",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7857041,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaf52400eb7b6e5b5ebfe773e0b1bf2a8e0f6447c3f0479abef6c52dbff5cf4d",
          "md5": "63c4bc589de25a33eba1a4fe9bdb4c49",
          "sha256": "c9a19d69a9bd13c0b8912641787defeefebfe4ea711348542d204d2c27bff8f8"
        },
        "downloads": -1,
        "filename": "sillypass-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63c4bc589de25a33eba1a4fe9bdb4c49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.6",
        "size": 7079,
        "upload_time": "2020-07-31T19:05:28",
        "upload_time_iso_8601": "2020-07-31T19:05:28.915788Z",
        "url": "https://files.pythonhosted.org/packages/ea/f5/2400eb7b6e5b5ebfe773e0b1bf2a8e0f6447c3f0479abef6c52dbff5cf4d/sillypass-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab5b62ed4c2bb21985841affd9947ed28c4956710c4a42bb8bf96ed2cbb16a0a",
          "md5": "b8c1f326a63020a7df0ef481296b40be",
          "sha256": "fdde8289c7da65d933eac4f6decb5cce704808ae8861216a61237017632aafe2"
        },
        "downloads": -1,
        "filename": "sillypass-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b8c1f326a63020a7df0ef481296b40be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 6333,
        "upload_time": "2020-07-31T19:05:31",
        "upload_time_iso_8601": "2020-07-31T19:05:31.306366Z",
        "url": "https://files.pythonhosted.org/packages/ab/5b/62ed4c2bb21985841affd9947ed28c4956710c4a42bb8bf96ed2cbb16a0a/sillypass-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eaf52400eb7b6e5b5ebfe773e0b1bf2a8e0f6447c3f0479abef6c52dbff5cf4d",
        "md5": "63c4bc589de25a33eba1a4fe9bdb4c49",
        "sha256": "c9a19d69a9bd13c0b8912641787defeefebfe4ea711348542d204d2c27bff8f8"
      },
      "downloads": -1,
      "filename": "sillypass-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "63c4bc589de25a33eba1a4fe9bdb4c49",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">= 3.6",
      "size": 7079,
      "upload_time": "2020-07-31T19:05:28",
      "upload_time_iso_8601": "2020-07-31T19:05:28.915788Z",
      "url": "https://files.pythonhosted.org/packages/ea/f5/2400eb7b6e5b5ebfe773e0b1bf2a8e0f6447c3f0479abef6c52dbff5cf4d/sillypass-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab5b62ed4c2bb21985841affd9947ed28c4956710c4a42bb8bf96ed2cbb16a0a",
        "md5": "b8c1f326a63020a7df0ef481296b40be",
        "sha256": "fdde8289c7da65d933eac4f6decb5cce704808ae8861216a61237017632aafe2"
      },
      "downloads": -1,
      "filename": "sillypass-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b8c1f326a63020a7df0ef481296b40be",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.6",
      "size": 6333,
      "upload_time": "2020-07-31T19:05:31",
      "upload_time_iso_8601": "2020-07-31T19:05:31.306366Z",
      "url": "https://files.pythonhosted.org/packages/ab/5b/62ed4c2bb21985841affd9947ed28c4956710c4a42bb8bf96ed2cbb16a0a/sillypass-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}