{
  "info": {
    "author": "Rodrigo Garcia fork of Shawn Seymour",
    "author_email": "rodrigo.garcia@despgar.com, shawn@devshawn.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# kafka-healthcheck\n\nA simple healthcheck wrapper to monitor Kafka.\n\nKafka Healthcheck is a simple server that provides a singular API endpoint to determine the health of a Kafka instance. This can be used to alert or take action on unhealthy Kafka instances.\n\nThe service checks the health by sending `kafkacat` about that [kafkacat](https://github.com/edenhill/kafkacat)\n\nThis project is a copy \"[devshawn](https://github.com/devshawn/zookeeper-healthcheck)\" whit modifications for use `kafkacat`\n\n## Usage\nKafka Healthcheck can be installed via `pip`. Both `python` and `pip` are required, as well as `kafkacat`.\n\n### Command-Line\nInstall `kafka-healthcheck` via `pip`:\n\n```bash\npip install kafka-healthcheck\n```\n\nTo start the healthcheck server, run:\n\n```bash\nkafka-healthcheck\n```\n\nThe server will now be running on [localhost:9290][localhost].\n\n## Configuration\nKafka Healthcheck can be configured via command-line arguments or by environment variables.\n\n#### Port\nThe port for the `kafka-healthcheck` API.\n\n| Usage                 | Value              |\n|-----------------------|--------------------|\n| Environment Variable  | `HEALTHCHECK_PORT` |\n| Command-Line Argument | `--port`           |\n| Default Value         | `9290`             |\n\n#### Kafka Host\nThe host of the Kafka instance to run the health check against. This is used with `kafkacat`.\n\n| Usage                 | Value                    |\n|-----------------------|--------------------------|\n| Environment Variable  | `HEALTHCHECK_KAFKA_HOST` |\n| Command-Line Argument | `--kafka-host`           |\n| Default Value         | `localhost`              |\n\n#### Kafka Port\nThe port of the Kafka instance to run the health check against. This is used with `kafkacat`.\n\n| Usage                 | Value                    |\n|-----------------------|--------------------------|\n| Environment Variable  | `HEALTHCHECK_KAFKA_PORT` |\n| Command-Line Argument | `--kafka-port`           |\n| Default Value         | `9092`                   |\n\n#### Log Level\nThe level of logs to be shown by the application.\n\n| Usage                 | Value                               |\n|-----------------------|-------------------------------------|\n| Environment Variable  | `HEALTHCHECK_LOG_LEVEL`             |\n| Command-Line Argument | `--log-level`                       |\n| Default Value         | `INFO`                              |\n| Valid Values          | `DEBUG`, `INFO`, `WARNING`, `ERROR` |\n\nAll healthy responses are logged at `DEBUG`. Unhealthy responses are logged at `WARNING`. Any unexpected errors are logged at `ERROR`.\n\n## License\nCopyright (c) 2019 Shawn Seymour.\n\nExtended Copyright (c) 2022 Rodrigo Garcia.\n\nLicensed under the [Apache 2.0 license][license].\n\n[localhost]: http://localhost:9290\n[license]: LICENSE\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rodrigongarcia/kafka-healthcheck",
    "keywords": "kafka,health,healthcheck,wrapper,monitor",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kafka-healthcheck",
    "package_url": "https://pypi.org/project/kafka-healthcheck/",
    "platform": "",
    "project_url": "https://pypi.org/project/kafka-healthcheck/",
    "project_urls": {
      "Homepage": "https://github.com/rodrigongarcia/kafka-healthcheck"
    },
    "release_url": "https://pypi.org/project/kafka-healthcheck/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A simple healthcheck wrapper to monitor kafka with kafkacat.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12626236,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da489fdb8b4745e7c1ebb59cf00ae8f11369b77d1603e97841e8af93d2ee15db",
          "md5": "7ebb7a57652adca669b89f7d9cda48d7",
          "sha256": "e81882d339cee74d7c346f43153d018d8948d2e494edd7a662bc25edafa49c82"
        },
        "downloads": -1,
        "filename": "kafka_healthcheck-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ebb7a57652adca669b89f7d9cda48d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11932,
        "upload_time": "2022-01-19T22:32:51",
        "upload_time_iso_8601": "2022-01-19T22:32:51.087093Z",
        "url": "https://files.pythonhosted.org/packages/da/48/9fdb8b4745e7c1ebb59cf00ae8f11369b77d1603e97841e8af93d2ee15db/kafka_healthcheck-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1989a01741bc3111cc8cc4956442999f7ab2839e3ef21e8cfbdf188930f36cf1",
          "md5": "40e9fd3f4ce4803ebe18a47b54efcb6b",
          "sha256": "0a3321b4d333fb1f01977ac7a092dd36330c87a9362ac1bec7aa10549a73541b"
        },
        "downloads": -1,
        "filename": "kafka-healthcheck-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "40e9fd3f4ce4803ebe18a47b54efcb6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8773,
        "upload_time": "2022-01-19T22:32:52",
        "upload_time_iso_8601": "2022-01-19T22:32:52.383040Z",
        "url": "https://files.pythonhosted.org/packages/19/89/a01741bc3111cc8cc4956442999f7ab2839e3ef21e8cfbdf188930f36cf1/kafka-healthcheck-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da489fdb8b4745e7c1ebb59cf00ae8f11369b77d1603e97841e8af93d2ee15db",
        "md5": "7ebb7a57652adca669b89f7d9cda48d7",
        "sha256": "e81882d339cee74d7c346f43153d018d8948d2e494edd7a662bc25edafa49c82"
      },
      "downloads": -1,
      "filename": "kafka_healthcheck-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7ebb7a57652adca669b89f7d9cda48d7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11932,
      "upload_time": "2022-01-19T22:32:51",
      "upload_time_iso_8601": "2022-01-19T22:32:51.087093Z",
      "url": "https://files.pythonhosted.org/packages/da/48/9fdb8b4745e7c1ebb59cf00ae8f11369b77d1603e97841e8af93d2ee15db/kafka_healthcheck-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1989a01741bc3111cc8cc4956442999f7ab2839e3ef21e8cfbdf188930f36cf1",
        "md5": "40e9fd3f4ce4803ebe18a47b54efcb6b",
        "sha256": "0a3321b4d333fb1f01977ac7a092dd36330c87a9362ac1bec7aa10549a73541b"
      },
      "downloads": -1,
      "filename": "kafka-healthcheck-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "40e9fd3f4ce4803ebe18a47b54efcb6b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8773,
      "upload_time": "2022-01-19T22:32:52",
      "upload_time_iso_8601": "2022-01-19T22:32:52.383040Z",
      "url": "https://files.pythonhosted.org/packages/19/89/a01741bc3111cc8cc4956442999f7ab2839e3ef21e8cfbdf188930f36cf1/kafka-healthcheck-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}