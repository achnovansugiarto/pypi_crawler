{
  "info": {
    "author": "guanghui.zhang",
    "author_email": "415558663@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: MacOS X",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Chinese (Simplified)",
      "Operating System :: MacOS",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# Guang-Toolkit 工具包\n\n\n[![CSDN](https://img.shields.io/badge/CSND-光光军-brightgreen.svg)](https://blog.csdn.net/weixin_39334709)\n[![简书](https://img.shields.io/badge/简书-章光辉-ff69b4.svg)](https://www.jianshu.com/u/3b8454e95630)\n\n[![PyPI](https://img.shields.io/pypi/v/guang_toolkit)](https://pypi.org/project/guang-toolkit/)\n[![PyPI - Python Version](https://img.shields.io/badge/python-3.6%2B-blue)](https://pypi.org/project/guang-toolkit/)\n[![PyPI - License](https://img.shields.io/badge/license-MIT-green)](https://github.com/uncleguanghui/guang_toolkit/blob/master/LICENSE.txt)\n![GitHub last commit](https://img.shields.io/github/last-commit/uncleguanghui/guang_toolkit.svg)\n\n本项目为平时写的一些小工具，用于实现特定需求\n\n## 目录\n\n- [贡献指南](#贡献指南)\n- [上手指南](#上手指南)\n    * [环境要求](#环境要求)\n    * [安装](#安装)\n- [教程](#教程)\n  * [天气爬虫](#天气爬虫)\n  * [地址解析与逆解析](#地址解析与逆解析)\n  * [地理哈希](#地理哈希)\n  * [邮箱](#邮箱)\n  * [MySQL数据库](#mysq数据库l)\n  * [Redis数据库](#redis数据库)\n  * [Pickle序列化](#pickle序列化)\n  * [AWS S3](#aws-s3)\n  * [可视化](#可视化)\n- [License](#license)\n\n## 贡献指南\n\n欢迎一起来扩充本模块，请联系 415558663@qq.com 来加入开发者，并参照[贡献指南](https://github.com/uncleguanghui/guang_toolkit/blob/master/CONTRIBUTING.md)\n\n## 上手指南\n\n### 环境要求\n\npython版本：3.6+\n\n\n### 安装\n\n```\npip install guang_toolkit\n```\n\n## 教程\n\n首先，导入模块\n\n```\nimport guang_toolkit as gt\n```\n\n### 天气爬虫\n\n首先初始化爬虫实例，\n\n```\nweather = gt.WeatherCrawler()  # 初始化爬虫实例\n```\n\n实时天气\n\n```\n>>> weather.get_real_time_weather('上海市')\n{\n    \"24h降水\": \"0\", \n    \"aqi_pm25\": \"114\", \n    \"城市\": \"上海\", \n    \"城市编码\": \"101020100\", \n    \"天气\": \"晴\", \n    \"日期\": \"11月19日(星期二)\", \n    \"更新时间\": \"10:07\", \n    \"温度（华氏）\": \"50\", \n    \"温度（摄氏）\": \"10\", \n    \"湿度\": \"44%\", \n    \"风向\": \"东风\", \n    \"风速\": \"<12km/h\"\n}\n```\n\n\n未来一小段时间的天气预报（逐小时）\n\n```\n>>> weather.get_hours_weather('上海市')\n{\n    \"城市\": \"上海市\", \n    \"城市编码\": \"101020100\", \n    \"数据\": [\n        {\n            \"天气\": \"晴\", \n            \"日期\": \"2019111908\", \n            \"温度\": \"8\", \n            \"风向\": \"北风\", \n            \"风速\": \"3~4级\"\n        }, \n        ......\n        {\n            \"天气\": \"晴\", \n            \"日期\": \"2019112007\", \n            \"温度\": \"10\", \n            \"风向\": \"北风\", \n            \"风速\": \"<3级\"\n        }\n    ], \n    \"更新时间\": \"07:30\"\n}\n```\n\n近7天天气预报（实际返回8天的结果，包括昨天）\n\n```\n>>> weather.get_7d_weather('上海市')\n{\n    \"城市\": \"上海市\", \n    \"城市编码\": \"101020100\", \n    \"数据\": [\n        {\n            \"天气\": \"小雨转多云\", \n            \"日期\": \"18日\", \n            \"日期标识\": \"昨天\", \n            \"最低温度\": \"6\", \n            \"最高温度\": \"12\", \n            \"风向\": \"西北风\",\n            \"风速\": \"<3级\"\n        }, \n        ......\n        {\n            \"天气\": \"阴转多云\", \n            \"日期\": \"25日\", \n            \"日期标识\": \"周一\", \n            \"最低温度\": \"12\", \n            \"最高温度\": \"15\", \n            \"风向\": \"东北风\",\n            \"风速\": \"3-4级\"\n        }\n    ], \n    \"更新时间\": \"07:30\"\n}\n```\n\n近15天天气预报（实际返回16天的结果，包括昨天）\n\n```\n>>> weather.get_15d_weather('上海市')\n{\n    \"城市\": \"上海市\", \n    \"城市编码\": \"101020100\", \n    \"数据\": [\n        {\n            \"天气\": \"小雨转多云\", \n            \"日期\": \"18日\", \n            \"日期标识\": \"昨天\", \n            \"最低温度\": \"6\", \n            \"最高温度\": \"12\", \n            \"风向\": \"西北风\",\n            \"风速\": \"<3级\"\n        }, \n        ......\n        {\n            \"天气\": \"多云\", \n            \"日期\": \"3日\", \n            \"日期标识\": \"周二\", \n            \"最低温度\": \"7\", \n            \"最高温度\": \"11\", \n            \"风向\": \"北风\",\n            \"风速\": \"3-4级转<3级\"\n        }\n    ], \n    \"更新时间\": \"07:30\"\n}\n```\n\n历史天气\n\n```\n>>> weather.get_history_weather('上海市', '20190101')\n{\n    \"url\": \"http://www.tianqihoubao.com/lishi/shanghai/20190101.html\", \n    \"城市\": \"上海市\", \n    \"天气\": \"阴/多云\", \n    \"日期\": \"20190101\", \n    \"温度\": \"6℃/2℃\", \n    \"风向风力\": \"北风 1-2级/北风 1-2级\"\n}\n```\n\n### 地址解析与逆解析\n\n本模块用于POI的地址解析与逆解析（基于高德地图）\n\n首先初始化地图实例，\n\n```\ncrawler = gt.AMAPCrawler() # 初始化地图实例\n```\n\n解析单个坐标（逆地理编码）\n```\n>>> crawler.regeocode(121, 31)\n{\n    \"adcode\": \"310118\", \n    \"address\": \"上海市青浦区练塘镇岳荡\", \n    \"city\": \"上海市\", \n    \"district\": \"青浦区\", \n    \"lat\": 31, \n    \"lng\": 121, \n    \"location\": [\n        121, \n        31\n    ], \n    \"province\": \"上海市\"\n}\n```\n\n解析单个地址（地理编码）\n```\n>>> crawler.geocode('上海市嘉定区汽车创新港')\n{\n    \"address\": \"上海市嘉定区汽车创新港\", \n    \"city\": \"上海市\", \n    \"count\": 1, \n    \"district\": \"嘉定区\", \n    \"lat\": 31.27914, \n    \"lng\": 121.195122, \n    \"location\": [\n        121.195122, \n        31.27914\n    ], \n    \"province\": \"上海市\"\n}\n```\n\n批量解析坐标\n```\n>>> crawler.batch_process_regeocode([(121, 31), (116, 39)])\n{\n    \"adcodes\": [\n        \"310118\", \n        \"130632\"\n    ], \n    \"addresses\": [\n        \"上海市青浦区练塘镇岳荡\", \n        \"河北省保定市安新县大王镇334省道\"\n    ], \n    \"cities\": [\n        \"上海市\", \n        \"保定市\"\n    ], \n    \"districts\": [\n        \"青浦区\", \n        \"安新县\"\n    ], \n    \"provinces\": [\n        \"上海市\", \n        \"河北省\"\n    ]\n}\n```\n\n\n批量解析地址\n```\n>>> crawler.batch_process_geocode(['上海市嘉定区汽车创新港', '北京市故宫博物院'])\n{\n    \"adcodes\": [\n        \"310114\", \n        \"110101\"\n    ], \n    \"cities\": [\n        \"上海市\", \n        \"北京市\"\n    ], \n    \"districts\": [\n        \"嘉定区\", \n        \"东城区\"\n    ], \n    \"locations\": [\n        \"121.195122,31.279140\", \n        \"116.397026,39.918058\"\n    ], \n    \"provinces\": [\n        \"上海市\", \n        \"北京市\"\n    ]\n}\n```\n\n### 地理哈希\n\n地理哈希，简单的理解就是把地球表面切割成了一个个网格，精度越大，网格越小。\n\n一个有效的坐标，在确定了精度的情况下，总能映射到某个确定的网格中，这个网格的编号就是哈希值。\n\nPS：精度为7时，网格边长约150米（纬度不同，边长会有差异），已经可以满足大部分的分析需要。\n\n初始化经度、纬度\n\n```\nlng = 121\nlat = 31\n```\n\n查看地理哈希的精度及其误差范围\n\n```\n>>> help(gt.encode)\n            precision |  longitude  |  latitude\n               1      |  5009.4km   |  4992.6km\n               2      |  1252.3km   |   624.1km\n               3      |   156.5km   |     156km\n               4      |    39.1km   |    19.5km\n               5      |     4.9km   |     4.9km\n               6      |     1.2km   |    609.4m\n               7      |    152.9m   |    152.4m\n               8      |     38.2m   |       19m\n               9      |      4.8m   |      4.8m\n               10     |      1.2m   |    59.5cm\n               11     |    14.9cm   |    14.9cm\n               12     |     3.7cm   |     1.9cm\n                      |             |\n            precision |  delta_lng  |  delta_lat\n               1      |  360/2**3   |  180/2**2\n               2      |  360/2**5   |  180/2**5\n               3      |  360/2**8   |  180/2**7\n               4      |  360/2**10  |  180/2**10\n               5      |  360/2**13  |  180/2**12\n               6      |  360/2**15  |  180/2**15\n               7      |  360/2**18  |  180/2**17\n               8      |  360/2**20  |  180/2**20\n               9      |  360/2**23  |  180/2**22\n               10     |  360/2**25  |  180/2**25\n               11     |  360/2**28  |  180/2**27\n               12     |  360/2**30  |  180/2**30\n```\n\n对坐标进行哈希编码，精确到7位（最大误差约150m）\n\n```\n>>> gt.encode(lat, lng, 7)\n'wtw037m'\n```\n\n逆解析哈希值，返回（纬度，经度）\n\n```\n>>> gt.decode('wtw037m')\n(30.999984741210938, 120.99998474121094)\n```\n\n逆解析哈希值，并返回网格的边长（纬度，经度，纬度跨度，经度跨度）\n\n```\n>>> gt.decode_exactly('wtw037m')\n(30.999984741210938, 120.99998474121094, 0.0006866455078125, 0.0006866455078125)\n```\n\n查看哈希值的边界\n\n```\n>>> gt.bbox('wtw037m')\n{\n    \"e\": 121.00067138671875,  # 最大经度\n    \"n\": 31.00067138671875,  # 最大纬度\n    \"s\": 30.999298095703125,  # 最小纬度\n    \"w\": 120.99929809570312  # 最小经度\n}\n```\n\n查看周围相邻的8个哈希值\n\n```\n>>> gt.neighbors('wtw037m')\n['wtw037k', 'wtw037q', 'wtw037s', 'wtw037t', 'wtw037w', 'wtw037h', 'wtw037j', 'wtw037n']\n```\n\n查找半径500米内、指定精度的所有哈希值\n\n```\n>>> gt.hash_neighbors_radius(lat, lng, radius_m=500, precision=7)\n'wtw037q,wtw037g,wtw0376,wtw037y,wtw0374,wtw03e8,wtw037z,wtw03kh,wtw037n,wtw037t,wtw036v,wtw037x,wtw036w,wtw036y,wtw03e2,wtw03kj,wtw036s,wtw037p,wtw037w,wtw037h,wtw037e,wtw036z,wtw037r,wtw037u,wtw037f,wtw037d,wtw037v,wtw036t,wtw03kn,wtw0377,wtw037m,wtw03eb,wtw036g,wtw036f,wtw037j,wtw036u,wtw0375,wtw03db,wtw037s,wtw03e0,wtw037k'\n```\n\n\n### 邮箱\n\n本模块用于发送邮件\n\n首先初始化邮箱实例，\n\n```\nmail = gt.Mail() # 初始化邮箱实例\n```\n\n设置签名（可选）\n```\nmail.set_signature(\n    chinese_name='XXX',\n    english_name='XX X',\n    position='XXX',\n    department='XXX',\n    phone_number=XXXXX,\n    english_company='XXX',\n    chinese_company='XXX',\n    chinese_address='XXX',\n    english_address='XXX',\n)\n```\n\n写邮件\n\n```\nmail.write_mail(\n    receivers='邮箱地址',  # 若给多人发送则用list\n    subject='主题', \n    text='内容',\n    pathes_attachment=['附件的路径']\n)\n```\n\n发邮件\n\n```\nmail.send_mail()\n```\n\n### MySQL数据库\n\n本模块用于操作MySQL数据库，操作更加简单\n\n首先初始化MySQL实例（通过账密），\n\n```\nmysql = gt.MySQL(\n    user_name='xxxx', \n    password='xxxx', \n    host='xxx', \n    port=3306, \n    db_name='xxxx'\n) # 初始化MySQL实例\n```\n\n或者通过配置文件初始化，\n\n```\nmysql = gt.MySQL(path_config='配置文件地址')\n```\n\n执行SQL并返回结果\n\n```\nmysql.execute_sql('show tables;')\n```\n\n执行SQL并将返回值转成DataFrame\n\n```\ndf = mysql.read_sql_to_df('show tables;')\n```\n\n将DataFrame存到mysql里\n\n```\nmysql.to_sql(df, table_name)  # 支持传递更多参数，见pandas的df.to_sql函数\n```\n\n### Redis数据库\n\n本模块用于操作Redis数据库，特点是：\n* 继承自redis.StrictRedis，保留了redis的所有方法\n* 利用连接池来分配、管理和释放数据库连接，提高操作性能\n* 优化了大数据的set、get和delete方法\n\n首先本地已经起了一个Redis服务，然后初始化Redis实例\n\n```\nredis = gt.Redis(db=0)  # 初始化Redis实例\n```\n\n或者连接远程Redis，\n\n```\nredis = gt.Redis(\n    host=远程host, \n    port=远程port, \n    db=0\n)\n```\n\n保存一个值，key为's'\n\n```\nredis.set('s', 1)\n```\n\n查看key为's'的数据\n\n```\n>>> redis.get('s')\n1\n```\n\n删除key为's'的数据\n\n```\nredis.delete('s')\n```\n\n### Pickle序列化\n\n本模块用于磁盘存储数据，特点是：\n* 基于pickle模块，默认用最高的协议（pickle.HIGHEST_PROTOCOL）\n* 取消了pickle对于单个文件大小的限制，优化特大数据的存储\n\n\n保存数据\n```\ngt.pickle_dump(666, 'test.pkl')\n```\n\n读取数据\n\n```\n>>> gt.pickle_load('test.pkl')\n666\n```\n\n### AWS S3\n\n从S3上拉数据，get方法支持批量拉取数据和拉取特定数据\n\n初始化S3实例，\n\n```\ns3 = gt.S3(\n    access_key_id='xxx', \n    secret_access_key='xxx', \n    region='xxx', \n    bucket_name='xxx', \n    endpoint_url='xxx'\n)\n```\n\n或者通过配置文件初始化\n\n```\ns3 = gt.S3(path_config='配置文件地址')\n```\n\n拉取某个文件（目前仅支持csv和parquet格式）\n\n```\ns3.get('aaa/bbb/ccc.csv')\ns3.get('aaa/bbb/ccc.parquet')\n```\n\n\n拉取某个目录下的所有文件（目前仅支持csv和parquet格式）\n\n```\ns3.get('aaa/bbb/ccc', suffix='.csv')\ns3.get('aaa/bbb/ccc', suffix='.parquet')\n```\n\n保存数据到S3上（目前仅支持csv和parquet格式）\n\n```\ns3.set(df, 'aaa/bbb/ccc.csv')\ns3.set(df, 'aaa/bbb/ccc.parquet')\n```\n\n上传文件到S3上\n\n```\ns3.upload_file('local_path', 'remote_path')\n```\n\n下载文件到S3上\n\n```\ns3.download_file('remote_path', 'local_path')\n```\n\n### 可视化\n\n环状分布图\n\n```\ngt.donut([1, 1, 2, 1])\n```\n![](https://upload-images.jianshu.io/upload_images/8888511-d6a378f60408d306.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n地理可视化\n\n首先，初始化中国实例（用于获取最新的行政区划）\n```\nchina = gt.China() # 初始化中国实例\n```\n\n地理可视化，全国、省、市、区都可以画~\n\n```\nchina.plot(adcode_or_name='浙江', subdistrict=1, area_threshold=0.005)\n```\n\n这里解释下参数：\n* adcode_or_name：adcode或者名称，支持模糊名称（如内蒙古自治区、内蒙都一样）\n* subdistrict: 设置绘制下级行政区级数，可选值为0/1/2/3，默认值为0，当绘图对象的本身级别较低时（如县），subdistrict只能为0，以此类推。\n  * 0：不绘制下级行政区，适用于全国/省/市/区；\n  * 1：绘制下一级行政区，适用于全国/省/市；\n  * 2：绘制下两级行政区，适用于全国/省；\n  * 3：绘制下三级行政区，适用于全国；\n* area_threshold: 绘图阈值，面积小于该值的多边形将不再绘制在地图上，该参数用于加速绘图\n\n![](https://upload-images.jianshu.io/upload_images/8888511-700601b554d4d0cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/640)\n\n如果对提供的默认绘图方法不满意，也可以用下面的方法获取到所有边界坐标，然后再自行绘图~\n\n```\nimport matplotlib.pyplot as plt\n\n# 获取所有边界坐标\npolylines = china.get_all_polylines('上海', subdistrict=2)\n\n# 绘图\nif polylines:\n    plt.figure(figsize=(12, 12))\n    for polyline in polylines:\n        plt.plot(polyline[:, 0], polyline[:, 1])\n    plt.axis(\"equal\")\n    plt.show()\nelse:\n    print('找不到边界坐标，请确认 adcode 或名称是否正确，或者 subdistrict 值设置过大')\n```\n![](https://upload-images.jianshu.io/upload_images/8888511-536d99d743493dec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uncleguanghui/guang_toolkit",
    "keywords": "toolkit,mail,geohash,mysql,pickle,s3,weather,china,amap,crawler",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "guang-toolkit",
    "package_url": "https://pypi.org/project/guang-toolkit/",
    "platform": "",
    "project_url": "https://pypi.org/project/guang-toolkit/",
    "project_urls": {
      "Homepage": "https://github.com/uncleguanghui/guang_toolkit"
    },
    "release_url": "https://pypi.org/project/guang-toolkit/3.0.13/",
    "requires_dist": [
      "pandas (>=0.24.2)",
      "openpyxl (>=2.5.12)",
      "numpy (>=1.16.3)",
      "geopy (>=1.14.0)",
      "urllib3 (>=1.21.1)",
      "jinja2 (>=2.10.1)",
      "pymysql (>=0.9.3)",
      "redis (>=3.2.1)",
      "SQLAlchemy (>=1.3.3)",
      "requests (>=2.19.1)",
      "cryptography (>=2.6.1)",
      "python-dateutil (>=2.6)",
      "xlrd (>=1.2.0)",
      "pathlib (>=1.0.1)",
      "shapely (>=1.6.4.post2)",
      "flake8 (>=3.7.7)",
      "mysql-connector-python (>=8.0.16)",
      "matplotlib (>=3.0.3)",
      "boto3 (>=1.9.137)",
      "bs4 (>=0.0.1)",
      "pypinyin (>=0.36.0)",
      "pyarrow (>=0.16.0)"
    ],
    "requires_python": ">=3",
    "summary": "python toolkit",
    "version": "3.0.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6956133,
  "releases": {
    "3.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c30ad45d57bec7e6405610c047cec74a61c322a2362e0607065ae0fd047e8c0d",
          "md5": "a2a0a27bf64c5f73c6943b20606f4ce2",
          "sha256": "424d2247b99d3d150e8e2b33bd0aeb2846ec1c71cc07502eed31ace99539b57e"
        },
        "downloads": -1,
        "filename": "guang_toolkit-3.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2a0a27bf64c5f73c6943b20606f4ce2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 98032,
        "upload_time": "2020-04-01T10:33:20",
        "upload_time_iso_8601": "2020-04-01T10:33:20.367886Z",
        "url": "https://files.pythonhosted.org/packages/c3/0a/d45d57bec7e6405610c047cec74a61c322a2362e0607065ae0fd047e8c0d/guang_toolkit-3.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38537fa85c18e2d51f2da78cd10a6d2ca296d1f69edf4eff37a1882309efdb27",
          "md5": "55da123859423c7632507e5ba7410af7",
          "sha256": "32f9381e5f0674fe6004ec46e5c6cdca8a81546f84cca188dd529583700c3507"
        },
        "downloads": -1,
        "filename": "guang_toolkit-3.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "55da123859423c7632507e5ba7410af7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 99999,
        "upload_time": "2020-04-01T10:33:24",
        "upload_time_iso_8601": "2020-04-01T10:33:24.821858Z",
        "url": "https://files.pythonhosted.org/packages/38/53/7fa85c18e2d51f2da78cd10a6d2ca296d1f69edf4eff37a1882309efdb27/guang_toolkit-3.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53b0317cea0fba544523eeb776c49f9aa89a550a56e0fe61d02e7bedbed55738",
          "md5": "6c61124e1a78b9d18a289a9f2d688c1b",
          "sha256": "835e9c231c93a638531f473d19a770732ffa1a1c4fd9b813a0b77739d7cfecab"
        },
        "downloads": -1,
        "filename": "guang_toolkit-3.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c61124e1a78b9d18a289a9f2d688c1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 98844,
        "upload_time": "2020-04-04T16:00:01",
        "upload_time_iso_8601": "2020-04-04T16:00:01.888424Z",
        "url": "https://files.pythonhosted.org/packages/53/b0/317cea0fba544523eeb776c49f9aa89a550a56e0fe61d02e7bedbed55738/guang_toolkit-3.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c74b4188c38abe6475c349122a424720013e720d6565c9f1eecf08e4a2008131",
          "md5": "b1935ff265d2011e5891f58f5e98b26e",
          "sha256": "0c742e68550eb0d93e4e6df0c6e1d28434bb1431cca47a8f569baa49b5a4aeb8"
        },
        "downloads": -1,
        "filename": "guang_toolkit-3.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "b1935ff265d2011e5891f58f5e98b26e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 101343,
        "upload_time": "2020-04-04T16:00:05",
        "upload_time_iso_8601": "2020-04-04T16:00:05.833701Z",
        "url": "https://files.pythonhosted.org/packages/c7/4b/4188c38abe6475c349122a424720013e720d6565c9f1eecf08e4a2008131/guang_toolkit-3.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3df2fa7c05a8b8560426902699c8f89ccca8e3ef5a45d7a36620ea532f95d274",
          "md5": "8fd284d06f16ce14cc775de83a460951",
          "sha256": "1da0f8e1a95fdcbec15d18cb4fd912649f9366dc414e3788dbdbcdc83a57f1ee"
        },
        "downloads": -1,
        "filename": "guang_toolkit-3.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fd284d06f16ce14cc775de83a460951",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 98981,
        "upload_time": "2020-04-05T14:22:45",
        "upload_time_iso_8601": "2020-04-05T14:22:45.877752Z",
        "url": "https://files.pythonhosted.org/packages/3d/f2/fa7c05a8b8560426902699c8f89ccca8e3ef5a45d7a36620ea532f95d274/guang_toolkit-3.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5308a9a9aae702b8fbeeff2b2e4b0d759239e866e6de26c0866549d01387747",
          "md5": "66f75b421613eab468e1f6958b7fa1b5",
          "sha256": "2e0d6dcf6fa2437260bb32ca89844a26fe5e81f0ac8059812e5191b54c5d6c1e"
        },
        "downloads": -1,
        "filename": "guang_toolkit-3.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "66f75b421613eab468e1f6958b7fa1b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 98218,
        "upload_time": "2020-04-05T14:22:47",
        "upload_time_iso_8601": "2020-04-05T14:22:47.934373Z",
        "url": "https://files.pythonhosted.org/packages/d5/30/8a9a9aae702b8fbeeff2b2e4b0d759239e866e6de26c0866549d01387747/guang_toolkit-3.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d30e15441971240cc9356a2f537ebd3862d00013d098e35d3095c22a266b3ef1",
          "md5": "34a178b2626ab35d803e760c7b658c0e",
          "sha256": "344fb5fb61ea11a7b7327e7d3fe802de3b13671bf6c98e077fc4ce457fb63140"
        },
        "downloads": -1,
        "filename": "guang_toolkit-3.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34a178b2626ab35d803e760c7b658c0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 99105,
        "upload_time": "2020-04-05T14:50:41",
        "upload_time_iso_8601": "2020-04-05T14:50:41.792410Z",
        "url": "https://files.pythonhosted.org/packages/d3/0e/15441971240cc9356a2f537ebd3862d00013d098e35d3095c22a266b3ef1/guang_toolkit-3.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24dcbb5ef71d702e3495624dc2889baad11809fe634befc27152b4ce146ad766",
          "md5": "cf03f10b2c47eaa3f6437012ed1fed36",
          "sha256": "c470e6e08ed10f8487d5d6fab32ff60a4fcfb1d67c9d039366deb2471cb195af"
        },
        "downloads": -1,
        "filename": "guang_toolkit-3.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "cf03f10b2c47eaa3f6437012ed1fed36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 98467,
        "upload_time": "2020-04-05T14:50:43",
        "upload_time_iso_8601": "2020-04-05T14:50:43.703695Z",
        "url": "https://files.pythonhosted.org/packages/24/dc/bb5ef71d702e3495624dc2889baad11809fe634befc27152b4ce146ad766/guang_toolkit-3.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d30e15441971240cc9356a2f537ebd3862d00013d098e35d3095c22a266b3ef1",
        "md5": "34a178b2626ab35d803e760c7b658c0e",
        "sha256": "344fb5fb61ea11a7b7327e7d3fe802de3b13671bf6c98e077fc4ce457fb63140"
      },
      "downloads": -1,
      "filename": "guang_toolkit-3.0.13-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "34a178b2626ab35d803e760c7b658c0e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 99105,
      "upload_time": "2020-04-05T14:50:41",
      "upload_time_iso_8601": "2020-04-05T14:50:41.792410Z",
      "url": "https://files.pythonhosted.org/packages/d3/0e/15441971240cc9356a2f537ebd3862d00013d098e35d3095c22a266b3ef1/guang_toolkit-3.0.13-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24dcbb5ef71d702e3495624dc2889baad11809fe634befc27152b4ce146ad766",
        "md5": "cf03f10b2c47eaa3f6437012ed1fed36",
        "sha256": "c470e6e08ed10f8487d5d6fab32ff60a4fcfb1d67c9d039366deb2471cb195af"
      },
      "downloads": -1,
      "filename": "guang_toolkit-3.0.13.tar.gz",
      "has_sig": false,
      "md5_digest": "cf03f10b2c47eaa3f6437012ed1fed36",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 98467,
      "upload_time": "2020-04-05T14:50:43",
      "upload_time_iso_8601": "2020-04-05T14:50:43.703695Z",
      "url": "https://files.pythonhosted.org/packages/24/dc/bb5ef71d702e3495624dc2889baad11809fe634befc27152b4ce146ad766/guang_toolkit-3.0.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}