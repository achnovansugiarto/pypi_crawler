{
  "info": {
    "author": "rinetd",
    "author_email": "rinetd@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# runer 0.1.8\n\n\nThis is a execute Python library that enables the user to run shell command, ssh command. The library reads ssh config from json or yaml file .\n\n# Requirements\n\n1. Python 3.5 and above\n\n# Installation\n\nTo install this module type the following (for PyPI):\n\n```bash\npip uninstall runer\npip install -U runer -i https://www.pypi.org/simple/\n```\n\npip install pyc-wheel\n\n# Usage\n\nYou can check the **sample.py** file to learn more about usage.\n\n\n1. lazy import\n2. upload without src code \n3. \n\n\nHow can I include only *.pyc files in a python wheel? \n\nWhen creating eggs, it used to be possible to run `python setup.py bdist_egg --exclude-source-files`\n> dist/runer-0.3.3-py3.9.egg\n\nI haven't tried it, but it looks like `pyc-wheel` does precisely that.\n\n`pip install pyc-wheel`\n\n$ `python -m pyc_wheel your_wheel-1.0.0-py3-none-any.whl`\n# Output: your_wheel-1.0.0-py3-none-any.whl\n\n### 1. create egg package\n\n`python3 setup.py bdist_egg --exclude-source-files`\n\n### 2. create archive package\n\nCreate a source distribution. From your root directory:\n\n`python setup.py sdist`\nThis creates a dist/ directory containing a compressed archive of the package (e.g. <PACKAGE_NAME>-<VERSION>.tar.gz in Linux). This file is your source distribution. If it does not automatically contain what you want, then you might consider using a MANIFEST file (see https://docs.python.org/distutils/sourcedist).\n\n### 3. create whl package\n\nThere are different types of wheels. However, if your project is pure python and python2/3 compatible create a universal wheel:\n\n`python setup.py bdist_wheel --universal`\n\n### 4. uploading \n\nCreate an account on PYPI: Go to: https://pypi.python.org and select Register. Follow instructions.\n\nCreate an account on testpypi: Go to: https://testpypi.python.org and select Register. Follow instructions.\n\nThe best approach to uploading to PyPI is to use twine.\n\n`pip install twine`\n\n\n### Uploading to testpypi\nThis section shows how to upload a source distribution of your package.\n\nFurther documentation at: https://packaging.python.org/guides/using-testpypi Note: This link includes the option of using a pypirc file to abbreviate some of the command lines below.\n\nA source distribution provides everything needed to build/install the package on any supported platform. Testsuites, documentation and supporting data can also be included.\n\nYou can now upload your package to testpypi as follows. Assuming your source distribution under dist/ is called pyexample-0.1.0.tar.gz:\n\n`twine upload --repository-url https://test.pypi.org/legacy/ dist/pyexample-0.1.0.tar.gz`\nAlternatively, the following line will upload all your generated distrbutions under the dist/ directory. This may be used if you create wheels (see below) in addition to a source distribution.\n\n`twine upload --repository-url https://test.pypi.org/legacy/ dist/*`\nYou will be requested to give your username and password for your testpypi account.\n\nOption: You have the option to digitally sign your package when you upload. You will need a gpg key set up to do this. It should be noted, however, that pip does not currently check gpg signatures when installing - this has to be done manually.\n\nTo digitally sign using your gpg key (e.g. for package pyexample at version 0.1.0):\n\n`gpg --detach-sign -a dist/pyexample-0.1.0.tar.gz`\nA file pyexample-0.1.0.tar.gz.asc will be created. Now upload:\n\n`twine upload --repository-url https://test.pypi.org/legacy/ dist/pyexample-0.1.0.tar.gz pyexample-0.1.0.tar.gz.asc`\nNote: --detach-sign means you are writing the signature into a separate file *.asc\n\nThe package should now be uploaded to: https://testpypi.python.org/pypi\n\nNote how the info/classifiers you supplied in setup.py are shown on the page.\n\nYou can now test pip install from the command line. E.g. To install package pyexample into your user install space:\n\n`pip install --index-url https://test.pypi.org/simple/ pyexample --user`\nUploading to PyPI\nOnce you are happy with the repository in testpyi, uploading to PYPI will be the same command line process, but without having to specify the url arguments. For example, the steps above would simply become:\n\nE.g. To upload all distributions created under dist/\n\n`twine upload dist/*`\nE.g. To upload the source distribution with a gpg signature:\n\n`twine upload dist/pyexample-0.1.0.tar.gz pyexample-0.1.0.tar.gz.asc`\nYou package should now be uploaded to: https://pypi.python.org/pypi\n\nThe package should pip install. E.g:\n\n`pip install pyexample --user`\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rinetd/python-runer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "runer",
    "package_url": "https://pypi.org/project/runer/",
    "platform": "",
    "project_url": "https://pypi.org/project/runer/",
    "project_urls": {
      "Homepage": "https://github.com/rinetd/python-runer"
    },
    "release_url": "https://pypi.org/project/runer/0.3.4/",
    "requires_dist": [
      "paramiko (!=0.0.1,>=2.7.0)",
      "serial (==0.0.97)",
      "PyYAML (==5.4.1)"
    ],
    "requires_python": "",
    "summary": "Python runer lib support shell, ssh ...",
    "version": "0.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16989186,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "303ff363ce608fd1e508e12aad09ef1058babe7cc4470e210335dfb67af226e2",
          "md5": "bb73f78b693f4d78c3c006e889488d76",
          "sha256": "03f924bfd397209fd4145a5a101e7f02c0d1ce41b8c10c6a7760ee406a253f11"
        },
        "downloads": -1,
        "filename": "runer-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb73f78b693f4d78c3c006e889488d76",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19839,
        "upload_time": "2021-03-23T03:10:49",
        "upload_time_iso_8601": "2021-03-23T03:10:49.094708Z",
        "url": "https://files.pythonhosted.org/packages/30/3f/f363ce608fd1e508e12aad09ef1058babe7cc4470e210335dfb67af226e2/runer-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "649cfd4206d13bbd0ae0f04362a2bf11d3242bfaa0b9d4eef7ac663e715cd56d",
          "md5": "d03f8cfa39928e65c17b9cb9ad8b905e",
          "sha256": "b2f337a5fca304291e33cb6c8d4cf01bc65f3c4e3acd3bf07b931a000712bbeb"
        },
        "downloads": -1,
        "filename": "runer-0.1.8-py3.8.egg",
        "has_sig": false,
        "md5_digest": "d03f8cfa39928e65c17b9cb9ad8b905e",
        "packagetype": "bdist_egg",
        "python_version": "0.1.8",
        "requires_python": null,
        "size": 16614,
        "upload_time": "2021-04-20T08:27:00",
        "upload_time_iso_8601": "2021-04-20T08:27:00.098975Z",
        "url": "https://files.pythonhosted.org/packages/64/9c/fd4206d13bbd0ae0f04362a2bf11d3242bfaa0b9d4eef7ac663e715cd56d/runer-0.1.8-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22f1cfa4c4c5df6cda548ca35320467c8d91615c572a36a9b4d2a1fbb59a5421",
          "md5": "ae1fabfe85613de502830672065c6483",
          "sha256": "fea6f675306fa4ee97e7a2fc32bcda82bdc53381c18c3f25751060ad114f87b4"
        },
        "downloads": -1,
        "filename": "runer-0.1.8-py38-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae1fabfe85613de502830672065c6483",
        "packagetype": "bdist_wheel",
        "python_version": "py38",
        "requires_python": null,
        "size": 17060,
        "upload_time": "2021-04-20T08:26:58",
        "upload_time_iso_8601": "2021-04-20T08:26:58.906941Z",
        "url": "https://files.pythonhosted.org/packages/22/f1/cfa4c4c5df6cda548ca35320467c8d91615c572a36a9b4d2a1fbb59a5421/runer-0.1.8-py38-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "421c082704a34f7e1b0974e5b1262916f0e2dc55cb58ddc03a23d43d93e620b7",
          "md5": "28a360149e12c7989f928f7f8d4e7036",
          "sha256": "9470bcf7ef19f13621e5b213beb4ab0c04bc3678d7456955b7ff6f1ffb094fb0"
        },
        "downloads": -1,
        "filename": "runer-0.3.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28a360149e12c7989f928f7f8d4e7036",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27627,
        "upload_time": "2021-10-13T06:49:48",
        "upload_time_iso_8601": "2021-10-13T06:49:48.201673Z",
        "url": "https://files.pythonhosted.org/packages/42/1c/082704a34f7e1b0974e5b1262916f0e2dc55cb58ddc03a23d43d93e620b7/runer-0.3.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f266b211d48833ac3fc09512c9c4dfa1c8693ad86394d7f41d4931a7580be2fc",
          "md5": "edf43b8502974b830ac1bf4740460407",
          "sha256": "a36df71acc23069687b4302f8a5e2e2adc5c3ad33d4dc2df36dd36b5271032a7"
        },
        "downloads": -1,
        "filename": "runer-0.3.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edf43b8502974b830ac1bf4740460407",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 28155,
        "upload_time": "2021-10-18T04:23:50",
        "upload_time_iso_8601": "2021-10-18T04:23:50.199664Z",
        "url": "https://files.pythonhosted.org/packages/f2/66/b211d48833ac3fc09512c9c4dfa1c8693ad86394d7f41d4931a7580be2fc/runer-0.3.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f266b211d48833ac3fc09512c9c4dfa1c8693ad86394d7f41d4931a7580be2fc",
        "md5": "edf43b8502974b830ac1bf4740460407",
        "sha256": "a36df71acc23069687b4302f8a5e2e2adc5c3ad33d4dc2df36dd36b5271032a7"
      },
      "downloads": -1,
      "filename": "runer-0.3.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "edf43b8502974b830ac1bf4740460407",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 28155,
      "upload_time": "2021-10-18T04:23:50",
      "upload_time_iso_8601": "2021-10-18T04:23:50.199664Z",
      "url": "https://files.pythonhosted.org/packages/f2/66/b211d48833ac3fc09512c9c4dfa1c8693ad86394d7f41d4931a7580be2fc/runer-0.3.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}