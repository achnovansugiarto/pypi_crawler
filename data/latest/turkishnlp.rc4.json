{
  "info": {
    "author": "Metehan Cetinkaya",
    "author_email": "metehancet@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: MacOS X",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "Not : Türkçe dökümantasyon aşağıdadır.\n\nSee [Change Log](Changelog.md)\n\n\n# Turkish NLP with Python\n\n## Performance \n\n**System : Processor : 1,6 GHz Intel Core i5 , RAM : 8 GB 1600 MHZ DDR3 , Macbook Air\n\n|  Method    | Execution Time (ms) | Words Count|\n|------------|----------|----------|\n| auto_correct                     | 135 ms                  | 1000 words |\n| is_turkish                       | 1 ms                    | 1000 words |\n| syllabicate_sentence             | 94 ms                   | 1000 words |\n\n\nVery early version of the TurkishNLP. For now it has basically 5 main functions; Detecting Turkish Language, correcting text without whitespace, correcting typos, vowel harmonic detection, Turkish origin detection and syllabication in Turkish words.\n\n## Dataset\nDataset was created by parsing and filtering a Turkish wikipedia dump. \n\n## Getting Started\nTo get started first you need to install the package. With using pip;\n```\npip install turkishnlp\n```\nAnd you can install the most recent version by;\n```\npip install --upgrade turkishnlp\n```\nAfter installing the package succesfully try and import the package.\n\n```python\nimport turkishnlp\n```\n### Downloading the data\nTo download the data first we need to create an instance of TurkishNLP class. So we need to ;\n```python\nfrom turkishnlp import detector\nobj = detector.TurkishNLP()\n```\nAfter creating the instance we can simply call the download function like this;\n\n```python\nobj.download()\n```\nIt will take shortly and after the download it will print out \"Download succesful\". You won't have to download the data again.\n\n### Creating the wordset\nTo create the wordset from data you need to ;\n```python\nobj.create_word_set()\n```\nAnd it will create the wordset and necesary dictionaries.\n\n### Example Usage\nSo there are 5 main functions, detecting if the language is Turkish, Turkish typo correction, vowel harmony detection, Turkish origin detection and syllabication.\n\n### Language Detection\n```python\nprint(obj.is_turkish(\"Ben bugün ankaraya gideceğim belki birşeyler alırım\"))\n```\nWill return us \"True\" along with the accuracy point which is 0.85\n\n### Typo Correction\n\n```python\nlwords = obj.list_words(\"vri kümsi idrae edre ancaka daha güezl oalbilir\")\nprint(obj.auto_correct(lwords))\n```\nWhich will print out ['veri', 'kümesi', 'idare', 'eder', 'ancak', 'daha', 'güzel', 'olabilir']. \"List_words\" method simply splits the text by words with the help of regex. You can simply use \"join\" to make it a sentence again like this;\n\n```python\nlwords = obj.list_words(\"vri kümsi idrae edre ancaka daha güezl oalbilir\")\ncorrected_words = obj.auto_correct(lwords)\ncorrected_string = \" \".join(corrected_words)\n```\nWhich will print out 'veri kümesi idare eder ancak daha güzel olabilir'. \n\n### Syllabication\n\n```python\nobj.syllabicate_sentence(\"Hiç unutmadım, doğudan esen hafif bir yel saçlarını dalgalandırıyordu\")\n```\nAnd it will give you ;\n\n\"[['hiç'], ['u', 'nut', 'ma', 'dım,'], ['do', 'ğu', 'dan'], ['e', 'sen'], ['ha', 'fif'], ['bir'], ['yel'], ['saç', 'la', 'rı', 'nı'], ['dal', 'ga', 'lan', 'dı', 'rı', 'yor', 'du']]\"\n\n### Vowel Harmony\n\nThis is a Turkish language rule. You can check if a word is vowel harmonic by doing this;\n\n\n```python\nobj.is_vowel_harmonic(\"Belki\")\n```\nWhich will return True, since it is vowel harmonic.\n\n### Is Turkish Origin\n\nAgain there are Turkish language rules so you can check if a word is Turkish origin or not. For example;\nThe word 'program' is not a Turkish word. Lets try and check;\n\n```python\nobj.is_turkish_origin(\"program\")\n```\nReturns false. On the other hand the word 'yazılım';\n\n```python\nobj.is_turkish_origin(\"yazılım\")\n```\nGives us True\n\n### Correct Text Without WhiteSpace\nImportant Note : Since this function is based on an another dataset, you need to re-call download function again.\n\nAs it is said in the title this function corrects the text without whitespace. For example you have the word 'türkçedoğaldilişleme'. We call the function and pass the word as the param;\n```python\nobj.correct_text_without_space('türkçedoğaldilişleme')\n```\nWill return us ; 'türkçe doğal dil işleme' as expected. Lets try something longer a random text I have found; 'hidroelektriksantralbarajlardasuyunenerjisikullanılırakelektrikenerjisiüretilensantralehidroelektriksantraladıverilir'\n\n```python\nobj.correct_text_without_space('hidroelektriksantralbarajlardasuyunenerjisikullanılırakelektrikenerjisiüretilensantralehidroelektriksantraladıverilir')\n```\nWill return ; 'hidroelektrik santral baraj l arın da suyun enerjisi kullan ı l ırak elektrik enerjisi üretilen santral e hidroelektrik santral adı veri lir'. As you can see this function is not %100 accurate since it is very dependant on the dataset. If someone to create a clear dataset for this function, I think it will run very smooth with this current approach. Note : This function does not exist in the current Pypi release\n\n\n\n# Python ile Türkçe Dil İşleme\n\nTurkishNLP kütüphanesinin alfa versiyonu. Şimdilik Türkçe dilini tespit etme, Boşluksuz yazılan yazıyı boşluklarına ayırma, Türkçe yazım hatalarını düzeltme, büyük ünlü uyumu kontrolü, Türkçe köken kontrolü ve kelimeleri hecelere ayrıma olmak üzere 5 ana fonksiyonu var\n\n## Veri\nVeri kümesi wikipedia'nın Türkçe dump'ı parselanıp temizlenerek oluşturuldu.\n\n## Başlarken\nÖncelikle başlamadan, pip ile kütüphaneyi yüklemeniz gerekiyor. Şu şekilde;\n```\npip install turkishnlp\n```\nAyrıca şu şekilde yayınlanan son versiyonu indirebilirsiniz;\n```\npip install --upgrade turkishnlp\n```\nYükledikten sonra kütüphaneyi şu şekilde import etmeyi deneyin;\n\n```python\nimport turkishnlp\n```\n### Veriyi indirmek\nVeriyi indirmek için önce TurkishNLP sınıfından türetilmiş bir obje oluşturmamız lazım;\n```python\nfrom turkishnlp import detector\nobj = detector.TurkishNLP()\n```\nObjeyi oluşturduktan sonra indirme metodunu şu şekilde çağırarak indirme işlemini başlatabiliriz ;\n\n```python\nobj.download()\n```\nİndirme işlemi çok uzun sürmeden bitecek ve ardından \"Download Succesful\" yani indirme başarılı manasına gelen bir yazı ekrana basılacak\n\n### Verisetini oluşturmak\nİndirdiğimiz veriden kodun içinde kullanacağımız verisetlerini oluşturmak için basitce;\n```python\nobj.create_word_set()\n```\nYapıyoruz ve işlem tamamlanmış oluyor\n\n### Örnek Kullanım\nBaşlıkta da belirttiğim gibi temel olarak 5 metod var.\n\n### Türkçe Dil Tespiti\n\n```python\nprint(obj.is_turkish(\"Ben bugün ankaraya gideceğim belki birşeyler alırım\"))\n```\nYaptığında göreceğiz ki, ekrana \"True\" bastırıyor ve doğruluk oranı olarak 0.85 döndürüyor.\n\n### Yazım Hatası Düzeltme\n\n```python\nlwords = obj.list_words(\"vri kümsi idrae edre ancaka daha güezl oalbilir\")\nprint(obj.auto_correct(lwords))\n```\nYapıyoruz ve sonuç olarak bize ['veri', 'kümesi', 'idare', 'eder', 'ancak', 'daha', 'güzel', 'olabilir'] listesi veriliyor. Burada \"list_words\" metodunun yaptığı string olarak gelen texti regex yardımıyla kelimelerine ayırmaktır Kelimeleri birleştirmek için Python'ın \"join\" metodu kullanılabilir. Örneğin;\n\n```python\nlwords = obj.list_words(\"vri kümsi idrae edre ancaka daha güezl oalbilir\")\ncorrected_words = obj.auto_correct(lwords)\ncorrected_string = \" \".join(corrected_words)\n```\nYazdıracağı sonuç : 'veri kümesi idare eder ancak daha güzel olabilir'. \n\n### Hecelere Ayırmak \n```python\nobj.syllabicate_sentence(\"Hiç unutmadım, doğudan esen hafif bir yel saçlarını dalgalandırıyordu\")\n```\nYapıyoruz. Ve dönen sonuç;\n\n\"[['hiç'], ['u', 'nut', 'ma', 'dım,'], ['do', 'ğu', 'dan'], ['e', 'sen'], ['ha', 'fif'], ['bir'], ['yel'], ['saç', 'la', 'rı', 'nı'], ['dal', 'ga', 'lan', 'dı', 'rı', 'yor', 'du']]\"\n\n### Büyük Ünlü Uyumu\n\nHerhangi bir kelimenin büyük ünlü uyumuna uyup uymadığını şu şekilde kontrol edebiliriz;\n\n```python\nobj.is_vowel_harmonic(\"Belki\")\n```\n'belki' kelimesi büyük ünlü uyumuna uyduğundan bu işlem bize True döndürecektir\n\n### Türkçe Köken Kontrolü\n\nBir kelimenin Türkçe kökenli olup olmadığını öğrenmek için çeşitli kurallar var. turkishnlp kütüphanesiyle 'program' kelimesinin türkçe kökenli olup olmadığını öğrenmek için;\n\n```python\nobj.is_turkish_origin(\"program\")\n```\nYapıyoruz ve bize False değeri döndürüyor. Öte yandan 'yazılım' kelimesi için\n\n```python\nobj.is_turkish_origin(\"yazılım\")\n```\nYapıyoruz ve bize True değerini döndürüyor\n\n### Boşluksuz Yazılan Yazıyı Düzeltme\nÖnemli Not : Bu fonksiyon farklı bir verikümesine bağlı olduğundan, download fonksiyonunu tekrar çalıştırmanız gerekecektir.\n\nBu fonksiyon başlıkta da belirtildiği gibi boşluksuz olarak yazılan bir yazıyı, boşluklarına ayırıyor. Örneğin,  'türkçedoğaldilişleme' kelimesine sahip olduğumuzu düşünelim. Fonksiyonu çağırıp kelimeyi parametre olarak geçtiğimizde;\n```python\nobj.correct_text_without_space('türkçedoğaldilişleme')\n```\nBize beklendiği gibi ; 'türkçe doğal dil işleme' dönecek. Şimdi internetten rastgele bulup boşluklarını sildiğim bir yazıyı deneyelim; 'hidroelektriksantralbarajlardasuyunenerjisikullanılırakelektrikenerjisiüretilensantralehidroelektriksantraladıverilir'\n\n```python\nobj.correct_text_without_space('hidroelektriksantralbarajlardasuyunenerjisikullanılırakelektrikenerjisiüretilensantralehidroelektriksantraladıverilir')\n```\nBize ; 'hidroelektrik santral baraj l arın da suyun enerjisi kullan ı l ırak elektrik enerjisi üretilen santral e hidroelektrik santral adı veri lir'. Görüldüğü üzere bu fonksiyon kelime kümesine de fazla bağlı olduğu için %100 doğruluk oranıyla çalışmadı. Ancak temiz bir veri kümesi oluşturulduğu takdirde bu yaklaşımla çok daha yüksek bir doğruluk oranı yakalanacağını düşünüyorum. Not : Bu fonksiyon Pypi release'inde mevcut değil",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MeteHanC/turkishnlp",
    "keywords": "turkishnlp,python,nlp,language processing",
    "license": "",
    "maintainer": "Metehan Cetinkaya",
    "maintainer_email": "metehancet@gmail.com",
    "name": "turkishnlp",
    "package_url": "https://pypi.org/project/turkishnlp/",
    "platform": "",
    "project_url": "https://pypi.org/project/turkishnlp/",
    "project_urls": {
      "Homepage": "https://github.com/MeteHanC/turkishnlp"
    },
    "release_url": "https://pypi.org/project/turkishnlp/0.0.61/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python script that processes Turkish language",
    "version": "0.0.61",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5705670,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9533497ed40fc0b0de17fdd8c8587ab25a8de2ab396fe9193015ca3da2fe5974",
          "md5": "d4c3b2fd711c8bf27fde550798964a74",
          "sha256": "900c2b5bb6fc40dce597a954a459e1ff645e43efbf2b0c7e478a765028fb7bdb"
        },
        "downloads": -1,
        "filename": "turkishnlp-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4c3b2fd711c8bf27fde550798964a74",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3698,
        "upload_time": "2018-08-28T20:19:36",
        "upload_time_iso_8601": "2018-08-28T20:19:36.522939Z",
        "url": "https://files.pythonhosted.org/packages/95/33/497ed40fc0b0de17fdd8c8587ab25a8de2ab396fe9193015ca3da2fe5974/turkishnlp-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad9230c823ee9011d24a25f4b5933c897d1da6ebf35800143ce4d5db74656d16",
          "md5": "bf4978b8e416a085337c4a0d7732020c",
          "sha256": "b1cc13b69c38a0cb3e6dc70e31cc8fac3cebaf461a1844e4834956b598bb4a79"
        },
        "downloads": -1,
        "filename": "turkishnlp-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bf4978b8e416a085337c4a0d7732020c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2675,
        "upload_time": "2018-08-28T20:19:37",
        "upload_time_iso_8601": "2018-08-28T20:19:37.985118Z",
        "url": "https://files.pythonhosted.org/packages/ad/92/30c823ee9011d24a25f4b5933c897d1da6ebf35800143ce4d5db74656d16/turkishnlp-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4149e404acc8f433e5c252804611794725983296682b037cf5d0f6ac344eb11",
          "md5": "7f18c41a66784e71eeb57a12fc1105f4",
          "sha256": "75fcbaffb206d7ad03deadddf30a8b626a3257e9cd7584b5082fe77078941f99"
        },
        "downloads": -1,
        "filename": "turkishnlp-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f18c41a66784e71eeb57a12fc1105f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6067,
        "upload_time": "2018-09-16T18:51:26",
        "upload_time_iso_8601": "2018-09-16T18:51:26.224482Z",
        "url": "https://files.pythonhosted.org/packages/d4/14/9e404acc8f433e5c252804611794725983296682b037cf5d0f6ac344eb11/turkishnlp-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5ead3a5b072847e05d123eed0e49dd420b8bd5415b499439499196ab2b1486f",
          "md5": "8ee6310b142e1ff939e71b7a6c29bd3e",
          "sha256": "1e35d5724ec5cb8eb34b0e0f5018c717e7f3ed79a62c09f5bd61b963b2b554ed"
        },
        "downloads": -1,
        "filename": "turkishnlp-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "8ee6310b142e1ff939e71b7a6c29bd3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6474,
        "upload_time": "2019-04-29T17:47:02",
        "upload_time_iso_8601": "2019-04-29T17:47:02.058711Z",
        "url": "https://files.pythonhosted.org/packages/a5/ea/d3a5b072847e05d123eed0e49dd420b8bd5415b499439499196ab2b1486f/turkishnlp-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.61": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d0584e26ea98e5818ba430d6905c4640a526f7a3e59a64d010c42e80a889890",
          "md5": "03896de30d884622f5016f3abb8aff18",
          "sha256": "bf406519e0da42a3fb4d7e66d513cf0d48cd9483e16105a161fc2cd9390fbe7b"
        },
        "downloads": -1,
        "filename": "turkishnlp-0.0.61.tar.gz",
        "has_sig": false,
        "md5_digest": "03896de30d884622f5016f3abb8aff18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8385,
        "upload_time": "2019-08-20T21:09:44",
        "upload_time_iso_8601": "2019-08-20T21:09:44.515293Z",
        "url": "https://files.pythonhosted.org/packages/9d/05/84e26ea98e5818ba430d6905c4640a526f7a3e59a64d010c42e80a889890/turkishnlp-0.0.61.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d0584e26ea98e5818ba430d6905c4640a526f7a3e59a64d010c42e80a889890",
        "md5": "03896de30d884622f5016f3abb8aff18",
        "sha256": "bf406519e0da42a3fb4d7e66d513cf0d48cd9483e16105a161fc2cd9390fbe7b"
      },
      "downloads": -1,
      "filename": "turkishnlp-0.0.61.tar.gz",
      "has_sig": false,
      "md5_digest": "03896de30d884622f5016f3abb8aff18",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8385,
      "upload_time": "2019-08-20T21:09:44",
      "upload_time_iso_8601": "2019-08-20T21:09:44.515293Z",
      "url": "https://files.pythonhosted.org/packages/9d/05/84e26ea98e5818ba430d6905c4640a526f7a3e59a64d010c42e80a889890/turkishnlp-0.0.61.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}