{
  "info": {
    "author": "Jack Heinemann",
    "author_email": "jack@oenoke.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# nasspython\nA wrapper for the NASS Quickstats API for Python, modeled off of the R package documented here: https://github.com/rdinter/usdarnass\n\nYou can find the database here: https://quickstats.nass.usda.gov/\n<hr>\n\n## Functions provided:\n### nass_count\n\n#### Description\nChecks the number of observations that will be returned in a data request. All queries to the QuickStats are limited to 50,000 observations. This is a helpful function in determining how to structurea data request to fit within the 50,000 limit.<br>\n\n#### Arguments\n* Inital argument is your API key for NASS Quickstats\n* <b>source_desc</b>: \"Program\" - Source of data (\"CENSUS\" or \"SURVEY\").  Census program in-cludes the Census of Ag as well as follow up projects. Survey program includesnational, state, and county surveys.\n* <b>sector_desc</b>: \"Sector\"  -  Five  high  level,  broad  categories  useful  to  narrow  down  choices.(\"ANIMALS & PRODUCTS\", \"CROPS\", \"DEMOGRAPHICS\", \"ECONOMICS\",or \"ENVIRONMENTAL\")\n* <b>group_desc</b>: \"Group\" - Subsets within sector (e.g., under sector_desc = \"CROPS\", the groupsare \"FIELD CROPS\", \"FRUIT & TREE NUTS\", \"HORTICULTURE\", and \"VEG-ETABLES\").\n* <b>commodity_desc</b>: \"Commodity\"  -  The  primary  subject  of  interest  (e.g.,  \"CORN\",  \"CATTLE\",\"LABOR\", \"TRACTORS\", \"OPERATORS\").\n* <b>short_desc</b>: \"Data Item\" - A concatenation of six columns:  commodity_desc,  class_desc,prodn_practice_desc, util_practice_desc, statisticcat_desc, and unit_desc.\n* <b>domain_desc</b>: \"Domain\" - Generally another characteristic of operations that produce a partic-ular commodity (e.g., \"ECONOMIC CLASS\", \"AREA OPERATED\", \"NAICSCLASSIFICATION\",  \"SALES\").   For  chemical  usage  data,  the  domain  de-scribes  the  type  of  chemical  applied  to  the  commodity.   The  domain_desc  =\"TOTAL\" will have no further breakouts; i.e., the data value pertains completelyto the short_desc.\n* <b>domaincat_desc</b>: \"Domain Category\" - Categories or partitions within a domain (e.g., under do-main_desc = \"SALES\", domain categories include $1,000 TO $9,999, $10,000TO $19,999, etc).\n* <b>agg_level_desc</b>: \"Geographic Level\" - Aggregation level or geographic granularity of the data.(\"AGRICULTURAL  DISTRICT\",  \"COUNTY\",  \"INTERNATIONAL\",  \"NA-TIONAL\", \"REGION : MULTI-STATE\", \"REGION : SUB-STATE\", \"STATE\",\"WATERSHED\", or \"ZIP CODE\")\n* <b>statisticcat_desc</b>: \"Category\" - The aspect of a commodity being measured (e.g., \"AREA HAR-VESTED\", \"PRICE RECEIVED\", \"INVENTORY\", \"SALES\").\n* <b>state_name</b>: \"State\" - State full name.\n* <b>asd_desc</b>: \"Ag District\" - Ag statistics district name.\n* <b>county_name</b>: \"County\" - County name.\n* <b>region_desc</b>: \"Region\" - NASS defined geographic entities not readily defined by other stan-dard geographic levels.  A region can be a less than a state (SUB-STATE) or agroup of states (MULTI-STATE), and may be specific to a commodity.\n* <b>zip_5</b>: \"Zip Code\" - US Postal Service 5-digit zip code.\n* <b>watershed_desc</b>: \"Watershed\" - Name assigned to the HUC.\n* <b>year</b>: \"Year\" - The numeric year of the data and can be either a character or numericvector.\n* <b>freq_desc</b>: \"Period Type\" - Length of time covered (\"ANNUAL\", \"SEASON\", \"MONTHLY\",\"WEEKLY\", \"POINT IN TIME\").  \"MONTHLY\" often covers more than onemonth. \"POINT IN TIME\" is as of a particular day.\n* <b>reference_period_desc</b>: \"Period\" - The specific time frame, within a freq_desc.\n\n#### Return Value\nNumber of observations.\n\n#### Examples\nReturn count of all observations in NASS:<br>\n` nass_count(<your api key>) `<br><br>\nFind the number of observations for Wake County in North Carolina:<br>\n` nass_count(<your api key>, state_name = \"NORTH CAROLINA\", county_name = \"WAKE\") `\n\n<hr>\n\n### nass_data\n#### Description\nSends query to Quick Stats API from given parameter values. Data request is limited to 50,000 records per the API. Use <em>nass_count</em> to determine number of records in query.<br>\n\n#### Arguments\n* Inital argument is your API key for NASS Quickstats\n* <b>source_desc</b>: \"Program\" - Source of data (\"CENSUS\" or \"SURVEY\").  Census program in-cludes the Census of Ag as well as follow up projects. Survey program includesnational, state, and county surveys.\n* <b>sector_desc</b>: \"Sector\"  -  Five  high  level,  broad  categories  useful  to  narrow  down  choices.(\"ANIMALS & PRODUCTS\", \"CROPS\", \"DEMOGRAPHICS\", \"ECONOMICS\",or \"ENVIRONMENTAL\")\n* <b>group_desc</b>: \"Group\" - Subsets within sector (e.g., under sector_desc = \"CROPS\", the groupsare \"FIELD CROPS\", \"FRUIT & TREE NUTS\", \"HORTICULTURE\", and \"VEG-ETABLES\").\n* <b>commodity_desc</b>: \"Commodity\"  -  The  primary  subject  of  interest  (e.g.,  \"CORN\",  \"CATTLE\",\"LABOR\", \"TRACTORS\", \"OPERATORS\").\n* <b>short_desc</b>: \"Data Item\" - A concatenation of six columns:  commodity_desc,  class_desc,prodn_practice_desc, util_practice_desc, statisticcat_desc, and unit_desc.\n* <b>domain_desc</b>: \"Domain\" - Generally another characteristic of operations that produce a partic-ular commodity (e.g., \"ECONOMIC CLASS\", \"AREA OPERATED\", \"NAICSCLASSIFICATION\",  \"SALES\").   For  chemical  usage  data,  the  domain  de-scribes  the  type  of  chemical  applied  to  the  commodity.   The  domain_desc  =\"TOTAL\" will have no further breakouts; i.e., the data value pertains completelyto the short_desc.\n* <b>domaincat_desc</b>: \"Domain Category\" - Categories or partitions within a domain (e.g., under do-main_desc = \"SALES\", domain categories include $1,000 TO $9,999, $10,000TO $19,999, etc).\n* <b>agg_level_desc</b>: \"Geographic Level\" - Aggregation level or geographic granularity of the data.(\"AGRICULTURAL  DISTRICT\",  \"COUNTY\",  \"INTERNATIONAL\",  \"NA-TIONAL\", \"REGION : MULTI-STATE\", \"REGION : SUB-STATE\", \"STATE\",\"WATERSHED\", or \"ZIP CODE\")\n* <b>statisticcat_desc</b>: \"Category\" - The aspect of a commodity being measured (e.g., \"AREA HAR-VESTED\", \"PRICE RECEIVED\", \"INVENTORY\", \"SALES\").\n* <b>state_name</b>: \"State\" - State full name.\n* <b>asd_desc</b>: \"Ag District\" - Ag statistics district name.\n* <b>county_name</b>: \"County\" - County name.\n* <b>region_desc</b>: \"Region\" - NASS defined geographic entities not readily defined by other stan-dard geographic levels.  A region can be a less than a state (SUB-STATE) or agroup of states (MULTI-STATE), and may be specific to a commodity.\n* <b>zip_5</b>: \"Zip Code\" - US Postal Service 5-digit zip code.\n* <b>watershed_desc</b>: \"Watershed\" - Name assigned to the HUC.\n* <b>year</b>: \"Year\" - The numeric year of the data and can be either a character or numericvector.\n* <b>freq_desc</b>: \"Period Type\" - Length of time covered (\"ANNUAL\", \"SEASON\", \"MONTHLY\",\"WEEKLY\", \"POINT IN TIME\").  \"MONTHLY\" often covers more than onemonth. \"POINT IN TIME\" is as of a particular day.\n* <b>reference_period_desc</b>: \"Period\" - The specific time frame, within a freq_desc.\n* <b>format</b>: Output format from API call.   Defaults to CSV as it is typically the smallestsized call.  Other options are JSON and XML but these are not recommended. \n* <b>numeric_vals</b>: Optional to convert the year, value, and coefficient of variation (CV %) to numerics as opposed to defaulted character values.  Default is to FALSE as some values have a suppression code. Converting to numeric will result in suppressed values to be NA. \n\n#### Return Value \nJSON object of query results\n\n#### Examples\nGet state values in 2012 for all of the values of agricultural land:<br>\n` nass_data(<your API key>, agg_level_desc = \"STATE\", year = \"2012\",commodity_desc = \"AG LAND\", domain_desc = \"VALUE\") `<br><br>\nGet county level values in 2012 for the specific data item:<br>\n` nass_data(<your API key>, year = 2012, agg_level_desc = \"COUNTY\",short_desc = \"AG LAND, INCL BUILDINGS - ASSET VALUE, MEASURED IN $\") `\n\n<hr>\n\n### nass_param\n\n#### Description\nAll possible values of a parameter for a given query. Helps to break down possible results from <em>nass_data</em>.<br>\n\n#### Arguments\n* Inital argument is your API key for NASS Quickstats\n* <b>param</b>: A valid parameter value. Available names are: source_desc, sector_desc, group_desc,commodity_desc,  short_desc,  domain_desc,  domaincat_desc,  agg_level_desc,statisticcat_desc, state_name, asd_desc, county_name, region_desc, zip_5, wa-tershed_desc, year, freq_desc, and reference_period_desc.\n* <b>source_desc</b>: \"Program\" - Source of data (\"CENSUS\" or \"SURVEY\").  Census program in-cludes the Census of Ag as well as follow up projects. Survey program includesnational, state, and county surveys.\n* <b>sector_desc</b>: \"Sector\"  -  Five  high  level,  broad  categories  useful  to  narrow  down  choices.(\"ANIMALS & PRODUCTS\", \"CROPS\", \"DEMOGRAPHICS\", \"ECONOMICS\",or \"ENVIRONMENTAL\")\n* <b>group_desc</b>: \"Group\" - Subsets within sector (e.g., under sector_desc = \"CROPS\", the groupsare \"FIELD CROPS\", \"FRUIT & TREE NUTS\", \"HORTICULTURE\", and \"VEG-ETABLES\").\n* <b>commodity_desc</b>: \"Commodity\"  -  The  primary  subject  of  interest  (e.g.,  \"CORN\",  \"CATTLE\",\"LABOR\", \"TRACTORS\", \"OPERATORS\").\n* <b>short_desc</b>: \"Data Item\" - A concatenation of six columns:  commodity_desc,  class_desc,prodn_practice_desc, util_practice_desc, statisticcat_desc, and unit_desc.\n* <b>domain_desc</b>: \"Domain\" - Generally another characteristic of operations that produce a partic-ular commodity (e.g., \"ECONOMIC CLASS\", \"AREA OPERATED\", \"NAICSCLASSIFICATION\",  \"SALES\").   For  chemical  usage  data,  the  domain  de-scribes  the  type  of  chemical  applied  to  the  commodity.   The  domain_desc  =\"TOTAL\" will have no further breakouts; i.e., the data value pertains completelyto the short_desc.\n* <b>domaincat_desc</b>: \"Domain Category\" - Categories or partitions within a domain (e.g., under do-main_desc = \"SALES\", domain categories include $1,000 TO $9,999, $10,000TO $19,999, etc).\n* <b>agg_level_desc</b>: \"Geographic Level\" - Aggregation level or geographic granularity of the data.(\"AGRICULTURAL  DISTRICT\",  \"COUNTY\",  \"INTERNATIONAL\",  \"NA-TIONAL\", \"REGION : MULTI-STATE\", \"REGION : SUB-STATE\", \"STATE\",\"WATERSHED\", or \"ZIP CODE\")\n* <b>statisticcat_desc</b>: \"Category\" - The aspect of a commodity being measured (e.g., \"AREA HAR-VESTED\", \"PRICE RECEIVED\", \"INVENTORY\", \"SALES\").\n* <b>state_name</b>: \"State\" - State full name.\n* <b>asd_desc</b>: \"Ag District\" - Ag statistics district name.\n* <b>county_name</b>: \"County\" - County name.\n* <b>region_desc</b>: \"Region\" - NASS defined geographic entities not readily defined by other stan-dard geographic levels.  A region can be a less than a state (SUB-STATE) or agroup of states (MULTI-STATE), and may be specific to a commodity.\n* <b>zip_5</b>: \"Zip Code\" - US Postal Service 5-digit zip code.\n* <b>watershed_desc</b>: \"Watershed\" - Name assigned to the HUC.\n* <b>year</b>: \"Year\" - The numeric year of the data and can be either a character or numericvector.\n* <b>freq_desc</b>: \"Period Type\" - Length of time covered (\"ANNUAL\", \"SEASON\", \"MONTHLY\",\"WEEKLY\", \"POINT IN TIME\").  \"MONTHLY\" often covers more than onemonth. \"POINT IN TIME\" is as of a particular day.\n* <b>reference_period_desc</b>: \"Period\" - The specific time frame, within a freq_desc.\n\n#### Return Value\nJSON object of all possible parameter values\n\n#### Examples\nReturn the program sources for data:<br>\n` nass_param(<your API key>, \"source_desc\") `<br><br>\nReturn the group categories available in the CROPS sector:<br>\n` nass_param(<your API key>, param = \"group_desc\", sector_desc = \"CROPS\") `\n\n<hr>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jackheinemann/nass_python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nasspython",
    "package_url": "https://pypi.org/project/nasspython/",
    "platform": "",
    "project_url": "https://pypi.org/project/nasspython/",
    "project_urls": {
      "Homepage": "https://github.com/jackheinemann/nass_python"
    },
    "release_url": "https://pypi.org/project/nasspython/1.0.0/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Wrapper for the NASS Quickstats database",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8441769,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0059acb634f4d9f2f051453d1360aaf73802129cb13fb55f63f187fa6eda7838",
          "md5": "aa8311ccb96d39db0c39d7c00ce03f77",
          "sha256": "d8e2e65ad55ce865b40a87936df7cfe426f89458eb8997a70901553b5519aa02"
        },
        "downloads": -1,
        "filename": "nasspython-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa8311ccb96d39db0c39d7c00ce03f77",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6025,
        "upload_time": "2020-10-18T22:19:45",
        "upload_time_iso_8601": "2020-10-18T22:19:45.363047Z",
        "url": "https://files.pythonhosted.org/packages/00/59/acb634f4d9f2f051453d1360aaf73802129cb13fb55f63f187fa6eda7838/nasspython-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "401ab363e4315aab632f955e98d87b51f46722c02d4dcb9f86eec678a8bf7e22",
          "md5": "6352ba5d21ffcc87c198102bc62cbb7b",
          "sha256": "4b6f0ebb4f4054edb2fc464c29ae06b22a02fd52ab7c0affca38aa7c869ccd51"
        },
        "downloads": -1,
        "filename": "nasspython-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6352ba5d21ffcc87c198102bc62cbb7b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5645,
        "upload_time": "2020-10-18T22:19:47",
        "upload_time_iso_8601": "2020-10-18T22:19:47.710059Z",
        "url": "https://files.pythonhosted.org/packages/40/1a/b363e4315aab632f955e98d87b51f46722c02d4dcb9f86eec678a8bf7e22/nasspython-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0059acb634f4d9f2f051453d1360aaf73802129cb13fb55f63f187fa6eda7838",
        "md5": "aa8311ccb96d39db0c39d7c00ce03f77",
        "sha256": "d8e2e65ad55ce865b40a87936df7cfe426f89458eb8997a70901553b5519aa02"
      },
      "downloads": -1,
      "filename": "nasspython-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa8311ccb96d39db0c39d7c00ce03f77",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6025,
      "upload_time": "2020-10-18T22:19:45",
      "upload_time_iso_8601": "2020-10-18T22:19:45.363047Z",
      "url": "https://files.pythonhosted.org/packages/00/59/acb634f4d9f2f051453d1360aaf73802129cb13fb55f63f187fa6eda7838/nasspython-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "401ab363e4315aab632f955e98d87b51f46722c02d4dcb9f86eec678a8bf7e22",
        "md5": "6352ba5d21ffcc87c198102bc62cbb7b",
        "sha256": "4b6f0ebb4f4054edb2fc464c29ae06b22a02fd52ab7c0affca38aa7c869ccd51"
      },
      "downloads": -1,
      "filename": "nasspython-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6352ba5d21ffcc87c198102bc62cbb7b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5645,
      "upload_time": "2020-10-18T22:19:47",
      "upload_time_iso_8601": "2020-10-18T22:19:47.710059Z",
      "url": "https://files.pythonhosted.org/packages/40/1a/b363e4315aab632f955e98d87b51f46722c02d4dcb9f86eec678a8bf7e22/nasspython-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}