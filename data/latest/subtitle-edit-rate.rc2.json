{
  "info": {
    "author": "Patrick Wilken",
    "author_email": "pwilken@apptek.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# SubER - Subtitle Edit Rate\n\nSubER is an automatic, reference-based, segmentation- and timing-aware edit distance metric to measure quality of subtitle files.\nFor a detailed description of the metric and a human post-editing evaluation we refer to our [IWSLT 2022 paper](https://aclanthology.org/2022.iwslt-1.1.pdf).\nIn addition to the SubER metric, this scoring tool calculates a wide range of established speech recognition and machine translation metrics (WER, BLEU, TER, chrF) directly on subtitle files.\n\n## Installation\n```console\npip install subtitle-edit-rate\n```\nwill install the `suber` command line tool.\nAlternatively, check out this git repository and run the contained `suber` module with `python -m suber`.\n\n## Basic Usage\nCurrently, we expect subtitle files to come in [SubRip text (SRT)](https://en.wikipedia.org/wiki/SubRip) format. Given a human reference subtitle file `reference.srt` and a hypothesis file `hypothesis.srt` (typically the output of an automatic subtitling system) the SubER score can be calculated by running:\n\n```console\n$ suber -H hypothesis.srt -R reference.srt\n{\n    \"SubER\": 19.048\n}\n```\nThe SubER score is printed to stdout in json format. As SubER is an edit rate, lower scores are better. As a rough rule of thumb from our experience, a score lower than 20(%) is very good quality while a score above 40 to 50(%) is bad.\n\nMake sure that there is no constant time offset between the timestamps in hypothesis and reference as this will lead to incorrect scores.\nAlso, note that `<i>`, `<b>` and `<u>` formatting tags are ignored if present in the files. All other formatting must be removed from the files before scoring for accurate results.\n\n#### Punctuation and Case-Sensitivity\nThe main SubER metric is computed on normalized text, which means case-insensitive and without taking punctuation into account, as we observe higher correlation with human judgements and post-edit effort in this setting. We provide an implementation of a case-sensitive variant which also uses a tokenizer to take punctuation into account as separate tokens which you can use \"at your own risk\" or to reassess our findings. For this, add `--metrics SubER-cased` to the command above. Please do not report results using this variant as \"SubER\" unless explicitly mentioning the punctuation-/case-sensitivity.\n\n## Other Metrics\nThe SubER tool supports computing the following other metrics directly on subtitle files:\n\n- word error rate (WER)\n- bilingual evaluation understudy (BLEU)\n- translation edit rate (TER)\n- character n-gram F score (chrF)\n- character error rate (CER)\n\nBLEU, TER and chrF calculations are done using [SacreBLEU](https://github.com/mjpost/sacrebleu) with default settings. WER is computed with [JiWER](https://github.com/jitsi/jiwer) on normalized text (lower-cased, punctuation removed).\n\n__Assuming__ `hypothesis.srt` __and__ `reference.srt` __are parallel__, i.e. they contain the same number of subtitles and the contents of the _n_-th subtitle in both files corresponds to each other, the above-mentioned metrics can be computed by running:\n```console\n$ suber -H hypothesis.srt -R reference.srt --metrics WER BLEU TER chrF CER\n{\n    \"WER\": 23.529,\n    \"BLEU\": 39.774,\n    \"TER\": 23.529,\n    \"chrF\": 68.402,\n    \"CER\": 17.857\n}\n```\nIn this mode, the text from each parallel subtitle pair is considered to be a sentence pair.\n\n### Scoring Non-Parallel Subtitle Files\nIn the general case, subtitle files for the same video can have different numbers of subtitles with different time stamps. All metrics - except SubER - usually require to be calculated on parallel segments. To apply these metrics to general subtitle files, the hypothesis file has to be re-segmented to correspond to the reference subtitles. The SubER tool implements two options:\n\n- alignment by minimizing Levenshtein distance ([Matusov et al.](https://aclanthology.org/2005.iwslt-1.19.pdf))\n- time alignment method from [Cherry et al.](https://www.isca-speech.org/archive/pdfs/interspeech_2021/cherry21_interspeech.pdf)\n\nSee our [paper](https://aclanthology.org/2022.iwslt-1.1.pdf) for further details.\n\nTo use the Levenshtein method add an `AS-` prefix to the metric name, e.g.:\n```console\nsuber -H hypothesis.srt -R reference.srt --metrics AS-BLEU\n```\nThe `AS-` prefix terminology is taken from [Matusov et al.](https://aclanthology.org/2005.iwslt-1.19.pdf) and stands for \"automatic segmentation\".\nTo use the time-alignment method instead, add a `t-` prefix. This works for all metrics (except for SubER itself which does not require re-segmentation). In particular, we implement `t-BLEU` from [Cherry et al.](https://www.isca-speech.org/archive/pdfs/interspeech_2021/cherry21_interspeech.pdf). We encode the segmentation method (or lack thereof) in the metric name to explicitly distinguish the different resulting metric scores!\n\nTo inspect the re-segmentation applied to the hypothesis you can use the `align_hyp_to_ref.py` tool (run `python -m suber.tools.align_hyp_to_ref -h` for help).\n\nIn case of Levenshtein alignment, there is also the option to give a plain file as the reference. This can be used to provide sentences instead of subtitles as reference segments (each line will be considered a segment):\n\n```console\nsuber -H hypothesis.srt -R reference.txt --reference-format plain --metrics AS-TER\n```\n\nWe provide a simple tool to extract sentences from SRT files based on punctuation:\n\n```console\npython -m suber.tools.srt_to_plain -i reference.srt -o reference.txt --sentence-segmentation\n```\n\nIt can be used to create the plain sentence-level reference `reference.txt` for the scoring command above.\n\n### Scoring Line Breaks as Tokens\nThe line breaks present in the subtitle files can be included into the text segments to be scored as `<eol>` (end of line) and `<eob>` (end of block) tokens. For example:\n\n```\n636\n00:50:52,200 -> 00:50:57,120\nLadies and gentlemen,\nthe dance is about to begin.\n```\nwould be represented as\n```\nLadies and gentlemen, <eol> the dance is about to begin. <eob>\n```\nTo do so, add a `-seg` (\"segmentation-aware\") postfix to the metric name, e.g. `BLEU-seg`, `AS-TER-seg` or `t-WER-seg`. Character-level metrics (chrF and CER) do not support this as it is not obvious how to count character edits for `<eol>` tokens.\n\n### TER-br\nAs a special case, we implement TER-br from [Karakanta et al.](https://aclanthology.org/2020.iwslt-1.26.pdf). It is similar to `TER-seg`, but all (real) words are replaced by a mask token. This would convert the sentence from the example above to:\n```\n<mask> <mask> <mask> <eol> <mask> <mask> <mask> <mask> <mask> <mask> <eob>\n```\nNote, that also TER-br has variants for computing it on existing parallel segments (`TER-br`) or on re-aligned segments (`AS-TER-br`/`t-TER-br`). Re-segmentation happens before masking.\n\n## Contributing\nIf you run into an issue, have a feature request or have questions about the usage or the implementation of SubER, please do not hesitate to open an issue or a thread under \"discussions\". Pull requests are welcome too, of course!\n\nThings I'm already considering to add in future versions:\n- support for other subtitling formats than SRT\n- a verbose output that explains the SubER score (list of edit operations)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/apptek/SubER",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "subtitle-edit-rate",
    "package_url": "https://pypi.org/project/subtitle-edit-rate/",
    "platform": null,
    "project_url": "https://pypi.org/project/subtitle-edit-rate/",
    "project_urls": {
      "Bug Tracker": "https://github.com/apptek/SubER/issues",
      "Homepage": "https://github.com/apptek/SubER"
    },
    "release_url": "https://pypi.org/project/subtitle-edit-rate/0.2.0/",
    "requires_dist": [
      "sacrebleu (==2.0.0)",
      "jiwer (==2.3.0)",
      "python-Levenshtein (==0.12.2)",
      "numpy",
      "dataclasses ; python_version < \"3.7\""
    ],
    "requires_python": ">=3.6",
    "summary": "SubER: a metric for automatic evaluation of subtitle quality",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16532485,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5549da4aec8b0433d4a85c256b1b12e0d004f005cb61649e6288c2281506b6eb",
          "md5": "0a482f48adbab608185e21aafaf5d289",
          "sha256": "e9340338ba534047c0b5e71d71ef1e94cf7cff423e57dddbd49318a99973895f"
        },
        "downloads": -1,
        "filename": "subtitle_edit_rate-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a482f48adbab608185e21aafaf5d289",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 31949,
        "upload_time": "2022-05-11T23:07:34",
        "upload_time_iso_8601": "2022-05-11T23:07:34.941373Z",
        "url": "https://files.pythonhosted.org/packages/55/49/da4aec8b0433d4a85c256b1b12e0d004f005cb61649e6288c2281506b6eb/subtitle_edit_rate-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f71080d84b62355976473dbb32169bdb7a0fb2306a87e5218955b910696ac1c1",
          "md5": "b2db6224d17afe28784c32584678978e",
          "sha256": "b0cd65d60e45ba1956c4ae26a2bf14933071441e21384f4a567b01db289d7168"
        },
        "downloads": -1,
        "filename": "subtitle-edit-rate-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b2db6224d17afe28784c32584678978e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24133,
        "upload_time": "2022-05-11T23:07:36",
        "upload_time_iso_8601": "2022-05-11T23:07:36.876753Z",
        "url": "https://files.pythonhosted.org/packages/f7/10/80d84b62355976473dbb32169bdb7a0fb2306a87e5218955b910696ac1c1/subtitle-edit-rate-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d3e6563ecddde0b092cb8fdcf4ec5881b1b155cce936b3492160ee21cdbbdb7",
          "md5": "a81e5313a05e078708143e1991370135",
          "sha256": "dc50bff6f36ec63a552850d98c21f9385bc8afeedbb8b45bcbc172366f588327"
        },
        "downloads": -1,
        "filename": "subtitle_edit_rate-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a81e5313a05e078708143e1991370135",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 36209,
        "upload_time": "2023-01-23T13:42:54",
        "upload_time_iso_8601": "2023-01-23T13:42:54.252467Z",
        "url": "https://files.pythonhosted.org/packages/9d/3e/6563ecddde0b092cb8fdcf4ec5881b1b155cce936b3492160ee21cdbbdb7/subtitle_edit_rate-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30421e46c68f655b20b57fe8a954818e3498eceaf2e5ad9082b4ae43d58e3c90",
          "md5": "25c81058f8dc44cc770ca0348efacd43",
          "sha256": "947542bfa4bf2e74642b52eef9603bfdf780d37ecb9b75a3ff808622719e933b"
        },
        "downloads": -1,
        "filename": "subtitle-edit-rate-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "25c81058f8dc44cc770ca0348efacd43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27346,
        "upload_time": "2023-01-23T13:42:56",
        "upload_time_iso_8601": "2023-01-23T13:42:56.981448Z",
        "url": "https://files.pythonhosted.org/packages/30/42/1e46c68f655b20b57fe8a954818e3498eceaf2e5ad9082b4ae43d58e3c90/subtitle-edit-rate-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d3e6563ecddde0b092cb8fdcf4ec5881b1b155cce936b3492160ee21cdbbdb7",
        "md5": "a81e5313a05e078708143e1991370135",
        "sha256": "dc50bff6f36ec63a552850d98c21f9385bc8afeedbb8b45bcbc172366f588327"
      },
      "downloads": -1,
      "filename": "subtitle_edit_rate-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a81e5313a05e078708143e1991370135",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 36209,
      "upload_time": "2023-01-23T13:42:54",
      "upload_time_iso_8601": "2023-01-23T13:42:54.252467Z",
      "url": "https://files.pythonhosted.org/packages/9d/3e/6563ecddde0b092cb8fdcf4ec5881b1b155cce936b3492160ee21cdbbdb7/subtitle_edit_rate-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30421e46c68f655b20b57fe8a954818e3498eceaf2e5ad9082b4ae43d58e3c90",
        "md5": "25c81058f8dc44cc770ca0348efacd43",
        "sha256": "947542bfa4bf2e74642b52eef9603bfdf780d37ecb9b75a3ff808622719e933b"
      },
      "downloads": -1,
      "filename": "subtitle-edit-rate-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "25c81058f8dc44cc770ca0348efacd43",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 27346,
      "upload_time": "2023-01-23T13:42:56",
      "upload_time_iso_8601": "2023-01-23T13:42:56.981448Z",
      "url": "https://files.pythonhosted.org/packages/30/42/1e46c68f655b20b57fe8a954818e3498eceaf2e5ad9082b4ae43d58e3c90/subtitle-edit-rate-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}