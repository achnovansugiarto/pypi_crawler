{
  "info": {
    "author": "Codex-in-Somnio",
    "author_email": "yyy3752@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Version Control :: Git"
    ],
    "description": "# HubLatest\n\nScript for retrieving latest releases from GitHub repositories.\n\n## Requirements\n\n\n* Python 3.6 and above\n\n## Commandline options\n\n```\nusage: hublatest [-h] [-r REGEX] [--prerelease] [--no-prerelease]\n                 [--post-download COMMAND] [--post-remove COMMAND] [-c PATH]\n                 [-v PATH] [-d PATH] [--use-subdir] [-f] [--max-retry N]\n                 [--verbose]\n                 [OWNER/REPO]\n```\n\n### Positional Arguments\n\n*  **`OWNER/REPO`**\n\n   Repo identifier in format of `owner/repo` (if this option is specified, the repo list in config file will be overridden)\n\n### Named Arguments\n\n*  **`-r, --regex-filter`**\n\n   Filter filenames by regex\n\n*  **`--prerelease`**\n\n   Get the latest prerelease\n\t- By default, the newest release will be downloaded, regardless of prerelease or not\n\n*  **`--no-prerelease`**\n\n   Get the latest non-prerelease\n\t- By default, the newest release will be downloaded, regardless of prerelease or not\n\n*  **`--post-download`**\n\n   Command to be executed after each file is downloaded\n\t- Variables can be inserted: `{filename}`, `{filedir}`, `{filepath}`, `{owner}`, `{repo}`, `{version}`; meaning filename, containing directory of the file, file path, repo owner, repo name, current version; all paths are relative to the work directory\n\n*  **`--post-remove`**\n\n   Command to be executed after each file is removed\n\t- Variables can be inserted: `{filename}`, `{filedir}`, `{filepath}`, `{owner}`, `{repo}`, `{version}`; meaning filename, containing directory of the file, file path, repo owner, repo name, current version; all paths are relative to the work directory\n\n*  **`-c, --config`**\n\n   Path to the config file\n\n*  **`-v, --version-file-dir`**\n\n   Directory to put version files (if not specified, version files will not be used)\n\n*  **`-d, --download-dir`**\n\n   Directory to put downloaded files (Default is current working directory)\n\n*  **`--use-subdir`**\n\n   Save files to sub-directories like `owner/repo` (no sub-directories by default)\n\n*  **`-f, --force`**\n\n   Ignore current version file(s) and forcibly execute\n\n*  **`--max-retry`**\n\n   Max retry attemps (default: 5)\n\n*  **`--verbose`**\n\n   Show debug output\n\n## Config file\n\nConfig file is in INI format. Example:\n\n```\n## Settings under here applies to all downloads by default\n[DEFAULT]\n\n# Put versions under `./version_files/`\nversion_file_dir = ./version_files\n\n# Download files to `./download_files/`\ndownload_dir = ./download_files\n\n# Use directory structure like `owner/repo/`\nuse_subdir = true\n\n\n## Release files of `some_repo/some_project` will be downloaded\n[some_repo/some_project]\n\n# only download zip files\nregex_filter = .zip$\n\n# no prereleases\nprerelease = false\n\n# extract after download\npost_download = unzip {filepath} -d {filedir}/extracted_files\n\n# delete extracted files when old version is removed\npost_remove = rm -r {filedir}/extracted_files\n```\n\nUsage:\n\n```\nhublatest -c config.ini\n```\n\nNotes:\n\n\n* Options set under `[DEFAULT]` are glocal and will be applied by default\n\n\n* Options set under `[DEFAULT]` can be overriden by commandline options or options\n\n\n* Add sections named like `[owner/repo]` to auto-download release files from a list of repositories when no repositories are specified from commandline; if no specific options are needed for a repository, its section can be left empty\n\n\n* Refer to the commandline option usages for the config options\n\n\n* `prerelease = true` means `--prerelease`; `prerelease = false` means `--no-prerelease`\n\n\n---\n\n（中文版说明）\n\n用来获取GitHub仓库的Release的脚本。\n\n## 环境要求\n\n\n* 需要Python 3.6及以上。\n\n## 命令行用法\n\n```\nusage: hublatest [-h] [-r REGEX] [--prerelease] [--no-prerelease]\n                 [--post-download COMMAND] [--post-remove COMMAND] [-c PATH]\n                 [-v PATH] [-d PATH] [--use-subdir] [-f] [--max-retry N]\n                 [--verbose]\n                 [OWNER/REPO]\n```\n\n### Positional Arguments\n\n*  **`OWNER/REPO`**\n\n   `所有者/仓库`的形式的仓库名（如果指定此参数，配置文件指定的仓库列表及选项会被覆盖）\n\n### Named Arguments\n\n*  **`-r, --regex-filter`**\n\n   用regex过滤文件名\n\n*  **`--prerelease`**\n\n   下载最新的Prerelease\n\t- 默认不管是否是Prerelease，直接下载列表中最新的\n\n*  **`--no-prerelease`**\n\n   下载最新的非Prerelease\n\t- 默认不管是否是Prerelease，直接下载列表中最新的\n\n*  **`--post-download`**\n\n   下载完成后执行的命令\n\t- 可插入的变量：`{filename}`、`{filedir}`、`{filepath}`、`{owner}`、`{repo}`、`{version}`，分别代表文件名、文件所在目录、文件路径、仓库所有者、仓库名、当前版本；路径均用相对于工作目录的相对路径表示\n\n*  **`--post-remove`**\n\n   删除文件后执行的命令\n\t- 可插入的变量：`{filename}`、`{filedir}`、`{filepath}`、`{owner}`、`{repo}`、`{version}`，分别代表文件名、文件所在目录、文件路径、仓库所有者、仓库名、当前版本；路径均用相对于工作目录的相对路径表示\n\n*  **`-c, --config`**\n\n   配置文件路径\n\n*  **`-v, --version-file-dir`**\n\n   版本文件存放目录（如果不指定此参数，默认不使用版本文件）\n\n*  **`-d, --download-dir`**\n\n   下载目标目录（默认：当前工作目录）\n\n*  **`--use-subdir`**\n\n   使用子目录（用`所有者/仓库`的形式存放文件，默认不使用）\n\n*  **`-f, --force`**\n\n   忽略当前版本文件，强制执行\n\n*  **`--max-retry`**\n\n   重试次数（默认：5）\n\n*  **`--verbose`**\n\n   显示调试输出\n\n## 配置文件用法\n\n配置文件为INI格式，以下是配置文件的例子：\n\n```\n## 这下面的设置会默认应用于所有的下载\n[DEFAULT]\n\n# 指定将版本文件放在`./version_files/`下\nversion_file_dir = ./version_files\n\n# 指定下载文件至`./download_files/`下\ndownload_dir = ./download_files\n\n# 使用形如`owner/repo/`的子目录形式\nuse_subdir = true\n\n\n## 下载仓库`some_repo/some_project`的Release文件\n[some_repo/some_project]\n\n# 只下载zip文件\nregex_filter = .zip$\n\n# 不下载Prerelease\nprerelease = false\n\n# 下载完成后解压\npost_download = unzip {filepath} -d {filedir}/extracted_files\n\n# 在删除旧版本时删除之前解压出来的文件\npost_remove = rm -r {filedir}/extracted_files\n```\n\n用法例如：\n\n```\nhublatest -c config.ini\n```\n\n一些说明：\n\n\n* `[DEFAULT]` 下的选项会应用于所有仓库\n\n\n* 可以用命令行参数覆盖 `[DEFAULT]` 中所写的设置项\n\n\n* 要下载Release的各仓库用形如 `[所有者/仓库名]` 的小节标题表示，针对单个仓库的选项可以指定它对应的小节标题下；如果不需要指定任何参数，可以放一个空的小节\n\n\n* 配置文件中的设置项意义参见命令行参数的用法\n\n\n* `prerelease` 这一项给 `true` 是 `--prerelease` 的效果；给 `false` 是 `--no-prerelease` 的效果",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Codex-in-somnio/HubLatest",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "HubLatest",
    "package_url": "https://pypi.org/project/HubLatest/",
    "platform": "",
    "project_url": "https://pypi.org/project/HubLatest/",
    "project_urls": {
      "Homepage": "https://github.com/Codex-in-somnio/HubLatest"
    },
    "release_url": "https://pypi.org/project/HubLatest/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Script to automatically download latest release from GitHub repos",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7099805,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "781278ef9ac6c481e9d134e535486b9f14cc111e216900c7bb25c5e9e6f79ad7",
          "md5": "92165b5ce09a272e0dfb987d1dc9f816",
          "sha256": "832541480f3e74d58b65152d67e6c5bb844ef4f21424a5a56558c4f84fea2145"
        },
        "downloads": -1,
        "filename": "HubLatest-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "92165b5ce09a272e0dfb987d1dc9f816",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10366,
        "upload_time": "2020-03-14T14:24:19",
        "upload_time_iso_8601": "2020-03-14T14:24:19.514823Z",
        "url": "https://files.pythonhosted.org/packages/78/12/78ef9ac6c481e9d134e535486b9f14cc111e216900c7bb25c5e9e6f79ad7/HubLatest-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "325856d3f04bac27d36b05e6d63ea4c265e22ab8e8423dfc05e31e4e74dd4105",
          "md5": "6dee83e1512c5a419391bbedacd28332",
          "sha256": "c05a5f69c7515ea87c3b846e3d0f3ec36d48000ea6cac62932b16da79a14a505"
        },
        "downloads": -1,
        "filename": "HubLatest-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6dee83e1512c5a419391bbedacd28332",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10378,
        "upload_time": "2020-04-02T12:35:22",
        "upload_time_iso_8601": "2020-04-02T12:35:22.706934Z",
        "url": "https://files.pythonhosted.org/packages/32/58/56d3f04bac27d36b05e6d63ea4c265e22ab8e8423dfc05e31e4e74dd4105/HubLatest-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e3cd91cd33b96fb6210dcb1b3a597fd8abae947f8063d39a781d1b3c4eb3a6a",
          "md5": "f4d6f257785dab3a4a311a92ac1acdda",
          "sha256": "a5aae750327d644fbe090202949729c2bd512aa39b035b0812aad0424dfb14dd"
        },
        "downloads": -1,
        "filename": "HubLatest-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f4d6f257785dab3a4a311a92ac1acdda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11155,
        "upload_time": "2020-04-25T14:32:45",
        "upload_time_iso_8601": "2020-04-25T14:32:45.032597Z",
        "url": "https://files.pythonhosted.org/packages/3e/3c/d91cd33b96fb6210dcb1b3a597fd8abae947f8063d39a781d1b3c4eb3a6a/HubLatest-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e3cd91cd33b96fb6210dcb1b3a597fd8abae947f8063d39a781d1b3c4eb3a6a",
        "md5": "f4d6f257785dab3a4a311a92ac1acdda",
        "sha256": "a5aae750327d644fbe090202949729c2bd512aa39b035b0812aad0424dfb14dd"
      },
      "downloads": -1,
      "filename": "HubLatest-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f4d6f257785dab3a4a311a92ac1acdda",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11155,
      "upload_time": "2020-04-25T14:32:45",
      "upload_time_iso_8601": "2020-04-25T14:32:45.032597Z",
      "url": "https://files.pythonhosted.org/packages/3e/3c/d91cd33b96fb6210dcb1b3a597fd8abae947f8063d39a781d1b3c4eb3a6a/HubLatest-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}