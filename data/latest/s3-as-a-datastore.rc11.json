{
  "info": {
    "author": "joeyism",
    "author_email": "joeyism@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# S3 As A Datastore (S3aaDS)\nS3-as-a-datastore is a library that lives on top of botocore and boto3, as a way to use S3 as a key-value datastore instead of a real datastore\n\n**DISCLAIMER**: This is NOT a real datastore, only the illusion of one. If you have remotely high I/O, this is NOT the library for you.\n\n## Motivation\nS3 is really inexpensive compared to Memcache, or RDS.\n\nFor example, this is the RDS cost\n![rds-cost](https://raw.githubusercontent.com/joeyism/s3-as-a-datastore/master/doc/rds-cost.png)\n\n\nwhile this is S3 cost\n\n\n![s3-cost](https://raw.githubusercontent.com/joeyism/s3-as-a-datastore/master/doc/s3-cost.png)\n\nIf a service doesn't have a lot of traffic, keeping up a RDS deployment is wasteful because it stands idle but incurring cost. S3 doesn't have that problem. For services that has low read/writes operations, or only has CRD without the U (if you don't know what that means, read [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete)), saving things in S3 gets similar results. As long as data isn't getting upgrade, only written and read, S3 can be used. However, Writing to S3 requires a lot of documentation reading if you're not used to it. This library is an interface to communication with S3 like a very pseudo-ORM way.\n\n## Installation\n```bash\npip3 install s3aads\n```\nor \n```bash\npip3 install s3-as-a-datastore\n```\n\n## Idea\nThe main idea is a database is mapped to a bucket, and a table is the top level \"folder\" of s3. The rest of nested \"folders\" are columns. Because the way buckets work in S3, they must be unique for all S3 buckets. This also mean the combination of keys must be unique\n\nNOTE: There are quotations around \"folder\" because files in a S3 bucket are flat, and there aren't really folders.\n### Example\n```\nDatabase: joeyism-test\nTable: daily-data\n\nid | year | month | day | data\n------------------------------\n 1 | 2020 |    01 |  01 | [\"a\", \"b\"]\n 2 | 2020 |    01 |  01 | [\"c\", \"d\"]\n 3 | 2020 |    01 |  01 | [\"abk20dj3i\"]\n```\nis mapped to\n```\njoeyism-test/daily-data/1/2020/01/01  ->  [\"a\", \"b\"]\njoeyism-test/daily-data/2/2020/01/01  ->  [\"c\", \"d\"]\njoeyism-test/daily-data/3/2020/01/01  ->  [\"abk20dj3i\"]\n```\n\nbut it can be called with\n\n```python3\nfrom s3aads import Table\ntable = Table(name=\"daily-data\", database=\"joeyism-test\", columns=[\"id\", \"year\", \"month\", \"day\"])\ntable.select(id=1, year=2020, month=\"01\", day=\"01\") # b'[\"a\", \"b\"]'\ntable.select(id=2, year=2020, month=\"01\", day=\"01\") # b'[\"c\", \"d\"]'\ntable.select(id=3, year=2020, month=\"01\", day=\"01\") # b'[\"abk20dj3i\"]'\n```\n\n## Usage\n\n### Example\n\n```python3\nfrom s3aads import Database, Table\ndb = Database(\"joeyism-test\")\ndb.create()\n\ntable = Table(name=\"daily-data\", database=db, columns=[\"id\", \"year\", \"month\", \"day\"])\ntable.insert(id=1, year=2020, month=\"01\", day=\"01\", data=b'[\"a\", \"b\"]')\ntable.insert(id=2, year=2020, month=\"01\", day=\"01\", data=b'[\"c\", \"d\"]')\ntable.insert(id=2, year=2020, month=\"01\", day=\"01\", data=b'[\"abk20dj3i\"]')\n\ntable.select(id=1, year=2020, month=\"01\", day=\"01\") # b'[\"a\", \"b\"]'\ntable.select(id=2, year=2020, month=\"01\", day=\"01\") # b'[\"c\", \"d\"]'\ntable.select(id=3, year=2020, month=\"01\", day=\"01\") # b'[\"abk20dj3i\"]'\n\ntable.delete(id=1, year=2020, month=\"01\", day=\"01\")\ntable.delete(id=2, year=2020, month=\"01\", day=\"01\")\ntable.delete(id=3, year=2020, month=\"01\", day=\"01\")\n```\n## API\n\n### Database\n```python\nDatabase(name)\n```\n* *name*: name of the table\n\n#### Properties\n`tables`: list of tables for that Database (S3 Bucket)\n\n#### Methods\n\n`create()`: Create the database (S3 Bucket) if it doesn't exist\n\n`get_table(table_name) -> Table`: Pass in a table name and returns the Table object\n\n`drop_table(table_name)`: Fully drops table\n\n#### Class methods\n\n`list_databases()`: List all available databases (S3 Buckets)\n\n### Table\n```python\nTable(name, database, columns=[])\n```\n* *name*: name of the table\n* *database*: Database object. If a string is passed instead, it'll attempt to fetch the Database object\n* *columns (default: [])*: Table columns\n\n#### Properties\n\n`keys`: list of all keys in that table. Essentially, list the name of all files in the folder\n\n`objects`: list of all objects in that table. Essentially, list the keys but broken down so it can be selected by column name\n\n#### Full Param Methods\nThe following methods require all the params to be passed in order for it to work.\n\n`delete(**kwargs)`: If you pass the params, it'll delete that row of data\n\n`insert(data:bytes, metadata:dict={}, **kwargs)`: If you pass the params and value for `data`, it'll insert that row of bytes data.\n- `data` is the data to save, in `bytes`\n- `metadata` (optional) is used if you want to pass in extra data that is related to S3. Available params can be found [in the boto3 docs](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Object.put)\n\n`insert_string(data:string, metadata:dict={}, **kwargs)`: If you pass the params and value for `data`, it'll insert that row of string data\n- `data` is the data to save, in `str`\n- `metadata` (optional) is used if you want to pass in extra data that is related to S3. Available params can be found [in the boto3 docs](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Object.put)\n\n`select(**kwargs) -> bytes`: If you pass the params, it'll select that row of data and return the value as bytes\n\n`select_string(**kwargs) -> string`: If you pass the params, it'll select that row of data and return the value as a string\n\n#### Partial Param Methods\nThe following methods can work with partial params passed in.\n\n`query(**kwargs) -> List[Dict[str, str]]`: If you pass the params, it'll return a list of params that is availabe in the table\n\n#### Key Methods\n\n`to_key(self, **kwargs) -> str`: When you pass the full kwargs, it'll return the key\n\n`delete_by_key(key)`: If you pass the full key/path of the file, it'll delete that row/file\n\n`insert_by_key(key, data: bytes)`: If you pass the full key/path of the file and the data (in bytes), it'll insert that row/file with the data\n\n`select_by_key(key) -> bytes`: If you pass the full key/path of the file, it'll select that row/file and return the data\n\n`query_by_key(key=\"\", sort_by=None) -> List[str]`: If you pass the full or partial key/path of the file, it'll return a list of keys that matches the pattern\n\n- `sort_by`: Possible values are *Key*, *LastModified*, *ETag*, *Size*, *StorageClass*\n\n#### Methods\n\n`distinct(columns: List[str]) -> List[Tuple]`: If you pass a list of columns, it'll return a list of distinct tuple combinations based on those columns\n\n`random_key() -> str`: Returns a random key to data\n\n`random() -> Dict`: Returns a set of params and `data` of a random data\n\n`count() -> int`: Returns the number of objects in the table\n\n`<first_column_name>s() -> List[str]`: Taking the name of the first column, returns a list of unique values.\n\n`<n_column_name>s() -> List[str]`: Taking the name of the Nth column, returns a list of unique values.\n\n`filter_objects_by_<column_name>(val: str) -> List[object]`: This method exists for each column name. It allows the user to provide a string input, and output a list of `object`s which are the keys to the table\n\n`filter_objects_by(col1=val1, col2=val2, ...) -> List[object]`: Similar to `filter_objects_by_<column_name>(val: str)`, except instead of filtering for one, the method can filter for multiple columns and values\n\n- For example, a table with columns `[\"id\", \"name\"]` will have the method `table.ids()` which will return a list of unique ids\n\n`copy(key) -> Copy`: Returns a Copy object\n\n`copy(key).to(table2, key, **kwargs) -> None`: Copies from one table to another. kwargs details can be seen in [boto3 docs](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.copy_object)\n\n- Example:\n```python\nfrom s3aads import Table\n                                                        \ntable1 = Table(\"table1\", database=\"db1\", columns=[\"a\"])\ntable2 = Table(\"table2\", database=\"db2\", columns=[\"a\"])\nkey = table1.keys[0]\ntable1.copy(key).to(table2, key)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/joeyism/s3-as-a-datastore/archive/2.13.6.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/joeyism/s3-as-a-datastore",
    "keywords": "aws,s3,datastore",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "s3-as-a-datastore",
    "package_url": "https://pypi.org/project/s3-as-a-datastore/",
    "platform": null,
    "project_url": "https://pypi.org/project/s3-as-a-datastore/",
    "project_urls": {
      "Download": "https://github.com/joeyism/s3-as-a-datastore/archive/2.13.6.tar.gz",
      "Homepage": "https://github.com/joeyism/s3-as-a-datastore"
    },
    "release_url": "https://pypi.org/project/s3-as-a-datastore/2.13.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "S3-as-a-datastore is a library that lives on top of botocore and boto3, as a way to use S3 as a key-value datastore instead of a real datastore",
    "version": "2.13.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17313505,
  "releases": {
    "2.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4e9e1c98e763d8706f2d5e3f36145889d45123b22257d2b2a81dab207fac84f",
          "md5": "853b357c18e17019778c47120a725e66",
          "sha256": "6050308900aeb23b91d0a2b385880a2e52860f7e7ae06ae97cd446c5546bbb5c"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "853b357c18e17019778c47120a725e66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6024,
        "upload_time": "2020-07-08T03:28:43",
        "upload_time_iso_8601": "2020-07-08T03:28:43.296426Z",
        "url": "https://files.pythonhosted.org/packages/e4/e9/e1c98e763d8706f2d5e3f36145889d45123b22257d2b2a81dab207fac84f/s3-as-a-datastore-2.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c84278fc241d698978cb584ea555443fb90bed42ce9c36a2146f0b56517276e6",
          "md5": "0c885a342957b09ae4a3695911f2463e",
          "sha256": "bd0b5cddcc0619f0bf652d6ac7039e8a3838f179505dab8b5ffc6badc8bd0261"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0c885a342957b09ae4a3695911f2463e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6047,
        "upload_time": "2020-07-11T16:40:58",
        "upload_time_iso_8601": "2020-07-11T16:40:58.898527Z",
        "url": "https://files.pythonhosted.org/packages/c8/42/78fc241d698978cb584ea555443fb90bed42ce9c36a2146f0b56517276e6/s3-as-a-datastore-2.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.12.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8fd8d9b43cb3126f2d22ff1dd4629f40b4118e68d89cf7a1ae506a5a6bde185",
          "md5": "9e4f651a1409d10f2b31b182c23a9393",
          "sha256": "b2ae6315c3b74e2ba5c1bf3e252461d0113b3afd558657ff1ade04d5da1ea709"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.12.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e4f651a1409d10f2b31b182c23a9393",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6182,
        "upload_time": "2020-07-11T19:07:11",
        "upload_time_iso_8601": "2020-07-11T19:07:11.643312Z",
        "url": "https://files.pythonhosted.org/packages/c8/fd/8d9b43cb3126f2d22ff1dd4629f40b4118e68d89cf7a1ae506a5a6bde185/s3-as-a-datastore-2.12.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.13.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e7ccb63e77e7400e41f0f2f4590a2b7c050b5dcef27476467f0d16b180272e7",
          "md5": "ae74f23f967aa0f85313901c127252d7",
          "sha256": "a14cb92684c261f22c5d970836b28a13211d1074a27279b2b5fee64a0859c721"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.13.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ae74f23f967aa0f85313901c127252d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6192,
        "upload_time": "2020-07-11T19:08:47",
        "upload_time_iso_8601": "2020-07-11T19:08:47.899256Z",
        "url": "https://files.pythonhosted.org/packages/1e/7c/cb63e77e7400e41f0f2f4590a2b7c050b5dcef27476467f0d16b180272e7/s3-as-a-datastore-2.13.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.13.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aabeff263512b5589854600f5910c3746c556054364c36e6492435e9d3d57e00",
          "md5": "ee51b9af1db34ce397c5963c30055b8c",
          "sha256": "e0767c92acc5bf64c5c3c1770844bf7b8fd6c588325a7827a018ebfde8b0c834"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.13.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ee51b9af1db34ce397c5963c30055b8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6206,
        "upload_time": "2020-07-11T19:26:34",
        "upload_time_iso_8601": "2020-07-11T19:26:34.005552Z",
        "url": "https://files.pythonhosted.org/packages/aa/be/ff263512b5589854600f5910c3746c556054364c36e6492435e9d3d57e00/s3-as-a-datastore-2.13.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.13.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b73d37465a1102f5f4d145b86d649b2dc342076bfa9957a3091a0082b945b47",
          "md5": "71809e47e6a397efa1606f1072ba18ad",
          "sha256": "06390c2877218e8978705f8806cb9651cb34d75ba4c8c217bb893fc7e717c1fb"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.13.4.tar.gz",
        "has_sig": false,
        "md5_digest": "71809e47e6a397efa1606f1072ba18ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7027,
        "upload_time": "2020-07-14T02:16:20",
        "upload_time_iso_8601": "2020-07-14T02:16:20.655399Z",
        "url": "https://files.pythonhosted.org/packages/5b/73/d37465a1102f5f4d145b86d649b2dc342076bfa9957a3091a0082b945b47/s3-as-a-datastore-2.13.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.13.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eecdc43c56b101b3d1c0bb7141ad236c5e8935d074a0bf16c61fab21c43b042f",
          "md5": "0a10154c0505ae820c3dcc7a45c4c4b0",
          "sha256": "abee7090046c8832c3959d973e8afcff11fc50074dcd0ea29fe2f78b4d9cce82"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.13.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0a10154c0505ae820c3dcc7a45c4c4b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10831,
        "upload_time": "2023-03-10T20:56:25",
        "upload_time_iso_8601": "2023-03-10T20:56:25.127813Z",
        "url": "https://files.pythonhosted.org/packages/ee/cd/c43c56b101b3d1c0bb7141ad236c5e8935d074a0bf16c61fab21c43b042f/s3-as-a-datastore-2.13.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.13.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37a95d61eb1a83860ed50e761ebf2f92ad26405b731357221acc85eed5faa3da",
          "md5": "d86d78914a4463e017d89e0d1cc21032",
          "sha256": "00a4d298d86fc5cf4181c85c45306ce4089da465eefbcf0ecb174dc552986b38"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.13.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d86d78914a4463e017d89e0d1cc21032",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10908,
        "upload_time": "2023-03-16T03:03:41",
        "upload_time_iso_8601": "2023-03-16T03:03:41.291139Z",
        "url": "https://files.pythonhosted.org/packages/37/a9/5d61eb1a83860ed50e761ebf2f92ad26405b731357221acc85eed5faa3da/s3-as-a-datastore-2.13.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09e8919a5c2d929d96641115bf79fb6a359968ae8d280efd37d839f28459cd5f",
          "md5": "b6a030fd3878c8f4733b8b4e389f4f64",
          "sha256": "3a465c89745b5faccf6936f25edb67e14a36a09734d2d8bc3997199d3e2430a0"
        },
        "downloads": -1,
        "filename": "s3_as_a_datastore-2.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6a030fd3878c8f4733b8b4e389f4f64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10010,
        "upload_time": "2020-07-05T22:44:16",
        "upload_time_iso_8601": "2020-07-05T22:44:16.788492Z",
        "url": "https://files.pythonhosted.org/packages/09/e8/919a5c2d929d96641115bf79fb6a359968ae8d280efd37d839f28459cd5f/s3_as_a_datastore-2.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "424ba191cd278a38c017f870534a5f9cd0580126de4ed062e7121261cdd83e51",
          "md5": "daf1fb8aa47512444e961bd4c1455770",
          "sha256": "f1f152333fee15299da3e47cdf4876a7b9a5391e5a1f4146ac06314422d91b39"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "daf1fb8aa47512444e961bd4c1455770",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5662,
        "upload_time": "2020-07-05T22:44:19",
        "upload_time_iso_8601": "2020-07-05T22:44:19.647268Z",
        "url": "https://files.pythonhosted.org/packages/42/4b/a191cd278a38c017f870534a5f9cd0580126de4ed062e7121261cdd83e51/s3-as-a-datastore-2.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "126ee0dcd08f9025f0739f2224a3cbb6a2ee499c8ad7618340ef42d597e9ab51",
          "md5": "ec7857b134919bf7dcea7e9da265e985",
          "sha256": "ae227e03b35dd99fbec6622ec3d60211baa1cf67838b4c25ef65d43786db7b4b"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ec7857b134919bf7dcea7e9da265e985",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5668,
        "upload_time": "2020-07-05T22:45:21",
        "upload_time_iso_8601": "2020-07-05T22:45:21.534188Z",
        "url": "https://files.pythonhosted.org/packages/12/6e/e0dcd08f9025f0739f2224a3cbb6a2ee499c8ad7618340ef42d597e9ab51/s3-as-a-datastore-2.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1d3cc86c6fc63c035d855ef7f177755b71c610394c9327656c3fa9c0797d8a9",
          "md5": "3a4554775cecb2f5a92ee90394c85240",
          "sha256": "9fd8620e6aec7f35ca1422c011cfd3b0d80472952af03f12c30e8f798c946a9d"
        },
        "downloads": -1,
        "filename": "s3-as-a-datastore-2.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a4554775cecb2f5a92ee90394c85240",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5999,
        "upload_time": "2020-07-08T02:17:45",
        "upload_time_iso_8601": "2020-07-08T02:17:45.062739Z",
        "url": "https://files.pythonhosted.org/packages/e1/d3/cc86c6fc63c035d855ef7f177755b71c610394c9327656c3fa9c0797d8a9/s3-as-a-datastore-2.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37a95d61eb1a83860ed50e761ebf2f92ad26405b731357221acc85eed5faa3da",
        "md5": "d86d78914a4463e017d89e0d1cc21032",
        "sha256": "00a4d298d86fc5cf4181c85c45306ce4089da465eefbcf0ecb174dc552986b38"
      },
      "downloads": -1,
      "filename": "s3-as-a-datastore-2.13.6.tar.gz",
      "has_sig": false,
      "md5_digest": "d86d78914a4463e017d89e0d1cc21032",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10908,
      "upload_time": "2023-03-16T03:03:41",
      "upload_time_iso_8601": "2023-03-16T03:03:41.291139Z",
      "url": "https://files.pythonhosted.org/packages/37/a9/5d61eb1a83860ed50e761ebf2f92ad26405b731357221acc85eed5faa3da/s3-as-a-datastore-2.13.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}