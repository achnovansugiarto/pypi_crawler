{
  "info": {
    "author": "Carlson Santana Cruz",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3"
    ],
    "description": "HaTeMiLe for Django\n===================\n\nHaTeMiLe for Django improve accessibility of web pages that uses the Django framework, converting pages with HTML code into pages with a more accessible code.\n\n## Accessibility solutions\n\n* [Associate HTML elements](https://github.com/hatemile/hatemile-for-python/wiki/Associate-HTML-elements);\n* [Provide a polyfill to CSS Speech and CSS Aural properties](https://github.com/hatemile/hatemile-for-python/wiki/Provide-a-polyfill-to-CSS-Speech-and-CSS-Aural-properties);\n* [Display inacessible informations of page](https://github.com/hatemile/hatemile-for-python/wiki/Display-inacessible-informations-of-page);\n* [Enable all functionality of page available from a keyboard](https://github.com/hatemile/hatemile-for-python/wiki/Enable-all-functionality-of-page-available-from-a-keyboard);\n* [Improve the acessibility of forms](https://github.com/hatemile/hatemile-for-python/wiki/Improve-the-acessibility-of-forms);\n* [Provide accessibility resources to navigate](https://github.com/hatemile/hatemile-for-python/wiki/Provide-accessibility-resources-to-navigate).\n\n## Documentation\n\nTo generate the full API documentation of HaTeMiLe of Django:\n\n1. [Install, create and activate a virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtualenv/);\n2. [Install dependencies](https://packaging.python.org/guides/installing-using-pip-and-virtualenv/#using-requirements-files);\n3. [Execute the API docs of sphinx in `docs` directory](https://samnicholls.net/2016/06/15/how-to-sphinx-readthedocs/);\n    ```bash\n    sphinx-apidoc -e -f -o _modules/ ../hatemile\n    make html\n    ```\n4. Open the `docs/_build/html/index.html` with an internet browser.\n\n## Usage\n\nAdd HaTeMiLe for Django in `INSTALLED_APPS` of `settings.py`, to load the stylesheet that hide visual changes of library and the scripts used in events.\n\n```python\nINSTALLED_APPS = [\n    # ...\n    'hatemile_for_django',\n]\n```\n\nAdd the middleware of HaTeMiLe for Django in `MIDDLEWARE_CLASSES` of `settings.py`.\n\n```python\nMIDDLEWARE_CLASSES = (\n    # ...\n    'hatemile_for_django.middleware.AccessibleDjangoMiddleware',\n)\n```\n\nYou can control which are solutions will be executed, add the dict `HATEMILE_PARAMETERS` in `settings.py`.\n\n```python\nHATEMILE_PARAMETERS = {\n    # Associate all data cells with header cells of all tables.\n    'associate-all-data-cells-with-header-cells': True,\n    # Associate all labels with fields.\n    'associate-all-labels-with-fields': True,\n    # Provide the CSS features of speaking and speech properties in all\n    # elements.\n    'provide-all-speak-properties': False,\n    # Display the alternative text of all images.\n    'display-all-alternative-text-images': True,\n    # Display the headers of each data cell of all tables.\n    'display-all-cell-headers': True,\n    # Display the language of all elements.\n    'display-all-languages': True,\n    # Display the attributes of all links.\n    'display-all-links-attributes': True,\n    # Display the WAI-ARIA roles of all elements.\n    'display-all-roles': True,\n    # Display the titles of all elements.\n    'display-all-titles': True,\n    # Display all shortcuts.\n    'display-all-shortcuts': True,\n    # Display the WAI-ARIA attributes of all elements.\n    'display-all-wai-aria-states': True,\n    # Make all click events available from a keyboard.\n    'make-accessible-all-click-events': True,\n    # Make all Drag-and-Drop events available from a keyboard.\n    'make-accessible-all-drag-and-drop-events': True,\n    # Make all hover events available from a keyboard.\n    'make-accessible-all-hover-events': True,\n    # Mark that the fields have autocomplete.\n    'mark-all-autocomplete-fields': True,\n    # Mark that the fields have range.\n    'mark-all-range-fields': True,\n    # Mark that the fields is required.\n    'mark-all-required-fields': True,\n    # Mark a solution to display that a fields are invalid.\n    'mark-all-invalid-fields': True,\n    # Provide an alternative way to access the longs descriptions of all\n    # elements.\n    'provide-navigation-to-all-long-descriptions': True,\n    # Provide navigation by headings.\n    'provide-navigation-by-all-headings': True,\n    # Provide navigation by content skippers.\n    'provide-navigation-by-all-skippers': True,\n    # Hide visual changes of HaTeMiLe.\n    'hide-hatemile-changes': True,\n}\n```\n\n## Contributing\n\nIf you want contribute with HaTeMiLe for Django, read [contributing guidelines](https://github.com/hatemile/hatemile-for-django/blob/master/CONTRIBUTING.md).\n\n## See also\n* [HaTeMiLe for CSS](https://github.com/hatemile/hatemile-for-css)\n* [HaTeMiLe for JavaScript](https://github.com/hatemile/hatemile-for-javascript)\n* [HaTeMiLe for Java](https://github.com/hatemile/hatemile-for-java)\n* [HaTeMiLe for PHP](https://github.com/hatemile/hatemile-for-php)\n* [HaTeMiLe for Python](https://github.com/hatemile/hatemile-for-python)\n* [HaTeMiLe for Ruby](https://github.com/hatemile/hatemile-for-ruby)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hatemile/hatemile-for-django",
    "keywords": "",
    "license": "Apache2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hatemile-for-django",
    "package_url": "https://pypi.org/project/hatemile-for-django/",
    "platform": "",
    "project_url": "https://pypi.org/project/hatemile-for-django/",
    "project_urls": {
      "Homepage": "https://github.com/hatemile/hatemile-for-django"
    },
    "release_url": "https://pypi.org/project/hatemile-for-django/1.0.0/",
    "requires_dist": [
      "hatemile (==2.0.1)",
      "alabaster (>=0.7.10); extra == 'dev'",
      "astroid (>=1.6.5); extra == 'dev'",
      "atomicwrites (>=1.1.5); extra == 'dev'",
      "attrs (>=18.1.0); extra == 'dev'",
      "Babel (>=2.6.0); extra == 'dev'",
      "docutils (>=0.14); extra == 'dev'",
      "imagesize (>=1.0.0); extra == 'dev'",
      "isort (>=4.3.4); extra == 'dev'",
      "Jinja2 (>=2.10); extra == 'dev'",
      "lazy-object-proxy (>=1.3.1); extra == 'dev'",
      "MarkupSafe (>=1.0); extra == 'dev'",
      "mccabe (>=0.6.1); extra == 'dev'",
      "more-itertools (>=4.2.0); extra == 'dev'",
      "packaging (>=17.1); extra == 'dev'",
      "pluggy (>=0.6.0); extra == 'dev'",
      "py (>=1.5.4); extra == 'dev'",
      "pycodestyle (>=2.4.0); extra == 'dev'",
      "Pygments (>=2.2.0); extra == 'dev'",
      "pylint (>=1.9.2); extra == 'dev'",
      "pyparsing (>=2.2.0); extra == 'dev'",
      "pytest (>=3.6.2); extra == 'dev'",
      "pytz (>=2018.4); extra == 'dev'",
      "six (>=1.11.0); extra == 'dev'",
      "snowballstemmer (>=1.2.1); extra == 'dev'",
      "Sphinx (>=1.7.5); extra == 'dev'",
      "sphinxcontrib-websupport (>=1.1.0); extra == 'dev'",
      "wrapt (>=1.10.11); extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "HaTeMiLe for Django improve accessibility of web pages that uses the Django framework, converting pages with HTML code into pages with a more accessible code.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4021639,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "864cdcdf67054546684819e507a6c3e757aa732ab758909e788ee30bfc0a6792",
          "md5": "c2e1e818b8a2e955cef6257cb692b626",
          "sha256": "7d71396cdc5f2f28030b2ed87ac031523baf4a75a04a8a6f38f06067eb02e1fe"
        },
        "downloads": -1,
        "filename": "hatemile_for_django-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2e1e818b8a2e955cef6257cb692b626",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14304,
        "upload_time": "2018-07-02T04:55:13",
        "upload_time_iso_8601": "2018-07-02T04:55:13.784919Z",
        "url": "https://files.pythonhosted.org/packages/86/4c/dcdf67054546684819e507a6c3e757aa732ab758909e788ee30bfc0a6792/hatemile_for_django-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "864cdcdf67054546684819e507a6c3e757aa732ab758909e788ee30bfc0a6792",
        "md5": "c2e1e818b8a2e955cef6257cb692b626",
        "sha256": "7d71396cdc5f2f28030b2ed87ac031523baf4a75a04a8a6f38f06067eb02e1fe"
      },
      "downloads": -1,
      "filename": "hatemile_for_django-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c2e1e818b8a2e955cef6257cb692b626",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14304,
      "upload_time": "2018-07-02T04:55:13",
      "upload_time_iso_8601": "2018-07-02T04:55:13.784919Z",
      "url": "https://files.pythonhosted.org/packages/86/4c/dcdf67054546684819e507a6c3e757aa732ab758909e788ee30bfc0a6792/hatemile_for_django-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}