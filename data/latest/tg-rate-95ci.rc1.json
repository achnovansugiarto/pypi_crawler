{
  "info": {
    "author": "",
    "author_email": "\"Guoquan (Bob) Wang\" <bob.g.wang@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "\nLast updated: 2-1-2023, by Guoquan (Bob) Wang.  \n\nFeel free to contact me by: bob.g.wang@gmail.com\n\n## Main function\n\nCalculating the mean seal-level (MSL) rate and its 95% confidence interval. \n\nPlease read the main routine \"Main_cal_TG_Rate_95CI.py\" for calling the Python module \"TG_Rate_95CI.py\" in your Python programs. The detailed methodology for calculating the 95%CI is adressed in:\n\nWang, G. (2023). A methodoly for calculating the 95% confidence interval of the mean sea-level rate derived from tide gauge data, submitted xxx (02/01/2023)\n\nYou may install the module on your computer by: \n\n       pip install TG-Rate-95CI\n\nPlease visit the PyPi site:\n\n      https://pypi.org/project/TG-Rate-95CI\n       \nThe source code (TG_Rate_95CI.py) and an sample Main program (Main_cal_TG_Rate_95CI.py) are archived at my Github site:\n\n       https://github.com/bob-Github-2020/TG_Rate_95CI\n       \n       Main_cal_TG_Rate_95CI.py\n       \n## Required Python Modules\n\nYou may need to install several Python standard modules on your computer if you have not installed them before. Those modules are: pandas, numpy, matplotlib, statsmodels, statistics, math, datetime, and Pyts (Must be the LATEST Pyts). Do this by:\n\n       pip install module-name\n \nFor installing the LATEST pyts module for using the SSA module, please carefully read the following website.\n\n    https://pyts.readthedocs.io/en/latest/install.html\n    \nYou should get the LATEST version of pyts by cloning the Github repository:\n\n       git clone https://github.com/johannfaouzi/pyts.git\n       cd pyts\n       pip install .\n       \n### It may take a while installing the LATEST pyts on your Windows system\n\nFirst, install \"git\" on your Windows computer, https://git-scm.com/downloads\n\nSecond, Use the git Bash window, run the following commands:\n       \n          git clone https://github.com/johannfaouzi/pyts.git\n          cd pyts\n          pip install .\n          \n\n## Test the module (Visit my GitHub site)\n\nCopy Main_cal_TG_Rate_95CI.py, TG_Rate_95CI.py, and the sample PSMSL data (e.g., 828.rlrdata) to your working directory. Run the following command in a Linux terminal:\n\n       ./Main_cal_TG_Rate_95CI.py\n       \nor run (in a Windows CMD terminal):\n\n       python3 Main_cal_TG_Rate_95CI.py\n       \n\n## Important notices\n\nThe PSMSL dataset *.rlrdata is organized as the following, the unit of MSL is mm.\n\n       1957.7083;  6990; 0;000\n       1957.7917;  6975; 0;000\n       .......\n       1965.1250;-99999;00;000\n       1965.2083;-99999;00;000\n       1965.2917;-99999;00;000\n\nPSMSL fills the data gap as -99999. These gap lines need to be removed before inputting the data into Main_cal_TG_Rate_95CI.py and TG_Rate_95CI.py. Only the first two columns are used. You may use the follwing Bash command to remove gap lines:\n \n        sed -e '/-99999/d' -i 828.rlrdata \n\nI wrote a Bash script, \"do_PSMSL_Pre_Process.sh\", for doing the pre-process, removing gap lines, excluding datasets shorter than 20 years or with gaps over half of the year range. Visit my GitHub site to get the script.\n\n          \n# For NOAA data users\n\nThe Main program \"Main_cal_TG_Rate_95CI.py\" is designed for reading PSMSL data. NOAA data is organized in a slight different way (e.g., 9457292_meantrend.txt). The unit of MSL is in meters.\n   \n    Year   Month    Monthly_MSL       \n    1949   9        -0.622                                                           \n    1949   10       -0.663                                                           \n    1949   11       -0.568                                                           \n    1949   12       -0.804 \n\nIf you are working on NOAA data, please use the following Python program for calling the module, TG_Rate_95CI.py:\n\n     #! /usr/bin/python3\n     ## for reading NOAA MSL data and calling \"TG_Rate_95CI.py\"\n     import os\n     import pandas as pd\n     from TG_Rate_95CI import cal_95CI\n  \n     directory = './'\n       for fin in os.listdir(directory):\n           if fin.endswith(\"meantrend.txt\"):\n              print(fin)\n              ns=len(fin)\n              TG = fin[0:7]    # station name, e.g., 8771450\n              ts_noaa = []\n              ts_noaa = pd.read_csv (fin, header=0, delim_whitespace=True)\n              year = ts_noaa.iloc[:,0]    # year\n              mm = ts_noaa.iloc[:,1]\n              msl = ts_noaa.iloc[:,2]     # Monthly_MSL\n            \n              ts = msl*1000              # m to mm\n              dy = year + (mm-0.5)/12\n              \n              # For processing a bunch datasets, may set pltshow='off'\n              result=cal_95CI(dy, ts, TG, output='on', pltshow='on')\n              b=round(result[0],2)           # Trend\n              b_95CI=round(result[1],2)      # 95%CI\n \n              #os.remove (fin)     \n            else:\n              pass\n\n## I wish a good luck for Windows-Python users! \n\n## Example outputs\n\nSome example figures for the Galveston Pleasure Pier TG (PSMSL ID: 828) output from the Python Module:\n\n![828_ACF](https://user-images.githubusercontent.com/65426380/215344521-fa8f2041-255a-4e4a-888a-d75ad069e869.png)\n![828_SSA](https://user-images.githubusercontent.com/65426380/215344556-f8960f17-214a-4f86-a8a0-f42d44d55ac4.png)\n![828_Decomposition](https://user-images.githubusercontent.com/65426380/215344568-90f68bdb-2b39-46e6-9349-5d1af790b1c5.png)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "The MIT License (MIT) Copyright © 2023 <copyright holders>  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "TG-Rate-95CI",
    "package_url": "https://pypi.org/project/TG-Rate-95CI/",
    "platform": null,
    "project_url": "https://pypi.org/project/TG-Rate-95CI/",
    "project_urls": {
      "Homepage": "https://github.com/bob-Github-2020/TG_Rate_95CI"
    },
    "release_url": "https://pypi.org/project/TG-Rate-95CI/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Calculating the 95% confidence interval for the trend of Tide Gauge data",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16669934,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9307debcfdd0db20c39f39bccaef1b440c01093796646dc05abfbd1abc097df9",
          "md5": "2c37cf817dddc954e6ee903c523cdb19",
          "sha256": "b980b213b00a149a1943f51cf930720a267fbb2a2c3d6ed52dacdf43b6027e0a"
        },
        "downloads": -1,
        "filename": "TG_Rate_95CI-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c37cf817dddc954e6ee903c523cdb19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10759,
        "upload_time": "2023-02-02T18:48:10",
        "upload_time_iso_8601": "2023-02-02T18:48:10.983418Z",
        "url": "https://files.pythonhosted.org/packages/93/07/debcfdd0db20c39f39bccaef1b440c01093796646dc05abfbd1abc097df9/TG_Rate_95CI-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50ced38df5676d64c956d4dfa52c987e1cc803bd4c75aa5d8e4ffd8bd084cae8",
          "md5": "18ae21c5bbddbe0d1ded62640a4e66e4",
          "sha256": "5c27892925ed52136d314b20458c14023a0142107a52c284147d98c15266a4f9"
        },
        "downloads": -1,
        "filename": "TG-Rate-95CI-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "18ae21c5bbddbe0d1ded62640a4e66e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9419,
        "upload_time": "2023-02-02T18:48:13",
        "upload_time_iso_8601": "2023-02-02T18:48:13.093253Z",
        "url": "https://files.pythonhosted.org/packages/50/ce/d38df5676d64c956d4dfa52c987e1cc803bd4c75aa5d8e4ffd8bd084cae8/TG-Rate-95CI-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9307debcfdd0db20c39f39bccaef1b440c01093796646dc05abfbd1abc097df9",
        "md5": "2c37cf817dddc954e6ee903c523cdb19",
        "sha256": "b980b213b00a149a1943f51cf930720a267fbb2a2c3d6ed52dacdf43b6027e0a"
      },
      "downloads": -1,
      "filename": "TG_Rate_95CI-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2c37cf817dddc954e6ee903c523cdb19",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 10759,
      "upload_time": "2023-02-02T18:48:10",
      "upload_time_iso_8601": "2023-02-02T18:48:10.983418Z",
      "url": "https://files.pythonhosted.org/packages/93/07/debcfdd0db20c39f39bccaef1b440c01093796646dc05abfbd1abc097df9/TG_Rate_95CI-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "50ced38df5676d64c956d4dfa52c987e1cc803bd4c75aa5d8e4ffd8bd084cae8",
        "md5": "18ae21c5bbddbe0d1ded62640a4e66e4",
        "sha256": "5c27892925ed52136d314b20458c14023a0142107a52c284147d98c15266a4f9"
      },
      "downloads": -1,
      "filename": "TG-Rate-95CI-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "18ae21c5bbddbe0d1ded62640a4e66e4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 9419,
      "upload_time": "2023-02-02T18:48:13",
      "upload_time_iso_8601": "2023-02-02T18:48:13.093253Z",
      "url": "https://files.pythonhosted.org/packages/50/ce/d38df5676d64c956d4dfa52c987e1cc803bd4c75aa5d8e4ffd8bd084cae8/TG-Rate-95CI-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}