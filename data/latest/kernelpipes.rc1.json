{
  "info": {
    "author": "NeuML",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development",
      "Topic :: Utilities"
    ],
    "description": "# Kaggle Kernel Pipelines\nkernelpipes is a Python 3.x project that supports running a series of Kaggle kernels through the Kaggle API. \n\n## Installation\nThe easiest way to install is via pip and PyPI\n\n    pip install kernelpipes\n\nYou can also install kernelpipes directly from GitHub. Using a Python Virtual Environment is recommended.\n\n    pip install git+https://github.com/neuml/kernelpipes\n\nPython 3.6+ is supported\n\nThis package assumes a Kaggle token has been generated and installed. See the [kaggle-api](https://github.com/Kaggle/kaggle-api) API credentials section for more information.\n\n## Example\nThe following YAML script is an example pipeline script. Pipelines require a name and a series of steps to execute. \n\n```yaml\n# Pipeline name\nname: CORD-19 Papers\n\n# Pipeline execution steps\nsteps:\n  - kernel: davidmezzetti/cord-19-papers\n  - status: 2.5m\n  - output: davidmezzetti/cord-19-papers\n```\n\nThe above pipeline executes a kernel named cord-19-papers, checking every 2.5 minutes for completion. Once the kernel is complete, output files are downloaded locally.\n\nBelow is a more complex example demonstrating scheduling and multiple status steps.\n\n```yaml\n# Pipeline name\nname: CORD-19 Pipeline\n\n# Schedule job to run every 15 minutes between 10pm - 12am local time\nschedule: \"*/15 22-23 * * *\"\n\n# Pipeline execution steps\nsteps:\n  - check: allen-institute-for-ai/CORD-19-research-challenge\n  - kernel: davidmezzetti/cord-19-article-entry-dates\n  - status: 1m\n  - kernel: davidmezzetti/cord-19-analysis-with-sentence-embeddings\n  - status: 15m\n  - kernel: davidmezzetti/cord-19-patient-descriptions\n  - kernel: davidmezzetti/cord-19-risk-factors\n  - status: 2.5m\n  - kernel: davidmezzetti/cord-19-report-builder\n  - kernel: davidmezzetti/cord-19-study-metadata-export\n  - kernel: davidmezzetti/cord-19-task-csv-exports\n  - status: 2.5m\n```\n\nThe script above is named \"CORD-19 Pipeline\" and has a series of sequential steps. Kernel steps will execute a kernel and status steps will poll the status of preceding kernel steps, waiting for completion. For example, the first status command above will run a Status API call every minute checking for completion. If any of the steps return an error status, the pipeline is halted and the program exits.\n\nKernels are started until they reach a status step. In the example above, the last status call executes cord-19-report-builder, cord-19-study-metadata-export and cord-19-task-csv-exports in parallel and waits for all 3 to complete. \n\nAssuming the YAML file above is stored at pipeline.yml, the pipeline can be executed via:\n\n```bash\nkernelpipes pipeline.yml\n```\n*Note: When running on Windows, it may be necessary to set an environment variable to force UTF-8 file operations before running the command above e.g. 'set PYTHONUTF8=1'*\n\n## Basic pipeline configuration\n\n### name\n```yaml\nname: <pipeline name>\n```\n\nRequired field, names the pipeline\n\n### schedule\n```yaml\nschedule: cron string\n```\n\nOptional field to enable running jobs through a scheduler. System cron can be used in place of this, depending on preference. One advantage of this method is that new jobs won't be spawned while a prior job is running. For example if a job is scheduled to run every hour and a run takes 1.5 hours, it will skip the 2nd run and start again on the 3rd hour. \n\n## Steps\n\n### check\n```yaml\ncheck: /kaggle/dataset/path\n```\n\nAllows conditionally running a pipeline based on dataset update status. Retrieves dataset metadata and compares the latest version against the last run version and only allows processing to proceed if the dataset has been updated. If there is no local metadata for the dataset, the run will proceed.\n\n### kernel\n``` yaml\nkernel: /kaggle/kernel/path\n```\nReturns the kernel specified at /kaggle/kernel/path\n\n### output\n``` yaml\noutput: /kaggle/kernel/path\n```\nDownloads kernel output files for the kernel specified at /kaggle/kernel/path\n\n### status\n```yaml\nstatus: <seconds|s|m|h>\n```\n\nChecks the status of preceding kernel steps at the specified duration.\n\nExample durations: 10 for 10 seconds, 30s for 30 seconds, 1m for 1 minute and 1h for 1 hour.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/neuml/kernelpipes",
    "keywords": "kaggle job task machine-learning",
    "license": "Apache 2.0: http://www.apache.org/licenses/LICENSE-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kernelpipes",
    "package_url": "https://pypi.org/project/kernelpipes/",
    "platform": "",
    "project_url": "https://pypi.org/project/kernelpipes/",
    "project_urls": {
      "Documentation": "https://github.com/neuml/kernelpipes",
      "Homepage": "https://github.com/neuml/kernelpipes",
      "Issue Tracker": "https://github.com/neuml/kernelpipes/issues",
      "Source Code": "https://github.com/neuml/kernelpipes"
    },
    "release_url": "https://pypi.org/project/kernelpipes/1.2.1/",
    "requires_dist": [
      "croniter (>=0.3.32)",
      "kaggle (>=1.5.6)",
      "PyYAML (>=5.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "Kaggle Kernel Pipelines",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7944975,
  "releases": {
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4d7a345ed3602834b2397f4527b491b94711635162e215510039e5507bf3ccc",
          "md5": "c40d34d8a7f513ececee44301e057ed7",
          "sha256": "b6cea98dbd1161dfa9d56f28b57ffa0a28c7bca40bbf39542e4bd85167da5acc"
        },
        "downloads": -1,
        "filename": "kernelpipes-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c40d34d8a7f513ececee44301e057ed7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12018,
        "upload_time": "2020-08-12T14:53:36",
        "upload_time_iso_8601": "2020-08-12T14:53:36.924790Z",
        "url": "https://files.pythonhosted.org/packages/a4/d7/a345ed3602834b2397f4527b491b94711635162e215510039e5507bf3ccc/kernelpipes-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "090620a871a87f66b71fd12e86b998491869548921360afaef1870c4607c7d52",
          "md5": "e0723b99a69a8c026456be2f548d2b35",
          "sha256": "81b2b3027d170620a48a37427c22a8e4e5ae80b445f718fee306a0496e0e5a42"
        },
        "downloads": -1,
        "filename": "kernelpipes-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e0723b99a69a8c026456be2f548d2b35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6694,
        "upload_time": "2020-08-12T14:53:39",
        "upload_time_iso_8601": "2020-08-12T14:53:39.273631Z",
        "url": "https://files.pythonhosted.org/packages/09/06/20a871a87f66b71fd12e86b998491869548921360afaef1870c4607c7d52/kernelpipes-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4d7a345ed3602834b2397f4527b491b94711635162e215510039e5507bf3ccc",
        "md5": "c40d34d8a7f513ececee44301e057ed7",
        "sha256": "b6cea98dbd1161dfa9d56f28b57ffa0a28c7bca40bbf39542e4bd85167da5acc"
      },
      "downloads": -1,
      "filename": "kernelpipes-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c40d34d8a7f513ececee44301e057ed7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12018,
      "upload_time": "2020-08-12T14:53:36",
      "upload_time_iso_8601": "2020-08-12T14:53:36.924790Z",
      "url": "https://files.pythonhosted.org/packages/a4/d7/a345ed3602834b2397f4527b491b94711635162e215510039e5507bf3ccc/kernelpipes-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "090620a871a87f66b71fd12e86b998491869548921360afaef1870c4607c7d52",
        "md5": "e0723b99a69a8c026456be2f548d2b35",
        "sha256": "81b2b3027d170620a48a37427c22a8e4e5ae80b445f718fee306a0496e0e5a42"
      },
      "downloads": -1,
      "filename": "kernelpipes-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e0723b99a69a8c026456be2f548d2b35",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6694,
      "upload_time": "2020-08-12T14:53:39",
      "upload_time_iso_8601": "2020-08-12T14:53:39.273631Z",
      "url": "https://files.pythonhosted.org/packages/09/06/20a871a87f66b71fd12e86b998491869548921360afaef1870c4607c7d52/kernelpipes-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}