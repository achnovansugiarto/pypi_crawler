{
  "info": {
    "author": "Daniel Lindsley",
    "author_email": "daniel@toastdriven.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# `definite`\n\nSimple finite state machines.\n\nPerfect for representing workflows.\n\n\n## Quickstart\n\n```python\nfrom definite import FSM\n\n# You define all the valid states, as well as what their allowed\n# transitions are.\nclass Workflow(FSM):\n    allowed_transitions = {\n        \"draft\": [\"awaiting_review\", \"rejected\"],\n        \"awaiting_review\": [\"draft\", \"reviewed\", \"rejected\"],\n        \"reviewed\": [\"published\", \"rejected\"],\n        \"published\": None,\n        \"rejected\": [\"draft\"],\n    }\n    default_state = \"draft\"\n\n# Right away, you can use the states/transitions as-is to enforce changes.\nworkflow = Workflow()\nworkflow.current_state() # \"draft\"\n\nworkflow.transition_to(\"awaiting_review\")\nworkflow.transition_to(\"reviewed\")\n\nworkflow.is_allowed(\"published\") # True\n\n# Invalid/disallowed transitions will throw an exception.\nworkflow.current_state() # \"reviewed\"\n# ...which can only go to \"published\" or \"rejected\", but...\nworkflow.transition_to(\"awaiting_review\")\n# Traceback (most recent call last):\n# ...\n# workflow.TransitionNotAllowed: \"reviewed\" cannot transition to \"awaiting_review\"\n\n\n# Additionally, you can set up extra code to fire on given state changes.\nclass Workflow(FSM):\n    # Same transitions & default state.\n    allowed_transitions = {\n        \"draft\": [\"awaiting_review\", \"rejected\"],\n        \"awaiting_review\": [\"draft\", \"reviewed\", \"rejected\"],\n        \"reviewed\": [\"published\", \"rejected\"],\n        \"published\": None,\n        \"rejected\": [\"draft\"],\n    }\n    default_state = \"draft\"\n\n    # Define a `handle_<state_name>` method on the class.\n    def handle_awaiting_review(self, new_state):\n        spell_check_results = check_spelling(self.obj.content)\n        msg = (\n            f\"{self.obj.title} ready for review. \"\n            f\"{len(spell_check_results)} spelling errors.\"\n        )\n        send_email(to=editor_email, message=msg)\n\n    def handle_published(self, new_state):\n        self.obj.pub_date = datetime.datetime.utcnow()\n        self.obj.save()\n\n    # You can also setup code that fires on **ANY** valid transition with the\n    # special `handle_any` method.\n    def handle_any(self, new_state):\n        self.obj.state = new_state\n        self.obj.save()\n\n\n# We can pull in any Python object, like a database-backed model, that we\n# want to associate with our FSM.\nfrom news.models import NewsPost\nnews_post = NewsPost.objects.create(\n    title=\"Hello world!\",\n    content=\"This iz our frist post!\",\n    state=\"draft\",\n)\n\n# We start mostly the same, but this time pass an `obj` kwarg!\nworkflow = Workflow(obj=news_post)\n\n# If you wanted to be explicit, you could also pass along the `initial_state`:\nworkflow = Workflow(\n    obj=news_post,\n    initial_state=news_post.state\n)\n\nworkflow.current_state() # \"draft\"\n\n# But when we trigger this change...\nworkflow.transition_to(\"awaiting_review\")\n# ...it triggers the spell check & the email we defined above, as well as\n# hitting the `handle_any` method & updating the `state` field in the DB.\nnews_post.refresh_from_db()\nnews_post.state # \"awaiting_review\" !\n```\n\n\n## Installation\n\n`pip install definite`\n\n\n## Requirements\n\n* Python 3.6+\n\n\n## Testing\n\n`$ pytest .`\n\n\n## License\n\nNew BSD\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/toastdriven/definite",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "definite",
    "package_url": "https://pypi.org/project/definite/",
    "platform": null,
    "project_url": "https://pypi.org/project/definite/",
    "project_urls": {
      "Homepage": "https://github.com/toastdriven/definite",
      "Repository": "https://github.com/toastdriven/definite"
    },
    "release_url": "https://pypi.org/project/definite/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6,<4.0",
    "summary": "Simple finite state machines.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14149006,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "966a3da4f304da5ee9228804734f282449fcbfb0b9d9c7e63341028cca7b631b",
          "md5": "0bb797f487189ab804a7741ab1ba1df8",
          "sha256": "dfdb4c074054507981463fe1ef24f1d33c8f08390c68e2bb21d1f9b1cd1faaf2"
        },
        "downloads": -1,
        "filename": "definite-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0bb797f487189ab804a7741ab1ba1df8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 6439,
        "upload_time": "2022-06-16T08:49:53",
        "upload_time_iso_8601": "2022-06-16T08:49:53.766706Z",
        "url": "https://files.pythonhosted.org/packages/96/6a/3da4f304da5ee9228804734f282449fcbfb0b9d9c7e63341028cca7b631b/definite-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44535a3d67b177d58ee9f2d749ba24b746579e066af0f399dc1a33e57f08d270",
          "md5": "07acd9770a2d198d03d55d69f12aafa7",
          "sha256": "8cc05c844aca06cb4f83a846515ac34010dd1143e3e5951d9066dffebdbd6a82"
        },
        "downloads": -1,
        "filename": "definite-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "07acd9770a2d198d03d55d69f12aafa7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 6053,
        "upload_time": "2022-06-16T08:49:56",
        "upload_time_iso_8601": "2022-06-16T08:49:56.315014Z",
        "url": "https://files.pythonhosted.org/packages/44/53/5a3d67b177d58ee9f2d749ba24b746579e066af0f399dc1a33e57f08d270/definite-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "966a3da4f304da5ee9228804734f282449fcbfb0b9d9c7e63341028cca7b631b",
        "md5": "0bb797f487189ab804a7741ab1ba1df8",
        "sha256": "dfdb4c074054507981463fe1ef24f1d33c8f08390c68e2bb21d1f9b1cd1faaf2"
      },
      "downloads": -1,
      "filename": "definite-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0bb797f487189ab804a7741ab1ba1df8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 6439,
      "upload_time": "2022-06-16T08:49:53",
      "upload_time_iso_8601": "2022-06-16T08:49:53.766706Z",
      "url": "https://files.pythonhosted.org/packages/96/6a/3da4f304da5ee9228804734f282449fcbfb0b9d9c7e63341028cca7b631b/definite-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44535a3d67b177d58ee9f2d749ba24b746579e066af0f399dc1a33e57f08d270",
        "md5": "07acd9770a2d198d03d55d69f12aafa7",
        "sha256": "8cc05c844aca06cb4f83a846515ac34010dd1143e3e5951d9066dffebdbd6a82"
      },
      "downloads": -1,
      "filename": "definite-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "07acd9770a2d198d03d55d69f12aafa7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4.0",
      "size": 6053,
      "upload_time": "2022-06-16T08:49:56",
      "upload_time_iso_8601": "2022-06-16T08:49:56.315014Z",
      "url": "https://files.pythonhosted.org/packages/44/53/5a3d67b177d58ee9f2d749ba24b746579e066af0f399dc1a33e57f08d270/definite-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}