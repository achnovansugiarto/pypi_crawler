{
  "info": {
    "author": "Elves M. Rodrigues",
    "author_email": "elvesmateusrodrigues@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "# antiblock_scrapy_selenium\n\nEste módulo é uma extensão para o projeto de [scrapy-selenium](https://github.com/clemfromspace/scrapy-selenium). \n\nO principal uso do **scrapy-selenium** é para o caso de sites que precisam processar javascript para renderizar seu conteúdo. Por outro lado, mecanismos antibloqueios básicos de coletas não se encontram no projeto original.\n\nScrapy-selenium foi extendido usando como base [antiblock-selenium](https://github.com/elvesrodrigues/antiblock-selenium), que permite rotacionar IPs via Tor, definir delays entre requisições (aleatório ou fixo), rotacionar user-agents, além de persistir/carregar cookies.\n\n**Obs.: Não há compatibilidade com selenium remoto neste projeto.** \n\n## Funcionalidades\n\nJunção de **scrapy-selenium** com **antiblock-selenium**, ou seja:\n\n- Permitir carregar sites que necessitam javascript ao Scrapy, entre outras funcionalidades do **scrapy-selenium**\n- Evitar bloqueios em coletas, por meio de:\n    - Rotação de IPs via Tor\n    - Rotação de user-agents\n    - Delays aleatórios ou fixos entre requisições\n    - Persistir/carregar cookies\n\n## Instalação\n\nManeira mais fácil:\n\n```bash\npip install antiblock-scrapy-selenium\n```\n## Configuração\n\nSiga os passos de configuração do Tor em [antiblock-selenium](https://github.com/elvesrodrigues/antiblock-selenium#configurando-tor).\n\nOs navegadores suportados são:\n- Chrome\n- Firefox\n\n\n## Uso\n\n### Básico\n\n- Ativação do Middleware: \n    ```bash\n    DOWNLOADER_MIDDLEWARES = {\n        'antiblock_scrapy_selenium.SeleniumMiddleware': 800\n    }\n    ```\n- Adicione o navegador a ser usado, o local da executável do driver e os argumentos a serem passados:\n    ```python\n    #settings.py\n    from shutil import which\n\n    SELENIUM_DRIVER_NAME = 'firefox' #ou chrome\n    SELENIUM_DRIVER_EXECUTABLE_PATH = which('geckodriver')\n    SELENIUM_DRIVER_ARGUMENTS=['-headless']  # '--headless' se estiver usando chrome\n    ```\n- Opcionalmente, defina o local da executável do navegador:\n    ```python\n    SELENIUM_BROWSER_EXECUTABLE_PATH = which('firefox')\n    ```\n- Use `antiblock_scrapy_selenium.SeleniumRequest` ao invés de `Request` do Scrapy, como abaixo:\n    ```python \n    from antiblock_scrapy_selenium import SeleniumRequest\n\n    yield SeleniumRequest(url=url, callback=self.parse_result)\n    ```\n    - Exemplo com um Spider:\n        ```python\n        import scrapy\n\n        from antiblock_scrapy_selenium import SeleniumRequest\n\n        class FooSpider(scrapy.Spider):\n            name = 'foo'\n\n            def start_requests(self):\n                url = 'https://alguma-url'\n\n                yield SeleniumRequest(url=url, callback=self.parse)\n\n            def parse(self, response):\n                pass\n        ```\n- Utilize as demais funcionalidades do `scrapy-selenium` normalmente, disponíveis [aqui](https://github.com/clemfromspace/scrapy-selenium#additional-arguments).\n\n> **O parâmetro SELENIUM_COMMAND_EXECUTOR do scrapy-selenium não é suportada.**\n\n### Uso de mecanismos antibloqueios\n\nApós seguir os passos de uso básico, configure de acordo com os mecanismos de camuflagem abaixo.\n\n#### Rotação de IPs via Tor\nParâmetros:\n\n- `SELENIUM_DRIVER_CHANGE_IP_AFTER`: Define com quantas requisições o IP será alterado `(Default 42)`\n- `SELENIUM_DRIVER_ALLOW_REUSE_IP_AFTER`: Define quando um IP poderá ser reusado `(Default 10)`\n\nExemplo:\n\n```python\nSELENIUM_DRIVER_CHANGE_IP_AFTER = 42\nSELENIUM_DRIVER_ALLOW_REUSE_IP_AFTER = 5\n```\n\n#### Rotação de user-agents\n\n> Suporte a rotação de user-agent apenas para Firefox.\n\nParâmetros:\n\n- `SELENIUM_DRIVER_USER_AGENTS`: Lista de user-agents a ser rotacionada.\n- `SELENIUM_DRIVER_CHANGE_USER_AGENT_AFTER`: Quando o user-agent deverá se alterado `(Default 0 - user-agent não muda)`\n\nExemplo:\n\n```python\n# settings.py\n\nSELENIUM_DRIVER_USER_AGENTS = ['user-agent-1', 'user-agent-2', ... , 'user-agent-n']\nSELENIUM_DRIVER_CHANGE_USER_AGENT_AFTER = 721 #Requisições com mesmo user-agent Ex.: 10, 20, 30... \n```\n\n#### Atrasos entre requisições\n\nPermite atrasos aleatórios ou fixos entre requisições.\n\nParâmetros:\n\n- `SELENIUM_DRIVER_TIME_BETWEEN_CALLS`: Tempo em segundos entre requisições. Aceita números com até 2 duas casas decimais `(Default 0.25)`\n- `SELENIUM_DRIVER_RANDOM_DELAY`: Se o atraso entre requisições será fixo (definindo esse parâmetro como `False`) ou aleatório, escolhido entre `0.5 * SELENIUM_DRIVER_TIME_BETWEEN_CALLS` e `1.5 * SELENIUM_DRIVER_TIME_BETWEEN_CALLS` `(Default True)`\n\n```python\n# settings.py\n\nSELENIUM_DRIVER_TIME_BETWEEN_CALLS = 2.5\nSELENIUM_DRIVER_RANDOM_DELAY = False # Tempo mínimo fixo entre requisições\n```\n\n#### Gerência de Cookies\n\nParâmetros:\n- `SELENIUM_DRIVER_PERSIST_COOKIES_WHEN_CLOSE`: Se quando o driver é fechado os cookies deles serão salvos `(Default False)`\n- `SELENIUM_DRIVER_RELOAD_COOKIES_WHEN_START`: Se ao iniciar, cookies salvos na última sessão serão recarregados `(Default False)`\n    - Se `True`, é necessário especificar o domínio dos cookies em `SELENIUM_DRIVER_COOKIE_DOMAIN` \n- `SELENIUM_DRIVER_LOCATION_OF_COOKIES`: Local onde os cookies serão salvos. `(Default 'cookies.pkl')` \n- `SELENIUM_DRIVER_LOAD_COOKIES`: Lista de cookies a serem carregados (Default [] - Lista vazia)\n    - Se a lista não vazia for passada, é necessário especificar o domínio dos cookies em `SELENIUM_DRIVER_COOKIE_DOMAIN` \n- `SELENIUM_DRIVER_COOKIE_DOMAIN`: Domínio onde os cookies são válidos.  \n\nExemplo - Persistindo cookies:\n\n```python\n# settings.py\n\nSELENIUM_DRIVER_PERSIST_COOKIES_WHEN_CLOSE = True\nSELENIUM_DRIVER_RELOAD_COOKIES_WHEN_START = True\nSELENIUM_DRIVER_COOKIE_DOMAIN = 'https://www.site-sendo-coletado.com/'\n\nSELENIUM_DRIVER_LOCATION_OF_COOKIES = 'cookies-1.pkl'\n```\nExemplo - Carregando cookies:\n\n```python\n\ncookie1 = {'country': 'BR', 'currency': 'dolar'}\ncookie2 = {'lang': 'pt-br'}\n\nSELENIUM_DRIVER_LOAD_COOKIES = [cookie1, cookie2]\nSELENIUM_DRIVER_COOKIE_DOMAIN = 'https://www.site-sendo-coletado.com/' \n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/elvesrodrigues/antiblock-scrapy-selenium",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "antiblock-scrapy-selenium",
    "package_url": "https://pypi.org/project/antiblock-scrapy-selenium/",
    "platform": "",
    "project_url": "https://pypi.org/project/antiblock-scrapy-selenium/",
    "project_urls": {
      "Homepage": "https://github.com/elvesrodrigues/antiblock-scrapy-selenium"
    },
    "release_url": "https://pypi.org/project/antiblock-scrapy-selenium/0.0.1/",
    "requires_dist": [
      "selenium",
      "antiblock-selenium"
    ],
    "requires_python": ">=3.0",
    "summary": "Mecanismos antibloqueios para Scrapy-Selenium",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7490569,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0b63ee3a28761712a1ba9a8d9a09a5e6c81da726a9e4a801da28fe8b116b663",
          "md5": "f9e70407d76a1719ac43aaaf77383fe8",
          "sha256": "8be2f89aa4e000ae748aae10421c4f53550b89eeaa23fd1371480337a8ce2ee0"
        },
        "downloads": -1,
        "filename": "antiblock_scrapy_selenium-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9e70407d76a1719ac43aaaf77383fe8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 7688,
        "upload_time": "2020-06-16T18:42:52",
        "upload_time_iso_8601": "2020-06-16T18:42:52.006337Z",
        "url": "https://files.pythonhosted.org/packages/b0/b6/3ee3a28761712a1ba9a8d9a09a5e6c81da726a9e4a801da28fe8b116b663/antiblock_scrapy_selenium-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c40ed4db3063b9709dd15d57f95da8210eb180da8142d17b80bff9571b839d5",
          "md5": "c077bf2b2e64328580e27cb3a4cbcce2",
          "sha256": "21ac0c8720482c3514bc5b93626545b23d3dd982521a7316d1345aa06747ace1"
        },
        "downloads": -1,
        "filename": "antiblock-scrapy-selenium-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c077bf2b2e64328580e27cb3a4cbcce2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 6214,
        "upload_time": "2020-06-16T18:42:54",
        "upload_time_iso_8601": "2020-06-16T18:42:54.802779Z",
        "url": "https://files.pythonhosted.org/packages/2c/40/ed4db3063b9709dd15d57f95da8210eb180da8142d17b80bff9571b839d5/antiblock-scrapy-selenium-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0b63ee3a28761712a1ba9a8d9a09a5e6c81da726a9e4a801da28fe8b116b663",
        "md5": "f9e70407d76a1719ac43aaaf77383fe8",
        "sha256": "8be2f89aa4e000ae748aae10421c4f53550b89eeaa23fd1371480337a8ce2ee0"
      },
      "downloads": -1,
      "filename": "antiblock_scrapy_selenium-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f9e70407d76a1719ac43aaaf77383fe8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 7688,
      "upload_time": "2020-06-16T18:42:52",
      "upload_time_iso_8601": "2020-06-16T18:42:52.006337Z",
      "url": "https://files.pythonhosted.org/packages/b0/b6/3ee3a28761712a1ba9a8d9a09a5e6c81da726a9e4a801da28fe8b116b663/antiblock_scrapy_selenium-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c40ed4db3063b9709dd15d57f95da8210eb180da8142d17b80bff9571b839d5",
        "md5": "c077bf2b2e64328580e27cb3a4cbcce2",
        "sha256": "21ac0c8720482c3514bc5b93626545b23d3dd982521a7316d1345aa06747ace1"
      },
      "downloads": -1,
      "filename": "antiblock-scrapy-selenium-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c077bf2b2e64328580e27cb3a4cbcce2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 6214,
      "upload_time": "2020-06-16T18:42:54",
      "upload_time_iso_8601": "2020-06-16T18:42:54.802779Z",
      "url": "https://files.pythonhosted.org/packages/2c/40/ed4db3063b9709dd15d57f95da8210eb180da8142d17b80bff9571b839d5/antiblock-scrapy-selenium-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}