{
  "info": {
    "author": "Albin Kauffmann",
    "author_email": "albin@kauff.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Games/Entertainment"
    ],
    "description": "# ubox360\n\nThis python program can help you to map buttons and axes of a gamepad to match the layout of an Xbox 360 controller.\n\n[![Xbox 360 controller](https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/360_controller.svg/512px-360_controller.svg.png)](https://commons.wikimedia.org/wiki/File:360_controller.svg)\n\nIn other words, it can map gamepad axis and buttons (or even keys of a keyboard) to XBox 360 Linux events.\nThese XBox 360 controller Linux events (listed in /usr/include/linux/input-event-codes.h) are:\n- axis: ABS_X, ABS_Y, ABS_Z, ABS_RX, ABS_RY, ABS_RZ, ABS_HAT0X, ABS_HAT0Y\n- buttons: BTN_A, BTN_B, BTN_X, BTN_Y, BTN_TL, BTN_TR, BTN_SELECT, BTN_START, BTN_MODE, BTN_THUMBL, BTN_THUMBR\n\nThis script (which is creating a virtual gamepad) is probably the latest solution.\nIf playing an SDL game, just consider using `gamecontroller` as explained in [README-controllermap.md](README-controllermap.md#play-sdl-games).\n\n`ubox360` program name comes from the fact that events binding is done in userspace.\n\n## Installation\n\n### Dependencies\n\nubox360 depends on:\n- python-evdev (automatically installed by `pip`)\n- the uinput kernel module (mainline)\n\n### Installation from Pypi\n\n    pip install ubox360\n\n### Installation from sources\n\n    git clone git@gitlab.com:albinou/python-ubox360.git\n    cd python-ubox360\n    pip install .\n\n## Configuration\n\nIt is required to configure udev permissions rules prior to run ubox360.\nThe following instructions have been applied on an ArchLinux installation but they should be applicable to any Linux distribution using a recent version of systemd.\n\n### uinput rule\n\nWhen loading the `uinput` kernel module, the device `/dev/uinput` belongs to root:root by default.\nLet's create an `uinput` group for this special device:\n\n    shell> sudo groupadd --system uinput\n\n... and let's set permissions with a new udev rules file `/etc/udev/rules.d/99-uinput.rules`:\n\n    shell> cat /etc/udev/rules.d/99-uinput.rules\n    SUBSYSTEM==\"misc\", KERNEL==\"uinput\", GROUP=\"uinput\", MODE=\"0660\"\n\nYou can now load the `uinput` module:\n\n    shell> sudo modprobe uinput\n    shell> ls -l /dev/uinput\n    crw-rw---- 1 root uinput 10, 223 May 22 21:42 /dev/uinput\n\nIf permissions are wrong, you can try to trigger the udev rule:\n\n    shell> sudo udevadm trigger /dev/uinput\n\n### Gamepad event device rule\n\nThe ubox360 program will copy events from the real device to a new virtual device.\nIn order to avoid your game to believe that 2 gamepads are connected to your computer, the real gamepad needs to be hidden.\nThis can be performed by removing read permissions to the current logged user by creating the udev rule `/etc/udev/rules.d/70.1-uaccess.rules` (don't forget to replace `idVendor` and `idProduct` with yours):\n\n    shell> cat /etc/udev/rules.d/70.1-uaccess.rules\n    SUBSYSTEM==\"input\", ENV{ID_INPUT_JOYSTICK}==\"?*\", ATTRS{idVendor}==\"0458\", ATTRS{idProduct}==\"100a\", TAG-=\"uaccess\"\n\nOnce this rule has been written, you need to unplug and re-plug your gamepad (udevadm triggering does reset the permissions correctly).\n\n## Usage\n\nHeyyy, we're almost ready!\n\nYou first need to generate a `gamecontrollerdb.txt` mapping file with `controllermap` as explained in [README-controllermap.md](README-controllermap.md).\n\nThen, run ubox360 with the generated file:\n\n    shell> sudo runuser --user=$USER --group=$USER --supp-group=input --supp-group=uinput -- ubox360 --controllerdb /PATH/TO/gamecontrollerdb.txt\n    Info: Adding a new gamepad mapping:\n      ,-- device /dev/input/event11, name \"HID 0458:100a\", phys \"usb-0000:00:14.0-9/input0\"\n      '-> device /dev/input/event21, name \"ubox360\", phys \"py-evdev-uinput\"\n\nYou should see a new event file under `/dev/input`.\nYou can check everything is fine with `evtest`:\n\n    shell> evtest /dev/input/event21\n    [...]\n    Event: time 1590177160.054931, type 3 (EV_ABS), code 2 (ABS_Z), value 255\n    Event: time 1590177160.054931, -------------- SYN_REPORT ------------\n    Event: time 1590177160.183246, type 3 (EV_ABS), code 2 (ABS_Z), value 0\n    Event: time 1590177160.183246, -------------- SYN_REPORT ------------\n    Event: time 1590177161.615009, type 3 (EV_ABS), code 5 (ABS_RZ), value 255\n    Event: time 1590177161.615009, -------------- SYN_REPORT ------------\n    Event: time 1590177161.758994, type 3 (EV_ABS), code 5 (ABS_RZ), value 0\n    Event: time 1590177161.758994, -------------- SYN_REPORT ------------\n\nNote that running `ubox360` with `runuser` is essential.\nHere is an explanation of `runuser` options:\n1. `--supp-group=input`:  allows access to `/dev/input/event*`\n1. `--supp-group=uinput`:  allows access to `/dev/uinput`\n1. `--user=$USER`: allows read access of `/dev/input/event21` by your UNIX user\n\n## Using ubox360 with any input device (keyboard, keypad ...)\n\n`ubox360` can also be used with any input device generating evdev events.\nTo do so, the `gamecontrollerdb.txt` file must be created manually with a non-standard syntax.\n\nIn the following instructions, let's we want to use a USB keyboard (here a simple keypad) as an XBox 360 controller.\n\n    shell> lsusb\n    [...]\n    Bus 001 Device 028: ID 04d9:1203 Holtek Semiconductor, Inc. Keyboard\n    [...]\n\nThe keypad vendor is 0x04d9 and the product is 0x1203.\n\nThe following steps (explain below) must be followed:\n1. exclude this input device from Xorg or Wayland\n1. generate a custom `gamecontrollerdb.txt` file\n1. run `ubox360`\n\n### Exclude your device from your graphic environment\n\n#### Xorg\n\nCreate an X11 configuration with a content like:\n\n    shell> cat /etc/X11/xorg.conf.d/01-keypad.conf\n    Section \"InputClass\"\n        Identifier \"Keypad\"\n        MatchIsKeyboard \"on\"\n        MatchUSBID \"04d9:1203\"\n\n        Option \"Ignore\" \"true\"\n    EndSection\n\n### Generate the `gamecontrollerdb.txt` file\n\nThe format of the `gamecontrollerdb.txt` file is:\n\n    GAMEPAD_UUID,GAMEPAD_NAME,platform:Linux,BINDINGS\n\nwhere:\n- GAMEPAD_UUID = bus type (swapped) + 0000 + vendor (swapped) + 0000 + product (swapped) + 0000 + version + 0000\n- GAMEPAD_NAME = any suite of characters\n- BINDINGS = list of \"XBox-event:Linux-event\"\n\nFor example:\n\n    shell> cat gamecontrollerdb.txt\n    03000000d90400000312000000010000,HID 04d9:1203,platform:Linux,a:KEY_KP6,b:KEY_KPPLUS,x:KEY_KP9,y:KEY_KPMINUS,back:KEY_BACKSPACE,start:KEY_KPASTERISK,leftshoulder:KEY_KP7,rightshoulder:KEY_KP8,leftx:KEY_KP1-KEY_KP3,lefty:KEY_KP5-KEY_KP2,lefttrigger:KEY_NUMLOCK,righttrigger:KEY_KPSLASH,\n\n### Run `ubox360` as usual\n\n    shell> sudo runuser --user=$USER --group=$USER --supp-group=input --supp-group=uinput -- ubox360 --controllerdb /PATH/TO/gamecontrollerdb.txt\n\n# Resources\n\n- http://libsdl.org\n- https://wiki.libsdl.org/CategoryGameController\n- http://hg.libsdl.org/SDL/raw-file/tip/test/README\n- https://wiki.archlinux.org/index.php/Gamepad\n- https://wiki.archlinux.org/index.php/Map_scancodes_to_keycodes\n- https://wiki.archlinux.org/index.php/Keyboard_input#Identifying_scancodes\n- https://www.linux.org/threads/xbox-360-controller.11422/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/albinou/python-ubox360",
    "keywords": "gamepad joystick Xbox Xbox360 controller",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ubox360",
    "package_url": "https://pypi.org/project/ubox360/",
    "platform": "",
    "project_url": "https://pypi.org/project/ubox360/",
    "project_urls": {
      "Bug Reports": "https://gitlab.com/albinou/python-ubox360/issues",
      "Homepage": "https://gitlab.com/albinou/python-ubox360",
      "Source": "https://gitlab.com/albinou/python-ubox360"
    },
    "release_url": "https://pypi.org/project/ubox360/0.3.0/",
    "requires_dist": [
      "evdev"
    ],
    "requires_python": ">=3.5, <4",
    "summary": "A tool to map joystick events to the one of an Xbox 360 controller",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7499349,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d03b8659957b857608fe5d88b2d8ff08f101860f6d2b9cf1e3b5b010d37b5a5",
          "md5": "f02cd1a836afc5ded772c52467f045bd",
          "sha256": "50fa921d7d3a263822cc3c260723f86f7f74de9a34f68a32259b9a322b79dbd8"
        },
        "downloads": -1,
        "filename": "ubox360-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f02cd1a836afc5ded772c52467f045bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 21745,
        "upload_time": "2020-06-17T17:53:57",
        "upload_time_iso_8601": "2020-06-17T17:53:57.094778Z",
        "url": "https://files.pythonhosted.org/packages/7d/03/b8659957b857608fe5d88b2d8ff08f101860f6d2b9cf1e3b5b010d37b5a5/ubox360-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3048974e03b7944b27f364be1379a69cdc5b6f270bdd1e2b3dcfad44babe49ca",
          "md5": "67cbdfe07bc3cf7fea1ee2aef8c09b39",
          "sha256": "26e97f153db23f59fef1c716e65735b0e490849c2d0b42dad08068e28fd9c1bd"
        },
        "downloads": -1,
        "filename": "ubox360-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "67cbdfe07bc3cf7fea1ee2aef8c09b39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 14297,
        "upload_time": "2020-06-17T17:53:59",
        "upload_time_iso_8601": "2020-06-17T17:53:59.052228Z",
        "url": "https://files.pythonhosted.org/packages/30/48/974e03b7944b27f364be1379a69cdc5b6f270bdd1e2b3dcfad44babe49ca/ubox360-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d03b8659957b857608fe5d88b2d8ff08f101860f6d2b9cf1e3b5b010d37b5a5",
        "md5": "f02cd1a836afc5ded772c52467f045bd",
        "sha256": "50fa921d7d3a263822cc3c260723f86f7f74de9a34f68a32259b9a322b79dbd8"
      },
      "downloads": -1,
      "filename": "ubox360-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f02cd1a836afc5ded772c52467f045bd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5, <4",
      "size": 21745,
      "upload_time": "2020-06-17T17:53:57",
      "upload_time_iso_8601": "2020-06-17T17:53:57.094778Z",
      "url": "https://files.pythonhosted.org/packages/7d/03/b8659957b857608fe5d88b2d8ff08f101860f6d2b9cf1e3b5b010d37b5a5/ubox360-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3048974e03b7944b27f364be1379a69cdc5b6f270bdd1e2b3dcfad44babe49ca",
        "md5": "67cbdfe07bc3cf7fea1ee2aef8c09b39",
        "sha256": "26e97f153db23f59fef1c716e65735b0e490849c2d0b42dad08068e28fd9c1bd"
      },
      "downloads": -1,
      "filename": "ubox360-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "67cbdfe07bc3cf7fea1ee2aef8c09b39",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <4",
      "size": 14297,
      "upload_time": "2020-06-17T17:53:59",
      "upload_time_iso_8601": "2020-06-17T17:53:59.052228Z",
      "url": "https://files.pythonhosted.org/packages/30/48/974e03b7944b27f364be1379a69cdc5b6f270bdd1e2b3dcfad44babe49ca/ubox360-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}