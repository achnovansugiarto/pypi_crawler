{
  "info": {
    "author": "Delermando Branquinho Filho",
    "author_email": "delermando@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pyWPB\n\n`pyWPB` - Python Web Page Builder\n\nHTML `Creator` using `Python`\n\n![](https://img.shields.io/badge/pypi-0.1.16-blue)![](https://img.shields.io/badge/python-3.7|3.8|3.9-lightblue)![](https://img.shields.io/badge/Licence-MIT-lightgray)![](https://img.shields.io/badge/status-alpha-orange)![](https://img.shields.io/badge/pipeline-passed-green)![](https://img.shields.io/badge/testing-passing-green)\n\n\n**Main Features:**\n\n- Building a Header Page\n- Insert your `logo` picture over the top of page\n- Style to Body tag\n- Create Tables using dataframe pandas\n- Insert images from graph application such seaborn, matplotlib and any other\n- Coloring text and styles separately\n- Personalised Footer\n- Automatically creates texto to Images and Tables\n- Embedded videos from your own site or from Youtube\n- Create Frames easily\n- Ordered and Unordered and description lists in one command line\n- Building Forms with one line command\n- TABs are the greate way to show many subjects\n\n## Where to use\n\n- Nicely to be used on embedded in Flask applications. You create a dynamic page very easy\n- You can also create dynamic pages in your Django applications\n- If you have other applications working in a batch mode, you can create many dynamics pages in background\n- You don't need to know HTML6, CSS or some stuff like that, you just know Python\n\n<BR><BR>\n<hr>\n\n## Install\n\n```shell\npip install pywpb\n```\n\n<BR>\n<hr>\n<BR><BR>\n\n## Table of Contents\n\n  1. [Header](#Header)\n  2. [Body](#Body)\n  3. [Body Methods](#Body-Methods)\n      * [h (headings)](#h-(headings))\n      * [Text Color](#Text-Color)\n      * [Write a Text](#Write-a-Text)\n      * [Bold Text](#Bold-Text)\n      * [Italic Text](#Italic-Text)\n      * [Horizontal Line](#Horizontal-Line)\n      * [ Writing Table](#Writing-Table)\n      * [Incorporate YouTube Videos](#Incorporate-YouTube-Videos)\n      * [Your own Videos](#Your-own-Videos)\n      * [Creating Frames in your Web Page](#Creating-Frames-in-your-Web-Page)\n      * [Lists](#Lists)\n         * [Unordered List](#Unordered-List)\n         * [Ordered List](#Ordered-List)\n         * [Description List](#Description-List)\n      * [Frames](#Frames)\n      * [Building Forms](#Building-Forms)\n      * [Building TABs](#Building-TABs)\n  4. [wpIO (web page input and output)](#wpIO-(web-page-input-and-output))\n      * [Print Page](#Print-Page)\n      * [Load File](#Load-File)\n      * [Preview](#Preview)\n\n\n\n## Current Modules\n\nTo use any `PYWPB` module you must instantiates all of then using the follow command:\n\n### **Header**\n\nThere is only one method to create a page. And you need to run it before anything else.\n\nCreate a new Web Page with a minimal configuration. You must run this step before any other command. You can choose you lang, if ommited, the default lan will be english.\n\n`sintax`:\n```python\nfrom pywpb import pywpb as wpb\n\nh = wpb.header(charset='utf-8', \n                page_size=[21.0, 29.7, 2.0],\n                margin=[0.26, 16],\n                background='transparent',\n                title='Neublis Page without Title',\n                logo=False,\n                table_width=10,\n                table_cellpadding1=4,\n                table_cellpadding2=0,\n                page_break_before='always',\n                col_width=128,\n                valign=\"top\",\n                td_width=60,\n                td_border_top=1,\n                td_border_bottom=1,\n                td_border_left=1,\n                td_border_right=1,\n                td_padding_top=0.1,\n                td_padding_bottom=0.1,\n                td_padding_left=0.1,\n                td_padding_right=0,\n                logo_url_image='none',\n                name_image='none',\n                width_image=76,\n                height_image=36,\n                border_image=0,\n                text_width=60,\n                text_border=1,\n                text_padding=0.1,\n                text_logo='none')\n```\nThe values above are default, but you can change to:\n\n**The charset**\n- `ASCII` | `ANSI` | `ISO-8869-1` | `UTF-8`\n\n**Page Size**\n- `Right`=21.0 | `Left` 29.7 | `Margin` 2.0\n\n**Margin**\n- `margin-bottom` | `line-height`\n\n**Background**\n- You can change to any wish color \n\n**Title**\n- Title of you page. If you don't give a text, the text above will be provided\n\n`Prints such a string:`\n\n```html\n<!DOCTYPE html PUBLIC \"-// W3C // DTD XHTML 1.0 Strict // EN\"\n   \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html>\n<head>\n\t<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\"/>\n\t<title>pywpb Page without Title</title>\n\t<meta name=\"generator\" content=\"pywpb - Python Web Page Builder\"/>\n\t<meta name=\"created\" content=\"2021/02/17T16:44:08\"/>\n\t<meta name=\"changed\" content=\"0:0:0\"/>\n\t<style type=\"text/css\">\n\t\t@page { size: 21.0cm 29.7cm; margin: 2.0cm }\n\t\tp { margin-bottom: 0.26cm; line-height: 16%; background: transparent }\n\t</style>\n</head>\n\n```\nAfter `logo` parameter, you can insert values to create a Header page with you logo and text as you wish. You can personalize your page using all features ahead. Remember: the variable `logo` must be changed to `True`.\n\n### **Body**\n\n`sintax`:\n```python\nfrom pywpb import pywpb as wpb\n\nb = pwb.body(margin=0, line=10, \n         link='#080', \n\t\t vlink='#80',\n         lang='eng')\n```\n\nThe values above are default, but you can change to:\n\n**Margin**\n- Margin of body. Normally zero.\n\n**Line**\n- Line will be `10`%\n\n**Links**\n- The color of the links on the page. The first is the `link never clicked`. The other is the `visited Link`.\n\n`Prints such a string:`\n```html\n\t<body lang=\"eng\" link=\"#080\" vlink=\"#80\" dir=\"ltr\">\n\t\t<p style=\"margin-bottom: 0cm; line-height: 10%\"><br/>\n\t\t</p>\n```\n<hr>\n\n### **Body Methods**\n\nThe `Body Class` has many methods that you can see below.\n\n<hr>\n\n#### **h (headings)**\n\nThe `<h1>` to `<h6>` tags are used to define HTML headings.\n\n`<h1>` defines the most important heading. `<h6>` defines the least important heading.\n\n`sintax`:\n```python\nfrom pywpb import pywpb as wpb\n\nb = wpb.body() # keeping default values for body\n\nb.h(text='Headings have no text', \n    size=6, background='white', \n    align='left', \n\tcolor='black', \n\tshadow=False)\n```\n\n**Text**\n- The text that you want to write on the headings\n\n**Size**\n- As previously presented, this is the size ranging from one to six\n\n**Background**\n- The background `color`. Make your choice!\n\n**Align**\n- The align of the headings. Can be:\n\n\t`left` | `center` | `right` | `ustify`\n\n**Color**\n- The `color` of the text to be write on headings. Make your choice!\n\n**Shadow**\n- If you want a elegant text with shadow, just change to `True`\n\n`Prints such a string:`\n```html\n\t\t<hr style=\"height:1px; border-width:0; color:gray;background-color:gray\">\n```\n\n<hr>\n\n#### **Text Color**\n\nIf you want a text with different color, use this method to write a new text on the page. This method don't insert line feed.\n\n`Sintax:`\n```python\nfrom pywpb import pywpb as wpb\n\nb = wpb.body() # keeping default values for body\n\nb.color_text(text='no text provided',\n\t\t\t color='black')\n```\n`Prints such a string:`\n```html\n<span style=\"color:black\">this is my text</span>\n```\n\n#### **Write a Text**\n\nThis method writes a text, any one that you provided in text argument.\n\n`Sintax`\n```python\nfrom pywpb import pywpb as wpb\n\nb = wpb.body() # keeping default values for body\n\nb.w_text('another text to see line feed',3)\n```\nThere is no limit to text. If you have a big text, the better way is to load text using `wpIO`. See `loading text from file`.\n\n*line_feed* is the number of lines will be jump using tag `<BR>`.\n\n`Prints such a string:`\n```html\nanother text to see line feed<BR><BR><BR>\n```\n<hr>\n\n`Sintax`\n```python\nfrom pywpb import pywpb as wpb\n\nb = wpb.body() # keeping default values for bod\n\ntext = b.change_text_color(color='blue', text='testing text one changing color', text_to='one')\n```\n\n`Prints such a string:`\n```html\ntesting text <span style=\"color:blue\">one </span> changing color<BR><BR>\n```\nAfter you changed the color text, you must write the text using `w_text` method.\n\n<hr>\n\n#### **Bold Text**\n\nMade bold text.\n\n`Sintax`\n```python\nfrom pywpb import pywpb as wpb\n\nb = wpb.body() # keeping default values for bod\n\ntext = b.bold_text(self, text='no text provided', text_to='text')\n```\n\nThe word `text` will be bold.\n\n<hr>\n\n#### **Italic Text**\n\nMade Italic text.\n\n`Sintax`\n```python\nfrom pywpb import pywpb as wpbb\n\nb = wpb.body() # keeping default values for bod\n\ntext = b.italic_text(self, text='no text provided', text_to='text')\n```\n<hr>\n\n#### **Horizontal Line**\n\nThe `<hr>` tag defines a thematic break in an HTML page. \nThe `<hr>` element is most often displayed as a horizontal rule that is used to separate content (or define a change) in an HTML page.\n\n`Sintax`\n```python\nfrom pywpb import pywpb as wpb\n\nb = wpb.body() # keeping default values for bod\n\nb.hline(height=1, border=0, color='gray', background='gray')\n```\n\n#### **Writing Table**\n\n`Sintax`\n```python\nfrom pywpb import pywpb as wpb\n\nb = wpb.body() # keeping default values for bod\n\ndf = pd.DataFrame({ 'id': [1,2,3], \n\t\t\t\t\t'Elapsed_time': [1,21,31],\n\t\t\t\t\t'Total_Value': [3.6, 4.2 , 6.1]})\n\nb.w_table(df,alt_text='My Table without footer',foot=False)\n```\n**data**\n- The `data` is a `Pandas DataFrame`.\n- Big dataset with many columns or lines is not a good idea.\n- May be use `head()` to is good way.\n\n**border** \n- That's the thickness of the border\n\n**Align**\n- The align table\n\n**Collapse**\n- Usually there are two lines in table, one to cell, other to silhouette the table it self. Default is `collapse`.\n\n**Color**\n- The color of the line the table\n\n**Text to the Table**\n- Description to the table.\n- All tables will be numbered\n\n**Footer**\n- If the last line of the table is a footer, this argument must be `True`.\n\n`Prints such a string:`\nTable 1 - My Table without footer\n\n\n![Table](https://github.com/dbranquinho/pywpb/raw/master/readme_files/table_example.png)\n\n<br>\n<hr>\n<br>\n\n#### **Incorporate YouTube Videos**\n\nThis functionality lets you embed a YouTube video player on your website and control the player using JavaScript.\n\nUsing the API's JavaScript functions, you can queue videos for playback; play, pause, or stop those videos; adjust the player volume; or retrieve information about the video being played. You can also add event listeners that will execute in response to certain player events, such as a player state change.\n\n```python\nfrom pywpb import pywpb as wpb\n\nfilename = 'test'\n\nh = wpb.header()\nb = wpb.body()\n\nb.youtube(video_id='rqz-sutSH0c', url='https://www.youtube.com/iframe_api')\n\ni = wpb.wpIO()\ni.write_file(filename,h,b)\ni.preview(filename)\n```\n\n`Prints such a string HTML6:`\n\n```html\n<iframe width=\"320\" height=\"240\" \n            src=\"https://www.youtube.com/embed/rqz-sutSH0c\" \n            frameborder=\"0\" allow=\"accelerometer; autoplay; \n            clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n        </iframe>\n\n        <script>\n        var tag = document.createElement('script');\n\n        tag.src = \"https://www.youtube.com/iframe_api\";\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n        var player;\n        function onYouTubeIframeAPIReady() {\n            player = new YT.Player('player', {\n            height: '240',\n            width: '320',\n            videoId: 'rqz-sutSH0c',\n            events: {\n                'onReady': onPlayerReady,\n                'onStateChange': onPlayerStateChange\n            }\n            });\n        }\n\n        function onPlayerReady(event) {\n            event.target.playVideo();\n        }\n\n        var done = false;\n        function onPlayerStateChange(event) {\n            if (event.data == YT.PlayerState.PLAYING && !done) {\n            setTimeout(stopVideo, 60);\n            done = true;\n            }\n        }\n        function stopVideo() {\n            player.stopVideo();\n        }\n        </script>\n```\n<hr>\n\n#### **Creating Frames in your Web Page**\n\nOn a web page, framing means that a website can be organized into frames. Each frame displays a different HTML document. Sidebar headers and menus do not move when the content frame is scrolled up and down. For developers, frameworks can also be convenient.\n\nIf you want to create any other `pywpb` features into a frame, you create you file as you wish and load this file and write to a frame using the follow code.\n\n```python\nfrom pywpb import pywpb as wpb\n\nfilename = 'test'\n\nh = wpb.header()\nb = wpb.body()\ni = wpb.wpIO()\n\n\nb.dlist(header=\"Header text to list\", \n        itens=[[\"desc 1\", 'item 1','item 2','item 3'],\n               [\"desc 2\", 'item a','item b']])\n\ni.write_file(filename=filename,body=b)\n\ntext = i.load_text('test.html')\n\nb.w_frame(frame_id=\"myframe1\", text_line=text)\n\ni.write_file(filename,h,b)\ni.preview(filename)\n\n\n```\n\n#### **Lists**\n\nLists allow developers to group a set of related items in lists. We have tree types of lists as follow.\n\n##### **Unordered List**\n\nThe list items will be marked with bullets (small black circles) by default.\n\n\n```python\nfrom pywpb import pywpb as wpb\n\nfilename = 'test'\n\nh = wpb.header()\nb = wpb.body()\n\nb.ulist(header=\"Header text to unordered list\", itens=[\"item x\", 'item y','item z'])\nb.olist(header=\"Header text to ordered list\", itens=[\"item 1\", 'item 2','item 3'])\nb.dlist(header=\"Header text to description list\", \n        itens=[[\"desc 1\", 'item 1','item 2','item 3'],\n               [\"desc 2\", 'item a','item b']])\n\ni = wpb.wpIO()\ni.write_file(filename,h,b)\ni.preview(filename)\n```\n##### **Unordered List**\n\nChange just only the call `ulist` to `olist`\n\n##### **Description List**\n\nChange just only the call `ulist` to `dlist`\n\n<BR>\n<hr>\n<BR>\n\n#### **Building Forms**\n\nThere are many forms that can be created using `pywpb`. Many are created every day. So, we're going to show you some of them. In any case use the code bellow to build your own form. just change the `form_id` using the [List of the forms](#List-of-the-forms).\n\n**Registration Forms**\n\n```python\nfrom pywpb import pywpb as wpb\n\nfilename = 'test'\n\np = wpb.header('en')\nb = wpb.body()\ni = wpb.wpIO()\n\nb.w_forms(form_id='form_submit', text='Texto to form', url_privacy='https://mysite.com/Privacy Policy', bus_name='The Scientist', submit='https://mysite.com/execute_this_form')\n\n\ni.write_file(filename, page=p, body=b)\ni.preview(filename)\n\n```\n\n\n##### **List of the forms**\n\n| form_id  |  Description  | Parameters |\n| ------------------- | ------------------- | -- |\n|  form_submit |  Registration Forms | form_id +  text + url_privacy + bus_name|\n|  form_sign_up |  Contact Forms | form_id + text + url_privacy + bus_name |\n\n\n#### **Building TABs**\n\nTabs are perfect for single page web applications, or for web pages capable of displaying different subjects.\n\n```python\nfrom pywpb import pywpb as wpb\n\nfilename = 'test'\n\np = wpb.header('en')\nb = wpb.body()\ni = wpb.wpIO()\n\nb.w_tabs(title_tab='My TAB',\n         text_tab='This is my tab, click on the tab to show text',\n         tab_name=['Tab1','Business','New Tab'],\n         text_tab_name=['You can write here anything, other HTML commands or links and texts',\n                        'The number of tab_name must be the same text_tab_name',\n                        'For example, this tab is the sane of the New Tab in tab_name\n\ni.write_file(filename, page=p, body=b)\ni.preview(filename)\n\n```\n\n![My TAB Example](https://github.com/dbranquinho/pywpb/raw/master/readme_files/mytab.png)\n\n<BR>\n<hr>\n<BR>\n\n\n### **wpIO (web page input and output)**\n\nThis method used to create an environment ways to input and output to your page created.\n\n`sintax`:\n```python\nfrom pywpb import pywpb as wpb\n\ni = wpb.wpIO()\n```\n\nThere are no arguments to pass, but you will use the methods of that class.\n\n<hr>\n\nThis module used to input and output all this that you create using pywpb. The Methods are:\n\n#### **Print Page**\n\nIf you want to see how your page was built, this method will show you all HTML tags in your file with text output.\n\n`sintax`:\n```python\nfrom pywpb import pywpb as wpb\n\np = wpb.creator('en')\nb = wpb.body()\ni = wpb.wpIO()\n\nprint_page(self, page=p, body=b, cfg_css=False):\n\n```\n\nIf you have been calling commands that require CSS tags, then the `css_cfg` argument should be filled with True, but we will see that later.\n\n<hr>\n\n#### **Load File**\nIf you have a big text file to write on you page, this method is a best way to do this. After loaded, you can use the `text` to change colors of some words on the texto or put some words in bold or italic style.\n\nYou must write text on you page using `w_text` method.\n\n`sintax`:\n```python\nfrom pywpb import pywpb as wpb\n\ni = wpbnb.wpIO()\ntext = i.load_text('path/file.txt')\n```\n\n<hr>\n\n#### **Write File**\n\nYou can write your page in disk. It is usefull and necessary to reuse after creation.\nJust give the name without `html`. The write method wil do it for you.\n\n\n```python\nfrom pywpb import pywpb as wpb\n\nfilename = 'path/myfile'\n\np = wpb.creator('en')\nb = wpb.body()\ni = wpb.wpIO()\n\ni.write_file(filename, page=p, body=b)\n\n```\n\nThe `page` and body as the same instance that you created before.\n\n\n<hr>\n\n#### **Preview**\n\nYou can load the page created in you default browser with a single command line.\n\n\n```python\nfrom pywpb import pywpb as wpb\n\nfilename = 'path/myfile'\n\np = wpb.creator('en')\nb = wpb.body()\ni = wpb.wpIO()\n\n# you code building page here\n\ni.write_file(filename, page=p, body=b)\ni.preview(filename)\n\n```\n\n\n\n\n\n`enjoi!`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dbranquinho/pywpb",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pywpb",
    "package_url": "https://pypi.org/project/pywpb/",
    "platform": "",
    "project_url": "https://pypi.org/project/pywpb/",
    "project_urls": {
      "Homepage": "https://github.com/dbranquinho/pywpb"
    },
    "release_url": "https://pypi.org/project/pywpb/0.1.16/",
    "requires_dist": [
      "matplotlib (>=3.3.4)",
      "numpy (>=1.19.2)",
      "pandas (>=1.1.3)",
      "seaborn (>=0.11.1)",
      "utils (>=1.0.1)"
    ],
    "requires_python": "",
    "summary": "pyWPB - Python Web Page Builder",
    "version": "0.1.16",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9524322,
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ab704a0805ae16bc3a9a0a7ba76d7801dc971c18b8835776bd2e3fcfdb19893",
          "md5": "4d72837439fcc4df20841bd2c7189ecc",
          "sha256": "37d2abb2cfb4a988f085ca8ec85784478e90b1ff22b87ac53a7906e7a293c330"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d72837439fcc4df20841bd2c7189ecc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17928,
        "upload_time": "2021-02-23T16:41:36",
        "upload_time_iso_8601": "2021-02-23T16:41:36.968791Z",
        "url": "https://files.pythonhosted.org/packages/4a/b7/04a0805ae16bc3a9a0a7ba76d7801dc971c18b8835776bd2e3fcfdb19893/pywpb-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42b8ff0c5e3f3a875476eef7592e5beff54b3beb20af8cc8adc71888b1d54f50",
          "md5": "7e33e89eb385e7ca933322bdaf23ddc5",
          "sha256": "e2ee943ccdee227d2c4a0d396d9200e8b2ce2fcd99327c67908ab924484eff6c"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "7e33e89eb385e7ca933322bdaf23ddc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17992,
        "upload_time": "2021-02-23T16:41:38",
        "upload_time_iso_8601": "2021-02-23T16:41:38.849321Z",
        "url": "https://files.pythonhosted.org/packages/42/b8/ff0c5e3f3a875476eef7592e5beff54b3beb20af8cc8adc71888b1d54f50/pywpb-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aefe5b99d664d5862f9fa57015a496baec9a98b738c5df94805833d3704fc09f",
          "md5": "23abc87b5fd99b06f9abd7e74fb8a5a5",
          "sha256": "3b9a3e1869c86fa69649ccacc184654b0f456f5f6a1f4251282a7c95f3f7f01a"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23abc87b5fd99b06f9abd7e74fb8a5a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25417,
        "upload_time": "2021-02-24T21:20:15",
        "upload_time_iso_8601": "2021-02-24T21:20:15.860344Z",
        "url": "https://files.pythonhosted.org/packages/ae/fe/5b99d664d5862f9fa57015a496baec9a98b738c5df94805833d3704fc09f/pywpb-0.1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8afa0e7391dae8906c9bdfb9c51ad61bd97867320bccc4e925a328069a5c8321",
          "md5": "bbf4a91cb950209963a6c4d9edfc5d36",
          "sha256": "25f154dd16bd6dcd587f54301a4f016c5c3a673d0f9aed02c441ebfcd7ca2e87"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "bbf4a91cb950209963a6c4d9edfc5d36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25744,
        "upload_time": "2021-02-24T21:20:17",
        "upload_time_iso_8601": "2021-02-24T21:20:17.846509Z",
        "url": "https://files.pythonhosted.org/packages/8a/fa/0e7391dae8906c9bdfb9c51ad61bd97867320bccc4e925a328069a5c8321/pywpb-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33485aec43bb998e6828ac0229af984dc5a51fae472bb869a25647e14b728a86",
          "md5": "8d14c329862867aad6d21b469e194071",
          "sha256": "d84d215e50cd54c4ce01b9d47c8dbc4a22484ddf7f3779cd35f09bca23212fd2"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d14c329862867aad6d21b469e194071",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25417,
        "upload_time": "2021-02-24T21:23:07",
        "upload_time_iso_8601": "2021-02-24T21:23:07.045424Z",
        "url": "https://files.pythonhosted.org/packages/33/48/5aec43bb998e6828ac0229af984dc5a51fae472bb869a25647e14b728a86/pywpb-0.1.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac3553510f7ed94851e9c586c5df123d9c6cfcf9b27bef39a8a70349bb208a23",
          "md5": "9fd8a71fefd41005a1a0fa0751a900ca",
          "sha256": "65d54b1bdf014e6d44436215d788a04b338577b73268a3bdd7618395dc901ed9"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "9fd8a71fefd41005a1a0fa0751a900ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25728,
        "upload_time": "2021-02-24T21:23:08",
        "upload_time_iso_8601": "2021-02-24T21:23:08.725730Z",
        "url": "https://files.pythonhosted.org/packages/ac/35/53510f7ed94851e9c586c5df123d9c6cfcf9b27bef39a8a70349bb208a23/pywpb-0.1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43e29d7999dd0b5845eb67c70b323fcfb53a40de72fc97e50a713b2fad007605",
          "md5": "5cc1e2c79704c0da2b3813f08584bd82",
          "sha256": "72d08d67bd68f5c642165812359bf94c11417c200873f366842ed77d4607185b"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cc1e2c79704c0da2b3813f08584bd82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28600,
        "upload_time": "2021-02-25T17:24:07",
        "upload_time_iso_8601": "2021-02-25T17:24:07.472587Z",
        "url": "https://files.pythonhosted.org/packages/43/e2/9d7999dd0b5845eb67c70b323fcfb53a40de72fc97e50a713b2fad007605/pywpb-0.1.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af10b56fecdf0ff6fa940779bca2ee2ff495a82db626d915bbd93c8f8d7f1d78",
          "md5": "22730f2040f5ff6fbfbde976c777f566",
          "sha256": "43958e8b4601ce6e5b5a0d91565f70845152873112c91f721078413f69603580"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "22730f2040f5ff6fbfbde976c777f566",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27631,
        "upload_time": "2021-02-25T17:24:10",
        "upload_time_iso_8601": "2021-02-25T17:24:10.365719Z",
        "url": "https://files.pythonhosted.org/packages/af/10/b56fecdf0ff6fa940779bca2ee2ff495a82db626d915bbd93c8f8d7f1d78/pywpb-0.1.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4187914a3a3a60d8f0db5515ff0eb2b47e0c0f3a9b9c3e68d9efc540db2c6b40",
          "md5": "f1a364d230d586061a669f88a8fa2eef",
          "sha256": "365a797ff29f166b2ff7309a784b9c2117721dddab393b2b8da30fb814f74573"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1a364d230d586061a669f88a8fa2eef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28601,
        "upload_time": "2021-02-25T17:31:57",
        "upload_time_iso_8601": "2021-02-25T17:31:57.538547Z",
        "url": "https://files.pythonhosted.org/packages/41/87/914a3a3a60d8f0db5515ff0eb2b47e0c0f3a9b9c3e68d9efc540db2c6b40/pywpb-0.1.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31960e96e6251c8be833b91d47f6456bf8c090c9a8a92d9ceef4b93d4229fbaf",
          "md5": "bf00a814f42d337f70fb009963115604",
          "sha256": "9290e6fa06eadda3f4aa856a567a5afde30cfae36683921b1ed8578249a2d031"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "bf00a814f42d337f70fb009963115604",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27639,
        "upload_time": "2021-02-25T17:32:00",
        "upload_time_iso_8601": "2021-02-25T17:32:00.003426Z",
        "url": "https://files.pythonhosted.org/packages/31/96/0e96e6251c8be833b91d47f6456bf8c090c9a8a92d9ceef4b93d4229fbaf/pywpb-0.1.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f3d161df2f17ef507c2ba326274bc2f02ffda8a098c237a51f16f505d502992",
          "md5": "bc9e8833b56c8134dcb7e4be79b0c951",
          "sha256": "ea80a177af94f478ebd995f6d19b74cb4cdf8b73d2c23dfdc87a62ce49b1e229"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc9e8833b56c8134dcb7e4be79b0c951",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28583,
        "upload_time": "2021-02-25T17:47:00",
        "upload_time_iso_8601": "2021-02-25T17:47:00.068772Z",
        "url": "https://files.pythonhosted.org/packages/7f/3d/161df2f17ef507c2ba326274bc2f02ffda8a098c237a51f16f505d502992/pywpb-0.1.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "434b71b6668a31bacd5bf4946d4de7e0d3e582ad602b324a67d785ca93b91725",
          "md5": "eccbeef712f7980731432dfb8b19c0e7",
          "sha256": "b1b1b19102746e948330cd15015e520bcedc594a4daf24eb68bc53c11c09053a"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.16.tar.gz",
        "has_sig": false,
        "md5_digest": "eccbeef712f7980731432dfb8b19c0e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27656,
        "upload_time": "2021-02-25T17:47:02",
        "upload_time_iso_8601": "2021-02-25T17:47:02.074067Z",
        "url": "https://files.pythonhosted.org/packages/43/4b/71b6668a31bacd5bf4946d4de7e0d3e582ad602b324a67d785ca93b91725/pywpb-0.1.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3980d7d32c7eaf8cf850200b51030b7be8fbfec66093a47b666ac7cc1bf417fb",
          "md5": "ca902e32a64a62ae5763f9f8ac9c0e66",
          "sha256": "990a3efb19aec68536584a6d5d0b8ba531b0917921d0a205adf80a1d65a18dcc"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca902e32a64a62ae5763f9f8ac9c0e66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16921,
        "upload_time": "2021-02-22T17:23:46",
        "upload_time_iso_8601": "2021-02-22T17:23:46.348914Z",
        "url": "https://files.pythonhosted.org/packages/39/80/d7d32c7eaf8cf850200b51030b7be8fbfec66093a47b666ac7cc1bf417fb/pywpb-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "887d51fd77c12b35795d66f30c935080154a7bcfacf7bf116363a86c381dabde",
          "md5": "2500326d507b27e6818a8d46b65fc827",
          "sha256": "c1ef29ee915201c5019480b75e0337bfecba42cfbb8f57c1f6a51b2c3726efcc"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "2500326d507b27e6818a8d46b65fc827",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13983,
        "upload_time": "2021-02-22T17:23:48",
        "upload_time_iso_8601": "2021-02-22T17:23:48.117591Z",
        "url": "https://files.pythonhosted.org/packages/88/7d/51fd77c12b35795d66f30c935080154a7bcfacf7bf116363a86c381dabde/pywpb-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47911f207823d62e5627ff177fb84a5518cf2fb8ee276ac52f646e1c2035f8d0",
          "md5": "bbb8c1506550c4d73fc5dae7c4985c00",
          "sha256": "db35e6450def4383431f1f6a2390b5f9ce9cb027b0d738e24337c2bdf359e76c"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbb8c1506550c4d73fc5dae7c4985c00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16981,
        "upload_time": "2021-02-22T23:28:56",
        "upload_time_iso_8601": "2021-02-22T23:28:56.770787Z",
        "url": "https://files.pythonhosted.org/packages/47/91/1f207823d62e5627ff177fb84a5518cf2fb8ee276ac52f646e1c2035f8d0/pywpb-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cae69d595e2e2b46a63cabda71f8c2ee47e0a19cc1cee2a3bbf64fe43d264764",
          "md5": "3cfa426b6466519213913ffa2ebc8424",
          "sha256": "cd9db3860e3a97dde370ecade71b3bc76dc1d83b8b20ed5766fa1071687340cc"
        },
        "downloads": -1,
        "filename": "pywpb-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "3cfa426b6466519213913ffa2ebc8424",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17200,
        "upload_time": "2021-02-22T23:28:59",
        "upload_time_iso_8601": "2021-02-22T23:28:59.258577Z",
        "url": "https://files.pythonhosted.org/packages/ca/e6/9d595e2e2b46a63cabda71f8c2ee47e0a19cc1cee2a3bbf64fe43d264764/pywpb-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f3d161df2f17ef507c2ba326274bc2f02ffda8a098c237a51f16f505d502992",
        "md5": "bc9e8833b56c8134dcb7e4be79b0c951",
        "sha256": "ea80a177af94f478ebd995f6d19b74cb4cdf8b73d2c23dfdc87a62ce49b1e229"
      },
      "downloads": -1,
      "filename": "pywpb-0.1.16-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc9e8833b56c8134dcb7e4be79b0c951",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28583,
      "upload_time": "2021-02-25T17:47:00",
      "upload_time_iso_8601": "2021-02-25T17:47:00.068772Z",
      "url": "https://files.pythonhosted.org/packages/7f/3d/161df2f17ef507c2ba326274bc2f02ffda8a098c237a51f16f505d502992/pywpb-0.1.16-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "434b71b6668a31bacd5bf4946d4de7e0d3e582ad602b324a67d785ca93b91725",
        "md5": "eccbeef712f7980731432dfb8b19c0e7",
        "sha256": "b1b1b19102746e948330cd15015e520bcedc594a4daf24eb68bc53c11c09053a"
      },
      "downloads": -1,
      "filename": "pywpb-0.1.16.tar.gz",
      "has_sig": false,
      "md5_digest": "eccbeef712f7980731432dfb8b19c0e7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27656,
      "upload_time": "2021-02-25T17:47:02",
      "upload_time_iso_8601": "2021-02-25T17:47:02.074067Z",
      "url": "https://files.pythonhosted.org/packages/43/4b/71b6668a31bacd5bf4946d4de7e0d3e582ad602b324a67d785ca93b91725/pywpb-0.1.16.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}