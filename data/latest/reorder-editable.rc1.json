{
  "info": {
    "author": "Sean Breckenridge",
    "author_email": "seanbrecke@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# reorder_editable\n\nNaive implementation to reorder my `easy-install.pth` file\n\nIt is meant to be used to make sure editable namespace packages in my `easy-install.pth` are in a specific order.\n\n## Editable Namespace Packages?\n\nTo expand:\n\n- Editable: A package that is installed in editable mode (like `pip install -e`), i.e. if you make any changes to the code, your changes are reflected immediately. Is useful for packages that you change very often, or while developing. See the [`site` module docs](https://docs.python.org/3.8/library/site.html) for more information on how this modifies `sys.path`\n- Namespace Packages: Namespace packages let you split a package across multiple directories on disk, merging any submodules into the parent package. For more info, see [PEP420](https://www.python.org/dev/peps/pep-0420/#dynamic-path-computation)\n\n_Sidenote_: A namespace package is typically installed using `setuptools.find_namespace_packages`, instead of `setuptools.find_packages`\n\nSo, an editable, namespace package is multiple directories on disk all installed as a single package. If any changes are made to any of the directories, the package updates immediately.\n\nThis is the current strategy [HPI](https://github.com/karlicoss/HPI) uses for extension. I can keep up to date with [upstream](https://github.com/karlicoss/HPI) and manage [my own modules](https://github.com/seanbreckenridge/HPI) by installing both (or more) like:\n\n```\npip install -e /local/clone/of/karlicoss/HPI\npip install -e /local/clone/of/seanbreckenridge/HPI\n```\n\nThis creates a file in your python installation that looks like this:\n\n```bash\n$ cat ~/.local/lib/python3.9/site-packages/easy-install.pth\n/home/sean/Repos/karlicoss/HPI\n/home/sean/Repos/seanbreckenridge/HPI\n```\n\n... to link those installs to the paths you specified.\n\nHowever, for namespace packages in particular, the order that those directories appear in the `easy-install.pth` matter. Since items in `easy-install.pth` are added to `sys.path` in order, that determines which order python searches for packages in when trying to resolve imports.\n\nFor example, given the following structure:\n\n```\n.\n├── my_HPI\n│   ├── package_name\n│   │   ├── a.py\n│   │   └── b.py\n│   └── setup.py\n└── upstream_HPI\n    ├── package_name\n    │   ├── a.py\n    │   └── c.py\n    └── setup.py\n```\n\nIf `easy-install.pth` was ordered:\n\n```\nmy_HPI\nupstream_HPI\n```\n\n`import package_name.a` would import `my_HPI/package_name/a.py`, instead of `upstream_HPI/package_name/a.py`, because thats the first item it matched in the `easy-install.pth`. This process is described much more technically in the [PEP](https://www.python.org/dev/peps/pep-0420/#specification)\n\nThis is pretty much a native plugin system, as it lets me overlay specific files/modules with personal changes in my directory structure, while keeping up to date with the upstream changes. Theres very little overhead since all I'm doing is adding python files to a local directory and the globally installed package immediately updates.\n\nIn the example above, I can still import `package_name.b` and `package_name.c` as normal, even though they're in different directory structures.\n\n---\n\nNow - to the problem this aims to solve.\n\nThere is no way to manage your `easy-install.pth` file, to make sure packages are in a defined order.\n\nIn particular, I want [my repository](https://github.com/seanbreckenridge/HPI) to be above [my fork of the upstream repo](https://github.com/seanbreckenridge/HPI-fork), as that means I'm able to override files from upstream with my own changes, while maintaining two separate directories - which prevents me from running into merge conflicts. While developing, I may end up uninstalling/reinstalling one or more of my local clones of the `HPI` packages, and that leads to it resolving to a file from the upstream repository, when I was expecting my own -- leading to confusing and difficult to debug errors.\n\nThe script itself is pretty basic. All `easy-install.pth` is lines of absolute paths pointing to directories, so this just takes the directories you pass as positional arguments and makes sure they're in that order in your `easy-install.pth` file by shuffling it around.\n\nI don't believe this breaks and built-in python/pip behaviour, but please open a PR/Issue if you think theres an issue/this could be improved.\n\nShould be noted that if you've already imported a namespace module [the `__path__` is cached](https://www.python.org/dev/peps/pep-0420/#rationale) (which determines the import order), so this (probably?) won't work if you re-order the `easy-install.pth` file after the module has already been loaded -- at least not for that python process/unless you re-import it by messing with `sys.modules` and re-import the library.\n\nStill - at least this tells me when it breaks, and fixes it for the next time python runs, so I don't have to worry about it/do it manually.\n\nThe actual hack that runs in my `HPI` configuration script, so I never have to think about this again:\n\n```python\ndef repo(name: str) -> str:\n    return path.join(environ[\"REPOS\"], name)\n\n\n# https://github.com/seanbreckenridge/reorder_editable\n# if my easy-install.pth file was ordered wrong, fix it and exit!\nfrom reorder_editable import Editable\n\nif Editable().reorder([repo(\"HPI\"), repo(\"HPI-fork\")]):\n    # this is true if we actually reordered the path, else path was already ordered\n    print(\n        \"easy-install.pth was ordered wrong! It has been reordered, exiting to apply changes...\",\n        file=sys.stderr,\n    )\n    sys.exit(0)\n```\n\n## Installation\n\nRequires `python3.6+`\n\nTo install with pip, run:\n\n    python3 -m pip install git+https://github.com/seanbreckenridge/reorder_editable\n\nCan always be accessed like `python3 -m reorder_editable`, if your python local bin directory isn't on your `$PATH`\n\n## Usage\n\n```\nUsage: reorder_editable [OPTIONS] COMMAND [ARGS]...\n\n  Manage your editable packages - your easy-install.pth file\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  cat      print easy-install.pth contents\n  check    check easy-install.pth\n  locate   print easy-install.pth file location\n  reorder  reorder easy-install.pth\n```\n\nTo reorder:\n\n```\nUsage: reorder_editable reorder [OPTIONS] DIRECTORY...\n\n  If the order specified in your easy-install.pth doesn't match the order of\n  the directories specified as positional arguments, reorder them so that it\n  does. This always places items you're reordering at the end of your easy-\n  install.pth so make sure to include all items you care about the order of\n\n  Also fails if one of the paths you provide doesn't exist, or it isn't\n  already in you easy-install.pth\n\n  e.g.\n  reorder_editable reorder ./path/to/repo /another/path/to/repo\n\n  If ./path/to/repo was below /another/path/to/repo, this would reorder\n  items in your config file to fix it so that ./path/to/repo is above\n  /another/path/to/repo\n\nOptions:\n  -e, --easy-install-location TEXT\n                                  Manually provide path to easy-install.pth\n  --help                          Show this message and exit.\n```\n\nAs an example using the descriptions above, If I wanted to make sure `my_HPI` was above `upstream_HPI`, I'd run:\n\n```bash\n$ python3 -m reorder_editable reorder ./my_HPI ./upstream_HPI\n```\n\n### Tests\n\n```bash\ngit clone 'https://github.com/seanbreckenridge/reorder_editable'\ncd ./reorder_editable\npip install '.[testing]'\nmypy ./reorder_editable\npytest\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/seanbreckenridge/reorder_editable",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reorder-editable",
    "package_url": "https://pypi.org/project/reorder-editable/",
    "platform": "",
    "project_url": "https://pypi.org/project/reorder-editable/",
    "project_urls": {
      "Homepage": "https://github.com/seanbreckenridge/reorder_editable"
    },
    "release_url": "https://pypi.org/project/reorder-editable/0.1.0/",
    "requires_dist": [
      "click (>=7.0)",
      "pytest ; extra == 'testing'",
      "mypy ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "naive implementation to reorder my easy-install.pth file",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12587581,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82c1278ca11fecd1c14212f6a43ba15074a5c9177c0c4dbef1ff82fca343ae79",
          "md5": "ac84ee0b0f3149d9a131620036723117",
          "sha256": "569750e2a84311296dd82089467dc1aff16b8bec6ff690f4a1aa776d2fb81257"
        },
        "downloads": -1,
        "filename": "reorder_editable-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac84ee0b0f3149d9a131620036723117",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9257,
        "upload_time": "2022-01-16T09:00:34",
        "upload_time_iso_8601": "2022-01-16T09:00:34.493943Z",
        "url": "https://files.pythonhosted.org/packages/82/c1/278ca11fecd1c14212f6a43ba15074a5c9177c0c4dbef1ff82fca343ae79/reorder_editable-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66a962008963a1209609213f4eb833f84ebc13dd615ca5b1fc0a46b098f19260",
          "md5": "1740a77c29304e8d06ed9d7a16eb811c",
          "sha256": "bba8f734315bea73c3311a28c08d040b856b53a5f150730a87332ba823699a1d"
        },
        "downloads": -1,
        "filename": "reorder_editable-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1740a77c29304e8d06ed9d7a16eb811c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8426,
        "upload_time": "2022-01-16T09:00:36",
        "upload_time_iso_8601": "2022-01-16T09:00:36.476616Z",
        "url": "https://files.pythonhosted.org/packages/66/a9/62008963a1209609213f4eb833f84ebc13dd615ca5b1fc0a46b098f19260/reorder_editable-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82c1278ca11fecd1c14212f6a43ba15074a5c9177c0c4dbef1ff82fca343ae79",
        "md5": "ac84ee0b0f3149d9a131620036723117",
        "sha256": "569750e2a84311296dd82089467dc1aff16b8bec6ff690f4a1aa776d2fb81257"
      },
      "downloads": -1,
      "filename": "reorder_editable-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ac84ee0b0f3149d9a131620036723117",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9257,
      "upload_time": "2022-01-16T09:00:34",
      "upload_time_iso_8601": "2022-01-16T09:00:34.493943Z",
      "url": "https://files.pythonhosted.org/packages/82/c1/278ca11fecd1c14212f6a43ba15074a5c9177c0c4dbef1ff82fca343ae79/reorder_editable-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66a962008963a1209609213f4eb833f84ebc13dd615ca5b1fc0a46b098f19260",
        "md5": "1740a77c29304e8d06ed9d7a16eb811c",
        "sha256": "bba8f734315bea73c3311a28c08d040b856b53a5f150730a87332ba823699a1d"
      },
      "downloads": -1,
      "filename": "reorder_editable-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1740a77c29304e8d06ed9d7a16eb811c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8426,
      "upload_time": "2022-01-16T09:00:36",
      "upload_time_iso_8601": "2022-01-16T09:00:36.476616Z",
      "url": "https://files.pythonhosted.org/packages/66/a9/62008963a1209609213f4eb833f84ebc13dd615ca5b1fc0a46b098f19260/reorder_editable-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}