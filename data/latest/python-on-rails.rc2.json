{
  "info": {
    "author": "The Funnel Dev Team",
    "author_email": "open-source@funnel.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Python on Rails\n\n![PyPI](https://img.shields.io/pypi/v/python-on-rails)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/python-on-rails)\n![PyPI - Status](https://img.shields.io/pypi/status/python-on-rails)\n![PyPI - License](https://img.shields.io/pypi/l/python-on-rails)\n[![Python package](https://github.com/funnel-io/python-on-rails/actions/workflows/python-package.yml/badge.svg)](https://github.com/funnel-io/python-on-rails/actions/workflows/python-package.yml)\n\nA library for supporting Railway-Oriented Programming in Python.\n\n## Installation\n\nInstall the package `python_on_rails` version `1.0+` from PyPi.\nThe recommended `requirements.txt` line is `python_on_rails~=1.0`.\nThis package uses [semantic versioning](https://semver.org/spec/v2.0.0.html).\n\n## Code example\nBelow is an example to get started. Define functions (\"railway stops\") and wrap the return object into a `Result.success` (or `Result.failure`) object.\nCreate a `Railway` object and add your stops to it, finally call `run()`.\n\n```python\nfrom python_on_rails.railway import Railway\nfrom python_on_rails.result import Result\n\ndef download(url):\n    # fetch data from url...\n    return Result.success(\n        [\n            {\"date\": \"2022-01-19\", \"clicks\": 13},\n            {\"date\": \"2022-01-20\", \"clicks\": 37},\n        ]\n    )\n\ndef parse(downloaded_data):\n    return Result.success([[entity[\"date\"], entity[\"clicks\"]] for entity in downloaded_data])\n\ndef output(parsed_data):\n    return Result.success({\"data\": {\"rows\": parsed_data}})\n\nresult = Railway(download, parse, output).run()\nprint(f\"{result=}\")\n```\n\nWrapping the return object can be omitted if you use `as_result` decorator from `result` module. Please see [railway_catch_test.py](tests/railway_catch_test.py) for example. \n\n## `railway` module\n\n### `Railway` (class)\n\nCombined with `Result` objects, a means of Railway-Oriented Programming.\nA `Railway` object represents a process comprising of a number of steps. It accepts a number of steps, each of which should be a function that accepts and returns a `Result` object.\n\n#### `run` (instance method)\n\nTriggers the process. If an `initial` value is not supplied, the first step will be called with a `Result.success(None)`.\n\nBy default, if the process completes successfully, the final result will be unwrapped. If it fails however, a `Result` object with its error set will be returned. This behaviour can be configured by passing the optional `success_handler` and `failure_handler`. Those handlers are both functions that accept a single argument - a `Result` object.\n\n## `result` module\n\n### `Result` (class)\n\nAn object encapsulating a `value` or an `error`.\n\n#### `is_failure` and `is_success` (instance methods)\n\nPredicate methods denoting whether the result object has its error or value set.\n\n#### `Result.failure` and `Result.success` (class methods)\n\nConstructors that creates a `Result` object with either its error or value set.\n\n#### `as_result` (function)\n\nConvenience decorator builder applying the `Result` object to the generic `catch` decorator. Accepts any number of exceptions to catch and turn into `Result` objects.\n\n\n#### `failure` (function)\n\nConvenience function for creating a Result object with its error set.\nHas the same effect as calling the `Result.failure` constructor.\n\n#### `success` (function)\n\nConvenience function for creating a Result object with its value set.\nHas the same effect as calling the `Result.success` constructor.\n\n#### `unwrap` (function)\n\nConvenience function for extracting the value from a Result object.\n\n## `either` module\n\n### `Either`, `Failure`, and `Success` (classes)\n\nAn implementation of the [either](https://wiki.haskell.org/Typeclassopedia#Instances) [monad](https://en.wikipedia.org/wiki/Monad_(functional_programming)). The abstract `Either` base class encapsulates a value and is implemented as the `Success` and `Failure` classes.\n\n#### `bind` (instance method)\n\nAccepts a monadic function that takes a single argument and returns either a `Success` or a `Failure`.\n\nFor a `Success`, calls the supplied function with the unwrapped argument, returning its result.\nFor a `Failure`, ignores the supplied function and returns the existing failure.\n\n#### `as_either` (function)\n\nConvenience decorator builder applying the `Either` monad to the generic `catch` decorator. Accepts any number of exceptions to catch and turn into `Failure` objects.\n\n## `common` module\n\n### `catch` (function)\n\nA decorator builder that ensures that the result of calling a function is returned as a `Result` object. Given a list of exceptions, catches those and wraps them into a `Result` object with its error set.\n\nCan optionally be configured to handle and use the `Either` monad instead by passing the `result_class`, `failure`, and `success` arguments.\n\n### `identity` (function)\n\nThe [identity function](https://en.wikipedia.org/wiki/Identity_function).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/funnel-io/python-on-rails",
    "keywords": "[\"Railway-Oriented Programming\"]",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-on-rails",
    "package_url": "https://pypi.org/project/python-on-rails/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-on-rails/",
    "project_urls": {
      "Bug Reports": "https://github.com/funnel-io/python-on-rails/issues",
      "Homepage": "https://github.com/funnel-io/python-on-rails",
      "Source": "https://github.com/funnel-io/python-on-rails"
    },
    "release_url": "https://pypi.org/project/python-on-rails/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Railway-Oriented Programming in Python.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17223922,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ed65054fc8b6637cc1aa45d9749a46665b73dc50239dac782a8c067bc807d79",
          "md5": "5f1802a4c3507998f77f13200a82aeef",
          "sha256": "db006fa60ad1298b79f19cb9453e9d41b4d524f2eedfffd97b1ee2a94b3bad02"
        },
        "downloads": -1,
        "filename": "python_on_rails-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5f1802a4c3507998f77f13200a82aeef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.8",
        "size": 5714,
        "upload_time": "2022-02-03T14:29:15",
        "upload_time_iso_8601": "2022-02-03T14:29:15.590511Z",
        "url": "https://files.pythonhosted.org/packages/2e/d6/5054fc8b6637cc1aa45d9749a46665b73dc50239dac782a8c067bc807d79/python_on_rails-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34ae715eb5a27db38a781f55d0121baf51ee9a75143c983ef12838e6b87f1025",
          "md5": "e643eae30309f87839dc3448338a7bd1",
          "sha256": "d666d76a13e1157c969fce9391cfc5b8f5acfed7e2384409c24adc39dc736955"
        },
        "downloads": -1,
        "filename": "python_on_rails-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e643eae30309f87839dc3448338a7bd1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6649,
        "upload_time": "2023-03-09T13:03:33",
        "upload_time_iso_8601": "2023-03-09T13:03:33.037178Z",
        "url": "https://files.pythonhosted.org/packages/34/ae/715eb5a27db38a781f55d0121baf51ee9a75143c983ef12838e6b87f1025/python_on_rails-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "952cc3500e43b14447455b0dff057c27639254f28dfb99e6ca97dae6936a3da5",
          "md5": "ada748873e839972f238e62e98b67fb3",
          "sha256": "274bdf32e3433fe9ad4b6e8df313826abe75545a8cb1ea2f8045a3e00b224b65"
        },
        "downloads": -1,
        "filename": "python_on_rails-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ada748873e839972f238e62e98b67fb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5586,
        "upload_time": "2023-03-09T13:03:34",
        "upload_time_iso_8601": "2023-03-09T13:03:34.169666Z",
        "url": "https://files.pythonhosted.org/packages/95/2c/c3500e43b14447455b0dff057c27639254f28dfb99e6ca97dae6936a3da5/python_on_rails-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34ae715eb5a27db38a781f55d0121baf51ee9a75143c983ef12838e6b87f1025",
        "md5": "e643eae30309f87839dc3448338a7bd1",
        "sha256": "d666d76a13e1157c969fce9391cfc5b8f5acfed7e2384409c24adc39dc736955"
      },
      "downloads": -1,
      "filename": "python_on_rails-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e643eae30309f87839dc3448338a7bd1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6649,
      "upload_time": "2023-03-09T13:03:33",
      "upload_time_iso_8601": "2023-03-09T13:03:33.037178Z",
      "url": "https://files.pythonhosted.org/packages/34/ae/715eb5a27db38a781f55d0121baf51ee9a75143c983ef12838e6b87f1025/python_on_rails-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "952cc3500e43b14447455b0dff057c27639254f28dfb99e6ca97dae6936a3da5",
        "md5": "ada748873e839972f238e62e98b67fb3",
        "sha256": "274bdf32e3433fe9ad4b6e8df313826abe75545a8cb1ea2f8045a3e00b224b65"
      },
      "downloads": -1,
      "filename": "python_on_rails-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ada748873e839972f238e62e98b67fb3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5586,
      "upload_time": "2023-03-09T13:03:34",
      "upload_time_iso_8601": "2023-03-09T13:03:34.169666Z",
      "url": "https://files.pythonhosted.org/packages/95/2c/c3500e43b14447455b0dff057c27639254f28dfb99e6ca97dae6936a3da5/python_on_rails-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}