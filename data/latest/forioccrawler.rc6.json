{
  "info": {
    "author": "rs-develop",
    "author_email": "rsdevelop.contact@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ForIocCrawler (fic) - A forensic ioc crawler.\n\nThis project aims to find IoCs in files, directories and mounted image directories to get an overview of a large amount of unknown data. \nThe core of the crawler is the use of pre defined regex to match common IoC types.\nIt also has a whitelisting feature to prevent common false positives like version numbers, local IP addresses etc. \nUsing the whitelisting feature it is possible to hide known good indicators and to reduce a huge amount of data and matches to a manageable count for analysis. \nTo adjust the *forioccrawler* and its output to your needs in a specific case, you can use a individual whitelist config.\nIt is also possible to define individual pattern files to find additional IoCs.\nThe program provides two modes: \n- the *stdout* mode and \n- a detailed *forensics* mode.\n\nA conceivable use case of the *forioccrawler* is to get an overview of linux server images or a logical copy of a filesystem. It extracts IoCs and provides an simple overview of the data. \nOn every matched IoC the path and the offset is specified. The whitelist feature can be used to prevent to search for IoCs in irrelevant directories like `/lib/firmware` or `/dev`.\n\n## Features\n\n- pure python3 no dependencies\n- finds IP-Adresses, URLs, Domains, E-mail-Adresses, Windows Regestry Keys etc. in\n- singe files,\n- directories and mount points.\n- multiprocessing\n- supports large files\n- supports to filter for single IoCs like only IPs\n- Output to stdout or export data to csv-file \n- match highligting\n- match file offset\n- individual whitelisting\n- individual pattern\n- set a maximum match size\n- verbose mode (see which files are whitelisted etc.)\n\n## Installation\n\nInstall using pip3:<br>\n`pip3 install forioccrawler`\n\nUpgrade using pip3:<br>\n`pip3 install forioccrawler -U`\n\n## Main Commands\n\nThe forioccrawler has three main commands:\n- parse - Subcommand for parsing files and directories\n- config - Subcommand for showing the content of the default pattern and whitelist file\n- version - Subcommand for showing the program version\n\n## Quick Start Guide for parsing\n\nSimple run over a file. The output of the results will printed to *stdout*.<br>\n`fic parse evil.exe`\n\nPrint matches only. Specify the column. Available columns are: [file, ioc, match, offset]. On default all columns are printed.<br>\n`fic parse file.txt -c match`\n\nIt is also possible to ajust the columns to your needs.<br>\n`fic parse evil.exe -c match offset`\n\nTo search only for urls, you can use the *type* argument. Multiple options are allowed.<br>\n`fic parse iocs.txt --type url`\n`fic parse iocs.txt --t url`\n\nPrint the matches on stdout and write them to file.<br>\n`fic parse iocs.txt --columns ioc match -o output_file.csv`\n`fic parse iocs.txt -c ioc match -o output_file.csv`\n\nAll mentioned arguments can also be used with directories or mount points. For better processing overview the forensic mode can be used.<br>\n`fic parse /mnt/server_image -c ioc match offset --mode forensics -o output_file.csv`\n\nEnable whitelisting (Default whitelist).<br>\n`fic parse /mnt/server_image --whitelist`\n\nSet a individual pattern and/or whitelist file.<br>\n`fic parse /home/user/Downloads --load-whitelist myWhitelist.ini --load-pattern mypattern.ini`\n`fic parse /home/user/Downloads --load-pattern mypattern.ini`\n`fic parse /home/user/Downloads --load-whitelist myWhitelist.ini`\n\nFor processing large files, you can use the forensics mode and the verbose flag to check the status of the crawler.<br>\n`fic parse large.txt -m forensics -v -o out.txt`\n\n## Program modes\n\nThe programm provides two modes:\n* stdout printing mode (default)\n* forensics\n\nThe *stdout* mode is demonstrated above in the Quick Start section. The *forensics* mode is a good choise for processing large files,\ndirectories or mount points.\nIt shows a better overview: file count, processing status and an ioc summary after finishing the processing.\n\n***Example output of the forensics mode***\n```\n[+] Init Crawler\n[+] Whitelisting is enabled\n[+] Checking files\n |- 42 files found, 0 whitelisted.\n[+] Start processing files\n |- Processed files: 10 / 42 [23.81 %]\n |- Processed files: 12 / 42 [28.57 %]\n |- Processed files: 22 / 42 [52.38 %]\n |- Processed files: 32 / 42 [76.19 %]\n |- Processed files: 42 / 42 [100.0 %]\n[+] Finished processing\n[+] Writing Export\n[+] Results written to: results.csv\n[+] Summary of matches\n |- Filtered matches trough whitelisting: 9896\n |- URL: 1\n |- DOMAIN: 3\n |- IP: 575\n |- WIN_REGISTRY: 16\n[+] Done\n```\n\n## Verbose mode\n\nThe verbose mode `-v`, `--verbose` provides a more detailed output. In addition, a debug file will be written to the current directory.\nIn verbose mode whitelisted files (path + name), loaded pattern count, errors, a detailed processing log etc. is printed.\nIt also tells you which file and process causes a long runtime.\n\n## Whitelisting and Pattern\n\nThe pattern and whitlisting files are based of *ini* files. There is one *ini* file for whitelisting and one for pattern by default. The functionality \nis based on regular expression and supports by default IoCs like IP, URL etc. and a whitelisting for known good or files, which causes a high false positive risk. \n\n## Writing a personal whitelisting and pattern file\n\n###### Whitelisting\n\nWhitelisting is disabled by default. To enable whitelisting use the `-w`, `--whitelist` argument. Using whitelisting the amount of false positives and known good matches will be decreaced.\nIf whitelisting is enabled, the crawler checks if a part of the path of the current file or part of the current match is found in the whitelist.\n\n**Example 1**\nYou have the match `192.168.1.122` for the IP pattern. The crawler checks the whitelist and finds the string `192.168.`. Because the crawler looks not for full whitelist matches but for parts, the match will not counted and is whitelisted. If you only wanna whitelist adresses like `192.168.2.xxx`, you have to change the whitelist entry to `192.168.2`\n\nTo create your own whitelist file, define a section and add entries to the section.\n\nTo use your whitelist file, add the `--load-whitelist` argument: `fic parse file.bin --load-whitelist myWhitelist.ini`. \nIf you load your own whitelist, you dont have to enable whitelisting seperately.\nAlternativ you can permanently add your whitelist to the crawler for using it by default `fic config --set-whitelist myWhitelist.ini`.\n\nBelow you can find an example for a whitelist file. Using the `fic config --print-whitelist` command, you can print the default whitelist.\n\n```\n# my whitelist file\n[WHITELIST_MY_SECTION]\nvalue : myValue\n\n[WHITELIST_NOT_THIS_DIRECTORIES]\nlinux : /not/here\n        /and/not/here\nwindows: C:\\Windows\n         Users/user/Desktop\n```\n\n###### Pattern\n\nPatterns are the core functionality of the ioc crawler. Is one of your match expressions are incorrect an error message will be written into the log file. \nTo create a log file use the verbose mode (`-v`, `--verbose`).\nTo create a individual pattern file, you have to define pattern sections. Every section consists of one or more key:value pairs.\n\nTo use your personal pattern file, add the `--load-pattern` argument: `fic parse file.bin --load-pattern myPattern.ini`.\nTo use your pattern everytime you use the crawler, add it as default: `fic config --set-pattern myPattern.ini`.\n\nUsing the `fic config --print-pattern` argument, you can print the path and the content of the default pattern.\n\nIn the following an example for an individual pattern file is shown.\n```\n# my pattern file\n[DATE_OF_INTEREST]\ndatetime : (2018\\-[0-9]{2}\\-[0-9]{2} [01][0-9]\\:[0-9]{2}:[0-9]{2})\n\n[SPECIAL_REQUEST]\nvalue : (GET\\srequest\\sfor\\member.php\\s.{3,})\"\n```\n\n## Config Menu\n\nThe config menu allows you to change crawler settings, the default whitelist and pattern file and the default thread count.\nYou can print the current configuration using `fic config --show`.\nIn addition to change the default pattern und whitelist file, you can restore the default configuration of the crawler.\n\n## Program help\n\nThe crawler have two main sub menus: `parse` and `config`.\nTo see the help for the parse menu type: `fic parse -h`.\nTo see the help for the config menu type: `fic config`.\n\n## Version\n\nCurrent version is 1.2.1\n\n## ToDo\n\nFor version 1.3\n- [ ] Search in compressed file archives like zip etc.\n- [ ] Search in file formats like pdf word etc.\n- [ ] Add more export features like json output\n- [ ] Optimize multiprocessing based on file size etc.\n- [ ] Implement switch for printing offset as hex or decimal\n- [ ] Implement switch to output/export only unique matches\n- [ ] Implement a feature to print bytes before and after a match\n- [ ] Test the Crawler on Windows images\n\n## Contact\n\nrsdevelop.contact@gmail.com\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rs-develop/forioccrawler",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ForIocCrawler",
    "package_url": "https://pypi.org/project/ForIocCrawler/",
    "platform": null,
    "project_url": "https://pypi.org/project/ForIocCrawler/",
    "project_urls": {
      "Bug Tracker": "https://github.com/rs-develop/ForIocCrawler/issues",
      "Homepage": "https://github.com/rs-develop/forioccrawler"
    },
    "release_url": "https://pypi.org/project/ForIocCrawler/1.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A forensic ioc extractor",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15842563,
  "releases": {
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a052c945c2bd206119ac88656058bc6931b27286eab9ef8e4a153bb844966bc2",
          "md5": "f360f9510f648564b98caf66632c70ac",
          "sha256": "f0594f305928202528ecb3462338b3ea104ce5d918a0c5e4932f820e5508455e"
        },
        "downloads": -1,
        "filename": "ForIocCrawler-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f360f9510f648564b98caf66632c70ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14023,
        "upload_time": "2021-04-03T19:31:43",
        "upload_time_iso_8601": "2021-04-03T19:31:43.111096Z",
        "url": "https://files.pythonhosted.org/packages/a0/52/c945c2bd206119ac88656058bc6931b27286eab9ef8e4a153bb844966bc2/ForIocCrawler-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a6dc42b4945be031ded2f0eef93ecc988f08460809bb992c28d062c985a08dd",
          "md5": "e21d7928dfa1c54c9039566f0afc20b0",
          "sha256": "9fc0b929d1fb097e35b7028e57f323e8a86dba2f483eefe13d364ddae9675774"
        },
        "downloads": -1,
        "filename": "ForIocCrawler-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e21d7928dfa1c54c9039566f0afc20b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12043,
        "upload_time": "2021-04-03T19:31:44",
        "upload_time_iso_8601": "2021-04-03T19:31:44.833968Z",
        "url": "https://files.pythonhosted.org/packages/2a/6d/c42b4945be031ded2f0eef93ecc988f08460809bb992c28d062c985a08dd/ForIocCrawler-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0f773aaf6777817b72fb87f0e57e87e2bcd788ee4029204a8058ee6d35cb1e3",
          "md5": "018c7c7917929e39e4af873ba581dfd0",
          "sha256": "796c11713f47bda8ce496c0b087d3bd80d2d78435ae060d5209713176c032c67"
        },
        "downloads": -1,
        "filename": "ForIocCrawler-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "018c7c7917929e39e4af873ba581dfd0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 15872,
        "upload_time": "2021-05-02T17:09:37",
        "upload_time_iso_8601": "2021-05-02T17:09:37.553945Z",
        "url": "https://files.pythonhosted.org/packages/e0/f7/73aaf6777817b72fb87f0e57e87e2bcd788ee4029204a8058ee6d35cb1e3/ForIocCrawler-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88d1e7cc7a3118a5914bcda00835bbb7b5ee10bd64380229bd25e1070764988e",
          "md5": "ff612f0df0bbb89e878816d19c017f51",
          "sha256": "5be06d6ab28ca834e9ec2772162b682c778309a591617304148fb1dd73469c0b"
        },
        "downloads": -1,
        "filename": "ForIocCrawler-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ff612f0df0bbb89e878816d19c017f51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14765,
        "upload_time": "2021-05-02T17:09:38",
        "upload_time_iso_8601": "2021-05-02T17:09:38.835417Z",
        "url": "https://files.pythonhosted.org/packages/88/d1/e7cc7a3118a5914bcda00835bbb7b5ee10bd64380229bd25e1070764988e/ForIocCrawler-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9249344fb8138f7152e92fbeb98071da8321421926911e0605ec0ff0a3125fa4",
          "md5": "4f45612631123e5dc355509e644dda38",
          "sha256": "45a35eed835fd44be3bcc3b77e91089d62fbbce21692b64bf6a83107ad32f996"
        },
        "downloads": -1,
        "filename": "ForIocCrawler-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f45612631123e5dc355509e644dda38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16194,
        "upload_time": "2021-05-03T10:32:31",
        "upload_time_iso_8601": "2021-05-03T10:32:31.800530Z",
        "url": "https://files.pythonhosted.org/packages/92/49/344fb8138f7152e92fbeb98071da8321421926911e0605ec0ff0a3125fa4/ForIocCrawler-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03b6c0a1268ce52d9683f777b7a44e2d2aae980066e502bc0ac306261d1e1be2",
          "md5": "b1ecedbd3db1303a6674c5e2c3bc4f6e",
          "sha256": "f102a9c7f1e5f5dc39a8e87424090389a8a3d1a52cd5473939adeafb449137c7"
        },
        "downloads": -1,
        "filename": "ForIocCrawler-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b1ecedbd3db1303a6674c5e2c3bc4f6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15103,
        "upload_time": "2021-05-03T10:32:33",
        "upload_time_iso_8601": "2021-05-03T10:32:33.337004Z",
        "url": "https://files.pythonhosted.org/packages/03/b6/c0a1268ce52d9683f777b7a44e2d2aae980066e502bc0ac306261d1e1be2/ForIocCrawler-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "247537d46dfd44eef20cca5d8999f86ab3b7bb1a25b8dde85f13aa0b09c5faae",
          "md5": "35d2b6761a44ff11b76ae78a1e3824b0",
          "sha256": "7b35063d6c8b10da31c57a7fae096b302d05d0d3eacd4117969a1e560671a7ad"
        },
        "downloads": -1,
        "filename": "ForIocCrawler-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "35d2b6761a44ff11b76ae78a1e3824b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16714,
        "upload_time": "2022-01-30T16:29:47",
        "upload_time_iso_8601": "2022-01-30T16:29:47.589976Z",
        "url": "https://files.pythonhosted.org/packages/24/75/37d46dfd44eef20cca5d8999f86ab3b7bb1a25b8dde85f13aa0b09c5faae/ForIocCrawler-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef0c7d7bfe00c833afa1b18b90c022eb134e8b3473f1f1e42bfd2b4734095187",
          "md5": "67195432f29f992dce9cf118f4503a40",
          "sha256": "7fba3359481e81eeeabb67aead0d4a197d3c6d7e0646ac60a12e1102b5704d88"
        },
        "downloads": -1,
        "filename": "ForIocCrawler-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "67195432f29f992dce9cf118f4503a40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17394,
        "upload_time": "2022-02-24T18:43:50",
        "upload_time_iso_8601": "2022-02-24T18:43:50.995236Z",
        "url": "https://files.pythonhosted.org/packages/ef/0c/7d7bfe00c833afa1b18b90c022eb134e8b3473f1f1e42bfd2b4734095187/ForIocCrawler-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbd0af6a2bc5b138582c407a8ae07aeaab86104e9d0b9abeb36c54d4cf796e28",
          "md5": "b90d450f2cc60629fe4d48dc123e4289",
          "sha256": "3dfe5a0112cb2ca68f42eb66da5a79c6b30c8e361fe4f59efdb0cdb432e13ae4"
        },
        "downloads": -1,
        "filename": "ForIocCrawler-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b90d450f2cc60629fe4d48dc123e4289",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19229,
        "upload_time": "2022-11-21T15:54:32",
        "upload_time_iso_8601": "2022-11-21T15:54:32.290696Z",
        "url": "https://files.pythonhosted.org/packages/db/d0/af6a2bc5b138582c407a8ae07aeaab86104e9d0b9abeb36c54d4cf796e28/ForIocCrawler-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2ecd4122f5291acfeaaa20392d3701001e83179216c0abd6ae7aec7e522754c",
          "md5": "92fae2e44772900fd44d4014c83d8d41",
          "sha256": "f855991fba3d89dbfd83e58692e837de29f417634a7e835e46dd25bebb14abcc"
        },
        "downloads": -1,
        "filename": "ForIocCrawler-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "92fae2e44772900fd44d4014c83d8d41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17590,
        "upload_time": "2022-11-21T15:54:33",
        "upload_time_iso_8601": "2022-11-21T15:54:33.581596Z",
        "url": "https://files.pythonhosted.org/packages/a2/ec/d4122f5291acfeaaa20392d3701001e83179216c0abd6ae7aec7e522754c/ForIocCrawler-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dbd0af6a2bc5b138582c407a8ae07aeaab86104e9d0b9abeb36c54d4cf796e28",
        "md5": "b90d450f2cc60629fe4d48dc123e4289",
        "sha256": "3dfe5a0112cb2ca68f42eb66da5a79c6b30c8e361fe4f59efdb0cdb432e13ae4"
      },
      "downloads": -1,
      "filename": "ForIocCrawler-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b90d450f2cc60629fe4d48dc123e4289",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 19229,
      "upload_time": "2022-11-21T15:54:32",
      "upload_time_iso_8601": "2022-11-21T15:54:32.290696Z",
      "url": "https://files.pythonhosted.org/packages/db/d0/af6a2bc5b138582c407a8ae07aeaab86104e9d0b9abeb36c54d4cf796e28/ForIocCrawler-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2ecd4122f5291acfeaaa20392d3701001e83179216c0abd6ae7aec7e522754c",
        "md5": "92fae2e44772900fd44d4014c83d8d41",
        "sha256": "f855991fba3d89dbfd83e58692e837de29f417634a7e835e46dd25bebb14abcc"
      },
      "downloads": -1,
      "filename": "ForIocCrawler-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "92fae2e44772900fd44d4014c83d8d41",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 17590,
      "upload_time": "2022-11-21T15:54:33",
      "upload_time_iso_8601": "2022-11-21T15:54:33.581596Z",
      "url": "https://files.pythonhosted.org/packages/a2/ec/d4122f5291acfeaaa20392d3701001e83179216c0abd6ae7aec7e522754c/ForIocCrawler-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}