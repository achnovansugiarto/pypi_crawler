{
  "info": {
    "author": "Wagner de Lima",
    "author_email": "waglds@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "DRF Social OAuth2\n===================================\n\n.. image:: https://badge.fury.io/py/drf-social-oauth2.svg\n    :target: https://badge.fury.io/for/py/drf-social-oauth2\n\n.. image:: https://www.codefactor.io/repository/github/wagnerdelima/drf-social-oauth2/badge\n    :target: https://www.codefactor.io/repository/github/wagnerdelima/drf-social-oauth2/badge\n\n\nIntroduction\n^^^^^^^^^^^^\n\nThis module provides OAuth2 social authentication support for applications in Django REST Framework.\n\nThe aim of this package is to help set up social authentication for your REST API. It also helps setting up your OAuth2\nprovider.\n\nThis package relies on `python-social-auth <http://python-social-auth.readthedocs.io>`_ and\n`django-oauth-toolkit <https://django-oauth-toolkit.readthedocs.org>`_.\nYou should probably read their docs if you were to go further than what is done here.\nIf you have some hard time understanding OAuth2, you can read a simple explanation\n`here <https://aaronparecki.com/articles/2012/07/29/1/oauth2-simplified>`_.\n\nIf you would like to test out this framework but you do not want to spend time at setting it up\nin your local environment, you can visit my `facebook_setup <https://github.com/wagnerdelima/facebook_setup>`_ repo.\nIt contains all the configuration necessary for you to try. It's missing database configuration, however\nall you have to do is set up a database in the settings.py file.\n\nInstallation\n------------\n\nThis framework is published at the PyPI, install it with pip::\n\n    pip install drf_social_oauth2\n\n\nAdd the following to your ``INSTALLED_APPS``:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'oauth2_provider',\n        'social_django',\n        'drf_social_oauth2',\n    )\n\n\nInclude social auth urls to your urls.py:\n\n.. code-block:: python\n\n    from django.conf.urls import url\n\n    urlpatterns = patterns(\n        ...\n        url(r'^auth/', include('drf_social_oauth2.urls', namespace='drf'))\n    )\n\nFor versions of Django 4.0 or higher, use:\n\n.. code-block:: python\n\n    from django.urls import re_path\n\n    urlpatterns = patterns(\n        ...\n        re_path(r'^auth/', include('drf_social_oauth2.urls', namespace='drf'))\n    )\n\nAdd these context processors to your ``TEMPLATE_CONTEXT_PROCESSORS``:\n\n.. code-block:: python\n\n    TEMPLATE_CONTEXT_PROCESSORS = (\n        ...\n        'social_django.context_processors.backends',\n        'social_django.context_processors.login_redirect',\n    )\n\nNB: since Django version 1.8, the ``TEMPLATE_CONTEXT_PROCESSORS`` is deprecated, set the ``'context_processors'`` option\nin the ``'OPTIONS'`` of a DjangoTemplates backend instead:\n\n.. code-block:: python\n\n    TEMPLATES = [\n        {\n            ...\n            'OPTIONS': {\n                'context_processors': [\n                    ...\n                    'social_django.context_processors.backends',\n                    'social_django.context_processors.login_redirect',\n                ],\n            },\n        }\n    ]\n\n\nYou can then enable the authentication classes for Django REST Framework by default or per view (add or update the\n``REST_FRAMEWORK`` and ``AUTHENTICATION_BACKENDS`` entries in your settings.py)\n\n.. code-block:: python\n\n    REST_FRAMEWORK = {\n        ...\n        'DEFAULT_AUTHENTICATION_CLASSES': (\n            ...\n            # 'oauth2_provider.ext.rest_framework.OAuth2Authentication',  # django-oauth-toolkit < 1.0.0\n            'oauth2_provider.contrib.rest_framework.OAuth2Authentication',  # django-oauth-toolkit >= 1.0.0\n            'drf_social_oauth2.authentication.SocialAuthentication',\n        ),\n    }\n\n.. code-block:: python\n\n    AUTHENTICATION_BACKENDS = (\n        ...\n       'drf_social_oauth2.backends.DjangoOAuth2',\n       'django.contrib.auth.backends.ModelBackend',\n    )\n\n\nThe settings of this  app are:\n\n- ``DRFSO2_PROPRIETARY_BACKEND_NAME``: name of your OAuth2 social backend (e.g ``\"Facebook\"``), defaults to ``\"Django\"``\n- ``DRFSO2_URL_NAMESPACE``: namespace for reversing URLs\n- ``ACTIVATE_JWT``: If set to True the access and refresh tokens will be JWTed. Default is False.\n\nSetting Up a New Application\n----------------------------\n\nGo to Django admin and add a new Application with the following configuration:\n\n- ``client_id`` and ``client_secret`` should be left unchanged\n- ``user`` should be your superuser\n- ``redirect_uris`` should be left blank\n- ``client_type`` should be set to ``confidential``\n- ``authorization_grant_type`` should be set to ``'Resource owner password-based'``\n- ``name`` can be set to whatever you'd like\n\nThe installation is done, you can now test the newly configured application.\n\nIt is recommended that you read the docs from `python-social-auth` and `django-oauth-toolkit` if you would like to go\nfurther. If you want to enable a social backend (e.g. Facebook), check the docs of `python-social-auth` on\n`supported backends <http://python-social-auth.readthedocs.io/en/latest/backends/index.html#supported-backends>`_\nand `django-social-auth` on `backend configuration <http://python-social-auth.readthedocs.io/en/latest/configuration/django.html>`_.\n\n\nTesting the Setup\n-----------------\n\nNow that the installation is done, let's try out the various functionality.\nWe will assume for the following examples that the REST API is reachable on ``http://localhost:8000``.\n\n- Retrieve a token for a user using ``curl``::\n\n    curl -X POST -d \"client_id=<client_id>&client_secret=<client_secret>&grant_type=password&username=<user_name>&password=<password>\" http://localhost:8000/auth/token\n\n``<client_id>`` and ``<client_secret>`` are the keys generated automatically. you can find in the model Application you created.\n\n-  Refresh token::\n\n    curl -X POST -d \"grant_type=refresh_token&client_id=<client_id>&client_secret=<client_secret>&refresh_token=<your_refresh_token>\" http://localhost:8000/auth/token\n\n- Exchange an external token for a token linked to your app::\n\n    curl -X POST -d \"grant_type=convert_token&client_id=<client_id>&client_secret=<client_secret>&backend=<backend>&token=<backend_token>\" http://localhost:8000/auth/convert-token\n\n``<backend>`` here needs to be replaced by the name of an enabled backend (e.g. \"Facebook\"). Note that ``PROPRIETARY_BACKEND_NAME``\nis a valid backend name, but there is no use to do that here.\n``<backend_token>`` is for the token you got from the service utilizing an iOS app for example.\n\n- Revoke tokens:\n\n    Revoke a single token::\n\n        curl -X POST -d \"client_id=<client_id>&client_secret=<client_secret>&token=<your_token>\" http://localhost:8000/auth/revoke-token\n\n    Revoke all tokens for a user::\n\n        curl -H \"Authorization: Bearer <token>\" -X POST -d \"client_id=<client_id>\" http://localhost:8000/auth/invalidate-sessions\n\n\nAuthenticating Requests\n-----------------------\n\nAs you have probably noticed, we enabled a default authentication backend called ``SocialAuthentication``.\nThis backend lets you register and authenticate your users seamlessly with your REST API.\n\nThe class simply retrieves the backend name and token from the Authorization header and tries to authenticate the user\nusing the corresponding external provider. If the user was not yet registered on your app, it will automatically create\na new user for this purpose.\n\nExample authenticated request::\n\n    curl -H \"Authorization: Bearer <backend_name> <backend_token>\" http://localhost:8000/route/to/your/view\n\n\nIntegration Examples\n--------------------\n\nFor each authentication provider, the top portion of your REST API settings.py file should look like this:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        # OAuth\n        'oauth2_provider',\n        'social_django',\n        'drf_social_oauth2',\n    )\n\n    TEMPLATES = [\n        {\n            ...\n            'OPTIONS': {\n                'context_processors': [\n                    ...\n                    # OAuth\n                    'social_django.context_processors.backends',\n                    'social_django.context_processors.login_redirect',\n                ],\n            },\n        }\n    ]\n\n    REST_FRAMEWORK = {\n        ...\n        'DEFAULT_AUTHENTICATION_CLASSES': (\n            ...\n            # OAuth\n            # 'oauth2_provider.ext.rest_framework.OAuth2Authentication',  # django-oauth-toolkit < 1.0.0\n            'oauth2_provider.contrib.rest_framework.OAuth2Authentication',  # django-oauth-toolkit >= 1.0.0\n            'drf_social_oauth2.authentication.SocialAuthentication',\n        )\n    }\n\nListed below are a few examples of supported backends that can be used for social authentication.\n\n\nFacebook Example\n^^^^^^^^^^^^^^^^\n\nTo use Facebook as the authorization backend of your REST API, your settings.py file should look like this:\n\n.. code-block:: python\n\n    AUTHENTICATION_BACKENDS = (\n        # Others auth providers (e.g. Google, OpenId, etc)\n        ...\n\n        # Facebook OAuth2\n        'social_core.backends.facebook.FacebookAppOAuth2',\n        'social_core.backends.facebook.FacebookOAuth2',\n\n        # drf_social_oauth2\n        'drf_social_oauth2.backends.DjangoOAuth2',\n\n        # Django\n        'django.contrib.auth.backends.ModelBackend',\n    )\n\n    # Facebook configuration\n    SOCIAL_AUTH_FACEBOOK_KEY = '<your app id goes here>'\n    SOCIAL_AUTH_FACEBOOK_SECRET = '<your app secret goes here>'\n\n    # Define SOCIAL_AUTH_FACEBOOK_SCOPE to get extra permissions from Facebook.\n    # Email is not sent by default, to get it, you must request the email permission.\n    SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']\n    SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\n        'fields': 'id, name, email'\n    }\n\nRemember to add this new Application in your Django admin (see section \"Setting up Application\").\n\nYou can test these settings by running the following command::\n\n    curl -X POST -d \"grant_type=convert_token&client_id=<client_id>&client_secret=<client_secret>&backend=facebook&token=<facebook_token>\" http://localhost:8000/auth/convert-token\n\nThis request returns the \"access_token\" that you should use with every HTTP request to your REST API. What is happening\nhere is that we are converting a third-party access token (``<user_access_token>``) to an access token to use with your\nAPI and its clients (\"access_token\"). You should use this token on each and further communications between your\nsystem/application and your api to authenticate each request and avoid authenticating with Facebook every time.\n\nYou can get the ID (``SOCIAL_AUTH_FACEBOOK_KEY``) and secret (``SOCIAL_AUTH_FACEBOOK_SECRET``) of your app at\nhttps://developers.facebook.com/apps/.\n\nFor testing purposes, you can use the access token ``<user_access_token>`` from https://developers.facebook.com/tools/accesstoken/.\n\nFor more information on how to configure python-social-auth with Facebook visit\nhttp://python-social-auth.readthedocs.io/en/latest/backends/facebook.html.\n\n\nGoogle Example\n^^^^^^^^^^^^^^\n\nTo use Google OAuth2 as the authorization backend of your REST API, your settings.py file should look like this:\n\n.. code-block:: python\n\n    AUTHENTICATION_BACKENDS = (\n        # Others auth providers (e.g. Facebook, OpenId, etc)\n        ...\n\n\t# Google OAuth2\n\t'social_core.backends.google.GoogleOAuth2',\n\n        # drf-social-oauth2\n        'drf_social_oauth2.backends.DjangoOAuth2',\n\n        # Django\n        'django.contrib.auth.backends.ModelBackend',\n    )\n\n    # Google configuration\n    SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = <your app id goes here>\n    SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = <your app secret goes here>\n\n    # Define SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE to get extra permissions from Google.\n    SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [\n        'https://www.googleapis.com/auth/userinfo.email',\n        'https://www.googleapis.com/auth/userinfo.profile',\n    ]\n\nRemember to add the new Application in your Django admin (see section \"Setting up Application\").\n\nYou can test these settings by running the following command::\n\n    curl -X POST -d \"grant_type=convert_token&client_id=<django-oauth-generated-client_id>&client_secret=<django-oauth-generated-client_secret>&backend=google-oauth2&token=<google_token>\" http://localhost:8000/auth/convert-token\n\nThis request returns an \"access_token\" that you should use with every HTTP requests to your REST API.\nWhat is happening here is that we are converting a third-party access token (``<user_access_token>``)\nto an access token to use with your API and its clients (\"access_token\"). You should use this token on\neach and further communications between your system/application and your API to authenticate each request\nand avoid authenticating with Google every time.\n\nYou can get the ID (``SOCIAL_AUTH_GOOGLE_OAUTH2_KEY``) and secret (``SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET``)\nof your app at https://console.developers.google.com/apis/credentials\nand more information on how to create one on https://developers.google.com/identity/protocols/OAuth2.\n\nIn the Google API Credential, create a new \"Oauth Client ID\". Once it's created, Google will show you a Client ID and\na Client Secret. Use the Client ID at ``SOCIAL_AUTH_GOOGLE_OAUTH2_KEY``, and the Client Secret at\n``SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET``.\n\nFor testing purposes, you can use the access token ``<user_access_token>`` from\nhttps://developers.google.com/oauthplayground/.\n\n    1. Visit the OAuth 2.0 Playground\n    2. Select Google OAuth2 API v2 and authorize for https://www.googleapis.com/auth/userinfo.email and https://www.googleapis.com/auth/userinfo.profile\n    3. Exchange Authorization code for tokens and get access token\n    4. Use the access token as the token parameter in the /convert-token endpoint.\n\nIf you would like a step-by-step tutorial, see this link, by @djangokatya:\nhttps://djangokatya.com/2021/04/09/social-login-for-django-rest-framefork-for-newbies-a-k-a-for-me/\n\nFor more information on how to configure python-social-auth with Google visit\nhttps://python-social-auth.readthedocs.io/en/latest/backends/google.html#google-oauth2.\n\n\nRunning local tests\n^^^^^^^^^^^^^^^^^^^\n\nYou may find drf-social-oauth2's unit tests in the tests/ directory. In order to run the tests locally, you can either\nuse pytest directly or coverage itself. Prior to running the test cases you need to install the local dependencies by:\n\n    $ pip3 install -r requirements.test.txt\n\nThen you can just run pytest in your terminal:\n\n    $ pytest\n\nor call coverage to get the most updated test coverage:\n\n    $ coverage run --source='.' -m pytest && coverage html\n\n\nCustomize token expiration\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou can set the expiry time for tokens as follows:\n\n.. code-block:: python\n\n    # in your settings.py file.\n    from oauth2_provider import settings as oauth2_settings\n\n    # expires in 6 months\n    oauth2_settings.DEFAULTS['ACCESS_TOKEN_EXPIRE_SECONDS'] = 1.577e7\n\nRun Swagger Editor\n^^^^^^^^^^^^^^^^^^\n\nRun the Swagger Editor's and interact with the API:\n\nOn Mac and Linux:\n\n    $ docker run --rm -p 8080:8080 -v $(pwd):/tmp -e SWAGGER_FILE=/tmp/api.yaml swaggerapi/swagger-editor\n\nOn Windows:\n\n    $ docker run --rm -p 8080:8080 -v ${pwd}:/tmp -e SWAGGER_FILE=/tmp/api.yaml swaggerapi/swagger-editor\n\n\nWhat Am I Working Next?\n^^^^^^^^^^^^^^^^^^^^^^^\n\nI will be working on the issues below. Anyone is welcome to contribute.\n\n    - Investigating Issues.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wagnerdelima/drf-social-oauth2",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "drf-social-oauth2",
    "package_url": "https://pypi.org/project/drf-social-oauth2/",
    "platform": null,
    "project_url": "https://pypi.org/project/drf-social-oauth2/",
    "project_urls": {
      "Homepage": "https://github.com/wagnerdelima/drf-social-oauth2"
    },
    "release_url": "https://pypi.org/project/drf-social-oauth2/1.2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "python-social-auth and oauth2 support for django-rest-framework.",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17450510,
  "releases": {
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a645dfcc355f0c538f55367507647d478b7da53feb01a0404e2b5648b54c6873",
          "md5": "a0d53f4aa6ac535a4adffd4c3725126d",
          "sha256": "0a374c70b343b2c09159e27c78b693b01c63da4367fd3d6bc8c9202214d97d27"
        },
        "downloads": -1,
        "filename": "drf-social-oauth2-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a0d53f4aa6ac535a4adffd4c3725126d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15705,
        "upload_time": "2020-07-12T13:54:10",
        "upload_time_iso_8601": "2020-07-12T13:54:10.252043Z",
        "url": "https://files.pythonhosted.org/packages/a6/45/dfcc355f0c538f55367507647d478b7da53feb01a0404e2b5648b54c6873/drf-social-oauth2-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f77653379dba67adfbdc594c5c61d6c75fd473ae87efd580d38cb1759b3ecabe",
          "md5": "38454d334c596daabe70e20da8127480",
          "sha256": "817bb0dc8daa472f00e04da081d97291273805509339998c9e8e63b74e3b956a"
        },
        "downloads": -1,
        "filename": "drf-social-oauth2-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "38454d334c596daabe70e20da8127480",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15699,
        "upload_time": "2020-07-12T14:59:14",
        "upload_time_iso_8601": "2020-07-12T14:59:14.718629Z",
        "url": "https://files.pythonhosted.org/packages/f7/76/53379dba67adfbdc594c5c61d6c75fd473ae87efd580d38cb1759b3ecabe/drf-social-oauth2-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b80c265e1b38941924b97236265d78b3817724f67d670df062cbfccfd50c71d6",
          "md5": "867d17c9a5075e0090b47e26c78170fb",
          "sha256": "2f328043e0e32809600e2ace40bc189ddb598af0ede5e1289ecdf653aaba8969"
        },
        "downloads": -1,
        "filename": "drf-social-oauth2-1.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "867d17c9a5075e0090b47e26c78170fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16561,
        "upload_time": "2021-02-22T19:43:04",
        "upload_time_iso_8601": "2021-02-22T19:43:04.872370Z",
        "url": "https://files.pythonhosted.org/packages/b8/0c/265e1b38941924b97236265d78b3817724f67d670df062cbfccfd50c71d6/drf-social-oauth2-1.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1024d7666312859451501bd57eb7d806a11dca0dd1bb972995b7621c14afc8f4",
          "md5": "5b18613d5c725b4f06c10a0ab1302dfb",
          "sha256": "d13255f704b45b959edcf8a5296a562fd6ba18254c7fbc22e5c78f9b1191bba3"
        },
        "downloads": -1,
        "filename": "drf-social-oauth2-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b18613d5c725b4f06c10a0ab1302dfb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17501,
        "upload_time": "2021-12-17T15:13:07",
        "upload_time_iso_8601": "2021-12-17T15:13:07.265800Z",
        "url": "https://files.pythonhosted.org/packages/10/24/d7666312859451501bd57eb7d806a11dca0dd1bb972995b7621c14afc8f4/drf-social-oauth2-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "514cd981b0386e92070e17c89a3d2c924e02476aabc5c797168cc98432c53829",
          "md5": "b98cb5381b3440964315584434d4574a",
          "sha256": "3327c8b6d244e492abf069c67fef5c93f3ebabf3e381157343d74e308702aa32"
        },
        "downloads": -1,
        "filename": "drf-social-oauth2-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b98cb5381b3440964315584434d4574a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18318,
        "upload_time": "2021-12-19T12:32:47",
        "upload_time_iso_8601": "2021-12-19T12:32:47.364981Z",
        "url": "https://files.pythonhosted.org/packages/51/4c/d981b0386e92070e17c89a3d2c924e02476aabc5c797168cc98432c53829/drf-social-oauth2-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc4c483a6dfd55629eb8678d2476229d31fcdfe47a662c254dc41ec612a4d538",
          "md5": "19fbc2e66deb5923e71fd31fbd3ca1c3",
          "sha256": "2ecbdc6173da7d6d01d7dca60e6f7ba5c733a173664db9723f4e5035c278bdd4"
        },
        "downloads": -1,
        "filename": "drf-social-oauth2-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "19fbc2e66deb5923e71fd31fbd3ca1c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18639,
        "upload_time": "2021-12-24T16:25:24",
        "upload_time_iso_8601": "2021-12-24T16:25:24.187306Z",
        "url": "https://files.pythonhosted.org/packages/cc/4c/483a6dfd55629eb8678d2476229d31fcdfe47a662c254dc41ec612a4d538/drf-social-oauth2-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92fb2a10f69fc9582c2527e32a03bcdb7810c58e1ce36812d8a47538795c4763",
          "md5": "a111f87f64ef8bdfa7c25cb6dc6461a0",
          "sha256": "972aebe2093710685fbf29dccd1ed67a88406bf0f2b8da5d3968006a79d1ab81"
        },
        "downloads": -1,
        "filename": "drf-social-oauth2-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a111f87f64ef8bdfa7c25cb6dc6461a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20104,
        "upload_time": "2021-12-29T16:15:36",
        "upload_time_iso_8601": "2021-12-29T16:15:36.810386Z",
        "url": "https://files.pythonhosted.org/packages/92/fb/2a10f69fc9582c2527e32a03bcdb7810c58e1ce36812d8a47538795c4763/drf-social-oauth2-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3922d5f31625d68ea27b8fb1249d57805aafdc011a9d60c041028711ea9b3b2",
          "md5": "253972f965f3987e8f6cd3cbd4d7d32f",
          "sha256": "c252482ff0d4a159c0c8016f2942eeb021d3abbf7d3f9ebe57a2e1c8dc91a0d1"
        },
        "downloads": -1,
        "filename": "drf-social-oauth2-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "253972f965f3987e8f6cd3cbd4d7d32f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22274,
        "upload_time": "2022-01-13T22:13:55",
        "upload_time_iso_8601": "2022-01-13T22:13:55.745683Z",
        "url": "https://files.pythonhosted.org/packages/f3/92/2d5f31625d68ea27b8fb1249d57805aafdc011a9d60c041028711ea9b3b2/drf-social-oauth2-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56c20f761c2743f1b8ffded9b458786f53d60476d4180780006a78f78b118659",
          "md5": "84d3eead90c355ed1c362a8434483d2d",
          "sha256": "15220f61df6b3126405ae17342a795c30c29a523890aab35ea8173feed107ac8"
        },
        "downloads": -1,
        "filename": "drf-social-oauth2-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "84d3eead90c355ed1c362a8434483d2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22351,
        "upload_time": "2022-01-21T09:45:09",
        "upload_time_iso_8601": "2022-01-21T09:45:09.016966Z",
        "url": "https://files.pythonhosted.org/packages/56/c2/0f761c2743f1b8ffded9b458786f53d60476d4180780006a78f78b118659/drf-social-oauth2-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "484584a39bcf2ddd6561e06626fb4fb7c0b9d35bce8b796a40fc1e4cc597bec4",
          "md5": "849ff00bc490327c2af6eae06c0ba7a5",
          "sha256": "e855927f97176ca5877a8d518944822a4b1bd0b911abafc461da078944b2efac"
        },
        "downloads": -1,
        "filename": "drf-social-oauth2-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "849ff00bc490327c2af6eae06c0ba7a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21408,
        "upload_time": "2023-03-26T15:03:17",
        "upload_time_iso_8601": "2023-03-26T15:03:17.331419Z",
        "url": "https://files.pythonhosted.org/packages/48/45/84a39bcf2ddd6561e06626fb4fb7c0b9d35bce8b796a40fc1e4cc597bec4/drf-social-oauth2-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "484584a39bcf2ddd6561e06626fb4fb7c0b9d35bce8b796a40fc1e4cc597bec4",
        "md5": "849ff00bc490327c2af6eae06c0ba7a5",
        "sha256": "e855927f97176ca5877a8d518944822a4b1bd0b911abafc461da078944b2efac"
      },
      "downloads": -1,
      "filename": "drf-social-oauth2-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "849ff00bc490327c2af6eae06c0ba7a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21408,
      "upload_time": "2023-03-26T15:03:17",
      "upload_time_iso_8601": "2023-03-26T15:03:17.331419Z",
      "url": "https://files.pythonhosted.org/packages/48/45/84a39bcf2ddd6561e06626fb4fb7c0b9d35bce8b796a40fc1e4cc597bec4/drf-social-oauth2-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}