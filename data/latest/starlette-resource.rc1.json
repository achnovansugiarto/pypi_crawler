{
  "info": {
    "author": "Gabriel Couture",
    "author_email": "gacou54@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Starlette-resource\n[![Build Status](https://travis-ci.com/gacou54/starlette-resource.svg?branch=master)](https://travis-ci.com/gacou54/starlette-resource)\n\n[Starlette](https://www.starlette.io/) resource that helps you follow a layered architecture.\n\nThis module was made to facilitate the implementation of a layered architecture.\nThe `Resource` and` WebSocketResource` classes are essentially the same things as Starlette's\n[`HTTPEndpoint`](https://www.starlette.io/endpoints/#httpendpoint) and [`WebSocketEndpoint`](https://www.starlette.io/endpoints/#websocketendpoint)\nclasses. So you can use these classes in the same way.\n\nThe difference is that the `Resource` and `WebSockerResource` must be instantiated before being passed to Starlette's [`Route`](https://www.starlette.io/routing/).\n\nWorks with Python 3.6+.\n\n### Example\n```python\nfrom starlette.applications import Starlette\nfrom starlette.requests import Request\nfrom starlette.responses import PlainTextResponse\nfrom starlette.routing import Route, WebSocketRoute\nfrom starlette.websockets import WebSocket\n\nfrom starlette_resource import Resource, WebSocketResource\n\n\nclass GreetingService:\n    async def greet(self, name: str) -> str:\n        return f'Hello {name}!'\n\n\nclass GreetingResource(Resource):\n    def __init__(self, hello_service: GreetingService) -> None:\n        self.hello_service = hello_service\n\n    async def get(self, req: Request) -> PlainTextResponse:\n        name = req.path_params['name']\n        greeting_message = await self.hello_service.greet(name)\n\n        return PlainTextResponse(greeting_message)\n\n    async def post(self, req: Request):\n        ...\n\n    async def put(self, req: Request):\n        ...\n\n    async def delete(self, req: Request):\n        ...\n\n\nclass GreetingWebSocketResource(WebSocketResource):\n    def __init__(self, hello_service: GreetingService) -> None:\n        self.hello_service = hello_service\n\n    async def on_receive(self, websocket: WebSocket, data: str) -> None:\n        greeting_message = await self.hello_service.greet(data)\n\n        await websocket.send_text(greeting_message)\n\n\n# Services\ngreeting_service = GreetingService()\n\n# Resources\ngreeting_resource = GreetingResource(greeting_service)\ngreeting_websocket_resource = GreetingWebSocketResource(greeting_service)\n\napp = Starlette(\n    debug=True,\n    routes=[\n        Route('/greet/{name}', greeting_resource),\n        WebSocketRoute('/websocket_greet', greeting_websocket_resource)\n    ]\n)\n```\n\n### Installation\n\nSimply install from PyPI:\n\n`pip install starlette-resource`\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gacou54/starlette-resource",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "starlette-resource",
    "package_url": "https://pypi.org/project/starlette-resource/",
    "platform": "",
    "project_url": "https://pypi.org/project/starlette-resource/",
    "project_urls": {
      "Homepage": "https://github.com/gacou54/starlette-resource"
    },
    "release_url": "https://pypi.org/project/starlette-resource/0.1.0/",
    "requires_dist": [
      "starlette"
    ],
    "requires_python": "",
    "summary": "Starlette resource that helps you follow a layered architecture.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8014175,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d928649c5c7217a61e8794e29018c0b96c560796ba881f9d10c6d8da271a0dc",
          "md5": "3b05d5d9a1571e46c8860068563bff99",
          "sha256": "53c36c0f0f5e2d73d87b12a776243c85651800af571e0d494c646c58c32f05f0"
        },
        "downloads": -1,
        "filename": "starlette_resource-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b05d5d9a1571e46c8860068563bff99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4515,
        "upload_time": "2020-08-21T18:27:42",
        "upload_time_iso_8601": "2020-08-21T18:27:42.834779Z",
        "url": "https://files.pythonhosted.org/packages/6d/92/8649c5c7217a61e8794e29018c0b96c560796ba881f9d10c6d8da271a0dc/starlette_resource-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46fd8a4b5e9486efaf7d3c6b5daba30ead25c1c4673407e273753e61518fc007",
          "md5": "e016baf161c9a9eb58d6c56322ce2bea",
          "sha256": "d881269bea393f2491d4a26a4a9b5658cb4efce0ea917951a2605a77e301c016"
        },
        "downloads": -1,
        "filename": "starlette-resource-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e016baf161c9a9eb58d6c56322ce2bea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2584,
        "upload_time": "2020-08-21T18:27:46",
        "upload_time_iso_8601": "2020-08-21T18:27:46.062975Z",
        "url": "https://files.pythonhosted.org/packages/46/fd/8a4b5e9486efaf7d3c6b5daba30ead25c1c4673407e273753e61518fc007/starlette-resource-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d928649c5c7217a61e8794e29018c0b96c560796ba881f9d10c6d8da271a0dc",
        "md5": "3b05d5d9a1571e46c8860068563bff99",
        "sha256": "53c36c0f0f5e2d73d87b12a776243c85651800af571e0d494c646c58c32f05f0"
      },
      "downloads": -1,
      "filename": "starlette_resource-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3b05d5d9a1571e46c8860068563bff99",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4515,
      "upload_time": "2020-08-21T18:27:42",
      "upload_time_iso_8601": "2020-08-21T18:27:42.834779Z",
      "url": "https://files.pythonhosted.org/packages/6d/92/8649c5c7217a61e8794e29018c0b96c560796ba881f9d10c6d8da271a0dc/starlette_resource-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46fd8a4b5e9486efaf7d3c6b5daba30ead25c1c4673407e273753e61518fc007",
        "md5": "e016baf161c9a9eb58d6c56322ce2bea",
        "sha256": "d881269bea393f2491d4a26a4a9b5658cb4efce0ea917951a2605a77e301c016"
      },
      "downloads": -1,
      "filename": "starlette-resource-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e016baf161c9a9eb58d6c56322ce2bea",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2584,
      "upload_time": "2020-08-21T18:27:46",
      "upload_time_iso_8601": "2020-08-21T18:27:46.062975Z",
      "url": "https://files.pythonhosted.org/packages/46/fd/8a4b5e9486efaf7d3c6b5daba30ead25c1c4673407e273753e61518fc007/starlette-resource-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}