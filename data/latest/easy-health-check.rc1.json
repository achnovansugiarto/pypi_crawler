{
  "info": {
    "author": "",
    "author_email": "\"Ahmad H.\" <i@ahmadly.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# healthcheck\n\na very simple Django health check app\n\n- easy to use\n- no migration\n- no extra dependency. only Django and Python 3.6+\n\n## install\n\n```shell\npip install git+https://github.com/ahmadly/healthcheck/archive/refs/heads/main.zip\n\n```\n\n## usage\n\n1. add `healthcheck` to `INSTALLED_APPS` in `settings.py`\n\n```python\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    \n    'healthcheck',\n\n]\n    \n```\n\n2. add `healthcheck.urls` to `urlpatterns` in `urls.py`\n\n```python\nurlpatterns = [\n    ...\n    path('health/', include('healthcheck.urls')),\n    ...\n]\n```\n\n3. setting `HEALTHCHECK` in `settings.py`\n\n```python\nHEALTH_CHECK_TOKEN = None\nHEALTH_CHECK_VIEW = 'healthcheck.views.HealthCheckView'\nHEALTH_CHECK_FAIL_STATUS_CODE = 500\nHEALTH_CHECK_SUCCESS_STATUS_CODE = 200\nHEALTH_CHECK_FORBIDDEN_STATUS_CODE = 403\n\nHEALTH_CHECK = [\n    'healthcheck.checks.check_database_connection',\n    'healthcheck.checks.check_cache_connection',\n    'healthcheck.checks.check_internet_connection',\n]\n\n```\n\n4. run server and go to `http://localhost:8000/health/`\n\n```json\n{\n    \"uuid\": \"8f45499108cf4407bd3533d08fe68b26\",\n    \"timestamp\": \"2023-01-20T16:25:51.374452+00:00\",\n    \"hostname\": \"Ahmads-MBP\",\n    \"total_checks\": 3,\n    \"failed_checks\": 0,\n    \"results\": [\n        {\n            \"check\": \"healthcheck.checks.check_database_connection\",\n            \"status\": true,\n            \"message\": \"Database is reachable\"\n        },\n        {\n            \"check\": \"healthcheck.checks.check_cache_connection\",\n            \"status\": true,\n            \"message\": \"Cache is reachable\"\n        },\n        {\n            \"check\": \"healthcheck.checks.check_internet_connection\",\n            \"status\": true,\n            \"message\": \"Internet is reachable\"\n        }\n    ]\n}\n```\n\n## options\n\n- `HEALTH_CHECK_TOKEN` is optional, if you want to use token for health check, set it to a string.\n  set `Authorization` header to `Bearer <HEALTH_CHECK_TOKEN>` in request header.\n- `HEALTH_CHECK_VIEW` is optional, if you want to use your own view, set it to a string. inherit\n  from `healthcheck.views.HealthCheckView`\n\n- `HEALTH_CHECK_FAIL_STATUS_CODE` is optional, if you want to use your own status code for fail, set it to an integer.\n- `HEALTH_CHECK_SUCCESS_STATUS_CODE` is optional, if you want to use your own status code for success, set it to an\n  integer.\n- `HEALTH_CHECK_FORBIDDEN_STATUS_CODE` is optional, if you want to use your own status code for forbidden, set it to an\n  integer.\n\n- `HEALTH_CHECK` is optional, if you want to use your own checks, set it to a list of strings. each string is a path to\n  a function. the function should return a tuple of two items. the first item is a boolean, the second item is a string.\n  the boolean is the status of the check, the string is the message of the check.\n\n```python\ndef check_database_connection() -> tuple[bool, str]:\n    \"\"\"\n    check must return a tuple of (status, message)\n    check must handle exceptions internally\n    check must handle timeouts internally\n    \"\"\"\n\n    return True, 'Database is reachable'\n\n```\n\n## contribute\n\nif you have any idea, please open an issue or a pull request.\n\n## todo\n\n- [ ] add more checks\n- [ ] add more tests\n- [ ] add documentation\n- [ ] add badges\n- [ ] setup release workflow\n- [ ] setup pypi.org",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easy-health-check",
    "package_url": "https://pypi.org/project/easy-health-check/",
    "platform": null,
    "project_url": "https://pypi.org/project/easy-health-check/",
    "project_urls": {
      "homepage": "https://github.com/ahmadly/healthcheck",
      "repository": "https://github.com/ahmadly/healthcheck"
    },
    "release_url": "https://pypi.org/project/easy-health-check/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A simple healthcheck server",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16504240,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84ce5e1b33242362c13a10c9265a8fe9345a725ae8cde1b83d5fceebb0d4ddfa",
          "md5": "c588536cbe21096ec8f4e7e22440df02",
          "sha256": "6fd11c3011c137fe31bcff752f1ab4e50483c97209a705523a4c2b09caa25a2d"
        },
        "downloads": -1,
        "filename": "easy_health_check-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c588536cbe21096ec8f4e7e22440df02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16862,
        "upload_time": "2023-01-20T17:59:46",
        "upload_time_iso_8601": "2023-01-20T17:59:46.193970Z",
        "url": "https://files.pythonhosted.org/packages/84/ce/5e1b33242362c13a10c9265a8fe9345a725ae8cde1b83d5fceebb0d4ddfa/easy_health_check-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c646cbad6ceee75d17c91d05eb5c6200809b82515beb76e6104b2dbf0b4b3439",
          "md5": "5808430fc71a53530763b259f94d57ad",
          "sha256": "d75c92184049e027754ab1fef846ebbd05d0e1c00f175dd7299a670082b86e10"
        },
        "downloads": -1,
        "filename": "easy_health_check-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5808430fc71a53530763b259f94d57ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18121,
        "upload_time": "2023-01-20T17:59:48",
        "upload_time_iso_8601": "2023-01-20T17:59:48.371724Z",
        "url": "https://files.pythonhosted.org/packages/c6/46/cbad6ceee75d17c91d05eb5c6200809b82515beb76e6104b2dbf0b4b3439/easy_health_check-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "84ce5e1b33242362c13a10c9265a8fe9345a725ae8cde1b83d5fceebb0d4ddfa",
        "md5": "c588536cbe21096ec8f4e7e22440df02",
        "sha256": "6fd11c3011c137fe31bcff752f1ab4e50483c97209a705523a4c2b09caa25a2d"
      },
      "downloads": -1,
      "filename": "easy_health_check-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c588536cbe21096ec8f4e7e22440df02",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 16862,
      "upload_time": "2023-01-20T17:59:46",
      "upload_time_iso_8601": "2023-01-20T17:59:46.193970Z",
      "url": "https://files.pythonhosted.org/packages/84/ce/5e1b33242362c13a10c9265a8fe9345a725ae8cde1b83d5fceebb0d4ddfa/easy_health_check-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c646cbad6ceee75d17c91d05eb5c6200809b82515beb76e6104b2dbf0b4b3439",
        "md5": "5808430fc71a53530763b259f94d57ad",
        "sha256": "d75c92184049e027754ab1fef846ebbd05d0e1c00f175dd7299a670082b86e10"
      },
      "downloads": -1,
      "filename": "easy_health_check-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5808430fc71a53530763b259f94d57ad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 18121,
      "upload_time": "2023-01-20T17:59:48",
      "upload_time_iso_8601": "2023-01-20T17:59:48.371724Z",
      "url": "https://files.pythonhosted.org/packages/c6/46/cbad6ceee75d17c91d05eb5c6200809b82515beb76e6104b2dbf0b4b3439/easy_health_check-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}