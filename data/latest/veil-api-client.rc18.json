{
  "info": {
    "author": "Aleksey Devyatkin, Emile Gareev",
    "author_email": "a.devyatkin@mashtab.org, e.gareev@mashtab.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Python 3.5](https://img.shields.io/badge/python-3.5-blue.svg)](https://www.python.org/downloads/release/python-350/)\n[![Python 3.6](https://img.shields.io/badge/python-3.6-blue.svg)](https://www.python.org/downloads/release/python-360/)\n[![Python 3.7](https://img.shields.io/badge/python-3.7-blue.svg)](https://www.python.org/downloads/release/python-370/)\n[![Coverage](https://img.shields.io/static/v1?label=coverage&message=70%&color=yellow)](https://coverage.readthedocs.io/en/coverage-5.1/)\n\n# VeiL api client \nПредназначен для упрощения интеграции между конечным приложением/скриптом и ECP VeiL. Если вы не хотите слишком глубоко \nпогружаться в детали и нюансы работы с сессиями, сущностями и конечным API VeiL - рассмотрите работу через данную \nбиблиотеку. Внутри мы используем **aiohttp client**.\n\n## Установка\nПроект доступен в PyPi, можете воспользоваться поддерживаемым пакетным менеджером, например, **pip**\n\n`pip install veil-api-client`\n\n## Использование\nПредусмотрено два возможных сценария использования: постоянная работа и разовый запуск с завершением. Ниже будет пример\nпростого и продвинутого использования.\n\n### Документация\nКраткое описание вы читаете сейчас, более подробное доступна через help, например, help(response).\nЛогика импортов построена так, что конечные сущности с которыми предлагается работать доступны напрямую из корня.\nКраткое описание классов ниже:\n```\n# Сущности клиента\nfrom veil_api_client import VeilClient, VeilClientSingleton \n\n# Дополнительные параметры клиента для продвинутого использования\nfrom veil_api_client import VeilCacheConfiguration, VeilRetryConfiguration \n\n# Сущность пагинатора в ответе\nfrom veil_api_client import VeilRestPaginator\n\n# Интерфейсы для аргументов сущностей на VeiL ECP\nfrom veil_api_client import DomainConfiguration, VeilGuestAgentCmd, DomainTcpUsb\n```\n\n### Разовый запуск\nЕсли ваш сценарий использования это асинхронный скрипт, который должен выполниться и завершить свою работу,\nто лучше всего использовать менеджер контекста. \n\n### Примеры\nНапример, Вам нужно получить список из 10 ВМ на ECP VeiL и для каждой выполнить команду start:\n```\nimport asyncio\nfrom veil_api_client import VeilClient, VeilRestPaginator\nlogging.basicConfig(level=logging.DEBUG)  # debug message can be useful\n\ntoken_115 = 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2V'\nserver_address_115 = '192.168.11.115'\n\nasync def simple_main():\n    async with VeilClient(server_address=server, token=token) as session:\n        # Настраиваем пагинатор - сортировка по полю verbose_name, первые 10 записей.\n        paginator = VeilRestPaginator(ordering='verbose_name', limit=10)\n        # У каждой сессии есть атрибут - сущность на ECP VeiL.\n        veil_domain_entity = session.domain()\n        # получаем ответ со списком вм\n        veil_response = await veil_domain_entity.list(paginator=paginator)\n\n        # Ответ списком имеет 200й статус, ответ на результат задачи скорее всего будет в 202 статусе\n        if veil_response.status_code == 418:\n            raise AssertionError('VeiL ECP проходит процедуру обновления. Попробуйте позже.')\n        elif not veil_response.success:\n            raise AssertionError('Ошибка получения информации от VeiL.')\n\n        # Включаем каждую из полученных ВМ\n        for domain in veil_response.response:\n            start_response = await domain.start()\n            if not start_response.success:\n                raise AssertionError(start_response.error_detail)\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(simple_main())\n```\n\n#### Примеры использования тэгов\n```\n# Список тэгов\ntags_response = await session.tag().list()\n\n# Создание тэга\nnew_tag1 = TagConfiguration(verbose_name='tag9')\ntag1_response = await session.tag().create(new_tag1)\nif tag1_response.success:\n    task = tag1_response.task  # Таска создания нового тега\n    new_uid = task.first_entity  # идентификатор создаваемой сущности\n\n# Информация по тэгу\ntag_response = await session.tag(new_uid).info()\n# Сущность тега\ntag = tag_response.response[0]\n\n# Прикрепление сущности к тэгу\nentity = VeilEntityConfiguration(entity_uuid='01747df8-bdc6-4a50-9747-3e59ef5d4868',\n                                 entity_class='domain')\nentity_response = await tag.add_entity(entity_configuration=entity)\nif entity_response.success:\n    print('Успешное прикрепление')\n\n# Прикрепление нескольких сущностей к тэгу\nentity1 = VeilEntityConfiguration(entity_uuid='01747df8-bdc6-4a50-9747-3e59ef5d4868',\n                                  entity_class='domain')\nentity2 = VeilEntityConfiguration(entity_uuid='67e45225-db3f-4474-b334-e8d83ef89a2a',\n                                  entity_class='domain')\nentity_response = await tag.add_entities(entities_conf=[entity1, entity2])\nif entity_response.success:\n     print('Успешное множественное прикрепление')\n\n# Редактирование тэга\nupdate_response = await tag.update(colour='#ff0000', verbose_name='newname')\nif update_response.success:\n     print('Успешное редактирование')\n\n# Открепление сущности от тэга\ntag = session.tag('581d2c2b-1f1b-4807-953a-c0e80e8a943b')\nawait tag.info()#\nentity = VeilEntityConfiguration(entity_uuid='01747df8-bdc6-4a50-9747-3e59ef5d4868',\n                                 entity_class='domain')\n\nentity_response = await tag.remove_entity(entity_configuration=entity)\nif entity_response.success:\n    print('Успешное открепление')\n\n# Открепление сущностей от тэга\ntag = session.tag('3cacf9f1-7107-45de-bd9d-55d8d6e7eeb3')\nawait tag.info()\nentity1 = VeilEntityConfiguration(entity_uuid='01747df8-bdc6-4a50-9747-3e59ef5d4868',\n                                  entity_class='domain')\nentity2 = VeilEntityConfiguration(entity_uuid='67e45225-db3f-4474-b334-e8d83ef89a2a',\n                                  entity_class='domain')\nentity_response = await tag.remove_entities(entities_conf=[entity1, entity2])\nif entity_response.success:\n     print('Успешное множественное открепление')\n\n# Удаление\nremove_response = await tag.remove()\nif remove_response.success:\n     print('Успешное удаление')\n```\n\n#### Пример для изменения золотого образа (шаблона)\n```\ndomain = session.domain('67e45225-db3f-4474-b334-e8d83ef89a2a')\nawait domain.change_template()\n```\n\n#### Пример получения полного перечня возможных полей Domain\nПо умолчанию VeiL ECP имеет разные наборы данных доступные через методы `info` и `list`. Чтобы\nполучить расширенный набор атрибутов в методе `list` необходимо передать `__all__` как единственный элемент\nмассива `fields`.\n```\nresponse = await domain.list(fields=['__all__', ])\nfor domain in response.response:\n    print('{}:{}:{}'.format(domain.verbose_name, domain.cpu_type, domain.spice_stream))\n```\n\n#### Получение конкретного перечня возможных полей Domain\nВ ситуации, когда необходимо сократить перечень возвращаемых полей методом `list` передайте список\nнужных атрибутов в аргумент `fields` метода `info`.\n```\nresponse = await domain.list(fields=['verbose_name', 'status', 'memory_count', 'id'])\nfor domain in response.response:\n    print('{}:{}:{}:{}'.format(domain.verbose_name, domain.status, domain.memory_count, domain.api_object_id))\n```\n\n#### Примечание\n- Обратите внимание, что `__all__` и перечень полей это взаимоисключающие параметры. \n  Также необходимо иметь в виду, что некоторые поля можно получить только с `__all__`.\n- В примерах выше работа с ответами выполнена через атрибут `.response`. В двух словах это массив из 1 или нескольких\n  объектов вызывающей сущности, например, если запрос выполняется для domain.list внутри будут находиться объекты VeilDomainExt\n  с теми аргументами, которые были на момент ответа.\n- Если необходимо работать напрямую с ответом VeiL ECP - используете атрибут `data` (описан ниже).\n\n\n### Постоянно запущенное приложение\nЕсли ваше приложение запущено постоянно и ему необходима +- постоянная связь с VeiL ECP, стоит доработать \n**VeilClientSingleton**. Основное отличие этого сценария - будет храниться ранее созданный инстанс клиента для \nконкретного контроллера. Это сократит возможные дублирования сессий, временные затраты на установку соединения \nдля запросов с маленьким временным интервалом и унифицирует настройки. \nПри таком сценарии использования — слежение за закрытием сессий перекладывается на ваше приложение.\nЕсли этот сценарий Вам кажется ближе, задумайтесь о расширении готовой логики VeilClientSingleton. \n\nНиже пример, который может пригодиться:\n```\nimport asyncio\nimport json\nimport uvloop\nimport logging\nfrom typing import Optional\n\nfrom pymemcache.client.base import Client as MemcachedClient\nfrom veil_api_client import (VeilClient, VeilClientSingleton,\n                             VeilRetryConfiguration, VeilCacheConfiguration, VeilDomainExt,\n                             VeilCacheAbstractClient)\n\nlogging.basicConfig(level=logging.DEBUG)\n\n\n# Длинная часть с переопределением и дополнением базовой логики\nclass DictSerde:\n    \"\"\"Сериализатор для записи данных ответов в кэш.\"\"\"\n\n    @staticmethod\n    def serialize(key, value):\n        \"\"\"Serialize VeilApiResponse to bytes.\"\"\"\n        if isinstance(value, str):\n            return value.encode('utf-8'), 1\n        elif isinstance(value, dict):\n            return json.dumps(value).encode('utf-8'), 2\n        raise Exception('Unknown serialization format')\n\n    @staticmethod\n    def deserialize(key, value, flags):\n        \"\"\"Deserialize bytes to dict.\"\"\"\n        if flags == 1:\n            return value.decode('utf-8')\n        elif flags == 2:\n            return json.loads(value.decode('utf-8'))\n        raise Exception('Unknown serialization format')\n\n\nclass UserCacheClient(VeilCacheAbstractClient):\n    \"\"\"Реализация пользовательского кэш-клиента.\"\"\"\n\n    def __init__(self):\n        self.client = MemcachedClient(server=('localhost', 11211), serde=DictSerde())\n\n    async def get_from_cache(self,\n                             veil_api_client_request_cor,\n                             veil_api_client,\n                             method_name,\n                             url: str,\n                             headers: dict,\n                             params: dict,\n                             ssl: bool,\n                             json_data: Optional[dict] = None,\n                             retry_opts: Optional[VeilRetryConfiguration] = None,\n                             ttl: int = 0,\n                             *args, **kwargs):\n        \"\"\"Метод, который вызовет клиент.\n\n        Внутри себя должен вызывать запись в кэш и чтение из кэша.\n        \"\"\"\n        # cache key can`t contain spaces\n        cache_key = url.replace(' ', '')\n        # Получаем данные из кэша\n        cached_result = self.client.get(cache_key)\n        # Если данные есть - возвращаем\n        if cached_result:\n            return cached_result\n        # Если в кэше нет актуальных данных - получаем результат запроса\n        result_dict = await veil_api_client_request_cor(veil_api_client,\n                                                        method_name, url, headers,\n                                                        params, ssl, json_data,\n                                                        retry_opts, *args, **kwargs)\n        # Т.к. ответ преобразуется в VeilApiResponse после вызова этого метода в result_dict будет лежать ответ aiohttp\n        if isinstance(result_dict, dict) and result_dict.get('status_code', 0) in (200, 201, 202, 204):\n            try:\n                # пытаемся сохранить результат в кэш\n                await self.save_to_cache(cache_key, result_dict, ttl)\n            except Exception as ex_msg:\n                print('Failed to save response to cache: {}'.format(ex_msg))\n        # Возвращаем ответ aiohttp\n        return result_dict\n\n    async def save_to_cache(self, key, data, ttl: int):\n        \"\"\"Сохраняем результат в кэш.\"\"\"\n        return self.client.set(key, data, expire=ttl)\n\n\nclass UserRequestError(AssertionError):\n    pass\n\n\nclass UserDomain:\n\n    @staticmethod\n    async def get(id_):\n        return {'key': 'value {}'.format(id_)}\n\n\nclass UserVeilClient(VeilClient):\n    \"\"\"Переопределяем встроенный клиент.\"\"\"\n\n    async def api_request(self, *args, **kwargs):\n\n        response = await super().api_request(*args, **kwargs)\n        if not hasattr(response, 'status_code'):\n            raise ValueError('Response is broken. Check veil_api_client version.')\n\n        url = kwargs.get('url')\n        params = kwargs.get('params')\n        api_object = kwargs.get('api_object')\n\n        if hasattr(api_object, 'api_object_id') and api_object.api_object_id:\n            if response.status_code == 404 and isinstance(api_object, VeilDomainExt):\n                vm_object = await UserDomain.get(api_object.api_object_id)\n                print('vm object:', vm_object.items())\n\n        if not response.success:\n            error_description = 'url: {}\\nparams: {}\\nresponse:{}'.format(url, params, response.data)\n            raise UserRequestError(error_description)\n\n        return response\n\n\nclass UserVeilClientSingleton(VeilClientSingleton):\n    \"\"\"Переопределяем менеджер соединений.\"\"\"\n\n    __client_instances = dict()\n\n    def __init__(self) -> None:\n        \"\"\"Please see help(VeilClientSingleton) for more info.\"\"\"\n        self.__TIMEOUT = 10\n        self.__CACHE_OPTS = VeilCacheConfiguration(ttl=30, cache_client=UserCacheClient())\n        self.__RETRY_OPTS = VeilRetryConfiguration()\n\n    def add_client(self, server_address: str, token: str, retry_opts=None) -> 'VeilClient':\n        \"\"\"Пре конфигурированное подключение.\"\"\"\n\n        if server_address not in self.__client_instances:\n            instance = UserVeilClient(server_address=server_address,\n                                      token=token,\n                                      session_reopen=True,\n                                      timeout=self.__TIMEOUT,\n                                      ujson_=True,\n                                      cache_opts=self.__CACHE_OPTS,\n                                      retry_opts=self.__RETRY_OPTS)\n            self.__client_instances[server_address] = instance\n        return self.__client_instances[server_address]\n\n    @property\n    def instances(self) -> dict:\n        \"\"\"Show all instances of VeilClient.\"\"\"\n        return self.__client_instances\n\n\n# Конец переопределения и начало клиента\nasync def extra_main():\n    token = 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1LCJ1c2VybmFtZSI6ImRldnlhdGtpbl92ZGkiLCJleHAiOjE5MjY2Nzk4OTUsInNzbyI6ZmFsc2UsIm9yaWdfaWF0IjoxNjEyMTgzODk1fQ.UKf7Sr4JB6tQw8Ftn5Cex0ZO6Qg4uNG24827fohWVXM'\n    server = '192.168.11.102'\n\n    # Настраиваем клиент для будущего использования\n    # При проверке статуса проверяется именно тот статус, который пришел в ответе. Предположим мы хотим повторы для всех\n    # вм, что не удалось найти\n    veil_client = UserVeilClientSingleton()\n\n    # Добавляем подключение к первому контроллеру\n    session1 = veil_client.add_client(server, token)\n\n    # Получаем информацию о конкретной ВМ\n    veil_domain = session1.domain()\n    await veil_domain.list()\n\n    # Берем ответы из кеша\n    await veil_domain.list()\n    await veil_domain.list()\n    await veil_domain.list()\n    await veil_domain.list()\n\n    # Перед завершением приложения закрываем все используемые сессии\n    instances = veil_client.instances\n    for inst in instances:\n        await instances[inst].close()\n\n\nuvloop.install()\nloop = asyncio.get_event_loop()\nloop.run_until_complete(extra_main())\n\n```\n\n\n## Конфигурация\nЕсли вам потребовалось использовать сетевые запросы, то с большой долей вероятности Вы захотите использовать uvloop.\nПример установки можно посмотреть [тут](https://github.com/MagicStack/uvloop)\nБольшинство значений передаваемых по умолчанию являются оптимальными настройками VeiL VDI, однако может потребоваться их\nизменить, например, по умолчанию в библиотеке используется ujson, поэтому если Вы расширяете написанные методы, \nимейте в виду ограничения, которые он накладывает, либо переопределите опцию ujson_ на False.\n\n## Сущности, к которым предоставляется доступ и их методы\nЛюбой объект клиента имеет интерфейсы:\n* Кластер - VeilClient.cluster()\n* Контроллер - VeilClient.controller()\n* Пул данных - VeilClient.data_pool()\n* Домен (Виртуальная машина) - VeilClient.domain()\n* Нода (узел, сервер) - VeilClient.node()\n* Задача - VeilClient.task()\n* Виртуальный диск - VeilClient.vdisk()\n* Тэг - VeilClient.tag()\n* Библиотека - VeilClient.library()\n* Журнал - VeilClient.event()\n\nЕсли при инициализации сущности не был передан id сущности, то есть возможность работы только с обобщенными методами\nвроде list(). Если вы хотите иметь доступ к методам конкретной сущности — необходимо указать ее id.\n\n### Основные методы сущностей\n* list() - асинхронный метод для получения списка сущностей на VeiL, использует переопределяемый пагинатор. Если сущностей\nбольше 100 - вам необходимо самостоятельно настроить limit для пагинатора, иначе будет 100. \n* info() - получение информации о конкретной сущности. После вызова этого метода Вы можете использовать как атрибут *.value*\nтак и конкретные атрибуты у сущности, например domain.service\n* public_attrs - список всех публичных атрибутов. После получения info они будут обновлены.\n* uuid_ - конвертирует str с id в uuid.\n* creating - результат операция сравнения статуса сущности\n* active - результат операция сравнения статуса сущности\n* failed - результат операция сравнения статуса сущности\n* deleting - результат операция сравнения статуса сущности\n* service - результат операция сравнения статуса сущности\n* partial - результат операция сравнения статуса сущности\n\n### Параметры для подключения SPICE/VNC\nСущность **VeilDomainExt** обладает двумя интерфейсами для получения данных подключения к ВМ.\nРезультатом выполнения обоих методов будет инстанс *DomainRemoteConnectionConfiguration* со следующими атрибутами:\n* connection_url - \"сырой\" url, который вернул контроллер\n* connection_type - тип соединения (VNC/SPICE)\n* host - **host**-часть из аргументов запроса в **connection_url**\n* password - **password**-часть из аргументов запроса в **connection_url**\n* token - **token**-часть из аргументов запроса в **connection_url** (внутри **path**)\n\n#### SPICE\n```spice = await domain.spice_conn()```\n\n#### VNC\n```vnc = await domain.vnc_conn()```\n\n\n### Основные конфигурируемые параметры VeilClient:\n* server_address - адрес контроллера VeiL (без указания протокола, мы сами подставим https)\n* token - токен интеграции VeiL\n* session_reopen - автоматически открывать сессию aiohttp.ClientSession, если она закрыта.\n* timeout - aiohttp.ClientSession общий таймаут\n* extra_headers - дополнительные заголовки для сессии (расширяющие или переопределяющие стандартные заголовки)\n* extra_params - дополнительные параметры запроса для сессии (расширяющие или переопределяющие стандартные параметры)\n* ujson_ - использовать или нет ujson, или json, опции aiohttp.client. Если в запросах проблемы, попробуйте отключить\n\n### Конфигурируемые параметры VeilClientSingleton:\nМы намеренно сократили конфигурируемые параметры для данного класса, в целях облегчения и оптимизации запросов. Если\nвы хотите что-то расширить - сделайте собственный класс по аналогии либо запросите доработку через issue.\n\n* server_address - адрес контроллера VeiL (без указания протокола, мы сами подставим https)\n* token - токен интеграции VeiL\n* timeout - aiohttp.ClientSession общий таймаут\n* cache_opts - VeilCacheConfiguration\n* retry_opts - VeilRetryConfiguration\n\n### %Configuration\nДля дополнительной валидации (и из-за отсутствия дата классов) конфигурируемые параметры вынесены в отдельные \nклассы-потомки супер-класса VeilAbstractConfiguration. Ниже идет их перечисление.\n\n#### VeilCacheConfiguration\nВозможность передать пользовательский кэш.\n* cache_client: инстанс пользовательского кэш-клиента, который сохраняет и читает данные из кэша.\n* ttl: срок хранения данных в кэше. Если указать 0 - кэш не будет использоваться.\n\n#### VeilRetryConfiguration\nОпции для повторов запросов. Если указаны, клиент будет автоматически выполнять повтор по условиям описанным ниже.\n\n* num_of_attempts - количество повторов\n* timeout - время ожидания перед повтором (с экспоненциальным ростом)\n* max_timeout - максимальное время ожидания между попытками\n* timeout_increase_step - шаг увеличения времени ожидания\n* status_codes - статусы ответа запросов для повторов\n* exceptions - исключения ответа запросов для повторов\n\n#### VeilEntityConfiguration\nСтруктура VeiL ECP для доступа к сущностям.\n\n* entity_uuid - уникальный идентификатор сущности.\n* entity_class - тип сущности (пул данных, вм и т.п.)\n\n#### TagConfiguration\nУпрощенное описание сущности Tag на VeiL ECP.\n\n* verbose_name - не уникальная строка\n* colour - строка содержащая hex-представление цвета\n\n#### VeilRestPaginator\nУпрощенный интерфейс доступа к пагинатору VeiL ECP.\n\n* name - поле **name**\n* ordering - порядок сортировки\n* limit - ограничение на количество записей в выдаче\n* offset - смещение блоков выдачи\n\n#### DomainBackupConfiguration\nПараметры для создания бэкапа виртуальной машины на VeiL ECP.\n\n* backup - идентификатор предыдущего бэкапа.\n* datapool - идентификатор пула данных на котором будет выполнено хранение \n  (может быть указан только если не передан backup).\n* can_be_incremental - атрибут указывающий на возможность инкремента в будущем.\n* increment - инкриминировать последний созданных бэкап.\n* exclude_iso - исключить из бэкапа подключенные ISO-образы к виртуальной машины.\n\n#### DomainConfiguration\nУпрощенное описание параметров копирования виртуальной машины (domain) на VeiL ECP.\n*Используется как аргумент domain_configuration в методе **VeilDomainExt.create***\n\n* verbose_name - имя создаваемой ВМ.\n* resource_pool - пул ресурсов VeiL ECP для создания ВМ.\n* node - узел VeiL ECP для создания ВМ.\n* datapool - пул данных VeiL ECP для создания ВМ.\n* parent - шаблон VeiL ECP на основе которого необходимо выполнить копирование ВМ.\n* thin - новая ВМ будет являться тонким клоном ее родителя.\n* count - количество ВМ для создания\n\n#### DomainCloneConfiguration\nУпрощенное описание параметров клонирования виртуальной машины (domain) на VeiL ECP.\n*Используется как аргумент domain_configuration в методе **VeilDomainExt.clone***\n\n* verbose_name - имя создаваемой ВМ.\n* resource_pool - пул ресурсов VeiL ECP для создания ВМ.\n* node - узел VeiL ECP для создания ВМ.\n* datapool - пул данных VeiL ECP для создания ВМ.\n* snapshot - шаблон VeiL ECP на основе которого необходимо выполнить копирование ВМ.\n* count - количество ВМ для создания\n* start_on - включить создаваемые ВМ\n\n#### DomainUpdateConfiguration\nУпрощенное описание параметров редактирования виртуальной машины (domain) на VeiL ECP.\n\n*Используется как аргумент domain_update_configuration в методе **VeilDomainExt.update***\n\n* verbose_name - новое имя.\n* description - новое описание.\n* os_type - новый тип ОС.\n* os_version - новая версия ОС.\n* tablet - признак tablet.\n* start_on_boot - признак start_on_boot.\n* spice_stream - признак spice_stream.\n\n### Основные атрибуты сущностей\n* api_object_prefix - указывает к какой сущности мы будем обращаться на VeiL ECP\n* api_object_id - идентификатор сущности на VeiL ECP, обычно UUID4\n\n### Основные атрибуты ответа (VeilApiResponse)\n* data - стандартный атрибут aiohttp.client\n* status_code - стандартный атрибут aiohttp.client\n* headers - стандартный атрибут aiohttp.client\n* success - признак успешности запроса (статус коды 200, 201, 202, 204)\n* task - если запрос был поставлен в очередь на VeiL ECP тут будет сущность задачи, которую можно ожидать\n* response - список 1-М сущностей к которым происходило обращение\n* error_code - код ошибки на VeiL, если запрос успешен, код будет 0\n* error_detail - текстовое сопровождение ошибки на VeiL\n* paginator_count - count из ответа пагинатора, актуально для запросов вида list()\n* paginator_next - url следующей страницы с ответами пагинатора, актуально для запросов вида list()\n* paginator_previous - url предыдущей страницы с ответами пагинатора, актуально для запросов вида list()\n\n## Как принять участие в проекте\nФорк -> изменения в отдельной ветке -> запустите тесты и разместите PR/MR.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jsc-masshtab/veil-api-client",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "veil-api-client",
    "package_url": "https://pypi.org/project/veil-api-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/veil-api-client/",
    "project_urls": {
      "Homepage": "https://github.com/jsc-masshtab/veil-api-client"
    },
    "release_url": "https://pypi.org/project/veil-api-client/2.2.18/",
    "requires_dist": [
      "aiohttp (==3.6.*)",
      "ujson (==3.0.*)"
    ],
    "requires_python": ">=3.5",
    "summary": "VeiL ECP Api client",
    "version": "2.2.18",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14351405,
  "releases": {
    "2.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdaed4f4ddeac9ab5290b48bb1f64f8dee81dbc34b88ab9a6926f5a8f58eff8a",
          "md5": "070454745285b0b6a294e55db02b5e3b",
          "sha256": "9c292ee8032f4f744666ed8c5de789ed3cffb3c1f1ea7c561b5d9c66e581cd09"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "070454745285b0b6a294e55db02b5e3b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 49987,
        "upload_time": "2021-03-22T12:54:12",
        "upload_time_iso_8601": "2021-03-22T12:54:12.646575Z",
        "url": "https://files.pythonhosted.org/packages/bd/ae/d4f4ddeac9ab5290b48bb1f64f8dee81dbc34b88ab9a6926f5a8f58eff8a/veil_api_client-2.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4cfc01869ab3042eaa6208e579fb752c6ef098bf3b55fd2ed22d9fb484854ab",
          "md5": "02c02891425fce30f0aa6e641cc59b46",
          "sha256": "35c30a6d163d632242faba7b7643bf29e8dcf0124a14eea456f00987ea3a1fb2"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "02c02891425fce30f0aa6e641cc59b46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 53400,
        "upload_time": "2021-03-22T12:54:13",
        "upload_time_iso_8601": "2021-03-22T12:54:13.942886Z",
        "url": "https://files.pythonhosted.org/packages/d4/cf/c01869ab3042eaa6208e579fb752c6ef098bf3b55fd2ed22d9fb484854ab/veil-api-client-2.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e88e1eb539f95c3985f6ff98f406ddfe8086ed812428d2e6d22eb30b5f1c1af",
          "md5": "475d0c45dd979fdd205f47f19410ed86",
          "sha256": "e04fcb2fcbb542b30f91809be388a51df10e567e74986517635f3bf27e6c75f9"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "475d0c45dd979fdd205f47f19410ed86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 53921,
        "upload_time": "2021-04-28T11:48:17",
        "upload_time_iso_8601": "2021-04-28T11:48:17.117382Z",
        "url": "https://files.pythonhosted.org/packages/7e/88/e1eb539f95c3985f6ff98f406ddfe8086ed812428d2e6d22eb30b5f1c1af/veil_api_client-2.2.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8053f89ec13036511be3c4354ee28451b721c2ec13f0b72eb1c1219217663331",
          "md5": "d9b8d73abeac486fb981e0a5ba542ba1",
          "sha256": "0c50b6d3ec62387c9623f770e8e18990f89e2ebdc87de6006f9fab95778cff1f"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "d9b8d73abeac486fb981e0a5ba542ba1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 57458,
        "upload_time": "2021-04-28T11:48:18",
        "upload_time_iso_8601": "2021-04-28T11:48:18.266787Z",
        "url": "https://files.pythonhosted.org/packages/80/53/f89ec13036511be3c4354ee28451b721c2ec13f0b72eb1c1219217663331/veil-api-client-2.2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "479e146be835d12dbbef039355a02853f1d118f0079445139f11e6b57abcbcab",
          "md5": "95d06309edff699f4af7d94f9184fc6a",
          "sha256": "e92da3ed26eb1b6a5387a0dba0b2e235cb005e70698a38254a04675dd000de59"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95d06309edff699f4af7d94f9184fc6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 53923,
        "upload_time": "2021-04-30T14:03:53",
        "upload_time_iso_8601": "2021-04-30T14:03:53.210387Z",
        "url": "https://files.pythonhosted.org/packages/47/9e/146be835d12dbbef039355a02853f1d118f0079445139f11e6b57abcbcab/veil_api_client-2.2.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be0691b3cde00c3761c43879e1ba9270260adb6eedf08a3da0beccd4afa65cff",
          "md5": "b50ce7ddca95b71aedc837142df033e1",
          "sha256": "4f79c12eccfee87f84d3a2a549872d63b36015d3a4cf67f56f9729b2005a0fa5"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.11.tar.gz",
        "has_sig": false,
        "md5_digest": "b50ce7ddca95b71aedc837142df033e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 56022,
        "upload_time": "2021-04-30T14:03:54",
        "upload_time_iso_8601": "2021-04-30T14:03:54.743530Z",
        "url": "https://files.pythonhosted.org/packages/be/06/91b3cde00c3761c43879e1ba9270260adb6eedf08a3da0beccd4afa65cff/veil-api-client-2.2.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05e2bada9600faeabf59caea33d89259e3ba9d4489c5a44bff5609c92ef61445",
          "md5": "9c311ebb14db5d0f4d78787da7a98501",
          "sha256": "58936bf1c75ec686f1d9c5a82ebb7a3e9504c48390a84d3eb8296a19e506b045"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c311ebb14db5d0f4d78787da7a98501",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 54555,
        "upload_time": "2021-05-18T11:48:13",
        "upload_time_iso_8601": "2021-05-18T11:48:13.282464Z",
        "url": "https://files.pythonhosted.org/packages/05/e2/bada9600faeabf59caea33d89259e3ba9d4489c5a44bff5609c92ef61445/veil_api_client-2.2.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be3474706bd227c66cb66e08f52af110f1e5061cb10d556a47938a160a243a3a",
          "md5": "b379176851446cc70581ed702c6bcf31",
          "sha256": "59d71d37a1704c7f13f976f8960f0a8f46985a677796ad07e9c4a02de6b59425"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.12.tar.gz",
        "has_sig": false,
        "md5_digest": "b379176851446cc70581ed702c6bcf31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 58235,
        "upload_time": "2021-05-18T11:48:14",
        "upload_time_iso_8601": "2021-05-18T11:48:14.508776Z",
        "url": "https://files.pythonhosted.org/packages/be/34/74706bd227c66cb66e08f52af110f1e5061cb10d556a47938a160a243a3a/veil-api-client-2.2.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "163ffc67c8ea159be6fb890100763f34198928277886178880c560726818aee0",
          "md5": "bc0c45b896f9cdb01a71cbedfeee702c",
          "sha256": "79c7450897d3ac73a260c3b12aa206e67e8edef5c4eb043b6a04b7b4dc232975"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc0c45b896f9cdb01a71cbedfeee702c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 54672,
        "upload_time": "2021-05-21T10:08:19",
        "upload_time_iso_8601": "2021-05-21T10:08:19.085223Z",
        "url": "https://files.pythonhosted.org/packages/16/3f/fc67c8ea159be6fb890100763f34198928277886178880c560726818aee0/veil_api_client-2.2.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d825d74d9af296f156cf7da571a1dc45a3af72b26c25c736b0b155956e716b2",
          "md5": "2c6e3bc5986445fe93249a780e7250e6",
          "sha256": "548184d88bb36cec93b7dc710f769a065715894137be21f4fd387d264b71c06c"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.13.tar.gz",
        "has_sig": false,
        "md5_digest": "2c6e3bc5986445fe93249a780e7250e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 59120,
        "upload_time": "2021-05-21T10:08:20",
        "upload_time_iso_8601": "2021-05-21T10:08:20.484005Z",
        "url": "https://files.pythonhosted.org/packages/3d/82/5d74d9af296f156cf7da571a1dc45a3af72b26c25c736b0b155956e716b2/veil-api-client-2.2.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "193c202d61c8edc77b00b2a44755902587e235589a3209e70977d848e7eb4f33",
          "md5": "3e37147f65b2144b8049f21363536831",
          "sha256": "23ce8754864c9953d1bd2d843dfa6fb7b8d53a6719081efd340f5903eddee020"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e37147f65b2144b8049f21363536831",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 54733,
        "upload_time": "2021-06-02T12:37:20",
        "upload_time_iso_8601": "2021-06-02T12:37:20.227154Z",
        "url": "https://files.pythonhosted.org/packages/19/3c/202d61c8edc77b00b2a44755902587e235589a3209e70977d848e7eb4f33/veil_api_client-2.2.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a44536f25b9f6a98a4b9fd898ac6253a667204dc9f70f834a23de0e65e6bd5c2",
          "md5": "97e60ecda840b860014478852b611fbf",
          "sha256": "99d18eb6d2a9e844efe220b4a6b88a6e47660a6a9958a2772d0b90268f1b0cfa"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.14.tar.gz",
        "has_sig": false,
        "md5_digest": "97e60ecda840b860014478852b611fbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 59034,
        "upload_time": "2021-06-02T12:37:21",
        "upload_time_iso_8601": "2021-06-02T12:37:21.575192Z",
        "url": "https://files.pythonhosted.org/packages/a4/45/36f25b9f6a98a4b9fd898ac6253a667204dc9f70f834a23de0e65e6bd5c2/veil-api-client-2.2.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7785e6f39d9fb87d28cee6617b96fdc6eb15c4756701436e6f1171b9861d2c8b",
          "md5": "f702e37fc159c148061055942d29dfaf",
          "sha256": "e083348c0f3acb42a22105da04b99e2e60ed1234308f88e18abafb7479d6afac"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f702e37fc159c148061055942d29dfaf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 54941,
        "upload_time": "2021-10-18T08:47:30",
        "upload_time_iso_8601": "2021-10-18T08:47:30.659455Z",
        "url": "https://files.pythonhosted.org/packages/77/85/e6f39d9fb87d28cee6617b96fdc6eb15c4756701436e6f1171b9861d2c8b/veil_api_client-2.2.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a2eb714057387d3a3d24a653787cc607ab36d0bef583d9ebf46e934e1fc457c",
          "md5": "fba14dff7175c103c9f013d5802fc385",
          "sha256": "4984e67db215f0165b1f7bb7a525c9c85255d40407e9e67695c58cb8a9485b30"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.15.tar.gz",
        "has_sig": false,
        "md5_digest": "fba14dff7175c103c9f013d5802fc385",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 59662,
        "upload_time": "2021-10-18T08:47:32",
        "upload_time_iso_8601": "2021-10-18T08:47:32.010136Z",
        "url": "https://files.pythonhosted.org/packages/3a/2e/b714057387d3a3d24a653787cc607ab36d0bef583d9ebf46e934e1fc457c/veil-api-client-2.2.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bd20b050e7ebb849149e489d862b9d2843290d4d2344109848fd9c3248f1c7c",
          "md5": "05553627d056bc1a8c4c80cccfaa3c17",
          "sha256": "259de150b8a9351a3f575157873c100d9e0e74f26f8a165779f560b55b2e205a"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05553627d056bc1a8c4c80cccfaa3c17",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 55073,
        "upload_time": "2021-10-29T14:21:39",
        "upload_time_iso_8601": "2021-10-29T14:21:39.087474Z",
        "url": "https://files.pythonhosted.org/packages/8b/d2/0b050e7ebb849149e489d862b9d2843290d4d2344109848fd9c3248f1c7c/veil_api_client-2.2.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29fd6a76c2d428368f72c0f99826762abcc6d4c5e81fb9b3b0cec813c8c1c145",
          "md5": "af28dcdac96ebf579ffc26b1ed4038fa",
          "sha256": "41ea1bc904b871ee4937c5a59822e8f6449c9b68e3782ab31c68d47882d65e5b"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.16.tar.gz",
        "has_sig": false,
        "md5_digest": "af28dcdac96ebf579ffc26b1ed4038fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 59608,
        "upload_time": "2021-10-29T14:21:40",
        "upload_time_iso_8601": "2021-10-29T14:21:40.333891Z",
        "url": "https://files.pythonhosted.org/packages/29/fd/6a76c2d428368f72c0f99826762abcc6d4c5e81fb9b3b0cec813c8c1c145/veil-api-client-2.2.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bdee33cabbcf46f4a402e8b3d5f9eabe8d4c3ade3928fc3bcda2422447ca0ea",
          "md5": "c4f62ad85c71652333fca3274610d5bd",
          "sha256": "401d86e7f0cb2b36af6de40efafb881f736309667bb758cdfd0d732c9f57676a"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4f62ad85c71652333fca3274610d5bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 54896,
        "upload_time": "2022-02-07T13:11:42",
        "upload_time_iso_8601": "2022-02-07T13:11:42.357723Z",
        "url": "https://files.pythonhosted.org/packages/2b/de/e33cabbcf46f4a402e8b3d5f9eabe8d4c3ade3928fc3bcda2422447ca0ea/veil_api_client-2.2.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ae7656ac62643e3f14f50cdb7cdcb7d213908003e980b7579a5307dd86381d0",
          "md5": "955ac19cc5e04017dd18d6df3cda6118",
          "sha256": "17d3cfcbe3d67aeed328cb18d89d452fb6a83c7eecad8da4c95529c05f99b3a5"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.17.tar.gz",
        "has_sig": false,
        "md5_digest": "955ac19cc5e04017dd18d6df3cda6118",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 58127,
        "upload_time": "2022-02-07T13:11:43",
        "upload_time_iso_8601": "2022-02-07T13:11:43.735800Z",
        "url": "https://files.pythonhosted.org/packages/2a/e7/656ac62643e3f14f50cdb7cdcb7d213908003e980b7579a5307dd86381d0/veil-api-client-2.2.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d58595c500ba9e8eedf02e7e083a65de429d30feec4449eda813f85a1597297",
          "md5": "cb5679f524b0fc32d3a2be7f98d3dbc6",
          "sha256": "7dd660cad1727baac5ea988521314b54c43f853ebaf5847208d2786b89d37492"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb5679f524b0fc32d3a2be7f98d3dbc6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 54923,
        "upload_time": "2022-07-06T12:59:07",
        "upload_time_iso_8601": "2022-07-06T12:59:07.091947Z",
        "url": "https://files.pythonhosted.org/packages/3d/58/595c500ba9e8eedf02e7e083a65de429d30feec4449eda813f85a1597297/veil_api_client-2.2.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "047cbb451ea0964158378968b0dffa424548d0a8def9b8ffc88eb4846baa7075",
          "md5": "466652a81b28d6f380f3b21c7967cee4",
          "sha256": "33c7bd5dea6a436ae46b7520919cee9b71803f7e444d6a6235514ae92765838f"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.18.tar.gz",
        "has_sig": false,
        "md5_digest": "466652a81b28d6f380f3b21c7967cee4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 59696,
        "upload_time": "2022-07-06T12:59:09",
        "upload_time_iso_8601": "2022-07-06T12:59:09.332560Z",
        "url": "https://files.pythonhosted.org/packages/04/7c/bb451ea0964158378968b0dffa424548d0a8def9b8ffc88eb4846baa7075/veil-api-client-2.2.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78f4395eee038022c7abb6f341ac20e779e1987d1a13e33b438940171c077d96",
          "md5": "45eff44699683c9ddb951667739d0786",
          "sha256": "c39c664a99a241c62a4c0404a1d22513e163c4ac5bad0f5227d6573c38b604a2"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45eff44699683c9ddb951667739d0786",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 49985,
        "upload_time": "2021-03-22T13:50:42",
        "upload_time_iso_8601": "2021-03-22T13:50:42.030981Z",
        "url": "https://files.pythonhosted.org/packages/78/f4/395eee038022c7abb6f341ac20e779e1987d1a13e33b438940171c077d96/veil_api_client-2.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9eca97cc59b5ca830a838a5e254417004e77e8c5613d1255d15743468203bd6a",
          "md5": "50ec85578c8092b0c8d890e2c3ec1825",
          "sha256": "3c0c5ad0245f6e23937397085469ed661c3fb242b0a2022d90ecac2ab160ee0a"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "50ec85578c8092b0c8d890e2c3ec1825",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 48019,
        "upload_time": "2021-03-22T13:50:43",
        "upload_time_iso_8601": "2021-03-22T13:50:43.320281Z",
        "url": "https://files.pythonhosted.org/packages/9e/ca/97cc59b5ca830a838a5e254417004e77e8c5613d1255d15743468203bd6a/veil-api-client-2.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6899f1b74001cafc40618ea4a7b7f078c16e643f2627153aca1dc9b480ff8889",
          "md5": "844f32bbdb48a584f1d7b2eae22c1870",
          "sha256": "c99cc90141492a707ed4e4188b25d97feffe31e7db34a8785a6d14b3d4759b73"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "844f32bbdb48a584f1d7b2eae22c1870",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 50941,
        "upload_time": "2021-03-30T10:32:04",
        "upload_time_iso_8601": "2021-03-30T10:32:04.904975Z",
        "url": "https://files.pythonhosted.org/packages/68/99/f1b74001cafc40618ea4a7b7f078c16e643f2627153aca1dc9b480ff8889/veil_api_client-2.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd1347c3921fde39d058a6b0307ce548e469a732461c1b3a5c1ee28e57bca3f0",
          "md5": "902907c5ad8aeb0d538929530194598d",
          "sha256": "4f27d84c44ead398c5997188fd2a63356b8b5cde5c9d7b1fd11d9ca6f6284444"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "902907c5ad8aeb0d538929530194598d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 46296,
        "upload_time": "2021-03-30T10:32:06",
        "upload_time_iso_8601": "2021-03-30T10:32:06.106242Z",
        "url": "https://files.pythonhosted.org/packages/cd/13/47c3921fde39d058a6b0307ce548e469a732461c1b3a5c1ee28e57bca3f0/veil-api-client-2.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4467d338e51e1cc358d6e12fd2f1c88d1739fb573f4ba29001627bab7d169e07",
          "md5": "babade22ef399ec8d8cb29370773c506",
          "sha256": "5f951c3f0fb54528f4b8fe547879522a9a31613eefb337785aa591c4e2129540"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "babade22ef399ec8d8cb29370773c506",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 51184,
        "upload_time": "2021-03-31T10:19:00",
        "upload_time_iso_8601": "2021-03-31T10:19:00.241133Z",
        "url": "https://files.pythonhosted.org/packages/44/67/d338e51e1cc358d6e12fd2f1c88d1739fb573f4ba29001627bab7d169e07/veil_api_client-2.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58a6b809d54a923fa7672a80eec837c969864a4154e0654d3783ffd58fb50751",
          "md5": "6cf5c37e9dac37f0db65f81c7f55cde7",
          "sha256": "6f6e1dcdb04e29c030885fd21d13fd00439d6003b107cc633c11c578b4a5f6e5"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6cf5c37e9dac37f0db65f81c7f55cde7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 52134,
        "upload_time": "2021-03-31T10:19:01",
        "upload_time_iso_8601": "2021-03-31T10:19:01.640836Z",
        "url": "https://files.pythonhosted.org/packages/58/a6/b809d54a923fa7672a80eec837c969864a4154e0654d3783ffd58fb50751/veil-api-client-2.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d06566d8ce1c2aed254c339621835c9be55ff9d8a47a9c2c497ebf3e31a72334",
          "md5": "d0b6bfa1f736c055fef9b34c130c16e4",
          "sha256": "14e9101975c211665ce5aa4efc72bc6df79ba5ee4cb55c54da89ade940cca73f"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0b6bfa1f736c055fef9b34c130c16e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 51289,
        "upload_time": "2021-04-02T13:54:14",
        "upload_time_iso_8601": "2021-04-02T13:54:14.345553Z",
        "url": "https://files.pythonhosted.org/packages/d0/65/66d8ce1c2aed254c339621835c9be55ff9d8a47a9c2c497ebf3e31a72334/veil_api_client-2.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "088500b8966a5a7f829b061c8d6228310ce5f5683c3d2d94e9c0846ffc7a825a",
          "md5": "8641d2c923e296ec7d01fc89460d631d",
          "sha256": "26be4c1d357c785988bb54c8228742208530c08603aef2d7639f20ef6816de99"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8641d2c923e296ec7d01fc89460d631d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 49730,
        "upload_time": "2021-04-02T13:54:15",
        "upload_time_iso_8601": "2021-04-02T13:54:15.760514Z",
        "url": "https://files.pythonhosted.org/packages/08/85/00b8966a5a7f829b061c8d6228310ce5f5683c3d2d94e9c0846ffc7a825a/veil-api-client-2.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9669c728ff1f9e555bcdd38e0ab99cf715c97c7b4a71c8b0b7043a5be79c45f5",
          "md5": "0bf01cd58a470e89dd2f44f4bee6b483",
          "sha256": "7e239a277c4a4b449dda04edaedff9f5dd4d9d98b712e25929f779f0f0f1da69"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0bf01cd58a470e89dd2f44f4bee6b483",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 53249,
        "upload_time": "2021-04-20T15:12:17",
        "upload_time_iso_8601": "2021-04-20T15:12:17.962013Z",
        "url": "https://files.pythonhosted.org/packages/96/69/c728ff1f9e555bcdd38e0ab99cf715c97c7b4a71c8b0b7043a5be79c45f5/veil_api_client-2.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79828b97c75eece022a356835fab8a0528fead2443b07543544db02ad51d63b8",
          "md5": "51990a84d509b6cfff047e7f7e03b41f",
          "sha256": "49d73f53422cd7de11d3624568e5ca8a714b9d550488fe33a91bafe8e7d71383"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "51990a84d509b6cfff047e7f7e03b41f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 53823,
        "upload_time": "2021-04-20T15:12:19",
        "upload_time_iso_8601": "2021-04-20T15:12:19.394786Z",
        "url": "https://files.pythonhosted.org/packages/79/82/8b97c75eece022a356835fab8a0528fead2443b07543544db02ad51d63b8/veil-api-client-2.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd6c375c240cfea99c2411a7bc18579fece6357331bdfb74338fd68bf26157a9",
          "md5": "8b80270d154392175a8334e63dbbc606",
          "sha256": "16c46c5ea0716290cd284fbbf12094e6be43d1361d4573c1c6a5317e70ee2649"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b80270d154392175a8334e63dbbc606",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 53386,
        "upload_time": "2021-04-21T12:43:23",
        "upload_time_iso_8601": "2021-04-21T12:43:23.470232Z",
        "url": "https://files.pythonhosted.org/packages/dd/6c/375c240cfea99c2411a7bc18579fece6357331bdfb74338fd68bf26157a9/veil_api_client-2.2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22373edfba4c256911850a994529d22d6c585e5cba6c5341d661e5b7a1b0839d",
          "md5": "0c3b12feedb8a77b499c14f7b63e427c",
          "sha256": "e7f81acf7893810c9b9e96f1d01db804572a159abe81eb396d45e9261db66c77"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "0c3b12feedb8a77b499c14f7b63e427c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 53570,
        "upload_time": "2021-04-21T12:43:25",
        "upload_time_iso_8601": "2021-04-21T12:43:25.486788Z",
        "url": "https://files.pythonhosted.org/packages/22/37/3edfba4c256911850a994529d22d6c585e5cba6c5341d661e5b7a1b0839d/veil-api-client-2.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "523d4b127430c4f03d4b911286981240e5e02f024bf2e9a0556370123c2fa4d2",
          "md5": "f2a59b02e17c5b2dd28bcb130d956d88",
          "sha256": "ab9cb98820fbb9c1c0e689ffb6bf7de7898d66ab5d4a201826464b5c2d2b65d6"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2a59b02e17c5b2dd28bcb130d956d88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 53803,
        "upload_time": "2021-04-22T13:25:42",
        "upload_time_iso_8601": "2021-04-22T13:25:42.263303Z",
        "url": "https://files.pythonhosted.org/packages/52/3d/4b127430c4f03d4b911286981240e5e02f024bf2e9a0556370123c2fa4d2/veil_api_client-2.2.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0657a9bbe594b872770ea6fe7b2463e9ee2f0010dd406fdd6de6d34f7707c596",
          "md5": "447aa50caed638fcd6d49d4b65f87e31",
          "sha256": "195978c058bb402e0d3cf07f0798cb8c527879cffe9856f5df67367a5c9f0d64"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "447aa50caed638fcd6d49d4b65f87e31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 57216,
        "upload_time": "2021-04-22T13:25:43",
        "upload_time_iso_8601": "2021-04-22T13:25:43.773191Z",
        "url": "https://files.pythonhosted.org/packages/06/57/a9bbe594b872770ea6fe7b2463e9ee2f0010dd406fdd6de6d34f7707c596/veil-api-client-2.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e40721c863e8f107248564979684bbb8e3992b10145b63db92c4cca978f21695",
          "md5": "a277dc23f9d40ea8a671fbd43125c36e",
          "sha256": "6c2473ec18817c0455fe9fdb4360560a2ad1ec5aef5705840ca988b3f012fff8"
        },
        "downloads": -1,
        "filename": "veil_api_client-2.2.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a277dc23f9d40ea8a671fbd43125c36e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 53845,
        "upload_time": "2021-04-23T14:32:03",
        "upload_time_iso_8601": "2021-04-23T14:32:03.999013Z",
        "url": "https://files.pythonhosted.org/packages/e4/07/21c863e8f107248564979684bbb8e3992b10145b63db92c4cca978f21695/veil_api_client-2.2.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f72718245900663cdb5280cb04bc6d6eef7c753607aa0f3d69f7eefca30371be",
          "md5": "f9394430f78539e0ea5f84bceab2da01",
          "sha256": "738c8afc4fd5877c02da551c1fb091f4fbc38de85363d0f37850c652a9ce1ba9"
        },
        "downloads": -1,
        "filename": "veil-api-client-2.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "f9394430f78539e0ea5f84bceab2da01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 56162,
        "upload_time": "2021-04-23T14:32:05",
        "upload_time_iso_8601": "2021-04-23T14:32:05.190787Z",
        "url": "https://files.pythonhosted.org/packages/f7/27/18245900663cdb5280cb04bc6d6eef7c753607aa0f3d69f7eefca30371be/veil-api-client-2.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d58595c500ba9e8eedf02e7e083a65de429d30feec4449eda813f85a1597297",
        "md5": "cb5679f524b0fc32d3a2be7f98d3dbc6",
        "sha256": "7dd660cad1727baac5ea988521314b54c43f853ebaf5847208d2786b89d37492"
      },
      "downloads": -1,
      "filename": "veil_api_client-2.2.18-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cb5679f524b0fc32d3a2be7f98d3dbc6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 54923,
      "upload_time": "2022-07-06T12:59:07",
      "upload_time_iso_8601": "2022-07-06T12:59:07.091947Z",
      "url": "https://files.pythonhosted.org/packages/3d/58/595c500ba9e8eedf02e7e083a65de429d30feec4449eda813f85a1597297/veil_api_client-2.2.18-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "047cbb451ea0964158378968b0dffa424548d0a8def9b8ffc88eb4846baa7075",
        "md5": "466652a81b28d6f380f3b21c7967cee4",
        "sha256": "33c7bd5dea6a436ae46b7520919cee9b71803f7e444d6a6235514ae92765838f"
      },
      "downloads": -1,
      "filename": "veil-api-client-2.2.18.tar.gz",
      "has_sig": false,
      "md5_digest": "466652a81b28d6f380f3b21c7967cee4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 59696,
      "upload_time": "2022-07-06T12:59:09",
      "upload_time_iso_8601": "2022-07-06T12:59:09.332560Z",
      "url": "https://files.pythonhosted.org/packages/04/7c/bb451ea0964158378968b0dffa424548d0a8def9b8ffc88eb4846baa7075/veil-api-client-2.2.18.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}