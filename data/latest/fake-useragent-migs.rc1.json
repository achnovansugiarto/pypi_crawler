{
  "info": {
    "author": "michael.h.s.ball@gmail.com",
    "author_email": "michael.h.s.ball@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "fake-useragent\n==============\n\n:info: Up to date simple useragent faker with real world database\n\n.. image:: https://img.shields.io/travis/hellysmile/fake-useragent.svg\n    :target: https://travis-ci.org/hellysmile/fake-useragent\n\n.. image:: https://codecov.io/gh/hellysmile/fake-useragent/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/hellysmile/fake-useragent\n\n.. image:: https://landscape.io/github/hellysmile/fake-useragent/master/landscape.svg?style=flat\n    :target: https://landscape.io/github/hellysmile/fake-useragent/master\n\n.. image:: https://img.shields.io/pypi/v/fake-useragent.svg\n    :target: https://pypi.python.org/pypi/fake-useragent\n\nFeatures\n********\n\n* grabs up to date ``useragent`` from `useragentstring.com <http://useragentstring.com/>`_\n* randomize with real world statistic via `w3schools.com <https://www.w3schools.com/browsers/browsers_stats.asp>`_\n\nInstallation\n------------\n\n.. code-block:: shell\n\n    pip install fake-useragent\n\nUsage\n-----\n\n.. code-block:: python\n\n    from fake_useragent import UserAgent\n    ua = UserAgent()\n\n    ua.ie\n    # Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US);\n    ua.msie\n    # Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)'\n    ua['Internet Explorer']\n    # Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 3.3.69573; WOW64; en-US)\n    ua.opera\n    # Opera/9.80 (X11; Linux i686; U; ru) Presto/2.8.131 Version/11.11\n    ua.chrome\n    # Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.2 (KHTML, like Gecko) Chrome/22.0.1216.0 Safari/537.2'\n    ua.google\n    # Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.13 (KHTML, like Gecko) Chrome/24.0.1290.1 Safari/537.13\n    ua['google chrome']\n    # Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11\n    ua.firefox\n    # Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/16.0.1\n    ua.ff\n    # Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1\n    ua.safari\n    # Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25\n\n    # and the best one, random via real world browser usage statistic\n    ua.random\n\nNotes\n-----\n\n``fake-useragent`` store collected data at your os temp dir, like ``/tmp``\n\nIf You want to update saved database just:\n\n.. code-block:: python\n\n    from fake_useragent import UserAgent\n    ua = UserAgent()\n    ua.update()\n\nIf You don't want cache database or no writable file system:\n\n.. code-block:: python\n\n    from fake_useragent import UserAgent\n    ua = UserAgent(cache=False)\n\nSometimes, `useragentstring.com <http://useragentstring.com/>`_ or `w3schools.com <https://www.w3schools.com/browsers/browsers_stats.asp>`_ changes their html, or down, in such case\n``fake-useragent`` uses `heroku <https://fake-useragent.herokuapp.com/browsers/0.1.8>`_ fallback\n\nIf You don't want to use hosted cache server (version 0.1.5 added)\n\n.. code-block:: python\n\n    from fake_useragent import UserAgent\n    ua = UserAgent(use_cache_server=False)\n\nIn very rare case, if hosted cache server and sources will be\nunavailable ``fake-useragent`` wont be able to download data: (version 0.1.3 added)\n\n.. code-block:: python\n\n    from fake_useragent import UserAgent\n    ua = UserAgent()\n\n    # Traceback (most recent call last):\n    #   ...\n    # fake_useragent.errors.FakeUserAgentError\n\n    # You can catch it via\n\n    from fake_useragent import FakeUserAgentError\n\n    try:\n        ua = UserAgent()\n    except FakeUserAgentError:\n        pass\n\nIf You will try to get unknown browser: (version 0.1.3 changed)\n\n.. code-block:: python\n\n    from fake_useragent import UserAgent\n    ua = UserAgent()\n    ua.best_browser\n    # Traceback (most recent call last):\n    #   ...\n    # fake_useragent.errors.FakeUserAgentError\n\nYou can completely disable ANY annoying exception with adding ``fallback``: (version 0.1.4 added)\n\n.. code-block:: python\n\n    import fake_useragent\n\n    ua = fake_useragent.UserAgent(fallback='Your favorite Browser')\n    # in case if something went wrong, one more time it is REALLY!!! rare case\n    ua.random == 'Your favorite Browser'\n\nWant to control location of data file? (version 0.1.4 added)\n\n.. code-block:: python\n\n    import fake_useragent\n\n    # I am STRONGLY!!! recommend to use version suffix\n    location = '/home/user/fake_useragent%s.json' % fake_useragent.VERSION\n\n    ua = fake_useragent.UserAgent(path=location)\n    ua.random\n\nIf you need to safe some attributes from overriding them in UserAgent by ``__getattr__`` method\nuse ``safe_attrs`` you can pass there attributes names.\nAt least this will prevent you from raising FakeUserAgentError when attribute not found.\n\nFor example, when using fake_useragent with `injections <https://github.com/tailhook/injections>`_ you need to:\n\n.. code-block:: python\n\n    import fake_useragent\n\n    ua = fake_useragent.UserAgent(safe_attrs=('__injections__',))\n\nPlease, do not use if you don't understand why you need this.\nThis is magic for rarely extreme case.\n\nExperiencing issues???\n----------------------\n\nMake sure that You using latest version!!!\n\n.. code-block:: shell\n\n    pip install -U fake-useragent\n\nCheck version via python console: (version 0.1.4 added)\n\n.. code-block:: python\n\n    import fake_useragent\n\n    print(fake_useragent.VERSION)\n\nAnd You are always welcome to post `issues <https://github.com/hellysmile/fake-useragent/issues>`_\n\nPlease do not forget mention version that You are using\n\nTests\n-----\n\n.. code-block:: console\n\n    pip install tox\n    tox\n\nChangelog\n---------\n\n* 0.1.11 October 4, 2018\n    - moved `s3 + cloudfront` fallback to `heroku.com`, cuz someone from Florida did ~25M requests last month\n\n* 0.1.10 February 11, 2018\n    - Minor fix docs `cloudfront` url\n\n* 0.1.9 February 11, 2018\n    - fix ``w3schools.com`` renamed `IE/Edge` to `Edge/IE`\n    - moved `heroku.com` fallback to `s3 + cloudfront`\n    - stop testing Python3.3 and pypy\n\n* 0.1.8 November 2, 2017\n    - fix ``useragentstring.com`` ``Can't connect to local MySQL server through socket``\n\n* 0.1.7 April 2, 2017\n    - fix broken README.rst\n\n* 0.1.6 April 2, 2017\n    - fixes bug ``use_cache_server`` do not affected anything\n    - `w3schools.com <https://www.w3schools.com/browsers/browsers_stats.asp>`_ moved to ``https``\n    - ``verify_ssl`` options added, by default it is ``True`` (``urllib.urlopen`` ssl context for Python 2.7.9- and 3.4.3- is not supported)\n\n* 0.1.5 February 28, 2017\n    - added ``ua.edge`` alias to Internet Explorer\n    - w3schools.com starts displaying ``Edge`` statistic\n    - Python 2.6 is not tested anymore\n    - ``use_cache_server`` option added\n    - Increased ``fake_useragent.settings.HTTP_TIMEOUT`` to 5 seconds\n\n* 0.1.4 December 14, 2016\n    - Added custom data file location support\n    - Added ``fallback`` browser support, in case of unavailable data sources\n    - Added alias ``fake_useragent.FakeUserAgent`` for ``fake_useragent.UserAgent``\n    - Added alias ``fake_useragent.UserAgentError`` for ``fake_useragent.FakeUserAgentError``\n    - Reduced ``fake_useragent.settings.HTTP_TIMEOUT`` to 3 seconds\n    - Started migration to new data file format\n    - Simplified a lot 4+ years out of date code\n    - Better thread/greenlet safety\n    - Added verbose logging\n    - Added ``safe_attrs`` for prevent overriding by ``__getattr__``\n\n* 0.1.3 November 24, 2016\n    - Added hosted data file, when remote services is unavailable\n    - Raises ``fake_useragent.errors.FakeUserAgentError`` in case when there is not way to download data\n    - Raises ``fake_useragent.errors.FakeUserAgentError`` instead of ``None`` in case of unknown browser\n    - Added ``gevent.sleep`` support in ``gevent`` patched environment when trying to download data\n\n* X.X.X xxxxxxx xx, xxxx\n    - xxxxx ?????\n\nAuthors\n-------\n\nYou can visit `authors page <https://github.com/hellysmile/fake-useragent/blob/master/AUTHORS>`_\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/michaelhball/fake-useragent",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fake-useragent-migs",
    "package_url": "https://pypi.org/project/fake-useragent-migs/",
    "platform": "",
    "project_url": "https://pypi.org/project/fake-useragent-migs/",
    "project_urls": {
      "Homepage": "https://github.com/michaelhball/fake-useragent"
    },
    "release_url": "https://pypi.org/project/fake-useragent-migs/0.1.11/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Up to date simple useragent faker with real world database",
    "version": "0.1.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12937470,
  "releases": {
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "832afcf857d3b9cff7c9b5d66a7160f325e3616cb82caaabcc2515fc8f46172c",
          "md5": "d2362dab09204b678594e08b6ef00e29",
          "sha256": "6d8b832ab74621d4b38ede3d7c92eebe079381f31077fac0895ccb744970ffcc"
        },
        "downloads": -1,
        "filename": "fake_useragent_migs-0.1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2362dab09204b678594e08b6ef00e29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14142,
        "upload_time": "2022-02-18T18:56:50",
        "upload_time_iso_8601": "2022-02-18T18:56:50.105226Z",
        "url": "https://files.pythonhosted.org/packages/83/2a/fcf857d3b9cff7c9b5d66a7160f325e3616cb82caaabcc2515fc8f46172c/fake_useragent_migs-0.1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1664aeee36361c9c077c4644fbfed32646e75d2feb10b05f8708f4924ba06082",
          "md5": "1e1bd04921d5f3114685cf65de136f07",
          "sha256": "39319e28bacedfecd380f81cb91d3b166693bd3a0d19f1c530fd58e400df6d59"
        },
        "downloads": -1,
        "filename": "fake-useragent-migs-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "1e1bd04921d5f3114685cf65de136f07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19145,
        "upload_time": "2022-02-18T18:56:52",
        "upload_time_iso_8601": "2022-02-18T18:56:52.452142Z",
        "url": "https://files.pythonhosted.org/packages/16/64/aeee36361c9c077c4644fbfed32646e75d2feb10b05f8708f4924ba06082/fake-useragent-migs-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "832afcf857d3b9cff7c9b5d66a7160f325e3616cb82caaabcc2515fc8f46172c",
        "md5": "d2362dab09204b678594e08b6ef00e29",
        "sha256": "6d8b832ab74621d4b38ede3d7c92eebe079381f31077fac0895ccb744970ffcc"
      },
      "downloads": -1,
      "filename": "fake_useragent_migs-0.1.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d2362dab09204b678594e08b6ef00e29",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14142,
      "upload_time": "2022-02-18T18:56:50",
      "upload_time_iso_8601": "2022-02-18T18:56:50.105226Z",
      "url": "https://files.pythonhosted.org/packages/83/2a/fcf857d3b9cff7c9b5d66a7160f325e3616cb82caaabcc2515fc8f46172c/fake_useragent_migs-0.1.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1664aeee36361c9c077c4644fbfed32646e75d2feb10b05f8708f4924ba06082",
        "md5": "1e1bd04921d5f3114685cf65de136f07",
        "sha256": "39319e28bacedfecd380f81cb91d3b166693bd3a0d19f1c530fd58e400df6d59"
      },
      "downloads": -1,
      "filename": "fake-useragent-migs-0.1.11.tar.gz",
      "has_sig": false,
      "md5_digest": "1e1bd04921d5f3114685cf65de136f07",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19145,
      "upload_time": "2022-02-18T18:56:52",
      "upload_time_iso_8601": "2022-02-18T18:56:52.452142Z",
      "url": "https://files.pythonhosted.org/packages/16/64/aeee36361c9c077c4644fbfed32646e75d2feb10b05f8708f4924ba06082/fake-useragent-migs-0.1.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}