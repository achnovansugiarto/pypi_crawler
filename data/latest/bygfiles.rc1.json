{
  "info": {
    "author": "Jeremie Pardou",
    "author_email": "jpardou@makina-corpus.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "=======\npyfiles\n=======\n\n\n.. image:: https://img.shields.io/pypi/v/pyfiles.svg\n        :target: https://pypi.python.org/pypi/pyfiles\n\n.. image:: https://img.shields.io/travis/jrmi/pyfiles.svg\n        :target: https://travis-ci.org/jrmi/pyfiles\n\n.. image:: https://readthedocs.org/projects/pyfiles/badge/?version=latest\n        :target: https://pyfiles.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\n.. image:: https://pyup.io/repos/github/jrmi/pyfiles/shield.svg\n     :target: https://pyup.io/repos/github/jrmi/pyfiles/\n     :alt: Updates\n\n\n\nA Big file collection manager.\n\nInstall\n-------\n\nIn a virtual env:\n\n\n.. code-block:: sh\n\n    python3 -m venv .venv\n    source .venv/bin/activate\n    pip install -U pip wheel\n    pip install git+git://github.com/jrmi/pyfiles@master # Or any last commit\n    # Then create your setup.py file before using CLI\n\nCLI\n---\n\nCreate a `settings.py` files where you want to execute the cli with\nthis configuration for file storage:\n\n.. code-block:: python\n\n    BACKEND = \"pyfiles.storages.diskstorage.DiskStorage\"\n\n    BACKEND_OPTIONS = {\n        \"basepath\": \"/tmp/tmpdir\",\n        \"base_url\": \"http://localhost:8000\"\n    }\n\nAnd for S3:\n\n.. code-block:: python\n\n    BACKEND = \"pyfiles.storages.s3storage.S3Storage\"\n\n    BACKEND_OPTIONS = {\n        \"access_key\":\"<you-S3-access-key>\",\n        \"secret_key\":\"<you-S3-secret-key>\",\n        \"endpoint_url\":\"<S3-api-endpoint>\",\n        \"region_name\":\"<region>\",\n        \"bucket_name\":\"<bucket name>\",\n\n    }\n\nThen to store a file:\n\n.. code-block:: sh\n\n    $ pyfiles store <file path> <file.namespace> <file.name> <version>\n\n`version` should respect the format: YYYY.MM.DD-Rev\nor any `semver <https://semver.org/>`_ like X.Y.Z\n\nTo list all version of a file:\n\n.. code-block:: sh\n\n    $ pyfiles versions <file.namespace> <file.name>\n\nTo search for a file:\n\n.. code-block:: sh\n\n    $ pyfiles search <file.namespace> <file.name> [<version-prefix>]\n\n`version-prefix` can be YYYY or X or YYYY.MM or X.Y or YYYY.MM.DD or X.Y.Z or Latest. Latest by default if missing.\n\nFinnaly to delete a file:\n\n.. code-block:: sh\n\n    $ pyfiles delete <file.namespace> <file.name> <version>\n\nTo start the web api server:\n\n.. code-block:: sh\n\n    $ pyfiles serve\n\n\nWeb API\n-------\n\n    **GET** on `/search/<namespace>/<filename>[?version=<version>]`\n\nTo get file version download link. `Namespace` is a namespace to organise data and `filename` is the file name.\nYou can optionnaly add a version like `latest` or `<year>` or `<year.month>` or `<major>` or `<major>.<minor>`, ...\nYou get the latest for the specified version.\n\n    **GET** on `/versions/<namespace>/<filename>`\n\nTo show all avaible file versions.\n\nPython API\n----------\n\nSee pyfiles.storage classes for more informations.\n\nYou can use `pyfiles.storage.get_storage(<backend path>, <options>)` to initialize\nyour storage.\n\nFeatures\n--------\n\n* An API to download files with rich version selection\n* List all version of a file\n* Can be used for CSV or Geojson files\n* File can have version like 2018.01.10-01\n* Find file by a part of the version. `2018` or `2018.01`\n\nRoadmap\n-------\n\n* Allow authentification with private data\n* Handle file diff between versions\n* Get the update date of a file to ease caching\n* Add a client library and CLI\n\nLicense\n-------\n\n* Free software: MIT license\n* Documentation: https://pyfiles.readthedocs.io.\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n0.1.1 (2020-12-17)\n------------------\n\n* First release on PyPI.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jrmi/pyfiles",
    "keywords": "store storage api cli big files",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bygfiles",
    "package_url": "https://pypi.org/project/bygfiles/",
    "platform": "",
    "project_url": "https://pypi.org/project/bygfiles/",
    "project_urls": {
      "Homepage": "https://github.com/jrmi/pyfiles"
    },
    "release_url": "https://pypi.org/project/bygfiles/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Big file collection manager",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8922407,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d5961f44e6df31f4b7c5a889abd11a2da2cfc5213efccc6d337687831499ee0",
          "md5": "4c2a25e8a7efb6f9e46ea98c4b191204",
          "sha256": "fa48153a2451e4f066e75ccb1f925becdd27a9042fe807ce0414ade9ee4b0393"
        },
        "downloads": -1,
        "filename": "bygfiles-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4c2a25e8a7efb6f9e46ea98c4b191204",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20750,
        "upload_time": "2020-12-17T10:04:40",
        "upload_time_iso_8601": "2020-12-17T10:04:40.037093Z",
        "url": "https://files.pythonhosted.org/packages/3d/59/61f44e6df31f4b7c5a889abd11a2da2cfc5213efccc6d337687831499ee0/bygfiles-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d5961f44e6df31f4b7c5a889abd11a2da2cfc5213efccc6d337687831499ee0",
        "md5": "4c2a25e8a7efb6f9e46ea98c4b191204",
        "sha256": "fa48153a2451e4f066e75ccb1f925becdd27a9042fe807ce0414ade9ee4b0393"
      },
      "downloads": -1,
      "filename": "bygfiles-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4c2a25e8a7efb6f9e46ea98c4b191204",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20750,
      "upload_time": "2020-12-17T10:04:40",
      "upload_time_iso_8601": "2020-12-17T10:04:40.037093Z",
      "url": "https://files.pythonhosted.org/packages/3d/59/61f44e6df31f4b7c5a889abd11a2da2cfc5213efccc6d337687831499ee0/bygfiles-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}