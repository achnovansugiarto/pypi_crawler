{
  "info": {
    "author": "Hewlett Packard Enterprise Development LP",
    "author_email": "cray-oss@hpe.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# K8S-liveness Python Library\n\nThis is the K8s-liveness project; it contains a basic library for creating and referncing timestamps in order to determine if a piece of code is running or not, from a k8s perspective.\n\nThe base class, Timestamp, is intended to be inherited. Each project implementation must specify its own maximum_age attribute within the defined subclass.\n\n## Usage\n\nThis entrypoint is used to determine if this service is still active/alive from a kubernetes liveness probe perspective.\n\nThis service is deemed to be 'alive' and healthy if the main loop has executed relatively recently. The period of time for how frequently the agent checks for operational work is defined as a function of event frequency from kubernetes, so this liveness probe needs a larger than normal window to account for periods of time without a recent liveness cycle.\n\n## Example\n\nSee the example in [main](src/liveness/__main__.py)\n\nThis main routine exists as an example; each project should implement their own main routine within their own liveness project. Then, a helm chart deployment may reference the projects newly created module by adding this yaml snippet to your helm chart or PodSpec.\n\n### Helm Chart or PodSpec\n\n```yaml\n      livenessProbe:\n        exec:\n         command:\n         - python3\n         - \"-m\"\n         - \"myservice.liveness\"\n        initialDelaySeconds: 10\n        periodSeconds: 30\n```\n\n### Python Code\n\n```python\nimport sys\nimport logging\nimport os\n\nfrom liveness import TIMESTAMP_PATH\nfrom liveness.timestamp import Timestamp\n\n\nLOGGER = logging.getLogger('liveness.main')\nDEFAULT_LOG_LEVEL = logging.INFO\n\n\ndef setup_logging():\n    log_format = \"%(asctime)-15s - %(levelname)-7s - %(name)s - %(message)s\"\n    requested_log_level = os.environ.get('LOG_LEVEL', DEFAULT_LOG_LEVEL)\n    log_level = logging.getLevelName(requested_log_level)\n    logging.basicConfig(level=log_level, format=log_format)\n\n\nif __name__ == '__main__':\n    setup_logging()\n    timestamp = Timestamp.byref(TIMESTAMP_PATH)\n    if timestamp.alive:\n        LOGGER.info(\"%s is considered valid; the application is alive!\", timestamp)\n        sys.exit(0)\n    else:\n        LOGGER.warning(\"Timestamp is no longer considered valid.\")\n        sys.exit(1)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Cray-HPE/k8s-liveness/archive/liveness-1.1.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Cray-HPE/k8s-liveness",
    "keywords": "Cray/HPE Kubernetes Liveness Helm",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "liveness",
    "package_url": "https://pypi.org/project/liveness/",
    "platform": "",
    "project_url": "https://pypi.org/project/liveness/",
    "project_urls": {
      "Download": "https://github.com/Cray-HPE/k8s-liveness/archive/liveness-1.1.2.tar.gz",
      "Homepage": "https://github.com/Cray-HPE/k8s-liveness"
    },
    "release_url": "https://pypi.org/project/liveness/1.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Library for simplifying liveness checks for python based infrastructure",
    "version": "1.1.2",
    "yanked": true,
    "yanked_reason": "Fixing import issues"
  },
  "last_serial": 9822188,
  "releases": {
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e39bfcae4d9d051f3ebddcd012a5cfeea381fa5ee449c005ae9f56c7e3350f58",
          "md5": "853b9af9542630cc25609a41e08f92b7",
          "sha256": "927592bce0dd6c356cab6710511b8f9e11c5070ed9762b14deceda2bc9965a85"
        },
        "downloads": -1,
        "filename": "liveness-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "853b9af9542630cc25609a41e08f92b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3887,
        "upload_time": "2021-03-19T15:54:37",
        "upload_time_iso_8601": "2021-03-19T15:54:37.373279Z",
        "url": "https://files.pythonhosted.org/packages/e3/9b/fcae4d9d051f3ebddcd012a5cfeea381fa5ee449c005ae9f56c7e3350f58/liveness-1.1.2.tar.gz",
        "yanked": true,
        "yanked_reason": "Fixing import issues"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e39bfcae4d9d051f3ebddcd012a5cfeea381fa5ee449c005ae9f56c7e3350f58",
        "md5": "853b9af9542630cc25609a41e08f92b7",
        "sha256": "927592bce0dd6c356cab6710511b8f9e11c5070ed9762b14deceda2bc9965a85"
      },
      "downloads": -1,
      "filename": "liveness-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "853b9af9542630cc25609a41e08f92b7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3887,
      "upload_time": "2021-03-19T15:54:37",
      "upload_time_iso_8601": "2021-03-19T15:54:37.373279Z",
      "url": "https://files.pythonhosted.org/packages/e3/9b/fcae4d9d051f3ebddcd012a5cfeea381fa5ee449c005ae9f56c7e3350f58/liveness-1.1.2.tar.gz",
      "yanked": true,
      "yanked_reason": "Fixing import issues"
    }
  ],
  "vulnerabilities": []
}