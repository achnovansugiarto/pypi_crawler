{
  "info": {
    "author": "AbaxAI Developer",
    "author_email": "tlvu@ntu.edu.sg",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Project description\n\nThis is the speech client python package built by Abax.AI\n\nIt allows use to use speech to text services in both manners: offline and online\n\nOnline streaming will take audio stream in realtime, and return the transcripts on the fly\n\nOffline transcribing will read your audio file, transcribe and return the transcripts in different formats.\n\n\n## Examples\n\n### Stream your audio file with python3\n\n    import io\n    from abaxai_sdk import streaming\n\n    accessToken = 'YOUR_ACCESS_TOKEN'\n\n\n    def get_wav_data(wavfile):\n        for block in iter(lambda: wavfile.read(1280), b\"\"):\n            yield generate_block(block)\n\n    def generate_block(block):\n        return block\n\n    def abaxai_streaming(stream_file):\n        \"\"\"Streams transcription of the given audio file.\"\"\"\n\n        client = streaming.SpeechClient()\n\n        config = streaming.RecognitionConfig(\n            encoding=streaming.AudioEncoding.LINEAR16,\n            sample_rate_hertz=16000,\n            language_code=\"en-US\",\n            model=\"basic_english\",\n        )\n\n        streaming_config = streaming.StreamingRecognitionConfig(config, accessToken)\n\n        # In practice, stream should be a generator yielding chunks of audio data.\n        with io.open(stream_file, 'rb') as audiostream:\n            data = get_wav_data(audiostream)\n            requests = (\n                streaming.StreamingRecognizeRequest(audio_content=chunk) for chunk in data\n            )\n\n            responses = client.streaming_recognize(\n                            config=streaming_config,\n                            requests=requests,\n                    )\n            \n            print(\"\\n\\nFinal transcripts: \\n\")\n            for response in responses:\n                print(response)\n\n\n    audio_file = \"your_audio_file.wav\"\n\n    print(\"Streaming the audio file\")\n    abaxai_streaming(audio_file)\n\n### Transcribe your audio file with python3\n\n    from abaxai_sdk import transcribing\n\n    accessToken = 'YOUR_ACCESS_TOKEN'\n\n    def abaxai_transcribe(audio_filepath):\n        \"\"\"Streams transcription of the given audio file.\"\"\"\n\n        client = transcribing.SpeechClient()\n\n        config = transcribing.RecognitionConfig(\n            encoding=transcribing.AudioEncoding.LINEAR16,\n            sample_rate_hertz=16000,\n            language_code=\"en-US\",\n            model=\"wenet-english\",\n        )\n        \n        transcribing_config = transcribing.TranscribeConfig(config, accessToken)\n\n        client.recognize(config=transcribing_config,\n                            audiofilepath=audio_filepath,)\n        \n        # speechid = \"<your_speech_id>\"\n        # client.get_transcription(speechid, accessToken)\n\n        print(\"Done.\")\n\n\n    audio_file = \"your_audio_file.wav\"\n\n    print(\"Transcribe the audio file\")\n    abaxai_transcribe(audio_file)\n\n\n## Resources\n\nHomepage: https://abax.ai/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ntuspeechlab/asr-client-scripts",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "abaxai-speech-client",
    "package_url": "https://pypi.org/project/abaxai-speech-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/abaxai-speech-client/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ntuspeechlab/asr-client-scripts/issues",
      "Homepage": "https://github.com/ntuspeechlab/asr-client-scripts"
    },
    "release_url": "https://pypi.org/project/abaxai-speech-client/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Python3 client to connect and use Abax.AI Speech services",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17426084,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59adad5bdadd10122ab187a25216a6087d1164de90a9dbaa25a3e99e2b183e4b",
          "md5": "6da9e401b00b709629dc7b683d2809b3",
          "sha256": "e84162e1426d3808b6b5718dc337e60885df26c3f4c744664493482ef57b1b7e"
        },
        "downloads": -1,
        "filename": "abaxai_speech_client-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6da9e401b00b709629dc7b683d2809b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10393,
        "upload_time": "2023-03-24T03:33:29",
        "upload_time_iso_8601": "2023-03-24T03:33:29.784281Z",
        "url": "https://files.pythonhosted.org/packages/59/ad/ad5bdadd10122ab187a25216a6087d1164de90a9dbaa25a3e99e2b183e4b/abaxai_speech_client-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24504f7fd74a4c14dff5d2d450e0e5acf33baefea4850075f33bcc2bd1c33598",
          "md5": "9f134d7b096050a7397435023d20449a",
          "sha256": "f022633251bc765ea158aedc8d96ad8c7175ea02bb0df6d06403191277a70f51"
        },
        "downloads": -1,
        "filename": "abaxai-speech-client-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9f134d7b096050a7397435023d20449a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9201,
        "upload_time": "2023-03-24T03:33:32",
        "upload_time_iso_8601": "2023-03-24T03:33:32.351912Z",
        "url": "https://files.pythonhosted.org/packages/24/50/4f7fd74a4c14dff5d2d450e0e5acf33baefea4850075f33bcc2bd1c33598/abaxai-speech-client-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59adad5bdadd10122ab187a25216a6087d1164de90a9dbaa25a3e99e2b183e4b",
        "md5": "6da9e401b00b709629dc7b683d2809b3",
        "sha256": "e84162e1426d3808b6b5718dc337e60885df26c3f4c744664493482ef57b1b7e"
      },
      "downloads": -1,
      "filename": "abaxai_speech_client-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6da9e401b00b709629dc7b683d2809b3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10393,
      "upload_time": "2023-03-24T03:33:29",
      "upload_time_iso_8601": "2023-03-24T03:33:29.784281Z",
      "url": "https://files.pythonhosted.org/packages/59/ad/ad5bdadd10122ab187a25216a6087d1164de90a9dbaa25a3e99e2b183e4b/abaxai_speech_client-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24504f7fd74a4c14dff5d2d450e0e5acf33baefea4850075f33bcc2bd1c33598",
        "md5": "9f134d7b096050a7397435023d20449a",
        "sha256": "f022633251bc765ea158aedc8d96ad8c7175ea02bb0df6d06403191277a70f51"
      },
      "downloads": -1,
      "filename": "abaxai-speech-client-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9f134d7b096050a7397435023d20449a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9201,
      "upload_time": "2023-03-24T03:33:32",
      "upload_time_iso_8601": "2023-03-24T03:33:32.351912Z",
      "url": "https://files.pythonhosted.org/packages/24/50/4f7fd74a4c14dff5d2d450e0e5acf33baefea4850075f33bcc2bd1c33598/abaxai-speech-client-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}