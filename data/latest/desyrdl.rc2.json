{
  "info": {
    "author": "Michael BÃ¼chler, Lukasz Butkowski",
    "author_email": "michael.buechler@desy.de, lukasz.butkowski@desy.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
    ],
    "description": "## DesyRDL\n\nThis tool generates outputs for an address space that is defined by one or many\nSystemRDL&trade; 2.0 input files. The address space could be made up of all the\nsoftware-accessible registers and memory regions in an FPGA design, or just the\nregisters of a single IP block.\n\nSystemRDL&trade; 2.0 is a standard released by Accellera Systems Initiative Inc\nthat is meant to describe such an address space, see [\\[systemrdl\\]](#systemrdl).\n\nOutputs are based on templates. Writing your own should be easy. Provided with\nthis package are templates and common files for the following outputs:\n\n* Synthesizable VHDL register logic\n* Mapfiles (format used internally at DESY MSK)\n* C header files\n* AsciiDoc documentation\n\nDesyRDL was developed at [DESY](https://desy.de) in the MSK firmware group as a\nreplacement for its existing proprietary method of register and address map\ngeneration, the \"Internal Interface\", called \"IBUS\" in its latest version\n[ii](#ii).\n\nThe idea to use the SystemRDL&trade; 2.0 standard came from\n[MicroTCA Tech Lab](https://techlab.desy.de/) at DESY when they wrote\n[HECTARE](https://github.com/MicroTCA-Tech-Lab/hectare), the predecessor of\nDesyRDL.\n\n## Usage\n\nThis tool can be used standalone but was intended to be used as part of a\nfirmware build environment like DESY MSK's\n[FPGA Firmware Framework](https://fpgafw.pages.desy.de/docs-pub/fwk/index.html),\nshort `fwk`.\n\nSee `desyrdl -h` for options.\nAll RDL files must be passed in the correct order. Below is an example for the\n`test_hectare` module which also comes with a testbench (not in Git yet):\n\n    desyrdl -o out -i examples/spi_ad9510.rdl examples/test_hectare.rdl -f vhdl\n\nThis will compile the `.rdl` file and create one `.vhd` in `./out/` for each\n`addrmap` instance in the model and for each VHDL template in\n`./desyrdl/templates/vhdl/`. The common files from `./desyrdl/libraries/vhdl/`\nwill also be copied there.\n\nThe generated VHDL logic should be integrated into your module or IP as an\nentity next to the other logic. This is shown in the diagram below. Registers\nand external interfaces are available on combined ports of a custom record type\n(e.g. `t_addrmap_mymodule_in` and `t_addrmap_mymodule_out`). Through these\nrecords, each node in this `addrmap` can be accessed by its SystemRDL instance\nname. Check the generated VHDL package for details.\n\n![top integration diagram](./doc/images/top_integration.svg \"Top-level integration\")\n\n## Concept\n\nCompiling the SystemRDL&trade; files is handled by\n[SystemRDL Compiler](https://systemrdl-compiler.readthedocs.io/en/latest/).\nTo create useful information (or \"context\") for the template processing, its\nWalker/Listener method of traversing the compiled tree is used.\n\n`DesyListener` extends its `systemrdl.RDLListener` class. It extracts a fixed\nset of information from the compiled tree and passes it on to a custom template\nengine (`RdlFormatter`).\n\n![DesyRDL flow diagram](./doc/images/DesyRDL.svg \"DesyRDL flow overview\")\n\n### Templates\n\nThe custom template engine is inspired by\nhttps://github.com/ebrehault/superformatter. Everything within curly braces {}\nis interpreted as a \"replacement field\" and replaced by the output of the\nformatter. This is inherited from Python's `Formatter` class, so its behavior\nis very similar to a formatted print in Python. In addition to that it can also\nperform advanced actions, e.g. loop over all registers within an addrmap. For\nall this it relies on \"context\" which holds all the necessary information about\nthe address space.\n\n### Context\n\nContext creation differs a bit depending on the type of output. Some outputs\nhave to be generated for each `addrmap` component (e.g. VHDL) and others are\ngenerated for the whole address space at once (e.g. mapfiles and the C header).\n\nThe context is a Python `dict` that contains further dictionaries to describe\nregister types and instances, memory types and instances, further external\ncomponents and some more. It is currently a bit of a mess.\n\n## Known Issues and Limitations\n\nThe bus decoder implementation is relatively basic:\n\n* Only AXI4-Lite with 32 bit data width is supported as the upstream interface\n* Likewise, only 32 bit registers are supported\n* The dual-port memory interface does not support AXI4 write strobes\n* Timing issues can arise when having a large number of registers per addrmap.\n  A review is needed here.\n* The logic operates on a single clock and the developer has to take care of any\n  CDCs\n\n## Acknowledgements\n\nThis tool relies heavily on systemrdl-compiler by Alex Mykyta and was only\ndeveloped because it exists.\n\nAccellera&trade; and SystemRDL&trade; are trademarks of Accellera Systems\nInitiative Inc.\n\n## References\n\n\n### systemrdl\n\n\"SystemRDL 2.0 Register Description Language\", Accellera\nSystems Initiative Inc, 2018,\navailable from https://accellera.org/downloads/standards/systemrdl\n\n### ii\n\n\"INTERNAL INTERFACE, I/O Communication with FPGA Circuits and Hardware\nDescription Standard for Applications in HEP and FEL Electronics ver. 1.0\",\n2005, available from\nhttps://flash.desy.de/reports_publications/tesla_reports/tesla_reports_2005/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "desyrdl",
    "package_url": "https://pypi.org/project/desyrdl/",
    "platform": "any",
    "project_url": "https://pypi.org/project/desyrdl/",
    "project_urls": {
      "Source": "https://gitlab.desy.de/fpgafw/tools/desyrdl"
    },
    "release_url": "https://pypi.org/project/desyrdl/0.3.0/",
    "requires_dist": [
      "systemrdl-compiler (>=1.21)"
    ],
    "requires_python": ">=3.6",
    "summary": "DesyRDL: Tool for address space and register generation",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16115806,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52bdb6b8a403a4638c5d37678705e6c8285d37a16edeb646c6b3c839933997a1",
          "md5": "c72e8697d41cc9d4886074d3280bdd92",
          "sha256": "6e3d012d126a458eb2b8c361f8d5759b15c9fdcb9ddfcf0699e10ec4eb28055e"
        },
        "downloads": -1,
        "filename": "desyrdl-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c72e8697d41cc9d4886074d3280bdd92",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39392,
        "upload_time": "2022-04-07T13:08:31",
        "upload_time_iso_8601": "2022-04-07T13:08:31.495363Z",
        "url": "https://files.pythonhosted.org/packages/52/bd/b6b8a403a4638c5d37678705e6c8285d37a16edeb646c6b3c839933997a1/desyrdl-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "453eb78ec7231916eda09dde4fc8bac898314a0d0af3d00e24da36ddd98747cf",
          "md5": "ada46c0d2f58242c5570772252701322",
          "sha256": "b86a77ac87241f3255547085c588df9992599010c98bedf00068561601ae5fc8"
        },
        "downloads": -1,
        "filename": "desyrdl-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ada46c0d2f58242c5570772252701322",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32878,
        "upload_time": "2022-04-07T13:08:33",
        "upload_time_iso_8601": "2022-04-07T13:08:33.372888Z",
        "url": "https://files.pythonhosted.org/packages/45/3e/b78ec7231916eda09dde4fc8bac898314a0d0af3d00e24da36ddd98747cf/desyrdl-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d93f2c23d7f5b2652ec5d349b56969ca8ec403105d3cc530f9b678e105c7698",
          "md5": "925190e4845944a9d05657411c10b2dc",
          "sha256": "ba63391ff4cd76809ff5ab3bee0a7cb38eb40e74ebf305780e39bd3d8de48b16"
        },
        "downloads": -1,
        "filename": "desyrdl-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "925190e4845944a9d05657411c10b2dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 42750,
        "upload_time": "2022-12-15T16:46:55",
        "upload_time_iso_8601": "2022-12-15T16:46:55.102904Z",
        "url": "https://files.pythonhosted.org/packages/7d/93/f2c23d7f5b2652ec5d349b56969ca8ec403105d3cc530f9b678e105c7698/desyrdl-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd8ea469e5d2503a7a5588d3e9a62d28d549f084695509307900fd83921e869d",
          "md5": "9b245c906f16eda9bb22db7af05cc5fc",
          "sha256": "f128d5e143f678bed33736f56b050e26d98969f61104f1915d4c6f8bc0445e0b"
        },
        "downloads": -1,
        "filename": "desyrdl-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9b245c906f16eda9bb22db7af05cc5fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36495,
        "upload_time": "2022-12-15T16:46:56",
        "upload_time_iso_8601": "2022-12-15T16:46:56.984821Z",
        "url": "https://files.pythonhosted.org/packages/dd/8e/a469e5d2503a7a5588d3e9a62d28d549f084695509307900fd83921e869d/desyrdl-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d93f2c23d7f5b2652ec5d349b56969ca8ec403105d3cc530f9b678e105c7698",
        "md5": "925190e4845944a9d05657411c10b2dc",
        "sha256": "ba63391ff4cd76809ff5ab3bee0a7cb38eb40e74ebf305780e39bd3d8de48b16"
      },
      "downloads": -1,
      "filename": "desyrdl-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "925190e4845944a9d05657411c10b2dc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 42750,
      "upload_time": "2022-12-15T16:46:55",
      "upload_time_iso_8601": "2022-12-15T16:46:55.102904Z",
      "url": "https://files.pythonhosted.org/packages/7d/93/f2c23d7f5b2652ec5d349b56969ca8ec403105d3cc530f9b678e105c7698/desyrdl-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd8ea469e5d2503a7a5588d3e9a62d28d549f084695509307900fd83921e869d",
        "md5": "9b245c906f16eda9bb22db7af05cc5fc",
        "sha256": "f128d5e143f678bed33736f56b050e26d98969f61104f1915d4c6f8bc0445e0b"
      },
      "downloads": -1,
      "filename": "desyrdl-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9b245c906f16eda9bb22db7af05cc5fc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 36495,
      "upload_time": "2022-12-15T16:46:56",
      "upload_time_iso_8601": "2022-12-15T16:46:56.984821Z",
      "url": "https://files.pythonhosted.org/packages/dd/8e/a469e5d2503a7a5588d3e9a62d28d549f084695509307900fd83921e869d/desyrdl-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}