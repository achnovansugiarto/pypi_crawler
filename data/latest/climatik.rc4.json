{
  "info": {
    "author": "Fabio Comuni",
    "author_email": "fabrix.xm+pypi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Create command line interface from function definitions.\n\nEach function will be a subcommand of your application.\n\n*Climatik* define a function decorator which parse function definition and build\na subcommand command line parser.\n\nOptionally [argcomplete](https://kislyuk.github.io/argcomplete/) is supported.\n\n## Docs\n\n### def command(fnc:Callable)\n\nBuild subcommand from function\n\nSubcommand name will be the function name and arguments are parsed to build the command line.\nOptionally, subcommand name can be passed as parameter:\n\n    @command('name')\n    def test():\n        ...\n\nSubcommands can be groupped passing `group_name` paramenter:\n\n    @command(group_name=\"group\")\n    def bar()\n        ...\n\n    @command(group_name=\"group\")\n    def baz()\n        ...\n\nThis two functions will be called from command line as `group bar` and `group baz`\n\n\nEach positional argument of the decorated function will be a positional paramenter.\n\nEach optional argument will be an optional flag.\n\nType hints are used to covert types from command line string. If no type is defined, paramenter are handled as strings.\n\nAn argument with `bool` type is converted to an optional flag parameter (with default sematic as \"False\")\n\nTo create an optional positional paramenter, use the [`typing.Optional`](https://docs.python.org/3/library/typing.html#typing.Optional) type as hint with the parameter type, e.g. `Optional[str]`\n\nFunction docstring is used to set command's help and description.\nTo set arguments help string, add a line in docstring like\n\n    @param argname : argument help\n\nExacmple:\n\n\n    @command\n    def one(name, debug:bool, value=\"default\", switchoff=True):\n        \"\"\"First subcommand\n        \n        @param debug: enable debug output\n        \"\"\"\n        ...\n\n    @command\n    def two(name:Optional[str] = None, long_param = None):\n        \"Second subcommand\"\n        ...\n\ngives:\n\n    $ script -h\n    usage: script [-h] {one,two} ...\n\n    positional arguments:\n    {one,two}\n        one       First subcommand\n        two       Second subcommand\n\n    optional arguments:\n    -h, --help  show this help message and exit\n\n    $Â script one -h\n    usage: script one [-h] [--debug] [--value VALUE] [--switchoff] name\n\n    First subcommand\n\n    positional arguments:\n    name\n\n    optional arguments:\n    -h, --help     show this help message and exit\n    --debug        enable debug output\n    --value VALUE  (default 'default')\n    --switchoff\n\n    $ script two -h\n    usage: script two [-h] [--long-param LONG_PARAM] [name]\n\n    Second subcommand\n\n    positional arguments:\n    name\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    --long-param LONG_PARAM\n\n### def group(name:str, help:str = \"\", description:str = \"\")\n\nSet command group help and description\n\nIf a group named `name` does not exists, is created\n\nCan be used also as a context manager. Each command defined in context will be added to the group\n\n    with group('file', help=\"Manage files\", description=\"Functions to manage files\"):\n        @command\n        def ls():\n            ...\n        \n        @command\n        def rm():\n            ...\n\n### def run(prog:str=None, usage:str=None, description:str=None, **kwargs)\n\nRun your application.\n\nBuilds the command line parse, with given arguments, and execute the requested \nfunction. It's a shorthand for\n\n    parser = build_parser(prog, usage, description, **kwargs)\n    execute(parser)\n\n\n### def execute(parser:argparse.ArgumentParser)\n\nExecute command line from given parser\n\n\n### def get_parser(*args, **kwargs) -> argparse.ArgumentParser:\n\nBuild the command line parser\n\nArguments are passed to `argparse.ArgumentParser` constructor\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.sr.ht/~fabrixxm/climatik",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "climatik",
    "package_url": "https://pypi.org/project/climatik/",
    "platform": null,
    "project_url": "https://pypi.org/project/climatik/",
    "project_urls": {
      "Homepage": "https://git.sr.ht/~fabrixxm/climatik"
    },
    "release_url": "https://pypi.org/project/climatik/0.4.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Create command line interface from function definitions.",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13331511,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "339b2fff072472ebeeef5801595923513f8644cd660a5f3eb3486d3dab815e57",
          "md5": "aa87749e7bb987ad6a521273488716dd",
          "sha256": "7a284cd530870e47c2d92289bbd203edf34bdc9b3e0875c81d9f8b26452e475f"
        },
        "downloads": -1,
        "filename": "climatik-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa87749e7bb987ad6a521273488716dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16226,
        "upload_time": "2021-10-06T13:47:09",
        "upload_time_iso_8601": "2021-10-06T13:47:09.574718Z",
        "url": "https://files.pythonhosted.org/packages/33/9b/2fff072472ebeeef5801595923513f8644cd660a5f3eb3486d3dab815e57/climatik-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c2b4a69aa4291db1544f9fe0ceab3c8670b8ef1dc546111e78c596ad9fed328",
          "md5": "4c87a0b6e8a0694e1ed6ba22cb02f09e",
          "sha256": "fb62466fe02e4e6c7d49731a84ae328ce57509d43422d57c6d8a2646bafc438c"
        },
        "downloads": -1,
        "filename": "climatik-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4c87a0b6e8a0694e1ed6ba22cb02f09e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15687,
        "upload_time": "2021-10-06T13:47:11",
        "upload_time_iso_8601": "2021-10-06T13:47:11.144881Z",
        "url": "https://files.pythonhosted.org/packages/7c/2b/4a69aa4291db1544f9fe0ceab3c8670b8ef1dc546111e78c596ad9fed328/climatik-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17277d6c11084272e09cb77d62a912d89111e31edd2c51d27442d5fb998a7af4",
          "md5": "63818df28c8f1366cdaaa5d551043475",
          "sha256": "ab9d8bfc46a0ec0c79d59fe6a912aaf538b08a573542ea1feff0e198c60b0880"
        },
        "downloads": -1,
        "filename": "climatik-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63818df28c8f1366cdaaa5d551043475",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16411,
        "upload_time": "2021-11-06T08:38:40",
        "upload_time_iso_8601": "2021-11-06T08:38:40.071760Z",
        "url": "https://files.pythonhosted.org/packages/17/27/7d6c11084272e09cb77d62a912d89111e31edd2c51d27442d5fb998a7af4/climatik-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2e9a061fdaab051ca0dfad6092c4b4697eb7e315b5360a8f109f81e60aea3bf",
          "md5": "ab8d993b247e949796af4394cdde442f",
          "sha256": "4575ec9c6ad0b4ea443219ce551f26ebd3f897c31a5178801f11353df0e1fc9d"
        },
        "downloads": -1,
        "filename": "climatik-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ab8d993b247e949796af4394cdde442f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15825,
        "upload_time": "2021-11-06T08:38:41",
        "upload_time_iso_8601": "2021-11-06T08:38:41.500581Z",
        "url": "https://files.pythonhosted.org/packages/d2/e9/a061fdaab051ca0dfad6092c4b4697eb7e315b5360a8f109f81e60aea3bf/climatik-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4126fa6b9f74dab4d02ecde9252297bfdc9f2172639a229ceab1bf9ec75a2f0e",
          "md5": "167a50612b4626dcea693f6285abd630",
          "sha256": "1e7c46261d2cd5c5a82753677af7f015fb4a8a11aefcc877542852d3e9b507ef"
        },
        "downloads": -1,
        "filename": "climatik-0.3.0-2-py38-none-any.whl",
        "has_sig": false,
        "md5_digest": "167a50612b4626dcea693f6285abd630",
        "packagetype": "bdist_wheel",
        "python_version": "py38",
        "requires_python": ">=3.8",
        "size": 16665,
        "upload_time": "2022-01-11T11:39:13",
        "upload_time_iso_8601": "2022-01-11T11:39:13.459447Z",
        "url": "https://files.pythonhosted.org/packages/41/26/fa6b9f74dab4d02ecde9252297bfdc9f2172639a229ceab1bf9ec75a2f0e/climatik-0.3.0-2-py38-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f762369a462612f9dc8b5586b61c2734d11d9feca457609f1d119379caceaf82",
          "md5": "bb452c6f446ce393a55b9fa906965452",
          "sha256": "ab459acfc09ee96908eb0f48aa42dd834ecd468b6bf0106dbf3b658564f92d3a"
        },
        "downloads": -1,
        "filename": "climatik-0.3.0-py38-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb452c6f446ce393a55b9fa906965452",
        "packagetype": "bdist_wheel",
        "python_version": "py38",
        "requires_python": ">=3.8",
        "size": 16496,
        "upload_time": "2022-01-11T11:20:08",
        "upload_time_iso_8601": "2022-01-11T11:20:08.657811Z",
        "url": "https://files.pythonhosted.org/packages/f7/62/369a462612f9dc8b5586b61c2734d11d9feca457609f1d119379caceaf82/climatik-0.3.0-py38-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e902c49ac48a6124fbca9729f7dc244aec29f334ec7d6637fcdd9dfaa2deaf9",
          "md5": "a2984e71a70f50bdc0ffeb59677f2644",
          "sha256": "c1be41c1e59b33cf641b3b063fd24b9821c7cc9d6aa492363a9c1d15166eddbc"
        },
        "downloads": -1,
        "filename": "climatik-0.4.1-py38-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2984e71a70f50bdc0ffeb59677f2644",
        "packagetype": "bdist_wheel",
        "python_version": "py38",
        "requires_python": ">=3.8",
        "size": 18255,
        "upload_time": "2022-03-29T10:08:13",
        "upload_time_iso_8601": "2022-03-29T10:08:13.498140Z",
        "url": "https://files.pythonhosted.org/packages/5e/90/2c49ac48a6124fbca9729f7dc244aec29f334ec7d6637fcdd9dfaa2deaf9/climatik-0.4.1-py38-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e902c49ac48a6124fbca9729f7dc244aec29f334ec7d6637fcdd9dfaa2deaf9",
        "md5": "a2984e71a70f50bdc0ffeb59677f2644",
        "sha256": "c1be41c1e59b33cf641b3b063fd24b9821c7cc9d6aa492363a9c1d15166eddbc"
      },
      "downloads": -1,
      "filename": "climatik-0.4.1-py38-none-any.whl",
      "has_sig": false,
      "md5_digest": "a2984e71a70f50bdc0ffeb59677f2644",
      "packagetype": "bdist_wheel",
      "python_version": "py38",
      "requires_python": ">=3.8",
      "size": 18255,
      "upload_time": "2022-03-29T10:08:13",
      "upload_time_iso_8601": "2022-03-29T10:08:13.498140Z",
      "url": "https://files.pythonhosted.org/packages/5e/90/2c49ac48a6124fbca9729f7dc244aec29f334ec7d6637fcdd9dfaa2deaf9/climatik-0.4.1-py38-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}