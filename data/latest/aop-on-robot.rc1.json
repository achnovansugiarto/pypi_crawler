{
  "info": {
    "author": "Software System Laboratory",
    "author_email": "ntutsoftsyslab@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Robot Framework",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Testing :: Acceptance"
    ],
    "description": "# AOP-on-Robot-Framework\n\nThis project aims to improve the readability, reusability, and maintainability of the test script by separating assistive keywords from operative keywords. The concept is based on [Claire's](https://github.com/Clairelien/Separating-Test-Actions-of-Different-Aspects-in-Robot-Framework-Test-Scripts) and [Ingrid's](https://drive.google.com/file/d/1yjWQM29a9BkjFwG5h79DJ7oj_D2vSr7L/view?usp=sharing) thesis.\n\n  - [Installation](#installation)\n  - [Example](#example)\n  - [Result](#result)\n  - [Attention](#Attention)\n\nInstallation\n-------\n* Download [Python 3.6](https://www.python.org/downloads/release/python-360/)\n  + Install\n  + Path of __python36__ and __python36\\Scripts__ have to set as environmental variables\n\n* Download Chromedriver [version 2.37](https://chromedriver.storage.googleapis.com/index.html?path=2.37/)\n  + Unzip folder\n  + Put chromedriver.exe into the path of python location\n\n* Install requirement libraries using pip:\n\n      pip install -r requirements.txt\n\n* Install development environment RED from [Here](https://github.com/nokia/RED)\n* Import the project in RED, following the step : File->Import->Existing Projects into Workspace->Next->Select the project located place.\n\nExample\n------------------------\n\nWe provide [twitter_valid_user_login.robot](./twitter_valid_user_login.robot) sample test case.\n\nYou can run `\"robot -d ./out --listener aspect/actionListener.py twitter_valid_user_login.robot\"` in command line directly.\n\n> The command above **-d ./out** means put all output file (e.g report, log...) in the out folder.\n>\nOr following below steps set listener option in RED\n* Window->Preferences->Robot Framework->Launching->Default Launch Configurations->Setting arguments like below\n\n      -d ./out --listener aspect/actionListener.py\n\n    <img src=\"./img/listener.PNG\" width=\"400px\" height=\"450px\"/>\n* Then you can run the sample test like below\n\n   <img src=\"./img/runTest.PNG\" width=\"500px\" height=\"400px\"/>\n\nResult\n--------\n* The generated report looks like below, the red frame means that assistive keywords (written in [twitter_valid_user_login_akw](./twitter_valid_user_login_akw.robot)) are weaved into the test script successfully.\n\n  <img src=\"./img/report.png\" width=\"600px\" height=\"400px\" >\n\n* The project would also create a [pickle file](https://docs.python.org/3.6/library/pickle.html) (listener.pickle), this file is used for saving the status of objects which contain library path and aspect that avoid rereading files when the next time running test scripts.\n\n  <img src=\"./img/pickle.png\" width=\"300px\" height=\"300px\">\n\nAttention\n=========\n  If your aspect keywords are written in python (customized keyword), please make sure the library is being referenced by RED.\n\n  <img src=\"./img/library.png\" width=\"200px\" height=\"300px\">\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://ssl-gitlab.csie.ntut.edu.tw/e8315402/aop-on-robot",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aop-on-robot",
    "package_url": "https://pypi.org/project/aop-on-robot/",
    "platform": "",
    "project_url": "https://pypi.org/project/aop-on-robot/",
    "project_urls": {
      "Homepage": "https://ssl-gitlab.csie.ntut.edu.tw/e8315402/aop-on-robot"
    },
    "release_url": "https://pypi.org/project/aop-on-robot/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8521591,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "552573acc82e3a79870f315b42a9b425cc7aa97ae81dcf2010e6d21d0106379e",
          "md5": "934fcc93fc8d1e3f466f11d75386b1db",
          "sha256": "246878af2ba82b338176b85e04492a1043bb09d0f622e27263a6d2970c96dfe2"
        },
        "downloads": -1,
        "filename": "aop_on_robot-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "934fcc93fc8d1e3f466f11d75386b1db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8875,
        "upload_time": "2020-10-28T09:28:50",
        "upload_time_iso_8601": "2020-10-28T09:28:50.810781Z",
        "url": "https://files.pythonhosted.org/packages/55/25/73acc82e3a79870f315b42a9b425cc7aa97ae81dcf2010e6d21d0106379e/aop_on_robot-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0941533c561467fbb0336a5adbd98397f667ecc80a8d8383ad8d8f56ef47fa4b",
          "md5": "8e6089b4052cd31ada6c81cea1db6569",
          "sha256": "38171f6a01e60a5ff86e7633cf8fe1ccb3cec964364cea2fc7395897f975aca4"
        },
        "downloads": -1,
        "filename": "aop-on-robot-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8e6089b4052cd31ada6c81cea1db6569",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7309,
        "upload_time": "2020-10-28T09:28:53",
        "upload_time_iso_8601": "2020-10-28T09:28:53.606261Z",
        "url": "https://files.pythonhosted.org/packages/09/41/533c561467fbb0336a5adbd98397f667ecc80a8d8383ad8d8f56ef47fa4b/aop-on-robot-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "552573acc82e3a79870f315b42a9b425cc7aa97ae81dcf2010e6d21d0106379e",
        "md5": "934fcc93fc8d1e3f466f11d75386b1db",
        "sha256": "246878af2ba82b338176b85e04492a1043bb09d0f622e27263a6d2970c96dfe2"
      },
      "downloads": -1,
      "filename": "aop_on_robot-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "934fcc93fc8d1e3f466f11d75386b1db",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8875,
      "upload_time": "2020-10-28T09:28:50",
      "upload_time_iso_8601": "2020-10-28T09:28:50.810781Z",
      "url": "https://files.pythonhosted.org/packages/55/25/73acc82e3a79870f315b42a9b425cc7aa97ae81dcf2010e6d21d0106379e/aop_on_robot-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0941533c561467fbb0336a5adbd98397f667ecc80a8d8383ad8d8f56ef47fa4b",
        "md5": "8e6089b4052cd31ada6c81cea1db6569",
        "sha256": "38171f6a01e60a5ff86e7633cf8fe1ccb3cec964364cea2fc7395897f975aca4"
      },
      "downloads": -1,
      "filename": "aop-on-robot-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8e6089b4052cd31ada6c81cea1db6569",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7309,
      "upload_time": "2020-10-28T09:28:53",
      "upload_time_iso_8601": "2020-10-28T09:28:53.606261Z",
      "url": "https://files.pythonhosted.org/packages/09/41/533c561467fbb0336a5adbd98397f667ecc80a8d8383ad8d8f56ef47fa4b/aop-on-robot-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}