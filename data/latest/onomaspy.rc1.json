{
  "info": {
    "author": "Franco Bulgarelli",
    "author_email": "franco@mumuki.org",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# onomaspy\n\n> Deterministic classifier for personal names\n\n\n```\n  usage: onomaspy [-h] [-v] [-F FILE] [-o tagged|csv|padded] [-t TRANSLITERATE]\n                  [-u UNKNOWN_AS_FAMILY] [-b BREAK_FULL_NAMES]\n                  givens_file families_file\n\n  Deterministic classifier for personal names\n\n  positional arguments:\n    givens_file           givens filename\n    families_file         families filename\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    -v, --version         show program's version number and exit\n    -F FILE, --file FILE  input filename\n    -o tagged|csv|padded, --output-format tagged|csv|padded\n                          output format. `tagged` by default\n    -t TRANSLITERATE, --transliterate TRANSLITERATE\n                          transliterate names\n    -u UNKNOWN_AS_FAMILY, --unknown-as-family UNKNOWN_AS_FAMILY\n                          Treat unknown names as family names\n    -b BREAK_FULL_NAMES, --break-full-names BREAK_FULL_NAMES\n                          Force split of ambiguous full names\n\n```\n\n## TL;DR\n\n`onomastic` is an algorithm for classifying personal names deterministically, using given and family names lists. `onomastic` tries to minimize misclassifications, and does not make inferences about ambiguous personal names unless forced to do so.\n\nSample usage:\n\n```bash\n$ echo \"Bulgarelli Manfroni Franco Leonardo\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt --bonus given  -utb\nGivenAndFamily:Franco Leonardo,Bulgarelli Manfroni\n```\n\nIt offers both a python and [haskell](github.com/flbulgarelli/onomastic) implementation. It can be used as a library or command-line command.\n\n## The problem\n\nHuman names - aka _personal names_ - are usually composed of many individual names - first name, middle name, last name, for example - which can be grouped into two main sections: givens names and family names.\n\nThere is no single way of properly writing a personal name - the proper order f individual names may even vary from culture to culture. For example, two common formats are display-order and sort-order:\n\nThanks to those common and easily recognizable formats, it is simple to analyse a string that represents a name and infer which parts correspond to the given names and family names. For example:\n\nThere are a lot of good packages that effectively perform this task using parsers or regular expressions:\n\n* [namae](https://github.com/berkmancenter/namae)\n* [name-parser](https://github.com/theiconic/name-parser)\n* [nameparser](https://pypi.org/project/nameparser/)\n\nHowever, people do not always follow those conventions when they manually enter personal names. It is common to deal with lists like the following:\n\n\nIn such situations, format-based algorithms will not solve our problem. You need something that actually undestands about individual names. Although you could use a machine learning algorithm - [see this article](https://towardsdatascience.com/name-classification-with-naive-bayes-7c5e1415788a) - improper classification of personal names can be a sensible thing. Also, getting a big list of real names can turn into troubles.\n\nBecause of this using a deterministic algorithm that only requires datasets of given and family names - and not just personal names - is a better approach.\n\n\n## The solution\n\n`onomastic` classifies personal names using given and families list, which can be obtained from different sources depending your country or location. `onomastic` is designed to classify names only when they are not ambiguous, but this restriction can be relaxed using different flags.\n\n## Usage\n\n### Available options\n\n#### `-g, --givens`\n\n`onomastic` needs a list of given names, one name per line. The givens file content should look like the following:\n\n```\nAlvesio\nAlvia\nAlvida\nAlvin\nAlvina\nAlvis\nAlvita\nAlys\nAlysa\nAlyson\nAlyssa\nAlzena\nAmabel\nAmabelia\nAmabelio\nAmable\nAmada\nAmadeo\n```\n\n**This is a requied option**.\n\n\n#### `-f,--families`\n\n`onomastic` needs a list of family names - aka surnames -, one name per line. The families file content should look like the following:\n\n```\nAcasio\nAccino\nAccorinti\nAcebo\nAceituno\nAcero\nAceval\nAcevedo\nAceñero\nAcha\nAchacata\nAchaval\nAchemon\nAchilli\nAchucarro\n```\n\n\n**This is a requied option**.\n\n#### `-F,--file`\n\n#### `-o,--output-format`\n\nOutput format {tagged|csv|padded}. Default is 'tagged'\n\n#### `-B,--bonus BONUS`\n\nTry to maximize length of a name group. Options are {no|given|family}. Default is 'no'\n\n#### `-t,--transliterate`\n\nTransliterate names before classifying them\n#### `-u,--unknown-as-family`\n\nTreat unknown names as family names\n\n#### `-b,--break-full-names`\n\nForce split of ambiguous full names\n\n### Examples\n\n\n```bash\n$ echo \"Franco Bulgarelli\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt  -ut\nGivenAndFamily:Franco,Bulgarelli\n\n$ echo \"Franco Bulgarelli Manfroni\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt  -ut\nGivenAndFamily:Franco,Bulgarelli Manfroni\n\n# some ambiguous splits will be prevented by default\n$ echo \"Bulgarelli Manfroni Franco Leonardo\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt  -ut\nFullName:Bulgarelli Manfroni Franco Leonardo\n\n# however you can force them using the -b flag\n$ echo \"Bulgarelli Manfroni Franco Leonardo\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt  -utb\nGivenAndFamily:Leonardo,Bulgarelli Manfroni Franco\n\n$ echo \"Feldfeber Kivelski Ivana\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt  -ut\nGivenAndFamily:Ivana,Feldfeber Kivelski\n\n$ echo \"Julian Berbel Alt\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt  -ut\nGivenAndFamily:Julian,Berbel Alt\n\n$ echo \"BERBEL ALT julian\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt  -ut\nGivenAndFamily:Julian,Berbel Alt\n\n$ echo \"Finzi Nadia Giselle\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt  -ut\nGivenAndFamily:Nadia Giselle,Finzi\n\n$ echo \"Bulgarelli Manfroni Franco Leonardo\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt --bonus family  -utb\nGivenAndFamily:Leonardo,Bulgarelli Manfroni Franco\n\n$ echo \"Bulgarelli Manfroni Franco Leonardo\" | onomastic --givens test/data/givens.txt  --families test/data/families.txt --bonus given  -utb\nGivenAndFamily:Franco Leonardo,Bulgarelli Manfroni\n```\n\n##  Caveats and future work\n\n`onomastic` is far from perfect. It does currently not deal with:\n\n* titles, initials and nicknames\n* gender\n* compound names like `Juan Cruz` or `María de los Angeles`\n\n\n## Development\n\n### Installation\n\nTL;DR setup:\n\n```bash\n$ ./devinit\n```\n\nBasic setup:\n\n```bash\n# Create and active a virtual env\n$ python3 -m venv .venv\n$ source .venv/bin/activate\n# install the project\n$ pip install -e .\n```\n\nInstall testing dependencies:\n\n```bash\n$ pip install -e .[testing]\n```\n\nInstall `tox` for full test, build and publish lifecycle:\n\n```bash\n$ pip install tox\n```\n\n### Run tests\n\n```bash\n# basic, quick run\n$ pytest\n# run as part of standard tox lifecycle\n$ tox\n```\n\n### Publish project\n\n```bash\n# update package version in setup.cfg\n# them run these command:\n$ git tag <version>\n$ git push origin HEAD --tags\n# clean project\n$ tox -e clean\n# build the package\n$ tox -e build\n# publish to test.pypi\n$ tox -e publish\n# publish to real pypi\n$ tox -e --publish -- --repository pypi\n```\n\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/flbulgarelli/onomaspy",
    "keywords": "",
    "license": "gpl3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "onomaspy",
    "package_url": "https://pypi.org/project/onomaspy/",
    "platform": "any",
    "project_url": "https://pypi.org/project/onomaspy/",
    "project_urls": {
      "Bug Tracker": "https://github.com/flbulgarelli/onomaspy/issues",
      "Documentation": "https://github.com/flbulgarelli/onomaspy",
      "Homepage": "https://github.com/flbulgarelli/onomaspy"
    },
    "release_url": "https://pypi.org/project/onomaspy/0.0.2/",
    "requires_dist": [
      "importlib-metadata",
      "Unidecode (~=1.1)",
      "setuptools ; extra == 'testing'",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'"
    ],
    "requires_python": "",
    "summary": "Deterministic classifier for personal names",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10817345,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee04440d5b6d17736a4bef96d42423305a335274c4aa4b0f935b11867cd2a5e7",
          "md5": "4fef5ff76342ce68a3c5a7ab6c49dfcd",
          "sha256": "f4612e67d6bfa5513c84ac48776342ed16e094af6ec497a6fbd0b891ee9e4cee"
        },
        "downloads": -1,
        "filename": "onomaspy-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fef5ff76342ce68a3c5a7ab6c49dfcd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21049,
        "upload_time": "2021-07-04T03:08:04",
        "upload_time_iso_8601": "2021-07-04T03:08:04.790246Z",
        "url": "https://files.pythonhosted.org/packages/ee/04/440d5b6d17736a4bef96d42423305a335274c4aa4b0f935b11867cd2a5e7/onomaspy-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e577bed332772f764dac4c95d898a3eb90a057d92a056c13fd5ee62267501e4e",
          "md5": "037c3408abcf8179e9a761184e788757",
          "sha256": "3c9a6de0c170b2997c0f19ca693d0079eef2a9e08330a5e0a0fe6557db49bbc7"
        },
        "downloads": -1,
        "filename": "onomaspy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "037c3408abcf8179e9a761184e788757",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 104016,
        "upload_time": "2021-07-04T03:08:06",
        "upload_time_iso_8601": "2021-07-04T03:08:06.905487Z",
        "url": "https://files.pythonhosted.org/packages/e5/77/bed332772f764dac4c95d898a3eb90a057d92a056c13fd5ee62267501e4e/onomaspy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee04440d5b6d17736a4bef96d42423305a335274c4aa4b0f935b11867cd2a5e7",
        "md5": "4fef5ff76342ce68a3c5a7ab6c49dfcd",
        "sha256": "f4612e67d6bfa5513c84ac48776342ed16e094af6ec497a6fbd0b891ee9e4cee"
      },
      "downloads": -1,
      "filename": "onomaspy-0.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4fef5ff76342ce68a3c5a7ab6c49dfcd",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 21049,
      "upload_time": "2021-07-04T03:08:04",
      "upload_time_iso_8601": "2021-07-04T03:08:04.790246Z",
      "url": "https://files.pythonhosted.org/packages/ee/04/440d5b6d17736a4bef96d42423305a335274c4aa4b0f935b11867cd2a5e7/onomaspy-0.0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e577bed332772f764dac4c95d898a3eb90a057d92a056c13fd5ee62267501e4e",
        "md5": "037c3408abcf8179e9a761184e788757",
        "sha256": "3c9a6de0c170b2997c0f19ca693d0079eef2a9e08330a5e0a0fe6557db49bbc7"
      },
      "downloads": -1,
      "filename": "onomaspy-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "037c3408abcf8179e9a761184e788757",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 104016,
      "upload_time": "2021-07-04T03:08:06",
      "upload_time_iso_8601": "2021-07-04T03:08:06.905487Z",
      "url": "https://files.pythonhosted.org/packages/e5/77/bed332772f764dac4c95d898a3eb90a057d92a056c13fd5ee62267501e4e/onomaspy-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}