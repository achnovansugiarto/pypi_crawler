{
  "info": {
    "author": "UCT Prague",
    "author_email": "miroslav.simek@vscht.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# oarepo-enrollment-permissions\n\nWork in progress, do not use yet\n\n[![image][]][1]\n[![image][2]][3]\n[![image][4]][5]\n[![image][6]][7]\n[![image][8]][9]\n\n[image]: https://img.shields.io/travis/oarepo/oarepo-enrollment-permissions.svg\n\n[1]: https://travis-ci.com/oarepo/oarepo-enrollment-permissions\n\n[2]: https://img.shields.io/coveralls/oarepo/oarepo-enrollment-permissions.svg\n\n[3]: https://coveralls.io/r/oarepo/oarepo-enrollment-permissions\n\n[4]: https://img.shields.io/github/tag/oarepo/oarepo-enrollment-permissions.svg\n\n[5]: https://github.com/oarepo/oarepo-enrollment-permissions/releases\n\n[6]: https://img.shields.io/pypi/dm/oarepo-enrollment-permissions.svg\n\n[7]: https://pypi.python.org/pypi/oarepo-enrollment-permissions\n\n[8]: https://img.shields.io/github/license/oarepo/oarepo-enrollment-permissions.svg\n\n[9]: https://github.com/oarepo/oarepo-enrollment-permissions/blob/master/LICENSE\n\nOArepo Enrollment Permissions library is a bridge between oarepo-enrollment library and invenio records. It provides\nmeans to assign user permission to perform actions upon a record (list, update, delete, custom actions).\n\n## Installation\n\n```bash\npip install oarepo-enrollment-permissions\n```\n\n## Usage\n\n1. In your rest configuration, set ``search_class`` class either to\n   ``oarepo_enrollment_permissions.RecordsSearch`` or to a class inheriting\n   from ``oarepo_enrollment_permissions.RecordsSearchMixin``.\n2. If your ``read_permission_factory_imp`` is not ``check_elasticsearch``, be sure to include the result\n   of ``oarepo_enrollment_permissions.read_permission_factory``\n   in your permission factory - see below for details).\n3. Use ``oarepo_enrollment_permissions.update_permission_factory`` as your update permission factory (or call if from\n   your own permission factory - see below for details).\n4. Use ``oarepo_enrollment_permissions.delete_permission_factory`` as your delete permission factory (or call if from\n   your own permission factory - see below for details).\n5. Use ``oarepo_enrollment_permissions.create_permission_factory`` as your create permission factory (or call if from\n   your own permission factory - see below for details).\n\nNow you are all set, no one has an access until granted.\n\n## Granting access\n\nAccess is granted via enrollment process. The following enrollment types are available:\n\n### Collection\n\nGives rights to manipulate with a collection. A collection is defined as records with the same values at a given json\npointer (specified in configuration or passed to the enroll call).\n\nTo grant access to a collection on command-line, call:\n\n```bash\ninvenio oarepo:enroll collection <email> <collection key> actions=read,update,delete,create\n```\n\nIf you want to perform the same in REST API, call:\n\n```json5\n{\n    'enrollment_type': \"collection\",\n    'recipient': \"someone@example.com\",\n    'external_key': 'test',\n    'operation': 'read'\n    // either comma separated or an array\n}\n```\n\n### Single record\n\nYou can grant rights to a single record as well. To do that, invoke:\n\n```bash\ninvenio oarepo:enroll record <email> <record_uuid> actions=read,update,delete\n```\n\nAgain, the same can be achieved via API:\n\n```json5\n{\n    'enrollment_type': \"record\",\n    'recipient': \"someone@example.com\",\n    'external_key': '1234-...-1234',\n    'operation': 'read'\n    // either comma separated or an array\n}\n```\n\n## Listing and Revoking access\n\nSee ``oarepo-enrollment`` for help with these.\n\n## Customizing search/listing permissions\n\nThe provided search class (or mixin) behaves a bit differently than the default invenio RecordsSearch. For anonymous\nusers, the default behaviour is to return empty collection. For authenticated users, enrollments are inspected and are\nused to filter the records.\n\nThis process can be customized via:\n\n```python\nfrom oarepo_enrollment_permissions import RecordsSearch\n\n\nclass MyRecordsSearch(RecordsSearch):\n    class Meta:\n        # put customizations in here\n        pass\n```\n\n### Anonymous user\n\nIf anonymous user should get access to all/some records, specify ``default_anonymous_filter``\nproperty on Meta class.\n\nThis property can be either elasticsearch query (Q, Bool) or it might be a function with a signature\n``default_anonymous_filter(search=<RecordsSearch>, **kwargs) -> Union[Q, Bool]``. The result of the function is passed\nto the default elasticsearch filter.\n\n### Authenticated user\n\nOn ``Meta`` class, invenio supports passing ``default_filter``. For convenience reasons this library\nadds ``default_filter_factory(search=<RecordsSearch>, **kwargs) -> Union[Q, Bool]`` that takes precedence if used.\n\nAt first the library looks at all successful enrollments of the user whose handler contains\n``get_elasticsearch_filter`` class method. Then these handlers are called (with the enrollments as parameters) to get\nfiltering query.\n\nThere might be a ``default_filter`` defined on the search. If it is, the queries from handlers are combined with the\ndefault filter depending on the value of ``default_filter_mode`` ``Meta`` property:\n\n* ``or`` (the default value) - user is granted access if either ``default_filter`` or at least one of handler filters\n  match\n* ``and`` - user is granted access if ``default_filter`` and at least one of handler filters match.\n\nIf there is no ``default_filter`` used, user is granted access to the record if at least one of handler filters match.\n\n## API\n\n### Implementing custom permission-enabled enrollment handler\n\nTo implement a custom permission-enabled handler, add the following methods:\n\n```python\n\nfrom oarepo_enrollments import EnrollmentHandler\nfrom invenio_accounts.models import User\nfrom elasticsearch_dsl import Q\n\n\nclass MyCollectionAccess(EnrollmentHandler):\n    def enroll(self, user: User, role=None, **kwargs) -> None:\n        # no handling required for collections\n        pass\n\n    def revoke(self, user: User, role=None, **kwargs) -> None:\n        # no handling required for collections\n        pass\n\n    def get_elasticsearch_filter(self, search=None, queryset=None, **kwargs):\n        collections = []\n        for enrollment in queryset:\n            collection = enrollment.extra_data.get('collection')\n            if collection:\n                collections.append(collection)\n        if collections:\n            return Q('terms', collections=collections)\n        return None\n\n    def post_filter_elasticsearch_result(self, search=None, result=None, **kwargs):\n        # can be used to hide metadata from results\n        pass\n```\n\n## Configuration\n\n### Collection permissions configuration\n\nTo use builtin collection permissions, you have to specify the path or query for filtering collections. There are two\nways of doing that - global and per-search.\n\n#### Global configuration\n\nIn your config file, set:\n\n```python\nOAREPO_ENROLLMENT_PERMISSIONS_COLLECTION_FILTER = 'collection'\n```\n\nThis can be either path in the document that will be placed to ``Q('terms', <path> = [allowed collections])``\nor it might be a callable ``(search=None, collections=None, **)`` that should return either elasticsearch ``Q``\nor ``Bool``.\n\n#### Local configuration\n\nAlternatively, define the path/callable on Meta:\n\n```python\nfrom oarepo_enrollment_permissions import RecordsSearch\nfrom elasticsearch_dsl import Q\n\n\nclass MyRecordsSearch(RecordsSearch):\n    class Meta:\n        permissions_collection_filter = 'collections'\n\n        # or\n\n        @classmethod\n        def permissions_collection_filter(cls, search=None, collections=None, **kwargs):\n            return Q('terms', collection__key=collections)\n```\n\n### Record permissions configuration\n\nNormally there is no need to override record configuration.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/oarepo/oarepo-enrollment-permissions",
    "keywords": "invenio oarepo user enrollment",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "oarepo-enrollment-permissions",
    "package_url": "https://pypi.org/project/oarepo-enrollment-permissions/",
    "platform": "any",
    "project_url": "https://pypi.org/project/oarepo-enrollment-permissions/",
    "project_urls": {
      "Homepage": "https://github.com/oarepo/oarepo-enrollment-permissions"
    },
    "release_url": "https://pypi.org/project/oarepo-enrollment-permissions/1.0.1/",
    "requires_dist": [
      "wrapt (>=1.11.2)",
      "oarepo-enrollments",
      "pytest ; extra == 'dev'",
      "oarepo[tests] (~=3.3) ; extra == 'dev'",
      "markdown-toc ; extra == 'dev'",
      "pytest ; extra == 'tests'",
      "oarepo[tests] (~=3.3) ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "OArepo Enrollment library for record metadata validation",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8897967,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e18db13e3a55340ab36be8bc96b1d75375282b44fdafb72e6b3f79526035c0bf",
          "md5": "1861f312f80aa78d94a98915ca9d5880",
          "sha256": "393788b55c5ca18ab93e8eb092544e180ee9930effb83e98d6b184586060c24b"
        },
        "downloads": -1,
        "filename": "oarepo_enrollment_permissions-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1861f312f80aa78d94a98915ca9d5880",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18623,
        "upload_time": "2020-12-08T12:00:22",
        "upload_time_iso_8601": "2020-12-08T12:00:22.331199Z",
        "url": "https://files.pythonhosted.org/packages/e1/8d/b13e3a55340ab36be8bc96b1d75375282b44fdafb72e6b3f79526035c0bf/oarepo_enrollment_permissions-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3221a7feb7efece144b401d02becf347591d53322e6bda7c643ff48daea655d0",
          "md5": "31960bbd8df3d0e3b97b8e932e22be1f",
          "sha256": "ab95f769f3446573e34cc1688dc36a6558f3c82e6ad6d51d30b212b4954b4a2e"
        },
        "downloads": -1,
        "filename": "oarepo-enrollment-permissions-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "31960bbd8df3d0e3b97b8e932e22be1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12243,
        "upload_time": "2020-12-08T12:00:23",
        "upload_time_iso_8601": "2020-12-08T12:00:23.448273Z",
        "url": "https://files.pythonhosted.org/packages/32/21/a7feb7efece144b401d02becf347591d53322e6bda7c643ff48daea655d0/oarepo-enrollment-permissions-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b47f6e92fd12c12cdce6130068c35325d1502f8a55150e47f0c8e93f896b6801",
          "md5": "fbecf21ba9efdd129d5b926ace5571c0",
          "sha256": "f19c70d3606d8493c8101c808cd3699a41d1ddbe10b9555806d6337b72df4453"
        },
        "downloads": -1,
        "filename": "oarepo_enrollment_permissions-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbecf21ba9efdd129d5b926ace5571c0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18642,
        "upload_time": "2020-12-14T19:08:17",
        "upload_time_iso_8601": "2020-12-14T19:08:17.234197Z",
        "url": "https://files.pythonhosted.org/packages/b4/7f/6e92fd12c12cdce6130068c35325d1502f8a55150e47f0c8e93f896b6801/oarepo_enrollment_permissions-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77075406a556a9e5727c17e67ecc6b3e89ca646642f74a085619bc0bd4f6b93e",
          "md5": "c0d7be739700811728d24e07c49ecb23",
          "sha256": "3c5338326c84c40550f126e67bcf8203e9f3887158db245a73aee566ff966c85"
        },
        "downloads": -1,
        "filename": "oarepo-enrollment-permissions-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c0d7be739700811728d24e07c49ecb23",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12253,
        "upload_time": "2020-12-14T19:08:18",
        "upload_time_iso_8601": "2020-12-14T19:08:18.213232Z",
        "url": "https://files.pythonhosted.org/packages/77/07/5406a556a9e5727c17e67ecc6b3e89ca646642f74a085619bc0bd4f6b93e/oarepo-enrollment-permissions-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b47f6e92fd12c12cdce6130068c35325d1502f8a55150e47f0c8e93f896b6801",
        "md5": "fbecf21ba9efdd129d5b926ace5571c0",
        "sha256": "f19c70d3606d8493c8101c808cd3699a41d1ddbe10b9555806d6337b72df4453"
      },
      "downloads": -1,
      "filename": "oarepo_enrollment_permissions-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fbecf21ba9efdd129d5b926ace5571c0",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 18642,
      "upload_time": "2020-12-14T19:08:17",
      "upload_time_iso_8601": "2020-12-14T19:08:17.234197Z",
      "url": "https://files.pythonhosted.org/packages/b4/7f/6e92fd12c12cdce6130068c35325d1502f8a55150e47f0c8e93f896b6801/oarepo_enrollment_permissions-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77075406a556a9e5727c17e67ecc6b3e89ca646642f74a085619bc0bd4f6b93e",
        "md5": "c0d7be739700811728d24e07c49ecb23",
        "sha256": "3c5338326c84c40550f126e67bcf8203e9f3887158db245a73aee566ff966c85"
      },
      "downloads": -1,
      "filename": "oarepo-enrollment-permissions-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c0d7be739700811728d24e07c49ecb23",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12253,
      "upload_time": "2020-12-14T19:08:18",
      "upload_time_iso_8601": "2020-12-14T19:08:18.213232Z",
      "url": "https://files.pythonhosted.org/packages/77/07/5406a556a9e5727c17e67ecc6b3e89ca646642f74a085619bc0bd4f6b93e/oarepo-enrollment-permissions-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}