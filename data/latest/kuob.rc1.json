{
  "info": {
    "author": "Mohatb",
    "author_email": "mohatb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: System :: Shells",
      "Topic :: Terminals",
      "Topic :: Utilities"
    ],
    "description": "# kuob\n\nA fork of the awesome project ASCIINEMA Terminal session recorder.\n[kuob.sh](https://kuob.sh).\n\n## Quick intro\n\nkuob lets you easily record terminal sessions and replay\nthem in a terminal as well as in a web browser.\n\nInstall latest version:\n\n    sudo pip3 install kuob\n\nRecord your first session:\n\n    kuob rec first.cast\n\nNow replay it with double speed:\n\n    kuob play -s 2 first.cast\n\nOr with normal speed but with idle time limited to 2 seconds:\n\n    kuob play -i 2 first.cast\n\nYou can pass `-i 2` to `kuob rec` as well, to set it permanently on a\nrecording. Idle time limiting makes the recordings much more interesting to\nwatch. Try it.\n\nIf you want to watch and share it on the web, upload it:\n\n    kuob upload first.cast\n\nThe above uploads it to [kuob.sh](https://kuob.org) instance,\nand prints a secret link you can use to watch your recording in a web\nbrowser.\n\nYou can record and upload in one step by omitting the filename:\n\n    kuob rec\n\nYou'll be asked to confirm the upload when the recording is done. Nothing is\nsent anywhere without your consent.\n\nThese are the basics, but there's much more you can do. The following sections\ncover installation, usage and hosting of the recordings in more detail.\n\n## Installation\n\n### Python package\n\nkuob is available on [PyPI](https://pypi.org/project/kuob/2.0.2/) and can\nbe installed with pip (Python 3 with setuptools required):\n\n    sudo pip3 install kuob\n\nThis is the recommended way of installation, which gives you the latest released\nversion.\n\n## Usage\n\nkuob is composed of multiple commands, similar to `git`, `apt-get` or\n`brew`.\n\nWhen you run `kuob` with no arguments help message is displayed, listing\nall available commands with their options.\n\n### `rec [filename]`\n\n__Record terminal session.__\n\nBy running `kuob rec [filename]` you start a new recording session. The\ncommand (process) that is recorded can be specified with `-c` option (see\nbelow), and defaults to `$SHELL` which is what you want in most cases.\n\nYou can temporarily pause recording of terminal by pressing <kbd>Ctrl+P</kbd>.\nThis is useful when you want to execute some commands during the recording\nsession that should not be captured (e.g. pasting secrets). Resume by pressing\n<kbd>Ctrl+P</kbd> again.\n\nRecording finishes when you exit the shell (hit <kbd>Ctrl+D</kbd> or type\n`exit`). If the recorded process is not a shell then recording finishes when\nthe process exits.\n\nIf the `filename` argument is omitted then (after asking for confirmation) the\nresulting asciicast is uploaded to\n[kuob-server](https://github.com/kuob/kuob-server) (by default to\nkuob.sh), where it can be watched and shared.\n\nIf the `filename` argument is given then the resulting recording (called\n[asciicast](doc/asciicast-v2.md)) is saved to a local file. It can later be\nreplayed with `kuob play <filename>` and/or uploaded to kuob server\nwith `kuob upload <filename>`.\n\n`KUOB_REC=1` is added to recorded process environment variables. This\ncan be used by your shell's config file (`.bashrc`, `.zshrc`) to alter the\nprompt or play a sound when the shell is being recorded.\n\nAvailable options:\n\n* `--stdin` - Enable stdin (keyboard) recording (see below)\n* `--append` - Append to existing recording\n* `--raw` - Save raw STDOUT output, without timing information or other metadata\n* `--overwrite` - Overwrite the recording if it already exists\n* `-c, --command=<command>` - Specify command to record, defaults to $SHELL\n* `-e, --env=<var-names>` - List of environment variables to capture, defaults\n  to `SHELL,TERM`\n* `-t, --title=<title>` - Specify the title of the asciicast\n* `-i, --idle-time-limit=<sec>` - Limit recorded terminal inactivity to max `<sec>` seconds\n* `-y, --yes` - Answer \"yes\" to all prompts (e.g. upload confirmation)\n* `-q, --quiet` - Be quiet, suppress all notices/warnings (implies -y)\n\nStdin recording allows for capturing of all characters typed in by the user in\nthe currently recorded shell. This may be used by a player (e.g.\n[kuob-player](https://github.com/kuob/kuob-player)) to display\npressed keys. Because it's basically a key-logging (scoped to a single shell\ninstance), it's disabled by default, and has to be explicitly enabled via\n`--stdin` option.\n\n### `play <filename>`\n\n__Replay recorded asciicast in a terminal.__\n\nThis command replays given asciicast (as recorded by `rec` command) directly in\nyour terminal.\n\nFollowing keyboard shortcuts are available:\n\n- <kbd>Space</kbd> - toggle pause,\n- <kbd>.</kbd> - step through a recording a frame at a time (when paused),\n- <kbd>Ctrl+C</kbd> - exit.\n\nPlaying from a local file:\n\n    kuob play /path/to/asciicast.cast\n\nPlaying from HTTP(S) URL:\n\n    kuob play https://kuob.sh/a/22124.cast\n    kuob play http://example.com/demo.cast\n\nPlaying from asciicast page URL (requires `<link rel=\"alternate\"\ntype=\"application/x-asciicast\" href=\"/my/ascii.cast\">` in page's HTML):\n\n    kuob play https://kuob.sh/a/22124\n    kuob play http://example.com/blog/post.html\n\nPlaying from stdin:\n\n    cat /path/to/asciicast.cast | kuob play -\n    ssh user@host cat asciicast.cast | kuob play -\n\nPlaying from IPFS:\n\n    kuob play dweb:/ipfs/QmNe7FsYaHc9SaDEAEXbaagAzNw9cH7YbzN4xV7jV1MCzK/ascii.cast\n\nAvailable options:\n\n* `-i, --idle-time-limit=<sec>` - Limit replayed terminal inactivity to max `<sec>` seconds\n* `-s, --speed=<factor>` - Playback speed (can be fractional)\n\n> For the best playback experience it is recommended to run `kuob play` in\n> a terminal of dimensions not smaller than the one used for recording, as\n> there's no \"transcoding\" of control sequences for new terminal size.\n\n### `cat <filename>`\n\n__Print full output of recorded asciicast to a terminal.__\n\nWhile `kuob play <filename>` replays the recorded session using timing\ninformation saved in the asciicast, `kuob cat <filename>` dumps the full\noutput (including all escape sequences) to a terminal immediately.\n\n`kuob cat existing.cast >output.txt` gives the same result as recording via\n`kuob rec --raw output.txt`.\n\n### `upload <filename>`\n\n__Upload recorded asciicast to kuob.sh site.__\n\nThis command uploads given asciicast (recorded by `rec` command) to\nkuob.sh, where it can be watched and shared.\n\n`kuob rec demo.cast` + `kuob play demo.cast` + `kuob upload\ndemo.cast` is a nice combo if you want to review an asciicast before\npublishing it on kuob.sh.\n\n### `auth`\n\n__Link your install ID with your kuob.sh user account.__\n\nIf you want to manage your recordings (change title/theme, delete) at\nkuob.sh you need to link your \"install ID\" with kuob.org user\naccount.\n\nThis command displays the URL to open in a web browser to do that. You may be\nasked to log in first.\n\nInstall ID is a random ID ([UUID\nv4](https://en.wikipedia.org/wiki/Universally_unique_identifier)) generated\nlocally when you run kuob for the first time, and saved at\n`$HOME/.config/kuob/install-id`. Its purpose is to connect local machine\nwith uploaded recordings, so they can later be associated with kuob.sh\naccount. This way we decouple uploading from account creation, allowing them to\nhappen in any order.\n\n> A new install ID is generated on each machine and system user account you use\n> kuob on, so in order to keep all recordings under a single kuob.sh\n> account you need to run `kuob auth` on all of those machines.\n\n> kuob versions prior to 2.0 confusingly referred to install ID as \"API\n> token\".\n\n\n## Configuration file\n\nYou can configure kuob by creating config file at\n`$HOME/.config/kuob/config`.\n\nConfiguration is split into sections (`[api]`, `[record]`, `[play]`). Here's a\nlist of all available options for each section:\n\n```ini\n[api]\n\n; API server URL, default: https://kuob.sh\n; If you run your own instance of kuob-server then set its address here\n; It can also be overriden by setting KUOB_API_URL environment variable\nurl = https://kuob.example.com\n\n[record]\n\n; Command to record, default: $SHELL\ncommand = /bin/bash -l\n\n; Enable stdin (keyboard) recording, default: no\nstdin = yes\n\n; List of environment variables to capture, default: SHELL,TERM\nenv = SHELL,TERM,USER\n\n; Limit recorded terminal inactivity to max n seconds, default: off\nidle_time_limit = 2\n\n; Answer \"yes\" to all interactive prompts, default: no\nyes = true\n\n; Be quiet, suppress all notices/warnings, default: no\nquiet = true\n\n[play]\n\n; Playback speed (can be fractional), default: 1\nspeed = 2\n\n; Limit replayed terminal inactivity to max n seconds, default: off\nidle_time_limit = 1\n\n[notifications]\n\n; Should desktop notifications be enabled, default: yes\nenabled = no\n\n; Custom notification command\n; Environment variable $TEXT contains notification text\ncommand = tmux display-message \"$TEXT\"\n```\n\nA very minimal config file could look like that:\n\n```ini\n[record]\nidle_time_limit = 2\n```\n\nConfig directory location can be changed by setting `$KUOB_CONFIG_HOME`\nenvironment variable.\n\nIf `$XDG_CONFIG_HOME` is set on Linux then kuob uses\n`$XDG_CONFIG_HOME/kuob` instead of `$HOME/.config/kuob`.\n\n> kuob versions prior to 1.1 used `$HOME/.kuob`. If you have it\n> there you should `mv $HOME/.kuob $HOME/.config/kuob`.\n\n\n## Origional ASCIINEMA Authors\n\nDeveloped with passion by [Marcin Kulik](http://ku1ik.com) and great open\nsource [contributors](https://github.com/kuob/kuob/contributors).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://kuob.sh",
    "keywords": "",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kuob",
    "package_url": "https://pypi.org/project/kuob/",
    "platform": "",
    "project_url": "https://pypi.org/project/kuob/",
    "project_urls": {
      "Homepage": "https://kuob.sh"
    },
    "release_url": "https://pypi.org/project/kuob/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a Fork of ASCIINEMA Terminal session recorder",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7000061,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da4815ba7865626cfb16596d53c1ea9ecfb6e16f6d5cb1ce7bef19f8129164a5",
          "md5": "0ba0478d01528b872a9e6c59c2a7e511",
          "sha256": "80794991b75644d48a98bb5019489cc8e159bccbb3183bf4fd7b5aa20593de41"
        },
        "downloads": -1,
        "filename": "kuob-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ba0478d01528b872a9e6c59c2a7e511",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 78452,
        "upload_time": "2020-04-11T15:02:44",
        "upload_time_iso_8601": "2020-04-11T15:02:44.980226Z",
        "url": "https://files.pythonhosted.org/packages/da/48/15ba7865626cfb16596d53c1ea9ecfb6e16f6d5cb1ce7bef19f8129164a5/kuob-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d36af8ee5ab2a5b334fb92c89bdb030ecafd8bf438303d18ffd24640fb1f08d",
          "md5": "3b1df390c6eb9296961ec2cfbbcffa3c",
          "sha256": "633152663e6d38c28a3ac3c548c55422281a024f3611658468d4d391b8706eab"
        },
        "downloads": -1,
        "filename": "kuob-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3b1df390c6eb9296961ec2cfbbcffa3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54357,
        "upload_time": "2020-04-11T15:02:46",
        "upload_time_iso_8601": "2020-04-11T15:02:46.181887Z",
        "url": "https://files.pythonhosted.org/packages/7d/36/af8ee5ab2a5b334fb92c89bdb030ecafd8bf438303d18ffd24640fb1f08d/kuob-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da4815ba7865626cfb16596d53c1ea9ecfb6e16f6d5cb1ce7bef19f8129164a5",
        "md5": "0ba0478d01528b872a9e6c59c2a7e511",
        "sha256": "80794991b75644d48a98bb5019489cc8e159bccbb3183bf4fd7b5aa20593de41"
      },
      "downloads": -1,
      "filename": "kuob-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ba0478d01528b872a9e6c59c2a7e511",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 78452,
      "upload_time": "2020-04-11T15:02:44",
      "upload_time_iso_8601": "2020-04-11T15:02:44.980226Z",
      "url": "https://files.pythonhosted.org/packages/da/48/15ba7865626cfb16596d53c1ea9ecfb6e16f6d5cb1ce7bef19f8129164a5/kuob-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d36af8ee5ab2a5b334fb92c89bdb030ecafd8bf438303d18ffd24640fb1f08d",
        "md5": "3b1df390c6eb9296961ec2cfbbcffa3c",
        "sha256": "633152663e6d38c28a3ac3c548c55422281a024f3611658468d4d391b8706eab"
      },
      "downloads": -1,
      "filename": "kuob-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3b1df390c6eb9296961ec2cfbbcffa3c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 54357,
      "upload_time": "2020-04-11T15:02:46",
      "upload_time_iso_8601": "2020-04-11T15:02:46.181887Z",
      "url": "https://files.pythonhosted.org/packages/7d/36/af8ee5ab2a5b334fb92c89bdb030ecafd8bf438303d18ffd24640fb1f08d/kuob-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}