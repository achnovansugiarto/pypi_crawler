{
  "info": {
    "author": "gogo2464",
    "author_email": "gogo246475@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Natural Language :: English",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!-- GETTING STARTED -->\r\n## Getting Started\r\n\r\nThis is a cryptanalysis tool for exploit developers and ctf players.\r\n\r\nThe name come from pwntools a similar tool to exploit memory corruption vulnerabilities. This software aims to work like pwntools but for cryptanalysis.\r\n\r\nThen this program include a library like pwnlib. And it will expose some command line tools. Like pwntools. This is a rewrite of the python version in rust in order to be able to be fast and portable and usable in the following various languages rust, python, ruby, javascript and kotlin together.\r\n\r\n### Philosophy\r\n\r\nThis tool aims to be professionnal. Not only a learning tool. It is for realistic exploitation and code breaking.\r\n\r\nYou can \"plug-in\" your script to any protocol. Man in the midle as well as blockchain core as well as anything. Example:\r\n  - You are able to use `pypcap` python library to read packets and then `dpkt` python library to parse these and then you can use `cryptatools` to break encryption on these packets. This is why this library is avaible in many bindings such as python.\r\n  - You are able to use `rust-web3` to parse a vulnerable cryptocurrency (shitcoin) blockchain hash tree to steal money using collision attack to forge a signature. See [this reference](https://github.com/mit-dci/tangled-curl/blob/master/vuln-iota.md#steal-money-attack).\r\n\r\nYou can also work on programs obfuscated by encryption such as malware. In this case, you can decipher program data (eg: data contained in a dropper) as well as self-encrypyted code. In this way you can plug cryptatools with your favorite reverse engineering framwork. Eg:\r\n  - Install radare2. Then do `radare2 -AA -i <yourscriptname>.rs <yourmalwaretoreverse>`. If you work with python bindings, `radare2 -AA -i <yourscriptname>.py <yourmalwaretoreverse>`\r\n  - You can also work on extracted code from the malware:\r\n```shell\r\nradare2 <malwaretoreverse>; \r\n=> s sym.encrypted;\r\npr 12345 > ciphertext.bin\r\n```\r\n\r\nWhere 12345 is the size of the encrypted function or code of the malware.\r\n\r\nThe library is very very flexible.\r\n\r\nYou can automatize any task. There is a command line interface.\r\n\r\n### Installation\r\n\r\n### 1-Rust library installation.\r\nInstallation of `cryptatools-core` for rust is same for any OS. In `Cargo.toml`, just write:\r\n```shell\r\n[dependencies]\r\ncryptatools-core = { git = \"https://github.com/gogo2464/cryptatools-rs\", package = 'cryptatools-core' }\r\n```\r\n\r\n### 2-Python binding installation.\r\nTo install the python Bindings you can use pip or build from source:\r\n\r\n### 2.1-Install python Bindings from pip:\r\n\r\nThe name `cryptatools-python3` is the name of the package used to install cryptatools core python bindings. In order to install it, do:\r\n\r\n```\r\npip install cryptatools-python3\r\n```\r\n\r\nIt is updated of 1 subversion on each Pull Request and is then often update by the previous version.\r\n\r\n### 2.2-Build Python Bindings from sources\r\n\r\nIf you are on windows, with powershell do:\r\n```powershell\r\npython -m venv myenv\r\n.\\myenv\\Script\\activate\r\ncargo install uniffi_bindgen\r\npip install setuptools wheel\r\ngit clone https://github.com/gogo2464/cryptatools-rs ;\r\ncd cryptatools-rs\r\npython .\\cryptatools-core\\setup.py bdist_wheel --verbose ;\r\n$wheelFile = Get-ChildItem -Path .\\dist\\ -Recurse -Include * ;\r\npip3 install $wheelFile --force-reinstall ;\r\n```\r\n\r\nIf you are on Linux, do:\r\n```shell\r\nvirtualenv -p python3 myenv\r\nsource myenv/bin/activate\r\ncargo install uniffi_bindgen\r\npip install setuptools wheel\r\ngit clone https://github.com/gogo2464/cryptatools-rs ;\r\ncd cryptatools-rs\r\npython3 ./cryptatools-core/setup.py bdist_wheel --verbose ;\r\npip3 install ./dist/* --force-reinstall ;\r\n```\r\n\r\nIf you are on MacOs, do:\r\n```shell\r\nvirtualenv -p python3 myenv\r\nsource myenv/bin/activate\r\ncargo install uniffi_bindgen\r\npip install setuptools wheel\r\ngit clone https://github.com/gogo2464/cryptatools-rs ;\r\ncd cryptatools-rs\r\npython3 ./cryptatools-core/setup.py bdist_wheel --verbose ;\r\npip3 install ./dist/* --force-reinstall ;\r\n```\r\n\r\n### 3-cryptatools-cli the cli intreface\r\n\r\nCrytptatools command line interface is split into various program in order to follow the Linux philosophy. To install each one, do:\r\n\r\n```shell\r\ngit clone https://github.com/gogo2464/cryptatools-rs/ &&\r\ncargo install --path .\\cryptatools-rs\\cryptatools-cli\\ ;\r\n```\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n<!-- USAGE EXAMPLES -->\r\n## Usage\r\n\r\n```rust\r\n```\r\n\r\ncrypytatools-cli also offers a way to script the library in command line. Do not forget to install each program. See how to install these [here](https://github.com/gogo2464/cryptatools#installation) for more informations.\r\n\r\n`cryptatools-cli-stats` does cryptanalysis statistical attacks.\r\n\r\n```shell\r\ncryptatools-cli-stats frequency-analysis \"123234\" '{\\\"a\\\": [\\\"12\\\"], \\\"b\\\": [\\\"32\\\"], \\\"c\\\": [\\\"34\\\"]}'\r\n```\r\n\r\n`cryptatools-cli-encrypt` uses cryptography algorithm to encrypt data. Obviously you can use it for brute force cryptanalysis attack. But it is not the main philosophy of `cryptatools-rs`.\r\n\r\n```shell\r\n```\r\n\r\nFor more examples, please refer to the [Tutorial](https://github.com/gogo2464/cryptatools-rs/blob/master/TUTORIAL.md) or to the documentation [Documentation](https://gogo2464.github.io/cryptatools-rs/cryptatools_core/).\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n<!-- DOCUMENTATION EXAMPLE -->\r\n## Documentation\r\n\r\n`cryptatools-core` is a well documented project. \r\n\r\nIn order to see the cryptatools documentation. See: [the API documentation](https://gogo2464.github.io/cryptatools-rs/cryptatools_core/)\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n\r\n<!-- CONTRIBUTING -->\r\n## Contributing\r\n\r\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\r\n\r\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag \"enhancement\".\r\nDon't forget to give the project a star! Thanks again!\r\n\r\n1. Document your work. See [the how to make good documentation](https://github.com/gogo2464/cryptatools-rs#1-documentation) chapter.\r\n2. For each method or object implemented, do not forget to make tests with doctest. See [here](https://github.com/gogo2464/cryptatools-rs#2-testing).\r\n3. Create Python binding. See [this link](https://github.com/gogo2464/cryptatools-rs#3-create-python-bindings).\r\n4. Benchmark your work. See [this link](https://github.com/gogo2464/cryptatools-rs#4-benchmarking).\r\n5. Create cli interface. See [This link](https://github.com/gogo2464/cryptatools-rs#5-create-cli).\r\n6. Open PR.\r\n\r\n<!-- DOCUMENTATION EXAMPLE -->\r\n## 1-Documentation\r\n\r\nThe documentation is generated by doctstring with rustdoc. To edit the documentation, go to the code and modify the doctstring after `///`.\r\n\r\nThen, in order to generate documentation from root folder do:\r\n\r\n```shell\r\ncargo doc --all\r\n```\r\n\r\nFell free to view your own doc with\r\n\r\n```\r\ncargo doc --open --all\r\n```\r\n\r\nThis project uses `cargo doc`.\r\n\r\nThe documentation is self-generated on each pull request.\r\n\r\nTo check if the cryptatools documentation has been updated after a merge request, see: [the API documentation](https://gogo2464.github.io/cryptatools-rs/cryptatools_core/).\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n<!-- TESTING EXAMPLES -->\r\n## 2-Testing\r\n\r\nIn order to run unit tests, you MUST be in the directory cryptatools-rs.\r\nRun unit tests with doctests with the command:\r\n\r\n```shell\r\ncargo test --all\r\n```\r\n\r\nUnit test are made with doctests.\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n\r\n## 3-Create Python bindings.\r\n\r\nCryptatools relies on uniffi to provide bindings to Python3. Ensure to provide Python3 bindings before making your Pull Request.\r\n\r\nTo create Python Bindings, edit the file `cryptatools-rs/src/cryptatools.udl`. Edit it to add your newly created object as mentionned in the official uniffi documentation at this address: https://mozilla.github.io/uniffi-rs/udl_file_spec.html.\r\n\r\nThen do not forget to edit the file `cryptatools-rs/cryptatools-core/src/lib.rs` and just before the:\r\n\r\n```\r\nuniffi_macros::include_scaffolding!(\"cryptatools\");\r\n```\r\n\r\nThis step will generate a single python file that you could import directly. Sadly the good pratice you must do to import these is a bit more complicated.\r\n\r\n`cryptatools-rs\\cryptatools-core\\setup.py`\r\n\r\nIn order to import your own crate, create the corresponding python file or folders under `cryptatools-rs\\cryptatools-core\\bindings\\python3\\cryptatools-core\\cryptanalysis\\`. Here you need to import the necessary objects from from `cryptatools_core.python3_bindings`. Example, in the file `cryptatools-rs\\cryptatools-core\\bindings\\python3\\cryptatools-core\\cryptography\\encryption\\monoalphabetic_cipher\\caesar_number.py` we just have written: `from cryptatools_core.python3_bindings import CaesarNumberAlgorithm`.\r\n\r\nOnce this is done, fell free to write unit tests. At least one for each method implemented. The tests are writtenh in the file `cryptatools-rs\\cryptatools-core\\binding-testing\\testing.py`.\r\n\r\nYou are now free to test and compile your code with [the documentation at this link](https://github.com/gogo2464/cryptatools-rs#2-python-binding-installation).\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n<!-- BENCHMARKING EXAMPLE -->\r\n## 4-Benchmarking\r\n\r\nSometimes, a function could sepnd too much time. In this case, you can debug your specific function from the template in the file `benches\\cryptatools_benchmark\\main.rs`.\r\n\r\nThen test your function with:\r\n\r\n```shell\r\ncargo bench\r\n```\r\n\r\nIn the current state of cryptatools, it is not mandatory from a pull request to benchmark all the code. But could be considered as a good improvment.\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n\r\n## 5-Create cli.\r\n\r\nEach feature from cryptatools-core will be implemented to the cli in the folder `cryptatools-cli`. When you will have finish to implement your feature in incryptatools-core and when you have finish your feature in Python bindings, fell free to create the cli of your modifications.\r\n\r\nThen test it with:\r\n\r\n```shell\r\ncargo install --path .\\cryptatools-cli\\ ;\r\n```\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n\r\n\r\n<!-- LICENSE -->\r\n## License\r\n\r\nThis software has a free software (libre) license. The license is GPL3. \r\n\r\nFell free to ask me if you absolutely want to get a double licensing name. Then I could choose.\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n<!-- CONTACT -->\r\n## Contact\r\n\r\ngogo - gogo246475@gmail.com\r\n\r\nProject Link: [https://github.com/gogo2464/cryptatools-rs](https://github.com/gogo2464/cryptatools-rs)\r\n\r\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gogo2464/cryptatools-rs",
    "keywords": "cryptatools",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cryptatools-python3",
    "package_url": "https://pypi.org/project/cryptatools-python3/",
    "platform": null,
    "project_url": "https://pypi.org/project/cryptatools-python3/",
    "project_urls": {
      "Homepage": "https://github.com/gogo2464/cryptatools-rs"
    },
    "release_url": "https://pypi.org/project/cryptatools-python3/0.1.15/",
    "requires_dist": [
      "semver (>=2.13.0)",
      "wheel",
      "semantic-version (==2.9.0)",
      "setuptools",
      "typing-extensions (==4.0.1)",
      "pytest (==7.1.2)",
      "tox (==3.25.1)"
    ],
    "requires_python": "",
    "summary": "Python Binding of the library and cryptanalysis tool 'cryptatools'.",
    "version": "0.1.15",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16148783,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14b748023c9abed847fd44ea6228d6593c7b3837baca5309233eb2f956cc24cb",
          "md5": "5cfacd8926c31367a0622074c7bbd6a9",
          "sha256": "1e171bb87ff48a0688b5aa31dfd42cc855f1ff4c2481fefeae1f4a1e533891b5"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.0-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "5cfacd8926c31367a0622074c7bbd6a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 211855,
        "upload_time": "2022-12-06T17:22:54",
        "upload_time_iso_8601": "2022-12-06T17:22:54.369554Z",
        "url": "https://files.pythonhosted.org/packages/14/b7/48023c9abed847fd44ea6228d6593c7b3837baca5309233eb2f956cc24cb/cryptatools_python3-0.1.0-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe171807f97cbd7efd5808908eed16c4c9fc4224e580ca2f12148da003f75166",
          "md5": "8a6ade144ca4957123895781cbe3c119",
          "sha256": "b1686d21adca38c0bc858225e091748c0bafd0829b02defc1341ac02d230c261"
        },
        "downloads": -1,
        "filename": "cryptatools-python3-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a6ade144ca4957123895781cbe3c119",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 222095,
        "upload_time": "2022-12-06T17:22:58",
        "upload_time_iso_8601": "2022-12-06T17:22:58.824761Z",
        "url": "https://files.pythonhosted.org/packages/fe/17/1807f97cbd7efd5808908eed16c4c9fc4224e580ca2f12148da003f75166/cryptatools-python3-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9964bdcb3ac361a5c930ad8c59017740db954e08f0b91d747a5b020a10921551",
          "md5": "674fe5882ec90f4be8bc87e6956f42e1",
          "sha256": "8b54a6a7fac90dd256cd7abad23d7bff9714b72d8afff819ac5b939d6b179012"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.0.1-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "674fe5882ec90f4be8bc87e6956f42e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 212229,
        "upload_time": "2022-12-06T23:42:14",
        "upload_time_iso_8601": "2022-12-06T23:42:14.241129Z",
        "url": "https://files.pythonhosted.org/packages/99/64/bdcb3ac361a5c930ad8c59017740db954e08f0b91d747a5b020a10921551/cryptatools_python3-0.1.0.1-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7da8bcfceaaff813bd735d8257b6f9cf80c8d066de768936ab2099c2e7850dd5",
          "md5": "5075768780d06c69c2c7d2d5d395e91c",
          "sha256": "dc27ab8bb9d5c86e7c171531627c00a395df1b302d1a0f5fbf4c83f458c514e3"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.11-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "5075768780d06c69c2c7d2d5d395e91c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 216854,
        "upload_time": "2022-12-18T01:51:56",
        "upload_time_iso_8601": "2022-12-18T01:51:56.778453Z",
        "url": "https://files.pythonhosted.org/packages/7d/a8/bcfceaaff813bd735d8257b6f9cf80c8d066de768936ab2099c2e7850dd5/cryptatools_python3-0.1.11-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5637fff8f706cca4f02c39236a0a0f8c4efd1ad9a0a47369869f74b35b31c90c",
          "md5": "5dc1d2edd07bc124bc0eb2f3e0336cf6",
          "sha256": "afc2ca5020189d0a1f8409e4817944355e411444a11cad94525aa74d1d612b34"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.12-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "5dc1d2edd07bc124bc0eb2f3e0336cf6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 217290,
        "upload_time": "2022-12-18T13:28:21",
        "upload_time_iso_8601": "2022-12-18T13:28:21.528531Z",
        "url": "https://files.pythonhosted.org/packages/56/37/fff8f706cca4f02c39236a0a0f8c4efd1ad9a0a47369869f74b35b31c90c/cryptatools_python3-0.1.12-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c61088e7e469cf08ba16b513fa04688d59d612229e799161adc11f597d52169",
          "md5": "0707114711e74caac0e2206df3b6b052",
          "sha256": "1b291be258f54f52b6f49fb94ba98bf6a2f20bbea53d99b43dc9df1178c49082"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.13-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "0707114711e74caac0e2206df3b6b052",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 217276,
        "upload_time": "2022-12-18T14:25:22",
        "upload_time_iso_8601": "2022-12-18T14:25:22.305780Z",
        "url": "https://files.pythonhosted.org/packages/0c/61/088e7e469cf08ba16b513fa04688d59d612229e799161adc11f597d52169/cryptatools_python3-0.1.13-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f9d002fb980cde5c7510322096561a96ec315ee8155ac609f6ec6a1aa637fbc",
          "md5": "0585c24ef1b0f012ee4aceddcfdd43e0",
          "sha256": "57535cd660a6e8c84df0b3f4cb1137c9ad0d48a2df6331074ab16287d3ff079e"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.14-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "0585c24ef1b0f012ee4aceddcfdd43e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 216818,
        "upload_time": "2022-12-18T22:42:43",
        "upload_time_iso_8601": "2022-12-18T22:42:43.071148Z",
        "url": "https://files.pythonhosted.org/packages/9f/9d/002fb980cde5c7510322096561a96ec315ee8155ac609f6ec6a1aa637fbc/cryptatools_python3-0.1.14-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02c86dac893fffe2dadd507e4912607e977da4356d23a503f2199753302e74c5",
          "md5": "258703db267fe3f221d2f9d4ce8f9d3f",
          "sha256": "8aae1380c1e5d46bdf647b4ea84f1f51dcdcb9688bfa4106304cc409e5c4d665"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.15-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "258703db267fe3f221d2f9d4ce8f9d3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 217924,
        "upload_time": "2022-12-19T10:47:08",
        "upload_time_iso_8601": "2022-12-19T10:47:08.665024Z",
        "url": "https://files.pythonhosted.org/packages/02/c8/6dac893fffe2dadd507e4912607e977da4356d23a503f2199753302e74c5/cryptatools_python3-0.1.15-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f82f87ab621600cd43df11ec07029c4676c6c0dcb89d31aeeba8088958a0304",
          "md5": "26bc30cf6432ec770582d9b9ad3133a3",
          "sha256": "8c0d02a5c8300cd62de0bc4fc40feca0f608777d3d054bd901d258d4f01be760"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.3-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "26bc30cf6432ec770582d9b9ad3133a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 213506,
        "upload_time": "2022-12-17T23:35:46",
        "upload_time_iso_8601": "2022-12-17T23:35:46.121237Z",
        "url": "https://files.pythonhosted.org/packages/8f/82/f87ab621600cd43df11ec07029c4676c6c0dcb89d31aeeba8088958a0304/cryptatools_python3-0.1.3-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0fba008304aa4b98e74b3fa7881388e45e8e415da83eb12e1e8de506efb710c",
          "md5": "fa3d1964707e2aa20db1e131bf2d9c32",
          "sha256": "dfda520fb7229f05223d789bb0f4d8b8ede145b72929752dfa93834ac4f43df0"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.4-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "fa3d1964707e2aa20db1e131bf2d9c32",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 213410,
        "upload_time": "2022-12-18T00:50:20",
        "upload_time_iso_8601": "2022-12-18T00:50:20.317326Z",
        "url": "https://files.pythonhosted.org/packages/d0/fb/a008304aa4b98e74b3fa7881388e45e8e415da83eb12e1e8de506efb710c/cryptatools_python3-0.1.4-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fa4208909eb627b2579c8587ea2c1ebd3714b4ae7a43ac9a4d1185d7a88e259",
          "md5": "ca5c46bea94e5b07120823ad3079fa5e",
          "sha256": "c1e36a4e009d0f784029316e7078695339adb9a45ea5ae631addd768f599d67d"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.5-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "ca5c46bea94e5b07120823ad3079fa5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 212955,
        "upload_time": "2022-12-18T00:56:46",
        "upload_time_iso_8601": "2022-12-18T00:56:46.346670Z",
        "url": "https://files.pythonhosted.org/packages/5f/a4/208909eb627b2579c8587ea2c1ebd3714b4ae7a43ac9a4d1185d7a88e259/cryptatools_python3-0.1.5-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1ff9665e6375ed5797802ad48b3b74e19eb09c377a34bd41b0614e3ef04bd5e",
          "md5": "3b6691b469f536a331022131a5829818",
          "sha256": "daa60efbeebb990074994f2ad1f995973905ba03953c194729d2561ba06e0bfd"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.6-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "3b6691b469f536a331022131a5829818",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 213959,
        "upload_time": "2022-12-18T01:03:54",
        "upload_time_iso_8601": "2022-12-18T01:03:54.628921Z",
        "url": "https://files.pythonhosted.org/packages/d1/ff/9665e6375ed5797802ad48b3b74e19eb09c377a34bd41b0614e3ef04bd5e/cryptatools_python3-0.1.6-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1971e11a1c740ba8e01b1afb6875b165f314a2bf3fe41083bf45a57dfb0c3ad5",
          "md5": "ec8f20c3b6a18bc6abbb4bd0a377baa2",
          "sha256": "c01880e7b9ae293b0a96b76299a46a715f2483947694d40ae8592d17909778c4"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.7-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "ec8f20c3b6a18bc6abbb4bd0a377baa2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 213408,
        "upload_time": "2022-12-18T01:11:59",
        "upload_time_iso_8601": "2022-12-18T01:11:59.767910Z",
        "url": "https://files.pythonhosted.org/packages/19/71/e11a1c740ba8e01b1afb6875b165f314a2bf3fe41083bf45a57dfb0c3ad5/cryptatools_python3-0.1.7-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c239843e1bf2abc77ae2690793aa88e9afe08a81cb214553785d41cf5110a749",
          "md5": "afb940e13944fbe4e678aa9237e83370",
          "sha256": "ad3498e720008cece7a83084de1384c0b75a3f3ab2994fe3d4c0009568f84a3a"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.8-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "afb940e13944fbe4e678aa9237e83370",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 214198,
        "upload_time": "2022-12-18T01:22:00",
        "upload_time_iso_8601": "2022-12-18T01:22:00.783444Z",
        "url": "https://files.pythonhosted.org/packages/c2/39/843e1bf2abc77ae2690793aa88e9afe08a81cb214553785d41cf5110a749/cryptatools_python3-0.1.8-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c58c5eded0309b1931ecf5f763f5883e18fec6143b36d21f37c59a7c00a3b0fd",
          "md5": "7214c7e99bb7d45806690bbdc439bca7",
          "sha256": "956208f79143d25c946182936676ff4557047f3a278cceca04f83c02f6674bf3"
        },
        "downloads": -1,
        "filename": "cryptatools_python3-0.1.9-py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "7214c7e99bb7d45806690bbdc439bca7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 214257,
        "upload_time": "2022-12-18T01:28:43",
        "upload_time_iso_8601": "2022-12-18T01:28:43.206456Z",
        "url": "https://files.pythonhosted.org/packages/c5/8c/5eded0309b1931ecf5f763f5883e18fec6143b36d21f37c59a7c00a3b0fd/cryptatools_python3-0.1.9-py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02c86dac893fffe2dadd507e4912607e977da4356d23a503f2199753302e74c5",
        "md5": "258703db267fe3f221d2f9d4ce8f9d3f",
        "sha256": "8aae1380c1e5d46bdf647b4ea84f1f51dcdcb9688bfa4106304cc409e5c4d665"
      },
      "downloads": -1,
      "filename": "cryptatools_python3-0.1.15-py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "258703db267fe3f221d2f9d4ce8f9d3f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 217924,
      "upload_time": "2022-12-19T10:47:08",
      "upload_time_iso_8601": "2022-12-19T10:47:08.665024Z",
      "url": "https://files.pythonhosted.org/packages/02/c8/6dac893fffe2dadd507e4912607e977da4356d23a503f2199753302e74c5/cryptatools_python3-0.1.15-py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}