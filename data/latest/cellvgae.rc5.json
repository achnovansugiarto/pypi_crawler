{
  "info": {
    "author": "David Buterez",
    "author_email": "david.buterez@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CellVGAE\n\nAn unsupervised scRNA-seq analysis workflow with graph attention networks\n\n![](figures/workflow.png)\n\n\n\nCellVGAE uses the connectivity between cells (such as *k*-nearest neighbour graphs or KNN) with gene expression values as node features to learn high-quality cell representations in a lower-dimensional space, with applications in downstream analyses like (density-based) clustering, visualisation, gene set enrichment analysis and others. CellVGAE leverages both the variational graph autoencoder and graph attention networks to offer a powerful and more interpretable machine learning approach. It is implemented in PyTorch using the PyTorch Geometric library.\n\n## Requirements\n\nInstalling CellVGAE with pip will attempt to install PyTorch and PyTorch Geometric, however it is recommended that the appropriate GPU/CPU versions are installed manually beforehand. For Linux:\n\n1. Install PyTorch GPU: \n\n   ```conda install pytorch torchvision torchaudio cudatoolkit=11.1 -c pytorch -c nvidia```\n\n   or PyTorch CPU:  \n\n   ```conda install pytorch torchvision torchaudio cpuonly -c pytorch```\n\n   \n   \n2. Install PyTorch Geometric:  \n\n   `conda install pyg -c pyg -c conda-forge`\n   \n   \n\n3. (Optional) Install Faiss CPU:  \n\n   `conda install -c pytorch faiss-cpu`\n\n   \n\n   Faiss is only required if using the option `--graph_type \"KNN Faiss\"` .  It is a soft dependency as it is not available for some platforms (currently Apple M1). Attempting to use CellVGAE with Faiss without installing it will result in an exception.\n\n   A GPU version of Faiss for CUDA 11.1 is not yet available.\n\n   \n\n4. Install CellVGAE with pip:\n\n   `pip install cellvgae --pre`\n   \n   \n\n5. (Optional) For the attention graph visualisations of Figure 6, `igraph` is required:\n\n   `pip install python-igraph`\n\n\n\n\nIf using the R preprocessing code, we recommend installing the following:\n\n`Seurat 3`, `scran`, `SingleCellExperiment`. `scRNAseq`, `BiocSingular`, `igraph`, `dplyr` and `textshape`.\n\n\n\n## Example use\n\nUsing the example files in this repo (.h5ad file is the same as downloaded by Scanpy 1.8.1):\n\n```bash\npython -m cellvgae --input_gene_expression_path \"example_data/paul15_myeloid_scanpy.h5ad\" --graph_file_path \"example_data/paul15_Faiss_KNN_K3_KHVG2500.txt\" --graph_convolution \"GAT\" --num_hidden_layers 2 --hidden_dims 128 128 --num_heads 3 3 3 3 --dropout 0.4 0.4 0.4 0.4 --latent_dim 50 --epochs 50 --model_save_path \"model_saved_out\"\n```\n\nOther examples are available in `examples/cellvgae_example_scripts.txt`\n\n(also consult the help section below)\n\n\n\n## Usage\n\nInvoke the training script with `python -m cellvgae` with the arguments detailed below:\n\n```\nusage: train [-h] [--input_gene_expression_path INPUT_GENE_EXPRESSION_PATH] [--hvg HVG] [--khvg KHVG] [--graph_type {KNN Scanpy,KNN Faiss,PKNN}] [--k K] [--graph_n_pcs GRAPH_N_PCS]\n             [--graph_metric {euclidean,manhattan,cosine}] [--graph_distance_cutoff_num_stds GRAPH_DISTANCE_CUTOFF_NUM_STDS] [--save_graph] [--raw_counts] [--faiss_gpu]\n             [--hvg_file_path HVG_FILE_PATH] [--khvg_file_path KHVG_FILE_PATH] [--graph_file_path GRAPH_FILE_PATH] [--graph_convolution {GAT,GATv2,GCN}] [--num_hidden_layers {2,3}]\n             [--num_heads [NUM_HEADS [NUM_HEADS ...]]] [--hidden_dims [HIDDEN_DIMS [HIDDEN_DIMS ...]]] [--dropout [DROPOUT [DROPOUT ...]]] [--latent_dim LATENT_DIM] [--loss {kl,mmd}] [--lr LR]\n             [--epochs EPOCHS] [--val_split VAL_SPLIT] [--test_split TEST_SPLIT] [--transpose_input] [--use_linear_decoder] [--decoder_nn_dim1 DECODER_NN_DIM1] [--name NAME] --model_save_path MODEL_SAVE_PATH [--umap] [--hdbscan]\n\nTrain CellVGAE.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --input_gene_expression_path INPUT_GENE_EXPRESSION_PATH\n                        Input gene expression file path.\n  --hvg HVG             Number of HVGs.\n  --khvg KHVG           Number of KHVGs.\n  --graph_type {KNN Scanpy,KNN Faiss,PKNN}\n                        Type of graph.\n  --k K                 K for KNN or Pearson (PKNN) graph.\n  --graph_n_pcs GRAPH_N_PCS\n                        Use this many Principal Components for the KNN (only Scanpy).\n  --graph_metric {euclidean,manhattan,cosine}\n  --graph_distance_cutoff_num_stds GRAPH_DISTANCE_CUTOFF_NUM_STDS\n                        Number of standard deviations to add to the mean of distances/correlation values. Can be negative.\n  --save_graph          Save the generated graph to the output path specified by --model_save_path.\n  --raw_counts          Enable preprocessing recipe for raw counts.\n  --faiss_gpu           Use Faiss on the GPU (only for KNN Faiss).\n  --hvg_file_path HVG_FILE_PATH\n                        HVG file if not using command line options to generate it.\n  --khvg_file_path KHVG_FILE_PATH\n                        KHVG file if not using command line options to generate it. Can be the same file as --hvg_file_path if HVG = KHVG.\n  --graph_file_path GRAPH_FILE_PATH\n                        Graph specified as an edge list (one edge per line, nodes separated by whitespace, not comma), if not using command line options to generate it.\n  --graph_convolution {GAT,GATv2,GCN}\n  --num_hidden_layers {2,3}\n                        Number of hidden layers (must be 2 or 3).\n  --num_heads [NUM_HEADS [NUM_HEADS ...]]\n                        Number of attention heads for each layer. Input is a list that must match the total number of layers = num_hidden_layers + 2 in length.\n  --hidden_dims [HIDDEN_DIMS [HIDDEN_DIMS ...]]\n                        Output dimension for each hidden layer. Input is a list that matches --num_hidden_layers in length.\n  --dropout [DROPOUT [DROPOUT ...]]\n                        Dropout for each layer. Input is a list that must match the total number of layers = num_hidden_layers + 2 in length.\n  --latent_dim LATENT_DIM\n                        Latent dimension (output dimension for node embeddings).\n  --loss {kl,mmd}       Loss function (KL or MMD).\n  --lr LR               Learning rate for Adam.\n  --epochs EPOCHS       Number of training epochs.\n  --val_split VAL_SPLIT\n                        Validation split e.g. 0.1.\n  --test_split TEST_SPLIT\n                        Test split e.g. 0.1.\n  --transpose_input     Specify if inputs should be transposed.\n  --use_linear_decoder  Turn on a neural network decoder, similar to traditional VAEs.\n  --decoder_nn_dim1 DECODER_NN_DIM1\n                        First hidden dimenson for the neural network decoder, if specified using --use_linear_decoder.\n  --name NAME           Name used for the written output files.\n  --model_save_path MODEL_SAVE_PATH\n                        Path to save PyTorch model and output files. Will create the entire path if necessary.\n  --umap                Compute and save the 2D UMAP embeddings of the output node features.\n  --hdbscan             Compute and save different HDBSCAN clusterings.\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davidbuterez/CellVGAE",
    "keywords": "scrnaseq,graph,gnn,dimensionality,reduction,neural",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cellvgae",
    "package_url": "https://pypi.org/project/cellvgae/",
    "platform": "",
    "project_url": "https://pypi.org/project/cellvgae/",
    "project_urls": {
      "Homepage": "https://github.com/davidbuterez/CellVGAE"
    },
    "release_url": "https://pypi.org/project/cellvgae/0.0.1b4/",
    "requires_dist": [
      "torch (>=1.6.0)",
      "umap-learn (>=0.5.1)",
      "hdbscan (>=0.8.27)",
      "seaborn (>=0.11.1)",
      "matplotlib (>=3.3.4)",
      "scanpy (>=1.7.2)",
      "anndata (>=0.7.5)",
      "tqdm (>=4.61.2)",
      "termcolor (>=1.1.0)",
      "numpy (>=1.19.5)",
      "pandas (>=1.2.4)",
      "torch-geometric (>=1.7.0)",
      "scikit-learn (>=0.24.2)",
      "torch-sparse (>=0.6.12)",
      "torch-scatter (>=2.0.8)"
    ],
    "requires_python": "",
    "summary": "CellVGAE uses the connectivity between cells (such as k-nearest neighbour graphs) with gene expression values as node features to learn high-quality cell representations in a lower-dimensional space",
    "version": "0.0.1b4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11995214,
  "releases": {
    "0.0.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5da29a67aec83f3e1777c5cff123ce11d6c1a5d535bfd6a8da847743d217732",
          "md5": "7500c5eb969faca9066dec9fedd3af26",
          "sha256": "1933a13d88741b2a9cc31b62a86c5378ba8f9ddad1f594b29e8f4436b2ff2fba"
        },
        "downloads": -1,
        "filename": "cellvgae-0.0.1b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7500c5eb969faca9066dec9fedd3af26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13095,
        "upload_time": "2021-09-16T22:43:05",
        "upload_time_iso_8601": "2021-09-16T22:43:05.767914Z",
        "url": "https://files.pythonhosted.org/packages/a5/da/29a67aec83f3e1777c5cff123ce11d6c1a5d535bfd6a8da847743d217732/cellvgae-0.0.1b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcb6a534a956cab3523499e682406f45efee060f3af47f18a06af2e515ff31c5",
          "md5": "79c4257f927037285ca3001a9c962999",
          "sha256": "50f0573352d5a16db088955031fef27a856afc844ac32c94992f634fa0a4ce1e"
        },
        "downloads": -1,
        "filename": "cellvgae-0.0.1b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79c4257f927037285ca3001a9c962999",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13087,
        "upload_time": "2021-10-19T19:22:36",
        "upload_time_iso_8601": "2021-10-19T19:22:36.622998Z",
        "url": "https://files.pythonhosted.org/packages/dc/b6/a534a956cab3523499e682406f45efee060f3af47f18a06af2e515ff31c5/cellvgae-0.0.1b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "277b0c42abb5f5bc71776b56c508b80667751dade053c262ac94e0b7063c2965",
          "md5": "bbb55b750f765ffb6e9814988bd45573",
          "sha256": "1d3c7394d6890bae2bf900af3dfb67eaf5ae2163eae89d31988ca877acc24179"
        },
        "downloads": -1,
        "filename": "cellvgae-0.0.1b1.tar.gz",
        "has_sig": false,
        "md5_digest": "bbb55b750f765ffb6e9814988bd45573",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14628,
        "upload_time": "2021-10-19T19:22:38",
        "upload_time_iso_8601": "2021-10-19T19:22:38.802342Z",
        "url": "https://files.pythonhosted.org/packages/27/7b/0c42abb5f5bc71776b56c508b80667751dade053c262ac94e0b7063c2965/cellvgae-0.0.1b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4feb3c58f1160b0e9b2ab4abd1b9ec6df4026a805bd1e7e7d5b7571e1aaa2806",
          "md5": "862f5fe95ae4e3f95ba4d6dfd1ebb21a",
          "sha256": "8f565dbeec326c56a84c854d4da718b17a3e660a8a9731cec0a2e53a6a00ca4d"
        },
        "downloads": -1,
        "filename": "cellvgae-0.0.1b2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "862f5fe95ae4e3f95ba4d6dfd1ebb21a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13300,
        "upload_time": "2021-10-21T10:10:23",
        "upload_time_iso_8601": "2021-10-21T10:10:23.956881Z",
        "url": "https://files.pythonhosted.org/packages/4f/eb/3c58f1160b0e9b2ab4abd1b9ec6df4026a805bd1e7e7d5b7571e1aaa2806/cellvgae-0.0.1b2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6e86f7f9db3a673067e68887cc5db14434fc3115ff464c47fc8d3985ff4b035",
          "md5": "b459a6e4b5a0e428715b6d35742638ea",
          "sha256": "96f2e2da32f141e0429556822cd22685657737bb4eca71b7f2945a958126083c"
        },
        "downloads": -1,
        "filename": "cellvgae-0.0.1b2.tar.gz",
        "has_sig": false,
        "md5_digest": "b459a6e4b5a0e428715b6d35742638ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 102196220,
        "upload_time": "2021-10-21T10:10:52",
        "upload_time_iso_8601": "2021-10-21T10:10:52.884219Z",
        "url": "https://files.pythonhosted.org/packages/a6/e8/6f7f9db3a673067e68887cc5db14434fc3115ff464c47fc8d3985ff4b035/cellvgae-0.0.1b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8a7ec40e4a71c1ebd6b396bb6042bdaa6251bc603ddecf1a0e8acfc9d760fa3",
          "md5": "d4746889f7634672fe141726a5fcee13",
          "sha256": "ca65ff9cf4b6b83b5879ee3329399cbd72cd616da46f355800815b4dbe09df4a"
        },
        "downloads": -1,
        "filename": "cellvgae-0.0.1b3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4746889f7634672fe141726a5fcee13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18424,
        "upload_time": "2021-11-11T11:37:57",
        "upload_time_iso_8601": "2021-11-11T11:37:57.981970Z",
        "url": "https://files.pythonhosted.org/packages/c8/a7/ec40e4a71c1ebd6b396bb6042bdaa6251bc603ddecf1a0e8acfc9d760fa3/cellvgae-0.0.1b3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "691282ea33cc1a7c59456d032954b739a1acc2e07b4ebf05a3770ac8ee4f259c",
          "md5": "6113e7c789fb107dc58190af768842e8",
          "sha256": "26167fd5c6bbdb81fa7ba67e4739be6ee28306cc27c2187d72d8ce4fd3cbee00"
        },
        "downloads": -1,
        "filename": "cellvgae-0.0.1b3.tar.gz",
        "has_sig": false,
        "md5_digest": "6113e7c789fb107dc58190af768842e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 102196148,
        "upload_time": "2021-11-11T11:38:16",
        "upload_time_iso_8601": "2021-11-11T11:38:16.383158Z",
        "url": "https://files.pythonhosted.org/packages/69/12/82ea33cc1a7c59456d032954b739a1acc2e07b4ebf05a3770ac8ee4f259c/cellvgae-0.0.1b3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1b4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d2225e1f954f24ccdc9f6ddb538ba6f758c79e2a17e50abfed92340278c4532",
          "md5": "36046fde6f0ce3d19067ab62f072ae01",
          "sha256": "aacbfa6637ad8eef527a9d466aceec4ea0ac59a889b613ad2eca83ecabd17379"
        },
        "downloads": -1,
        "filename": "cellvgae-0.0.1b4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36046fde6f0ce3d19067ab62f072ae01",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18835,
        "upload_time": "2021-11-11T13:39:10",
        "upload_time_iso_8601": "2021-11-11T13:39:10.380869Z",
        "url": "https://files.pythonhosted.org/packages/9d/22/25e1f954f24ccdc9f6ddb538ba6f758c79e2a17e50abfed92340278c4532/cellvgae-0.0.1b4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52999940cff452bb187aae7c89f57a823112b81547308a68558add2b6d0a6f73",
          "md5": "3328bdb02fee4715ecd4567819d57b87",
          "sha256": "e32c8aae3200a3a1a1c20dfdf0a5c044fa521c5d131841750bc2516f2e5b5293"
        },
        "downloads": -1,
        "filename": "cellvgae-0.0.1b4.tar.gz",
        "has_sig": false,
        "md5_digest": "3328bdb02fee4715ecd4567819d57b87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 102195816,
        "upload_time": "2021-11-11T13:40:16",
        "upload_time_iso_8601": "2021-11-11T13:40:16.654246Z",
        "url": "https://files.pythonhosted.org/packages/52/99/9940cff452bb187aae7c89f57a823112b81547308a68558add2b6d0a6f73/cellvgae-0.0.1b4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d2225e1f954f24ccdc9f6ddb538ba6f758c79e2a17e50abfed92340278c4532",
        "md5": "36046fde6f0ce3d19067ab62f072ae01",
        "sha256": "aacbfa6637ad8eef527a9d466aceec4ea0ac59a889b613ad2eca83ecabd17379"
      },
      "downloads": -1,
      "filename": "cellvgae-0.0.1b4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36046fde6f0ce3d19067ab62f072ae01",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18835,
      "upload_time": "2021-11-11T13:39:10",
      "upload_time_iso_8601": "2021-11-11T13:39:10.380869Z",
      "url": "https://files.pythonhosted.org/packages/9d/22/25e1f954f24ccdc9f6ddb538ba6f758c79e2a17e50abfed92340278c4532/cellvgae-0.0.1b4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52999940cff452bb187aae7c89f57a823112b81547308a68558add2b6d0a6f73",
        "md5": "3328bdb02fee4715ecd4567819d57b87",
        "sha256": "e32c8aae3200a3a1a1c20dfdf0a5c044fa521c5d131841750bc2516f2e5b5293"
      },
      "downloads": -1,
      "filename": "cellvgae-0.0.1b4.tar.gz",
      "has_sig": false,
      "md5_digest": "3328bdb02fee4715ecd4567819d57b87",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 102195816,
      "upload_time": "2021-11-11T13:40:16",
      "upload_time_iso_8601": "2021-11-11T13:40:16.654246Z",
      "url": "https://files.pythonhosted.org/packages/52/99/9940cff452bb187aae7c89f57a823112b81547308a68558add2b6d0a6f73/cellvgae-0.0.1b4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}