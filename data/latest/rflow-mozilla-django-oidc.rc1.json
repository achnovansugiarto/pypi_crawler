{
  "info": {
    "author": "Tasos Katsoulas, John Giannelos",
    "author_email": "akatsoulas@mozilla.com, jgiannelos@mozilla.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "===================\nmozilla-django-oidc\n===================\n\n.. image:: https://badge.fury.io/py/mozilla-django-oidc.svg\n   :target: https://badge.fury.io/py/mozilla-django-oidc\n\n.. image:: https://travis-ci.org/mozilla/mozilla-django-oidc.svg?branch=master\n   :target: https://travis-ci.org/mozilla/mozilla-django-oidc\n\n.. image:: https://codecov.io/gh/mozilla/mozilla-django-oidc/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/mozilla/mozilla-django-oidc\n\n.. image:: https://circleci.com/gh/mozilla/mozilla-django-oidc/tree/master.svg?style=svg\n   :target: https://circleci.com/gh/mozilla/mozilla-django-oidc/tree/master\n\nA lightweight authentication and access management library for integration with OpenID Connect enabled authentication services.\n\n\nDocumentation\n-------------\n\nThe full documentation is at `<https://mozilla-django-oidc.readthedocs.io>`_.\n\n\nDesign principles\n-----------------\n\n* Keep it as minimal/lightweight as possible\n* Store as few authn/authz artifacts as possible\n* Allow custom functionality by overriding the authentication backend\n* Mainly support OIDC authorization code flow\n* Allow shipping Mozilla-centric authn/authz features\n* Test against all supported Python/Django version\n* E2E tested and audited by `Mozilla InfoSec <https://infosec.mozilla.org/>`_\n\n\nRunning Unit Tests\n-------------------\n\nUse ``tox`` to run as many different versions of Python you have. If you\ndon't have ``tox`` installed (and executable) already you can either\ninstall it in your system Python or `<https://pypi.python.org/pypi/pipsi>`_.\nOnce installed, simply execute in the project root directory.\n\n.. code-block:: shell\n\n    $ tox\n\n``tox`` will do the equivalent of installing virtual environments for every\ncombination mentioned in the ``tox.ini`` file. If your system, for example,\ndoesn't have ``python3.4`` those ``tox`` tests will be skipped.\n\nFor a faster test-rinse-repeat cycle you can run tests in a specific\nenvironment with a specific version of Python and specific version of\nDjango of your choice. Here is such an example:\n\n\n.. code-block:: shell\n\n    $ virtualenv -p /path/to/bin/python3.5 venv\n    $ source venv\n    (venv) $ pip install -r requirements/requirements_dev.txt\n    (venv) $ DJANGO_SETTINGS_MODULE=tests.settings django-admin.py test\n\nMeasuring code coverage, continuing the steps above:\n\n.. code-block:: shell\n\n    (venv) $ pip install coverage\n    (venv) $ DJANGO_SETTINGS_MODULE=tests.settings coverage run --source mozilla_django_oidc `which django-admin.py` test\n    (venv) $ coverage report\n    (venv) $ coverage html\n    (venv) $ open htmlcov/index.html\n\nLocal development\n-----------------\n\nThe local development setup is based on Docker so you need the following installed in your system:\n\n* `docker`\n* `docker-compose`\n\nYou will also need to edit your ``hosts`` file to resolve ``testrp`` and ``testprovider`` hostnames to ``127.0.0.1``.\n\nRunning test services\n=====================\n\nTo run the `testrp` and `testprovider` instances run the following:\n\n.. code-block:: shell\n\n   (venv) $ docker-compose up -d testprovider testrp\n\nThen visit the testing django app on: ``http://testrp:8081``.\n\nThe library source code is mounted as a docker volume and source code changes are reflected directly in.\nIn order to test a change you need to restart the ``testrp`` service.\n\n.. code-block:: shell\n\n   (venv) $ docker-compose stop testrp\n   (venv) $ docker-compose up -d testrp\n\nRunning integration tests\n=========================\n\nIntegration tests are mounted as a volume to the docker containers. Tests can be run using the following command:\n\n.. code-block:: shell\n\n   (venv) $ docker-compose run --service-ports testrunner\n\nLinting\n-------\n\nAll code is checked with `<https://pypi.python.org/pypi/flake8>`_ in\ncontinuous integration. To make sure your code still passes all style guides\ninstall ``flake8`` and check:\n\n.. code-block:: shell\n\n    $ flake8 mozilla_django_oidc tests\n\n.. note::\n\n    When you run ``tox`` it also does a ``flake8`` run on the main package\n    files and the tests.\n\nYou can also run linting with ``tox``:\n\n.. code-block:: shell\n\n    $ tox -e lint\n\n\nReleasing a new version\n------------------------\n\n``mozilla-django-oidc`` releases are hosted in `PyPI <https://pypi.python.org/pypi/mozilla-django-oidc>`_.\nHere are the steps you need to follow in order to push a new release:\n\n* Make sure that ``HISTORY.rst`` is up-to-date focusing mostly on backwards incompatible changes.\n\n  Security vulnerabilities should be clearly marked in a \"Security issues\" section along with\n  a level indicator of:\n\n  * High: vulnerability facilitates data loss, data access, impersonation of admin, or allows access\n    to other sites or components\n\n    Users should upgrade immediately.\n\n  * Medium: vulnerability endangers users by sending them to malicious sites or stealing browser\n    data.\n\n    Users should upgrade immediately.\n\n  * Low: vulnerability is a nuissance to site staff and/or users\n\n    Users should upgrade.\n\n* Bump the project version and create a commit for the new version.\n\n  * You can use ``bumpversion`` for that. It is a tool to automate this procedure following the `semantic versioning scheme <http://semver.org/>`_.\n\n    * For a patch version update (eg 0.1.1 to 0.1.2) you can run ``bumpversion patch``.\n    * For a minor version update (eg 0.1.0 to 0.2.0) you can run ``bumpversion minor``.\n    * For a major version update (eg 0.1.0 to 1.0.0) you can run ``bumpversion major``.\n\n* Create a `signed tag <https://git-scm.com/book/tr/v2/Git-Tools-Signing-Your-Work>`_ for that version\n\n  Example::\n\n      git tag -s 0.1.1 -m \"Bump version: 0.1.0 to 0.1.1\"\n\n* Push the signed tag to Github\n\n  Example::\n\n      git push origin 0.1.1\n\nThe release is pushed automatically to PyPI using a travis deployment hook on every new tag.\n\n\nLicense\n-------\n\nThis software is licensed under the MPL 2.0 license. For more info check the LICENSE file.\n\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n2.0.0 (2021-07-27)\n==================\n\n* Make `get_or_create_user` compatible with custom scope configuration\n  by moving scope specific code to `describe_user_by_claims`\n  Thanks `@cfra <https://github.com/cfra>`_\n* Add support for Django 3.2\n  Thanks `@jannh <https://github.com/jannh>`_\n* Add configuration to opt in logout using GET\n* Fix url encoding using escaped space characters\n* Pass email as named argument in create_user\n* Do not fail if JWK does not have a key ID\n  Thanks `@cfra <https://github.com/cfra>`_\n* Update middleware init to configure settings \n  Thanks `@dreynolds <https://github.com/dreynolds>`_\n* Add SessionAuthentication to DRF auth class\n  Thanks `@SpyTec <https://github.com/SpyTec>`_\n  \nBackwards-incompatible changes:\n\n* Drop Django 1.x support\n* Drop Python2 support\n\n\n1.2.4 (2020-08-19)\n==================\n\n* Fix error in README.rst\n  Thanks `@der-gabe <https://github.com/der-gabe>`_\n* Fix JWKS handling when the same `kid` value is used across JWKs with\n  different `alg` specified\n  Thanks `@davidjb <https://github.com/davidjb>`_\n* Support regex patterns in ``OIDC_EXEMPT_URLS``, to allow exempting session refreshes in\n  ``SessionMiddleware`` for URLs matching the pattern\n  Thanks `@jwhitlock <https://github.com/jwhitlock>`_\n* Move nonce outside of add_state_and_noce_to_session method.\n* Change log level to info for the add_state_and_nonce_to_session.\n* Session save/load management\n  Thanks `@Flor1an-dev <https://github.com/Flor1an-dev>`_\n* Allow multiple parallel login sessions\n  Thanks `@istreeter <https://github.com/istreeter>`_\n\n.. _`@jwhitlock`: https://github.com/jwhitlock\n\n1.2.3 (2020-01-02)\n===================\n\n* Add support for Django 3.x\n  Thanks `@jaap3 <https://github.com/jaap3>`_\n* Use new E2E testing images from mozilla namespace\n* Remove support for EOL'ed Django versions\n\n1.2.2 (2019-04-18)\n===================\n\n* Add Mozilla code of conduct\n* Allow overriding OIDC settings per class\n\n1.2.1 (2019-01-22)\n===================\n\n* Make `verify_claims` compatible with custom scope configuration.\n\n1.2.0 (2019-01-09)\n==================\n\n* Improve travis automation for PyPI releases\n* Allow basic auth for OIDC token endpoint requests\n  Thanks `@anttipalola <https://github.com/anttipalola>`_\n* Replace phantomjs with firefox headless for e2e testing\n* Add default email verification claim check\n  Thanks `@kerrermanisNL <https://github.com/kerrermanisNL>`_\n* Remove compatibility code for unsupported Django versions\n* Add settings to control redirect behavior\n  Thanks `@chrisbrantley <https://github.com/chrisbrantley>`_\n\n1.1.2 (2018-08-24)\n===================\n\n* Fix JWKS handling when OP returns multiple keys\n  Thanks `@JustinAzoff <https://github.com/JustinAzoff>`_\n\n\n1.1.1 (2018-08-09)\n===================\n\n* Fix `is_safe_url` on Django 2.1\n* Fix signature in `authenticate` method to be compatible with Django 2.1\n* Remove legacy code for unsupported Django < 1.11\n  Thanks `@SirTyson <https://github.com/SirTyson>`_\n\n\n1.1.0 (2018-08-02)\n===================\n\n* Installation doc fixes\n  Thanks `@mklan <https://github.com/mklan>`_\n* Drop support for unsupported Django 1.8 and Python 3.3.\n* Refactor authentication backend to make it easier to extend\n  Required by DRF support feature.\n* Add DRF support\n  Thanks `@anlutro <https://github.com/anlutro>`_\n* Improve local docker environment setup\n* Add flag to allow using unsecured tokens\n* Allow using JWK with optional ``alg``\n  Thanks `@Algogator <https://github.com/Algogator>`_\n\n\n1.0.0 (2018-05-09)\n===================\n\n* Add OIDC_AUTHENTICATION_CALLBACK_URL as a new configuration parameter\n* Fail earlier when JWS algorithm does not OIDC_RP_SIGN_ALGO.\n  Thanks `@anlutro <https://github.com/anlutro>`_\n* RS256 verification through ``settings.OIDC_OP_JWKS_ENDPOINT``\n  Thanks `@GermanoGuerrini <https://github.com/GermanoGuerrini>`_\n* Refactor OIDCAuthenticationBackend so that token retrieval methods can be overridden in a subclass when you need to.\n\nBackwards-incompatible changes:\n\n* ``OIDC_OP_LOGOUT_URL_METHOD`` takes a ``request`` parameter now.\n* Changed name of ``RefreshIDToken`` middleware to ``SessionRefresh``.\n\n\n.. _`@anlutro`: https://github.com/anlutro\n\n0.6.0 (2018-03-27)\n===================\n\n* Add e2e tests and automation\n* Add caching for exempt URLs\n* Fix logout when session refresh fails\n\n0.5.0 (2018-01-10)\n===================\n\n* Add Django 2.0 support\n* Fix tox configuration\n\nBackwards-incompatible changes:\n\n* Drop Django 1.10 support\n\n0.4.2 (2017-11-29)\n===================\n\n* Fix OIDC_USERNAME_ALGO to actually load dotted import path of callback.\n* Add verify_claims method for advanced authentication checks\n\n0.4.1 (2017-10-25)\n===================\n\n* Send bytes to josepy. Fixes python3 support.\n\n0.4.0 (2017-10-24)\n===================\n\nSecurity issues:\n\n* **High**: Replace python-jose with josepy and use pyca/cryptography instead of pycrypto (CVE-2013-7459).\n\nBackwards-incompatible changes:\n\n* ``OIDC_RP_IDP_SIGN_KEY`` no longer uses the JWK json as ``dict`` but PEM or DER keys instead.\n\n\n0.3.2 (2017-10-03)\n===================\n\nFeatures:\n\n* Implement RS256 verification\n  Thanks `@puiterwijk <https://github.com/puiterwijk>`_\n\nBugs:\n\n* Use ``settings.OIDC_VERIFY_SSL`` also when validating the token.\n  Thanks `@GermanoGuerrini <https://github.com/GermanoGuerrini>`_\n* Make OpenID Connect scope configurable.\n  Thanks `@puiterwijk <https://github.com/puiterwijk>`_\n* Add path host injection unit-test (#171)\n* Revisit OIDC_STORE_{ACCESS,ID}_TOKEN config entries\n* Allow configuration of additional auth parameters\n\n\n.. _`@GermanoGuerrini`: https://github.com/GermanoGuerrini\n.. _`@puiterwijk`: https://github.com/puiterwijk\n\n0.3.1 (2017-06-15)\n===================\n\nSecurity issues:\n\n* **Medium**: Sanitize next url for authentication view\n\n0.3.0 (2017-06-13)\n===================\n\nSecurity issues:\n\n* **Low**: Logout using POST not GET (#126)\n\nBackwards-incompatible changes:\n\n* The ``settings.SITE_URL`` is no longer used. Instead the absolute URL is\n  derived from the request's ``get_host()``.\n* Only log out by HTTP POST allowed.\n\nBugs:\n\n* Test suite maintenance (#108, #109, #142)\n\n0.2.0 (2017-06-07)\n===================\n\nBackwards-incompatible changes:\n\n* Drop support for Django 1.9 (#130)\n\n  If you're using Django 1.9, you should update Django first.\n\n* Move middleware to ``mozilla_django_oidc.middleware`` and\n  change it to use authentication endpoint with ``prompt=none`` (#94)\n\n  You'll need to update your ``MIDDLEWARE_CLASSES``/``MIDDLEWARE``\n  setting accordingly.\n\n* Remove legacy ``base64`` handling of OIDC secret. Now RP secret\n  should be plaintext.\n\nFeatures:\n\n* Add support for Django 1.11 and Python 3.6 (#85)\n* Update middleware to work with Django 1.10+ (#90)\n* Documentation updates\n* Rework test infrastructure so it's tox-based (#100)\n\nBugs:\n\n* always decode verified token before ``json.load()`` (#116)\n* always redirect to logout_url even when logged out (#121)\n* Change email matching to be case-insensitive (#102)\n* Allow combining OIDCAuthenticationBackend with other backends (#87)\n* fix is_authenticated usage for Django 1.10+ (#125)\n\n0.1.0 (2016-10-12)\n===================\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mozilla/mozilla-django-oidc",
    "keywords": "mozilla-django-oidc",
    "license": "MPL 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rflow-mozilla-django-oidc",
    "package_url": "https://pypi.org/project/rflow-mozilla-django-oidc/",
    "platform": null,
    "project_url": "https://pypi.org/project/rflow-mozilla-django-oidc/",
    "project_urls": {
      "Homepage": "https://github.com/mozilla/mozilla-django-oidc"
    },
    "release_url": "https://pypi.org/project/rflow-mozilla-django-oidc/2.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A lightweight authentication and access management library for integration with OpenID Connect enabled authentication services.",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13368602,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5040c4b1fbdf64a7b66afcac2fb3191e4c5b0d2cafd9b19a42b23c48e00b195",
          "md5": "34544b71c99e14acd1f49206679f9e9a",
          "sha256": "db23ac5639aca6e7dcbc5baf75046f6a7170a76a64b2b0558439b2fb0978d4fb"
        },
        "downloads": -1,
        "filename": "rflow-mozilla-django-oidc-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "34544b71c99e14acd1f49206679f9e9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32143,
        "upload_time": "2022-04-01T03:48:30",
        "upload_time_iso_8601": "2022-04-01T03:48:30.824884Z",
        "url": "https://files.pythonhosted.org/packages/d5/04/0c4b1fbdf64a7b66afcac2fb3191e4c5b0d2cafd9b19a42b23c48e00b195/rflow-mozilla-django-oidc-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5040c4b1fbdf64a7b66afcac2fb3191e4c5b0d2cafd9b19a42b23c48e00b195",
        "md5": "34544b71c99e14acd1f49206679f9e9a",
        "sha256": "db23ac5639aca6e7dcbc5baf75046f6a7170a76a64b2b0558439b2fb0978d4fb"
      },
      "downloads": -1,
      "filename": "rflow-mozilla-django-oidc-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "34544b71c99e14acd1f49206679f9e9a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32143,
      "upload_time": "2022-04-01T03:48:30",
      "upload_time_iso_8601": "2022-04-01T03:48:30.824884Z",
      "url": "https://files.pythonhosted.org/packages/d5/04/0c4b1fbdf64a7b66afcac2fb3191e4c5b0d2cafd9b19a42b23c48e00b195/rflow-mozilla-django-oidc-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}