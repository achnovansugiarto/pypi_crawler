{
  "info": {
    "author": "",
    "author_email": "\"A. Tikhonov\" <17@itishka.org>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dataclass_factory\n\n[![PyPI version](https://badge.fury.io/py/dataclass-factory.svg)](https://badge.fury.io/py/dataclass-factory)\n[![Build Status](https://travis-ci.org/Tishka17/dataclass_factory.svg?branch=master)](https://travis-ci.org/Tishka17/dataclass_factory)\n[![downloads](https://img.shields.io/pypi/dm/dataclass_factory.svg)](https://pypistats.org/packages/dataclass_factory)\n[![license](https://img.shields.io/github/license/Tishka17/dataclass_factory.svg)](https://github.com/Tishka17/dataclass_factory/blob/master/LICENSE)\n\n**dataclass_factory** is a modern way to convert dataclasses or other objects to and from more common types like dicts\n\n## Help\n\nSee [documentation](https://dataclass-factory.readthedocs.io/) for more details.\n\n## TL;DR\n\nInstall\n```bash\npip install dataclass_factory\n```\n\nUse\n```python\nfrom dataclasses import dataclass\nimport dataclass_factory\n\n\n@dataclass\nclass Book:\n    title: str\n    price: int\n    author: str = \"Unknown author\"\n\n\ndata = {\n    \"title\": \"Fahrenheit 451\",\n    \"price\": 100,\n}\n\nfactory = dataclass_factory.Factory()\nbook: Book = factory.load(data, Book)  # Same as Book(title=\"Fahrenheit 451\", price=100)\nserialized = factory.dump(book) \n``` \n\n## Requirements\n\n* python >= 3.6\n\nYou can use `dataclass_factory` with python 3.6 and `dataclass` library installed from pip. \n\nOn python 3.7 it has no external dependencies outside of the Python standard library.\n\n## Advantages\n\n* No schemas or configuration needed for simple cases. Just create `Factory` and call `load`/`dump` methods\n* Speed. It is up to 10 times faster than `marshmallow` and `dataclasses.asdict` (see [benchmarks](benchmarks))\n* Automatic name style conversion (e.g. `snake_case` to `CamelCase`)\n* Automatic skipping of \"internal use\" fields (with leading underscore)\n* Enums, typed dicts, tuples and lists are supported out of the box\n* Unions and Optionals are supported without need to define them in schema\n* Generic dataclasses can be automatically parsed as well\n* Cyclic-referenced structures (such as linked-lists or trees) also can be converted\n* Validators, custom parser steps are supported.\n* Multiple schemas for single type can be provided to support different ways of parsing of the same type\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "adaptix",
    "package_url": "https://pypi.org/project/adaptix/",
    "platform": null,
    "project_url": "https://pypi.org/project/adaptix/",
    "project_urls": {
      "Bug Tracker": "https://github.com/tishka17/dataclass_factory/issues",
      "Homepage": "https://github.com/tishka17/dataclass_factory"
    },
    "release_url": "https://pypi.org/project/adaptix/3.0.0a1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "An utility class for creating instances of dataclasses",
    "version": "3.0.0a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16915795,
  "releases": {
    "3.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2e836649d84750f0e8b7e5cde9303a2230561b77a18caedacd0685ebe2dca67",
          "md5": "cffc8efa9d5ac796a5ecd2f636d03dc2",
          "sha256": "a05255d5529529da56c4af99b9882a129d6558a484e57d32b33afe29c37eab35"
        },
        "downloads": -1,
        "filename": "adaptix-3.0.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cffc8efa9d5ac796a5ecd2f636d03dc2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 83008,
        "upload_time": "2023-02-18T15:50:39",
        "upload_time_iso_8601": "2023-02-18T15:50:39.327516Z",
        "url": "https://files.pythonhosted.org/packages/e2/e8/36649d84750f0e8b7e5cde9303a2230561b77a18caedacd0685ebe2dca67/adaptix-3.0.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2e836649d84750f0e8b7e5cde9303a2230561b77a18caedacd0685ebe2dca67",
        "md5": "cffc8efa9d5ac796a5ecd2f636d03dc2",
        "sha256": "a05255d5529529da56c4af99b9882a129d6558a484e57d32b33afe29c37eab35"
      },
      "downloads": -1,
      "filename": "adaptix-3.0.0a1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cffc8efa9d5ac796a5ecd2f636d03dc2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 83008,
      "upload_time": "2023-02-18T15:50:39",
      "upload_time_iso_8601": "2023-02-18T15:50:39.327516Z",
      "url": "https://files.pythonhosted.org/packages/e2/e8/36649d84750f0e8b7e5cde9303a2230561b77a18caedacd0685ebe2dca67/adaptix-3.0.0a1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}