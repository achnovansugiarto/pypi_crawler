{
  "info": {
    "author": "ducaale",
    "author_email": "sharaf.13@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Nyan\n\n[![PyPI version](https://badge.fury.io/py/nyan.svg)](https://badge.fury.io/py/nyan)\n\nNyan - a fork of [Python Play](https://github.com/replit/play) - is an open-source code library for the Python programming language that makes it as easy as possible to start making games. Here's the code to make a simple game using Nyan:\n\n```python\nimport nyan\n\ncat = nyan.new_text('=^.^=', font_size=70)\n\n@nyan.repeat_forever\nasync def move_cat():\n    cat.x = nyan.random_number(-200, 200)\n    cat.y = nyan.random_number(-200, 200)\n    cat.color = nyan.random_color()\n    \n    cat.show()\n\n    await nyan.sleep(seconds=0.4)\n\n    cat.hide()\n\n    await nyan.sleep(seconds=0.4)\n\n@cat.when_clicked\ndef win_function():\n    cat.show()\n    cat.text = 'You won!'\n\nnyan.start_program()\n```\n\nThe code above makes a game where you have to click the cat to win:\n\n![Clicking a cat game](example.gif)\n\nNyan is an excellent choice for beginner programmers to get started with graphics programming. It was designed to have similar commands and simplicity to [MIT's Scratch](https://scratch.mit.edu) and is distinguished from such projects as Pygame, Arcade, or Pygame Zero because of its lack of boiler plate code, its easy-to-understand plain-english commands, and intuitive API.\n\n# How to install Nyan\n\nMake sure that you have Python 3.7 or greater. Run the following command in your terminal:\n```\npip install nyan\n```\n\n# How to use Nyan\n\nAll Nyan programs start with `import nyan` and end with `nyan.start_program()`, like this:\n\n```python\nimport nyan # this is the first line in the program\n\n\n\nnyan.start_program() # this is the last line in the program\n```\n\nAll other commands go between those two commands.\n\n## Commands\n\nThe rest of this document is divided into the following sections:\n\n- [Basic Commands](#basic-commands) - Getting graphics, shapes, and text on the screen. Also changing the backdrop.\n- [Animation and Control Commands](#animation-and-control-commands) - Animating and controlling graphics, shapes, and text.\n- [Sprite Commands](#sprite-commands) - Controlling sprites.\n- [Mouse Commands](#mouse-commands) - Detecting mouse actions (clicks, movement).\n- [Keyboard Commands](#keyboard-commands) - Detecting keyboard actions.\n- [Audio Commands](#audio-commands) - Playing sounds and music.\n- [Other Useful Commands](#other-useful-commands) - General commands.\n- [Packaging Nyan Programs](#packaging-nyan-programs) - Creating an executable that can be shared with other people.\n\n## Basic Commands\n\nTo get images or text on the screen, use the following commands. (Copy and paste the code below to try it out.)\n\n#### `nyan.new_rect()`\n```python\nbox = nyan.new_rect(\n        color='black',\n        x=0,\n        y=0,\n        width=100,\n        height=200,\n        border_color=\"light blue\",\n        border_width=10\n    )\n```\n\nThis will put a tall, black Rectangle in the middle of the screen.\n\nIf you want to change where the image is on the screen, try changing `x=0` (horizontal position) and `y=0` (vertical position). Just like Scratch, the middle of the screen is x=0, y=0. Increasing x moves the image right and decreasing x moves the image left. Likeswise, increasing y moves the image up and decreasing y moves the image down. You can also change the color by changing `'black'` to another color name, like `'orange'`.\n\n#### `nyan.new_image()`\n```python\ncharacter = nyan.new_image(\n        image='character.png', \n        x=0, \n        y=0, \n        size=100\n    )\n```\n\nThis will place an image in the middle of the screen. Make sure you have a file named `character.png` in a folder named `assets` inside your project for the code above to work. You can find images online at sites like [OpenGameArt](https://opengameart.org/), or you can make your own using an online sprite editor like [Piskel](https://www.piskelapp.com/).\n\n#### `nyan.new_text()`\n```python\ngreeting = nyan.new_text(\n        text='hi there', \n        x=0, \n        y=0, \n        font=None, \n        font_size=50, \n        color='black'\n    )\n```\n\nThis will put some text on the screen.\n\nIf you want to change the font, you'll need a font file (usually named something like `Arial.ttf`) in your assets folder. Then you can change `font=None` to `font='Arial.ttf'`. You can find font files at sites like [DaFont](https://www.dafont.com).\n\n#### `nyan.new_circle()`\n```python\nball = nyan.new_circle(\n        color='black', \n        x=0, \n        y=0, \n        radius=100, \n        border_color=\"light blue\", \n        border_width=10\n    )\n```\n\nThis will put a black circle in the middle of the screen.\n\n#### `nyan.set_backdrop()`\nYou can change the background color with the `nyan.set_backdrop()` command:\n\n```python\nnyan.set_backdrop('light blue')\n```\n\nThere are [lots of named colors to choose from](https://upload.wikimedia.org/wikipedia/commons/2/2b/SVG_Recognized_color_keyword_names.svg). Additionally, if you want to set colors by RGB (Red Green Blue) values, you can do that like this:\n\n```python\n# Sets the background to white. Each number can go from 0 to 255\nnyan.set_backdrop((255, 255, 255))\n```\n\nAnywhere you can set a color in Nyan, you can do it using a named color like `'red'` or an RGB value above like `(255, 255, 255)` or even an RGBA value like `(0, 0, 0, 127)` (the fourth number is transparency from 0 to 255).\n\n## Animation and Control Commands\n\n#### `@nyan.repeat_forever`\nTo make things move around, you can start by using `@nyan.repeat_forever`, like this:\n\n```python\ncat = nyan.new_text('=^.^=')\n\n@nyan.repeat_forever\ndef do():\n    cat.turn(10)  \n```    \n\nThe above code will make the cat turn around forever. Sprites have other commands that you can see in the next section called Sprite Commands.\n\n#### `@nyan.when_program_starts`\nTo make some code run just at the beginning of your project, use `@nyan.when_program_starts`, like this:\n\n```python\ncat = nyan.new_text('=^.^=')\n\n@nyan.when_program_starts\ndef do():\n    cat.turn(180)  \n```\n\nThis will make the cat turn upside down instantly when the program starts.\n\n#### `await nyan.sleep(seconds=1)`\nTo run code after a waiting period, you can use the `await nyan.sleep()` command like this:\n\n```python\ncat = nyan.new_text('=^.^=')\n\n@nyan.when_program_starts\nasync def do():\n    cat.turn(180)  \n    await nyan.sleep(seconds=2)\n    cat.turn(180)  \n```\n\nThis will make the cat turn upside down instantly when the program starts, wait 2 seconds, then turn back up again.\n\n#### `nyan.broadcast()`\nYou can use `nyan.broadcast()` to broadcast an event that can be picked up by an event listener.\n```python\n@nyan.repeat_forever\ndef do():\n    nyan.broadcast('marco')\n```\n\n#### `@nyan.when_event_recieved()`\nTo run code in response to a broadcasted event, use `@nyan.when_event_recieved()`, like this\n```python\n@nyan.when_event_recieved('marco')\ndef do():\n    print('polo')\n```\n\n#### `@nyan.foreach_sprite()`\nattaches a script to each sprite passed or in the case a tag is passed, for each sprite that has the given tag. Should be used in conjunction with `@nyan.repeat_forever` and `@nyan.when_program_starts` decorators. Example:\n\n```python\n@nyan.repeat_forever\n@nyan.foreach_sprite(player1, player2, player3, player4)\nasync def animate_player(player):\n    next_frame(player)\n    await nyan.sleep(player.frameTime)\n\n@nyan.repeat_forever\n@nyan.foreach_sprite(tag='player-missile')\nasync def propel_missile(missile):\n    missile.move(25)\n```\n\n## Sprite Commands\n\n#### Simple commands\n\nSprites (images and text) have a few simple commands:\n\n- **`sprite.move(10)`** — moves the sprite 10 pixels in the direction it's facing (starts facing right). Use negative numbers (-10) to go backward.\n- **`sprite.move(10, direction=45)`** — moves the sprite 10 pixels at an angle specified by the direction.\n- **`sprite.turn(20)`** — Turns the sprite 20 degrees counter-clockwise. Use negative numbers (-20) to turn the other way.\n- **`sprite.go_to(other_sprite)`** — Makes `sprite` jump to another sprite named `other_sprite`'s position on the screen. Can also be used to make the sprite follow the mouse: `sprite.go_to(nyan.mouse)`.\n- **`sprite.go_to(x=100, y=50)`** — Makes `sprite` jump to x=100, y=50 (right and up a little).\n- **`sprite.point_towards(other_sprite)`** — Turns `sprite` so it points at another sprite called `other_sprite`.\n- **`sprite.point_towards(x=100, y=50)`** — Turns `sprite` so it points toward x=100, y=50 (right and up a little).\n- **`sprite.hide()`** — Hides `sprite`. It can't be clicked when it's hidden.\n- **`sprite.show()`** — Shows `sprite` if it's hidden.\n- **`sprite.add_tag('car')`** — Adds a tag named `car` to the sprite. Tagging a sprite adds it to a group that can be fetched later by other functions.\n- **`sprite.remove_tag('car')`** — removes the `car` tag from the sprite\n- **`sprite.clone()`** — Makes a copy or clone of the sprite and returns it.\n- **`sprite.remove()`** — Removes a sprite from the screen permanently. Calling sprite commands on a removed sprite won't do anything.\n\n#### Properties\n\nSprites also have properties that can be changed to change how the sprite looks. Here they are:\n\n- **`sprite.x`** — The sprite's horizontal position on the screen. Positive numbers are right, negative numbers are left. The default is 0.\n- **`sprite.y`** — The sprite's vertical position on the screen. Positive numbers are up, negative numbers are down. The default is 0.\n- **`sprite.size`** — How big the sprite is. The default is 100, but it can be made bigger or smaller.\n- **`sprite.angle`** — How much the sprite is turned. Positive numbers are counter-clockwise. The default is 0 degrees (pointed to the right).\n- **`sprite.transparency`** — How see-through the sprite is from 0 to 100. 0 is completely see-through, 100 is not see-through at all. The default is 100.\n- **`sprite.brightness`** - How bright or dim the sprite is from -100 to 100. -100 is completely dark, 100 is white. The default is 0.\n- **`sprite.is_hidden`** — `True` if the sprite has been hidden with the `sprite.hide()` command. Otherwise `False`.\n- **`sprite.is_shown`** — `True` if the sprite has not been hidden with the `sprite.hide()` command. Otherwise `False`.\n- **`sprite.left`** — The x position of the left-most part of the sprite.\n- **`sprite.right`** — The x position of the right-most part of the sprite.\n- **`sprite.top`** — The y position of the top-most part of the sprite.\n- **`sprite.bottom`** — The y position of the bottom-most part of the sprite.\n\nImage-sprite-only properties:\n\n- **`sprite.image`** — The filename of the image shown.\n\nText-sprite-only properties:\n\n- **`text.text`** — The displayed text content.\n- **`text.font`** — The filename of the font e.g. 'Arial.ttf'. The default is `None`, which will use a built-in font.\n- **`text.font_size`** — The text's size. The default is `50` (pt).\n- **`text.color`** — The text's color. The default is black.\n\nBox-sprite-only properties:\n- **`box.color`** — The color filling the box. The default is `black`.\n- **`box.width`** — The width of the box. The default is `100` pixels.\n- **`box.height`** — The height of the box. The default is `200` pixels.\n- **`box.border_width`** — The width of the box's border, the line around it. The default is `0`.\n- **`box.border_color`** — The color of the box's border. The default is `'light blue'`.\n\nIf the box has a border, the box's total width, including the border, will be the width defined by the `width` property.\n\nCircle-sprite-only properties:\n- **`circle.color`** — The color filling the circle. The default is `black`.\n- **`circle.radius`** — How big the circle is, measured from the middle to the outside. The default is `100` pixels, making a 200-pixel-wide circle.\n- **`circle.border_width`** — The width of the circle's border, the line around it. The default is `0`.\n- **`circle.border_color`** — The color of the circle's border. The default is `'light blue'`.\n\nIf the circle has a border, the circle's total width, including the border, will be the width defined by the `radius` property.\n\nThese properties can changed to do the same things as the sprite commands above. For example,\n\n```python\nsprite.go_to(other_sprite)\n\n# the line above is the same as the two lines below\nsprite.x = other_sprite.x\nsprite.y = other_sprite.y\n```\n\nYou can change the properties to animate the sprites. The code below makes the cat turn around.\n\n```python\ncat = nyan.new_text('=^.^=')\n\n@nyan.repeat_forever\ndef do():\n    cat.angle += 1\n    # the line above is the same as cat.turn(1)\n```\n\n#### Other info\n\nSprites also have some other useful info:\n\n- **`sprite.width`** — Gets how wide the sprite is in pixels.\n- **`sprite.height`** — Gets how tall the sprite is in pixels.\n- **`sprite.distance_to(other_sprite)`** — Gets the distance in pixels to `other_sprite`.\n- **`sprite.distance_to(x=100, y=100)`** — Gets the distance to the point x=100, y=100.\n- **`sprite.is_touching(other_sprite)`** — Returns True if `sprite` is touching the `other_sprite`. Otherwise `False`.\n- **`sprite.is_touching(point)`** — Returns True if the sprite is touching the point (anything with an `x` and `y` coordinate). For example: `sprite.is_touching(nyan.mouse)`\n\n## Mouse Commands\n\nWorking with the mouse in Nyan is easy. Here's a simple program that points a sprite at the mouse:\n\n```python\narrow = nyan.new_text('-->', font_size=100)\n\n@nyan.repeat_forever\ndef do():\n    arrow.point_towards(nyan.mouse)\n```\n\n`nyan.mouse` has the following properties:\n\n- **`nyan.mouse.x`** — The horizontal x position of the mouse.\n- **`nyan.mouse.y`** — The vertical y position of the mouse.\n- **`nyan.mouse.is_clicked`** — `True` if the mouse is clicked down, or `False` if it's not.\n- **`nyan.mouse.is_touching(sprite)`** — Returns `True` if the mouse is touching a sprite, or `False` if it's not.\n\n#### `@sprite.when_clicked`\n\nProbably the easiest way to detect clicks is to use `@sprite.when_clicked`.\n\nIn the program below, when the face is clicked it changes for 1 second then turns back to normal:\n\n```python\nface = nyan.new_text('^.^', font_size=100)\n\n@face.when_clicked\nasync def do():\n    face.text = '*o*'\n    await nyan.sleep(seconds=1)\n    face.text = '^.^'\n```\n\n#### `@nyan.when_sprite_clicked()`\n\nIf you wanted to run the same code when multiple sprites are clicked, you can use `@nyan.when_sprite_clicked()`:\n\n```python\nface1 = nyan.new_text('^.^', x=-100, font_size=100)\nface2 = nyan.new_text('^_^', x=100, font_size=100)\n\n@nyan.when_sprite_clicked(face1, face2) # takes as many sprites as you want\nasync def do(sprite):\n    starting_words = sprite.text\n    sprite.text = '*o*'\n    await play.sleep(seconds=1)\n    sprite.text = starting_words\n```\n\n#### `@nyan.mouse.when_clicked` or `@nyan.when_mouse_clicked`\n\nTo run code when the mouse is clicked anywhere, use `@nyan.mouse.when_clicked` or `@nyan.when_mouse_clicked` (they do the same exact thing).\n\nIn the code below, when a click is detected, the text will move to the click location and the coordinates will be shown:\n\n```python\ntext = nyan.new_text('0, 0')\n\n@nyan.mouse.when_clicked\ndef do():\n    text.text = f'{nyan.mouse.x}, {nyan.mouse.y}'\n    text.go_to(nyan.mouse)\n```\n\n#### `@nyan.mouse.when_click_released` or `@nyan.when_mouse_click_released`\n\nTo run code when the mouse button is released, use `@nyan.mouse.when_click_released` `@nyan.when_mouse_click_released` (they do the same exact thing).\n\nIn the code below, the cat can be dragged around when it's clicked by the mouse:\n\n```python\ncat = nyan.new_text('=^.^= drag me!')\ncat.is_being_dragged = False\n\n@cat.when_clicked\ndef do():\n    cat.is_being_dragged = True\n\n@nyan.mouse.when_click_released\ndef do():\n    cat.is_being_dragged = False\n\n@nyan.repeat_forever\ndef do():\n    if cat.is_being_dragged:\n        cat.go_to(nyan.mouse)\n```\n\n## Keyboard Commands\n\n#### `nyan.key_is_pressed()`\n\nYou can use `nyan.key_is_pressed()` to detect keypresses.\n\nIn the code below, pressing the `arrow` keys or `w/a/s/d` will make the cat go in the desired direction.\n\n```python\ncat = nyan.new_text('=^.^=')\n\n@nyan.repeat_forever\ndef do():\n    if nyan.key_is_pressed('up', 'w'):\n        cat.y += 15\n    if nyan.key_is_pressed('down', 's'):\n        cat.y -= 15\n\n    if nyan.key_is_pressed('right', 'd'):\n        cat.x += 15\n    if nyan.key_is_pressed('left', 'a'):\n        cat.x -= 15\n```\n\n#### `@nyan.when_key_pressed()`\n\nYou can use `@nyan.when_key_pressed()` to run code when specific keys are pressed.\n\nIn the code below, pressing the `space` key will change the cat's face, and pressing the `enter` key will change it to a different face.\n\n```python\ncat = nyan.new_text('=^.^=')\n\n@nyan.when_key_pressed('space', 'enter') # if either the space key or enter key are pressed...\ndef do(key):\n    if key == 'enter':\n        cat.text = '=-.-='\n    if key == 'space':\n        cat.text = '=*_*='\n```\n\n#### `@nyan.when_any_key_pressed`\n\nIf you just want to detect when any key is pressed, you can use `@nyan.when_any_key_pressed`.\n\nIn the code below, any key you press will be displayed on the screen:\n\n```python\ntext = nyan.new_text('')\n\n@nyan.when_any_key_pressed\ndef do(key):\n    text.text = f'{key} pressed!'\n```\n\n#### `@nyan.when_key_released()`\n\nExactly like `@nyan.when_key_pressed()` but runs the code when specific keys are released.\n\nIn the code below, text will appear on screen only if the `up` arrow is pressed.\n\n```python\ntext = nyan.new_text('')\n\n@nyan.when_key_released('up')\nasync def do(key):\n    text.text = 'up arrow released!'\n    await nyan.sleep(seconds=1)\n    text.text = ''\n```\n\n#### `@nyan.when_any_key_released`\n\nExactly like `@nyan.when_any_key_pressed` but runs the code when any key is released.\n\nIn the code below, the name of the most recently released key will show up on screen.\n\n```python\ntext = nyan.new_text('')\n\n@nyan.when_any_key_pressed\ndef do(key):\n    text.text = f'{key} key released!''\n```\n\n## Audio Commands\n\n#### `nyan.new_sound()`\n```python\nmeow = nyan.new_sound(sound='meow.wav')\n```\nThis will load a sound file with `.wav` extension and makes it ready to be played. This function should be mainly used for sound effects. You can get sounds from online sites like [Freesound](https://freesound.org/browse/) or you can generate your own using [Bfxr](http://www.bfxr.net/).\n\n#### `meow.play()`\nThis will play the loaded sound file.\n```python\nmeow = nyan.new_sound(sound='meow.wav')\n\n@nyan.when_key_pressed('space')\ndef do():\n    meow.play()\n```\n\n#### `nyan.music.play()`\nTo play an mp3 file in the background, use `nyan.music.play()`, like this\n```python\nnyan.music.play('William Tell Overture Finale.mp3', loop=True)\n```\n\n#### `await nyan.music.play_until_done()`\nThis is the same as `nyan.music.play()`, but waits for the music to finish before continuing\n```python\n@nyan.when_program_starts\nasync def do():\n    await nyan.music.play_until_done('William Tell Overture Finale.mp3')\n    print('music has ended')\n```\n\n#### `nyan.music.pause()`\nPauses the currently playing music\n```python\n@nyan.when_program_starts\nasync def do():\n    nyan.music.play('William Tell Overture Finale.mp3')\n    await nyan.sleep(seconds=5)\n    nyan.music.pause()\n```\n\n#### `nyan.music.unpause()`\nResumes the paused music\n```python\n@nyan.when_program_starts\nasync def do():\n    nyan.music.play('William Tell Overture Finale.mp3')\n    await nyan.sleep(seconds=5)\n    nyan.music.pause()\n    await nyan.sleep(seconds=5)\n    nyan.music.unpause()\n```\n\n#### `nyan.music.stop()`\nStops the currently playing music\n```python\n@nyan.when_program_starts\nasync def do():\n    nyan.music.play('William Tell Overture Finale.mp3')\n    await nyan.sleep(seconds=5)\n    nyan.music.stop()\n```\n\n#### `nyan.music.volume`\nYou can use `nyan.music.volume` to get or set the current volume which ranges from 0 to 100. The default is 100\n```python\n@nyan.when_program_starts\nasync def do():\n    nyan.music.play('William Tell Overture Finale.mp3')\n    await nyan.sleep(seconds=5)\n    nyan.music.volume = 70\n```\n\n## Other Useful Commands\n\n#### `nyan.screen`\n\nThe way to get information about the screen. `nyan.screen` has these properties:\n\n- `nyan.screen.width` - Defaults to 800 (pixels total). Changing this will change the screen's size.\n- `nyan.screen.height` - Defaults to 600 (pixels total). Changing this will change the screen's size.\n- `nyan.screen.left` - The `x` coordinate for the left edge of the screen.\n- `nyan.screen.right` - The `x` coordinate for the right edge of the screen.\n- `nyan.screen.top` - The `y` coordinate for the top of the screen.\n- `nyan.screen.bottom` - The `y` coordinate for the bottom of the screen.\n\n#### `nyan.get_sprites()`\n\nReturns a list of all the sprites (images, shapes, text) in the program. Takes an optional tag parameter that can be used to get all sprites that have a give tag.\n\n#### `nyan.random_number()`\n\nA function that makes random numbers.\n\nIf two whole numbers are given, `nyan.random_number()` will give a whole number back:\n\n```python\nnyan.random_number(lowest=0, highest=100)\n\n# example return value: 42\n```\n(You can also do `nyan.random_number(0, 100)` without `lowest` and `highest`.)\n\nIf non-whole numbers are given, non-whole numbers are given back:\n\n```python\nnyan.random_number(0, 1.0)\n# example return value: 0.84\n```\n\n`nyan.random_number()` is also inclusive, which means `nyan.random_number(0,1)` will return `0` and `1`.\n\n#### `nyan.random_color()`\n\nReturns a random RGB color, including white and black.\n\n```python\nnyan.random_color()\n# example return value: (201, 17, 142)\n```\n\nEach value varies from 0 to 255.\n\n#### `nyan.random_position()`\n\nReturns a random position on the screen. A position object has an `x` and `y` component.\n\n```python\ntext = nyan.text('WOO')\n@nyan.repeat_forever\ndef do():\n    text.go_to(nyan.random_position())\n\n    # the above is equivalent to:\n    position = nyan.random_position()\n    text.x = position.x\n    text.y = position.y\n```\n\n#### `nyan.random_item()`\n\nPicks a random item from a list. The passed list should contain at least one item.\n\n```python\ntext = nyan.text('WOO')\n@nyan.repeat_forever\ndef do():\n    random_angle = nyan.random_item([0, 90, 180, 270])\n    text.angle = random_angle\n```\n\n#### `nyan.new_timer()`\nCreates a timer. Useful for keeping track of time and for doing animations.\n\n```python\ntimer = new_timer()\n```\n\nOnce a timer is created, it will have the following commands and properties:\n\n- **`timer.reset()`** — resets the timer\n- **`timer.seconds`** — time elapsed in seconds since creation or last reset\n- **`timer.milliseconds`** — time elapsed in milliseconds since creation or last reset\n\n### `nyan.clamp()`\n\nKeeps a number between two values. Useful for constraining a sprite to a limited area.\n\n```python\nplayer = nyan.text('>')\n\n@nyan.repeat_forever\ndef do():\n    if nyan.key_is_pressed('right'):\n        player.x += 1\n    if nyan.key_is_pressed('left'):\n        player.x -= 1\n    if nyan.key_is_pressed('up'):\n        player.y += 1\n    if nyan.key_is_pressed('down'):\n        player.y -= 1\n    \n    player.x = clamp(player.x, -400, 400)\n    player.x = clamp(player.y, -300, 300)\n```\n\n## Packaging Nyan Programs\nNyan comes with a packager that can be used to create stand-alone executables that can be shared with other people without them having to install Python on their computers. To use it, run the following in your terminal\n\n```\nnyan-packager python_file\n```\n\nThis will create an executable file with other stuff in a dist folder inside your project. You can change the icon of the executable with `--icon icon_file` option. If you would like to have a less cluttered output, you can use `--onefile` flag to create a single executable + your assets folder.\n\n## What's with all this `async`/`await` stuff? Is this Python?\n\nYes, this is Python! Python added `async` and `await` as special keywords in Python 3.7. It's part of the [asyncio module](https://docs.python.org/3/library/asyncio.html).\n\nUsing async functions means we can use the `await nyan.sleep()` function, which makes some code a lot simpler and appear to run in-parallel, which new programmers find intuitive.\n\n```python\nimport nyan\n\ncat = nyan.new_text('=^.^=')\n\n# this code block uses async so it can use the 'await nyan.sleep()' function\n@nyan.repeat_forever\nasync def change_bg():\n    nyan.set_backdrop('pink')\n    await nyan.sleep(seconds=1)\n\n    nyan.set_backdrop('purple')\n    await nyan.sleep(seconds=1)\n\n    nyan.set_backdrop('light blue')\n    await nyan.sleep(seconds=1)\n\n# this code block doesn't need async because it doesn't have `await nyan.sleep()`\n@nyan.repeat_forever\ndef do():\n    cat.turn(1)\n\nnyan.start_program()\n```\n\nIn the above program, the backdrop will change and the cat will appear to turn at the same time even though the code is running single-threaded.\n\nThe `async` keyword isn't necessary to write unless you want to use `await` functions. If you try to use an `await` command inside a non-async function, Python will show you an error like this:\n\n```  \n  File \"example.py\", line 31\n    await nyan.sleep(seconds=1)\n    ^\nSyntaxError: 'await' outside async function\n```\nTo fix that error, just put `async` before `def`.\n\nIf you don't understand any of this, it's generally safe to just include `async` before `def`.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ducaale/nyan",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nyan",
    "package_url": "https://pypi.org/project/nyan/",
    "platform": null,
    "project_url": "https://pypi.org/project/nyan/",
    "project_urls": {
      "Homepage": "https://github.com/ducaale/nyan",
      "Repository": "https://github.com/ducaale/nyan"
    },
    "release_url": "https://pypi.org/project/nyan/0.13.1/",
    "requires_dist": [
      "pygame (>=2.0.0,<3.0.0)",
      "pytest (>=5.2,<6.0)",
      "pyinstaller (>=3.6,<4.0)",
      "pefile (>=2019.4.18,<2020.0.0); sys_platform == \"win32\"",
      "pywin32 (>=304,<305); sys_platform == \"win32\""
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "The easiest way to start coding games and graphics projects in Python",
    "version": "0.13.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14166591,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13587f750b23e7a5e5a0e92176f7c800975449b9e3c40adc20bfee1f9a6efebd",
          "md5": "d5edd07494d6c025d809a378affc2e7e",
          "sha256": "da3bd0f700150bd0aa50988f665f643fb2ad0bfcc495af3757e9711419f83c2c"
        },
        "downloads": -1,
        "filename": "nyan-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5edd07494d6c025d809a378affc2e7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 16020,
        "upload_time": "2020-03-29T12:54:46",
        "upload_time_iso_8601": "2020-03-29T12:54:46.435340Z",
        "url": "https://files.pythonhosted.org/packages/13/58/7f750b23e7a5e5a0e92176f7c800975449b9e3c40adc20bfee1f9a6efebd/nyan-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88a565e975818c3cda12fc54434ac1894f6db7f710434ee0c7b57e13f1260c88",
          "md5": "1b4e2aad5809642bf7ff3bc61ec8e9d4",
          "sha256": "1dfa8d8ef03f5cd844ff07066aaf08ce81fe365c67dc5713c936fc5a14f13791"
        },
        "downloads": -1,
        "filename": "nyan-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1b4e2aad5809642bf7ff3bc61ec8e9d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 11776,
        "upload_time": "2020-03-29T12:54:48",
        "upload_time_iso_8601": "2020-03-29T12:54:48.604056Z",
        "url": "https://files.pythonhosted.org/packages/88/a5/65e975818c3cda12fc54434ac1894f6db7f710434ee0c7b57e13f1260c88/nyan-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96a874227caefbc7c2fd4c78fbfa62ca2a7ea46c8af3bb307954960fecd59fc7",
          "md5": "d68fd8493c7673dc44baf09de582b1b8",
          "sha256": "08516cb94ef570447cccde43e195e8fda3c337e1a3503893cd3842c0e95bd55c"
        },
        "downloads": -1,
        "filename": "nyan-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d68fd8493c7673dc44baf09de582b1b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 16015,
        "upload_time": "2020-03-29T14:38:44",
        "upload_time_iso_8601": "2020-03-29T14:38:44.758916Z",
        "url": "https://files.pythonhosted.org/packages/96/a8/74227caefbc7c2fd4c78fbfa62ca2a7ea46c8af3bb307954960fecd59fc7/nyan-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3435045c8565f25573f2ce0d675a1981ed3bf9c45a39be962c3ac6a47f517b56",
          "md5": "881a72b2028a85f73794b11800aee64c",
          "sha256": "a0034d2fcba27a9993a492b8b64e1bdd75e209032a89ec4fdc0284d839605f67"
        },
        "downloads": -1,
        "filename": "nyan-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "881a72b2028a85f73794b11800aee64c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 11776,
        "upload_time": "2020-03-29T14:38:46",
        "upload_time_iso_8601": "2020-03-29T14:38:46.263946Z",
        "url": "https://files.pythonhosted.org/packages/34/35/045c8565f25573f2ce0d675a1981ed3bf9c45a39be962c3ac6a47f517b56/nyan-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "430aa86e47d2e01ea04ddf7669cd50e38ce5d7779e46894bbc1bb8f169ac73c5",
          "md5": "c04a6460a25c753e770f55cf34224cf9",
          "sha256": "2a1311334737469a248a1f6855e568a3f10dc82f0474b21292baeab96a569e38"
        },
        "downloads": -1,
        "filename": "nyan-0.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c04a6460a25c753e770f55cf34224cf9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25312,
        "upload_time": "2020-06-02T19:13:46",
        "upload_time_iso_8601": "2020-06-02T19:13:46.849590Z",
        "url": "https://files.pythonhosted.org/packages/43/0a/a86e47d2e01ea04ddf7669cd50e38ce5d7779e46894bbc1bb8f169ac73c5/nyan-0.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd721725a4cf10065932dc78cc58434f550c984d1ef26c23734092da433ee23a",
          "md5": "dfe819976f133173366a0a771b73f671",
          "sha256": "6fa1a0ea119fc6e2d61c8e3af628737971704fac8ca55588b0e840d6d5193f73"
        },
        "downloads": -1,
        "filename": "nyan-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dfe819976f133173366a0a771b73f671",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25040,
        "upload_time": "2020-06-02T19:13:48",
        "upload_time_iso_8601": "2020-06-02T19:13:48.665141Z",
        "url": "https://files.pythonhosted.org/packages/fd/72/1725a4cf10065932dc78cc58434f550c984d1ef26c23734092da433ee23a/nyan-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab227bf3595e63f4edd020de4f16437206c1ee843ba3a9617d4acd91d790a970",
          "md5": "41aed5d160f6b48e43f6d1f50a65fc3e",
          "sha256": "778d27bffa05d55313184cbfdc870a24ac270e0ea9a18988ff0172bf13f4fc0f"
        },
        "downloads": -1,
        "filename": "nyan-0.11.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41aed5d160f6b48e43f6d1f50a65fc3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25338,
        "upload_time": "2020-06-10T21:26:01",
        "upload_time_iso_8601": "2020-06-10T21:26:01.165946Z",
        "url": "https://files.pythonhosted.org/packages/ab/22/7bf3595e63f4edd020de4f16437206c1ee843ba3a9617d4acd91d790a970/nyan-0.11.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07608d61086af4e8fb442bb3ca3651d9534d4a6c3f40daa81e1454e3fc7b26f4",
          "md5": "365457fc340dad6ae1a0e35c8fdd9eb9",
          "sha256": "27520a04ef1c0f17382eb307e2ab131a6005f318d06d79147058aa90be96bc23"
        },
        "downloads": -1,
        "filename": "nyan-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "365457fc340dad6ae1a0e35c8fdd9eb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25065,
        "upload_time": "2020-06-10T21:26:02",
        "upload_time_iso_8601": "2020-06-10T21:26:02.854880Z",
        "url": "https://files.pythonhosted.org/packages/07/60/8d61086af4e8fb442bb3ca3651d9534d4a6c3f40daa81e1454e3fc7b26f4/nyan-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5264082a8c07145e00b1a32a91939190a2def4e64ab2eae0a52150a7c99eb74b",
          "md5": "794842e4cdf949750b23dc06870b6ffe",
          "sha256": "614b94d23c3b42cd479570009aff0f4d6083268aaadb52a59341cde3a85d478f"
        },
        "downloads": -1,
        "filename": "nyan-0.11.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "794842e4cdf949750b23dc06870b6ffe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25370,
        "upload_time": "2020-06-13T20:02:01",
        "upload_time_iso_8601": "2020-06-13T20:02:01.167308Z",
        "url": "https://files.pythonhosted.org/packages/52/64/082a8c07145e00b1a32a91939190a2def4e64ab2eae0a52150a7c99eb74b/nyan-0.11.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d590ef45993e342ccbd27d8dee6d996af162ca833b263665a4291932a8cb76c",
          "md5": "741cccaa0e874d1fb5382f940a4d4b73",
          "sha256": "900de46fe8341f0f9de8bb995c6ff1318108a6a3a69d9760a6cbb4fa94cbc2ac"
        },
        "downloads": -1,
        "filename": "nyan-0.11.1.tar.gz",
        "has_sig": false,
        "md5_digest": "741cccaa0e874d1fb5382f940a4d4b73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25078,
        "upload_time": "2020-06-13T20:02:02",
        "upload_time_iso_8601": "2020-06-13T20:02:02.790168Z",
        "url": "https://files.pythonhosted.org/packages/6d/59/0ef45993e342ccbd27d8dee6d996af162ca833b263665a4291932a8cb76c/nyan-0.11.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0b14a13a17f17768e5f748854e436b37d0b5920cb264e727e2b0d574c70fa7b",
          "md5": "17935fa09d014dc9075080571d305d20",
          "sha256": "859f97ec1ac36fe96199fb25c0a3e0a0c9cbb33bafd8bceb0d7bc8a2f4059307"
        },
        "downloads": -1,
        "filename": "nyan-0.11.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17935fa09d014dc9075080571d305d20",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25368,
        "upload_time": "2020-06-13T20:09:56",
        "upload_time_iso_8601": "2020-06-13T20:09:56.889080Z",
        "url": "https://files.pythonhosted.org/packages/e0/b1/4a13a17f17768e5f748854e436b37d0b5920cb264e727e2b0d574c70fa7b/nyan-0.11.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbdf5f2fa2055a0a837968c111622f866c314be262d375887609181da800180b",
          "md5": "0d1659dbeaf37a31f039d983c3405caa",
          "sha256": "7bc8419cdd637dc1e5a588cda382f3b2c4af095bf4bf9fc6e2d462df95b88f2b"
        },
        "downloads": -1,
        "filename": "nyan-0.11.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0d1659dbeaf37a31f039d983c3405caa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25075,
        "upload_time": "2020-06-13T20:09:58",
        "upload_time_iso_8601": "2020-06-13T20:09:58.553718Z",
        "url": "https://files.pythonhosted.org/packages/db/df/5f2fa2055a0a837968c111622f866c314be262d375887609181da800180b/nyan-0.11.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dde0420c43fa93d0a3c75472eeae3607dff8d915afbcdba17833ecff8d1e4352",
          "md5": "450af031382c8570355fadef61b22af5",
          "sha256": "9fe56f1c1900cf7a58eba078bbc6222866791317fc34eb4d8954b48034820393"
        },
        "downloads": -1,
        "filename": "nyan-0.12.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "450af031382c8570355fadef61b22af5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25370,
        "upload_time": "2020-06-13T20:21:06",
        "upload_time_iso_8601": "2020-06-13T20:21:06.909671Z",
        "url": "https://files.pythonhosted.org/packages/dd/e0/420c43fa93d0a3c75472eeae3607dff8d915afbcdba17833ecff8d1e4352/nyan-0.12.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdf015ebb70ac3b4533aebe156b22818dc9e2edc61f7164fb77f8495745f88c1",
          "md5": "726b891d8298c0266baf526cd82ee316",
          "sha256": "38f9062a73d50df679d6f5766883d672e1d07e0e494f4c19330dee972138cd36"
        },
        "downloads": -1,
        "filename": "nyan-0.12.0.tar.gz",
        "has_sig": false,
        "md5_digest": "726b891d8298c0266baf526cd82ee316",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25087,
        "upload_time": "2020-06-13T20:21:08",
        "upload_time_iso_8601": "2020-06-13T20:21:08.598592Z",
        "url": "https://files.pythonhosted.org/packages/bd/f0/15ebb70ac3b4533aebe156b22818dc9e2edc61f7164fb77f8495745f88c1/nyan-0.12.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8a18b122a419fcc7f9f4dea9c82bd41b2fe55bb400986b862353ef55f704c3c",
          "md5": "a77fea0c444939022f54d6060f1c82c1",
          "sha256": "12e7dc1a1a2405576076c0ec010ec5550056518c7a78edb134043c2463c156f0"
        },
        "downloads": -1,
        "filename": "nyan-0.12.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a77fea0c444939022f54d6060f1c82c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25417,
        "upload_time": "2021-01-31T18:11:54",
        "upload_time_iso_8601": "2021-01-31T18:11:54.490845Z",
        "url": "https://files.pythonhosted.org/packages/d8/a1/8b122a419fcc7f9f4dea9c82bd41b2fe55bb400986b862353ef55f704c3c/nyan-0.12.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aca8a15a2bfb7b2002eb93c824e3ae67bc022d4ee57434d2ceb0318abe17f714",
          "md5": "970655049f0a76c3309bbb6e100a56b5",
          "sha256": "cec8025691572a3195f6ceaa5bd0a00fe6dc6b85fbeafc3119358de3387f500e"
        },
        "downloads": -1,
        "filename": "nyan-0.12.1.tar.gz",
        "has_sig": false,
        "md5_digest": "970655049f0a76c3309bbb6e100a56b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 24890,
        "upload_time": "2021-01-31T18:11:56",
        "upload_time_iso_8601": "2021-01-31T18:11:56.411719Z",
        "url": "https://files.pythonhosted.org/packages/ac/a8/a15a2bfb7b2002eb93c824e3ae67bc022d4ee57434d2ceb0318abe17f714/nyan-0.12.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.13.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a81bcdf12bc6a9c822a1942f23ff1f5ad276f4cd19917226e90e58b99a5af2bf",
          "md5": "ed7ba24dda2c6e0db78f2553364cbe21",
          "sha256": "e0df6eb611eb08252b7093262d577aa172d1822cec9506c081f99f4c5df92349"
        },
        "downloads": -1,
        "filename": "nyan-0.13.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed7ba24dda2c6e0db78f2553364cbe21",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25530,
        "upload_time": "2021-03-27T21:12:55",
        "upload_time_iso_8601": "2021-03-27T21:12:55.654270Z",
        "url": "https://files.pythonhosted.org/packages/a8/1b/cdf12bc6a9c822a1942f23ff1f5ad276f4cd19917226e90e58b99a5af2bf/nyan-0.13.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5acde1841e3065b6900e7033765db2f607ee7d5504c2399f1b41a1bda6c873cd",
          "md5": "61656bbbe5f5030f793fbab0a6afab8c",
          "sha256": "242cc896362b18034b283c58dcf1289f41861f14662964646804a643b8cb0bc8"
        },
        "downloads": -1,
        "filename": "nyan-0.13.0.tar.gz",
        "has_sig": false,
        "md5_digest": "61656bbbe5f5030f793fbab0a6afab8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25171,
        "upload_time": "2021-03-27T21:12:57",
        "upload_time_iso_8601": "2021-03-27T21:12:57.336900Z",
        "url": "https://files.pythonhosted.org/packages/5a/cd/e1841e3065b6900e7033765db2f607ee7d5504c2399f1b41a1bda6c873cd/nyan-0.13.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.13.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aee30bbc109623c71eed202e7dd1a979c0fb56897594a842b00d949aa085a812",
          "md5": "ed898e19a6545533b6e574a221568889",
          "sha256": "f4bf97ebcbd0bf3fee4f22126d7f91196597aa0eb8d68e3ed7afc5442b8851cb"
        },
        "downloads": -1,
        "filename": "nyan-0.13.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed898e19a6545533b6e574a221568889",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25537,
        "upload_time": "2022-06-17T19:47:16",
        "upload_time_iso_8601": "2022-06-17T19:47:16.909954Z",
        "url": "https://files.pythonhosted.org/packages/ae/e3/0bbc109623c71eed202e7dd1a979c0fb56897594a842b00d949aa085a812/nyan-0.13.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29a0a8a737b71d0a520da0bcc93b8973cea455441adec55e9f525f097ddd5edf",
          "md5": "f7dba82aeae0b329196a9ad8f2bdc0d7",
          "sha256": "33aec85ad61e18168c72b16a6a16d085922c97f7df5b5258e59fd5fdb4f9bf78"
        },
        "downloads": -1,
        "filename": "nyan-0.13.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f7dba82aeae0b329196a9ad8f2bdc0d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25183,
        "upload_time": "2022-06-17T19:47:19",
        "upload_time_iso_8601": "2022-06-17T19:47:19.602522Z",
        "url": "https://files.pythonhosted.org/packages/29/a0/a8a737b71d0a520da0bcc93b8973cea455441adec55e9f525f097ddd5edf/nyan-0.13.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cbd2e42a5abc43e0e871b8726e90f6d081f77aadab179d26dec4b98259a319f",
          "md5": "984245e796713479381a0c6d584dcb62",
          "sha256": "2c4a4900287a4964dac62baf94f00a69f02310b31724e107cdc7e40c4917ae0f"
        },
        "downloads": -1,
        "filename": "nyan-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "984245e796713479381a0c6d584dcb62",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 17447,
        "upload_time": "2020-03-29T22:30:13",
        "upload_time_iso_8601": "2020-03-29T22:30:13.519431Z",
        "url": "https://files.pythonhosted.org/packages/5c/bd/2e42a5abc43e0e871b8726e90f6d081f77aadab179d26dec4b98259a319f/nyan-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45fb62c63ce28403a7f5957cf58d108bd6d8fdd28b9ca2651cebdbfe35a41fb5",
          "md5": "3e38042ee76adf1f8510f110a3733e04",
          "sha256": "9c50563870b40eedeb0171129f2275ca7066e967669198362e0d0ab8a8e5ee66"
        },
        "downloads": -1,
        "filename": "nyan-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3e38042ee76adf1f8510f110a3733e04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12827,
        "upload_time": "2020-03-29T22:30:15",
        "upload_time_iso_8601": "2020-03-29T22:30:15.059827Z",
        "url": "https://files.pythonhosted.org/packages/45/fb/62c63ce28403a7f5957cf58d108bd6d8fdd28b9ca2651cebdbfe35a41fb5/nyan-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "804c0a487fe58353ea4cbd1361b8496a27e9ed10827b8002281fd16a5de398f5",
          "md5": "4f1cd0cc72c69db2eb0ec4e0da843cdc",
          "sha256": "dbd1b503de85fe521931f8837d1239ab1e900c6b50475e9efb290bc09a9595b7"
        },
        "downloads": -1,
        "filename": "nyan-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f1cd0cc72c69db2eb0ec4e0da843cdc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 17483,
        "upload_time": "2020-03-29T22:47:39",
        "upload_time_iso_8601": "2020-03-29T22:47:39.860923Z",
        "url": "https://files.pythonhosted.org/packages/80/4c/0a487fe58353ea4cbd1361b8496a27e9ed10827b8002281fd16a5de398f5/nyan-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a22721936e1eb8fc8525af7a45c9cd31e01dea654d786b92b43fd96636c1f48",
          "md5": "a44b2e5d0ef4695e242d71d8641be047",
          "sha256": "0e7819edce7dfec3d7b0e707f301ad6b8efc3fa7bfdeba401eece66ce1d1891f"
        },
        "downloads": -1,
        "filename": "nyan-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a44b2e5d0ef4695e242d71d8641be047",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12915,
        "upload_time": "2020-03-29T22:47:40",
        "upload_time_iso_8601": "2020-03-29T22:47:40.905783Z",
        "url": "https://files.pythonhosted.org/packages/2a/22/721936e1eb8fc8525af7a45c9cd31e01dea654d786b92b43fd96636c1f48/nyan-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6ce0a10cb8b48586f8b1ab8df1458e1f9cdfe53025040535cd9f595812a0d32",
          "md5": "1d2dc2374d87ed2cfd77f908bb1b8bac",
          "sha256": "65dd2f9b364fe0e82c5738fee690dfff74e728f40743c27e16ecc6838a25b041"
        },
        "downloads": -1,
        "filename": "nyan-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d2dc2374d87ed2cfd77f908bb1b8bac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 17533,
        "upload_time": "2020-03-30T21:11:41",
        "upload_time_iso_8601": "2020-03-30T21:11:41.033838Z",
        "url": "https://files.pythonhosted.org/packages/a6/ce/0a10cb8b48586f8b1ab8df1458e1f9cdfe53025040535cd9f595812a0d32/nyan-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2996e0b3c5de36b4abcac9c7599df2f0bfc6c3424f5acf160eff4e1698e8414",
          "md5": "158c6a17efab7d642b7e5db21bfc9fa7",
          "sha256": "2fc54767de7bc9ad27c7dda16a57234dc1636882ea0964129d6aa49b3ace0ff3"
        },
        "downloads": -1,
        "filename": "nyan-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "158c6a17efab7d642b7e5db21bfc9fa7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12936,
        "upload_time": "2020-03-30T21:11:42",
        "upload_time_iso_8601": "2020-03-30T21:11:42.280809Z",
        "url": "https://files.pythonhosted.org/packages/c2/99/6e0b3c5de36b4abcac9c7599df2f0bfc6c3424f5acf160eff4e1698e8414/nyan-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "958522a6cf70d447f8dc6065bca64343752db175210d7ad8e10822b03b67fd48",
          "md5": "8cb83ab7993c879ac6502df5f5fc4a6a",
          "sha256": "1798076b2fe08104d94799ef1bf6e418ce982cbf2fab233920081a25de2cdd17"
        },
        "downloads": -1,
        "filename": "nyan-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cb83ab7993c879ac6502df5f5fc4a6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 17599,
        "upload_time": "2020-03-31T20:13:32",
        "upload_time_iso_8601": "2020-03-31T20:13:32.137280Z",
        "url": "https://files.pythonhosted.org/packages/95/85/22a6cf70d447f8dc6065bca64343752db175210d7ad8e10822b03b67fd48/nyan-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da115b70fa9f76b60eb8a5d4aef6f9c3ac1fa26b733bf05b7ef490fdb1356cf7",
          "md5": "a1f6207d23f1ead4c955ccaaec584195",
          "sha256": "129a1e647ddf2b8820e07221253a2f336be56bbb3324568028240aa03421c4b8"
        },
        "downloads": -1,
        "filename": "nyan-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a1f6207d23f1ead4c955ccaaec584195",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12994,
        "upload_time": "2020-03-31T20:13:33",
        "upload_time_iso_8601": "2020-03-31T20:13:33.236706Z",
        "url": "https://files.pythonhosted.org/packages/da/11/5b70fa9f76b60eb8a5d4aef6f9c3ac1fa26b733bf05b7ef490fdb1356cf7/nyan-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "857e350318bba65c31f465117d3e639f15080cc79dddb47673a470cf8cfd3b03",
          "md5": "c6bb849260d5577c41e7b9bdc3dadef4",
          "sha256": "88de4d0e4589f9349736b8527fab9e41e8c72d293faa212b26944b7d12f7c168"
        },
        "downloads": -1,
        "filename": "nyan-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6bb849260d5577c41e7b9bdc3dadef4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 24013,
        "upload_time": "2020-04-03T20:26:39",
        "upload_time_iso_8601": "2020-04-03T20:26:39.697983Z",
        "url": "https://files.pythonhosted.org/packages/85/7e/350318bba65c31f465117d3e639f15080cc79dddb47673a470cf8cfd3b03/nyan-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "533d55e477a2acd7bcf48d2ec3768ed7b63e00816d7be641648f8fb0711627a3",
          "md5": "cc081d4be78b9df248367351303d1786",
          "sha256": "9b3de0ee465dce884459130a8426af3e49f4bc8879aa586916bf8bd9453926a8"
        },
        "downloads": -1,
        "filename": "nyan-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cc081d4be78b9df248367351303d1786",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 23480,
        "upload_time": "2020-04-03T20:26:41",
        "upload_time_iso_8601": "2020-04-03T20:26:41.556655Z",
        "url": "https://files.pythonhosted.org/packages/53/3d/55e477a2acd7bcf48d2ec3768ed7b63e00816d7be641648f8fb0711627a3/nyan-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b5ea251efcda8559d9953254cee9eb72a2525e613680b837c66e0ce5f5c0185",
          "md5": "5cd4bbe6afd6b226df246cf01266235d",
          "sha256": "7334ad7b4e2342841520bea26a38c29ced1fb1a85bf55f2867658b3289353e25"
        },
        "downloads": -1,
        "filename": "nyan-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cd4bbe6afd6b226df246cf01266235d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 24526,
        "upload_time": "2020-04-04T22:38:01",
        "upload_time_iso_8601": "2020-04-04T22:38:01.832960Z",
        "url": "https://files.pythonhosted.org/packages/5b/5e/a251efcda8559d9953254cee9eb72a2525e613680b837c66e0ce5f5c0185/nyan-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "135ab24c4833b5d40f3fa8b4c4d734cf94cf13dd62ee6dd790120206a50428cf",
          "md5": "0110c56a1005563471f010499cd54584",
          "sha256": "75ef52a95133048ce67b6ba5b034889a229db526563c8a6ee0e7f0977f9e208e"
        },
        "downloads": -1,
        "filename": "nyan-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0110c56a1005563471f010499cd54584",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 24174,
        "upload_time": "2020-04-04T22:38:03",
        "upload_time_iso_8601": "2020-04-04T22:38:03.479060Z",
        "url": "https://files.pythonhosted.org/packages/13/5a/b24c4833b5d40f3fa8b4c4d734cf94cf13dd62ee6dd790120206a50428cf/nyan-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c0b175cd7db36284a5d35d4e908ff56bcd200c95d0eb97f82f0983abe2f9aff",
          "md5": "70646e85a6ca565b6a00dcef9e4d4033",
          "sha256": "a80ad79ab199c75a482e07c413ee0054cc3c756f315f2782e38b844f177cf3b4"
        },
        "downloads": -1,
        "filename": "nyan-0.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70646e85a6ca565b6a00dcef9e4d4033",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 24579,
        "upload_time": "2020-04-18T15:25:14",
        "upload_time_iso_8601": "2020-04-18T15:25:14.562982Z",
        "url": "https://files.pythonhosted.org/packages/8c/0b/175cd7db36284a5d35d4e908ff56bcd200c95d0eb97f82f0983abe2f9aff/nyan-0.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0eed65171a9a43a73316589796e5bfec6c14ccaee37072b2e1d8f1e97ccc2b8",
          "md5": "358d98c15b32e86eab01b4e9ad4edb3b",
          "sha256": "9e57bcfd63488fff970fb7187d3fb4e4f8b94a1f2eb3e030ed67d1d744344a2d"
        },
        "downloads": -1,
        "filename": "nyan-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "358d98c15b32e86eab01b4e9ad4edb3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 24234,
        "upload_time": "2020-04-18T15:25:16",
        "upload_time_iso_8601": "2020-04-18T15:25:16.113188Z",
        "url": "https://files.pythonhosted.org/packages/b0/ee/d65171a9a43a73316589796e5bfec6c14ccaee37072b2e1d8f1e97ccc2b8/nyan-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1f2f80a96002c69a4bf6845f72098dc46865e54ba2527ba11d61a61be21cc2c",
          "md5": "784a946cc1295192347da7c9ebdff671",
          "sha256": "dc365203903384fb69ae48aa3ad40903a14ddc94a5174ebe9e2957b96b8205d8"
        },
        "downloads": -1,
        "filename": "nyan-0.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "784a946cc1295192347da7c9ebdff671",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 24585,
        "upload_time": "2020-04-22T18:47:02",
        "upload_time_iso_8601": "2020-04-22T18:47:02.137470Z",
        "url": "https://files.pythonhosted.org/packages/e1/f2/f80a96002c69a4bf6845f72098dc46865e54ba2527ba11d61a61be21cc2c/nyan-0.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a66394bea2de0e4cb179e57a2342827235c9b9f040944f8a47e8c8b1c3dd684a",
          "md5": "afa1bdbada90f94a1ed1a8957eff9b96",
          "sha256": "02b715b97e2e7199ed9928e1614a4a0ee18c5109138ec51d31b4bd267e54cfb9"
        },
        "downloads": -1,
        "filename": "nyan-0.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "afa1bdbada90f94a1ed1a8957eff9b96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 24239,
        "upload_time": "2020-04-22T18:47:03",
        "upload_time_iso_8601": "2020-04-22T18:47:03.761838Z",
        "url": "https://files.pythonhosted.org/packages/a6/63/94bea2de0e4cb179e57a2342827235c9b9f040944f8a47e8c8b1c3dd684a/nyan-0.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fde111fbeb08c84ea9320e6bfad8b14b488422b435b56e3213c348e5eb748602",
          "md5": "d8b1d93be1e972cbdc6c9bf33da5d041",
          "sha256": "ef4cbfd8045ad9aafdcc8fe958a78b6f1a2f4eeaadc24a63cab940a70487244d"
        },
        "downloads": -1,
        "filename": "nyan-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8b1d93be1e972cbdc6c9bf33da5d041",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25001,
        "upload_time": "2020-04-22T22:27:36",
        "upload_time_iso_8601": "2020-04-22T22:27:36.365806Z",
        "url": "https://files.pythonhosted.org/packages/fd/e1/11fbeb08c84ea9320e6bfad8b14b488422b435b56e3213c348e5eb748602/nyan-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f33ca17326d811d742335787b552e17b9db4ef6f915aa2639a21694730b05530",
          "md5": "2adcce643e4c5c1e74baf43ddf535841",
          "sha256": "c745ac6ca8b3fe3d84125ec821806deec361e8e88b9a73bd932d4e267f1414d1"
        },
        "downloads": -1,
        "filename": "nyan-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2adcce643e4c5c1e74baf43ddf535841",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 24753,
        "upload_time": "2020-04-22T22:27:38",
        "upload_time_iso_8601": "2020-04-22T22:27:38.790176Z",
        "url": "https://files.pythonhosted.org/packages/f3/3c/a17326d811d742335787b552e17b9db4ef6f915aa2639a21694730b05530/nyan-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7c3bf137782ff52b547d5b6492aa0ad4d4586d3ddded755479542d8a8eb8656",
          "md5": "255fc2a3067c13312abb55fbb57619a1",
          "sha256": "6994992cd691c8b384619ef5aa2966c99851ac96ccc672007df0cb3669a6db25"
        },
        "downloads": -1,
        "filename": "nyan-0.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "255fc2a3067c13312abb55fbb57619a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25065,
        "upload_time": "2020-04-23T17:46:01",
        "upload_time_iso_8601": "2020-04-23T17:46:01.063723Z",
        "url": "https://files.pythonhosted.org/packages/e7/c3/bf137782ff52b547d5b6492aa0ad4d4586d3ddded755479542d8a8eb8656/nyan-0.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e43854fde928c272262a3590d24841e1b17ab68cbd6cfbad18ebe979a6b9a28e",
          "md5": "9fe0fc0bef704745a6a58b9ba59343a8",
          "sha256": "5d15661fd97b09b0c60bd5bd4bfa0017de3346c6408af129a12771c23d379d53"
        },
        "downloads": -1,
        "filename": "nyan-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9fe0fc0bef704745a6a58b9ba59343a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 24793,
        "upload_time": "2020-04-23T17:46:02",
        "upload_time_iso_8601": "2020-04-23T17:46:02.904087Z",
        "url": "https://files.pythonhosted.org/packages/e4/38/54fde928c272262a3590d24841e1b17ab68cbd6cfbad18ebe979a6b9a28e/nyan-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67826322cec76ef958f01d9f42bf65ccbda567cb2c8f99dcde016efdd2f1157e",
          "md5": "060d2b079a963fb86eafaca1a2f6c95c",
          "sha256": "4129f2f23b8a4d62dead2e6330395adc7a2bbede2b696b23003a006a52617a83"
        },
        "downloads": -1,
        "filename": "nyan-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "060d2b079a963fb86eafaca1a2f6c95c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25122,
        "upload_time": "2020-04-24T18:58:42",
        "upload_time_iso_8601": "2020-04-24T18:58:42.682283Z",
        "url": "https://files.pythonhosted.org/packages/67/82/6322cec76ef958f01d9f42bf65ccbda567cb2c8f99dcde016efdd2f1157e/nyan-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96b45a974213b16a030ed08af842624f587f4a85e949fd95b0c247c91bb78c6f",
          "md5": "bf078ba697082237beae109205b7265e",
          "sha256": "d5710ec54ba956f58ef3088b5e647a949b537a4eed2d96f6ca5d39475f56f63f"
        },
        "downloads": -1,
        "filename": "nyan-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bf078ba697082237beae109205b7265e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 24838,
        "upload_time": "2020-04-24T18:58:44",
        "upload_time_iso_8601": "2020-04-24T18:58:44.354739Z",
        "url": "https://files.pythonhosted.org/packages/96/b4/5a974213b16a030ed08af842624f587f4a85e949fd95b0c247c91bb78c6f/nyan-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a567835bb1a446d7f18d49ebd565e8dd8400f43717ee2cfafac9d3b95ab082f8",
          "md5": "53ef7426926a659139104ecca2d10fa4",
          "sha256": "69d7de5ffaa56bc5d01ca7c7ad7724ad1d3d8dadaa4639b6482c36d27dc77f8b"
        },
        "downloads": -1,
        "filename": "nyan-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53ef7426926a659139104ecca2d10fa4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 25227,
        "upload_time": "2020-05-30T10:26:16",
        "upload_time_iso_8601": "2020-05-30T10:26:16.827643Z",
        "url": "https://files.pythonhosted.org/packages/a5/67/835bb1a446d7f18d49ebd565e8dd8400f43717ee2cfafac9d3b95ab082f8/nyan-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdcaab329b9011378bfe3a1e154b1b32bb3e0ff4168e70eaf686625bd8bec599",
          "md5": "d1d6bad517caa736d02ab95c440cac99",
          "sha256": "7557c88e2940550662a61c00ba3d650828fce803d0650c18f272e2120ab9ca56"
        },
        "downloads": -1,
        "filename": "nyan-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d1d6bad517caa736d02ab95c440cac99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 24974,
        "upload_time": "2020-05-30T10:26:18",
        "upload_time_iso_8601": "2020-05-30T10:26:18.770690Z",
        "url": "https://files.pythonhosted.org/packages/bd/ca/ab329b9011378bfe3a1e154b1b32bb3e0ff4168e70eaf686625bd8bec599/nyan-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aee30bbc109623c71eed202e7dd1a979c0fb56897594a842b00d949aa085a812",
        "md5": "ed898e19a6545533b6e574a221568889",
        "sha256": "f4bf97ebcbd0bf3fee4f22126d7f91196597aa0eb8d68e3ed7afc5442b8851cb"
      },
      "downloads": -1,
      "filename": "nyan-0.13.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ed898e19a6545533b6e574a221568889",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 25537,
      "upload_time": "2022-06-17T19:47:16",
      "upload_time_iso_8601": "2022-06-17T19:47:16.909954Z",
      "url": "https://files.pythonhosted.org/packages/ae/e3/0bbc109623c71eed202e7dd1a979c0fb56897594a842b00d949aa085a812/nyan-0.13.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29a0a8a737b71d0a520da0bcc93b8973cea455441adec55e9f525f097ddd5edf",
        "md5": "f7dba82aeae0b329196a9ad8f2bdc0d7",
        "sha256": "33aec85ad61e18168c72b16a6a16d085922c97f7df5b5258e59fd5fdb4f9bf78"
      },
      "downloads": -1,
      "filename": "nyan-0.13.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f7dba82aeae0b329196a9ad8f2bdc0d7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 25183,
      "upload_time": "2022-06-17T19:47:19",
      "upload_time_iso_8601": "2022-06-17T19:47:19.602522Z",
      "url": "https://files.pythonhosted.org/packages/29/a0/a8a737b71d0a520da0bcc93b8973cea455441adec55e9f525f097ddd5edf/nyan-0.13.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}