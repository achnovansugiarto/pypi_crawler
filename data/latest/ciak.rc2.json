{
  "info": {
    "author": "Gabriele Bozzola",
    "author_email": "sbozzolator@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p align=\"center\">\n<img src=\"https://github.com/Sbozzolo/ciak/raw/main/logo.png\" width=\"534\" height=\"178\">\n</p>\n\n[![PyPI version](https://badge.fury.io/py/ciak.svg)](https://badge.fury.io/py/ciak)\n[![Test](https://github.com/Sbozzolo/ciak/actions/workflows/test.yml/badge.svg)](https://github.com/Sbozzolo/ciak/actions/workflows/test.yml)\n[![Coverage](https://codecov.io/github/Sbozzolo/ciak/branch/main/graph/badge.svg?token=0D6WFHT1UQ)](https://codecov.io/github/Sbozzolo/ciak)\n\n`ciak` is a Python program to run executables according to a configuration file\n(a *ciakfile*) optionally containing user-declared variables that can be\nadjusted at runtime.\n\nA ciakfile is a simple text file that describes a nested tree using asterisks\nand that has placeholders for runtime-controllable variables, supporting\ndefaults. Thanks to the nested tree structure, the amount of typing required is\ndrastically reduced when the same commands have to be executed multiple times\nbut with different arguments. On the other hand, support for placeholders allows\nfor code reuse and the same ciakfile can be used for different situations. This\nis facilitated by the fact that if you define an environmental variable\n`CIAKFILES_DIR`, `ciak` will know where to look for your ciakfiles, so you can\ncall them from anywhere in your system. Finally, in ciakfiles, every line that\ndoes not start with an asterisk (up to leading spaces) is treated as a comment.\nWith this feature, one can write extensive commentaries that perfectly blend in\nwith the configuration itself.\n\nFor an example of use case, see the section [\"Complete explanation of a specific\nuse case\"](https://github.com/Sbozzolo/ciak#going-over-a-specific-use-case). See\nbelow for an example of what a configuration file looks like.\n\n## Getting started\n\n`ciak` is available on PyPI. You can install it with `pip`:\n\n``` sh\npip3 install ciak\n```\n`ciak` requires `python >= 3.9` and has no external runtime dependency.\nSee [ciak36](https://github.com/Sbozzolo/ciak#ciak36) for compatibility with previous\nversions of Python.\n\nThe best way to get started with `ciak` is to check the\n[examples](https://github.com/Sbozzolo/ciak#examples) out.\n\n### Examples\n\nIn this Section, we are going to explore the various ways in which `ciak` can be\nused, form the simplest, to the most complex.\n\n#### Level 0: To run a list of command-line instructions\n\nSuppose you want to execute a set of command-line instructions. For instance,\ncreating a folder, creating three empty files, and moving them inside the folder. (This is a contrived\nexample, but we are going to build upon this later.) A shell script for this\ntask might look like:\n``` sh\nmkdir myfolder\ntouch myfolder/first\ntouch myfolder/second\ntouch myfolder/third\n```\nThis can be easily converted into a ciakfile by prepending asterisks in front of\neach line:\n``` org\n* mkdir myfolder\n* touch first\n* touch second\n* touch third\n* mv first second third myfolder\n```\nNow, assuming this is saved into a `ciak0.org`, it can be executed with\n``` sh\nciak -c ciak0.org\n```\nOur `ciak0.org` contains some redundancies: we run `touch` three times. With `ciak`,\nwe can express this more tersely by adding one nesting level\n``` org\n* mkdir myfolder\n* touch\n** first\n** second\n** third\n* mv first second third myfolder\n```\nSaving this into `ciak01.org` and executing with `ciak -c ciak1.org` will produce\nthe same result as before. ciakfiles represent sequences of commands using nested trees,\nso that similar commands can be executed with minimal variation. ciakfiles are meant to\nbe self-documenting: every line that does not start with an asterisk is a comment, so we\ncan expand our example:\n``` org\n* mkdir myfolder\n  First, we create our target folder. We will place everything inside here.\n* touch\n  Next, we create three files (`first`, `second`, `third`).\n** first\n** second\n** third\n* mv first second third myfolder\n  We move the three files inside our target folder.\n```\n\n#### Level 1: To parallelize the execution of certain instructions\n\nBuilding upon our example, `ciak` supports mixing parallel and serial blocks.\nFor instance, we can demand that the three files `first`, `second`, `third` are\ncreated in parallel. To do so, we add `* # BEGIN_PARALLEL` and `* #\nEND_PARALLEL` clauses:\n``` org\n* mkdir myfolder\n  First, we create our target folder. We will place everything inside here.\n* # BEGIN_PARALLEL\n* touch\n  Next, we create three files (`first`, `second`, `third`).\n** first\n** second\n** third\n* # END_PARALLEL\n* mv first second third myfolder\n  We move the three files inside our target folder.\n```\nSaving this to `ciak1.org`, and executing with `ciak -c ciak1.org`, `ciak` will\nexecute instructions serially, until it finds a parallel block, which is then executed\nin parallel (with as many cores as available), and then it goes back to running commands\nserially. The flag `--no-parallel` transforms parallel blocks into serial ones.\n\n#### Level 2: To parametrize the execution of certain instructions\n\nciakfiles are can contain placeholders values that are controlled at runtime.\nThis makes `ciak` powerful and promotes code reuse. The syntax for command-line\nadjustable placeholders is `{{key::default_value}}`.\n\nConsider the simple ciakfile is\n``` org\n* ls {{pwd::/tmp}}\n```\nAssuming we save the file to `ciak2.org`, we can then run\n``` sh\nciak -c ciak2.org --pwd $HOME\n```\nThis will execute the command `ls $HOME`. If we were to run\n``` sh\nciak -c ciak2.org\n```\nthen the default value for `pwd` is used and the command `ls /tmp` is run instead.\n\nWe can extend our previous example:\n``` org\n* mkdir {{dest::myfolder}}\n  First, we create our target folder. We will place everything inside here.\n* # BEGIN_PARALLEL\n* touch\n  Next, we create three files (`first`, `second`, `third`).\n** first\n** second\n** third\n* # END_PARALLEL\n* mv first second third myfolder\n  We move the three files inside our target folder.\n```\nNow, we can control the destination folder when running with through the `--dest `\nflag.\n\n#### Level 3: To write complex workflows once, and use them over and over\n\nWe saw that we can produce complex ciakfiles that can be controlled via the\ncommand line. The last piece of the puzzle is `CIAKFILES_DIR`. If you set this\nenvironmental variable to a folder, `ciak` will try to find ciakfiles in that\nfolder (by default it is `.`). So, with `ciak`, you can write complex and\ngeneral workflows and easily invoke them from anywhere in your filesystem. For\ninstance, if you have a ciakfile named `compute_result` that defined a\n``{{datadir::.}}`` argument in your `CIAKFILES_DIR`, you can navigate to the\nfolder where you have the data and execute `ciak compute_result`. Check the\nsection on [ciak and\norg-mode](https://github.com/Sbozzolo/ciak#ciak-and-org-mode) out to see a\nreal-life example.\n\n## The ciakfile configuration syntax\n\nValid ciakfiles are text files with the following characteristics:\n- Lines that do no start with asterisk (up to initial spaces) are considered\n  comments.\n- The number of asterisks defines the level in the three and the parent of an\n  item is the first item with fewer asterisk above it.\n- Executables have to be on the first level of the tree.\n- Placeholders can be defined with the syntax `{{key::default_value}}`. These\n  will be substituted at runtime with values specified via command-line or with\n  the default value.\n- Indentation, leading/trailing spaces, and file extension do not matter.\n- Parallel blocks must be at the top level (only one asterisk), they start with\n  `# BEGIN_PARALLEL` and end with `# END_PARALLEL`. Nested parallel blocks will\n  be ignored.\n\n## Why should I use ciak instead of a shell script?\n\nAt a first glance, `ciak` may seem just a convoluted way to write a shell\nscript. This is not the case: `ciak` enables workflows that are impractical with\nshell script. The main advantages of `ciak` are:\n\n- Simplify repeated arguments across multiple scripts\n- Easily add keyword arguments with defaults\n- Have parallelization with no effort\n- Strong emphasis on self-documentation\n\nHowever, by design, `ciak` does not support any shell feature (like input/output\nredirection, for loops, variable assignment, ...).\n\n`ciak` can trivially parallelize the execution of some commands. Hence, you can\nuse it as a replacement of [GNU\nParallel](https://www.gnu.org/software/parallel/) to parallelize commands\ndefined in a configuration file.\n\n### ciak36\n\n`ciak` uses features available only with Python3.9 or later versions. For\nconvenience, an executable `ciak36` is provided, compatible with Python3.6.\nThere is no difference in features available between `ciak` and `ciak36`.\n`ciak36` is automatically generated by `ciak` with the `generate_ciak36.sh`\nscript. `ciak36` will be dropped in the future.\n\n### ciak and org-mode\n\n`ciak` borrows its syntax from [GNU Emacs](https://gnu.org/software/emacs/)'s\n[org-mode](https://orgmode.org) . As such, if you save your ciakfiles with\nextension `.org` and you open them with Emacs, you gain access to a large number\nof additional features (e.g., automatic coloring and indentation, subtree\nfolding, tables, exporting to different formats, ...). This is what an example\nof a ciakfile will look like in (customized) Emacs\n\n![org-mode\nscreenshot](https://github.com/Sbozzolo/ciak/raw/main/ss-org-mode.png)\n\nUsing org-mode greatly enhances `ciak`'s self-documenting capabilities.\n\n## Options\n\n`--fail-fast`, if enabled, `ciak` stops as soon as a non-zero return code is\nfound.\n\n`--no-parellel`, if enabled, the commands are executed serially. By defaults,\ncommands are executed in parallel with a number of workers that is equal to the\nnumber of available cores on the machine.\n\n`--dry-run`, if enabled, `ciak` will print the command that would be executed,\nwithout executing any.\n\n## Development\n\nWe use:\n* [Poetry](https://python-poetry.org) to manage dependencies, build, and publish\n  `motionpicture`.\n* [Black](https://github.com/psf/black) for formatting the code (with 89\n  columns).\n* [pytest](https://pytest.org) for unit tests.\n* [coverage](https://coverage.readthedocs.io/en/) for test coverage.\n* [mypy](https://mypy.readthedocs.io/) for static type analysis.\n* [isort](https://isort.readthedocs.io/) to sort the import statements.\n* [flake8](https://flake8.pycqa.org/) for general static analysis.\n* [pre-commit](https://pre-commit.com/) to apply linting rules before commits.\n* GitHub actions for continuous integration.\n\nWe are happy to accept contributions.\n\n## What does ciak mean?\n\nIn Italian, the word *ciak* is an onomatopoeia that indicates the sound of the\nclapperboard used by movie directors to kick off the recording of a scene. Along\nthe same lines, when you use this program, you are the script-writer and the\ndirector: you define what needs to be run in the ciakfile and you start and\ncontrol its execution with `ciak`, your clapperboard.\n\n## Going over a specific use case\n\n`ciak` was developed to run analysis of [Einstein\nToolkit](http://einsteintoolkit.org) simulations using\n[kuibit](https://github.com/Sbozzolo/kuibit). `ciak` solves four problems:\n1. Simplification in writing the analysis\n2. Reuse of the code\n3. Reproducibility and self-documentation in the analysis\n4. Parallelization of analysis\n\nNormally, one runs several simulations of the same kind with only a handful of\nparameters changed. The entire analysis can be condensed into a ciakfile which\ntakes as command-line input the folder with the simulation output.\n\nMoreover, distributing the ciakfile along with the scripts that are called\nallows other people to easily reproduce the analysis. The comments in the\nciakfile are helpful to explain what is going on and why certain values are set\nat the values they are set.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sbozzolo/ciak",
    "keywords": "",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ciak",
    "package_url": "https://pypi.org/project/ciak/",
    "platform": null,
    "project_url": "https://pypi.org/project/ciak/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sbozzolo/ciak/issues",
      "Homepage": "https://github.com/sbozzolo/ciak",
      "Repository": "https://github.com/sbozzolo/ciak"
    },
    "release_url": "https://pypi.org/project/ciak/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6.2,<4.0.0",
    "summary": "Run executables according to a configuration file",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16011988,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "539a583d9ff6499896c88a7b3058bb28a7ea09e95e7ee13b0b7e7cb8fdd9bf8e",
          "md5": "ea98504a850a8f37f0521d81288db04d",
          "sha256": "67f3b041c7eaaaa4be7fee94e8f1d7763b0e5af84c9505b2a96e0fb164534326"
        },
        "downloads": -1,
        "filename": "ciak-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea98504a850a8f37f0521d81288db04d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 38787,
        "upload_time": "2022-12-06T20:11:04",
        "upload_time_iso_8601": "2022-12-06T20:11:04.794185Z",
        "url": "https://files.pythonhosted.org/packages/53/9a/583d9ff6499896c88a7b3058bb28a7ea09e95e7ee13b0b7e7cb8fdd9bf8e/ciak-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35ad46369418970b598944159bc49096a641f993e63253a4c6a558115fb21836",
          "md5": "f53a4fff5a49901d666d91f4d4a6d799",
          "sha256": "2ee9ed0e1f6ab70e2ad845dc33eefd4237fc3ba27b0d39e809192614cdefff3a"
        },
        "downloads": -1,
        "filename": "ciak-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f53a4fff5a49901d666d91f4d4a6d799",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 30290,
        "upload_time": "2022-12-06T20:11:07",
        "upload_time_iso_8601": "2022-12-06T20:11:07.216386Z",
        "url": "https://files.pythonhosted.org/packages/35/ad/46369418970b598944159bc49096a641f993e63253a4c6a558115fb21836/ciak-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e60743243638ddb5861174340fb0f832abcd85ae6f14078eff7411bf3f443fe1",
          "md5": "b1f257528cc794ca164c5e333037c51f",
          "sha256": "1b4804adaeeb91eda3616b1a22d4ef6c28f2957242dc70895a4c3f6066ce3f67"
        },
        "downloads": -1,
        "filename": "ciak-0.1.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1f257528cc794ca164c5e333037c51f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 26369,
        "upload_time": "2021-03-08T22:32:49",
        "upload_time_iso_8601": "2021-03-08T22:32:49.709189Z",
        "url": "https://files.pythonhosted.org/packages/e6/07/43243638ddb5861174340fb0f832abcd85ae6f14078eff7411bf3f443fe1/ciak-0.1.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc279cc51e609b8fae6aaa99ef788cb290870a4613e9ca650e46c5b295bac91f",
          "md5": "f05a53ad897c794a16a2216e63a9abec",
          "sha256": "a8a3029da514f0eecf5e6d2638e3f6490da3fc2a81fc4a0ba10d63ec6329a77c"
        },
        "downloads": -1,
        "filename": "ciak-0.1.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "f05a53ad897c794a16a2216e63a9abec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4.0",
        "size": 24166,
        "upload_time": "2021-03-08T22:32:51",
        "upload_time_iso_8601": "2021-03-08T22:32:51.287877Z",
        "url": "https://files.pythonhosted.org/packages/cc/27/9cc51e609b8fae6aaa99ef788cb290870a4613e9ca650e46c5b295bac91f/ciak-0.1.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "539a583d9ff6499896c88a7b3058bb28a7ea09e95e7ee13b0b7e7cb8fdd9bf8e",
        "md5": "ea98504a850a8f37f0521d81288db04d",
        "sha256": "67f3b041c7eaaaa4be7fee94e8f1d7763b0e5af84c9505b2a96e0fb164534326"
      },
      "downloads": -1,
      "filename": "ciak-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea98504a850a8f37f0521d81288db04d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.2,<4.0.0",
      "size": 38787,
      "upload_time": "2022-12-06T20:11:04",
      "upload_time_iso_8601": "2022-12-06T20:11:04.794185Z",
      "url": "https://files.pythonhosted.org/packages/53/9a/583d9ff6499896c88a7b3058bb28a7ea09e95e7ee13b0b7e7cb8fdd9bf8e/ciak-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35ad46369418970b598944159bc49096a641f993e63253a4c6a558115fb21836",
        "md5": "f53a4fff5a49901d666d91f4d4a6d799",
        "sha256": "2ee9ed0e1f6ab70e2ad845dc33eefd4237fc3ba27b0d39e809192614cdefff3a"
      },
      "downloads": -1,
      "filename": "ciak-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f53a4fff5a49901d666d91f4d4a6d799",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.2,<4.0.0",
      "size": 30290,
      "upload_time": "2022-12-06T20:11:07",
      "upload_time_iso_8601": "2022-12-06T20:11:07.216386Z",
      "url": "https://files.pythonhosted.org/packages/35/ad/46369418970b598944159bc49096a641f993e63253a4c6a558115fb21836/ciak-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}