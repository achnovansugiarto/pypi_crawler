{
  "info": {
    "author": "ionite",
    "author_email": "dev@ionite.io",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# unisafe\n\n[![Build](https://github.com/ionite34/unisafe/actions/workflows/push-main.yml/badge.svg)](https://github.com/ionite34/unisafe/actions/workflows/push-main.yml)\n[![codecov](https://codecov.io/gh/ionite34/unisafe/branch/main/graph/badge.svg?token=359D2BXVEM)](https://codecov.io/gh/ionite34/unisafe)\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fionite34%2Funisafe.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fionite34%2Funisafe?ref=badge_shield)\n\nA stand-in replacement for `builtins.open` to read unknown or mixed text file encodings into UTF-8.\nOptionally automatically converts UTF-8 or Windows-1252 smart quotes into UTF-8 or ASCII.\n\n\n```python\nfrom unisafe import uread\n\n# API is same as builtins.open, use read() for all lines\nwith uread('file.csv') as f:\n    lines = f.read()\n\n# Use an iterator to get each text line\nwith uread('file.csv') as f:\n    for line in f:\n        print(line)\n```\n\nThe `uread` function returns a [TextIOWrapper](https://docs.python.org/3/library/io.html#io.TextIOWrapper), just like Python's built-in [open](https://docs.python.org/3/library/functions.html#open)\n(when using the 'r' mode). API behavior is exactly the same as the built-in method, besides the additional runtime encoding detection and conversions.\nA file handle will opened in the 'rb' or read binary mode. Writing is not supported.\n\n```python\nfrom unisafe import uread\n\nf1 = open('test.txt', 'r', encoding='utf-8')\ntype(f1)\n# -> _io.TextIOWrapper\n\nf2 = uread('test.txt')\ntype(f2)\n# -> _io.TextIOWrapper\n```\n\nWorks with the [csv](https://docs.python.org/3/library/csv.html) library and third party libraries such\nas [pandas](https://github.com/pandas-dev/pandas)\n\n```python\nfrom unisafe import uread\nimport pandas as pd\nimport csv\n\nwith uread('file.csv') as f:\n    table = csv.reader(f)\n    \nwith uread('file.csv') as f:\n    df = pd.read_csv(f, encoding='utf-8')\n```\n\n## License\n\nThe code in this project is released under the [MIT License](LICENSE).\n\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fionite34%2Funisafe.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Fionite34%2Funisafe?ref=badge_large)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ionite34/unisafe",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "unisafe",
    "package_url": "https://pypi.org/project/unisafe/",
    "platform": null,
    "project_url": "https://pypi.org/project/unisafe/",
    "project_urls": {
      "Homepage": "https://github.com/ionite34/unisafe"
    },
    "release_url": "https://pypi.org/project/unisafe/0.1.0/",
    "requires_dist": [
      "beautifulsoup4 (~=4.11.1)",
      "cchardet (~=2.1.7)"
    ],
    "requires_python": ">=3.7",
    "summary": "Read text files with unknown or mixed encodings into UTF-8.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15258729,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "885da3febd547a9b0012f16207dedd9bc2b35d558a626dae6f496923c84dbfa8",
          "md5": "3192b2018bc3c9bf6bfec2e1d1da61de",
          "sha256": "c6863c0bb4d95d7fec9f1abeda9f04aff9b6af032552e8716a868dff335719d0"
        },
        "downloads": -1,
        "filename": "unisafe-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3192b2018bc3c9bf6bfec2e1d1da61de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16935,
        "upload_time": "2022-09-29T18:29:33",
        "upload_time_iso_8601": "2022-09-29T18:29:33.489579Z",
        "url": "https://files.pythonhosted.org/packages/88/5d/a3febd547a9b0012f16207dedd9bc2b35d558a626dae6f496923c84dbfa8/unisafe-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "885da3febd547a9b0012f16207dedd9bc2b35d558a626dae6f496923c84dbfa8",
        "md5": "3192b2018bc3c9bf6bfec2e1d1da61de",
        "sha256": "c6863c0bb4d95d7fec9f1abeda9f04aff9b6af032552e8716a868dff335719d0"
      },
      "downloads": -1,
      "filename": "unisafe-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3192b2018bc3c9bf6bfec2e1d1da61de",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 16935,
      "upload_time": "2022-09-29T18:29:33",
      "upload_time_iso_8601": "2022-09-29T18:29:33.489579Z",
      "url": "https://files.pythonhosted.org/packages/88/5d/a3febd547a9b0012f16207dedd9bc2b35d558a626dae6f496923c84dbfa8/unisafe-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}