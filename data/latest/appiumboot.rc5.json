{
  "info": {
    "author": "shigebeyond",
    "author_email": "772910474@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing"
    ],
    "description": "[GitHub](https://github.com/shigebeyond/AppiumBoot) | [Gitee](https://gitee.com/shigebeyond/AppiumBoot)\n\n[English document](blob/master/README.en.md)\n\n# AppiumBoot - yaml驱动Appium测试\n\n## 概述\nAppium是移动端的自动化测试工具，但是要写python代码；\n\n考虑到部分测试伙伴python能力不足，因此扩展Appium，支持通过yaml配置测试步骤;\n\n框架通过编写简单的yaml, 就可以执行一系列复杂的 App 操作步骤, 如点击/输入/拖拽/上下滑/左右滑/放大缩小/提取变量/打印变量等，极大的简化了伙伴编写自动化测试脚本的工作量与工作难度，大幅提高人效；\n\n框架通过提供类似python`for`/`if`/`break`语义的步骤动作，赋予伙伴极大的开发能力与灵活性，能适用于广泛的测试场景。\n\n框架提供`include`机制，用来加载并执行其他的步骤yaml，一方面是功能解耦，方便分工，一方面是功能复用，提高效率与质量，从而推进测试整体的工程化。\n\n## 特性\n1. 基于 Appium 的webdriver\n2. 支持通过yaml来配置执行的步骤，简化了自动化测试开发:\n每个步骤可以有多个动作，但单个步骤中动作名不能相同（yaml语法要求）;\n动作代表webdriver上的一种操作，如tap/swipe/scoll等等;\n3. 支持复杂的手势: 拖拽/上下滑/左右滑/放大缩小/多个点组成的移动轨迹等;\n4. 支持提取器\n5. 支持校验器\n6. 支持识别验证码(使用有道ocr)\n7. 支持类似python`for`/`if`/`break`语义的步骤动作，灵活适应各种场景\n8. 支持`include`引用其他的yaml配置文件，以便解耦与复用\n\n## todo\n1. 支持更多的动作\n\n## 安装\n```\npip3 install AppiumBoot\n```\n\n安装后会生成命令`AppiumBoot`;\n\n注： 对于深度deepin-linux系统，生成的命令放在目录`~/.local/bin`，建议将该目录添加到环境变量`PATH`中，如\n```\nexport PATH=\"$PATH:/home/shi/.local/bin\"\n```\n\n## 使用\n1. 先启动 appium\n\n2. 修改配置文件(yml)中的 `init_driver` 动作的参数, 如平台、app包等\n\n3. 使用\n```\n# 1 执行单个文件\nAppiumBoot 步骤配置文件.yml\n\n# 2 执行多个文件\nAppiumBoot 步骤配置文件1.yml 步骤配置文件2.yml ...\n\n# 3 执行单个目录, 即执行该目录下所有的yml文件\nAppiumBoot 步骤配置目录\n\n# 4 执行单个目录下的指定模式的文件\nAppiumBoot 步骤配置目录/step-*.yml\n```\n\n- 如执行 `AppiumBoot example/step-material.yml`:\n你需要先安装[android material组件demo app](https://gitee.com/lizhenghaodamowang/material-components-android);\n效果见[演示视频](https://www.zhihu.com/zvideo/1542517089130147840);\n输出如下:\n```\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/step-material.yml\nhandle action: init_driver={'executor': 'http://localhost:4723/wd/hub', 'desired_caps': {'platformName': 'Android', 'platformVersion': '9', 'deviceName': 'f978cc97', 'appPackage': 'io.material.catalog', 'appActy': 'io.material.catalog.main.MainActivity', 'automationName': 'UiAutomator2', 'noReset': True}}\nhandle action: include=material/comp1.yml\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/material/comp1.yml\nhandle action: click_by={'xpath': '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/aid.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[1]/android.widget.LinearLayout'}\nhandle action: sleep=1\nhandle action: click_by={'id': 'io.material.catalog:id/cat_demo_landing_row_root'}\nhandle action: swipe_up=None\nhandle action: sleep=1\nhandle action: swipe_down=None\nhandle action: sleep=1\nhandle action: click_by={'id': 'io.material.catalog:id/end'}\nhandle action: sleep=2\nhandle action: click_by={'id': 'io.material.catalog:id/center'}\nhandle action: sleep=2\nhandle action: click_by={'id': 'io.material.catalog:id/attach_toggle'}\nhandle action: sleep=2\nhandle action: click_by={'id': 'io.material.catalog:id/center'}\nhandle action: include=material/back.yml\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/material/back.yml\nhandle action: sleep=1\nhandle action: back=None\nhandle action: sleep=1\nhandle action: back=None\nhandle action: include=material/comp2.yml\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/material/comp2.yml\nhandle action: click_by={'xpath': '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/aid.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[2]/android.widget.LinearLayout'}\nhandle action: sleep=1\nhandle action: click_by={'xpath': '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/aid.view.ViewGroup/android.widget.ScrollView/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeLayout'}\nhandle action: click_by={'aid': 'Page 2'}\nhandle action: click_by={'aid': 'Theme Switcher'}\nhandle action: sleep=1\nhandle action: click_by={'xpath': '(//android.widget.RadioButton[@content-desc=\"Green\"])[1]'}\nhandle action: sleep=1\nhandle action: click_by={'id': 'io.material.catalog:id/apply_button'}\nhandle action: sleep=1\nhandle action: click_by={'id': 'io.material.catalog:id/add_button'}\nhandle action: sleep=1\nhandle action: click_by={'id': 'io.material.catalog:id/remove_button'}\nhandle action: sleep=2\nhandle action: back=None\nhandle action: sleep=1\nhandle action: click_by={'xpath': '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/aid.view.ViewGroup/android.widget.ScrollView/android.widget.LinearLayout/android.widget.LinearLayout/android.widget.LinearLayout/android.widget.RelativeLayout[3]'}\nhandle action: sleep=1\nhandle action: click_by={'aid': 'Alarm'}\nhandle action: sleep=1\nhandle action: click_by={'aid': 'Clock'}\nhandle action: sleep=1\nhandle action: click_by={'aid': 'Timer'}\nhandle action: sleep=1\nhandle action: click_by={'aid': 'Stopwatch'}\nhandle action: include=material/back.yml\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/material/back.yml\nhandle action: sleep=1\nhandle action: back=None\nhandle action: sleep=1\nhandle action: back=None\nhandle action: include=material/comp3.yml\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/material/comp3.yml\nhandle action: click_by={'xpath': '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/aid.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[3]/android.widget.LinearLayout'}\nhandle action: sleep=1\nhandle action: click_by={'id': 'io.material.catalog:id/cat_demo_landing_row_root'}\nhandle action: print=非全屏的上拉\n非全屏的上拉\nhandle action: sleep=1\nhandle action: swipe_up=None\nhandle action: sleep=1\nhandle action: swipe_vertical=0.55,0.8\nhandle action: sleep=1\nhandle action: click_by={'id': 'io.material.catalog:id/cat_fullscreen_switch'}\nhandle action: sleep=1\nhandle action: print=全屏的上拉\n全屏的上拉\nhandle action: swipe_up=None\nhandle action: sleep=1\nhandle action: swipe_down=None\nhandle action: include=material/back.yml\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/material/back.yml\nhandle action: sleep=1\nhandle action: back=None\nhandle action: sleep=1\nhandle action: back=None\nhandle action: include=material/comp4.yml\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/material/comp4.yml\nhandle action: click_by={'xpath': '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/aid.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[4]/android.widget.LinearLayout'}\nhandle action: sleep=1\nhandle action: click_by={'xpath': '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/aid.view.ViewGroup/android.widget.ScrollView/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeLayout'}\nhandle action: click_by={'aid': 'Theme Switcher'}\nhandle action: sleep=1\nhandle action: click_by={'xpath': '(//android.widget.RadioButton[@content-desc=\"Yellow\"])[1]'}\nhandle action: sleep=1\nhandle action: click_by={'id': 'io.material.catalog:id/apply_button'}\nhandle action: click_by={'id': 'io.material.catalog:id/material_button'}\nhandle action: sleep=1\nhandle action: back=None\n......\n```\n命令会自动打开[android material组件demo app](https://gitee.com/lizhenghaodamowang/material-components-android)，并按照步骤配置文件的描述来执行动作，如下拉、上拉、左滑、点击按钮等，一个个组件页面去操作\n\n- 如执行 `AppiumBoot example/step-zhs.yml`:\n你要先安装众划算app;\n输出如下:\n```\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/step-zhs.yml\nhandle action: init_driver={'executor': 'http://localhost:4723/wd/hub', 'desired_caps': {'platformName': 'Android', 'platformVersion': '9', 'deviceName': 'f978cc97', 'appPackage': 'com.zhs.zhonghuasuanapp', 'apivity': 'com.zhs.activity.StartActivity', 'automationName': 'UiAutomator2', 'noReset': True}}\nhandle action: sleep=7\nhandle action: click_by_if_exist={'id': 'com.zhs.zhonghuasuanapp:id/img_start'}\nhandle action: start_recording_screen=None\nhandle action: swipe_up=None\nhandle action: include=zhs/login.yml\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/zhs/login.yml\nhandle action: click_by={'id': 'com.zhs.zhonghuasuanapp:id/tab_my_image'}\nhandle action: sleep=2\nhandle action: once=[{'moveon_if': \"boot.exist_by('id', 'com.zhs.zhonghuasuanapp:id/tv_account_login')\", 'click_by': {'id': 'com.zhs.zhonghuasuanapp:id/tv_account_login'}, 'sleep': 2}, {'input_by_id': {'com.zhsnghuasuanapp:id/edit_login_username': 'shigebeyond', 'com.zhs.zhonghuasuanapp:id/edit_login_password': 'shige123'}}, {'click_by': {'id': 'com.zhs.zhonghuasuanapp:id/box_user_agreement'}}, {'click_by': {'id': 'com.zhs.zhonghuasuanapp:id/login_submit'}, 'sleep': 4}, {'click_by_if_exist': {'id': 'com.zhs.zhonghuasuanapp:id/btn_i_know'}}, {'click_by_if_exist': {'id': 'com.zhs.zhonghuasuanapp:id/tv_hid_guid'}}]\n-- For loop start: for(1) -- \n第1次迭代\nhandle action: moveon_if=boot.exist_by('id', 'com.zhs.zhonghuasuanapp:id/tv_account_login')\n-- For loop break: for(1), break condition: not (boot.exist_by('id', 'com.zhs.zhonghuasuanapp:id/tv_account_login')) -- \nhandle action: sleep=2\nhandle action: include=zhs/apply.yml\nLoad and run step file: /ohome/shi/code/python/AppiumBoot/example/zhs/apply.yml\nhandle action: click_by={'id': 'com.zhs.zhonghuasuanapp:id/tab_new_image'}\nhandle action: sleep=4\nhandle action: swipe_up=None\nhandle action: sleep=2\nhandle action: swipe_down=None\n......\n```\n命令会自动打开众划算app，并按照步骤配置文件的描述来执行动作，如下拉、上拉、左滑、点击按钮等\n\n## 步骤配置文件及demo\n用于指定多个步骤, 示例见源码 [example](https://github.com/shigebeyond/AppiumBoot/tree/main/example) 目录下的文件;\n\n顶级的元素是步骤;\n\n每个步骤里有多个动作(如sleep)，如果动作有重名，就另外新开一个步骤写动作，这是由yaml语法限制导致的，但不影响步骤执行。\n\n[demo](https://github.com/shigebeyond/AppiumBoot/blob/main/example/)\n\n[demo视频](https://www.zhihu.com/zvideo/1542517089130147840)\n\n## 查找元素的方法\n1. id: 根据 id 属性值来查找, 对应`By.ID`\n2. sid: 根据 accessibility_id 属性值来查找, 对应`By.ACCESSIBILITY_ID`\n3. class: 根据类名来查找, 对应`By.CLASS_NAME`\n4. xpath: 根据 xpath 来查找, 对应`By.XPATH`\n\n## 配置详解\n支持通过yaml来配置执行的步骤;\n\n每个步骤可以有多个动作，但单个步骤中动作名不能相同（yaml语法要求）;\n\n动作代表webdriver上的一种操作，如tap/swipe/scoll等等;\n\n下面详细介绍每个动作:\n\n1. init_driver: 初始化driver\n```yaml\ninit_driver:\n    executor: http://localhost:4723/wd/hub\n    desired_caps:\n      platformName: Android\n      platformVersion: '9'\n      deviceName: f978cc97\n      appPackage: io.material.catalog\n      appActivity: io.material.catalog.main.MainActivity\n      automationName: UiAutomator2\n      noReset: true\n```\n\n2. close_driver: 关闭driver\n```yaml\nclose_driver:\n```\n\n3. sleep: 线程睡眠; \n```yaml\nsleep: 2 # 线程睡眠2秒\n```\n\n4. print: 打印, 支持输出变量/函数; \n```yaml\n# 调试打印\nprint: \"总申请数=${dyn_data.total_apply}, 剩余份数=${dyn_data.quantity_remain}\"\n```\n\n变量格式:\n```\n$msg 一级变量, 以$为前缀\n${data.msg} 多级变量, 用 ${ 与 } 包含\n```\n\n函数格式:\n```\n${random_str(6)} 支持调用函数，目前仅支持以下几个函数: random_str/random_int/random_element/incr\n```\n\n函数罗列:\n```\nrandom_str(n): 随机字符串，参数n是字符个数\nrandom_int(n): 随机数字，参数n是数字个数\nrandom_element(var): 从list中随机挑选一个元素，参数var是list类型的变量名\nincr(key): 自增值，从1开始，参数key表示不同的自增值，不同key会独立自增\n```\n\n5. input_by_id: 填充 id 指定的输入框; \n```yaml\ninput_by_id:\n  # 输入框id: 填充的值(支持写变量)\n  'io.material.catalog:id/cat_demo_input': '18877310999'\n```\n\n6. input_by_aid: 填充 accessibility_id 指定的输入框; \n```yaml\ninput_by_aid:\n  # 输入框accessibility_id: 填充的值(支持写变量)\n  'Input name': '18877310999'\n```\n\n7. input_by_class: 填充 指定类名的输入框; \n```yaml\ninput_by_class:\n  # 输入框类名: 填充的值(支持写变量)\n  'android.widget.EditText': '18877310999'\n```\n\n8. input_by_xpath: 填充 xpath 指定的输入框; \n```yaml\ninput_by_xpath:\n  # 输入框xpath路径: 填充的值(支持写变量)\n  '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.ScrollView/android.widget.LinearLayout/android.widget.LinearLayout[1]/android.widget.FrameLayout/android.widget.EditText': aaa\n```\n\n9. hide_keyboard: 隐藏键盘\n```yaml\nhide_keyboard:\n```\n\n10. swipe: 屏幕横扫(传坐标)\n```yaml\nswipe: \n    from: 100,100 # 起点坐标\n    to: 200,200 # 终点坐标\n    duration: 2 # 耗时秒数, 可省\n```\n\n11. swipe_up: 上滑(传比例)\n```yaml\nswipe_up: 0.55 # 移动幅度比例(占屏幕高度的比例)\nswipe_up: # 默认移动幅度比例为0.5\n```\n\n12. swipe_down: 下滑(传比例)\n```yaml\nswipe_down: 0.55 # 移动幅度比例(占屏幕高度的比例)\nswipe_down: # 默认移动幅度比例为0.5\n```\n\n13. swipe_left: 左滑(传y坐标)\n```yaml\nswipe_left: 100 # y坐标\nswipe_left: # 默认y坐标为中间\n```\n\n14. swipe_right: 右滑(传y坐标)\n```yaml\nswipe_right: 100 # y坐标\nswipe_right: # 默认y坐标为中间\n```\n\n15. swipe_vertical: 垂直方向(上下)滑动(传比例)\n```yaml\nswipe_vertical: 0.2,0.7 # y轴起点/终点位置在屏幕的比例，如 0.2,0.7，即y轴上从屏幕0.2比例处滑到0.7比例处\n```\n\n16. swipe_horizontal: 水平方向(左右)滑动(传比例)\n```yaml\nswipe_horizontal: 0.2,0.7 # x轴起点/终点位置在屏幕的比例，如 0.2,0.7，即x轴上从屏幕0.2比例处滑到0.7比例处\n```\n\n17. move_track: 移动轨迹(传坐标序列)\n```yaml\nmove_track: '800,1600;100,1600;100,600;800,600;360,600;360,1100' # 坐标序列，坐标之间使用;分割，如x1,y1;x2,y2\n```\n\n18. drag_and_drop_by: 拖拽(传元素): 从一个元素滑动到另一个元素，第二个元素替代第一个元素原本屏幕上的位置\n```yaml\ndrag_and_drop_by: \n    by: xpath # 元素查找方式: id/sid/class/xpath    \n    from: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[4]/android.widget.LinearLayout\n    to: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[2]/android.widget.LinearLayout\n```\n\n19. scroll_by: 滚动(传元素): 从一个元素滚动到另一元素，直到页面自动停止(有惯性)\n```yaml\nscroll_by: \n    by: xpath # 元素查找方式: id/sid/class/xpath    \n    from: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[4]/android.widget.LinearLayout\n    to: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[2]/android.widget.LinearLayout\n```\n\n20. move_by: 移动(传元素): 从一个元素移动到另一元素，无惯性\n```yaml\nmove_by: \n    by: xpath # 元素查找方式: id/sid/class/xpath    \n    from: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[4]/android.widget.LinearLayout\n    to: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[2]/android.widget.LinearLayout\n```\n\n21. zoom_in: 放大\n```yaml\nzoom_in: \n```\n\n22. zoom_out: 缩小\n```yaml\nzoom_out: \n```\n\n23. tap: 敲击屏幕(传坐标)\n```yaml\ntap: 200,200\n```\n\n24. tap_by: 敲击元素\n```yaml\ntap_by:\n    # 元素查找方式(id/sid/class/xpath) : 查找的值\n    #id: io.material.catalog:id/cat_demo_landing_row_root\n    xpath: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[1]/android.widget.LinearLayout # 按钮的xpath路径\n    # 耗时秒数, 可省, 可用于模拟长按\n    duration: 10\n```\n\n25. click_by/click_by_if_exist: 点击元素; \n```yaml\nclick_by:\n  # 元素查找方式(id/sid/class/xpath) : 查找的值\n  #id: io.material.catalog:id/cat_demo_landing_row_root\n  xpath: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[1]/android.widget.LinearLayout # 按钮的xpath路径\n```\n\n如果点击之前要先判断元素是否存在，则换用 click_by_if_exist\n\n26. shake: 摇一摇\n```yaml\nshake:\n```\n\n27. set_orientation: 设置屏幕方向\n```yaml\nset_orientation: true # 是否竖屏, 否则横屏\n```\n\n28. set_location: 设置地理位置\n```yaml\nset_location: 49,123 # 纬度,经度\nset_location: 49,123,10 # 纬度,经度,海拔高度\n```\n\n29. screenshot: 整个窗口截图存为png; \n```yaml\nscreenshot:\n    save_dir: downloads # 保存的目录，默认为 downloads\n    save_file: test.png # 保存的文件名，默认为:时间戳.png\n```\n\n30. screenshot_element_by: 对某个标签截图存为png; \n```yaml\nscreenshot_element_by\n    # 元素查找方式(id/sid/class/xpath) : 查找的值\n    #id: io.material.catalog:id/cat_demo_landing_row_root\n    xpath: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[1]/android.widget.LinearLayout\n\n    save_dir: downloads # 保存的目录，默认为 downloads\n    save_file: test.png # 保存的文件名，默认为:时间戳.png\n```\n\n31. execute_js: 执行js; \n```yaml\nexecute_js: alert('hello world')\n```\n\n32. back: 返回键; \n```yaml\nback: \n```\n\n33. keyevent: 模拟系统键; \n```yaml\nkeyevent: '4'\n```\n\n34. open_notifications: 打开手机的通知栏; \n```yaml\nopen_notifications: \n```\n\n35. get_clipboard: 读剪切板内容; \n```yaml\nget_clipboard: name # 参数为记录剪切板内容的变量名\n```\n\n36. set_clipboard: 写剪切板内容; \n```yaml\nset_clipboard: hello world $name # 参数是写入内容，可带参数\n```\n\n37. push_file:推文件到手机上, 即写手机上文件; \n```yaml\npush_file:\n    to: /storage/emulated/0/documents/test/a.txt # 写入的手机上的文件\n    content: helloworld # 写入的内容, content与to只能二选一\n    #from: a.txt # 写入内容的本地来源文件, content与to只能二选一\n```\n\n38. pull_file:从手机中拉文件, 即读手机上的文件; \n```yaml\npull_file:\n    from: /storage/emulated/0/documents/test/a.txt # 读取的手机上的文件\n    to: a.txt # 写入的本地文件, 可省\n    var: content # 记录文件内容的变量, 可省\nprint: $content\n```\n\n39. send_sms:发送短信; \n```yaml\nsend_sms:\n    phone: 13475556022\n    content: hello $name\n```\n\n40. print_performance:打印性能信息; \n```yaml\nprint_performance:\n```\n\n41. start_recording_screen:开始录屏; \nstart_recording_screen 与 stop_recording_screen 配合使用(start在前,stop在后)\n```yaml\nstart_recording_screen:\n```\n\n42. stop_recording_screen:结束录屏,并存为视频文件;\nstart_recording_screen 与 stop_recording_screen 配合使用(start在前,stop在后), 如果两者之间的执行发生异常, 则系统会主动调用后续第一个stop_recording_screen动作, 以便记录好异常的全过程\n```yaml\nstop_recording_screen: # 默认视频文件路径为 `record-时间.mp4`\nstop_recording_screen: a.mp4 # 视频文件路径\n```\n\n43. alert_accept: 点击弹框的确定按钮, 如授权弹框的允许; \n```yaml\nalert_accept: \n```\n\n44. alert_dismiss: 取消弹框, 如授权弹框的禁止; \n```yaml\nalert_dismiss: \n```\n\n45. for: 循环; \nfor动作下包含一系列子步骤，表示循环执行这系列子步骤；变量`for_i`记录是第几次迭代（从1开始）,变量`for_v`记录是每次迭代的元素值（仅当是list类型的变量迭代时有效）\n```yaml\n# 循环3次\nfor(3) :\n  # 每次迭代要执行的子步骤\n  - swipe_down:\n    sleep: 2\n\n# 循环list类型的变量values\nfor(values) :\n  # 每次迭代要执行的子步骤\n  - swipe_down:\n    sleep: 2\n    \n# 无限循环，直到遇到跳出动作\n# 有变量for_i记录是第几次迭代（从1开始）\nfor:\n  # 每次迭代要执行的子步骤\n  - break_if: for_i>2 # 满足条件则跳出循环\n    swipe_down:\n    sleep: 2\n```\n\n46. once: 只执行一次，等价于 `for(1)`; \nonce 结合 moveon_if，可以模拟 python 的 `if` 语法效果\n```yaml\nonce:\n  # 每次迭代要执行的子步骤\n  - moveon_if: for_i<=2 # 满足条件则往下走，否则跳出循环\n    swipe_down:\n    sleep: 2\n```\n\n47. break_if: 满足条件则跳出循环; \n只能定义在for/once循环的子步骤中\n```yaml\nbreak_if: for_i>2 # 条件表达式，python语法\n```\n\n48. moveon_if: 满足条件则往下走，否则跳出循环; \n只能定义在for/once循环的子步骤中\n```yaml\nmoveon_if: for_i<=2 # 条件表达式，python语法\n```\n\n49. moveon_if_exist_by: 如果检查元素存在 则往下走，否则跳出循环; \n只能定义在for/once循环的子步骤中\n```yaml\nmoveon_if_exist_by:\n    id: com.shikee.shikeeapp:id/button1\n```\n\n50. break_if_exist_by: 如果检查元素存在 则跳出循环，否则往下走; \n只能定义在for/once循环的子步骤中\n```yaml\nbreak_if_exist_by:\n    id: button1\n```\n\n51. include: 包含其他步骤文件，如记录公共的步骤，或记录配置数据(如用户名密码); \n```yaml\ninclude: part-common.yml\n```\n\n52. set_vars: 设置变量; \n```yaml\nset_vars:\n  name: shi\n  password: 123456\n  birthday: 5-27\n```\n\n53. print_vars: 打印所有变量; \n```yaml\nprint_vars:\n```\n\n54. base_url: 设置基础url\n```yaml\nbase_url: https://www.taobao.com/\n```\n\n55. get: 发get请求, 但无跳转; \n```yaml\nget:\n    url: $dyn_data_url # url,支持写变量\n    extract_by_eval:\n      dyn_data: \"json.loads(response.text[16:-1])\" # 变量response是响应对象\n```\n\n56. post: 发post请求, 但无跳转; \n```yaml\npost:\n    url: http://admin.jym1.com/store/add_store # url,支持写变量\n    is_ajax: true\n    data: # post的参数\n      # 参数名:参数值\n      store_name: teststore-${random_str(6)}\n      store_logo_url: '$img'\n```\n\n57. upload: 上传文件; \n```yaml\nupload: # 上传文件/图片\n    url: http://admin.jym1.com/upload/common_upload_img/store_img\n    files: # 上传的多个文件\n      # 参数名:文件本地路径\n      file: /home/shi/fruit.jpeg\n    extract_by_jsonpath:\n      img: $.data.url\n```\n\n58. download: 下载文件; \n变量`download_file`记录最新下载的单个文件\n```yaml\ndownload:\n    url: https://img.alicdn.com/tfscom/TB1t84NPuL2gK0jSZPhXXahvXXa.jpg_q90.jpg\n    save_dir: downloads # 保存的目录，默认为 downloads\n    save_file: test.jpg # 保存的文件名，默认为url中最后一级的文件名\n```\n\n59. recognize_captcha: 识别验证码; \n参数同 `download` 动作， 因为内部就是调用 `download`;\n而变量`captcha`记录识别出来的验证码\n```\nrecognize_captcha:\n    url: http://admin.jym1.com/login/verify_image\n    # save_dir: downloads # 保存的目录，默认为 downloads\n    # save_file: test.jpg # 保存的文件名，默认为url中最后一级的文件名\n```\n\n60. recognize_captcha_element: 识别验证码标签中的验证码; \n参数同 `screenshot_element_by` 动作， 因为内部就是调用 `screenshot_element_by`;\n而变量`captcha`记录识别出来的验证码\n```\nrecognize_captcha_element:\n    # 元素查找方式(id/sid/class/xpath) : 查找的值\n    #id: io.material.catalog:id/cat_demo_landing_row_root\n    xpath: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[1]/android.widget.LinearLayout\n\n    #save_dir: downloads # 保存的目录，默认为 downloads\n    #save_file: test.jpg # 保存的文件名，默认为url中最后一级的文件名\n```\n\n61. exec: 执行命令, 可用于执行 HttpBoot/SeleniumBoot/AppiumBoot/MiniumBoot 等命令，以便打通多端的用例流程\n```yaml\nexec: ls\nexec: SeleniumBoot test.yml\n```\n\n## 校验器\n主要是为了校验页面或响应的内容, 根据不同场景有2种写法\n```\n1. 针对当前页面, 那么校验器作为普通动作来写\n2. 针对 get/post/upload 有发送http请求的动作, 那么校验器在动作内作为普通属性来写\n```\n\n不同校验器适用于不同场景\n| 校验器 | 当前页面场景 | http请求场景 |\n| ------------ | ------------ | ------------ |\n| validate_by_id | Y | N |\n| validate_by_aid | Y | N |\n| validate_by_class | Y | N |\n| validate_by_xpath | Y | Y |\n| validate_by_css | N | Y |\n| validate_by_jsonpath | N | Y |\n\n1. validate_by_id:\n从当前页面中校验 id 对应的元素的值\n```yaml\nvalidate_by_id:\n  \"io.material.catalog:id/cat_demo_text\": # 元素的id\n    '=': 'Hello world' # 校验符号或函数: 校验的值\n```\n\n2. validate_by_aid:\n从当前页面中校验 accessibility_id 对应的元素的值\n```yaml\nvalidate_by_aid:\n  \"Timer\": # 元素的accessibility_id\n    '>': '2022-07-06 12:00:00' # 校验符号或函数: 校验的值\n```\n\n3. validate_by_class:\n从当前页面中校验类名对应的元素的值\n```yaml\nvalidate_by_class:\n  \"android.widget.TextView\": # 元素的类名\n    '=': 'Hello world' # 校验符号或函数: 校验的值\n```\n\n4. validate_by_xpath: \n从当前页面或html响应中校验 xpath 路径对应的元素的值\n```yaml\nvalidate_by_xpath:\n  \"/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[1]/android.widget.LinearLayout\": # 元素的xpath路径\n    '>': 0 # 校验符号或函数: 校验的值, 即 id 元素的值>0\n  \"/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[2]/android.widget.LinearLayout\":\n    contains: 衬衫 # 即 title 元素的值包含'衬衫'\n```\n\n5. validate_by_css: \n从html响应中校验类名对应的元素的值\n```yaml\nvalidate_by_css:\n  '#id': # 元素的css selector 模式\n    '>': 0 # 校验符号或函数: 校验的值, 即 id 元素的值>0\n  '#goods_title':\n    contains: 衬衫 # 即 title 元素的值包含'衬衫'\n```\n\n6. validate_by_jsonpath: \n从json响应中校验 多层属性 的值\n```yaml\nvalidate_by_jsonpath:\n  '$.data.goods_id':\n     '>': 0 # 校验符号或函数: 校验的值, 即 id 元素的值>0\n  '$.data.goods_title':\n    contains: 衬衫 # 即 title 元素的值包含'衬衫'\n```\n\n#### 校验符号或函数\n1. `=`: 相同\n2. `>`: 大于\n3. `<`: 小于\n4. `>=`: 大于等于\n5. `<=`: 小于等于\n6. `contains`: 包含子串\n7. `startswith`: 以子串开头\n8. `endswith`: 以子串结尾\n9. `regex_match`: 正则匹配\n10. `exist`: 元素存在\n11. `not_exist`: 元素不存在\n\n## 提取器\n主要是为了从页面或响应中提取变量, 根据不同场景有2种写法\n```\n1. 针对当前页面, 那么提取器作为普通动作来写\n2. 针对 get/post/upload 有发送http请求的动作, 那么提取器在动作内作为普通属性来写\n```\n\n不同校验器适用于不同场景\n| 校验器 | 页面场景 | http请求场景 |\n| ------------ | ------------ | ------------ |\n| extract_by_id | Y | N |\n| extract_by_aid | Y | N |\n| extract_by_class | Y | N |\n| extract_by_xpath | Y | Y |\n| extract_by_jsonpath | N | Y |\n| extract_by_css | N | Y |\n| extract_by_eval | Y | Y |\n\n1. extract_by_id:\n从当前页面中解析 id 对应的元素的值\n```yaml\nextract_by_id:\n  # 变量名: 元素id\n  goods_id: \"io.material.catalog:id/cat_demo_text\"\n```\n\n2. extract_by_aid:\n从当前页面中解析 accessibility_id 对应的元素的值\n```yaml\nextract_by_aid:\n  # 变量名: 元素的accessibility_id\n  update_time: \"Timer\"\n```\n\n3. extract_by_class:\n从当前页面中解析类名对应的元素的值\n```yaml\nextract_by_class:\n  # 变量名: 元素的accessibility_id\n  name: \"android.widget.TextView\"\n```\n\n4. extract_by_xpath:\n从当前页面或html响应中解析 xpath 路径指定的元素的值\n```yaml\nextract_by_xpath:\n  # 变量名: xpath路径\n  goods_id: /hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[1]/android.widget.LinearLayout\n  # 获得元素的属性\n  goods_img_element: /hierarchy/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.view.ViewGroup/android.widget.FrameLayout/android.widget.RelativeLayout/android.widget.LinearLayout[1]/android.widget.FrameLayout/android.widget.ScrollView/android.widget.LinearLayout/android.widget.RelativeLayout[1]/android.widget.FrameLayout/android.widget.RelativeLayout/androidx.viewpager.widget.ViewPager/android.widget.ImageView/@class\n```\n\n5. extract_by_css:\n从html响应中解析 css selector 模式指定的元素的值\n```yaml\nextract_by_css:\n  # 变量名: css selector 模式\n  goods_id: table>tbody>tr:nth-child(1)>td:nth-child(1) # 第一行第一列\n  url: //*[@id=\"1\"]/div/div/h3/a/@href # 获得<a>的href属性\n```\n\n6. extract_by_jsonpath:\n从json响应中解析 多层属性 的值\n```yaml\nextract_by_jsonpath:\n  # 变量名: json响应的多层属性\n  img: $.data.url\n```\n\n7. extract_by_eval:\n使用 `eval(表达式)` 执行表达式, 并将执行结果记录到变量中\n```yaml\nextract_by_eval:\n    # 变量名: 表达式（python语法）\n    dyn_data: \"json.loads(response.text[16:-1])\" # 变量response是响应对象\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shigebeyond/AppiumBoot",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AppiumBoot",
    "package_url": "https://pypi.org/project/AppiumBoot/",
    "platform": null,
    "project_url": "https://pypi.org/project/AppiumBoot/",
    "project_urls": {
      "Homepage": "https://github.com/shigebeyond/AppiumBoot"
    },
    "release_url": "https://pypi.org/project/AppiumBoot/1.0.5/",
    "requires_dist": [
      "selenium (==4.1.5)",
      "selenium-requests (==1.4.1)",
      "Appium-Python-Client (==2.3.0)",
      "pyutilb (>=1.0.5)"
    ],
    "requires_python": ">=3.6",
    "summary": "AppiumBoot: make an easy way (yaml) to app automation testing",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16973136,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c6f438a3e1a597cd1a34070ac92ce1a3c9cccbd7dcf0011d3245de1daea7704",
          "md5": "9f3aacc2d1f7046d30d6b93d85814737",
          "sha256": "88966143d82d6c65c0cb967ea30fcfebf7a3b1742a757484fb687da36d9f2001"
        },
        "downloads": -1,
        "filename": "AppiumBoot-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f3aacc2d1f7046d30d6b93d85814737",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27364,
        "upload_time": "2022-07-18T03:13:36",
        "upload_time_iso_8601": "2022-07-18T03:13:36.000466Z",
        "url": "https://files.pythonhosted.org/packages/9c/6f/438a3e1a597cd1a34070ac92ce1a3c9cccbd7dcf0011d3245de1daea7704/AppiumBoot-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4d1eefeb1bf2231ce54d3138b598081c579584be7cda5ce9ab35915c684800a",
          "md5": "a336691ce89c73aff7b4b049ee1077fa",
          "sha256": "83bda29398fdebabd45e2a635eb7ac7ba628681361354d8d22c416087660c103"
        },
        "downloads": -1,
        "filename": "AppiumBoot-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a336691ce89c73aff7b4b049ee1077fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24413,
        "upload_time": "2022-07-18T03:13:38",
        "upload_time_iso_8601": "2022-07-18T03:13:38.784561Z",
        "url": "https://files.pythonhosted.org/packages/a4/d1/eefeb1bf2231ce54d3138b598081c579584be7cda5ce9ab35915c684800a/AppiumBoot-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95567eda68452cd733186ab4ebd9f890a6b569fb4dd800e64edc4d119a10b01b",
          "md5": "79b1b4b0f1f8e61fa26232f35214eb9d",
          "sha256": "e2da5ffee37cb68946e153dc0a1c82943e5a2e3574fd611fff3777267c8a2789"
        },
        "downloads": -1,
        "filename": "AppiumBoot-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79b1b4b0f1f8e61fa26232f35214eb9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28740,
        "upload_time": "2022-07-29T10:07:09",
        "upload_time_iso_8601": "2022-07-29T10:07:09.964582Z",
        "url": "https://files.pythonhosted.org/packages/95/56/7eda68452cd733186ab4ebd9f890a6b569fb4dd800e64edc4d119a10b01b/AppiumBoot-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "343c9345042e46e4b165433f547ebf34c0337974a8777d2be5b0354aa0350f1f",
          "md5": "b02e48edeae9af2eb0f005994f79c5ff",
          "sha256": "7123234af9763960b124aaf417a84617aa9412c1fc21e3e50a50ad9e69a6535c"
        },
        "downloads": -1,
        "filename": "AppiumBoot-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b02e48edeae9af2eb0f005994f79c5ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28782,
        "upload_time": "2022-07-29T10:07:12",
        "upload_time_iso_8601": "2022-07-29T10:07:12.538687Z",
        "url": "https://files.pythonhosted.org/packages/34/3c/9345042e46e4b165433f547ebf34c0337974a8777d2be5b0354aa0350f1f/AppiumBoot-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c67029a741329142ca902a61577a235e5272bfd55476e50ac8857d245949b3a3",
          "md5": "1dfa5e2377b2eeb09d5ce7e5e62dab16",
          "sha256": "07863caa0ce1c74c50fb2cb309576febfd8b1d3a7e1f8bdd4242519fd9cc51da"
        },
        "downloads": -1,
        "filename": "AppiumBoot-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1dfa5e2377b2eeb09d5ce7e5e62dab16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23287,
        "upload_time": "2022-07-30T07:06:38",
        "upload_time_iso_8601": "2022-07-30T07:06:38.996776Z",
        "url": "https://files.pythonhosted.org/packages/c6/70/29a741329142ca902a61577a235e5272bfd55476e50ac8857d245949b3a3/AppiumBoot-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84faa803766938da8a8c90db87c5bcb9bf3851ebe9e703cd6b482a2db2948fdc",
          "md5": "68d322334c35d478e661a2abdfc975a3",
          "sha256": "1cd12ba88b7a3c47198d5ffe41d4b76f786ba33a5b89da3b0b3801052943891d"
        },
        "downloads": -1,
        "filename": "AppiumBoot-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "68d322334c35d478e661a2abdfc975a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28774,
        "upload_time": "2022-07-30T07:06:41",
        "upload_time_iso_8601": "2022-07-30T07:06:41.605213Z",
        "url": "https://files.pythonhosted.org/packages/84/fa/a803766938da8a8c90db87c5bcb9bf3851ebe9e703cd6b482a2db2948fdc/AppiumBoot-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31b71e01f93f4e5245993f1a783996a61e45cc8e2d6fc4befd571c1eae13d696",
          "md5": "d260a3e00ffd2d48683a665e7569c018",
          "sha256": "7572c2eca42fcd3b5d65d01e798861ca8177086febb78d00fb6dd433217982b4"
        },
        "downloads": -1,
        "filename": "AppiumBoot-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d260a3e00ffd2d48683a665e7569c018",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28782,
        "upload_time": "2022-08-15T07:14:57",
        "upload_time_iso_8601": "2022-08-15T07:14:57.360664Z",
        "url": "https://files.pythonhosted.org/packages/31/b7/1e01f93f4e5245993f1a783996a61e45cc8e2d6fc4befd571c1eae13d696/AppiumBoot-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14d19de70d0bc869800add75fa8baeb4d10826d40ea674cd7b4ff30ed1dafac9",
          "md5": "97b3d1681f0b6eeef88818893f80cdd4",
          "sha256": "11ec2a614ab1c2928ea8261e974731cc89870113c52db3fafe772d403c921b08"
        },
        "downloads": -1,
        "filename": "AppiumBoot-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "97b3d1681f0b6eeef88818893f80cdd4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28817,
        "upload_time": "2022-08-15T07:15:00",
        "upload_time_iso_8601": "2022-08-15T07:15:00.093671Z",
        "url": "https://files.pythonhosted.org/packages/14/d1/9de70d0bc869800add75fa8baeb4d10826d40ea674cd7b4ff30ed1dafac9/AppiumBoot-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc7bda1889bb6641736a2a2def2e409e18ed8f64e80d1a73b509f57f82ed9643",
          "md5": "f64f8c117bab08574659ecbee549c389",
          "sha256": "5041d8df33335af93f8f9d7ad16839cebe3e323e584b1286b9931435d83b3c60"
        },
        "downloads": -1,
        "filename": "AppiumBoot-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f64f8c117bab08574659ecbee549c389",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28524,
        "upload_time": "2023-02-22T08:41:12",
        "upload_time_iso_8601": "2023-02-22T08:41:12.065555Z",
        "url": "https://files.pythonhosted.org/packages/fc/7b/da1889bb6641736a2a2def2e409e18ed8f64e80d1a73b509f57f82ed9643/AppiumBoot-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4662fa7372b8f511d735e7ab5403f0109df6582f597469dbc5fc8eee6ac0ed68",
          "md5": "b4b31d163791c91e2c31f759ec32fa55",
          "sha256": "1b70e1cfcc6752f87af6122759764db8cf8f69cb4b7d17e0dbc1a429f69776ad"
        },
        "downloads": -1,
        "filename": "AppiumBoot-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b4b31d163791c91e2c31f759ec32fa55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35769,
        "upload_time": "2023-02-22T08:41:14",
        "upload_time_iso_8601": "2023-02-22T08:41:14.631460Z",
        "url": "https://files.pythonhosted.org/packages/46/62/fa7372b8f511d735e7ab5403f0109df6582f597469dbc5fc8eee6ac0ed68/AppiumBoot-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc7bda1889bb6641736a2a2def2e409e18ed8f64e80d1a73b509f57f82ed9643",
        "md5": "f64f8c117bab08574659ecbee549c389",
        "sha256": "5041d8df33335af93f8f9d7ad16839cebe3e323e584b1286b9931435d83b3c60"
      },
      "downloads": -1,
      "filename": "AppiumBoot-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f64f8c117bab08574659ecbee549c389",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 28524,
      "upload_time": "2023-02-22T08:41:12",
      "upload_time_iso_8601": "2023-02-22T08:41:12.065555Z",
      "url": "https://files.pythonhosted.org/packages/fc/7b/da1889bb6641736a2a2def2e409e18ed8f64e80d1a73b509f57f82ed9643/AppiumBoot-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4662fa7372b8f511d735e7ab5403f0109df6582f597469dbc5fc8eee6ac0ed68",
        "md5": "b4b31d163791c91e2c31f759ec32fa55",
        "sha256": "1b70e1cfcc6752f87af6122759764db8cf8f69cb4b7d17e0dbc1a429f69776ad"
      },
      "downloads": -1,
      "filename": "AppiumBoot-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b4b31d163791c91e2c31f759ec32fa55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 35769,
      "upload_time": "2023-02-22T08:41:14",
      "upload_time_iso_8601": "2023-02-22T08:41:14.631460Z",
      "url": "https://files.pythonhosted.org/packages/46/62/fa7372b8f511d735e7ab5403f0109df6582f597469dbc5fc8eee6ac0ed68/AppiumBoot-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}