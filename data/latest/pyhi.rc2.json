{
  "info": {
    "author": "LTF sp. z o.o.",
    "author_email": "mkebaypl2@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Readme for PyHI module\n======================\n\n0. Introduction\n===============\n\nThis is a Python client for HistoricalInvestor.com server, a financial training tool and trading strategy tester application.\n\n\n1. Using PyHI client\n====================\n\na. Log in to HI account using a supported browser (manually) and presuming you have some financial instruments bought, click:\n\nAutosys | REST API\n\nThis window contains credentials for your HI client:\n\n\nREST ID:\nREST Password:\n\nCopy those credentials to your trading automaton configuration.\n\n\nThe window also lists the symbols of available financial instruments you can trade using the client API.\n\n\n\nb. In your program, import the HiData class from \"pyhi\" module:\n\nfrom pyhi import HiData, maybe_pretty\n\n\n\nc. Create main instance of the HiData class that will be a HI client, for instance\n\nhd = HiData(restid, restpasswd, 'AUDJPY', resolution='D1', initialTime=1245803300000, baseurl='http://historicalinvestor.com')\n\nThe client attempts to open the session to the HI server automatically on creation. It remembers specified parameters like session token, restId and restPassword.\n\n\nYou can call object methods to operate on the virtual market session: getting data, placing orders and closing session.\n\n\nExample of getting data:\n\nprint '\\n\\nDATA acquired:', maybe_pretty(hd.get_data(1245803500000, 5))\n\n\nPlacing order for 1 lot of AUDJPY:\n\nprint '\\n\\nOrder:', maybe_pretty(hd.order(1245803500000, 1))\n\n\n\nd. Transactions\n\nTo buy, use positive values (long position) in \"volume\" parameter.\n\nTo sell, use negative values (long position) in \"volume\" parameter.\n\n\n\ne. close the session with .finish\n\nor else the transactions will not be visible\n\n\n\nf. open executed session in web UI:\n\n- click Autosys | automaton name (e.g. \"MyAutomaton\" in \"test.py\" example) | date and time of the session.\n\n\ng. click Results button to view the trade results.\n\n\nButton Trades turns on buy/sell transaction labels on the main chart.\n\n\n\n4. Example\n==========\n\n\nA complete client use example is available in a file \"example.py\" located in \"doc \" subdirectory.\n\n\n\n5. Important issues\n===================\n\nRemember to close the session with \"finish\" method of HiData instance - otherwise the session with transactions done will not be shown in web UI!",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://historicalinvestor.com",
    "keywords": null,
    "license": "LICENSE.txt",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pyhi",
    "package_url": "https://pypi.org/project/pyhi/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pyhi/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://historicalinvestor.com"
    },
    "release_url": "https://pypi.org/project/pyhi/0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "HistoricalInvestor trading API",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1075633,
  "releases": {
    "0.1": [],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a5bfe3fe1ae82c9f1a7542dc5310bb829290d0b646fe2ada54b61169e0e3785",
          "md5": "00a0bb07dffe9cfb9cbf09481b85172f",
          "sha256": "8eafbb389786c20fb1fe006e32a03a3ec3d669b8c1665bec31092226acab233f"
        },
        "downloads": -1,
        "filename": "pyhi-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "00a0bb07dffe9cfb9cbf09481b85172f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3672,
        "upload_time": "2014-04-29T15:40:47",
        "upload_time_iso_8601": "2014-04-29T15:40:47.612819Z",
        "url": "https://files.pythonhosted.org/packages/5a/5b/fe3fe1ae82c9f1a7542dc5310bb829290d0b646fe2ada54b61169e0e3785/pyhi-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a5bfe3fe1ae82c9f1a7542dc5310bb829290d0b646fe2ada54b61169e0e3785",
        "md5": "00a0bb07dffe9cfb9cbf09481b85172f",
        "sha256": "8eafbb389786c20fb1fe006e32a03a3ec3d669b8c1665bec31092226acab233f"
      },
      "downloads": -1,
      "filename": "pyhi-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "00a0bb07dffe9cfb9cbf09481b85172f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3672,
      "upload_time": "2014-04-29T15:40:47",
      "upload_time_iso_8601": "2014-04-29T15:40:47.612819Z",
      "url": "https://files.pythonhosted.org/packages/5a/5b/fe3fe1ae82c9f1a7542dc5310bb829290d0b646fe2ada54b61169e0e3785/pyhi-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}