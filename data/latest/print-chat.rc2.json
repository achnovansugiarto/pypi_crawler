{
  "info": {
    "author": "IVIGOR13",
    "author_email": "igor.i.v.a.13@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Terminals"
    ],
    "description": "print_chat\n==========\n\nSmall print tool for implementing chat in the terminal.\n\nhttps://pypi.org/project/print_chat/\n\nUsage example\n-------------\n\n.. code-block:: python\n\n    import print_chat as pc\n\n    pct = pc.print_chat()\n\n    sender = 'Charls'\n    pct.set_colors([('Charls', 'green')])\n\n    while True:\n        post = str(input('> '))\n\n        if post == 'exit':\n            break\n        else:\n            pct.up_on_occupied_rows(len(post) + len(sender) + 2)\n            pct.add_message('Charls', post)\n\n    pct.close()\n\nFor testing the main functionality:\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: python\n\n    import print_chat as pc\n\n    pct = pc.print_chat(time=True)\n\n    s = 0 # sender iterator\n    senders = ['Charls', 'Max', 'Karl']\n    pct.set_colors([\n            (senders[0], 'green'),\n            (senders[1], 'red'),\n            (senders[2], 'yellow')\n        ])\n    pct.set_header('-Test chat-\\n-----------') # adding a header to the dialog\n\n    while True:\n        post = str(input('> '))\n        pct.up_on_occupied_rows(len(post) + len(senders[s]) + 2)\n        command = post.split(' ')\n\n        if post == 'exit':                  break\n        elif command[0] == 'remove':        pct.remove(int(command[1]))\n        elif command[0] == 'edit':          pct.edit(int(command[1]), ' '.join(command[2:]))\n        elif command[0] == 'reload':        pct.reload(int(command[1]))\n        elif command[0] == 'add_skip':      pct.add_skip(int(command[1]), str(' '.join(command[2:])))\n        elif command[0] == 'edit_skip':     pct.edit_skip(int(command[1]), ' '.join(command[2:]))\n        elif command[0] == 'remove_skip':   pct.remove_skip(int(command[1]))\n        elif command[0] == 'add_mark':      pct.add_mark(int(command[1]), str(command[2]))\n        elif command[0] == 'edit_mark':     pct.edit_mark(int(command[1]), str(command[2]))\n        elif command[0] == 'remove_mark':   pct.remove_mark(int(command[1]))\n        elif post == 'cs':                  s = (s+1) % len(senders) # change sender to next\n        else:                               pct.add_message(senders[s], post)\n\n    pct.close()\n\nImportant\n---------\nNumbering starts at 1, at the end of the message list\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThis is not a bug this is a feature\n\nCreate object\n-------------\ndefault:\n\n.. code-block:: python\n\n    pct = print_chat.print_chat(time=False)\n\n* time - show message sending time\n\nMethod list\n-----------\n* .add_message(sender, text, time='', skip=[], mark=[])\n* .add_message_top(sender, text, time='', skip=[], mark=[], prnt=True)\n* .reload(number)\n* .remove(number)\n* .edit(number, text)\n* .add_skip(number, text)\n* .edit_skip(number, text)\n* .remove_skip(number)\n* .add_mark(number, text)\n* .edit_mark(number, text)\n* .remove_mark(number)\n* .close(clr)                       - closes the dialog, with or without screen clearing\n* .set_header(string)\n* .set_colors(colors)               - takes a list [[sender, color],..]\n   colors list:\n     * grey\n     * red\n     * green\n     * yellow\n     * blue\n     * magenta\n     * cyan\n     * white\n* .get_num_messages()               - returns the number of messages\n* .get_messages()\n* .get_messages_from(sender)\n* .up_on_occupied_rows(len_str)\n* .up_on_message(number)\n* .up_on_rows(number)\n* .clear_row()\n* ._clear_screen()\n* .get_senders()                    - returns a list of dictionaries\n\nInstallation\n------------\n\n.. code-block::\n\n    $ pip install print_chat\n    \nor\n^^\nRepository cloning\n\n.. code-block::\n\n    $ git clone https://github.com/IVIGOR13/print_chat.git\n\nTuning\n\n.. code-block::\n\n    $ pip install termcolor\n    $ pip install colorama",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/IVIGOR13/print_chat/archive/0.4.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/IVIGOR13/print_chat",
    "keywords": "chat,terminal",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "print-chat",
    "package_url": "https://pypi.org/project/print-chat/",
    "platform": "",
    "project_url": "https://pypi.org/project/print-chat/",
    "project_urls": {
      "Download": "https://github.com/IVIGOR13/print_chat/archive/0.4.tar.gz",
      "Homepage": "https://github.com/IVIGOR13/print_chat"
    },
    "release_url": "https://pypi.org/project/print-chat/0.4/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Small print tool for implementing chat in the terminal",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6557730,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96b81f0feec2b7ecedb555074af12e4a1efccc2b37269e2ed6071f6e0b036516",
          "md5": "01c969fd5460d359e0c1d8c901c264b0",
          "sha256": "a8e86f2b01c5f4ab933f9c00709e6db9c1cda59dbcfd4f3bd71653e250cc6a31"
        },
        "downloads": -1,
        "filename": "print_chat-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "01c969fd5460d359e0c1d8c901c264b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3508,
        "upload_time": "2019-08-31T13:44:47",
        "upload_time_iso_8601": "2019-08-31T13:44:47.387098Z",
        "url": "https://files.pythonhosted.org/packages/96/b8/1f0feec2b7ecedb555074af12e4a1efccc2b37269e2ed6071f6e0b036516/print_chat-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "570a74c119b687f1f8bb5b2314767e4ef4b0ab006584c2159797ea1b5b49c3e1",
          "md5": "c68ec484278f9977b726c30274a49b3f",
          "sha256": "15122a02a0de60727d23bc380adf5fbd0ff27d9ddf8bc6333d11b0b5b4eed139"
        },
        "downloads": -1,
        "filename": "print_chat-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c68ec484278f9977b726c30274a49b3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6776,
        "upload_time": "2020-02-02T11:53:33",
        "upload_time_iso_8601": "2020-02-02T11:53:33.808763Z",
        "url": "https://files.pythonhosted.org/packages/57/0a/74c119b687f1f8bb5b2314767e4ef4b0ab006584c2159797ea1b5b49c3e1/print_chat-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "570a74c119b687f1f8bb5b2314767e4ef4b0ab006584c2159797ea1b5b49c3e1",
        "md5": "c68ec484278f9977b726c30274a49b3f",
        "sha256": "15122a02a0de60727d23bc380adf5fbd0ff27d9ddf8bc6333d11b0b5b4eed139"
      },
      "downloads": -1,
      "filename": "print_chat-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "c68ec484278f9977b726c30274a49b3f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 6776,
      "upload_time": "2020-02-02T11:53:33",
      "upload_time_iso_8601": "2020-02-02T11:53:33.808763Z",
      "url": "https://files.pythonhosted.org/packages/57/0a/74c119b687f1f8bb5b2314767e4ef4b0ab006584c2159797ea1b5b49c3e1/print_chat-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}