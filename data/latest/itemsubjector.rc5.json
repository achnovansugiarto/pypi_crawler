{
  "info": {
    "author": "Dennis Priskorn",
    "author_email": "68460690+dpriskorn@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "# ItemSubjector\nThe purpose of this command-line tool is to add main subject statements to Wikidata \nitems based on a heuristic matching the subject with the title of the item. \n![bild](https://user-images.githubusercontent.com/68460690/133230724-40a610b7-5557-4b2b-b66e-2d80ca89e90d.png)\n*The tool running in PAWS adding manually found main subject QIDs*\n![bild](https://user-images.githubusercontent.com/68460690/155840858-057292a5-8647-415f-8df3-7bbb90884dbc.png)\n*Itemsubjector running GNU Screen on a Toolforge bastion with --limit 100000 and \n--sparql matching the WHO list of essential medicines.*\n\n# Background\nAs of september 2021 there were 37M scientific articles in Wikidata, but 27M of them were missing any main \nsubject statement. That makes them very hard to find for scientists which is bad for science, \nbecause building on the work of others is essential in the global scientific community.\n\nTo my knowledge none of the scientific search engines that are currently used in the scientific community rely on an\nopen graph editable by anyone and maintained by the community itself for the purpose of helping fellow\nscientists find each others work. Wikipedia and Scholia can fill that gap but we need good tooling to curate the \nmillions of items.\n\n# Caveat \nThis type of matching that ONLY takes the label and not the underlying structured\ndata into account is SUBOPTIMAL. You are very welcome to suggest or contribute improvements\nso we can improve the tool to help you make better edits.\n\n# Features\nThis tool has the following features:\n* Adding a list of manually supplied main subjects to a few selected subgraphs \n  (These currently include a total of 37M items with scholarly items being the biggest subgraph by far).\n* Matching against a set of items fetched via a SPARQL query.\n* Matching up to a limit of items which together with Kubernetes makes it possible to start a query which \ncollects jobs with items until the limit is reached and then ask for approval/decline of each job. This \nenables the user to create large batches of jobs with 100k+ items in total in a matter of minutes.\n* Batch mode that can be used together with the above features and be run non-interactively \n  e.g. in the Wikimedia Cloud Services Kubernetes Beta cluster\n\nIt supports \n[Wikidata:Edit groups](https://www.wikidata.org/wiki/Wikidata:Edit_groups) \nso that batches can easily be undone later if needed. \nClick \"details\" in the summary of edits to see more.\n\n# Installation\nDownload the latest release with:\n\n`$ pip install itemsubjector`\n\n# Alternative installation in venv\nDownload the release tarball or clone the tool using Git.\n\n## Clone the repository \n`git clone https://github.com/dpriskorn/ItemSubjector.git && cd ItemSubjector`\n\nThen checkout the latest release. \n\n`git checkout vx.x.x` where x is the latest number on the release page.\n\n## Setup the environment\n\nMake a virtual environment and set it up using poetry. If you don't have poetry installed run:\n`$ pip install poetry`\n\nand then setup everying with\n\n`$ poetry install --without=dev`\n\nto install all requirements in a virtual environment.\n\n## PAWS\n*Note: PAWS is not ideal for batch jobs unless you \nare willing to keep your browser tab open for the \nwhole duration of the job. Consider using Kubernetes \ninstead, see below*\n\nThe tool runs in PAWS with no known \nissues.\n* log in to PAWS\n* open a terminal\n* run `git clone https://github.com/dpriskorn/ItemSubjector.git .itemsubjector && cd .itemsubjector && pip install poetry && poetry install --without=dev` \n  <- note the dot in front of the directory name \n  that hides it from publication which is crucial to \n  avoid publication of your login credentials.\n* follow the details under Setup below\n\n\n## Wikimedia Cloud Services Kubernetes Beta cluster\n*Note: this is for advanced users experienced with a SSH console environment, ask in the [Telegram WikiCite group](https://meta.m.wikimedia.org/wiki/Telegram#Wikidata) if you need help*\n\nSee [Kubernetes_HOWTO.md](Kubernetes_HOWTO.md)\n\n# Setup\nSetup the config by copying config/config.example.py -> \nconfig/__init__.py and enter the botusername \n(e.g. So9q@itemsubjector) and password \n(first [create a botpassword](https://www.wikidata.org/wiki/Special:BotPasswords) \nfor your account \nand make sure you give it the *edit page permission* \nand *high volume permissions*)\n* e.g. `cp config_example.py config.py && nano config.py`\n\n*GNU Nano is an editor, press `ctrl+x` when you are done and `y` to save your changes*\n\n# Use\nThis tool helps by adding the \nvalidated or supplied QID to all \nscientific articles where the \nsearch string appears (with \nspaces around it or in the beginning\nor end of the string) in the label \nof the target item (e.g. scientific article).\n\n## Adding QIDs manually\n*Always provide the most precise subjects first*\n\nRun the script with the -a or --add argument \nfollowed by one or more QIDs or URLS:\n* `poetry run python itemsubjector.py -a Q108528107` or\n* `poetry run python itemsubjector.py -a https://www.wikidata.org/wiki/Q108528107`\n\n*Note since v0.2 you should not add subjects that are subclass \nof each other in one go. \nThis is because of internal changes related to job handling*\n\nAdd the narrow first and then the broader like this:\n* `poetry run python itemsubjector.py -a narrow-QID && poetry run python itemsubjector.py -a broader-QID`\n\nPlease investigate before adding broad \nsubjects (with thousands of matches) \nand try to nail down specific \nsubjects and add them first. If you are \nunsure, please ask on-wiki or in the \n[Wikicite Telegram group](https://meta.wikimedia.org/wiki/Telegram)\n\n### Disable alias matching\nSometimes e.g. for main subjects like \n[Sweden](https://www.wikidata.org/wiki/Q34) \nit is necessary to disable alias matching to \navoid garbage matches. \n\nUsage example:\n`poetry run python itemsubjector.py -a Q34 --no-aliases` \n(the shorthand `-na` also works)\n\n### Disable search expression confirmation\nAvoid the extra question \"Do you want to continue?\":\n\nUsage example:\n`poetry run python itemsubjector.py -a Q34 --no-confirmation` \n(the shorthand `-nc` also works)\n\n### Show links column in table of search expressions \nThis is handy if you want to look them up easily.\n\nUsage example:\n`poetry run python itemsubjector.py -a Q34 --show-search-urls` \n(the shorthand `-su` also works)\n\n### Show links column in table of search expressions \nThis is handy if you want to look them up easily.\n\nUsage example:\n`poetry run python itemsubjector.py -a Q34 --show-item-urls` \n(the shorthand `-iu` also works)\n\n[//]: # (### Limit to scholarly articles without main subject)\n[//]: # (Usage example:)\n[//]: # (`poetry run python itemsubjector.py -a Q34 --limit-to-items-without-p921` )\n[//]: # (&#40;the shorthand `-w` also works&#41;)\n\n## Matching main subjects based on a SPARQL query.\nThe tool can create a list of jobs by picking random subjects from a\nusers SPARQL query.\n\nUsage example for diseases:\n`poetry run python itemsubjector.py -iu --sparql \"SELECT ?item WHERE {?item wdt:P31 wd:Q12136.}\"`\n\nThis makes it much easier to cover a range a subjects. \nThis example query returns ~5000 items to match :)\n\n## Batch job features\nThe tool can help prepare jobs and then run \nthem later non-interactively. This enables the user\nto submit them as jobs on the Wikimedia Cloud Service \nBeta Kubernetes cluster, so you don't \nhave to run them locally if you don't want to.\n\nSee the commands below and \nhttps://phabricator.wikimedia.org/T285944#7373913 \nfor details.\n\n*Note: if you quit/stop a list of jobs that are \ncurrently running, please remove the \nunfinished prepared jobs before preparing \nnew jobs by running --remove-prepared-jobs*\n\n## List of all options\nThis is the output of `itemsubjector.py -h`:\n```buildoutcfg\nusage: itemsubjector.py [-h] [-a ADD [ADD ...]] [-na] [-nc] [-p] [-r] [-rm] [-m] [-w] [-su] [-iu] [--sparql [SPARQL]] [--debug-sparql]\n                        [--no-ask-match-more-limit [NO_ASK_MATCH_MORE_LIMIT]] [--export-jobs-to-dataframe]\n\nItemSubjector enables working main subject statements on items based on a\nheuristic matching the subject with the title of the item.\n\nExample adding one QID:\n'$ itemsubjector.py -a Q1234'\n\nExample adding one QID and prepare a job list to be run non-interactively later:\n'$ itemsubjector.py -a Q1234 -p'\n\nExample working on all diseases:\n'$ itemsubjector.py --sparql \"SELECT ?item WHERE {?item wdt:P31 wd:Q12136. MINUS {?item wdt:P1889 [].}}\"'\n\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ADD [ADD ...], --add ADD [ADD ...], --qid-to-add ADD [ADD ...]\n                        List of QIDs or URLs to Q-items that are to be added as main subjects on scientific articles. Always add the most specific ones first. See the\n                        README for examples\n  -na, --no-aliases     Turn off alias matching\n  -nc, --no-confirmation\n                        Turn off confirmation after displaying the search expressions, before running the queries.\n  -p, --prepare-jobs    Prepare a job for later execution, e.g. in a job engine\n  -r, --run-prepared-jobs\n                        Run prepared jobs non-interactively\n  -rm, --remove-prepared-jobs\n                        Remove prepared jobs\n  -m, --match-existing-main-subjects\n                        Match from list of 136.000 already used main subjects on other scientific articles\n  -su, --show-search-urls\n                        Show an extra column in the table of search strings with links\n  -iu, --show-item-urls\n                        Show an extra column in the table of items with links\n  --sparql [SPARQL]     Work on main subject items returned by this SPARQL query. Note: \"?item\" has to be selected for it to work, see the example above. Note: MINUS {?item\n                        wdt:P1889 [].} must be present in the query to avoid false positives.\n  --debug-sparql        Enable debugging of SPARQL queries.\n  --no-ask-match-more-limit [NO_ASK_MATCH_MORE_LIMIT], --limit [NO_ASK_MATCH_MORE_LIMIT]\n                        When working on SPARQL queries of e.g. galaxies, match more until this many matches are in the job list\n  --export-jobs-to-dataframe\n                        Export the prepared job list to a Pandas DataFrame.\n```\n# What I learned\n* I used the black code-formatter for the first time in this project and \nit is a pleasure to not have to sit and manually format the code anymore.\n  \n* I used argparse for the first time in this project and how to type it \n  properly.\n  \n* This was one of the first of my projects that had scope creep. I have \nremoved the QuickStatements export to simplify the program.\n  \n* This project has been used in a scientific paper I wrote together with \n[Houcemeddine Turki](https://scholia.toolforge.org/author/Q53505397)\n\n## Rewrite 2022:\n* Important to break down methods to 1 method 1 task to increase readability. -> helps reuse in other projects.\n* Important to avoid resetting attributes and instantiate classes instead. -> helps reuse in other projects.\n* Simplify as much as possible to keep the whole thing lean and avoid scope creep. -> helps reuse in other projects. (KISS-principle)\n* Difficult to judge which features are used and which are not. User testing would be nice.\n* UML diagrams are nice. They give a good quick overview.\n* Removing options that no-one seems to use helps keeping it simple. It would be valuable to get better insight of how the \nprogram is used by the users. A discussion in github might help in this.\n\n# Thanks\nDuring the development of this tool the author got a \nhelp multiple times from **Jan Ainali** and **Jon Søby**\nwith figuring out how to query the API using the \nCirrusSearch extensions and to remove more \nspecific main subjects from the query results.\n\nA special thanks also to **Magnus Sälgö** and **Arthur Smith** for their\nvaluable input and ideas, e.g. to search for aliases also and to *Jean* and the \nincredibly\nhelpful people in the Wikimedia Cloud Services Support chat that\nhelped with making batch jobs run successfully.\n\nThanks also to **jsamwrites** for help with testing and suggestions \nfor improvement and for using the tool to improve a ton of items :).\n\n# License\nGPLv3+\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dpriskorn/ItemSubjector",
    "keywords": "wikidata,subjects,entity linking,scientific graph,linked open data,open scientific data",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "itemsubjector",
    "package_url": "https://pypi.org/project/itemsubjector/",
    "platform": null,
    "project_url": "https://pypi.org/project/itemsubjector/",
    "project_urls": {
      "Homepage": "https://github.com/dpriskorn/ItemSubjector",
      "Repository": "https://github.com/dpriskorn/ItemSubjector"
    },
    "release_url": "https://pypi.org/project/itemsubjector/0.3.4/",
    "requires_dist": [
      "wikibaseintegrator (>=0.12.1,<0.13.0)",
      "pydantic (>=1.10.2,<2.0.0)",
      "rich (>=12.5.1,<13.0.0)",
      "pandas (>=1.5.0,<2.0.0)",
      "setuptools (>=65.4.1,<66.0.0)",
      "console-menu (>=0.7.1,<0.8.0)"
    ],
    "requires_python": ">=3.8,<3.11",
    "summary": "CLI-tool to easily add \"main subject\" aka topics in bulk to groups of items on Wikidata",
    "version": "0.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15444647,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91f2de2585264054864380f4e1d5a77c64411fcbc66a45a7f0b9b7b6d8af5abd",
          "md5": "0cb313d0096234b0895c5f4029cdfab9",
          "sha256": "e3069fb7da89b6e11b59431ea700cb06a97a59999fda237cfe1efc4683c8c580"
        },
        "downloads": -1,
        "filename": "itemsubjector-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0cb313d0096234b0895c5f4029cdfab9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 18201,
        "upload_time": "2022-10-01T15:42:03",
        "upload_time_iso_8601": "2022-10-01T15:42:03.543852Z",
        "url": "https://files.pythonhosted.org/packages/91/f2/de2585264054864380f4e1d5a77c64411fcbc66a45a7f0b9b7b6d8af5abd/itemsubjector-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "771ceacb739edf9fa5e5ebc3ca988485abc5e656bc46826cfd6c963d3e8aa7ed",
          "md5": "f9b0ac5b135ab25bee23f0cd68c049c2",
          "sha256": "b002d4bab3990d00ed10ac5fbc3cef31673135d222ffb5225e2431906cc20e68"
        },
        "downloads": -1,
        "filename": "itemsubjector-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9b0ac5b135ab25bee23f0cd68c049c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 19815,
        "upload_time": "2022-10-01T15:42:05",
        "upload_time_iso_8601": "2022-10-01T15:42:05.499457Z",
        "url": "https://files.pythonhosted.org/packages/77/1c/eacb739edf9fa5e5ebc3ca988485abc5e656bc46826cfd6c963d3e8aa7ed/itemsubjector-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7eaef142344c8c973412d0d4046a316c8a6a3a5dfcafbebd78c6e51ac2eac46e",
          "md5": "1c63b1dcfaf46abfa165aa1ee4ca3da6",
          "sha256": "8fa618df0614fa80fb2c13bdd2147ed69be40f27454d48a8fd5c1a2ac1eca2b1"
        },
        "downloads": -1,
        "filename": "itemsubjector-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c63b1dcfaf46abfa165aa1ee4ca3da6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 18272,
        "upload_time": "2022-10-01T18:39:16",
        "upload_time_iso_8601": "2022-10-01T18:39:16.799234Z",
        "url": "https://files.pythonhosted.org/packages/7e/ae/f142344c8c973412d0d4046a316c8a6a3a5dfcafbebd78c6e51ac2eac46e/itemsubjector-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8910effb4d6c05681f17485244a1d0f583742f2fa53616817d45d2d2b4c7fc75",
          "md5": "78cd4f1588df5dce9e17b65b2eb3faaf",
          "sha256": "7447a744c1670f9dd22ed28b8867ac18f3c491bbe2e5c59fb67dd366d294101b"
        },
        "downloads": -1,
        "filename": "itemsubjector-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "78cd4f1588df5dce9e17b65b2eb3faaf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 20209,
        "upload_time": "2022-10-01T18:39:18",
        "upload_time_iso_8601": "2022-10-01T18:39:18.643455Z",
        "url": "https://files.pythonhosted.org/packages/89/10/effb4d6c05681f17485244a1d0f583742f2fa53616817d45d2d2b4c7fc75/itemsubjector-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "653599b3ceed606a9f8b2c5b970ec143c412d7b56dde4368f565b72c302c9406",
          "md5": "4e84751bac885164d727581eacba0989",
          "sha256": "6a6350fdd73e6857b89d40ea059574c2a354934f834b2f838ebc3c428dd0d802"
        },
        "downloads": -1,
        "filename": "itemsubjector-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e84751bac885164d727581eacba0989",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 18292,
        "upload_time": "2022-10-02T07:43:58",
        "upload_time_iso_8601": "2022-10-02T07:43:58.146985Z",
        "url": "https://files.pythonhosted.org/packages/65/35/99b3ceed606a9f8b2c5b970ec143c412d7b56dde4368f565b72c302c9406/itemsubjector-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "930d742cc227bf0162ee3dfddcba569abe4b27a775504a75ec8335f10c1684bb",
          "md5": "de348fb9f68d3a3bd3b5301bd7959823",
          "sha256": "9d7e1a9fa4ec7b762315ecf97a96d97304e4a44406a1a99e9d754d1761c4f691"
        },
        "downloads": -1,
        "filename": "itemsubjector-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "de348fb9f68d3a3bd3b5301bd7959823",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 20236,
        "upload_time": "2022-10-02T07:44:00",
        "upload_time_iso_8601": "2022-10-02T07:44:00.089199Z",
        "url": "https://files.pythonhosted.org/packages/93/0d/742cc227bf0162ee3dfddcba569abe4b27a775504a75ec8335f10c1684bb/itemsubjector-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "289e6f533a4e2a0c2d0dc6b64ab88d8fac0788e036f0e67fb4017515ca556fe7",
          "md5": "b2d1f5f142cc3a5052966f3d6d01a72b",
          "sha256": "1b7b49f07d66ed00d55f1ffd5e95b45a150afbe8fe268ab9cfa49606351d5287"
        },
        "downloads": -1,
        "filename": "itemsubjector-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2d1f5f142cc3a5052966f3d6d01a72b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 18836,
        "upload_time": "2022-10-06T08:57:00",
        "upload_time_iso_8601": "2022-10-06T08:57:00.234439Z",
        "url": "https://files.pythonhosted.org/packages/28/9e/6f533a4e2a0c2d0dc6b64ab88d8fac0788e036f0e67fb4017515ca556fe7/itemsubjector-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bec968fa895316a53b68604aae1b0f56abeec05363fb35d05e6ba4b8d58d8ab",
          "md5": "0e58bf56392703af1c0c618b4a71f153",
          "sha256": "cf518f5e350765f9822b6ae448c6e221f7edd0927cc00e5b7fcd06b85a51ff5d"
        },
        "downloads": -1,
        "filename": "itemsubjector-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0e58bf56392703af1c0c618b4a71f153",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 20872,
        "upload_time": "2022-10-06T08:57:01",
        "upload_time_iso_8601": "2022-10-06T08:57:01.984968Z",
        "url": "https://files.pythonhosted.org/packages/1b/ec/968fa895316a53b68604aae1b0f56abeec05363fb35d05e6ba4b8d58d8ab/itemsubjector-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54d9be1e86d134f6986f51e05f878203e26fe29240c511be8246bb9d32a5d0c3",
          "md5": "e38b220d50162ff7ec5b0a12eb5a5207",
          "sha256": "bb18e850e5c2d559fa00fe419b6f00d333b78fe76307765864e929756d28c31d"
        },
        "downloads": -1,
        "filename": "itemsubjector-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e38b220d50162ff7ec5b0a12eb5a5207",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11",
        "size": 18837,
        "upload_time": "2022-10-18T04:53:07",
        "upload_time_iso_8601": "2022-10-18T04:53:07.234403Z",
        "url": "https://files.pythonhosted.org/packages/54/d9/be1e86d134f6986f51e05f878203e26fe29240c511be8246bb9d32a5d0c3/itemsubjector-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fed25acd6bc93b2d8dc7c7c18c575f29d0ffe55b7f66dcf683831deb84c48132",
          "md5": "510f734e6265e173e86e75c5dad6970d",
          "sha256": "ca759c0a2c65617c555952eefc1678b225c941affcd7bf11a9f5d1be465bcfeb"
        },
        "downloads": -1,
        "filename": "itemsubjector-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "510f734e6265e173e86e75c5dad6970d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11",
        "size": 20888,
        "upload_time": "2022-10-18T04:53:09",
        "upload_time_iso_8601": "2022-10-18T04:53:09.502299Z",
        "url": "https://files.pythonhosted.org/packages/fe/d2/5acd6bc93b2d8dc7c7c18c575f29d0ffe55b7f66dcf683831deb84c48132/itemsubjector-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54d9be1e86d134f6986f51e05f878203e26fe29240c511be8246bb9d32a5d0c3",
        "md5": "e38b220d50162ff7ec5b0a12eb5a5207",
        "sha256": "bb18e850e5c2d559fa00fe419b6f00d333b78fe76307765864e929756d28c31d"
      },
      "downloads": -1,
      "filename": "itemsubjector-0.3.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e38b220d50162ff7ec5b0a12eb5a5207",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<3.11",
      "size": 18837,
      "upload_time": "2022-10-18T04:53:07",
      "upload_time_iso_8601": "2022-10-18T04:53:07.234403Z",
      "url": "https://files.pythonhosted.org/packages/54/d9/be1e86d134f6986f51e05f878203e26fe29240c511be8246bb9d32a5d0c3/itemsubjector-0.3.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fed25acd6bc93b2d8dc7c7c18c575f29d0ffe55b7f66dcf683831deb84c48132",
        "md5": "510f734e6265e173e86e75c5dad6970d",
        "sha256": "ca759c0a2c65617c555952eefc1678b225c941affcd7bf11a9f5d1be465bcfeb"
      },
      "downloads": -1,
      "filename": "itemsubjector-0.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "510f734e6265e173e86e75c5dad6970d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<3.11",
      "size": 20888,
      "upload_time": "2022-10-18T04:53:09",
      "upload_time_iso_8601": "2022-10-18T04:53:09.502299Z",
      "url": "https://files.pythonhosted.org/packages/fe/d2/5acd6bc93b2d8dc7c7c18c575f29d0ffe55b7f66dcf683831deb84c48132/itemsubjector-0.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}