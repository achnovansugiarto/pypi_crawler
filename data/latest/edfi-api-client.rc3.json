{
  "info": {
    "author": "Erik Joranlien, Jay Kaiser",
    "author_email": "ejoranlien@edanalytics.org, jkaiser@edanalytics.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Ed-Fi API Client Python Package\n\n## Quick Guide\n\n```python\nfrom edfi_api_client import EdFiClient\n\n# Client connection with Ed-Fi3 ODS\napi = EdFiClient(BASE_URL, CLIENT_KEY, CLIENT_SECRET, api_version=3)\n\n# Get the total row-count for the 'students' resource in the ODS\nstudents = api.resource('students')\nstudents.total_count()\n\n# Pull all rows for the 'staffs' resource deletes endpoint (setting a custom page-size)\nstaffs = api.resource('staffs', get_deletes=True)\nfor row in staffs.get_rows(page_size=500):\n    pass\n\n# Pull all rows for the 'studentStaffAssociations' resource as pages (retrying when given authentication-timeout errors)\nssa = api.resource('studentStaffAssociations')  # OR 'student_staff_associations'\nfor page in ssa.get_pages(retry_on_failure=True):\n    pass\n\n# Pull all rows for the enrollment students composite, filtering by section ID\nenrollment_students = api.composite('students', filter_type='sections', filter_id='12345')\nfor row in enrollment_students.get_rows():\n    pass\n```\n\n------\n\n\n## EdFiClient\n`EdFiClient` serves as the interface with the ODS.\nIf credentials are provided, a session with the ODS is automatically authenticated.\nSome methods do not require credentials to be called.\n\n<details>\n<summary>Arguments:</summary>\n\n-----\n\n| Argument      | Description                                                                                                                                                            |\n|---------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| base_url      | [Required] The root url of the API server, without any trailing components like `data/v3` or `api/v2.0`                                                                |\n| client_key    | The key                                                                                                                                                                |\n| client_secret | The secret                                                                                                                                                             |\n| api_version   | Either 2 or 3, depending on the suite number of the API (Default 3)                                                                                                    |\n| api_mode      | The API mode of the ODS (e.g., `shared_instance`, `year_specific`, etc.). If empty, the mode will automatically be inferred from the ODS' Swagger spec (Ed-Fi 3 only). |\n| api_year      | The year of data to connect to if accessing a `year_specific` or `instance_year_specific` ODS.                                                                         |\n| instance_code | The instance code if accessing an `instance_year_specific` ODS.                                                                                                        |\n\nIf either `client_key` or `client_secret` are empty, a session with the ODS will not be established.\n\n-----\n\n</details>\n\n\nAll code examples in this document use verbose-logging to more-explicitly show interactions with the API.\nIt is recommended to set `verbose=True` while working interactively with the API.\n\n```python\n>>> from edfi_api_client import EdFiClient\n>>> api = EdFiClient(BASE_URL, verbose=True)\nClient key and secret not provided. Connection with ODS will not be attempted.\n\n# OR\n\n>>> from edfi_api_client import EdFiClient\n>>> api = EdFiClient(BASE_URL, CLIENT_KEY, CLIENT_SECRET, verbose=True)\nConnection to ODS successful!\n```\n\n### Methods\n\nAuthentication with the ODS is not required:\n\n<details>\n<summary><code>get_info</code></summary>\n\n-----\n\n### get_info\nThis method is unavailable in Ed-Fi2.\n\nEd-Fi3 provides an informative payload at the ODS base URL.\nThis contains versioning by suite and build, API mode, and URLs for authentication and data management.\n\n```python\n>>> api.get_info()\n{'apiMode': 'Shared Instance',\n 'build': '2022.6.1.2034',\n 'dataModels': [{'name': 'Ed-Fi', 'version': '3.3.0-a'}],\n 'informationalVersion': '5.2',\n 'suite': '3',\n 'urls': {'dataManagementApi': '{BASE_URL}/data/v3/',\n          'dependencies': '{BASE_URL}/metadata/data/v3/dependencies',\n          'oauth': '{BASE_URL}/oauth/token',\n          'openApiMetadata': '{BASE_URL}/metadata/',\n          'xsdMetadata': '{BASE_URL}/metadata/xsd'},\n 'version': '5.2'}\n```\n\n-----\n\n</details>\n\n\n<details>\n<summary><code>get_api_mode</code></summary>\n\n-----\n\n### get_api_mode\nThis method is unavailable in Ed-Fi2.\n\nEach Ed-Fi3 ODS has a declared API mode that alters how users interact with the ODS. This is a shortcut-method for finding the API mode of the Ed-Fi ODS via the payload retrieved using `EdFiClient.get_info()`, formatted in snake_case.\n\n```python\n>>> api.get_api_mode()\n'shared_instance'\n```\nThis method is called automatically when `api_mode` is left undefined by the user.\n\n</details>\n\n\n<details>\n<summary><code>get_ods_version</code></summary>\n\n### get_ods_version\nThis method is unavailable in Ed-Fi2.\n\nThis is a shortcut-method for finding the version of the Ed-Fi ODS via the payload retrieved using `EdFiClient.get_info()`.\n\n```python\n>>> api.get_ods_version()\n'5.2'\n```\n\n-----\n\n</details>\n\n\n<details>\n<summary><code>get_data_model_version</code></summary>\n\n-----\n\n### get_data_model_version\nThis method is unavailable in Ed-Fi2.\n\nThis is a shortcut-method for finding the data model version of the Ed-Fi ODS' 'ed-fi' namespace via the payload retrieved using `EdFiClient.get_info()`.\n\n```python\n>>> api.get_data_model_version()\n'3.3.0-a'\n```\n\n-----\n\n</details>\n\n\n<details>\n<summary><code>get_swagger</code></summary>\n\n-----\n\n### get_swagger\nThis method is unavailable in Ed-Fi2.\n\nThe entire Ed-Fi API is outlined in an OpenAPI Specification (i.e., Swagger Specification).\nThere is a separate Swagger defined for each component type (e.g., resources, descriptors, etc.).\n\nIf `component` is unspecified, `resources` will be collected.\n\n```python\n>>> api.get_swagger(component='resources')  # Default\n{'swagger': ...,\n 'basePath': ...,\n 'consumes': ...,\n 'definitions': ...,\n ...}\n```\n\nNote: the returned dictionary is large and unwieldy*.\nA future update will add an `EdFiSwagger` class to assist in navigation.\n\n-----\n\n</details>\n\n\n<details>\n<summary><code>is_edfi2</code></summary>\n\n-----\n\n### is_edfi2\nThis boolean filter returns whether the client-connection to the ODS is via Ed-Fi2.\nEd-Fi3 introduces many new features that are utilized heavily in this package.\n\n```python\n>>> api.is_edfi2()\nFalse\n```\n\n-----\n\n</details>\n\n\nAuthentication with the ODS is required:\n\n<details>\n<summary><code>get_newest_change_version</code></summary>\n\n-----\n\n### get_newest_change_version\nThis method is unavailable in Ed-Fi2.  \nThis method requires a connection to the ODS.\n\nStarting in Ed-Fi3, each row in the ODS is linked to an ODS-wide \"change version\" parameter, which allows for narrow time-windows of data to be filtered for delta-ingestions, instead of only full-ingestions.\nThis method returns the newest change version defined in the ODS.\n\n```python\n>>> api.get_newest_change_version()\n59084739\n```\n\n-----\n\n</details>\n\n\n<details>\n<summary><code>resource</code></summary>\n\n-----\n\n### resource\nThis method requires a connection to the ODS.\n\nUse this method to initialize an EdFiResource (i.e. EdFiEndpoint).\nThis object contains methods to pull rows and resource metadata from the API.\n\n```python\n>>> api.resource(\n        name='students',    # Name of resource\n        namespace='ed-fi',  # Default ; custom resources use a different namespace\n        get_deletes=False,  # Default ; set to `True` to access the /deletes endpoint\n        params={},          # Optional; used to pass parameters to API calls\n        **kwargs            # Optional; alternative way to pass parameters to API calls\n    )\n\n<Resource [edFi/students]>\n```\n`name`, `params`, and `kwargs` can be formatted in **snake_case** or **camelCase**.\n\n-----\n\n</details>\n\n\n<details>\n<summary><code>descriptor</code></summary>\n\n-----\n\n### descriptor\nThis method requires a connection to the ODS.\n\nUse this method to initialize an EdFiResource (i.e. EdFiEndpoint).\nThis object contains methods to pull rows and descriptor metadata from the API.\n\nNote that although descriptors and resources are saved at the same endpoint in the ODS, descriptors do not use their /deletes endpoint.\n\n```python\n>>> api.descriptor(\n        name='sexDescriptors',  # Name of descriptor\n        namespace='ed-fi',      # Default ; custom resources use a different namespace\n        params={},              # Optional; used to pass parameters to API calls\n        **kwargs                # Optional; alternative way to pass parameters to API calls\n    )\n\n<Resource [edFi/sexDescriptors]>\n```\n`name`, `params`, and `kwargs` can be formatted in **snake_case** or **camelCase**.\n\n-----\n\n</details>\n\n\n<details>\n<summary><code>composite</code></summary>\n\n-----\n\n### composite\nThis method requires a connection to the ODS.\n\nUse this method to initialize an EdFiComposite (i.e. EdFiEndpoint).\nThis object contains methods to pull rows and composite metadata from the API.\n\nNote: The only composite currently defined in the API is `enrollment`.\n\n```python\n>>> api.composite(\n        name='students',         # Name of composite resource\n        namespace='ed-fi',       # Default ; custom resources use a different namespace\n        composite='enrollment',  # Default ; name of composite\n        filter_type=None,        # Optional; used to filter composites by ID and type\n        filter_id=None,          # Optional; used to filter composites by ID and type\n        params={},               # Optional; used to pass parameters to API calls\n        **kwargs                 # Optional; alternative way to pass parameters to API calls\n    )\n\n<Enrollment Composite [edFi/students]>\n```\n`name`, `params`, and `kwargs` can be formatted in **snake_case** or **camelCase**.\n\n-----\n\n</details>\n\n------\n\n\n## EdFiEndpoint\n`EdFiEndpoint` is an abstract base class for interfacing with API endpoints.\nAll methods that return `EdFiEndpoint` and child classes require a session with the API.\n\n```python\n>>> students = api.resource('students', min_change_version=52028375, max_change_version=53295015)\n>>> students\n<Resource with 2 parameters [edFi/students]>\n\n# AND/OR\n\n>>> students_composite = api.composite('students')\n>>> students_composite\n<Enrollment Composite [edFi/students]>\n```\n\n### Methods\n\n<details>\n<summary><code>ping</code></summary>\n\n-----\n\n### ping\nThis method pings the endpoint and returns a Response object with scrubbed JSON data.\nThis offers a shortcut for verifying claim-set permissions without needing to pull data from the ODS.\n\n```python\n>>> res = students.ping()\n>>> res\n<Response [200]>\n\n>>> res.json()\n{'message': 'Ping was successful! ODS data has been intentionally scrubbed from this response.'}\n```\n\n-----\n\n</details>\n\n\n<details>\n<summary><code>get</code></summary>\n\n-----\n\n### get\nThis method retrieves one GET-request of JSON rows from the specified endpoint.\nThis can be used to verify the structure of the data or to collect a small sample for testing.\n\nAn optional limit can be provided.\nIf unspecified, the default limit will be retrieved.\n(This value must be less than the hard-coded limit of the ODS, or the request will fail.)\n\n```python\n>>> students.get(limit=1)\n[Get Resource] Endpoint  : {BASE_URL}/data/v3/ed-fi/students\n[Get Resource] Parameters: {}\n[{'id': 'abc123', 'studentUniqueId': '987654', 'birthDate': '1970-01-01', ...}]\n```\nBecause this GET does not use pagination, the return is a list, not a generator.\n\n-----\n\n</details>\n\n\n<details>\n<summary><code>get_rows / get_pages</code></summary>\n\n-----\n\n### get_rows / get_pages\nThese are the primary methods for retrieving all JSON rows from the specified endpoint and parameters.\nThe only difference in function is whether the rows are returned individually or in batches (i.e., pages).\nIteration continues until no rows are returned.\n\nBoth methods use identical arguments.\nUnder the hood, `get_rows()` implements `get_pages()`, but unnests the rows before returning.\n\n```python\n>>> student_rows = students.get_rows(\n        page_size=500,           # The limit to pass to the parameters. Overwrites parameter if already defined.\n        retry_on_failure=False,  # Reconnect session if request fails and reattempt (e.g., if authentication expires).\n        max_retries=5,           # If `retry_on_failure is True`, how many attempts before giving up.\n        max_wait=500,            # If `retry_on_failure is True`, max wait time for exponential backoff before giving up.\n\n        step_change_version=False,       # Only available for resources/descriptors. See [Change Version Stepping] below.\n        change_version_step_size=50000,  # Only available for resources/descriptors. See [Change Version Stepping] below.\n    )\n<generator object EdFiEndpoint.get_rows at 0x7f7472650f90>\n\n>>> list(student_rows)\n[Paged Get Resource] Endpoint  : {BASE_URL}/data/v3/ed-fi/students\n[Paged Get Resource] Parameters: {'minChangeVersion': 52028375, 'maxChangeVersion': 53295015, 'limit': 500, 'offset': 0}\n[Paged Get Resource] @ Retrieved 500 rows. Paging offset...\n# ...\n[Paged Get Resource] Parameters: {'minChangeVersion': 52028375, 'maxChangeVersion': 53295015, 'limit': 500, 'offset': 4000}\n[Paged Get Resource] @ Retrieved 135 rows. Paging offset...\n[Paged Get Resource] @ Retrieved zero rows. Ending pagination.\n[{'id': 'abc123', 'studentUniqueId': '987654', 'birthDate': '1970-01-01', ...}, ...]\n```\nTo circumvent memory constraints, these methods return generators instead of lists.\n\n-----\n\n</details>\n\n\n<details>\n<summary><code>total_count</code></summary>\n\n-----\n\n### total_count\nThis method returns the total count of rows for the given endpoint, as declared by the API.\nThis action is completed by sending a limit 0 GET request to the API with the `Total-Count` header set to `True`.\n\n```python\n>>> students.total_count()\n4135\n```\n\n`total_count()` is currently only implemented for resources, not composites.\n\n-----\n\n</details>\n\n\n------\n\n\n## Change Version Stepping\nThe Ed-Fi API already has pagination built-in via the `limit` and `offset` parameters passed in GET-requests.\n\nHere is an example of what calls to the API look like using pagination (page size 500), charted across time by change versions.\n![EdFiPagination](https://github.com/edanalytics/edfi_api_client/raw/main/images/edfi_api_pagination.gif)\n\nThis client provides a second type of pagination that uses change versions to improve performance when pulling from the API, referred to here as _change version stepping_.\n\nA change version window of a specified length is defined, and calls to the API pass the min and max change versions of this window.\nOrdinary pagination still occurs within each window until zero rows are returned, after which the change version window steps and the process is repeated.\n\nHere is an example of what calls to the API look like using change version stepping (step-window size 2000 and page size 500).\n![EdFiChangeVersionStepping](https://github.com/edanalytics/edfi_api_client/raw/main/images/edfi_api_changeversion.gif)\n\n\nNote that change versions are currently accessible only for **resources**, not for composites.\n\n<details>\n<summary>Why is change version stepping recommended when pulling from the API?</summary>\n\n-----\n\nWe can imagine requests sent to the Ed-Fi API as SQL select statements against the underlying ODS.\nFor example, the code below makes repeated calls to the API, paging by 500 until all rows are retrieved.\n```python\n>>> students = api.resource('students', schoolYear='2022')\n>>> students.get_rows(page_size=500)\n```\n\nThis code is semantically identical to the following SQL statements:\n```sql\nSELECT * FROM students WHERE schoolYear = '2022' LIMIT 500 OFFSET 0;\nSELECT * FROM students WHERE schoolYear = '2022' LIMIT 500 OFFSET 500;\nSELECT * FROM students WHERE schoolYear = '2022' LIMIT 500 OFFSET 1000;\n-- etc.\n```\n\nThis works fine for small-volume resources.\nHowever, as `offset` increases, the computational-runtime of the query increases with it.\nFor large-volume resources (e.g. `studentSectionAttendanceEvents`), this could translate to the following:\n```sql\nSELECT * FROM studentSectionAttendanceEvents LIMIT 500 OFFSET 100000000;\n```\n\nThis is the equivalent of calculating the first 100,000,500 rows of data, but only collecting the final 500.\nIn practice, the connection to the ODS will time-out and need to re-authenticated before this query returns.\n\nLuckily, the Ed-Fi3 \"change versions\" feature provides a helpful workaround for this.\nBy specifying a min- and max-change-version in the query, a filtered select is applied that never reaches high offset.\n```python\n>>> students = api.resource('students', min_change_version=0, max_change_version=50000)\n>>> students.get_rows(page_size=500)\n```\nBy definition, a change-version window will never contain more rows than the size of that window.\nTherefore, because the change version window defined above is only 50000 (i.e., `max_change_version - min_change_version`),\nthe final API-call will be equivalent to the following:\n```sql\nSELECT * FROM students WHERE changeVersion BETWEEN 0 AND 50000 LIMIT 500 OFFSET 50000\n```\n\n-----\n\n</details>\n\nSetting `step_change_version = True` in `get_rows()` or `get_pages()` turns on change version stepping.\nUse `change_version_step_size` to set the width of each stepping window (default 50000).\n\n```python\n>>> students = api.resource('students', min_change_version=52028375, max_change_version=53295015)\n>>> student_rows = students.get_rows(\n        page_size=500,\n        step_change_version=True,\n        change_version_step_size=50000  # Default value. This is NOT optimized. Raise it to reduce API calls.\n    )\n\n>>> list(student_rows)\n[Paged Get Resource] Endpoint  : {BASE_URL}/data/v3/ed-fi/students\n[Paged Get Resource] Parameters: {'minChangeVersion': 52028375, 'maxChangeVersion': 52078375, 'limit': 500, 'offset': 0}\n[Paged Get Resource] @ Retrieved 101 rows. Paging offset...\n[Paged Get Resource] Parameters: {'minChangeVersion': 52028375, 'maxChangeVersion': 52078375, 'limit': 500, 'offset': 500}\n[Paged Get Resource] @ Retrieved zero rows. Stepping change version...\n[Paged Get Resource] Parameters: {'minChangeVersion': 52078376, 'maxChangeVersion': 52128375, 'limit': 500, 'offset': 0}\n[Paged Get Resource] @ Retrieved 500 rows. Paging offset...\n# ...\n[Paged Get Resource] Parameters: {'minChangeVersion': 53278376, 'maxChangeVersion': 53295015, 'limit': 500, 'offset': 0}\n[Paged Get Resource] @ Retrieved zero rows. Stepping change version...\n[Paged Get Resource] @ Change version exceeded max. Ending pagination.\n```\n\nTo ingest all rows for a resource, find the ODS' newest change version and apply this to `max_change_version`, as below:\n```python\n>>> max_change_version = api.get_newest_change_version()\n\n>>> students = api.resource('students', min_change_version=0, max_change_version=max_change_version)\n>>> students.get_rows(page_size=500, step_change_version=True)\n```\n\n**Things to note when using change version stepping:** \n* Change version stepping usually results in more requests made to the API; however, they are far less likely to overwhelm it as with high offsets.\n* Using change version stepping requires both `min_change_version` and `max_change_version` be defined within either the resource's `params` or `kwargs`.\nIf either are undefined, an error is raised.\n* The default `change_version_step_size` is set to `50000`.\nThis value is not optimized. Try raising it to send fewer requests to the API.\n\n\n**Important Caveat: API De-synchronization when Change-Version Stepping**\n\nThere is a known problem that can occur when pulling from the API using change-version limits and without snapshotting.\nIf any rows within the change-version window are updated mid-pull, their change-version is updated and they escape the window.\nWhen this occurs, all other rows in the window shift to fill the place of the missing row, resulting in rows entering previously-pulled offset-windows and being missed in subsequent calls to the API.\nThis leads to a gradual de-synchronization between the API and datalakes built from the API.\n\n\n\nWe have added a new offset-pagination method to counteract this bug, known as \"reverse paging.\"\nBy default, when `step_change_version=True` in resource pulls, requests are made to the API starting at the greatest offset and iterating backwards until offset zero.\nIf a row is updated and a shift occurs mid-pull, one or more rows in the change version may be ingested multiple times, but no rows will be lost altogether.\n\n<details>\n<summary>For example:</summary>\n\n-----\n\nSay there are 15 rows in the `students` resource with change versions between 0 and 20.\nWe pull these rows using a page-size of 4.\n\n![EdFiDesync1](https://github.com/edanalytics/edfi_api_client/raw/main/images/changeversion_desync1.png)\n\nSay that before our fourth (and final) API call, record number 6 is updated and leaves the change-version window.\nRecords 7 through 15 will shift to fill its place.\nWhen this occurs, record number 13 will shift from page 4 into a page that has already been ingested.\nTherefore, it will be missed from the final output.\n\n![EdFiDesync2](https://github.com/edanalytics/edfi_api_client/raw/main/images/changeversion_desync2.png)\n\nUsing reverse-paging, page 4 will be ingested first. When record number 6 is updated and the rows shift, record 13 will move into page 3 and will be ingested a second time.\nHowever, this row will not be lost.\n\n-----\n\n</details>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edanalytics/edfi_api_client",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "edfi-api-client",
    "package_url": "https://pypi.org/project/edfi-api-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/edfi-api-client/",
    "project_urls": {
      "Homepage": "https://github.com/edanalytics/edfi_api_client"
    },
    "release_url": "https://pypi.org/project/edfi-api-client/0.1.3/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "Ed-Fi API client and tools",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17245275,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e58c5bea8bbdb5f885cacb6b2cb96aa88ca48c900d097a7346173f9a498a070e",
          "md5": "984eacd31aac3553c7cacc8dd2c1ae22",
          "sha256": "dbb9de51c0d63344e0c72bef81fe5ae9a48b3c0c928e176c6bfe90893947c7f1"
        },
        "downloads": -1,
        "filename": "edfi_api_client-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "984eacd31aac3553c7cacc8dd2c1ae22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21315,
        "upload_time": "2022-12-14T19:12:29",
        "upload_time_iso_8601": "2022-12-14T19:12:29.765797Z",
        "url": "https://files.pythonhosted.org/packages/e5/8c/5bea8bbdb5f885cacb6b2cb96aa88ca48c900d097a7346173f9a498a070e/edfi_api_client-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f2b7c3622910c88e5c26b042641bbd484e036331a8b81569ed401564a4c52b5",
          "md5": "bc63ec8a09f78e5e6e8e55c2f1e8f7a6",
          "sha256": "de90cabda569487dc19f2e10691e20e28896c2648af63a49a58157cf008b41de"
        },
        "downloads": -1,
        "filename": "edfi_api_client-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bc63ec8a09f78e5e6e8e55c2f1e8f7a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24229,
        "upload_time": "2022-12-14T19:12:31",
        "upload_time_iso_8601": "2022-12-14T19:12:31.308385Z",
        "url": "https://files.pythonhosted.org/packages/1f/2b/7c3622910c88e5c26b042641bbd484e036331a8b81569ed401564a4c52b5/edfi_api_client-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7687a24d0bf41f83588d37ff4e16047e75af9be7b35a1af592c315170bb04607",
          "md5": "1d87c5c06f4d8dbc6b8174ccfaf46e56",
          "sha256": "f07016c77bbb561d0811eb810a80d3b3cb7f6427b652bee8b196cd39d53cffa0"
        },
        "downloads": -1,
        "filename": "edfi_api_client-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d87c5c06f4d8dbc6b8174ccfaf46e56",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21333,
        "upload_time": "2023-01-27T18:49:52",
        "upload_time_iso_8601": "2023-01-27T18:49:52.351645Z",
        "url": "https://files.pythonhosted.org/packages/76/87/a24d0bf41f83588d37ff4e16047e75af9be7b35a1af592c315170bb04607/edfi_api_client-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e34ee49b614e6f28dfe5b2c464efc6369451f6a61f5a8e7431bb37f73da06b8c",
          "md5": "2692c3d0445a9b5283069f9a04451d9e",
          "sha256": "702a674507fc2fb66321f135732e53edfa32e3c148d242327000b0fc73c1a344"
        },
        "downloads": -1,
        "filename": "edfi_api_client-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2692c3d0445a9b5283069f9a04451d9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22578,
        "upload_time": "2023-03-10T21:30:44",
        "upload_time_iso_8601": "2023-03-10T21:30:44.663524Z",
        "url": "https://files.pythonhosted.org/packages/e3/4e/e49b614e6f28dfe5b2c464efc6369451f6a61f5a8e7431bb37f73da06b8c/edfi_api_client-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e34ee49b614e6f28dfe5b2c464efc6369451f6a61f5a8e7431bb37f73da06b8c",
        "md5": "2692c3d0445a9b5283069f9a04451d9e",
        "sha256": "702a674507fc2fb66321f135732e53edfa32e3c148d242327000b0fc73c1a344"
      },
      "downloads": -1,
      "filename": "edfi_api_client-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2692c3d0445a9b5283069f9a04451d9e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22578,
      "upload_time": "2023-03-10T21:30:44",
      "upload_time_iso_8601": "2023-03-10T21:30:44.663524Z",
      "url": "https://files.pythonhosted.org/packages/e3/4e/e49b614e6f28dfe5b2c464efc6369451f6a61f5a8e7431bb37f73da06b8c/edfi_api_client-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}