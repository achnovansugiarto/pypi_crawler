{
  "info": {
    "author": "qfcy qq:3076711200",
    "author_email": "3076711200@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Natural Language :: Chinese (Simplified)",
      "Programming Language :: Python :: 3",
      "Topic :: Education",
      "Topic :: Software Development :: Assemblers",
      "Topic :: Software Development :: Bug Tracking",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Disassemblers",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "pycodeobject库是一个用于解析、编辑Python 字节码(bytecode)的工具。\r\n\r\nPycodeobject is a tool which parses and edits Python bytecode object.\r\n\r\n详细介绍\r\n========\r\n\r\n字节码的结构\r\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\r\n\r\n众所周知, Python中的字节码(bytecode) 是一种数据类型, Python代码的编译结果就是bytecode对象。\r\n\r\nbytecode对象可以由虚拟机加载后直接运行，而pyc文件就是bytecode在硬盘上的保存形式。\r\n先通过一个示例, 分析什么是字节码::\r\n\r\n.. code-block:: python\r\n\r\n    >>> import dis\r\n    >>> def f(x):print('hello',x)\r\n    \r\n    >>> f.__code__\r\n    <code object f at 0x02B27498, file \"<pyshell#2>\", line 1>\r\n    >>> f.__code__.co_code\r\n    b't\\x00d\\x01|\\x00\\x83\\x02\\x01\\x00d\\x00S\\x00'\r\n    >>> dis.dis(f)\r\n      1           0 LOAD_GLOBAL              0 (print)\r\n                  2 LOAD_CONST               1 ('hello')\r\n                  4 LOAD_FAST                0 (x)\r\n                  6 CALL_FUNCTION            2\r\n                  8 POP_TOP\r\n                 10 LOAD_CONST               0 (None)\r\n                 12 RETURN_VALUE\r\n    >>> \r\n\r\n上述示例中f.__code__就是bytecode对象, f.__code__.co_code就是二进制的字节码, 通过dis模块可以反编译、分析这些二进制代码。\r\n\r\nPython解释执行代码时, 会首先将原始的源代码翻译成bytecode形式, 再直接执行bytecode, 以提高性能。\r\n\r\n.. image:: https://img-blog.csdnimg.cn/20210719105023666.png\r\n    :alt: 字节码结构图\r\n\r\n(在 Python 3.8中, 增加了一个属性 `co_posonlyargcount`)\r\n\r\n详尽的说明参见Python官方文档 https://docs.python.org/zh-cn/3.7/library/dis.html 。\r\n\r\n包装字节码\r\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\r\n\r\n在python中, bytecode对象的属性是不可修改的。如::\r\n\r\n.. code-block:: python\r\n\r\n    >>> def f():pass\r\n    >>> f.__code__.co_code = b''\r\n    Traceback (most recent call last): ... ...\r\n    AttributeError: readonly attribute\r\n\r\n为了使bytecode对象更易用, 本项目中的Code类, 用于包装 (wrap)字节码对象。\r\n\r\n下面的示例是从doctest中摘取的::\r\n\r\n.. code-block:: python\r\n\r\n    >>> def f():print(\"Hello\")\r\n    >>> c=Code.fromfunc(f)\r\n    >>> c.co_consts\r\n    (None, 'Hello')\r\n    >>> c.co_consts=(None, 'Hello World!')\r\n    >>> c.exec()\r\n    Hello World!\r\n    >>>\r\n    >>> import os,pickle\r\n    >>> temp=os.getenv('temp')\r\n    >>> with open(os.path.join(temp,\"temp.pkl\"),'wb') as f:\r\n    ...     pickle.dump(c,f)\r\n    ... \r\n    >>> f=open(os.path.join(temp,\"temp.pkl\"),'rb')\r\n    >>> pickle.load(f).to_func()()\r\n    Hello World!\r\n    >>> \r\n    >>> c.to_pycfile(os.path.join(temp,\"temppyc.pyc\"))\r\n    >>> sys.path.append(temp)\r\n    >>> import temppyc\r\n    Hello World!\r\n    >>> Code.from_pycfile(os.path.join(temp,\"temppyc.pyc\")).exec()\r\n    Hello World!\r\n\r\n版本 VERSION\r\n============\r\n    1.0.3\r\n\r\n作者 AUTHOR\r\n===========\r\n    qfcy qq:3076711200 贴吧账号:qfcy\\_\r\n\r\n    作者CSDN主页: https://blog.csdn.net/qfcy\\_\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/qfcy/Python/blob/main/pyobject/code_.py",
    "keywords": "python,bytecode,字节码,assemble,pyc,uncompile,反编译",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pycodeobject",
    "package_url": "https://pypi.org/project/pycodeobject/",
    "platform": null,
    "project_url": "https://pypi.org/project/pycodeobject/",
    "project_urls": {
      "Homepage": "https://github.com/qfcy/Python/blob/main/pyobject/code_.py"
    },
    "release_url": "https://pypi.org/project/pycodeobject/1.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "用于解析、编辑Python 字节码(bytecode)的工具。A tool which parses and edits Python bytecode object.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15746904,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "946b2922578cee8bf275a69016c932a55e4f7f78fc9f251ec98ddf4af3713b63",
          "md5": "c112c84383a686f75f84331d1d8c02dd",
          "sha256": "882851e831cc91f389989f9930683a8b37a24318555032ae95b4383da16b90c7"
        },
        "downloads": -1,
        "filename": "pycodeobject-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c112c84383a686f75f84331d1d8c02dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6603,
        "upload_time": "2021-07-25T02:59:24",
        "upload_time_iso_8601": "2021-07-25T02:59:24.734783Z",
        "url": "https://files.pythonhosted.org/packages/94/6b/2922578cee8bf275a69016c932a55e4f7f78fc9f251ec98ddf4af3713b63/pycodeobject-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a836b89923a7c66591c4b066b650f54180654aabd31b1e1a9e20a87a15f016b",
          "md5": "910e3e6e49061eac6591c98133da1438",
          "sha256": "d4b99f46dba0affb8bc05b5311e54d908c3afe30fd554f35b45d7824b910df06"
        },
        "downloads": -1,
        "filename": "pycodeobject--1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "910e3e6e49061eac6591c98133da1438",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8059,
        "upload_time": "2022-02-02T07:56:56",
        "upload_time_iso_8601": "2022-02-02T07:56:56.421634Z",
        "url": "https://files.pythonhosted.org/packages/9a/83/6b89923a7c66591c4b066b650f54180654aabd31b1e1a9e20a87a15f016b/pycodeobject--1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "610ba0351f86fbe8089d8768576ec6dcdd223bada7dac4681fa4be9359162bea",
          "md5": "092808249251dc54d5dbd81942899ded",
          "sha256": "8381c1a35f49ab256e638a6c9783a3309739609c7f7f7a529dd5b0f835fe5f0a"
        },
        "downloads": -1,
        "filename": "pycodeobject-1.0.3_.tar.gz",
        "has_sig": false,
        "md5_digest": "092808249251dc54d5dbd81942899ded",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10191,
        "upload_time": "2022-11-12T20:00:11",
        "upload_time_iso_8601": "2022-11-12T20:00:11.556030Z",
        "url": "https://files.pythonhosted.org/packages/61/0b/a0351f86fbe8089d8768576ec6dcdd223bada7dac4681fa4be9359162bea/pycodeobject-1.0.3_.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "610ba0351f86fbe8089d8768576ec6dcdd223bada7dac4681fa4be9359162bea",
        "md5": "092808249251dc54d5dbd81942899ded",
        "sha256": "8381c1a35f49ab256e638a6c9783a3309739609c7f7f7a529dd5b0f835fe5f0a"
      },
      "downloads": -1,
      "filename": "pycodeobject-1.0.3_.tar.gz",
      "has_sig": false,
      "md5_digest": "092808249251dc54d5dbd81942899ded",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10191,
      "upload_time": "2022-11-12T20:00:11",
      "upload_time_iso_8601": "2022-11-12T20:00:11.556030Z",
      "url": "https://files.pythonhosted.org/packages/61/0b/a0351f86fbe8089d8768576ec6dcdd223bada7dac4681fa4be9359162bea/pycodeobject-1.0.3_.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}