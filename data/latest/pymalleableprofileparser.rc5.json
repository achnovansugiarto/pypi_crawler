{
  "info": {
    "author": "Brett Fitzpatrick",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pyMalleableProfileParser\nParses Cobalt Strike malleable C2 profiles.\n\n[![Latest version released on PyPi](https://img.shields.io/pypi/v/pymalleableprofileparser?style=flat-square)](https://pypi.org/project/pyMalleableProfileParser/)\n[![License](https://img.shields.io/github/license/brett-fitz/pyMalleableProfileParser?style=flat-square)](https://github.com/brett-fitz/pyMalleableProfileParser/blob/main/LICENSE)\n[![Issues](https://img.shields.io/github/issues/brett-fitz/pyMalleableProfileParser?style=flat-square)](https://github.com/brett-fitz/pyMalleableProfileParser/issues)\n\n![Cobalt Strike Logo](https://raw.githubusercontent.com/brett-fitz/pyMalleableProfileParser/main/cobalt-strike-logo.png)\n\n\n## Installation :gear:\n```shell\npip3 install pyMalleableProfileParser\n```\n\n### Upgrading to the latest version\n```shell\npip3 install --upgrade pyMalleableProfileParser\n```\n\n\n## Usage\n\n### MalleableProfile class\n```python\nfrom mpp import MalleableProfile\nmp = MalleableProfile(profile='/path/to/profile')\nmp.profile\n```\n\n### Get attributes easily\n\n### Options\nHere is an example of getting the global option `jitter`:\n```python\n>> mp.jitter        \nOption(option=\"jitter\", value=\"0\")\n>> mp.jitter.option\n'jitter'\n>> mp.jitter.value\n'0'\n```\nYou can also access options in any block:\n```python\n>> mp.http_get.uri\nOption(option=\"uri\", value=\"/s/ref=nb_sb_noss_1/167-3294888-0262949/field-keywords=books\")\n```\n\n### Statements\nYou can get statements in any block or sub-block:\n```python\n>> mp.http_get.client.Host\nStatement(statement=header, key=\"Host\", value=\"www.amazon.com\")\n```\n```python\n>> mp = MalleableProfile('bing_maps.profile')\n>> mp.stage.transform_x86.ReflectiveLoader\nStatement(statement=strrep, string=\"ReflectiveLoader\", replace=\"\")\n```\n\n### Blocks\nLike statements, you can access any block or sub-block:\n```python\n>> mp.http_get\nBlock(name=http-get, data=[Option(option=\"uri\", value=\"/s/ref=nb_sb_noss_1/167-3294888-0262949/field-keywords=books\"), \nBlock(name=client, data=[Statement(statement=header, key=\"Accept\", value=\"*/*\"), Statement(statement=header, key=\"Host\", \nvalue=\"www.amazon.com\"), Block(name=metadata, data=[Statement(statement=base64, value=\"\"), Statement(statement=prepend, \nvalue=\"session-token=\"), Statement(statement=prepend, value=\"skin=noskin;\"), Statement(statement=append, \nvalue=\"csm-hit=s-24KU11BB82RZSYGJ3BDK|1419899012996\"), Statement(statement=header, key=\"Cookie\", value=\"\")])]), \nBlock(name=server, data=[Statement(statement=header, key=\"Server\", value=\"Server\"), Statement(statement=header, \nkey=\"x-amz-id-1\", value=\"THKUYEZKCKPGY5T42PZT\"), Statement(statement=header, key=\"x-amz-id-2\", \nvalue=\"a21yZ2xrNDNtdGRsa212bGV3YW85amZuZW9ydG5rZmRuZ2tmZGl4aHRvNDVpbgo=\"), Statement(statement=header, \nkey=\"X-Frame-Options\", value=\"SAMEORIGIN\"), Statement(statement=header, key=\"Content-Encoding\", value=\"gzip\"), Block(\nname=output, data=[Statement(statement=print, value=\"\")])])])\n>> mp.http_get.server.output\nBlock(name=output, data=[Statement(statement=print, value=\"\")])\n```\n\n\n## Validate a Profile\nBy default, `validate()` will validate Malleable Profiles for 4.0+. You can also specify a specific version. Note: a\nwarning will be displayed when setting dns options globally but will fail the validation if you specify version `4.3`.\n\n**Example**\n```python\n>>> from mpp.profile import MalleableProfile\n>>> mp = MalleableProfile('bing_maps.profile')\n>>> mp.validate()\nstarting with v4.3, dns options have been moved into 'dns-beacon' block: dns_idle\nstarting with v4.3, dns options have been moved into 'dns-beacon' block: maxdns\nstarting with v4.3, dns options have been moved into 'dns-beacon' block: dns_sleep\nstarting with v4.3, dns options have been moved into 'dns-beacon' block: dns_stager_prepend\nstarting with v4.3, dns options have been moved into 'dns-beacon' block: dns_stager_subhost\nstarting with v4.3, dns options have been moved into 'dns-beacon' block: dns_max_txt\nstarting with v4.3, dns options have been moved into 'dns-beacon' block: dns_ttl\nTrue\n>>> mp.validate(version=4.3)\n[(Option(option=\"dns_idle\", value=\"8.8.8.8\"), 'INVALID_OPTION'), (Option(option=\"maxdns\", value=\"245\"), 'INVALID_OPTION'), (Option(option=\"dns_sleep\", value=\"0\"), 'INVALID_OPTION'), (Option(option=\"dns_stager_prepend\", value=\"\"), 'INVALID_OPTION'), (Option(option=\"dns_stager_subhost\", value=\"\"), 'INVALID_OPTION'), (Option(option=\"dns_max_txt\", value=\"252\"), 'INVALID_OPTION'), (Option(option=\"dns_ttl\", value=\"1\"), 'INVALID_OPTION')]\n>>> \n\n```\n\n\n## Profile Structure (Dict)\n\n**Example: amazon.profile**\n```python\n{'sleeptime': Option(option=\"sleeptime\", value=\"5000\"),\n 'jitter': Option(option=\"jitter\", value=\"0\"),\n 'maxdns': Option(option=\"maxdns\", value=\"255\"),\n 'useragent': Option(option=\"useragent\", value=\"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\"),\n 'http-get': Block(name=http-get, data=[Option(option=\"uri\", value=\"/s/ref=nb_sb_noss_1/167-3294888-0262949/field-keywords=books\"), \n                                        Block(name=client, data=[Statement(statement=header, key=\"Accept\", value=\"*/*\"), \n                                                                 Statement(statement=header, key=\"Host\", value=\"www.amazon.com\"), \n                                                                 Block(name=metadata, data=[Statement(statement=base64, value=\"\"), \n                                                                                            Statement(statement=prepend, value=\"session-token=\"), \n                                                                                            Statement(statement=prepend, value=\"skin=noskin;\"), \n                                                                                            Statement(statement=append, value=\"csm-hit=s-24KU11BB82RZSYGJ3BDK|1419899012996\"), \n                                                                                            Statement(statement=header, key=\"Cookie\", value=\"\")])]), \n                                        Block(name=server, data=[Statement(statement=header, key=\"Server\", value=\"Server\"), \n                                                                 Statement(statement=header, key=\"x-amz-id-1\", value=\"THKUYEZKCKPGY5T42PZT\"), \n                                                                 Statement(statement=header, key=\"x-amz-id-2\", value=\"a21yZ2xrNDNtdGRsa212bGV3YW85amZuZW9ydG5rZmRuZ2tmZGl4aHRvNDVpbgo=\"), \n                                                                 Statement(statement=header, key=\"X-Frame-Options\", value=\"SAMEORIGIN\"), \n                                                                 Statement(statement=header, key=\"Content-Encoding\", value=\"gzip\"), \n                                                                 Block(name=output, data=[Statement(statement=print, value=\"\")])])]),\n 'http-post': Block(name=http-post, data=[Option(option=\"uri\", value=\"/N4215/adj/amzn.us.sr.aps\"), \n                                          Block(name=client, data=[Statement(statement=header, key=\"Accept\", value=\"*/*\"), \n                                                                   Statement(statement=header, key=\"Content-Type\", value=\"text/xml\"), \n                                                                   Statement(statement=header, key=\"X-Requested-With\", value=\"XMLHttpRequest\"), \n                                                                   Statement(statement=header, key=\"Host\", value=\"www.amazon.com\"), \n                                                                   Statement(statement=parameter, key=\"sz\", value=\"160x600\"), \n                                                                   Statement(statement=parameter, key=\"oe\", value=\"oe=ISO-8859-1;\"), \n                                                                   Block(name=id, data=[Statement(statement=parameter, key=\"sn\", value=\"\")]), \n                                                                   Statement(statement=parameter, key=\"s\", value=\"3717\"), \n                                                                   Statement(statement=parameter, key=\"dc_ref\", value=\"http%3A%2F%2Fwww.amazon.com\"), \n                                                                   Block(name=output, data=[Statement(statement=base64, value=\"\"), \n                                                                                            Statement(statement=print, value=\"\")])]), \n                                          Block(name=server, data=[Statement(statement=header, key=\"Server\", value=\"Server\"), \n                                                                   Statement(statement=header, key=\"x-amz-id-1\", value=\"THK9YEZJCKPGY5T42OZT\"), \n                                                                   Statement(statement=header, key=\"x-amz-id-2\", value=\"a21JZ1xrNDNtdGRsa219bGV3YW85amZuZW9zdG5rZmRuZ2tmZGl4aHRvNDVpbgo=\"), \n                                                                   Statement(statement=header, key=\"X-Frame-Options\", value=\"SAMEORIGIN\"), \n                                                                   Statement(statement=header, key=\"x-ua-compatible\", value=\"IE=edge\"), \n                                                                   Block(name=output, data=[Statement(statement=print, value=\"\")])])])}\n```\n\n## Help :construction_worker:\n\n#### Join us in discussions\nI use GitHub Discussions to talk about all sorts of topics related to this repo.\n\n#### Open an issue\nFirst, check out the [existing issues](https://github.com/brett-fitz/pyMalleableProfileParser/issues). If you spot \nsomething new, open an issue. We'll use the issue to have a conversation about the problem you want to fix, and I'll \ntry to get to it as soon as I can.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brett-fitz/pyMalleableProfileParser",
    "keywords": "cobalt strike,malleable profile,parser",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyMalleableProfileParser",
    "package_url": "https://pypi.org/project/pyMalleableProfileParser/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyMalleableProfileParser/",
    "project_urls": {
      "Homepage": "https://github.com/brett-fitz/pyMalleableProfileParser"
    },
    "release_url": "https://pypi.org/project/pyMalleableProfileParser/0.3.3/",
    "requires_dist": null,
    "requires_python": "~=3.5",
    "summary": "Parses Cobalt Strike malleable C2 profiles",
    "version": "0.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15816551,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31b33004ed4454f4dae6cbb19c02bffe2ae7e0bf656919b35217110fe4413200",
          "md5": "4e6c9a0e22dc59dde98911178f8a3bdc",
          "sha256": "c81b353e23a8fda98ee6bd1c4a9138ce2f5fe6e8e34a18c546daa9548415366d"
        },
        "downloads": -1,
        "filename": "pyMalleableProfileParser-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4e6c9a0e22dc59dde98911178f8a3bdc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 4236,
        "upload_time": "2021-09-08T00:19:27",
        "upload_time_iso_8601": "2021-09-08T00:19:27.120721Z",
        "url": "https://files.pythonhosted.org/packages/31/b3/3004ed4454f4dae6cbb19c02bffe2ae7e0bf656919b35217110fe4413200/pyMalleableProfileParser-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f7ec6e131cecbc2a083b26d3296343346653ddaea4b029f44feca44a0a703aa",
          "md5": "f50d1dd2252444f979fd1e633d3b48d6",
          "sha256": "a4a844aa8848bf4c5e587974c55934ad9649bdcda67b9a7da5b200a79a814414"
        },
        "downloads": -1,
        "filename": "pyMalleableProfileParser-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f50d1dd2252444f979fd1e633d3b48d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 10925,
        "upload_time": "2021-10-22T02:35:21",
        "upload_time_iso_8601": "2021-10-22T02:35:21.795158Z",
        "url": "https://files.pythonhosted.org/packages/9f/7e/c6e131cecbc2a083b26d3296343346653ddaea4b029f44feca44a0a703aa/pyMalleableProfileParser-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bedc51c57f6e607830c20f987ed07bf618d976898dd8ab31c1d062ea997c6245",
          "md5": "d3a998485511261009c0eb4ffc471225",
          "sha256": "d1b37d93fe4cd1a23d6a863a266709aa4c5ee0537e2e6cda4801d4ed03358dae"
        },
        "downloads": -1,
        "filename": "pyMalleableProfileParser-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3a998485511261009c0eb4ffc471225",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 11717,
        "upload_time": "2021-10-22T03:06:36",
        "upload_time_iso_8601": "2021-10-22T03:06:36.631922Z",
        "url": "https://files.pythonhosted.org/packages/be/dc/51c57f6e607830c20f987ed07bf618d976898dd8ab31c1d062ea997c6245/pyMalleableProfileParser-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42ce57905786e5e7af2ee1201de9ea469d7bae0c23579149a86472a4dbb16c55",
          "md5": "d04fd8a27a99a40a1e4a3d8a3512e14c",
          "sha256": "b6a72c8c76ad40b95f35223676f773385a4f6feb798ac04d069850427ec324cf"
        },
        "downloads": -1,
        "filename": "pyMalleableProfileParser-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d04fd8a27a99a40a1e4a3d8a3512e14c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 12220,
        "upload_time": "2021-10-22T20:37:28",
        "upload_time_iso_8601": "2021-10-22T20:37:28.375475Z",
        "url": "https://files.pythonhosted.org/packages/42/ce/57905786e5e7af2ee1201de9ea469d7bae0c23579149a86472a4dbb16c55/pyMalleableProfileParser-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2b7257f732dbd87e753abe99540ab1f98f37abbad23eda7cf6421a95bd2befc",
          "md5": "47ff9ae110464c608b2c26facce0c420",
          "sha256": "da7d8b93a508342e1c884db3ac7ac2666c78e213039dd6600d6719f410a8b071"
        },
        "downloads": -1,
        "filename": "pyMalleableProfileParser-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "47ff9ae110464c608b2c26facce0c420",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 12153,
        "upload_time": "2022-11-18T15:42:22",
        "upload_time_iso_8601": "2022-11-18T15:42:22.184851Z",
        "url": "https://files.pythonhosted.org/packages/b2/b7/257f732dbd87e753abe99540ab1f98f37abbad23eda7cf6421a95bd2befc/pyMalleableProfileParser-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b2b7257f732dbd87e753abe99540ab1f98f37abbad23eda7cf6421a95bd2befc",
        "md5": "47ff9ae110464c608b2c26facce0c420",
        "sha256": "da7d8b93a508342e1c884db3ac7ac2666c78e213039dd6600d6719f410a8b071"
      },
      "downloads": -1,
      "filename": "pyMalleableProfileParser-0.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "47ff9ae110464c608b2c26facce0c420",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.5",
      "size": 12153,
      "upload_time": "2022-11-18T15:42:22",
      "upload_time_iso_8601": "2022-11-18T15:42:22.184851Z",
      "url": "https://files.pythonhosted.org/packages/b2/b7/257f732dbd87e753abe99540ab1f98f37abbad23eda7cf6421a95bd2befc/pyMalleableProfileParser-0.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}