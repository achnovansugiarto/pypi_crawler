{
  "info": {
    "author": "Arthur Dujardin",
    "author_email": "arthur.dujardin@ensg.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "![python](https://img.shields.io/badge/python-3.7+-blue.svg)\n[![pypi](https://img.shields.io/pypi/v/nets)](https://pypi.org/project/nets/)\n[![status](https://img.shields.io/pypi/status/nets)](https://pypi.org/project/nets/)\n[![docs](https://img.shields.io/readthedocs/lyricsfandom)](https://arthurdjn.github.io/nets/)\n[![website](https://img.shields.io/website?url=http%3A%2F%2Farthurdujardin.com%2Fproject%2Fnets.html)](arthurdujardin.com/project/nets.html)\n\n<img src=\"img/nets.png\" width=\"100%\">\n\n# 1. Table of Content\n\n<!-- TOC -->\n\n- [1. Table of Content](#1-table-of-content)\n- [2. Overview](#2-overview)\n    - [2.1. About](#21-about)\n    - [2.2. Requirements](#22-requirements)\n    - [2.3. Installation](#23-installation)\n- [3. Status](#3-status)\n- [4. Documentation](#4-documentation)\n- [5. Get Started](#5-get-started)\n    - [5.1. Computational Graph](#51-computational-graph)\n    - [5.2. Building a model](#52-building-a-model)\n- [6. Notebooks](#6-notebooks)\n- [7. References](#7-references)\n\n<!-- /TOC -->\n\n# 2. Overview\n\n## 2.1. About\n\n**NETS** is a light-weight Deep Learning **Python** package, made using only (mostly) **numpy**.\nThis project was first introduced as an assignment at the\n[University of Oslo](https://www.uio.no/studier/emner/matnat/ifi/IN5400/), which is similar to the second\nassignment from [Stanford University](http://cs231n.stanford.edu/syllabus.html).\n\nHowever, this project was pushed further to make it _OOP_ with an easier API.\nIn addition, the back-propagation and update rules where changed, using a custom **autograd** system.\n**NETS** was highly inspired from [PyTorch](https://pytorch.org/) and [TensorFlow](https://www.tensorflow.org/)\npackages.\n\n### But why ?\n\n**NETS** package has **NO CLAIMS** to shadow already well build deep learning packages like **PyTorch**\nor **TensorFlow**. Instead, this package was made to understand how all of these libraries work and handle\nforward / backward propagation by making one from scratch.\nAs I am going through this _deep_ understanding, I found interesting to share\nas much as possible my work, which I hope will help students or people who want to learn more about this subject.\n\n## 2.2. Requirements\n\nAll packages within **NETS** are made from scratch, using mainly **numpy**. However, some additional\npackages can offer a better experience if installed (saving checkpoints and models for example).\n\n-   **numpy**\n-   **json** (Optional)\n-   **time** (Optional)\n-   **pandas** (Optional)\n-   **scipy** (Optional)\n-   **sklearn** (Optional)\n\n## 2.3. Installation\n\nTo install this package from [PyPi](https://pypi.org)\n\n```css\n$ pip install nets\n```\n\nor from this repository\n\n```css\n$ git clone https://github.com/arthurdjn/nets\n$ cd nets\n$ pip install .\n```\n\n# 3. Status\n\n| Development                  | Status      | Feature                                                                |\n| ---------------------------- | ----------- | ---------------------------------------------------------------------- |\n| Autograd System              | finished    | <ul><li>[x] Tensor</li><li>[x] Parameter</li></ul>                     |\n| Optimization                 | finished    | <ul><li>[x] SGD</li><li>[x] Adam</li><li>[x] RMSprop</li></ul>         |\n| Loss                         | in progress | <ul><li>[x] MSE</li><li>[x] Cross Entropy</li><li>[ ] BCE</li></ul>    |\n| Solver                       | finished    | <ul><li>[x] Train</li><li>[x] Eval</li><li>[x] Checkpoints</li></ul>   |\n| Data                         | finished    | <ul><li>[x] Dataset</li><li>[x] Batch</li><li>[x] Iterator</li></ul>   |\n| Dense Neural Network         | finished    | <ul><li>[x] Linear</li><li>[x] Sequential</li></ul>                    |\n| Convolutional Neural Network | finished    | <ul><li>[x] Conv2d</li><li>[x] MaxPool2d</li><li>[x] Dropout</li></ul> |\n| Recurrent Neural Network     | in progress | <ul><li>[x] RNN</li><li>[ ] LSTM</li><li>[ ] GRU</li></ul>             |\n\n# 4. Documentation\n\nThe documentation and tutorials are in process and will be released soon.\nYou will find some tutorials and application on how to get started or build a similar package.\n\n# 5. Get Started\n\n**NETS** architecture follows the one from **PyTorch**.\nIt provides a basic neural network structure so you can create your own with numpy. You will need to\nwrap your arrays in a `Tensor` class to keep track of the gradients, just like in **PyTorch**.\n\n![NETS](img/xor.gif)\n\n## 5.1. Computational Graph\n\n**NETS** uses a forward & backward pass for gradient descent optimizations (NOTE: there are now other optimizers !).\n\nYou can also uses the autograd system (recommended). It behaves similarly as Pytorch, except it is entirely done with NumPy.\n\n```python\nimport nets\n\n\nt1 = nets.Tensor([1, 2, 3], require_grad=True)\nt2 = nets.Tensor([4, 5, 6])\n\nt3 = t1 + t2  \n# t3 now requires gradient\nt3 = t3.sum()\n# Compute the gradients for t1\nt3.backward()\n```\n\n## 5.2. Building a model\n\nA model is a `Module`subclass, where biases, weights and parameters transformations are computed.\nAll modules have a `forward` method, that MUST be overwritten.\nThis method will compute the forward propagation from an input tensor, and compute the transformation.\nIf using the `autograd` system, no back-propagation need to be added. However,\nif you prefer to manually compute the gradients, you will need to override the `backward` method.\n\nYour `Model` should inherits from the `Module` class and override\nthe `forward` method.\n\n```python\nimport nets\nimport nets.nn as nn\n\nclass Model(nn.Module):\n    \"\"\"\n    Create your own model.\n    The attributes should be your submodels used during the forward pass.\n    You don't have to necessary affect the activation function as an attribute,\n    unless you want to set a manual backward pass.\n    \"\"\"\n    def __init__(self, input_dim, hidden_dim, output_dim):\n        # Initialization\n        super().__init__() # Don't forget to add this line\n        self.layer1 = nn.Linear(input_dim, hidden_dim)\n        self.layer2 = nn.Linear(hidden_dim, hidden_dim)\n        self.layer3 = nn.Linear(hidden_dim, output_dim)\n\n    def forward(self, inputs):\n        # Forward pass\n        out1 = nets.tanh(self.layer1(inputs))\n        out2 = nets.tanh(self.layer2(out1))\n        return self.layer3(out2)\n\nmodel = Model(10, 100, 2)\n\n# Let's check the architecture\nmodel\n```\n\nOut:\n\n```pycon\nModel(\n   (layer1): Linear(input_dim=10, output_dim=100, bias=True)\n   (layer2): Linear(input_dim=100, output_dim=100, bias=True)\n   (layer3): Linear(input_dim=100, output_dim=2, bias=True)\n)\n```\n\nAgain, this is really similar to what **PyTorch** offers.\n\n# 6. Notebooks\n\n-   0 - [Getting Started with NETS](examples/notebooks/0_Getting_Started_with_NETS.ipynb)\n\n    This tutorial highlights the main part and modules of **NETS**.\n\n-   1 - [Build an Autograd System with NumPy]()\n\n    To be released\n\n-   2 - [Build a Feed Forward Neural Network with NumPy](examples/notebooks/1_Image_Classifier_with_PyTorch.ipynb)\n\n    Build a Fully Connected Neural Network for image classification.\n\n-   3 - [Build a Convolutional Neural Network with NumPy](examples/notebooks/2_Build_a_CNN_with_NETS.ipynb)\n\n    Build a Convolutional Neural Network for image classification.\n\n# 7. References\n\nHere is a list of tutorials and lectures/assignment that helped to develop **NETS**\n\n-   [PyTorch documentation](https://pytorch.org)\n-   [PyTorch autograd tutorial](https://pytorch.org/tutorials/beginner/blitz/autograd_tutorial.html)\n-   [Joel Grus autograd tutorial](https://github.com/joelgrus/autograd/tree/part06)\n-   [Joel Grus autograd live coding](https://www.youtube.com/watch?v=RxmBukb-Om4)\n-   [Stanford University cs231n 2nd assignment](http://cs231n.github.io/)\n-   [University of Oslo in5400 1st assignment](https://www.uio.no/studier/emner/matnat/ifi/IN5400/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arthurdjn/nets",
    "keywords": "",
    "license": "Apache License-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nets",
    "package_url": "https://pypi.org/project/nets/",
    "platform": "",
    "project_url": "https://pypi.org/project/nets/",
    "project_urls": {
      "Homepage": "https://github.com/arthurdjn/nets"
    },
    "release_url": "https://pypi.org/project/nets/0.0.3.1/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": "",
    "summary": "Neural Network with NumPy.",
    "version": "0.0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9424462,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9ae6c3ea8e0bea4f2851bf33a3bff03abbe7998e5a5ecc1a4710e6c7f3b0d33",
          "md5": "62e7be81ba871ca0e012c178fe1585b3",
          "sha256": "79bfb131c57abf234a80eae6b5a423a3213e784061c99953feaeef2541e010ce"
        },
        "downloads": -1,
        "filename": "nets-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "62e7be81ba871ca0e012c178fe1585b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5901996,
        "upload_time": "2020-05-22T20:53:20",
        "upload_time_iso_8601": "2020-05-22T20:53:20.976645Z",
        "url": "https://files.pythonhosted.org/packages/e9/ae/6c3ea8e0bea4f2851bf33a3bff03abbe7998e5a5ecc1a4710e6c7f3b0d33/nets-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c4cdc299e96dd82f0ea3b74843d300505c08d1fde74cd1c509609dedf4b2ff0",
          "md5": "11d78c3986c47ada80f4c9a36e5b12cf",
          "sha256": "743e433a187dfff7163ec5812fbb8d223c7faf864668a6982ef62a2a4c771500"
        },
        "downloads": -1,
        "filename": "nets-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "11d78c3986c47ada80f4c9a36e5b12cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5902023,
        "upload_time": "2020-05-22T21:00:19",
        "upload_time_iso_8601": "2020-05-22T21:00:19.994934Z",
        "url": "https://files.pythonhosted.org/packages/9c/4c/dc299e96dd82f0ea3b74843d300505c08d1fde74cd1c509609dedf4b2ff0/nets-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b59b10fe1394c29699b0694223424a15ff07df0ba78d7f5380cf583e0d9230b3",
          "md5": "be4fa65952392b5b979d923b4d75ebfa",
          "sha256": "b709b5e5e8a62a1e62cc5195a17a7863cc238d27c6c8bcf4185c119c177df217"
        },
        "downloads": -1,
        "filename": "nets-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be4fa65952392b5b979d923b4d75ebfa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 64219,
        "upload_time": "2020-09-23T12:16:48",
        "upload_time_iso_8601": "2020-09-23T12:16:48.825307Z",
        "url": "https://files.pythonhosted.org/packages/b5/9b/10fe1394c29699b0694223424a15ff07df0ba78d7f5380cf583e0d9230b3/nets-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ee7114ee4e52632e077cfec2424eabde72377dbe56b7a84959c03e4363fcd68",
          "md5": "a955359027dc3001356fa2db31afa64f",
          "sha256": "3b3f230f8f3aeb3f6941995e6a53cf4e5ea44e1f23bd6e309b47ed12df9f75b7"
        },
        "downloads": -1,
        "filename": "nets-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a955359027dc3001356fa2db31afa64f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5268238,
        "upload_time": "2020-09-23T12:16:54",
        "upload_time_iso_8601": "2020-09-23T12:16:54.164437Z",
        "url": "https://files.pythonhosted.org/packages/1e/e7/114ee4e52632e077cfec2424eabde72377dbe56b7a84959c03e4363fcd68/nets-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5a287e48a200651d729982e9e202aab3fbb0c34536b1cf4b478445834f89f56",
          "md5": "a8b76492280676870275022b8fa7bb93",
          "sha256": "fc86cdfd8ada619f0b87e97a0050c97537a351518a8aa7249c87b1cb87349ab0"
        },
        "downloads": -1,
        "filename": "nets-0.0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8b76492280676870275022b8fa7bb93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 71232,
        "upload_time": "2021-02-15T19:01:49",
        "upload_time_iso_8601": "2021-02-15T19:01:49.807448Z",
        "url": "https://files.pythonhosted.org/packages/d5/a2/87e48a200651d729982e9e202aab3fbb0c34536b1cf4b478445834f89f56/nets-0.0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6412aba31cf298b6b548fcf18736b69cedde668b95a918b3a07c0cc4c8f9c363",
          "md5": "2a606feb272bd3e9b713f746cd9b98dd",
          "sha256": "d0e7a2133063e29cb61f3c531633464f692ec801d5bdd50e819a42dcec0f60d6"
        },
        "downloads": -1,
        "filename": "nets-0.0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2a606feb272bd3e9b713f746cd9b98dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5855677,
        "upload_time": "2021-02-15T19:01:55",
        "upload_time_iso_8601": "2021-02-15T19:01:55.214809Z",
        "url": "https://files.pythonhosted.org/packages/64/12/aba31cf298b6b548fcf18736b69cedde668b95a918b3a07c0cc4c8f9c363/nets-0.0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d5a287e48a200651d729982e9e202aab3fbb0c34536b1cf4b478445834f89f56",
        "md5": "a8b76492280676870275022b8fa7bb93",
        "sha256": "fc86cdfd8ada619f0b87e97a0050c97537a351518a8aa7249c87b1cb87349ab0"
      },
      "downloads": -1,
      "filename": "nets-0.0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a8b76492280676870275022b8fa7bb93",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 71232,
      "upload_time": "2021-02-15T19:01:49",
      "upload_time_iso_8601": "2021-02-15T19:01:49.807448Z",
      "url": "https://files.pythonhosted.org/packages/d5/a2/87e48a200651d729982e9e202aab3fbb0c34536b1cf4b478445834f89f56/nets-0.0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6412aba31cf298b6b548fcf18736b69cedde668b95a918b3a07c0cc4c8f9c363",
        "md5": "2a606feb272bd3e9b713f746cd9b98dd",
        "sha256": "d0e7a2133063e29cb61f3c531633464f692ec801d5bdd50e819a42dcec0f60d6"
      },
      "downloads": -1,
      "filename": "nets-0.0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2a606feb272bd3e9b713f746cd9b98dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5855677,
      "upload_time": "2021-02-15T19:01:55",
      "upload_time_iso_8601": "2021-02-15T19:01:55.214809Z",
      "url": "https://files.pythonhosted.org/packages/64/12/aba31cf298b6b548fcf18736b69cedde668b95a918b3a07c0cc4c8f9c363/nets-0.0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}