{
  "info": {
    "author": "Julian Blank",
    "author_email": "blankjul@egr.msu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "pyastar - A* Algorithm in Python\n====================================================================\n\nYou can find a documentation of `pyastar` at: https://www.egr.msu.edu/coinlab/pyastar/\n\n\n|travis| |python| |license|\n\n\n.. |travis| image:: https://travis-ci.com/julesy89/pyastar.svg?branch=master\n   :alt: build status\n   :target: https://travis-ci.com/msu-coinlab/pymoo\n\n.. |python| image:: https://img.shields.io/badge/python-3.6-blue.svg\n   :alt: python 3.6\n\n.. |license| image:: https://img.shields.io/badge/license-apache-orange.svg\n   :alt: license apache\n   :target: https://www.apache.org/licenses/LICENSE-2.0\n\n\nInstallation\n====================================================================\n\nThe official release is always available at PyPi:\n\n.. code:: bash\n\n    pip install -U pyastar\n\n\nUsage\n==================================\n\nGraph\n----------------------------------\n\n.. code:: python\n\n\n    from pyastar.interface import astar_graph\n    from pyastar.util.graph import WeightedGraph\n\n\n    def create_sample_graph():\n        G = WeightedGraph()\n\n        G.add_node(\"s\", \"a\", \"b\", \"c\", \"d\", \"e\", \"g\")\n        G.add_edge(\"s\", \"a\", 1.5)\n        G.add_edge(\"a\", \"b\", 2.0)\n        G.add_edge(\"b\", \"c\", 3.0)\n        G.add_edge(\"c\", \"g\", 4.0)\n        G.add_edge(\"s\", \"d\", 2.0)\n        G.add_edge(\"d\", \"e\", 3.0)\n        G.add_edge(\"e\", \"g\", 2.0)\n\n        G.preprocess()\n\n        return G\n\n\n    def heuristic_sample_graph(node):\n        D = {\n            \"s\": None,\n            \"a\": 4.0,\n            \"b\": 4.0,\n            \"c\": 4.0,\n            \"d\": 4.0,\n            \"e\": 4.0,\n            \"g\": 0.0\n        }\n\n        return D[node]\n\n\n    if __name__ == '__main__':\n        G = create_sample_graph()\n        ret = astar_graph(G, \"s\", \"g\", heuristic_sample_graph)\n        print(\"Shortest Path:\", ret)\n\n\nGrid\n----------------------------------\n\n.. code:: python\n\n\n    from pyastar.interface import astar_graph\n    from pyastar.util.grid import Grid\n    from pyastar.util.heuristics import manhatten_dist_2d\n\n    grid = Grid(5, 5)\n    grid.add_obstacle((3, 0), (3, 1))\n    G = grid.to_graph()\n\n    start = (4, 0)\n    goal = (0, 4)\n\n    ret = astar_graph(G, start, goal, lambda x: manhatten_dist_2d(x, goal))\n    print(\"Shortest Path:\", ret)\n\n\n\n\nContact\n====================================================================\n\nFeel free to contact me if you have any question:\n\n| Julian Blank (blankjul [at] egr.msu.edu)\n| Michigan State University\n| Computational Optimization and Innovation Laboratory (COIN)\n| East Lansing, MI 48824, USA\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.egr.msu.edu/coinlab/pyastar/",
    "keywords": "graph,heuristic search",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyastar",
    "package_url": "https://pypi.org/project/pyastar/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pyastar/",
    "project_urls": {
      "Homepage": "https://www.egr.msu.edu/coinlab/pyastar/"
    },
    "release_url": "https://pypi.org/project/pyastar/0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "AStar Algorithm",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6603581,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6838fbc94e0f88cbb821ac98f506ffa2051f504f350080e63ada3c10c709d572",
          "md5": "0a6ab8535383308261de688b5c5f9139",
          "sha256": "60ba67ce5b2a1514fbc6421d48c36b173ae739a57aeb6b5becd2779a41ee9485"
        },
        "downloads": -1,
        "filename": "pyastar-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a6ab8535383308261de688b5c5f9139",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15850,
        "upload_time": "2020-02-10T16:28:03",
        "upload_time_iso_8601": "2020-02-10T16:28:03.620469Z",
        "url": "https://files.pythonhosted.org/packages/68/38/fbc94e0f88cbb821ac98f506ffa2051f504f350080e63ada3c10c709d572/pyastar-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7010f5218087ffdb323e891c7978b578c72ba8a301311eeac35cb3ec6f8027a2",
          "md5": "b7837a14e577c914b80802c8458192bb",
          "sha256": "be9b1d32aa22a1bed78bb2e6fd1a3a864ba572791039778d64c133da2f8819b9"
        },
        "downloads": -1,
        "filename": "pyastar-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b7837a14e577c914b80802c8458192bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12787,
        "upload_time": "2020-02-10T16:28:06",
        "upload_time_iso_8601": "2020-02-10T16:28:06.101367Z",
        "url": "https://files.pythonhosted.org/packages/70/10/f5218087ffdb323e891c7978b578c72ba8a301311eeac35cb3ec6f8027a2/pyastar-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6838fbc94e0f88cbb821ac98f506ffa2051f504f350080e63ada3c10c709d572",
        "md5": "0a6ab8535383308261de688b5c5f9139",
        "sha256": "60ba67ce5b2a1514fbc6421d48c36b173ae739a57aeb6b5becd2779a41ee9485"
      },
      "downloads": -1,
      "filename": "pyastar-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0a6ab8535383308261de688b5c5f9139",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15850,
      "upload_time": "2020-02-10T16:28:03",
      "upload_time_iso_8601": "2020-02-10T16:28:03.620469Z",
      "url": "https://files.pythonhosted.org/packages/68/38/fbc94e0f88cbb821ac98f506ffa2051f504f350080e63ada3c10c709d572/pyastar-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7010f5218087ffdb323e891c7978b578c72ba8a301311eeac35cb3ec6f8027a2",
        "md5": "b7837a14e577c914b80802c8458192bb",
        "sha256": "be9b1d32aa22a1bed78bb2e6fd1a3a864ba572791039778d64c133da2f8819b9"
      },
      "downloads": -1,
      "filename": "pyastar-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b7837a14e577c914b80802c8458192bb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12787,
      "upload_time": "2020-02-10T16:28:06",
      "upload_time_iso_8601": "2020-02-10T16:28:06.101367Z",
      "url": "https://files.pythonhosted.org/packages/70/10/f5218087ffdb323e891c7978b578c72ba8a301311eeac35cb3ec6f8027a2/pyastar-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}