{
  "info": {
    "author": "nateify",
    "author_email": "nateify@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "mkv-chapter-helper.py -  Embed chapters into an MKV file with the ability to mix timecodes and chapter names from multiple sources \r\n\r\n# Installation\r\n    pip install mkv-chapter-helper\r\n\r\n# Description\r\nmkv-chapter-helper allows you to choose different sources for correct timecodes and correct names for chapters to embed in an MKV file.\r\n\r\nCommon use case:\r\n- You have ripped your own movie to MKV, so the timecodes are correct, but you did not want to manually write out all chapter names\r\n- There exists a pre-named chapters list on https://chapterdb.plex.tv/ but the timecodes do not line up\r\n- Simply use --timecodes-mkv to use the existing timescodes in your MKV file and then download the ChapterDB txt file and use --timecodes-txt-file\r\n\r\n**Note: The XML download from ChapterDB is not in the correct format for this script. Only download TXT from ChapterDB.**\r\n\r\nAlternative use-case: the chapters are not found on ChapterDB, but the correct chapters are found in a private torrent tracker via provided Mediainfo dump. There are options to get timecodes or names from Mediainfo.\r\n\r\n**Not Supported:**\r\n- Using a text file generated by Mediainfo. It only supports copy and paste input. Multi-line paste should work across terminals.\r\n- Any text file format other than OGM\r\n- Any XML file format other than the Matroska standard outlined here: https://www.matroska.org/technical/chapters.html\r\n- Getting timecodes/names from another MKV file than the one you are manipulating\r\n\r\nAs an alternative to the last bullet point, you can extract XML chapters from another MKV file via mkvextract or MKVToolnix-GUI and then use one of the XML flags\r\n\r\n# External Dependencies\r\n\r\n- mkvmerge\r\n- mkvpropedit\r\n\r\nBoth must be in PATH as you run the script\r\n\r\n# Options     \r\n\r\nYou can view the arguments by running `mkv-chapter-helper --help`\r\n\r\n```\r\nusage: mkv-chapter-helper [-h] (--timecodes-mkv | --timecodes-mediainfo | --timecodes-xml-file TIMECODES_XML_FILE | --timecodes-txt-file TIMECODES_TXT_FILE)\r\n                          (--names-mkv | --names-mediainfo | --names-xml-file NAMES_XML_FILE | --names-txt-file NAMES_TXT_FILE)\r\n                          input\r\n\r\nAdd/modify chapters in an MKV file\r\n\r\npositional arguments:\r\n  input                 MKV file to manipulate\r\n\r\noptions:\r\n  -h, --help            show this help message and exit\r\n  --timecodes-mkv, -tk  Use timecodes from input MKV file\r\n  --timecodes-mediainfo, -tm\r\n                        Use timecodes from Mediainfo\r\n  --timecodes-xml-file TIMECODES_XML_FILE, -tx TIMECODES_XML_FILE\r\n                        Use timecodes from input XML file\r\n  --timecodes-txt-file TIMECODES_TXT_FILE, -tt TIMECODES_TXT_FILE\r\n                        Use timecodes from input TXT file (OGM format only)\r\n  --names-mkv, -nk      Use names from input MKV file\r\n  --names-mediainfo, -nm\r\n                        Use names from Mediainfo\r\n  --names-xml-file NAMES_XML_FILE, -nx NAMES_XML_FILE\r\n                        Use names from input XML file\r\n  --names-txt-file NAMES_TXT_FILE, -nt NAMES_TXT_FILE\r\n                        Use names from input TXT file (OGM format only)\r\n```\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nateify/mkv-chapter-helper",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mkv-chapter-helper",
    "package_url": "https://pypi.org/project/mkv-chapter-helper/",
    "platform": "",
    "project_url": "https://pypi.org/project/mkv-chapter-helper/",
    "project_urls": {
      "Homepage": "https://github.com/nateify/mkv-chapter-helper"
    },
    "release_url": "https://pypi.org/project/mkv-chapter-helper/0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Embed chapters into an MKV file with the ability to mix timecodes and chapter names from multiple sources",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12545541,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "022d173f9e6dcc34bbac547dccf0193535de579bb3f3e5054e376a77d0c79f30",
          "md5": "3925145082182538526a8364962ee2ea",
          "sha256": "b08915c217571fcb4c6a0299b853ed07549e8017cdda9d273246ef2f2c73a5dc"
        },
        "downloads": -1,
        "filename": "mkv_chapter_helper-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3925145082182538526a8364962ee2ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5609,
        "upload_time": "2022-01-09T19:50:18",
        "upload_time_iso_8601": "2022-01-09T19:50:18.668887Z",
        "url": "https://files.pythonhosted.org/packages/02/2d/173f9e6dcc34bbac547dccf0193535de579bb3f3e5054e376a77d0c79f30/mkv_chapter_helper-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28ead435458e7b55d0e3b89bc7bc0e3f6df98c8e11921bf55814353cc78f736c",
          "md5": "3fd3e14ad23f585d84962652fdd3af10",
          "sha256": "5bfe372763e0aae7c814e64978d7737799ef91dfcd9f6f63c378eefa279c5c5b"
        },
        "downloads": -1,
        "filename": "mkv-chapter-helper-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3fd3e14ad23f585d84962652fdd3af10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5089,
        "upload_time": "2022-01-09T19:50:20",
        "upload_time_iso_8601": "2022-01-09T19:50:20.466142Z",
        "url": "https://files.pythonhosted.org/packages/28/ea/d435458e7b55d0e3b89bc7bc0e3f6df98c8e11921bf55814353cc78f736c/mkv-chapter-helper-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67e89de3f7297dbc30672f6a67b9090fbb52ab9c582cad1fa19c89d01f4b77e3",
          "md5": "505cb5806bf264011f2804cd0411e57e",
          "sha256": "f7a22ec8238b2256c3498175c22d9a7bb11a0e0bc554cae60af584ce16b79e77"
        },
        "downloads": -1,
        "filename": "mkv-chapter-helper-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "505cb5806bf264011f2804cd0411e57e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5186,
        "upload_time": "2022-01-12T00:22:52",
        "upload_time_iso_8601": "2022-01-12T00:22:52.207305Z",
        "url": "https://files.pythonhosted.org/packages/67/e8/9de3f7297dbc30672f6a67b9090fbb52ab9c582cad1fa19c89d01f4b77e3/mkv-chapter-helper-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67e89de3f7297dbc30672f6a67b9090fbb52ab9c582cad1fa19c89d01f4b77e3",
        "md5": "505cb5806bf264011f2804cd0411e57e",
        "sha256": "f7a22ec8238b2256c3498175c22d9a7bb11a0e0bc554cae60af584ce16b79e77"
      },
      "downloads": -1,
      "filename": "mkv-chapter-helper-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "505cb5806bf264011f2804cd0411e57e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5186,
      "upload_time": "2022-01-12T00:22:52",
      "upload_time_iso_8601": "2022-01-12T00:22:52.207305Z",
      "url": "https://files.pythonhosted.org/packages/67/e8/9de3f7297dbc30672f6a67b9090fbb52ab9c582cad1fa19c89d01f4b77e3/mkv-chapter-helper-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}