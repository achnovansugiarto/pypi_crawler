{
  "info": {
    "author": "Nicolas Roth",
    "author_email": "roth@tu-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\">\n  <img src=\"https://github.com/rederoth/ScanDy/blob/main/docs/scandy_repo_card.png\">\n</p>\n<p align=\"center\">\n  <a href=\"https://github.com/psf/black\">\n  \t<img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"></a>\n  <a href=\"https://doi.org/10.1101/2023.03.14.532608\">\n    <img alt=\"paper\" src=\"https://img.shields.io/badge/preprint-10.1101%2F2023.03.14.532608-blue\"></a>    \n</p>\n<!-- # ScanDy\nSimulating Realistic Human Scanpaths in Dynamic Real-World Scenes -->\n\n## Introduction\n\n`ScanDy` is a modular and mechanistic computational framework for simulating realistic **scan**paths in **dy**namic real-world scenes. It is specifically designed to quantitatively test hypotheses about eye-movement behavior in videos.\nSpecifically, it can be used to demonstrate the influence of object-representations on gaze behavior by comparing object-based and location-based models.\n\nFor a visual guide of how `ScanDy` works, have a look at the [interactive notebook](examples/interactive_guide.ipynb) and the <a href=\"#examples\">example usecases</a>.\n\n## Software architecture\n\nThe structure of `ScanDy` is inspired by the `neurolib` framework, which is also used for parameter optimization and exploration.\n<p align=\"center\">\n  <img src=\"https://github.com/rederoth/ScanDy/blob/main/docs/software_architecture.png\">\n</p>\nScanpath models inherit from the `Model` base class, whose functionality includes initializing and running model simulations and the evaluation and visualization of the resulting scanpaths. Models are implemented in a modular way, consiting of moules for (I) Scene features, (II) Visual sensitivity, (III) Scanpath history, (IV) Decision making, and (V) Gaze update.\n\n## Installation\n\nYou can install `ScanDy` as pypi package using `pip`:\n\n```\npip install scandy\n```\n\nWe however reccomend that you clone (or fork) this repository and install all dependencies with\n\n```\ngit clone https://github.com/rederoth/ScanDy.git\ncd neurolib/\npip install -r requirements.txt\npip install .\n```\n\nThis gives you more freedom to modify the existing models and run the examples.\n\n## Dataset\n\nThe scanpath models require precomputed maps of the video data. We use the VidCom dataset (Li et al., 2011), for which we provide all the required data on OSF (https://www.doi.org/10.17605/OSF.IO/83XUC).\n\nTo prepare the dataset, we used the following resources:\n\n* [VidCom](http://ilab.usc.edu/vagba/dataset/VidCom/) - Video and eye-tracking data\n* [deep_em_classifier](https://github.com/MikhailStartsev/deep_em_classifier/) - Eye movement classification\n* [detectron2](https://github.com/facebookresearch/detectron2/) - Frame-wise object segmentation\n* [deep_sort](https://github.com/nwojke/deep_sort/) - Object tracking\n* [dynamic-proto-object-saliency](https://github.com/csmslab/dynamic-proto-object-saliency/) - Low-level saliency maps\n* [TASED-Net](https://github.com/MichiganCOG/TASED-Net/) - High-level saliency maps\n* [PWC-Net](https://github.com/NVlabs/PWC-Net/) - Optical flow calculation\n\nIf you only want to play around with a single video, we uploaded a version of the dataset only containing the \"field03\" video to [Google drive](https://drive.google.com/drive/folders/1ICTD9ENnidJXxHSvz30Aag3WXw8eslSZ?usp=share_link).\n\n## Examples\n\nWe prepared a number of [IPython Notebooks](examples/) for you to explore the framework.\n\nTo get started with `ScanDy`, have a look at our [interactive guide](examples/interactive_guide.ipynb), where you can explore the effect of individual model parameters.\n\nAdditionally, we show instructive usecases, including:\n\n* [Example 1](examples/ex1_scanpath_sgl_video.ipynb): Scanpath simulation and visualization for a single video\n* [Example 2](examples/ex2_model_comparison.ipynb): Evolutionary optimization of model parameters\n* [Example 3](examples/ex3_model_extension.ipynb): Extending on existing models: Location-based model with object-based sensitivity\n\n## More information\n\n### How to cite\n\nIf `ScanDy` is useful for your research, please cite our preprint:\n> Roth, N., Rolfs, M., Hellwich, O., & Obermayer, K. (2023). Objects guide human gaze behavior in dynamic real-world scenes. *bioRxiv*, 2023-03.\n\n```bibtex\n@article{roth2023objects,\n title = {Objects Guide Human Gaze Behavior in Dynamic Real-World Scenes},\n author = {Roth, Nicolas and Rolfs, Martin and Hellwich, Olaf and Obermayer, Klaus},\n elocation-id = {2023.03.14.532608},\n year = {2023},\n doi = {10.1101/2023.03.14.532608},\n publisher = {Cold Spring Harbor Laboratory},}\n```\n\n### Contact\n\n If you have feedback, questions, and/or ideas, feel free to send a [mail](mailto:roth@tu-berlin.de) to Nico.\n\nNicolas Roth,\nPhD Student at Science of Intelligence;\nNeural Information Processing Group,\nFakultaet IV, Technische Universitaet Berlin,\nMAR 5-6, Marchstr. 23, 10587 Berlin\n\n### Acknowledgments\n\nThis work was funded by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) under Germany’s Excellence Strategy – EXC 2002/1 \"Science of Intelligence\" – project number 390523135.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rederoth/ScanDy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scandy",
    "package_url": "https://pypi.org/project/scandy/",
    "platform": null,
    "project_url": "https://pypi.org/project/scandy/",
    "project_urls": {
      "Homepage": "https://github.com/rederoth/ScanDy"
    },
    "release_url": "https://pypi.org/project/scandy/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Simulating Realistic Human Scanpaths in Dynamic Real-World Scenes",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17383930,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c26b70eb42e44c8655a71de52916fef20c0d90d277619bf751f41fb21dab47d",
          "md5": "e6e08d744f930a407cb82cc606286cb4",
          "sha256": "7eab40cfa28388aa86aa42f2395e15ea67157adb7e7962f0f9499667fdbeaf21"
        },
        "downloads": -1,
        "filename": "scandy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e6e08d744f930a407cb82cc606286cb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28189,
        "upload_time": "2023-03-20T18:40:19",
        "upload_time_iso_8601": "2023-03-20T18:40:19.328853Z",
        "url": "https://files.pythonhosted.org/packages/7c/26/b70eb42e44c8655a71de52916fef20c0d90d277619bf751f41fb21dab47d/scandy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "592d1e03fafb32cee8e01fca132961784643cc59d0e0c8f8b14f477d90aa4592",
          "md5": "455fbcc2c1eed1255a428837de2ba6ce",
          "sha256": "a2341714168fd1ff8a2e75ee138cc67ddf4cc09ca26c5cfc46533eca15d4862b"
        },
        "downloads": -1,
        "filename": "scandy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "455fbcc2c1eed1255a428837de2ba6ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28304,
        "upload_time": "2023-03-21T17:48:15",
        "upload_time_iso_8601": "2023-03-21T17:48:15.492481Z",
        "url": "https://files.pythonhosted.org/packages/59/2d/1e03fafb32cee8e01fca132961784643cc59d0e0c8f8b14f477d90aa4592/scandy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "592d1e03fafb32cee8e01fca132961784643cc59d0e0c8f8b14f477d90aa4592",
        "md5": "455fbcc2c1eed1255a428837de2ba6ce",
        "sha256": "a2341714168fd1ff8a2e75ee138cc67ddf4cc09ca26c5cfc46533eca15d4862b"
      },
      "downloads": -1,
      "filename": "scandy-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "455fbcc2c1eed1255a428837de2ba6ce",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 28304,
      "upload_time": "2023-03-21T17:48:15",
      "upload_time_iso_8601": "2023-03-21T17:48:15.492481Z",
      "url": "https://files.pythonhosted.org/packages/59/2d/1e03fafb32cee8e01fca132961784643cc59d0e0c8f8b14f477d90aa4592/scandy-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}