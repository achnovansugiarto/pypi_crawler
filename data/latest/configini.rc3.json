{
  "info": {
    "author": "SpiderFrog",
    "author_email": "germanspiderfrog@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# configini\nSmall package to easily parse an .ini file.\n\n## Basic usage\n### Read values\n#### config.ini:\n```ini\n[test]\nstr=test\nint=1\nfloat=1.0005\ndec=1.5\nbool=no\nlist=[\"test\"]\ndict={\"list\": [1, 2, 3]}\ndatetime=2021-04-02T05:44:20\ndate=2021-04-02\ntime=05:44\n```\n\n#### config.py:\n```python\nimport configini\n\nconfigini.read('filename.ini')\n\nclass Config:\n    str_value = configini.String('test', 'str')\n    int_value = configini.Integer('test', 'int')\n    float_value = configini.Float('test', 'float')\n    dec_value = configini.Decimal('test', 'dec')\n    bool_value = configini.Boolean('test', 'bool')\n    list_value = configini.List('test', 'list')\n    dict_value = configini.Dict('test', 'dict')\n    datetime_value = configini.DateTime('test', 'test_datetime')\n    date_value = configini.DateTime('test', 'test_date', format='%Y-%m-%d')\n    time_value = configini.DateTime('test', 'test_time', format='%H:%M:%S')\n```\n\nThen you can use your config variables like this:\n#### main.py:\n```python\n# Import the config file\nfrom config import Config\n\n# Do whatever you want with it.\nsome_variable = Config.str_value\n```\n\n**Note:** With the _Boolean_ method, 1, 'true', 'yes' will be cast to True,\n**Note:** Only use double quote for strings inside list, the json.loads() method is used for parsing to list.\n\n### Default values\nDefault values will be used when the value inside the configurations file is empty.\nYou can change the default value by passing the _default_ parameter.\n```python\nconfigini.String('chapter', 'key', default='Hello world')\n```\n\n### Custom values\nIf you have a custom value that you want automatically to be cast to the right data type,\nYou can use the parent 'Variable' method with parameter data_type to any method to cast your value.\n\nAn example with uuid:\n```python\nconfigini.Variable('chapter', 'key', data_type=UUID)\n```\n\n### Environment variables\nConfigini also supports .env variables.\\\nIn the following example the chapter is called 'foo', and the key is 'bar'.\nIt will first try and fetch the environment variable called 'FOO_BAR' before the .ini variables.\n\n#### .env:\n```dotenv\nFOO_BAR=alpha\n```\n\n#### config.ini:\n```ini\n[foo]\nbar=beta\n```\n\n#### output:\n```python\n>>> configini.Variable('foo', 'bar')\n'alpha'\n```\n\nIf you want to use a different environment variable name then the chapter_key format you can use the environment_var parameter:\n\n#### .env:\n```dotenv\nBONG=alpha\n```\n\n#### output:\n```python\n>>> configini.Variable('foo', 'bar', environment_var='BONG')\n'alpha'\n```\n\n### Ignore errors\nIf you don't want to deal with invalid formatting in your .ini file.\nSet the flag ```configini.ignore_errors``` to True:\n```python\nconfigini.ignore_errors = True\n```\n\n## Data types\n### String\nCasts any value to a string, If value is empty None is returned.\n```python\nconfigini.String('chapter', 'key', default=None, environment_var=None)\n```\n\n### Integer\nCasts any value to an int, If value is empty None is returned.\\\n___Note___: Will raise ```ValueError```, if value is not a valid number, when ```configini.ignore_errors``` is set to False.\n```python\nconfigini.Integer('chapter', 'key', default=None, environment_var=None)\n```\n\n### Float\nCasts any value to a float, If value is empty None is returned.\\\n___Note___: Will raise ```ValueError```, if value is not a valid number, when ```configini.ignore_errors``` is set to False.\n```python\nconfigini.Float('chapter', 'key', default=None, environment_var=None)\n```\n\n### Decimal\nCasts any value to a decimal.Decimal, If value is empty None is returned.\\\n___Note___: Will raise ```ValueError```, if value is not a valid number, when ```configini.ignore_errors``` is set to False.\n```python\nconfigini.Decimal('chapter', 'key', default=None, environment_var=None)\n```\n\n### Boolean\nCasts any value to a bool.\\\nReturns True if value is 1, 'true' or 'yes'.\\\nReturns False if value is 0, 'false' or 'no'.\\\nElse value will be None.\n```python\nconfigini.Boolean('chapter', 'key', default=None, environment_var=None)\n```\n\n### List\nCasts any value to a list.\\\n___Note___: Will raise ```json.decoder.JSONDecodeError```, if value is not a valid number, when ```configini.ignore_errors``` is set to False.\n___Note___: Method uses ```json.loads``` method to convert string to list, so only use double quotes.\n```python\nconfigini.List('chapter', 'key', default=[], environment_var=None)\n```\n\n### Dict\nCasts any value to a list.\\\n___Note___: Will raise ```json.decoder.JSONDecodeError```, if value is not a valid number, when ```configini.ignore_errors``` is set to False.\n___Note___: Method uses ```json.loads``` method to convert string to list, so only use double quotes.\n```python\nconfigini.List('chapter', 'key', default={}, environment_var=None)\n```\n\n### DateTime\nCasts any value to a datetime.datetime, If value is empty None is returned.\\\nUse the format parameter to change how the datetime is converted.\\\n___Note___: Will raise ```ValueError```, if value is not a valid number, when ```configini.ignore_errors``` is set to False.\n```python\nconfigini.Decimal('chapter', 'key', format='%Y-%m-%dT%H:%M:%S', default=None, environment_var=None)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Spider-Frog/configini",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "configini",
    "package_url": "https://pypi.org/project/configini/",
    "platform": "",
    "project_url": "https://pypi.org/project/configini/",
    "project_urls": {
      "Homepage": "https://github.com/Spider-Frog/configini"
    },
    "release_url": "https://pypi.org/project/configini/1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Small package to easily parse an .ini file.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10989314,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cde65ad9674f9572bb310f6001fa78d2316aa077973135838ce997fd799c0b6f",
          "md5": "2b5d91cca4c1d82dd637e5f458bc7e86",
          "sha256": "e76d2c14b47a2b8450a1fa303cd67f093ccfa01a2821a0316f6563588120c7fa"
        },
        "downloads": -1,
        "filename": "configini-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b5d91cca4c1d82dd637e5f458bc7e86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3453,
        "upload_time": "2021-01-03T21:10:31",
        "upload_time_iso_8601": "2021-01-03T21:10:31.182430Z",
        "url": "https://files.pythonhosted.org/packages/cd/e6/5ad9674f9572bb310f6001fa78d2316aa077973135838ce997fd799c0b6f/configini-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d08107a8d0a0d4083afd5d7fcb39043404f90841a5e41a2fdd4884204b8a837",
          "md5": "c1cea4b1f3d42ab820a6c2e7f08040d3",
          "sha256": "9c32922209360766e5c28aa1b8226e5a4f8665185e731e112aaae670bbe9ebaa"
        },
        "downloads": -1,
        "filename": "configini-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c1cea4b1f3d42ab820a6c2e7f08040d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3797,
        "upload_time": "2021-01-03T21:10:32",
        "upload_time_iso_8601": "2021-01-03T21:10:32.375984Z",
        "url": "https://files.pythonhosted.org/packages/8d/08/107a8d0a0d4083afd5d7fcb39043404f90841a5e41a2fdd4884204b8a837/configini-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1787e1813438fb743388858b430e3d6b66013829ac38735aeb87c9f8f6ac87cb",
          "md5": "115ee2141a4148e1e3fbe768b1dc78fe",
          "sha256": "019a557b9f83f19bd072a5bd7dcb4459c0d1cb9cf6fd9da0ca82f9b4315d6610"
        },
        "downloads": -1,
        "filename": "configini-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "115ee2141a4148e1e3fbe768b1dc78fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4844,
        "upload_time": "2021-07-23T19:32:10",
        "upload_time_iso_8601": "2021-07-23T19:32:10.151005Z",
        "url": "https://files.pythonhosted.org/packages/17/87/e1813438fb743388858b430e3d6b66013829ac38735aeb87c9f8f6ac87cb/configini-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f4c4e28dfd113fc39988eabda70d6688701c34d013ea183deb3b033f6a9a09e",
          "md5": "f5c0c460be39cd3241f87c5144b8de42",
          "sha256": "d75f45197d652b53f8b5fb064c36a9e3c85f6ee139802d7e9db63c5ca472b99e"
        },
        "downloads": -1,
        "filename": "configini-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f5c0c460be39cd3241f87c5144b8de42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5367,
        "upload_time": "2021-07-23T19:32:11",
        "upload_time_iso_8601": "2021-07-23T19:32:11.466802Z",
        "url": "https://files.pythonhosted.org/packages/6f/4c/4e28dfd113fc39988eabda70d6688701c34d013ea183deb3b033f6a9a09e/configini-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f1f936a2476fefbb3b9f5190e62579dbdcd6155e30783e5b4897437b24d1f3c",
          "md5": "bee4ec425a1c935e640c4285373f33e2",
          "sha256": "aa0ef979b371334039b668edbb4a83e00e13d9721d15555baee77981a5cf8bfb"
        },
        "downloads": -1,
        "filename": "configini-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bee4ec425a1c935e640c4285373f33e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5466,
        "upload_time": "2021-07-23T19:47:17",
        "upload_time_iso_8601": "2021-07-23T19:47:17.337308Z",
        "url": "https://files.pythonhosted.org/packages/0f/1f/936a2476fefbb3b9f5190e62579dbdcd6155e30783e5b4897437b24d1f3c/configini-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "047e693d99f5f54750b54409b2d4fbb8a5921aed79fd69836c95217f0e46bede",
          "md5": "86d886b80d495fa711d6d87eb3d806bd",
          "sha256": "d8da5091d71480ce5eea3551c11d17f568d3ad0ce788ecd84aad5511bcfdb493"
        },
        "downloads": -1,
        "filename": "configini-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "86d886b80d495fa711d6d87eb3d806bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5723,
        "upload_time": "2021-07-23T19:47:18",
        "upload_time_iso_8601": "2021-07-23T19:47:18.526364Z",
        "url": "https://files.pythonhosted.org/packages/04/7e/693d99f5f54750b54409b2d4fbb8a5921aed79fd69836c95217f0e46bede/configini-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f1f936a2476fefbb3b9f5190e62579dbdcd6155e30783e5b4897437b24d1f3c",
        "md5": "bee4ec425a1c935e640c4285373f33e2",
        "sha256": "aa0ef979b371334039b668edbb4a83e00e13d9721d15555baee77981a5cf8bfb"
      },
      "downloads": -1,
      "filename": "configini-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bee4ec425a1c935e640c4285373f33e2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5466,
      "upload_time": "2021-07-23T19:47:17",
      "upload_time_iso_8601": "2021-07-23T19:47:17.337308Z",
      "url": "https://files.pythonhosted.org/packages/0f/1f/936a2476fefbb3b9f5190e62579dbdcd6155e30783e5b4897437b24d1f3c/configini-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "047e693d99f5f54750b54409b2d4fbb8a5921aed79fd69836c95217f0e46bede",
        "md5": "86d886b80d495fa711d6d87eb3d806bd",
        "sha256": "d8da5091d71480ce5eea3551c11d17f568d3ad0ce788ecd84aad5511bcfdb493"
      },
      "downloads": -1,
      "filename": "configini-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "86d886b80d495fa711d6d87eb3d806bd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5723,
      "upload_time": "2021-07-23T19:47:18",
      "upload_time_iso_8601": "2021-07-23T19:47:18.526364Z",
      "url": "https://files.pythonhosted.org/packages/04/7e/693d99f5f54750b54409b2d4fbb8a5921aed79fd69836c95217f0e46bede/configini-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}