{
  "info": {
    "author": "Lawrence McDaniel",
    "author_email": "Lawrence McDaniel <lpm0073@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Education",
      "Topic :: Education :: Computer Aided Instruction (CAI)"
    ],
    "description": "# Open edX Plugin Examples\n\n[![Source code](https://img.shields.io/static/v1?logo=github&label=Git&style=flat-square&color=brightgreen&message=Source%20code)](https://github.com/cookiecutter-openedx/openedx-plugin-example)\n[![Forums](https://img.shields.io/static/v1?logo=discourse&label=Forums&style=flat-square&color=000000&message=discuss.openedx.org)](https://discuss.openedx.org/tag/cookiecutter)\n[![Documentation](https://img.shields.io/static/v1?&label=Documentation&style=flat-square&color=000000&message=Documentation)](https://github.com/cookiecutter-openedx/openedx-plugin-example)\n[![PyPI releases](https://img.shields.io/pypi/v/openedx-plugin-example?logo=python&logoColor=white)](https://pypi.org/project/openedx-plugin-example)\n[![AGPL License](https://img.shields.io/github/license/overhangio/tutor.svg?style=flat-square)](https://www.gnu.org/licenses/agpl-3.0.en.html)\n[![hack.d Lawrence McDaniel](https://img.shields.io/badge/hack.d-Lawrence%20McDaniel-orange.svg)](https://lawrencemcdaniel.com)\n\nA curated collection of code samples for extending the functionality of an Open edX installation using its built-in plugin architecture.\n\nTechnical features that are showcased in this repo include:\n\n* Semantic version control\n* Pre-commit with linting by flake8 and black, both of which are configured to match the opinionated styling that you'll find in Open edX repositories\n* pip configuration, requirements, constraints, setup.py, pyproject.toml\n* How to bundle multiple plugins in a single pip package\n* How to redirect Open edX urls in lms and cms to endpoints created in this plugin\n* How to automatically initialize Django model data during app startup\n* Adding unit tests to plugin code\n* Django app setup\n* Open edX Django configuration settings\n* Open edX Django urls\n* Open edX Django logging\n* Open edX Django signals\n* Open edX Django RestFramework custom api\n* Django models\n* Django templating\n* Django static assets\n* Django Admin\n* Django middleware\n* Django manage.py custom commands\n* Python environment variables\n* Waffle flags\n* Setting up your repo to publish to PyPi\n\n## Open edX Plugins in this Repository\n\n### openedx_plugin\n\nDemonstrates how to create an all-in-one Open edX plugin, with a heterogeneous collection of custom feature additions, including:\n\n* A custom third party authentication [Oauth2 client backend](./openedx_plugin/wordpress_oauth2_backend.py).\n* Extending [new user registration](./openedx_plugin/student/registration.py) functionality. Demonstrates how to leverage Django Signals to extend basic native Open edX operations.\n* Extending the [login functionality](./openedx_plugin/student/session.py)\n* Implementing a [rest api](./openedx_plugin/api/README.md) from scratch that is accessible from an LMS url.\n* Advanced Internationalization: [customizing static page links](./openedx_plugin/locale/README.md) based on the language locale setting\n\n### openedx_plugin_api\n\nImplements a full-featured [REST API](./openedx_plugin_api/README.md) which is built from snippets of Open edX's built-in rest api libraries. Demonstrates the following:\n\n* Best practices with Django RestFramework for Open edX\n* Adding custom URL endpoints to LMS\n* Adding Django Admin views\n* Creating custom Django models for your plugin\n* How to create custom entries in the openedx app log\n* How to leverage Django Signals to create customized event-driven features\n* How to implement Waffle Switches to control optional features at run-time\n\n### openedx_plugin_cms\n\nImplements a [custom course audit report](openedx_plugin_cms/README.md) in Course Management Studio that depends on a backend Python process to iterate the course content. This process is highly instructive about the Open edX course object hierarchy. This plugin demonstrates the following:\n\n* Adding custom URL endpoints to Course Management Studio\n* Adding Django Admin views\n* Adding custom manage.py commands to CMS\n* Creating custom Django models for your plugin\n* How to create custom entries in the openedx app log\n* How to leverage Django Signals to create customized event-driven features\n* How to implement Waffle Switches to control optional features at run-time\n* Advanced usage of Mako templating within an Open edX plugin\n* How to programatically iterate and inspect course content\n* How to leverage Open edX object caching\n\n### openedx_plugin_mobile_api\n\nImplements a modified version of the Open edX LMS Mobile REST API. This plugin illustrates best practices for modifying edx-platform source code without actually forking this repository. Demonstrates the following:\n\n* How to implement Django middleware to modify the destination of existing LMS url endpoints\n* Best practices with Django RestFramework for Open edX\n\n## Getting Started\n\n### Install using Tutor\n\nSee [Installing extra xblocks and requirements](https://docs.tutor.overhang.io/configuration.html)\n\n```bash\ntutor config save       # to ensure that tutor's root folder system has been created\necho \"git+https://github.com/lpm0073/openedx-plugin-example.git\" >> \"$(tutor config printroot)/env/build/openedx/requirements/private.txt\"\ncat \"$(tutor config printroot)/env/build/openedx/requirements/private.txt\"\ntutor images build openedx\ntutor local quickstart\n\n# you'll also need to run this on your very first install\n# -----------------------------------------------------------------------------\n\n# 1. run migrations\ntutor local run lms ./manage.py lms makemigrations\ntutor local run lms ./manage.py lms migrate\ntutor local run cms ./manage.py cms makemigrations\ntutor local run cms ./manage.py cms migrate\n\n# 2. add configuration data to custom models\ntutor local run lms ./manage.py lms openedx_plugin_init\ntutor local run lms ./manage.py lms openedx_plugin_api_init\ntutor local run lms ./manage.py lms openedx_plugin_mobile_api_init\ntutor local run cms ./manage.py cms openedx_plugin_cms_init\n```\n\n### Notes About Django-Waffle\n\n* Each of these four Open edX plugins use [django-waffle](https://waffle.readthedocs.io/en/stable/) to toggle features on and off. While edx-platform also uses waffle switches, you should note that they separately manage a wrapper project named [edx-toggles](https://github.com/django-waffle/), and therefore the source code in this repo interacts with both of these.\n\n* Waffle switches in each of these four plugins are automatically initialized. You'll therefore find the switches in the LMS Django Admin console (admin/waffle/switch/) of your Open edX installation. Additionally, you'll find the raw MySL database records in the waffle_switch table ![MySQL records](https://github.com/lpm0073/openedx-plugin-example/blob/main/doc/openedx_plugin_waffle_mysql.png?raw=true)\n\n* Look for app startup entries in the LMS app log for diagnostics information about the state of each waffle switch ![app logs](https://github.com/lpm0073/openedx-plugin-example/blob/main/doc/openedx_plugin_waffle_app_log.png?raw=true)\n\n### Local development\n\n* Use the same virtual environment that you use for edx-platform\n* Set your Python interpreter to 3.8x\n* install black: <https://pypi.org/project/black/>\n* install flake8: <https://flake8.pycqa.org/en/latest/>\n* pip install flake8-coding\n\n```bash\n# Run these from within your edx-platform virtual environment\npython3 -m venv venv\nsource venv/bin/activate\n\ncd /path/to/edx-platform\npip install -r requirements/edx/base.txt\npip install -r requirements/edx/coverage.txt\npip install -r requirements/edx/development.txt\npip install -r requirements/edx/pip-tools.txt\npip install -r requirements/edx/testing.txt\npip install -r requirements/edx/doc.txt\npip install -r requirements/edx/paver.txt\n\npip install pre-commit black flake8\npre-commit install\n```\n\n### Local development good practices\n\n* run `black` on modified code before committing.\n* run `flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics`\n* run `flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics`\n* run `pre-commit run --all-files` before pushing. see: <https://pre-commit.com/>\n\n#### edx-platform dependencies\n\nTo avoid freaky version conflicts in prod it's a good idea to install all of the edx-platform requirements to your local dev virtual environment.\n\n* requirements/edx/base.txt\n* requirements/edx/develop.txt,\n* requirements/edx/testing.txt\n\nAt a minimum this will give you the full benefit of your IDE's linter.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/cookiecutter-openedx/cookiecutter-openedx-devops.git",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cookiecutter-openedx/example-openedx-plugin",
    "keywords": "Python,Django,Open edX,Plugin,REST API",
    "license": "AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openedx-plugin-example",
    "package_url": "https://pypi.org/project/openedx-plugin-example/",
    "platform": null,
    "project_url": "https://pypi.org/project/openedx-plugin-example/",
    "project_urls": {
      "Bug Tracker": "https://github.com/cookiecutter-openedx/openedx-plugin-example/issues",
      "Changelog": "https://github.com/cookiecutter-openedx/openedx-plugin-example/blob/main/CHANGELOG.md",
      "Documentation": "https://github.com/cookiecutter-openedx/openedx-plugin-example",
      "Download": "https://github.com/cookiecutter-openedx/cookiecutter-openedx-devops.git",
      "Homepage": "https://github.com/cookiecutter-openedx/openedx-plugin-example",
      "Repository": "https://github.com/cookiecutter-openedx/openedx-plugin-example"
    },
    "release_url": "https://pypi.org/project/openedx-plugin-example/0.2.0/",
    "requires_dist": [
      "Django (<=3.3,>=3.2)",
      "validators",
      "django-environ",
      "Django (>=3.2) ; extra == 'django'",
      "pre-commit ; extra == 'local'",
      "black ; extra == 'local'",
      "flake8 ; extra == 'local'",
      "ipython ; extra == 'local'"
    ],
    "requires_python": ">=3.8",
    "summary": "A Django plugin to enhance feature set of base Open edX platform",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17527195,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb5587c4fb9b8f83258f611e289312828b8decf78b760ac4c19bd5cfa65b869a",
          "md5": "049fc6259fa77975dc343564bd2fa919",
          "sha256": "37660e8a925c4895e9195d95974ad3e44269b49a41f6d4141ecdc5ad72171557"
        },
        "downloads": -1,
        "filename": "openedx_plugin_example-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "049fc6259fa77975dc343564bd2fa919",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 102780,
        "upload_time": "2023-03-31T13:56:09",
        "upload_time_iso_8601": "2023-03-31T13:56:09.029986Z",
        "url": "https://files.pythonhosted.org/packages/bb/55/87c4fb9b8f83258f611e289312828b8decf78b760ac4c19bd5cfa65b869a/openedx_plugin_example-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4ca479a1e097e70412f747e6dcedc59fd4851ab2c1e9157955c2595471aad33",
          "md5": "392fedbf59c9289fd0dc3183411c9fe3",
          "sha256": "deb92d631ba7c86f2d3524092411ea80d8ecc1843d565f4ced5719f4ca23fdc7"
        },
        "downloads": -1,
        "filename": "openedx-plugin-example-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "392fedbf59c9289fd0dc3183411c9fe3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 77312,
        "upload_time": "2023-03-31T13:56:11",
        "upload_time_iso_8601": "2023-03-31T13:56:11.036662Z",
        "url": "https://files.pythonhosted.org/packages/c4/ca/479a1e097e70412f747e6dcedc59fd4851ab2c1e9157955c2595471aad33/openedx-plugin-example-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb5587c4fb9b8f83258f611e289312828b8decf78b760ac4c19bd5cfa65b869a",
        "md5": "049fc6259fa77975dc343564bd2fa919",
        "sha256": "37660e8a925c4895e9195d95974ad3e44269b49a41f6d4141ecdc5ad72171557"
      },
      "downloads": -1,
      "filename": "openedx_plugin_example-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "049fc6259fa77975dc343564bd2fa919",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 102780,
      "upload_time": "2023-03-31T13:56:09",
      "upload_time_iso_8601": "2023-03-31T13:56:09.029986Z",
      "url": "https://files.pythonhosted.org/packages/bb/55/87c4fb9b8f83258f611e289312828b8decf78b760ac4c19bd5cfa65b869a/openedx_plugin_example-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4ca479a1e097e70412f747e6dcedc59fd4851ab2c1e9157955c2595471aad33",
        "md5": "392fedbf59c9289fd0dc3183411c9fe3",
        "sha256": "deb92d631ba7c86f2d3524092411ea80d8ecc1843d565f4ced5719f4ca23fdc7"
      },
      "downloads": -1,
      "filename": "openedx-plugin-example-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "392fedbf59c9289fd0dc3183411c9fe3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 77312,
      "upload_time": "2023-03-31T13:56:11",
      "upload_time_iso_8601": "2023-03-31T13:56:11.036662Z",
      "url": "https://files.pythonhosted.org/packages/c4/ca/479a1e097e70412f747e6dcedc59fd4851ab2c1e9157955c2595471aad33/openedx-plugin-example-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}