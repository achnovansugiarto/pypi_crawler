{
  "info": {
    "author": "Romain Beaumont",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# image_embeddings\n[![pypi](https://img.shields.io/pypi/v/image_embeddings.svg)](https://pypi.python.org/pypi/image_embeddings)\n[![ci](https://github.com/rom1504/image_embeddings/workflows/Continuous%20integration/badge.svg)](https://github.com/rom1504/image_embeddings/actions?query=workflow%3A%22Continuous+integration%22)\n\n\nUsing efficientnet to provide embeddings for retrieval.\n\nWhy this repo ? Embeddings are a widely used technique that is well known in scientific circles. But it seems to be underused and not very well known for most engineers. I want to show how easy it is to represent things as embeddings, and how many application this unlocks. Checkout the [demo](https://rom1504.github.io/image_embeddings/) first!\n\n![knn example](knn_example.png)\n\n## Workflow\n1. download some pictures\n2. run inference on them to get embeddings\n3. simple knn example, to understand what's the point : click on some pictures and see KNN\n\n## Simple Install\n\nRun `pip install image_embeddings`\n\n## Example workflow\n\n1. run `image_embeddings save_examples_to_folder --images_count=1000 --output_folder=tf_flower_images`, this will retrieve 1000 image files from https://www.tensorflow.org/datasets/catalog/tf_flowers (but you can also pick any other dataset)\n2. produce tf records with `image_embeddings write_tfrecord --image_folder=tf_flower_images --output_folder=tf_flower_tf_records --shards=10`\n3. run the inference with `image_embeddings run_inference --tfrecords_folder=tf_flower_tf_records --output_folder=tf_flower_embeddings`\n4. run a random knn search on them `image_embeddings random_search --path=tf_flower_embeddings`\n\nOptionally if you want to use the embeddings in numpy (in other languages), run `image_embeddings embeddings_to_numpy --input_path=tf_flower_embeddings --output_path=tf_flower_numpy`. In particular this can be used in the [web demo](https://github.com/rom1504/image_embeddings/tree/web)\n\n```\n$ image_embeddings random_search --path=tf_flower_embeddings\nimage_roses_261\n160.83 image_roses_261\n114.36 image_roses_118\n102.77 image_roses_537\n92.95 image_roses_659\n88.49 image_roses_197\n```\n\nExplore the [Simple notebook](notebooks/using_the_lib.ipynb) for more details.\n\nYou can try it locally or [try it in colab](https://colab.research.google.com/github/rom1504/image_embeddings/blob/master/notebooks/using_the_lib.ipynb)\n\nThe [From scratch](notebooks/from_scratch.ipynb) notebook provides an explanation on how to build this from scratch.\n\n## API\n\n### image_embeddings.downloader\n\nDownloader from tensorflow datasets. Any other set of images could be used instead\n\n#### image_embeddings.downloader.save_examples_to_folder(output_folder, images_count=1000, dataset=\"tf_flowers\")\n\nSave https://www.tensorflow.org/datasets/catalog/tf_flowers to folder\nAlso works with other tf datasets\n\n### image_embeddings.inference\n\nCreate tf recors from images files, and apply inference with an efficientnet model. Other models could be used.\n\n#### image_embeddings.inference.write_tfrecord(image_folder, output_folder, num_shards=100)\n\nWrite tf records from an image folders\n\n#### image_embeddings.inference.run_inference(tfrecords_folder, output_folder, batch_size=1000)\n\nRun inference on provided tf records and save to folder the embeddings\n\n### image_embeddings.knn\n\nConvenience methods to read, build indices and apply search on them. These methods are provided as example.\nUse [faiss](https://github.com/facebookresearch/faiss) directly for bigger datasets.\n\n#### image_embeddings.knn.read_embeddings(path)\n\nRun embeddings from path and return a tuple with \n* embeddings as a numpy matrix\n* an id to name dictionary\n* a name to id dictionary\n\n#### image_embeddings.knn.build_index(emb)\n\nBuild a simple faiss inner product index using the provided matrix of embeddings\n\n#### image_embeddings.knn.search(index, id_to_name, emb, k=5)\n\nSearch the query embeddings and return an array of (distance, name) images\n\n#### image_embeddings.knn.display_picture(image_path, image_name)\n\nDisplay one picture from the given path and image name in jupyter\n\n#### image_embeddings.knn.display_results(image_path, results)\n\nDisplay the results from search method\n\n#### image_embeddings.knn.random_search(path)\n\nLoad the embeddings, apply a random search on them and display the result\n\n#### image_embeddings.knn.embeddings_to_numpy(input_path, output_folder)\n\nLoad the embeddings from the input folder as parquet and save them as\n* json for the id -> name mapping\n* numpy for the embeddings\n\nParticularly useful to read the embeddings from other languages\n\n## Advanced Installation\n\n### Prerequisites\n\nMake sure you use `python>=3.6` and an up-to-date version of `pip` and\n`setuptools`\n\n    python --version\n    pip install -U pip setuptools\n\nIt is recommended to install `image_embeddings` in a new virtual environment. For\nexample\n\n    python3 -m venv image_embeddings_env\n    source image_embeddings_env/bin/activate\n    pip install -U pip setuptools\n    pip install image_embeddings\n\n### Using Pip\n\n    pip install image_embeddings\n\n### From Source\n\nFirst, clone the `image_embeddings` repo on your local machine with\n\n    git clone https://github.com/rom1504/image_embeddings.git\n    cd image_embeddings\n    make install\n\nTo install development tools and test requirements, run\n\n    make install-dev\n\n## Test\n\nTo run unit tests in your current environment, run\n\n    make test\n\nTo run lint + unit tests in a fresh virtual environment,\nrun\n\n    make venv-lint-test\n\n## Lint\n\nTo run `black --check`:\n\n    make lint\n\nTo auto-format the code using `black`\n\n    make black\n\n## Tasks\n\n* [x] simple downloader in python\n* [x] simple inference in python using https://github.com/qubvel/efficientnet\n* [x] build python basic knn example using https://github.com/facebookresearch/faiss\n* [x] build basic ui using lit element and some brute force knn to show what it does, put in github pages\n* [ ] use to illustrate embeddings blogpost",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "image-embeddings",
    "package_url": "https://pypi.org/project/image-embeddings/",
    "platform": "",
    "project_url": "https://pypi.org/project/image-embeddings/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/image-embeddings/1.4.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "# image_embeddings",
    "version": "1.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7735960,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae6cb7d47d3f7f01a58bcb3ba9223f6a4c05d9db64f46ed47e6fc73d832e003b",
          "md5": "0a2d65d1b3add9aa045ad3b37d3aacb5",
          "sha256": "a634bfa766a3f02148ce2b0366c9160e0dc9b0232ae337d093358ccdfc8529a7"
        },
        "downloads": -1,
        "filename": "image_embeddings-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0a2d65d1b3add9aa045ad3b37d3aacb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4277,
        "upload_time": "2020-06-30T23:27:26",
        "upload_time_iso_8601": "2020-06-30T23:27:26.553301Z",
        "url": "https://files.pythonhosted.org/packages/ae/6c/b7d47d3f7f01a58bcb3ba9223f6a4c05d9db64f46ed47e6fc73d832e003b/image_embeddings-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7645190ae010b2b7be733100b0bbd7d143c1aec4e0b20cb1b63d9adcf80ddad6",
          "md5": "ab3947188ed026097d5ce5072590b5f7",
          "sha256": "b03c48dd3195c4029c8c5c149be3f2d4f777b93bf07d2ddfc19c649aac1b806d"
        },
        "downloads": -1,
        "filename": "image_embeddings-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ab3947188ed026097d5ce5072590b5f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4612,
        "upload_time": "2020-06-30T23:47:06",
        "upload_time_iso_8601": "2020-06-30T23:47:06.542960Z",
        "url": "https://files.pythonhosted.org/packages/76/45/190ae010b2b7be733100b0bbd7d143c1aec4e0b20cb1b63d9adcf80ddad6/image_embeddings-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbfb14c4c9a1a2c21e6f89a2b0907cc73851c473157094c414527e446bf7ba43",
          "md5": "4920af181a17947136decb8eb1246ebb",
          "sha256": "db398ccb2d6b0ca7be3bb8222336d245b6691d0a37ed16e05a1236b5e6dda9ad"
        },
        "downloads": -1,
        "filename": "image_embeddings-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4920af181a17947136decb8eb1246ebb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4638,
        "upload_time": "2020-06-30T23:55:03",
        "upload_time_iso_8601": "2020-06-30T23:55:03.970330Z",
        "url": "https://files.pythonhosted.org/packages/cb/fb/14c4c9a1a2c21e6f89a2b0907cc73851c473157094c414527e446bf7ba43/image_embeddings-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abc081d50e4f4e5f0dc866179499433e52115e101626a7685159155ba8bc2ce9",
          "md5": "acf3ef3b463a86116d2f43f9247c0ddb",
          "sha256": "ee9dfc71b8882e63a6ffe1d950c09fe60d46f93181bba263300d5260e6eecb7c"
        },
        "downloads": -1,
        "filename": "image_embeddings-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "acf3ef3b463a86116d2f43f9247c0ddb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4642,
        "upload_time": "2020-07-01T00:02:47",
        "upload_time_iso_8601": "2020-07-01T00:02:47.784762Z",
        "url": "https://files.pythonhosted.org/packages/ab/c0/81d50e4f4e5f0dc866179499433e52115e101626a7685159155ba8bc2ce9/image_embeddings-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "113a6518f5f8f2ee2c9f20d010b541ec87d4d832aa1c401b2a9b24b9278c6fb2",
          "md5": "4ce7517a5d135d6bab393db35cc88d4f",
          "sha256": "c5b239c666a20030d8933dc04b66e4faea1427f7dd6ba9f7b4e4220bb3e1d4fd"
        },
        "downloads": -1,
        "filename": "image_embeddings-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4ce7517a5d135d6bab393db35cc88d4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4758,
        "upload_time": "2020-07-01T00:07:39",
        "upload_time_iso_8601": "2020-07-01T00:07:39.561863Z",
        "url": "https://files.pythonhosted.org/packages/11/3a/6518f5f8f2ee2c9f20d010b541ec87d4d832aa1c401b2a9b24b9278c6fb2/image_embeddings-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e8f8d9f389f624f052b39e4fba5a233e70f9aaf2f4a267433c85746dc98b949",
          "md5": "b0b47ce85cbe3af78e254f53c1a77fd0",
          "sha256": "288e55f976f14aafda30f6b2dc4c5802194192379a7a607221b21f9ab73d85b4"
        },
        "downloads": -1,
        "filename": "image_embeddings-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0b47ce85cbe3af78e254f53c1a77fd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9429,
        "upload_time": "2020-07-18T19:51:11",
        "upload_time_iso_8601": "2020-07-18T19:51:11.548821Z",
        "url": "https://files.pythonhosted.org/packages/7e/8f/8d9f389f624f052b39e4fba5a233e70f9aaf2f4a267433c85746dc98b949/image_embeddings-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a130b8241b699a0b605f3a834842f55eeb2f542a8b9d62c3fa3448a8bf20a4ee",
          "md5": "e683544a22393efdc421abd3e4964e78",
          "sha256": "f0a582641a46e6f72561d0718684475a8619650aa2ba71c99dddc517176ffe0e"
        },
        "downloads": -1,
        "filename": "image_embeddings-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e683544a22393efdc421abd3e4964e78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9463,
        "upload_time": "2020-07-18T20:03:05",
        "upload_time_iso_8601": "2020-07-18T20:03:05.085994Z",
        "url": "https://files.pythonhosted.org/packages/a1/30/b8241b699a0b605f3a834842f55eeb2f542a8b9d62c3fa3448a8bf20a4ee/image_embeddings-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb62bea6f3077e2fb2b0efb783d31def3d910f720462507cb2428a699682bcef",
          "md5": "caad8e527040c8c1bd5efe9745d94309",
          "sha256": "f0bd9489e4ccbbe8374850a28db970f156eeeae29f000b80c732f976c3a3fb8d"
        },
        "downloads": -1,
        "filename": "image_embeddings-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "caad8e527040c8c1bd5efe9745d94309",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9604,
        "upload_time": "2020-07-18T20:52:56",
        "upload_time_iso_8601": "2020-07-18T20:52:56.596897Z",
        "url": "https://files.pythonhosted.org/packages/cb/62/bea6f3077e2fb2b0efb783d31def3d910f720462507cb2428a699682bcef/image_embeddings-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "037a13c065fcd284f1a385e68d6ac8a1a7c9d66cc6a0823e66ea6045153ad7bf",
          "md5": "1d021ddaa12550acded5f66ce228fbab",
          "sha256": "4d5297e1af5ba0276b2ee7103f16658691f6f02584141b8ea3b549d871c37382"
        },
        "downloads": -1,
        "filename": "image_embeddings-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1d021ddaa12550acded5f66ce228fbab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9616,
        "upload_time": "2020-07-18T21:04:48",
        "upload_time_iso_8601": "2020-07-18T21:04:48.518040Z",
        "url": "https://files.pythonhosted.org/packages/03/7a/13c065fcd284f1a385e68d6ac8a1a7c9d66cc6a0823e66ea6045153ad7bf/image_embeddings-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d85735fd98f185349d3b8eeb089758c6ae3894c5cbbeb432a15e9097657d6d2a",
          "md5": "779a1282ad560a6d0be59c578fabf611",
          "sha256": "6821b5fc0c7506661df1b4a8c16313eb396143d510d0ade04925d1276b0a6ac1"
        },
        "downloads": -1,
        "filename": "image_embeddings-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "779a1282ad560a6d0be59c578fabf611",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10088,
        "upload_time": "2020-07-20T00:06:13",
        "upload_time_iso_8601": "2020-07-20T00:06:13.828243Z",
        "url": "https://files.pythonhosted.org/packages/d8/57/35fd98f185349d3b8eeb089758c6ae3894c5cbbeb432a15e9097657d6d2a/image_embeddings-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d85735fd98f185349d3b8eeb089758c6ae3894c5cbbeb432a15e9097657d6d2a",
        "md5": "779a1282ad560a6d0be59c578fabf611",
        "sha256": "6821b5fc0c7506661df1b4a8c16313eb396143d510d0ade04925d1276b0a6ac1"
      },
      "downloads": -1,
      "filename": "image_embeddings-1.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "779a1282ad560a6d0be59c578fabf611",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10088,
      "upload_time": "2020-07-20T00:06:13",
      "upload_time_iso_8601": "2020-07-20T00:06:13.828243Z",
      "url": "https://files.pythonhosted.org/packages/d8/57/35fd98f185349d3b8eeb089758c6ae3894c5cbbeb432a15e9097657d6d2a/image_embeddings-1.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}