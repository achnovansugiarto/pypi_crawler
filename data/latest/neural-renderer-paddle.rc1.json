{
  "info": {
    "author": "Wu Hecong",
    "author_email": "hecongw@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Neural 3D Mesh Renderer in PadddlePaddle\n\nA PaddlePaddle version of [Neural Renderer](https://github.com/hiroharu-kato/neural_renderer), refer to its [PyTorch version](https://github.com/daniilidis-group/neural_renderer)\n\n## Install\n\nRun:\n```sh\npip install neural-renderer-paddle\n```\n\n## Usage\n\nCheck `examples` folder for usage.\n\n## Note\n\nUnittest module is not compatiable with PaddlePaddle. If you want to run test, run:\n```sh\ngit clone <THIS REPO> neural_renderer_paddle\npip install neural_renderer_paddle/\ncd neural_renderer_paddle/tests\npython -m unittest test_*.py\n```\n\n---\n\nOriginal repo README:\n\n# Neural 3D Mesh Renderer (CVPR 2018)\n\nThis repo contains a PyTorch implementation of the paper [Neural 3D Mesh Renderer](http://hiroharu-kato.com/projects_en/neural_renderer.html) by Hiroharu Kato, Yoshitaka Ushiku, and Tatsuya Harada.\nIt is a port of the [original Chainer implementation](https://github.com/hiroharu-kato/neural_renderer) released by the authors.\nCurrently the API is the same as in the original implementation with some smalls additions (e.g. render using a general 3x4 camera matrix, lens distortion coefficients etc.). However it is possible that it will change in the future.\n\nThe library is fully functional and it passes all the test cases supplied by the authors of the original library.\nDetailed documentation will be added in the near future.\n## Requirements\nPython 2.7+ and PyTorch 0.4.0.\n\nThe code has been tested only with PyTorch 0.4.0, there are no guarantees that it is compatible with older versions.\nCurrently the library has both Python 3 and Python 2 support.\n\n**Note**: In some newer PyTorch versions you might see some compilation errors involving AT_ASSERT. In these cases you can use the version of the code that is in the branch *at_assert_fix*. These changes will be merged into master in the near future.\n## Installation\nYou can install the package by running\n```\npip install neural_renderer_pytorch\n```\nSince running install.py requires PyTorch, make sure to install PyTorch before running the above command.\n## Running examples\n```\npython ./examples/example1.py\npython ./examples/example2.py\npython ./examples/example3.py\npython ./examples/example4.py\n```\n\n\n## Example 1: Drawing an object from multiple viewpoints\n\n![](https://raw.githubusercontent.com/hiroharu-kato/neural_renderer/master/examples/data/example1.gif)\n\n## Example 2: Optimizing vertices\n\nTransforming the silhouette of a teapot into a rectangle. The loss function is the difference between the rendered image and the reference image.\n\nReference image, optimization, and the result.\n\n![](https://raw.githubusercontent.com/hiroharu-kato/neural_renderer/master/examples/data/example2_ref.png) ![](https://raw.githubusercontent.com/hiroharu-kato/neural_renderer/master/examples/data/example2_optimization.gif) ![](https://raw.githubusercontent.com/hiroharu-kato/neural_renderer/master/examples/data/example2_result.gif)\n\n## Example 3: Optimizing textures\n\nMatching the color of a teapot with a reference image.\n\nReference image, result.\n\n![](https://raw.githubusercontent.com/hiroharu-kato/neural_renderer/master/examples/data/example3_ref.png) ![](https://raw.githubusercontent.com/hiroharu-kato/neural_renderer/master/examples/data/example3_result.gif)\n\n## Example 4: Finding camera parameters\n\nThe derivative of images with respect to camera pose can be computed through this renderer. In this example the position of the camera is optimized by gradient descent.\n\nFrom left to right: reference image, initial state, and optimization process.\n\n![](https://raw.githubusercontent.com/hiroharu-kato/neural_renderer/master/examples/data/example4_ref.png) ![](https://raw.githubusercontent.com/hiroharu-kato/neural_renderer/master/examples/data/example4_init.png) ![](https://raw.githubusercontent.com/hiroharu-kato/neural_renderer/master/examples/data/example4_result.gif)\n\n\n## Citation\n\n```\n@InProceedings{kato2018renderer\n    title={Neural 3D Mesh Renderer},\n    author={Kato, Hiroharu and Ushiku, Yoshitaka and Harada, Tatsuya},\n    booktitle={The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)},\n    year={2018}\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "neural-renderer-paddle",
    "package_url": "https://pypi.org/project/neural-renderer-paddle/",
    "platform": "",
    "project_url": "https://pypi.org/project/neural-renderer-paddle/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/neural-renderer-paddle/1.1.3.4/",
    "requires_dist": [
      "scikit-image (~=0.19.0)",
      "paddlepaddle-gpu (~=2.2.0)"
    ],
    "requires_python": "",
    "summary": "PaddlePaddle implementation of \"A 3D mesh renderer for neural networks\"",
    "version": "1.1.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12274105,
  "releases": {
    "1.1.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00fecd07701242f7907a6c6c8328eabec749fec50f5fa220c8849b41504c4a7f",
          "md5": "86998d5a9d9a3ab085bf0089ed947b64",
          "sha256": "e5aa05c236e7f82b078d9d67bc2113c3ea4b4539b9ef2a7687012ad23376598e"
        },
        "downloads": -1,
        "filename": "neural_renderer_paddle-1.1.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86998d5a9d9a3ab085bf0089ed947b64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31180,
        "upload_time": "2021-12-11T07:55:43",
        "upload_time_iso_8601": "2021-12-11T07:55:43.551142Z",
        "url": "https://files.pythonhosted.org/packages/00/fe/cd07701242f7907a6c6c8328eabec749fec50f5fa220c8849b41504c4a7f/neural_renderer_paddle-1.1.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00fecd07701242f7907a6c6c8328eabec749fec50f5fa220c8849b41504c4a7f",
        "md5": "86998d5a9d9a3ab085bf0089ed947b64",
        "sha256": "e5aa05c236e7f82b078d9d67bc2113c3ea4b4539b9ef2a7687012ad23376598e"
      },
      "downloads": -1,
      "filename": "neural_renderer_paddle-1.1.3.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "86998d5a9d9a3ab085bf0089ed947b64",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 31180,
      "upload_time": "2021-12-11T07:55:43",
      "upload_time_iso_8601": "2021-12-11T07:55:43.551142Z",
      "url": "https://files.pythonhosted.org/packages/00/fe/cd07701242f7907a6c6c8328eabec749fec50f5fa220c8849b41504c4a7f/neural_renderer_paddle-1.1.3.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}