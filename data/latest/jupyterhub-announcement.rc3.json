{
  "info": {
    "author": "R. C. Thomas, Fran√ßois Tessier, Narek Amirbekian",
    "author_email": "rcthomas@lbl.gov",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# jupyterhub-announcement\n\n[![Release](https://img.shields.io/github/v/release/rcthomas/jupyterhub-announcement.svg)](https://github.com/rcthomas/jupyterhub-announcement/releases/latest)\n\nThis is an announcement service for JupyterHub that you can manage through a JupyterHub-styled UI.\nYou can use it to communicate with your hub's users about status, upcoming outages, or share news.\nIt allows you to post a current announcement, and show previous announcements in reverse chronological order.\nIt provides a REST API hook that you can use to post the latest announcement on JupyterHub itself (with custom templates).\nAnnouncements are visible even to users who are logged out.\n\n## Requirements\n\n* [jupyterhub](https://pypi.org/project/jupyterhub/)\n* [html-sanitizer](https://pypi.org/project/html-sanitizer/)\n* [aiofiles](https://pypi.org/project/aiofiles/)\n\n## Installation\n\n    pip install jupyterhub-announcement\n\n## How to Configure It\n\nYou can run this service either as a hub-managed service or as an external service.\nHere's an example configuration for a hub-managed service you can place in a JupyterHub config file:\n\n    c.JupyterHub.services = [\n        {\n            'name': 'announcement',\n            'url': 'http://127.0.0.1:8888',\n            'command': [\"python\", \"-m\", \"jupyterhub_announcement\"]\n        }\n    ]\n\nHere's the config if you set it up as an external service, say, in another Docker container called `announcement`:\n\n    import os\n    c.JupyterHub.services = [\n        {\n            'name': 'announcement',\n            'url': 'http://announcement:8888',\n            'api_token': os.environ[\"ANNOUNCEMENT_JUPYTERHUB_API_TOKEN\"]\n        }\n    ]\n\nYou have to specify the API token for the hub and the announcement service to share here.\nStarting with JupyterHub 2.0, you will need to set user access through appropriate definition of `c.JupyterHub.load_roles`.\nSee the [hub-managed service example](examples/hub-managed/README.md) to see how.\n\nThe service also has its own configuration file, by default `announcement_config.py` is what it is called.\nThe configuration text can be generated with a `--generate-config` option.\n\nIf you're running a hub with internal SSL turned on, you'll want to take advantage of the SSL option settings.\n\n## How to Use It\n\nWhat does it actually look like when it runs?\nStart up the hub.\nLog in as an admin user, then go to\n\n    http://localhost:8000/services/announcement/\n\nYou should see:\n\n![Admin view uninitialized](https://raw.githubusercontent.com/rcthomas/jupyterhub-announcement/main/docs/resources/02-admin-view-uninitialized.png \"Admin view uninitialized\")\n\nYou'll now see the same page as before but with a text box.\nEnter a message. Please note that your input will be sanitized.\nFor security reasons, a few HTML tags such as \"<iframe>\" or \"<script>\" will be automatically removed.\n\n![Admin view filling out](https://raw.githubusercontent.com/rcthomas/jupyterhub-announcement/main/docs/resources/03-admin-view-filling-out.png \"Admin view filling out\")\n\nThat becomes the Latest Announcement.\n\n![Admin view filled out](https://raw.githubusercontent.com/rcthomas/jupyterhub-announcement/main/docs/resources/04-admin-view-filled-out.png \"Admin view filled out\")\n\nOn the hub, a user will see the announcement posted.\n\n![User view from the hub](https://raw.githubusercontent.com/rcthomas/jupyterhub-announcement/main/docs/resources/04-user-view-hub.png \"User view from the hub\")\n\nIf you enter an empty message, it clears that message and demotes it to a Previous Announcement.\n\n![Admin view cleared](https://raw.githubusercontent.com/rcthomas/jupyterhub-announcement/main/docs/resources/05-admin-view-cleared.png \"Admin view cleared\")\n\nGo on.  Add a few more.  Then log out.\nNow log in using a test user who is not an admin.\nPoint back at the announcement page and there you see all these wonderful communications your friendly admin sent to you.\n\n![User view](https://raw.githubusercontent.com/rcthomas/jupyterhub-announcement/main/docs/resources/06-user-view.png \"User view\")\n\nLog out again and have a look.\nYou can see them even if you're logged out.\n\n## REST Endpoint\n\nUse the `/services/announcement/latest` endpoint to get the latest announcement in JSON form.\nYou can make a call out to the service to get the announcement from the hub, if you customize the page template.\nUsers may like that.\nIf the latest announcement has been cleared or there are no announcements yet, an empty announcement will be returned.\n\nHere are more details on how you can use the REST endpoint in a custom template.\nThis example extends the JupyterHub `page.html` template to make a little AJAX call to the announcement service.\nTo make it work you must \n\n1. Create a directory somewhere the hub can reach, let's use `/opt/templates` for instance.\n1. Add the template to `/opt/templates/page.html`\n1. Finally, set `c.JupyterHub.template_paths = [\"/opt/templates\"]` in your JupyterHub configuration file.\n\nNote the first line that says we are [extending a template.](https://jupyterhub.readthedocs.io/en/stable/reference/templates.html#extending-templates)\n\n    {% extends \"templates/page.html\" %}\n    {% block announcement %}\n    <div class=\"container announcement\"></div>\n    {% endblock %}\n\n    {% block script %}\n    {{ super() }}\n    <script>\n    $.get(\"/services/announcement/latest\", function(data) {\n      var announcement = data[\"announcement\"];\n      if(announcement) {\n        $(\".announcement\").html(`<div class=\"panel panel-warning\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">Announcement</h3>\n          </div>\n          <div class=\"panel-body text-center announcement\">\n            ${announcement}\n          </div>       \n        </div>`);\n      }\n    });\n    </script>\n    {% endblock %}\n\n**BE CAREFUL** It should be pretty clear at this point that you want to ensure your admins can be trusted!\n\n## Fixed Message\n\nThere's a hook in the configuration that lets you add a custom message above all the annoucements.\nA good use for this message would be to include a link to a more general system status or message of the day (MOTD) page.\n\n## Announcement Lifetime\n\nAnnouncements are retained in the queue for up to some configurable lifetime in days.\nAfter that they are purged automatically.\nBy default announcements stay in the queue for a week.\n\n## Persisted Announcements\n\nBy default the service does nothing to persist announcements.\nYou can change this behavior by specifying `persist_path` for the `AnnouncementQueue` object.\nIf this is set, then at start up the service will read this file and try to initialize the queue with its contents.\nIf it is set but the file doesn't exist, that's OK, the queue just starts off empty.\nOn update, the file is over-written to reflect the current state of the queue.\nThis way if the service is restarted, those old announcements aren't lost.\nThe persistence file is just JSON.\n**BE CERTAIN** access to this file is protected! \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rcthomas/jupyterhub-announcement",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jupyterhub-announcement",
    "package_url": "https://pypi.org/project/jupyterhub-announcement/",
    "platform": null,
    "project_url": "https://pypi.org/project/jupyterhub-announcement/",
    "project_urls": {
      "Homepage": "https://github.com/rcthomas/jupyterhub-announcement"
    },
    "release_url": "https://pypi.org/project/jupyterhub-announcement/0.9.1/",
    "requires_dist": [
      "aiofiles",
      "html-sanitizer",
      "jupyterhub"
    ],
    "requires_python": "",
    "summary": "JupyterHub Announcement Service",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16026895,
  "releases": {
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "274de76e33e90f221a7d769c4d78f356a24591821ccb4c85a4fc47a937f777fb",
          "md5": "a858d8932883c11b85557eafebd3a837",
          "sha256": "ca5da1b416586d8e4d3af1bf5022b2310910984476ae6a50cc9efb9d5bd3a162"
        },
        "downloads": -1,
        "filename": "jupyterhub_announcement-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a858d8932883c11b85557eafebd3a837",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12865,
        "upload_time": "2022-07-29T23:15:35",
        "upload_time_iso_8601": "2022-07-29T23:15:35.384982Z",
        "url": "https://files.pythonhosted.org/packages/27/4d/e76e33e90f221a7d769c4d78f356a24591821ccb4c85a4fc47a937f777fb/jupyterhub_announcement-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f72ea8555eb0409e987443bc16d78bf45c9582fe8920f924d1d0991c37cd8e9",
          "md5": "2c764e0bb27a85f24bc3b9ffc83253b4",
          "sha256": "57b372ebdfa5cefee4c6f498db8f41a985fe2a9ac7c0b1ec3d4f7d9353dd6b25"
        },
        "downloads": -1,
        "filename": "jupyterhub-announcement-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2c764e0bb27a85f24bc3b9ffc83253b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13505,
        "upload_time": "2022-12-07T23:12:58",
        "upload_time_iso_8601": "2022-12-07T23:12:58.996864Z",
        "url": "https://files.pythonhosted.org/packages/4f/72/ea8555eb0409e987443bc16d78bf45c9582fe8920f924d1d0991c37cd8e9/jupyterhub-announcement-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e80f5131c7bee3bff59298d9f1f193f42aad8e11b98bf3c461d3ff411c40475a",
          "md5": "51e4c32bc5372b7200668a34a6eb4da5",
          "sha256": "a2ff6a072c0a8efca58fefb60b34208c6504a5da0e3107c3742e240f904cb65b"
        },
        "downloads": -1,
        "filename": "jupyterhub_announcement-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51e4c32bc5372b7200668a34a6eb4da5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13095,
        "upload_time": "2022-12-07T23:29:47",
        "upload_time_iso_8601": "2022-12-07T23:29:47.618152Z",
        "url": "https://files.pythonhosted.org/packages/e8/0f/5131c7bee3bff59298d9f1f193f42aad8e11b98bf3c461d3ff411c40475a/jupyterhub_announcement-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e80f5131c7bee3bff59298d9f1f193f42aad8e11b98bf3c461d3ff411c40475a",
        "md5": "51e4c32bc5372b7200668a34a6eb4da5",
        "sha256": "a2ff6a072c0a8efca58fefb60b34208c6504a5da0e3107c3742e240f904cb65b"
      },
      "downloads": -1,
      "filename": "jupyterhub_announcement-0.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "51e4c32bc5372b7200668a34a6eb4da5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13095,
      "upload_time": "2022-12-07T23:29:47",
      "upload_time_iso_8601": "2022-12-07T23:29:47.618152Z",
      "url": "https://files.pythonhosted.org/packages/e8/0f/5131c7bee3bff59298d9f1f193f42aad8e11b98bf3c461d3ff411c40475a/jupyterhub_announcement-0.9.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}