{
  "info": {
    "author": "Justin Goheen",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Topic :: Office/Business :: Financial :: Investment",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Software Development :: User Interfaces"
    ],
    "description": "<!-- # Copyright Justin R. Goheen.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License. -->\n\n# IB Quant\n\nA command line interface and Python framework for the Interactive Brokers APIs.\n\n\n## Overview\n\nIB Quant leverages [ib-insync](https://github.com/erdewit/ib_insync) to interface with Interactive Brokers TWS or Gateway.\n\nThe CLI is named `ib`.\n\nAfter installing ibquant, ib's command groups can be shown in terminal with:\n\n```sh\nib --help\n```\n\nFor now, the CLI mostly serves to replace pytest as qualifying tests that a function or method is working as intended before including in a script. Most CLI commands replicate tasks that can be easily accomplished in the TWS platform.\n\nThe end goal is that these CLI commands come together in a high level command such as `ib trader run --strategy=some_strategy_name.py` to have core.Trader run the given strategy and perform appropriate pre, intra, and post trade reporting (logging) requirements, if any.\n\n## Core Classes and Mixin Interfaces\n\n`core.AppBase` serves as a base for all other core classes\n\n`core.Trader` drives a user defined strategy in live trading\n\n`core.Brute` enables brute force optimization of rules based trading strategies\n\n`core.Learner` is used to optimize gradient based learning strategies\n\n`mixins.AccountMixins` enables account features for non-advisor accounts\n\n`mixins.AdvisorMixins` enables features for an advisor account (groups, model portfolios)\n\n`mixins.ConnectionMixins` handles the connection to the running TWS or Gateway sesion\n\n`mixins.ContractMixins` provides an extended class to define [contracts](https://interactivebrokers.github.io/tws-api/contracts.html) for the TWS API\n\n`mixins.DataMixins` provides utilities for fetching historical data, and for streaming top of book or limit order book data.\n\n`mixins.OrderMixins` provides interfaces for several TWS [order types](https://interactivebrokers.github.io/tws-api/available_orders.html)\n\n`mixins.StrategyMixins` provides a base class for user defined strategies\n\n> core.Learner should be used with my ML template, [lightning-pod](https://github.com/JustinGoheen/lightning-pod)\n\n## Installation\n\nThe package can be installed for standard use or for development.\n\nRequired dependencies for standard use as a package are shown in [setup.cfg](setup.cfg) under `install_requires` of the `options` group.\n\nDev dependencies are shown in [setup.cfg](setup.cfg) under the `options.extras_require` group.\n\n### Installing the package for standard use\nibquant is available via PyPi with pip. Installation can be done with:\n\n_conda_\n```sh\nconda env create -n ibquant python -y\nconda activate ibquant\npip install ibquant\n```\n\n_venv_\n```sh\ncd {{ path to your project }}\npython3 -m venv .venv/\n# Activate the environment\n# Linux and MacOS\nsource .venv/bin/activate\n# Windows\n.venv\\Scripts\\activate.bat\n# install the package\npip install ibquant\n```\n\n\n### Installing the package for development\nAfter cloning the repo, the framework can be installed for development with:\n\n```sh\n# creating a virtual environment\ncd {{ path to ibquant clone }}\npython3 -m venv .venv/\n# Activate the environment\n# Linux and MacOS\nsource .venv/bin/activate\n# Windows\n.venv\\Scripts\\activate.bat\n# install an editable version of the package\npip install -e \".[dev]\"\n```\n\n## Usage\n\nAfter installing ibquant, log into a TWS paper account and test example flows from terminal with:\n\n```sh\nib advisor managed-accounts\n```\n\n```sh\nib account summary\n```\n\n```sh\nib contract lookup --contract-type=Future\n```\n\nEach of the above commands will prompt the user for required inputs.\n\n> localSymbol, multiplier, and currency prompts of  `ib contract lookup` are not required\n\n## Ecosystem\n\nAside from using ib-insync, ibtrader also provides users with:\n\n- [QuantLib](https://quantlib-python-docs.readthedocs.io/en/latest/)\n- [alphalens-reloaded](https://alphalens.ml4trading.io/): community maintained version of Quantopian alphalens\n- [empyrical-reloaded](https://empyrical.ml4trading.io/): community maintained version of Quantopian empyrical\n- [pyfolio-reloaded](https://pyfolio.ml4trading.io/): community maintained version of Quantopian pyfolio\n- [zipline-reloaded](https://zipline.ml4trading.io/): community maintained version of Quantopian zipline\n- [nasdaq-data-link](https://docs.data.nasdaq.com/docs/python-installation): formerly known as Quandl\n- [PyEX](https://pyex.readthedocs.io/en/latest/): an IEX Cloud API tool\n- [TA-Lib](http://mrjbq7.github.io/ta-lib/): a technical analysis library common to PyEX and Zipline\n\n## Factors, Indicators, Studies, Strategies\n\nZipline Reloaded provides factors and indicators in the [pipeline API](https://zipline.ml4trading.io/api-reference.html#pipeline-api). TA-Lib is installed as a dependency of Zipline. Most factors and indicators of both libraries will be reachable via ibtrader.factors.\n\nIndicator definitions can be found at:\n\n- Trading Technologies [Glossary](https://library.tradingtechnologies.com/trade/chrt-technical-indicators.html)\n- thinkorswim [Studies Library](https://tlc.thinkorswim.com/center/reference/Tech-Indicators/studies-library)\n- IBKR [Technical Analytics Guide](https://guides.interactivebrokers.com/tws/twsguide.htm#chartindicatorstop.htm?TocPath=Technical%2520Analytics%257CChart%2520Indicators%257C_____0)\n\nSample strategies can be found via the link below.\n\n- thinkorswim [Strategies Library](https://tlc.thinkorswim.com/center/reference/Tech-Indicators/strategies)\n\n## Suggested Reading and References\n\n### Algorithmic Trading\n\nThe texts shown below are merely suggestions; each text is written by Dr. Yves Hilpisch. The content is not heavy on math notation, and the author has done a great job at providing code examples.\n\n- [Python for Algorithmic Trading](https://books.google.com/books?id=q4SXzQEACAAJ&dq=inauthor:%22Yves+Hilpisch%22&hl=en&newbks=1&newbks_redir=1&sa=X&ved=2ahUKEwjF_tT2-ML5AhWmt4QIHZv4C2EQ6AF6BAgDEAI)\n- [Financial Theory with Python](https://books.google.com/books?id=M31EEAAAQBAJ&printsec=frontcover&dq=inauthor:%22Yves+Hilpisch%22&hl=en&newbks=1&newbks_redir=1&sa=X&ved=2ahUKEwjF_tT2-ML5AhWmt4QIHZv4C2EQ6AF6BAgLEAI)\n- [Artificial Intelligence in Finance](https://books.google.com/books?id=6WGEzQEACAAJ&dq=inauthor:%22Yves+Hilpisch%22&hl=en&newbks=1&newbks_redir=1&sa=X&ved=2ahUKEwjF_tT2-ML5AhWmt4QIHZv4C2EQ6AF6BAgEEAI)\n- [Derivatives Analytics with Python](https://www.google.com/books/edition/Derivatives_Analytics_with_Python/5IvACQAAQBAJ?hl=en)\n\n\n### Python\n\nAs with the above, the books shown below are considered standard suggestions.\n\n- [Fluent Python](https://www.google.com/books/edition/Fluent_Python/H1SXzQEACAAJ?hl=en) (Ramalho)\n- [High Performance Python](https://www.google.com/books/edition/High_Performance_Python/GMyzyQEACAAJ?hl=en) (Gorelick et al)\n- [Python for Data Analysis](https://wesmckinney.com/book/) (McKinney)\n\nAside from the texts, and possibly a more suitable way to learn professional level Python programming, is to look at the source code of the Quantopian reloaded projects.\n\n\n### Trading Information and Education\n\nThe resources shown below are free, and sourced from reputable providers.\n\n- TD Ameritrade Network [YouTube](https://www.youtube.com/c/TDAmeritradeNetwork)\n- Interactive Brokers [Traders' Academy](https://tradersacademy.online/)\n- Interactive Brokers [Quant Blog](https://www.tradersinsight.news/category/ibkr-quant-news/)\n- Interactive Brokers [YouTube](https://www.youtube.com/c/interactivebrokers)\n- CME Group [Markets](https://www.cmegroup.com/markets.html)\n- CME Group [Education](https://www.cmegroup.com/education.html)\n- CME Group [YouTube](https://www.youtube.com/user/cmegroup)\n- CBOE [Markets](https://www.cboe.com/markets/)\n- CBOE [Options Institute](https://www.cboe.com/optionsinstitute/)\n- CBOE [YouTube](https://www.youtube.com/user/CBOEtv)\n- NASDAQ [Market Activity](https://www.nasdaq.com/market-activity)\n- NASDAQ [News and Insights](https://www.nasdaq.com/news-and-insights)\n- Quantopian [YouTube](https://www.youtube.com/channel/UC606MUq45P3zFLa4VGKbxsg)\n- [tastytrade](https://tastytrade.thinkific.com/) (the original thinkorswim team)\n- Alpha Architect [Blog](https://alphaarchitect.com/blog/)\n- [Quantocracy](https://quantocracy.com/) Blogs\n- arXiv Quantitative Finance [papers](https://arxiv.org/archive/q-fin)\n- Man Group [Insights](https://www.man.com/insights)\n- FINRA [Investors Education](https://www.finra.org/investors#/)\n- Corporate Finance Institute [free courses](https://corporatefinanceinstitute.com/collections/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ibquant",
    "package_url": "https://pypi.org/project/ibquant/",
    "platform": null,
    "project_url": "https://pypi.org/project/ibquant/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ibquant/0.1.1/",
    "requires_dist": [
      "ib-insync",
      "alphalens-reloaded",
      "empyrical-reloaded",
      "pyfolio-reloaded",
      "zipline-reloaded",
      "quantlib",
      "pyzmq",
      "torch",
      "torch-tb-profiler",
      "optuna",
      "textual",
      "rich",
      "rich-cli",
      "click",
      "hydra-core",
      "plotly",
      "matplotlib",
      "fastapi",
      "pyarrow",
      "xarray",
      "beautifulsoup4",
      "ibquant[data,ml] ; extra == 'all'",
      "pyEX ; extra == 'data'",
      "Nasdaq-Data-Link ; extra == 'data'",
      "yfinance ; extra == 'data'",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "ibquant[all,dev,docs] ; extra == 'dev-all'",
      "sphinx ; extra == 'docs'",
      "myst-parser ; extra == 'docs'",
      "furo ; extra == 'docs'",
      "scikit-learn ; extra == 'ml'",
      "torchserve ; extra == 'ml'",
      "pytorch-lightning ; extra == 'ml'",
      "ray[rllib] ; extra == 'ml'",
      "wandb ; extra == 'ml'"
    ],
    "requires_python": "",
    "summary": "A Python Framework for Interactive Brokers TWS API",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14977529,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8070e568e630ed05a69d9db1f5ca6de5865208866d1caaf448d0ee68e3e3363a",
          "md5": "bee3a1701ceefce9d8218bae3a790f35",
          "sha256": "a2148a0f3f75b438535e08c4b10a7d217a236f72ed217e6570ce6969a0fb0550"
        },
        "downloads": -1,
        "filename": "ibquant-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bee3a1701ceefce9d8218bae3a790f35",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 51235,
        "upload_time": "2022-09-02T19:00:04",
        "upload_time_iso_8601": "2022-09-02T19:00:04.120299Z",
        "url": "https://files.pythonhosted.org/packages/80/70/e568e630ed05a69d9db1f5ca6de5865208866d1caaf448d0ee68e3e3363a/ibquant-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ae5c4bd5c7642899103e0066938209c77f21751c6477628502fc6a7fb6e407d",
          "md5": "de0e749c93c533d092943a6fa7ea0fd9",
          "sha256": "6c757304257fac230c5bae7bafc829d3a00b648d67e465c4d1a1ccf4cc81d933"
        },
        "downloads": -1,
        "filename": "ibquant-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de0e749c93c533d092943a6fa7ea0fd9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35994,
        "upload_time": "2022-09-01T14:03:12",
        "upload_time_iso_8601": "2022-09-01T14:03:12.870602Z",
        "url": "https://files.pythonhosted.org/packages/6a/e5/c4bd5c7642899103e0066938209c77f21751c6477628502fc6a7fb6e407d/ibquant-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21e6cf91ec4cd318c0a332a9542b7153fca717a2606ad8c19a7cb61d1e3240f6",
          "md5": "7d724a79369b589e6b5ff79bd848c308",
          "sha256": "cee8dce73b6435c3d6c01e1214f99d5d06dca3f8625ee60ea0185c4b704c235b"
        },
        "downloads": -1,
        "filename": "ibquant-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7d724a79369b589e6b5ff79bd848c308",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27223,
        "upload_time": "2022-09-01T14:03:14",
        "upload_time_iso_8601": "2022-09-01T14:03:14.533013Z",
        "url": "https://files.pythonhosted.org/packages/21/e6/cf91ec4cd318c0a332a9542b7153fca717a2606ad8c19a7cb61d1e3240f6/ibquant-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3de24b817f1e9eb6bfca663268e94888e288212f4e1080604680cbeb35350008",
          "md5": "f65fe21f795d5c5f38effa716017d986",
          "sha256": "02e58845bac10a043dbf3f7fdb95fb92c10eeca10902b4056856e0cd9f3f947a"
        },
        "downloads": -1,
        "filename": "ibquant-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f65fe21f795d5c5f38effa716017d986",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 51233,
        "upload_time": "2022-09-02T19:00:40",
        "upload_time_iso_8601": "2022-09-02T19:00:40.061966Z",
        "url": "https://files.pythonhosted.org/packages/3d/e2/4b817f1e9eb6bfca663268e94888e288212f4e1080604680cbeb35350008/ibquant-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3de24b817f1e9eb6bfca663268e94888e288212f4e1080604680cbeb35350008",
        "md5": "f65fe21f795d5c5f38effa716017d986",
        "sha256": "02e58845bac10a043dbf3f7fdb95fb92c10eeca10902b4056856e0cd9f3f947a"
      },
      "downloads": -1,
      "filename": "ibquant-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f65fe21f795d5c5f38effa716017d986",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 51233,
      "upload_time": "2022-09-02T19:00:40",
      "upload_time_iso_8601": "2022-09-02T19:00:40.061966Z",
      "url": "https://files.pythonhosted.org/packages/3d/e2/4b817f1e9eb6bfca663268e94888e288212f4e1080604680cbeb35350008/ibquant-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}