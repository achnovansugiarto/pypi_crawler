{
  "info": {
    "author": "Cosima Team",
    "author_email": "emilie.frost@offis.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Integration of the (communication) simulator OMNeT++ into the co-simulation framework mosaik\n\nmosaik is a Smart Grid co-simulation framework developed by OFFIS e.V. in Oldenburg. For further information on mosaik\n(see [mosaik](https://mosaik.offis.de)). OMNeT++ is a simulation framework for (communication) network simulation. For\nfurther information on OMNeT++ (see [OMNeT++](https://omnetpp.org/)). In this project we integrated the communication\nsimulator OMNeT++ into the co-simulation framework mosaik. This enables the simulation of realistic communication\ntechnologies (such as 5G) and the analysis of dynamic communication characteristics in Smart Grid scenarios.\n\n## Documentation\n\nFor further information, have a look at the\ndetailed [documentation](https://gitlab.com/mosaik/examples/cosima/-/tree/master/documentation),\nthe [website](https://cosima.offis.de/) or the preprint of the [paper](https://arxiv.org/abs/2209.12550) in which cosima\nis presented.\n\n## Installation\n\nTo use the project, an installation of mosaik3.0, OMNeT++ and protobuf is required.\n\nIf you use ubuntu:\nYou can use the Installation Shell Script via\n\n```bash\nchmod +x install-requirements.sh\nsudo ./install-requirements.sh\n```\n\nfor the installation tasks.\nOtherwise, follow the following instructions.\n\n### Installation and configuration of OMNeT++\n\n* Install OMNeT++ version 5.6.2 from their website [OMNeT++](https://omnetpp.org/).\n    - call `.\\configure` with `PREFER_CLANG=yes` and `CXXFLAGS=-std=c++14` for C++ version 14\n    - import the OMNeT++ files of this project (cosima_omnetpp_project) as an Existing Project in\n      OMNeT++\n    - build the project\n* Install INET 4.2.2 from the OMNeT++ website [OMNeT++ INET](https://omnetpp.org/).\n    - set the INET installation under Project Properties -> Project References in this project\n* (optional if you want to use LTE networks) install SimuLTE 1.2.0\n    - set the SimuLTE installation under Project Properties -> Project References in this project\n* adjust Makefile\n    - under Project Properties -> OMNeT++ -> MakeMake adjust the Makemakefile of the source folder (\"src:makemake\")\n      -- under Target: set \"Executable\"\n      -- under Scope: set \"Deep Compile\", \"Recursive make\"\n      -- under Compile: add path to INET installation and set \"Add include Paths exported from referenced Projects\"\n      -- under Link: set both ticks. User interface libraries to link with: \"all\"\n    - you should get a MakeMake option like --deep -I\"C:\\Users\\user\\Omnet-Projekt\\inet\" --meta:recurse --meta:\n      use-exported-include-paths --meta:export-library --meta:use-exported-libs --meta:feature-ldflags\n\n### Installation of protobuf\n\nInstall the protobuf compiler version 3.6.1 (on Ubuntu) via\n\n```bash\nsudo apt-get install libprotobuf-dev protobuf-compiler \n```\n\nThe used protobuf message (message.proto) is already compiled. If you want to compile the .proto file or another one\nuse\n\n```bash\nprotoc messages/message.proto --cpp_out=. --python_out=.\n```\n\nThe output are the classes message_pb2.py(message_pb2.py) for python and message.pb.cc and message.pb.h for C++. Put\nthe C++ files in the OMNeT++ folder (cosima_omnetpp_project).\n\nNow the generated files can be used in python via\n\n```bash\nfrom message_pb2 import InfoMessage\n```\n\nand in C++ via\n\n```bash\n#include \"message.pb.h\"\n```\n\nNow add the protobuf installation to your project in OMNeT++ under Project Properties -> OMNeT++ -> MakeMake -> Options\n-> Link -> more -> additional objects to link with add \"-lprotobuf\".\n\n## Scenario\n\nTwo example scenarios are included in the project. These are structured very simply and are intended to illustrate the\nfunctionality of the integration. On the mosaik side, agent simulators,\na communication simulator (cosima_core/simulators/communication_simulator.py) and a\ncollector (cosima_core/simulators/collector.py) are implemented. In OMNeT++ you find\nthe MosaikScheduler (cosima_omnetpp_project/modules/MosaikScheduler.h) which is responsible for message exchange with\nmosaik via\nTCP socket. The AgentApp (cosima_omnetpp_project/modules/AgentAppUdp.cc) and\nAgentAppTcp (cosima_omnetpp_project/modules/AgentAppTcp.cc) represent the implementation of the application layer\n(and transport layer) of the end devices, which represent the agents from mosaik on the OMNeT++ side. Example networks\ncan also be found in the project folder. The executable file in OMNeT++\nis mosaik.ini (cosima_omnetpp_project/mosaik.ini).\nWhen an agent in mosaik sends a message to another agent, it does so through the agent simulator entities. Thus,\nclient0 sends a message to client1 at time t1. However, this message is first received in the same step in\nmosaik by the CommunicationSimulator, which sends the message as a Protobuf object to OMNeT++ over a TCP connection.\nWhen the message\nis sent, the simTime in mosaik and the value max_advance is passed from mosaik to OMNeT++. This value specifies how far\nOMNeT++ may simulate until potentially new information could be available in mosaik. In OMNeT++ the message is received\nby the MosaikScheduler, which extracts the message content and inserts it as an event into the FES at the given simTime\nfrom mosaik. In addition, the value of max_advance is also inserted as an event. Now OMNeT++ simulates the message\ndispatch from client0 to client1 over the INET network. The resulting delay time is sent back to the MosaikScheduler and\nthus to mosaik. In mosaik the message is given to client1 after the determined end-to-end delay in OMNeT++.\n\nIn the following, the simulations are described, which can be performed by adapting the config file (\ncosima_core/config.py).\nFrom the given networks it is possible to simulate the scenario with 2 - 50 agents. If a correspondingly larger network\nis modeled, larger agent numbers are also possible.  \nFurthermore, it is possible to simulate non-parallel and parallel message\nsending behaviour. If parallel sending is simulated, two agents send messages simultaneously and time-shifted with 1\nstep difference.\nIt is also possible to add a PV plant to the simulation. PV plants can be connected to agents and read their current\npower values from\na given csv-file. Every 15 minutes, a new value is read and sent to the corresponding agent. The agent replies with an\nacknowledgement to\nthis value.\nMoreover, some changes in the infrastructure can be simulated. It is possible to set times for disconnects and\nreconnects for clients, routers\nand switches.\nIn addition, long calculation times can be passed for the agents.\nMultiple networks are implemented, for example to simulate TCP or UDP connections.\n\n## Setup\n\nCreate a folder 'results' under mosaik-integration (mosaik-integration/results).\nBefore starting a simulation, choose simulation parameters:\n\n- the used step size for the simulation (f.e. ms),\n- the end time of the simulation (therefore the simulation duration),\n- the number of agents,\n- paths to store the simulation results and to load the content of the agent messages,\n- the port to connect to OMNeT++,\n- parallel or not,\n- verbose or not to display information of the simulation run,\n- the start mode,\n- the simulated network,\n- agents to be connected to pv plants,\n- infrastructure changes,\n- calculating times\n- time-based or not (default is not time-based, as this is more performant).\n\n## Run simulation\n\nThere exist different ways to run a simulation. In the config (cosima_core/config.py), it is possible to choose from '\nide', 'qtenv' and 'cmd' as start mode.\n\n* Ide: start the simulation in OMNeT++ by running mosaik.ini (cosima_omnetpp_project/mosaik.ini) with your preferred\n  network and\n  start the co-simulation in mosaik by running the scenario (cosima_core/communication_scenario.py)\n* Qtenv: start mosaik by running the scenario (cosima_core/communication_scenario.py). From within python, OMNeT++ will\n  be started and a window will pop up in which\n  the network can be chosen and the simulation can be started.\n* Cmd: start mosaik by running the scenario (cosima_core/communication_scenario.py). OMNeT++ will be started\n  automatically as a console application.\n  **(note: This only works properly if the project is compiled with clang)**\n\nSimulation results\n\n* The exchanged messages are stored in folder results with timestamp of the simulation start as name of the csv-file.\n\n## Modelling a new network in OMNeT++\n\nAll of the provided networks (cosima_omnetpp_project/networks) contain an instance of the\n*MosaikSchedulerModule (cosima_omnetpp_project/modules/MosaikSchedulerModule.h)*.\nWhen modeling an additional network, this module must also be inserted into the network to enable the\n*MosaikScheduler (cosima_omnetpp_project/modules/MosaikScheduler.h)* to operate. \\\nIn addition, an instance of the *MosaikScenarioManager (cosima_omnetpp_project/modules/MosaikScenarioManager.h)*\nshould be inserted into the network if changes on the infrastructure (for example disconnecting or reconnecting clients)\nshould be possible at simulation time. \\\nThe network description file (.ned file) of a network in OMNeT++ should contain the following:\n\n```bash\nimport MosaikSchedulerModule;\nimport MosaikScenarioManager;\n\n  scenarioManager: MosaikScenarioManager {\n        }\n\n  schedulerModule: MosaikSchedulerModule {\n        }\n```\n\nIf a new .ini-file in OMNeT++ is created, the scheduler class must be registered in the .ini-file of the\nOMNeT++-project.\\\n``\n[General]\n``\\\n``\nscheduler-class = \"MosaikScheduler\"\n``\n\n## Optional: PyTests\n\nTo set up testing in python follow these steps:\n\n* in PyCharm under Settings -> Python Integrated Tools -> Testing set the Default Test Runner to PyTest\n* tests can be found in the test folder (tests). The structure of the test folder should correspond to the structure of\n  the project\n* test files start with \"test_\"\n* to run a test execute either a single file or the folder\n\nFor further information (\nsee [info](https://semaphoreci.com/community/tutorials/testing-python-applications-with-pytest)).\n\n## Optional: Google-Test and Google-Mock\n\nIn the test folder in OMNeT++ (cosima_omnetpp_project/tests) the unit tests for OMNeT++ can be found.\nThe framework Google Test with Google Mock is used for implementation\n(see [googletest](https://github.com/google/googletest/blob/main/googletest/README.md)).\nFor installing Google Test:\n\n```bash\ngit clone https://github.com/google/googletest.git -b release-1.11.0\ncd googletest\nmkdir build\ncd build\ncmake ..\nmake\nsudo make install \n```\n\nor\n\n```bash\nsudo apt-get install googletest \ncd /usr/src/googletest   \nsudo cmake CMakeLists.tx\nsudo make\nsudo make install\n```\n\nFor executing the tests the following steps must be executed:\n\n* include test folder in OMNeT++ (cosima_omnetpp_project/tests) in build\n* under \"Project Properties -> OMNeT++ -> Makemake -> Options -> Link -> Additional objects to link with\" add the\n  following dependencies:\n    * -lgmock -lgtest -lpthread\n* rebuild project\n* when executing, now the test files will be executed\n\n## Optional: clang-tidy and clang-format\n\nclang-tidy and clang-formal are tools to clean up C++ code. To install, configure and use them do the following:\n\n* choose the right version for your system on [installation page](https://apt.llvm.org/)\n* run:\n  ``\n  sudo apt-add-repository \"<version>\"\n  ``\n* run:\n  ``\n  wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -# Fingerprint: 6084 F3CF 814B 57C1 CF12\n  EFD5 15CF 4D18 AF4F 7421\n  ``\n* run:\n  ``\n  sudo apt-get update\n  ``\n* run:\n  ``\n  sudo apt-get install clang-tidy-3.9\n  ``\n* navigate to the OMNeT++ folder\n* generate a compilation database with\n  ``\n  clang++ -MJ compile_commands.o.json -Wall -std=c++11 -o <Dateipfad>.o\n  -c <Dateipfad>.cpp\n  ``\n* generate a file with\n  ``\n  sed -e '1s/^/[\\n/' -e '$s/,$/\\n]/' *.o.json > compile_commands.json\n  ``\n* print all checks with:\n  ``\n  clang-tidy-3.9 -checks=* -p ./ <Dateiname>.cc\n  ``\n* run:\n  ``\n  sudo apt install clang-format-3.9\n  ``\n* run:\n  ``\n  clang-format-3.9 -style=google <filename>.cc\n  ``\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/mosaik/examples/cosima.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cosima",
    "package_url": "https://pypi.org/project/cosima/",
    "platform": null,
    "project_url": "https://pypi.org/project/cosima/",
    "project_urls": {
      "Homepage": "https://gitlab.com/mosaik/examples/cosima.git"
    },
    "release_url": "https://pypi.org/project/cosima/0.3.4/",
    "requires_dist": [
      "arrow (==1.2.1)",
      "matplotlib (==3.5.0)",
      "mosaik (==3.0.0)",
      "mosaik-api (==3.0.0)",
      "numpy (==1.20.3)",
      "pandas (==1.2.4)",
      "protobuf (==3.20.1)",
      "psutil (==5.9.0)",
      "pytest (==6.2.5)",
      "pytest-check (==1.0.5)",
      "setuptools (==57.0.0)",
      "simpy (==3.0.13)",
      "termcolor (==1.1.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "COmmunication SIMulation with Agents",
    "version": "0.3.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15360130,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "583b0e471142c9cfe62996e766da4889bf78eb61f287d3d7567e3aa28f22bb45",
          "md5": "d3c8fda9c0af47dd8a6808b8f133ee9d",
          "sha256": "28c87e0f8aeabea3b210622292f8120488c6d1f37c41e5cb22cbd56a22926931"
        },
        "downloads": -1,
        "filename": "cosima-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3c8fda9c0af47dd8a6808b8f133ee9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3595608,
        "upload_time": "2022-10-04T14:33:48",
        "upload_time_iso_8601": "2022-10-04T14:33:48.896990Z",
        "url": "https://files.pythonhosted.org/packages/58/3b/0e471142c9cfe62996e766da4889bf78eb61f287d3d7567e3aa28f22bb45/cosima-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11d7a505faf59e43932876ef5630d2ac8168dd78b6575ed04a9b8cea3c5dce05",
          "md5": "0dcada12d868c6dc6da088b899008dc2",
          "sha256": "0e2e5450170d098bc135493bbc420229864653f386e890c82d65f805f1240ff9"
        },
        "downloads": -1,
        "filename": "cosima-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dcada12d868c6dc6da088b899008dc2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 47771,
        "upload_time": "2022-10-04T14:48:08",
        "upload_time_iso_8601": "2022-10-04T14:48:08.523453Z",
        "url": "https://files.pythonhosted.org/packages/11/d7/a505faf59e43932876ef5630d2ac8168dd78b6575ed04a9b8cea3c5dce05/cosima-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0b1fb57590ef5f2ae5aa6f6b4c4d471145beadbd6423f1d2ed333e21bbef8ba",
          "md5": "df5f53c5437d57f79b241b746e7e47d5",
          "sha256": "7412f1c07ceb1f49c5a258cc4621c12e3e5ac0e654fe3be73bb3577b2d4319cf"
        },
        "downloads": -1,
        "filename": "cosima-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "df5f53c5437d57f79b241b746e7e47d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3595767,
        "upload_time": "2022-10-04T14:48:16",
        "upload_time_iso_8601": "2022-10-04T14:48:16.588716Z",
        "url": "https://files.pythonhosted.org/packages/d0/b1/fb57590ef5f2ae5aa6f6b4c4d471145beadbd6423f1d2ed333e21bbef8ba/cosima-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa521795391aeaba8f8d8270391596fa95c2f8d5d9af1af950d215ec8e4ff8f9",
          "md5": "2bc89b3039c5101893e09a57e519d540",
          "sha256": "921dedc0e935cc242e3d7f4984e2090067e4c16d086ee2ea7a1d492d5d59f436"
        },
        "downloads": -1,
        "filename": "cosima-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bc89b3039c5101893e09a57e519d540",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 47332,
        "upload_time": "2022-10-04T14:56:29",
        "upload_time_iso_8601": "2022-10-04T14:56:29.475159Z",
        "url": "https://files.pythonhosted.org/packages/aa/52/1795391aeaba8f8d8270391596fa95c2f8d5d9af1af950d215ec8e4ff8f9/cosima-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53cff3ac15872a3b378c37a4b0138954c8fb7d053e28fa979ffb2f657d4774d1",
          "md5": "b4c3a0492330469411606c455aeceb64",
          "sha256": "9f6dd98d8008a54e4f1889dc8d4875c6675b5dd4f603380bfe5281fdb7ccdd13"
        },
        "downloads": -1,
        "filename": "cosima-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b4c3a0492330469411606c455aeceb64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3595845,
        "upload_time": "2022-10-04T14:56:35",
        "upload_time_iso_8601": "2022-10-04T14:56:35.892171Z",
        "url": "https://files.pythonhosted.org/packages/53/cf/f3ac15872a3b378c37a4b0138954c8fb7d053e28fa979ffb2f657d4774d1/cosima-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8a0f4e81ee30a1d955e5a7d7d7b2a65e34b1edf01a35f9ba59f944b5058026e",
          "md5": "2ac0184cfc41e2a17c2300e986070db1",
          "sha256": "858a228ad701cf1090517b89763a18e5a93e56fe1624d70137735fa4f0af501a"
        },
        "downloads": -1,
        "filename": "cosima-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ac0184cfc41e2a17c2300e986070db1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 47369,
        "upload_time": "2022-10-04T14:59:59",
        "upload_time_iso_8601": "2022-10-04T14:59:59.816308Z",
        "url": "https://files.pythonhosted.org/packages/b8/a0/f4e81ee30a1d955e5a7d7d7b2a65e34b1edf01a35f9ba59f944b5058026e/cosima-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4a4b816198a5ed774fc77f8580575203f9995fb1bf0a7170aaffdab88bef8f2",
          "md5": "bb97e1d042c535fcc4749f275a570807",
          "sha256": "374b22f9a9221341466d3b178453cdaf4b0cc2c5b6937b13b9c199f42f9c059c"
        },
        "downloads": -1,
        "filename": "cosima-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bb97e1d042c535fcc4749f275a570807",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3595948,
        "upload_time": "2022-10-04T15:00:06",
        "upload_time_iso_8601": "2022-10-04T15:00:06.340266Z",
        "url": "https://files.pythonhosted.org/packages/a4/a4/b816198a5ed774fc77f8580575203f9995fb1bf0a7170aaffdab88bef8f2/cosima-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f4752c55376507c0f6c0aabee04a09af1bf6d86161e401acd9a28976915d7bf",
          "md5": "fed7fc0174a8c79fd8960561e25c955f",
          "sha256": "87074882623e942a7a057086f2cd336929d312c837d2c28e8dbacf53b35dfe2f"
        },
        "downloads": -1,
        "filename": "cosima-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fed7fc0174a8c79fd8960561e25c955f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 47370,
        "upload_time": "2022-10-04T15:02:17",
        "upload_time_iso_8601": "2022-10-04T15:02:17.031775Z",
        "url": "https://files.pythonhosted.org/packages/5f/47/52c55376507c0f6c0aabee04a09af1bf6d86161e401acd9a28976915d7bf/cosima-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "144ce938d1ccd438e8902aa37844bf5dee9339e63861af643083707d82ce178b",
          "md5": "7217bf5273758289c4e96b320d33cf15",
          "sha256": "60b9a7fc55a8584f629efb9826210a49404a6695265a3cb6bc272b92de2d54ab"
        },
        "downloads": -1,
        "filename": "cosima-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7217bf5273758289c4e96b320d33cf15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3595930,
        "upload_time": "2022-10-04T15:02:21",
        "upload_time_iso_8601": "2022-10-04T15:02:21.597014Z",
        "url": "https://files.pythonhosted.org/packages/14/4c/e938d1ccd438e8902aa37844bf5dee9339e63861af643083707d82ce178b/cosima-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "927caf7f88be57106c5d8604506d8f90f63c7c193480d51e06576aea5422a3bf",
          "md5": "86ff4a3fa11a8d2c8f265a932764cea4",
          "sha256": "705aa8f73e6129a3e7b5241f50e32de27fb7d30e42f56af0a027087d76e54365"
        },
        "downloads": -1,
        "filename": "cosima-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86ff4a3fa11a8d2c8f265a932764cea4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 47302,
        "upload_time": "2022-10-04T15:08:44",
        "upload_time_iso_8601": "2022-10-04T15:08:44.606964Z",
        "url": "https://files.pythonhosted.org/packages/92/7c/af7f88be57106c5d8604506d8f90f63c7c193480d51e06576aea5422a3bf/cosima-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdcdda9e9c761b6b92e2b507fb8b5aa07ecb9919bfb2ff3cc027ac9b164beb3d",
          "md5": "02b3de3c8f1829994a62ec147fa23071",
          "sha256": "435dde87d435422f42c412918358baec8e1f4d30c3335309d6a94454986d56bd"
        },
        "downloads": -1,
        "filename": "cosima-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "02b3de3c8f1829994a62ec147fa23071",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3599959,
        "upload_time": "2022-10-04T15:08:51",
        "upload_time_iso_8601": "2022-10-04T15:08:51.547821Z",
        "url": "https://files.pythonhosted.org/packages/fd/cd/da9e9c761b6b92e2b507fb8b5aa07ecb9919bfb2ff3cc027ac9b164beb3d/cosima-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc295543a58c6cac8fd4ee2830a1802ed4c1bfe59c1b9612b19d8e8e63fb95d0",
          "md5": "f4e996261b7b8ba834925d09d4531922",
          "sha256": "7a9e55a5a5624618f49711908b0adbf3a4c052395bcc6ba4d9e05e240da6caaf"
        },
        "downloads": -1,
        "filename": "cosima-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4e996261b7b8ba834925d09d4531922",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 47428,
        "upload_time": "2022-10-10T11:43:07",
        "upload_time_iso_8601": "2022-10-10T11:43:07.923650Z",
        "url": "https://files.pythonhosted.org/packages/cc/29/5543a58c6cac8fd4ee2830a1802ed4c1bfe59c1b9612b19d8e8e63fb95d0/cosima-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97e84049c92f7fe8958e1d89b5317fe4b1e6e0b5fcc2bb7c5dbbad22b5f0e14e",
          "md5": "4db30fab1f27aa71048b72a3f80af3d8",
          "sha256": "379d84b9e4c128c49acc1b4bcce3b7407ee8d6e99c32b8fbb406107f197a9725"
        },
        "downloads": -1,
        "filename": "cosima-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4db30fab1f27aa71048b72a3f80af3d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3600693,
        "upload_time": "2022-10-10T11:43:15",
        "upload_time_iso_8601": "2022-10-10T11:43:15.753228Z",
        "url": "https://files.pythonhosted.org/packages/97/e8/4049c92f7fe8958e1d89b5317fe4b1e6e0b5fcc2bb7c5dbbad22b5f0e14e/cosima-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc295543a58c6cac8fd4ee2830a1802ed4c1bfe59c1b9612b19d8e8e63fb95d0",
        "md5": "f4e996261b7b8ba834925d09d4531922",
        "sha256": "7a9e55a5a5624618f49711908b0adbf3a4c052395bcc6ba4d9e05e240da6caaf"
      },
      "downloads": -1,
      "filename": "cosima-0.3.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f4e996261b7b8ba834925d09d4531922",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 47428,
      "upload_time": "2022-10-10T11:43:07",
      "upload_time_iso_8601": "2022-10-10T11:43:07.923650Z",
      "url": "https://files.pythonhosted.org/packages/cc/29/5543a58c6cac8fd4ee2830a1802ed4c1bfe59c1b9612b19d8e8e63fb95d0/cosima-0.3.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97e84049c92f7fe8958e1d89b5317fe4b1e6e0b5fcc2bb7c5dbbad22b5f0e14e",
        "md5": "4db30fab1f27aa71048b72a3f80af3d8",
        "sha256": "379d84b9e4c128c49acc1b4bcce3b7407ee8d6e99c32b8fbb406107f197a9725"
      },
      "downloads": -1,
      "filename": "cosima-0.3.4.tar.gz",
      "has_sig": false,
      "md5_digest": "4db30fab1f27aa71048b72a3f80af3d8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 3600693,
      "upload_time": "2022-10-10T11:43:15",
      "upload_time_iso_8601": "2022-10-10T11:43:15.753228Z",
      "url": "https://files.pythonhosted.org/packages/97/e8/4049c92f7fe8958e1d89b5317fe4b1e6e0b5fcc2bb7c5dbbad22b5f0e14e/cosima-0.3.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}