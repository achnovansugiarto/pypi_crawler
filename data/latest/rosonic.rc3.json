{
  "info": {
    "author": "Kaj Munhoz Arfvidsson",
    "author_email": "kajarf@kth.se",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# rosonic\n\nThis is the library to make you as fast as Sonic in developing python-based ROS\npackages. The name does not actually come from Sonic, but \"ROS (made pyth)onic\"\nsince the main motivation is making ROS nodes, well, more pythonic. Doing this\nallows for a more comfortable workflow, the code becomes more \"natural\" and\neasier to understand.\n\nTo alleviate some of the issues described in [Motivation](docs/motivation.md)\n`rosonic` tries to gently \"force\" the user to follow a design pattern. Namely,\n`rosonic` conceptualizes a ROS node as a class in a simple, pythonic way with\nreasonable default behaviours.\n\n\n## Requirements\n\n`rosonic` has been developed for ROS Melodic and above, i.e Python 2.7,\nPython 3.6 and above. However, at writing moment only Python 3.6 has been\ntested. As soon as I'm transitioning my other projects to Noetic then I will\ndrop any support for Python 2.7.\n\n\n## Installation\n\nThis package is available on PyPI and can be installed as a normal pip package.\n\n```\npip install rosonic\n```\n\n\n## Usage\n\n### Creating a Node\n\nThe `rosonic` barebones, do-nothing ROS node now looks like this\n\n```python\n#! /usr/bin/env python\n\nfrom rosonic import Node\n\nclass my_node(Node):\n    pass\n\nif __name__ == '__main__':\n    my_node()\n```\n\nThe default behaviour of a `rosonic.Node` will be to call `rospy.spin`. This is\nuseful for the \"Subscriber\" and \"Pub-Sub\" patterns in\n[Motivation](docs/motivation.md), then we only need to implement initialization\nand callbacks. For the initialization, just create a normal `__init__` for the\nclass that doesn't take any arguments. Any resources, e.g. `pub`, can be set as\nobject fields (`self.pub`) and callbacks can be implemented as methods.\n\n```python\nclass my_node(Node):\n\n    def __init__(self):\n\n        self.pub = rospy.Publisher(...)\n        rospy.Subscriber(..., self.callback)\n\n    def callback(self):\n\n        self.pub.publish(...)\n```\n\nWhen calling `my_node()` you (in order) initialize the ROS node with\nthe class name, load parameters, create the `my_node` instance and call\n`my_node.main`. The default `main` method will call the `spin` which in turn,\nby default, calls `rospy.spin`.\n\n```python\ndef main(self):\n    while self.keep_alive():\n        self.spin()\n    self.shutdown()\n\ndef spin(self):\n    rospy.spin()\n```\n\nThe added bonus of these defaults is that it is very easy to do the \"Publisher\"\npattern as well. You specify a `rate`, write `__init__` as before and overload\nthe `spin` method. If, however, you want completely different still then you\nneed to overload `main`, which is fairly simple in itself!\n\n```python\nfrom rosonic import Node, Rate\n\nclass my_node(Node):\n\n    rate = 10\n\n    def __init__(self):\n        ...\n\n    def spin(self):\n        ...\n```\n\n### Parameters as class attributes\n\n> It isn't the mountain ahead that wears you out - it's the grain of sand in\n> your shoe\n\nWhat's the easiest way to declare a parameter? Maybe like this...\n\n```python\n#! /usr/bin/env python\n\nfrom rosonic import Node, Parameter\n\nclass my_node(Node):\n\n    IMAGE1 = Parameter('~image1', 'image1')\n    IMAGE2 = Parameter('~image2', 'image2')\n    USE_FILTER = Parameter('~use_filter', True)\n\n    ...\n\nif __name__ == '__main__':\n    my_node()\n```\n\nThat's the `rosonic` way at least! You don't have to care about asserting\nexistence or managing scoping rules. Since they are class fields you have them\navailable all the time. If `Parameter` is not given a default value nor is the\n`optional` argument set, then `Parameter` checks for existence at load time.\n\n\n## A very slim implementation\n\n`rosonic` tries to be very slim. There is some complexity regarding class\nfields. However, it takes 5 minutes to look through the ROS relevant parts. So,\nsee the implementation as the real documentation!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://kaarmu.github.io/rosonic/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rosonic",
    "package_url": "https://pypi.org/project/rosonic/",
    "platform": null,
    "project_url": "https://pypi.org/project/rosonic/",
    "project_urls": {
      "Homepage": "https://kaarmu.github.io/rosonic/"
    },
    "release_url": "https://pypi.org/project/rosonic/0.2.2/",
    "requires_dist": [
      "mkdocs ; extra == 'docs'",
      "mkdocs-with-pdf ; extra == 'docs'"
    ],
    "requires_python": ">=2.7",
    "summary": "Write pythonic ROS nodes, fast and comfortably",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14934409,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b22ff80464e9a62c8e629e24be05c26c1f99a353c48f2784840ec1d0c6ca948e",
          "md5": "f5792aa5fa9825383b4fe106131c7e8f",
          "sha256": "5255686e948cf7957bbf42a28ee944571ae83a675120cb0b2eed70b8cd8a2824"
        },
        "downloads": -1,
        "filename": "rosonic-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5792aa5fa9825383b4fe106131c7e8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 8637,
        "upload_time": "2022-08-22T12:57:21",
        "upload_time_iso_8601": "2022-08-22T12:57:21.955848Z",
        "url": "https://files.pythonhosted.org/packages/b2/2f/f80464e9a62c8e629e24be05c26c1f99a353c48f2784840ec1d0c6ca948e/rosonic-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0580662612688d46809f5db0732f6b0b46ae8ab9225a54e404680a003ee8a4bd",
          "md5": "25f7dedcba38f9516f2bb7965413b983",
          "sha256": "c1caab061b3b2a9ec5cd4ef1888df7bc1b6e27b2af806892b78afc2102d5dafa"
        },
        "downloads": -1,
        "filename": "rosonic-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "25f7dedcba38f9516f2bb7965413b983",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 8790,
        "upload_time": "2022-08-22T12:57:23",
        "upload_time_iso_8601": "2022-08-22T12:57:23.915506Z",
        "url": "https://files.pythonhosted.org/packages/05/80/662612688d46809f5db0732f6b0b46ae8ab9225a54e404680a003ee8a4bd/rosonic-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "753d5348cf0b3efc78f3a7a275de6387d8df3463a40533a7d4f502345555a398",
          "md5": "e59f8a70dd612cedbe3a695678719b38",
          "sha256": "9d426ed52313abf744f7676fcc2acda41a3cefd65cd7e2d7dd528e8fe61849fd"
        },
        "downloads": -1,
        "filename": "rosonic-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e59f8a70dd612cedbe3a695678719b38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 8804,
        "upload_time": "2022-08-25T16:18:44",
        "upload_time_iso_8601": "2022-08-25T16:18:44.638436Z",
        "url": "https://files.pythonhosted.org/packages/75/3d/5348cf0b3efc78f3a7a275de6387d8df3463a40533a7d4f502345555a398/rosonic-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c26258de0ef5d65d5d864d59cef13c0a9658551f43968b39113054e5993cf1c",
          "md5": "e025b768e7370e410f141cb9f7764091",
          "sha256": "8d6279f1682adeb1f6a9c8c237f487b83728a97b6494edfe49a0ea2f01a3f61e"
        },
        "downloads": -1,
        "filename": "rosonic-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e025b768e7370e410f141cb9f7764091",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 8622,
        "upload_time": "2022-08-30T11:38:26",
        "upload_time_iso_8601": "2022-08-30T11:38:26.591115Z",
        "url": "https://files.pythonhosted.org/packages/2c/26/258de0ef5d65d5d864d59cef13c0a9658551f43968b39113054e5993cf1c/rosonic-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc5d17cc76bb718d93c1decb2355378b57783fd09dfb0688593333081aae5697",
          "md5": "ec2e45a9a7b665168f1cb59708243dfd",
          "sha256": "09e368e52424fe8d72e4f5a43a0b24c493123f9e0a5af69e4b8c84fc5b6c284c"
        },
        "downloads": -1,
        "filename": "rosonic-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ec2e45a9a7b665168f1cb59708243dfd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 8642,
        "upload_time": "2022-08-30T11:38:29",
        "upload_time_iso_8601": "2022-08-30T11:38:29.544885Z",
        "url": "https://files.pythonhosted.org/packages/cc/5d/17cc76bb718d93c1decb2355378b57783fd09dfb0688593333081aae5697/rosonic-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c26258de0ef5d65d5d864d59cef13c0a9658551f43968b39113054e5993cf1c",
        "md5": "e025b768e7370e410f141cb9f7764091",
        "sha256": "8d6279f1682adeb1f6a9c8c237f487b83728a97b6494edfe49a0ea2f01a3f61e"
      },
      "downloads": -1,
      "filename": "rosonic-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e025b768e7370e410f141cb9f7764091",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 8622,
      "upload_time": "2022-08-30T11:38:26",
      "upload_time_iso_8601": "2022-08-30T11:38:26.591115Z",
      "url": "https://files.pythonhosted.org/packages/2c/26/258de0ef5d65d5d864d59cef13c0a9658551f43968b39113054e5993cf1c/rosonic-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc5d17cc76bb718d93c1decb2355378b57783fd09dfb0688593333081aae5697",
        "md5": "ec2e45a9a7b665168f1cb59708243dfd",
        "sha256": "09e368e52424fe8d72e4f5a43a0b24c493123f9e0a5af69e4b8c84fc5b6c284c"
      },
      "downloads": -1,
      "filename": "rosonic-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ec2e45a9a7b665168f1cb59708243dfd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 8642,
      "upload_time": "2022-08-30T11:38:29",
      "upload_time_iso_8601": "2022-08-30T11:38:29.544885Z",
      "url": "https://files.pythonhosted.org/packages/cc/5d/17cc76bb718d93c1decb2355378b57783fd09dfb0688593333081aae5697/rosonic-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}