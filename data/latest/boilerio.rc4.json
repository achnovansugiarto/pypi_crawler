{
  "info": {
    "author": "Andy Peace",
    "author_email": "andrew.peace@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# The BoilerIO Software Thermostat\n\nBoilerIO can control heating in your home.  Code is provided here to connect\nwith Danfoss RF receivers though other implementations could easily be added,\nand to receive temperature updates over MQTT in a format described later in this\nREADME.\n\nThis has been tested with the Danfoss RF transciever code in the thermostat.git\nrepository at https://github.com/adpeace/thermostat.git.\n\nNo warranty is provided: please be careful if you are messing with your own\nheating system.\n\nFor more information, please see https://hackingathome.wordpress.com.\n\n## Installation\n\nMore details on installation to be written.  There are several components that\nneed to be configured:\n\n1.  The web application and database, to provide the online component.\n1.  The local scheduler and boiler interface.\n1.  The sensor inputs\n\nYou can install from the repository to get a specific version, such as the\nlatest development version not yet published to PyPI, or install via `pip` from\nPyPI for a recent tested version by running:\n\n```\npip install boilerio\n```\n\nTo install from the git repository, first check it out then install using `pip`:\n\n```\n$ git clone https://github.com/adpeace/boilerio.git\n$ cd boilerio\n$ pip3 install .\n```\n\nUse `-e` to `pip` to install in development mode (i.e. just link to the\nchecked-out source instead of installing it).\n\n### Raspberry Pi Quickstart to get MQTT-based on/off control working\n\nYou can run these steps on a Raspberry Pi with a fresh SD card that has the Buster version of Raspbian.  You can ssh to the Raspberry Pi, then copy/paste these commands into the terminal.  You'll need a transceiver device such as a JeeLink with the `thermostat` firmware (available at https://github.com/adpeace/thermostat) plugged in to use this.\n\n```\nsudo apt install -y python3-pip git\ngit clone https://github.com/adpeace/boilerio.git\ncd boilerio\nsudo pip3 install --upgrade pip  # good practise but not mandatory\nsudo pip3 install .\nsudo mkdir /etc/sensors\nsudo bash -c 'cat >/etc/sensors/config' <<EOF\n[mqtt]\nhost = mqtt_hostname\nuser = mqtt_username\npassword = mqtt_password\n\n[heating]\ninfo_basetopic = heating/zone/info\ndemand_request_topic = heating/zone/demand\nEOF\n```\n\nNow use a text editor such as `nano` to edit `/etc/sensors/config` and replace\nthe MQTT server details with your own.\n\nNow run `boiler_to_mqtt /dev/ttyUSB0` (replacing `/dev/ttyUSB0` with the location\nof the Danfoss transceiver device, e.g. your JeeLink; JeeLink will probably show\nup at that device name though if you don't have other USB devices connected).\n\n## Overview\n\nThe end-to-end application comes in three parts:\n\n1.  The web app backend.  This is the `schedulerweb` Flask app.  It presents a\n    REST API for managing a heating schedule, and is used both by the \"device\"\n    implementation (that translates it into boiler on/off commands and typically\n    runs \"on-site\") and the user interface (which is a web app).  The\n    recommended configuration is for this to be proxied through nginx and run\n    inside uwsgi.  It uses postgres as a storage backend and assumes a database and role exists called `scheduler`.\n\n2.  The thermostat controller.  This is the `scheduler` Python script.  Ensure\n    this daemon is running to control the boiler relay and update the cache of\n    the current temperature in the backend web app.\n\n3.  The web-based UI.  This talks to the schedulerweb app and presents a UI\n    where the current temperature and schedule can be configured.  It is in a separate repository, `boilerio-ui`.\n\n### The web app backend\n\nTo run the scheduler flask application for development, using `flask run`:\n\n```\n$ FLASK_APP=boilerio/schedulerweb/app.py BOILERIO_CONFIG=settings.cfg flask run\n```\n\nThe settings file contains database and other configuration parameters.  An exmaple file is in \"example-settings.cfg\" but you should copy this and update it to suit your needs.\n\nTo run in production, you will need to use a production webserver.  I use uWSGI\nbehind nginx.  Here is an example uWSGI configuration for `schedulerweb`\n(assuming you have the Python package installed) - this can be placed in\n`/etc/uwsgi/apps-available` on Ubuntu's version of uwsgi:\n\n```\n[uwsgi]\nsocket = /var/www/boilerio/thermostat.sock\nmodule = boilerio.schedulerweb:app\nlogto = /var/log/uwsgi/boilerio/thermostat.log\nenv = BOILERIO_SETTINGS=/etc/sensors/settings.cfg\nuid = boilerio\ngid = www-data\nchmod-socket = 664\n```\n\nThis assumes you have placed your settings file in `/etc/sensors/settings.cfg`.\n\n### scheduler: The device/controller\n\nThe local scheduler component provides the timer and thermostat behaviour: it\ngets the target temperature periodically from the web service and controls the\nboiler by sending messages to the boiler\\_to\\_mqtt program.\n\nThe scheduler takes no arguments: the configuration will come from the web\nservice.  In order to actuate a boiler, you will need something listening to\nMQTT to interface to the boiler relays: the boiler_to_mqtt script can do this.\n\n## Boiler control software: boiler\\_to\\_mqtt\n\nThe `boiler_to_mqtt` script implements an MQTT-topic based interface on top\nof the serial protocol provided in the thermostat.git repository.  In short: it\nturns the boiler on and off via MQTT.  The serial interface in thermostat.git is\ndesigned to interact with a Danfoss RF thermostat receiver; if you wanted to use\na different receiver you can substitute a different service.\n\nOrdinarily you'd leave this service running so that other services can turn the\nboiler on/off as needed.\n\nThis service and others in this repository use a common configuration file.  See\nbelow for more information.\n\nYou can send learn packets in a loop with a simple shell loop, if you have the\nmosquitto clients installed and are running the `boiler_to_mqtt.py` script:\n\n```\necho -n \"Learning mode - program boiler then hit enter... \"\nwhile ! read -t 1 ; do\n    mosquitto_pub -h <host> -u <username> -P <passwd> -t heating/zone/demand \\\n                  -m '{\"command\": \"L\", \"thermostat\": 47793}'\ndone\n```\n\n## boilersim\n\nThis is a trivial simulator intended to help debug and improve the thermostat.\nIt follows a really simple heating/cooling model and generates a table as\noutput.\n\nTo run, use a command-line such as:\n\n```\n$ boilersim -r 18 19.5 600\n```\n\nThe `-r` option introduces some random noise into the temperature readings\ngenerated by the simulation when passing them to the controller.\n\nThe first positional argument is the starting indoor temperature to simulate.\nThe second argument is the target temperature.  The third argument is\nthe simulated runtime in minutes.\n\nThis program produces logging output to stderr, and a space-separated output to\nstdout.  The output is similar to:\n\n```\n...\n1.0 0 0 17.9964773317 17.9876417779 0 0 0\n...\n```\n\nThe columns are:\n\n1. The time into the simulation, in minutes\n2. The amount of time in that minute that the boiler was on for in the\nsimulation.\n3. The current duty cycle of the boiler in the simulation.\n4. The current simulated room temperature\n5. The fake temperature reading passed to the controller including any error\nintroduced by the `-r` option.\n6. The current value of the proportional term of the PID controller.\n7. The current value of the integral term of the PID controller.\n8. The current value of the differential term of the PID controller.\n\nYou can use the `plot\\_sim.gpi` gnuplot script to plot the output of the\nsimulation.  E.g.:\n\n```\n$ boilersim -r 18 19.5 600  2>log >sim_data\n$ gnuplot plot_sim.gpi\n```\n\nThe gnuplot script assumes the simulation output is saved to a file called\n`sim\\_data`.\n\n# Config file\n\nOther than `boilersim`, a config file is needed for the programs here.  This is\nto help make them usable as daemons.\n\n```\n[mqtt]\nhost = raspi.lan\nuser = user\npassword = imnottellingyou\n\n[heating]\n# Various MQTT topic names to use.  These can be anything but are specified in\n# the config in case you have other software that constrains your choices, and\n# ensures they are consistent across apps.\n\ninfo_basetopic = heating/zone/info\ndemand_request_topic = heating/zone/demand\nthermostat_schedule_change_topic = heating/thermostat_control/update\n\nscheduler_db_host = hub.lan\nscheduler_db_name = scheduler\nscheduler_db_user = scheduler\nscheduler_db_password = imnottellingyou\n\nscheduler_url = https://your_url\nscheduler_username = your_user\nscheduler_password = imnottellingyou\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adpeace/boilerio.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "boilerio",
    "package_url": "https://pypi.org/project/boilerio/",
    "platform": "",
    "project_url": "https://pypi.org/project/boilerio/",
    "project_urls": {
      "Homepage": "https://github.com/adpeace/boilerio.git"
    },
    "release_url": "https://pypi.org/project/boilerio/0.0.5/",
    "requires_dist": [
      "Flask",
      "requests",
      "psycopg2-binary",
      "paho-mqtt",
      "flask-restx",
      "pyserial",
      "flask-login",
      "basicauth",
      "cachecontrol",
      "google-auth-oauthlib"
    ],
    "requires_python": "",
    "summary": "A software thermostat and heating control system",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12142575,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88bd0a901a3c5a6949ec152a1ad81c0a3b132c7125f194892a593f3a939b5cba",
          "md5": "d64d82731353ced9f3ab098edc45fe34",
          "sha256": "5a3f045871f24344a98803fb27fb1544e51443b38d42a52b8065ac4516e1b918"
        },
        "downloads": -1,
        "filename": "boilerio-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d64d82731353ced9f3ab098edc45fe34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17756,
        "upload_time": "2017-12-28T22:39:24",
        "upload_time_iso_8601": "2017-12-28T22:39:24.043287Z",
        "url": "https://files.pythonhosted.org/packages/88/bd/0a901a3c5a6949ec152a1ad81c0a3b132c7125f194892a593f3a939b5cba/boilerio-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b665dc7f539431775e480be47cf5e4a08764e6ef6bfb8c3d668b8e6a6c5a318",
          "md5": "f9759b0c7f237a2f718a91dccc1b7066",
          "sha256": "6adb58443170d9fe4f86647b420385b86d25ba8b6fb3006a1133e6dc50212bf3"
        },
        "downloads": -1,
        "filename": "boilerio-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f9759b0c7f237a2f718a91dccc1b7066",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17118,
        "upload_time": "2018-11-11T21:37:11",
        "upload_time_iso_8601": "2018-11-11T21:37:11.148138Z",
        "url": "https://files.pythonhosted.org/packages/7b/66/5dc7f539431775e480be47cf5e4a08764e6ef6bfb8c3d668b8e6a6c5a318/boilerio-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "458567b17c2743ad4c24d4bf1f6b910b17dcb9377de8b9803a8fd8273cbebb4f",
          "md5": "13a6426f7f00069989837bea3b49b458",
          "sha256": "5ed2cc9d747a878cd85f4d86cab8ce539eb2cb7799eed1350bafeb563692f359"
        },
        "downloads": -1,
        "filename": "boilerio-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "13a6426f7f00069989837bea3b49b458",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23541,
        "upload_time": "2020-02-15T19:46:12",
        "upload_time_iso_8601": "2020-02-15T19:46:12.863128Z",
        "url": "https://files.pythonhosted.org/packages/45/85/67b17c2743ad4c24d4bf1f6b910b17dcb9377de8b9803a8fd8273cbebb4f/boilerio-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54ec8e7cf2a40739430c9a26fa66ce44d756dcbb6e2b8e7c41076305eea7b43d",
          "md5": "838a1b7df49389afe22c8aeb58e788e8",
          "sha256": "f57e53243633c173947c11259b669a2cc4319254997395b82f38e8403bd89647"
        },
        "downloads": -1,
        "filename": "boilerio-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "838a1b7df49389afe22c8aeb58e788e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 57431,
        "upload_time": "2021-11-28T00:49:20",
        "upload_time_iso_8601": "2021-11-28T00:49:20.325946Z",
        "url": "https://files.pythonhosted.org/packages/54/ec/8e7cf2a40739430c9a26fa66ce44d756dcbb6e2b8e7c41076305eea7b43d/boilerio-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c82bf5c87761e86db62ed8a06e4a297514d34ecf56b20c36aff8f98a34ab6f36",
          "md5": "4fbea5440db3428f3d13a36a8c948d50",
          "sha256": "2304ab49764535904af61483a2c16aeb0095fe3a972f6bed0f60a1c00a458991"
        },
        "downloads": -1,
        "filename": "boilerio-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4fbea5440db3428f3d13a36a8c948d50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43182,
        "upload_time": "2021-11-28T00:49:22",
        "upload_time_iso_8601": "2021-11-28T00:49:22.146988Z",
        "url": "https://files.pythonhosted.org/packages/c8/2b/f5c87761e86db62ed8a06e4a297514d34ecf56b20c36aff8f98a34ab6f36/boilerio-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54ec8e7cf2a40739430c9a26fa66ce44d756dcbb6e2b8e7c41076305eea7b43d",
        "md5": "838a1b7df49389afe22c8aeb58e788e8",
        "sha256": "f57e53243633c173947c11259b669a2cc4319254997395b82f38e8403bd89647"
      },
      "downloads": -1,
      "filename": "boilerio-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "838a1b7df49389afe22c8aeb58e788e8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 57431,
      "upload_time": "2021-11-28T00:49:20",
      "upload_time_iso_8601": "2021-11-28T00:49:20.325946Z",
      "url": "https://files.pythonhosted.org/packages/54/ec/8e7cf2a40739430c9a26fa66ce44d756dcbb6e2b8e7c41076305eea7b43d/boilerio-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c82bf5c87761e86db62ed8a06e4a297514d34ecf56b20c36aff8f98a34ab6f36",
        "md5": "4fbea5440db3428f3d13a36a8c948d50",
        "sha256": "2304ab49764535904af61483a2c16aeb0095fe3a972f6bed0f60a1c00a458991"
      },
      "downloads": -1,
      "filename": "boilerio-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "4fbea5440db3428f3d13a36a8c948d50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 43182,
      "upload_time": "2021-11-28T00:49:22",
      "upload_time_iso_8601": "2021-11-28T00:49:22.146988Z",
      "url": "https://files.pythonhosted.org/packages/c8/2b/f5c87761e86db62ed8a06e4a297514d34ecf56b20c36aff8f98a34ab6f36/boilerio-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}