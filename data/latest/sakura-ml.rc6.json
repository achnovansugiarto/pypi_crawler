{
  "info": {
    "author": "ZakuroAI",
    "author_email": "git@zakuro.ai",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 align=\"center\">\n  <br>\n  <img src=\"https://drive.google.com/uc?id=1Mz2WqXHrwEOjwtWfJVHV7NiRwC_64Shh\">\n</h1>\n<p align=\"center\">\n  <a href=\"#modules\">Modules</a> •\n  <a href=\"#code-structure\">Code structure</a> •\n  <a href=\"#code-design\">Code design</a> •\n  <a href=\"#installing-the-application\">Installing the application</a> •\n  <a href=\"#makefile-commands\">Makefile commands</a> •\n  <a href=\"#environments\">Environments</a> •\n  <a href=\"#running-the-application\">Running the application</a>\n</p>\n\n\n--------------------------------------------------------------------------------\n\nSakura is a simple but powerfull tool to reduce training time by running the train/test asynchronously. It provides two features:\n- A simple ML framework for asynchronous training.\n- An integration with PyTorch. \n\n\nYou can reuse your favorite Python framework such as Pytorch, Tensorflow or PaddlePaddle.\n\n\n# Modules\n\nAt a granular level, Sakura is a library that consists of the following components:\n\n| Component | Description |\n| ---- | --- |\n| **sakura** | Contains the sakura modules. |\n| **sakura.ml** | Contains the code related to ml processing |\n\n\n\n# Code structure\n```python\nfrom setuptools import setup\nfrom sakura import __version__\n\nsetup(\n    name=\"sakura-ml\",\n    version=__version__,\n    short_description=\"Sakura provides asynchronous training for DNN.\",\n    long_description=\"Sakura provides asynchronous training for DNN.\",\n    url='https://zakuro.ai',\n    packages=[\n        \"sakura\",\n        \"sakura.ml\",\n        \"sakura.ml.epoch\",\n    ],\n    entry_points={\n        \"console_scripts\": [\n            \"sakura=sakura:main\"\n        ]\n    },\n    include_package_data=True,\n    package_data={\"\": [\"*.yml\"]},\n    install_requires=[r.rsplit()[0] for r in open(\"requirements.txt\")],\n    license='MIT',\n    author='ZakuroAI',\n    python_requires='>=3.6',\n    author_email='git@zakuro.ai',\n    description='Sakura provides asynchronous training for DNN.',\n    platforms=\"linux_debian_10_x86_64\",\n    classifiers=[\n        \"Programming Language :: Python :: 3\",\n        \"License :: OSI Approved :: MIT License\",\n    ]\n)\n```\n# Code design\nIf you worked with PyTorch in your project your would find a common structure. \nSimply change the `test` and `train` in your trainer as shown in `mnist_demo`. \n```python\nimport torch.optim as optim\nfrom torch.optim.lr_scheduler import StepLR\nfrom sakura.ml import AsyncTrainer\nfrom sakura import defaultMetrics\nfrom mnist_demo.trainer import Trainer\nfrom mnist_demo.model import Net\nfrom mnist_demo.utils import init_loaders\nfrom sakura import cfg\n\nif __name__ == \"__main__\":\n    # Initialize\n    model = Net()\n    optimizer = optim.Adadelta(model.parameters(), lr=cfg.optim.lr)\n    scheduler = StepLR(optimizer, step_size=cfg.optim.step,\n                       gamma=cfg.optim.gamma)\n\n    # Build the trainer\n    trainer = Trainer(model=model,\n                      optimizer=optimizer,\n                      scheduler=scheduler,\n                      metrics=defaultMetrics,\n                      epochs=cfg.trainer.epochs,\n                      model_path=cfg.trainer.model_path,\n                      checkpoint_path=cfg.trainer.checkpoint_path,\n                      device=cfg.trainer.device,\n                      device_test=cfg.trainer.device_test)\n\n    # # Comment the following line to disable to async trainer\n    trainer = AsyncTrainer(trainer=trainer)\n\n    # Init the loaders\n    train_loader, test_loader = init_loaders(seed=cfg.loader.seed,\n                                             batch_size=cfg.loader.batch_size,\n                                             test_batch_size=cfg.loader.test_batch_size)\n\n    # # Run the rainer\n    trainer.run(train_loader=train_loader,\n                test_loader=test_loader)\n```\n\n# Installing the application\nTo clone and run this application, you'll need the following installed on your computer:\n- [Git](https://git-scm.com)\n- Docker Desktop\n   - [Install Docker Desktop on Mac](https://docs.docker.com/docker-for-mac/install/)\n   - [Install Docker Desktop on Windows](https://docs.docker.com/desktop/install/windows-install/)\n   - [Install Docker Desktop on Linux](https://docs.docker.com/desktop/install/linux-install/)\n- [Python](https://www.python.org/downloads/)\n\nInstall the package:\n```bash\n# Clone this repository and install the code\ngit clone https://github.com/zakuro-ai/sakura\n\n# Go into the repository\ncd sakura\n```\n\n# Makefile commands\nExhaustive list of make commands:\n```\nbuild_wheel\ninstall_wheels\nbuild_dockers\nsandbox\n```\n# Environments\n\n## Docker\n\n> **Note**\n> \n> Running this application by using Docker is recommended.\n\nLaunch a docker image\n```\nmake sandbox\n```\n\n## PythonEnv\n\n> **Warning**\n> \n> Running this application by using PythonEnv is possible but *not* recommended.\n```\nsudo apt install libopenmpi-dev && \\\n    pip install dist/*.whl  --extra-index-url https://download.pytorch.org/whl/cu116 && \\\n    make install_wheels\n```\n\n# Running the application\n\n```python\nsakura -m mnist_demo\n```\nYou should be able to see this output with no delay between epochs (asynchronous testing).\n```\n   _____           _                               __  __   _      \n  / ____|         | |                             |  \\/  | | |     \n | (___     __ _  | | __  _   _   _ __    __ _    | \\  / | | |     \n  \\___ \\   / _` | | |/ / | | | | | '__|  / _` |   | |\\/| | | |     \n  ____) | | (_| | |   <  | |_| | | |    | (_| |   | |  | | | |____ \n |_____/   \\__,_| |_|\\_\\  \\__,_| |_|     \\__,_|   |_|  |_| |______|\n\n(0) MNIST | Epoch: 1/10 | Acc: 0.0000 / (0.0000) | Loss:0.0000 / (0.0000): 100%|██████████| 18/18 [00:06<00:00,  2.69it/s]\n(1) MNIST | Epoch: 2/10 | Acc: 0.0000 / (0.0000) | Loss:0.0000 / (0.0000): 100%|██████████| 18/18 [00:05<00:00,  3.36it/s]\n(2) MNIST | Epoch: 3/10 | Acc: 90.4600 / (90.4600) | Loss:0.4034 / (0.4034): 100%|██████████| 18/18 [00:05<00:00,  3.42it/s]\n(3) MNIST | Epoch: 4/10 | Acc: 95.3246 / (95.3246) | Loss:0.1907 / (0.1907): 100%|██████████| 18/18 [00:05<00:00,  3.43it/s]\n(4) MNIST | Epoch: 5/10 | Acc: 96.9332 / (96.9332) | Loss:0.1379 / (0.1379): 100%|██████████| 18/18 [00:05<00:00,  3.38it/s]\n(5) MNIST | Epoch: 6/10 | Acc: 97.3693 / (97.3693) | Loss:0.1167 / (0.1167): 100%|██████████| 18/18 [00:05<00:00,  3.42it/s]\n(6) MNIST | Epoch: 7/10 | Acc: 97.7237 / (97.7237) | Loss:0.1040 / (0.1040): 100%|██████████| 18/18 [00:05<00:00,  3.41it/s]\n(7) MNIST | Epoch: 8/10 | Acc: 98.0172 / (98.0172) | Loss:0.0938 / (0.0938): 100%|██████████| 18/18 [00:05<00:00,  3.31it/s]\n(8) MNIST | Epoch: 9/10 | Acc: 98.2402 / (98.2402) | Loss:0.0886 / (0.0886): 100%|██████████| 18/18 [00:05<00:00,  3.41it/s]\n```\n\nFYI the meaning of the above notation is:\n```\n([best_epoch]) [name_exp] | Epoch: [current]/[total] | Acc: [current_test_acc] / ([best_test_acc]) | Loss:[current_test_loss] / ([best_test_loss]): 100%|███| [batch_k]/[batch_n] [[time_train]<[time_left], [it/s]]\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://zakuro.ai",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sakura-ml",
    "package_url": "https://pypi.org/project/sakura-ml/",
    "platform": "linux_debian_10_x86_64",
    "project_url": "https://pypi.org/project/sakura-ml/",
    "project_urls": {
      "Homepage": "https://zakuro.ai"
    },
    "release_url": "https://pypi.org/project/sakura-ml/0.1.1/",
    "requires_dist": [
      "tqdm (>=4.64.0)",
      "torch",
      "torchvision",
      "numpy",
      "gnutools-python",
      "mpi4py",
      "six",
      "bson"
    ],
    "requires_python": ">=3.6",
    "summary": "Sakura provides asynchronous training for DNN.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15178743,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a2efd767ddb98becaebe78e668f828b7a3b1ed584edf934e0e16a615742592b",
          "md5": "10b36df93daaa56a5fe345766e133a05",
          "sha256": "552ebfb8e8cd5c0e18318b5a062db33e4a7d1e25b691254cb424aae17dc3ab9f"
        },
        "downloads": -1,
        "filename": "sakura_ml-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10b36df93daaa56a5fe345766e133a05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4431,
        "upload_time": "2021-03-30T03:08:52",
        "upload_time_iso_8601": "2021-03-30T03:08:52.925238Z",
        "url": "https://files.pythonhosted.org/packages/6a/2e/fd767ddb98becaebe78e668f828b7a3b1ed584edf934e0e16a615742592b/sakura_ml-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3154384f652e1deb50346fa2b2beccb83b178228761d4176986d842b4f6df741",
          "md5": "377ed839c5e80867ffbd810bd558e76a",
          "sha256": "fc773036a514743cc87c983c5a7175fc0e941c0d78fd83469724d57e79ca62cd"
        },
        "downloads": -1,
        "filename": "sakura_ml-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "377ed839c5e80867ffbd810bd558e76a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4645,
        "upload_time": "2021-04-09T02:14:36",
        "upload_time_iso_8601": "2021-04-09T02:14:36.109221Z",
        "url": "https://files.pythonhosted.org/packages/31/54/384f652e1deb50346fa2b2beccb83b178228761d4176986d842b4f6df741/sakura_ml-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "903cb089eade2cda3e2b9c0276368b501136c54ca75d3c58c7afcc82416d038c",
          "md5": "05f2b7c3eb51c296593abe806e678675",
          "sha256": "bab1f800d43f21f40c47b27a678204bfa52a673180a819b3a1a1454f18e86507"
        },
        "downloads": -1,
        "filename": "sakura_ml-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05f2b7c3eb51c296593abe806e678675",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4647,
        "upload_time": "2021-04-09T03:54:42",
        "upload_time_iso_8601": "2021-04-09T03:54:42.008537Z",
        "url": "https://files.pythonhosted.org/packages/90/3c/b089eade2cda3e2b9c0276368b501136c54ca75d3c58c7afcc82416d038c/sakura_ml-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "457b8b60afaa935a4b80932685c9852248e965fb9b16454ed098b3ebf24559eb",
          "md5": "2b3a175727b51500df5ceeec649a9b96",
          "sha256": "d1ee03a6bf632ce6f53da21a29ddbc71922448378da25d0a9636c7a0f13ef99e"
        },
        "downloads": -1,
        "filename": "sakura_ml-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b3a175727b51500df5ceeec649a9b96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4448,
        "upload_time": "2021-04-13T03:51:33",
        "upload_time_iso_8601": "2021-04-13T03:51:33.236264Z",
        "url": "https://files.pythonhosted.org/packages/45/7b/8b60afaa935a4b80932685c9852248e965fb9b16454ed098b3ebf24559eb/sakura_ml-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b131f940925db2474275dfedef8b9533a0f08630745d79550adb15fb43a0c947",
          "md5": "1cff3f515bddbecdfb22df913a6763ae",
          "sha256": "8909c57915dd58ee81cae3dae52b075f9b8292e5cdfa3555e73f7e00b9ff1ac3"
        },
        "downloads": -1,
        "filename": "sakura_ml-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cff3f515bddbecdfb22df913a6763ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 4823,
        "upload_time": "2022-08-07T08:41:09",
        "upload_time_iso_8601": "2022-08-07T08:41:09.668808Z",
        "url": "https://files.pythonhosted.org/packages/b1/31/f940925db2474275dfedef8b9533a0f08630745d79550adb15fb43a0c947/sakura_ml-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "749ff9dec151f84fa485c1901845f94f53ee2f2e9d66dbd63fde2893f429db07",
          "md5": "8f793f8e7205e466dbad2af184d2e8f0",
          "sha256": "1ba0f0b364e181a4ea3a2009f8fd580cdee3fa56fffae24dce5de0fb2dbd653b"
        },
        "downloads": -1,
        "filename": "sakura_ml-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f793f8e7205e466dbad2af184d2e8f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7298,
        "upload_time": "2022-09-22T12:44:41",
        "upload_time_iso_8601": "2022-09-22T12:44:41.838832Z",
        "url": "https://files.pythonhosted.org/packages/74/9f/f9dec151f84fa485c1901845f94f53ee2f2e9d66dbd63fde2893f429db07/sakura_ml-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "749ff9dec151f84fa485c1901845f94f53ee2f2e9d66dbd63fde2893f429db07",
        "md5": "8f793f8e7205e466dbad2af184d2e8f0",
        "sha256": "1ba0f0b364e181a4ea3a2009f8fd580cdee3fa56fffae24dce5de0fb2dbd653b"
      },
      "downloads": -1,
      "filename": "sakura_ml-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8f793f8e7205e466dbad2af184d2e8f0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7298,
      "upload_time": "2022-09-22T12:44:41",
      "upload_time_iso_8601": "2022-09-22T12:44:41.838832Z",
      "url": "https://files.pythonhosted.org/packages/74/9f/f9dec151f84fa485c1901845f94f53ee2f2e9d66dbd63fde2893f429db07/sakura_ml-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}