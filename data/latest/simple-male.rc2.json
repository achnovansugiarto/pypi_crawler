{
  "info": {
    "author": "Ray Yang",
    "author_email": "yangruipis@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "\n<center>\n<img src=\"./docs/imgs/logo2.png\" width=\"100%\" height=\"100%\" />\n</center>\n\n\nSimple Machine Learning\n\n一个简单的机器学习算法实现\n\n\n![](https://img.shields.io/pypi/v/simple_male.svg) [![Build Status](https://travis-ci.org/Yangruipis/simple_ml.svg?branch=master)](https://travis-ci.org/Yangruipis/simple_ml) [![Coverage Status](https://coveralls.io/repos/github/Yangruipis/simple_ml/badge.svg?branch=master)](https://coveralls.io/github/Yangruipis/simple_ml?branch=master)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/00c639db60364d12b0102456552fe806)](https://www.codacy.com/app/Yangruipis/simpleML?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Yangruipis/simpleML&amp;utm_campaign=Badge_Grade)\n\n![](https://img.shields.io/npm/l/express.svg) [![Join the chat at https://gitter.im/simple_ml/Lobby](https://badges.gitter.im/simple_ml/Lobby.svg)](https://gitter.im/simple_ml/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n---\n\n\n# 快速开始\n\n## 安装\n\n**环境和依赖库**\n- python3.5及以上\n- windows or Linux\n- numpy      (数组)\n- matplotlib (作图)\n- scipy      (求解优化问题)\n- requests   (用于在线数据集获取)\n- cvxopt    (支持向量机中的二次规划问题)\n\n`强烈推荐Anaconda环境`\n\n**pip安装**\n\n```bash\npip install simple_male\n```\n对，是`simple_ma(chine)le(arning)`，简单男人，因为`simple_ml`已经在pypi上被人注册了喵\n\n**git安装**\n\n```bash\ngit clone https://github.com/Yangruipis/simple_ml.git\ncd ./simple_ml\npython setup.py install\n```\n\n## 使用\n\n```python\n# 一个简单的例子，用CART树进行二分类\nfrom simple_ml.tree import CART\nimport numpy as np\n\nX = np.array([[1,1.1],\n              [1,2.0],\n              [0,3.0],\n              [0,2.2]])\ny = np.array([1,1,0,0])\ncart = CART(min_samples_leaf=1)\ncart.fit(X, y)\nx_test = np.array([[1,2],[3,4]])\nprint(cart.predict(x_test))\n```\n```python\nOut[1]: np.array([1,1])\n```\n\n- `./simple_ml/examples`文件夹中提供了大多数方法的使用范例\n- 更详细的用法见帮助文档： [https://yangruipis.github.io/simple_ml/](https://yangruipis.github.io/simple_ml/)\n\n# 它能做什么\n\n## 最最最最主要的任务\n\n如果你同时满足：\n1. **机器学习入门阶段**\n2. **python 进阶阶段**\n\n那么恭喜你，这个项目可以给你提供如下帮助：\n\n- **阅读源码**， 不像sklearn过于复杂难读的源码，这个轻量级的项目非常易读，并且我尽可能的增加了注释，提高代码的可读性\n- **学习知识**，该项目梳理基本机器学习算法的种类和流程，工程实现上的大致步骤，中间出现的一些细节问题以及如何解决\n- **实时交流**，我在 gitter 上建立了 [gitchat 聊天室](https://gitter.im/simple_ml/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)，欢迎大家就项目本身的具体问题，或者其他任何相关事项进行讨论，欢迎大家积极提 issues，我会第一时间回复\n\n\n## 作为一个机器学习项目的任务\n\n### 1. 数据和特征\n\n#### 1.1 数据集获取\n\n`simple_ml`提供了大量经典的机器学习数据集的获取接口`DataCollector`，数据集来自[UCI](http://archive.ics.uci.edu/ml/index.php)。\n\n#### 1.2 数据预处理\n\n`simple_ml` 提供了常用的数据预处理方法，包括了编码、独热编码、缺失值处理、异常值处理以及随机数据集划分等。\n\n同时，`simple_ml` 提供了`PCA`降维方法以及针对高维数据的`SuperPCA`降维方法。\n\n#### 1.3 特征选择\n`simple_ml`提供了Filter和Embedded两种特征选择方法，包括了：\n1. 方差法\n2. 相关系数法\n3. 卡方检验法\n4. L1正则\n5. GBDT特征选择\n\n### 2. 模型\n\n#### 2.1 二分类\n`simple_ml`提供了非常多的二分类方法，以[wine数据集](http://archive.ics.uci.edu/ml/datasets/Wine)为例（见`./simple_ml/examples`），分类效果和方法名称见图1。\n\n<center>\n<img src=\"./docs/imgs/wine.jpg\"  />\n\n图 1. 二分类效果图\n</center>\n\n#### 2.2 多分类\n\n`simple_ml`暂时只提供了一些多分类算法，见下图，同样是[wine数据集](http://archive.ics.uci.edu/ml/datasets/Wine)，后面作者将会进行补充。\n\n<center>\n<img src=\"./docs/imgs/wine2.jpg\" />\n\n图 2. 多分类效果图\n</center>\n\n\n#### 2.3 回归\n\n`simple_ml`提供了回归方法如下\n- `MultiRegression`\n- `CART`\n- `GBDT`\n- `SVR`\n\n#### 2.4 聚类\n\n`simple_ml`提供了`K-means聚类`和`层次聚类`两种聚类方法\n\n`注:`以上所有图均为simple_ml直出（需要matplotlib）\n\n### 3. 效果评价\n\n包括了分类和回归作图、以及针对二分类、多分类、回归问题的评价指标计算，包括Precision, Recall等等\n\n# 为什么会有这个项目 & 致谢\n\n作者就读于上海某商科院校经济学，从大二开始接触数据挖掘，以及编程相关知识（stata->R->C#->python)，对数据和编程非常感兴趣，基本上一路走过来全靠自学。作者希望可以用心做好一个项目，记录自己学习的轨迹，尤其是即将毕业之际。\n\n在接下来的一年找工作的同时，作者将尽全力维护该项目，不断更新和修改，热烈欢迎任何贡献和讨论。\n\n**致谢：**\n- 首先感谢我自己，一路走来的不易如人饮水\n- 其次感谢我的好友[何燕杰](https://github.com/YanjieHe)和[程刚](https://github.com/chenggang0815)对我在学习和工作上的帮助\n- 最后感谢所有相关书籍、博客的作者，尤其感谢[刘建平Pinard](https://www.cnblogs.com/pinard/)一丝不苟的机器学习博客，无论是知识还是态度，都令人肃然起敬\n\n\n# 更新日志\n\n- 2018-04-20\n  - 加入BP神经网络算法`simple.neural_network`和相关的example\n  - 更新github pages\n- 2018-04-23\n  - 加入`Stacking model`\n  - 更新每个模型的new()函数\n  - 重写`BaseModel`的`predict`和`score`抽象方法，以检查测试集是否满足要求\n  - fix SuperPCA bugs\n- 2018-04-24\n  - 加入类：\n    `Multi2binary`，继承该类的`BaseClassifier`可以将多分类问题转为二分类问题\n  - 添加SVM， Logistic，NeuralNetwork, AdaBoost 的继承关系和多分类方法\n  - 增加相关的多分类例子，以及帮助文档\n  - 重写特征类型推断函数，根据多种线索进行推断\n- 2018-04-26\n  - 重写自动化模块`auto`，实现`BaseAuto`抽象类以及数据自动预处理的`AutoDataHandle`类\n  - 加入网格搜索方法\n  - 加入[宫颈癌数据](https://archive.ics.uci.edu/ml/datasets/Cervical+cancer+%28Risk+Factors%29)的完整处理Example\n  - 加入`helper`模块，用于格式化输出\n  - 加入`data_handle`模块的缺失值统计方法`nan_summary`\n- 2018-04-27\n  - 加入自动特征选择类 `AutoFeatureHandle` ，以及对应的宫颈癌Example\n- 2018-06-11\n  - 加入回归作图方法\n- 2018-06-12\n  - 加入多元回归方法`MultiRegression`并测试\n  - `MultiRegression`中加入加权回归方法\n- 2018-06-13\n  - 重写支持向量机`SVM`，调用优化库进行求解，而不是手写SMO\n  - 加入支持向量回归`SVR`\n  - 整个支持向量相关算法,包括了`Kernel`类, `BaseSupportVector`类以及`SVM`,`SVR`\n- 2018-06-20\n  - 添加相关测试用例\n- 2018-06-23\n  - 添加`optimal`模块，包括了爬山法和模拟退火法进行最小值求解\n  - pypi发布，版本 `0.1.2`\n\n# TODO list:\n\n- [ ] test cases\n- [x] an efficient bp network\n- [ ] more optimal methods\n- [x] train test split func in helper\n- [x] other feature select method to add\n- [x] lasso and Ridge\n- [x] add GBDT feature select\n- [x] update Readme\n- [x] setup.py\n- [x] examples\n- [x] get more datasets\n- [x] regression plot\n- [x] more regression method\n- [ ] kd_tree\n- [x] Support Machine Regression\n- [x] more metrics\n- [x] github pages, especially the class map\n- [x] stacking\n- [x] 二分类转多分类器\n- [x] recognize nan and inf\n- [x] check x before predict, check x and y before score\n- [x] \"self.new()\" function in each model\n- [x] 支持向量相关算法测试和文档撰写\n- [ ] pypi发布\n- [ ] 移除logistic.py 中对scipy的依赖,自己写fmin(),以及实现底层优化算法\n- [ ] LSTM\n\n# TODO List AUTO MODEL\n\n- [x] auto data handle\n- [x] auto feature select\n- [ ] auto param select\n- [ ] auto model select\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://yangruipis.github.io/simple_ml/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simple_male",
    "package_url": "https://pypi.org/project/simple_male/",
    "platform": "",
    "project_url": "https://pypi.org/project/simple_male/",
    "project_urls": {
      "Homepage": "https://yangruipis.github.io/simple_ml/"
    },
    "release_url": "https://pypi.org/project/simple_male/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A machine learning algorithm implementation",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3992455,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be38b2a9530b50ed66cbedc80dc88f9cd52f72fa4e788ed3683acbce1699814b",
          "md5": "aab7400a42e3e6359f543e01470e29d2",
          "sha256": "3ee016c84a427f241fc1f87ba0d505730e56e2237592ad1a64250c9bc8cc61e0"
        },
        "downloads": -1,
        "filename": "simple_male-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aab7400a42e3e6359f543e01470e29d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1592996,
        "upload_time": "2018-06-13T11:10:42",
        "upload_time_iso_8601": "2018-06-13T11:10:42.032999Z",
        "url": "https://files.pythonhosted.org/packages/be/38/b2a9530b50ed66cbedc80dc88f9cd52f72fa4e788ed3683acbce1699814b/simple_male-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caedaf7b7310b56161f2fc8d4e79caa31488c6530bf5066ace973452234a59a5",
          "md5": "d58d0fd6080c8e09ced2ee174c0c2464",
          "sha256": "06dea56debe6289d9daa5535d5726f1fc036e48176fe4f9fd4cfb3f96cbc7f6d"
        },
        "downloads": -1,
        "filename": "simple_male-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d58d0fd6080c8e09ced2ee174c0c2464",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1595825,
        "upload_time": "2018-06-23T07:59:51",
        "upload_time_iso_8601": "2018-06-23T07:59:51.249143Z",
        "url": "https://files.pythonhosted.org/packages/ca/ed/af7b7310b56161f2fc8d4e79caa31488c6530bf5066ace973452234a59a5/simple_male-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "caedaf7b7310b56161f2fc8d4e79caa31488c6530bf5066ace973452234a59a5",
        "md5": "d58d0fd6080c8e09ced2ee174c0c2464",
        "sha256": "06dea56debe6289d9daa5535d5726f1fc036e48176fe4f9fd4cfb3f96cbc7f6d"
      },
      "downloads": -1,
      "filename": "simple_male-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d58d0fd6080c8e09ced2ee174c0c2464",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1595825,
      "upload_time": "2018-06-23T07:59:51",
      "upload_time_iso_8601": "2018-06-23T07:59:51.249143Z",
      "url": "https://files.pythonhosted.org/packages/ca/ed/af7b7310b56161f2fc8d4e79caa31488c6530bf5066ace973452234a59a5/simple_male-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}