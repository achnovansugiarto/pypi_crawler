{
  "info": {
    "author": "Florian Dubost",
    "author_email": "floriandubost1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1>Bstrap: A Python Package for confidence intervals and hypothesis testing using bootstrapping.</h1>\n\nYou are an **amazing machine learning researcher**.\n\nYou invented a new **super cool method**.\n\nYou are **not sure that it is significantly better** than your baseline.\n\nYou don't have 3000 GPUs to rerun your experiment and check it out.\n\nThen, what you want to do is **bootstrap your results**!\n\nThe bstrap package allows you to compare two methods and claim that one is better than the other.\n\n## Installation\n\n```bash\npip install bstrap\n```\nThat's all you need, really.\n\nMaybe tough, you can still read the instructions and check out the examples to make sure you get it right...\n\n## Features\nBootstrapping is a simple method to compute statistics over your custom metrics, using only one run of the method for each sample in your evaluation set. It has the advantage of being very versatile, and can be used with any metric really. \n\n<ul>\n  <li>Bootstrapping for computation of confidence interval</li>\n  <li>Bootstrapping for hypothesis testing (claim that one method is better than another for a given metric)</li>\n  <li>Supports metrics that can be computed sample-wise and metrics that cannot.</li>\n</ul>\n\nKeep in mind: non-overlapping confidence intervals means that there is a significant statistical difference. Overlapping confidence intervals does not mean that there is no significant statistical difference. To verify this further, you will need to compute the bootstrap hypothesis testing and check the p-value.\n\n## Instructions\n\nYou will need to implement your metric and provide the data sample-wise as a single Pandas dataframe for each method. That's about it.\nYour metric is more complex than simply averaging results for each sample? For example, you cannot compute sample-wise, maybe like AUC or mAP? Then just give your predictions and ground truths sample-wise, which also works with Boostrap. \n\nTo use this code, you need to:\n\n<ol>\n  <li>Implement your own metric: should take the one pandas dataframe of data as input and return a scalar value.</li>\n  <li>Load your data.</li>\n  <li>Reformat data to a single pandas dataframe per method with standardized column names, and one sample per row.</li>\n  <li>Check that your estimates (confidence interval and p-value) are stable over several runs of the bootstrapping method. If the estimates are not stable, increase nbr_runs</li>\n</ol>\n\nEnjoy!\n\n## Usage\n\nYou can find example dataframes under src/bstrap/example_dataframes.\n\n#### Example 1: Mean metric \n```python\nimport pandas as pd\nimport numpy as np\nfrom bstrap import bootstrap, boostrapping_CI\n\n# 1. implement metric\nmetric = np.mean\n\n# 2. load data\ndf = pd.read_csv(\"example_dataframes/example_dataframe_mean.csv\")\n\n# 3. reformat data to a single pandas dataframe per method\ndata_method1 = df[\"loss_method_1\"]\ndata_method2 = df[\"loss_method_2\"]\n\n# 4. compare method 1 and 2\nstats_method1, stats_method2, p_value = bootstrap(metric, data_method1, data_method2, nbr_runs=1000)\nprint(stats_method1)\nprint(stats_method2)\nprint(p_value)\n\n# compute CI and mean for each method separately\nstats_method1 = boostrapping_CI(metric, data_method1, nbr_runs=1000)\nstats_method2 = boostrapping_CI(metric, data_method2, nbr_runs=1000)\nprint(stats_method1)\nprint(stats_method2)\n```\n\n#### Example 2: F1 score\n\n```python\nimport pandas as pd\nimport sys\nfrom bstrap import bootstrap, boostrapping_CI\n\n# 1. implement metric\ndef compute_f1(data):\n    val_target = data[\"gt\"].astype('bool')\n    val_predict = data[\"predictions\"].astype('bool')\n    tp = np.count_nonzero(val_target * val_predict)\n    fp = np.count_nonzero(~val_target * val_predict)\n    fn = np.count_nonzero(val_target * ~val_predict)\n    return tp * 1. / (tp + 0.5 * (fp + fn) + sys.float_info.epsilon)\nmetric = compute_f1\n\n# 2. load data\ndf = pd.read_csv(\"example_dataframes/example_dataframe_f1.csv\")\n\n# 3. reformat data to a single pandas dataframe per method with standardized column names\ndata_method1 = df[[\"gt\", \"method1\"]]\ndata_method1 = data_method1.rename(columns={\"method1\": \"predictions\"})\ndata_method2 = df[[\"gt\", \"method2\"]]\ndata_method2 = data_method2.rename(columns={\"method2\": \"predictions\"})\n\n# 4. compare method 1 and 2 (same code as example 1)\nstats_method1, stats_method2, p_value = bootstrap(metric, data_method1, data_method2, nbr_runs=1000)\nprint(stats_method1)\nprint(stats_method2)\nprint(p_value)\n\n# compute CI and mean for each method separately (same code as example 1)\nstats_method1 = boostrapping_CI(metric, data_method1, nbr_runs=1000)\nstats_method2 = boostrapping_CI(metric, data_method2, nbr_runs=1000)\nprint(stats_method1)\nprint(stats_method2)\n```\n\n#### Example 3: AUC\n```python\nimport pandas as pd\nfrom sklearn.metrics import auc, roc_curve\nfrom bstrap import bootstrap, boostrapping_CI\n\n# 1. implement metric\ndef compute_auc(data):\n    fpr, tpr, thresholds = roc_curve(data[\"gt\"], data[\"predictions\"], pos_label=1)\n    return auc(fpr, tpr)\nmetric = compute_auc\n\n# 2. load data\ndf = pd.read_csv(\"example_dataframes/example_dataframe_auc.csv\")\n\n# 3. reformat data to a single pandas dataframe per method with standardized column names\ndata_method1 = df[[\"gt\", \"method1\"]]\ndata_method1 = data_method1.rename(columns={\"method1\": \"predictions\"})\ndata_method2 = df[[\"gt\", \"method2\"]]\ndata_method2 = data_method2.rename(columns={\"method2\": \"predictions\"})\n\n# 4. compare method 1 and 2 (same code as example 1)\nstats_method1, stats_method2, p_value = bootstrap(metric, data_method1, data_method2, nbr_runs=1000)\nprint(stats_method1)\nprint(stats_method2)\nprint(p_value)\n\n# compute CI and mean for each method separately (same code as example 1)\nstats_method1 = boostrapping_CI(metric, data_method1, nbr_runs=1000)\nstats_method2 = boostrapping_CI(metric, data_method2, nbr_runs=1000)\nprint(stats_method1)\nprint(stats_method2)\n```\n\n#### Example 4: Multiclass: mean Average Precision (mAP)\n\n```python\nimport pandas as pd\nfrom sklearn.metrics import roc_curve\nfrom bstrap import bootstrap, boostrapping_CI\n\n# 1. implement metric\ndef compute_mAP(data):\n    gt = data[[column for column in data.columns if 'gt' in column]]\n    predictions = data[[column for column in data.columns if 'pred' in column]]\n    return average_precision_score(gt, predictions, average='weighted')\nmetric = compute_mAP\n\n# 2. load data\ngt = pd.read_csv(\"example_dataframes/example_dataframe_mAP_gt.csv\")\npredictions_method1 = pd.read_csv(\"example_dataframes/example_dataframe_mAP_predictions_method1.csv\")\npredictions_method2 = pd.read_csv(\"example_dataframes/example_dataframe_mAP_predictions_method2.csv\")\n\n# 3. reformat data to a single pandas dataframe per method with standardized column names\ngt = gt.rename(columns=dict([(column, 'gt_' + column) for column in gt.columns]))\npredictions_method1 = predictions_method1.rename(\n    columns=dict([(column, 'pred_' + column) for column in predictions_method1.columns]))\npredictions_method2 = predictions_method2.rename(\n    columns=dict([(column, 'pred_' + column) for column in predictions_method2.columns]))\ndata_method1 = pd.concat([gt, predictions_method1], axis=1)\ndata_method2 = pd.concat([gt, predictions_method2], axis=1)\n\n# 4. compare method 1 and 2 (same code as example 1)\nstats_method1, stats_method2, p_value = bootstrap(metric, data_method1, data_method2, nbr_runs=100)\nprint(stats_method1)\nprint(stats_method2)\nprint(p_value)\n\n# compute CI and mean for each method separately (same code as example 1)\nstats_method1 = boostrapping_CI(metric, data_method1, nbr_runs=100)\nstats_method2 = boostrapping_CI(metric, data_method2, nbr_runs=100)\nprint(stats_method1)\nprint(stats_method2)\n```\n\n<b>Reference:</b><br/>\nEfron, B. and Tibshirani, R.J., 1994. An introduction to the bootstrap. CRC press.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fpgdubost/bstrap",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bstrap",
    "package_url": "https://pypi.org/project/bstrap/",
    "platform": "",
    "project_url": "https://pypi.org/project/bstrap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/fpgdubost/bstrap/issues",
      "Homepage": "https://github.com/fpgdubost/bstrap"
    },
    "release_url": "https://pypi.org/project/bstrap/0.0.9/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A package to perform hypothesis testing and compute confidence intervals using bootstrapping.",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11257528,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "699021643a295dd8a161cf183847a444c8926c9e1007ccd51a113dd6b10a1453",
          "md5": "05edadd0621d47342b6bd389dab731b4",
          "sha256": "23aa8d219e595277bb789c2c4fc54f2db5c3f0cc354355d05ab667090c456d8e"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05edadd0621d47342b6bd389dab731b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6540,
        "upload_time": "2021-08-21T22:31:01",
        "upload_time_iso_8601": "2021-08-21T22:31:01.711950Z",
        "url": "https://files.pythonhosted.org/packages/69/90/21643a295dd8a161cf183847a444c8926c9e1007ccd51a113dd6b10a1453/bstrap-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc203576293640eb94cdf37052ab47c4fc50b325a7b649e17d8996a36665646c",
          "md5": "01c14a76561c2b9e08135753ac22411a",
          "sha256": "e9cf3602510bc48f82416ebb69e841ee6f9732ddd108b1f848799699c7135991"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "01c14a76561c2b9e08135753ac22411a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5658,
        "upload_time": "2021-08-21T22:31:03",
        "upload_time_iso_8601": "2021-08-21T22:31:03.717282Z",
        "url": "https://files.pythonhosted.org/packages/fc/20/3576293640eb94cdf37052ab47c4fc50b325a7b649e17d8996a36665646c/bstrap-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7081e722f8a8b83f99a822bdeff5451bf88712c9368c057d9613b542daa53cf",
          "md5": "84f6dd74cbebf031025f9b021980be42",
          "sha256": "98184d5c4f5f79ba9c08fc855419d2a094cd914f07c152a3b45dae61e6832300"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84f6dd74cbebf031025f9b021980be42",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6541,
        "upload_time": "2021-08-21T22:35:19",
        "upload_time_iso_8601": "2021-08-21T22:35:19.950192Z",
        "url": "https://files.pythonhosted.org/packages/d7/08/1e722f8a8b83f99a822bdeff5451bf88712c9368c057d9613b542daa53cf/bstrap-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c89c73087b13fdc1040fb04085dc7d7f100560c5d0b909baafd9e9312db70cac",
          "md5": "6d7f5a94088524112ad2660c76df8902",
          "sha256": "0d73282e6957abe6a1e3216f5b2bf8d7485656ee43a6f03982720d0fb454d42c"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6d7f5a94088524112ad2660c76df8902",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5658,
        "upload_time": "2021-08-21T22:35:21",
        "upload_time_iso_8601": "2021-08-21T22:35:21.190659Z",
        "url": "https://files.pythonhosted.org/packages/c8/9c/73087b13fdc1040fb04085dc7d7f100560c5d0b909baafd9e9312db70cac/bstrap-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1dc15cea20431cc3cd10a0201b0e61450ee39c371704245fa0f5d7d084f9a56",
          "md5": "f23f681e899443a461055946bf17c8fe",
          "sha256": "e9abe874d2d9879b245c945b4e5c0f1d21fba4b558e38d093986113143870e15"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f23f681e899443a461055946bf17c8fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6534,
        "upload_time": "2021-08-21T22:44:36",
        "upload_time_iso_8601": "2021-08-21T22:44:36.202087Z",
        "url": "https://files.pythonhosted.org/packages/b1/dc/15cea20431cc3cd10a0201b0e61450ee39c371704245fa0f5d7d084f9a56/bstrap-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85eaadf01dcf7d61739f5dc03892d90437a7066ee67f840318ad4afa9b5e46fd",
          "md5": "b7eacdf141e147a7a904aa54085f0798",
          "sha256": "5eff23074112825a047fc26428753e19b17b638fa3c3cd83b2ecbaddbe153bd4"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b7eacdf141e147a7a904aa54085f0798",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5673,
        "upload_time": "2021-08-21T22:44:38",
        "upload_time_iso_8601": "2021-08-21T22:44:38.312310Z",
        "url": "https://files.pythonhosted.org/packages/85/ea/adf01dcf7d61739f5dc03892d90437a7066ee67f840318ad4afa9b5e46fd/bstrap-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d06b3cf955705c8a3d2924ab5c63fddc94584c265083896ab507af72d6c1fc6d",
          "md5": "e53ec2093294e3253018ba4ef3e27fe1",
          "sha256": "8faa76cbb60e66fcfdb14a1a7239d6e09a6fb23996aeb7e647e61d8190d933a7"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e53ec2093294e3253018ba4ef3e27fe1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6535,
        "upload_time": "2021-08-21T22:48:52",
        "upload_time_iso_8601": "2021-08-21T22:48:52.929769Z",
        "url": "https://files.pythonhosted.org/packages/d0/6b/3cf955705c8a3d2924ab5c63fddc94584c265083896ab507af72d6c1fc6d/bstrap-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7cb4a6a05a66641228ee4b0b8bfae0e0542821d843a4156a4093e605b47add5",
          "md5": "5b4bfb06384d02d3426662cd7b335960",
          "sha256": "7da48463f730d21f29fb6389679df9a97fb2fc0995527223b5079631cd85d769"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "5b4bfb06384d02d3426662cd7b335960",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5668,
        "upload_time": "2021-08-21T22:48:54",
        "upload_time_iso_8601": "2021-08-21T22:48:54.106387Z",
        "url": "https://files.pythonhosted.org/packages/a7/cb/4a6a05a66641228ee4b0b8bfae0e0542821d843a4156a4093e605b47add5/bstrap-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "219085b2dee4b5d7b245792fa6f1d3ab06c4e1056db9805cf5fcaf94c0a73af4",
          "md5": "071e0e39ab678918b8f32f3a1e691c11",
          "sha256": "ac125c3f5822fbf025bf26c90cd74fcc8441681c9d7b87e1f00faef1de01a1d4"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "071e0e39ab678918b8f32f3a1e691c11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6524,
        "upload_time": "2021-08-21T22:54:11",
        "upload_time_iso_8601": "2021-08-21T22:54:11.432803Z",
        "url": "https://files.pythonhosted.org/packages/21/90/85b2dee4b5d7b245792fa6f1d3ab06c4e1056db9805cf5fcaf94c0a73af4/bstrap-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5108ee3c7e9dd84496162c32c3188d212a48acaeac1d4e47d371024bb4a1801f",
          "md5": "b48a3bb8fb5364bac8403479c2926fc7",
          "sha256": "effc50c7132fdc650e94a121fc1350c20290c3b82d5ea97c55961fe27709ec65"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "b48a3bb8fb5364bac8403479c2926fc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5662,
        "upload_time": "2021-08-21T22:54:13",
        "upload_time_iso_8601": "2021-08-21T22:54:13.083619Z",
        "url": "https://files.pythonhosted.org/packages/51/08/ee3c7e9dd84496162c32c3188d212a48acaeac1d4e47d371024bb4a1801f/bstrap-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a4056e6735a2c9509bafcdceead24fabc77a1f37befdc1b4d65fdf66a87b86f",
          "md5": "7303b4026fbbad560b99f8cf4d4b2999",
          "sha256": "d4ae68ab4f0dd902d328cbeea6e0a9c07bd4ee142cd044e731d165fc93b92a75"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7303b4026fbbad560b99f8cf4d4b2999",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6592,
        "upload_time": "2021-08-24T00:25:11",
        "upload_time_iso_8601": "2021-08-24T00:25:11.800726Z",
        "url": "https://files.pythonhosted.org/packages/0a/40/56e6735a2c9509bafcdceead24fabc77a1f37befdc1b4d65fdf66a87b86f/bstrap-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "161ba975216a2aff690ccc8e72d83f4a5271508f1c7a8c6024d59018a3ce8e24",
          "md5": "17011932b447a7f729934e89bd4c0f35",
          "sha256": "82e56aef03e9f4af1ea446a85a5b28e1dc1a061e7e1f43292c2a1ed1fc8aad0e"
        },
        "downloads": -1,
        "filename": "bstrap-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "17011932b447a7f729934e89bd4c0f35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5725,
        "upload_time": "2021-08-24T00:25:13",
        "upload_time_iso_8601": "2021-08-24T00:25:13.153154Z",
        "url": "https://files.pythonhosted.org/packages/16/1b/a975216a2aff690ccc8e72d83f4a5271508f1c7a8c6024d59018a3ce8e24/bstrap-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a4056e6735a2c9509bafcdceead24fabc77a1f37befdc1b4d65fdf66a87b86f",
        "md5": "7303b4026fbbad560b99f8cf4d4b2999",
        "sha256": "d4ae68ab4f0dd902d328cbeea6e0a9c07bd4ee142cd044e731d165fc93b92a75"
      },
      "downloads": -1,
      "filename": "bstrap-0.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7303b4026fbbad560b99f8cf4d4b2999",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6592,
      "upload_time": "2021-08-24T00:25:11",
      "upload_time_iso_8601": "2021-08-24T00:25:11.800726Z",
      "url": "https://files.pythonhosted.org/packages/0a/40/56e6735a2c9509bafcdceead24fabc77a1f37befdc1b4d65fdf66a87b86f/bstrap-0.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "161ba975216a2aff690ccc8e72d83f4a5271508f1c7a8c6024d59018a3ce8e24",
        "md5": "17011932b447a7f729934e89bd4c0f35",
        "sha256": "82e56aef03e9f4af1ea446a85a5b28e1dc1a061e7e1f43292c2a1ed1fc8aad0e"
      },
      "downloads": -1,
      "filename": "bstrap-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "17011932b447a7f729934e89bd4c0f35",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5725,
      "upload_time": "2021-08-24T00:25:13",
      "upload_time_iso_8601": "2021-08-24T00:25:13.153154Z",
      "url": "https://files.pythonhosted.org/packages/16/1b/a975216a2aff690ccc8e72d83f4a5271508f1c7a8c6024d59018a3ce8e24/bstrap-0.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}