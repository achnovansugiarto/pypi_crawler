{
  "info": {
    "author": "Ken Kundert",
    "author_email": "bw-export@nurdletech.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "*bw-export* — Export *Avendesora* Accounts to *BitWarden*\n=========================================================\n\n.. image:: https://pepy.tech/badge/bw-export/month\n    :target: https://pepy.tech/project/bw-export\n\n.. image:: https://img.shields.io/pypi/v/bw-export.svg\n    :target: https://pypi.python.org/pypi/bw-export\n\n.. image:: https://img.shields.io/pypi/pyversions/bw-export.svg\n    :target: https://pypi.python.org/pypi/bw-export\n\n\n| Authors: Ken Kundert\n| Version: 0.0.0\n| Released: 2022-06-19\n| Documentation: NurdleTech_.\n| Please post all questions, suggestions, and bug reports to: `Github issues`_.\n|\n\nThis utility allows you to export select accounts from Avendesora_ in a form \nthat can easily be imported into BitWarden_.  *Avendesora* is a very flexible \nand secure password manager for the Linux command line and *BitWarden* in an \nopen source commercial password manager supported on a wide variety of \nplatforms, such as *Windows*, *Mac*, *IOS*, and *Android*.\n\nThis package provides two programs.  *bw-csv-export* is the simpler of the two, \nit is less capable.  *bw-json-export* supports more *BitWarden’s* features and \ngenerally preferred.  Both allow you to export select accounts from *Avendesora* \ninto an interchange file that can be uploaded to the `BitWarden Web Portal`_, \nand from there the information syncs with all of your *BitWarden*-linked \ndevices.  If you are not comfortable sharing your account information with \n*BitWarden*, you can install and run your own `BitWarden server`_.\n\n\nInstallation\n------------\n\nInstall with::\n\n    pip install --user bw-export\n\nIt will install both *bw-csv-export* and *bw-json-export* to ~/.local/bin.\n\nYou can find the latest version of the source code on\nGithub_.\n\n\nbw-json-export\n--------------\n\nGenerates a JSON file (*bw.json*) suitable for uploading to a *BitWarden Vault*.\n\nUsage:\n    bw-json-export\n\nOnly those accounts with “bitwarden” field are exported. The “bitwarden” field \nis expected to be a dictionary that contain the fields to be exported.\nThe value may be a simple string or it may be a script, and in some cases it may \nbe a dictionary.\n\nA typical example is::\n\n    bitwarden = dict(\n        type = \"login\",\n        name = \"The Economist\",\n        urls = \"{urls}\",\n        username = \"{email}\",\n        password = \"{passcode}\",\n    )\n\nYou can add arbitrary fields using *fields* as represented by a NestedText_ \ndictionary::\n\n    bitwarden = dict(\n        type = \"login\",\n        name = \"Visa\",\n        fields = \"\"\"\n            holder: {name}\n            ccn: {ccn}\n            exp: {exp}\n            cvv: {cvv}\n            report: {support}\n        \"\"\",\n    )\n\nYou can also use a *Python* dictionary::\n\n    bitwarden = dict(\n        type = \"login\",\n        name = \"Visa\",\n        fields = dict(\n            holder = \"{name}\",\n            ccn = \"{ccn}\",\n            exp = \"{exp}\",\n            cvv = \"{cvv}\",\n            report = \"{support}\",\n        ),\n    )\n\nThere are four types of entries supported, and they accept the following \nfields::\n\n    1: login\n        name\n        username\n        password\n        totp\n        urls\n        fields\n        notes\n\n    2: secureNote\n        name\n        notes\n        fields\n\n    3: card\n        name\n        brand\n        holder\n        ccn\n        exp\n        cvv\n        fields\n        notes\n\n    4: identity\n        name\n        title\n        names\n        street\n        city\n        state\n        zip\n        country\n        email\n        phone\n        company\n        ssn\n        username\n        passport\n        license\n        fields\n        notes\n\nRunning *bw-json-export* creates the file: *bw.json*.\n\nOnce created, it can be imported from the *BitWarden* website \n(vault.bitwarden.com).  When importing, use “Bitwarden (json)” as the file \nformat.\n\nBy policy, *BitWarden* create duplicates of any imported accounts if they were \npreviously imported.  As such, you should delete existing accounts before \nre-importing to avoid duplicate accounts.  A convenient way of doing so would be \nto partition your BitWarden cards into two folders, one dedicated to accounts \nimported from Avendesora and one dedicated you your BitWarden native cards.  \nBefore importing, first delete all the entries in the “Avendesora” folder, and \nthen delete the folder itself  by clicking on it, a pencil icon will appear, \nclick on that, and then click on the trash can icon.  Importing will then create \na new “Avendesora” folder.\n\nAfter first run, a settings file is created in \n*~/.config/bw-json-export/settings.nt*.  You can use it to control the name of \nthe “Avendesora” folder.  The default value is “[Avendesora-]YYMMDD”.  The \ncharacters within the brackets is output verbatim and the remaining characters \nare interpreted as an `Arrow format`_.\n\nAfter importing your *bw.json* file you must delete it as it contains your \nsecrets in plain text.\n\n\nbw-csv-export\n-------------\n\nGenerates a CSV file (*bw.csv*) suitable for uploading to a *BitWarden Vault*.\n\nUsage::\n\n    bw-csv-export\n\nOnly those accounts with “bitwarden” field are exported. The “bitwarden” field \nis expected to be a dictionary that may contain the following fields: *folder*, \n*type*, *name*, *notes*, *fields*, *url*, *username*, *password*, and *totp*.  \nIf not given, they are left blank. Each value may be a simple string or a script.\n\nA typical example is::\n\n    bitwarden = dict(\n        type = \"login\",\n        name = \"The Economist\",\n        login_uri = \"{urls}\",\n        login_username = \"{email}\",\n        login_password = \"{passcode}\",\n    )\n\nYou can add arbitrary name-value pairs using *fields*::\n\n    bitwarden = dict(\n        type = \"login\",\n        name = \"Visa\",\n        fields = \"\"\"\n            holder: {name}\n            number: {ccn}\n            exp: {exp}\n            cvv: {cvv}\n            report: {support}\n        \"\"\",\n    )\n\nRunning *bw-csv-export* creates the file: *bw.csv*.\n\nOnce created, it can be imported from the *BitWarden Vault* website \n(vault.bitwarden.com).  When importing, use “Bitwarden (csv)” as the file \nformat.\n\nBy policy, *BitWarden* create duplicates of any imported accounts if they were \npreviously imported.  As such, you should delete existing accounts before \nre-importing to avoid duplicate accounts.  A convenient way of doing so would be \nto partition your BitWarden entries into two folders, one dedicated to accounts \nimported from Avendesora and one dedicated you your BitWarden native entries.  \nNormally you would keep the “No Folder” folder empty.  BitWarden places freshly \nimported accounts into “No Folder”.  You should then delete any existing \naccounts in the “Avendesora” folder and move all the new accounts in “No Folder” \nto the “Avendesora” folder.\n\nYou must then delete the *bw.csv* file as it can include your secrets in plain \ntext.\n\n.. _NurdleTech: http://nurdletech.com/linux-utilities/bw-export\n.. _Github: https://github.com/KenKundert/bw-export\n.. _Github issues: https://github.com/KenKundert/bw-export/issues\n.. _Avendesora: https://avendesora.readthedocs.io\n.. _BitWarden: https://bitwarden.com\n.. _BitWarden Web Portal: https://vault.bitwarden.com\n.. _BitWarden server: https://bitwarden.com/help/install-on-premise-linux\n.. _NestedText: https://nestedtext.org\n.. _Arrow format: https://arrow.readthedocs.io/en/latest/index.html#supported-tokens\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/kenkundert/bw-export/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://nurdletech.com/linux-utilities/bw-export",
    "keywords": "personal finance",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bw-export",
    "package_url": "https://pypi.org/project/bw-export/",
    "platform": null,
    "project_url": "https://pypi.org/project/bw-export/",
    "project_urls": {
      "Download": "https://github.com/kenkundert/bw-export/tarball/master",
      "Homepage": "http://nurdletech.com/linux-utilities/bw-export"
    },
    "release_url": "https://pypi.org/project/bw-export/0.0.0/",
    "requires_dist": [
      "inform (>=1.25)"
    ],
    "requires_python": ">=3.6",
    "summary": "export Avendesora accounts to BitWarden",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14179190,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fedf7680b7b7f5db9cf1cd7722f5db77a5d26faa2a70ccb67ac86408da0e0c32",
          "md5": "67058ca8c0da5fa102849b8fd1fd9f5f",
          "sha256": "4c64eb4a6b1d5d98f1f6c218d83aebfa4b8fb1586e74f929da8fde1b1412e594"
        },
        "downloads": -1,
        "filename": "bw_export-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "67058ca8c0da5fa102849b8fd1fd9f5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10015,
        "upload_time": "2022-06-19T17:23:53",
        "upload_time_iso_8601": "2022-06-19T17:23:53.441900Z",
        "url": "https://files.pythonhosted.org/packages/fe/df/7680b7b7f5db9cf1cd7722f5db77a5d26faa2a70ccb67ac86408da0e0c32/bw_export-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92d242585638199529f434c4aed8fc0b5274a09b6ad66ddf424e90537516b13b",
          "md5": "0b2b8ee44db3e9e0b1781591bac7aa60",
          "sha256": "0468f8290624d8a0532a0dad1b4f6ad02ddeb8a8e98c7625d376d60869ef395d"
        },
        "downloads": -1,
        "filename": "bw-export-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b2b8ee44db3e9e0b1781591bac7aa60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8946,
        "upload_time": "2022-06-19T17:23:55",
        "upload_time_iso_8601": "2022-06-19T17:23:55.748839Z",
        "url": "https://files.pythonhosted.org/packages/92/d2/42585638199529f434c4aed8fc0b5274a09b6ad66ddf424e90537516b13b/bw-export-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fedf7680b7b7f5db9cf1cd7722f5db77a5d26faa2a70ccb67ac86408da0e0c32",
        "md5": "67058ca8c0da5fa102849b8fd1fd9f5f",
        "sha256": "4c64eb4a6b1d5d98f1f6c218d83aebfa4b8fb1586e74f929da8fde1b1412e594"
      },
      "downloads": -1,
      "filename": "bw_export-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "67058ca8c0da5fa102849b8fd1fd9f5f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10015,
      "upload_time": "2022-06-19T17:23:53",
      "upload_time_iso_8601": "2022-06-19T17:23:53.441900Z",
      "url": "https://files.pythonhosted.org/packages/fe/df/7680b7b7f5db9cf1cd7722f5db77a5d26faa2a70ccb67ac86408da0e0c32/bw_export-0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92d242585638199529f434c4aed8fc0b5274a09b6ad66ddf424e90537516b13b",
        "md5": "0b2b8ee44db3e9e0b1781591bac7aa60",
        "sha256": "0468f8290624d8a0532a0dad1b4f6ad02ddeb8a8e98c7625d376d60869ef395d"
      },
      "downloads": -1,
      "filename": "bw-export-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0b2b8ee44db3e9e0b1781591bac7aa60",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8946,
      "upload_time": "2022-06-19T17:23:55",
      "upload_time_iso_8601": "2022-06-19T17:23:55.748839Z",
      "url": "https://files.pythonhosted.org/packages/92/d2/42585638199529f434c4aed8fc0b5274a09b6ad66ddf424e90537516b13b/bw-export-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}