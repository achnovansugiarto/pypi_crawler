{
  "info": {
    "author": "James Bagrow",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Network Cards\n\nA network card is a three-panel tabular summary of a network dataset:\n\n<p align='center'>\n<img src='network-card-example.png' alt='Example network card for the Zachary Karate Club' width='600'>\n</p>\n\nThe first panel provides an overall summary of the network, the second summarizes the structure of the network (size, density, connectivity), and the third panel provides additional meta-information, what metadata are associated with nodes and links, how were the data gathered, and so forth.\n\nNetwork cards are intended to be _concise, readable and flexible_, allowing researchers across fields to quickly read and understand studies involving network datasets. \nWe believe that a standard representation is crucial to ensuring that key information associated with network data remains available.\n\nThis repository provides [templates](templates/) and a [Python package](#install) to create, update, and export network cards.\n\n## Table of Contents\n\n* [Example](#example)\n* [Install](#install)\n\t- [Requirements](#requirements)\n* [Citation](#citation)\n* [License](#License)\n\n\n\n\n## Example\n\n`Network Cards` provides [fill-in templates](templates/) but you can also generate and save a card programmatically. \nHere's Python code where we load a network from a file and compute the basic card: \n\n```python\nimport networkx as nx\nimport network_cards as nc\n\nG = nx.read_edgelist(\"karate_club.edgelist\")\n\ncard = nc.NetworkCard(G)\nprint(card)\n```\nThis gives:\n\n```text\n                   Name                       \n                   Kind Undirected, unweighted\n              Nodes are                       \n              Links are                       \n         Considerations                       \n        Number of nodes                     34\n        Number of links                     78\n               Degree^1        4.58824 [1, 17]\n             Clustering                  0.571\n              Connected                    Yes\n               Diameter                      5\n Assortativity (degree)                 -0.476\n          Node metadata                       \n          Link metadata                       \n       Date of creation                       \nData generating process                       \n                 Ethics                       \n                Funding                       \n               Citation                       \n\n^1: Distributions summarized with average [min, max].\n```\n\nUnfortunately, few of the important definitions, details or meta-information are computable, so\nmost of the fields outside the structure panel are blank.\nLet's use `update_*` methods to populate the remaining fields ourselves:\n\n```python\ncard.update_overall(\"Name\", \"Zachary Karate Club\")\ncard.update_overall(\"Nodes are\", \"Members of club at US university\")\ncard.update_overall(\"Links are\", \"Members consistently interacted outside club\")\ncard.update_overall(\"Considerations\", \"Heavily used as an example network\")\n\ncard.update_metainfo({\n    \"Node metadata\":           \"None\",\n    \"Link metadata\":           \"None (original study included eight interaction contexts)\",\n    \"Date of creation\":        \"1977\",\n    \"Data generating process\": \"Direct observation of club members during period 1970-72\",\n    \"Funding\":                 \"None\",\n    \"Citation\":                \"Zachary (1977)\"\n    })\n```\n\nWe used `card.update_overall()` and `card.update_metainfo()` to insert entries into the previous card. \nEntries can be updated one at a time (like we did when updating the overall panel) or a dictionary can be passed to update multiple entries at once.\n\nNow, print the revised card with `print(card)`:\n\n```text\n                   Name                                       Zachary Karate Club\n                   Kind                                    Undirected, unweighted\n              Nodes are                          Members of club at US university\n              Links are              Members consistently interacted outside club\n         Considerations                        Heavily used as an example network\n        Number of nodes                                                        34\n        Number of links                                                        78\n               Degree^1                                           4.58824 [1, 17]\n             Clustering                                                     0.571\n              Connected                                                       Yes\n               Diameter                                                         5\n Assortativity (degree)                                                    -0.476\n          Node metadata                                                      None\n          Link metadata None (original study included eight interaction contexts)\n       Date of creation                                                      1977\nData generating process  Direct observation of club members during period 1970-72\n                 Ethics                                                          \n                Funding                                                      None\n               Citation                                            Zachary (1977)\n\n^1: Distributions summarized with average [min, max].\n```\n\nAnd we can save to a convenient file format:\n\n```python\ncard.to_latex(\"karate-card.tex\")\ncard.to_excel(\"karate-card.xlsx\")\n```\n\n\n\n## Install\n\n`pip install network-cards`\n\n#### Requirements\n\n* Python 3.8+\n* Networkx\n* Pandas\n\n\n\n## Citation\n\nIf you use a Network Card, please cite our paper:\n\nBagrow, J., & Ahn, Y. (2022). Network Cards: concise, readable summaries of network data\n\nHere is a bibtex entry ([.bib file](references/citation.bib)):\n\n```bibtex\n@unpublished{bagrow2022cards,\n\tauthor = {Bagrow, James and Ahn, Yong-Yeol},\n\ttitle  = {Network Cards: concise, readable summaries of network data},\n\tyear   = {2022},\n}\n```\n\nand a .ris entry ([.ris file](references/citation.ris)):\n\n```text\nTY  - UNPB\nAU  - Bagrow, James\nAU  - Ahn, Yong-Yeol\nTI  - Network Cards: concise, readable summaries of network data\nPY  - 2022\nDA  - 2022\nER  - \n```\n\n## License\n\n[BSD-3-Clause](LICENSE) Â© James Bagrow\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "network-cards",
    "package_url": "https://pypi.org/project/network-cards/",
    "platform": null,
    "project_url": "https://pypi.org/project/network-cards/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/network-cards/0.99.1.1/",
    "requires_dist": [
      "networkx (>=2.8.2,<3.0.0)",
      "pandas (>=1.4.2,<2.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Concise, readable summaries of network data",
    "version": "0.99.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13958374,
  "releases": {
    "0.99.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "728076039a254b5761a614cef74b20eeb985485ad40a23ec5c71302381ac400d",
          "md5": "f52bd6e6ec5c4c5c4496ad06fd1c66fd",
          "sha256": "32f20df270542f6b4facd2a846d146ce15cce4a987e6d47a5dec88f200395718"
        },
        "downloads": -1,
        "filename": "network_cards-0.99.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f52bd6e6ec5c4c5c4496ad06fd1c66fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 13420,
        "upload_time": "2022-05-27T18:38:21",
        "upload_time_iso_8601": "2022-05-27T18:38:21.724541Z",
        "url": "https://files.pythonhosted.org/packages/72/80/76039a254b5761a614cef74b20eeb985485ad40a23ec5c71302381ac400d/network_cards-0.99.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a92a6139275624e7df50ce09c7ce748b6f5a061ee9149796de83fc56faac87d",
          "md5": "63f2194e80d8dcef35952fdaf8350b96",
          "sha256": "e2e374b16e1e9ebd5541fde587b5adfcfb69b24073d663e4feadf6fb9f9e9162"
        },
        "downloads": -1,
        "filename": "network-cards-0.99.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "63f2194e80d8dcef35952fdaf8350b96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 14978,
        "upload_time": "2022-05-27T18:38:23",
        "upload_time_iso_8601": "2022-05-27T18:38:23.688023Z",
        "url": "https://files.pythonhosted.org/packages/5a/92/a6139275624e7df50ce09c7ce748b6f5a061ee9149796de83fc56faac87d/network-cards-0.99.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "728076039a254b5761a614cef74b20eeb985485ad40a23ec5c71302381ac400d",
        "md5": "f52bd6e6ec5c4c5c4496ad06fd1c66fd",
        "sha256": "32f20df270542f6b4facd2a846d146ce15cce4a987e6d47a5dec88f200395718"
      },
      "downloads": -1,
      "filename": "network_cards-0.99.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f52bd6e6ec5c4c5c4496ad06fd1c66fd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 13420,
      "upload_time": "2022-05-27T18:38:21",
      "upload_time_iso_8601": "2022-05-27T18:38:21.724541Z",
      "url": "https://files.pythonhosted.org/packages/72/80/76039a254b5761a614cef74b20eeb985485ad40a23ec5c71302381ac400d/network_cards-0.99.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a92a6139275624e7df50ce09c7ce748b6f5a061ee9149796de83fc56faac87d",
        "md5": "63f2194e80d8dcef35952fdaf8350b96",
        "sha256": "e2e374b16e1e9ebd5541fde587b5adfcfb69b24073d663e4feadf6fb9f9e9162"
      },
      "downloads": -1,
      "filename": "network-cards-0.99.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "63f2194e80d8dcef35952fdaf8350b96",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 14978,
      "upload_time": "2022-05-27T18:38:23",
      "upload_time_iso_8601": "2022-05-27T18:38:23.688023Z",
      "url": "https://files.pythonhosted.org/packages/5a/92/a6139275624e7df50ce09c7ce748b6f5a061ee9149796de83fc56faac87d/network-cards-0.99.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}