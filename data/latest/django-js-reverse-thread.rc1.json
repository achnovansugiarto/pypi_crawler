{
  "info": {
    "author": "Thread Engineering",
    "author_email": "tech@thread.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "=================\nDjango JS Reverse\n=================\n\n.. image:: https://img.shields.io/pypi/v/django-js-reverse.svg\n   :target: https://pypi.python.org/pypi/django-js-reverse/\n\n.. image:: https://img.shields.io/travis/ierror/django-js-reverse/master.svg\n   :target: https://travis-ci.org/ierror/django-js-reverse\n\n.. image:: https://img.shields.io/coveralls/ierror/django-js-reverse/master.svg\n   :alt: Coverage Status\n   :target: https://coveralls.io/r/ierror/django-js-reverse?branch=master\n\n.. image:: https://img.shields.io/github/license/ierror/django-js-reverse.svg\n    :target: https://raw.githubusercontent.com/ierror/django-js-reverse/master/LICENSE\n\n.. image:: https://img.shields.io/pypi/wheel/django-js-reverse.svg\n\n\nNOTE: This package is a fork of\nhttps://github.com/ierror/django-js-reverse. It contains features and\nfixes not yet available in the original package, but will not be maintained for\npublic use. Please depend on the original package.\n\n**Javascript url handling for Django that doesn’t hurt.**\n\n\nOverview\n--------\n\nDjango JS Reverse is a small django app that makes url handling of\n`named urls <https://docs.djangoproject.com/en/dev/topics/http/urls/#naming-url-patterns>`__ in javascript easy and non-annoying..\n\nFor example you can retrieve a named url:\n\nurls.py:\n\n::\n\n    url(r'^/betterliving/(?P<category_slug>[-\\w]+)/(?P<entry_pk>\\d+)/$', 'get_house', name='betterliving_get_house'),\n\nin javascript like:\n\n::\n\n    Urls.betterlivingGetHouse('house', 12)\n\nResult:\n\n::\n\n    /betterliving/house/12/\n\n\nRequirements\n------------\n\n+----------------+------------------------------------------+\n| Python version | Django versions                          |\n+================+==========================================+\n| 3.7            | 2.2, 2.1, 2.0, 1.11, 1.10, 1.9, 1.8      |\n+----------------+------------------------------------------+\n| 3.6            | 2.2, 2.1, 2.0, 1.11, 1.10, 1.9, 1.8      |\n+----------------+------------------------------------------+\n| 3.5            | 2.2, 2.1, 2.0, 1.11, 1.10, 1.9, 1.8      |\n+----------------+------------------------------------------+\n| 3.4            | 2.0, 1.11, 1.10, 1.9, 1.8, 1.7, 1.6, 1.5 |\n+----------------+------------------------------------------+\n| 2.7            | 1.11, 1.10, 1.9, 1.8, 1.7, 1.6, 1.5      |\n+----------------+------------------------------------------+\n\n\nInstallation\n------------\n\nInstall using ``pip`` …\n\n::\n\n    pip install django-js-reverse\n\n… or clone the project from github.\n\n::\n\n    git clone https://github.com/ierror/django-js-reverse.git\n\nAdd ``'django_js_reverse'`` to your ``INSTALLED_APPS`` setting.\n\n::\n\n    INSTALLED_APPS = (\n        ...\n        'django_js_reverse',\n    )\n\n\nUsage with webpack\n------------------\n\nInstall using ``npm``\n\n::\n\n    npm install --save django-js-reverse\n\n\nInclude none-cached view …\n\n::\n\n    urlpatterns = patterns('',\n        url(r'^jsreverse.json$', 'django_js_reverse.views.urls_json', name='js_reverse'),\n    )\n\n… or a cached one that delivers the urls JSON\n\n::\n\n    from django_js_reverse import views\n    urlpatterns = patterns('',\n        url(r'^jsreverse.json$', cache_page(3600)(views.urls_json), name='js_reverse'),\n    )\n\nInclude JavaScript in your bundle:\n\n::\n\n    // utils/djangoReverse.mjs\n    import _ from 'lodash/fp';\n    import djangoJsReverse from 'django-js-reverse';\n\n    export default _.once(\n      async () => {\n        const res = await fetch('/jsreverse.json');\n        const data = await res.json();\n        return djangoJsReverse(data);\n      }\n    )\n\n::\n\n    // somePlace.mjs\n    import djangoReverse from './utils/djangoReverse';\n\n    (async () => {\n      const urls = await djangoReverse();\n      const url = urls.someViewName('some-arg');\n      ...\n    })();\n\n\nUsage as static file\n--------------------\n\nFirst generate static file by\n\n::\n\n    ./manage.py collectstatic_js_reverse\n\nIf you change some urls or add an app and want to update the reverse.js file,\nrun the command again.\n\nAfter this add the file to your template\n\n::\n\n    <script src=\"{% static 'django_js_reverse/js/reverse.js' %}\"></script>\n\n\nUsage with views\n----------------\n\nInclude none-cached view …\n\n::\n\n    urlpatterns = patterns('',\n        url(r'^jsreverse/$', 'django_js_reverse.views.urls_js', name='js_reverse'),\n    )\n\n… or a cached one that delivers the urls javascript\n\n::\n\n    from django_js_reverse.views import urls_js\n    urlpatterns = patterns('',\n        url(r'^jsreverse/$', cache_page(3600)(urls_js), name='js_reverse'),\n    )\n\nInclude javascript in your template\n\n::\n\n    <script src=\"{% url js_reverse %}\" type=\"text/javascript\"></script>\n\nor, if you are using Django > 1.5\n\n::\n\n    <script src=\"{% url 'js_reverse' %}\" type=\"text/javascript\"></script>\n\n\nUsage as template tag\n_____________________\n\nYou can place the js_reverse JavaScript inline into your templates,\nhowever use of inline JavaScript is not recommended, because it\nwill make it impossible to deploy a secure Content Security Policy.\nSee `django-csp <https://django-csp.readthedocs.io/>`__\n\n::\n\n    {% load js_reverse %}\n\n    <script type=\"text/javascript\" charset=\"utf-8\">\n        {% js_reverse_inline %}\n    </script>\n\n\nUse the urls in javascript\n--------------------------\n\nIf your url names are valid javascript identifiers ([$A-Z\\_][-Z\\_$]\\*)i\nyou can access them by the Dot notation:\n\n::\n\n    Urls.betterlivingGetHouse('house', 12)\n\nIf the named url contains invalid identifiers use the Square bracket\nnotation instead:\n\n::\n\n    Urls['betterliving-get-house']('house', 12)\n    Urls['namespace:betterliving-get-house']('house', 12)\n\nYou can also pass javascript objects to match keyword aguments like the\nexamples bellow:\n\n::\n\n    Urls['betterliving-get-house']({ category_slug: 'house', entry_pk: 12 })\n    Urls['namespace:betterliving-get-house']({ category_slug: 'house', entry_pk: 12 })\n\nOptions\n-------\n\nOptionally, you can overwrite the default javascript variable ‘Urls’ used\nto access the named urls by django setting\n\n::\n\n    JS_REVERSE_JS_VAR_NAME = 'Urls'\n\nOptionally, you can change the name of the global object the javascript variable\nused to access the named urls is attached to. Default is :code:`this`\n\n::\n\n    JS_REVERSE_JS_GLOBAL_OBJECT_NAME = 'window'\n\n\nOptionally, you can disable the minfication of the generated javascript file\nby django setting\n\n::\n\n    JS_REVERSE_JS_MINIFY = False\n\n\nBy default all namespaces are included\n\n::\n\n    JS_REVERSE_EXCLUDE_NAMESPACES = []\n\nTo exclude any namespaces from the generated javascript file, add them to the `JS_REVERSE_EXCLUDE_NAMESPACES` setting\n\n::\n\n    JS_REVERSE_EXCLUDE_NAMESPACES = ['admin', 'djdt', ...]\n\nIf you want to include only specific namespaces add them to the `JS_REVERSE_INCLUDE_ONLY_NAMESPACES` setting\ntips:\n* Use \"\" (empty string) for urls without namespace\n* Use \"foo\\0\" to include urls just from \"foo\" namaspace and not from any subnamespaces (e.g. \"foo:bar\")\n\n::\n\n    JS_REVERSE_INCLUDE_ONLY_NAMESPACES = ['poll', 'calendar', ...]\n\nIf you run your application under a subpath, the collectstatic_js_reverse needs to take care of this.\nDefine the prefix in your django settings:\n\n::\n\n   JS_REVERSE_SCRIPT_PREFIX = '/myprefix/'\n\nBy default collectstatic_js_reverse writes its output (reverse.js) to your project's STATIC_ROOT.\nYou can change the output path:\n\n::\n\n    JS_REVERSE_OUTPUT_PATH = 'some_path'\n\n\nRunning the test suite\n----------------------\n\n::\n\n    tox\n\nLicense\n-------\n\n`MIT <https://raw.github.com/ierror/django-js-reverse/master/LICENSE>`__\n\n\nContact\n-------\n\n`@i_error <https://twitter.com/i_error>`__\n\n--------------\n\nEnjoy!\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/django-js-reverse-thread/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thread/django-js-reverse",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-js-reverse-thread",
    "package_url": "https://pypi.org/project/django-js-reverse-thread/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-js-reverse-thread/",
    "project_urls": {
      "Download": "https://pypi.python.org/pypi/django-js-reverse-thread/",
      "Homepage": "https://github.com/thread/django-js-reverse"
    },
    "release_url": "https://pypi.org/project/django-js-reverse-thread/0.0.1/",
    "requires_dist": [
      "Django (>=1.5)"
    ],
    "requires_python": "",
    "summary": "Javascript url handling for Django that doesn't hurt.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9563983,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6f9f44678bbdcace9bcff1fb4c826637840f70f800b3925080d51876689d374",
          "md5": "518958c491952fdbfa4ba0085ee41646",
          "sha256": "23f3e9427423b167111bed2dd368ad22494221b51d2c2b46a41d0d61a168b387"
        },
        "downloads": -1,
        "filename": "django_js_reverse_thread-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "518958c491952fdbfa4ba0085ee41646",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 22371,
        "upload_time": "2021-02-28T20:42:45",
        "upload_time_iso_8601": "2021-02-28T20:42:45.222916Z",
        "url": "https://files.pythonhosted.org/packages/f6/f9/f44678bbdcace9bcff1fb4c826637840f70f800b3925080d51876689d374/django_js_reverse_thread-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a5c39f7f22a9bfa914599ec73c822983be61868ad00a23d8963c7404359c803",
          "md5": "5f9af5ab742201dde949b9a93d39b84d",
          "sha256": "fbab9fa19355c4a518bfa8474f104e8080d9ae538113da6cfdccc0927623d0b3"
        },
        "downloads": -1,
        "filename": "django-js-reverse-thread-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f9af5ab742201dde949b9a93d39b84d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20299,
        "upload_time": "2021-02-28T20:42:46",
        "upload_time_iso_8601": "2021-02-28T20:42:46.699997Z",
        "url": "https://files.pythonhosted.org/packages/8a/5c/39f7f22a9bfa914599ec73c822983be61868ad00a23d8963c7404359c803/django-js-reverse-thread-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6f9f44678bbdcace9bcff1fb4c826637840f70f800b3925080d51876689d374",
        "md5": "518958c491952fdbfa4ba0085ee41646",
        "sha256": "23f3e9427423b167111bed2dd368ad22494221b51d2c2b46a41d0d61a168b387"
      },
      "downloads": -1,
      "filename": "django_js_reverse_thread-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "518958c491952fdbfa4ba0085ee41646",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 22371,
      "upload_time": "2021-02-28T20:42:45",
      "upload_time_iso_8601": "2021-02-28T20:42:45.222916Z",
      "url": "https://files.pythonhosted.org/packages/f6/f9/f44678bbdcace9bcff1fb4c826637840f70f800b3925080d51876689d374/django_js_reverse_thread-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a5c39f7f22a9bfa914599ec73c822983be61868ad00a23d8963c7404359c803",
        "md5": "5f9af5ab742201dde949b9a93d39b84d",
        "sha256": "fbab9fa19355c4a518bfa8474f104e8080d9ae538113da6cfdccc0927623d0b3"
      },
      "downloads": -1,
      "filename": "django-js-reverse-thread-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5f9af5ab742201dde949b9a93d39b84d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20299,
      "upload_time": "2021-02-28T20:42:46",
      "upload_time_iso_8601": "2021-02-28T20:42:46.699997Z",
      "url": "https://files.pythonhosted.org/packages/8a/5c/39f7f22a9bfa914599ec73c822983be61868ad00a23d8963c7404359c803/django-js-reverse-thread-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}