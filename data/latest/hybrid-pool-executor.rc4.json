{
  "info": {
    "author": "",
    "author_email": "Leavers <leavers930@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "|Build Status|\n|PyPI|\n|PyPI Version|\n\n.. |Build Status| image:: https://github.com/leavers/hybrid-pool-executor/actions/workflows/tests.yml/badge.svg\n   :target: https://github.com/leavers/hybrid-pool-executor/actions/workflows/tests.yml\n.. |PyPI| image:: https://img.shields.io/pypi/v/hybrid-pool-executor.svg\n   :target: https://pypi.org/project/hybrid-pool-executor/\n.. |PyPI Version| image:: https://img.shields.io/pypi/pyversions/hybrid-pool-executor.svg\n   :target: https://pypi.org/project/hybrid-pool-executor/\n\nHybridPoolExecutor\n==================\n\nHybridPoolExecutor is a parallel executor that supports thead, process and async three operating models at the same time.\n\nExample:\n\n.. code-block:: python\n\n    import asyncio\n    import time\n    import random\n\n    from hybrid_pool_executor import HybridPoolExecutor\n\n\n    def solve(v: int) -> int:\n        print(f\"You give worker a value {v}\")\n        time.sleep(random.randint(1, 4))\n        print(f\"The square of value {v} is {v * v}\")\n        return v\n\n\n    async def solve_async(v: int) -> int:\n        print(f\"You give async worker a value {v}\")\n        await asyncio.sleep(random.randint(1, 4))\n        print(f\"The square of value {v} is {v * v}\")\n        return v\n\n\n    async def main():\n        pool = HybridPoolExecutor()\n\n        # run in a thread\n        future0 = pool.submit(solve, 0)\n\n        # run in a process by setting \"_mode\" to \"process\"\n        future1 = pool.submit(solve, 1, _mode=\"process\")\n        # or you can use a more precise approach: submit_task\n        future2 = pool.submit_task(solve, kwargs={\"v\": 2}, mode=\"process\")\n\n        # run in an async worker\n        future3 = pool.submit(solve_async, 3)  # run as a coroutine\n        # you can also submit a coroutine\n        future4 = pool.submit(solve_async(4))\n        # async function/coroutine can be executed in thread/process too\n        # run coroutine in a thread\n        future5 = pool.submit(solve_async(5), _mode=\"thread\")\n        # or in a process\n        future6 = pool.submit(solve_async, 6, _mode=\"process\")\n\n        # all futures can be get either synchronously or asynchronously\n        await future0  # result from a thread worker\n        await future1  # result from a process worker\n        future2.result()  # result from a async worker\n        # ......\n\n\n    if __name__ == \"__main__\":\n        asyncio.run(main())\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "concurrent,thread",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hybrid-pool-executor",
    "package_url": "https://pypi.org/project/hybrid-pool-executor/",
    "platform": null,
    "project_url": "https://pypi.org/project/hybrid-pool-executor/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/hybrid-pool-executor/0.0.4/",
    "requires_dist": [
      "bumpver ; extra == 'dev'",
      "black ; extra == 'dev'",
      "coverage[toml] (>=5.3) ; extra == 'dev'",
      "isort (>=5.0.0) ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pyproject-autoflake ; extra == 'dev'",
      "pyproject-flake8 ; extra == 'dev'",
      "pytest (>=6.2.5) ; extra == 'dev'",
      "pytest-asyncio ; extra == 'dev'",
      "pytest-timeout ; extra == 'dev'",
      "sphinx ; extra == 'dev'",
      "sphinx-rtd-theme ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "cloudpickle ; extra == 'extra'"
    ],
    "requires_python": ">=3.8",
    "summary": "Pool executor supporting thread, process and async.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14058113,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b50f3a67c15e2678328830068217731de64cc8791b3d4d7016df8031d54b67db",
          "md5": "972f540d11d199367473b9574ce3bc59",
          "sha256": "b6360cc2cb110127706f32695f0c3783f21ec9015bfab36d0d73adc8537306b1"
        },
        "downloads": -1,
        "filename": "hybrid_pool_executor-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "972f540d11d199367473b9574ce3bc59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10967,
        "upload_time": "2021-09-15T02:17:03",
        "upload_time_iso_8601": "2021-09-15T02:17:03.263100Z",
        "url": "https://files.pythonhosted.org/packages/b5/0f/3a67c15e2678328830068217731de64cc8791b3d4d7016df8031d54b67db/hybrid_pool_executor-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab5e82cd45316e83a5e2e6975844378abacea83da575345579bc8395110820ff",
          "md5": "165f80a8ea4aed075cf1e5ab6e26b1f0",
          "sha256": "80254898376bbe33e5147a7799708c8222f7d6a393e168d11e0792250ae0d285"
        },
        "downloads": -1,
        "filename": "hybrid_pool_executor-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "165f80a8ea4aed075cf1e5ab6e26b1f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11549,
        "upload_time": "2021-09-15T02:17:05",
        "upload_time_iso_8601": "2021-09-15T02:17:05.792436Z",
        "url": "https://files.pythonhosted.org/packages/ab/5e/82cd45316e83a5e2e6975844378abacea83da575345579bc8395110820ff/hybrid_pool_executor-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02f94b8bd22d4bee18bce40d97d7b4d59132ce340dd2fe67322aea7fc69fa448",
          "md5": "cefdf73fb4049a57888bb502e8b0da01",
          "sha256": "2d7c2ea3ffeaa1d2803379514962ae2c68afb367850ca219558b71f7faee0139"
        },
        "downloads": -1,
        "filename": "hybrid_pool_executor-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cefdf73fb4049a57888bb502e8b0da01",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 24325,
        "upload_time": "2022-03-05T12:40:44",
        "upload_time_iso_8601": "2022-03-05T12:40:44.769189Z",
        "url": "https://files.pythonhosted.org/packages/02/f9/4b8bd22d4bee18bce40d97d7b4d59132ce340dd2fe67322aea7fc69fa448/hybrid_pool_executor-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4fdd3b047b100403c218c90f63d250d4afdfd33db2528c03d4d87cdb80fe544",
          "md5": "40dc3eee60f177c2e102c894c3c0cea0",
          "sha256": "f669f1bf094f1fb5c034eceb748c9c692acbfa7d25023b8c50ebf75b4c323e06"
        },
        "downloads": -1,
        "filename": "hybrid_pool_executor-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "40dc3eee60f177c2e102c894c3c0cea0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14087,
        "upload_time": "2022-03-05T12:40:47",
        "upload_time_iso_8601": "2022-03-05T12:40:47.048432Z",
        "url": "https://files.pythonhosted.org/packages/f4/fd/d3b047b100403c218c90f63d250d4afdfd33db2528c03d4d87cdb80fe544/hybrid_pool_executor-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e144da36f34541eb3d517f361f68887ff1274de81ab9ad57ce2266e8d0703ae",
          "md5": "075b035a750411b84c262d50a5abbe43",
          "sha256": "17529b1d9bc8bd56a112995d7c67024df9e889449572815f369a216930b8b57f"
        },
        "downloads": -1,
        "filename": "hybrid_pool_executor-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "075b035a750411b84c262d50a5abbe43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 28255,
        "upload_time": "2022-06-03T10:46:58",
        "upload_time_iso_8601": "2022-06-03T10:46:58.685834Z",
        "url": "https://files.pythonhosted.org/packages/5e/14/4da36f34541eb3d517f361f68887ff1274de81ab9ad57ce2266e8d0703ae/hybrid_pool_executor-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d5bb041349a448ca59c63b7c074a53ead372e4c0b57ab9aaaa8f4eef968c9b3",
          "md5": "e6949182803451eeadcc7774bf08905a",
          "sha256": "0b71fc83bd2322db5a54459e4cd7090bfa26096751f540939491062ea7cd498b"
        },
        "downloads": -1,
        "filename": "hybrid-pool-executor-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e6949182803451eeadcc7774bf08905a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30060,
        "upload_time": "2022-06-03T10:47:00",
        "upload_time_iso_8601": "2022-06-03T10:47:00.132423Z",
        "url": "https://files.pythonhosted.org/packages/1d/5b/b041349a448ca59c63b7c074a53ead372e4c0b57ab9aaaa8f4eef968c9b3/hybrid-pool-executor-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62cfb048a3f60d24f4f2ff0c75d5a58e10452c01dfc07f2194cd1c50b736b0c4",
          "md5": "f808bd9f35064b15a5f7949e1db66e94",
          "sha256": "c7dbd9aabcaeb7f38f3e0147428e167cddca7c7ed8c73083b15256f5d5fb39e4"
        },
        "downloads": -1,
        "filename": "hybrid_pool_executor-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f808bd9f35064b15a5f7949e1db66e94",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 27758,
        "upload_time": "2022-06-07T14:13:40",
        "upload_time_iso_8601": "2022-06-07T14:13:40.349673Z",
        "url": "https://files.pythonhosted.org/packages/62/cf/b048a3f60d24f4f2ff0c75d5a58e10452c01dfc07f2194cd1c50b736b0c4/hybrid_pool_executor-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a70469854956fb0b4c19a3f63a1f7a234a935f1c455ead92fad1f0c6e44426a",
          "md5": "78441ebc948d3f8370a6476a66ec31d3",
          "sha256": "fd8a6fbe3853fb6cdcce643b2c37ed615c27cb418d803d966edd803b4e2d74fe"
        },
        "downloads": -1,
        "filename": "hybrid-pool-executor-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "78441ebc948d3f8370a6476a66ec31d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 29742,
        "upload_time": "2022-06-07T14:13:41",
        "upload_time_iso_8601": "2022-06-07T14:13:41.525358Z",
        "url": "https://files.pythonhosted.org/packages/0a/70/469854956fb0b4c19a3f63a1f7a234a935f1c455ead92fad1f0c6e44426a/hybrid-pool-executor-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62cfb048a3f60d24f4f2ff0c75d5a58e10452c01dfc07f2194cd1c50b736b0c4",
        "md5": "f808bd9f35064b15a5f7949e1db66e94",
        "sha256": "c7dbd9aabcaeb7f38f3e0147428e167cddca7c7ed8c73083b15256f5d5fb39e4"
      },
      "downloads": -1,
      "filename": "hybrid_pool_executor-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f808bd9f35064b15a5f7949e1db66e94",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 27758,
      "upload_time": "2022-06-07T14:13:40",
      "upload_time_iso_8601": "2022-06-07T14:13:40.349673Z",
      "url": "https://files.pythonhosted.org/packages/62/cf/b048a3f60d24f4f2ff0c75d5a58e10452c01dfc07f2194cd1c50b736b0c4/hybrid_pool_executor-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a70469854956fb0b4c19a3f63a1f7a234a935f1c455ead92fad1f0c6e44426a",
        "md5": "78441ebc948d3f8370a6476a66ec31d3",
        "sha256": "fd8a6fbe3853fb6cdcce643b2c37ed615c27cb418d803d966edd803b4e2d74fe"
      },
      "downloads": -1,
      "filename": "hybrid-pool-executor-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "78441ebc948d3f8370a6476a66ec31d3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 29742,
      "upload_time": "2022-06-07T14:13:41",
      "upload_time_iso_8601": "2022-06-07T14:13:41.525358Z",
      "url": "https://files.pythonhosted.org/packages/0a/70/469854956fb0b4c19a3f63a1f7a234a935f1c455ead92fad1f0c6e44426a/hybrid-pool-executor-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}