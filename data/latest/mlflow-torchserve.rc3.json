{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# mlflow-torchserve\n\nA plugin that integrates [TorchServe](https://github.com/pytorch/serve) with MLflow pipeline. ``mlflow_torchserve`` enables you to\nuse mlflow to deploy the models built and trained in mlflow pipeline into TorchServe without any\nextra effort from the user. This plugin provides few command line APIs, which is also accessible\nthrough mlflow's python package, to make the deployment process seamless.\n\n## Installation\nFor installing and activating the plugin, you only need to install this package which is available\nin pypi and can be installed with\n\n```bash\npip install mlflow-torchserve\n```\n## What does it do\nInstalling this package uses python's entrypoint mechanism to register the plugin into MLflow's\nplugin registry. This registry will be invoked each time you launch MLflow script or command line\nargument.\n\n\n### Create deployment\nDeploy the model to TorchServe. The `create` command line argument and ``create_deployment`` python\nAPIs does the deployment of a model built with MLflow to TorchServe.\n\n##### CLI\n```shell script\nmlflow deployments create -t torchserve -m <model uri> --name DEPLOYMENT_NAME -C 'MODEL_FILE=<model file path>' -C 'HANDLER=<handler file path>'\n```\n\n##### Python API\n```python\nfrom mlflow.deployments import get_deploy_client\ntarget_uri = 'torchserve'\nplugin = get_deploy_client(target_uri)\nplugin.create_deployment(name=<deployment name>, model_uri=<model uri>, config={\"MODEL_FILE\": <model file path>, \"HANDLER\": <handler file path>})\n```\n\n### Update deployment\nUpdate API can be used to update an already deployed model. This setup is useful if you want to increase the number of workers\nor set a model as default version. TorchServe will make sure the user experience is seamless while changing the model in a live environment.\n\n##### CLI\n```shell script\nmlflow deployments update -t torchserve --name <deployment name> -C \"min-worker=<number of workers>\"\n```\n\n##### Python API\n```python\nplugin.update_deployment(name=<deployment name>, config={'min-worker': <number of workers>})\n```\n\n### Delete deployment\nDelete an existing deployment. Error will be thrown if the model is not already deployed\n\n##### CLI\n```shell script\nmlflow deployments delete -t torchserve --name <deployment name / version number>\n```\n\n##### Python API\n```python\nplugin.delete_deployment(name=<deployment name / version number>)\n```\n\n### List all deployments\nList the names of all the deploymented models. This name can then be used in other APIs or can be\nused in the get deployment API to get more details about a particular deployment.\n\n##### CLI\n```shell script\nmlflow deployments list -t torchserve\n```\n\n##### Python API\n```python\nplugin.list_deployments()\n```\n\n### Get deployment details\nGet API fetches the details of the deployed model. By default, Get API fetches all the versions of the \ndeployed model\n\n##### CLI\n```shell script\nmlflow deployments get -t torchserve --name <deployment name>\n```\n\n##### Python API\n```python\nplugin.get_deployment(name=<deployment name>)\n```\n\n### Run Prediction on deployed model\nPredict API enables to run prediction on the deployed model. \n\nCLI takes json file path as input. However, input to the python plugin can be one among the three types\nDataFrame, Tensor or Json String.\n\n##### CLI\n```shell script\nmlflow deployments predict -t torchserve --name <deployment name> --input-path <input file path> --output-path <output file path>\n```\n\noutput-path is an optional parameter. Without output path parameter result will printed in console.\n\n##### Python API\n```python\nplugin.predict(name=<deployment name>, df=<prediction input>)\n```\n\n### Plugin help\nRun the following command to get the plugin help string.\n\n##### CLI\n```shell script\nmlflow deployments help -t torchserve\n``` \n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlflow-torchserve",
    "package_url": "https://pypi.org/project/mlflow-torchserve/",
    "platform": "",
    "project_url": "https://pypi.org/project/mlflow-torchserve/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/mlflow-torchserve/0.1.0/",
    "requires_dist": [
      "mlflow (>=1.12.0)",
      "torchserve",
      "torch-model-archiver"
    ],
    "requires_python": "",
    "summary": "Torch Serve Mlflow Deployment",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8639233,
  "releases": {
    "0.0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c07f8b95ab23d296ec147c75df4d71f85b6850f6ad834f7f1c7fd222feb2ee0",
          "md5": "e285817200e167b78efb72af98636896",
          "sha256": "dddfcf6cd9bbc10ab5c5883a02ac3c640ef7e6d2ad02973d9b57072249781f05"
        },
        "downloads": -1,
        "filename": "mlflow_torchserve-0.0.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e285817200e167b78efb72af98636896",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1458,
        "upload_time": "2020-11-03T01:23:50",
        "upload_time_iso_8601": "2020-11-03T01:23:50.357106Z",
        "url": "https://files.pythonhosted.org/packages/1c/07/f8b95ab23d296ec147c75df4d71f85b6850f6ad834f7f1c7fd222feb2ee0/mlflow_torchserve-0.0.1.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbf9be8d8110f4642780e3794f400d96493c6032430cc3977fbdde6019b6f51f",
          "md5": "04ff89afbba4284e29e587e98061b78c",
          "sha256": "98ecf80968cda9b71b15d5d9a65690ca7f59e67ada0b0a2ea14c4b31ed18d9fe"
        },
        "downloads": -1,
        "filename": "mlflow_torchserve-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04ff89afbba4284e29e587e98061b78c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18065,
        "upload_time": "2020-11-12T06:29:47",
        "upload_time_iso_8601": "2020-11-12T06:29:47.280201Z",
        "url": "https://files.pythonhosted.org/packages/db/f9/be8d8110f4642780e3794f400d96493c6032430cc3977fbdde6019b6f51f/mlflow_torchserve-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05a1d5a932358cd4600ecd130ab2a0b3afe587d2c672e1bdbe324bd5714fa439",
          "md5": "7043c034f21e5c581142d4be80d31ae5",
          "sha256": "a85a6a5e65d562656e3a90776429734de4819bbeed288075115bd53bbb0c2f33"
        },
        "downloads": -1,
        "filename": "mlflow-torchserve-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7043c034f21e5c581142d4be80d31ae5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12707,
        "upload_time": "2020-11-12T06:29:48",
        "upload_time_iso_8601": "2020-11-12T06:29:48.462280Z",
        "url": "https://files.pythonhosted.org/packages/05/a1/d5a932358cd4600ecd130ab2a0b3afe587d2c672e1bdbe324bd5714fa439/mlflow-torchserve-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bab3adb7366b07bdb8e154369543168279fd3dff1548204f5e74776791ad8ae1",
          "md5": "379c4dbc7b4cd73b707da50ca54b0119",
          "sha256": "a2c20873f7c3a547b472c6f2d8e9631a969bc371b847bfad8d55aadd1967cd73"
        },
        "downloads": -1,
        "filename": "mlflow_torchserve-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "379c4dbc7b4cd73b707da50ca54b0119",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18063,
        "upload_time": "2020-11-12T07:50:41",
        "upload_time_iso_8601": "2020-11-12T07:50:41.330501Z",
        "url": "https://files.pythonhosted.org/packages/ba/b3/adb7366b07bdb8e154369543168279fd3dff1548204f5e74776791ad8ae1/mlflow_torchserve-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd3c768ccc03595564c39698d7233f90fe796c41842bfe8049b4e8e121577e50",
          "md5": "9f1a5e52565662b1e4d6439d9aa61ff9",
          "sha256": "0add39e5e620aec12e671b38d28ca474dd7720526e29b621c1e34be22ed32794"
        },
        "downloads": -1,
        "filename": "mlflow-torchserve-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9f1a5e52565662b1e4d6439d9aa61ff9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12703,
        "upload_time": "2020-11-12T07:50:42",
        "upload_time_iso_8601": "2020-11-12T07:50:42.475528Z",
        "url": "https://files.pythonhosted.org/packages/cd/3c/768ccc03595564c39698d7233f90fe796c41842bfe8049b4e8e121577e50/mlflow-torchserve-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bab3adb7366b07bdb8e154369543168279fd3dff1548204f5e74776791ad8ae1",
        "md5": "379c4dbc7b4cd73b707da50ca54b0119",
        "sha256": "a2c20873f7c3a547b472c6f2d8e9631a969bc371b847bfad8d55aadd1967cd73"
      },
      "downloads": -1,
      "filename": "mlflow_torchserve-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "379c4dbc7b4cd73b707da50ca54b0119",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18063,
      "upload_time": "2020-11-12T07:50:41",
      "upload_time_iso_8601": "2020-11-12T07:50:41.330501Z",
      "url": "https://files.pythonhosted.org/packages/ba/b3/adb7366b07bdb8e154369543168279fd3dff1548204f5e74776791ad8ae1/mlflow_torchserve-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd3c768ccc03595564c39698d7233f90fe796c41842bfe8049b4e8e121577e50",
        "md5": "9f1a5e52565662b1e4d6439d9aa61ff9",
        "sha256": "0add39e5e620aec12e671b38d28ca474dd7720526e29b621c1e34be22ed32794"
      },
      "downloads": -1,
      "filename": "mlflow-torchserve-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9f1a5e52565662b1e4d6439d9aa61ff9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12703,
      "upload_time": "2020-11-12T07:50:42",
      "upload_time_iso_8601": "2020-11-12T07:50:42.475528Z",
      "url": "https://files.pythonhosted.org/packages/cd/3c/768ccc03595564c39698d7233f90fe796c41842bfe8049b4e8e121577e50/mlflow-torchserve-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}