{
  "info": {
    "author": "joholl",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Topic :: Security :: Cryptography"
    ],
    "description": "[![CI](https://github.com/joholl/tpmstream/actions/workflows/test.yml/badge.svg)](https://github.com/joholl/tpmstream/actions/workflows/test.yml)\n\n# tpmstream\n\nA tool to help you understand TPM commands and responses. You can either use the\n`convert` command if you want to decode TPM commands/responses or the `example`\ncommand to find examples.\n\n## Install\n\n```pip install .```\n\nFor development, it is recommended to use a virtual environment and install with the `--editable` switch.\n\n## Decode TPM Commands/Responses:\n\nThe `convert` command reads binary (or pcapng) data from a file:\n\n```bash\n❯ tpmstream convert create_primary.bin\n```\n\n![Example](doc/example.png?raw=true \"Example Screenshot\")\n\n\nOr you can read data from stdin. Just pass `-`:\n\n```bash\n❯ printf \"80020000007700000131400000010000003d0200000000145536c0a5ba338e58abfe729f76ccca61ebaf821f01002082fc712f21e4c7e47bbf84dfa0fb15ddfc7013eb61ed3eb2edaf0286e88ba20c000400000000001a0023000b0004007200000010001a000b00000003001000000000000000000000\"  | xxd -r -p | tpmstream convert -\n```\n\n## Find Examples for TPM Commands/Responses:\n\nYou want to see an exemplary TPM command? Easy, try:\n```bash\n❯ tpmstream ex NV_Write\n```\n\nDon't worry, the tool helps you out if you do not know how to spell a given command:\n\n```bash\n❯ tpmstream ex NVDefine\nUnknown commandCode: NVDefine.\n\nDid you mean:\n\n  tpmstream ex NV_DefineSpace\n```\n\n\n## Python API\n\n### Marshalling\n\nMarshalling functions convert a particular data stream (binary, pcapng, ...)\ninto a canonical format: a sequence of _MarshalEvents_. These events can be\nconverted to a python representation of the respective datatype (e.g. a\n`TPMS_SIG_SCHEME_ECDSA` object).\n\n```python\nfrom tpmstream.common.event import events_to_obj\nfrom tpmstream.io.binary import Binary\nfrom tpmstream.spec.commands.commands import Command\nfrom tpmstream.spec.structures.constants import TPM_SU\n\nevents = Binary.marshal(tpm_type=Command, buffer=b\"\\x80\\x01\\x00\\x00\\x00\\x0c\\x00\\x00\\x01\\x44\\x00\\x00\")\ncommand = events_to_obj(Command, events)\n\nprint(command.parameters.startupType)  # prints TPM_SU.CLEAR\n```\n\nLikewise, these python objects can be turned into a sequence of events, again.\n\n\n```python\nfrom tpmstream.common.event import obj_to_events\n\n# ...\n\nevents = obj_to_events(command)\n\n# Note that `events` is a generator. You can obtain a list by via `list(events)`\n```\n\n### Unmarshalling\n\nUnmarshalling functions convert a given set of _MarshalEvents_ into a custom\nformat (binary, pretty print, ...).\n\n```python\nfrom tpmstream.io.binary import Binary\nfrom tpmstream.io.pretty import Pretty\nfrom tpmstream.spec.commands.commands import Command\n\nevents = Binary.marshal(tpm_type=Command, buffer=b\"\\x80\\x01\\x00\\x00\\x00\\x0c\\x00\\x00\\x01\\x44\\x00\\x00\")\npretty = Pretty.unmarshal(events=events)\n\nfor line in pretty:\n     print(line)\n```\n\n\n### Example flow\n\nMarshalling (e.g. binary to events) and unmarshalling (e.g. events to pretty\nprint) is decoupled. Events can be turnt into python objects (like\n`TPMS_SIG_SCHEME_ECDSA`) and vice versa.\n\n```\n               +---------------------+                                                         +----------------------+\n---[binary]--> | binary marshalling  | ---[events]---+-------------------------+---[events]--> | binary unmarshalling | ---[pretty print]-->\n               +---------------------+               |                         |               +----------------------+\n                                                     |    +---------------+    |\n                                                     +--> | python object | ---+\n                                                          +---------------+\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/joholl/tpmstream",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tpmstream",
    "package_url": "https://pypi.org/project/tpmstream/",
    "platform": null,
    "project_url": "https://pypi.org/project/tpmstream/",
    "project_urls": {
      "Homepage": "https://github.com/joholl/tpmstream"
    },
    "release_url": "https://pypi.org/project/tpmstream/0.1.6/",
    "requires_dist": [
      "colorama",
      "dpkt",
      "black ; extra == 'dev'"
    ],
    "requires_python": "<4.0,>=3.9",
    "summary": "\"A tool to help you understand TPM commands and responses.\"",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17416957,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbef31a2be3c7c6913503f80cf352dab4d7ae8cbce7cad780cbb55f3e38e170d",
          "md5": "46e094897a5f46ae214fee0d1106aae0",
          "sha256": "ce6b570ab91b3262da0f3a74496211e394246ec7b0efcdb54d64f6ff1ef1439d"
        },
        "downloads": -1,
        "filename": "tpmstream-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46e094897a5f46ae214fee0d1106aae0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.12,>=3.9",
        "size": 57870,
        "upload_time": "2023-03-16T08:56:53",
        "upload_time_iso_8601": "2023-03-16T08:56:53.081119Z",
        "url": "https://files.pythonhosted.org/packages/bb/ef/31a2be3c7c6913503f80cf352dab4d7ae8cbce7cad780cbb55f3e38e170d/tpmstream-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c547cf7ee34c93025b521f229d766f9c2d4daba95f5a256b693b25fc9a1a58c",
          "md5": "cbcb5239e706e8f861830ac247e8aa73",
          "sha256": "f7384f8ebaa66dbd9f7f18cbf2a08bdcc420624a18f14b4175ce2d37762ce6e7"
        },
        "downloads": -1,
        "filename": "tpmstream-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbcb5239e706e8f861830ac247e8aa73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.11,>=3.9",
        "size": 60665,
        "upload_time": "2023-03-17T08:01:08",
        "upload_time_iso_8601": "2023-03-17T08:01:08.051508Z",
        "url": "https://files.pythonhosted.org/packages/8c/54/7cf7ee34c93025b521f229d766f9c2d4daba95f5a256b693b25fc9a1a58c/tpmstream-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fff4f2531677e558b2ffe8ec7c206a9267aa9f63a3b4ffc60658322ce5ed988a",
          "md5": "bc76c7a36d75478b4db301b1ba39373a",
          "sha256": "66832b08a8f501c9b4a3a1376ace805fc488a0764e3df6b0047acc41d7a7cf0c"
        },
        "downloads": -1,
        "filename": "tpmstream-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc76c7a36d75478b4db301b1ba39373a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4.0,>=3.9",
        "size": 53946,
        "upload_time": "2023-03-18T08:26:07",
        "upload_time_iso_8601": "2023-03-18T08:26:07.745968Z",
        "url": "https://files.pythonhosted.org/packages/ff/f4/f2531677e558b2ffe8ec7c206a9267aa9f63a3b4ffc60658322ce5ed988a/tpmstream-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d41fbeed517b8382c4db8b481b259ce74841a2ba85537f0176c975ccd21f6a4",
          "md5": "48688ffe102bf00520e99fbe1ceb5897",
          "sha256": "488c5002ec7986dcecd59f88c582ef795693ee74ebb2a7ac73c5e0ed5094d2e0"
        },
        "downloads": -1,
        "filename": "tpmstream-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48688ffe102bf00520e99fbe1ceb5897",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4.0,>=3.9",
        "size": 55302,
        "upload_time": "2023-03-18T09:00:05",
        "upload_time_iso_8601": "2023-03-18T09:00:05.045617Z",
        "url": "https://files.pythonhosted.org/packages/0d/41/fbeed517b8382c4db8b481b259ce74841a2ba85537f0176c975ccd21f6a4/tpmstream-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9859953fda5dca5e465246c5a877666091f1a050976321f633ad287ed6f795a5",
          "md5": "b584dff21afa13992af4f2f80d7a0d46",
          "sha256": "34c8ebe485f81a335c23e511ea23554d9702106f3d6887b4ca611b16ee70e400"
        },
        "downloads": -1,
        "filename": "tpmstream-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b584dff21afa13992af4f2f80d7a0d46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4.0,>=3.9",
        "size": 301927,
        "upload_time": "2023-03-23T13:37:26",
        "upload_time_iso_8601": "2023-03-23T13:37:26.893672Z",
        "url": "https://files.pythonhosted.org/packages/98/59/953fda5dca5e465246c5a877666091f1a050976321f633ad287ed6f795a5/tpmstream-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a68f4a2961fe62af7467b68c9a9b64e68225f4d7897f7212e97a4b6ab1930fbb",
          "md5": "ecdd85b237addaef44c291d6b0a82927",
          "sha256": "0e6df5a42ecc308a38a0f0e23e10d564c493c10395b3ba05668ac20031ce1363"
        },
        "downloads": -1,
        "filename": "tpmstream-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ecdd85b237addaef44c291d6b0a82927",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4.0,>=3.9",
        "size": 301819,
        "upload_time": "2023-03-23T14:53:03",
        "upload_time_iso_8601": "2023-03-23T14:53:03.108874Z",
        "url": "https://files.pythonhosted.org/packages/a6/8f/4a2961fe62af7467b68c9a9b64e68225f4d7897f7212e97a4b6ab1930fbb/tpmstream-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a68f4a2961fe62af7467b68c9a9b64e68225f4d7897f7212e97a4b6ab1930fbb",
        "md5": "ecdd85b237addaef44c291d6b0a82927",
        "sha256": "0e6df5a42ecc308a38a0f0e23e10d564c493c10395b3ba05668ac20031ce1363"
      },
      "downloads": -1,
      "filename": "tpmstream-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ecdd85b237addaef44c291d6b0a82927",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<4.0,>=3.9",
      "size": 301819,
      "upload_time": "2023-03-23T14:53:03",
      "upload_time_iso_8601": "2023-03-23T14:53:03.108874Z",
      "url": "https://files.pythonhosted.org/packages/a6/8f/4a2961fe62af7467b68c9a9b64e68225f4d7897f7212e97a4b6ab1930fbb/tpmstream-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}