{
  "info": {
    "author": "Paul Grunewald",
    "author_email": "paul.grunewald@tu-dresden.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Plone",
      "Framework :: Plone :: 4.3",
      "Framework :: Plone :: 5.3",
      "Framework :: Plone :: 6.0",
      "Framework :: Plone :: Addon",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Quality Assurance"
    ],
    "description": ".. This README is meant for consumption by humans and pypi. Pypi can render rst files so please do not use Sphinx features.\n   If you want to learn more about writing documentation, please check out: http://docs.plone.org/about/documentation_styleguide.html\n   This text does not appear on pypi or github. It is a comment.\n\n=======================\ncollective.patchwatcher\n=======================\n\nA great companion for keeping track of patched or overridden files.\n\nIt requires you to have installed the programs diff and diff3.\n\nFeatures\n--------\n\n- provide an easy way to declare your overriden files for your package (including version of the dependencies)\n- automatically check the declarations of a package for version updates of the dependencies\n- automatically merge version updates into your overrides\n- additionally use your declarations to add version pins for the dependencies in the setup.py of your package\n\n\nExamples\n--------\n\nAssume you have overridden a file called \"querywidget.pt\" with jbot in your own package called \"my.package\" in a folder called \"overrides\" (the default way to do this).\nThe file is orginally provided by archetypes.querywidget and lives in the Folder \"skins/querywidget/\" of that package. When you created the override, archetypes.querywidget version 1.1.2 was installed.\nTo make this explicit, you have to create a file called \"overrides_info.py\" inside your package namespace which has to offer an importable variable \"declarations\".\n\nIt should contain the following content:\n\n.. code-block:: python\n\n    from collective.patchwatcher import DeclarationCollection\n\n    declarations = DeclarationCollection()\n\n    declarations.add(\n        package=\"archetypes.querywidget\",\n        version=\"1.1.2\",\n        path=\"./skins/querywidget/querywidget.pt\",\n        local_path=\"./overrides/archetypes.querywidget.skins.querywidget.querywidget.pt\",\n    )\n    # add more declarations as you wish\n\nThe declaration states the original package, version and relative file path as well as the local path to your override.\n\nNow you can call the patchwatcher script to check your declarations for your package\nafter you potentially updated its dependency packages (e.g. by updating your Plone version):\n\n.. code-block:: console\n\n    ./bin/patchwatcher -e \"/home/username/zinstance/eggs\" -p my.package\n\nPatchwatcher needs the path to your eggs directory to find the latest version (in our example version 1.1.4) of\narchetypes.querywidget. It will look for changes between both orginal files in versions 1.1.2 and 1.1.4.\nNote, that this is only possible if both versions are present in the eggs directory.\nThis is usually the case, when you just updated your version pins and freshly ran buildout.\nIf patchwatcher finds changes, it will try to apply the changes to your overridden file using a three-way-merge.\n\nAdd the \"-w\" option to the script invocation if you want to save the result of the three-way merge.\nThe result will then be written back into the override file. There may be conflicts, which then have to be resolved manually.\nAfter the merge operation, you will have to update your declaration to 1.1.4 in the \"overrides_info.py\" file.\n\nInstallation\n------------\n\nInstall collective.patchwatcher by adding it to your buildout::\n\n    [buildout]\n\n    ...\n\n    parts +=\n        patchwatcher\n\n    [patchwatcher]\n    eggs =\n        collective.patchwatcher\n        ${instance:eggs}\n    recipe = zc.recipe.egg\n    initialization =\n            import sys\n            sys.argv[1:1] = \"-e ${buildout:eggs-directory}\".split()\n    scripts = patchwatcher\n\n\nand then running ``bin/buildout``. After that the script ``bin/patchwatcher`` is conveniently pre-configured with the buildout's eggs path.\n\nCommand-line options\n--------------------\n\nThe command line options are the following:\n\n::\n\n    usage: patchwatcher [-h] [-p PACKAGES] -e EGGS_FOLDER [-w] [-dcc] [-doc]\n\n    script for checking if there are changes\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    -p PACKAGES, --packages PACKAGES\n                            packages list separated by commata, defaults to\n                            development packages\n    -e EGGS_FOLDER, --eggs-folder EGGS_FOLDER\n                            eggs folder for looking up sources\n    -w, --write           write the three-way merge\n    -dcc, --diff-customized-current\n                            show the difference in the files between your\n                            customized and the current version\n    -doc, --diff-old-current\n                            show the difference in the files between old version\n                            and the current version (needs both to be present in\n                            eggs folder)\n\nBefore running patchwatcher, please ensure you have the relevant versions of the overridden packages present in your eggs folder.\nOtherwise patchwatcher will complain, that it is unable to detect or apply changes.\n\nTODO\n--------\n\n- Allow multiple eggs folders (e.g. from installations of different plone major versions) making -e an extension to the default\n- Add a more comfortable way to include z3c.jbot overrides (.e.g. putting multiple override container paths into DeclarationList)\n- Adjust the final statement per package (use -w if there were changes) to accomodate for the existence of changes (would need to track the changes though)\n- Add a convenience parameter that creates a declarations output of suggested declarations (could be depending on override container paths)\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/collective/collective.patchwatcher/issues\n- Source Code: https://github.com/collective/collective.patchwatcher\n\n\nSupport\n-------\n\nIf you are having issues, please let us know via the github issue tracker or contact one of the contributors.\n\n\nLicense\n-------\n\nThe project is licensed under the GPLv2.\n\n\nContributors\n============\n\n- Paul Grunewald, paul.grunewald@tu-dresden.de\n- Peter Seifert, peter.seifert1@tu-dresden.de\n\n\nChangelog\n=========\n\n\n1.0 (released)\n------------------\n\n- Initial release.\n  [pgrunewald, veritazx]\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/collective/collective.patchwatcher",
    "keywords": "Python Plone",
    "license": "GPL version 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "collective.patchwatcher",
    "package_url": "https://pypi.org/project/collective.patchwatcher/",
    "platform": "",
    "project_url": "https://pypi.org/project/collective.patchwatcher/",
    "project_urls": {
      "Homepage": "https://github.com/collective/collective.patchwatcher",
      "PyPI": "https://pypi.python.org/pypi/collective.patchwatcher",
      "Source": "https://github.com/collective/collective.patchwatcher",
      "Tracker": "https://github.com/collective/collective.patchwatcher/issues"
    },
    "release_url": "https://pypi.org/project/collective.patchwatcher/1.0/",
    "requires_dist": [
      "setuptools",
      "plone.app.testing ; extra == 'test'",
      "plone.testing (>=5.0.0) ; extra == 'test'",
      "plone.app.contenttypes ; extra == 'test'",
      "plone.app.robotframework[debug] ; extra == 'test'"
    ],
    "requires_python": ">=2.7",
    "summary": "Patchwatcher is a great companion for maintaining your customizations in Plone.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11906736,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2399a9a4aac238c0ba6ac6ee47c0c2e5ceaf132a89d0b1ad862141a8c0f5acb1",
          "md5": "ea0022c9adb1fa4ded1937234e6c3d71",
          "sha256": "33365a414f100fcd7d4cc9ce9c90e31ec64052101566ba885754855bff0d1a77"
        },
        "downloads": -1,
        "filename": "collective.patchwatcher-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea0022c9adb1fa4ded1937234e6c3d71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 22749,
        "upload_time": "2021-11-02T18:42:22",
        "upload_time_iso_8601": "2021-11-02T18:42:22.933906Z",
        "url": "https://files.pythonhosted.org/packages/23/99/a9a4aac238c0ba6ac6ee47c0c2e5ceaf132a89d0b1ad862141a8c0f5acb1/collective.patchwatcher-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b3686e242e67964752b28ff735b2dd7b20f6b2569319c78461be23a8b0d6970",
          "md5": "030450a21115aae921d316f2ae3ea1f7",
          "sha256": "c541d936105887a919d20438acfd65e655cc3879d0cae003f46944e2624aa147"
        },
        "downloads": -1,
        "filename": "collective.patchwatcher-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "030450a21115aae921d316f2ae3ea1f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 23999,
        "upload_time": "2021-11-02T18:42:25",
        "upload_time_iso_8601": "2021-11-02T18:42:25.030483Z",
        "url": "https://files.pythonhosted.org/packages/8b/36/86e242e67964752b28ff735b2dd7b20f6b2569319c78461be23a8b0d6970/collective.patchwatcher-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2399a9a4aac238c0ba6ac6ee47c0c2e5ceaf132a89d0b1ad862141a8c0f5acb1",
        "md5": "ea0022c9adb1fa4ded1937234e6c3d71",
        "sha256": "33365a414f100fcd7d4cc9ce9c90e31ec64052101566ba885754855bff0d1a77"
      },
      "downloads": -1,
      "filename": "collective.patchwatcher-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea0022c9adb1fa4ded1937234e6c3d71",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 22749,
      "upload_time": "2021-11-02T18:42:22",
      "upload_time_iso_8601": "2021-11-02T18:42:22.933906Z",
      "url": "https://files.pythonhosted.org/packages/23/99/a9a4aac238c0ba6ac6ee47c0c2e5ceaf132a89d0b1ad862141a8c0f5acb1/collective.patchwatcher-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b3686e242e67964752b28ff735b2dd7b20f6b2569319c78461be23a8b0d6970",
        "md5": "030450a21115aae921d316f2ae3ea1f7",
        "sha256": "c541d936105887a919d20438acfd65e655cc3879d0cae003f46944e2624aa147"
      },
      "downloads": -1,
      "filename": "collective.patchwatcher-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "030450a21115aae921d316f2ae3ea1f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 23999,
      "upload_time": "2021-11-02T18:42:25",
      "upload_time_iso_8601": "2021-11-02T18:42:25.030483Z",
      "url": "https://files.pythonhosted.org/packages/8b/36/86e242e67964752b28ff735b2dd7b20f6b2569319c78461be23a8b0d6970/collective.patchwatcher-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}