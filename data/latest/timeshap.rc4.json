{
  "info": {
    "author": "Feedzai",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# TimeSHAP\nTimeSHAP is a model-agnostic, recurrent explainer that builds upon KernelSHAP and \nextends it to the sequential domain.\nTimeSHAP computes event/timestamp- feature-, and cell-level attributions. \nAs sequences can be arbitrarily long, TimeSHAP also implements a pruning algorithm\nbased on Shapley Values, that finds a subset of consecutive, recent events that contribute\nthe most to the decision.\n\n\nThis repository is the code implementation of the TimeSHAP algorithm \npresent in the paper `TimeSHAP: Explaining Recurrent Models through Sequence Perturbations`\npublished at **KDD 2021**. \n\nLinks to the paper [here](https://arxiv.org/abs/2012.00073), \nand to the video presentation [here](https://www.youtube.com/watch?v=Q7Q9o7ywXx8).\n\n\n## Install TimeSHAP\n\n##### Via Pip\n```\npip install timeshap\n```\n\n##### Via Github\nClone the repository into a local directory using:\n```\ngit clone https://github.com/feedzai/timeshap.git\n```\n\nMove into the cloned repo and install the package:\n\n```\ncd timeshap\npip install .\n```\n\n\n##### Test your installation\nStart a Python session in your terminal using\n\n```\npython\n```\n\nAnd import TimeSHAP\n\n```\nimport timeshap\n```\n\n## TimeSHAP in 30 seconds\n\n#### Inputs\n- Model being explained;\n- Instance(s) to explain;\n- Background instance.\n\n#### Outputs\n- Local pruning output; (explaining a single instance)\n- Local event explanations; (explaining a single instance)\n- Local feature explanations; (explaining a single instance)\n- Global pruning statistics; (explaining multiple instances)\n- Global event explanations; (explaining multiple instances)\n- Global feature explanations; (explaining multiple instances)\n\n### Model Interface\n\nIn order for TimeSHAP to explain a model, an entry point must be provided.\nThis `Callable` entry point must receive a 3-D numpy array, `(#sequences; #sequence length; #features)`\nand return a 2-D numpy array `(#sequences; 1)` with the corresponding score of each sequence.\n\nIn addition, to make TimeSHAP more optimized, it is possible to return the **hidden state**\nof the model together with the score (if applicable). Although this is optional, we highly recommended it, \nas it has a very high impact. \nIf you choose to return the hidden state, this hidden state should either be: \n(see [notebook](notebooks/AReM/AReM_API_showcase.ipynb) for specific examples)\n - a 3-D numpy array, `(#rnn layers, #sequences, #hidden_dimension)` (class `ExplainedRNN` on notebook);\n - a tuple of numpy arrays that follows the previously described characteristic \n (usually used when using stacked RNNs with different hidden dimensions) (class `ExplainedGRU2Layer` on notebook); \n - a tuple of tuples of numpy arrays (usually used when using LSTM's) (class `ExplainedLSTM` on notebook);;\nTimeSHAP is able to explain any black-box model as long as it complies with the \npreviously described interface, including both PyTorch and TensorFlow models, \nboth examplified in our tutorials ([PyTorch](notebooks/AReM/AReM.ipynb), [TensorFlow](notebooks/AReM/AReM_TF.ipynb)).\n\nExample provided in our tutorials:\n- **TensorFLow**\n```\nmodel = tf.keras.models.Model(inputs=inputs, outputs=ff2)\nf = lambda x: model.predict(x)\n```\n\n- **Pytorch** - (Example where model receives and returns hidden states)\n```\nmodel_wrapped = TorchModelWrapper(model)\nf_hs = lambda x, y=None: model_wrapped.predict_last_hs(x, y)\n```\n\n\n###### Model Wrappers\nIn order to facilitate the interface between models and TimeSHAP, \nTimeSHAP implements `ModelWrappers`. These wrappers, used on the PyTorch\n[tutorial](notebooks/AReM/AReM.ipynb) notebook, allow for greater flexibility\nof explained models as they allow:\n- **Batching logic**: useful when using very large inputs or NSamples, which cannot fit\non GPU memory, and therefore batching mechanisms are required;\n- **Input format/type**: useful when your model does not work with numpy arrays. This\nis the case of our provided PyToch example; \n- **Hidden state logic**: useful when the hidden states of your models do not match\nthe hidden state format required by TimeSHAP\n\n\n### TimeSHAP Explanation Methods\nTimeSHAP offers several methods to use depending on the desired explanations.\nLocal methods provide detailed view of a model decision corresponding\nto a specific sequence being explained.\nGlobal methods aggregate local explanations of a given dataset\nto present a global view of the model.\n\n#### Local Explanations\n##### Pruning\n\n[`local_pruning()`](src/timeshap/explainer/pruning.py) performs the pruning\nalgorithm on a given sequence with a given user defined tolerance and returns \nthe pruning index along the information for plotting.\n\n[`plot_temp_coalition_pruning()`](src/timeshap/plot/pruning.py) plots the pruning \nalgorithm information calculated by `local_pruning()`.\n\n<img src=\"resources/images/pruning.png\" width=\"400\">\n\n##### Event level explanations\n\n[`local_event()`](src/timeshap/explainer/event_level.py) calculates event level explanations\nof a given sequence with the user-given parameteres and returns the respective \nevent-level explanations.\n\n[`plot_event_heatmap()`](src/timeshap/plot/event_level.py) plots the event-level explanations\ncalculated by `local_event()`.\n\n<img src=\"resources/images/event_level.png\" width=\"275\">\n\n##### Feature level explanations\n\n[`local_feat()`](src/timeshap/explainer/feature_level.py) calculates feature level explanations\nof a given sequence with the user-given parameteres and returns the respective \nfeature-level explanations.\n\n[`plot_feat_barplot()`](src/timeshap/plot/feature_level.py) plots the feature-level explanations\ncalculated by `local_feat()`.\n\n<img src=\"resources/images/feature_level.png\" width=\"350\">\n\n##### Cell level explanations\n\n[`local_cell_level()`](src/timeshap/explainer/cell_level.py) calculates cell level explanations\nof a given sequence with the respective event- and feature-level explanations\nand user-given parameteres, returing the respective cell-level explanations.\n\n[`plot_cell_level()`](src/timeshap/plot/cell_level.py) plots the feature-level explanations\ncalculated by  `local_cell_level()`.\n\n<img src=\"resources/images/cell_level.png\" width=\"350\">\n\n##### Local Report\n\n[`local_report()`](src/timeshap/explainer/local_methods.py) calculates TimeSHAP \nlocal explanations for a given sequence and plots them.\n\n<img src=\"resources/images/local_report.png\" width=\"800\">\n\n#### Global Explanations\n\n\n##### Global pruning statistics\n\n[`prune_all()`](src/timeshap/explainer/pruning.py) performs the pruning\nalgorithm on multiple given sequences.\n\n[`pruning_statistics()`](src/timeshap/plot/pruning.py) calculates the pruning\nstatistics for several user-given pruning tolerances using the pruning\ndata calculated by `prune_all()`, returning a `pandas.DataFrame` with the statistics.\n\n\n##### Global event level explanations\n\n[`event_explain_all()`](src/timeshap/explainer/event_level.py) calculates TimeSHAP \nevent level explanations for multiple instances given user defined parameters.\n\n[`plot_global_event()`](src/timeshap/plot/event_level.py) plots the global event-level explanations\ncalculated by `event_explain_all()`.\n\n<img src=\"resources/images/global_event.png\" width=\"600\">\n\n##### Global feature level explanations\n\n[`feat_explain_all()`](src/timeshap/explainer/feature_level.py) calculates TimeSHAP \nfeature level explanations for multiple instances given user defined parameters.\n\n[`plot_global_feat()`](src/timeshap/plot/feature_level.py) plots the global feature-level \nexplanations calculated by `feat_explain_all()`.\n\n<img src=\"resources/images/global_feat.png\" width=\"450\">\n\n\n##### Global report\n[`global_report()`](src/timeshap/explainer/global_methods.py) calculates TimeSHAP \nexplanations for multiple instances, aggregating the explanations on two plots\nand returning them.\n\n<img src=\"resources/images/global_report.png\" width=\"800\">\n\n\n\n## Tutorial\nIn order to demonstrate TimeSHAP interfaces and methods, you can consult\n[AReM.ipynb](notebooks/AReM/AReM.ipynb). \nIn this tutorial we get an open-source dataset, process it, train \nPytorch recurrent model with it and use TimeSHAP to explain it, showcasing all \npreviously described methods.\n\nAdditionally, we also train a TensorFlow model on the same dataset \n[AReM_TF.ipynb](notebooks/AReM/AReM_TF.ipynb).\n\n## Repository Structure\n\n- [`notebooks`](notebooks) - tutorial notebooks demonstrating the package;\n- [`src/timeshap`](src/timeshap) - the package source code;\n  - [`src/timeshap/explainer`](src/timeshap/explainer) - TimeSHAP methods to produce the explanations\n  - [`src/timeshap/explainer/kernel`](src/timeshap/explainer/kernel) - TimeSHAPKernel\n  - [`src/timeshap/plot`](src/timeshap/plot) - TimeSHAP methods to produce explanation plots\n  - [`src/timeshap/utils`](src/timeshap/utils) - util methods for TimeSHAP execution\n  - [`src/timeshap/wrappers`](src/timeshap/wrappers) - Wrapper classes for models in order to ease TimeSHAP explanations\n\n## Citing TimeSHAP\n```\n@inproceedings{bento2021timeshap,\n    author = {Bento, Jo\\~{a}o and Saleiro, Pedro and Cruz, Andr\\'{e} F. and Figueiredo, M\\'{a}rio A.T. and Bizarro, Pedro},\n    title = {TimeSHAP: Explaining Recurrent Models through Sequence Perturbations},\n    year = {2021},\n    isbn = {9781450383325},\n    publisher = {Association for Computing Machinery},\n    address = {New York, NY, USA},\n    url = {https://doi.org/10.1145/3447548.3467166},\n    doi = {10.1145/3447548.3467166},\n    booktitle = {Proceedings of the 27th ACM SIGKDD Conference on Knowledge Discovery & Data Mining},\n    pages = {2565â€“2573},\n    numpages = {9},\n    keywords = {SHAP, Shapley values, TimeSHAP, XAI, RNN, explainability},\n    location = {Virtual Event, Singapore},\n    series = {KDD '21}\n}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/feedzai/timeshap",
    "keywords": "explainability,TimeShap",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "timeshap",
    "package_url": "https://pypi.org/project/timeshap/",
    "platform": null,
    "project_url": "https://pypi.org/project/timeshap/",
    "project_urls": {
      "Homepage": "https://github.com/feedzai/timeshap"
    },
    "release_url": "https://pypi.org/project/timeshap/1.0.2/",
    "requires_dist": [
      "pandas (>=1.3.2)",
      "scikit-learn (>=0.23.2)",
      "seaborn (>=0.11.1)",
      "matplotlib (>=3.3.2)",
      "numpy (>=1.19.2)",
      "shap (>=0.37.0)",
      "scipy (>=1.5.2)",
      "plotly (>=4.6)",
      "seaborn (>=0.11.2)",
      "altair",
      "feedzai-altair-theme"
    ],
    "requires_python": ">=3.6.*",
    "summary": "KernelSHAP adaptation for recurrent models.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14715408,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60f6bc80b000e35816d82633662c4fa86aebe914403ebc31211832b132211072",
          "md5": "47f112f7bdaf4195f3c600b7e5a0f4d1",
          "sha256": "6034d326c2a04fc4b79990fb8f2fb804415941c17cab3146bc17171ea1fad6cd"
        },
        "downloads": -1,
        "filename": "timeshap-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47f112f7bdaf4195f3c600b7e5a0f4d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 55032,
        "upload_time": "2022-06-02T16:02:32",
        "upload_time_iso_8601": "2022-06-02T16:02:32.989105Z",
        "url": "https://files.pythonhosted.org/packages/60/f6/bc80b000e35816d82633662c4fa86aebe914403ebc31211832b132211072/timeshap-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d138eebf9f27c6e519566b0f8a660bdb700d4a89d45fdbb33cf0d5bf9409e853",
          "md5": "068e36a51bd76c11596321790b6b31b5",
          "sha256": "3af3f65d2e6e43ee89e64248a56fecb17a0345a3a1f8de1e92e4df9f0dbefb25"
        },
        "downloads": -1,
        "filename": "timeshap-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "068e36a51bd76c11596321790b6b31b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.*",
        "size": 39169,
        "upload_time": "2022-06-02T16:02:34",
        "upload_time_iso_8601": "2022-06-02T16:02:34.530894Z",
        "url": "https://files.pythonhosted.org/packages/d1/38/eebf9f27c6e519566b0f8a660bdb700d4a89d45fdbb33cf0d5bf9409e853/timeshap-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69514d969def95a8be16e7644fcba8cf341b4f693c808190cd30c2e97e63e650",
          "md5": "54ee9bb57915d161f598fac105e50d7d",
          "sha256": "b0fce8539854786bc2452af8ea63c5276bb0ad3f418914d2a0fb2fd7dc03e4cb"
        },
        "downloads": -1,
        "filename": "timeshap-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54ee9bb57915d161f598fac105e50d7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 53201,
        "upload_time": "2022-06-02T16:49:49",
        "upload_time_iso_8601": "2022-06-02T16:49:49.490417Z",
        "url": "https://files.pythonhosted.org/packages/69/51/4d969def95a8be16e7644fcba8cf341b4f693c808190cd30c2e97e63e650/timeshap-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89296b56d6774ab7f848bef47ce2afc2623a42f58c03f6fc6092061ad1598818",
          "md5": "afd3af705ed581d1960a750afa860b7d",
          "sha256": "c96680d1478772e2dd8fb501d0e869b182c60178503480e7ec42b1463bc73fa3"
        },
        "downloads": -1,
        "filename": "timeshap-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "afd3af705ed581d1960a750afa860b7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.*",
        "size": 37892,
        "upload_time": "2022-06-02T16:49:50",
        "upload_time_iso_8601": "2022-06-02T16:49:50.911554Z",
        "url": "https://files.pythonhosted.org/packages/89/29/6b56d6774ab7f848bef47ce2afc2623a42f58c03f6fc6092061ad1598818/timeshap-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93c3fbd3bcd0fa293609da92a415b77ce226803f6aebc84d84e619b0c990d621",
          "md5": "e133f9329dd79a8a732d2d2659efacdf",
          "sha256": "cdb9b6fe03611d01a209f370db8ede6d69b7508d61cd6378cb164bf69bacd5b3"
        },
        "downloads": -1,
        "filename": "timeshap-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e133f9329dd79a8a732d2d2659efacdf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 61414,
        "upload_time": "2022-07-08T16:33:15",
        "upload_time_iso_8601": "2022-07-08T16:33:15.582256Z",
        "url": "https://files.pythonhosted.org/packages/93/c3/fbd3bcd0fa293609da92a415b77ce226803f6aebc84d84e619b0c990d621/timeshap-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6078335d12e4d621dabf0a9a92b4fa60dff7a1108c6aa36a46561af30f43833",
          "md5": "e2a56c0c3622264349484f54ea920f6a",
          "sha256": "fd7537c2406c08719366251d664a994d53e854e3308081218170e887a6404e5e"
        },
        "downloads": -1,
        "filename": "timeshap-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e2a56c0c3622264349484f54ea920f6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.*",
        "size": 43787,
        "upload_time": "2022-07-08T16:33:17",
        "upload_time_iso_8601": "2022-07-08T16:33:17.582560Z",
        "url": "https://files.pythonhosted.org/packages/a6/07/8335d12e4d621dabf0a9a92b4fa60dff7a1108c6aa36a46561af30f43833/timeshap-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f12e1e708e8034d96c41183fed8f94f950d3ad0b842d1efe3ac979cebf3b62f5",
          "md5": "e4ea0983f08da44718b9faeb3a1932c7",
          "sha256": "79f1bbe686f72980d12340bc526357ed52fb73cc8f1705d65004fad960d42eef"
        },
        "downloads": -1,
        "filename": "timeshap-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4ea0983f08da44718b9faeb3a1932c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 65897,
        "upload_time": "2022-08-10T11:14:18",
        "upload_time_iso_8601": "2022-08-10T11:14:18.241764Z",
        "url": "https://files.pythonhosted.org/packages/f1/2e/1e708e8034d96c41183fed8f94f950d3ad0b842d1efe3ac979cebf3b62f5/timeshap-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf2f6c724deb09457f6978cf793023be245ef46040cf1f1cc4dbf8ffae9cc23e",
          "md5": "5d1f0e2cfc57c3d50971398f9801ed7a",
          "sha256": "766c523f30ed8870c280850808260485ad950c97857fe29ffe4be314972495e7"
        },
        "downloads": -1,
        "filename": "timeshap-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5d1f0e2cfc57c3d50971398f9801ed7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.*",
        "size": 47072,
        "upload_time": "2022-08-10T11:14:19",
        "upload_time_iso_8601": "2022-08-10T11:14:19.855459Z",
        "url": "https://files.pythonhosted.org/packages/cf/2f/6c724deb09457f6978cf793023be245ef46040cf1f1cc4dbf8ffae9cc23e/timeshap-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f12e1e708e8034d96c41183fed8f94f950d3ad0b842d1efe3ac979cebf3b62f5",
        "md5": "e4ea0983f08da44718b9faeb3a1932c7",
        "sha256": "79f1bbe686f72980d12340bc526357ed52fb73cc8f1705d65004fad960d42eef"
      },
      "downloads": -1,
      "filename": "timeshap-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4ea0983f08da44718b9faeb3a1932c7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.*",
      "size": 65897,
      "upload_time": "2022-08-10T11:14:18",
      "upload_time_iso_8601": "2022-08-10T11:14:18.241764Z",
      "url": "https://files.pythonhosted.org/packages/f1/2e/1e708e8034d96c41183fed8f94f950d3ad0b842d1efe3ac979cebf3b62f5/timeshap-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf2f6c724deb09457f6978cf793023be245ef46040cf1f1cc4dbf8ffae9cc23e",
        "md5": "5d1f0e2cfc57c3d50971398f9801ed7a",
        "sha256": "766c523f30ed8870c280850808260485ad950c97857fe29ffe4be314972495e7"
      },
      "downloads": -1,
      "filename": "timeshap-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5d1f0e2cfc57c3d50971398f9801ed7a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.*",
      "size": 47072,
      "upload_time": "2022-08-10T11:14:19",
      "upload_time_iso_8601": "2022-08-10T11:14:19.855459Z",
      "url": "https://files.pythonhosted.org/packages/cf/2f/6c724deb09457f6978cf793023be245ef46040cf1f1cc4dbf8ffae9cc23e/timeshap-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}