{
  "info": {
    "author": "Chalmers University of Technology / Jens Ahrens",
    "author_email": "jens.ahrens@chalmers.se",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Topic :: Multimedia :: Sound/Audio"
    ],
    "description": "Sound Field Analysis toolbox for Python\n=======================================\n\n.. image:: https://api.travis-ci.org/QULab/sound_field_analysis-py.svg\n.. image:: https://ci.appveyor.com/api/projects/status/u0koxo5vcitmbghc?svg=true\n\n.. sphinx-include-start-1\n\nThe *sound\\_field\\_analysis* toolbox (short: *sfa*) is a Python port of the `Sound Field Analysis Toolbox (SOFiA) toolbox`_, originally by Benjamin Bernschütz `[1]`_. The main goal of the *sfa* toolbox is to analyze, visualize and process sound field data recorded by spherical microphone arrays. Furthermore, various types of test-data may be generated to evaluate the implemented functions. It is an essential building block of `ReTiSAR <https://github.com/AppliedAcousticsChalmers/ReTiSAR>`_, an implementation  of real time binaural rendering of spherical microphone array data.\n\n\nRequirements\n------------\n\nWe use `Python 3.9 <https://www.python.org/downloads/>`_ for development. Chances are that earlier version will work too but this is currently untested.\n\nThe following external libraries are required:\n\n-  `NumPy <http://www.numpy.org>`_\n-  `SciPy <http://www.scipy.org>`_\n-  `Pysofaconventions <https://github.com/andresperezlopez/pysofaconventions>`_\n-  `Jupyter`_ (for running *Notebooks* locally)\n-  `Plotly <https://plot.ly/python/>`_ (for plotting)\n\n\nInstallation\n------------\n\nFor performance and convenience reasons we highly recommend to use `Conda`_ (miniconda for simplicity) to manage your Python installation. Once installed, you can use the following steps to receive and use *sfa*, depending on your use case:\n\n*   From `PyPI`_ / ``pip``:\n\n    |  Install into an existing environment (without example `Jupyter`_ *Notebooks*):\n    |  ``pip install sound_field_analysis``\n\n*   By cloning (or downloading) the repository and setting up a new environment:\n\n    |  ``git clone https://github.com/AppliedAcousticsChalmers/sound_field_analysis-py.git``\n    |  ``cd sound_field_analysis-py/``\n\n    |  Create a new `Conda`_ environment from the specified dependencies:\n    |  ``conda env create --file environment.yml --force``\n\n    |  Activate the environment:\n    |  ``source activate sfa``\n\n    |  **Optional:** Install additional dependencies for development purposes (locally run `Jupyter`_ *Notebooks* with example, run tests, generate documentation):\n    |  ``conda env update --file environment_dev.yml``\n\n.. C.  From `conda-forge <https://conda-forge.github.io>`_ channel: **[outdated]**\n\n    |  Install into an existing environment:\n    |  ``conda install -c conda-forge sound_field_analysis``\n\n\nExamples\n--------\n\nThe following examples are available as `Jupyter`_ *Notebooks*, either statically on `GitHub <examples/>`_ or interactively on `nbviewer <http://nbviewer.jupyter.org/github/AppliedAcousticsChalmers/sound_field_analysis-py/tree/master/examples/>`_. You can of course also simply download the examples and run them locally!\n\n\nExp1: Ideal plane wave\n^^^^^^^^^^^^^^^^^^^^^^\n\nIdeal unity plane wave simulation and 3D plot.\n\n`View interactively on nbviewer <https://nbviewer.jupyter.org/github/AppliedAcousticsChalmers/sound_field_analysis-py/blob/master/examples/Exp1_IdealPlaneWave.ipynb>`__\n\n.. sphinx-include-end-1\n\n|AE1_img|_\n\n.. |AE1_img| image:: examples/img/AE1_shape.png?raw=true\n.. _AE1_img: https://nbviewer.jupyter.org/github/AppliedAcousticsChalmers/sound_field_analysis-py/blob/master/examples/Exp1_IdealPlaneWave.ipynb\n\n.. sphinx-include-start-2\n\n\nExp2: Measured plane wave\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nA measured plane wave from AZ=180°, EL=90° in the anechoic chamber using a cardioid mic.\n\n`View interactively on nbviewer <https://nbviewer.jupyter.org/github/AppliedAcousticsChalmers/sound_field_analysis-py/blob/master/examples/Exp2_MeasuredWave.ipynb>`__\n\n.. sphinx-include-end-2\n\n|AE2_img|_\n\n.. |AE2_img| image:: examples/img/AE2_shape.png?raw=true\n.. _AE2_img: https://nbviewer.jupyter.org/github/AppliedAcousticsChalmers/sound_field_analysis-py/blob/master/examples/Exp2_MeasuredWave.ipynb\n\n.. sphinx-include-start-3\n\n\nExp4: Binaural rendering\n^^^^^^^^^^^^^^^^^^^^^^^^\n\nRender a spherical microphone array impulse response measurement binaurally. The example shows examples for loading miro or `SOFA`_ files.\n\n`View interactively on nbviewer <https://nbviewer.jupyter.org/github/AppliedAcousticsChalmers/sound_field_analysis-py/blob/master/examples/Exp4_BinauralRendering.ipynb>`__\n\n.. sphinx-include-end-3\n\n|AE4_img|_\n\n.. |AE4_img| image:: examples/img/AE4_radial_filters.png?raw=true\n.. _AE4_img: https://nbviewer.jupyter.org/github/AppliedAcousticsChalmers/sound_field_analysis-py/blob/master/examples/Exp4_BinauralRendering.ipynb\n\n.. sphinx-include-start-4\n\n\nVersion history\n---------------\n\n*v2021.2.4*\n    * Implement option to use real spherical harmonic basis functions\n    * Update Exp4 to optionally utilize real spherical harmonics\n    * Fix testing of spherical harmonics against reference Matlab implementation\n    * Add testing for generation of real spherical harmonics\n    * Add evaluation of performance for generation of complex and real spherical harmonics\n    * Add evaluation of performance for spatial sound field decomposition\n    * Update `Conda`_ environment setup to combine all development dependencies\n    * Update `online <https://appliedacousticschalmers.github.io/sound_field_analysis-py/>`_ and `offline <DOCUMENTATION.pdf>`_ documentation\n\n*v2021.1.12*\n    * Update MIRO struct loading (quadrature weights are now optional)\n    * Fix to prevent Python 3.8 syntax warnings\n    * Improve Exp4 (general code structure and utilizing Spherical Head Filter and Spherical Harmonics Tapering)\n\n*v2020.1.30*\n    * Update README and `PyPI`_ package\n\n*v2019.11.6*\n    * Update internal documentation and string formatting\n\n*v2019.8.15*\n    * Change version number scheme to CalVer\n    * Improve Exp4\n    * Update `read_SOFA_file()`\n    * Update 2D plotting functions\n    * Improve `write_SSR_IRs()`\n    * Improve `Conda`_ environment setup for `Jupyter`_ Notebooks\n    * Update `miro_to_struct()`\n\n*2019-07-30 (v0.9)*\n    * Implement `SOFA`_ import\n    * Update Exp4 to contain `SOFA`_ import\n    * Delete obsolete Exp3\n    * Add named tuple `HRIRSignal`\n    * Implement `cart2sph()` and `sph2cart()` utility functions\n    * Add `Conda`_ environment file for convenient installation of required packages\n\n*2019-07-11 (v0.8)*\n    * Implement Spherical Harmonics coefficients tapering\n    * Update Spherical Head Filter to consider tapering\n\n*2019-06-17 (v0.7)*\n    * Implement Bandwidth Extension for Microphone Arrays (BEMA)\n    * Edit `read_miro_struct()`, named tuple `ArraySignal` and `miro_to_struct.m` to load center measurements\n\n*2019-06-11 (v0.6)*\n    * Implement Radial Filter Improvement from `Sound Field Analysis Toolbox (SOFiA) toolbox`_\n\n*2019-05-23 (v0.5)*\n    * Implement Spherical Head Filter\n    * Implement Spherical Fourier Transform using pseudo-inverse\n    * Extract real time capable spatial Fourier transform\n    * Extract reversed m index function (Update Exp4)\n\n\nContribute\n----------\n\nSee `CONTRIBUTE.rst <CONTRIBUTE.rst>`_ for full details.\n\nYou can find the full offline documentation as `PDF <DOCUMENTATION.pdf>`_ as well as online at https://appliedacousticschalmers.github.io/sound_field_analysis-py/ .\n\n\nLicense\n-------\n\nThis software is licensed under the MIT License (see `LICENSE <LICENSE>`_ for full details).\n\n\nReferences\n----------\n\nThe *sound_field_analysis* toolbox is based on the Matlab/C++ `Sound Field Analysis Toolbox (SOFiA) toolbox`_ by Benjamin Bernschütz. For more information you may refer to the original publication:\n\n[1] `Bernschütz, B., Pörschmann, C., Spors, S., and Weinzierl, S. (2011). SOFiA Sound Field Analysis Toolbox. Proceedings of the ICSA International Conference on Spatial Audio <http://spatialaudio.net/sofia-sound-field-analysis-toolbox-2/>`_\n\nThe Lebedev grid generation was adapted from an implementation by `Richard P. Muller <https://github.com/gabrielelanaro/pyquante/blob/master/Data/lebedev_write.py>`_.\n\n.. _Sound Field Analysis Toolbox (SOFiA) toolbox: http://audiogroup.web.th-koeln.de/SOFiA_wiki/WELCOME.html\n.. _[1]: #references\n.. _PyPI: https://pypi.org/project/sound-field-analysis/\n.. _Jupyter: https://jupyter.org/\n.. _Conda: https://conda.io/en/master/miniconda.html\n.. _SOFA: https://www.sofaconventions.org/mediawiki/index.php/SOFA_(Spatially_Oriented_Format_for_Acoustics)\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AppliedAcousticsChalmers/sound_field_analysis-py/",
    "keywords": "sound field analysis spherical microphone array",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sound-field-analysis",
    "package_url": "https://pypi.org/project/sound-field-analysis/",
    "platform": "",
    "project_url": "https://pypi.org/project/sound-field-analysis/",
    "project_urls": {
      "Homepage": "https://github.com/AppliedAcousticsChalmers/sound_field_analysis-py/"
    },
    "release_url": "https://pypi.org/project/sound-field-analysis/2021.2.4/",
    "requires_dist": [
      "scipy",
      "numpy",
      "pysofaconventions",
      "jupyter ; extra == 'examples'",
      "plotly ; extra == 'plotting'",
      "pytest ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "Analyze, visualize and process sound field data recorded by spherical microphone arrays.",
    "version": "2021.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9729667,
  "releases": {
    "0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a8d78bd7f764c78858c8192b636a41992f8d2fd16d943464c266bf7359cd1a9",
          "md5": "4e744c193ce560bc7ccfbe38cf55294f",
          "sha256": "6aa0b31a0ae4f88121cdc7225b61f0a4f0f1da75a5d87d74dd62f92d4b586517"
        },
        "downloads": -1,
        "filename": "sound_field_analysis-0.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e744c193ce560bc7ccfbe38cf55294f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24637,
        "upload_time": "2016-08-09T13:12:28",
        "upload_time_iso_8601": "2016-08-09T13:12:28.601670Z",
        "url": "https://files.pythonhosted.org/packages/8a/8d/78bd7f764c78858c8192b636a41992f8d2fd16d943464c266bf7359cd1a9/sound_field_analysis-0.1.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5f8aa5ad92e34ff5a7e476b899a2c4eaff25dce26ead54d2657c31ccdd58e27",
          "md5": "c4e06256261835b893ee9da1d108e4f9",
          "sha256": "b159c27ea0ac15962bb596172827eddacf492298b78580b21e9587c1ea2436ac"
        },
        "downloads": -1,
        "filename": "sound_field_analysis-0.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "c4e06256261835b893ee9da1d108e4f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22036,
        "upload_time": "2016-08-09T13:12:31",
        "upload_time_iso_8601": "2016-08-09T13:12:31.128236Z",
        "url": "https://files.pythonhosted.org/packages/a5/f8/aa5ad92e34ff5a7e476b899a2c4eaff25dce26ead54d2657c31ccdd58e27/sound_field_analysis-0.1.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a397ae119f03a353aca3de884c5cfee9340af38a24e7e80ee54af1186709adcb",
          "md5": "e333853d853b7dfce837418fcadf60df",
          "sha256": "af75e3aaf28abca3ddad0d4889038d87e0efcf041845ca1d3604f401db3766cc"
        },
        "downloads": -1,
        "filename": "sound_field_analysis-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e333853d853b7dfce837418fcadf60df",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "requires_python": null,
        "size": 25405,
        "upload_time": "2016-11-01T11:45:10",
        "upload_time_iso_8601": "2016-11-01T11:45:10.530327Z",
        "url": "https://files.pythonhosted.org/packages/a3/97/ae119f03a353aca3de884c5cfee9340af38a24e7e80ee54af1186709adcb/sound_field_analysis-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdc1c3ba5d907a89e02798449b76e7d8f4f949dbdc5b2f9a473c5ad06c72376f",
          "md5": "0fb0c92ae98f7eb4832855d62c8fa5c1",
          "sha256": "f8d52d3b67fff6d9a92508552e698dadb0100d202f2d6805356007a9dcdaae4f"
        },
        "downloads": -1,
        "filename": "sound_field_analysis-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0fb0c92ae98f7eb4832855d62c8fa5c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22480,
        "upload_time": "2016-11-01T11:44:54",
        "upload_time_iso_8601": "2016-11-01T11:44:54.366764Z",
        "url": "https://files.pythonhosted.org/packages/fd/c1/c3ba5d907a89e02798449b76e7d8f4f949dbdc5b2f9a473c5ad06c72376f/sound_field_analysis-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee07ab9fde133c248a05e435c97a72260a7314cb5167ec37bc6b3e54b4d217e3",
          "md5": "615d05e826a97b2c9e3f8c1717ba4461",
          "sha256": "537b2a8f8733fee7b2b2f273600c62d95b5156d98c6ede656a09d218f3ab952b"
        },
        "downloads": -1,
        "filename": "sound_field_analysis-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "615d05e826a97b2c9e3f8c1717ba4461",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28167,
        "upload_time": "2017-02-20T18:24:44",
        "upload_time_iso_8601": "2017-02-20T18:24:44.013400Z",
        "url": "https://files.pythonhosted.org/packages/ee/07/ab9fde133c248a05e435c97a72260a7314cb5167ec37bc6b3e54b4d217e3/sound_field_analysis-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05b0c69a8b8eaa470f77c1cad490a58677acb47bc5e73ecfbc3d45092974a5dc",
          "md5": "fa2e5ff7c4d02ae30eccabdec2a19c4f",
          "sha256": "7a5887e94e268c2bb63b141b811f68c2a94d11692a6817e310c92d919500fe07"
        },
        "downloads": -1,
        "filename": "sound_field_analysis-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fa2e5ff7c4d02ae30eccabdec2a19c4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29957,
        "upload_time": "2017-02-20T18:24:46",
        "upload_time_iso_8601": "2017-02-20T18:24:46.365763Z",
        "url": "https://files.pythonhosted.org/packages/05/b0/c69a8b8eaa470f77c1cad490a58677acb47bc5e73ecfbc3d45092974a5dc/sound_field_analysis-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.1.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "650ef80922673b3e181823d60903b01f09230e382d0301b89a88f9f5fa6c3a86",
          "md5": "34f03bd880e2aa24e8cb69a5fabc7087",
          "sha256": "e0bf15abb5e86fb67b2b52442d12f62830dbcac64ee8bceb1ab549e142a8a9d8"
        },
        "downloads": -1,
        "filename": "sound_field_analysis-2020.1.30-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34f03bd880e2aa24e8cb69a5fabc7087",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 37733,
        "upload_time": "2020-01-30T12:41:45",
        "upload_time_iso_8601": "2020-01-30T12:41:45.429823Z",
        "url": "https://files.pythonhosted.org/packages/65/0e/f80922673b3e181823d60903b01f09230e382d0301b89a88f9f5fa6c3a86/sound_field_analysis-2020.1.30-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42f7d9a009d73c7619a6d55db2886a94b3cf48053532324836cae79c17f08a9f",
          "md5": "99598761f366e7aa76b8903d50d93c35",
          "sha256": "3cd7a98913f9489aa2900a14a97ed8b3b56cb827b66fe60b3dc41a77bfc5d97a"
        },
        "downloads": -1,
        "filename": "sound_field_analysis-2020.1.30.tar.gz",
        "has_sig": false,
        "md5_digest": "99598761f366e7aa76b8903d50d93c35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 43488,
        "upload_time": "2020-01-30T12:41:47",
        "upload_time_iso_8601": "2020-01-30T12:41:47.303651Z",
        "url": "https://files.pythonhosted.org/packages/42/f7/d9a009d73c7619a6d55db2886a94b3cf48053532324836cae79c17f08a9f/sound_field_analysis-2020.1.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cebb6d052aaa17faf1ab1b5e80ca1f03ba43169d50b7ddbfde384985eff5098f",
          "md5": "8fda0a44a3b882954304c573d21b9cba",
          "sha256": "966082d32e2e24c532cedef79b5fb271bc1bedf4cc10df6dd7bf15f517d23b3d"
        },
        "downloads": -1,
        "filename": "sound_field_analysis-2021.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fda0a44a3b882954304c573d21b9cba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 41669,
        "upload_time": "2021-03-10T15:41:52",
        "upload_time_iso_8601": "2021-03-10T15:41:52.832663Z",
        "url": "https://files.pythonhosted.org/packages/ce/bb/6d052aaa17faf1ab1b5e80ca1f03ba43169d50b7ddbfde384985eff5098f/sound_field_analysis-2021.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7075a0e96277002a58457ea988d9dba190b6059eeb36983c21b5696ac8bcec2d",
          "md5": "905782fb02a5982bb09f88b21bafbef7",
          "sha256": "8b48737ac254eb684a51f52bc542a38e2d862477b69c3430b66f8fc5dcbe6c2a"
        },
        "downloads": -1,
        "filename": "sound_field_analysis-2021.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "905782fb02a5982bb09f88b21bafbef7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 48618,
        "upload_time": "2021-03-10T15:41:54",
        "upload_time_iso_8601": "2021-03-10T15:41:54.232510Z",
        "url": "https://files.pythonhosted.org/packages/70/75/a0e96277002a58457ea988d9dba190b6059eeb36983c21b5696ac8bcec2d/sound_field_analysis-2021.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cebb6d052aaa17faf1ab1b5e80ca1f03ba43169d50b7ddbfde384985eff5098f",
        "md5": "8fda0a44a3b882954304c573d21b9cba",
        "sha256": "966082d32e2e24c532cedef79b5fb271bc1bedf4cc10df6dd7bf15f517d23b3d"
      },
      "downloads": -1,
      "filename": "sound_field_analysis-2021.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8fda0a44a3b882954304c573d21b9cba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 41669,
      "upload_time": "2021-03-10T15:41:52",
      "upload_time_iso_8601": "2021-03-10T15:41:52.832663Z",
      "url": "https://files.pythonhosted.org/packages/ce/bb/6d052aaa17faf1ab1b5e80ca1f03ba43169d50b7ddbfde384985eff5098f/sound_field_analysis-2021.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7075a0e96277002a58457ea988d9dba190b6059eeb36983c21b5696ac8bcec2d",
        "md5": "905782fb02a5982bb09f88b21bafbef7",
        "sha256": "8b48737ac254eb684a51f52bc542a38e2d862477b69c3430b66f8fc5dcbe6c2a"
      },
      "downloads": -1,
      "filename": "sound_field_analysis-2021.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "905782fb02a5982bb09f88b21bafbef7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 48618,
      "upload_time": "2021-03-10T15:41:54",
      "upload_time_iso_8601": "2021-03-10T15:41:54.232510Z",
      "url": "https://files.pythonhosted.org/packages/70/75/a0e96277002a58457ea988d9dba190b6059eeb36983c21b5696ac8bcec2d/sound_field_analysis-2021.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}