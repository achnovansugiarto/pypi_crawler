{
  "info": {
    "author": "Andy Hayden",
    "author_email": "andyhayden1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Version Control"
    ],
    "description": "pep8radius\r\n----------\r\n\r\n`PEP8 <http://legacy.python.org/dev/peps/pep-0008/>`__ clean only the\r\nparts of the files touched since the last commit, a previous commit or\r\n(the merge-base of) a branch.\r\n\r\n|Current PyPi Version| |MIT licensed| |Travis CI Status| |Coverage\r\nStatus| |PyPi Monthly Downloads|\r\n\r\nFixing the entire project of PEP8 infractions (\"PEP8 storms\") can lead\r\nto merge conflicts, add noise to merges / pull requests and break (git)\r\nblame. pep8radius solves this problem by fixing only those PEP8\r\ninfractions incontained on the lines of the project which you've been\r\nworking, leaving these sections \"better than you found it\" whilst\r\nkeeping your commits focused on the areas of the codebase you were\r\nactually working on.\r\n\r\nInstallation\r\n------------\r\n\r\nFrom pip:\r\n\r\n.. code:: sh\r\n\r\n    $ pip install pep8radius\r\n\r\nUsage\r\n-----\r\n\r\n.. figure:: https://cloud.githubusercontent.com/assets/1931852/4259885/18a7e75e-3b1a-11e4-9413-d92f9b170b70.gif\r\n   :alt: Usage gif of pep8radius\r\n   :width: 650px\r\n\r\n   Usage gif of pep8radius\r\n\r\n-  Move to project directory\r\n-  Make some changes to the project\r\n-  Run ``pep8radius --diff       # view a diff of proposed fixed``\r\n-  Run ``pep8radius --in-place   # apply the fixes``\r\n-  Commit your changes\r\n\r\nAgainst a branch you can use the same syntax as with git diff:\r\n\r\n.. code:: sh\r\n\r\n    $ pep8radius master   # branch name to compare against (compares against merge-base)\r\n    $ pep8radius c12166f  # commit hash\r\n\r\n    $ pep8radius master --in-place  # these work with other options too\r\n\r\nYou can also fix docstrings\r\n(`PEP257 <http://legacy.python.org/dev/peps/pep-0257/>`__) using the\r\n`docformatter <https://pypi.python.org/pypi/docformatter>`__ option:\r\n\r\n.. code:: sh\r\n\r\n    $ pep8radius --docformatter --diff\r\n\r\n*Note: can also use ``btyfi`` alias for ``pep8radius``.*\r\n\r\n--------------\r\n\r\nIt can be nice to pipe the diff to\r\n`cdiff <https://pypi.python.org/pypi/cdiff>`__ (which makes diffs pretty\r\nand has lots of options):\r\n\r\n.. code:: sh\r\n\r\n    $ pep8radius --diff --no-color | cdiff\r\n    $ pep8radius --diff --no-color | cdiff --side-by-side\r\n\r\nYou can get strange results if you don't use no-color.\r\nI actually use the following git alias (which allows ``git rad`` and\r\n``git rad -i``):\r\n\r\n.. code:: sh\r\n\r\n    [alias]\r\n        rad = !pep8radius master --diff --no-color $@ | cdiff --side-by-side\r\n\r\nwhich outputs the corrections as follows:\r\n\r\n.. figure:: https://cloud.githubusercontent.com/assets/1931852/4259933/f0589480-3b1c-11e4-89cf-565c28da700a.png\r\n   :alt: git rad\r\n   :width: 650px\r\n\r\n   git rad\r\n\r\n--------------\r\n\r\nYou can pipe in a diff directly, to fix the lines modified in it with\r\n``--from-diff`` (this is somewhat experimental, please report failing\r\ndiffs!).\r\nFor example:\r\n\r\n.. code:: sh\r\n\r\n    $ git diff master | pep8radius --diff --from-diff=-\r\n\r\nRequirements\r\n------------\r\n\r\npep8radius uses `autopep8 <https://pypi.python.org/pypi/autopep8>`__,\r\nand in turn `pep8 <https://pypi.python.org/pypi/pep8>`__. The\r\ndocformatter option, to fix docstrings, uses\r\n`docformatter <https://pypi.python.org/pypi/docformatter>`__.\r\n\r\nVCS Support\r\n-----------\r\n\r\n`Git <http://git-scm.com/>`__, `Mecurial\r\n(hg) <http://mercurial.selenic.com/>`__, (tentatively)\r\n`Bazaar <http://bazaar.canonical.com/en/>`__. Please request support for\r\nother version control systems on\r\n`github <https://github.com/hayd/pep8radius/issues/5>`__.\r\n\r\nOptions\r\n-------\r\n\r\n.. code:: sh\r\n\r\n    $ pep8radius --help\r\n\r\n    usage: pep8radius [-h] [--version] [-d] [-i] [--no-color] [-v]\r\n                      [--from-diff DIFF] [-p n] [-a] [--experimental]\r\n                      [--exclude globs] [--list-fixes] [--ignore errors]\r\n                      [--select errors] [--max-line-length n] [--indent-size n]\r\n                      [-f] [--no-blank] [--pre-summary-newline] [--force-wrap]\r\n                      [--global-config GLOBAL_CONFIG] [--ignore-local-config]\r\n                      [rev]\r\n\r\n    PEP8 clean only the parts of the files which you have touched since the last\r\n    commit, a previous commit or (the merge-base of) a branch.\r\n\r\n    positional arguments:\r\n      rev                   commit or name of branch to compare against\r\n\r\n    optional arguments:\r\n      -h, --help            show this help message and exit\r\n      --version             print version number and exit\r\n      -d, --diff            print the diff of fixed source vs original\r\n      -i, --in-place        make the fixes in place; modify the files\r\n      --no-color            do not print diffs in color (default is to use color)\r\n      -v, --verbose         print verbose messages; multiple -v result in more\r\n                            verbose messages (one less -v is passed to autopep8)\r\n      --from-diff DIFF      Experimental: rather than calling out to version\r\n                            control, just pass in a diff; the modified lines will\r\n                            be fixed\r\n\r\n    pep8:\r\n      Pep8 options to pass to autopep8.\r\n\r\n      -p n, --pep8-passes n\r\n                            maximum number of additional pep8 passes (default:\r\n                            infinite)\r\n      -a, --aggressive      enable non-whitespace changes; multiple -a result in\r\n                            more aggressive changes\r\n      --experimental        enable experimental fixes\r\n      --exclude globs       exclude file/directory names that match these comma-\r\n                            separated globs\r\n      --list-fixes          list codes for fixes and exit; used by --ignore and\r\n                            --select\r\n      --ignore errors       do not fix these errors/warnings (default: E24)\r\n      --select errors       fix only these errors/warnings (e.g. E4,W)\r\n      --max-line-length n   set maximum allowed line length (default: 79)\r\n      --indent-size n       number of spaces per indent level (default 4)\r\n\r\n    docformatter:\r\n      Fix docstrings for PEP257.\r\n\r\n      -f, --docformatter    Use docformatter\r\n      --no-blank            Do not add blank line after description\r\n      --pre-summary-newline\r\n                            add a newline before the summary of a multi-line\r\n                            docstring\r\n      --force-wrap          force descriptions to be wrapped even if it may result\r\n                            in a mess\r\n\r\n    config:\r\n      Change default options based on global or local (project) config files.\r\n\r\n      --global-config filename\r\n                            path to global pep8 config file; if this file does not\r\n                            exist then this is ignored (default: ~/.config/pep8)\r\n      --ignore-local-config\r\n                            don't look for and apply local config files; if not\r\n                            passed, defaults are updated with any config files in\r\n                            the project's root dir\r\n\r\n    Run before you commit, against a previous commit or branch before merging.\r\n\r\n*For more information about these options see\r\n`autopep8 <https://pypi.python.org/pypi/autopep8>`__.*\r\n\r\nAs a module\r\n-----------\r\n\r\nPep8radius also exports lightweight wrappers around autopep8 so that you\r\ncan fix line ranges of your code with ``fix_code`` or ``fix_file``.\r\n\r\nHere's the example \"bad code\" from `autopep8's\r\nREADME <https://github.com/hhatto/autopep8/blob/master/README.rst#usage>`__:\r\n\r\n.. code:: py\r\n\r\n    import math, sys;\r\n\r\n    def example1():\r\n        ####This is a long comment. This should be wrapped to fit within 72 characters.\r\n        some_tuple=(   1,2, 3,'a'  );\r\n        some_variable={'long':'Long code lines should be wrapped within 79 characters.',\r\n        'other':[math.pi, 100,200,300,9876543210,'This is a long string that goes on'],\r\n        'more':{'inner':'This whole logical line should be wrapped.',some_tuple:[1,\r\n        20,300,40000,500000000,60000000000000000]}}\r\n        return (some_tuple, some_variable)\r\n    def example2(): return {'has_key() is deprecated':True}.has_key({'f':2}.has_key(''));\r\n    class Example3(   object ):\r\n        def __init__    ( self, bar ):\r\n         #Comments should have a space after the hash.\r\n         if bar : bar+=1;  bar=bar* bar   ; return bar\r\n         else:\r\n                        some_string = \"\"\"\r\n                   Indentation in multiline strings should not be touched.\r\n    Only actual code should be reindented.\r\n    \"\"\"\r\n                        return (sys.path, some_string)\r\n\r\nYou can pep8 fix just the line ranges 1-1 (the imports) and 12-21 (the\r\n``Example3``\\ class) with\r\n``pep8radius.fix_code(code, [(1, 1), (12, 21)])`` (where code is a\r\nstring of the above), which returns the code fixed within those ranges:\r\n\r\n.. code:: py\r\n\r\n    import math\r\n    import sys\r\n\r\n    def example1():\r\n        ####This is a long comment. This should be wrapped to fit within 72 characters.\r\n        some_tuple=(   1,2, 3,'a'  );\r\n        some_variable={'long':'Long code lines should be wrapped within 79 characters.',\r\n        'other':[math.pi, 100,200,300,9876543210,'This is a long string that goes on'],\r\n        'more':{'inner':'This whole logical line should be wrapped.',some_tuple:[1,\r\n        20,300,40000,500000000,60000000000000000]}}\r\n        return (some_tuple, some_variable)\r\n    def example2(): return {'has_key() is deprecated':True}.has_key({'f':2}.has_key(''));\r\n\r\n\r\n    class Example3(object):\r\n\r\n        def __init__(self, bar):\r\n            # Comments should have a space after the hash.\r\n            if bar:\r\n                bar += 1\r\n                bar = bar * bar\r\n                return bar\r\n            else:\r\n                some_string = \"\"\"\r\n                           Indentation in multiline strings should not be touched.\r\n    Only actual code should be reindented.\r\n    \"\"\"\r\n                return (sys.path, some_string)\r\n\r\nYou can use ``fix_file`` to do this directly on a file, which gives you\r\nthe option of doing this in place.\r\n\r\n.. code:: py\r\n\r\n    pep8radius.fix_code('code.py', [(1, 1), (12, 21)], in_place=True)\r\n\r\nYou can also pass the same arguments to pep8radius script itself using\r\nthe ``parse_args``. For example ignoring long lines (E501) and use the\r\noptions from your global config files:\r\n\r\n.. code:: py\r\n\r\n    args = pep8radius.parse_args(['--ignore=E501', '--ignore-local-config'],\r\n                                 apply_config=True)\r\n    pep8radius.fix_code(code, [(1, 1), (12, 21)], options=args)\r\n\r\n.. |Current PyPi Version| image:: http://img.shields.io/pypi/v/pep8radius.png\r\n   :target: https://pypi.python.org/pypi/pep8radius\r\n.. |MIT licensed| image:: http://img.shields.io/badge/license-MIT-brightgreen.png\r\n   :target: http://choosealicense.com/licenses/mit/\r\n.. |Travis CI Status| image:: http://img.shields.io/travis/hayd/pep8radius.png\r\n   :target: https://travis-ci.org/hayd/pep8radius/builds\r\n.. |Coverage Status| image:: http://img.shields.io/coveralls/hayd/pep8radius.png\r\n   :target: https://coveralls.io/r/hayd/pep8radius\r\n.. |PyPi Monthly Downloads| image:: http://img.shields.io/pypi/dm/pep8radius.png\r\n   :target: https://pypi.python.org/pypi/pep8radius",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hayd/pep8radius",
    "keywords": "automation,pep8,format,autopep8,git,hg,mercurial,bzr",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Better-Than-You-Found-It",
    "package_url": "https://pypi.org/project/Better-Than-You-Found-It/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/Better-Than-You-Found-It/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/hayd/pep8radius"
    },
    "release_url": "https://pypi.org/project/Better-Than-You-Found-It/0.9.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "PEP8 clean only the parts of the files which you have touched since the last commit, a previous commit or (the merge-base of) a branch.",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1249037,
  "releases": {
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca2b09e7605328c2f1cf0a5378c64b48b125b6a339cdc673ba182fab3ddfcdf4",
          "md5": "e667961bf70baeeae61d00ee2560b4f2",
          "sha256": "9454ad99a6c70be768fcada044224c38d13c05692121e32f1f0a76403da6112f"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e667961bf70baeeae61d00ee2560b4f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3802,
        "upload_time": "2014-03-26T06:05:06",
        "upload_time_iso_8601": "2014-03-26T06:05:06.437977Z",
        "url": "https://files.pythonhosted.org/packages/ca/2b/09e7605328c2f1cf0a5378c64b48b125b6a339cdc673ba182fab3ddfcdf4/Better-Than-You-Found-It-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3105c64cec7511c32ffab4a9fccb53b58850d1c3d13367935bf8b8091722454b",
          "md5": "3f937ed354782ba8ed3664e6f02307f9",
          "sha256": "409308bf1db482ad99fcbae29ac792444425207d88c1e80548d6992ae827c1fe"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3f937ed354782ba8ed3664e6f02307f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5147,
        "upload_time": "2014-03-27T09:14:00",
        "upload_time_iso_8601": "2014-03-27T09:14:00.196825Z",
        "url": "https://files.pythonhosted.org/packages/31/05/c64cec7511c32ffab4a9fccb53b58850d1c3d13367935bf8b8091722454b/Better-Than-You-Found-It-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a1ccf14e1cc992178f0b4de55b50b0072ea2b651d81616cc06ae6fbb6231445",
          "md5": "9aefe48cfa51c40496cf139d17667bac",
          "sha256": "23919c10ddf46b4c762d7402c7b3c716ab8627fd201d819fd03578c9531bd3eb"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9aefe48cfa51c40496cf139d17667bac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5577,
        "upload_time": "2014-03-27T19:16:05",
        "upload_time_iso_8601": "2014-03-27T19:16:05.297655Z",
        "url": "https://files.pythonhosted.org/packages/5a/1c/cf14e1cc992178f0b4de55b50b0072ea2b651d81616cc06ae6fbb6231445/Better-Than-You-Found-It-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "839a06b1b2699eeb7c63a26de611d7ef17222187aad58f92db7c40fa32d363d4",
          "md5": "349130677344d1a72d8e772832d31ff4",
          "sha256": "f9f638c071b5adacafd1eb59c536edd7eb1633bfcba9b20607c01ff6c17ba1d8"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "349130677344d1a72d8e772832d31ff4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7514,
        "upload_time": "2014-04-02T07:48:34",
        "upload_time_iso_8601": "2014-04-02T07:48:34.420994Z",
        "url": "https://files.pythonhosted.org/packages/83/9a/06b1b2699eeb7c63a26de611d7ef17222187aad58f92db7c40fa32d363d4/Better-Than-You-Found-It-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5a": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f204884b87a2f6d010899590a9a6bd22b3665442fbf4f46b529fee1de131228",
          "md5": "7e3e35ea49754b6e4893c5390135bd48",
          "sha256": "bb7db174ec90e7585f11e1fe5b4d0780674d407ac85a9574d4f0d04692d549d0"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.5a.tar.gz",
        "has_sig": false,
        "md5_digest": "7e3e35ea49754b6e4893c5390135bd48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7510,
        "upload_time": "2014-04-02T07:48:09",
        "upload_time_iso_8601": "2014-04-02T07:48:09.872474Z",
        "url": "https://files.pythonhosted.org/packages/1f/20/4884b87a2f6d010899590a9a6bd22b3665442fbf4f46b529fee1de131228/Better-Than-You-Found-It-0.5a.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c94f3eaabad4de99f51b512bfbf06f0b78e6a0177b54c2c34be6e09638e7a58",
          "md5": "3c9ebe584a0d9ca690500f4bdb66cd51",
          "sha256": "9146d09c23de2b7099294c483356303f99910152d06a2f0ed3b8b96aa30373ce"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "3c9ebe584a0d9ca690500f4bdb66cd51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9470,
        "upload_time": "2014-04-05T02:40:05",
        "upload_time_iso_8601": "2014-04-05T02:40:05.394486Z",
        "url": "https://files.pythonhosted.org/packages/5c/94/f3eaabad4de99f51b512bfbf06f0b78e6a0177b54c2c34be6e09638e7a58/Better-Than-You-Found-It-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60a97e320841ff834384f052a4a9c9fe588b3457b1f11b4012c808f47892eb47",
          "md5": "57087eedd10db2e5d5ca9fefb3b99181",
          "sha256": "8b15bb9c98e6bea985b992df56aedf59169d1b8cdffab989a4e9571ee489b730"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "57087eedd10db2e5d5ca9fefb3b99181",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13156,
        "upload_time": "2014-04-20T20:22:40",
        "upload_time_iso_8601": "2014-04-20T20:22:40.073786Z",
        "url": "https://files.pythonhosted.org/packages/60/a9/7e320841ff834384f052a4a9c9fe588b3457b1f11b4012c808f47892eb47/Better-Than-You-Found-It-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "410a3b02628116736f67bd87d49b7f3a27bf4034c6db03b0200c634e7955fc60",
          "md5": "9e44b24cc264b5ab60260b74096350ee",
          "sha256": "6d36455ce9b47cc832919961d01b8a921cdbbeffe36543b38fdfc9d49e1115bb"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "9e44b24cc264b5ab60260b74096350ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13726,
        "upload_time": "2014-05-28T05:37:06",
        "upload_time_iso_8601": "2014-05-28T05:37:06.190229Z",
        "url": "https://files.pythonhosted.org/packages/41/0a/3b02628116736f67bd87d49b7f3a27bf4034c6db03b0200c634e7955fc60/Better-Than-You-Found-It-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8f5af4bda3eb69b67cf6d36097a9b49cbd53e6edadb5fb20af709d4d99b9c9b",
          "md5": "f3ecaabff8f558281f983075b8ca4dac",
          "sha256": "3d1d44063aff5ac10f085caf41ee5e63b3c4006fa039db23f898bd1849792f9a"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f3ecaabff8f558281f983075b8ca4dac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13940,
        "upload_time": "2014-06-01T02:49:35",
        "upload_time_iso_8601": "2014-06-01T02:49:35.349565Z",
        "url": "https://files.pythonhosted.org/packages/c8/f5/af4bda3eb69b67cf6d36097a9b49cbd53e6edadb5fb20af709d4d99b9c9b/Better-Than-You-Found-It-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "829ca26208770ff19d3a749f2432cc8fad1606db25972867d016a2409c2695e4",
          "md5": "9bae43dbc6af7063fe12e7b989596b94",
          "sha256": "60042eff5225e5039c4bb92c44e646679246f0293865163bcf20f0575cf48c87"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9bae43dbc6af7063fe12e7b989596b94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16685,
        "upload_time": "2014-09-14T07:30:19",
        "upload_time_iso_8601": "2014-09-14T07:30:19.919733Z",
        "url": "https://files.pythonhosted.org/packages/82/9c/a26208770ff19d3a749f2432cc8fad1606db25972867d016a2409c2695e4/Better-Than-You-Found-It-0.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d86ebe8d99cb37897c39eb81b26b75493886baff357e1fcb6d2847536194af7c",
          "md5": "2a016bb9944701b1e33dafab5ab85960",
          "sha256": "7433bbb7176801c2266e04aea0cc85e37b8474c5781e94b917516234cf0192d4"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a016bb9944701b1e33dafab5ab85960",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20645,
        "upload_time": "2014-09-19T23:06:15",
        "upload_time_iso_8601": "2014-09-19T23:06:15.573922Z",
        "url": "https://files.pythonhosted.org/packages/d8/6e/be8d99cb37897c39eb81b26b75493886baff357e1fcb6d2847536194af7c/Better-Than-You-Found-It-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ca5a34c54cb3f8de3c1bdb792acc67c5ca6781c7c0fe20878e8a2aafd6df485",
          "md5": "5d798e9284a819165f1ca10d96700174",
          "sha256": "6f0113fc630d52900d71ebaafce95440d34b9551b951524893cb402f32e65308"
        },
        "downloads": -1,
        "filename": "Better-Than-You-Found-It-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d798e9284a819165f1ca10d96700174",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24902,
        "upload_time": "2014-10-06T04:41:36",
        "upload_time_iso_8601": "2014-10-06T04:41:36.726130Z",
        "url": "https://files.pythonhosted.org/packages/8c/a5/a34c54cb3f8de3c1bdb792acc67c5ca6781c7c0fe20878e8a2aafd6df485/Better-Than-You-Found-It-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8ca5a34c54cb3f8de3c1bdb792acc67c5ca6781c7c0fe20878e8a2aafd6df485",
        "md5": "5d798e9284a819165f1ca10d96700174",
        "sha256": "6f0113fc630d52900d71ebaafce95440d34b9551b951524893cb402f32e65308"
      },
      "downloads": -1,
      "filename": "Better-Than-You-Found-It-0.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5d798e9284a819165f1ca10d96700174",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24902,
      "upload_time": "2014-10-06T04:41:36",
      "upload_time_iso_8601": "2014-10-06T04:41:36.726130Z",
      "url": "https://files.pythonhosted.org/packages/8c/a5/a34c54cb3f8de3c1bdb792acc67c5ca6781c7c0fe20878e8a2aafd6df485/Better-Than-You-Found-It-0.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}