{
  "info": {
    "author": "TechStorm PC",
    "author_email": "nathan@techstormpc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Data Watcher\n\nThe Data Watcher class is a PyQt system tray application with three main components:\n- Ability to specify a background task to run (i.e. [watchdog observer](https://pypi.org/project/watchdog/))\n- Ability to manually upload a file using the context menu of the tray icon.\n- Logging display\n\n## Example Usage\n\nUsing the `watchdog` library combined with the `FileUploadDialog` class,\nyou can create a program that watches a directory for new files and runs any tasks in the `parse_file` function.\n\nYou can use the pyinstaller library to create a frozen exe to distribute.\n\n```python\nimport logging\nimport sys\nfrom pathlib import Path\n\nfrom watchdog.events import FileSystemEventHandler\nfrom watchdog.observers import Observer\n\nfrom data_watcher import DataWatcher, FileUploadDialog\n\nlogger = logging.getLogger()\nicon_path = Path(\"icon.png\").absolute()\napp_name = \"Data Logger\"\n\n\n# Main parsing method\ndef parse_file(path: Path):\n    logger.info(path)\n\n\nclass CreatedHandler(FileSystemEventHandler):\n    def on_created(self, event):\n        if not event.is_directory and \".txt\" in event.src_path:\n            parse_file(event.src_path)\n\n\ndef init_watcher():\n    event_handler = CreatedHandler()\n    observer = Observer()\n    try:\n        observer.schedule(event_handler, path=str(Path.cwd()), recursive=False)\n        observer.start()\n    except FileNotFoundError:\n        logging.error('Directory not found')\n    logging.info('Watcher Started')\n\n    return observer\n\n\ndef upload_file():\n    FileUploadDialog(\n        app_name=app_name,\n        on_select=parse_file,\n        allowed_files_filter='Text Files (*.txt);;All Files (*)'\n    )\n\n\napp = DataWatcher(\n    app_name=app_name,\n    icon_path=icon_path,\n    background_task=init_watcher,\n    upload_callback=upload_file\n)\n\nsys.exit(app.start())\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/techstormpc/data-watcher-tray",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "data-watcher-tray",
    "package_url": "https://pypi.org/project/data-watcher-tray/",
    "platform": null,
    "project_url": "https://pypi.org/project/data-watcher-tray/",
    "project_urls": {
      "Homepage": "https://github.com/techstormpc/data-watcher-tray"
    },
    "release_url": "https://pypi.org/project/data-watcher-tray/0.0.1/",
    "requires_dist": [
      "PyQt6 (==6.3.1)"
    ],
    "requires_python": "",
    "summary": "System tray app and task runner used for watching files",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14462847,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50f147217e7cb74ff507992220c69fbee4b215ffbcaf9a61c1b818ecd5fbd845",
          "md5": "e2a12dba4d2af098dbbaf2a9a6a354a9",
          "sha256": "525b00545a81b9cb92fc4fad805454223eeb75f56e196ebd92547faba721e0a6"
        },
        "downloads": -1,
        "filename": "data_watcher_tray-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2a12dba4d2af098dbbaf2a9a6a354a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6133,
        "upload_time": "2022-07-17T21:40:39",
        "upload_time_iso_8601": "2022-07-17T21:40:39.583917Z",
        "url": "https://files.pythonhosted.org/packages/50/f1/47217e7cb74ff507992220c69fbee4b215ffbcaf9a61c1b818ecd5fbd845/data_watcher_tray-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "50f147217e7cb74ff507992220c69fbee4b215ffbcaf9a61c1b818ecd5fbd845",
        "md5": "e2a12dba4d2af098dbbaf2a9a6a354a9",
        "sha256": "525b00545a81b9cb92fc4fad805454223eeb75f56e196ebd92547faba721e0a6"
      },
      "downloads": -1,
      "filename": "data_watcher_tray-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e2a12dba4d2af098dbbaf2a9a6a354a9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6133,
      "upload_time": "2022-07-17T21:40:39",
      "upload_time_iso_8601": "2022-07-17T21:40:39.583917Z",
      "url": "https://files.pythonhosted.org/packages/50/f1/47217e7cb74ff507992220c69fbee4b215ffbcaf9a61c1b818ecd5fbd845/data_watcher_tray-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}