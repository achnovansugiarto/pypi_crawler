{
  "info": {
    "author": "Jacob Williams",
    "author_email": "jacobaw@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Programming Language :: Python :: 3"
    ],
    "description": "# spot\\_check\\_files\n\nThis is a tool to help validate the integrity of a set of files, e.g. data backups/exports.\n\n- Checks recognized file types for errors, e.g. invalid json.\n- Generates thumbnails of files when possible.\n- Displays statistics about file types and unrecognized files.\n\nIt produces a report like the following in the terminal (seeing images in the terminal requires iTerm2):\n\n![screenshot of sample output in iTerm2](doc/sample-out-iterm.png)\n\nOr [as HTML](doc/sample-out.html):\n\n![screenshot of rendered sample HTML output](doc/sample-out.html.png)\n\n## Usage\n\nInstall:\n\n1. Install python3 and pip\n2. `pip3 install spot_check_files[imgcat]`\n    - imgcat is optional and enables support for displaying thumbnails in iTerm2 on OS X\n\nRun:\n\n```bash\nspotcheck PATH\n```\n\nThis will output basic stats and any errors the tool detects in the given files/directories.\nIf you're using iTerm2 on Mac, it will also show thumbnails of files.\n\nAlternatively, you can generate an HTML report:\n\n```bash\nspotcheck -H PATH > out.html\n```\n\nThe full list of options can be seen [here](doc/usage.txt) or by running `spotcheck --help`.\n\nThis tool can also be used programmatically.\nThe main entry point for the library is the `CheckerRunner` class in [spot_check_files.checker](src/spot_check_files/checker.py).\nYou can add support for new file types by subclassing the `Checker` class from that module.\n\n## Supported file types\n\nThe command-line tool currently relies entirely on file extension to determine file types.\n\n<table>\n    <thead>\n        <tr>\n            <th>Type</th>\n            <th>Support</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                Archive files:\n                <ul>\n                    <li><code>.tar</code></li>\n                    <li><code>.tar.bz2</code></li>\n                    <li><code>.tar.gz</code></li>\n                    <li><code>.tar.xz</code></li>\n                    <li><code>.tbz</code></li>\n                    <li><code>.tgz</code></li>\n                    <li><code>.txz</code></li>\n                    <li><code>.zip</code></li>\n                </ul>\n            </td>\n            <td>Recursively checks all the files in the archive (including other archives)</td>\n        </tr>\n        <tr>\n            <td>\n                CSV files:\n                <ul>\n                    <li><code>.csv</code></li>\n                    <li><code>.tsv</code></li>\n                </ul>\n            </td>\n            <td>Checks that the CSV dialect can be detected and read by Python, and builds a thumbnail</td>\n        </tr>\n        <tr>\n            <td>\n                Image files:\n                <ul>\n                    <li><code>.bmp</code></li>\n                    <li><code>.gif</code></li>\n                    <li><code>.icns</code></li>\n                    <li><code>.ico</code></li>\n                    <li><code>.jpg</code></li>\n                    <li><code>.jpeg</code></li>\n                    <li><code>.png</code></li>\n                    <li><code>.tiff</code></li>\n                    <li><code>.webp</code></li>\n                </ul>\n            </td>\n            <td>Checks that the file can be loaded by the Python imaging library Pillow, and builds a thumbnail</td>\n        </tr>\n        <tr>\n            <td>JSON files: <code>.json</code></td>\n            <td>Checks that the json can be parsed, and builds a thumbnail of the pretty-printed json</td>\n        </tr>\n        <tr>\n            <td>\n                Text files:\n                <ul>\n                    <li><code>.md</code></li>\n                    <li><code>.txt</code></li>\n                </ul>\n            </td>\n            <td>Treating the file as plaintext, builds a thumbnail</td>\n        </tr>\n        <tr>\n            <td>XML files: <code>.xml</code></td>\n            <td>Checks that the xml can be parsed, and builds a thumbnail of the pretty-printed xml</td>\n        </tr>\n        <tr>\n            <td>anything supported by OS X Quick Look (HTML, Office docs, ...)</td>\n            <td>OS X ONLY: generates thumbnails using Quick Look. This greatly increases the number of supported file types. However, it's slow.</td>\n        </tr>\n    </tbody>\n</table>\n\n## Development\n\nSetup:\n\n1. Install python3 and pip\n2. Clone the repo\n3. I recommend creating a venv:\n    ```bash\n    cd spot_check_files\n    python3 -m venv venv\n    source venv/bin/activate\n    ```\n4. Install dependencies:\n    ```bash\n   pip install .\n   pip install -r requirements-dev.txt\n    ```\n\nTo run tests:\n\n```bash\nPYTHONPATH=src pytest\n```\n\n(Overriding PYTHONPATH as shown ensures the tests run against the code in the src/ directory rather than the installed copy of the package.)\n\nTo run the CLI:\n\n```bash\nPYTHONPATH=src python -m spot_check_files ...\n```\n\n## Contributing\n\nBug reports and pull requests are welcome on GitHub at https://github.com/brokensandals/spot_check_files.\n\n## License\n\nThis is available as open source under the terms of the [MIT License](https://opensource.org/licenses/MIT).\n\nThis package includes and uses a copy of the [Monoid](https://github.com/larsenwork/monoid) font, which is also MIT-licensed.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brokensandals/spot_check_files",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spot-check-files",
    "package_url": "https://pypi.org/project/spot-check-files/",
    "platform": "",
    "project_url": "https://pypi.org/project/spot-check-files/",
    "project_urls": {
      "Homepage": "https://github.com/brokensandals/spot_check_files"
    },
    "release_url": "https://pypi.org/project/spot-check-files/0.0.2/",
    "requires_dist": [
      "Jinja2",
      "Pillow",
      "terminaltables",
      "imgcat ; extra == 'imgcat'"
    ],
    "requires_python": ">=3.7",
    "summary": "Helps validate the integrity of data backups/exports.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7204574,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "def2c2e8f7c312b4efda7560f5864f1e9943f177fb099a67d29d73a1ecbc803a",
          "md5": "582ba29671266b4a4c47eb0e0148d6b4",
          "sha256": "f2f0abe4309c64212d6d7a29d59250e10b1ac2b612c39fd54e513c085edf1c75"
        },
        "downloads": -1,
        "filename": "spot_check_files-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "582ba29671266b4a4c47eb0e0148d6b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 50899,
        "upload_time": "2020-04-22T19:23:51",
        "upload_time_iso_8601": "2020-04-22T19:23:51.019918Z",
        "url": "https://files.pythonhosted.org/packages/de/f2/c2e8f7c312b4efda7560f5864f1e9943f177fb099a67d29d73a1ecbc803a/spot_check_files-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b69a1492e59636d4dc51fcc4fcb65772b26e5851ffbdbfddd1b68696c2580aed",
          "md5": "d59be1e7cefa63da942b7ba30691407b",
          "sha256": "ec0a72475fce12fb03fa581cd401eb90007f3f54cbbd2444ef4367322fd3548d"
        },
        "downloads": -1,
        "filename": "spot_check_files-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d59be1e7cefa63da942b7ba30691407b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 49231,
        "upload_time": "2020-04-22T19:23:53",
        "upload_time_iso_8601": "2020-04-22T19:23:53.055895Z",
        "url": "https://files.pythonhosted.org/packages/b6/9a/1492e59636d4dc51fcc4fcb65772b26e5851ffbdbfddd1b68696c2580aed/spot_check_files-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da9b55fc84d4279329d50d5139871e176d4bda409484bc7294e230789b11964e",
          "md5": "bd637d8306391d2529c603bbd301e924",
          "sha256": "809f7c8893da95c4e42447c7eaf6cddff96abe3050f33982cfc7d7857b7c8c5d"
        },
        "downloads": -1,
        "filename": "spot_check_files-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd637d8306391d2529c603bbd301e924",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 51346,
        "upload_time": "2020-05-09T16:57:21",
        "upload_time_iso_8601": "2020-05-09T16:57:21.969365Z",
        "url": "https://files.pythonhosted.org/packages/da/9b/55fc84d4279329d50d5139871e176d4bda409484bc7294e230789b11964e/spot_check_files-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bad9676de36aa0e5b69a8f84d82d9d259ae1248c8e501a094d2d7bfb57d7b7fb",
          "md5": "4c8e9f0509cde52e48b49069e4df369c",
          "sha256": "81114989988b4c2b9efe3fa30534ec26b765a2296ab7a9704f6dcf83516015d7"
        },
        "downloads": -1,
        "filename": "spot_check_files-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4c8e9f0509cde52e48b49069e4df369c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 49644,
        "upload_time": "2020-05-09T16:57:23",
        "upload_time_iso_8601": "2020-05-09T16:57:23.133430Z",
        "url": "https://files.pythonhosted.org/packages/ba/d9/676de36aa0e5b69a8f84d82d9d259ae1248c8e501a094d2d7bfb57d7b7fb/spot_check_files-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da9b55fc84d4279329d50d5139871e176d4bda409484bc7294e230789b11964e",
        "md5": "bd637d8306391d2529c603bbd301e924",
        "sha256": "809f7c8893da95c4e42447c7eaf6cddff96abe3050f33982cfc7d7857b7c8c5d"
      },
      "downloads": -1,
      "filename": "spot_check_files-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bd637d8306391d2529c603bbd301e924",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 51346,
      "upload_time": "2020-05-09T16:57:21",
      "upload_time_iso_8601": "2020-05-09T16:57:21.969365Z",
      "url": "https://files.pythonhosted.org/packages/da/9b/55fc84d4279329d50d5139871e176d4bda409484bc7294e230789b11964e/spot_check_files-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bad9676de36aa0e5b69a8f84d82d9d259ae1248c8e501a094d2d7bfb57d7b7fb",
        "md5": "4c8e9f0509cde52e48b49069e4df369c",
        "sha256": "81114989988b4c2b9efe3fa30534ec26b765a2296ab7a9704f6dcf83516015d7"
      },
      "downloads": -1,
      "filename": "spot_check_files-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4c8e9f0509cde52e48b49069e4df369c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 49644,
      "upload_time": "2020-05-09T16:57:23",
      "upload_time_iso_8601": "2020-05-09T16:57:23.133430Z",
      "url": "https://files.pythonhosted.org/packages/ba/d9/676de36aa0e5b69a8f84d82d9d259ae1248c8e501a094d2d7bfb57d7b7fb/spot_check_files-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}