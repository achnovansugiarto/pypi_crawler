{
  "info": {
    "author": "WasiX",
    "author_email": "wasix01@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Abgleich\nThis package has the following repositories:\n[Abgleich@github](https://github.com/wasix01/abgleich)\n[Abgleich-binder@github](https://github.com/wasix01/abgleich-binder)\n\n[pypi-test-repo](https://test.pypi.org/manage/project/abgleich-pkg-wasix/releases/)\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/wasix01/abgleich-binder/master?filepath=myfirstjpylabnb.ipynb)\n\n## First time run\n### TLDR\n    from abgleich_pkg.abgleich import  setupEnvironment\n    setupEnvironment()\n\n### detailed\n    import os\n    import logging\n    from abgleich_pkg.abgleich import  setlogging, printGlobals, setupEnvironment\n    os.chdir(os.path.dirname(os.path.realpath(__file__)))\n    setlogging()\n    printGlobals()\n    setupEnvironment()\n\n## start docker\n    cd docker\n    docker-compose -f docker-compose.yml  up\n\n## FÃ¼rs Internet: \n    Freigabe von ip auf port:15432\n\n    dbconnstr='postgresql+psycopg2://postgres:secret@x.x.x.x:15432/mydb'\n\n    Also:\n    port:15432\n    user:postgres\n    pwd:secret\n    server:x.x.x.x\n    database:mydb\n\n## example main\n    import os\n    import logging\n    from abgleich_pkg.abgleich import setlogging, prepareParams, checkDebugEnv, printGlobals, setupEnvironment, write2CSV, writeObj, write2DF, prepareFilterCSV, writeObj, getTuples, calcvalues, \\\n                                    no_abacus, no_names, baseDataDir, tuplefn, tablename, chunksize, agents, threshold, filterOnAlgo, op, dbconnstr\n\n\n    def main():\n        setlogging()\n        prepareParams()\n        printGlobals()\n\n        tuples = getTuples(no_abacus, no_names, f'{baseDataDir}/{tuplefn}')\n        result = calcvalues(agents, chunksize, tuples)\n        writeObj(result, f'{baseDataDir}/{tablename}.result')\n        finallist = prepareFilterCSV(result, threshold, filterOnAlgo, op)\n        writeObj(finallist, f'{baseDataDir}/{tablename}.finallist')\n        write2CSV(finallist, f'{baseDataDir}/{tablename}.csv')\n        write2DF(finallist, f'{baseDataDir}/{tablename}.df')\n        if os.name == 'posix':\n            try: \n                os.chdir('docker')\n                os.system('./do_csv_upload.sh')\n            except OSError: \n                print(\"Something wrong with specified directory. Exception- \", sys.exc_info()) \n            finally: \n                print(\"Current directory is-\", os.getcwd())\n                print('run do_csv_upload.sh manually!')\n        else:\n            logging.warning(f'system: {os.name}. load make take some time....')\n            write2Database(finallist, dbconnstr, tablename)\n\n    if __name__ == \"__main__\":\n        os.chdir(os.path.dirname(os.path.realpath(__file__)))\n        print(f'cwd: {os.curdir}')\n        if True:\n            setlogging()\n            printGlobals()\n            setupEnvironment()\n        else:\n            main()\n\n\n## callme:\n    python3 main.py --no_abacus=all --no_names=all --calcTuples=j --tuplesfile=abgleich.tuples --tablename=ABGLEICH\n\n\n## installation method (try)\n    import sys\n    import subprocess\n    subprocess.check_call([sys.executable, '-m', 'pip', 'install', '--upgrade', '--index-url=https://test.pypi.org/simple', '--no-deps', 'abgleich-pkg-wasix'])\n    import abgleich_pkg\n\n## This markdown :-)\nYou can use \n[Github-flavored Markdown](https://guides.github.com/features/mastering-markdown/)\nto write more content.\n\n\n\n\n\nðŸ“¦ setup.py (for humans)\n=======================\n\nThis repo exists to provide [an example setup.py] file, that can be used\nto bootstrap your next Python project. It includes some advanced\npatterns and best practices for `setup.py`, as well as some\ncommentedâ€“out niceâ€“toâ€“haves.\n\nFor example, this `setup.py` provides a `$ python setup.py upload`\ncommand, which creates a *universal wheel* (and *sdist*) and uploads\nyour package to [PyPi] using [Twine], without the need for an annoying\n`setup.cfg` file. It also creates/uploads a new git tag, automatically.\n\nIn short, `setup.py` files can be daunting to approach, when first\nstarting out â€” even Guido has been heard saying, \"everyone cargo cults\nthems\". It's true â€” so, I want this repo to be the best place to\ncopyâ€“paste from :)\n\n[Check out the example!][an example setup.py]\n\nInstallation\n-----\n\n```bash\ncd your_project\n\n# Download the setup.py file:\n#  download with wget\nwget https://raw.githubusercontent.com/navdeep-G/setup.py/master/setup.py -O setup.py\n\n#  download with curl\ncurl -O https://raw.githubusercontent.com/navdeep-G/setup.py/master/setup.py\n```\n\nTo Do\n-----\n\n-   Tests via `$ setup.py test` (if it's concise).\n\nPull requests are encouraged!\n\nMore Resources\n--------------\n\n-   [What is setup.py?] on Stack Overflow\n-   [Official Python Packaging User Guide](https://packaging.python.org)\n-   [The Hitchhiker's Guide to Packaging]\n-   [Cookiecutter template for a Python package]\n\nLicense\n-------\n\nThis is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any means.\n\n  [an example setup.py]: https://github.com/navdeep-G/setup.py/blob/master/setup.py\n  [PyPi]: https://docs.python.org/3/distutils/packageindex.html\n  [Twine]: https://pypi.python.org/pypi/twine\n  [image]: https://farm1.staticflickr.com/628/33173824932_58add34581_k_d.jpg\n  [What is setup.py?]: https://stackoverflow.com/questions/1471994/what-is-setup-py\n  [The Hitchhiker's Guide to Packaging]: https://the-hitchhikers-guide-to-packaging.readthedocs.io/en/latest/creation.html\n  [Cookiecutter template for a Python package]: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wasix01/abgleich-pkg",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "abgleich-pkg-wasix",
    "package_url": "https://pypi.org/project/abgleich-pkg-wasix/",
    "platform": "",
    "project_url": "https://pypi.org/project/abgleich-pkg-wasix/",
    "project_urls": {
      "Homepage": "https://github.com/wasix01/abgleich-pkg"
    },
    "release_url": "https://pypi.org/project/abgleich-pkg-wasix/0.3.14/",
    "requires_dist": [
      "csvkit",
      "fuzzywuzzy",
      "numpy",
      "p-tqdm",
      "tqdm",
      "pandas",
      "psycopg2-binary",
      "pylint",
      "python-Levenshtein",
      "SQLAlchemy",
      "xlrd",
      "psutil"
    ],
    "requires_python": ">=3.7",
    "summary": "A small string comparison package",
    "version": "0.3.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8848243,
  "releases": {
    "0.3.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cea09469d17cf86810b8d5ba189ddc4165768b5ff8fd02099da64f9d088a6f38",
          "md5": "1cf825258bdf660024338560df3586f8",
          "sha256": "4e6c8543dc6391ae274a1cfbac3bc8ca8dfe4682edda1aa6b7e9b5fb8517ad9c"
        },
        "downloads": -1,
        "filename": "abgleich_pkg_wasix-0.3.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cf825258bdf660024338560df3586f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 1452074,
        "upload_time": "2020-12-08T10:59:50",
        "upload_time_iso_8601": "2020-12-08T10:59:50.959893Z",
        "url": "https://files.pythonhosted.org/packages/ce/a0/9469d17cf86810b8d5ba189ddc4165768b5ff8fd02099da64f9d088a6f38/abgleich_pkg_wasix-0.3.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcdfa8762d711005f6e5a2e8e38a794848db624dbe5c23f8d05ff71beb42a7d2",
          "md5": "8e9a9f6d53c1b0d1344001d9dc42d8bc",
          "sha256": "4667714a9ab1ec2f3bbbf4add8265843da09a4f68d6ced7291f4dfd9b5f2d139"
        },
        "downloads": -1,
        "filename": "abgleich-pkg-wasix-0.3.14.tar.gz",
        "has_sig": false,
        "md5_digest": "8e9a9f6d53c1b0d1344001d9dc42d8bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1455612,
        "upload_time": "2020-12-08T10:59:52",
        "upload_time_iso_8601": "2020-12-08T10:59:52.920943Z",
        "url": "https://files.pythonhosted.org/packages/dc/df/a8762d711005f6e5a2e8e38a794848db624dbe5c23f8d05ff71beb42a7d2/abgleich-pkg-wasix-0.3.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cea09469d17cf86810b8d5ba189ddc4165768b5ff8fd02099da64f9d088a6f38",
        "md5": "1cf825258bdf660024338560df3586f8",
        "sha256": "4e6c8543dc6391ae274a1cfbac3bc8ca8dfe4682edda1aa6b7e9b5fb8517ad9c"
      },
      "downloads": -1,
      "filename": "abgleich_pkg_wasix-0.3.14-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1cf825258bdf660024338560df3586f8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 1452074,
      "upload_time": "2020-12-08T10:59:50",
      "upload_time_iso_8601": "2020-12-08T10:59:50.959893Z",
      "url": "https://files.pythonhosted.org/packages/ce/a0/9469d17cf86810b8d5ba189ddc4165768b5ff8fd02099da64f9d088a6f38/abgleich_pkg_wasix-0.3.14-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dcdfa8762d711005f6e5a2e8e38a794848db624dbe5c23f8d05ff71beb42a7d2",
        "md5": "8e9a9f6d53c1b0d1344001d9dc42d8bc",
        "sha256": "4667714a9ab1ec2f3bbbf4add8265843da09a4f68d6ced7291f4dfd9b5f2d139"
      },
      "downloads": -1,
      "filename": "abgleich-pkg-wasix-0.3.14.tar.gz",
      "has_sig": false,
      "md5_digest": "8e9a9f6d53c1b0d1344001d9dc42d8bc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 1455612,
      "upload_time": "2020-12-08T10:59:52",
      "upload_time_iso_8601": "2020-12-08T10:59:52.920943Z",
      "url": "https://files.pythonhosted.org/packages/dc/df/a8762d711005f6e5a2e8e38a794848db624dbe5c23f8d05ff71beb42a7d2/abgleich-pkg-wasix-0.3.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}