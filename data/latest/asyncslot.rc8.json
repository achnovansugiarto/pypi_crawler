{
  "info": {
    "author": "",
    "author_email": "fancidev <fancidev@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: X11 Applications :: Qt",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# asyncslot\n\n[![build](https://github.com/fancidev/asyncslot/actions/workflows/build.yml/badge.svg)](https://github.com/fancidev/asyncslot/actions/workflows/build.yml)\n[![tests](https://github.com/fancidev/asyncslot/actions/workflows/tests.yml/badge.svg)](https://github.com/fancidev/asyncslot/actions/workflows/tests.yml)\n[![codecov](https://codecov.io/gh/fancidev/asyncslot/branch/master/graph/badge.svg?token=JZ5ON6CHKA)](https://codecov.io/gh/fancidev/asyncslot)\n[![PyPI](https://img.shields.io/pypi/v/asyncslot)](https://pypi.org/project/asyncslot/)\n\n`asyncslot` is a Python module that allows you to use asyncio-based \nlibraries in Python for Qt.\n\n## Synopsis\n\nTo use asyncio-based libraries in Python for Qt, wrap `app.exec()` inside \n`AsyncSlotRunner`, and connect signal to a coroutine function using \n`asyncSlot`.\n\nA minimal working GUI example (taken from `examples/minimal_gui.py`):\n\n```Python\nimport asyncio\nfrom PySide6 import QtWidgets\nfrom asyncslot import asyncSlot, AsyncSlotRunner\n\nasync def say_hi():\n    await asyncio.sleep(1)\n    QtWidgets.QMessageBox.information(None, \"Demo\", \"Hi\")\n\napp = QtWidgets.QApplication()\nbutton = QtWidgets.QPushButton()\nbutton.setText('Say Hi after one second')\nbutton.clicked.connect(asyncSlot(say_hi))  # <-- instead of connect(say_hi)\nbutton.show()\n\nwith AsyncSlotRunner():  # <-- wrap in Runner\n    app.exec()\n```\n\n## Requirements\n\n`asyncslot` supports the following:\n\n- Python version: 3.7 or higher\n- Qt binding: PyQt5, PyQt6, PySide2, PySide6\n- Operating system: Linux, MacOS, Windows\n\n\n## Installation\n\n```commandline\npip install asyncslot\n```\n\nThe above does _not_ install the Qt bindings.  To install Qt bindings, you may\n\n```commandline\npip install PyQt6\n```\n\nAlternatively, you may install `asyncslot` together with your Qt binding of \nchoice, for example\n\n```commandline\npip install asyncslot[PyQt6]\n```\n\n\n## Details\n\n`asyncslot` embeds a logical asyncio event loop (`AsyncSlotEventLoop`) \nwithin a physical Qt event loop (`QEventLoop`), so that Python libraries \nwritten for asyncio can be used by a Python for Qt application.\n\n### Running Modes\n\nAn `AsyncSlotEventLoop` may be run in _attached mode_ or _nested mode_.\n\nUse `AsyncSlotEventLoop` as a context manager to run it in attached mode.  \nThis mode only installs the logical asyncio event loop; the physical Qt \nevent loop must still be run as usual, e.g. by `app.exec()`.  This is the \npreferred workflow as it integrates seamlessly with an existing Qt app.\n\nCall `AsyncSlotEventLoop.run_forever` to run it in nested mode.  This starts \na (possibly nested) Qt event loop using `QEventLoop.exec()` and waits until \nit exits.  This is the standard asyncio workflow and is convenient for \nunit testing, but it is not recommended for integration with an existing Qt \napp as nested event loops are advised against by Qt.\n\nFor either mode, a (global) `QCoreApplication` (or `QApplication` /\n`QGuiApplication`) instance must exist before running any coroutine,\nas is required by Qt.\n\n### Clean-up\n\nTo properly release the resources of the event loop after it stops, you \nshould call `shutdown_asyncgens` and `shutdown_default_executor`, followed\nby `close`.  The first two methods are actually coroutines and therefore\nmust be run from within the event loop.\n\nFor attached mode, use the `asyncslot.AsyncSlotRunner` context manager, \nwhich handles clean-up automatically.  Note, however, that it actually runs \nthe first two coroutines in nested mode, i.e. a Qt event loop is started.  \nYour code should be prepared for this.\n\nFor nested mode, `asyncio.run()` handles clean-up automatically.\n\n\n### The `asyncSlot` Adaptor\n\n`asyncslot.asyncSlot` wraps a coroutine function (one defined by `async def`)\nto make it usable as a Qt slot.  Without wrapping, a coroutine function\n(whether decorated with `QtCore.Slot`/`PyQt6.pyqtSlot` or not)\ngenerally cannot be used as a slot because calling it merely returns a \ncoroutine object instead of performing real work.\n\nUnder the hood, `asyncslot.asyncSlot` calls `AsyncSlotEventLoop.run_task`,\na custom method which creates a Task wrapping the coroutine and executes\nit immediately until the first suspension point.\n\nThis is designed to work with a common pattern where some work has to be\nperformed immediately in response to a signal.  For example, the `clicked`\nhandler of a \"Send Order\" button normally disables the button on entry\nbefore actually sending the order over network, to avoid sending duplicate\norders.  For this to work correctly, the code until the first suspension \npoint must be executed synchronously.\n\nAn `AsyncSlotEventLoop` must be running when a coroutine wrapped by \n`asyncSlot` is called, or a `RuntimeError` will be raised.\n\nIt is not recommended to decorate a coroutine function with `asyncSlot`\nas that would make an `async def` function into a normal function, which\nis confusing.\n\n\n### Cancellation\n\nTo cancel a running coroutine from within itself, raise \n`asyncio.CancelledError`.\n\nTo retrieve the `Task` object from within the running coroutine and store\nit somewhere to be used later, call `asyncio.current_task()` from within\nthe running coroutine.\n\n\n## Implementation Notes\n\nBy embedding a (logical) asyncio event loop inside a (physical) Qt event \nloop, what's not changed (from the perspective of the asyncio event loop) is \nthat all calls (other than `call_soon_threadsafe`) are still made from the \nsame thread.  This frees us from multi-threading complexities.\n\nWhat has changed, however, is that in a standalone asyncio event loop, no \ncode can run when the scheduler (specifically, `_run_once`) is blocked in \n`select()`, while in an embedded asyncio event loop, a `select()` call \nthat would otherwise block yields, allowing any code to run while the loop \nis \"logically\" blocked in `select`.\n\nFor example, `BaseEventLoop.stop()` is implemented by setting the flag \n`_stopping` to `True`, which is then checked before the next iteration of\n`_run_once` to stop the loop.  This works because `stop` can only ever be\ncalled from a callback, and a callback can only ever be called after\n`select` returns and before the next iteration of `_run_once`.  The behavior \nchanges if `select` yields and `stop` is called -- the event loop wait not \nwake up until some IO is available.\n\nWe refer to code that runs (from the Qt event loop) after `select` yields \nand before `_run_once` is called again as _injected code_.  We must \nexamine and handle the implications of such code.\n\nWe do this by fitting injected code execution into the standalone asyncio\nevent loop model.  Specifically, we treat injected code as if they were \nscheduled with `call_soon_threadsafe`, which wakes up the selector and\nexecutes the code.  _With_ some loss of generality, we assume no IO event\nnor timed callback is ready at the exact same time, so that the scheduler \nwill be put back into blocking `select` immediately after the code finishes \nrunning (unless the code calls `stop`).  This simplification is acceptable\nbecause the precise timing of multiple IO or timer events should not be \nrelied upon.\n\nIn practice, we cannot actually wake up the asyncio scheduler every time \ninjected code is executed, firstly because there's no way to detect their\nexecution and secondly because doing so would be highly inefficient.\nInstead, we _assume_ that injected code which does not access the event loop\nobject or its selector is benign enough to be treated as _independent_\nfrom the asyncio event loop ecosystem and may be safely ignored.\n\nThis leaves us to just consider injected code that accesses the event loop \nobject or its selector and examine its impact on scheduling.  The scheduler\ndepends on three things:  the `_ready` queue for \"soon\" callbacks, the \n`_scheduled` queue for timer callbacks, and `_selector` for IO events.\nIf the injected code touches any of these things, it needs to be handled.\n\nWhile the public interface of `AbstractEventLoop` has numerous methods, the \nmethods that modify those three things boil down to `call_soon`, `call_at`, \n`call_later`, (arguably) `stop`, and anything that modifies the selector \n(proactor).  When any of these happens, we physically or logically wake up \nthe selector to simulate a `call_soon_threadsafe` call.\n\n\n## History\n\n`asyncslot` is derived from\n[qasync](https://github.com/CabbageDevelopment/qasync) but rewritten from \nscratch.  qasync is a fork of \n[asyncqt](https://github.com/gmarull/asyncqt), which is a fork of\n[quamash](https://github.com/harvimt/quamash).\n\n\n## License\n\nBSD License.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "asyncio,coroutine,qt,signal,slot",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asyncslot",
    "package_url": "https://pypi.org/project/asyncslot/",
    "platform": null,
    "project_url": "https://pypi.org/project/asyncslot/",
    "project_urls": {
      "Bug Tracker": "https://github.com/fancidev/asyncslot/issues",
      "Homepage": "https://github.com/fancidev/asyncslot"
    },
    "release_url": "https://pypi.org/project/asyncslot/0.3.1/",
    "requires_dist": [
      "PyQt5 ; extra == 'pyqt5'",
      "PyQt6 ; extra == 'pyqt6'",
      "PySide2 ; extra == 'pyside2'",
      "PySide6 ; extra == 'pyside6'"
    ],
    "requires_python": ">=3.7",
    "summary": "Use asyncio-based library from Python for Qt.",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15204717,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80a674e2a872ee94d2f9487f4df05ed43b67bfeb22a64b3a39dbccbb1021bfbd",
          "md5": "03f9d6aa0b8308a2a82f58fa56921046",
          "sha256": "1307899c7a72fba766b6b203d09d37a586038f928f928806f2ea6c798379ca67"
        },
        "downloads": -1,
        "filename": "asyncslot-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03f9d6aa0b8308a2a82f58fa56921046",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10338,
        "upload_time": "2022-08-31T21:27:19",
        "upload_time_iso_8601": "2022-08-31T21:27:19.415892Z",
        "url": "https://files.pythonhosted.org/packages/80/a6/74e2a872ee94d2f9487f4df05ed43b67bfeb22a64b3a39dbccbb1021bfbd/asyncslot-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a5c81e93fae7faee00d1820ee8d67bebdaa79dd7a7a9c3f810fe25082e21f16",
          "md5": "2e6f7e5d8f43704d5b74961fd4acb8b2",
          "sha256": "7011ad3bbff060f26075118f48bcde0684ff5b60aa77a35f812321c7381f5780"
        },
        "downloads": -1,
        "filename": "asyncslot-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2e6f7e5d8f43704d5b74961fd4acb8b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12610,
        "upload_time": "2022-08-31T21:27:21",
        "upload_time_iso_8601": "2022-08-31T21:27:21.370345Z",
        "url": "https://files.pythonhosted.org/packages/0a/5c/81e93fae7faee00d1820ee8d67bebdaa79dd7a7a9c3f810fe25082e21f16/asyncslot-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e67920ae5f49b4cbe526ef00f8e2867ed880029b4d2abcaa7daef1f21372e83",
          "md5": "e789001221d78c4f8a89c5f148fefdf6",
          "sha256": "7211a024c2c6e386465726ee74520916f200e8d49dcbff5a931cd9ee3154fadf"
        },
        "downloads": -1,
        "filename": "asyncslot-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e789001221d78c4f8a89c5f148fefdf6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16607,
        "upload_time": "2022-09-10T10:00:46",
        "upload_time_iso_8601": "2022-09-10T10:00:46.093336Z",
        "url": "https://files.pythonhosted.org/packages/8e/67/920ae5f49b4cbe526ef00f8e2867ed880029b4d2abcaa7daef1f21372e83/asyncslot-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d49d8b02e5a65fd10c84a870134d57c7625da0262dae7150fb9ead72a06ee6eb",
          "md5": "26978bb9e89ee7a2172c6caefdcecd35",
          "sha256": "369e98d325238315346ee582715f6856b801d59e750202ba7aa5481c2f021e2b"
        },
        "downloads": -1,
        "filename": "asyncslot-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "26978bb9e89ee7a2172c6caefdcecd35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17784,
        "upload_time": "2022-09-10T10:00:47",
        "upload_time_iso_8601": "2022-09-10T10:00:47.547341Z",
        "url": "https://files.pythonhosted.org/packages/d4/9d/8b02e5a65fd10c84a870134d57c7625da0262dae7150fb9ead72a06ee6eb/asyncslot-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c89f8fe0af1eccf7eea4b58d628fcd2c51ea1a953b9470830fadcdc346b27a63",
          "md5": "f6cf30ae35586e6c3c214fcc217aa6e6",
          "sha256": "e4a979bc6f7b8dce51a83830663e82c60772ba0f63d72bed63485b34beadf5d6"
        },
        "downloads": -1,
        "filename": "asyncslot-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6cf30ae35586e6c3c214fcc217aa6e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16272,
        "upload_time": "2022-09-11T14:35:37",
        "upload_time_iso_8601": "2022-09-11T14:35:37.566622Z",
        "url": "https://files.pythonhosted.org/packages/c8/9f/8fe0af1eccf7eea4b58d628fcd2c51ea1a953b9470830fadcdc346b27a63/asyncslot-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cae226f079abc090d1b6e5c765109ba4ede97a2df0442038df41a0c931337c93",
          "md5": "c50044cfecf70690b848e6fb84bcf540",
          "sha256": "a4c9a688442c5d08e05150f91c033857b07b0fbaca25e0e20e1a096b945534ad"
        },
        "downloads": -1,
        "filename": "asyncslot-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c50044cfecf70690b848e6fb84bcf540",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28566,
        "upload_time": "2022-09-11T14:35:38",
        "upload_time_iso_8601": "2022-09-11T14:35:38.902320Z",
        "url": "https://files.pythonhosted.org/packages/ca/e2/26f079abc090d1b6e5c765109ba4ede97a2df0442038df41a0c931337c93/asyncslot-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb92ed91539afae37edf8e6fbfae69c36e1c8d1c77e4a0d4ededc41c57041229",
          "md5": "500b09f191fdc4b5a842f26faa1a6bf6",
          "sha256": "bea74bcb48d1b874c8bc548e40741d411b0fd7e884aa8c85e8bd2c85978abc74"
        },
        "downloads": -1,
        "filename": "asyncslot-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "500b09f191fdc4b5a842f26faa1a6bf6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16298,
        "upload_time": "2022-09-12T11:37:00",
        "upload_time_iso_8601": "2022-09-12T11:37:00.131389Z",
        "url": "https://files.pythonhosted.org/packages/cb/92/ed91539afae37edf8e6fbfae69c36e1c8d1c77e4a0d4ededc41c57041229/asyncslot-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab62e20c1f491501c862726509fb15054733746efe8c865a308c501cc3e839a1",
          "md5": "447ec26d8788ba79034fb3d06098b1eb",
          "sha256": "82a2caf227ee94a6921fda8ec444944981393706fa62ffd008c0fc50fffbd864"
        },
        "downloads": -1,
        "filename": "asyncslot-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "447ec26d8788ba79034fb3d06098b1eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 30289,
        "upload_time": "2022-09-12T11:37:01",
        "upload_time_iso_8601": "2022-09-12T11:37:01.887611Z",
        "url": "https://files.pythonhosted.org/packages/ab/62/e20c1f491501c862726509fb15054733746efe8c865a308c501cc3e839a1/asyncslot-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6460dc6d29961e3a3fba4fa34ef6b623e0eea6775b695ee9570e6ef5f756a57",
          "md5": "57c474ef9fa1897f342ff1651254582e",
          "sha256": "a7b5ca925877980c33534a182ddd14981cd348e199b6a5672cd51ec02f4d853c"
        },
        "downloads": -1,
        "filename": "asyncslot-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57c474ef9fa1897f342ff1651254582e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19707,
        "upload_time": "2022-09-18T13:04:03",
        "upload_time_iso_8601": "2022-09-18T13:04:03.554660Z",
        "url": "https://files.pythonhosted.org/packages/a6/46/0dc6d29961e3a3fba4fa34ef6b623e0eea6775b695ee9570e6ef5f756a57/asyncslot-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8eb01d51ec811b36b155396ef83d38f009d8d6420270b5d792fe2a697d248ca",
          "md5": "d4f749f2b3bd81a7e9c6a8dc251240db",
          "sha256": "b57f0740d34ea7400da09c179b75d5efef6319d34eb577c143ea66e42d56eff8"
        },
        "downloads": -1,
        "filename": "asyncslot-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d4f749f2b3bd81a7e9c6a8dc251240db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 34064,
        "upload_time": "2022-09-18T13:04:05",
        "upload_time_iso_8601": "2022-09-18T13:04:05.608698Z",
        "url": "https://files.pythonhosted.org/packages/f8/eb/01d51ec811b36b155396ef83d38f009d8d6420270b5d792fe2a697d248ca/asyncslot-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "400c6fa170e14a61642bd86118c2479671bfe5decac90ef58e3f0e6523835afa",
          "md5": "6b1c2f94a488980591f718d23afb10e6",
          "sha256": "25bd36bed12c00b8cdf715215cc37afba9a73c6d96924608f8bd7e26f93d0f60"
        },
        "downloads": -1,
        "filename": "asyncslot-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b1c2f94a488980591f718d23afb10e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 21249,
        "upload_time": "2022-09-21T14:04:10",
        "upload_time_iso_8601": "2022-09-21T14:04:10.278643Z",
        "url": "https://files.pythonhosted.org/packages/40/0c/6fa170e14a61642bd86118c2479671bfe5decac90ef58e3f0e6523835afa/asyncslot-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b96730bb907946797734d2f69e43ba11c837b3c88713eeffcfc31f3fa918ff20",
          "md5": "e1b0a1ba52cdb17b2d91a19d07589939",
          "sha256": "af76798529642f3a9f3c4b65c9e130ce5159990a3a50a93959e96833b71b769c"
        },
        "downloads": -1,
        "filename": "asyncslot-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e1b0a1ba52cdb17b2d91a19d07589939",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 35775,
        "upload_time": "2022-09-21T14:04:12",
        "upload_time_iso_8601": "2022-09-21T14:04:12.327181Z",
        "url": "https://files.pythonhosted.org/packages/b9/67/30bb907946797734d2f69e43ba11c837b3c88713eeffcfc31f3fa918ff20/asyncslot-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9af086b7b89a5c6c57c01a11f7c36a53a8e7597bb8d58c643cff3d5d37127a6",
          "md5": "3acdd8bf5b328870769da830355485bb",
          "sha256": "cf885cf35d3e2c97c3be9cc87abd854256f71db80eb5ede4a687a477c232e8b5"
        },
        "downloads": -1,
        "filename": "asyncslot-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3acdd8bf5b328870769da830355485bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 21513,
        "upload_time": "2022-09-22T14:19:34",
        "upload_time_iso_8601": "2022-09-22T14:19:34.194963Z",
        "url": "https://files.pythonhosted.org/packages/e9/af/086b7b89a5c6c57c01a11f7c36a53a8e7597bb8d58c643cff3d5d37127a6/asyncslot-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbee4be22213a12c0eda9e8c99d2e1125466a7345bf11ac6fce5843bbf706f09",
          "md5": "79ad086d1f81d28234dc85ead7e1c1fa",
          "sha256": "625b3a3a2796850a5ac368b4a3680b4d65f46b06035f02a97e83973d15640092"
        },
        "downloads": -1,
        "filename": "asyncslot-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "79ad086d1f81d28234dc85ead7e1c1fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 35954,
        "upload_time": "2022-09-22T14:19:36",
        "upload_time_iso_8601": "2022-09-22T14:19:36.443216Z",
        "url": "https://files.pythonhosted.org/packages/cb/ee/4be22213a12c0eda9e8c99d2e1125466a7345bf11ac6fce5843bbf706f09/asyncslot-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efbde63d7764c2154a225da17399f9714cfa90a113f8ad498754a3f6c3dee560",
          "md5": "fa81ee3b4bc326f8a939871be03728dc",
          "sha256": "a14e625b38da2fae273f8aa150ec87e422dc327bbe43ee662bedca112b344bb5"
        },
        "downloads": -1,
        "filename": "asyncslot-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa81ee3b4bc326f8a939871be03728dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23178,
        "upload_time": "2022-09-25T13:27:19",
        "upload_time_iso_8601": "2022-09-25T13:27:19.378879Z",
        "url": "https://files.pythonhosted.org/packages/ef/bd/e63d7764c2154a225da17399f9714cfa90a113f8ad498754a3f6c3dee560/asyncslot-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9063dfb988d618ce97de4407b9d0448877f795d38afc5de69c579c9c40efcde5",
          "md5": "a39ec6fa3c4e754652d9e4de1c74eee8",
          "sha256": "cb538aae17da709fb05ff1477f752717a803ad1a8664bed80592bc097dc03030"
        },
        "downloads": -1,
        "filename": "asyncslot-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a39ec6fa3c4e754652d9e4de1c74eee8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 38369,
        "upload_time": "2022-09-25T13:27:21",
        "upload_time_iso_8601": "2022-09-25T13:27:21.340067Z",
        "url": "https://files.pythonhosted.org/packages/90/63/dfb988d618ce97de4407b9d0448877f795d38afc5de69c579c9c40efcde5/asyncslot-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efbde63d7764c2154a225da17399f9714cfa90a113f8ad498754a3f6c3dee560",
        "md5": "fa81ee3b4bc326f8a939871be03728dc",
        "sha256": "a14e625b38da2fae273f8aa150ec87e422dc327bbe43ee662bedca112b344bb5"
      },
      "downloads": -1,
      "filename": "asyncslot-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fa81ee3b4bc326f8a939871be03728dc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23178,
      "upload_time": "2022-09-25T13:27:19",
      "upload_time_iso_8601": "2022-09-25T13:27:19.378879Z",
      "url": "https://files.pythonhosted.org/packages/ef/bd/e63d7764c2154a225da17399f9714cfa90a113f8ad498754a3f6c3dee560/asyncslot-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9063dfb988d618ce97de4407b9d0448877f795d38afc5de69c579c9c40efcde5",
        "md5": "a39ec6fa3c4e754652d9e4de1c74eee8",
        "sha256": "cb538aae17da709fb05ff1477f752717a803ad1a8664bed80592bc097dc03030"
      },
      "downloads": -1,
      "filename": "asyncslot-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a39ec6fa3c4e754652d9e4de1c74eee8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 38369,
      "upload_time": "2022-09-25T13:27:21",
      "upload_time_iso_8601": "2022-09-25T13:27:21.340067Z",
      "url": "https://files.pythonhosted.org/packages/90/63/dfb988d618ce97de4407b9d0448877f795d38afc5de69c579c9c40efcde5/asyncslot-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}