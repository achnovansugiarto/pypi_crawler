{
  "info": {
    "author": "Fabio Cumbo",
    "author_email": "fabio.cumbo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# hdlib\nHyperdimensional Computing Library for building Vector Symbolic Architectures in Python 3.\n\n## Install\n\nIt is available through `pip` and `conda`.\nPlease, use one of the following commands to start playing with `hdlib`:\n\n```\n# Install with pip\npip install hdlib\n\n# Install with conda\nconda install -c conda-forge hdlib\n```\n\n## Usage\n\nThe `hdlib` library provides two main modules, `space` and `arithmetic`. The first one contains constructors of `Space` and `Vector` objects that can be used to build vectors and the space that hosts them. The second module, calle `arithmetic`, contains a bunch of functions to operate on vectors.\n\n```python\nfrom hdlib.space import Space, Vector\nfrom hdlib.arithmetic import bind, bundle, permute\n```\n\n### What is the dollar of Mexico?\n\nThis case example has been extracted from the following manuscript:\n```\nKanerva, P., 2010, November. \nWhat we mean when we say\" What's the dollar of Mexico?\": Prototypes and mapping in concept space. \nIn 2010 AAAI fall symposium series.\n```\n\nLet's say that we have the following information about two countries:\n\n| Country (NAM)                       | Capital City (CAP)  | Monetary Unit (MON)  |\n| :---------------------------------- |:--------------------| :--------------------|\n| United States of America (USA)      | Washington DC (WDC) | US Dollar (DOL)      |\n| Mexico (MEX)                        | Mexico City (MXC)   | Peso (PES)           |\n\nCountry information can be encoded in hyperdimensional vectors, one for each country:\n\n```python\n# Initialize vectors space\nspace = Space()\n\n# Define features and country information\nnames = [\n  \"NAM\", \"CAP\", \"MON\", # Features\n  \"USA\", \"WDC\", \"DOL\", # United States of America\n  \"MEX\", \"MXC\", \"PES\"  # Mexico\n]\n\n# Build a random bipolar vector for each feature and country information\n# Add vectors to the space\nspace.bulkInsert(names)\n\n# Encode USA information in a single vector\n# USTATES = [(NAM * USA) + (CAP * WDC) + (MON * DOL)]\nUSTATES_NAM = bind(space.get(\"NAM\"), space.get(\"USA\")) # Bind NAM with USA\nUSTATES_CAP = bind(space.get(\"CAP\"), space.get(\"WDC\")) # Bind CAP with WDC\nUSTATES_MON = bind(space.get(\"MON\"), space.get(\"DOL\")) # Bind MON with DOL\nUSTATES = bundle(bundle(USTATES_NAM, USTATES_CAP), USTATES_MON) # Bundle USTATES_NAM, USTATES_CAP, and USTATES_MON\n\n# Repeat the last step to encode MEX information in a single vector\n# MEXICO = [(NAM * MEX) + (CAP * MXC) + (MON * PES)]\nMEXICO_NAM = bind(space.get(\"NAM\"), space.get(\"MEX\")) # Bind NAM with MEX\nMEXICO_CAP = bind(space.get(\"CAP\"), space.get(\"MXC\")) # Bind CAP with MXC\nMEXICO_MON = bind(space.get(\"MON\"), space.get(\"PES\")) # Bind MON with PES\nMEXICO = bundle(bundle(MEXICO_NAM, MEXICO_CAP), MEXICO_MON) # Bundle MEXICO_NAM, MEXICO_CAP, and MEXICO_MON\n```\n\nIf we now pair `USTATES` with `MEXICO`, we get a bundle that pairs USA with Mexico, Washington DC with Mexico City, and US Dollar with Peso, plus noise.\n```python\n# F_UM = USTATES * MEXICO\n#      = [(USA * MEX) + (WDC * MXC) + (DOL * PES) + noise]\nF_UM = bind(USTATES, MEXICO)\n```\n\nIn order to retrieve the Monetary Unit that in Mexico corresponds to Dollar:\n```python\n# DOL * F_UM = DOL * [(USA * MEX) + (WDC * MXC) + (DOL * PES) + noise]\n#            = [(DOL * USA * MEX) + (DOL * WDC * MXC) + (DOL * DOL * PES) + (DOL * noise)]\n#            = [noise1 + noise2 + PES + noise3]\n#            = [PES + noise4]\n#            â‰ˆ PES\nGUESS_PES = bind(space.get(\"DOL\"), F_UM)\n```\n\nFinally answer the question by searching for the closest vector in space\n```python\nspace.find(GUESS_PES)\n```\n\n## Contributing\n\nLong-term discussion and bug reports are maintained via GitHub Issues, while code review is managed via GitHub Pull Requests.\n\nPlease, (i) be sure that there are no existing issues/PR concerning the same bug or improvement before opening a new issue/PR; (ii) write a clear and concise description of what the bug/PR is about; (iii) specifying the list of steps to reproduce the behavior in addition to versions and other technical details is highly recommended.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/fabio-cumbo/hdlib",
    "keywords": "",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hdlib",
    "package_url": "https://pypi.org/project/hdlib/",
    "platform": null,
    "project_url": "https://pypi.org/project/hdlib/",
    "project_urls": {
      "Homepage": "http://github.com/fabio-cumbo/hdlib"
    },
    "release_url": "https://pypi.org/project/hdlib/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Hyperdimensional Computing Library for building Vector Symbolic Architectures in Python",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13620709,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd768bbe168bc9e08445b76809940dd2735d77cd63d0827ca668c21659ae740d",
          "md5": "8129c9da0d502a02f78b4b5c5959c5b0",
          "sha256": "a29590b61bf5d192a7e969379c58fea1fc3eae96582bfdd479aba0aa50b79a8c"
        },
        "downloads": -1,
        "filename": "hdlib-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8129c9da0d502a02f78b4b5c5959c5b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5389,
        "upload_time": "2022-04-25T22:39:41",
        "upload_time_iso_8601": "2022-04-25T22:39:41.264442Z",
        "url": "https://files.pythonhosted.org/packages/fd/76/8bbe168bc9e08445b76809940dd2735d77cd63d0827ca668c21659ae740d/hdlib-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd768bbe168bc9e08445b76809940dd2735d77cd63d0827ca668c21659ae740d",
        "md5": "8129c9da0d502a02f78b4b5c5959c5b0",
        "sha256": "a29590b61bf5d192a7e969379c58fea1fc3eae96582bfdd479aba0aa50b79a8c"
      },
      "downloads": -1,
      "filename": "hdlib-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8129c9da0d502a02f78b4b5c5959c5b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5389,
      "upload_time": "2022-04-25T22:39:41",
      "upload_time_iso_8601": "2022-04-25T22:39:41.264442Z",
      "url": "https://files.pythonhosted.org/packages/fd/76/8bbe168bc9e08445b76809940dd2735d77cd63d0827ca668c21659ae740d/hdlib-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}