{
  "info": {
    "author": "LeÃ³n Illanes",
    "author_email": "lillanes@cs.toronto.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Mage\n====\n\nSend locally stored videos to your Smart TV or other UPnP/DLNA media renderer.\nThis is intended as the simplest approach for sending a video through the local\nnetwork.\n\nSpellcast works by setting up a temporary HTTP server that hosts only the video\nfile, and sending its URI to the rendering device via UPnP protocols.\n\n## Setup\n\nThis is a Python 3 application. It uses\n[Twisted](https://pypi.org/project/Twisted/) and\n[requests](https://pypi.org/project/requests/). For your convenience you can\neasily install it with pip:\n\n```sh\npython3 -m pip install spellcast\n```\n\nOr, alternatively, you can set everything up in a virtual environment as\nfollows:\n\n```sh\npython3 -m venv venv\nsource venv/bin/activate\npython3 -m pip install -r requirements.txt\n```\n\n## Usage\n\nPass the video file as argument, and Spellcast casts to the first media renderer\nfound on the network:\n\n```sh\ncast /path/to/video.mp4\n```\n\nOr:\n\n```sh\npython -m spellcast /path/to/video.mp4\n```\n\n## Acknowledgements\n\nThis implementation borrows a lot from the\n[video2smarttv](https://github.com/probonopd/video2smarttv) project by\n[probonopd](https://github.com/probonopd), which in turn uses\n[dankrause's](https://github.com/dankrause) solution for [SSDP\ndiscovery](https://gist.github.com/dankrause/6000248). Thanks go to all\ndevelopers involved!\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lillanes/spellcast",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spellcast",
    "package_url": "https://pypi.org/project/spellcast/",
    "platform": "",
    "project_url": "https://pypi.org/project/spellcast/",
    "project_urls": {
      "Homepage": "https://github.com/lillanes/spellcast"
    },
    "release_url": "https://pypi.org/project/spellcast/0.1.0/",
    "requires_dist": [
      "requests (>=2.25.0)",
      "Twisted (>=20.3.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Casts a video to a DLNA media renderer in the local network.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8896005,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fc2eacd95fed8f2a30c01bfac13984bdb7caa0a43db4a9fbb55a8f11fd21a79",
          "md5": "f6a4e2bea9e97d3ea4073a726454cfcd",
          "sha256": "cd7b7960aa24faeca45aa42fb6ada9c7225fc92bdad1a4be6cae701eea58cbb2"
        },
        "downloads": -1,
        "filename": "spellcast-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6a4e2bea9e97d3ea4073a726454cfcd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6467,
        "upload_time": "2020-12-14T14:46:18",
        "upload_time_iso_8601": "2020-12-14T14:46:18.657784Z",
        "url": "https://files.pythonhosted.org/packages/8f/c2/eacd95fed8f2a30c01bfac13984bdb7caa0a43db4a9fbb55a8f11fd21a79/spellcast-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0ed61674986d4f3b783a01df158e43b190f0e657a55115918d13991078b3810",
          "md5": "1f203d5118e4e36fa9033ee5c25a551d",
          "sha256": "3f4aeb4a7dfa671538431f61b10ce8a58a4704cf4ff7bbdb8a3294ecbab56a2a"
        },
        "downloads": -1,
        "filename": "spellcast-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1f203d5118e4e36fa9033ee5c25a551d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4775,
        "upload_time": "2020-12-14T14:46:19",
        "upload_time_iso_8601": "2020-12-14T14:46:19.768034Z",
        "url": "https://files.pythonhosted.org/packages/f0/ed/61674986d4f3b783a01df158e43b190f0e657a55115918d13991078b3810/spellcast-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8fc2eacd95fed8f2a30c01bfac13984bdb7caa0a43db4a9fbb55a8f11fd21a79",
        "md5": "f6a4e2bea9e97d3ea4073a726454cfcd",
        "sha256": "cd7b7960aa24faeca45aa42fb6ada9c7225fc92bdad1a4be6cae701eea58cbb2"
      },
      "downloads": -1,
      "filename": "spellcast-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f6a4e2bea9e97d3ea4073a726454cfcd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6467,
      "upload_time": "2020-12-14T14:46:18",
      "upload_time_iso_8601": "2020-12-14T14:46:18.657784Z",
      "url": "https://files.pythonhosted.org/packages/8f/c2/eacd95fed8f2a30c01bfac13984bdb7caa0a43db4a9fbb55a8f11fd21a79/spellcast-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f0ed61674986d4f3b783a01df158e43b190f0e657a55115918d13991078b3810",
        "md5": "1f203d5118e4e36fa9033ee5c25a551d",
        "sha256": "3f4aeb4a7dfa671538431f61b10ce8a58a4704cf4ff7bbdb8a3294ecbab56a2a"
      },
      "downloads": -1,
      "filename": "spellcast-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1f203d5118e4e36fa9033ee5c25a551d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4775,
      "upload_time": "2020-12-14T14:46:19",
      "upload_time_iso_8601": "2020-12-14T14:46:19.768034Z",
      "url": "https://files.pythonhosted.org/packages/f0/ed/61674986d4f3b783a01df158e43b190f0e657a55115918d13991078b3810/spellcast-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}