{
  "info": {
    "author": "leenr",
    "author_email": "i@leenr.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "===========\ngzip-stream\n===========\n\n`gzip-stream` is a super-tiny library that will help you compress by GZIP\non-the-fly.\n\n`GZIPCompressedStream` class instance acting like an any other stream (in fact,\n`GZIPCompressedStream` inherits `io.RawIOBase <https://docs.python.org/3/library/io.html#io.RawIOBase>`_),\nbut wraps another stream and compress it on-the-fly.\n\n.. code-block:: python\n\n    from gzip_stream import GZIPCompressedStream\n    from my_upload_lib import MyUploadClient\n\n    upload_client = MyUploadClient()\n    with open('my_very_big_1tb_file.txt') as file_to_upload:\n        compressed_stream = GZIPCompressedStream(\n            file_to_upload,\n            compression_level=7\n        )\n        upload_client.upload_fileobj(compressed_stream)\n\n`GZIPCompressedStream` does not read entire stream, but instead read it\nby chunks, until compressed output size will not satisfy read size.\n\n`AsyncGZIPDecompressedStream` class can async read from another source\nwith zlib and gzip decompression on-the-fly\n\n.. code-block:: python\n\n    # aiobotocore example\n\n    import aiobotocore\n\n    from gzip_stream import AsyncGZIPDecompressedStream\n\n    AWS_ACCESS_KEY_ID = \"KEY_ID\"\n    AWS_SECRET_ACCESS_KEY = \"ACCESS_KEY\"\n    BUCKET = \"AWESOME_BUCKET\"\n\n    upload_client = MyAsyncUploadClient()\n    session = aiobotocore.get_session()\n    async with session.create_client(\n        service_name=\"s3\",\n        endpoint_url=\"s3_endpoint\",\n        aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\n        aws_access_key_id=AWS_ACCESS_KEY_ID,\n    ) as client:\n        response = await client.get_object(Bucket=BUCKET, Key='my_very_big_1tb_file.txt.gz')\n        async for decompressed_chunk in GzipAsyncReaderWrapper(response[\"Body\"])):\n            await upload_client.upload_fileobj(decompressed_chunk)\n\n\nModule works on Python ~= 3.5.\n\nInstallation\n------------\n.. code-block:: bash\n\n    pip install gzip-stream\n\n\nLicense\n-------\nPublic Domain: `CC0 1.0 Universal <https://creativecommons.org/publicdomain/zero/1.0/>`_.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/leenr/gzip-stream",
    "keywords": "gzip,compression",
    "license": "",
    "maintainer": "leenr",
    "maintainer_email": "i@leenr.me",
    "name": "gzip-stream",
    "package_url": "https://pypi.org/project/gzip-stream/",
    "platform": "posix",
    "project_url": "https://pypi.org/project/gzip-stream/",
    "project_urls": {
      "Homepage": "https://github.com/leenr/gzip-stream"
    },
    "release_url": "https://pypi.org/project/gzip-stream/1.2.0/",
    "requires_dist": null,
    "requires_python": "~=3.5",
    "summary": "Compress stream by GZIP on the fly.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12246202,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ef2fef1be541429c6f944889dd8713dd0be8ce350f29cea2bc26378996e825d",
          "md5": "0e1083412f4a394ab3e10741cfaa82d6",
          "sha256": "10537ba40d8ea94e6780d13bd89235d537a3d725d4c9d2dcf34993b15fa3dfe3"
        },
        "downloads": -1,
        "filename": "gzip-stream-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0e1083412f4a394ab3e10741cfaa82d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 2732,
        "upload_time": "2019-07-23T17:25:19",
        "upload_time_iso_8601": "2019-07-23T17:25:19.596932Z",
        "url": "https://files.pythonhosted.org/packages/3e/f2/fef1be541429c6f944889dd8713dd0be8ce350f29cea2bc26378996e825d/gzip-stream-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18e3b0904c5e1e2e692db1758e540f5c2f915900bb9d9fd83d00efbd333c7716",
          "md5": "efe6569252b9f5e1f560d49f07dda93d",
          "sha256": "ecb7026ef5829cd57d5ae15601be4c53d8b852d5d76b44fce8a394f0d98199e3"
        },
        "downloads": -1,
        "filename": "gzip-stream-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "efe6569252b9f5e1f560d49f07dda93d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 3737,
        "upload_time": "2021-03-07T07:13:44",
        "upload_time_iso_8601": "2021-03-07T07:13:44.842955Z",
        "url": "https://files.pythonhosted.org/packages/18/e3/b0904c5e1e2e692db1758e540f5c2f915900bb9d9fd83d00efbd333c7716/gzip-stream-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "159f20fb069117a2f1ea514878f51db1da9046109cf76ba38577316bc1964d28",
          "md5": "2a93443ece6d14f35fb4b574b07dfa5f",
          "sha256": "4065cd84443de771fe8dfa6463140cbd5d02da83c06381c84a8ac66cfc5f9766"
        },
        "downloads": -1,
        "filename": "gzip-stream-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a93443ece6d14f35fb4b574b07dfa5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 6146,
        "upload_time": "2021-12-08T15:47:19",
        "upload_time_iso_8601": "2021-12-08T15:47:19.181253Z",
        "url": "https://files.pythonhosted.org/packages/15/9f/20fb069117a2f1ea514878f51db1da9046109cf76ba38577316bc1964d28/gzip-stream-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "159f20fb069117a2f1ea514878f51db1da9046109cf76ba38577316bc1964d28",
        "md5": "2a93443ece6d14f35fb4b574b07dfa5f",
        "sha256": "4065cd84443de771fe8dfa6463140cbd5d02da83c06381c84a8ac66cfc5f9766"
      },
      "downloads": -1,
      "filename": "gzip-stream-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2a93443ece6d14f35fb4b574b07dfa5f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.5",
      "size": 6146,
      "upload_time": "2021-12-08T15:47:19",
      "upload_time_iso_8601": "2021-12-08T15:47:19.181253Z",
      "url": "https://files.pythonhosted.org/packages/15/9f/20fb069117a2f1ea514878f51db1da9046109cf76ba38577316bc1964d28/gzip-stream-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}