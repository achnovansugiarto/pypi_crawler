{
  "info": {
    "author": "Makina Corpus",
    "author_email": "contact@makina-corpus.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# geolabel-maker\n\nThis tool is provided to help you in your **data preparation for geospatial artificial intelligence**.\n\n![](medias/geolabel-maker.gif)\n\nWith `geolabel-maker`, you will be able to combine satellite or aerial imagery with\nvector spatial data to create your own ground-truth dataset. This Python package can\ngenerate your final dataset in the [COCO format](http://cocodataset.org/#home) for deep-learning models.\n\n\nIt is designed to link up these 4 needed steps :\n 1. create labels from geometries and raster files;\n 2. make virtual raster files to combine images and labels;\n 3. split image and label virtual files creating tiles;\n 4. create an annotation JSON file in the COCO format for a specific zoom level.\n\n## Installation\n\n### Requirements\n\n * Python 3.6\n * GDAL\n\n### GDAL\n\nAs a particular case, GDAL is not included into the `setup.py` file.\n\nFor `Ubuntu` distributions, the following operations are needed to install this program:\n\n```\nsudo apt-get install libgdal-dev\nsudo apt-get install python3-gdal\n```\n\nThe GDAL version can be verified by:\n```\ngdal-config --version\n```\nAfter that, a simple `pip install gdal` (or `conda install gdal`) may be sufficient, however considering our own experience it is not the case on Ubuntu. One has to retrieve a GDAL for Python that corresponds to the GDAL of system:\n```\npip install --global-option=build_ext --global-option=\"-I/usr/include/gdal\" GDAL==`gdal-config --version`\npython3 -c \"import osgeo;print(osgeo.__version__)\"\n```\nFor other OS, please visit the `GDAL` installation documentation.\n\n\n### Installation with pip\n```\npip install geolabel-maker\n```\n\n## Usage\n\n### Inputs\n\n> An sample dataset is available in the `data/` folder. See the [Examples](#examples) paragraph to more information.\n\nTo create your labels and annotations in the COCO format, you need:\n\n * `IMG` : path to the folder containing the images to be labeled\n * `CATEGORIES` : a JSON file with an unique id for each, the description of expected categories\nwith path to vector label file, and color as RGB triplet.\n * `TILES` : a folder where the tiles (256x256 pixels images) will be recorded\n\nExample of the categories file:\n\n```json\n{\n    \"category_1\": {\n        \"id\": 1,\n        \"file\": \"path to your category_1 vector file\",\n        \"color\": [150, 0, 0]\n    },\n    \"category_2\": {\n        \"id\": 2,\n        \"file\": \"path to your category_2 vector file\",\n        \"color\": [255, 255, 255]\n    }\n}\n```\n\n##### Supported formats:\n\nWe use packages based on GDAL drivers.\n\n * for images, see [raster formats](https://gdal.org/drivers/raster/index.html) :\n   * GeoTIFF,\n   * JPEG2000,\n   * ASCII Grid,\n   * etc\n * for geometries, see [supported drivers](https://github.com/Toblerity/Fiona/blob/master/fiona/drvsupport.py) of the `fiona` package :\n   * ESRI Shapefile,\n   * GeoJSON,\n   * GPKG,\n   * etc\n\n### Using the command-line interface\n\nA command-line interface is proposed with 5 available\nactions (`make_labels`, `make_rasters`, `make_tiles`, `make_annotations`\n and `make_all`).\n\n#### Step-by-step commands\n\n **1. Create labels from geometries and raster files**\n\n```\ngeolabels make_labels IMG CATEGORIES\n```\n\n **2. Make virtual raster files to combine images and labels**\n\n```\ngeolabels make_rasters IMG\n```\n\n **3. Split image and label virtual files creating tiles**\n\n```\ngeolabels make_tiles IMG_VRT LABEL_VRT TILES\n```\n\n **4. Create an annotation JSON file in the COCO format for a specific zoom level**\n\n```\ngeolabels make_annotations TILES CATEGORIES\n```\n\nOption:\n- *--zoom*, the zoom level\n\n#### Global command\n\nTo run the full process to get a ground truth in the COCO format, use the command:\n\n```\ngeolabels make_all IMG TILES CATEGORIES\n```\n\nOption:\n- *--zoom*, the zoom level\n\n### Importing the package in Python code\n\n```python\nfrom geolabel_maker import geolabels\n\n# Create labels from geometries and raster files\ngeolabels.make_labels(img, categories)\n# Make virtual raster files to combine images and labels\nimages_vrt, labels_vrt = geolabels.make_rasters(img)\n# Split image and label virtual files creating tiles\ngeolabels.make_tiles(images_vrt, labels_vrt, tiles)\n# Create an annotation JSON file in the COCO format\ngeolabels.make_annotations(tiles, categories)\n\n# OR\n# Run the full process\ngeolabels.make_all(img, tiles, categories)\n```\n\n## Examples\n\nThe **`data/`** folder contains geometries (`vectors/`) from Lyon, published as open data in the website [https://data.grandlyon.com](https://data.grandlyon.com).\nIt contains also an example of a JSON file describing categories used to create labels.\n\nThis folder doesn't contain images because this type of file is too big to be supported in Github. \nTo follow our example, just download these two files and put them in the folder `data/rasters/`:\n- [1843_5173_08_CC46.tif](https://download.data.grandlyon.com/files/grandlyon/imagerie/ortho2018/ortho/GeoTiff_YcBcR/1km_8cm_CC46/1843_5173_08_CC46.tif)\n- [1844_5173_08_CC46.tif](https://download.data.grandlyon.com/files/grandlyon/imagerie/ortho2018/ortho/GeoTiff_YcBcR/1km_8cm_CC46/1844_5173_08_CC46.tif)\n\n### Notebooks\n\nSome Jupyter notebooks (in French) are available :\n- [Use_geolabel_maker.ipynb](notebooks/Use_geolabel_maker.ipynb) explains the process to build your ground truth.\n- [Check_coco_annotations.ipynb](notebooks/Check_coco_annotations.ipynb) allows to explore your final annotations file.\n\n## For developers\n\n#### Install from source\n\n```\ngit clone URL\ncd geolabel-maker\npip install -e .\n```\n\n#### Pre-commit and linting\n\n* [Install pre-commit](https://pre-commit.com/#install) and run `pre-commit install`\nto check linting before committing.\n\n* When you want, you can force a pre-commit on all the files :\n\n```\npre-commit run --all-files\n```\n\n## Acknowledgements\n\nWe gratefully acknowledge the contributions of the people who \nhelped get this project off of the ground, including people who \nbeta tested the software, gave feedback, improved dependencies of \ncode in service of this release, or otherwise supported the project.\n\nParticularly thank you [Lucie Camanez](https://github.com/TrueCactus) \nto have initiate this project in its internship.\n\nWe also acknowledge [Adam Kelly](https://www.immersivelimit.com/) \nwhose work has helped us in the development of this tool.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/makinacorpus/geolabel-maker/",
    "keywords": "geospatial artificial intelligence,deep learning,convolutional neural networks,image,ground truth",
    "license": "",
    "maintainer": "Makina Corpus",
    "maintainer_email": "",
    "name": "geolabel-maker",
    "package_url": "https://pypi.org/project/geolabel-maker/",
    "platform": "",
    "project_url": "https://pypi.org/project/geolabel-maker/",
    "project_urls": {
      "Homepage": "https://github.com/makinacorpus/geolabel-maker/"
    },
    "release_url": "https://pypi.org/project/geolabel-maker/0.0.1/",
    "requires_dist": [
      "begins",
      "numpy",
      "gdal2tiles",
      "geopandas",
      "rasterio",
      "matplotlib",
      "scikit-image"
    ],
    "requires_python": ">=3.6",
    "summary": "Data preparation for geospatial artificial intelligence",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7286741,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf71cad38ae9159bfc06bb1f256b74cfab184b4a2d27dca761b529dca437fee9",
          "md5": "acb9d5f01094d1d2279e5275db01f219",
          "sha256": "727d27aa82f2b60681961d78305637729cc2bdd63c2deefa14ce71bc926d1936"
        },
        "downloads": -1,
        "filename": "geolabel_maker-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acb9d5f01094d1d2279e5275db01f219",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14627,
        "upload_time": "2020-05-20T14:45:23",
        "upload_time_iso_8601": "2020-05-20T14:45:23.430140Z",
        "url": "https://files.pythonhosted.org/packages/bf/71/cad38ae9159bfc06bb1f256b74cfab184b4a2d27dca761b529dca437fee9/geolabel_maker-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7c60243981ee8efabbcad931c2752afb252f9a0bd5fd103b9ab94c8c04c343e",
          "md5": "5436986ed9ee6ebd4ecf994691c8bb46",
          "sha256": "05fb6d903e47c3f816c910d905236c2aa484d3f3b66e94480f810b8948f000ee"
        },
        "downloads": -1,
        "filename": "geolabel_maker-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5436986ed9ee6ebd4ecf994691c8bb46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14482,
        "upload_time": "2020-05-20T14:45:25",
        "upload_time_iso_8601": "2020-05-20T14:45:25.885271Z",
        "url": "https://files.pythonhosted.org/packages/c7/c6/0243981ee8efabbcad931c2752afb252f9a0bd5fd103b9ab94c8c04c343e/geolabel_maker-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf71cad38ae9159bfc06bb1f256b74cfab184b4a2d27dca761b529dca437fee9",
        "md5": "acb9d5f01094d1d2279e5275db01f219",
        "sha256": "727d27aa82f2b60681961d78305637729cc2bdd63c2deefa14ce71bc926d1936"
      },
      "downloads": -1,
      "filename": "geolabel_maker-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "acb9d5f01094d1d2279e5275db01f219",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14627,
      "upload_time": "2020-05-20T14:45:23",
      "upload_time_iso_8601": "2020-05-20T14:45:23.430140Z",
      "url": "https://files.pythonhosted.org/packages/bf/71/cad38ae9159bfc06bb1f256b74cfab184b4a2d27dca761b529dca437fee9/geolabel_maker-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7c60243981ee8efabbcad931c2752afb252f9a0bd5fd103b9ab94c8c04c343e",
        "md5": "5436986ed9ee6ebd4ecf994691c8bb46",
        "sha256": "05fb6d903e47c3f816c910d905236c2aa484d3f3b66e94480f810b8948f000ee"
      },
      "downloads": -1,
      "filename": "geolabel_maker-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5436986ed9ee6ebd4ecf994691c8bb46",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14482,
      "upload_time": "2020-05-20T14:45:25",
      "upload_time_iso_8601": "2020-05-20T14:45:25.885271Z",
      "url": "https://files.pythonhosted.org/packages/c7/c6/0243981ee8efabbcad931c2752afb252f9a0bd5fd103b9ab94c8c04c343e/geolabel_maker-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}