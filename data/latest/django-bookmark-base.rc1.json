{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Django",
      "License :: Public Domain",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!--\nhttps://readme42.com\n-->\n\n\n[![](https://img.shields.io/pypi/v/django-bookmark-base.svg?maxAge=3600)](https://pypi.org/project/django-bookmark-base/)\n[![](https://img.shields.io/badge/License-Unlicense-blue.svg?longCache=True)](https://unlicense.org/)\n\n### Installation\n```bash\n$ [sudo] pip install django-bookmark-base\n```\n\n##### `settings.py`\n```python\nINSTALLED_APPS+=['django_bookmark_base']\n```\n\n##### `models.py`\n```python\nfrom django.db import models\nfrom django_bookmark_base.models import BookmarkModel\n\nclass CollectionBookmark(BookmarkModel):\n    obj = models.ForeignKey(\n        'Collection', related_name=\"bookmark_set\", on_delete=models.CASCADE)\n\n    class Meta:\n        unique_together = [('obj', 'created_by')]\n\nclass Collection(models.Model):\n    bookmarks_count = models.IntegerField(default=0) # use triggers\n\n    def get_bookmark_url(self):\n        return 'bookmark/collection/%s' % self.pk\n```\n\n##### `urls.py`\n```python\nfrom django.urls import include, path\n\nimport views\n\nurlpatterns = [\n    path('bookmark/collection/<int:pk>',\n         views.CollectionBookmarkToggleView.as_view(), name='collection'),\n]\n```\n\n##### `views.py`\n`DetailView` - context variables `{{ bookmark_obj }}` and `{{ bookmark }}`\n```python\nfrom apps.collections.models import Collection, CollectionBookmark\nfrom django_bookmark_base.views import BookmarkViewMixin\n\nclass CollectionDetailView(BookmarkViewMixin):\n    bookmark_model = CollectionBookmark\n```\n\n`XMLHttpRequest` view\n```python\nfrom django_bookmark_base.views import BookmarkToggleView\nfrom apps.collections.models import Collection, CollectionBookmark\n\nclass CollectionBookmarkToggleView(BookmarkToggleView):\n    bookmark_model = CollectionBookmark\n\n    def get_data(self):\n        collection = Collection.objects.get(pk=self.kwargs['pk'])\n        return {\n            'bookmarked': self.bookmarked,\n            'bookmarks_count': collection.bookmarks_count\n        }\n```\n\n`ListView` prefetch user bookmarks\n```python\nfrom django.db.models import Prefetch\nfrom django.views.generic.list import ListView\nfrom apps.collections.models import Collection, CollectionBookmark\n\nclass CollectionListView(ListView):\n    def get_queryset(self, **kwargs):\n        qs = Collection.objects.all()\n        if self.request.user.is_authenticated:\n            qs = qs.prefetch_related(\n                Prefetch(\"bookmark_set\", queryset=CollectionBookmark.objects.filter(created_by=self.request.user),to_attr='bookmarks')\n            )\n        return qs\n```\n\n##### Templates\n```html\n<a data-id=\"{{ bookmark_obj.pk }}\" class=\"btn bookmark-btn {% if bookmark %}selected{% endif %}\" {% if request.user.is_authenticated %}data-href=\"{{ bookmark_obj.get_bookmark_url }}\"{% else %}href=\"{% url 'login' %}?next={{ request.path }}\"{% endif %}>\n</a>\n<a data-id=\"{{ bookmark_obj.pk }}\" class=\"bookmark-count\">{{ bookmark_obj.bookmarks_count }}</a>\n```\n\n##### JavaScript\n```javascript\nfunction bookmark_toggle(btn) {\n    data_id = btn.getAttribute('data-id');\n\n    var bookmark_count = document.querySelector(\".bookmark-count[data-id='\"+data_id+\"']\");\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', btn.getAttribute('data-href'));\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.responseType = 'json';\n    xhr.onload = function() {\n        if (xhr.status != 200) {\n            console. error(`Error ${xhr.status}: ${xhr.statusText}`);\n        }\n        if (xhr.status == 200) {\n            bookmark_count.innerHTML=xhr.response.bookmarks_count;\n            if (xhr.response.bookmarked) {\n                btn.classList.add('text-green');\n            } else {\n                btn.classList.remove('text-green');\n            }\n        }\n    };\n    xhr.send();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\nconst bookmark_buttons = document.querySelectorAll(\".bookmark-btn\");\nfor (const btn of bookmark_buttons) {\n    if (btn.hasAttribute('data-href')) {\n        btn.addEventListener('click', function(event){\n            event.preventDefault();\n            bookmark_toggle(btn);\n        });\n    }\n}\n});\n```\n\n<p align=\"center\">\n    <a href=\"https://readme42.com/\">readme42.com</a>\n</p>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andrewp-as-is/django-bookmark-base.py",
    "keywords": "django bookmark",
    "license": "Unlicense",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-bookmark-base",
    "package_url": "https://pypi.org/project/django-bookmark-base/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-bookmark-base/",
    "project_urls": {
      "Homepage": "https://github.com/andrewp-as-is/django-bookmark-base.py"
    },
    "release_url": "https://pypi.org/project/django-bookmark-base/2020.7.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django bookmark base models and views",
    "version": "2020.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7705858,
  "releases": {
    "2020.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e32651e46448b0d97b48823df2b72020e94d0b4725d3e1aeb32ac80769571fc",
          "md5": "618eb67da18ee3c4a9449054c941d08a",
          "sha256": "df559ee7cf858c570b941eb6e8e7ee3c7a4514a4d5a1df11c60797206701e5af"
        },
        "downloads": -1,
        "filename": "django-bookmark-base-2020.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "618eb67da18ee3c4a9449054c941d08a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3411,
        "upload_time": "2020-07-15T14:13:33",
        "upload_time_iso_8601": "2020-07-15T14:13:33.511878Z",
        "url": "https://files.pythonhosted.org/packages/4e/32/651e46448b0d97b48823df2b72020e94d0b4725d3e1aeb32ac80769571fc/django-bookmark-base-2020.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e32651e46448b0d97b48823df2b72020e94d0b4725d3e1aeb32ac80769571fc",
        "md5": "618eb67da18ee3c4a9449054c941d08a",
        "sha256": "df559ee7cf858c570b941eb6e8e7ee3c7a4514a4d5a1df11c60797206701e5af"
      },
      "downloads": -1,
      "filename": "django-bookmark-base-2020.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "618eb67da18ee3c4a9449054c941d08a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3411,
      "upload_time": "2020-07-15T14:13:33",
      "upload_time_iso_8601": "2020-07-15T14:13:33.511878Z",
      "url": "https://files.pythonhosted.org/packages/4e/32/651e46448b0d97b48823df2b72020e94d0b4725d3e1aeb32ac80769571fc/django-bookmark-base-2020.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}