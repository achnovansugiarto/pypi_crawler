{
  "info": {
    "author": "Sergey Bugaev, Pavel Yushchenko",
    "author_email": "Sergey Bugaev <bugaev@smartdec.com>, Pavel Yushchenko <pyushchenko@digitexfutures.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Digitex engine client library\n\nThis library implements a client interface to the Digitex futures trading engine.\n\n## Installation\n\nFirst things first, you're going to need to install this library.\n\nIf you have the source code of this library in a local checkout, you may run\n`pip3 install .` (where `.` is the path to the root directory of the library\ncheckout). Otherwise you may have luck running `pip3 install\ndigitex-engine-client` if you have the right repositories configured.\n\nWhatever the source, Pip will automatically fetch the dependencies and build the\nProtobuf definition. For this to work, you do need `protoc`, the Protobuf\ncompiler, to be installed on your machine (try using your distribution's\nappropriate package). The build script (`setup.py`) will look for `protoc` in\nthe `PATH`; you can also specify the `protoc` location explicitly with the\n`PROTOC` environment variable. If the script fails to find `protoc`, it will\nraise an error right away.\n\n## Connecting\n\nThe main API of the library is the abstract `Client` class, which represents a\nconnection to the engine backend, which serves as a proxy for the engine. The\nconcrete `WsClient` serves as an implementation of a client.\n\nTo connect to the engine, instantiate `WsClient`:\n\n```python\nclient = WsClient(host='ws.mainnet.digitexfutures.com', token='your-api-key-here')\n```\n\nThe host to use for testnet is `ws.testnet.digitexfutures.com`; for mainnet use\n`ws.mainnet.digitexfutures.com`. For authentication, you can also pass a `bearer`\nor a `session_id` instead of a `token`, depending on the type of key that you\nhave.\n\nYou can get a token over at https://exchange.digitexfutures.com/profile/api\n\nTo check if the connection is successful, ping the engine:\n\n```python\nclient.ping()\n```\n\n## Messages\n\nTo interact with the exchange, a client can send and receive **messages**. The\nexact messages that can be sent and received are defined in the `messages.proto`\nfile, which is compiled using `protoc` into the\n`digitex_engine_client.messages_pb2` submodule.\n\nIt is thus possible to construct messages directly. For example, here's how one\ncan construct and send the ping message:\n\n```python\nfrom digitex_engine_client.messages_pb2 import *\n\nmessage = Message(ping_msg=PingMessage())\nclient.send_message(message)\n```\n\nThe library provides some shortcuts to make this more convenient. First, there's\na semi-public `message_proxy` that can be used to create messages in a more\nnatural way:\n\n```python\nmessage = client.message_proxy.ping()\nclient.send_message(message)\n```\n\nAny arguments that would have been passed to either the generic `Message`\nconstructor or a constructor of a specific message should be passed as arguments\ninto the `message_proxy` method.\n\nFinally, it's possible to call the methods on a client object directly:\n\n```python\nclient.ping()\n```\n\nThis will do the following:\n\n\n* Create the message using the specified arguments,\n* Fill in generic fileds such as `client_id` and `timestamp` automatically,\nunless they are set explicitly,\n* Send the message by calling `send_message()`,\n* Return the sent message (this is useful to e.g. note the generated\n`client_id`).\n\nSee `messages.proto` for a complete description of supported messages, and read\n`engine/API.md` for an in-depth explanation of their meanings.\n\n## Listening\n\nThere are two streams of events you can listen on, the **trading** events and\nthe **market data** events, also known as *control* and *data* streams.\n\nIn order to listen for messages, use:\n\n```python\nfor message in client.subscribe_to_trading_events():\n    do_something_with(message)\n```\n\nAnd the same for `market_data` instead of `trading`.\n\nIt's necessary to call `digitex_engine_client.WsClient.subscribe()` before\ntrying to listen for market data events. The library will print a warning if you\nforget to do this.\n\nThe object returned by the `subscribe_to_..._events()` methods is a\n**listener**. You can use it directly as an iterator over received messages.\n\nPlease note that waiting for a message is a blocking operation. You should spawn\nmultiple threads in order to listen to multiple streams and send messages at the\nsame time.\n\n## Sync or async\n\nYou can use the library in either sync or async manner. Using sync is\nstraightforward; using async means inserting `async` and `await` in a lot of\nplaces, and relying on `asyncio` tasks instead of threads. Internally, the\nWebSocket code always uses async code, and tries to transparently run it on a\nbackground event loop if it detects you want to use it as sync.\n\n## Examples\n\nPlease see the [examples](examples/) directory for a few examples, including a\nsimple bot that monitors the spot price and the last trade price and tries to\nplace orders.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DigitexOfficial/digitex-client-python",
    "keywords": "",
    "license": "GPL version 3, excluding DRM provisions",
    "maintainer": "Pavel Yushchenko <pyushchenko@digitexfutures.com>",
    "maintainer_email": "pyushchenko@digitexfutures.com",
    "name": "digitex-engine-client",
    "package_url": "https://pypi.org/project/digitex-engine-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/digitex-engine-client/",
    "project_urls": {
      "Homepage": "https://github.com/DigitexOfficial/digitex-client-python"
    },
    "release_url": "https://pypi.org/project/digitex-engine-client/4.145.0/",
    "requires_dist": [
      "aiohttp",
      "protobuf",
      "pytz"
    ],
    "requires_python": "",
    "summary": "",
    "version": "4.145.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11655272,
  "releases": {
    "4.139.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e13bb02aaede53be5a72ae2c1550647a651d7de900fa8d8c25ba70f56d7055fe",
          "md5": "15d6934624c43f6855263cc7feff46af",
          "sha256": "ec2911c428116f45ba6ecdfe36b7a7157b6c0f505bf425bdba08ba4ba54a5b8a"
        },
        "downloads": -1,
        "filename": "digitex_engine_client-4.139.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15d6934624c43f6855263cc7feff46af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48095,
        "upload_time": "2021-04-29T12:59:17",
        "upload_time_iso_8601": "2021-04-29T12:59:17.124702Z",
        "url": "https://files.pythonhosted.org/packages/e1/3b/b02aaede53be5a72ae2c1550647a651d7de900fa8d8c25ba70f56d7055fe/digitex_engine_client-4.139.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0a6750cc73f668e62f0c6c1fffd34cbecfe5a215bc513751125716b62c5ad79",
          "md5": "474905e63497ed9981613847bf19dc8a",
          "sha256": "698aa75e7cab302e2f03be1aceff735a068b0db875bc4e31f4f3aed3a58063bd"
        },
        "downloads": -1,
        "filename": "digitex-engine-client-4.139.0.tar.gz",
        "has_sig": false,
        "md5_digest": "474905e63497ed9981613847bf19dc8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7913,
        "upload_time": "2021-03-23T16:18:50",
        "upload_time_iso_8601": "2021-03-23T16:18:50.126442Z",
        "url": "https://files.pythonhosted.org/packages/e0/a6/750cc73f668e62f0c6c1fffd34cbecfe5a215bc513751125716b62c5ad79/digitex-engine-client-4.139.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.145.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13bd83c12b3438a331f420ee446836b7995a899917b073e744f9cec6ec9fa20c",
          "md5": "7df7496a4ddc6c96144b26b317969a2c",
          "sha256": "709e3085f648573632fd0758987da5a1c814390a903632ab64b768dc379b0d5b"
        },
        "downloads": -1,
        "filename": "digitex_engine_client-4.145.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7df7496a4ddc6c96144b26b317969a2c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 47281,
        "upload_time": "2021-10-07T14:51:41",
        "upload_time_iso_8601": "2021-10-07T14:51:41.376338Z",
        "url": "https://files.pythonhosted.org/packages/13/bd/83c12b3438a331f420ee446836b7995a899917b073e744f9cec6ec9fa20c/digitex_engine_client-4.145.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d8344330d5359a56685e1782ffd3573afc2f1c858ac2c4f1a888bb5dff07e79",
          "md5": "86ffb893206dbfac231a816f3d20b6c8",
          "sha256": "4aff163018c73aef46222197bdcea8ae3eaeed568c1760444a9d5ab02499c699"
        },
        "downloads": -1,
        "filename": "digitex-engine-client-4.145.0.tar.gz",
        "has_sig": false,
        "md5_digest": "86ffb893206dbfac231a816f3d20b6c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9316,
        "upload_time": "2021-10-07T14:51:43",
        "upload_time_iso_8601": "2021-10-07T14:51:43.289592Z",
        "url": "https://files.pythonhosted.org/packages/9d/83/44330d5359a56685e1782ffd3573afc2f1c858ac2c4f1a888bb5dff07e79/digitex-engine-client-4.145.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13bd83c12b3438a331f420ee446836b7995a899917b073e744f9cec6ec9fa20c",
        "md5": "7df7496a4ddc6c96144b26b317969a2c",
        "sha256": "709e3085f648573632fd0758987da5a1c814390a903632ab64b768dc379b0d5b"
      },
      "downloads": -1,
      "filename": "digitex_engine_client-4.145.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7df7496a4ddc6c96144b26b317969a2c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 47281,
      "upload_time": "2021-10-07T14:51:41",
      "upload_time_iso_8601": "2021-10-07T14:51:41.376338Z",
      "url": "https://files.pythonhosted.org/packages/13/bd/83c12b3438a331f420ee446836b7995a899917b073e744f9cec6ec9fa20c/digitex_engine_client-4.145.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d8344330d5359a56685e1782ffd3573afc2f1c858ac2c4f1a888bb5dff07e79",
        "md5": "86ffb893206dbfac231a816f3d20b6c8",
        "sha256": "4aff163018c73aef46222197bdcea8ae3eaeed568c1760444a9d5ab02499c699"
      },
      "downloads": -1,
      "filename": "digitex-engine-client-4.145.0.tar.gz",
      "has_sig": false,
      "md5_digest": "86ffb893206dbfac231a816f3d20b6c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9316,
      "upload_time": "2021-10-07T14:51:43",
      "upload_time_iso_8601": "2021-10-07T14:51:43.289592Z",
      "url": "https://files.pythonhosted.org/packages/9d/83/44330d5359a56685e1782ffd3573afc2f1c858ac2c4f1a888bb5dff07e79/digitex-engine-client-4.145.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}