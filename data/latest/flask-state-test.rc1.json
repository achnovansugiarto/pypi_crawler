{
  "info": {
    "author": "Yoobool",
    "author_email": "yhl@uuchat.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "![](https://github.com/yoobool/flask-state/blob/master/src/flask_state/static/flask_state.png)\n\n\n[![](https://img.shields.io/badge/Contributions-Welcome-0059b3)](https://github.com/yoobool/flask-state/tree/master/.github/ISSUE_TEMPLATE)\n[![](https://img.shields.io/badge/Chat-Gitter-ff69b4.svg?label=Chat&logo=gitter)](https://gitter.im/flaskstate/community)\n[![](https://img.shields.io/npm/v/flask-state)](https://www.npmjs.com/package/flask-state)\n[![](https://img.shields.io/badge/license-BSD-green)](https://github.com/yoobool/flask-state/blob/master/LICENSE)\n[![](https://img.shields.io/badge/python-3.5%20%7C%203.6%20%7C%203.7%20%7C%203.8%20%7C%203.9-blue)](https://pypi.org/project/Flask-State/)\n\n# Flask-State\n\nFlask-State is a visual plug-in based on flask. It can record the local state every minute and read the status of redis if you have configured redis, and generate data chart to show to users through [Echarts](https://github.com/apache/incubator-echarts).\n\n![](https://github.com/yoobool/flask-state/blob/master/examples/static/flask_state.png)\n\n## Installation\nInstall and update using [pip](https://pip.pypa.io/en/stable/quickstart/):\n```\n$ pip install Flask-State\n```\n\nDisplay components can use ```<script>``` tag from a CDN, or as a flask-state package on npm.\n```html\n<script src=\"https://cdn.jsdelivr.net/gh/yoobool/flask-state@v1.0.2/packages/umd/flask-state.min.js\"></script>\n```\n```\nnpm install flask-state --save\n```\n\n\n## Usage\n\nAfter the Flask-State is installed, you also need to import JavaScript file and CSS file to bind a convention ID value for your element. In some configurations, you can also choose to modify them.\n\n\n### Firstly：we'll set up a Flask app.\n```python\nfrom flask import Flask\napp = Flask(__name__)\n```\n\n### Secondly：Bind database address.\n```python\nfrom flask_state import DEFAULT_BIND_SQLITE\napp.config['SQLALCHEMY_BINDS'] = {DEFAULT_BIND_SQLITE: 'sqlite:///path'}\n```\n\n### Thirdly：Call the init_app method of the flask-state to initialize the configuration.\n```python\nimport flask_state\nflask_state.init_app(app)\n```\n\n### Lastly：Select the appropriate method to import the view file.\n```html\n<!--CDN-->\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/yoobool/flask-state@v1.0.2/packages/flask-state.css\">\n<script src=\"https://cdn.jsdelivr.net/gh/yoobool/flask-state@v1.0.2/packages/umd/flask-state.min.js\"></script>\n<script type=\"text/javascript\">\n    // Create a DOM node with ID 'test'. After init() binds the node, click to open the listening window\n    flaskState.init({dom:document.getElementById('test')});\n</script>\n```\n```javascript\n// npm\nimport 'flask-state/flask-state.css';\nimport {init} from 'flask-state';\n// Create a DOM node with ID 'test'. After init() binds the node, click to open the listening window\ninit({dom:document.getElementById('test')});\n```\n\n### Extra：You can also customize some configuration(non-essential).\n\n#### Monitor the redis status.\n```python\napp.config['REDIS_CONF'] = {'REDIS_STATUS': True, 'REDIS_HOST': '192.168.1.1', 'REDIS_PORT':16380, 'REDIS_PASSWORD': 'psw'}\n```\n\n#### Modify the time interval for saving monitoring records.\n```python\n# The minimum interval is 60 seconds. The default interval is 60 seconds\nimport flask_state\nSECS = 60\nflask_state.init_app(app, SECS)\n```\n\n#### Custom logger object.\n```python\nimport flask_state\nimport logging\ncustom_logger = logging.getLogger(__name__)\nflask_state.init_app(app, interval=60, log_instance=custom_logger)\n```\n\n#### Custom binding triggers the object of the window.\n```javascript\n/* When the initialization plug-in does not pass in an object, the plug-in will automatically create a right-hand suspension ball */\n/* Note: all pages share a plug-in instance. Calling init() method multiple times will only trigger plug-in events for new object binding */\nflaskState.init();\n```\n\n#### Select the language in which the plug-in is displayed, now support en, zh.\n```html\n<!--Note: the language file imported through the tag must be after the plug-in is imported-->\n<script src=\"https://cdn.jsdelivr.net/gh/yoobool/flask-state@v1.0.2/packages/umd/flask-state.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/gh/yoobool/flask-state@v1.0.2/packages/umd/zh.js\"></script>\n<script type=\"text/javascript\">\n    flaskState.init({lang:flaskState.zh});\n</script>\n```\n```javascript\nimport {init} from 'flask-state';\nimport {zh} from 'flask-state/i18n.js';\ninit({lang:zh});\n```\n\n\n## Contributing\nWelcome to [open an issue](https://github.com/yoobool/flask-state/issues/new)!\n\nFlask-State follows the [Contributor Covenant](https://www.contributor-covenant.org/version/1/3/0/code-of-conduct/) Code of Conduct.\n\n## Community Channel\nWe're on [Gitter](https://gitter.im/flaskstate/community) ! Please join us.\n\n## License\nFlask-State is available under the BSD-3-Clause License.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yoobool/flask-state",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "Yoobool",
    "maintainer_email": "",
    "name": "Flask-State-test",
    "package_url": "https://pypi.org/project/Flask-State-test/",
    "platform": "",
    "project_url": "https://pypi.org/project/Flask-State-test/",
    "project_urls": {
      "Code": "https://github.com/yoobool/flask-state",
      "Homepage": "https://github.com/yoobool/flask-state",
      "Issue tracker": "https://github.com/yoobool/flask-state/issues"
    },
    "release_url": "https://pypi.org/project/Flask-State-test/1.0.2b1/",
    "requires_dist": [
      "Flask (>=1.0)",
      "Flask-SQLAlchemy (>=1.0)",
      "psutil (>=5.7.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Show local state to users through Echarts.",
    "version": "1.0.2b1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8593479,
  "releases": {
    "1.0.2b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b332d3cec257db0fe243e6b5715ff1ac47c8e7511b860e7e767611227949f629",
          "md5": "eebd056184ada780ec8d17b3b3f4cb02",
          "sha256": "7336e3793ad8fb53fb1f5527ce841d48eaa8959acd9ada95d21c1febbc967574"
        },
        "downloads": -1,
        "filename": "Flask_State_test-1.0.2b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eebd056184ada780ec8d17b3b3f4cb02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 17580,
        "upload_time": "2020-11-06T03:00:09",
        "upload_time_iso_8601": "2020-11-06T03:00:09.156470Z",
        "url": "https://files.pythonhosted.org/packages/b3/32/d3cec257db0fe243e6b5715ff1ac47c8e7511b860e7e767611227949f629/Flask_State_test-1.0.2b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0992c79702e4245547f78f70b7e4c0b7b520677636cc9aa9ef95c5e58733d65b",
          "md5": "957bd8150a40dcebb55452c7e6a436e7",
          "sha256": "21532f0984fafb12d3d696c00ece367bfe5e6d3344c2ee1c1505c16dd4fd0f14"
        },
        "downloads": -1,
        "filename": "Flask-State-test-1.0.2b1.tar.gz",
        "has_sig": false,
        "md5_digest": "957bd8150a40dcebb55452c7e6a436e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 12201,
        "upload_time": "2020-11-06T03:00:12",
        "upload_time_iso_8601": "2020-11-06T03:00:12.182785Z",
        "url": "https://files.pythonhosted.org/packages/09/92/c79702e4245547f78f70b7e4c0b7b520677636cc9aa9ef95c5e58733d65b/Flask-State-test-1.0.2b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b332d3cec257db0fe243e6b5715ff1ac47c8e7511b860e7e767611227949f629",
        "md5": "eebd056184ada780ec8d17b3b3f4cb02",
        "sha256": "7336e3793ad8fb53fb1f5527ce841d48eaa8959acd9ada95d21c1febbc967574"
      },
      "downloads": -1,
      "filename": "Flask_State_test-1.0.2b1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eebd056184ada780ec8d17b3b3f4cb02",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 17580,
      "upload_time": "2020-11-06T03:00:09",
      "upload_time_iso_8601": "2020-11-06T03:00:09.156470Z",
      "url": "https://files.pythonhosted.org/packages/b3/32/d3cec257db0fe243e6b5715ff1ac47c8e7511b860e7e767611227949f629/Flask_State_test-1.0.2b1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0992c79702e4245547f78f70b7e4c0b7b520677636cc9aa9ef95c5e58733d65b",
        "md5": "957bd8150a40dcebb55452c7e6a436e7",
        "sha256": "21532f0984fafb12d3d696c00ece367bfe5e6d3344c2ee1c1505c16dd4fd0f14"
      },
      "downloads": -1,
      "filename": "Flask-State-test-1.0.2b1.tar.gz",
      "has_sig": false,
      "md5_digest": "957bd8150a40dcebb55452c7e6a436e7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 12201,
      "upload_time": "2020-11-06T03:00:12",
      "upload_time_iso_8601": "2020-11-06T03:00:12.182785Z",
      "url": "https://files.pythonhosted.org/packages/09/92/c79702e4245547f78f70b7e4c0b7b520677636cc9aa9ef95c5e58733d65b/Flask-State-test-1.0.2b1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}