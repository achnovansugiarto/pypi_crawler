{
  "info": {
    "author": "LDMud Team",
    "author_email": "ldmud-dev@UNItopia.DE",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: ISC License (ISCL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Python asynchronous I/O package for LDMud\n\nThis is a python module that enables the use of the Python asyncio module\nwith LDMud 3.6.2 and later. The module doesn't export any names, it just\nextends the Python asyncio module to work with LDMud.\n\n## Usage\n\n### Install from the python package index\n\nThe efun package can be downloaded from the python package index:\n\n```\npip3 install --user ldmud-asyncio\n```\n\n### Build & install the package yourself\n\nYou can build the package yourself.\n\nFirst clone the repository\n```\ngit clone https://github.com/ldmud/python-asyncio.git\n```\n\nInstall the package\n```\ncd python-asyncio\npython3 setup.py install --user\n```\n\n### Automatically load the module at startup\n\nIn your Python startup script for LDMud add the following line:\n```\nimport ldmud_asyncio\n```\n\n## Examples\n\n### call_out() replacement\n\n```python\nimport ldmud, ldmud_asyncio, asyncio\n\nasync def do_call_out(cb, sec):\n    await asyncio.sleep(sec)\n    cb()\n\ndef efun_call_out(cb: ldmud.Closure, sec: int) -> None:\n    asyncio.run(do_call_out(cb, sec))\n\nldmud.register_efun(\"py_call_out\", efun_call_out)\n\n```\n\n### Call a program and return the lines\n\n```python\nimport ldmud, ldmud_asyncio, asyncio\n\nasync def do_exec(prog, cb):\n    proc = await asyncio.create_subprocess_exec(prog, stdout=asyncio.subprocess.PIPE)\n\n    async for line in proc.stdout:\n        cb(line.decode())\n\n    await proc.wait()\n    cb(0)\n\ndef efun_exec(prog: str, cb: ldmud.Closure) -> None:\n    asyncio.run(do_exec(prog, cb))\n\nldmud.register_efun(\"py_exec\", efun_exec)\n```\n\n### Start a websockets server\n\nThis is the synchronization example from the websockets package.\nHere we only added an efun to influence the value as well.\n\nThis is the Python code:\n```python\nimport ldmud, ldmud_asyncio, asyncio, websockets, json\n\nSTATE = {\"value\": 0}\nUSERS = set()\n\ndef state_event():\n    return json.dumps({\"type\": \"state\", **STATE})\n\ndef users_event():\n    return json.dumps({\"type\": \"users\", \"count\": len(USERS)})\n\nasync def notify_state():\n    if USERS:  # asyncio.wait doesn't accept an empty list\n        message = state_event()\n        await asyncio.wait([user.send(message) for user in USERS])\n\nasync def notify_users():\n    if USERS:  # asyncio.wait doesn't accept an empty list\n        message = users_event()\n        await asyncio.wait([user.send(message) for user in USERS])\n\nasync def register(websocket):\n    USERS.add(websocket)\n    await notify_users()\n\nasync def unregister(websocket):\n    USERS.remove(websocket)\n    await notify_users()\n\nasync def counter(websocket, path):\n    # register(websocket) sends user_event() to websocket\n    await register(websocket)\n    try:\n        await websocket.send(state_event())\n        async for message in websocket:\n            data = json.loads(message)\n            if data[\"action\"] == \"minus\":\n                STATE[\"value\"] -= 1\n                await notify_state()\n            elif data[\"action\"] == \"plus\":\n                STATE[\"value\"] += 1\n                await notify_state()\n    finally:\n        await unregister(websocket)\n\nasyncio.run(websockets.serve(counter, \"localhost\", 6789))\n\nasync def do_ws_set_value(val):\n    STATE[\"value\"] = val\n    await notify_state()\n\ndef efun_ws_set_value(val: int) -> None:\n    asyncio.run(do_ws_set_value(val))\n\nldmud.register_efun(\"py_ws_set_value\", efun_ws_set_value)\n```\n\nAnd here the HTML code to run in the browser:\n```html\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>WebSocket demo</title>\n        <style type=\"text/css\">\n            body {\n                font-family: \"Courier New\", sans-serif;\n                text-align: center;\n            }\n            .buttons {\n                font-size: 4em;\n                display: flex;\n                justify-content: center;\n            }\n            .button, .value {\n                line-height: 1;\n                padding: 2rem;\n                margin: 2rem;\n                border: medium solid;\n                min-height: 1em;\n                min-width: 1em;\n            }\n            .button {\n                cursor: pointer;\n                user-select: none;\n            }\n            .minus {\n                color: red;\n            }\n            .plus {\n                color: green;\n            }\n            .value {\n                min-width: 2em;\n            }\n            .state {\n                font-size: 2em;\n            }\n        </style>\n    </head>\n    <body>\n        <div class=\"buttons\">\n            <div class=\"minus button\">-</div>\n            <div class=\"value\">?</div>\n            <div class=\"plus button\">+</div>\n        </div>\n        <div class=\"state\">\n            <span class=\"users\">?</span> online\n        </div>\n        <script>\n            var minus = document.querySelector('.minus'),\n                plus = document.querySelector('.plus'),\n                value = document.querySelector('.value'),\n                users = document.querySelector('.users'),\n                websocket = new WebSocket(\"ws://127.0.0.1:6789/\");\n            minus.onclick = function (event) {\n                websocket.send(JSON.stringify({action: 'minus'}));\n            }\n            plus.onclick = function (event) {\n                websocket.send(JSON.stringify({action: 'plus'}));\n            }\n            websocket.onmessage = function (event) {\n                data = JSON.parse(event.data);\n                switch (data.type) {\n                    case 'state':\n                        value.textContent = data.value;\n                        break;\n                    case 'users':\n                        users.textContent = (\n                            data.count.toString() + \" user\" +\n                            (data.count == 1 ? \"\" : \"s\"));\n                        break;\n                    default:\n                        console.error(\n                            \"unsupported event\", data);\n                }\n            };\n        </script>\n    </body>\n</html>\n```\n\nHave fun!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ldmud/python-asyncio",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ldmud-asyncio",
    "package_url": "https://pypi.org/project/ldmud-asyncio/",
    "platform": null,
    "project_url": "https://pypi.org/project/ldmud-asyncio/",
    "project_urls": {
      "Homepage": "https://github.com/ldmud/python-asyncio"
    },
    "release_url": "https://pypi.org/project/ldmud-asyncio/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Python asynchronous I/O package for LDMud",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14486363,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "493fd2967bc28475cd50c4de8cc5c4f55d4514f77d6ef909616e38423ab2c96d",
          "md5": "99ae4aa29dd0b0611ed86d28dbf8bf4e",
          "sha256": "dfdeb0bb4c368c159393ff92bb0ef66c898a5df339c3229577b1bc93f1c81eba"
        },
        "downloads": -1,
        "filename": "ldmud_asyncio-0.0.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "99ae4aa29dd0b0611ed86d28dbf8bf4e",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.5",
        "size": 16476,
        "upload_time": "2020-01-12T22:06:11",
        "upload_time_iso_8601": "2020-01-12T22:06:11.196726Z",
        "url": "https://files.pythonhosted.org/packages/49/3f/d2967bc28475cd50c4de8cc5c4f55d4514f77d6ef909616e38423ab2c96d/ldmud_asyncio-0.0.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dff6762559f1ddee326b4703d22738fa0f3617df5340b685cc8d19d345ccf89",
          "md5": "64f22e45032ca723179295cfd963b877",
          "sha256": "14ef6a6eb52a26db460bde11b7201c4c0803e2917692ac8280b7b7b4ef063bb3"
        },
        "downloads": -1,
        "filename": "ldmud_asyncio-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64f22e45032ca723179295cfd963b877",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8853,
        "upload_time": "2020-01-12T22:06:09",
        "upload_time_iso_8601": "2020-01-12T22:06:09.089834Z",
        "url": "https://files.pythonhosted.org/packages/2d/ff/6762559f1ddee326b4703d22738fa0f3617df5340b685cc8d19d345ccf89/ldmud_asyncio-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "939c5219f26b9d58d3e0824b67244b6ab145a49cb0f34e830d3fc9defd785d5f",
          "md5": "cde272ce9debdaa9f24fe8f040b27ef4",
          "sha256": "bf5972b3ba39c37b65a14e84538beacb026e5f0608b61cf5f6f567eef0c63452"
        },
        "downloads": -1,
        "filename": "ldmud-asyncio-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cde272ce9debdaa9f24fe8f040b27ef4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6034,
        "upload_time": "2020-01-12T22:06:12",
        "upload_time_iso_8601": "2020-01-12T22:06:12.392508Z",
        "url": "https://files.pythonhosted.org/packages/93/9c/5219f26b9d58d3e0824b67244b6ab145a49cb0f34e830d3fc9defd785d5f/ldmud-asyncio-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b25f8d1b2590e5131d466fea13fe1e4b1b90b1366c26b10bfefc5bef15a4430",
          "md5": "33ada4efc585613edd467b4b0fa76471",
          "sha256": "d33715ff94d2c7d96a70bb8f28d6cb61b375cf5152d7aca0c0b36532ef06812d"
        },
        "downloads": -1,
        "filename": "ldmud_asyncio-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33ada4efc585613edd467b4b0fa76471",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8914,
        "upload_time": "2020-10-27T20:01:19",
        "upload_time_iso_8601": "2020-10-27T20:01:19.795774Z",
        "url": "https://files.pythonhosted.org/packages/4b/25/f8d1b2590e5131d466fea13fe1e4b1b90b1366c26b10bfefc5bef15a4430/ldmud_asyncio-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a16365f602a4fa877c969974f4fa8194d791e41f75adc65be8e15b184437cc6",
          "md5": "6d30a4888ddd6e2113b48c43b0609912",
          "sha256": "842ea27c1fe814056f7177b9322e6e1a2168d27c87b37533e360b00bd7e4fb42"
        },
        "downloads": -1,
        "filename": "ldmud-asyncio-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6d30a4888ddd6e2113b48c43b0609912",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6026,
        "upload_time": "2020-10-27T20:01:21",
        "upload_time_iso_8601": "2020-10-27T20:01:21.283058Z",
        "url": "https://files.pythonhosted.org/packages/5a/16/365f602a4fa877c969974f4fa8194d791e41f75adc65be8e15b184437cc6/ldmud-asyncio-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e4183a4160f76f66dbd5825735eb0cd4fefa13c521336555772e4975df5caba",
          "md5": "e5f6d828655d6eb212d9af0234da60a3",
          "sha256": "d08bfc9298639a7ffd4dcc7ab448662c0c6d35965d638e6e2cce8d7955c9ad63"
        },
        "downloads": -1,
        "filename": "ldmud_asyncio-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5f6d828655d6eb212d9af0234da60a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6468,
        "upload_time": "2022-07-19T21:47:39",
        "upload_time_iso_8601": "2022-07-19T21:47:39.517528Z",
        "url": "https://files.pythonhosted.org/packages/4e/41/83a4160f76f66dbd5825735eb0cd4fefa13c521336555772e4975df5caba/ldmud_asyncio-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e856fc7fbfcb270407383c040a15cb3fbde3f4e2417ca8458b45d88bdabe74be",
          "md5": "b80f682b701273fb1c51c6e3fce5ee80",
          "sha256": "db64f9be44217a6c49448a57ca845db26cf6e90267476e01751bac39599d25bc"
        },
        "downloads": -1,
        "filename": "ldmud-asyncio-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b80f682b701273fb1c51c6e3fce5ee80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6357,
        "upload_time": "2022-07-19T21:47:41",
        "upload_time_iso_8601": "2022-07-19T21:47:41.690427Z",
        "url": "https://files.pythonhosted.org/packages/e8/56/fc7fbfcb270407383c040a15cb3fbde3f4e2417ca8458b45d88bdabe74be/ldmud-asyncio-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e4183a4160f76f66dbd5825735eb0cd4fefa13c521336555772e4975df5caba",
        "md5": "e5f6d828655d6eb212d9af0234da60a3",
        "sha256": "d08bfc9298639a7ffd4dcc7ab448662c0c6d35965d638e6e2cce8d7955c9ad63"
      },
      "downloads": -1,
      "filename": "ldmud_asyncio-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e5f6d828655d6eb212d9af0234da60a3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 6468,
      "upload_time": "2022-07-19T21:47:39",
      "upload_time_iso_8601": "2022-07-19T21:47:39.517528Z",
      "url": "https://files.pythonhosted.org/packages/4e/41/83a4160f76f66dbd5825735eb0cd4fefa13c521336555772e4975df5caba/ldmud_asyncio-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e856fc7fbfcb270407383c040a15cb3fbde3f4e2417ca8458b45d88bdabe74be",
        "md5": "b80f682b701273fb1c51c6e3fce5ee80",
        "sha256": "db64f9be44217a6c49448a57ca845db26cf6e90267476e01751bac39599d25bc"
      },
      "downloads": -1,
      "filename": "ldmud-asyncio-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "b80f682b701273fb1c51c6e3fce5ee80",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 6357,
      "upload_time": "2022-07-19T21:47:41",
      "upload_time_iso_8601": "2022-07-19T21:47:41.690427Z",
      "url": "https://files.pythonhosted.org/packages/e8/56/fc7fbfcb270407383c040a15cb3fbde3f4e2417ca8458b45d88bdabe74be/ldmud-asyncio-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}