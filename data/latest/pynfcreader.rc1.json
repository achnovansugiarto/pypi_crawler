{
  "info": {
    "author": "Guillaume VINET",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyNFCReader\n\nA little python client to use as a low level contactless smart card reader the Hydra NFC v1 & v2, developed by Benjamin Vernoux:\n* https://github.com/bvernoux/hydranfc\n* https://github.com/hydrabus/hydrafw_hydranfc_shield_v2 \n\nThe communication uses the BBIO reader mode.\n\n## Status\n\n  - It works with :\n\n     - ISO 14443 A  & ISO 15693 card.\n     - ISO 14443 B only for hydra NFC v2\n\n  - The PCD frame size is currently limited to 16 bytes.\n\n## Help\n\n* [ISO 14443 B](./wiki/iso14443/iso_14443_b.md)\n\n## Example\n\nThe file  pynfcreader/examples/reader_hydranfc_iso14443_a.py contains an example.\nYou can customize :\n  - the port com and baudrate\n  - the debug mode. \n\nIt enables :\n  - to select a Master Card card\n  - to read the first 0x19 response bytes\n  - to send the Get Processing Options and get the response\n\nHere's a log (where I've changed the UID and the historical bytes of the card :) )\n\n    INFO  ::  Hydra NFC python driver version : 0.0.1 - beta\n    INFO  ::  \tSupported hydra firmware 11.02.2015 - [HydraFW v0.5 Beta]\n    INFO  ::  \tISO 14443 A only\n    INFO  ::  \tOnly one card in the field during a transaction\n    INFO  ::  \n    INFO  ::  Connect to HydraNFC\n    INFO  ::  \n    INFO  ::  Reset HydraNFC\n    INFO  ::  \n    INFO  ::  Configure HydraNFC\n    INFO  ::  \tConfigure gpio and spi...\n    INFO  ::  \tConfigure spi2...\n    INFO  ::  \n    INFO  ::  Set HydraNFC to ISO 14443 A mode\n    INFO  ::  \n    INFO  ::  REQA (7 bits):\n    INFO  ::  \t\t26                                                     &   \n    INFO  ::  \t\n    INFO  ::  ATQA:\n    INFO  ::  \t\t04 00                                                  ..   \n    INFO  ::  \t\n    INFO  ::  Select cascade level 1:\n    INFO  ::  \t\t93 20                                                  ..   \n    INFO  ::  \t\n    INFO  ::  Select cascade level 1 response:\n    INFO  ::  \t\tXX XX XX XX 17                                         .....   \n    INFO  ::  \t\n    INFO  ::  Select cascade level 1:\n    INFO  ::  \t\t93 70 XX XX XX XX 17                                   .p.....   \n    INFO  ::  \t\n    INFO  ::  Select cascade level 1 response:\n    INFO  ::  \t\t20 FC 70                                               ..p   \n    INFO  ::  \t\n    INFO  ::  Request for Answer To Select (RATS):\n    INFO  ::  \tPCD selected options:\n    INFO  ::  \t\tFSDI : 0x0 => max PCD frame size : 16 bytes\n    INFO  ::  \t\tCID  : 0x0\n    INFO  ::  RATS\n    INFO  ::  \t\tE0 00                                                  ..   \n    INFO  ::  \t\n    INFO  ::  Answer to Select (ATS = RATS response):\n    INFO  ::  \t\t0A 78 80 82 02 XX XX XX   XX XX 92 43                  .x......   ...C\n    INFO  ::  \t\n    INFO  ::  \tT0 : 0x78\n    INFO  ::  \t\tFSCI : 0x8 => max card frame size : 256 bytes\n    INFO  ::  \t\tTA(1) present\n    INFO  ::  \t\tTB(1) present\n    INFO  ::  \t\tTC(1) present\n    INFO  ::  \tTA(1) : 0x80\n    INFO  ::  \t\tInterpretation : TODO...\n    INFO  ::  \tTB(1) : 0x82\n    INFO  ::  \t\tInterpretation : TODO...\n    INFO  ::  \tTC(1) : 0x02\n    INFO  ::  \t\tNAD not supported\n    INFO  ::  \t\tCID supported\n    INFO  ::  \tHistorical bytes : XX XX XX XX XX\n    INFO  ::  \tCRC : 92 43\n    INFO  ::  \n    INFO  ::  \n    INFO  ::  \n    INFO  ::  PPS\n    INFO  ::  \tPCD selected options:\n    INFO  ::  \tCID : 0x0\n    INFO  ::  \tPPS1 not transmitted\n    INFO  ::  PPS:\n    INFO  ::  \t\tD0                                                     .   \n    INFO  ::  \t\n    INFO  ::  PPS response:\n    INFO  ::  \t\tD0 73 87                                               .s.   \n    INFO  ::  \t\n    INFO  ::  \tPPS accepted\n    INFO  ::  \n    INFO  ::  APDU command:\n    INFO  ::  \t\t00 A4 04 00 07 A0 00 00   00 04 10 10 19               ........   .....\n    INFO  ::  \t\n    INFO  ::  \t\tTPDU command:\n    INFO  ::  \t\t\t0A 00 00 A4 04 00 07 A0   00 00 00 04 10 10 19         ........   .......\n    INFO  ::  \t\t\n    INFO  ::  \t\tTPDU response:\n    INFO  ::  \t\t\t1A 00 6F 3F 84 07 A0 00   00 00 04 10 10 A5 7A 14      ..o?....   ......z.\n    INFO  ::  \t\t\n    INFO  ::  \t\tTPDU command:\n    INFO  ::  \t\t\tA3                                                     .   \n    INFO  ::  \t\t\n    INFO  ::  \t\tTPDU response:\n    INFO  ::  \t\t\t13 34 50 0A 4D 41 53 54   45 52 43 41 52 44 69 1C      .4P.MAST   ERCARDi.\n    INFO  ::  \t\t\n    INFO  ::  \t\tTPDU command:\n    INFO  ::  \t\t\tA2                                                     .   \n    INFO  ::  \t\t\n    INFO  ::  \t\tTPDU response:\n    INFO  ::  \t\t\t02 90 00 F1 09                                         .....   \n    INFO  ::  \t\t\n    INFO  ::  APDU response:\n    INFO  ::  \t\t6F 3F 84 07 A0 00 00 00   04 10 10 A5 34 50 0A 4D      o?......   ....4P.M\n    INFO  ::  \t\t41 53 54 45 52 43 41 52   44 90 00                     ASTERCAR   D..\n    INFO  ::  \t\n    INFO  ::  APDU command:\n    INFO  ::  \t\t80 A8 00 00 02 83 00 00                                ........   \n    INFO  ::  \t\n    INFO  ::  \t\tTPDU command:\n    INFO  ::  \t\t\t0B 00 80 A8 00 00 02 83   00 00                        ........   ..\n    INFO  ::  \t\t\n    INFO  ::  \t\tTPDU response:\n    INFO  ::  \t\t\t1B 00 77 16 82 02 19 80   94 10 08 01 01 00 C6 3D      ..w.....   .......=\n    INFO  ::  \t\t\n    INFO  ::  \t\tTPDU command:\n    INFO  ::  \t\t\tA2                                                     .   \n    INFO  ::  \t\t\n    INFO  ::  \t\tTPDU response:\n    INFO  ::  \t\t\t12 10 01 01 01 18 01 02   00 20 01 02 00 90 99 5B      ........   .......[\n    INFO  ::  \t\t\n    INFO  ::  \t\tTPDU command:\n    INFO  ::  \t\t\tA3                                                     .   \n    INFO  ::  \t\t\n    INFO  ::  \t\tTPDU response:\n    INFO  ::  \t\t\t03 00 C8 34                                            ...4   \n    INFO  ::  \t\t\n    INFO  ::  APDU response:\n    INFO  ::  \t\t77 16 82 02 19 80 94 10   08 01 01 00 10 01 01 01      w.......   ........\n    INFO  ::  \t\t18 01 02 00 20 01 02 00   90 00                        ........   ..\n    INFO  ::  \t\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gvinet/pynfcreader",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyNFCReader",
    "package_url": "https://pypi.org/project/pyNFCReader/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyNFCReader/",
    "project_urls": {
      "Homepage": "https://github.com/gvinet/pynfcreader"
    },
    "release_url": "https://pypi.org/project/pyNFCReader/1.3.0/",
    "requires_dist": [
      "pyHydrabus"
    ],
    "requires_python": "",
    "summary": "NFC reader",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8223011,
  "releases": {
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40cd28af8d1b9a5cb5cc543994610efe0626ec25905d54a3fdb61a7614b7de01",
          "md5": "b3cafbd13874fb11ec3651defb560412",
          "sha256": "0f74e6871fed035b83cf38311963859a45d85a7b6966adcd49cb8cc64df92d2c"
        },
        "downloads": -1,
        "filename": "pyNFCReader-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3cafbd13874fb11ec3651defb560412",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 37999,
        "upload_time": "2020-09-19T08:12:06",
        "upload_time_iso_8601": "2020-09-19T08:12:06.282171Z",
        "url": "https://files.pythonhosted.org/packages/40/cd/28af8d1b9a5cb5cc543994610efe0626ec25905d54a3fdb61a7614b7de01/pyNFCReader-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a9af26a61d93595c47337bdb206b0c4effffb0d0a0c02c895f56068e60bec6b",
          "md5": "bce281ac67de3c987e8224649a987f5d",
          "sha256": "d299bcdc8535831bc4186f264df4733e5b302d8a046a1ab6a2d6c6113d48eadb"
        },
        "downloads": -1,
        "filename": "pyNFCReader-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bce281ac67de3c987e8224649a987f5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16445,
        "upload_time": "2020-09-19T08:12:35",
        "upload_time_iso_8601": "2020-09-19T08:12:35.448423Z",
        "url": "https://files.pythonhosted.org/packages/2a/9a/f26a61d93595c47337bdb206b0c4effffb0d0a0c02c895f56068e60bec6b/pyNFCReader-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40cd28af8d1b9a5cb5cc543994610efe0626ec25905d54a3fdb61a7614b7de01",
        "md5": "b3cafbd13874fb11ec3651defb560412",
        "sha256": "0f74e6871fed035b83cf38311963859a45d85a7b6966adcd49cb8cc64df92d2c"
      },
      "downloads": -1,
      "filename": "pyNFCReader-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3cafbd13874fb11ec3651defb560412",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 37999,
      "upload_time": "2020-09-19T08:12:06",
      "upload_time_iso_8601": "2020-09-19T08:12:06.282171Z",
      "url": "https://files.pythonhosted.org/packages/40/cd/28af8d1b9a5cb5cc543994610efe0626ec25905d54a3fdb61a7614b7de01/pyNFCReader-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a9af26a61d93595c47337bdb206b0c4effffb0d0a0c02c895f56068e60bec6b",
        "md5": "bce281ac67de3c987e8224649a987f5d",
        "sha256": "d299bcdc8535831bc4186f264df4733e5b302d8a046a1ab6a2d6c6113d48eadb"
      },
      "downloads": -1,
      "filename": "pyNFCReader-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bce281ac67de3c987e8224649a987f5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16445,
      "upload_time": "2020-09-19T08:12:35",
      "upload_time_iso_8601": "2020-09-19T08:12:35.448423Z",
      "url": "https://files.pythonhosted.org/packages/2a/9a/f26a61d93595c47337bdb206b0c4effffb0d0a0c02c895f56068e60bec6b/pyNFCReader-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}