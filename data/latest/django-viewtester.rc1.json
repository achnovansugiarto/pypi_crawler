{
  "info": {
    "author": "Peter van Kampen",
    "author_email": "pterk@datatailors.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "==========\nViewtester\n==========\n\n.. contents:: Table of Contents\n\nWhat is it?\n-----------\n\nA django-application to automate creating tests for views.\n\nRequirements\n------------\n\n* django-1.1\n* jquery_ 1.4+ (optional though advisable). \n\nIt is assumed jquery is already loaded in your template(s). If not add\nthis line in the (extra)head-section::\n\n    <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"></script>\n\nCredits\n-------\n\nBased on ideas and code from Eric Holscher's testmaker in test-utils_. \n\nHow to get it?\n--------------\n\nYou can download compressed archives from bitbucket_ or clone the\nrepository using mercurial. I hope to make it available via PYPI_\nsometime soon.\n\nUsage\n-----\n\nAdd viewtester to your INSTALLED_APPS and include it in your urls.py\nthen run::\n\n    $./manage.py run_viewtester [-f fixture.xml] appname\n\nthen open your browser and go to http://localhost:8000/.\n\nClick around and see the results in the generated test-file. If all\ngoes well you should be able to run the resulting tests without any\nfurther ado::\n\n    $./manage.py test appname\n\n.. note:: \n   The __init__.py that comes with viewtester imports all\n   TestCase classes from all modules in the tests-directory. It is\n   only created if the tests-dir doesn't exist when run_viewtester is\n   started.\n\nOverview\n--------\n\nOnce added to a project's settings and urls.py you can use the\nrun_viewtester command to run the testserver with an app-name as an\nargument and optionally a (set of) fixture to populate the\ndatabase. This follows the pattern of a django TestCase_.\n\nThe command injects middleware that logs all requests to the specified\napp and resulting response status' to a test-module formated as django\nTestCases. Tests will be saved to appname/tests/YYYYMMDD-NN.py. You\ncan override this on the commandline using the -l flag.\n\nThe middleware will also track any logging in or out you'll do and\nhave the test-client log in or out accordingly in the tests.\n\nAn html-div, the 'panel', is injected into the response content that\ncontains information about the current TestCase_: Classname and loaded\nfixtures, current test-method-name and user. You can collapse the div\nby clicking on the title and it can be dragged to a non-intrusive\nplace thanks to the magic of jquery-ui_. It will remember where you\ndragged it too.\n\nThe panel contains a number of forms that allow you to:\n\n* Create a new Class, optionally with a set of fixtures that it will\n  also be loaded upon submit. The fixtures can be picked from a\n  pre-populated multiselect control which contains all the files in\n  appname/fixtures.\n\n* Start a new test-method which will also reset the database to the\n  state it will be when the resulting tests are run: It will be\n  flushed and the class' fixtures are loaded.\n\n* Check the template context-variables by saving assertEqual\n  statements into the tests by selecting variable-names from a\n  multi-select control.\n\n* Save the current database-state for the specified app to a fixture\n  to use in later tests. Fixtures will be saved to appname/fixtures/\n  using the name provided. The fixture name should follow the\n  name.format pattern so it can infer the format from the\n  extension. Only json and xml are supported. Fixtures are saved with\n  --indent==2 for easy perusal.\n\n\n.. _django: http://www.djangoproject.com/\n.. _bitbucket: http://bitbucket.org/pterk/django-testmaker/downloads/\n.. _documentation: http://bitbucket.org/pterk/\n.. _PYPI: http://pypi.python.org/pypi\n.. _test-utils: http://ericholscher.com/projects/django-test-utils/\n.. _TestCase: http://docs.djangoproject.com/en/dev/topics/testing/#testcase\n.. _jquery: http://jquery.com/\n.. _jquery-ui: http://jqueryui.com/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://bitbucket.org/pterk/django-viewtester/",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-viewtester",
    "package_url": "https://pypi.org/project/django-viewtester/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-viewtester/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://bitbucket.org/pterk/django-viewtester/"
    },
    "release_url": "https://pypi.org/project/django-viewtester/10.4.3/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A django views-tester",
    "version": "10.4.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 790992,
  "releases": {
    "10.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44396c18c016f81c3cb64fcba4dd59b64520785eb96911ab6eaf4df2051ce1e0",
          "md5": "88097a65a55c032d3cd99fda5f800fe6",
          "sha256": "57efe3a1cfed049a515959b7d6e68fd7466cb7a48e806effe5d16a950d846c71"
        },
        "downloads": -1,
        "filename": "django-viewtester-10.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "88097a65a55c032d3cd99fda5f800fe6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13485,
        "upload_time": "2010-04-20T15:21:58",
        "upload_time_iso_8601": "2010-04-20T15:21:58.707130Z",
        "url": "https://files.pythonhosted.org/packages/44/39/6c18c016f81c3cb64fcba4dd59b64520785eb96911ab6eaf4df2051ce1e0/django-viewtester-10.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44396c18c016f81c3cb64fcba4dd59b64520785eb96911ab6eaf4df2051ce1e0",
        "md5": "88097a65a55c032d3cd99fda5f800fe6",
        "sha256": "57efe3a1cfed049a515959b7d6e68fd7466cb7a48e806effe5d16a950d846c71"
      },
      "downloads": -1,
      "filename": "django-viewtester-10.4.3.tar.gz",
      "has_sig": false,
      "md5_digest": "88097a65a55c032d3cd99fda5f800fe6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13485,
      "upload_time": "2010-04-20T15:21:58",
      "upload_time_iso_8601": "2010-04-20T15:21:58.707130Z",
      "url": "https://files.pythonhosted.org/packages/44/39/6c18c016f81c3cb64fcba4dd59b64520785eb96911ab6eaf4df2051ce1e0/django-viewtester-10.4.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}