{
  "info": {
    "author": "Ben Mather",
    "author_email": "ben.mather@sydney.edu.au",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# GPlately\n\nGPlately was created to accelerate spatio-temporal data analysis leveraging pyGPlates and PlateTectonicTools within a simplified Python interface. This object-oriented package enables the reconstruction of data through deep geologic time (points, lines, polygons, and rasters), the interrogation of plate kinematic information (plate velocities, rates of subduction and seafloor spreading), the rapid comparison between multiple plate motion models, and the plotting of reconstructed output data on maps. All tools are designed to be parallel-safe to accelerate spatio-temporal analysis over multiple CPU processors.\n\n![SeedPointGIF](https://raw.githubusercontent.com/GPlates/gplately/master/Notebooks/NotebookFiles/ReadMe_Files/muller19_seedpoints.gif)\n\n\nGPlately requires a working installation of pyGPlates, which is freely\navailable at https://www.gplates.org/download.\nAll major system architectures (e.g. Linux, MacOS, Windows) are supported and installation instructions\nare [well documented](https://www.gplates.org/docs/pygplates/pygplates_getting_started.html\\#installation).\nSample data is also available from [EarthByte servers](https://www.earthbyte.org/category/resources/), which\nincludes rasters, seafloor age grids, rotation files, and more to get started with plate reconstructions.\n\n#### Citation\n\n_Coming soon!_\n\n## Dependencies\n\n- [pyGPlates](https://www.gplates.org/docs/pygplates/pygplates_getting_started.html#installation)\n- [PlateTectonicTools](https://github.com/EarthByte/PlateTectonicTools)\n- [Shapely <2.0](https://shapely.readthedocs.io/en/stable/project.html#installing-shapely)\n- NumPy\n- SciPy 1.10\n- Matplotlib\n- [Cartopy](https://scitools.org.uk/cartopy/docs/latest/index.html#getting-started) (for mapping)\n- Shapely\n- [Pooch](https://github.com/fatiando/pooch)\n- GeoPandas\n- netCDF4\n\n\n## Installation\n\n### Stable release\nYou can install the latest stable public release of `GPlately` using the pip package manager.\n\n```python\npip install gplately\n```\nor:\n\n```python\npip install git+https://github.com/GPlates/gplately.git \n```\n\n### Pull from repository \n\n**First-time installation:** To install the latest version of GPlately from a specific repository branch (e.g. `master`), copy the following commands into your terminal:\n\n```python\ncd /path/to/desired/directory #Change your command directory to where you'd like to clone GPlately\ngit clone https://github.com/GPlates/gplately.git\npwd # Just to check your directory - should end with /.../gplately\ngit checkout master # or the name of whichever branch you need\ngit pull # fetch all recent changes from this branch\npip install .\n```\n\n**Update installation from cloned repo:** To update your installation of GPlately by fetching the latest pushes from a specific repository branch (e.g. `master`), copy the following commands into your terminal:\n\n```python\ncd /path/to/gplately/directory #Should be where gplately is cloned - must end in /.../gplately\ngit checkout master # or the name of whichever branch you need\ngit pull # fetch all recent changes from this branch\npip install .\n```\n\n\n## Usage\n\nGPlately uses objects to accomplish a variety of common tasks. The common objects include:\n\n- `DataServer` - download rotation files and topology features from plate models on EarthByte's webDAV server\n- `PlateReconstruction` - reconstruct features, tesselate mid ocean ridges, subduction zones\n- `Points` - partition points onto plates, rotate back through time\n- `Raster` - read in NetCDF grids, interpolation, resampling\n- `PlotTopologies` - one stop shop for plotting ridges, trenches, subduction teeth\n\n\n### The `DataServer` object\n\n`GPlately`'s `DataServer` object can be used to download:\n\n- rotation models\n- topology features\n- static polygons\n- coastlines\n- continents\n- continent-ocean boundaries\n- age grids and rasters\n- geological feature data\n\nfrom assorted plate reconstruction models. These files are needed to construct most of `GPlately`'s objects. For example,\nwe can download a `rotation model`, a set of `topology features` and some `static polygons` from the [Müller et al. 2019](https://www.earthbyte.org/muller-et-al-2019-deforming-plate-reconstruction-and-seafloor-age-grids-tectonics/) \nglobal Mesozoic–Cenozoic deforming plate motion model. \n\n```python\ngDownload = gplately.DataServer(\"Muller2019\")\nrotation_model, topology_features, static_polygons = gDownload.get_plate_reconstruction_files()\n```\n\n### The `PlateReconstruction` object\n\n... contains methods to reconstruct the positions of present-day feature data back through geological time. You can also use\nit to calculate plate model data like topological plate velocities, or total trench and ridge lengths per Ma! You can create\nthe object by passing a `rotation model`, a set of `topology features` and some `static polygons`: \n\n```python\nmodel = gplately.PlateReconstruction(rotation_model, topology_features, static_polygons)\n```\nLaunch the [Plate Reconstruction](https://github.com/GPlates/gplately/blob/master/Notebooks/02-PlateReconstructions.ipynb) notebook to see more.\n\n\n### The `PlotTopologies` object\n\n... can be used to visualise reconstructed feature geometries through time. To call the object, pass a set of `continents`, \n`coastlines` and `COBs` (either as file paths or as `<pyGPlates.FeatureCollection>` objects), as well as a `PlateReconstruction`\nobject, and a reconstruction `time`. \n\n```python\ncoastlines, continents, COBs = gDownload.get_topology_geometries()\ntime = 50 #Ma\ngPlot = gplately.plot.PlotTopologies(model, time, coastlines, continents, COBs)\n```\nBelow are some continents, coastlines, COBs, ridges and transforms, trenches, subduction teeth and\nseafloor age grids plotted using `PlotTopologies`!\n\n![ReconstructionImage](https://raw.githubusercontent.com/GPlates/gplately/master/Notebooks/NotebookFiles/ReadMe_Files/plot_topologies_img.png)\n\n### The `Points` object\n\n... can be used to reconstruct the positions of geological point features and calculate their underlying plate velocities \nthrough geological time. \n\n```python\npt_lon = np.array([-107.662152, -58.082792, 17.483189, 133.674590, 80.412876])\npt_lat = np.array([48.797807, -12.654857, 11.884395, -26.415630, 31.368509])\n\n# Call the Points object: pass the PlateReconstruction object, and the latitudes and longitudes of the seed points!\ngpts = gplately.Points(model, pt_lon, pt_lat)\n```\n![PointData](https://raw.githubusercontent.com/GPlates/gplately/master/Notebooks/NotebookFiles/ReadMe_Files/surface_hotspot_plumes.png)\n\n\n### The `Raster` object\n\n...can be used to read, resample and resize assorted raster data like `netCDF4` seafloor age grids, continental grids and ETOPO\nrelief rasters. You can also reconstruct raster data back through geological time!\n\n```python\netopo = gdownload.get_raster(\"ETOPO1_tif\")\n\nraster = gplately.Raster(\n    model,\n    data=etopo,\n    time=0,\n    origin=\"upper\",\n)\nwhite_rgb = (255, 255, 255)  # RGB code for white, to fill gaps in output\n\nreconstructed = raster.reconstruct(\n    time=50,\n    fill_value=white_rgb,\n    threads=4,\n)\n```\n\nBelow is a plot of the [ETOPO1 global relief raster](https://www.ncei.noaa.gov/products/etopo-global-relief-model) at present day, and reconstructed to 50Ma:\n\n![RasterImg](https://raw.githubusercontent.com/GPlates/gplately/master/Notebooks/NotebookFiles/ReadMe_Files/etopo_reconstruction.png)\n\n\n## Sample workflows\n\nTo see GPlately in action, launch a Jupyter Notebook environment and check out the [sample notebooks](./Notebooks):\n\n- [__01 - Getting Started__](https://github.com/GPlates/gplately/blob/master/Notebooks/01-GettingStarted.ipynb): A brief overview of how to initialise GPlately's main objects\n- [__02 - Plate Reconstructions__](https://github.com/GPlates/gplately/blob/master/Notebooks/02-PlateReconstructions.ipynb): Setting up a `PlateReconstruction` object, reconstructing geological data through time \n- [__03 - Working with Points__](https://github.com/GPlates/gplately/blob/master/Notebooks/03-WorkingWithPoints.ipynb): Setting up a `Points` object, reconstructing seed point locations through time with. This notebook uses point data from the Paleobiology Database (PBDB).\n- [__04 - Velocity Basics__](https://github.com/GPlates/gplately/blob/master/Notebooks/04-VelocityBasics.ipynb): Calculating plate velocities, plotting velocity vector fields\n- [__05 - Working with Feature Geometries__](https://github.com/GPlates/gplately/blob/master/Notebooks/05-WorkingWithFeatureGeometries.ipynb): Processing and plotting assorted polyline, polygon and point data from [GPlates 2.3's sample data sets](https://www.earthbyte.org/gplates-2-3-software-and-data-sets/)\n- [__06 - Rasters__](https://github.com/GPlates/gplately/blob/master/Notebooks/06-Rasters.ipynb): Reading, resizing, resampling raster data, and linearly interpolating point data onto raster data\n- [__07 - Plate Tectonic Stats__](https://github.com/GPlates/gplately/blob/master/Notebooks/07-WorkingWithPlateTectonicStats.ipynb): Using [PlateTectonicTools](https://github.com/EarthByte/PlateTectonicTools) to calculate and plot subduction zone and ridge data (convergence/spreading velocities, subduction angles, subduction zone and ridge lengths, crustal surface areas produced and subducted etc.) \n- [__08 - Predicting Slab Dip__](https://github.com/GPlates/gplately/blob/master/Notebooks/08-PredictingSlabDip.ipynb): Predicting the average slab dip angle of subducting oceanic lithosphere.\n- [__09 - Motion Paths and Flowlines__](https://github.com/GPlates/gplately/blob/master/Notebooks/09-CreatingMotionPathsAndFlowlines.ipynb): Using pyGPlates to create motion paths and flowines of points on a tectonic plate to illustrate the plate's trajectory through geological time.\n- [__10 - SeafloorGrid__](https://github.com/GPlates/gplately/blob/master/Notebooks/10-SeafloorGrids.ipynb): Defines the parameters needed to set up a `SeafloorGrid` object, and demonstrates how to produce age and spreading rate grids from a set of plate reconstruction model files.\n\n## API Documentation\n\nDocumentation of GPlately's objects and methods can be found [here](https://gplates.github.io/gplately/)!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GPlates/gplately",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gplately",
    "package_url": "https://pypi.org/project/gplately/",
    "platform": null,
    "project_url": "https://pypi.org/project/gplately/",
    "project_urls": {
      "Homepage": "https://github.com/GPlates/gplately"
    },
    "release_url": "https://pypi.org/project/gplately/0.3.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Object-orientated Python interface to pyGPlates for plate tectonic reconstructions",
    "version": "0.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17234567,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3072997312105ef736ac4f5e77e6539643aebed65f966360e39901cf0c9296a6",
          "md5": "bf861fcc30ae18c1e0141e9ffe196d67",
          "sha256": "95f4b2b90b786839a6e6176a178b957ee0e8088ee9412e1c6cb9feef1fcf0fa6"
        },
        "downloads": -1,
        "filename": "gplately-0.1.macosx-11.0-arm64.tar.gz",
        "has_sig": false,
        "md5_digest": "bf861fcc30ae18c1e0141e9ffe196d67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 151153,
        "upload_time": "2022-08-01T00:57:53",
        "upload_time_iso_8601": "2022-08-01T00:57:53.430604Z",
        "url": "https://files.pythonhosted.org/packages/30/72/997312105ef736ac4f5e77e6539643aebed65f966360e39901cf0c9296a6/gplately-0.1.macosx-11.0-arm64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28c7a9556417a392e2122f0efd45262b54c6993133dbd92b4bc1fcdea5aed860",
          "md5": "7dcd7d35ce11df1eaeb693a4427ee98b",
          "sha256": "392ce7ee5d22e7aa996716f2f9ba6c2bb7737a04b176267fb9c5e303b395e54c"
        },
        "downloads": -1,
        "filename": "gplately-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7dcd7d35ce11df1eaeb693a4427ee98b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 76972,
        "upload_time": "2022-08-01T01:44:18",
        "upload_time_iso_8601": "2022-08-01T01:44:18.064465Z",
        "url": "https://files.pythonhosted.org/packages/28/c7/a9556417a392e2122f0efd45262b54c6993133dbd92b4bc1fcdea5aed860/gplately-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b090f6eb87e4d8ac5d9a6b41b4cecc60b9344297d237e8cb16ad89d25c4efd9",
          "md5": "c6ce383752920ffd9e796c3922adb88a",
          "sha256": "f0f7f8c7ebbba0d2f8f05f5fb08f22a0c4167bc865b02cd9a77cd667fe303f3f"
        },
        "downloads": -1,
        "filename": "gplately-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c6ce383752920ffd9e796c3922adb88a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 117947,
        "upload_time": "2023-02-23T05:14:06",
        "upload_time_iso_8601": "2023-02-23T05:14:06.201623Z",
        "url": "https://files.pythonhosted.org/packages/5b/09/0f6eb87e4d8ac5d9a6b41b4cecc60b9344297d237e8cb16ad89d25c4efd9/gplately-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd70a5c7869ea8a1b38820084c9e7d4d03b54cf8b21c49a98a81fde4d2a3bbf3",
          "md5": "871ee4ef1e57a625183d1fc69ce3c975",
          "sha256": "4b2794ebd2337e5a37442127401999497104eec5f4ac1ff7b1295d75a0a7d59a"
        },
        "downloads": -1,
        "filename": "gplately-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "871ee4ef1e57a625183d1fc69ce3c975",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 118640,
        "upload_time": "2023-03-10T03:52:30",
        "upload_time_iso_8601": "2023-03-10T03:52:30.917979Z",
        "url": "https://files.pythonhosted.org/packages/cd/70/a5c7869ea8a1b38820084c9e7d4d03b54cf8b21c49a98a81fde4d2a3bbf3/gplately-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08f74fda24c70b459553045fff29a0b2fc0a13241e409e1f46a8f883a8db3e2b",
          "md5": "529c84526e2808230113553d0df4e977",
          "sha256": "e1a1aa81b42e907802909848c41910ad52922a71e5915d53d728230f4033f52a"
        },
        "downloads": -1,
        "filename": "gplately-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "529c84526e2808230113553d0df4e977",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 118634,
        "upload_time": "2023-03-10T05:04:37",
        "upload_time_iso_8601": "2023-03-10T05:04:37.419882Z",
        "url": "https://files.pythonhosted.org/packages/08/f7/4fda24c70b459553045fff29a0b2fc0a13241e409e1f46a8f883a8db3e2b/gplately-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08f74fda24c70b459553045fff29a0b2fc0a13241e409e1f46a8f883a8db3e2b",
        "md5": "529c84526e2808230113553d0df4e977",
        "sha256": "e1a1aa81b42e907802909848c41910ad52922a71e5915d53d728230f4033f52a"
      },
      "downloads": -1,
      "filename": "gplately-0.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "529c84526e2808230113553d0df4e977",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 118634,
      "upload_time": "2023-03-10T05:04:37",
      "upload_time_iso_8601": "2023-03-10T05:04:37.419882Z",
      "url": "https://files.pythonhosted.org/packages/08/f7/4fda24c70b459553045fff29a0b2fc0a13241e409e1f46a8f883a8db3e2b/gplately-0.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}