{
  "info": {
    "author": "Jelmer Neeven",
    "author_email": "jelmer@neeven.tech",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Automatically parallelizing simple python for-loops\nThis is currently still in a pretty experimental stage, and I can guarantee that it is full of horrendous bugs. There are only two `AggregationStrategy` types with support for a limited set of objects for now, but the library can definitely be used (especially for loops that don't \"return\" any values at all). Have a look at the [aggregation strategies](./paraloop/aggregation_strategies.py) to see what is currently supported!\n\n## How it works\nGiven a for-loop, e.g.\n```python\nfrom paraloop import ParaLoop, Variable\nfrom paraloop import aggregation_strategies\n\ncounter = Variable(3, aggregation_strategy=aggregation_strategies.Sum)\ndictionary = Variable({}, aggregation_strategy=aggregation_strategies.Concatenate)\n\nfor i in ParaLoop(range(0, 100), num_processes=8):\n    counter += i\n    dictionary[f\"key_{i}\"] = \"Hi!\"\n\nprint(counter)\nprint(dictionary)\n```\n\n`paraloop` will turn it into a function, e.g.\n```python\ndef loop_iterator(i):\n    counter.assign(counter + 1)\n    dictionary[f\"key_{i}\"] = \"Hi\"!\n```\n\nAnd will call the function once for every iteration of the loop across multiple processes, instead of the original loop body.\nOnce the processes have finished, `paraloop` will handle the aggregation based on the chosen [AggregationStrategy](./paraloop/aggregation_strategies.py), so that you can access your variable as if no multiprocessing ever happened.\n\n## When would I use this?\n`paraloop` is intended to be used for parallelizing for-loops that take an annoying amount of time, but are not worth spending the time and effort of proper multiprocessing on. These are usually fairly simple loops in research-style code that involve many web or file operations, but the goal of `paraloop` is to support parallelizing *any* Python for-loop by simply wrapping the variables and calling `ParaLoop`, without other modifications to the source code.\n\n`paraloop` is **not** intended to be optimally efficient or provide a robust multiprocessing framework, and you probably shouldn't want to use this in a production environment. If you're looking for a robust multiprocessing framework that does require a bit of setup (i.e. rewriting your loop to a function with some specific return value and then aggregating those values yourself), have a look at [`joblib`](https://joblib.readthedocs.io/en/latest/).\n\n## Practical example\nHave a look at [example.py](./example.py).\nIt queries some WikiPedia pages and counts the frequency of each word.\nThe output of the script is as follows:\n```\n13882 57495\nThe original loop took 18.553406238555908 seconds.\n13882 paraloop.Variable(57495)\nThe ParaLoop took 1.689873456954956 seconds.\n```\nWhich is of course because most of the time is spent waiting for the WikiPedia server to respond.\n\n\n## Roadmap\n- [ ] Write unit tests for the `ParaLoop` class and the loop transformer\n- [ ] Automatically determine the optimal number of processes if none was specified\n- [ ] Add an optional progress bar\n- [ ] Add a timeout in case a worker silently fails\n- [ ] Add `SharedVariable`s that are stored in shared memory and hence don't need to be aggregated at all\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "for loop parallel multiprocess python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "paraloop",
    "package_url": "https://pypi.org/project/paraloop/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/paraloop/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/paraloop/0.0.1.dev1/",
    "requires_dist": [
      "numpy (>=1.17)",
      "black (==20.8b1) ; extra == 'dev'",
      "docformatter (==1.4) ; extra == 'dev'",
      "flake8 (==3.8.4) ; extra == 'dev'",
      "isort (==5.7.0) ; extra == 'dev'",
      "pytest (==6.2.2) ; extra == 'dev'",
      "pytest-xdist (==2.2.1) ; extra == 'dev'",
      "pytype (==2021.3.3) ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Simple Python for-loop parallelization",
    "version": "0.0.1.dev1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9977857,
  "releases": {
    "0.0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "104a005244a4cdf464c52ef89a201ccce585e56ff0e990af308ed9bd67a2555d",
          "md5": "c8b0434d16a6c4928d053d8918145a45",
          "sha256": "85195e333342f55ec70499fb18064e6dbf9d5ce36f9e827b8bb54f9b8c1bcf0b"
        },
        "downloads": -1,
        "filename": "paraloop-0.0.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8b0434d16a6c4928d053d8918145a45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11610,
        "upload_time": "2021-04-05T16:52:10",
        "upload_time_iso_8601": "2021-04-05T16:52:10.402217Z",
        "url": "https://files.pythonhosted.org/packages/10/4a/005244a4cdf464c52ef89a201ccce585e56ff0e990af308ed9bd67a2555d/paraloop-0.0.1.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56f2564ed12ecf262a3d7c2ee3ea14084f2a0155b5235b4aba21ad2e25afa735",
          "md5": "ab70532f8fa45a8a451659dcd0e228bc",
          "sha256": "f91a6100eb89ce18c8cea104d037254c92dd5aba594154d13defa256eb66938f"
        },
        "downloads": -1,
        "filename": "paraloop-0.0.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "ab70532f8fa45a8a451659dcd0e228bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11000,
        "upload_time": "2021-04-05T16:47:32",
        "upload_time_iso_8601": "2021-04-05T16:47:32.491729Z",
        "url": "https://files.pythonhosted.org/packages/56/f2/564ed12ecf262a3d7c2ee3ea14084f2a0155b5235b4aba21ad2e25afa735/paraloop-0.0.1.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86c84c1a78dc79a2cd21feb526fbbbf916ae90f276c36736a3e1ddad02a4632e",
          "md5": "ea379fdb1c8d04b28e68a67af3d7c181",
          "sha256": "98f9079e584d2fc036da3e8c5298586cf1079052c82ff48f64050eb4dde88df3"
        },
        "downloads": -1,
        "filename": "paraloop-0.0.1.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea379fdb1c8d04b28e68a67af3d7c181",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11611,
        "upload_time": "2021-04-05T16:55:01",
        "upload_time_iso_8601": "2021-04-05T16:55:01.382789Z",
        "url": "https://files.pythonhosted.org/packages/86/c8/4c1a78dc79a2cd21feb526fbbbf916ae90f276c36736a3e1ddad02a4632e/paraloop-0.0.1.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e2a99b890293d5cb548242026dfca09f9efcfb890c2b2e471cbb9556b68ae95",
          "md5": "a5f7d31d1f874ce1126723865857406b",
          "sha256": "afb7c50f486c74f661651006545f6609796787c615acfc5a31e50d40d9ec4658"
        },
        "downloads": -1,
        "filename": "paraloop-0.0.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "a5f7d31d1f874ce1126723865857406b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10972,
        "upload_time": "2021-04-05T16:55:02",
        "upload_time_iso_8601": "2021-04-05T16:55:02.994298Z",
        "url": "https://files.pythonhosted.org/packages/9e/2a/99b890293d5cb548242026dfca09f9efcfb890c2b2e471cbb9556b68ae95/paraloop-0.0.1.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86c84c1a78dc79a2cd21feb526fbbbf916ae90f276c36736a3e1ddad02a4632e",
        "md5": "ea379fdb1c8d04b28e68a67af3d7c181",
        "sha256": "98f9079e584d2fc036da3e8c5298586cf1079052c82ff48f64050eb4dde88df3"
      },
      "downloads": -1,
      "filename": "paraloop-0.0.1.dev1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea379fdb1c8d04b28e68a67af3d7c181",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11611,
      "upload_time": "2021-04-05T16:55:01",
      "upload_time_iso_8601": "2021-04-05T16:55:01.382789Z",
      "url": "https://files.pythonhosted.org/packages/86/c8/4c1a78dc79a2cd21feb526fbbbf916ae90f276c36736a3e1ddad02a4632e/paraloop-0.0.1.dev1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e2a99b890293d5cb548242026dfca09f9efcfb890c2b2e471cbb9556b68ae95",
        "md5": "a5f7d31d1f874ce1126723865857406b",
        "sha256": "afb7c50f486c74f661651006545f6609796787c615acfc5a31e50d40d9ec4658"
      },
      "downloads": -1,
      "filename": "paraloop-0.0.1.dev1.tar.gz",
      "has_sig": false,
      "md5_digest": "a5f7d31d1f874ce1126723865857406b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10972,
      "upload_time": "2021-04-05T16:55:02",
      "upload_time_iso_8601": "2021-04-05T16:55:02.994298Z",
      "url": "https://files.pythonhosted.org/packages/9e/2a/99b890293d5cb548242026dfca09f9efcfb890c2b2e471cbb9556b68ae95/paraloop-0.0.1.dev1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}