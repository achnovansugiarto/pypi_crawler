{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# genofunc\n\nA compiled tool for HIV sequence processing including referencing, annotation, feature extraction, filtering and merging. Installtion can be done by pulling the genofunc folder and running python setup.py install.\n\n\n### Fasta and/or Metadata Manipulation\n\nMini tools for manipulation of fasta and/or metadata files. Contains functions such as merging multiple fasta files and metadata files, filtering duplicates, encoding fasta file sequence IDs etc.\n\n\n#### concatenate_fasta\n\nDescription: Concatenate all fasta file with the same gene regions into one sequence fasta file. \n\n    Options:\n        --in-prefix: Input prefix within a directory for specific fasta files to be read (Required)\n        --gene: Gene regions to concatenate by which fasta file names are included in (Required)\n        --out-dir: Output directory after concatenating all fasta files with the same gene name (Default: ./)\n        --log-file: Output additional information from the program (default: stdout)\n\n    e.g. genofunc concatenate_fasta --in-prefix tests/data/sequences/concatenate_fasta/ --gene pol gag --out-dir tests/data/output/\n\n#### extract_metadata\n\nDescription: Extract relevent metadata based on index fields from metadata file using fasta files. If field is empty, it will not be extracted and flagged in log file.\n\n    Options:\n        --in-fasta: Input fasta file (Required)\n        --in-metadata: Input metadata file (Required)\n        --column: column name for extraction (Required)\n        --rename: column name for re-naming (Default: None)\n        --id-column: column name containing sequence ID (Required)\n        --out-fasta: Output fasta file (Default: filtered.fasta)\n        --out-metadata: Output metadata file (Default: extracted_metadata.csv)\n        --log-file: Output additional information from the program (default: stdout)\n\n    e.g. genofunc extract_metadata --in-fasta tests/data/sequences/seqB.fasta --in-metadata tests/data/metadata/metadataB.tsv --column country --id-column strain --out-fasta tests/data/output/extract.fasta --out-metadata tests/data/output/extract_metadata.csv\n\n#### filter_fasta\n\nDescription: Filter fasta file based on minimum sequence length.\n\n    Options:\n        --in-dir: Input directory (Required)\n        --in-metadata: Input metadata for filtering alongside sequence file (Required)\n        --genes: Which genes fasta files are needed for filtering (Required)\n        --min-length: Minimum base coverage (Non-gaps) for sequences to be filtered if under this threshold (Required)\n        --symmetric: Require all gene regions to be available for the same sequence (Default: False)\n        --out-dir: Output directory after filtering (Default: ./)\n\n    e.g. genofunc filter_fasta --in-dir tests/data/sequences/gene_fasta/ --in-metadata tests/data/metadata/metadataB.tsv --genes pol gag --min-length 0.9 --symmetric --out-dir tests/data/output/\n\n#### gene_concatenator\n\nDescription: Concatenate fasta file based on similar sequence names of multiple genomic regions. \n\n    Options:\n        --in-fasta: Multiple fasta files for concatenation (Required)\n        --out-fasta: Output fasta file (Default: concatenate.fasta)\n\n    e.g. genofunc gene_concatenator --in-fasta tests/data/sequences/gene_fasta/pol.fasta tests/data/sequences/gene_fasta/gag.fasta --out-fasta tests/data/output/gag_pol.fasta\n\n#### merge\n\nDescription: Merges two or more fasta files avoiding duplicates based on matches to metadata\n\n    Options:\n        --in-fasta: List of fasta files with spaces in between. At least two fasta files must be inserted here. (Required)\n        --in-metadata: list of matching metadata file with same naming convention as fasta file. (Required)\n        --index-field: The column ID with matching sequence IDs with fasta file (Required)\n        --out-dir: Output merged sequence and metadata file from multiple inputs (Default: ./).\n\n    e.g. genofunc merge --in-fasta tests/data/sequences/seqA.fasta tests/data/sequences/seqB.fasta --in-metadata tests/data/metadata/metadataA.tsv tests/data/metadata/metadataB.tsv --index-field strain --out-dir tests/data/output/\n\n#### name_splitter\n\nDescription: Split the sequence name into metadata based on piping character.\n\n    Options:\n        --in-fasta: Input fasta file (Required)\n        --pipe: Input character the fasta sequence name is split based on (Required)\n        --header: Header for the output metadata table (Default: \"\")\n        --out-metadata: Output metadata file (Default: metadata.csv)\n\n    e.g. genofunc name_splitter --in-fasta tests/data/sequences/seq_pipe.fasta --pipe '|' --out-metadata tests/data/output/output_metadata.csv\n\n#### rename_fasta\n\nDescription: Renaming fasta sequence names based on character splits.\n\n    Options:\n        --in-fasta: Input fasta file (Required)\n        --pipe: Input character the fasta sequence name is split based on (Required)\n        --out-fasta: Output fasta file (Default: cleaned_sequences.fasta)\n\n    e.g. genofunc rename_fasta --in-fasta tests/data/sequences/seq_pipe.fasta --pipe '|' --out-fasta tests/data/output/depipe.fasta\n\n#### strain_encoder\n\nDescription: Encoded strain id into non-defining ids. \n\n    Options:\n        --in-fasta: Input folder containing sequence files in fasta format (Required)\n        --in-metadata: Input metadata corresponding to sequence files (Required)\n        --encoding-column: Column for the base for encoding information (Required)\n        --out-dir: Output folder including encoded files (Default: ./)\n\n    e.g. genofunc strain_encoder --in-fasta tests/data/sequences/strain_encoder/ --in-metadata tests/data/metadata/metadataB.tsv --encoding-column 2 --out-dir tests/data/output/\n\n\n\n### HIV Sequence Processing\n\nMini tools for manipulation of sequences mainly dealing with processing of raw sequences into information rich data such as annotation, feature extraction, referencing and alignment.\n\n\n#### feature_extractor\n\nDescription: Extract gene(s) sequences from annotated json file based on user input gene regions. \n\n    Options:\n        --annotated-file: Input annotated json file containing all sequences (Required)\n        --gene: Gene(s) regions to be extracted (Required)\n        --strip-gap: Strip gaps within gene regions (Default: False)\n        --filter-span: Minimum gene sequence length to be filtered (Default: 0)\n        --out-prefix: Output prefix for output sequences (Default: extracted_)\n\n    e.g. genofunc feature_extractor --annotated-file tests/data/sequences/annotated.json --gene pol gag --strip-gap --filter-span 1300 --filter-coverage 0.7 --out-prefix tests/data/output/extracted_ \n\n#### genome_annotator\n\nDescription: Annotate genomes based on closest reference sequence annotation. \n\n    Options:\n        --raw-fasta: Raw sequences with reference in name tag in fasta format (Required)\n        --reference-sequence: Annotated reference sequences in json format (Required)\n        --out-annotation: Output list of sequences annotated in json format (Default: referenced.json)\n\n    e.g. genofunc genome_annotator --raw-fasta tests/data/sequences/referenced.fasta --reference-sequence tests/data/reference/reference.json --out-annotation tests/data/output/annotated.json\n\n#### reference_matcher\n\nDescription: Map sequence to the closest reference sequence list based on mini-map2. \n\n    Options:\n        --in-fasta: Raw sequences needed to be referenced to reference list in fasta format (Required)\n        --reference-sequence: Reference list in fasta format (Required)\n        --out-fasta: Output list of sequences referenced (Default: referenced.fasta)\n\n    e.g. genofunc reference_matcher --in-fasta tests/data/sequences/seqA.fasta --reference-sequence tests/data/reference/reference.fasta --out-fasta tests/data/output/referenced.fasta\n\n#### group_align\n\nDescription: Split the fasta file into groups of sequences set by a user threshold and align them in groups against reference. post group aligned sequences will be concatenated into a single alignment. \n\n    Options:\n        --in-dir: Input directory (Required)\n        --group-size: Group size for fasta file to split by (Required)\n        --reference-dir: Reference sequence directory. Reference sequence used based on matching sequence and reference file names (Required)\n        --out-dir: Output folder directory (Default: ./)\n\n    e.g. genofunc group_align --in-dir tests/data/sequences/group_align/ --group-size 10 --reference-dir tests/data/reference/ --out-dir tests/data/output/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/xiaoyu518/genofunc",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "genofunc",
    "package_url": "https://pypi.org/project/genofunc/",
    "platform": null,
    "project_url": "https://pypi.org/project/genofunc/",
    "project_urls": {
      "Homepage": "https://github.com/xiaoyu518/genofunc"
    },
    "release_url": "https://pypi.org/project/genofunc/1.0.3/",
    "requires_dist": [
      "biopython (>=1.70)",
      "numpy (>=1.18)",
      "pandas (>=0.24.2)",
      "nextstrain-augur (>=13.1.2)",
      "mappy (>=2.24)",
      "parasail (>=1.2.4)"
    ],
    "requires_python": "",
    "summary": "",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17097778,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8aac1d9a25f2bc811cb4e58859c0c2802425ed2b4e34780c16c1966c06850f84",
          "md5": "58b066aa3d03c7b85900c35a5c5b2fe1",
          "sha256": "53807a30f51079415709dc51cb48ebf05d4cddd25fcd719672606c589618844d"
        },
        "downloads": -1,
        "filename": "genofunc-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58b066aa3d03c7b85900c35a5c5b2fe1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28178,
        "upload_time": "2022-08-09T10:24:27",
        "upload_time_iso_8601": "2022-08-09T10:24:27.107879Z",
        "url": "https://files.pythonhosted.org/packages/8a/ac/1d9a25f2bc811cb4e58859c0c2802425ed2b4e34780c16c1966c06850f84/genofunc-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60fcef1bb8734901180f675ff8a3fa6fad2413ec3a70b68c324be3b9465c5e77",
          "md5": "2b936cb0cd3d86a9cde6d0ef16ad47ed",
          "sha256": "b5213eb4f557377345595dadcc04b2706600dd999ff1f5b6aab9fc9f96d16a65"
        },
        "downloads": -1,
        "filename": "genofunc-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b936cb0cd3d86a9cde6d0ef16ad47ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30259,
        "upload_time": "2023-02-28T16:21:36",
        "upload_time_iso_8601": "2023-02-28T16:21:36.030253Z",
        "url": "https://files.pythonhosted.org/packages/60/fc/ef1bb8734901180f675ff8a3fa6fad2413ec3a70b68c324be3b9465c5e77/genofunc-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60fcef1bb8734901180f675ff8a3fa6fad2413ec3a70b68c324be3b9465c5e77",
        "md5": "2b936cb0cd3d86a9cde6d0ef16ad47ed",
        "sha256": "b5213eb4f557377345595dadcc04b2706600dd999ff1f5b6aab9fc9f96d16a65"
      },
      "downloads": -1,
      "filename": "genofunc-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2b936cb0cd3d86a9cde6d0ef16ad47ed",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30259,
      "upload_time": "2023-02-28T16:21:36",
      "upload_time_iso_8601": "2023-02-28T16:21:36.030253Z",
      "url": "https://files.pythonhosted.org/packages/60/fc/ef1bb8734901180f675ff8a3fa6fad2413ec3a70b68c324be3b9465c5e77/genofunc-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}