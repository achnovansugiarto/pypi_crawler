{
  "info": {
    "author": "Rishit Dagli",
    "author_email": "rishit.dagli@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Compositional Attention\n\n![PyPI](https://img.shields.io/pypi/v/compositional-attention)\n[![Upload Python Package](https://github.com/Rishit-dagli/compositional-attention/actions/workflows/python-publish.yml/badge.svg)](https://github.com/Rishit-dagli/compositional-attention/actions/workflows/python-publish.yml)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n[![GitHub stars](https://img.shields.io/github/stars/Rishit-dagli/compositional-attention?style=social)](https://github.com/Rishit-dagli/compositional-attention/stargazers)\n[![GitHub followers](https://img.shields.io/github/followers/Rishit-dagli?label=Follow&style=social)](https://github.com/Rishit-dagli)\n[![Twitter Follow](https://img.shields.io/twitter/follow/rishit_dagli?style=social)](https://twitter.com/intent/follow?screen_name=rishit_dagli)\n\nThis repository is an implementation of [Compositional Attention: Disentangling Search and Retrieval](https://arxiv.org/abs/2110.09419) by MILA. Revisiting standard Multi-head attention through the lens of multiple parallel and independent search and retrieval mechanisms, this leads to static pairings between searches and retrievals, often leading to redundancy of parameters. They reframe the \"heads\" of multi-head attention as \"searches\", and once the multi-headed/searched values are aggregated, there is an extra retrieval step (using attention) off the searched results. The experiments establish this as an easy drop-in replacement for Multi-head attention.\n\n![](media/architecture.PNG)\n\n## Installation\n\nRun the following to install:\n\n```sh\npip install compositional-attention\n```\n\n## Developing `compositional-attention`\n\nTo install `compositional-attention`, along with tools you need to develop and test, run the following in your virtualenv:\n\n```sh\ngit clone https://github.com/Rishit-dagli/compositional-attention.git\n# or clone your own fork\n\ncd compositional-attention\npip install -e .[dev]\n```\n\n## Usage\n\n```py\nimport tensorflow as tf\nfrom compositional_attention import CompositionalAttention\n\nattn = CompositionalAttention(\n    dim = 1024,            # input dimension\n    dim_head = 64,         # dimension per attention 'head' - head is now either search or retrieval\n    num_searches = 8,      # number of searches\n    num_retrievals = 2,    # number of retrievals\n    dropout = 0.1,          # dropout of attention of search and retrieval\n)\n\ntokens = tf.random.uniform([1, 512, 1024])  # tokens\nmask = tf.ones([1, 512], dtype=tf.dtypes.bool)  # mask\n\nout = attn(tokens, mask = mask) # (1, 512, 1024)\n```\n\n## Want to Contribute 🙋‍♂️?\n\nAwesome! If you want to contribute to this project, you're always welcome! See [Contributing Guidelines](CONTRIBUTING.md). You can also take a look at [open issues](https://github.com/Rishit-dagli/Compositional-Attention/issues) for getting more information about current or upcoming tasks.\n\n## Want to discuss? 💬\n\nHave any questions, doubts or want to present your opinions, views? You're always welcome. You can [start discussions](https://github.com/Rishit-dagli/Compositional-Attention/discussions).\n\n## Citations\n\n```bibtex\nMittal, Sarthak, et al. ‘Compositional Attention: Disentangling Search and Retrieval’. ArXiv:2110.09419 [Cs], Feb. 2022. arXiv.org, http://arxiv.org/abs/2110.09419.\n```\n\nOfficial [PyTorch implmentation](https://github.com/sarthmit/compositional-attention) and Phil Wang's [PyTorch implmenetation](https://github.com/lucidrains/compositional-attention-pytorch).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Rishit-dagli/Compositional-Attention/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "compositional-attention",
    "package_url": "https://pypi.org/project/compositional-attention/",
    "platform": null,
    "project_url": "https://pypi.org/project/compositional-attention/",
    "project_urls": {
      "Homepage": "https://github.com/Rishit-dagli/Compositional-Attention/"
    },
    "release_url": "https://pypi.org/project/compositional-attention/0.1.0/",
    "requires_dist": [
      "tensorflow (>=2.5.0)",
      "einops (~=0.3.0)",
      "check-manifest ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "numpy ; extra == 'dev'",
      "black ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "An Implementation of Compositional Attention that disentagles seearch and retrieval.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13989973,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff32a55817ea22ea3d7a0bd4359474fbc2e6d81c45f8af7f9c7ab312e5cbc579",
          "md5": "3f166b8d3d52efcbe973e5c70bbfd562",
          "sha256": "dd265174da1eef2b48b8c782d1adc17e25db1a787bc45c938f298d2b862f9fcd"
        },
        "downloads": -1,
        "filename": "compositional_attention-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f166b8d3d52efcbe973e5c70bbfd562",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9044,
        "upload_time": "2022-05-31T16:02:39",
        "upload_time_iso_8601": "2022-05-31T16:02:39.893480Z",
        "url": "https://files.pythonhosted.org/packages/ff/32/a55817ea22ea3d7a0bd4359474fbc2e6d81c45f8af7f9c7ab312e5cbc579/compositional_attention-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a178b095aef5110f68e669833321302ed3aeb9d3f29c05144b52aa51ddf5ae25",
          "md5": "431d6e6c40023ca00cb7db63b5bab0b2",
          "sha256": "661a400fdd98622c6908e69dcfeeae6990914a515b6a10a44eea400df5c486c6"
        },
        "downloads": -1,
        "filename": "compositional-attention-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "431d6e6c40023ca00cb7db63b5bab0b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8680,
        "upload_time": "2022-05-31T16:02:41",
        "upload_time_iso_8601": "2022-05-31T16:02:41.648565Z",
        "url": "https://files.pythonhosted.org/packages/a1/78/b095aef5110f68e669833321302ed3aeb9d3f29c05144b52aa51ddf5ae25/compositional-attention-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff32a55817ea22ea3d7a0bd4359474fbc2e6d81c45f8af7f9c7ab312e5cbc579",
        "md5": "3f166b8d3d52efcbe973e5c70bbfd562",
        "sha256": "dd265174da1eef2b48b8c782d1adc17e25db1a787bc45c938f298d2b862f9fcd"
      },
      "downloads": -1,
      "filename": "compositional_attention-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3f166b8d3d52efcbe973e5c70bbfd562",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9044,
      "upload_time": "2022-05-31T16:02:39",
      "upload_time_iso_8601": "2022-05-31T16:02:39.893480Z",
      "url": "https://files.pythonhosted.org/packages/ff/32/a55817ea22ea3d7a0bd4359474fbc2e6d81c45f8af7f9c7ab312e5cbc579/compositional_attention-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a178b095aef5110f68e669833321302ed3aeb9d3f29c05144b52aa51ddf5ae25",
        "md5": "431d6e6c40023ca00cb7db63b5bab0b2",
        "sha256": "661a400fdd98622c6908e69dcfeeae6990914a515b6a10a44eea400df5c486c6"
      },
      "downloads": -1,
      "filename": "compositional-attention-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "431d6e6c40023ca00cb7db63b5bab0b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8680,
      "upload_time": "2022-05-31T16:02:41",
      "upload_time_iso_8601": "2022-05-31T16:02:41.648565Z",
      "url": "https://files.pythonhosted.org/packages/a1/78/b095aef5110f68e669833321302ed3aeb9d3f29c05144b52aa51ddf5ae25/compositional-attention-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}