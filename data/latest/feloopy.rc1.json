{
  "info": {
    "author": "Keivan Tafakkori",
    "author_email": "k.tafakkori@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\r\n[![GitHub release](https://img.shields.io/badge/version-0.2.3-orange.svg)](https://github.com/ktafakkori/feloopy/releases)\r\n[![Python 3.10](https://img.shields.io/badge/python-3.10-blue.svg)](https://www.python.org/downloads/release/python-310/)\r\n![Package Size](https://img.shields.io/github/languages/code-size/ktafakkori/feloopy)\r\n![Supporters](https://img.shields.io/github/stars/ktafakkori/feloopy)\r\n![Downloads](https://img.shields.io/pypi/dm/feloopy.svg)\r\n[![Total Downloads](https://static.pepy.tech/personalized-badge/feloopy?period=total&units=international_system&left_color=grey&right_color=blue&left_text=downloads)](https://pepy.tech/project/feloopy)\r\n![Release Date](https://img.shields.io/github/release-date/ktafakkori/feloopy.svg)\r\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/ktafakkori/feloopy.svg)](http://isitmaintained.com/project/ktafakkori/feloopy \"Average time to resolve an issue\")\r\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/ktafakkori/feloopy.svg)](http://isitmaintained.com/project/ktafakkori/feloopy \"Percentage of issues still open\")\r\n![GitHub contributors](https://img.shields.io/github/contributors/ktafakkori/feloopy.svg)\r\n[![License: MIT](https://img.shields.io/badge/license-MIT-blue.svg)](https://opensource.org/licenses/MIT)\r\n\r\n<p align=\"center\">\r\n  <img src=\"logo/feloopy.gif\" \r\n    />\r\n</p>\r\n\r\n# FelooPy: An integrated optimization environment for AutoOR in Python\r\n\r\n*Version 0.2.3 is out! More stable than ever*!\r\n\r\nFelooPy (/fɛlupaɪ/, an acronym for feasible, logical, optimal, and Python), is both a hyper-optimization interface and an integrated optimization environment for automated operations research in Python. \r\n\r\nUsing FelooPy, operations research scientists can: provide their target, representor, or learner model to get results; move focus from coding to modeling, and from modeling to analytics; automate time-consuming, iterative tasks of optimization model development, debugging, and implementation; access to 259 single-objective heuristic and exact optimization algorithms; switch between optimization interfaces and algorithms with no need of code changes; and use tools such as sensitivity analysis, automated encoding and decoding for heuristic optimization, timers, etc.\r\n\r\n## Specific features\r\n\r\n- **Free** and **Open-Source** integrated optimization environment developed under **MIT** license.\r\n- **Straightforward** mathematical programming **workflow**.\r\n- Using **single** optimization programming syntax for **15** **exact** and **heuristic** optimization interfaces in Python.\r\n- Accessing **82** exact and **177** heuristic optimization algorithms (total: **259**).\r\n- Supporting **scalable** optimization for **large-scale** real-world problems.\r\n- Supporting **benchmarking** with various optimization solvers.\r\n- Supporting **multi-parameter** sensitivity analysis on a single objective.\r\n- Supporting specific **solver options** such as **logging**, **number of threads**, **absolute gap** or **releative gap**.\r\n\r\n## Supported optimization interfaces\r\n\r\n### Exact optimization:\r\n\r\n- cplex\r\n- cvxpy\r\n- cylp\r\n- gekko\r\n- gurobi\r\n- linopy\r\n- mip\r\n- ortools\r\n- picos\r\n- pulp\r\n- pymprog\r\n- pyomo\r\n- xpress\r\n  \r\n### Heuristic optimization:\r\n\r\n- feloopy\r\n- mealpy\r\n\r\n## Installation\r\n\r\n*Optional downloads*: [Python 3.10][py], ([Visual Studio Code][vs] or [Anaconda][sp])\r\n\r\n*Note 1*: Installation process requires `python==3.10.x`, `pip>=22.3.1` and a stable internet connection.\r\n\r\n*Note 2:* Ensure to add Python to PATH during the installation process (usually the first menu).\r\n\r\n*Note 3:* To use FelooPy inside [Google Colab][gc] environment, please first run the following code to configure Python version. Note that this code requires you to choose the desired version during implementation.\r\n\r\n```python\r\n!sudo apt-get update -y\r\n!sudo apt-get install python3.10\r\n!sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1\r\n!sudo update-alternatives --config python3\r\n!sudo apt install python3-pip\r\n```\r\n\r\n[py]: https://www.python.org/downloads/release/python-3100/\r\n[vs]: https://code.visualstudio.com/\r\n[sp]: https://www.anaconda.com/\r\n[gc]: https://colab.research.google.com/\r\n\r\n### Method 1: Terminal command (e.g., CMD or GC):\r\n\r\n```text\r\npip install feloopy==0.2.3\r\n```\r\n\r\n### Method 2: IDE command (e.g., Spyder):\r\n\r\n*Note*: After installation, this line of code should be deleted.\r\n\r\n```text\r\n!pip install feloopy==0.2.3\r\n```\r\n\r\n### Method 3: Inside your Python code\r\n\r\n*Note*: After installation, this piece of code should be deleted.\r\n\r\n```text\r\nimport pip\r\n\r\ndef install(package):\r\n    if hasattr(pip, 'main'):\r\n        pip.main(['install','-U', package])\r\n    else:\r\n        pip._internal.main(['install','-U', package])\r\n\r\ninstall('feloopy')\r\n```\r\n\r\n### Method 4: From GitHub [Releases][a] section\r\n\r\n1. Download the [feloopy-0.2.3.zip][c] file.\r\n2. Extract it into a specific directory.\r\n3. Open a terminal in that directory.\r\n4. Type: `pip install .`\r\n\r\n[a]: https://github.com/ktafakkori/feloopy/releases\r\n[b]: https://git-scm.com/downloads\r\n[c]: https://github.com/ktafakkori/feloopy/releases/download/0.2.3/feloopy-0.2.3.zip\r\n\r\n### Method 5: From GitHub repository (insiders version)\r\n\r\n1. Download and install [git][b].\r\n\r\n2. Run this command inside a terminal:\r\n\r\n```text\r\npip install -U git+https://github.com/ktafakkori/feloopy\r\n```\r\n\r\n## Documentation\r\n\r\n* [Tutorial][01]\r\n* [Examples][02]\r\n* [Exact Solvers][03]\r\n* [Heuristic Solvers][04]\r\n* [Changelog][05]\r\n\r\n[01]: https://github.com/ktafakkori/feloopy/blob/main/documentation/Tutorial.md\r\n[02]: https://github.com/ktafakkori/feloopy/tree/main/examples\r\n[03]: https://github.com/ktafakkori/feloopy/blob/main/documentation/Exact_List.md\r\n[04]: https://github.com/ktafakkori/feloopy/blob/main/documentation/Heuristic_List.md\r\n[05]: https://github.com/ktafakkori/feloopy/blob/main/documentation/Updates.md\r\n\r\n## Citation\r\n\r\n* APA 7:\r\n\r\n```text\r\nTafakkori, K. (2023). Feloopy: An integrated optimization environment for AutoOR in Python (0.2.3) [Python]. https://github.com/ktafakkori/feloopy (Original work published 2023)\r\n```\r\n  \r\n* LaTeX:\r\n  \r\n```text\r\n@software{ktafakkori2023Feb,\r\n  author       = {Keivan Tafakkori},\r\n  title        = {{FelooPy: An integrated optimization environment for AutoOR in Python}},\r\n  year         = {2023},\r\n  month        = feb,\r\n  publisher    = {GitHub},\r\n  version      = {v0.2.3},\r\n  url          = {https://github.com/ktafakkori/feloopy/}\r\n}\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ktafakkori/feloopy/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ktafakkori/feloopy",
    "keywords": "Optimization,Machine_Learning,Simulation,Operations_Research,Computer_Science,Data_Science",
    "license": "MIT",
    "maintainer": "Keivan Tafakkori",
    "maintainer_email": "k.tafakkori@gmail.com",
    "name": "feloopy",
    "package_url": "https://pypi.org/project/feloopy/",
    "platform": null,
    "project_url": "https://pypi.org/project/feloopy/",
    "project_urls": {
      "Download": "https://github.com/ktafakkori/feloopy/releases",
      "Homepage": "https://github.com/ktafakkori/feloopy"
    },
    "release_url": "https://pypi.org/project/feloopy/0.2.3/",
    "requires_dist": [
      "tabulate",
      "numpy",
      "matplotlib",
      "infix",
      "pandas",
      "openpyxl",
      "gekko",
      "ortools",
      "pulp",
      "pyomo",
      "pymprog",
      "picos",
      "cplex",
      "docplex",
      "gurobipy",
      "xpress",
      "linopy",
      "cvxpy",
      "cylp",
      "mip",
      "mealpy"
    ],
    "requires_python": ">=3.10",
    "summary": "FelooPy: An Integrated Optimization Environment (IOE) for AutoOR in Python.",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17100244,
  "releases": {
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73da6affaa194c1ac10e750abb631ea1ea20d14209a1353d1887f642c8de45f4",
          "md5": "37a4a67305f00650444408076525a80f",
          "sha256": "de6b418820a412c187f38c7ba4d62fdbe4972a6a3cdef457a358a2135bcdce99"
        },
        "downloads": -1,
        "filename": "feloopy-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37a4a67305f00650444408076525a80f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 58940,
        "upload_time": "2023-02-28T19:19:41",
        "upload_time_iso_8601": "2023-02-28T19:19:41.875383Z",
        "url": "https://files.pythonhosted.org/packages/73/da/6affaa194c1ac10e750abb631ea1ea20d14209a1353d1887f642c8de45f4/feloopy-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdee31fbca5077842a651fe2477eadf7bf0def6cd880cda65014e7760a3228ba",
          "md5": "01c52ee89040b1dd27fc064d420bf8fe",
          "sha256": "56fa120a5ff34873638cb073d716e9f9ac8a79f4a82dc2520385495c8719a551"
        },
        "downloads": -1,
        "filename": "feloopy-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "01c52ee89040b1dd27fc064d420bf8fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 34611,
        "upload_time": "2023-02-28T19:19:45",
        "upload_time_iso_8601": "2023-02-28T19:19:45.267635Z",
        "url": "https://files.pythonhosted.org/packages/cd/ee/31fbca5077842a651fe2477eadf7bf0def6cd880cda65014e7760a3228ba/feloopy-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73da6affaa194c1ac10e750abb631ea1ea20d14209a1353d1887f642c8de45f4",
        "md5": "37a4a67305f00650444408076525a80f",
        "sha256": "de6b418820a412c187f38c7ba4d62fdbe4972a6a3cdef457a358a2135bcdce99"
      },
      "downloads": -1,
      "filename": "feloopy-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "37a4a67305f00650444408076525a80f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 58940,
      "upload_time": "2023-02-28T19:19:41",
      "upload_time_iso_8601": "2023-02-28T19:19:41.875383Z",
      "url": "https://files.pythonhosted.org/packages/73/da/6affaa194c1ac10e750abb631ea1ea20d14209a1353d1887f642c8de45f4/feloopy-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cdee31fbca5077842a651fe2477eadf7bf0def6cd880cda65014e7760a3228ba",
        "md5": "01c52ee89040b1dd27fc064d420bf8fe",
        "sha256": "56fa120a5ff34873638cb073d716e9f9ac8a79f4a82dc2520385495c8719a551"
      },
      "downloads": -1,
      "filename": "feloopy-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "01c52ee89040b1dd27fc064d420bf8fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 34611,
      "upload_time": "2023-02-28T19:19:45",
      "upload_time_iso_8601": "2023-02-28T19:19:45.267635Z",
      "url": "https://files.pythonhosted.org/packages/cd/ee/31fbca5077842a651fe2477eadf7bf0def6cd880cda65014e7760a3228ba/feloopy-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}