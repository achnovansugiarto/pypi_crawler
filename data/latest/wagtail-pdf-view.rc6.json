{
  "info": {
    "author": "Jonas Donhauser",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# wagtail-pdf-view\nRender Wagtail pages and models as PDF document using Weasyprint or LaTeX.\n\nThe goal of this extension is to provide a flexible but easy to use way to render Wagtail pages and Django models as PDF.\nWith this extension you can utilize all the benefits from the wagtail page system (previews, drafts, history) as well as the power of\n*StreamField* and *RichText* for your generated PDF document.\nModels may be easily rendered as PDF and will be accessible either through the admin interface or through a public URL.\n\nCurrently [weasyprint](https://github.com/Kozea/WeasyPrint) (for HTML to PDF conversion) and latex is supported.\nIf you are undecided which one to use, [weasyprint](https://github.com/Kozea/WeasyPrint) is recommended.\n\n![Short Demo Clip](clip_wagtail_pdf_view_low.gif)\n\n## Installing\n\nInstall the latest version from pypi:\n\n```sh\npip install -U wagtail-pdf-view\n# and either this for HTML -> PDF\npip install -U django-weasyprint\n# and/or this for Latex -> PDF\npip install -U django-tex\n```\n\nand add the following to your installed apps:\n\n```py\nINSTALLED_APPS = [\n    ...\n    'wagtail_pdf_view',\n    'wagtail.contrib.routable_page',\n    ...\n]\n```\n\nWhile [weasyprint](https://github.com/Kozea/WeasyPrint) is installed as dependency of [django-weasyprint](https://github.com/fdemmer/django-weasyprint) and works out of the box,\na working latex interpreter (lualatex) must be installed on your system if you want to use [django-tex](https://github.com/weinbusch/django-tex).\n\nIf [django-weasyprint](https://github.com/fdemmer/django-weasyprint) and [django-tex](https://github.com/weinbusch/django-tex) is installed, weasyprint is selected by default.\nFor [django-tex](https://github.com/weinbusch/django-tex) you should set `DEFAULT_PDF_VIEW_PROVIDER = WagtailTexView` in your settings.\n\n\n## Usage\n\nAll you need to do to render your Wagtail page as PDF, is to inherit from `PdfModelMixin`.\nIf you want to render a model instead, read the section **ModelAdmin** below.\n\n**If you want to use latex, read the latex section below.**\n\nFurther configuration options include:\n- `ROUTE_CONFIG` to enable rendering of the default HTML view and the PDF view at the same time\n- `stylesheets` resp. `get_stylesheets` to include CSS stylesheets for [weasyprint](https://github.com/Kozea/WeasyPrint)\n- `attachment` to control the file attachment (i.e. whether to download the PDF or open it in the browser)\n\n## Examples\n\nA very simple example page using Wagtails StreamField.\nLike for a regular Wagtail page, the template should be located under: `<app_dir>/templates/<app>/simple_pdf_page.html`\n**If you're using django-tex the template extention .tex is expected**.\n\n```py\nfrom wagtail.core.models import Page\nfrom wagtail.core.fields import RichTextField, StreamField\nfrom wagtail.core import blocks\nfrom wagtail.admin.edit_handlers import FieldPanel, StreamFieldPanel\n\nfrom wagtail_pdf_view.mixins import PdfViewPageMixin\n\n# Inherit from PdfViewPageMixin\nclass SimplePdfPage(PdfViewPageMixin, Page):\n    \n    # you can create fields as you're used to, e.g. StreamField\n    content = StreamField([\n        (\"heading\", blocks.CharBlock(form_classname=\"full title\")),\n        (\"text\", blocks.RichTextBlock()),\n    ], blank=True)\n    \n    # content panel for the CMS (same as always)\n    content_panels = Page.content_panels + [\n        StreamFieldPanel(\"content\"),\n    ]\n    \n    # OPTIONAL: If you want to include a stylesheet\n    #stylesheets = [\"css/your_stylesheet.css\"]\n```\n\n### Usage of `ROUTE_CONFIG`:\n\nDefault configuration:\n\n```py\nclass PdfOnlyPage(PdfViewPageMixin, Page):\n\n    # PDF only\n    ROUTE_CONFIG = [\n        (\"pdf\", r'^$'),\n        (\"html\", None),\n    ]\n    \n```\nBy default only the pdf-view is available, i.e. you may only view this page as pdf.\nThis is useful when you just want to display a generated pdf document easily.\n\n\nA HTML first page: You can access the wagtail page as you're used e.g. *127.0.0.1/mypage*.\nThe PDF version will be available under *pdf/* e.g. *127.0.0.1/mypage/pdf*\n\n```py\nclass HtmlAndPdfPage(PdfViewPageMixin, Page):\n\n    # HTML first\n    ROUTE_CONFIG = [\n        (\"html\", r'^$'),\n        (\"pdf\", r'^pdf/$'),\n    ]\n    \n```\n\nNote that the order of *html* and *pdf* is not arbitrary:\nThe entry you set first, will be displayed by default when using wagtails preview function. Depending on your case, you may want to put *pdf* in the first place, so your editors get the pdf-view by default, while html-page url stays the same for the users.\nIn both cases your editors may access both views through the drop-down menu integrated in the preview button.\n\nA PDF first page: The PDF version is displayed with the regular url and\nyou can access the wagtail page under */html*, e.g. *127.0.0.1/mypage/html*\n\n```py\nclass HtmlAndPdfPage(PdfViewPageMixin, Page):\n    \n    # PDF first\n    ROUTE_CONFIG = [\n        (\"pdf\", r'^$'),\n        (\"html\", r'^html/$'),\n    ]\n    \n```\n\n`ROUTE_CONFIG` is build on wagtails [routable_page](https://docs.wagtail.io/en/stable/reference/contrib/routablepage.html), you can specify routes as you want (e.g. `(\"html\", r'^web/$')`)\n\n#### Reversing and using URLs in templates\n\nAs of version 0.2 reversing url patterns is supported.\n\nThis feature is useful in cases when you are serving multiple views (i.e. html and pdf).\n\nYou can access the URLs for the different views by using `routablepageurl` from the [routable_page](https://docs.wagtail.io/en/stable/reference/contrib/routablepage.html) module:\n\n```html\n{% load wagtailroutablepage_tags %}\n\n<!-- HTML Page URL-->\n{% routablepageurl page \"html\" %}\n\n<!-- PDF Page URL-->\n{% routablepageurl page \"pdf\" %}\n\n\n<!-- When looping over Page.get_children, you need to use the specific Page object -->\n{% for subpage in page.get_children %}\n    <li>{% routablepageurl subpage.specific \"pdf\" %}</li>\n{% endfor %}\n```\n\nIn most cases you don't need the full functionality of `routablepageurl`. To make things easy you can simply access the different views by the custom URL attributes `url_pdf` and `url_html`:\n\n```html\n<!-- HTML view url -->\n{{page.url_html}}\n\n<!-- PDF view url -->\n{{page.url_pdf}}\n\n\n<!-- When looping over Page.get_children, you need to use the specific Page object -->\n{% for subpage in page.get_children %}\n    <li>{{subpage.specific.url_pdf}}</li>\n{% endfor %}\n```\n\nIf you are just interested in the extention to the normal page url:\n\n```py\n# this will be 'pdf/' in HTML-first mode\npage.reverse_subpage('pdf')\n```\n\n## ModelAdmin\n\nVersion 0.2 introduces rendering for models via `ModelAdmin`.\n\nThe model needs to inherit from `PdfModelMixin` to enable rendering on the models side.\nTo make incorporating PDF-views as simple as possible this module offers two `ModelAdmin` mixins\n`ModelAdminPdfViewMixin` and `ModelAdminPdfAdminViewMixin`.\nIf you are not using `ModelAdmin` you may add a view for the model manually.\n\n\n### Hooking in the URLs\n\nIf you want to access PDFs from outside of the admin area, you need to hook in `wagtail_pdf_urls` into your projects `urls.py`.\nIf you are unsure whether you need this, it is recommended use the hook below:\n\n```py\n# urls.py\n\nfrom wagtail_pdf_view import urls as wagtail_pdf_urls\n\nurlpatterns = urlpatterns + [\n    # hook in the 'live'-view PDFs under \"pdf/\"\n    path(\"pdf/\", include(wagtail_pdf_urls)),\n    ...\n    # IMPORTANT: This must be below the \"pdf/\" include\n    path(\"\", include(wagtail_urls)),\n    ...\n]\n```\n\n### Simple Example\n\nYour model needs to inherit from `PdfModelMixin`:\n\n```py\n# models.py\n\nfrom wagtail_pdf_view.mixins import PdfViewPageMixin, PdfModelMixin\n\nclass YourPdfModel(PdfModelMixin, models.Model):\n\n    # the admin view uses a different template attribute to\n    # prevent you from publishing sensitive content by accident\n    \n    # template for non-admin view\n    template_name = \"path/to/your_model.html\"\n    # template for admin \n    admin_template_name = \"path/to/your_model_admin.html\"\n```\n\nUnlike for PDF-Pages where everything is done in the Page-model, the hooks for `ModelAdmin` need to be extended:\n\nBy inheriting from `ModelAdminPdfViewMixin` or `ModelAdminPdfAdminViewMixin` you\nautomatically make the model accessible through a live url or through the admin panel respectively.\n\nThis separation should make it easy to choose a view to according to your security needs:\n- `ModelAdminPdfViewMixin` is suited for non-sensitive public models.\n- `ModelAdminPdfAdminViewMixin` makes the view only accessible to users with `view` permissions on the model.\n\n```py\n# wagtail_hooks.py\n\nfrom wagtail.contrib.modeladmin.options import ModelAdmin, modeladmin_register\n\nfrom .models import YourPdfModel\n\n\n# OPTION 1)\n# Creating a public view model (accessible for everybody through a url)\n# MAKE SURE YOU HOOKED IN THE URLs PROPERLY\n\nfrom wagtail_pdf_view.modeladmin.mixins import ModelAdminPdfViewMixin\n\n@modeladmin_register\nclass YourPdfModelWagtailAdmin(ModelAdminPdfViewMixin, ModelAdmin):\n    model = YourPdfModel\n\n    \n# OPTION 2)\n# Creating admin-restricted view model\n\nfrom wagtail_pdf_view.modeladmin.mixins import ModelAdminPdfAdminViewMixin\n\n@modeladmin_register\nclass YourPdfModelWagtailAdmin(ModelAdminPdfAdminViewMixin, ModelAdmin):\n    model = YourPdfModel\n    \n```\n\n### Model URL configuration without ModelAdmin\n\nThis is an example how you can hook in the models PDF-view manually (without using `ModelAdmin`).\n\n```py\n# urls.py\n\n# This will be either WagtailWeasyView or WagtailTexView depending on your installation\nfrom wagtail_pdf_view.mixins import DEFAULT_PDF_VIEW_PROVIDER\n\nfrom .models import YourPdfModel\n\nurlpatterns = [\n    ...\n    # URL path for the DetailView with primary key pk\n    re_path(r'^some/path/(?P<pk>\\d+)/$',  DEFAULT_PDF_VIEW_PROVIDER.as_view(model=YourPdfModel)),\n    ...\n]\n```\n\n### Using a custom ButtonHelper or PermissionHelper\n\nThis library implements an easier extendable `ButtonHelper`.\n\nIf you are using a custom `ButtonHelper`, you should inherit from `ExtendableButtonHelperMixin` or `PdfViewButtonHelper`,\notherwise you will not see a button for the PDF-view of the object in `ModelAdmin`s `ListView`.\n\nExample:\n```py\nclass MyCustomButtonHelper(PdfViewButtonHelper):\n    \n    # simplified button registration\n    # (action, properties)\n    custom_object_buttons = [\n        (\"custom\", {\"label\": 'Custom Label'}),\n        (\"some_action\", {\"label\": 'Another Action'}),\n    ]\n```\n\nNote that `custom_object_buttons` is defaulted with the actions *pdf* and *live* in `PdfViewButtonHelper`.\n\n\nIf you are setting a custom `PermissionHelper`, you need to inherit from `CustomActionPermissionHelperMixin`.\n\n\n## Using latex\n\nWhen you want to use latex instead of HTML, you should be aware of the following:\n\nYou need to add django_tex to `INSTALLED_APPS`:\n\n```py\nINSTALLED_APPS = [\n    ...\n    'django_tex',\n    ...\n]\n```\n\nYou need to add the jinja tex engine to `TEMPLATES` in your settings.py:\n```py\nTEMPLATES += [\n    {\n        'NAME': 'tex',\n        'BACKEND': 'django_tex.engine.TeXEngine', \n        'APP_DIRS': True,\n        'OPTIONS': {\n            'environment': 'wagtail_pdf_view.environment.latex_environment',\n        },\n    },\n]\n```\n\nSet `DEFAULT_PDF_VIEW_PROVIDER` in your settings:\n\n```py\nfrom wagtail_pdf_view.views import WagtailTexView\nDEFAULT_PDF_VIEW_PROVIDER = WagtailTexView\n```\n\nIn case you just want to use latex for a specific model settings you can overrite `PDF_VIEW_PROVIDER`:\n\n```py\nfrom wagtail_pdf_view.views import WagtailTexView\n\nclass SimplePdfPage(PdfViewPageMixin, Page):\n\n    # render with LaTeX instead\n    PDF_VIEW_PROVIDER = WagtailTexView\n```\n\nIn general you should include *wagtail_preamble.tex*, which provides required packages and commands for proper richtext handling.\n\n```\n{% include 'wagtail_preamble.tex' %}\n```\n\nYou can set custom width for the richtext image insertion\n \n```\n{% raw %}\n\\renewcommand{\\fullwidth} {0.8\\textwidth}\n\\renewcommand{\\partialwidth} {0.5\\textwidth}\n{% endraw  %} \n```\n\nA very useful block is *raw*, this prevents the jinja rendering engine from interpreting everything inside.\nThis is nice if you want to create a latex command\n\n```\n{% raw  %}\n{% endraw  %}\n```\n\nFor further information read [the django-tex github page](https://github.com/weinbusch/django-tex)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/donhauser/wagtail-pdf",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wagtail-pdf-view",
    "package_url": "https://pypi.org/project/wagtail-pdf-view/",
    "platform": "",
    "project_url": "https://pypi.org/project/wagtail-pdf-view/",
    "project_urls": {
      "Homepage": "https://github.com/donhauser/wagtail-pdf"
    },
    "release_url": "https://pypi.org/project/wagtail-pdf-view/0.2.1/",
    "requires_dist": [
      "wagtail",
      "django-tex ; extra == 'django-tex'",
      "django-weasyprint ; extra == 'weasyprint'"
    ],
    "requires_python": ">=3.6",
    "summary": "PDF rendering views for the Wagtail CMS",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12709412,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fff115704a745f56553f9b9f40139a9d7af630e44bdf33036b57c2d8d8adf15",
          "md5": "56bbf607099776cb26521e1918745d94",
          "sha256": "b5c42219c987eb46dfb830fd1162af8017a8cb08a8f33ef5e116cdca71028daa"
        },
        "downloads": -1,
        "filename": "wagtail_pdf_view-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56bbf607099776cb26521e1918745d94",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11872,
        "upload_time": "2021-01-22T13:21:27",
        "upload_time_iso_8601": "2021-01-22T13:21:27.297019Z",
        "url": "https://files.pythonhosted.org/packages/8f/ff/115704a745f56553f9b9f40139a9d7af630e44bdf33036b57c2d8d8adf15/wagtail_pdf_view-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b961ac2d1d17a2fe9acd29a2ff6419de169a9f94bec8a0a0318ceb4ca88c601f",
          "md5": "7fd99657e01db50e39fe68d854530161",
          "sha256": "236f9e8710b717f8acf008bdbd79aba3f1b4ab48f71841828454c8e108d7e9a7"
        },
        "downloads": -1,
        "filename": "wagtail-pdf-view-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7fd99657e01db50e39fe68d854530161",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8283,
        "upload_time": "2021-01-22T13:21:28",
        "upload_time_iso_8601": "2021-01-22T13:21:28.748507Z",
        "url": "https://files.pythonhosted.org/packages/b9/61/ac2d1d17a2fe9acd29a2ff6419de169a9f94bec8a0a0318ceb4ca88c601f/wagtail-pdf-view-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "469918f4ff56aaea159b2923b4a3f1fce3ae53cd31063b243f223e93882189e4",
          "md5": "5f5d9fcfc05f43b997704a9809d8c8f9",
          "sha256": "16536fe1e88241f0860f739c1d506f39526cfc8f039d61bb3f782e26a228ed8d"
        },
        "downloads": -1,
        "filename": "wagtail_pdf_view-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f5d9fcfc05f43b997704a9809d8c8f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15871,
        "upload_time": "2021-01-22T16:38:01",
        "upload_time_iso_8601": "2021-01-22T16:38:01.703376Z",
        "url": "https://files.pythonhosted.org/packages/46/99/18f4ff56aaea159b2923b4a3f1fce3ae53cd31063b243f223e93882189e4/wagtail_pdf_view-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd7b37ecc74019640143c6189407ddb9d0586e903130ebcd1af6e0c5b9061029",
          "md5": "56cf60ade08ae54927741c7c1e42ae37",
          "sha256": "a8cbec092cc8646d8c2e80d57c6efe0c229858404b02608ad3d0a0242e094676"
        },
        "downloads": -1,
        "filename": "wagtail-pdf-view-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "56cf60ade08ae54927741c7c1e42ae37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12533,
        "upload_time": "2021-01-22T16:38:03",
        "upload_time_iso_8601": "2021-01-22T16:38:03.221592Z",
        "url": "https://files.pythonhosted.org/packages/dd/7b/37ecc74019640143c6189407ddb9d0586e903130ebcd1af6e0c5b9061029/wagtail-pdf-view-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ba38b3198155fbf33351911b0f0ea8646167f6f53cc3a4400cefbcb5003ba04",
          "md5": "70f48406dfc5e711ba604d91d424e791",
          "sha256": "fa1c800f08205040d2ddd5c003cc3ecdb7ae866614ece2f2a24f234d857f4ee7"
        },
        "downloads": -1,
        "filename": "wagtail_pdf_view-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70f48406dfc5e711ba604d91d424e791",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16234,
        "upload_time": "2021-05-18T09:34:16",
        "upload_time_iso_8601": "2021-05-18T09:34:16.385962Z",
        "url": "https://files.pythonhosted.org/packages/5b/a3/8b3198155fbf33351911b0f0ea8646167f6f53cc3a4400cefbcb5003ba04/wagtail_pdf_view-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd33abc6cfe53c31a8888aa364eadc7ab6536d1276a144a0cef7c388789090ff",
          "md5": "375cd41355e39a9f216b259296f8afd4",
          "sha256": "4a40cdcd6a402db648b485c166af8613075d8479e5cd757a3f5270d57bfd75a7"
        },
        "downloads": -1,
        "filename": "wagtail-pdf-view-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "375cd41355e39a9f216b259296f8afd4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13218,
        "upload_time": "2021-05-18T09:34:17",
        "upload_time_iso_8601": "2021-05-18T09:34:17.730783Z",
        "url": "https://files.pythonhosted.org/packages/bd/33/abc6cfe53c31a8888aa364eadc7ab6536d1276a144a0cef7c388789090ff/wagtail-pdf-view-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d896de6dfc83c12d80a7631ab7c2de1deae66ac547ef4533ef8b86a8a601864",
          "md5": "14b937a5bdee5394708f0354bdf8eb0f",
          "sha256": "81ca1af11367de53ffe7c35aa38be00cd9874c61e0bbbb4a5c6849f4e265a726"
        },
        "downloads": -1,
        "filename": "wagtail_pdf_view-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14b937a5bdee5394708f0354bdf8eb0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16763,
        "upload_time": "2021-05-23T10:08:52",
        "upload_time_iso_8601": "2021-05-23T10:08:52.815185Z",
        "url": "https://files.pythonhosted.org/packages/1d/89/6de6dfc83c12d80a7631ab7c2de1deae66ac547ef4533ef8b86a8a601864/wagtail_pdf_view-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5dcc629fe125f8a5f96225ff507785ccf454dd267b813cf6da79f06d58bfc7c",
          "md5": "da9447a803d2da6b3fe0679fc6b127b4",
          "sha256": "37412573fec42cb5ce1d49a69826804c2833b7c6ebddf8fe7d653e5dd81bba91"
        },
        "downloads": -1,
        "filename": "wagtail-pdf-view-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "da9447a803d2da6b3fe0679fc6b127b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13743,
        "upload_time": "2021-05-23T10:08:54",
        "upload_time_iso_8601": "2021-05-23T10:08:54.440151Z",
        "url": "https://files.pythonhosted.org/packages/c5/dc/c629fe125f8a5f96225ff507785ccf454dd267b813cf6da79f06d58bfc7c/wagtail-pdf-view-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0c548f8d5c823a725e48af4adbb6e88924cac25b34955ea5c8925e04f867020",
          "md5": "cb90b04b9f0a19abb8606297768c2915",
          "sha256": "95afcbba5ef9275facd0c6df6cc9674b168d994f3d53ef9e8238342931db0edc"
        },
        "downloads": -1,
        "filename": "wagtail_pdf_view-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb90b04b9f0a19abb8606297768c2915",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22000,
        "upload_time": "2021-08-02T10:31:14",
        "upload_time_iso_8601": "2021-08-02T10:31:14.709245Z",
        "url": "https://files.pythonhosted.org/packages/a0/c5/48f8d5c823a725e48af4adbb6e88924cac25b34955ea5c8925e04f867020/wagtail_pdf_view-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "797975d3694be09c9af83c5965ca35337a60700a9ec2db97f917cc1b440cca2f",
          "md5": "4bb43ea8656775ba1c6339c918bd9a60",
          "sha256": "f9ca56ce8582397ad444b8cd4997fa60f9cc4246307bdb68691b063b299ad678"
        },
        "downloads": -1,
        "filename": "wagtail-pdf-view-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4bb43ea8656775ba1c6339c918bd9a60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23342,
        "upload_time": "2021-08-02T10:31:16",
        "upload_time_iso_8601": "2021-08-02T10:31:16.550781Z",
        "url": "https://files.pythonhosted.org/packages/79/79/75d3694be09c9af83c5965ca35337a60700a9ec2db97f917cc1b440cca2f/wagtail-pdf-view-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee029a12eca6bd76303fb7abca5507b4ffbc982256c964bc6ef70050fc9488f4",
          "md5": "045bb05eaaece4c50dd8975f23308c8f",
          "sha256": "0644beb7c4e6a55a73bc8ca2e3177b12c399b810e565e02decdb85319a102eab"
        },
        "downloads": -1,
        "filename": "wagtail_pdf_view-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "045bb05eaaece4c50dd8975f23308c8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22196,
        "upload_time": "2022-01-27T12:33:27",
        "upload_time_iso_8601": "2022-01-27T12:33:27.120796Z",
        "url": "https://files.pythonhosted.org/packages/ee/02/9a12eca6bd76303fb7abca5507b4ffbc982256c964bc6ef70050fc9488f4/wagtail_pdf_view-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ae9398b269f8b9d4a894e2c3440d51d1b6acc3b4dfe924451b9970251ba0b44",
          "md5": "719123fe4e6cbe1a12dcadedfa097df4",
          "sha256": "34c64b73172eb1a50954adcdc47a02fb12ae53caa36837746719aaff96fed30e"
        },
        "downloads": -1,
        "filename": "wagtail-pdf-view-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "719123fe4e6cbe1a12dcadedfa097df4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23624,
        "upload_time": "2022-01-27T12:33:29",
        "upload_time_iso_8601": "2022-01-27T12:33:29.315720Z",
        "url": "https://files.pythonhosted.org/packages/3a/e9/398b269f8b9d4a894e2c3440d51d1b6acc3b4dfe924451b9970251ba0b44/wagtail-pdf-view-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee029a12eca6bd76303fb7abca5507b4ffbc982256c964bc6ef70050fc9488f4",
        "md5": "045bb05eaaece4c50dd8975f23308c8f",
        "sha256": "0644beb7c4e6a55a73bc8ca2e3177b12c399b810e565e02decdb85319a102eab"
      },
      "downloads": -1,
      "filename": "wagtail_pdf_view-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "045bb05eaaece4c50dd8975f23308c8f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 22196,
      "upload_time": "2022-01-27T12:33:27",
      "upload_time_iso_8601": "2022-01-27T12:33:27.120796Z",
      "url": "https://files.pythonhosted.org/packages/ee/02/9a12eca6bd76303fb7abca5507b4ffbc982256c964bc6ef70050fc9488f4/wagtail_pdf_view-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ae9398b269f8b9d4a894e2c3440d51d1b6acc3b4dfe924451b9970251ba0b44",
        "md5": "719123fe4e6cbe1a12dcadedfa097df4",
        "sha256": "34c64b73172eb1a50954adcdc47a02fb12ae53caa36837746719aaff96fed30e"
      },
      "downloads": -1,
      "filename": "wagtail-pdf-view-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "719123fe4e6cbe1a12dcadedfa097df4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23624,
      "upload_time": "2022-01-27T12:33:29",
      "upload_time_iso_8601": "2022-01-27T12:33:29.315720Z",
      "url": "https://files.pythonhosted.org/packages/3a/e9/398b269f8b9d4a894e2c3440d51d1b6acc3b4dfe924451b9970251ba0b44/wagtail-pdf-view-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}