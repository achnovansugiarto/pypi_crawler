{
  "info": {
    "author": "Syrtis Major",
    "author_email": "styr.py@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# cyper\n\n**Cy**thon **per**formed inline: compile and run your Cython snippets on the fly.\n\nIt is aiming to provide a flexible alternative to the IPython Cython magic command outside the IPython/Jupyter environment.\n\n## Features\n\n- Simple, get rid of the tedious setup files or makefile.\n- Smart, auto-detect and set compiler flags for Numpy and OpenMP.\n- Highly customizable, allow one to set Cython directives, environment variables and compiler options.\n\n## Usage\n\n### Basic usage\n\n- Basic usage\n  ```python\n  import cyper\n  code = r'''\n  def func(x):\n      return 2.0 * x\n  '''\n  pyx = cyper.inline(code)\n  pyx.func(1)\n  # 2.0\n  ```\n  Raw string is recommended to avoid breaking escape character.\n\n- It is convenient (though usually not encouraged) to export the variables from compiled module to the current namespace\n  ```python\n  cyper.inline(code, globals())\n  func(1)\n  ```\n\n- Example of using Numpy array and external gsl library, assuming gsl installed at `/opt/gsl/`\n  ```python\n  code = r'''\n  import numpy as np\n\n  cdef extern from \"gsl/gsl_math.h\":\n      double gsl_pow_int (double x, int n)\n\n  def pow(double x, int n):\n      y = gsl_pow_int(x, n)\n      return y\n\n  def pow_array(double[:] x, int n):\n      cdef:\n          int i, m=len(x)\n          double[:] y=np.empty(m, dtype='f8')\n      for i in range(m):\n          y[i] = gsl_pow_int(x[i], n)\n      return y.base\n  '''\n  pyx = cyper.inline(\n      code,\n      include_dirs=['/opt/gsl/include/'],\n      library_dirs=['/opt/gsl/lib'],\n      libraries=['gsl', 'gslcblas']\n  )\n\n  pyx.pow(2, 6)\n  # 64.0\n\n  import numpy as np\n  pyx.pow_array(np.arange(5, dtype='f8'), 2)\n  # array([ 0.,  1.,  4.,  9., 16.])\n  ```\n\n- Get better performance (at your own risk) with arrays\n  ```python\n  cyper.inline(code, fast_indexing=True)\n  # or equivalently\n  cyper.inline(code, directives=dict(boundscheck=False, wraparound=False))\n  ```\n\n### Advanced usage\n\n- Set the compiler options, e.g., compiling OpenMP codes with gcc\n  ```python\n  cyper.inline(openmpcode,\n               extra_compile_args=['-fopenmp'],\n               extra_link_args=['-fopenmp'],\n               )\n  # use '-openmp' or '-qopenmp' (>=15.0) for Intel\n  # use '/openmp' for Microsoft Visual C++ Compiler\n  # use '-fopenmp=libomp' for Clang\n  ```\n  Or equivalently write this for short\n  ```python\n  cyper.inline(openmpcode, openmp='-fopenmp')\n  ```\n\n  The cython `directives` and distutils `extension_args` can also be set in a directive comment at the top of the code snippet, e.g.,\n  ```python\n  code = r'''\n  # cython: boundscheck=False, wraparound=False, cdivision=True\n  # distutils: extra_compile_args = -fopenmp\n  # distutils: extra_link_args = -fopenmp\n  ...<code>...\n  '''\n  cyper.inline(code)\n  ```\n\n- Set environment variables, e.g., using icc to compile\n  ```python\n  cyper.inline(code, environ={'CC':'icc', 'LDSHARED':'icc -shared'})\n  ```\n  See https://software.intel.com/en-us/articles/thread-parallelism-in-cython\n\n- Set directory for searching cimport (.pxd file)\n  ```python\n  cyper.inline(code, cimport_dirs=[custom_path]})\n  # or equivalently\n  cyper.inline(code, cythonize_args={'include_path': [custom_path]})\n  ```\n  Try setting `cimport_dirs=sys.path` if Cython can not find the installed cimport modules.\n\n## Installation\n\n- Dependencies: Cython\n\n- Installation:\n  ```bash\n  pip install cyper\n  ```\n\n## License\n\nCyper is licensed under the [MIT License](https://github.com/syrte/cyper/blob/master/LICENSE)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/syrte/cyper/",
    "keywords": "cython",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cyper",
    "package_url": "https://pypi.org/project/cyper/",
    "platform": "",
    "project_url": "https://pypi.org/project/cyper/",
    "project_urls": {
      "Homepage": "https://github.com/syrte/cyper/"
    },
    "release_url": "https://pypi.org/project/cyper/1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Cython performed inline: compile and run your Cython snippets on the fly.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7094466,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1ee07fde704603bc896d69057d6f1ba201b470095ae8ad56a41cb831c237094",
          "md5": "9368b2da14d4fd55ffb92e06c612e4ff",
          "sha256": "a8af434d36e2844e4af5530ddc0ed5078dff15a73d1119de695b2603c69531b5"
        },
        "downloads": -1,
        "filename": "cyper-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9368b2da14d4fd55ffb92e06c612e4ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9063,
        "upload_time": "2020-04-24T16:55:41",
        "upload_time_iso_8601": "2020-04-24T16:55:41.905766Z",
        "url": "https://files.pythonhosted.org/packages/e1/ee/07fde704603bc896d69057d6f1ba201b470095ae8ad56a41cb831c237094/cyper-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8289794300e3f911cdb8a7a78e8e5281edb0c80fa40825099816a32409701127",
          "md5": "4bb8fadaa236486d98d653e349b34c56",
          "sha256": "404ff23055a0a4dcec85495274515e9382ed090fb01f42aa71901bd499b434ea"
        },
        "downloads": -1,
        "filename": "cyper-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4bb8fadaa236486d98d653e349b34c56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7716,
        "upload_time": "2020-04-24T16:55:44",
        "upload_time_iso_8601": "2020-04-24T16:55:44.452779Z",
        "url": "https://files.pythonhosted.org/packages/82/89/794300e3f911cdb8a7a78e8e5281edb0c80fa40825099816a32409701127/cyper-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e1ee07fde704603bc896d69057d6f1ba201b470095ae8ad56a41cb831c237094",
        "md5": "9368b2da14d4fd55ffb92e06c612e4ff",
        "sha256": "a8af434d36e2844e4af5530ddc0ed5078dff15a73d1119de695b2603c69531b5"
      },
      "downloads": -1,
      "filename": "cyper-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9368b2da14d4fd55ffb92e06c612e4ff",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9063,
      "upload_time": "2020-04-24T16:55:41",
      "upload_time_iso_8601": "2020-04-24T16:55:41.905766Z",
      "url": "https://files.pythonhosted.org/packages/e1/ee/07fde704603bc896d69057d6f1ba201b470095ae8ad56a41cb831c237094/cyper-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8289794300e3f911cdb8a7a78e8e5281edb0c80fa40825099816a32409701127",
        "md5": "4bb8fadaa236486d98d653e349b34c56",
        "sha256": "404ff23055a0a4dcec85495274515e9382ed090fb01f42aa71901bd499b434ea"
      },
      "downloads": -1,
      "filename": "cyper-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4bb8fadaa236486d98d653e349b34c56",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7716,
      "upload_time": "2020-04-24T16:55:44",
      "upload_time_iso_8601": "2020-04-24T16:55:44.452779Z",
      "url": "https://files.pythonhosted.org/packages/82/89/794300e3f911cdb8a7a78e8e5281edb0c80fa40825099816a32409701127/cyper-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}