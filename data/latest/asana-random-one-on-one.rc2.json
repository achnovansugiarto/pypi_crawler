{
  "info": {
    "author": "Asana Inc",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Asana Random one on one\nA coffee walk / sit down with someone helps with shaking things up and helps co-workers getting to know each other.\nYou can create an Asana project for your team / office / department or any internal grouping of your choice and start having random one on ones within that group.\n\n## Quick start\nThis tutorial shows how to run random one on one for a single project. If you want the script to run for multiple projects see [Advanced setup: Run for multiple projects](#advanced-setup:-run-for-multiple-projects)\n\n### Installation\n`pip3 install asana-random-one-on-one`\n\n### Create an Asana project for the random one on ones\nYou will need to create an Asana project\n\nThe project will be used to schedule and store upcoming random one on one meetings for participating members.\n\nMake sure that you have created an Asana project with 2 sections named **Members** and **Upcoming**\n\nFor each member wishing to participate, add a task to the **Member** section and assign to a participating member.\n\nCopy the project gid from your browsers url `https://app.asana.com/0/<project_gid>/<task_gid>` for the next steps.\n\n### Create a personal access token for your Asana\nCreate a [Personal Access Token](https://developers.asana.com/docs/personal-access-token) in Asana. At Asana, we created a [Guest Account](https://asana.com/guide/help/organizations/guests) to run the random one on one script, so no engineer's personal access token is used, and it's clear that there's a specific \"Random one on one bot\" user who is making the task updates.\n\nCopy this Personal Access Token for the next steps.\n\n### Find your workspace gid\nYou can find your workspace gids via a logged-in browser by going to https://app.asana.com/api/1.0/users/me/workspaces, or you can hit that endpoint using your PAT.\n\nCopy the gid for the workspace your project is in for the next steps.\n\n### Run the script\nWe recommend running the script once a week.\n\nYou should now have your [project_gid](#create-an-asana-project-for-the-random-one-on-ones), [personal_access_token](#create-a-personal-access-token-for-your-asana) and [workspace_gid](#find-your-workspace-gid). **NOTE**: all gids are in the form of strings, not numbers\n``` python\nimport asana_random_one_on_one\nasana_random_one_on_one.main(personal_access_token, workspace_gid, project_gid=<your_project_gid>)\n```\nEnjoy your random one on one\n\n### Optional custom fields\n#### Frequency\nThe script will schedule one on one for each member every week by default.\nBy adding a custom field named \"Frequency\" with the following options:\n- Every week\n- Every 2 weeks\n- Every 3 weeks\n- Every 4 weeks\n- Never\n\nthe script can skip some members based on their frequency preference.\n\n#### Team preference\nMember can select what team they are on and if they want to be matched only with any member, other members on the same team or only members on other teams.\n\nHave a custom fields named \"**Team**\" and \"**Match Preferences**\". Team should be a text field that can have any arbitrary string while \"Match Preferences\" should have:\n- No preference (default)\n- Only match with same team\n- Only match with other teams\n\nThe script will match people based on their preference if possible.\n\n## Advanced setup: Run for multiple projects\n### Setup\n**We recommend saving a project as a template, so that other groups can create their own Random one on one project easily.**\n\nAll random one on one projects should have:\n- 2 sections named **Members** and **Upcoming**\n- A task assigned to the same user. The task name should be the same for all projects as the script finds all tasks with a given name assigned to this user\n\nThe script will discover all the random one on one projects by finding tasks with the given name, assigned to this user.\nWe recommend that the personal access token be created for the same user as will be assigned to the discovery tasks.\n\nFor each member wishing to participate, add a task to the **Member** section and assign to a participating member.\n\n### Run the script\nWe recommend running the script once a week\n\nTo find the user_gid of the user, log in as the user and go to https://app.asana.com/api/1.0/users/me\n``` python\nimport asana_random_one_on_one\nasana_random_one_on_one.main(personal_access_token, workspace_gid, user_gid=<user_gid>, task_name=<task_name>)\n```\nEnjoy your random one on one\n\n## Run on command line\n`git clone https://github.com/Asana/random-one-on-one.git`\n\nThen go through [Installation requirements](#installation-requirements)\n\n`python3 -m asana_random_one_on_one --pat=<personal_access_token> --workspace-gid=<workspace_gid> --project-gid=<project_gid>`\n\nor for multiple projects\n\n`python3 -m asana_random_one_on_one --pat=<personal_access_token> --workspace-gid=<workspace_gid> --user-gid=<user_gid> --task-name=<task_name>`\n\n\nFor further options run `python3 -m asana_random_one_on_one --help`\n```\nusage: __main__.py [-h] --pat PAT --workspace-gid WORKSPACE_GID\n                   [--project-gid PROJECT_GID] [--user-gid USER_GID]\n                   [--task-name TASK_NAME]\n                   [--error-project-gid ERROR_PROJECT_GID] [--debug]\n                   [--use-name-as-id]\n\nRandom one on one script. Will generate random one on ones in a given project\nor all projects created from template\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --pat PAT             Personal access token needed for creating the random\n                        one on ones tasks\n  --workspace-gid WORKSPACE_GID\n                        Run the script for a given workspace\n  --project-gid PROJECT_GID\n                        The id of a particular random 1:1 project. This will\n                        only run the script on that project\n  --user-gid USER_GID   User gid used to find incompleted tasks assigned to\n                        this user. The script runs in all projects with tasks\n                        named <task-name> and are assigned to the this user\n  --task-name TASK_NAME\n                        See user-gid help\n  --error-project-gid ERROR_PROJECT_GID\n                        Accumulate errors encountered while running the script\n                        and create a task in a given project with a error\n                        report\n  --debug               Runs in debug mode\n  --use-name-as-id      This will use the names of the Member tasks for id\n                        instead of the id of the assignee, useful when\n                        developing as will allow multiple tasks to have the\n                        same assignee\n```\n\n\n\n\n## Contributing to the project\n### Installation requirements\n\nWe recommend setting up a virtual environment to install and run your python environment. By doing so, you can eliminate\nthe risk that Asana Random one on one python dependencies and settings will be mixed up with any such dependencies and settings that you\nmay be using in other projects.\n\n* run `python3 -m venv venv` to create a virtual environment\n* run `. venv/bin/activate` to activate and enter your virtual environment\n* run `pip3 install -r requirements.txt -r requirements-dev.txt`\n\nSee [these instructions](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/) for further help in\nsetting up a virtual environment for Python",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asana-random-one-on-one",
    "package_url": "https://pypi.org/project/asana-random-one-on-one/",
    "platform": "",
    "project_url": "https://pypi.org/project/asana-random-one-on-one/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/asana-random-one-on-one/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12747288,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f00bba840a5cba72f36cfbc9cde1604fca4b316331880757c1349595851ace7",
          "md5": "6eb730699b88552cb0c8068025a26443",
          "sha256": "366dac258e07961e82ff7082eb20904ee7bdd3a61697b91cdb43d89d5d7ffb27"
        },
        "downloads": -1,
        "filename": "asana_random_one_on_one-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6eb730699b88552cb0c8068025a26443",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13089,
        "upload_time": "2021-05-14T17:17:10",
        "upload_time_iso_8601": "2021-05-14T17:17:10.491618Z",
        "url": "https://files.pythonhosted.org/packages/7f/00/bba840a5cba72f36cfbc9cde1604fca4b316331880757c1349595851ace7/asana_random_one_on_one-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f02e15207929e36e85bc3fae1114d5de5d7a3b51f567a10f86935122fcecd68a",
          "md5": "c55860000a75ffd23ba4bc57d2f1d207",
          "sha256": "a3d0eec53a2a75b0f7db4c3f99dd9760ab6219012ae9e22ad3fc04a7bff24a2b"
        },
        "downloads": -1,
        "filename": "asana_random_one_on_one-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c55860000a75ffd23ba4bc57d2f1d207",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13504,
        "upload_time": "2022-01-31T17:36:58",
        "upload_time_iso_8601": "2022-01-31T17:36:58.330944Z",
        "url": "https://files.pythonhosted.org/packages/f0/2e/15207929e36e85bc3fae1114d5de5d7a3b51f567a10f86935122fcecd68a/asana_random_one_on_one-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f02e15207929e36e85bc3fae1114d5de5d7a3b51f567a10f86935122fcecd68a",
        "md5": "c55860000a75ffd23ba4bc57d2f1d207",
        "sha256": "a3d0eec53a2a75b0f7db4c3f99dd9760ab6219012ae9e22ad3fc04a7bff24a2b"
      },
      "downloads": -1,
      "filename": "asana_random_one_on_one-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c55860000a75ffd23ba4bc57d2f1d207",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13504,
      "upload_time": "2022-01-31T17:36:58",
      "upload_time_iso_8601": "2022-01-31T17:36:58.330944Z",
      "url": "https://files.pythonhosted.org/packages/f0/2e/15207929e36e85bc3fae1114d5de5d7a3b51f567a10f86935122fcecd68a/asana_random_one_on_one-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}