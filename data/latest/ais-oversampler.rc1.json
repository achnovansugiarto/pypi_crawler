{
  "info": {
    "author": "nikhil815",
    "author_email": "pyndiah.nikhil@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AIS-Oversampler\n\nThis is an Oversampler for handling Class Imbalance in Binary Classification tasks. It uses the AISOv algorithm that is based on Artificial Immune Systems.\n\nThe oversampler works for binary classification and can be set to use different mathematical modes of operation that alter how the final resampling data is generated. The AISOv algorithm has been tested on a variety of datasets and performs comparably to other common and proven oversampling techniques.\n\n## Installation\n\nThe AIS Oversampler requires:\n* Python (>= 3)\n* Scikit Learn (>= 1.2)\n* Pandas (>= 1.4)\n## How to use it\nThis is a simple code example:\n```python\nfrom AIS_Oversampler import ArtificialImmuneSystem \n\n#create an instance of the oversampler\noversample_AIS = ArtificialImmuneSystem.ArtificialImmuneSystem()\n\n#import a dataset\ndf = pd.read_csv(\"../datasets/dataset2.csv\",index_col=0)\n\n#separate the features and labels\nfeatures = df.drop([\"5\"], axis=1)\nlabel = df.drop(df.columns[0:-1],axis=1)\n\n#Initialize a classfier\nrandomForest = RandomForestClassifier()\n\n#call the main function AIS_Resample with the required parameters\ndf_after_oversampling = oversample_AIS.AIS_Resample(features, label, model = randomForest)\n\n#call the main function AIS_Resample with the required parameters and optional parameters\ndf_after_oversampling = oversample_AIS.AIS_Resample(preparedDF, labels, max_rounds = 50, stopping_cond = 20, model = randomForest ,K_folds = 5,scorer = 'f1',min_change = 0.005, use_lof = False, mutation_rate = 1.0)\n```\n### Main Function Parameters\n\nParameter    | Required | Data Type | Purpose \n------------- | ------------- | ------------- | ------------- \nFeatures | Yes  | A Pandas DataFrame  | Contains normalized, scaled data (with columns being either binary, or floats) with the labels removed.\nLabels | Yes  | A Pandas DataFrame  |  Containsthe label data prepared in the same way as the features.\nModel | Yes | A scikit learn classifier  | Denotes the model to be used evaluate each population during resampling. Random Forest and Gradient Boosting produced \nMax_rounds | No | Integer (e.g: 50, 100) | The maximum number of rounds/loops that the oversampler will run for\nStopping_cond | No| Integer (e.g: 20, 50) | The amount of rounds without change before stopping the algorithm\nK_folds | No| Integer (e.g: 3, 5)| The number of segments used during k-fold cross validation\nScorer | No| A scikit learn scoring function in string format (e.g ‘f1’) | the scoring metric when evaluating a given population\nMin_Change | No| Float (e.g: 0.005, 0.001) | The minimum amount of score change (as a float percentage, 0.001 = 0.1%) required to say that a given population has become a distinct population\nUse_Lof | No | Boolean)| If set to true, theoversampler will use local outlier factor (an outlier detection method) when evaluating antibody populations. This yields better results but increases the runtime\nMutation_rate | No | Float (e.g: 1.0)| A value that modulates the amount by which antibodies can mutate in a given round\n\n**Note:** Optional Parameters have a default value but should be given a value and fine tuned for optimal results\n\n## How it works\n\nThe AISOv algorithm takes in an Imbalanced dataset and preprocesses it to determine how many antibodies to create and the necessary parameters for the other parts of the function. It then creates an Initial antibody population before entering the Main Program Loop. In the loop, the antibody population is mutated, a fitness function and an evaluation function are applied to find the current best antibody population. Once the termination condition for the loop is met, the current best antibody population is returned.\n<img width=\"447\" alt=\"Screen Shot 2023-03-18 at 10 46 58 PM\" src=\"https://user-images.githubusercontent.com/46852000/226150868-fcce1093-ec05-443d-87b4-f1d831f64a48.png\">\n\nYou can read more about it here: https://docs.google.com/document/d/1JGAjYWz2Wp95ArWZQnXeLTWyc3ArYzahvMBh8H3XbPA/edit?usp=sharing\n\n## About\n\nThis algorithm was originally developped by myself, Nikhil Pyndiah alongside my teamates Adam Jansen and Jacob King for our Honours project. Our aim with the project was to create an easy to use oversampling algorithm which could be used as a drop in replacement for other similar oversamplers. \nThe original code alongside extensive testing we did can be found in the  [report](https://docs.google.com/document/d/1JGAjYWz2Wp95ArWZQnXeLTWyc3ArYzahvMBh8H3XbPA/edit?usp=sharing) I linked to above and the original code can be found here: https://github.com/nikhil815/Artificial-Immune-System-For-Class-Imbalance\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nikhil815/Artificial-Immune-System-For-Class-Imbalance",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AIS-Oversampler",
    "package_url": "https://pypi.org/project/AIS-Oversampler/",
    "platform": null,
    "project_url": "https://pypi.org/project/AIS-Oversampler/",
    "project_urls": {
      "Bug Tracker": "https://github.com/nikhil815/Artificial-Immune-System-For-Class-Imbalance/issues",
      "Homepage": "https://github.com/nikhil815/Artificial-Immune-System-For-Class-Imbalance"
    },
    "release_url": "https://pypi.org/project/AIS-Oversampler/1.0/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "ML Oversampler for binary classification tasks based on Artificial Immune Systems",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17354539,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c902077dba09864e2ff022c0906bbf83eebde403f4f6a96b0b7e7a96bc758db",
          "md5": "dbce5d7e08ffebc687411d145b899116",
          "sha256": "2b443b279c582e6b7dadee5352460b2e1fa433f2b4fc84df32f633b4824afb42"
        },
        "downloads": -1,
        "filename": "AIS_Oversampler-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dbce5d7e08ffebc687411d145b899116",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 9176,
        "upload_time": "2023-03-19T15:54:38",
        "upload_time_iso_8601": "2023-03-19T15:54:38.487849Z",
        "url": "https://files.pythonhosted.org/packages/6c/90/2077dba09864e2ff022c0906bbf83eebde403f4f6a96b0b7e7a96bc758db/AIS_Oversampler-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9b154d8f6da2fbd5d49c0510a73fb4b7f623e3b8268a74393044ee9c4e4e2d3",
          "md5": "01c41bf408be2856e7f706efac166a60",
          "sha256": "7b0f2c93296f3cb89def42a3b8c4bff23c1d664e041ea446f042f7cc3c113908"
        },
        "downloads": -1,
        "filename": "AIS_Oversampler-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01c41bf408be2856e7f706efac166a60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 10569,
        "upload_time": "2023-03-19T15:54:40",
        "upload_time_iso_8601": "2023-03-19T15:54:40.053545Z",
        "url": "https://files.pythonhosted.org/packages/d9/b1/54d8f6da2fbd5d49c0510a73fb4b7f623e3b8268a74393044ee9c4e4e2d3/AIS_Oversampler-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c902077dba09864e2ff022c0906bbf83eebde403f4f6a96b0b7e7a96bc758db",
        "md5": "dbce5d7e08ffebc687411d145b899116",
        "sha256": "2b443b279c582e6b7dadee5352460b2e1fa433f2b4fc84df32f633b4824afb42"
      },
      "downloads": -1,
      "filename": "AIS_Oversampler-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dbce5d7e08ffebc687411d145b899116",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 9176,
      "upload_time": "2023-03-19T15:54:38",
      "upload_time_iso_8601": "2023-03-19T15:54:38.487849Z",
      "url": "https://files.pythonhosted.org/packages/6c/90/2077dba09864e2ff022c0906bbf83eebde403f4f6a96b0b7e7a96bc758db/AIS_Oversampler-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9b154d8f6da2fbd5d49c0510a73fb4b7f623e3b8268a74393044ee9c4e4e2d3",
        "md5": "01c41bf408be2856e7f706efac166a60",
        "sha256": "7b0f2c93296f3cb89def42a3b8c4bff23c1d664e041ea446f042f7cc3c113908"
      },
      "downloads": -1,
      "filename": "AIS_Oversampler-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "01c41bf408be2856e7f706efac166a60",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 10569,
      "upload_time": "2023-03-19T15:54:40",
      "upload_time_iso_8601": "2023-03-19T15:54:40.053545Z",
      "url": "https://files.pythonhosted.org/packages/d9/b1/54d8f6da2fbd5d49c0510a73fb4b7f623e3b8268a74393044ee9c4e4e2d3/AIS_Oversampler-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}