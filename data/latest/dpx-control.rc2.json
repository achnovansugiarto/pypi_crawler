{
  "info": {
    "author": "Sebastian Schmidt",
    "author_email": "schm.seb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Dosepix Control Software for python3\n\nModule name: dpx\\_control  \nAuthor: Sebastian Schmidt  \nE-Mail: schm.seb@gmail.com  \n\n## Installation\n\nThere are multiple ways to install the module. The easiest one is to use a virtual environment. More experiened users might consider to install the module directly. Please refer to the instructions below and ensure that python 3 is used.  \n\n### Virtual Environment Installation\n\nFirst,  a directory for the virtual environment has to be created. To provide an example, it is called `dpx_venv` in the following.  Afterwards, the environment is created via\n\n```bash\npython3 -m venv dpx_venv\n```\n\nActivate the virtual environment by executing\n\n```bash\nsource dpx_virtenv/bin/activate\n```\n\nIf everything worked correctly, the name of your virtual environment should appear in parentheses in front of your command prompt. Finally, proceed like described in the \"Direct Installation\"-section below.\n\n### Direct Installation\n\n`sudo` might be needed in order to provide installation privileges. This won't be necessary when installing in an virtual environment.  \n\n#### via pip\n\nIf no administrator access is possible, add the parameter `--user` right behind `install`.\n\n```bash\npython3 -m pip install /path/to/package\n```\n\nIf you want to modify the code later on, use  \n\n```bash\npython3 -m pip install -e /path/to/package\n```\n\ninstead.\n\n##### via `setup.py`\n\nExecute in the module's main directory:\n\n```bash\npython3 setup.py install\n```\n\nIf you want to modify the code later on, use  \n\n```bash\npython3 setup.py develop\n```\n\ninstead.\n\n## Examples\n\n### Dosepix initialization\n\nFirst, import the module.\n\n```python\nimport dpx_control\n```\n\nThe connection to the Dosepix test board is established via:\n\n```python\ndpx = dpx_control.Dosepix(portName, baudRate=2e6, configFN=None, thl_calib_files=None, params_file=None, bin_edges_file=None)\n```\n\nThis creates an object `dpx` of the class `Dosepix`.  \nImportant parameters are:  \n\n| Parameter | Function |\n| :-------- | :------- |\n| `portName`           | Name of the used com-port of the PC. For Linux, it usually is `/dev/ttyUSB0`. For Windows, the port name has the form of 'COMX'. |\n| `baudRate`           | Used baud rate of the connection between DPX test board and PC. This is set to 2e6 in the board's current firmware and shouldn't be modified here. |\n| `configFn`           | Configuration file containing important parameters of the used Dosepix detectors. |\n| `thl_calib_files`    | The DAC value and corresponding voltage of the threshold (THL) show a dependency of a sloped sawtooth. By measuring this dependency, a corrected threshold value can be used. Only important for certain tasks like threshold equalization or threshold scan measurements. |\n| `params_file`        | File containing the calibration curve parameters (a, b, c, t) for each detector and pixel. Only needed for dose measurements as it is used to specify the bin edges in DosiMode. |\n| `bin_edges_file`     | File containing the bin edges used in DosiMode. If `params_file` is set, the file should contain the bin edges in energy. Else, it should contain the bin edges in ToT. |\n| `eye_lens`           | Set to `True` if hardware for eye lens dosimetry is used, as it only utilizes a single slot. Standard value is `False` |\n\nA measurement can be started by using the `dpx` object. For example a ToT-measurement:\n\n```python\ndpx.measureToT(slot=[1, 2, 3], intPlot=True, cnt=10000, storeEmpty=True, logTemp=True)\n```\n\nSee documentation for more info.\n\n### Equalization\n\nSee the [equalization-script](examples/equalization.py).\n\nFirst, important parameters are defined:\n\n```python\nPORT = '/dev/ttyUSB0'\nCONFIG_FN = 'DPXConfig.conf'\nCONFIG_DIR = 'config/'\nCHIP_NUMS = [22, 6, 109]\nCALIB_THL = False\n```\n\n`CONFIG_FN` specifies the file in which the configuration of the current setup is stored. This file will be created in the directory specified in `CONFIG_DIR`.  If the configuration directory does not exist, the program will create the folder by itself.  \n`CHIP_NUMS` are the identification numbers of the used detectors, usually written on the backside of the COB.  \n\nThis equalization procedure includes THL measurementes which are optional. They are performed if the flag `CALIB_THL` is set to `True`. Afterwards, a THL-calibration file is created for each detector. This improves the equalization procedure but is not a necessity. At the current revision of the DPX test board, the measurement of the relation between THL DAC and THL voltage is only possible at Slot 1. Therefore, only one detector can be measured at a time.  \n**IMPORTANT:** the board has to be disconnected from power when switching detectors!  \n\nAfterwards, the command  \n\n```python\ndpx.thresholdEqualizationConfig(CONFIG_DIR + '/' + CONFIG_FN, I_pixeldac=None, reps=1, intPlot=False, resPlot=True)\n```\n\nperforms the threshold equalization and stores the results in the specified configuration file. If `intPlot` is set to `True`, equalization results are shown for each detector once the equalization is done.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dosepix/dpx_control",
    "keywords": "",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dpx-control",
    "package_url": "https://pypi.org/project/dpx-control/",
    "platform": "",
    "project_url": "https://pypi.org/project/dpx-control/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dosepix/dpx_control/issues",
      "Homepage": "https://github.com/dosepix/dpx_control"
    },
    "release_url": "https://pypi.org/project/dpx-control/0.3.3/",
    "requires_dist": [
      "configparser",
      "matplotlib",
      "numpy",
      "pyserial",
      "scipy",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "DPX control software",
    "version": "0.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13006918,
  "releases": {
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18106774dc33be9f597ddf06fc55f8948ea02fcae06b7a78a156c77a626efebb",
          "md5": "5ec93acf18dd045186c63e1c7c6f6f79",
          "sha256": "d3606f785bbaa9afeeb5f6c178c8b506a1264f73b4c9a9a000be8c304e496659"
        },
        "downloads": -1,
        "filename": "dpx_control-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ec93acf18dd045186c63e1c7c6f6f79",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 60142,
        "upload_time": "2021-12-09T09:31:28",
        "upload_time_iso_8601": "2021-12-09T09:31:28.619956Z",
        "url": "https://files.pythonhosted.org/packages/18/10/6774dc33be9f597ddf06fc55f8948ea02fcae06b7a78a156c77a626efebb/dpx_control-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "138a33cc951df5354f11118d29bb37d2cfc6645a299aabdd703d3bcae3cf7e92",
          "md5": "4567e2151cc928d757ee6389f7dff32b",
          "sha256": "79c3a35f1ca56c3cf961f8b5e05723d6914a88552c39cf7db3e4203ed84b5418"
        },
        "downloads": -1,
        "filename": "dpx_control-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4567e2151cc928d757ee6389f7dff32b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 64338,
        "upload_time": "2021-12-09T09:31:30",
        "upload_time_iso_8601": "2021-12-09T09:31:30.324756Z",
        "url": "https://files.pythonhosted.org/packages/13/8a/33cc951df5354f11118d29bb37d2cfc6645a299aabdd703d3bcae3cf7e92/dpx_control-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2e3e56900ae4f11f46858eaa7b7ded330ecfb10bf66695cb938fc5561d508fa",
          "md5": "e5da88450bc314cf13d3d04e2651156c",
          "sha256": "fffd92783219c98ee7afb3d19bc66517e81835927c1a5bd5de45a88ad358c29d"
        },
        "downloads": -1,
        "filename": "dpx_control-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5da88450bc314cf13d3d04e2651156c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 60568,
        "upload_time": "2022-02-25T07:33:24",
        "upload_time_iso_8601": "2022-02-25T07:33:24.277194Z",
        "url": "https://files.pythonhosted.org/packages/c2/e3/e56900ae4f11f46858eaa7b7ded330ecfb10bf66695cb938fc5561d508fa/dpx_control-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "745b2725f129752c2b179c3b2e2c2a4f6ffe252dababa86ea8638f4a12dc4f59",
          "md5": "e8f8506580d813cb5a0f585836d9611e",
          "sha256": "1b9a65838d6e501a200931a91e97f9eacd1b79d2f129909830fa06696942434e"
        },
        "downloads": -1,
        "filename": "dpx_control-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e8f8506580d813cb5a0f585836d9611e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 65086,
        "upload_time": "2022-02-25T07:33:25",
        "upload_time_iso_8601": "2022-02-25T07:33:25.811816Z",
        "url": "https://files.pythonhosted.org/packages/74/5b/2725f129752c2b179c3b2e2c2a4f6ffe252dababa86ea8638f4a12dc4f59/dpx_control-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2e3e56900ae4f11f46858eaa7b7ded330ecfb10bf66695cb938fc5561d508fa",
        "md5": "e5da88450bc314cf13d3d04e2651156c",
        "sha256": "fffd92783219c98ee7afb3d19bc66517e81835927c1a5bd5de45a88ad358c29d"
      },
      "downloads": -1,
      "filename": "dpx_control-0.3.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e5da88450bc314cf13d3d04e2651156c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 60568,
      "upload_time": "2022-02-25T07:33:24",
      "upload_time_iso_8601": "2022-02-25T07:33:24.277194Z",
      "url": "https://files.pythonhosted.org/packages/c2/e3/e56900ae4f11f46858eaa7b7ded330ecfb10bf66695cb938fc5561d508fa/dpx_control-0.3.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "745b2725f129752c2b179c3b2e2c2a4f6ffe252dababa86ea8638f4a12dc4f59",
        "md5": "e8f8506580d813cb5a0f585836d9611e",
        "sha256": "1b9a65838d6e501a200931a91e97f9eacd1b79d2f129909830fa06696942434e"
      },
      "downloads": -1,
      "filename": "dpx_control-0.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e8f8506580d813cb5a0f585836d9611e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 65086,
      "upload_time": "2022-02-25T07:33:25",
      "upload_time_iso_8601": "2022-02-25T07:33:25.811816Z",
      "url": "https://files.pythonhosted.org/packages/74/5b/2725f129752c2b179c3b2e2c2a4f6ffe252dababa86ea8638f4a12dc4f59/dpx_control-0.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}