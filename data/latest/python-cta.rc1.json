{
  "info": {
    "author": "William Dean",
    "author_email": "wd60622@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Chicago Transit Authority API\n\nThe CTA has three public endpoints for tracking CTA trains. This client supports\nthose endpoints.\n\nThe `CTAClient` has methods for each endpoints. Namely,\n- arrivals: Arrival information for a given station(s) or stop(s).\n- follow: Follow specific train by runnumber.\n- locations: Get all trains for a given route(s).\n\nMore endpoint specific documentation found [here](\nhttps://www.transitchicago.com/developers/ttdocs/)\n\nThis API requires a key which can be easily received [here](https://www.transitchicago.com/developers/traintrackerapply/).\nFollow the `.env.example` file for setting.\n\n## Installation\n\nThis package is available on `pip`. Install with:\n\n```bash\n$ pip install python-cta\n```\n\n## Getting Started\n\n```python\nfrom cta import CTAClient\ndamen_blue_line_mapid = 40590\n\n# Get arrival information for damen blue line station.\ncta_client = CTAClient()\narrival_response = cta_client.arrivals(mapid=damen_blue_line_mapid)\ndf_arrivals = arrival_response.to_frame()\nprint(df_arrivals)\n\n# Follow specific train\nrunnumber = df_arrivals[\"rn\"].tolist()[0]\nfollow_response = cta_client.follow(runnumber=runnumber)\ndf_follow = follow_response.to_frame()\nprint(df_follow)\n```\n\n```python\nfrom cta import Route\n\n# Get the location of all Blue Line trains.\nlocation_response = cta_client.locations(Route.BLUE)\ndf_locations = location_response.to_frame()\nprint(df_locations)\n\n# Or all trains on the track\nlocation_response = cta_client.locations(route=[route for route in Route])\ndf_locations = location_response.to_frame()\nprint(df_locations)\n```\n\nInformation about the stations can be found with the `Stations` class. Below is an\nexample to find the mapid for Damen blue line.\n\n```python\nfrom cta import Stations\n\nstations = Stations()\ndf_stations = stations.data\nprint(df_stations)\n\ndf_damen = stations.lookup(\"Damen\", route=Route.BLUE)\nprint(df_damen)\n```\n\nTry this example for yourself in `scripts/readme_example.py`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wd60622/cta",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-cta",
    "package_url": "https://pypi.org/project/python-cta/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-cta/",
    "project_urls": {
      "Homepage": "https://github.com/wd60622/cta"
    },
    "release_url": "https://pypi.org/project/python-cta/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python Client for Chicago Transit Data.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13824302,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e92609ddf49135f0ea2272814815f43aff19e62953cf3bca6b23dda2a3405ec4",
          "md5": "c1911f7d31461268c55dc1b7cdef0b47",
          "sha256": "0fe3f1af84b2e71dc7ab980ed00ca66dd49ccbd902378c6e6bf133bd76bee97d"
        },
        "downloads": -1,
        "filename": "python-cta-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c1911f7d31461268c55dc1b7cdef0b47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5377,
        "upload_time": "2022-05-15T22:12:25",
        "upload_time_iso_8601": "2022-05-15T22:12:25.936876Z",
        "url": "https://files.pythonhosted.org/packages/e9/26/09ddf49135f0ea2272814815f43aff19e62953cf3bca6b23dda2a3405ec4/python-cta-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e92609ddf49135f0ea2272814815f43aff19e62953cf3bca6b23dda2a3405ec4",
        "md5": "c1911f7d31461268c55dc1b7cdef0b47",
        "sha256": "0fe3f1af84b2e71dc7ab980ed00ca66dd49ccbd902378c6e6bf133bd76bee97d"
      },
      "downloads": -1,
      "filename": "python-cta-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c1911f7d31461268c55dc1b7cdef0b47",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5377,
      "upload_time": "2022-05-15T22:12:25",
      "upload_time_iso_8601": "2022-05-15T22:12:25.936876Z",
      "url": "https://files.pythonhosted.org/packages/e9/26/09ddf49135f0ea2272814815f43aff19e62953cf3bca6b23dda2a3405ec4/python-cta-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}