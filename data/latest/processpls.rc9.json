{
  "info": {
    "author": "Sin Yong Teng",
    "author_email": "tsyet12@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# ProcessPLS\r\nAn Implementation of ProcessPLS in Python\r\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7074754.svg)](https://doi.org/10.5281/zenodo.7074754)\r\n\r\n\r\n## Code Writter\r\nImplementation by Sin Yong Teng. Radboud University Nijmegen, the Netherlands.\r\n\r\n## Implementation\r\nIn this code implementation, the sklearn syntax is used. Furthermore, the ProcessPLS algorithm has been made to be represented in directed graphs data structure. This allows for more flexibility to be used with graph theory routines. \r\n\r\n# Functions\r\n\r\n## Install the library\r\n```bat\r\npip install processPLS\r\n```\r\n\r\n## Get the data\r\n```python\r\nfrom processPLS.model import *\r\nfrom processPLS.datasets import *\r\nX,Y,matrix=ValdeLoirData() #Get the data conviniently\r\n```\r\n\r\n## Alternatively, you can import the data yourself like this:\r\n```python\r\ndf=pd.read_csv(r'.\\ValdeLoirData.csv')\r\ndf=df.drop(columns=df.columns[0])\r\nsmell_at_rest=df.iloc[:,:5]\r\nview=df.iloc[:,5:8]\r\nsmell_after_shaking=df.iloc[:,8:18]\r\ntasting=df.iloc[:,18:27]\r\nglobal_quality=df.iloc[:,27]\r\n\r\nX={\r\n'Smell at Rest':smell_at_rest,\r\n\"View\":view,\r\n\"Smell after Shaking\":smell_after_shaking,\r\n\"Tasting\":tasting,\r\n}\r\n\r\nY={\"Global Quality\":global_quality}\r\n\r\nmatrix = pd.DataFrame(\r\n[\r\n[0,0,0,0,0], \r\n[1,0,0,0,0],\r\n[1,1,0,0,0],\r\n[1,1,1,0,0],\r\n[1,1,1,1,0],\r\n],\r\nindex=list(X.keys())+list(Y.keys()),\r\ncolumns=list(X.keys())+list(Y.keys())\r\n)\r\n\r\n```\r\n\r\n## Call and Fit the Process PLS model\r\n```python\r\nimport matplotlib.pyplot as plt\r\nmodel = ProcessPLS()\r\nmodel.fit(X,Y,matrix)\r\nmodel.plot\r\nplt.show()\r\n```\r\n\r\n## Main Function Arguments\r\n```python\r\nProcess_PLS(cv=RepeatedKFold(n_splits=5,n_repeats=2,random_state=999),scoring='neg_mean_squared_error',max_lv=30,overwrite_lv=False,inner_forced_lv=None,outer_forced_lv=None,name=None)\r\n\r\n'''\r\nThis function sets up the processPLS model.\r\n\r\ncv= cross validation method  (follows sklearn syntax)\r\n\r\nscoring= loss function/ scoring function (follows sklearn syntax)\r\n\r\nmax_lv= maximum numbers of latent variable (lv) for all SIMPLS models within ProcessPLS\r\n\r\noverwrite_LV= (True/False) A boolean to set whether inner_forced_lv and outer_forced_lv should be used instead of automatically selecting latent variables\r\n\r\ninner_forced_lv= (dict) a specific key value combination of number of LVs to forced into the inner model. Argument overwrite_LV must be set to True for this to be used. Example input:\r\n inner_forced_lv={\r\n  'Smell at Rest':None,\r\n  \"View\":3,\r\n  \"Smell after Shaking\":6,\r\n  \"Tasting\":8,\r\n  \"Global Quality\":13\r\n  }\r\n  \r\n  inner_forced_lv= (dict) a specific key value combination of number of LVs to forced into the outer model. Argument overwrite_LV must be set to True for this to be used. Example input:\r\n\r\n  outer_forced_lv={\r\n  'Smell at Rest':3,\r\n  \"View\":3,\r\n  \"Smell after Shaking\":2,\r\n  \"Tasting\":5,\r\n  \"Global Quality\":3\r\n  }\r\n  \r\nname: (string) Optional name of model.\r\n\r\n'''\r\n\r\nValdeLoirData(original=False)\r\n\r\n'''\r\nThis function gets the data for Valde Loir Dataset\r\n\r\noriginal==False:  The function returns X (dataframe in dict), Y (dataframe dict), and matrix (dataframe). matrix is the adjacency matrix for the graph connections.\r\n\r\noriginal==True:  The function returns the raw data (dataframe) with both X and Y combined within\r\n\r\n\r\n'''\r\n\r\n```\r\n\r\n## Inference/ Prediction for New Data\r\n\r\n```python\r\ny_pred= model.predict(Xnew)\r\n\r\n```\r\n\r\n# Colab Example [Here](https://colab.research.google.com/drive/1tEW7zRytpWzDoLw95N783bAAvEUhzKvX?usp=sharing)\r\n\r\n\r\n\r\n## Reproducibility\r\nThis implementation provides exactly the same output as the MATLAB version of ProcessPLS.\r\n\r\n![ProcessPLS](https://user-images.githubusercontent.com/19692103/167320976-cf252fd0-5b0a-4463-b546-c6078c70b00c.png)\r\n\r\n\r\n\r\n## Reference to Original Paper:\r\nvan Kollenburg, G., Bouman, R., Offermans, T., Gerretzen, J., Buydens, L., van Manen, H.J. and Jansen, J., 2021. Process PLS: Incorporating substantive knowledge into the predictive modelling of multiblock, multistep, multidimensional and multicollinear process data. Computers & Chemical Engineering, 154, p.107466.\r\n\r\nFor MATLAB Implementation, see this repository written by Tim Offermans.\r\nhttps://gitlab.science.ru.nl/toffermans/matlab-process-pls/-/tree/main/\r\n\r\n\r\n## How to cite this software\r\n\r\nS.Y. Teng. (2022). tsyet12/ProcessPLS:An Implementation of ProcessPLS in Python, Zenodo Release (zenodo). Zenodo. https://doi.org/10.5281/zenodo.7074754\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Path Modelling,Chemometrics,Process Analytical Technology,Machine Learning",
    "license": "BSD 2-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ProcessPLS",
    "package_url": "https://pypi.org/project/ProcessPLS/",
    "platform": null,
    "project_url": "https://pypi.org/project/ProcessPLS/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ProcessPLS/1.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Implementation of ProcessPLS in Python",
    "version": "1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16768192,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a849d0a8dc731685a66ec11488802ec6f1a3fa831111d692c8410655ceb4060",
          "md5": "d006168fa380ccc40fbfc2a9055a39fb",
          "sha256": "c509316eaaddc8a8eec11f1a1fff4d52102d08a4b4d453055fb3e3196cfaca1b"
        },
        "downloads": -1,
        "filename": "ProcessPLS-1.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "d006168fa380ccc40fbfc2a9055a39fb",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 16158,
        "upload_time": "2022-05-11T09:06:36",
        "upload_time_iso_8601": "2022-05-11T09:06:36.599236Z",
        "url": "https://files.pythonhosted.org/packages/1a/84/9d0a8dc731685a66ec11488802ec6f1a3fa831111d692c8410655ceb4060/ProcessPLS-1.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f95b95b6665ca831d08f0ddf37c404cc1069f29efd13203e5eb352110a6bc020",
          "md5": "fcca8f064c6a471bcd95105f9139ef12",
          "sha256": "4a7d909b91f601f0d9fd9c7606eb07112b56b81e857d55fb37bacd9faff21001"
        },
        "downloads": -1,
        "filename": "ProcessPLS-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fcca8f064c6a471bcd95105f9139ef12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8318,
        "upload_time": "2022-05-11T09:06:38",
        "upload_time_iso_8601": "2022-05-11T09:06:38.753616Z",
        "url": "https://files.pythonhosted.org/packages/f9/5b/95b6665ca831d08f0ddf37c404cc1069f29efd13203e5eb352110a6bc020/ProcessPLS-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "686d24dda437894d51918d8b48084f611c7adb1715f98c5ba9ea6fc69239e187",
          "md5": "ca5e1dba4b3602151bccf5332c6212fa",
          "sha256": "89b590b11d877766a1172b79b00f37ff9dd8f44750a7e1c056ba3496276a1393"
        },
        "downloads": -1,
        "filename": "ProcessPLS-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca5e1dba4b3602151bccf5332c6212fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12094,
        "upload_time": "2022-05-11T13:46:57",
        "upload_time_iso_8601": "2022-05-11T13:46:57.311543Z",
        "url": "https://files.pythonhosted.org/packages/68/6d/24dda437894d51918d8b48084f611c7adb1715f98c5ba9ea6fc69239e187/ProcessPLS-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65d6efe3f63eccc9fc155b8e7c5be3544e44fbfc93579afc8f61c24b9350dbc7",
          "md5": "ea9817213ef7901c6099df199329e825",
          "sha256": "05aa0884b26768fc979600e53e35e3634749cbf1d142fa65cd64d08285d7dae9"
        },
        "downloads": -1,
        "filename": "ProcessPLS-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea9817213ef7901c6099df199329e825",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12095,
        "upload_time": "2022-05-11T15:05:47",
        "upload_time_iso_8601": "2022-05-11T15:05:47.000951Z",
        "url": "https://files.pythonhosted.org/packages/65/d6/efe3f63eccc9fc155b8e7c5be3544e44fbfc93579afc8f61c24b9350dbc7/ProcessPLS-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "470547075a9902d5a13a11c6a913db85efccfcddfc82eb4bf6ddd0d95a2a8128",
          "md5": "87aecc2d6934624f76733d1a09b5f68d",
          "sha256": "a0eca67ece87c5c3548185430eb3721813d9ad7e2a8f320bb37b04851c16493a"
        },
        "downloads": -1,
        "filename": "ProcessPLS-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87aecc2d6934624f76733d1a09b5f68d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 308980,
        "upload_time": "2022-05-11T15:25:56",
        "upload_time_iso_8601": "2022-05-11T15:25:56.337931Z",
        "url": "https://files.pythonhosted.org/packages/47/05/47075a9902d5a13a11c6a913db85efccfcddfc82eb4bf6ddd0d95a2a8128/ProcessPLS-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daa726a20a9c0e51c126944a63f4c267f54262cbf686522a9cc51f055511226d",
          "md5": "71f48981114a8c6254602d00129d88f7",
          "sha256": "1f827ceb3dcc0fa6a35dccc33e8f4c21207e3014e9f53081418120b73026166e"
        },
        "downloads": -1,
        "filename": "ProcessPLS-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71f48981114a8c6254602d00129d88f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 309991,
        "upload_time": "2022-05-11T15:30:30",
        "upload_time_iso_8601": "2022-05-11T15:30:30.280804Z",
        "url": "https://files.pythonhosted.org/packages/da/a7/26a20a9c0e51c126944a63f4c267f54262cbf686522a9cc51f055511226d/ProcessPLS-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b281b947259355bc05b10851a632456a018ccf647b5cbc6f36926641dcbafbf",
          "md5": "f0c514fafa70660a51556a30cc2281c2",
          "sha256": "5780650d00dcbc5138522e9ee012da450cdba1227637c810ed903e79cc5b7f15"
        },
        "downloads": -1,
        "filename": "ProcessPLS-1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0c514fafa70660a51556a30cc2281c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 309972,
        "upload_time": "2022-05-11T15:40:12",
        "upload_time_iso_8601": "2022-05-11T15:40:12.220035Z",
        "url": "https://files.pythonhosted.org/packages/0b/28/1b947259355bc05b10851a632456a018ccf647b5cbc6f36926641dcbafbf/ProcessPLS-1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0d78ba860ce10f86b2146883d28375ae7e28521e6d63cf0a0de76259f225c94",
          "md5": "ac576404c137cdcc276cdf0207732434",
          "sha256": "0345ffdd89f8b1b0087db35ae61b7597a3948fc180e71d9ce6d14ffb1ed9b4f1"
        },
        "downloads": -1,
        "filename": "ProcessPLS-1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac576404c137cdcc276cdf0207732434",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 310058,
        "upload_time": "2022-05-11T15:53:33",
        "upload_time_iso_8601": "2022-05-11T15:53:33.276196Z",
        "url": "https://files.pythonhosted.org/packages/b0/d7/8ba860ce10f86b2146883d28375ae7e28521e6d63cf0a0de76259f225c94/ProcessPLS-1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d41e73b88e81ff78aabfb60d08c7cae40b4698c5dd7e78d3af2c7e64863eb28e",
          "md5": "b87ef9e92d8e305e6a8130518f1c8e58",
          "sha256": "0e4e5d499118725aa1d5a155ba038558daa2e908e410f56a875b4982d859738f"
        },
        "downloads": -1,
        "filename": "ProcessPLS-1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b87ef9e92d8e305e6a8130518f1c8e58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 310062,
        "upload_time": "2022-05-11T15:56:09",
        "upload_time_iso_8601": "2022-05-11T15:56:09.101489Z",
        "url": "https://files.pythonhosted.org/packages/d4/1e/73b88e81ff78aabfb60d08c7cae40b4698c5dd7e78d3af2c7e64863eb28e/ProcessPLS-1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b99a49752421fd8789c8a6f7532dbfaa92ccc816cea6a71fad629bae7d7822e",
          "md5": "caff4ce487861fee3f2d8cd0637e348a",
          "sha256": "fef60adc47355093395ce9eecb0673f4f3133ba252de6ab32f148496b9cc62ce"
        },
        "downloads": -1,
        "filename": "ProcessPLS-1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "caff4ce487861fee3f2d8cd0637e348a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 257159,
        "upload_time": "2023-02-09T13:14:57",
        "upload_time_iso_8601": "2023-02-09T13:14:57.466330Z",
        "url": "https://files.pythonhosted.org/packages/0b/99/a49752421fd8789c8a6f7532dbfaa92ccc816cea6a71fad629bae7d7822e/ProcessPLS-1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b99a49752421fd8789c8a6f7532dbfaa92ccc816cea6a71fad629bae7d7822e",
        "md5": "caff4ce487861fee3f2d8cd0637e348a",
        "sha256": "fef60adc47355093395ce9eecb0673f4f3133ba252de6ab32f148496b9cc62ce"
      },
      "downloads": -1,
      "filename": "ProcessPLS-1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "caff4ce487861fee3f2d8cd0637e348a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 257159,
      "upload_time": "2023-02-09T13:14:57",
      "upload_time_iso_8601": "2023-02-09T13:14:57.466330Z",
      "url": "https://files.pythonhosted.org/packages/0b/99/a49752421fd8789c8a6f7532dbfaa92ccc816cea6a71fad629bae7d7822e/ProcessPLS-1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}