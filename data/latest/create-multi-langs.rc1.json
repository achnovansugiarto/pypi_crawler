{
  "info": {
    "author": "Yihua Chiu",
    "author_email": "mychiux413@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
      "Topic :: Software Development :: Code Generators",
      "Typing :: Typed"
    ],
    "description": "# Create-Multi-Langs\n\nCreate-Multi-Langs is a package to create code for multi-lingual sites development, \n\n## Features\n- Use CSV file grid table as translated source data instead of JSON to better manage translations.\n- Output code language support python, go, javascript(ES6), typescript.\n- No more map or dict like so, but use property to get `code intelligence`.\n- Support watching mode for source csv file.\n\n## Install\n```\npip install create-multi-langs\n```\n\n\n## Prepare Data\n\nprepare csv data by yourself, liek `valid_format.csv`:\n\n| _field | zh-tw | en | _note |\n|--------|-------|----|-------|\n| SelectLang | 繁體中文 | English | # select language |\n| Login | 登入 | Login | used for login button |\n| Hello | 您好,歡迎 | Hello,Welcome | pop up greeting message |\n\n* Use CSV file as source data, a grid table is easier to manage for multi-lingual application.\n* `_field` and `_note` are preserved column names, others column names are considered as language code\n* the values under column `_field`, will become the field name in code file, but constraint the name with common naming rule of which language\n* the values under column `_note`, will become the comment for code docs\n\n## Usage\n```bash\ncreate-multi-langs valid_format.csv generated.py\n```\n* support output language: `typscript`, `javascript`, `go`, `python`\n* the generated code is determined by your output filename extension like: .py .go .js .ts .mjs\n\n\n## Testing\nimport from generated.py:\n```python\nfrom generated import MultiLangs, ZH_TW, EN\n\nml = MultiLangs(ZH_TW)\nassert ml.hello == \"您好,歡迎\"\nassert ml.login == \"登入\"\nassert ml.select_lang == \"繁體中文\"\n\nml.set_lang(EN)\nassert ml.hello == \"Hello,Welcome\"\nassert ml.login == \"Login\"\nassert ml.select_lang == \"English\"\n```\n\nimport from generated.js:\n```javascript\nimport { ml, setLang } from \"./generated_frontend.mjs\"\n\nvar compare = function(expect_value, actual_value) {\n    if (expect_value !== actual_value) {\n        return `[Error] expect '${expect_value}' but got '${actual_value}'\\n`\n    }\n    return \"\"\n}\n\nvar errs = \"\"\nerrs += compare(ml.hello, \"您好,歡迎\")\nerrs += compare(ml.login, \"登入\")\nerrs += compare(ml.selectLang, \"繁體中文\")\nsetLang(\"en\")\nerrs += compare(ml.hello, \"Hello,Welcome\")\nerrs += compare(ml.login, \"Login\")\nerrs += compare(ml.selectLang, \"English\")\n\nif (errs !== \"\") {\n    throw errs\n}\n```\n\nimport from generated.ts:\n```typescript\nimport { ml, setLang } from \"./generated_frontend\"\n\nconst compare = (expect_value: string, actual_value: string): string => {\n    if (expect_value !== actual_value) {\n        return `[Error] expect '${expect_value}' but got '${actual_value}'\\n`\n    }\n    return \"\"\n}\n\nlet errs = \"\"\nerrs += compare(ml.hello, \"您好,歡迎\")\nerrs += compare(ml.login, \"登入\")\nerrs += compare(ml.selectLang, \"繁體中文\")\nsetLang(\"en\")\nerrs += compare(ml.hello, \"Hello,Welcome\")\nerrs += compare(ml.login, \"Login\")\nerrs += compare(ml.selectLang, \"English\")\n\nif (errs !== \"\") {\n    throw errs\n}\n```\n\nimport from generated.go:\n```go\npackage generated\n\nimport \"testing\"\nimport \"github.com/stretchr/testify/assert\"\n\nfunc TestGenerated(t *testing.T) {\n\tml := NewMultiLangs(ZHTW)\n\tassert.Equal(t, \"您好,歡迎\", ml.Hello)\n\tassert.Equal(t, \"登入\", ml.Login)\n\tassert.Equal(t, \"繁體中文\", ml.SelectLang)\n\tml.SetLang(EN)\n\tassert.Equal(t, \"Hello,Welcome\", ml.Hello)\n\tassert.Equal(t, \"Login\", ml.Login)\n\tassert.Equal(t, \"English\", ml.SelectLang)\n}\n```\n\n## Help\n```shell\n$ create-multi-langs --help\nusage: create-multi-langs [-h] [--backend] [--py_typing] [--watch] [--sep SEP]\n                          [--naming_rule NAMING_RULE]\n                          from_csv to_file\n\nRunning DeepSpeech inference.\n\npositional arguments:\n  from_csv              Generate script from csv\n  to_file               generate file path, support ext: .go .py .js .ts .mjs\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --backend, -b         Default is generate frontend script for js/ts\n  --py_typing, -t       Default is generate python script without typing\n  --watch, -w           Watch csv file changed\n  --sep SEP, -s SEP     CSV seperated punctuation\n  --naming_rule NAMING_RULE, -n NAMING_RULE\n                        specify your property style, [valid options]\n                        `ucc`(UpperCamelCase), `lcc`(lowerCamelCase),\n                        `upper`(ALL_UPERCASE_UNDERSCORE),\n                        `lower`(all_lowercase_underscore) [default setting]\n                        Go: `ucc`, Python: `lower`, Typescript: `lcc`,\n                        javascript: `lcc`\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mychiux413/create-multi-langs",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Create-Multi-Langs",
    "package_url": "https://pypi.org/project/Create-Multi-Langs/",
    "platform": "any",
    "project_url": "https://pypi.org/project/Create-Multi-Langs/",
    "project_urls": {
      "Homepage": "https://github.com/mychiux413/create-multi-langs"
    },
    "release_url": "https://pypi.org/project/Create-Multi-Langs/0.1.1/",
    "requires_dist": [
      "pandas",
      "typing",
      "jinja2"
    ],
    "requires_python": ">=3.5",
    "summary": "Create-Multi-Langs is a library for creating code file from translated csv file.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6397710,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43b142486ba28c88a55eb9ee61c0e6cdf978221d2a5ce301c57ae8abea3710dc",
          "md5": "a3a88784bd833b2ff82d9be6006bcffb",
          "sha256": "5606aad16c6cfab2c0f55f71de4d8b1c66d156281ded4bf96bd7d21e195a5838"
        },
        "downloads": -1,
        "filename": "Create_Multi_Langs-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3a88784bd833b2ff82d9be6006bcffb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 20485,
        "upload_time": "2020-01-05T09:49:02",
        "upload_time_iso_8601": "2020-01-05T09:49:02.416642Z",
        "url": "https://files.pythonhosted.org/packages/43/b1/42486ba28c88a55eb9ee61c0e6cdf978221d2a5ce301c57ae8abea3710dc/Create_Multi_Langs-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "926b615fd3cea43a63a679aa9f9a5912242e9944000532edf51cddcc4c30ff4a",
          "md5": "709ba9a3b28aad17a1d3982d4299420a",
          "sha256": "8cb964845eb7ae4e06378a831253e5d103870869a9c35c33724df5eec206743c"
        },
        "downloads": -1,
        "filename": "Create-Multi-Langs-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "709ba9a3b28aad17a1d3982d4299420a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9684,
        "upload_time": "2020-01-05T09:49:05",
        "upload_time_iso_8601": "2020-01-05T09:49:05.289093Z",
        "url": "https://files.pythonhosted.org/packages/92/6b/615fd3cea43a63a679aa9f9a5912242e9944000532edf51cddcc4c30ff4a/Create-Multi-Langs-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43b142486ba28c88a55eb9ee61c0e6cdf978221d2a5ce301c57ae8abea3710dc",
        "md5": "a3a88784bd833b2ff82d9be6006bcffb",
        "sha256": "5606aad16c6cfab2c0f55f71de4d8b1c66d156281ded4bf96bd7d21e195a5838"
      },
      "downloads": -1,
      "filename": "Create_Multi_Langs-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a3a88784bd833b2ff82d9be6006bcffb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 20485,
      "upload_time": "2020-01-05T09:49:02",
      "upload_time_iso_8601": "2020-01-05T09:49:02.416642Z",
      "url": "https://files.pythonhosted.org/packages/43/b1/42486ba28c88a55eb9ee61c0e6cdf978221d2a5ce301c57ae8abea3710dc/Create_Multi_Langs-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "926b615fd3cea43a63a679aa9f9a5912242e9944000532edf51cddcc4c30ff4a",
        "md5": "709ba9a3b28aad17a1d3982d4299420a",
        "sha256": "8cb964845eb7ae4e06378a831253e5d103870869a9c35c33724df5eec206743c"
      },
      "downloads": -1,
      "filename": "Create-Multi-Langs-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "709ba9a3b28aad17a1d3982d4299420a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 9684,
      "upload_time": "2020-01-05T09:49:05",
      "upload_time_iso_8601": "2020-01-05T09:49:05.289093Z",
      "url": "https://files.pythonhosted.org/packages/92/6b/615fd3cea43a63a679aa9f9a5912242e9944000532edf51cddcc4c30ff4a/Create-Multi-Langs-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}