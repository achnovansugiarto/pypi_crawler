{
  "info": {
    "author": "Takashi Matsuoka (matsujirushi)",
    "author_email": "matsujirushi@live.jp",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Python Library for reTerminal\n\nThis is a Python library which enables you to use the onboard hardware on the [reTerminal](https://www.seeedstudio.com/ReTerminal-with-CM4-p-4904.html) and [reTerminal Bridge](https://wiki.seeedstudio.com/reTerminalBridge/). Currently the **accelerometer, user LEDs, user buttons and buzzer** can be accessed using this Python library on reTerminal, and the **fan, RS232,  RS485, CAN** can be accessed by using this Python library on reTerminal Bridge.\n\n## Installation\n\n### From PyPI\n\n- To install the latest release from PyPI\n```\nsudo pip3 install seeed-python-reterminal\n```\n\n### From Source\n\n- To install from source, clone this repository\n```\ngit clone https://github.com/Seeed-Studio/Seeed_Python_ReTerminal\n```\n\n- Install the library \n\n```\ncd Seeed_Python_ReTerminal\nsudo pip3 install .\n```\n\n## Usage\n\n### User LEDs Test\n\n```python\nimport seeed_python_reterminal.core as rt\nimport time\n\nprint(\"STA ON, USR OFF\")\nrt.sta_led = True\nrt.usr_led = False\ntime.sleep(1)\n\nprint(\"STA OFF, USR ON\")\nrt.sta_led = False\nrt.usr_led = True\ntime.sleep(1)\n\nprint(\"STA RED, USR OFF\")\nrt.sta_led_green = False\nrt.sta_led_red = True\nrt.usr_led = False\ntime.sleep(1)\n\nprint(\"STA OFF, USR OFF\")\nrt.sta_led = False\nrt.usr_led = False\n```\n\n### Buzzer Test\n\n```python\nimport seeed_python_reterminal.core as rt\nimport time\n\nprint(\"BUZZER ON\")\nrt.buzzer = True\ntime.sleep(1)\n\nprint(\"BUZZER OFF\")\nrt.buzzer = False\n```\n\n### User Buttons Test\n\n```python\nimport seeed_python_reterminal.core as rt\nimport seeed_python_reterminal.button as rt_btn\n\n\ndevice = rt.get_button_device()\nwhile True:\n    for event in device.read_loop():\n        buttonEvent = rt_btn.ButtonEvent(event)\n        if buttonEvent.name != None:\n            print(f\"name={str(buttonEvent.name)} value={buttonEvent.value}\")\n```\n\n### Accelerometer Test\n\n```python\nimport seeed_python_reterminal.core as rt\nimport seeed_python_reterminal.acceleration as rt_accel\n\n\ndevice = rt.get_acceleration_device()\nwhile True:\n    for event in device.read_loop():\n        accelEvent = rt_accel.AccelerationEvent(event)\n        if accelEvent.name != None:\n            print(f\"name={str(accelEvent.name)} value={accelEvent.value}\")\n```\n\n### Accelerometer and Buttons Test\n\n```python\nimport asyncio\nimport seeed_python_reterminal.core as rt\nimport seeed_python_reterminal.acceleration as rt_accel\nimport seeed_python_reterminal.button as rt_btn\n\n\nasync def accel_coroutine(device):\n    async for event in device.async_read_loop():\n        accelEvent = rt_accel.AccelerationEvent(event)\n        if accelEvent.name != None:\n            print(f\"accel name={str(accelEvent.name)} value={accelEvent.value}\")\n\n\nasync def btn_coroutine(device):\n    async for event in device.async_read_loop():\n        buttonEvent = rt_btn.ButtonEvent(event)\n        if buttonEvent.name != None:\n            print(f\"name={str(buttonEvent.name)} value={buttonEvent.value}\")\n\n\naccel_device = rt.get_acceleration_device()\nbtn_device = rt.get_button_device()\n\nasyncio.ensure_future(accel_coroutine(accel_device))\nasyncio.ensure_future(btn_coroutine(btn_device))\n\nloop = asyncio.get_event_loop()\nloop.run_forever()\n```\n\n**The Following Test Should Work With Reterminal Bridge**\n\n### fan Test\n\n```python\nimport seeed_python_reterminal.core as rt\nimport time\n\nprint(\"FAN ON\")\nrt.fan = True\ntime.sleep(1)\n\nprint(\"FAN OFF\")\nrt.fan = False\n```\n\n### RS232 Test\n\n```python\nimport sys\nimport serial\nimport time\nimport seeed_python_reterminal.core as rt\n\nparam1 = sys.argv[1]\n\n# enable the rs232 for test\nrt.rs232_or_rs485 = \"RS232\"\n\n# init the serial\nser = serial.Serial(\n    port='/dev/ttyS0',\n    baudrate = 9600,\n    parity=serial.PARITY_NONE,\n    stopbits=serial.STOPBITS_ONE,\n    bytesize=serial.EIGHTBITS,\n    timeout=1\n)\n\nif param1 == \"send\":\n    counter=0\n    try:\n        print(\"rs232 starts now!\\n\")\n        ser.write(\"rs232 starts now!\\n\".encode())\n        while 1:\n                ser.write((\"Write counter:{}\\n\".format(counter)).encode())\n                time.sleep(1)\n                counter += 1\n    except KeyboardInterrupt:\n        exit()\nelif param1 == \"receive\":\n    try:\n        print(\"Start receiving data now!\\n\")\n        while 1:\n            x=ser.readline()\n            if x != b'':\n                print(x)\n    except KeyboardInterrupt:\n        exit()\nelse:\n    print('param input error,try again with send or receive')\n```\n**Note:**:When we use the test script of RS232/RS485/CAN.We need to pass a parameter to them.\n\nTake the RS232 for example:\n```\npython3 test_rs232.py send # test the send(TX) function of RS232\npython3 test_rs232.py receive # test the receive(RX) function of RS232\n```\n\n### RS485 Test\n\n```python\nimport sys\nimport serial\nimport time\nimport seeed_python_reterminal.core as rt\n\nparam1 = sys.argv[1]\n\n# enable the rs485 for test\nrt.rs232_or_rs485 = \"RS485\"\n\n# init the serial\nser = serial.Serial(\n    port='/dev/ttyS0',\n    baudrate = 9600,\n    parity=serial.PARITY_NONE,\n    stopbits=serial.STOPBITS_ONE,\n    bytesize=serial.EIGHTBITS,\n    timeout=1\n)\n\nif param1 == \"send\":\n    counter=0\n    # enable the rs485 for tx\n    rt.rs485_tx_rx_stat = \"TX\"\n    try:\n        print(\"rs485 starts now!\\n\")\n        ser.write(\"rs485 starts now!\\n\".encode())\n        while 1:\n                ser.write((\"Write counter:{}\\n\".format(counter)).encode())\n                time.sleep(1)\n                counter += 1\n    except KeyboardInterrupt:\n        exit()\nelif param1 == \"receive\":\n    # enable the rs485 for rx\n    rt.rs485_tx_rx_stat = \"RX\"\n    try:\n        print(\"Start receiving data now!\\n\")\n        while 1:\n            x=ser.readline()\n            if x != b'':\n                print(x)\n    except KeyboardInterrupt:\n        exit()\nelse:\n    print('param input error,try again with send or receive')\n```\n\n### CAN Test\n\n```python\n# NOTICE: please make sure you have pip3 install python-can\n#         before you use this test script\n# import the library\nimport can\nimport sys\nimport time\n\nparam1 = sys.argv[1]\n\n# create a bus instance\n# many other interfaces are supported as well (see documentation)\nbus = can.Bus(interface='socketcan',\n              channel='can0',\n              receive_own_messages=True)\n\nif param1 == \"send\":\n    # send a message\n    counter=0\n    print(\"can send starts now!\\n\")\n    try:\n        while True:\n            message = can.Message(arbitration_id=123, is_extended_id=True,\n                      data=[0x11, 0x22, counter])\n            bus.send(message, timeout=0.2)\n            time.sleep(1)\n            counter += 1\n    except KeyboardInterrupt:\n        exit()\n\nelif param1 == \"receive\":\n    # iterate over received messages\n    try:\n        for msg in bus:\n            print(f\"{msg.arbitration_id:X}: {msg.data}\")\n    except KeyboardInterrupt:\n        exit()\nelse:\n    print('param input error,try again with send or receive')\n```\n**Note:** Please make sure your CAN interface is working before run this script.\nIf not. You will get the error log with \"Network is down\". And you can \nenable the can with \"sudo ip link set can0 up type can bitrate 500000\".\n\n## API Reference\n\n- **usr_led**: Turn on/off green USR LED\n\n```python\nrt.usr_led = True #Turn on green USR LED\nrt.usr_led = False #Turn off green USR LED\n```\n\n- **sta_led_red**: Turn on/off red STA LED\n\n```python\nrt.sta_led_red = True #Turn on red STA LED\nrt.sta_led_red = False #Turn off red STA LED\n```\n\n- **sta_led_green**: Turn on/off green STA LED\n\n```python\nrt.sta_led_green = True #Turn on green STA LED\nrt.sta_led_green = False #Turn off green STA LED\n```\n\n**Note:** If red STA LED is on during this time, the green STA LED will turn on over the red STA LED\n\n- **sta_led**: Turn on/off green STA LED\n\n```python\nrt.sta_led = True #Turn on green STA LED\nrt.sta_led = False #Turn off green STA LED\n```\n\n**Note:** If red STA LED is on during this time, the green STA LED will turn on and the red STA LED will turn off\n\n- **buzzer** : Turn on/off buzzer\n\n```python\nrt.buzzer = True #Turn on buzzer\nrt.buzzer = False #Turn off buzzer\n```\n\n- **get_button_device()**: Obtain information about the buttons including all the events supported by them\n\n```python\ndevice = rt.get_button_device()\n```\n\n- **ButtonEvent()**: Calls the ButtonEvent() and returns the EVENT\n\n```python\nbuttonEvent = rt_btn.ButtonEvent(event)\n```\n\n- **get_acceleration_device()**: Obtain information about the accelerometer including all the events supported by it \n\n```python\ndevice = rt.get_acceleration_device()\n```\n\n- **AccelerationEvent()**: Calls the AccelerationEvent() and returns the EVENT\n\n```python\naccelEvent = rt_accel.AccelerationEvent(event)\n```\n\n- **fan**: Turn on/off fan\n\n```python\nrt.fan = True # Turn on fan\nrt.fan = False # Turn off fan\n```\n\n- **rs232_or_rs485**: Open the RS232 or RS485\n\n```python\nrt.rs232_or_rs485 = \"RS232\" # open the RS232\nrt.rs232_or_rs485 = \"RS485\" # open the RS485\n```\n\n- **rs485_tx_rx_stat**: Switch the function between send(TX) and receive(Rx) of RS485\n\n```python\nrt.rs485_tx_rx_stat = \"TX\" # enable the send(TX) of RS485\nrt.rs485_tx_rx_stat = \"RX\" # enable the receive(RX) of RS485\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Seeed-Studio/Seeed_Python_ReTerminal",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "seeed-python-reterminal",
    "package_url": "https://pypi.org/project/seeed-python-reterminal/",
    "platform": null,
    "project_url": "https://pypi.org/project/seeed-python-reterminal/",
    "project_urls": {
      "Homepage": "https://github.com/Seeed-Studio/Seeed_Python_ReTerminal"
    },
    "release_url": "https://pypi.org/project/seeed-python-reterminal/0.5/",
    "requires_dist": [
      "evdev"
    ],
    "requires_python": "",
    "summary": "seeed-python-reterminal",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15223839,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d79bbccdf5789ba3b02bae36329298e3d848c1ceca61608d3e15b4a4f7d0a54e",
          "md5": "800835d7b2a25ecf46d471149b82befb",
          "sha256": "e469eae6617ded4ece94b74433df4e3d8d914c0eb60736694d5f7ef9bef80724"
        },
        "downloads": -1,
        "filename": "seeed_python_reterminal-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "800835d7b2a25ecf46d471149b82befb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4052,
        "upload_time": "2021-05-19T12:19:55",
        "upload_time_iso_8601": "2021-05-19T12:19:55.473706Z",
        "url": "https://files.pythonhosted.org/packages/d7/9b/bccdf5789ba3b02bae36329298e3d848c1ceca61608d3e15b4a4f7d0a54e/seeed_python_reterminal-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "700f74fb07453991069fb089a1b12102c251a4bcf19d86134b8608d78a686555",
          "md5": "b7bf66b4594f5fc28cce587b0af76789",
          "sha256": "632cda8aad83612c3270d016dccfe44240ae3653149e2393e87bc8f120344423"
        },
        "downloads": -1,
        "filename": "seeed-python-reterminal-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b7bf66b4594f5fc28cce587b0af76789",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2255,
        "upload_time": "2021-05-19T12:19:57",
        "upload_time_iso_8601": "2021-05-19T12:19:57.310787Z",
        "url": "https://files.pythonhosted.org/packages/70/0f/74fb07453991069fb089a1b12102c251a4bcf19d86134b8608d78a686555/seeed-python-reterminal-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b060bbd14e649d01e85e7035e6c0f780a5a1c1ca99bf91bd7a548ae0d0740aeb",
          "md5": "c394eaae384f7ec9e34fab98fc287343",
          "sha256": "989b425cebad9e0cda7be4cfbfbb08edd95db6f3e0a3796ad9fdd1589bba1406"
        },
        "downloads": -1,
        "filename": "seeed_python_reterminal-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c394eaae384f7ec9e34fab98fc287343",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5145,
        "upload_time": "2021-05-20T18:59:41",
        "upload_time_iso_8601": "2021-05-20T18:59:41.516581Z",
        "url": "https://files.pythonhosted.org/packages/b0/60/bbd14e649d01e85e7035e6c0f780a5a1c1ca99bf91bd7a548ae0d0740aeb/seeed_python_reterminal-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7df703a320e63172a93bae0d8618e28e281f385df9a378dbedab279b2d4791e2",
          "md5": "f55738d54aa892d618832f9ad4b693bb",
          "sha256": "a948cdb5656ed35524531044791ffbfb3493bb3de0a830147f45c6952659441d"
        },
        "downloads": -1,
        "filename": "seeed-python-reterminal-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f55738d54aa892d618832f9ad4b693bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3869,
        "upload_time": "2021-05-20T18:59:42",
        "upload_time_iso_8601": "2021-05-20T18:59:42.939360Z",
        "url": "https://files.pythonhosted.org/packages/7d/f7/03a320e63172a93bae0d8618e28e281f385df9a378dbedab279b2d4791e2/seeed-python-reterminal-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f1e21fd0d75330a36831292adadeb6414df159246879d6b6f34de7d7f4b1839",
          "md5": "00c10d455742874ba82be94ce5ad67cb",
          "sha256": "40c804ce8b91048750ac23e0cdcbaaef06bdca7695eabacb81cfa40db47a63a8"
        },
        "downloads": -1,
        "filename": "seeed_python_reterminal-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "00c10d455742874ba82be94ce5ad67cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5231,
        "upload_time": "2022-02-07T13:23:11",
        "upload_time_iso_8601": "2022-02-07T13:23:11.446486Z",
        "url": "https://files.pythonhosted.org/packages/9f/1e/21fd0d75330a36831292adadeb6414df159246879d6b6f34de7d7f4b1839/seeed_python_reterminal-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52cbc117992c2dd21360331f488365c95b9f7915c105b8ef3bfb8b7765cba6dc",
          "md5": "4b0baadfdb1d91fc7c488c6e28d24c68",
          "sha256": "7b0c2c42d790b7424034f2ddbb1d4c13f5b5a015202ba3fabf93c234fdec9ecb"
        },
        "downloads": -1,
        "filename": "seeed-python-reterminal-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4b0baadfdb1d91fc7c488c6e28d24c68",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3949,
        "upload_time": "2022-02-07T13:23:13",
        "upload_time_iso_8601": "2022-02-07T13:23:13.301825Z",
        "url": "https://files.pythonhosted.org/packages/52/cb/c117992c2dd21360331f488365c95b9f7915c105b8ef3bfb8b7765cba6dc/seeed-python-reterminal-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da4d73c452c982b53ef838fdc7ae89943677a9b89d32448372ecb331c4da8f25",
          "md5": "6009388fa5464d7d70ebce2ec5035bf2",
          "sha256": "4085a849e7610a161bd8b3526f2d4739a00d616b04146647afe584e59c7be3cb"
        },
        "downloads": -1,
        "filename": "seeed_python_reterminal-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6009388fa5464d7d70ebce2ec5035bf2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7063,
        "upload_time": "2022-03-01T11:09:05",
        "upload_time_iso_8601": "2022-03-01T11:09:05.590141Z",
        "url": "https://files.pythonhosted.org/packages/da/4d/73c452c982b53ef838fdc7ae89943677a9b89d32448372ecb331c4da8f25/seeed_python_reterminal-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95cc72ce92d9c99844d1583a5511d91e5add0ac681b4668cf226fe9d24bf6783",
          "md5": "4f994af805f67fc06e41c55fc9cf39f9",
          "sha256": "fa24527cc265f837fee23a620e7b7f364518d50ad82135bed2e2ac25135a07ed"
        },
        "downloads": -1,
        "filename": "seeed-python-reterminal-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4f994af805f67fc06e41c55fc9cf39f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7239,
        "upload_time": "2022-03-01T11:09:07",
        "upload_time_iso_8601": "2022-03-01T11:09:07.287795Z",
        "url": "https://files.pythonhosted.org/packages/95/cc/72ce92d9c99844d1583a5511d91e5add0ac681b4668cf226fe9d24bf6783/seeed-python-reterminal-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d013128f3e0e67f80679e68b8ddcf5c251b5de2920e0fb18f28194d84938eb89",
          "md5": "d4440821dabe7b29a7ecf8a6dd1ea51a",
          "sha256": "cccbe941ad2036ae09b2e4aebf0e2ced6c9f0c41f882e4f2a56e8a0e0926bc86"
        },
        "downloads": -1,
        "filename": "seeed_python_reterminal-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4440821dabe7b29a7ecf8a6dd1ea51a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7155,
        "upload_time": "2022-09-27T06:32:15",
        "upload_time_iso_8601": "2022-09-27T06:32:15.221903Z",
        "url": "https://files.pythonhosted.org/packages/d0/13/128f3e0e67f80679e68b8ddcf5c251b5de2920e0fb18f28194d84938eb89/seeed_python_reterminal-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc4c0fff21c8f424843c51536a81dd5a7f984235a10876b438ba731f3c7ad095",
          "md5": "e0679cfcd1b5f1986e5fc3f054fd780a",
          "sha256": "bee155e4827fdc088558b97e0ba27006b1ace158985493de3cce280eda92f9a4"
        },
        "downloads": -1,
        "filename": "seeed-python-reterminal-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e0679cfcd1b5f1986e5fc3f054fd780a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6408,
        "upload_time": "2022-09-27T06:32:17",
        "upload_time_iso_8601": "2022-09-27T06:32:17.337656Z",
        "url": "https://files.pythonhosted.org/packages/fc/4c/0fff21c8f424843c51536a81dd5a7f984235a10876b438ba731f3c7ad095/seeed-python-reterminal-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d013128f3e0e67f80679e68b8ddcf5c251b5de2920e0fb18f28194d84938eb89",
        "md5": "d4440821dabe7b29a7ecf8a6dd1ea51a",
        "sha256": "cccbe941ad2036ae09b2e4aebf0e2ced6c9f0c41f882e4f2a56e8a0e0926bc86"
      },
      "downloads": -1,
      "filename": "seeed_python_reterminal-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d4440821dabe7b29a7ecf8a6dd1ea51a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7155,
      "upload_time": "2022-09-27T06:32:15",
      "upload_time_iso_8601": "2022-09-27T06:32:15.221903Z",
      "url": "https://files.pythonhosted.org/packages/d0/13/128f3e0e67f80679e68b8ddcf5c251b5de2920e0fb18f28194d84938eb89/seeed_python_reterminal-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc4c0fff21c8f424843c51536a81dd5a7f984235a10876b438ba731f3c7ad095",
        "md5": "e0679cfcd1b5f1986e5fc3f054fd780a",
        "sha256": "bee155e4827fdc088558b97e0ba27006b1ace158985493de3cce280eda92f9a4"
      },
      "downloads": -1,
      "filename": "seeed-python-reterminal-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "e0679cfcd1b5f1986e5fc3f054fd780a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6408,
      "upload_time": "2022-09-27T06:32:17",
      "upload_time_iso_8601": "2022-09-27T06:32:17.337656Z",
      "url": "https://files.pythonhosted.org/packages/fc/4c/0fff21c8f424843c51536a81dd5a7f984235a10876b438ba731f3c7ad095/seeed-python-reterminal-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}