{
  "info": {
    "author": "baseplate-admin",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "A libravatar client for Python thats built on modern Technology\n===============================================================\n\n|Pepy.tech Badge| |PyPi Version Badge| |Python Versions Badge| |License Badge| |Code Style| |Lines of Code Badge|\n\n.. |Pepy.tech Badge| image:: https://static.pepy.tech/personalized-badge/libravatar-py?period=week&units=international_system&left_color=grey&right_color=orange&left_text=Downloads\n   :target: https://pepy.tech/project/libravatar-py\n\n.. |PyPi Version Badge| image:: https://badge.fury.io/py/libravatar-py.svg\n    :target: https://badge.fury.io/py/libravatar-py\n\n.. |Python Versions Badge| image:: https://img.shields.io/pypi/pyversions/libravatar-py\n    :alt: PyPI - Python Version\n    :target: https://github.com/baseplate-admin/libravatar-py/blob/main/setup.py\n\n.. |License Badge| image:: https://img.shields.io/pypi/l/libravatar-py\n   :alt: PyPI - License\n   :target: https://github.com/baseplate-admin/libravatar-py/blob/main/LICENSE\n   \n.. |Code Style| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :alt: Code Style\n   \n.. |Lines of Code Badge| image:: https://tokei.rs/b1/github/baseplate-admin/libravatar-py\n   :alt: Lines of Code\n   :target: https://github.com/baseplate-admin/libravatar-py\n\n\nIntroduction :\n--------------\nFriendly fork of `pyLibravatar`_.\n\n\nWhy did I write this library:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nWhile working on the Libravatar client project I came across the well built  `pyLibravatar`_  library. The last update was at Jun 28, 2015 ( Thats over 6 years ago when I was writing this ). So thats why I decided to write this library. It mimics the API  ( and functionality ) of `pyLibravatar`_ but with asyncio spice.\n\nWhy use \"libravatar-py\" ?\n~~~~~~~~~~~~~~~~~~~~~~~~~\n*   Provides API for different kinds of usage.\n*   Built with modern techknology.\n*   No unnecessary codes. ( My goal was to keep the library as small as possible )\n*   Is very minimal. ( Only provides 4 functions )\n*   Fully Fedarated and feature rich.\n\nWhy shouldn't you use \"libravatar-py\" ?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*   I donno ? If you do please submit a Pull Request\n\n\n\nUser guide :\n============\n\nInstallation :\n--------------\n\nInstall with pip from pypi (No extra dependencies):\n\n.. code-block:: python\n\n      $ python -m pip install libravatar-py\n\n\nInstall with pip from github ( Development | Not Recommended for Production )::\n    \n      $ python -m pip install https://codeload.github.com/baseplate-admin/libravatar-py/zip/refs/heads/main\n\nUsage:\n------\n\nCall any of these 4 methods.\n\n\n``libravatar_url`` function ( This will essentially return the base url of the image ) :\n\n.. code-block:: python\n  \n    from libravatar import libravatar_url\n\n    url = libravatar_url(email=\"someone@example.com\")\n    print(url)\n    # https://seccdn.libravatar.org/avatar/16d113840f999444259f73bac9ab8b10\n \n \n``libravatar_img_tag`` function ( This will wrap the libravatar url in a <img /> tag. You can also customize _alt text ) :\n\n.. code-block:: python\n   \n    from libravatar import libravatar_img_tag\n\n    url = libravatar_img_tag(email=\"someone@example.com\")\n    print(url)\n    # <img src=https://seccdn.libravatar.org/avatar/16d113840f999444259f73bac9ab8b10 alt='Avatar for someone@example.com' />\n    \n\n``libravatar_raw_image`` function ( This will return the Libravatar image in a binary form ) :\n\n.. code-block:: python\n    \n    from libravatar import libravatar_raw_image\n\n    res = libravatar_raw_image(email=\"someone@example.com\")\n    print(res)\n    # Large binary string.\n    # To load it.\n    from PIL import Image\n    from io import BytesIO\n    \n    res = Image.open(BytesIO(res))\n\n\n``libravatar_raw_query`` function ( Essentially passes the {args, kwargs} to httpx_get_avatar ):\n\n.. code-block:: python\n    \n    from libravatar import libravatar_raw_image\n    # Note this this must be called from an async function\n    res = await libravatar_raw_query(email=\"someone@example.com\", {})\n    # All httpx variables available in res\n\n\nContributing :\n==============\nIf you like this project add a star. If you have problems or suggestions please put them in the `Issue Tracker <https://github.com/baseplate-admin/libravatar-py/issues>`_. If you like to add features. Fork this repo and submit a Pull Request. ðŸ˜›\n\nUpdates :\n=========\nThe library is feature complete ( in my opinion ).\n\n\n\n.. _pyLibravatar: https://pypi.org/project/pyLibravatar/\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/baseplate-admin/libravatar-py",
    "keywords": "python3 avatar libravatar async httpx",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "libravatar-py",
    "package_url": "https://pypi.org/project/libravatar-py/",
    "platform": "any",
    "project_url": "https://pypi.org/project/libravatar-py/",
    "project_urls": {
      "Homepage": "https://github.com/baseplate-admin/libravatar-py"
    },
    "release_url": "https://pypi.org/project/libravatar-py/1.0.0/",
    "requires_dist": [
      "httpx[http2]",
      "dnspython"
    ],
    "requires_python": ">=3.7",
    "summary": "A libravatar client for Python thats built on modern async Technology",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15281488,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05a8e680a9f8ebaeb47e08c265849372f549f74730a85d10fb4dd4d95a130ea5",
          "md5": "796117c21ded0d6f5b564e3f8affa0e8",
          "sha256": "ac023c89381b4527b25778e70f6b79df54b10575c9ee5babc6228aa8a01f11ba"
        },
        "downloads": -1,
        "filename": "libravatar_py-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "796117c21ded0d6f5b564e3f8affa0e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16504,
        "upload_time": "2021-12-27T06:04:52",
        "upload_time_iso_8601": "2021-12-27T06:04:52.623222Z",
        "url": "https://files.pythonhosted.org/packages/05/a8/e680a9f8ebaeb47e08c265849372f549f74730a85d10fb4dd4d95a130ea5/libravatar_py-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b3edc3c13bb23ad267ed29b913777b2edf082b52d31669ce708a5b782a3e819",
          "md5": "9ffdf4ae6c93cc8d9569631153e81dfa",
          "sha256": "f25ab14327866a01841afb84d6f9cbf7c09f85a7132b19526117e2eda8ca981a"
        },
        "downloads": -1,
        "filename": "libravatar_py-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ffdf4ae6c93cc8d9569631153e81dfa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18526,
        "upload_time": "2021-12-27T16:29:11",
        "upload_time_iso_8601": "2021-12-27T16:29:11.030499Z",
        "url": "https://files.pythonhosted.org/packages/7b/3e/dc3c13bb23ad267ed29b913777b2edf082b52d31669ce708a5b782a3e819/libravatar_py-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52d30552d60dab44f0e4e046a5abda369b4569a429669d6e77e71156fb1ac9c5",
          "md5": "edae0bd60da7e0b10a1edf2def742532",
          "sha256": "f9e16534683fd1c8dfd6d0109c32b6a30ebbc647332daadaf583b4f69fc2e678"
        },
        "downloads": -1,
        "filename": "libravatar_py-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edae0bd60da7e0b10a1edf2def742532",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6900,
        "upload_time": "2022-10-02T13:18:52",
        "upload_time_iso_8601": "2022-10-02T13:18:52.419289Z",
        "url": "https://files.pythonhosted.org/packages/52/d3/0552d60dab44f0e4e046a5abda369b4569a429669d6e77e71156fb1ac9c5/libravatar_py-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52d30552d60dab44f0e4e046a5abda369b4569a429669d6e77e71156fb1ac9c5",
        "md5": "edae0bd60da7e0b10a1edf2def742532",
        "sha256": "f9e16534683fd1c8dfd6d0109c32b6a30ebbc647332daadaf583b4f69fc2e678"
      },
      "downloads": -1,
      "filename": "libravatar_py-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "edae0bd60da7e0b10a1edf2def742532",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6900,
      "upload_time": "2022-10-02T13:18:52",
      "upload_time_iso_8601": "2022-10-02T13:18:52.419289Z",
      "url": "https://files.pythonhosted.org/packages/52/d3/0552d60dab44f0e4e046a5abda369b4569a429669d6e77e71156fb1ac9c5/libravatar_py-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}