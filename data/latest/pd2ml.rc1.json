{
  "info": {
    "author": "Tanyee Zhang",
    "author_email": "676761828@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div align=\"center\">\n <div>\n   <img src=\"https://user-images.githubusercontent.com/32212649/88253383-5510de00-cce4-11ea-8773-467c51b6c0bf.png\">\n  </div>\n</div>\n\n## What is it?\n\n**pd2ml** (**p**andas **D**ataFrame **to** **M**ySQL **L**oader) is a Python package that provides an efficient way to upload Pandas `DataFrame` to `MySQL` and download from the database table into a DataFrame. The application of MySQL statements `LOAD DATA LOCAL INFILE` and `SELECT INTO OUTILE` are the most essential reason for such efficient upload and download.It turns out that the advantages of pd2ml will gradually become apparent as the amount of data increases, so it will be a good assistant when dealing with massive amounts of data.\n\nTo make a digression, the name pd2ml can be pronounced as pudumal (/'pudumè“´:/), which is a homonym for purdy cat in Chinese, and this is also the inspiration for the logo of this package.\n\n## How to get it\n\nYou can install using the pip package manager by running\n```sh\npip install pd2ml\n```\nNote that it is necessary for pd2ml to run in the `Python3` environment.\n\n## Dependencies\n\n- [pandas](https://pandas.pydata.org/)\n- [NumPy](https://www.numpy.org)\n- [SQLAlchemy](https://www.sqlalchemy.org/)\n\n## Examples\n\nIt is veary easy to get started and easy to use.\n\nFirstly, start by reading a csv file into your pandas DataFrame, e.g. by using\n```python\nimport pandas as pd\nimport sqlalchemy as sa\nengine = sa.create_engine('mysql+pymysql://username:pwd@localhost:3306/db?charset=utf8&local_infile=1')\ndf = pd.read_csv('stock.csv')\n```\nTo upload `df` to database, run\n```python\nfrom pd2ml import Loader\nLoader(engine).load_to(df, 'stock')\n```\nTo download `df` from databse, run\n```python\nfrom pd2ml import Loader\ndf = Loader(engine).load_from('stock')\nprint(df)\n```\nIn particular, it supports pandas extension, so you can also use it like this\n```python\nimport pd2ml\n# Call it directly just like any other DataFrame's native methods.\n# load to db\ndf.load_to('stock', engine)\n# load from db\ndf = pd.DataFrame()\ndf = df.load_from('stock', engine)\nprint(df)\n```\nWhat's more, it also works well with multi-processing or multi-threading\n```python\n# from multiprocessing.pool import ThreadPool as Pool\nfrom multiprocessing.pool import Pool\nfrom utils import split_dataframe, load_to, load_from_\n# load to db\nwith Loader(engine):\n    for d in split_dataframe(df, chunk_size):\n        pool.apply_async(load_to, (d, 'stock'))\n# load from db\nwith Loader(engine):\n    for table in tables:\n        result = pool.apply_async(load_from_, (table, get_engine, ))\n        result_arr.append(result)\n```\nFor more details about examples, please see [here](https://github.com/TanyeeZhang/pd2ml/tree/master/examples).\n\n## Tips\n\nTo ensure that pd2ml works well, here are some tips and suggestions\n- It is essential to add parameters `infile_local=1` when connecting to the database\n- To make sure pd2ml works, it must be set `secure-file-priv=\"\"` in MySQL configuration file `my.ini` or `my.cnf`\n- Meanwhile, to maximize efficiency, the value `innodb_buffer_pool_size` may be adjusted appropriately in configuration file\n\n## Performance\n\nTo estimate the performance of pd2ml, I did a preliminary rough test on my laptop.\n\n#### Test Environment\n\n- MySQL 5.7\n- Windows 10\n- ThinkPad of 4 cores and 8G RAM\n\n#### Test Items\n\nI created a table named stock, this table has 6 fields, of which 2 primary keys, 3 indexes. Then\n\n- Use pd2ml and multi-value insert SQL (`INSERT INTO ... VALUES (), () ...`) to insert 10000/100000/1000000 records 10 times into the empty table respectively, the average elapsed time is shown in the figure\n\n![compare_1](https://user-images.githubusercontent.com/32212649/89024505-ce997380-d357-11ea-99c5-86049a12fe7d.png)\n\n- Use p2dml and multi-value replace SQL (`REPLACE INTO ... VALUES (), () ...`) to insert 10000/100000/1000000 records 10 times into the non-empty table, the average elapsed time is shown in the figure\n\n![compare_2](https://user-images.githubusercontent.com/32212649/89024771-38198200-d358-11ea-948f-5993fc5095e5.png)\n\n- Use pd2ml and pandas native method `read_sql_table` to read 10000/100000/1000000 records 10 times from the table as DATAFRAME, the average elapsed time is shown in the figure\n\n![compare_3](https://user-images.githubusercontent.com/32212649/89024806-48316180-d358-11ea-963d-6c29cefc14a7.png)\n\n#### Conclusion\n\nAs the amount of data increases, the speed advantage of pd2ml becomes more and more obvious. The efficiency of writing into the database is at least 20% faster, and reading from the databse is improved three to four times.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TanyeeZhang/pd2ml",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pd2ml",
    "package_url": "https://pypi.org/project/pd2ml/",
    "platform": "",
    "project_url": "https://pypi.org/project/pd2ml/",
    "project_urls": {
      "Homepage": "https://github.com/TanyeeZhang/pd2ml"
    },
    "release_url": "https://pypi.org/project/pd2ml/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python package that provides an efficient way to upload pandas DataFrame to MySQL and download from the database table into a DataFrame.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7934736,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f046034f536a9bb93bbf571a3304030a23e79bec3cc95568f2e06566403ea8ed",
          "md5": "fdd4a8d53dbb6d3956c961b990ef8aab",
          "sha256": "beb9f6695afab3534de525abb93b0eb01122a415ce4edcc11a5084a7ea1f65c9"
        },
        "downloads": -1,
        "filename": "pd2ml-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdd4a8d53dbb6d3956c961b990ef8aab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13071,
        "upload_time": "2020-08-11T09:35:49",
        "upload_time_iso_8601": "2020-08-11T09:35:49.306785Z",
        "url": "https://files.pythonhosted.org/packages/f0/46/034f536a9bb93bbf571a3304030a23e79bec3cc95568f2e06566403ea8ed/pd2ml-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "769509226db9b4d891bac20f0c982578123605aee9693c138a2405a80382200a",
          "md5": "b49bfdce893a5f62f28ce056003a21d3",
          "sha256": "60cf82290fc0d10b3d87dac7d533b0b6763a0b5d3cc13e1af799e581d1d9f7f2"
        },
        "downloads": -1,
        "filename": "pd2ml-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b49bfdce893a5f62f28ce056003a21d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12370,
        "upload_time": "2020-08-11T09:35:52",
        "upload_time_iso_8601": "2020-08-11T09:35:52.345153Z",
        "url": "https://files.pythonhosted.org/packages/76/95/09226db9b4d891bac20f0c982578123605aee9693c138a2405a80382200a/pd2ml-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f046034f536a9bb93bbf571a3304030a23e79bec3cc95568f2e06566403ea8ed",
        "md5": "fdd4a8d53dbb6d3956c961b990ef8aab",
        "sha256": "beb9f6695afab3534de525abb93b0eb01122a415ce4edcc11a5084a7ea1f65c9"
      },
      "downloads": -1,
      "filename": "pd2ml-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fdd4a8d53dbb6d3956c961b990ef8aab",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13071,
      "upload_time": "2020-08-11T09:35:49",
      "upload_time_iso_8601": "2020-08-11T09:35:49.306785Z",
      "url": "https://files.pythonhosted.org/packages/f0/46/034f536a9bb93bbf571a3304030a23e79bec3cc95568f2e06566403ea8ed/pd2ml-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "769509226db9b4d891bac20f0c982578123605aee9693c138a2405a80382200a",
        "md5": "b49bfdce893a5f62f28ce056003a21d3",
        "sha256": "60cf82290fc0d10b3d87dac7d533b0b6763a0b5d3cc13e1af799e581d1d9f7f2"
      },
      "downloads": -1,
      "filename": "pd2ml-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b49bfdce893a5f62f28ce056003a21d3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12370,
      "upload_time": "2020-08-11T09:35:52",
      "upload_time_iso_8601": "2020-08-11T09:35:52.345153Z",
      "url": "https://files.pythonhosted.org/packages/76/95/09226db9b4d891bac20f0c982578123605aee9693c138a2405a80382200a/pd2ml-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}