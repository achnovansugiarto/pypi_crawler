{
  "info": {
    "author": "Alvaro Sanchez-Gonzalez",
    "author_email": "sanchezgnzlz.alvaro@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "pynverse |PyPI version|\r\n=======================\r\n\r\nA module specialized on calculating the numerical inverse of any\r\ninvertible continuous function.\r\n\r\nRequirements\r\n------------\r\n\r\n|Scipy| |Numpy|\r\n\r\nInstall\r\n-------\r\n\r\nIn order to install this tool you'll need ``pip``:\r\n\r\n::\r\n\r\n    pip install pynverse\r\n\r\nUsage\r\n-----\r\n\r\nPynverse provides a main function ``inversefunc`` that calculates the\r\nnumerical inverse of a function ``f`` passed as the first argument in\r\nthe form of a callable.\r\n\r\n.. code:: python\r\n\r\n        >>> from pynverse import inversefunc\r\n\r\nIt can be used to calculate the inverse function at certain ``y_values``\r\npoints:\r\n\r\n.. code:: python\r\n\r\n        >>> cube = (lambda x: x**3)\r\n        >>> invcube = inversefunc(cube, y_values=3)\r\n        array(3.0000000063797567)\r\n\r\nOr to obtain a callable that will calculate the inverse values at any\r\nother points if ``y_values`` is not provided:\r\n\r\n.. code:: python\r\n\r\n        >>> invcube = inversefunc(cube)\r\n        >>> invcube(27)\r\n        array(3.0000000063797567)\r\n\r\nIt requires the function to be continuous and strictly monotonic (i.e.\r\npurely decreasing or purely increasing) within the domain of the\r\nfunction. By default, the domain includes all real numbers, but it can\r\nbe restricted to an inverval using the ``domain`` argument:\r\n\r\n.. code:: python\r\n\r\n        >>> import numpy as np\r\n        >>> inversefunc(np.cos, y_values=[1, 0, -1], # Should give [0, pi / 2, pi]\r\n        ...             domain=[0, np.pi])\r\n        array([ 0.        ,  1.57079632,  3.14159265])\r\n\r\nAdditionally, the argument ``open_domain`` can be used to specify the\r\nopen/closed character of each of the ends of the domain interval:\r\n\r\n.. code:: python\r\n\r\n        >>> inversefunc(np.log10, y_values=-2, # Should give 0.01\r\n        ...             domain=0, open_domain=[True, False])\r\n        array(0.0099999999882423)\r\n\r\nOr on both ends simultaneously:\r\n\r\n.. code:: python\r\n\r\n        >>> invtan = inversefunc(np.tan,\r\n        ...                      domain=[-np.pi / 2, np.pi / 2],\r\n        ...                      open_domain=True)\r\n        >>> invtan([1, 0, -1]) # Should give [pi / 4, 0, -pi / 4]\r\n        array([  7.85398163e-01,   1.29246971e-26,  -7.85398163e-01])\r\n\r\nAdditional parameters may be passed to the function for easier\r\nreusability of callables using the ``args`` argument:\r\n\r\n.. code:: python\r\n\r\n        >>> invsquare = inversefunc(np.power, args=(2), domain=0)\r\n        >>> invsquare([4, 16, 64])\r\n        array([ 2.,  4.,  8.])\r\n\r\nThe image of the function in the interval may be also provided for cases\r\nwhere the function is non continuous right at the end of an open\r\ninterval with the ``image`` argument:\r\n\r\n.. code:: python\r\n\r\n        >>> invmod = inversefunc(np.mod, args=(1), domain=[5,6], \r\n        ...                      open_domain=[False,True], image=[0,1])\r\n        >>> invmod([0.,0.3,0.5])\r\n        array([ 5. ,  5.3,  5.5])\r\n\r\nAdditionally an argument can be used to check for the number of digits\r\nof accuracy in the results, giving a warning in case this is not meet:\r\n\r\n.. code:: python\r\n\r\n        >>> inversefunc(np.log10, y_values=-8, # Should give 0.01\r\n        ...             domain=0, open_domain=True, accuracy=6)\r\n        pynverse\\inverse.py:195: RuntimeWarning: Results obtained with less than 6 decimal digits of accuracy\r\n        array(9.999514710830838e-09)\r\n\r\nAs it is compatible with arrays, it can very easily used to obtain the\r\ninverse for broad ranges. These are some examples of using the returned\r\nnumerical inverse callables with arrays to make plots, and compare them\r\nto the analytical inverse, each of them calculated as simply as:\r\n\r\n.. code:: python\r\n\r\n    log = lambda x: np.log10(x)\r\n    invlog = scipy.misc.inversefunc(log, domain=0, open_domain=True)\r\n    x1=np.linspace(0.00001,10,100)\r\n    x2=np.linspace(-5,1,100)\r\n    ax1.plot(x1,log(y1),'b-')\r\n    ax2.plot(x2,invlog(x2),'b-')\r\n\r\n    invlog_a = lambda x: 10**x\r\n    ax2.plot(x2,invlog_a(x2),'r--')\r\n\r\n.. figure:: https://cloud.githubusercontent.com/assets/12649253/19738042/cf22460a-9bad-11e6-9c17-6fdd6cda0991.png\r\n   :alt: \r\n\r\nIn particular, for the definition of piecewise functions, there is a\r\n``piecewise`` utility function provided that solves the issues of\r\nnp.piecewise when working with both scalars and arrays. For example, the\r\ninverse for the last plot was obtained as:\r\n\r\n.. code:: python\r\n\r\n    from pynverse import inversefunc, piecewise\r\n\r\n    pw=lambda x: piecewise(x,[x<1,(x>=1)*(x<3),x>=3],[lambda x: x, lambda x: x**2, lambda x: x+6])\r\n    invpw =inversefunc(pw) \r\n\r\nDisclaimer\r\n----------\r\n\r\nThe problem of calculating the numerical inverse of an arbitrary funtion\r\nin unlimited or open intervals is still an open question in applied\r\nmathematics. The main purpose of this package is not to be fast, or as\r\naccurate as it could be if the inverse was calculated specifically for a\r\nknown function, using more specialised techniques. The current\r\nimplementation essentially uses the existing tools in scipy to solve the\r\nparticular problem of finding the inverse of a function meeting the\r\ncontinuity and monotonicity conditions, but while it performs really\r\nwell it may fail under certain conditions. For example when inverting a\r\n``log10`` it is known to start giving inccacurate values when being\r\nasked to invert -10, which should correspond to 0.0000000001 (1e-10),\r\nbut gives instead 0.0000000000978 (0.978e-10).\r\n\r\nThe advantage about estimating the inverse function is that the accuracy\r\ncan always be verified by checking if f(finv(x))==x..\r\n\r\nDetails about the implementation\r\n--------------------------------\r\n\r\nThe summarized internal strategy is the following:\r\n\r\n1. Figure out if the function is increasing or decreasing. For this two\r\n   reference points ref1 and ref2 are needed:\r\n\r\n   -  In case of a finite interval, the points ref points are 1/4 and\r\n      3/4 through the interval.\r\n   -  In an infinite interval any two values work really.\r\n   -  If f(ref1)<f(ref2), the function is increasing, otherwise is\r\n      decreasing.\r\n\r\n2. Figure out the image of the function in the interval.\r\n\r\n   -  If values are provided, then those are used.\r\n   -  In a closed interval just calculate f(a) and f(b), where a and b\r\n      are the ends of the interval.\r\n   -  In an open interval try to calculate f(a) and f(b), if this works\r\n      those are used, otherwise it will be assume to be (-Inf, Inf).\r\n\r\n3. Built a bounded function with the following conditions:\r\n\r\n   -  bounded\\_f(x):\r\n\r\n      -  return -Inf if x below interval, and f is increasing.\r\n      -  return +Inf if x below interval, and f is decreasing.\r\n      -  return +Inf if x above interval, and f is increasing.\r\n      -  return -Inf if x above interval, and f is decreasing.\r\n      -  return f(x) otherwise\r\n\r\n4. If the required number y0 for the inverse is outside the image, raise\r\n   an exception.\r\n5. Find roots for bounded\\_f(x)-y0, by minimizing\r\n   (bounded\\_f(x)-y0)\\*\\*2, using the ``Brent`` method, making sure that\r\n   the algorithm for minimising starts in a point inside the original\r\n   interval by setting ref1, ref2 as brackets. As soon as if goes\r\n   outside the allowed intervals, bounded\\_f returns infinite, forcing\r\n   the algorithm to go back to search inside the interval.\r\n6. Check that the solutions are accurate and they meet f(x0)=y0 to some\r\n   desired precision, raising a warning otherwise.\r\n\r\n.. |PyPI version| image:: https://badge.fury.io/py/pynverse.svg\r\n   :target: https://badge.fury.io/py/pynverse\r\n.. |Scipy| image:: https://img.shields.io/badge/scipy-%3E=0.11-blue.svg\r\n.. |Numpy| image:: https://img.shields.io/badge/numpy-%3E=1.6-blue.svg\r\n\r\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/alvarosg/pynverse/tarball/0.1.4.4",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alvarosg/pynverse",
    "keywords": "inverse,function,numerical",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "pynverse",
    "package_url": "https://pypi.org/project/pynverse/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pynverse/",
    "project_urls": {
      "Download": "https://github.com/alvarosg/pynverse/tarball/0.1.4.4",
      "Homepage": "https://github.com/alvarosg/pynverse"
    },
    "release_url": "https://pypi.org/project/pynverse/0.1.4.4/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A library for calculating the numerical inverse of a function",
    "version": "0.1.4.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2445436,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a041b8a92fc0be9e34d429d15315ae25958213e67bb63c7a14d6e80dfcef2d1a",
          "md5": "ae5cb8dd90a7da583529e2fcef10b0d0",
          "sha256": "893c4c4daf7614e05179fcb36490adf8cd9eab6946621aa2459b58e6168e6626"
        },
        "downloads": -1,
        "filename": "pynverse-0.1.1.zip",
        "has_sig": false,
        "md5_digest": "ae5cb8dd90a7da583529e2fcef10b0d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7415,
        "upload_time": "2016-10-29T15:18:19",
        "upload_time_iso_8601": "2016-10-29T15:18:19.012025Z",
        "url": "https://files.pythonhosted.org/packages/a0/41/b8a92fc0be9e34d429d15315ae25958213e67bb63c7a14d6e80dfcef2d1a/pynverse-0.1.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9496ffd697f541a137792cff1a4e362ba5c5dab813789cbfdfc7ad01d6006b46",
          "md5": "6a396c466bbfb720068f882f4ae3969a",
          "sha256": "a4a77382fbd9c05ec25903971f48448a7a47e06315b299f87f5d3b8460efc82d"
        },
        "downloads": -1,
        "filename": "pynverse-0.1.4.zip",
        "has_sig": false,
        "md5_digest": "6a396c466bbfb720068f882f4ae3969a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13808,
        "upload_time": "2016-10-30T23:33:48",
        "upload_time_iso_8601": "2016-10-30T23:33:48.787229Z",
        "url": "https://files.pythonhosted.org/packages/94/96/ffd697f541a137792cff1a4e362ba5c5dab813789cbfdfc7ad01d6006b46/pynverse-0.1.4.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0acc1037345b32e1d5768f33d6f62a62f5a2aa9fd1cae6265f42943b3aedbfae",
          "md5": "5fa2a9e214c406b30a176fc9eef5ebf8",
          "sha256": "766c0de0f29c8bc6e48bf81c984a69b2dfdd5efd8d03756f34992e0583d4e96a"
        },
        "downloads": -1,
        "filename": "pynverse-0.1.4.1.zip",
        "has_sig": false,
        "md5_digest": "5fa2a9e214c406b30a176fc9eef5ebf8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13827,
        "upload_time": "2016-10-31T00:41:14",
        "upload_time_iso_8601": "2016-10-31T00:41:14.454580Z",
        "url": "https://files.pythonhosted.org/packages/0a/cc/1037345b32e1d5768f33d6f62a62f5a2aa9fd1cae6265f42943b3aedbfae/pynverse-0.1.4.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf3f3383654e31ee790871d607d9d9f74695818025ce696f6bb5ff001e937a7c",
          "md5": "7ebac61356ce6b1bd6660c249fbb9625",
          "sha256": "03027eae86fed4c0b11a08f99f91c1e65fcd02a0c089c8ba14709988972b72cb"
        },
        "downloads": -1,
        "filename": "pynverse-0.1.4.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7ebac61356ce6b1bd6660c249fbb9625",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8709,
        "upload_time": "2016-10-31T12:11:28",
        "upload_time_iso_8601": "2016-10-31T12:11:28.607350Z",
        "url": "https://files.pythonhosted.org/packages/bf/3f/3383654e31ee790871d607d9d9f74695818025ce696f6bb5ff001e937a7c/pynverse-0.1.4.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4228f442829c5c463fa050ef3327450e7e78e48ec1d2d3952938730064489a57",
          "md5": "49fd1b99680eb214c38cbab2e312016f",
          "sha256": "d010495686bb2d6dc7499df258f8dc39bd46cf0098f959d15a51e67723b12c9e"
        },
        "downloads": -1,
        "filename": "pynverse-0.1.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "49fd1b99680eb214c38cbab2e312016f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8624,
        "upload_time": "2016-10-31T10:42:58",
        "upload_time_iso_8601": "2016-10-31T10:42:58.288978Z",
        "url": "https://files.pythonhosted.org/packages/42/28/f442829c5c463fa050ef3327450e7e78e48ec1d2d3952938730064489a57/pynverse-0.1.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b390ca3ebc20effc817ad903068deaa96dfa2dae0c6b8acfeb99419ec235acae",
          "md5": "814d1852b3f7f3687846074fa82d422f",
          "sha256": "63851984c1c39354603649ef7ec7441096c9802bb2e3792ef3337ebd9d93253c"
        },
        "downloads": -1,
        "filename": "pynverse-0.1.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "814d1852b3f7f3687846074fa82d422f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8621,
        "upload_time": "2016-10-31T13:16:24",
        "upload_time_iso_8601": "2016-10-31T13:16:24.857268Z",
        "url": "https://files.pythonhosted.org/packages/b3/90/ca3ebc20effc817ad903068deaa96dfa2dae0c6b8acfeb99419ec235acae/pynverse-0.1.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88f8fb90087055b1502def9b6e835e80fa548996bf1439a81583e592f388f4c9",
          "md5": "e460a4ae7f9fa224646c51e46b8fd638",
          "sha256": "2f9804aa08b01ea9b4ade01234489799a842ded1f50cf1116bf5c59e89271569"
        },
        "downloads": -1,
        "filename": "pynverse-0.1.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e460a4ae7f9fa224646c51e46b8fd638",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8668,
        "upload_time": "2016-10-31T13:39:19",
        "upload_time_iso_8601": "2016-10-31T13:39:19.728081Z",
        "url": "https://files.pythonhosted.org/packages/88/f8/fb90087055b1502def9b6e835e80fa548996bf1439a81583e592f388f4c9/pynverse-0.1.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "README updated",
        "digests": {
          "blake2b_256": "a189e30242fef87a1083371c7140a237797d78bcfd8d2ca3cbf558676116304b",
          "md5": "81f9be6c5005ac707ff2e8814da1feac",
          "sha256": "4c4347f4281e69c38ab4fe4f8e2a3ed3c5981e7fa4fd5c0ebc59189afb08df57"
        },
        "downloads": -1,
        "filename": "pynverse-0.1.4.4_v2.tar.gz",
        "has_sig": false,
        "md5_digest": "81f9be6c5005ac707ff2e8814da1feac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8627,
        "upload_time": "2016-11-06T14:49:35",
        "upload_time_iso_8601": "2016-11-06T14:49:35.294730Z",
        "url": "https://files.pythonhosted.org/packages/a1/89/e30242fef87a1083371c7140a237797d78bcfd8d2ca3cbf558676116304b/pynverse-0.1.4.4_v2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88f8fb90087055b1502def9b6e835e80fa548996bf1439a81583e592f388f4c9",
        "md5": "e460a4ae7f9fa224646c51e46b8fd638",
        "sha256": "2f9804aa08b01ea9b4ade01234489799a842ded1f50cf1116bf5c59e89271569"
      },
      "downloads": -1,
      "filename": "pynverse-0.1.4.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e460a4ae7f9fa224646c51e46b8fd638",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8668,
      "upload_time": "2016-10-31T13:39:19",
      "upload_time_iso_8601": "2016-10-31T13:39:19.728081Z",
      "url": "https://files.pythonhosted.org/packages/88/f8/fb90087055b1502def9b6e835e80fa548996bf1439a81583e592f388f4c9/pynverse-0.1.4.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "README updated",
      "digests": {
        "blake2b_256": "a189e30242fef87a1083371c7140a237797d78bcfd8d2ca3cbf558676116304b",
        "md5": "81f9be6c5005ac707ff2e8814da1feac",
        "sha256": "4c4347f4281e69c38ab4fe4f8e2a3ed3c5981e7fa4fd5c0ebc59189afb08df57"
      },
      "downloads": -1,
      "filename": "pynverse-0.1.4.4_v2.tar.gz",
      "has_sig": false,
      "md5_digest": "81f9be6c5005ac707ff2e8814da1feac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8627,
      "upload_time": "2016-11-06T14:49:35",
      "upload_time_iso_8601": "2016-11-06T14:49:35.294730Z",
      "url": "https://files.pythonhosted.org/packages/a1/89/e30242fef87a1083371c7140a237797d78bcfd8d2ca3cbf558676116304b/pynverse-0.1.4.4_v2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}