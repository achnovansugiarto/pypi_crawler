{
  "info": {
    "author": "Johannes Fischer",
    "author_email": "<aulasparticularesdealemaosp@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Editors :: Text Processing",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Utilities"
    ],
    "description": "\n# Converts Python variables to C variables and vice versa\n\n\n\n\n\n```python\n\n$pip install pyc-dtypes-converter\n\nfrom pyc_dtypes_converter import (\n\n    convert_B_to_py,\n\n    convert_Bool_to_py,\n\n    convert_H_to_py,\n\n    convert_I_to_py,\n\n    convert_L_to_py,\n\n    convert_N_to_py,\n\n    convert_P_to_py,\n\n    convert_Q_to_py,\n\n    convert_b_to_py,\n\n    convert_bool_to_py,\n\n    convert_c_to_py,\n\n    convert_char_array_p_to_py,\n\n    convert_char_array_s_to_py,\n\n    convert_char_to_py,\n\n    convert_d_to_py,\n\n    convert_double_to_py,\n\n    convert_f_to_py,\n\n    convert_float_to_py,\n\n    convert_h_to_py,\n\n    convert_i_to_py,\n\n    convert_int_to_py,\n\n    convert_l_to_py,\n\n    convert_long_long_to_py,\n\n    convert_long_to_py,\n\n    convert_n_to_py,\n\n    convert_p_to_py,\n\n    convert_q_to_py,\n\n    convert_s_to_py,\n\n    convert_short_to_py,\n\n    convert_signed_char_to_py,\n\n    convert_size_t_to_py,\n\n    convert_ssize_t_to_py,\n\n    convert_to_c,\n\n    convert_to_c_B,\n\n    convert_to_c_Bool,\n\n    convert_to_c_H,\n\n    convert_to_c_I,\n\n    convert_to_c_L,\n\n    convert_to_c_N,\n\n    convert_to_c_P,\n\n    convert_to_c_Q,\n\n    convert_to_c_b,\n\n    convert_to_c_bool,\n\n    convert_to_c_c,\n\n    convert_to_c_char,\n\n    convert_to_c_char_array_p,\n\n    convert_to_c_char_array_s,\n\n    convert_to_c_d,\n\n    convert_to_c_double,\n\n    convert_to_c_f,\n\n    convert_to_c_float,\n\n    convert_to_c_h,\n\n    convert_to_c_i,\n\n    convert_to_c_int,\n\n    convert_to_c_l,\n\n    convert_to_c_long,\n\n    convert_to_c_long_long,\n\n    convert_to_c_n,\n\n    convert_to_c_p,\n\n    convert_to_c_q,\n\n    convert_to_c_s,\n\n    convert_to_c_short,\n\n    convert_to_c_signed_char,\n\n    convert_to_c_size_t,\n\n    convert_to_c_ssize_t,\n\n    convert_to_c_unsigned_char,\n\n    convert_to_c_unsigned_int,\n\n    convert_to_c_unsigned_long,\n\n    convert_to_c_unsigned_long_long,\n\n    convert_to_c_unsigned_short,\n\n    convert_to_c_void,\n\n    convert_to_py,\n\n    convert_unsigned_char_to_py,\n\n    convert_unsigned_int_to_py,\n\n    convert_unsigned_long_long_to_py,\n\n    convert_unsigned_long_to_py,\n\n    convert_unsigned_short_to_py,\n\n    convert_void_to_py,\n\n    print_all_dtypes,\n\n)\n\n\n\nretu = convert_to_c(\"char\", b\"1\", b\"2\")\n\nprint(retu)\n\nretu = convert_to_c(\"signed_char\", 44)\n\nprint(retu)\n\nretu = convert_to_c(\"signed_char\", 44, 66)\n\nprint(retu)\n\nretu = convert_to_c(\"b\", 44, 66)\n\nprint(retu)\n\n\n\nretu = convert_to_c(\"unsigned_char\", 44)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_char\", 44, 66)\n\nprint(retu)\n\nretu = convert_to_c(\"B\", 44, 66)\n\nprint(retu)\n\n\n\nretu = convert_to_c(\"Bool\", 1)\n\nprint(retu)\n\n\n\nretu = convert_to_c(\"short\", 158)\n\nprint(retu)\n\n\n\nretu = convert_to_c(\"unsigned_short\", 158, 211)\n\nprint(retu)\n\n\n\nretu = convert_to_c(\"int\", 158)\n\nprint(retu)\n\n\n\nretu = convert_to_c(\"int\", 1561)\n\nprint(retu)\n\nretu = convert_to_c(\"char\", b\"e\")\n\nprint(retu)\n\nretu = convert_to_c(\"c\", b\"x\")\n\nprint(retu)\n\nretu = convert_to_c(\"char\", b\"x\", b\"e\", b\"f\")\n\nprint(retu)\n\nretu = convert_to_c(\"c\", b\"x\")\n\nprint(retu)\n\nretu = convert_to_c(\"signed_char\", 1)\n\nprint(retu)\n\nretu = convert_to_c(\"b\", 121)\n\nprint(retu)\n\nretu = convert_to_c(\"signed_char\", 3, 5)\n\nprint(retu)\n\nretu = convert_to_c(\"b\", 16, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_char\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"B\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_char\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"B\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"Bool\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"?\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"Bool\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"?\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"short\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"h\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"short\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"h\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_short\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"H\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_short\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"H\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"int\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"i\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"int\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"i\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_int\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"I\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_int\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"I\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"long\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"l\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"long\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"l\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_long\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"L\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_long\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"L\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"long_long\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"q\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"long_long\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"q\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_long_long\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"Q\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"unsigned_long_long\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"Q\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"ssize_t\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"n\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"ssize_t\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"n\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"size_t\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"N\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"size_t\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"N\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"float\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"f\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"float\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"f\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"double\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"d\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"double\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"d\", 161, 11)\n\nprint(retu)\n\nretu = convert_to_c(\"char_array_s\", b\"1\")\n\nprint(retu)\n\nretu = convert_to_c(\"s\", b\"1\")\n\nprint(retu)\n\nretu = convert_to_c(\"char_array_s\", b\"161,212\")\n\nprint(retu)\n\nretu = convert_to_c(\"s\", b\"xx161,11\")\n\nprint(retu)\n\nretu = convert_to_c(\"char_array_p\", b\"1vbv61\")\n\nprint(retu)\n\nretu = convert_to_c(\"p\", b\"161\")\n\nprint(retu)\n\nretu = convert_to_c(\"char_array_p\", b\"161,212\")\n\nprint(retu)\n\nretu = convert_to_c(\"p\", b\"161,11\")\n\nprint(retu)\n\nretu = convert_to_c(\"void\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"P\", 161)\n\nprint(retu)\n\nretu = convert_to_c(\"void\", 161, 212)\n\nprint(retu)\n\nretu = convert_to_c(\"P\", 161, 11)\n\nprint(retu)\n\n\n\n\n\nargs = [b\"1\", b\"b\"]\n\nprint(f\"{convert_to_c_char(*args)=}\")\n\nprint(f\"{convert_to_c_c(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_signed_char(*args)=}\")\n\nprint(f\"{convert_to_c_b(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_unsigned_char(*args)=}\")\n\nprint(f\"{convert_to_c_B(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_Bool(*args)=}\")\n\nprint(f\"{convert_to_c_bool(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_short(*args)=}\")\n\nprint(f\"{convert_to_c_h(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_unsigned_short(*args)=}\")\n\nprint(f\"{convert_to_c_H(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_int(*args)=}\")\n\nprint(f\"{convert_to_c_i(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_unsigned_int(*args)=}\")\n\nprint(f\"{convert_to_c_I(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_long(*args)=}\")\n\nprint(f\"{convert_to_c_l(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_unsigned_long(*args)=}\")\n\nprint(f\"{convert_to_c_L(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_long_long(*args)=}\")\n\nprint(f\"{convert_to_c_q(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_unsigned_long_long(*args)=}\")\n\nprint(f\"{convert_to_c_Q(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_ssize_t(*args)=}\")\n\nprint(f\"{convert_to_c_n(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_size_t(*args)=}\")\n\nprint(f\"{convert_to_c_N(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_float(*args)=}\")\n\nprint(f\"{convert_to_c_f(*args)=}\")\n\nargs = [11, 55]\n\nprint(f\"{convert_to_c_double(*args)=}\")\n\nprint(f\"{convert_to_c_d(*args)=}\")\n\nargs = [b\"11\"]\n\nprint(f\"{convert_to_c_char_array_s(*args)=}\")\n\nprint(f\"{convert_to_c_s(*args)=}\")\n\nargs = [b\"11\"]\n\nprint(f\"{convert_to_c_char_array_p(*args)=}\")\n\nprint(f\"{convert_to_c_p(*args)=}\")\n\nargs = [11]\n\nprint(f\"{convert_to_c_void(*args)=}\")\n\nprint(f\"{convert_to_c_P(*args)=}\")\n\n\n\n\n\nprint(convert_char_to_py(b=b\"D\"))\n\nprint(convert_c_to_py(b=b\"D\"))\n\nprint(convert_signed_char_to_py(b=b\"D\"))\n\nprint(convert_b_to_py(b=b\"D\"))\n\nprint(convert_unsigned_char_to_py(b=b\"D\"))\n\nprint(convert_B_to_py(b=b\"D\"))\n\nprint(convert_Bool_to_py(b=b\"D\"))\n\nprint(convert_bool_to_py(b=b\"D\"))\n\nprint(convert_short_to_py(b=b\"11\"))\n\nprint(convert_h_to_py(b=b\"11\"))\n\nprint(convert_unsigned_short_to_py(b=b\"11\"))\n\nprint(convert_H_to_py(b=b\"11\"))\n\nprint(convert_int_to_py(b=b\"1111\"))\n\nprint(convert_i_to_py(b=b\"1111\"))\n\nprint(convert_unsigned_int_to_py(b=b\"2211\"))\n\nprint(convert_I_to_py(b=b\"2222\"))\n\nprint(convert_long_to_py(b=b\"2222\"))\n\nprint(convert_l_to_py(b=b\"1111\"))\n\nprint(convert_unsigned_long_to_py(b=b\"1111\"))\n\nprint(convert_L_to_py(b=b\"1111\"))\n\nprint(convert_long_long_to_py(b=b\"11112222\"))\n\nprint(convert_q_to_py(b=b\"11112222\"))\n\nprint(convert_unsigned_long_long_to_py(b=b\"22223333\"))\n\nprint(convert_Q_to_py(b=b\"11111111\"))\n\nprint(convert_ssize_t_to_py(b=b\"11111111\"))\n\nprint(convert_n_to_py(b=b\"11111111\"))\n\nprint(convert_size_t_to_py(b=b\"11111111\"))\n\nprint(convert_N_to_py(b=b\"11111111\"))\n\nprint(convert_float_to_py(b=b\"11111111\"))\n\nprint(convert_f_to_py(b=b\"11111111\"))\n\nprint(convert_double_to_py(b=b\"11111111\"))\n\nprint(convert_d_to_py(b=b\"11111111\"))\n\nprint(convert_char_array_s_to_py(b=b\"11111111\"))\n\nprint(convert_s_to_py(b=b\"11111111\"))\n\nprint(convert_char_array_p_to_py(b=b\"11111111\"))\n\nprint(convert_p_to_py(b=b\"11111111\"))\n\nprint(convert_void_to_py(b=b\"11111111\"))\n\nprint(convert_P_to_py(b=b\"11111111\"))\n\n\n\n\n\n# own format\n\nprint(convert_to_c(\">bhl\", 1, 2, 3))\n\nprint(convert_to_c(\"bhl\", 1, 2, 3))\n\nprint(convert_to_py(\"bhl\", b\"\\x01\\x00\\x02\\x00\\x03\\x00\\x00\\x00\"))\n\nprint(convert_to_py(\">bhl\", b\"\\x01\\x00\\x02\\x00\\x00\\x00\\x03\"))\n\n\n\nprint_all_dtypes()\n\n\n\n\n\n\n\nb'12'\n\nb','\n\nb',B'\n\nb',B'\n\nb','\n\nb',B'\n\nb',B'\n\nb'\\x01'\n\nb'\\x9e\\x00'\n\nb'\\x9e\\x00\\xd3\\x00'\n\nb'\\x9e\\x00\\x00\\x00'\n\nb'\\x19\\x06\\x00\\x00'\n\nb'e'\n\nb'x'\n\nb'xef'\n\nb'x'\n\nb'\\x01'\n\nb'y'\n\nb'\\x03\\x05'\n\nb'\\x10\\x0b'\n\nb'\\xa1'\n\nb'\\xa1'\n\nb'\\xa1\\xd4'\n\nb'\\xa1\\x0b'\n\nb'\\x01'\n\nb'\\x01'\n\nb'\\x01\\x01'\n\nb'\\x01\\x01'\n\nb'\\xa1\\x00'\n\nb'\\xa1\\x00'\n\nb'\\xa1\\x00\\xd4\\x00'\n\nb'\\xa1\\x00\\x0b\\x00'\n\nb'\\xa1\\x00'\n\nb'\\xa1\\x00'\n\nb'\\xa1\\x00\\xd4\\x00'\n\nb'\\xa1\\x00\\x0b\\x00'\n\nb'\\xa1\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\xd4\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x0b\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\xd4\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x0b\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\xd4\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x0b\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\xd4\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x0b\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd4\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd4\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd4\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd4\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\x00\\x00!C'\n\nb'\\x00\\x00!C'\n\nb'\\x00\\x00!C\\x00\\x00TC'\n\nb'\\x00\\x00!C\\x00\\x000A'\n\nb'\\x00\\x00\\x00\\x00\\x00 d@'\n\nb'\\x00\\x00\\x00\\x00\\x00 d@'\n\nb'\\x00\\x00\\x00\\x00\\x00 d@\\x00\\x00\\x00\\x00\\x00\\x80j@'\n\nb'\\x00\\x00\\x00\\x00\\x00 d@\\x00\\x00\\x00\\x00\\x00\\x00&@'\n\nb'1'\n\nb'1'\n\nb'1'\n\nb'x'\n\nb'\\x00'\n\nb'\\x00'\n\nb'\\x00'\n\nb'\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd4\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nb'\\xa1\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nconvert_to_c_char(*args)=b'1b'\n\nconvert_to_c_c(*args)=b'1b'\n\nconvert_to_c_signed_char(*args)=b'\\x0b7'\n\nconvert_to_c_b(*args)=b'\\x0b7'\n\nconvert_to_c_unsigned_char(*args)=b'\\x0b7'\n\nconvert_to_c_B(*args)=b'\\x0b7'\n\nconvert_to_c_Bool(*args)=b'\\x01\\x01'\n\nconvert_to_c_bool(*args)=b'\\x01\\x01'\n\nconvert_to_c_short(*args)=b'\\x0b\\x007\\x00'\n\nconvert_to_c_h(*args)=b'\\x0b\\x007\\x00'\n\nconvert_to_c_unsigned_short(*args)=b'\\x0b\\x007\\x00'\n\nconvert_to_c_H(*args)=b'\\x0b\\x007\\x00'\n\nconvert_to_c_int(*args)=b'\\x0b\\x00\\x00\\x007\\x00\\x00\\x00'\n\nconvert_to_c_i(*args)=b'\\x0b\\x00\\x00\\x007\\x00\\x00\\x00'\n\nconvert_to_c_unsigned_int(*args)=b'\\x0b\\x00\\x00\\x007\\x00\\x00\\x00'\n\nconvert_to_c_I(*args)=b'\\x0b\\x00\\x00\\x007\\x00\\x00\\x00'\n\nconvert_to_c_long(*args)=b'\\x0b\\x00\\x00\\x007\\x00\\x00\\x00'\n\nconvert_to_c_l(*args)=b'\\x0b\\x00\\x00\\x007\\x00\\x00\\x00'\n\nconvert_to_c_unsigned_long(*args)=b'\\x0b\\x00\\x00\\x007\\x00\\x00\\x00'\n\nconvert_to_c_L(*args)=b'\\x0b\\x00\\x00\\x007\\x00\\x00\\x00'\n\nconvert_to_c_long_long(*args)=b'\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x007\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nconvert_to_c_q(*args)=b'\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x007\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nconvert_to_c_unsigned_long_long(*args)=b'\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x007\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nconvert_to_c_Q(*args)=b'\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x007\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nconvert_to_c_ssize_t(*args)=b'\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x007\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nconvert_to_c_n(*args)=b'\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x007\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nconvert_to_c_size_t(*args)=b'\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x007\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nconvert_to_c_N(*args)=b'\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x007\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nconvert_to_c_float(*args)=b'\\x00\\x000A\\x00\\x00\\\\B'\n\nconvert_to_c_f(*args)=b'\\x00\\x000A\\x00\\x00\\\\B'\n\nconvert_to_c_double(*args)=b'\\x00\\x00\\x00\\x00\\x00\\x00&@\\x00\\x00\\x00\\x00\\x00\\x80K@'\n\nconvert_to_c_d(*args)=b'\\x00\\x00\\x00\\x00\\x00\\x00&@\\x00\\x00\\x00\\x00\\x00\\x80K@'\n\nconvert_to_c_char_array_s(*args)=b'1'\n\nconvert_to_c_s(*args)=b'1'\n\nconvert_to_c_char_array_p(*args)=b'\\x00'\n\nconvert_to_c_p(*args)=b'\\x00'\n\nconvert_to_c_void(*args)=b'\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nconvert_to_c_P(*args)=b'\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\n(b'D',)\n\n(b'D',)\n\n(68,)\n\n(68,)\n\n(68,)\n\n(68,)\n\n(True,)\n\n(True,)\n\n(12593,)\n\n(12593,)\n\n(12593,)\n\n(12593,)\n\n(825307441,)\n\n(825307441,)\n\n(825307698,)\n\n(842150450,)\n\n(842150450,)\n\n(825307441,)\n\n(825307441,)\n\n(825307441,)\n\n(3617008641886990641,)\n\n(3617008641886990641,)\n\n(3689348814725067314,)\n\n(3544668469065756977,)\n\n(3544668469065756977,)\n\n(3544668469065756977,)\n\n(3544668469065756977,)\n\n(3544668469065756977,)\n\n(2.5784852031307537e-09, 2.5784852031307537e-09)\n\n(2.5784852031307537e-09, 2.5784852031307537e-09)\n\n(9.730415951366742e-72,)\n\n(9.730415951366742e-72,)\n\n(b'11111111',)\n\n(b'11111111',)\n\n(b'1111111',)\n\n(b'1111111',)\n\n(3544668469065756977,)\n\n(3544668469065756977,)\n\nb'\\x01\\x00\\x02\\x00\\x00\\x00\\x03'\n\nb'\\x01\\x00\\x02\\x00\\x03\\x00\\x00\\x00'\n\n(1, 2, 3)\n\n(1, 2, 3)\n\nkey: char                        dtype: c\n\nkey: signed_char                 dtype: b\n\nkey: unsigned_char               dtype: B\n\nkey: Bool                        dtype: ?\n\nkey: short                       dtype: h\n\nkey: unsigned_short              dtype: H\n\nkey: int                         dtype: i\n\nkey: unsigned_int                dtype: I\n\nkey: long                        dtype: l\n\nkey: unsigned_long               dtype: L\n\nkey: long_long                   dtype: q\n\nkey: unsigned_long_long          dtype: Q\n\nkey: ssize_t                     dtype: n\n\nkey: size_t                      dtype: N\n\nkey: float                       dtype: f\n\nkey: double                      dtype: d\n\nkey: char_array_s                dtype: s\n\nkey: char_array_p                dtype: p\n\nkey: void                        dtype: P\n\nkey: c                           dtype: c\n\nkey: b                           dtype: b\n\nkey: B                           dtype: B\n\nkey: ?                           dtype: ?\n\nkey: h                           dtype: h\n\nkey: H                           dtype: H\n\nkey: i                           dtype: i\n\nkey: I                           dtype: I\n\nkey: l                           dtype: l\n\nkey: L                           dtype: L\n\nkey: q                           dtype: q\n\nkey: Q                           dtype: Q\n\nkey: n                           dtype: n\n\nkey: N                           dtype: N\n\nkey: f                           dtype: f\n\nkey: d                           dtype: d\n\nkey: s                           dtype: s\n\nkey: p                           dtype: p\n\nkey: P                           dtype: P\n\n\n\n\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hansalemaos/pyc_dtypes_converter",
    "keywords": "hex,calculate,C,convert",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyc-dtypes-converter",
    "package_url": "https://pypi.org/project/pyc-dtypes-converter/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyc-dtypes-converter/",
    "project_urls": {
      "Homepage": "https://github.com/hansalemaos/pyc_dtypes_converter"
    },
    "release_url": "https://pypi.org/project/pyc-dtypes-converter/0.10/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Converts Python variables to C variables and vice versa",
    "version": "0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16741046,
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82f9b22bd18f0618d4887c5902968389ebbe09d56e4bab8d069bcd39faf6c5e5",
          "md5": "81893c2b1dbe47942cfdc8fce83f46ca",
          "sha256": "dfc0b5964bb02b7a2b8e8daff58cb054c0b36fc3de24a9ddde26375b9c1dcd39"
        },
        "downloads": -1,
        "filename": "pyc_dtypes_converter-0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81893c2b1dbe47942cfdc8fce83f46ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8796,
        "upload_time": "2023-02-08T02:01:47",
        "upload_time_iso_8601": "2023-02-08T02:01:47.112438Z",
        "url": "https://files.pythonhosted.org/packages/82/f9/b22bd18f0618d4887c5902968389ebbe09d56e4bab8d069bcd39faf6c5e5/pyc_dtypes_converter-0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "844596be4c09810c69f5690efaff3143864774c9e2d152f5de04dd56ac037784",
          "md5": "ba7cb0be553d7e98f542f2e69bbb9094",
          "sha256": "20f609bb93efa57430e7a5623fe3782a108ab0ca674549bc87436e66b8099acf"
        },
        "downloads": -1,
        "filename": "pyc_dtypes_converter-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "ba7cb0be553d7e98f542f2e69bbb9094",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10199,
        "upload_time": "2023-02-08T02:01:49",
        "upload_time_iso_8601": "2023-02-08T02:01:49.251468Z",
        "url": "https://files.pythonhosted.org/packages/84/45/96be4c09810c69f5690efaff3143864774c9e2d152f5de04dd56ac037784/pyc_dtypes_converter-0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82f9b22bd18f0618d4887c5902968389ebbe09d56e4bab8d069bcd39faf6c5e5",
        "md5": "81893c2b1dbe47942cfdc8fce83f46ca",
        "sha256": "dfc0b5964bb02b7a2b8e8daff58cb054c0b36fc3de24a9ddde26375b9c1dcd39"
      },
      "downloads": -1,
      "filename": "pyc_dtypes_converter-0.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "81893c2b1dbe47942cfdc8fce83f46ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8796,
      "upload_time": "2023-02-08T02:01:47",
      "upload_time_iso_8601": "2023-02-08T02:01:47.112438Z",
      "url": "https://files.pythonhosted.org/packages/82/f9/b22bd18f0618d4887c5902968389ebbe09d56e4bab8d069bcd39faf6c5e5/pyc_dtypes_converter-0.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "844596be4c09810c69f5690efaff3143864774c9e2d152f5de04dd56ac037784",
        "md5": "ba7cb0be553d7e98f542f2e69bbb9094",
        "sha256": "20f609bb93efa57430e7a5623fe3782a108ab0ca674549bc87436e66b8099acf"
      },
      "downloads": -1,
      "filename": "pyc_dtypes_converter-0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "ba7cb0be553d7e98f542f2e69bbb9094",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10199,
      "upload_time": "2023-02-08T02:01:49",
      "upload_time_iso_8601": "2023-02-08T02:01:49.251468Z",
      "url": "https://files.pythonhosted.org/packages/84/45/96be4c09810c69f5690efaff3143864774c9e2d152f5de04dd56ac037784/pyc_dtypes_converter-0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}