{
  "info": {
    "author": "Gordon Vu",
    "author_email": "gordon.vu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "==================\nSea Cucumber 1.5.1\n==================\n:Info: A Django email backend for Amazon Simple Email Service, backed by django-celery_\n:Author: DUO Interactive, LLC\n:Inspired by: Harry Marr's django-ses_.\n:Status: **Unmaintained**. Let us know if you'd like to step in!\n\nA bird's eye view\n=================\nSea Cucumber is a mail backend for Django_. Instead of sending emails\nthrough a traditional SMTP mail server, Sea Cucumber routes email through\nAmazon Web Services' excellent Simple Email Service (SES_) via django-celery_.\n\nWhy Sea Cucumber/SES instead of SMTP?\n=====================================\nConfiguring, maintaining, and dealing with some complicated edge cases can be\ntime-consuming. Sending emails with Sea Cucumber might be attractive to you if:\n\n* You don't want to maintain mail servers.\n* Your mail server is slow or unreliable, blocking your views from rendering.\n* You need to send a high volume of email.\n* You don't want to have to worry about PTR records, Reverse DNS, email\n  whitelist/blacklist services.\n* You are already deployed on EC2 (In-bound traffic to SES is free from EC2\n  instances). This is not a big deal either way, but is an additional perk if \n  you happen to be on AWS.\n\nInstallation\n============\nAssuming you've got Django_ and django-celery_ installed, you'll need \nBoto_ 2.0b4 or higher. boto_ is a Python library that wraps the AWS API.\n\nYou can do the following to install boto_ 2.0b4 (we're using --upgrade here to\nmake sure you get 2.0b4)::\n\n    pip install --upgrade boto\n\nInstall Sea Cucumber::\n\n    pip install seacucumber\n\nAdd the following to your settings.py::\n\n    EMAIL_BACKEND = 'seacucumber.backend.SESBackend'\n\n    # These are optional -- if they're set as environment variables they won't\n    # need to be set here as well\n    AWS_ACCESS_KEY_ID = 'YOUR-ACCESS-KEY-ID'\n    AWS_SECRET_ACCESS_KEY = 'YOUR-SECRET-ACCESS-KEY'\n\n    # Make sure to do this if you want the ``ses_address`` management command.\n    INSTALLED_APPS = (\n        ...\n        'seacucumber'\n    )\n\nEmail Address Verification\n==========================\n\nBefore you can send email 'from' an email address through SES, you must first \nverify your ownership of it::\n\n\t./manage.py ses_address verify batman@gotham.gov\n\nAfter you've run the verification above you will need to check the email\naccount's inbox (from your mail client or provider's web interface) and click \nthe authorization link in the email Amazon sends you. After that, your address\nis ready to go.\n\nTo confirm the verified email is ready to go::\n\n\t./manage.py ses_address list\n\nTo remove a previously verified address::\n\n\t./manage.py ses_address delete batman@gotham.gov\n\nNow, when you use ``django.core.mail.send_mail`` from a verified email address, \nSea Cucumber will handle message delivery.\n\nRate Limiting\n=============\n\nIf you are a new SES user, your default quota will be 1,000 emails per 24\nhour period at a maximum rate of one email per second. Sea Cucumber defaults\nto enforcing the one email per second at the celery level, but you must not\nhave disabled celery rate limiting. \n\nIf you have this::\n\n    CELERY_DISABLE_RATE_LIMITS = True\n    \nChange it to this::\n\n    CELERY_DISABLE_RATE_LIMITS = False\n    \nThen check your SES max rate by running::\n\n    ./manage.py ses_usage\n    \nIf your rate limit is more than ``1.0/sec``, you'll need to set that numeric\nvalue in your ``CUCUMBER_RATE_LIMIT`` setting like so::\n\n    # Rate limit to three outgoing SES emails a second.\n    CUCUMBER_RATE_LIMIT = 3\n    \nFailure to follow the rate limits may result in BotoServerError exceptions\nbeing raised, which makes celery unhappy.\n\nAs a general note, your quota and max send rate will increase with usage, so\ncheck the ``ses_usage`` management command again at a later date after you've\nsent some emails. You'll need to manually bump up your rate settings in\n``settings.py``.\n\nRouting Tasks\n=============\nIf you want to route Sea Cucumber task to different queues.\n\nAdd this to setting::\n\n    CUCUMBER_ROUTE_QUEUE = 'YOUR-ROUTE-QUEUE'\n\nThen update the celery configuration for routes. Example celeryconfig.py::\n\n    CELERY_ROUTES = {\n        'seacucumber.tasks.#': {'queue': 'YOUR-ROUTE-QUEUE'},\n    }\n\nDKIM\n====\n\nUsing DomainKeys_ is entirely optional, however it is recommended by Amazon for\nauthenticating your email address and improving delivery success rate.  See\nhttp://docs.amazonwebservices.com/ses/latest/DeveloperGuide/DKIM.html.\nBesides authentication, you might also want to consider using DKIM in order to\nremove the `via email-bounces.amazonses.com` message shown to gmail users - \nsee http://support.google.com/mail/bin/answer.py?hl=en&answer=1311182.\n\nTo enable DKIM signing you should install the pydkim_ package and specify values\nfor the ``DKIM_PRIVATE_KEY`` and ``DKIM_DOMAIN`` settings.  You can generate a\nprivate key with a command such as ``openssl genrsa 1024`` and get the public key\nportion with ``openssl rsa -pubout <private.key``.  The public key should be\npublished to ``ses._domainkey.example.com`` if your domain is example.com.  You \ncan use a different name instead of ``ses`` by changing the ``DKIM_SELECTOR``\nsetting.\n\nThe SES relay will modify email headers such as `Date` and `Message-Id` so by\ndefault only the `From`, `To`, `Cc`, `Subject` headers are signed, not the full\nset of headers.  This is sufficient for most DKIM validators but can be overridden\nwith the ``DKIM_HEADERS`` setting.\n\n\nExample settings.py::\n\n   DKIM_DOMAIN = 'example.com'\n   DKIM_PRIVATE_KEY = '''\n   -----BEGIN RSA PRIVATE KEY-----\n   xxxxxxxxxxx\n   -----END RSA PRIVATE KEY-----\n   '''\n\nExample DNS record published to Route53 with boto:\n\n   route53 add_record ZONEID ses._domainkey.example.com. TXT '\"v=DKIM1; p=xxx\"' 86400\n\nDjango Builtin-in Error Emails\n==============================\n\nIf you'd like Django's `Builtin Email Error Reporting`_ to function properly\n(actually send working emails), you'll have to explicitly set the\n``SERVER_EMAIL`` setting to one of your SES-verified addresses. Otherwise, your\nerror emails will all fail and you'll be blissfully unaware of a problem.\n\n*Note:* You can use the included ``ses_address`` management command to handle\naddress verification.\n\nGetting Help\n============\n\nIf you have any questions, feel free to either post them to our\n`issue tracker`_.\n\n.. _django-ses: https://github.com/hmarr/django-ses\n.. _django-celery: http://ask.github.com/django-celery/\n.. _celery: http://docs.celeryproject.org/en/v2.2.5/index.html\n.. _Builtin Email Error Reporting: https://docs.djangoproject.com/en/dev/howto/error-reporting/\n.. _Django: http://djangoproject.com\n.. _Boto: http://boto.cloudhackers.com/\n.. _SES: http://aws.amazon.com/ses/\n.. _issue tracker: https://github.com/duointeractive/django-athumb/issues\n.. _DomainKeys: http://dkim.org/\n.. _pydkim: http://hewgill.com/pydkim/",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gordon86/sea-cucumber",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "seacucumber-py3",
    "package_url": "https://pypi.org/project/seacucumber-py3/",
    "platform": "any",
    "project_url": "https://pypi.org/project/seacucumber-py3/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/gordon86/sea-cucumber"
    },
    "release_url": "https://pypi.org/project/seacucumber-py3/1.5.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Django email backend for Amazon Simple Email Service, backed by celery.",
    "version": "1.5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1686842,
  "releases": {
    "1.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30d2ff3950bc0a4bd502c5d490ee6d17705a959b2b7d31c0723eca6825658ee4",
          "md5": "522e02a11a83f4158fc72f785b055d81",
          "sha256": "57f66896fa51209c27759ef5d4e6b8b92753c22b3d90a842072e27c3f111616a"
        },
        "downloads": -1,
        "filename": "seacucumber_py3-1.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "522e02a11a83f4158fc72f785b055d81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16126,
        "upload_time": "2015-08-21T04:09:35",
        "upload_time_iso_8601": "2015-08-21T04:09:35.896150Z",
        "url": "https://files.pythonhosted.org/packages/30/d2/ff3950bc0a4bd502c5d490ee6d17705a959b2b7d31c0723eca6825658ee4/seacucumber_py3-1.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f5fb659c15736fdeafb2b6766a2cedb4f10a2996c335857ed5212462e6dd187",
          "md5": "47632015cd7f606d07f42ec0d4d1007f",
          "sha256": "c143f175076c325f963b38c1b2e6f23b741da7e474fde135a4250b1c82f3fd40"
        },
        "downloads": -1,
        "filename": "seacucumber-py3-1.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "47632015cd7f606d07f42ec0d4d1007f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10766,
        "upload_time": "2015-08-21T04:09:41",
        "upload_time_iso_8601": "2015-08-21T04:09:41.737659Z",
        "url": "https://files.pythonhosted.org/packages/1f/5f/b659c15736fdeafb2b6766a2cedb4f10a2996c335857ed5212462e6dd187/seacucumber-py3-1.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30d2ff3950bc0a4bd502c5d490ee6d17705a959b2b7d31c0723eca6825658ee4",
        "md5": "522e02a11a83f4158fc72f785b055d81",
        "sha256": "57f66896fa51209c27759ef5d4e6b8b92753c22b3d90a842072e27c3f111616a"
      },
      "downloads": -1,
      "filename": "seacucumber_py3-1.5.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "522e02a11a83f4158fc72f785b055d81",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16126,
      "upload_time": "2015-08-21T04:09:35",
      "upload_time_iso_8601": "2015-08-21T04:09:35.896150Z",
      "url": "https://files.pythonhosted.org/packages/30/d2/ff3950bc0a4bd502c5d490ee6d17705a959b2b7d31c0723eca6825658ee4/seacucumber_py3-1.5.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f5fb659c15736fdeafb2b6766a2cedb4f10a2996c335857ed5212462e6dd187",
        "md5": "47632015cd7f606d07f42ec0d4d1007f",
        "sha256": "c143f175076c325f963b38c1b2e6f23b741da7e474fde135a4250b1c82f3fd40"
      },
      "downloads": -1,
      "filename": "seacucumber-py3-1.5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "47632015cd7f606d07f42ec0d4d1007f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10766,
      "upload_time": "2015-08-21T04:09:41",
      "upload_time_iso_8601": "2015-08-21T04:09:41.737659Z",
      "url": "https://files.pythonhosted.org/packages/1f/5f/b659c15736fdeafb2b6766a2cedb4f10a2996c335857ed5212462e6dd187/seacucumber-py3-1.5.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}