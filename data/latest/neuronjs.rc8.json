{
  "info": {
    "author": "Kael Zhang",
    "author_email": "i@kael.me",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": "|Build Status|\n\npython-neuronjs\n===============\n\nPython utilities and middleware for neuron.js\n\nneuronjs analyzes the dependencies from user defined facades according\nto the dependency tree, and outputs ``<script>`` tags and configurations\nfor `neuron.js <https://github.com/kaelzhang/neuron>`__\n\nThe dependency tree can be generated by\n`neuron-package-dependency <https://github.com/kaelzhang/neuron-package-dependency>`__\n\nInstall\n-------\n\n.. code:: sh\n\n    $ pip install neuronjs\n\nUsage\n-----\n\n.. code:: py\n\n    from neuronjs import Neuron\n\n    n = Neuron(\n      dependency_tree = dependency_tree,  # must defined\n      resolve = resolve,\n      version = version,\n      cache = cache,\n      debug = False)\n\n``neuronjs`` could be used either in template file or your python\ncontroller.\n\n`Here <./sample/sample-jinja.html>`__ is a sample Jinja2 template file.\n\n-  **dependency\\_tree** ``dict`` the ``json.loads()``\\ ed dependency\n   tree\n-  **resolve** ``function(id)=`` (optional) implements your own custom\n   resolver. ``resolve`` accepts one parameter ``id`` which can be\n   either a ``str`` of module id or a ``list`` of module ids. If a\n   ``str`` is passed in, the method should returns the resolved absolute\n   url of the module id. If ``id`` is a ``list``, an url of comboed\n   script files should be returned.\n-  **debug** ``function|bool=False`` tells neuronjs whether should\n   switch on debug mode. When on debug mode, no javascript files of\n   dependencies will be preloaded, and the output will not be\n   compressed.\n-  if ``debug`` is callable, neuronjs will use the return value of\n   method ``debug``\n-  if ``debug`` is a boolean value, and ``debug`` is true, the debug\n   mode will be on.\n-  **cache** ``dict=None`` if ``cache`` is defined, it should contains 3\n   methods:\n-  ``cache.has(key)`` returns ``bool``\n-  ``cache.get(key)`` looks up and returns the cached value by key\n-  ``cache.set(key, value)`` sets the value by key\n-  **version** ``str`` only works if ``cache`` is defined. neuronjs will\n   uses ``version`` to generate the key to cache the output result\n\nmodule id\n^^^^^^^^^\n\n.. code:: js\n\n    <name>@<version><path>  # for example: 'jquery@2.0.0/jquery.js'\n\nn.facade(entry, data=None, defer=False)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  **entry** ``str`` id of the entry module\n-  **data** ``dict=None`` the data of the facade, which will be passed\n   to the entry module.\n-  **defer** ``bool=False`` whether should defer the loading process of\n   the facade. If ``True``, the script of the facade and its\n   dependencies will not be loaded at the beginning of the page as much\n   as possible.\n\nRegisters a facade entry with ``data``. neuronjs will\n\nReturns ``''``\\ (empty string), so you can use this method in python\ntemplate\n\nn.combo(id...)\n^^^^^^^^^^^^^^\n\nMakes packages of ids to combine into a single file.\n\n-  id ``str`` the module id of commonjs module or css module.\n\n.. code:: js\n\n    n.combo('jquery', 'underscore')\n    n.combo('app-home/style.css', 'app-user/user.css')\n\nReturns ``''``\n\nn.css(id)\n^^^^^^^^^\n\nRegisters an css module, and tell neuronjs to output it on the page.\n\nReturns ``''``\n\nn.src(id)\n^^^^^^^^^\n\nReturns the absolute path of the corresponding module.\n\n--------------\n\n    Methods below are used in base template.\n\nn.output\\_scripts()\n^^^^^^^^^^^^^^^^^^^\n\nOutputs neuron.js, neuron initial configurations and the html of script\ntags.\n\nFor most cases, this method should be used in the base template file,\nsee `example <./sample/sample-jinja.html>`__.\n\nReturns ``str``\n\nn.output\\_facades()\n^^^^^^^^^^^^^^^^^^^\n\nOutputs the initialization of facades.\n\nReturns ``str``\n\nn.output\\_css()\n^^^^^^^^^^^^^^^\n\nOutputs the html of link elements of csses.\n\nFor most cases, this method should be used in the base template file,\nsee `example <./sample/sample-jinja.html>`__.\n\nReturns ``str``\n\nLicense\n-------\n\nMIT\n\n.. |Build Status| image:: https://travis-ci.org/kaelzhang/python-neuronjs.svg?branch=master\n   :target: https://travis-ci.org/kaelzhang/python-neuronjs",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kaelzhang/python-neuronjs",
    "keywords": "neuron.js middleware javascript loader facade",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "neuronjs",
    "package_url": "https://pypi.org/project/neuronjs/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/neuronjs/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/kaelzhang/python-neuronjs"
    },
    "release_url": "https://pypi.org/project/neuronjs/2.3.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "The python middleware for neuron.js",
    "version": "2.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2019948,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59260a8bcb53b78661a6776add8e5c6753561a01c154586dab54127634b1867a",
          "md5": "29d4ab76931357e4a7ed43c993c410a9",
          "sha256": "3ad58de01b085601c12e97bf866c04bfb7c2be42ffd054475ec75f0a26871b1c"
        },
        "downloads": -1,
        "filename": "neuronjs-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "29d4ab76931357e4a7ed43c993c410a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6569,
        "upload_time": "2015-11-27T05:55:07",
        "upload_time_iso_8601": "2015-11-27T05:55:07.229708Z",
        "url": "https://files.pythonhosted.org/packages/59/26/0a8bcb53b78661a6776add8e5c6753561a01c154586dab54127634b1867a/neuronjs-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "734a1c24722feaa362d2d402b20bedf40f7d1024cabdb439c7ffe8a895a158fa",
          "md5": "4178435407d6ac35284ebe453b2f2fa4",
          "sha256": "858e685bcb44ee92f1a9d4cd118a976a9ecbf4bc9ec565634627c49bc0925504"
        },
        "downloads": -1,
        "filename": "neuronjs-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4178435407d6ac35284ebe453b2f2fa4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7012,
        "upload_time": "2015-12-30T12:28:07",
        "upload_time_iso_8601": "2015-12-30T12:28:07.035896Z",
        "url": "https://files.pythonhosted.org/packages/73/4a/1c24722feaa362d2d402b20bedf40f7d1024cabdb439c7ffe8a895a158fa/neuronjs-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c09c2a350bfe49d71f98b6b3bce9edbe2956e10a2f26bc548092f0543697c1e",
          "md5": "be2bb6d19d6ecdacaa206dabe91f1f2a",
          "sha256": "12d875152d92ad687cc9e70007ca5ce5e8977f9fe70b877988a7785d93caf2f0"
        },
        "downloads": -1,
        "filename": "neuronjs-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "be2bb6d19d6ecdacaa206dabe91f1f2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7071,
        "upload_time": "2016-01-04T03:56:30",
        "upload_time_iso_8601": "2016-01-04T03:56:30.160808Z",
        "url": "https://files.pythonhosted.org/packages/6c/09/c2a350bfe49d71f98b6b3bce9edbe2956e10a2f26bc548092f0543697c1e/neuronjs-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca53ec02d062093dde5818b3311d45f0f6daf80b2bafbcbbaf13fe5bf551721d",
          "md5": "dddf90a4842bea7eedf8d4b13c7b4672",
          "sha256": "b53fd45b1e4c879cb04e2b017fe9df45be859d85aa9f11056f8a0b3154dd7d66"
        },
        "downloads": -1,
        "filename": "neuronjs-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dddf90a4842bea7eedf8d4b13c7b4672",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7436,
        "upload_time": "2016-01-13T04:14:33",
        "upload_time_iso_8601": "2016-01-13T04:14:33.653908Z",
        "url": "https://files.pythonhosted.org/packages/ca/53/ec02d062093dde5818b3311d45f0f6daf80b2bafbcbbaf13fe5bf551721d/neuronjs-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e18a936fe3c1ee66192b2250dc85040408171ff3364297bf5952039a97be47f",
          "md5": "e5b4b4a35eaf2a5c8ffc4c91efe29b3a",
          "sha256": "e89162f89e590b5e8490d06cd5dcf0e8b5b3849bc03d2b1aef9b22a93e0f37aa"
        },
        "downloads": -1,
        "filename": "neuronjs-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e5b4b4a35eaf2a5c8ffc4c91efe29b3a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7446,
        "upload_time": "2016-01-20T11:14:15",
        "upload_time_iso_8601": "2016-01-20T11:14:15.841032Z",
        "url": "https://files.pythonhosted.org/packages/7e/18/a936fe3c1ee66192b2250dc85040408171ff3364297bf5952039a97be47f/neuronjs-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "970748bfe4a7e91d98709658de12bbf4c5510a8b9d3888eb1d193be7ea4cfd00",
          "md5": "e74f5e82f2c257f8ade7fdc7f39cae23",
          "sha256": "116c57cc598164d36fd5efec83c8346debc8fe600b7cb039e6db97aa1643a723"
        },
        "downloads": -1,
        "filename": "neuronjs-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e74f5e82f2c257f8ade7fdc7f39cae23",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7450,
        "upload_time": "2016-02-04T11:40:07",
        "upload_time_iso_8601": "2016-02-04T11:40:07.532462Z",
        "url": "https://files.pythonhosted.org/packages/97/07/48bfe4a7e91d98709658de12bbf4c5510a8b9d3888eb1d193be7ea4cfd00/neuronjs-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78b976ed83f0c13adca7a87cf01385264dbb7d8ce82ec0e503598e25c8bc1d75",
          "md5": "47c4b54d88d9b3d088f029412904a241",
          "sha256": "c87d150ebaee9d9853ef6949cc9a6f858fcb55274acb849aad84a4305a920fa0"
        },
        "downloads": -1,
        "filename": "neuronjs-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "47c4b54d88d9b3d088f029412904a241",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7513,
        "upload_time": "2016-02-23T07:32:43",
        "upload_time_iso_8601": "2016-02-23T07:32:43.864897Z",
        "url": "https://files.pythonhosted.org/packages/78/b9/76ed83f0c13adca7a87cf01385264dbb7d8ce82ec0e503598e25c8bc1d75/neuronjs-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34d50367c33da8d34cf7816f86d397d3b84490e32918b87addce8ce7ab0e6c6d",
          "md5": "3541a725843de852e369b7ad9802fdae",
          "sha256": "4dd47d93310d6b4c48e26c6a06a670b7f52b69159236013e3d370334c0ca65a4"
        },
        "downloads": -1,
        "filename": "neuronjs-2.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3541a725843de852e369b7ad9802fdae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7519,
        "upload_time": "2016-03-22T04:27:36",
        "upload_time_iso_8601": "2016-03-22T04:27:36.631145Z",
        "url": "https://files.pythonhosted.org/packages/34/d5/0367c33da8d34cf7816f86d397d3b84490e32918b87addce8ce7ab0e6c6d/neuronjs-2.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34d50367c33da8d34cf7816f86d397d3b84490e32918b87addce8ce7ab0e6c6d",
        "md5": "3541a725843de852e369b7ad9802fdae",
        "sha256": "4dd47d93310d6b4c48e26c6a06a670b7f52b69159236013e3d370334c0ca65a4"
      },
      "downloads": -1,
      "filename": "neuronjs-2.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3541a725843de852e369b7ad9802fdae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7519,
      "upload_time": "2016-03-22T04:27:36",
      "upload_time_iso_8601": "2016-03-22T04:27:36.631145Z",
      "url": "https://files.pythonhosted.org/packages/34/d5/0367c33da8d34cf7816f86d397d3b84490e32918b87addce8ce7ab0e6c6d/neuronjs-2.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}