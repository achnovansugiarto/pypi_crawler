{
  "info": {
    "author": "John Ferrier",
    "author_email": "<jo.ferrier@northeastern.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "\n# ramanfitter\n\nThis package seeks to provide and easy and efficient matter for fitting Raman data with Lorentzian, Gaussian, or Voigt models.\n\nDeveloped by John Ferrier, NEU Physics (c) 2022\n\n## Quickstart Example\n\nFor a simple run,\n```python\nimport os\nimport numpy as np\nfrom ramanfitter import RamanFitter\n\nfilename    = os.path.join( 'path', 'to', 'data.csv' )      # Get File\ndata        = np.genfromtxt( filename, delimiter = ',' )    # Open File\n\nx           = data[ :, 0 ]                                  # Parse x-values\ny           = data[ :, 1 ]                                  # Parse y-values\n\nRF          = RamanFitter( x = x, y = y, autorun = True )   # Run Fitter automatically\n\ncomponents  = RF.comps                                      # Returns a dictionary of each curve plot\ncurveParams = RF.params                                     # Returns a dictionary of the parameters of each Lorentzian, Gaussian, or Voigt curve\nbestFitLine = RF.fit_line                                   # Returns the plot data of the model\n```\n\nFor more control over parameters\n\n```python\nimport os\nimport numpy as np\nfrom ramanfitter import RamanFitter\n\nfilename    = os.path.join( 'path', 'to', 'data.csv' )      # Get File\ndata        = np.genfromtxt( filename, delimiter = ',' )    # Open File\n\nx           = data[ :, 0 ]                                  # Parse x-values\ny           = data[ :, 1 ]                                  # Parse y-values\n\nRF          = RamanFitter( x = x, y = y, autorun = False )  # Run Fitter automatically\n\n\n''' Each step ran when autorun = False '''\nRF.NormalizeData()\nRF.Denoise( ShowPlot = True )\nRF.FindPeaks( showPlot = True )\nRF.FitData( type = 'Voigt', showPlot = True )\n\n\ncomponents  = RF.comps                                      # Returns a dictionary of each curve plot\ncurveParams = RF.params                                     # Returns a dictionary of the parameters of each Lorentzian, Gaussian, or Voigt curve\nbestFitLine = RF.fit_line                                   # Returns the plot data of the model\n```\n\n\nOn 0.0.3, a new Mapper feature is added for handling mapped data. This example below creates a 4K video across a sweep of frequencies.\n\n```\nfrom ramanfitter.mapper import Mapper\n\nhere    = os.path.abspath( os.path.dirname( __file__ ) )\nfname   = os.path.join( here, 'sample_map', 'sample.txt' )\nMP      = Mapper( file = fname, display_name = \"Sample 1\", output_path = os.path.join( here, 'sample_map' ), delimiter = ',', provided_img=img, makePlot=False, makeVideo=True, plotType='imshow', resolution = '4k')\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pypa/sampleproject",
    "keywords": "python,raman,fitter,raman fitter,lorentzian,gaussian,voigt",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ramanfitter",
    "package_url": "https://pypi.org/project/ramanfitter/",
    "platform": null,
    "project_url": "https://pypi.org/project/ramanfitter/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pypa/sampleproject/issues",
      "Homepage": "https://github.com/pypa/sampleproject"
    },
    "release_url": "https://pypi.org/project/ramanfitter/0.0.3/",
    "requires_dist": [
      "numpy",
      "scipy",
      "matplotlib",
      "lmfit"
    ],
    "requires_python": ">=3.6",
    "summary": "A Raman peak finder and model fitter",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15817671,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4a41681ef199481cc02963763abfd88058005178916f585453f1b74dcd91a5f",
          "md5": "0c8101ddac57a0d829d8a1b514165e75",
          "sha256": "27ae736a5a9d6bad505cd9a944249037913dbe645c7f8a1843b2f7a4a488099a"
        },
        "downloads": -1,
        "filename": "ramanfitter-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c8101ddac57a0d829d8a1b514165e75",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7671,
        "upload_time": "2022-05-19T08:07:34",
        "upload_time_iso_8601": "2022-05-19T08:07:34.317988Z",
        "url": "https://files.pythonhosted.org/packages/f4/a4/1681ef199481cc02963763abfd88058005178916f585453f1b74dcd91a5f/ramanfitter-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ccc05afb045ce7224e13a7b36e6bfc0dd7060d18ff7e1aad9216c099f93c31b",
          "md5": "01a03ae1279b1e0417d75fc0aa752ca7",
          "sha256": "2d2bb5529b5be868c1722ee96d8163b6b61c3662ac24b6ac9c4321effd7a5a4f"
        },
        "downloads": -1,
        "filename": "ramanfitter-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "01a03ae1279b1e0417d75fc0aa752ca7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8338,
        "upload_time": "2022-05-19T08:07:36",
        "upload_time_iso_8601": "2022-05-19T08:07:36.181393Z",
        "url": "https://files.pythonhosted.org/packages/3c/cc/05afb045ce7224e13a7b36e6bfc0dd7060d18ff7e1aad9216c099f93c31b/ramanfitter-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "947609a3d8486a621e494fc4617900c7efcf47971701db89fdc706634b8f58fd",
          "md5": "a34ee1741af388330187bb9431af2c39",
          "sha256": "d4509e7cd984b9ae530dab1de386b2c7a3530f38db2b25000e7f92ac5afcb264"
        },
        "downloads": -1,
        "filename": "ramanfitter-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a34ee1741af388330187bb9431af2c39",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7427,
        "upload_time": "2022-05-19T08:36:11",
        "upload_time_iso_8601": "2022-05-19T08:36:11.485389Z",
        "url": "https://files.pythonhosted.org/packages/94/76/09a3d8486a621e494fc4617900c7efcf47971701db89fdc706634b8f58fd/ramanfitter-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "139b9bed1ff266c57a970668c5a2fb2e524e7ccff0c948960e7ed8c9d110d7ec",
          "md5": "fb52b8a0dab1a5e824285e56deeed4e7",
          "sha256": "4fbaf3b9ee43ba994f14e9ab0dd1dc2f04fdddab48922036ef9df848c9f0e15a"
        },
        "downloads": -1,
        "filename": "ramanfitter-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fb52b8a0dab1a5e824285e56deeed4e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8116,
        "upload_time": "2022-05-19T08:36:13",
        "upload_time_iso_8601": "2022-05-19T08:36:13.839907Z",
        "url": "https://files.pythonhosted.org/packages/13/9b/9bed1ff266c57a970668c5a2fb2e524e7ccff0c948960e7ed8c9d110d7ec/ramanfitter-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "428841b13d17c8bd21f189714133b2e2c5a727f712b0d469f2ae98f3f39840e7",
          "md5": "613231d3ce08e961003148f98873cc76",
          "sha256": "b0ba9e60b9145819c4312391ed01896e1ff54b28f71abe653aadecc719329619"
        },
        "downloads": -1,
        "filename": "ramanfitter-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "613231d3ce08e961003148f98873cc76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12009,
        "upload_time": "2022-11-18T17:40:22",
        "upload_time_iso_8601": "2022-11-18T17:40:22.788820Z",
        "url": "https://files.pythonhosted.org/packages/42/88/41b13d17c8bd21f189714133b2e2c5a727f712b0d469f2ae98f3f39840e7/ramanfitter-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eeae73c5c018bf55368e4c6b175a4b5f6bdd235134aa1a134ebaceb56a21b1cb",
          "md5": "9a3b01de00e669b203ffbafc854360ca",
          "sha256": "fc96d51254ee675849c356c95129b1098e47d365dfc381ba65a586651bf390c5"
        },
        "downloads": -1,
        "filename": "ramanfitter-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9a3b01de00e669b203ffbafc854360ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12555,
        "upload_time": "2022-11-18T17:40:27",
        "upload_time_iso_8601": "2022-11-18T17:40:27.415836Z",
        "url": "https://files.pythonhosted.org/packages/ee/ae/73c5c018bf55368e4c6b175a4b5f6bdd235134aa1a134ebaceb56a21b1cb/ramanfitter-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "428841b13d17c8bd21f189714133b2e2c5a727f712b0d469f2ae98f3f39840e7",
        "md5": "613231d3ce08e961003148f98873cc76",
        "sha256": "b0ba9e60b9145819c4312391ed01896e1ff54b28f71abe653aadecc719329619"
      },
      "downloads": -1,
      "filename": "ramanfitter-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "613231d3ce08e961003148f98873cc76",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12009,
      "upload_time": "2022-11-18T17:40:22",
      "upload_time_iso_8601": "2022-11-18T17:40:22.788820Z",
      "url": "https://files.pythonhosted.org/packages/42/88/41b13d17c8bd21f189714133b2e2c5a727f712b0d469f2ae98f3f39840e7/ramanfitter-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eeae73c5c018bf55368e4c6b175a4b5f6bdd235134aa1a134ebaceb56a21b1cb",
        "md5": "9a3b01de00e669b203ffbafc854360ca",
        "sha256": "fc96d51254ee675849c356c95129b1098e47d365dfc381ba65a586651bf390c5"
      },
      "downloads": -1,
      "filename": "ramanfitter-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "9a3b01de00e669b203ffbafc854360ca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12555,
      "upload_time": "2022-11-18T17:40:27",
      "upload_time_iso_8601": "2022-11-18T17:40:27.415836Z",
      "url": "https://files.pythonhosted.org/packages/ee/ae/73c5c018bf55368e4c6b175a4b5f6bdd235134aa1a134ebaceb56a21b1cb/ramanfitter-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}