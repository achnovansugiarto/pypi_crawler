{
  "info": {
    "author": "",
    "author_email": "Daniel Jerrehian <danieljerrehian@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Introduction \nThis package can be used to simplify fetching and transforming data from the Google Analytics Data GA4 API. As of the time writing this, the GA4 API returns data in a Google object, which can be a hassle to parse and transform. Using this package, you can create a dictionary with your Google Analytics Property ID, as well as the desired Dimensions, Metrics, Order Bys, and Date Ranges you would like to query. By running the function `run_report_return_json` in `google_analytics_data_json.py`, you can call the GA4 API and retrieve data in JSON format. Using the Google GA4 Query Explorer, you can find all possible Metrics, Dimensions, Order Bys, and Date Ranges that can be used: https://ga-dev-tools.web.app/ga4/query-explorer/\n\n# Installation\n`pip install google-analytics-data-json`\n\n# Getting Started\nAfter installing the package in your virtual environment, add the `credentials.json` file to your project. Then, set an environment variable named `GOOGLE_APPLICATION_CREDENTIALS` equal to the path of the previously mentioned `credentials.json` file. I also suggest to set your Property ID as an environment variable as well.\n\n# Running The Project\nThe simpelest way to run the project is to import the function `run_report_return_json` from the file `google_analytics_data_json`. This function takes one parameter called an `analytics_dictionary`, which is used to fetch data from the API and return it in JSON format. The structure of the analytics dictionary should look like:\n\n```python\n{\n    \"property_id\": \"<your property_id>\",\n    \"dimension_names\": [\"date\", \"country\", \"deviceCategory\"],\n    \"metric_names\": [\"totalUsers\", \"newUsers\"], \n    \"order_by_names\": [\n        {\n            \"type\": \"dimension\", \n            \"value\": \"date\", \n            \"descending\": False\n        },\n        {\n            \"type\": \"dimension\",\n            \"value\": \"country\", \n            \"descending\": True\n        },\n        {\n            \"type\": \"metric\",\n            \"value\": \"newUsers\", \n            \"descending\": True\n        }\n    ],\n    \"date_range_values\": [\n        {\n            \"start_date\": \"2022-07-01\",\n            \"end_date\": \"2022-07-04\"\n        }\n    ]\n}\n```\n\nIt is worth noting that the `dimension_names`, `metric_names`, `order_by_names`, and `date_range_values` are list objects, with the `order_by_names` and `date_range_values` requiring nested dictionaries as shown above. \n\nAlthough multiple date ranges can be used, the results from the API can be confusing if the dimension `date` is used - therefore, I suggest only using one date range dictionary if you plan querying the `date` dimension.\n\nIf you would like to take advantage of only the API call or only the data transformation, you can import the classes `Ga4Request` from `create_ga4_request.py` or `TransformGa4Data` from `transform_ga4_data.py`. This allows you to control the exact methods which are called in each class, although in most cases you will use all of them.\n\n# Build and Test\nThe build and tests for the project are hosted here: https://github.com/DanielJerrehian/google_analytics_data_json <br>\nThe command `python -m unittest` can be used to run the unit tests. A coverage report can also be generated using `coverage run -m unittest` and then running `coverage html`.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License Copyright (c) 2022 Daniel Jerrehian Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "google-analytics-data-json",
    "package_url": "https://pypi.org/project/google-analytics-data-json/",
    "platform": null,
    "project_url": "https://pypi.org/project/google-analytics-data-json/",
    "project_urls": {
      "Bug Tracker": "https://github.com/DanielJerrehian/google_analytics_data_json/issues",
      "Homepage": "https://github.com/DanielJerrehian/google_analytics_data_json"
    },
    "release_url": "https://pypi.org/project/google-analytics-data-json/0.0.2/",
    "requires_dist": [
      "cachetools (==5.2.0)",
      "certifi (==2022.6.15)",
      "charset-normalizer (==2.1.0)",
      "google-analytics-data (==0.12.1)",
      "google-api-core (==2.8.2)",
      "google-auth (==2.9.0)",
      "googleapis-common-protos (==1.56.3)",
      "grpcio (==1.47.0)",
      "grpcio-status (==1.47.0)",
      "idna (==3.3)",
      "proto-plus (==1.20.6)",
      "protobuf (==3.20.1)",
      "pyasn1 (==0.4.8)",
      "pyasn1-modules (==0.2.8)",
      "python-dotenv (==0.20.0)",
      "requests (==2.28.1)",
      "rsa (==4.8)",
      "six (==1.16.0)",
      "urllib3 (==1.26.10)"
    ],
    "requires_python": ">=3.7",
    "summary": "A package to simplify fetching and transforming data from the Google Analytics Data GA4 API",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14461089,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afe9c51c0db6c925dbf5648c768d83a321428bf14b986b20c8177046c2b10c0b",
          "md5": "b891224c56ef0be92c47dcba0913e39a",
          "sha256": "142c26842ac9051bdc41a0f1131a9eaa7017fd747000433d8ea77aca63519087"
        },
        "downloads": -1,
        "filename": "google_analytics_data_json-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b891224c56ef0be92c47dcba0913e39a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6683,
        "upload_time": "2022-07-17T15:08:05",
        "upload_time_iso_8601": "2022-07-17T15:08:05.945476Z",
        "url": "https://files.pythonhosted.org/packages/af/e9/c51c0db6c925dbf5648c768d83a321428bf14b986b20c8177046c2b10c0b/google_analytics_data_json-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5087108201b43092f425785361105b52316ec278488ed0b7e5b79f53fcbf755a",
          "md5": "09801d7b71dfe4177e0a0ab76abb1d36",
          "sha256": "9b8b476eb05d526e203a6b86e8fa98657c502154ec9c88cc66c3b5c7c08d0841"
        },
        "downloads": -1,
        "filename": "google_analytics_data_json-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "09801d7b71dfe4177e0a0ab76abb1d36",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5842,
        "upload_time": "2022-07-17T15:08:07",
        "upload_time_iso_8601": "2022-07-17T15:08:07.468218Z",
        "url": "https://files.pythonhosted.org/packages/50/87/108201b43092f425785361105b52316ec278488ed0b7e5b79f53fcbf755a/google_analytics_data_json-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e02270d2fdb19f5ff5926f6117b7f2d1f801081a0e738145d0ae0de3bc0501d4",
          "md5": "5caf650390c6f8204d2d4e32953592ae",
          "sha256": "542ca5970006c5386f6e8d6dd6454ee471f0bd66f2cfe60c4fe604699dca0569"
        },
        "downloads": -1,
        "filename": "google_analytics_data_json-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5caf650390c6f8204d2d4e32953592ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6748,
        "upload_time": "2022-07-17T15:22:59",
        "upload_time_iso_8601": "2022-07-17T15:22:59.175489Z",
        "url": "https://files.pythonhosted.org/packages/e0/22/70d2fdb19f5ff5926f6117b7f2d1f801081a0e738145d0ae0de3bc0501d4/google_analytics_data_json-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb790460fdcff74b95de42dd71f05a390e32e5ba516f78185a85ab8c6835a3cf",
          "md5": "cc3d92de9405df1486fcff09e676d8a3",
          "sha256": "9d5aa3cb89911912d40207747b7c87cc116841ce40e57e6cd5835ea7f24d0789"
        },
        "downloads": -1,
        "filename": "google_analytics_data_json-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cc3d92de9405df1486fcff09e676d8a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5890,
        "upload_time": "2022-07-17T15:23:00",
        "upload_time_iso_8601": "2022-07-17T15:23:00.635179Z",
        "url": "https://files.pythonhosted.org/packages/bb/79/0460fdcff74b95de42dd71f05a390e32e5ba516f78185a85ab8c6835a3cf/google_analytics_data_json-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e02270d2fdb19f5ff5926f6117b7f2d1f801081a0e738145d0ae0de3bc0501d4",
        "md5": "5caf650390c6f8204d2d4e32953592ae",
        "sha256": "542ca5970006c5386f6e8d6dd6454ee471f0bd66f2cfe60c4fe604699dca0569"
      },
      "downloads": -1,
      "filename": "google_analytics_data_json-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5caf650390c6f8204d2d4e32953592ae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6748,
      "upload_time": "2022-07-17T15:22:59",
      "upload_time_iso_8601": "2022-07-17T15:22:59.175489Z",
      "url": "https://files.pythonhosted.org/packages/e0/22/70d2fdb19f5ff5926f6117b7f2d1f801081a0e738145d0ae0de3bc0501d4/google_analytics_data_json-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb790460fdcff74b95de42dd71f05a390e32e5ba516f78185a85ab8c6835a3cf",
        "md5": "cc3d92de9405df1486fcff09e676d8a3",
        "sha256": "9d5aa3cb89911912d40207747b7c87cc116841ce40e57e6cd5835ea7f24d0789"
      },
      "downloads": -1,
      "filename": "google_analytics_data_json-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cc3d92de9405df1486fcff09e676d8a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5890,
      "upload_time": "2022-07-17T15:23:00",
      "upload_time_iso_8601": "2022-07-17T15:23:00.635179Z",
      "url": "https://files.pythonhosted.org/packages/bb/79/0460fdcff74b95de42dd71f05a390e32e5ba516f78185a85ab8c6835a3cf/google_analytics_data_json-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}