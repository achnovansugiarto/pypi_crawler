{
  "info": {
    "author": "Luigi Petrucco @portugueslab",
    "author_email": "luigi.petrucco@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# BG-Space\nAnatomical space conventions made easy.\n\n[![Python Version](https://img.shields.io/pypi/pyversions/bg-space.svg)](https://pypi.org/project/bg-space)\n[![PyPI](https://img.shields.io/pypi/v/bg-space.svg)](https://pypi.org/project/bg-space)\n[![Build Status](https://travis-ci.com/brainglobe/bg-space.svg?branch=master)](https://travis-ci.com/brainglobe/bg-space)\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n[![Coverage Status](https://coveralls.io/repos/github/brainglobe/bg-space/badge.svg)](https://coveralls.io/github/brainglobe/bg-space)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4552537.svg)](https://doi.org/10.5281/zenodo.4552537)\n\n\n\nWorking with anatomical images, one often encounters the problem of matching the orientation of stacks with different conventions about axes orientation and order. Moreover, when multiple swaps and flips are involved, it can be annoying to map the same transformations to volumes and points (e.g., coordinates or meshes).\n\n`bg-space` provides a neat way of defining an anatomical space, and of operating stacks and point transformations between spaces.\n\nIf you use `bg-space` for your analyses, please cite its Zenodo DOI https://zenodo.org/record/4552537#.YDAFzi1Q2Rs!\n\n## Installation\n\nYou can install `bg-space` with:\n```\npip install bg-space\n```\n\n## Usage\nTo define a new anatomical space, it is sufficient to give the directions of the stack origin position:\n\n```python\nsource_origin = (\"Left\", \"Superior\", \"Anterior\")\ntarget_origin = (\"Inferior\", \"Posterior\", \"Right\")\n```\n\nA stack can be then easily transformed from the source to the target space:\n\n```python\nimport bg_space as bg\nimport numpy as np\nstack = np.random.rand(3, 2, 4)\n\nmapped_stack = bg.map_stack_to(source_origin, target_origin, stack)\n```\n\n\nThe transformation is handled only with numpy index operations; *i.e.*, no complex\nimage affine transformations are applied. This is often useful as the preparatory step for starting any kind of image registration.\n\nA shortened syntax can be used to define a space using initials of the origin directions:\n\n```python\nmapped_stack = bg.map_stack_to(\"lsa\", \"ipr\", stack)\n```\n\n---\n**NOTE**\n\nWhen you work with a stack, the origin is the upper left corner when you show the first element `stack[0, :, :]` with matplotlib or when you open the stack with ImageJ. First dimension is the one that you are slicing, the second the height of the image, and the third the width of the image.\n\n---\n\n## The `AnatomicalSpace` class\n\nSometimes, together with the stack we have to move a set of points (cell coordinates, meshes, etc.). This introduces the additional complexity of keeping track, together with the axes swaps and flips, of the change of the origin offset.\n\nTo handle this situation, we can define a source space using the `AnatomicalSpace`\nclass, specifying also the stack shape:\n\n```python\n\nstack = np.random.rand(3, 2, 4)  # a stack in source space\nannotations = np.array([[0, 0, 0], [2, 1, 3]])  # related point annotations\n\nsource_space = bg.AnatomicalSpace(target_origin, stack.shape)\n\nmapped_stack = source_space.map_stack_to(\"ipr\", stack)  # transform the stack\nmapped_annotations = source_space.map_points_to(\"ipr\", annotations)  # transform the points\n```\n\n\nThe points are transformed through the generation of a transformation matrix.\nFinally, if we want to log this matrix (e.g., to reconstruct the full transformations sequence of a registration), we can get it:\n\n```python\ntarget_space = bg.AnatomicalSpace(\"ipr\", stack.shape)\ntransformation_matrix = source_space.transformation_matrix_to(target_space)\n#Â equivalent to:\ntransformation_matrix = source_space.transformation_matrix_to(\"ipr\", stack.shape)\n```\n\nThe target get always be defined as a `bg.AnatomicalSpace` object, or a valid origin specification plus a shape (the shape is required only if axes flips are required).\n\n## Matching space resolutions and offsets\nThe `AnatomicalSpace` class can deal also with stack resampling/padding/cropping. This requires simply specifying values for resolutions and offsets when instantiating a `AnatomicalSpace` object. Once that is done, using `AnatomicalSpace.transformation_matrix_to` creating affine transformation matrices from one space to the other will be a piece of cake!\n\n```python\nsource_space = bgs.AnatomicalSpace(\"asl\", resolution=(2, 1, 2), offset=(1, 0, 0))\ntarget_space = bgs.AnatomicalSpace(\"sal\", resolution=(1, 1, 1), offset=(0, 0, 2))\nsource_space.transformation_matrix_to(target_space)\n```\n\nMoreover, we can now use those space objects to resample stacks, and to generate stacks matching a target shape with the correct padding/cropping simply by specifying a target offset:\n\n```python\nsource_space = bgs.AnatomicalSpace(\"asl\", resolution=(2, 1, 2), offset=(1, 0, 0))\ntarget_space = bgs.AnatomicalSpace(\"asl\", resolution=(1, 1, 1), shape=(5, 4, 2))  # we need a target shape\nsource_space.transformation_matrix_to(target_space, stack, to_target_shape=True)\n```\n\n\n## Easy iteration over projections\n\nFinally, another convenient feature of BGSpace is the possibility of iterating easily through the projections of the stack and generate section names and axes labels:\n\n```python\nsc = bg.AnatomicalSpace(\"asl\")  # origin for the stack to be plotted\n\nfor i, (plane, labels) in enumerate(zip(sc.sections, sc.axis_labels)):\n    axs[i].imshow(stack.mean(i))\n    \n    axs[i].set_title(f\"{plane.capitalize()} view\")\n    axs[i].set_ylabel(labels[0])\n    axs[i].set_xlabel(labels[1])\n```\n\n![](/docs/img/projections.png)\n\n## Contributing\nContributions are very welcome. Please see the [contributing guide](https://github.com/brainglobe/.github/blob/main/CONTRIBUTING.md).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brainglobe/bg-space",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bg-space",
    "package_url": "https://pypi.org/project/bg-space/",
    "platform": null,
    "project_url": "https://pypi.org/project/bg-space/",
    "project_urls": {
      "Homepage": "https://github.com/brainglobe/bg-space"
    },
    "release_url": "https://pypi.org/project/bg-space/0.6.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Anatomical space conventions made easy",
    "version": "0.6.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14072658,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91465c1168c8d224e1ba45f7c79ca3d0487f27e444806891dc8b42d2bdb63e4a",
          "md5": "56e8460415774cba0829f0aea90ea7cc",
          "sha256": "442d85c8ba4ec43fd7bd3d5ebfb68091fb7e42440ee93bc706607b30c86db193"
        },
        "downloads": -1,
        "filename": "bg_space-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "56e8460415774cba0829f0aea90ea7cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19407,
        "upload_time": "2020-07-08T19:19:25",
        "upload_time_iso_8601": "2020-07-08T19:19:25.585957Z",
        "url": "https://files.pythonhosted.org/packages/91/46/5c1168c8d224e1ba45f7c79ca3d0487f27e444806891dc8b42d2bdb63e4a/bg_space-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f11e74fdb98535fac9877adb43d5c3e943a5386131c1d29241bfd4b9d169523",
          "md5": "af89e2514a7f81e04ab7d192b9ebf1c6",
          "sha256": "0f7831bf978247efc338a5b07726c731eb148c49f5e18751e3f7a789beaf0dc8"
        },
        "downloads": -1,
        "filename": "bg_space-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "af89e2514a7f81e04ab7d192b9ebf1c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19404,
        "upload_time": "2020-07-08T19:24:57",
        "upload_time_iso_8601": "2020-07-08T19:24:57.312800Z",
        "url": "https://files.pythonhosted.org/packages/0f/11/e74fdb98535fac9877adb43d5c3e943a5386131c1d29241bfd4b9d169523/bg_space-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b14d88723f307d9c5e4a8ee335542760f70be037a0dabae9f6119bbf3a16a89",
          "md5": "1b002e85843f35a457781bda151d53cf",
          "sha256": "16b7c1ab2a3ba91571d0507c63470a8dee2a96b3493b080d3c08e06c00818866"
        },
        "downloads": -1,
        "filename": "bg_space-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1b002e85843f35a457781bda151d53cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9769,
        "upload_time": "2020-07-13T17:30:34",
        "upload_time_iso_8601": "2020-07-13T17:30:34.447055Z",
        "url": "https://files.pythonhosted.org/packages/9b/14/d88723f307d9c5e4a8ee335542760f70be037a0dabae9f6119bbf3a16a89/bg_space-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5c7954b1ea147eb1db155364a6af534a4795f8b5e922844e759ea43beed0dea",
          "md5": "aa6c573e8f5b47ee54a1f1aa42d3c668",
          "sha256": "d6ba8fb2ed200c4edb5c4a6f5101d54e53d5ca9e4848ff358742ee807e760a77"
        },
        "downloads": -1,
        "filename": "bg_space-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "aa6c573e8f5b47ee54a1f1aa42d3c668",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9787,
        "upload_time": "2020-07-23T21:15:29",
        "upload_time_iso_8601": "2020-07-23T21:15:29.371038Z",
        "url": "https://files.pythonhosted.org/packages/b5/c7/954b1ea147eb1db155364a6af534a4795f8b5e922844e759ea43beed0dea/bg_space-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "506057e73fb061eee3411fb04a611ca7be0ade99692622541ff672dd64e61ceb",
          "md5": "103b4d401bcf1b8dc3f80d7adf7b5798",
          "sha256": "0657b25eb73f8064ab177a52645de3fb80062e04eed7c30347ff369e90b88093"
        },
        "downloads": -1,
        "filename": "bg_space-0.4.4.tar.gz",
        "has_sig": false,
        "md5_digest": "103b4d401bcf1b8dc3f80d7adf7b5798",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9846,
        "upload_time": "2020-08-20T11:43:33",
        "upload_time_iso_8601": "2020-08-20T11:43:33.217517Z",
        "url": "https://files.pythonhosted.org/packages/50/60/57e73fb061eee3411fb04a611ca7be0ade99692622541ff672dd64e61ceb/bg_space-0.4.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78db9ca6ba198df8978ee8801484f4f51f7bf5729fc97feaca1050c1f9d1e379",
          "md5": "0ff8af90fd7dc88f021f6a9e3b5c991e",
          "sha256": "1e04e008f9c9bb189cca4bb5c9f2181eab0af86c5d39f4965d25399217ac1973"
        },
        "downloads": -1,
        "filename": "bg_space-0.4.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0ff8af90fd7dc88f021f6a9e3b5c991e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9868,
        "upload_time": "2020-08-21T11:11:45",
        "upload_time_iso_8601": "2020-08-21T11:11:45.866374Z",
        "url": "https://files.pythonhosted.org/packages/78/db/9ca6ba198df8978ee8801484f4f51f7bf5729fc97feaca1050c1f9d1e379/bg_space-0.4.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfaf5867fec099eb04f68c175af56b27a88019ddfe3a7fd0a5da13c930b4ecca",
          "md5": "c66259a887c50195a2c04ce0b83081f5",
          "sha256": "dc5c1a7d8d108491d6b94456b1edec90345412072379fe92f0f0da29470cc280"
        },
        "downloads": -1,
        "filename": "bg_space-0.4.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c66259a887c50195a2c04ce0b83081f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9871,
        "upload_time": "2020-09-02T16:39:07",
        "upload_time_iso_8601": "2020-09-02T16:39:07.869171Z",
        "url": "https://files.pythonhosted.org/packages/bf/af/5867fec099eb04f68c175af56b27a88019ddfe3a7fd0a5da13c930b4ecca/bg_space-0.4.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2ebb32a5c28b786b298af62261d202c2d1137b2a2c011e297fb783fa1ec74c8",
          "md5": "991c3e8f5abab4f8681d5cb05a36319b",
          "sha256": "87d3cfcf59a0a67fbd87b0f38b01be219e32f9e2b779749e6f7741f69925f835"
        },
        "downloads": -1,
        "filename": "bg_space-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "991c3e8f5abab4f8681d5cb05a36319b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12449,
        "upload_time": "2020-09-03T12:54:00",
        "upload_time_iso_8601": "2020-09-03T12:54:00.571265Z",
        "url": "https://files.pythonhosted.org/packages/b2/eb/b32a5c28b786b298af62261d202c2d1137b2a2c011e297fb783fa1ec74c8/bg_space-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e1e490210c3f4872d5328721046aa7868f0745f81e84c1fa97d831ad3b704ee",
          "md5": "ce792d177379d5ad0786190f3fe99b15",
          "sha256": "2fcf3d741b95aaed21dd60a7526aafbcf541887d323d1e5019dbeb0300c6c759"
        },
        "downloads": -1,
        "filename": "bg_space-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ce792d177379d5ad0786190f3fe99b15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12528,
        "upload_time": "2022-06-08T18:38:30",
        "upload_time_iso_8601": "2022-06-08T18:38:30.618344Z",
        "url": "https://files.pythonhosted.org/packages/8e/1e/490210c3f4872d5328721046aa7868f0745f81e84c1fa97d831ad3b704ee/bg_space-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e1e490210c3f4872d5328721046aa7868f0745f81e84c1fa97d831ad3b704ee",
        "md5": "ce792d177379d5ad0786190f3fe99b15",
        "sha256": "2fcf3d741b95aaed21dd60a7526aafbcf541887d323d1e5019dbeb0300c6c759"
      },
      "downloads": -1,
      "filename": "bg_space-0.6.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ce792d177379d5ad0786190f3fe99b15",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12528,
      "upload_time": "2022-06-08T18:38:30",
      "upload_time_iso_8601": "2022-06-08T18:38:30.618344Z",
      "url": "https://files.pythonhosted.org/packages/8e/1e/490210c3f4872d5328721046aa7868f0745f81e84c1fa97d831ad3b704ee/bg_space-0.6.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}