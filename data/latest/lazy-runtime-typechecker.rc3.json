{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Runtime typechecker for Python methods\nThis package provides a simple wrapper for methods to enforce type checking at runtime\n\n![PyPi publishing](https://github.com/lzMeMod/runtime-typechecker/actions/workflows/python-publish.yml/badge.svg)\n\n<!-- toc -->\n\n- [Limitations](#limitations)\n- [Installation](#installation)\n- [Basic Usage](#basic-usage)\n- [Documentation](#documentation)\n  * [init_check: bool](#init_check-bool)\n  * [check_input_args: bool = True](#check_input_args-bool--true)\n  * [check_return_value: bool = True](#check_return_value-bool--true)\n  * [check_generic_types: bool = True](#check_generic_types-bool--true)\n  * [defined_by_class: bool = False](#defined_by_class-bool--false)\n- [Exception](#exception)\n\n<!-- tocstop -->\n\n## Limitations\nLet's talk about the limitations of this package first\n* The type checking only works with the new python 3.10 syntax. For older versions basic type \nchecking still works. But `Generics` and `Unions` are not working with the old systax. Have a look \nat [PEP 604](https://peps.python.org/pep-0604/) for more information.\n* Performance: Of course checking something at runtime comes with a performance penalty. This module\nis intended to be used for only a few methods were type checking is absolutely necessary. If you need typechecking for \neverything consider using something like [mypy](https://github.com/python/mypy)\n* Non-callable object: normal function are callable object in python but a function with the `@classmethod` decorator\nis not callable. This Package **only** supports callable objects.\n\n## Installation\n```bash\npip install lazy_runtime_typechecker\n```\n\n## Basic Usage\nThis module contains one wrapper. This wrapper can be used to type check a function.\n\n```python\nfrom lazy_runtime_typechecker import static_typed\n\n@static_typed(init_check=True)\ndef my_function(x: str) -> str:\n    return x\n\nif __name__ == '__main__':\n    my_function(x=\"hello world\") # ok\n    my_function(12) # will raise an exception\n```\n## Documentation\nThe `@static_typed` wrapper takes different arguments to configure how the types are checked.\nThe default is always `True` because the assumption is, that if someone adds this wrapper to a \nfunction, they want to be really sure that nearly all cases are checked. Of course every single \nparameter that is set to true will add a performance penalty to the type checker (except `defined_by_class`).\n\n### init_check: bool\nIf the parameter is set to true the signature of the arguments and the return type is checked even\nbefore the first call. Also, the default values are checked against the signature of the arguments.  \nExample:\n\n```python\nfrom lazy_runtime_typechecker import static_typed\n\n@static_typed(init_check=False)\ndef my_function(x: str = 12) -> str:\n    return x\n# this will not raise an exception\n\n@static_typed(init_check=True)\ndef my_function(x: str = 12) -> str:\n    return x\n# this will raise an exception because 12 is not a str\n\n@static_typed(init_check=True)\ndef my_function(x: str = \"hi\"):\n    return x\n# this will raise an exception because no return type was specified\n```\nThe exception that is raised for the initial validation is from type `runtime_typechecker.TypeingError`.\nAll other exceptions from this module are inheritance form this exception.\n\n### check_input_args: bool = True\nIf this parameter is set to `True` then the input values are checked each time the function is \ncalled. The exception that is raised by an input validation is from type `runtime_typechecker.InputTypeingError`.\n\n```python\nfrom lazy_runtime_typechecker import static_typed, InputTypeingError\n\n@static_typed(init_check=True, check_input_args=False)\ndef my_function(x: str = \"hi\"):\n    return x\n# this will not raise an exception\nmy_function(12) \n\n@static_typed(init_check=True, check_input_args=True)\ndef my_function(x: str = \"hi\"):\n    return x\n# this will raise an exception\nmy_function(12) \n\n# or catch the exception\ntry:\n    my_function(12)\nexcept InputTypeingError:\n    pass\n```\n\n### check_return_value: bool = True\nIf this parameter is set to `True` then the return value is checked each time the function is \ncalled. The exception that is raised by an input validation is from type `runtime_typechecker.InputTypeingError`.\n\n```python\nfrom lazy_runtime_typechecker import static_typed, OutputTypeingError\n\n@static_typed(init_check=True, check_return_value=False)\ndef my_function(x: int) -> int:\n    return str(x)\n# this will not raise an exception\nmy_function(12)\n\n@static_typed(init_check=True, check_return_value=True)\ndef my_function(x: int) -> int:\n    return str(x)\n# this will raise an exception\nmy_function(12)\n\n# or catch the exception\ntry:\n    my_function(12)\nexcept OutputTypeingError:\n    pass\n```\n\n### check_generic_types: bool = True\nUntil now all examples only showed some basic types. But python also has a rich selection of types to\nrepresent nearly every possible typing expression. Of course with these more complex and nested types\nthe performance penalty increases. If this parameter is set to `True` generic types are also check \nin full depth. If set to `False` only the first level of the generic type is matched. This behavior\nis applied for the input and the output stream.\n\n```python\nfrom lazy_runtime_typechecker import static_typed\n\n@static_typed(init_check=True, check_generic_types=False)\ndef my_function(x: list[str]) -> list[str]:\n    return x\n# this will not raise an exception\nmy_function([12, \"hello world\"])\n\n@static_typed(init_check=True, check_generic_types=True)\ndef my_function(x: list[str]) -> list[str]:\n    return x\n# this will raise an exception\nmy_function([12, \"hello world\"])\n\n\n# also multiple level of depth are supported\n@static_typed(init_check=True, check_generic_types=True)\ndef my_function(x: tuple[str | list[int | float]]) -> dict[str, int]:\n    return {\"abc\": 12}\n```\n\n### defined_by_class: bool = False\nIf a method is defined by a class, then set this parameter to True. This means the first parameter for passing the \ninstance of the class to the method is not checked.\n```python\nfrom lazy_runtime_typechecker import static_typed\n\nclass MyTestClass:\n    @static_typed(init_check=True, defined_by_class=True)\n    def my_function(self, x: str) -> int:\n        return int(x)\n\n\n    @static_typed(init_check=True, defined_by_class=False)\n    @staticmethod\n    def my_static_function(x: str) -> str:\n        return x\n\n    # this does not work because a class method is not callable\n    @static_typed(init_check=True, defined_by_class=False)\n    @classmethod\n    def my_class_method(cls, x: str) -> str:\n        return cls()\n```\n\n## Exception\nThree exception are part of this module.\n* `TypeingError(TypeError)`: is the base exception\n* `InputTypeingError(TypeingError)`: this exception is raised if an input parameter validation fails\n* `OutputTypeingError(TypeingError)`: this exception is raised if a return value validation fails\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lzMeMod/runtime-typechecker",
    "keywords": "typing,runtime,typechecker",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "lazy-runtime-typechecker",
    "package_url": "https://pypi.org/project/lazy-runtime-typechecker/",
    "platform": null,
    "project_url": "https://pypi.org/project/lazy-runtime-typechecker/",
    "project_urls": {
      "Homepage": "https://github.com/lzMeMod/runtime-typechecker"
    },
    "release_url": "https://pypi.org/project/lazy-runtime-typechecker/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple runtime typechecker",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14818060,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a3e8c2da65ed0dd295087fb3e7884990b8b1c346d8c5a1acd78d387e90faab4",
          "md5": "21d9646cb4fefb247eb6be8093a1c3dc",
          "sha256": "d7bf49db0b24f5433ed4d10b5ba85593d29c058529639135cb08461127735585"
        },
        "downloads": -1,
        "filename": "lazy_runtime_typechecker-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21d9646cb4fefb247eb6be8093a1c3dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6808,
        "upload_time": "2022-07-22T23:03:11",
        "upload_time_iso_8601": "2022-07-22T23:03:11.846384Z",
        "url": "https://files.pythonhosted.org/packages/9a/3e/8c2da65ed0dd295087fb3e7884990b8b1c346d8c5a1acd78d387e90faab4/lazy_runtime_typechecker-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc9966d7c53eb7c6c1d6b62c00f2385c13eff898c05d35a1b33ededeb5738de4",
          "md5": "a1f0a315e98f6f8d18f9a0ab6b705112",
          "sha256": "68e8b2aa774b130b5da0fbcd39f813618e46eace3996784ce30086defa2fbdc9"
        },
        "downloads": -1,
        "filename": "lazy_runtime_typechecker-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a1f0a315e98f6f8d18f9a0ab6b705112",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5669,
        "upload_time": "2022-07-22T23:03:13",
        "upload_time_iso_8601": "2022-07-22T23:03:13.101406Z",
        "url": "https://files.pythonhosted.org/packages/dc/99/66d7c53eb7c6c1d6b62c00f2385c13eff898c05d35a1b33ededeb5738de4/lazy_runtime_typechecker-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1674fb8eec8f86a96184973689240e5843ff19a06fc9a8f99f31af8f3ba7e666",
          "md5": "786e8a031a3cdd79367eb0918ccc4a9b",
          "sha256": "fdc914daa446110541acd2b30c04df1e2cc26927d8f9dca25f1efd12adf719bf"
        },
        "downloads": -1,
        "filename": "lazy_runtime_typechecker-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "786e8a031a3cdd79367eb0918ccc4a9b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7606,
        "upload_time": "2022-08-19T22:16:12",
        "upload_time_iso_8601": "2022-08-19T22:16:12.257185Z",
        "url": "https://files.pythonhosted.org/packages/16/74/fb8eec8f86a96184973689240e5843ff19a06fc9a8f99f31af8f3ba7e666/lazy_runtime_typechecker-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da7a08e623e1d634d937d36a9bb4e9b8c1eda169ebf29530312d64dac422bbca",
          "md5": "8cbf55f27851486650ef1700fe4a0c54",
          "sha256": "dcfb7eb662424823c5c859708fda0a17246de5874e315d50bb4ecd0e4e48c243"
        },
        "downloads": -1,
        "filename": "lazy_runtime_typechecker-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8cbf55f27851486650ef1700fe4a0c54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6590,
        "upload_time": "2022-08-19T22:16:13",
        "upload_time_iso_8601": "2022-08-19T22:16:13.779188Z",
        "url": "https://files.pythonhosted.org/packages/da/7a/08e623e1d634d937d36a9bb4e9b8c1eda169ebf29530312d64dac422bbca/lazy_runtime_typechecker-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05720b5949e7a5f0a2c23f7c87de0be2abbb16af49530c07eba1e72984d42edc",
          "md5": "0335555debe3c676eaf8e51b1e6ea9c5",
          "sha256": "3881a90038efd3b09d355e3ae70171a23f40e5239f18e8a1f72256ab02b701c8"
        },
        "downloads": -1,
        "filename": "lazy_runtime_typechecker-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0335555debe3c676eaf8e51b1e6ea9c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7610,
        "upload_time": "2022-08-19T22:23:33",
        "upload_time_iso_8601": "2022-08-19T22:23:33.987238Z",
        "url": "https://files.pythonhosted.org/packages/05/72/0b5949e7a5f0a2c23f7c87de0be2abbb16af49530c07eba1e72984d42edc/lazy_runtime_typechecker-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aea355877e8423cbfb77f810dde63e5f80b92a5b3ffa20dc7a118348ddf44551",
          "md5": "287c16cadc33eabbfe16fe6b2303278d",
          "sha256": "7a14cc0bb582050215c71144bb974ffa5879639011f6592bc89e89860e0af18e"
        },
        "downloads": -1,
        "filename": "lazy_runtime_typechecker-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "287c16cadc33eabbfe16fe6b2303278d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6601,
        "upload_time": "2022-08-19T22:23:35",
        "upload_time_iso_8601": "2022-08-19T22:23:35.477335Z",
        "url": "https://files.pythonhosted.org/packages/ae/a3/55877e8423cbfb77f810dde63e5f80b92a5b3ffa20dc7a118348ddf44551/lazy_runtime_typechecker-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05720b5949e7a5f0a2c23f7c87de0be2abbb16af49530c07eba1e72984d42edc",
        "md5": "0335555debe3c676eaf8e51b1e6ea9c5",
        "sha256": "3881a90038efd3b09d355e3ae70171a23f40e5239f18e8a1f72256ab02b701c8"
      },
      "downloads": -1,
      "filename": "lazy_runtime_typechecker-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0335555debe3c676eaf8e51b1e6ea9c5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7610,
      "upload_time": "2022-08-19T22:23:33",
      "upload_time_iso_8601": "2022-08-19T22:23:33.987238Z",
      "url": "https://files.pythonhosted.org/packages/05/72/0b5949e7a5f0a2c23f7c87de0be2abbb16af49530c07eba1e72984d42edc/lazy_runtime_typechecker-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aea355877e8423cbfb77f810dde63e5f80b92a5b3ffa20dc7a118348ddf44551",
        "md5": "287c16cadc33eabbfe16fe6b2303278d",
        "sha256": "7a14cc0bb582050215c71144bb974ffa5879639011f6592bc89e89860e0af18e"
      },
      "downloads": -1,
      "filename": "lazy_runtime_typechecker-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "287c16cadc33eabbfe16fe6b2303278d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6601,
      "upload_time": "2022-08-19T22:23:35",
      "upload_time_iso_8601": "2022-08-19T22:23:35.477335Z",
      "url": "https://files.pythonhosted.org/packages/ae/a3/55877e8423cbfb77f810dde63e5f80b92a5b3ffa20dc7a118348ddf44551/lazy_runtime_typechecker-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}