{
  "info": {
    "author": "Tristan de Cacqueray",
    "author_email": "tristanC@wombatt.eu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: DFSG approved",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Lisp",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# hy2glsl: Hy to GLSL Language Translator\n\nThis is an exploratory experiment to translate Hy procedure to GLSL shader,\ninspired by the [varjo translator](https://github.com/cbaggers/varjo).\n\n\n## Data Types\n\nUniform, varying and outputs need to be typed. It may be possible to infer\nthe type by knowing the associated CPU (e.g. numpy) object type.\n\nFunction overloading is not supported as the current implementation maps\none function signature to one function name.\n\nFor function signature and variables, the types are inferred using this\nprocess:\n\n- Variable definition types are inferred from the value expression:\n  - look for known constructor like vec2()\n  - look for known variable type already inferred\n  - look for known symbol type like float? or integer?\n- Function argument types are inferred using a reverse order first pass\n- Function return types are inferred from the last expression of the body.\n\nThis type inferrence process works for such shader:\n\n```\n(setv var (vec2 0.0))\n(defn nested-func [arg] ...)\n(defn func [a b] (nested-func (+ a b)))\n(defn main [] (func var 2))\n```\n\nBut it will fail when function arguments are solely defined by return type:\n\n```\n(defn func [] (return 42))\n(defn other-func [a] a)\n(defn main [] (other-func (func)))\n```\n\nFortunately, shader usualy mutates return value before using them as a\nfunction argument, therefor that primitive process works in most cases.\n\n\n## Example:\n\nA mandelbrot fragment shader in Hy:\n```\n(setv MAX_ITER 42.0)\n(print (hy2glsl `(shader\n  (version 350)\n  (uniform vec2 iResolution)\n  (uniform vec2 center)\n  (uniform float range)\n  (defn mandelbrot-color [coord]\n    (setv idx 0.0)\n    (setv z (vec2 0.0))\n    (setv c coord)\n    (while (< idx ~MAX_ITER)\n      (setv z (+ (vec2 (- (* z.x z.x) (* z.y z.y))\n                       (* 2.0 z.x z.y))\n                 c))\n      (if (> (dot z z) 500.0)\n        (break))\n      (setv idx (+ idx 1)))\n    (vec3 (* 1.0 (/ idx ~MAX_ITER))))\n  (defn main []\n    (setv uv (- (* (/ gl_FragCoord.xy iResolution.xy) 2.) 1.0))\n    (setv uv.y (* uv.y (- (/ iResolution.y iResolution.x))))\n    (setv pos (+ center (* uv range)))\n    (setv gl_FragColor (vec4 (mandelbrot-color pos) 1.0))))))\n```\n\nResults in:\n\n```\n#version 350\nuniform vec2 iResolution;\nuniform vec2 center;\nuniform float range;\n\nvec3 mandelbrot_color(vec2 coord) {\n  float idx = 0.0;\n  vec2 z = vec2(0.0);\n  vec2 c = coord;\n  while (idx < 42.0) {\n    z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n    if (dot(z, z) > 500.0) {\n      break;\n    }\n    idx = idx + 1;\n  }\n  return vec3(1.0 * idx / 42.0);\n}\n\nvoid main(void) {\n  vec2 uv = gl_FragCoord.xy / iResolution.xy * 2.0 - 1.0;\n  uv.y = uv.y * -iResolution.y / iResolution.x;\n  vec2 pos = center + uv * range;\n  gl_FragColor = vec4(mandelbrot_color(pos), 1.0);\n}\n```\n\nOr using the library, you would write:\n```\n(setv mandelbrot `(setv z (+ (cSquare z) c)))\n(print (hy2glsl (fragment-plane (color-ifs mandelbrot))))\n```\n\n\n## Demo\n\nIn the example folder there is a loaded based on glumpy to test (and reload)\nshader module:\n\n```\npython setup.py develop --user\npip install --user glumpy\npushd example\n./loader.hy mandelbrot.hy\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TristanCacqueray/hy2glsl",
    "keywords": "",
    "license": "GPL-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hy2glsl",
    "package_url": "https://pypi.org/project/hy2glsl/",
    "platform": "any",
    "project_url": "https://pypi.org/project/hy2glsl/",
    "project_urls": {
      "Homepage": "https://github.com/TristanCacqueray/hy2glsl"
    },
    "release_url": "https://pypi.org/project/hy2glsl/0.0.2/",
    "requires_dist": [
      "hy"
    ],
    "requires_python": ">=3.4",
    "summary": "",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7219504,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "482553d74b20dd78c56c8566a3cc11ed7eb8c7a8d06dc46a98a0746fa21afc3e",
          "md5": "32f797f70e731cd5df809584b21a85a6",
          "sha256": "153e3b7ac1d657d6648dc553d959ace678548479bd675371290138627f7cb375"
        },
        "downloads": -1,
        "filename": "hy2glsl-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32f797f70e731cd5df809584b21a85a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 21749,
        "upload_time": "2020-05-11T22:17:57",
        "upload_time_iso_8601": "2020-05-11T22:17:57.205663Z",
        "url": "https://files.pythonhosted.org/packages/48/25/53d74b20dd78c56c8566a3cc11ed7eb8c7a8d06dc46a98a0746fa21afc3e/hy2glsl-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d5f32b388d2a8110b70f8bc54ab3f06afb1cfdd7e786fc81356415cddd79036",
          "md5": "1e3c350a2639e6b20183a2d16a012d8c",
          "sha256": "e4dcf18cc92be9225bf0d6ed05f14f89c0460a7fbc1c127e1fe01e4443e26671"
        },
        "downloads": -1,
        "filename": "hy2glsl-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1e3c350a2639e6b20183a2d16a012d8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 25637,
        "upload_time": "2020-05-11T22:17:58",
        "upload_time_iso_8601": "2020-05-11T22:17:58.523384Z",
        "url": "https://files.pythonhosted.org/packages/7d/5f/32b388d2a8110b70f8bc54ab3f06afb1cfdd7e786fc81356415cddd79036/hy2glsl-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "482553d74b20dd78c56c8566a3cc11ed7eb8c7a8d06dc46a98a0746fa21afc3e",
        "md5": "32f797f70e731cd5df809584b21a85a6",
        "sha256": "153e3b7ac1d657d6648dc553d959ace678548479bd675371290138627f7cb375"
      },
      "downloads": -1,
      "filename": "hy2glsl-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "32f797f70e731cd5df809584b21a85a6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 21749,
      "upload_time": "2020-05-11T22:17:57",
      "upload_time_iso_8601": "2020-05-11T22:17:57.205663Z",
      "url": "https://files.pythonhosted.org/packages/48/25/53d74b20dd78c56c8566a3cc11ed7eb8c7a8d06dc46a98a0746fa21afc3e/hy2glsl-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d5f32b388d2a8110b70f8bc54ab3f06afb1cfdd7e786fc81356415cddd79036",
        "md5": "1e3c350a2639e6b20183a2d16a012d8c",
        "sha256": "e4dcf18cc92be9225bf0d6ed05f14f89c0460a7fbc1c127e1fe01e4443e26671"
      },
      "downloads": -1,
      "filename": "hy2glsl-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "1e3c350a2639e6b20183a2d16a012d8c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 25637,
      "upload_time": "2020-05-11T22:17:58",
      "upload_time_iso_8601": "2020-05-11T22:17:58.523384Z",
      "url": "https://files.pythonhosted.org/packages/7d/5f/32b388d2a8110b70f8bc54ab3f06afb1cfdd7e786fc81356415cddd79036/hy2glsl-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}