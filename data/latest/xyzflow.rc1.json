{
  "info": {
    "author": "Florian Renneke",
    "author_email": "florianrenneke@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# XYZFlow\nPowerful but simple orchestration framework for python.\n\n## Documentation\n\nYou find the latest documentation on readthedocs.io: https://xyzflow.readthedocs.io/en/latest/.\n## Installing\n\n``` bash\npip install xyzflow\n```\n\n## Getting Started\n\nYou can write a flow in a few lines of code:\n``` python\nfrom xyzflow import Parameter\n\n# Define parameters\nx = Parameter(value=10, description=\"X\")\ny = Parameter(value=10, description=\"Y\")\n  \ndef main():\n    return x + y\n       \nif __name__ == \"__main__\":   \n    print(main()()) # Execute flow and print the result\n```\n\nA flow consists out of:\n1) Parameter definitions in the global scope\n2) A `main()` method that returns the resulting Task\n3) Optionally: A main if clause that executes your defined flow\n\n### How does it work?\n\nEverything is a `Task` (even Parameters). Inside of the `main()` you define a flow. \nA flow is a sequence of tasks that shall be executed. You can give the results of a task as input parameter to another task.\nThat way, we create an execution graph.\nAny task can be evaluted at any time with the `()` operator.\nThe result can be used to continue with a flow or just to get the final result of a flow.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Renneke/xyzflow",
    "keywords": "",
    "license": "Apache License Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xyzflow",
    "package_url": "https://pypi.org/project/xyzflow/",
    "platform": "",
    "project_url": "https://pypi.org/project/xyzflow/",
    "project_urls": {
      "Homepage": "https://github.com/Renneke/xyzflow"
    },
    "release_url": "https://pypi.org/project/xyzflow/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple but powerful python orchestration framework",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12953411,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f34439886565378ed242645c2b4a8249c3e18da48eea9374a89f181d86d271b",
          "md5": "14bc20b9bd24345e853143a3f64a1240",
          "sha256": "19f02372fb9ef1c4bdc362a13a43d801235ab0320c8e41937965bedb18126b75"
        },
        "downloads": -1,
        "filename": "xyzflow-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14bc20b9bd24345e853143a3f64a1240",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11250,
        "upload_time": "2022-02-20T21:30:33",
        "upload_time_iso_8601": "2022-02-20T21:30:33.394866Z",
        "url": "https://files.pythonhosted.org/packages/7f/34/439886565378ed242645c2b4a8249c3e18da48eea9374a89f181d86d271b/xyzflow-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f34439886565378ed242645c2b4a8249c3e18da48eea9374a89f181d86d271b",
        "md5": "14bc20b9bd24345e853143a3f64a1240",
        "sha256": "19f02372fb9ef1c4bdc362a13a43d801235ab0320c8e41937965bedb18126b75"
      },
      "downloads": -1,
      "filename": "xyzflow-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "14bc20b9bd24345e853143a3f64a1240",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11250,
      "upload_time": "2022-02-20T21:30:33",
      "upload_time_iso_8601": "2022-02-20T21:30:33.394866Z",
      "url": "https://files.pythonhosted.org/packages/7f/34/439886565378ed242645c2b4a8249c3e18da48eea9374a89f181d86d271b/xyzflow-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}