{
  "info": {
    "author": "Aarni Alasaarela",
    "author_email": "coderbarns@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# FlaskOIDC\n[![PyPI version](https://badge.fury.io/py/flaskoidc.svg)](https://badge.fury.io/py/flaskoidc)\n[![License](http://img.shields.io/:license-Apache%202-blue.svg)](LICENSE)\n\nThis package relies purely on the `Authlib` package. [Authlib](https://docs.authlib.org/en/latest/)\n\nA wrapper of Flask with pre-configured OIDC support. Ideal for microservices architecture, each request will be authenticated using Flask's `before_request` middleware. \nNecassary endpoints can be whitelisted using an environment variable `FLASK_OIDC_WHITELISTED_ENDPOINTS`. \n\n## Installation:\n```bash\npip3 install flaskoidc\n```\n\n\n## Usage:\n\nAfter simply installing the flaskoidc you can simply use it like below:\n\n```python\nfrom flaskoidc import FlaskOIDC\napp = FlaskOIDC(__name__)\n``` \n\n## Configurations:\n\nPlease make sure to extend your configurations from `BaseConfig` (only if you are sure what you are doing. Recommended way is to use the environment variables for the configuration.)\n\n```python\nfrom flaskoidc import FlaskOIDC\nfrom flaskoidc.config import BaseConfig\n\n# Custom configuration class, a subclass of BaseConfig\nCustomConfig(BaseConfig):\n    DEBUG = True\n\napp = FlaskOIDC(__name__)\napp.config.from_object(CustomConfig)\n\n```\n\nFollowing `ENVIRONMENT VARIABLES` MUST be set to get the OIDC working.\n\n#### FLASK_OIDC_PROVIDER_NAME \n_(default: 'google')_\n\nThe name of the OIDC provider, like `google`, `okta`, `keycloak` etc. I have verified this package only for\ngoogle, okta and keycloak. Please make sure to open a new issue if any of your OIDC provider is not working.\n\n#### FLASK_OIDC_SCOPES \n_(default: 'openid email profile')_\n\nScopes required to make your client works with the OIDC provider, separated by a space. \n\n- OKTA: make sure to add `offline_access` in your scopes in order to get the refresh_token.\n\n#### FLASK_OIDC_USER_ID_FIELD\n_(default: 'email')_\n\nDifferent OIDC providers have different id field for the users. Make sure to adjust this according to what \nyour provider returns in the user profile i.e., `id_token`.\n\n#### FLASK_OIDC_CLIENT_ID\n_(default: '')_\n\nClient ID that you get once you create a new application on your OIDC provider.\n\n#### FLASK_OIDC_CLIENT_SECRET\n_(default: '')_\n\nClient Secret that you get once you create a new application on your OIDC provider.\n\n#### FLASK_OIDC_FORCE_SCHEME\n_(default: 'http')_\n\nCan be used to force a URL scheme when crafting a `redirect_uri` in _'/login'_ route.  Useful when Flask application is behind an ingress doing TLS termination.\n\n#### FLASK_OIDC_REDIRECT_URI\n_(default: '/auth')_\n\nThis is the endpoint that your OIDC provider hits to authenticate against your request. \nThis is what you set as one of your REDIRECT URI in the OIDC provider client's settings.  \n\n#### FLASK_OIDC_CONFIG_URL\n_(default: '')_\n\nTo simplify OIDC implementations and increase flexibility, OpenID Connect allows the use of a \"Discovery document,\" a JSON document found at a well-known location containing key-value pairs which provide details about the OpenID Connect provider's configuration, including the URIs of the authorization, token, revocation, userinfo, and public-keys endpoints.\n\nDiscovery Documents may be retrieved from:\n- `Google`: https://accounts.google.com/.well-known/openid-configuration\n- `OKTA`\n  - https://[YOUR_OKTA_DOMAIN]/.well-known/openid-configuration\n  - https://[YOUR_OKTA_DOMAIN]/oauth2/[AUTH_SERVER_ID]/.well-known/openid-configuration\n- `Auth0`: https://[YOUR_DOMAIN]/.well-known/openid-configuration\n- `Keycloak`: http://[KEYCLOAK_HOST]:[KEYCLOAK_PORT]/auth/realms/[REALM]/.well-known/openid-configuration\n\n\n#### FLASK_OIDC_OVERWRITE_REDIRECT_URI\n_(default: '/')_\nIn some cases you may need to redirect to a different endpoint after a successful login. This environment lets you set that endpoint. By default, this redirects to `/`. \n\n#### FLASK_OIDC_PROVIDER_ADDITIONAL_PARAMETERS_FILE_PATH\n_(default: None)_\n\nThe absolute path to a json file holding key value pairs of additional parameters ro be appended during client \nregistration. This will overwrite any default parameters for a given OIDC provider.\n\n....\n\nA few other environment variables along with their default values are. \n\n```python\n# Flask `SECRET_KEY` config value\nFLASK_OIDC_SECRET_KEY: '!-flask-oidc-secret-key'\n\n# Comma separated string of URLs which should be exposed without authentication, else all request will be authenticated.\nFLASK_OIDC_WHITELISTED_ENDPOINTS: \"status,healthcheck,health\"\n```\n\nYou can also set the config variables specific to [Flask-SQLAlchemy](https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/) using the same key as the environment variables.\n```python\n# Details about this below in the \"Session Management\" section.\nSQLALCHEMY_DATABASE_URI: 'sqlite:///sessions.db'\n```\n\n## Known Issues:\n- Need to make sure it still works with the clients_secrets.json file or via env variables for each endpoint of a custom OIDC provider.\n- `refresh_token` is not yet working. I am still trying to figure out how to do this using Authlib. \n- You may enter problems when installing cryptography, check its [official document](https://cryptography.io/en/latest/installation/)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/coderbarns/flaskoidc.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hey-auth",
    "package_url": "https://pypi.org/project/hey-auth/",
    "platform": "",
    "project_url": "https://pypi.org/project/hey-auth/",
    "project_urls": {
      "Homepage": "https://github.com/coderbarns/flaskoidc.git"
    },
    "release_url": "https://pypi.org/project/hey-auth/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Flask wrapper with pre-configured OAuth2 and OIDC support",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12847388,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63ee4683fb836a55c8a4f9afd5254ce31465b908d7db3389faa83a04a04f4317",
          "md5": "3e6b611b91b6898b2171231a0de30a39",
          "sha256": "5abe2f9f8226ef2221f7395660e65537bed4c3aa0b553246dd0e436c03896c02"
        },
        "downloads": -1,
        "filename": "hey-auth-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3e6b611b91b6898b2171231a0de30a39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8018,
        "upload_time": "2022-02-03T08:03:42",
        "upload_time_iso_8601": "2022-02-03T08:03:42.239360Z",
        "url": "https://files.pythonhosted.org/packages/63/ee/4683fb836a55c8a4f9afd5254ce31465b908d7db3389faa83a04a04f4317/hey-auth-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0d8336e9cdec9b3b478c5ebe2f38ffdd6fade477eb50b24dd2bb556aa438622",
          "md5": "91f90d8ef59fa4f7e74a768d953f599d",
          "sha256": "b8637ebf490e8aebbbeaf8e6018ad1e215a6ab73263015fc4233a719f3a11b6d"
        },
        "downloads": -1,
        "filename": "hey_auth-1.0.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "91f90d8ef59fa4f7e74a768d953f599d",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 17047,
        "upload_time": "2022-02-09T21:38:55",
        "upload_time_iso_8601": "2022-02-09T21:38:55.331642Z",
        "url": "https://files.pythonhosted.org/packages/c0/d8/336e9cdec9b3b478c5ebe2f38ffdd6fade477eb50b24dd2bb556aa438622/hey_auth-1.0.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79d6ec5645a86ff7b7234ecf629fe73b3780e06feee41cf8a8b187187a3e8c43",
          "md5": "773bf2bae796f4953ac6c9edd4247bd3",
          "sha256": "149635f9c14cd0d062e6eb8760465317e59958275d68d25dc0ef8455d1e1b01b"
        },
        "downloads": -1,
        "filename": "hey-auth-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "773bf2bae796f4953ac6c9edd4247bd3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8019,
        "upload_time": "2022-02-03T08:31:44",
        "upload_time_iso_8601": "2022-02-03T08:31:44.062553Z",
        "url": "https://files.pythonhosted.org/packages/79/d6/ec5645a86ff7b7234ecf629fe73b3780e06feee41cf8a8b187187a3e8c43/hey-auth-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8c6d1c543af9d50263c8713ab5f517faebe310be58afd80d1090502d10c2f35",
          "md5": "79740b2af4471aee7732327de28fe059",
          "sha256": "3831b6bdd505028a7072d8113acf2f06839780a345c925073b7cdf12470cc7c4"
        },
        "downloads": -1,
        "filename": "hey_auth-1.0.2-py3.7.egg",
        "has_sig": false,
        "md5_digest": "79740b2af4471aee7732327de28fe059",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 17048,
        "upload_time": "2022-02-09T21:38:56",
        "upload_time_iso_8601": "2022-02-09T21:38:56.896165Z",
        "url": "https://files.pythonhosted.org/packages/c8/c6/d1c543af9d50263c8713ab5f517faebe310be58afd80d1090502d10c2f35/hey_auth-1.0.2-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c38407f52c72f1d2af65088ffdcd0472b2f960cf5730d3d27f440b27fc30e55f",
          "md5": "e042624e7ede698d03df73d912e6c7ba",
          "sha256": "eeacc54a6be118454185373ed24289a21714f05eea05d090983cac53f2881cd6"
        },
        "downloads": -1,
        "filename": "hey-auth-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e042624e7ede698d03df73d912e6c7ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11812,
        "upload_time": "2022-02-09T21:38:53",
        "upload_time_iso_8601": "2022-02-09T21:38:53.888313Z",
        "url": "https://files.pythonhosted.org/packages/c3/84/07f52c72f1d2af65088ffdcd0472b2f960cf5730d3d27f440b27fc30e55f/hey-auth-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bae5f88298b2243ca476693ee6922323291f2da2282fc6d95f548a88d243badb",
          "md5": "ac5c5c82b4e8b5ac3ce5d951d2ada937",
          "sha256": "aff2af659264edfa5651e651049b4a9e482b8a5239a735546f4b7b84f875f43b"
        },
        "downloads": -1,
        "filename": "hey-auth-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ac5c5c82b4e8b5ac3ce5d951d2ada937",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8051,
        "upload_time": "2022-02-10T07:54:58",
        "upload_time_iso_8601": "2022-02-10T07:54:58.700508Z",
        "url": "https://files.pythonhosted.org/packages/ba/e5/f88298b2243ca476693ee6922323291f2da2282fc6d95f548a88d243badb/hey-auth-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bae5f88298b2243ca476693ee6922323291f2da2282fc6d95f548a88d243badb",
        "md5": "ac5c5c82b4e8b5ac3ce5d951d2ada937",
        "sha256": "aff2af659264edfa5651e651049b4a9e482b8a5239a735546f4b7b84f875f43b"
      },
      "downloads": -1,
      "filename": "hey-auth-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ac5c5c82b4e8b5ac3ce5d951d2ada937",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8051,
      "upload_time": "2022-02-10T07:54:58",
      "upload_time_iso_8601": "2022-02-10T07:54:58.700508Z",
      "url": "https://files.pythonhosted.org/packages/ba/e5/f88298b2243ca476693ee6922323291f2da2282fc6d95f548a88d243badb/hey-auth-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}