{
  "info": {
    "author": "Nathan Mejia",
    "author_email": "nathandraco22@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "zaptools\r\n========\r\n\r\nPreAlfa 2\r\n\r\nZapTools is wrapper to handle websocket connection, based on events to a nice and smooth integration.\r\n\r\nUsage\r\n-----\r\n\r\nHow to use **zaptools**\r\n~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code-block:: python\r\n\r\n    from fastapi import FastAPI\r\n    from zaptools import FastApiZapAdapter, SocketClient\r\n\r\n    app : FastAPI = FastAPI()\r\n    adapter = FastApiZapAdapter(app= app, route= \"/\" )\r\n\r\n    @adapter.on_client_connected\r\n    async def on_connected(client : SocketClient , adapter : FastApiZapAdapter):\r\n        print(\"client connected : \", client.id_connection)\r\n        await client.send_event(\"myEvent\", \"Data Payload to send\")\r\n\r\n    @adapter.on_event(\"event\")\r\n    async def event(payload, client:SocketClient , adapter : FastApiZapAdapter ):\r\n        print(payload)\r\n        await client.send_event(\"anyEvent\", {\"msg\" : \"a Json Format\"})\r\n\r\n    @adapter.on_client_disconnected\r\n    async def client_disconected(client : SocketClient , adapter : FastApiZapAdapter):\r\n        print(\"client disconnected: \", client.id_connection)\r\n\r\n\r\n**zaptools** is only compatible with FastAPI apps, so we need to create \r\na **FastAPI** app and then create a instance of *FastApiZapAdapter*, the constructor\r\nneed the app (FastApi app) and a specific route (\"/\")\r\n\r\n.. code-block:: python\r\n\r\n    app : FastAPI = FastAPI()\r\n    adapter = FastApiZapAdapter(app= app, route= \"/\" )\r\n\r\nNow we can use the ``adapter`` to define the function to be called\r\nwhen a event is triggered, for example is we need to check if a new client\r\nis connected to our Socket server, and then response to client:\r\n\r\n.. code-block:: python\r\n\r\n    @adapter.on_client_connected\r\n    async def on_connected(client : SocketClient , adapter : FastApiZapAdapter):\r\n        print(\"client connected : \", client.id_connection)\r\n        await client.send_event(\"myEvent\", \"Data Payload to send\")\r\n\r\nthe ``SocketClient`` is a class that have ``id_connection`` and ``send_event`` method,\r\nremember ever ``await`` the ``send_event``.\r\n\r\nAlso, you can define a function to be called when a client is disconnected:\r\n\r\n.. code-block:: python\r\n\r\n    @adapter.on_client_disconnected\r\n    async def client_disconected(client : SocketClient , adapter : FastApiZapAdapter):\r\n        print(\"client disconnected: \", client.id_connection)\r\n\r\nWe can register a event, in this case we have the payload:\r\n\r\n.. code-block:: python\r\n\r\n    @adapter.on_event(\"eventName\")\r\n    async def event(payload, client:SocketClient , adapter : FastApiZapAdapter ):\r\n        print(payload)\r\n        await client.send_event(\"eventName\", {\"msg\" : \"a Json Format\"})\r\n\r\nAnd finally, start the FastAPI app normally (uvicorn)\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n``pip install zaptools``\r\n\r\n\r\nRequirements\r\n------------\r\n\r\nFastApi\r\n\r\n\r\n\r\nCompatibility\r\n-------------\r\n\r\nPython 3.7+\r\n\r\nLicence\r\n-------\r\n\r\nMIT\r\n\r\nAuthors\r\n-------\r\nzaptools was written by Nathan Mejia\r\n\r\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NathanDraco22/zap-adapter-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zaptools",
    "package_url": "https://pypi.org/project/zaptools/",
    "platform": "",
    "project_url": "https://pypi.org/project/zaptools/",
    "project_urls": {
      "Homepage": "https://github.com/NathanDraco22/zap-adapter-python"
    },
    "release_url": "https://pypi.org/project/zaptools/0.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python Implementation to ZapTools WebSockets",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13028712,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13d88b87c52458515efbbc6bb86cb75d6672ef05b11ae97cfa408f64a1c84ff8",
          "md5": "44ec07e6f5f8c246aa64f84c25a27d80",
          "sha256": "f00327bf6b1af20aaaf950161c639cac327cd96451dfadb4faa2e1175b7c4a5a"
        },
        "downloads": -1,
        "filename": "zaptools-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "44ec07e6f5f8c246aa64f84c25a27d80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6959,
        "upload_time": "2022-02-26T03:41:15",
        "upload_time_iso_8601": "2022-02-26T03:41:15.713974Z",
        "url": "https://files.pythonhosted.org/packages/13/d8/8b87c52458515efbbc6bb86cb75d6672ef05b11ae97cfa408f64a1c84ff8/zaptools-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73eb6168bbba928e5a38b630613917c7a849612e6be6c25ec6f824d42efcd915",
          "md5": "79adfa7113b28bb834dbcebfe8687018",
          "sha256": "d3a85c6eacbdf23f85f1806001e32f92aaa2faa2e3950d8c312205d0ac3f6878"
        },
        "downloads": -1,
        "filename": "zaptools-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79adfa7113b28bb834dbcebfe8687018",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6897,
        "upload_time": "2022-02-26T19:45:28",
        "upload_time_iso_8601": "2022-02-26T19:45:28.618041Z",
        "url": "https://files.pythonhosted.org/packages/73/eb/6168bbba928e5a38b630613917c7a849612e6be6c25ec6f824d42efcd915/zaptools-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad51eccaaca86516e8337bb10e4486c4299e3a75fe5ff2d0d80bc82caa02eb88",
          "md5": "f4b8daf5106b2e5a7b019f0a1094a167",
          "sha256": "306cc26a4ad9a62763f123eef8106589ea64cf35fbb23c5786c317de99104814"
        },
        "downloads": -1,
        "filename": "zaptools-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f4b8daf5106b2e5a7b019f0a1094a167",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6971,
        "upload_time": "2022-02-28T00:55:19",
        "upload_time_iso_8601": "2022-02-28T00:55:19.593312Z",
        "url": "https://files.pythonhosted.org/packages/ad/51/eccaaca86516e8337bb10e4486c4299e3a75fe5ff2d0d80bc82caa02eb88/zaptools-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad51eccaaca86516e8337bb10e4486c4299e3a75fe5ff2d0d80bc82caa02eb88",
        "md5": "f4b8daf5106b2e5a7b019f0a1094a167",
        "sha256": "306cc26a4ad9a62763f123eef8106589ea64cf35fbb23c5786c317de99104814"
      },
      "downloads": -1,
      "filename": "zaptools-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "f4b8daf5106b2e5a7b019f0a1094a167",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6971,
      "upload_time": "2022-02-28T00:55:19",
      "upload_time_iso_8601": "2022-02-28T00:55:19.593312Z",
      "url": "https://files.pythonhosted.org/packages/ad/51/eccaaca86516e8337bb10e4486c4299e3a75fe5ff2d0d80bc82caa02eb88/zaptools-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}