{
  "info": {
    "author": "",
    "author_email": "Patrick Baus <patrick.baus@physik.tu-darmstadt.de>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Home Automation",
      "Topic :: Scientific/Engineering"
    ],
    "description": "[![pylint](https://github.com/PatrickBaus/pyAsyncPrologixGpib/actions/workflows/pylint.yml/badge.svg)](https://github.com/PatrickBaus/pyAsyncPrologixGpib/actions/workflows/pylint.yml)\n[![PyPI](https://img.shields.io/pypi/v/prologix-gpib-async)](https://pypi.org/project/prologix-gpib-async/)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/prologix-gpib-async)\n![PyPI - Status](https://img.shields.io/pypi/status/prologix-gpib-async)\n[![code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n# prologix_gpib_async\nPython3 AsyncIO Prologix GPIB Driver. This library requires Python [asyncio](https://docs.python.org/3/library/asyncio.html). In contrast to a synchronous implementation, this library makes it possible to control multiple GPIB controllers at once and work with large setups.\n\nThe library is fully type-hinted.\n\n## Supported Hardware\n|Device|Supported|Tested|Comments|\n|--|--|--|--|\n|[GPIB-ETHERNET Controller 1.2](http://prologix.biz/gpib-ethernet-controller.html)|:heavy_check_mark:|:heavy_check_mark:|  |\n|[GPIB-USB Controller 6.0](http://prologix.biz/gpib-usb-controller.html)|:x:|:x:|Need hardware\n\nTested using Linux, should work for Mac OSX, Windows and any OS with Python support.\n\n## Setup\nTo install the library in a virtual environment (always use venvs with every project):\n\n```bash\npython3 -m venv env  # virtual environment, optional\nsource env/bin/activate\npip install prologix-gpib-async\n```\n\n## Usage\nThis library makes use of asynchronous context managers to hide all connection related stuff and\nalso handle cleanup. By the way: Context managers are great!\n\nInitialize the GPIB adapter\n```python\nfrom prologix_gpib_async import AsyncPrologixGpibEthernetController\n# Create a controller and talk to device address 22\nasync with AsyncPrologixGpibEthernetController(\"127.0.0.1\", pad=22) as gpib_device:\n    # Add your code here\n    ...\n```\n\nSending a \"my command\" command to address 22 (as set up previously)\n```python\nawait gpib_device.write(\"my command\")\n```\n\nReading data from address 22\n```python\ndata = await gpib_device.read()\n```\n\nExample program, that queries the version string as can be found at [examples/example.py](examples/example.py)\n```python\nimport asyncio\n\n# Devices\nfrom prologix_gpib_async import AsyncPrologixGpibEthernetController\n\nasync def main():\n    try: \n        async with AsyncPrologixGpibEthernetController('127.0.0.1', pad=22) as gpib_device:\n            version = await gpib_device.version()\n            print(\"Controller version:\", version)\n    except (ConnectionError, ConnectionRefusedError):\n        print(\"Could not connect to remote target. Is the device connected?\")\n\nasyncio.run(main())\n```\n\nSee [examples/](examples/) for more working examples.\n\n## Support for Multiple Devices\nThe Prologix GPIB adapter supports talking to multiple devices, but there are (theoretical) hardware limits. The Prologix adapters do not have line drivers, so only a limited number of devices can be driven using one controller.\n\nOn the software side, there is full support for multiple devices and the driver will switch between different addresses transparently. The driver internally manages the connection and keeps track of the GPIB controller state and manages the state for each gpib object. It is important, that the driver is the only client editing the state of the GPIB controller. Otherwise, the driver state and the controller state may get out of sync.\n\n> :warning: **Concurrency with multiple devices**: Note, that when using a single adapter to control multiple devices, there is no concurrency on the GPIB bus. Whenever reading or writing to a remote device, the driver will lock the GPIB controller to ensure that reading from a controller is synchronous. This means, there is **no** speed increase, when making asynchronous reads from multiple devices on the bus. Using a GPIB Group Execute Trigger (GET) by invoking the trigger() function, concurrent measurements can be triggered though. Some devices also allow asynchronous function calls, that signal status updates via the srq register.\n\nExample:\n```python\nimport asyncio\nfrom contextlib import AsyncExitStack\n\n# Devices\nfrom prologix_gpib_async import AsyncPrologixGpibEthernetController\n\nip_address = \"127.0.0.1\"\n\nasync def main():\n    try:\n        async with AsyncExitStack() as stack:\n            gpib_device1, gpib_device2 = await asyncio.gather(\n                stack.enter_async_context(AsyncPrologixGpibEthernetController(ip_address, pad=22)),\n                stack.enter_async_context(AsyncPrologixGpibEthernetController(ip_address, pad=10))\n            )\n            await gpib_device1.write(b'*IDN?')    # Automatically changes address to device 22\n            print(await gpib_device1.read())\n            await gpib_device2.write(b'*IDN?')    # Automatically changes address to device 10\n            print(await gpib_device2.read())\n    except (ConnectionError, ConnectionRefusedError):\n        print(\"Could not connect to remote target. Is the device connected?\")\n\nasyncio.run(main())\n```\n\n## Versioning\n\nI use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/PatrickBaus/pyAsyncPrologix/tags). \n\n## Documentation\nI use the [Numpydoc](https://numpydoc.readthedocs.io/en/latest/format.html) style for documentation.\n\n## Authors\n\n* **Patrick Baus** - *Initial work* - [PatrickBaus](https://github.com/PatrickBaus)\n\n## License\n\n\nThis project is licensed under the GPL v3 license - see the [LICENSE](LICENSE) file for details\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Prologix,GPIB,API",
    "license": "GNU General Public License v3 (GPLv3)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prologix-gpib-async",
    "package_url": "https://pypi.org/project/prologix-gpib-async/",
    "platform": null,
    "project_url": "https://pypi.org/project/prologix-gpib-async/",
    "project_urls": {
      "Bug Tracker": "https://github.com/PatrickBaus/pyAsyncPrologixGpib/issues",
      "Download": "https://github.com/PatrickBaus/pyAsyncPrologixGpib/releases",
      "Homepage": "https://github.com/PatrickBaus/pyAsyncPrologixGpib"
    },
    "release_url": "https://pypi.org/project/prologix-gpib-async/1.4.10/",
    "requires_dist": [
      "typing-extensions ; python_version < \"3.11\"",
      "black ; extra == 'dev'",
      "build ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "mypy ; extra == 'test'",
      "pylint ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python AsyncIO library for the Prologix GPIB (Ethernet) adapter",
    "version": "1.4.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14342657,
  "releases": {
    "1.4.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7079d353dca6fc016bb03e247a584d2dded71d51bfecd825a34afb69be03311",
          "md5": "7dd5ba7bf708a28c9ec9f026b50f7061",
          "sha256": "071f4e353af06ea1f3895711b783d72f0d0e825e77e6ff1e73c92453d31aed35"
        },
        "downloads": -1,
        "filename": "prologix_gpib_async-1.4.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7dd5ba7bf708a28c9ec9f026b50f7061",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 31258,
        "upload_time": "2022-07-05T17:27:23",
        "upload_time_iso_8601": "2022-07-05T17:27:23.175146Z",
        "url": "https://files.pythonhosted.org/packages/c7/07/9d353dca6fc016bb03e247a584d2dded71d51bfecd825a34afb69be03311/prologix_gpib_async-1.4.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "253830a55720a445cba6253934721ddea3772e27ca95c6ad6706e08dbf488f6e",
          "md5": "3ade61d09ed63bf7740379f25c605a42",
          "sha256": "a7ec48af1cc81911992ea1b84ee89c76d6bcaa6ad9f06521f3eff623794c750d"
        },
        "downloads": -1,
        "filename": "prologix_gpib_async-1.4.10.tar.gz",
        "has_sig": false,
        "md5_digest": "3ade61d09ed63bf7740379f25c605a42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 30945,
        "upload_time": "2022-07-05T17:27:24",
        "upload_time_iso_8601": "2022-07-05T17:27:24.716233Z",
        "url": "https://files.pythonhosted.org/packages/25/38/30a55720a445cba6253934721ddea3772e27ca95c6ad6706e08dbf488f6e/prologix_gpib_async-1.4.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "409e7ce4e017ca9a9cf35fde7c8ba8ff667666d76a6e20467a0ac9c2e77dca6a",
          "md5": "738ed314bb5e8491db8e199b8882a099",
          "sha256": "cdaf142fd2c9684c9aeb8c05d90bb34e41b43a67f0d3932991edb19799f1a9f8"
        },
        "downloads": -1,
        "filename": "prologix_gpib_async-1.4.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "738ed314bb5e8491db8e199b8882a099",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 29367,
        "upload_time": "2022-07-03T09:06:07",
        "upload_time_iso_8601": "2022-07-03T09:06:07.728172Z",
        "url": "https://files.pythonhosted.org/packages/40/9e/7ce4e017ca9a9cf35fde7c8ba8ff667666d76a6e20467a0ac9c2e77dca6a/prologix_gpib_async-1.4.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f6778a609b38aee23055c0936afb6a60db0251b68923b4e108dda30ca063002",
          "md5": "d8177671b939953ad2bf4741388a03d0",
          "sha256": "53252bcf06cba2e172a9764f87e7cd23b8f668dfd22f21042ac5d592cfccfcb8"
        },
        "downloads": -1,
        "filename": "prologix_gpib_async-1.4.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d8177671b939953ad2bf4741388a03d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 30151,
        "upload_time": "2022-07-03T09:06:10",
        "upload_time_iso_8601": "2022-07-03T09:06:10.428113Z",
        "url": "https://files.pythonhosted.org/packages/1f/67/78a609b38aee23055c0936afb6a60db0251b68923b4e108dda30ca063002/prologix_gpib_async-1.4.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "229c7ec6bbdfb7013b21df0ad3dcff0e5ae855c984f33773e88dde7e4885bab6",
          "md5": "e0131d9f93000a815119b05f9b443d47",
          "sha256": "5b497eaac638bcb110ec071b7305c1995c4e07af52e3bb78e921ccb8d76e628c"
        },
        "downloads": -1,
        "filename": "prologix_gpib_async-1.4.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0131d9f93000a815119b05f9b443d47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30842,
        "upload_time": "2022-07-03T10:52:44",
        "upload_time_iso_8601": "2022-07-03T10:52:44.702077Z",
        "url": "https://files.pythonhosted.org/packages/22/9c/7ec6bbdfb7013b21df0ad3dcff0e5ae855c984f33773e88dde7e4885bab6/prologix_gpib_async-1.4.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "410c5b46d17099229ee3b4373e6417dc43c79f464143bdd05e786edcf15a044e",
          "md5": "ac1edf0f7cec3ced1eb34d1d53aef2ef",
          "sha256": "933f947d98e7e0cca253697ecdbeeabba248c32aef2de0280e6a87086f2ea691"
        },
        "downloads": -1,
        "filename": "prologix_gpib_async-1.4.9.tar.gz",
        "has_sig": false,
        "md5_digest": "ac1edf0f7cec3ced1eb34d1d53aef2ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 30414,
        "upload_time": "2022-07-03T10:52:46",
        "upload_time_iso_8601": "2022-07-03T10:52:46.379936Z",
        "url": "https://files.pythonhosted.org/packages/41/0c/5b46d17099229ee3b4373e6417dc43c79f464143bdd05e786edcf15a044e/prologix_gpib_async-1.4.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7079d353dca6fc016bb03e247a584d2dded71d51bfecd825a34afb69be03311",
        "md5": "7dd5ba7bf708a28c9ec9f026b50f7061",
        "sha256": "071f4e353af06ea1f3895711b783d72f0d0e825e77e6ff1e73c92453d31aed35"
      },
      "downloads": -1,
      "filename": "prologix_gpib_async-1.4.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7dd5ba7bf708a28c9ec9f026b50f7061",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 31258,
      "upload_time": "2022-07-05T17:27:23",
      "upload_time_iso_8601": "2022-07-05T17:27:23.175146Z",
      "url": "https://files.pythonhosted.org/packages/c7/07/9d353dca6fc016bb03e247a584d2dded71d51bfecd825a34afb69be03311/prologix_gpib_async-1.4.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "253830a55720a445cba6253934721ddea3772e27ca95c6ad6706e08dbf488f6e",
        "md5": "3ade61d09ed63bf7740379f25c605a42",
        "sha256": "a7ec48af1cc81911992ea1b84ee89c76d6bcaa6ad9f06521f3eff623794c750d"
      },
      "downloads": -1,
      "filename": "prologix_gpib_async-1.4.10.tar.gz",
      "has_sig": false,
      "md5_digest": "3ade61d09ed63bf7740379f25c605a42",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 30945,
      "upload_time": "2022-07-05T17:27:24",
      "upload_time_iso_8601": "2022-07-05T17:27:24.716233Z",
      "url": "https://files.pythonhosted.org/packages/25/38/30a55720a445cba6253934721ddea3772e27ca95c6ad6706e08dbf488f6e/prologix_gpib_async-1.4.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}