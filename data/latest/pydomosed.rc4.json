{
  "info": {
    "author": "evtn",
    "author_email": "g@evtn.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PyDomosed - API-wrapper для мини-приложений Домосед и Гонки\n\nДомосед (приложение закрыто):\n- [Документация API](https://vk.com/@domosedapp-domosed-api)    \n- [Мини-приложение](https://vk.com/app7594692)\n\nГонки:\n- [Документация API](https://vk.com/@happyoffice-api)    \n- [Мини-приложение](https://vk.com/app7679912)\n\n\n## Содержание:\n\n- [Содержание (вы находитесь здесь)](#содержание)\n- [Базовое использование](#базовое-использование)\n- [Установка](#установка)\n- [Запросы к API](#запросы-к-api)\n- [Подписка на переводы](#подписка-на-переводы)\n\n\n## Базовое использование\n\nЧтобы использовать API, необходимо создать объект сессии (`Session`)\nНа примере ниже создаётся event loop () и создаётся сессия и выводится ответ метода `merchants.getInfo`.    \n`merchants.getInfo` здесь и далее приведен для примера.\n\n```python\nfrom pydomosed import Session\nimport asyncio\n\ntoken = \"youraccesstoken\"\n\nasync def main():\n    async with Session(token) as domosed:\n        info = await domosed.merchants.getInfo() # Возвращает объект Response\n        print(info)\n        \n\nasyncio.run(main())\n```\n\n### Использование API Гонок\n\nЧтобы использовать API Гонок, замените `Session.base_url` на `Session.api_urls[\"race\"]`:\n\n```python\nfrom pydomosed import Session\nimport asyncio\n\ntoken = \"youraccesstoken\"\nSession.base_url = Session.api_urls[\"race\"]\n\nasync def main():\n    async with Session(token) as raceapi:\n        info = await raceapi.merchants.get() # Возвращает объект Response\n        print(info)\n        \n\nasyncio.run(main())\n```\n\n## Установка\n\n- Склонируйте репозиторий и запустите `setup.py`\n\nили воспользуйтесь pip:\n\n- `pip install pydomosed`\n\n\n## Запросы к API\n\nВсе запросы осуществляются через объект сессии. Для удобства и читабельности вашего кода, можно использовать несколько равнозначных способов выполнить запрос:    \n(`session` в данных примерах - объект класса `pydomosed.base.Session`)\n\n```python\nawait session.request(\"merchants.getInfo\", **params)\nawait session(\"merchants.getInfo\", **params)\nawait session.merchants.getInfo(**params)\n```\n\nЭти способы не различаются внутренне (во всех случаях используется `session.request`) и возвращают объект `Response`.\n\n\n### pydomosed.base.Response\n\nКласс, предназначенный для хранения информации об ответе. Возвращается при любом запросе к API и содержит следующие атрибуты:\n\n- `data`: Словарь ответа, каким его вернул API\n- `success`: True или False, в зависимости от успешности запроса\n- `msg`: содержимое `.data[\"response\"][\"msg\"]`, если запрос был успешен, иначе `None` *(неактуально для приложения Гонки)*\n- `error_msg`: сообщение об ошибке, если запрос не был успешен, иначе `None`\n- `error_code`: код ошибки, если запрос не был успешен, иначе `None`\n- `request_info`: словарь:\n\n```python\n{\n    \"method\": \"merchants.getInfo\",\n    \"params\": {\n        \"access_token\": \"some_token\",\n        ...\n    },\n    \"base_url\": \"URL, использовавшийся в запросе\"\n}\n```\n\n\n## Подписка на переводы\n\nДля подписки на переводы необходимо импортировать класс `pydomosed.hooks.Hook`.    \nРасширим пример выше, чтобы выводить все события переводов.\n\n```python\nfrom pydomosed import Session, Hook\nimport asyncio\n\ntoken = \"youraccesstoken\"\n\nasync def main():\n    async with Session(token) as domosed:\n        domohook = Hook(domosed, url=\"http://your.doma.in\", port=8080)\n\n        await domohook.start(\n            # Задаём функцию, которая будет вызываться на каждое событие. Здесь - вывод всех событий в консоль.\n            callback=lambda data: print(data) \n        )\n\n        info = await domosed.merchants.getInfo() # Возвращает объект Response\n        print(info)\n        \n\nasyncio.run(main())\n```\n\n### Использование подписки для Гонок\n\nЧтобы использовать подписку на переводы c API Гонок, замените `Hook.method` на `\"webhooks.create\"`:\n\n```python\nfrom pydomosed import Session, Hook\nimport asyncio\n\ntoken = \"youraccesstoken\"\nSession.base_url = Session.api_urls[\"race\"]\nHook.method = \"webhooks.create\"\n\nasync def main():\n    async with Session(token) as raceapi:\n        racehook = Hook(domosed, url=\"http://your.doma.in\", port=8080)\n\n        await racehook.start(\n            # Задаём функцию, которая будет вызываться на каждое событие. Здесь - вывод всех событий в консоль.\n            callback=lambda data: print(data) \n        )\n        info = await raceapi.merchants.get() # Возвращает объект Response\n        print(info)\n        \n\nasyncio.run(main())\n```\n\nКласс `pydomosed.hooks.Hook` принимает три обязательных параметра: \n- `session`: объект сессии\n- `url`: URL вашего сервера\n- `port`: порт\n\nПодписка запускается с помощью `await hook.start(callback)`, где `callback` - функция, в которую первым аргументом передаются события по мере поступления.\nЕсли необходимо остановить подписку до завершения работы всего приложения, можно использовать метод `hook.stop()`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/evtn/pydomosed/archive/v0.2.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/evtn/pydomosed",
    "keywords": "domosed api vk",
    "license": "Do What The F*ck You Want To Public License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydomosed",
    "package_url": "https://pypi.org/project/pydomosed/",
    "platform": "",
    "project_url": "https://pypi.org/project/pydomosed/",
    "project_urls": {
      "Download": "https://github.com/evtn/pydomosed/archive/v0.2.2.tar.gz",
      "Homepage": "https://github.com/evtn/pydomosed"
    },
    "release_url": "https://pypi.org/project/pydomosed/0.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.6.*",
    "summary": "pydomosed — Python Domosed/Race API Wrapper",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10378343,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb1adfc2dc9714d19c6df907f0e45d84437d8e126f843a1c6bb840fead4951a2",
          "md5": "7862c21bc18d1bb6ad5062d27afb420c",
          "sha256": "606a85152994a127a22f3978592385772fb44765d7fd54868c78dbac08df0165"
        },
        "downloads": -1,
        "filename": "pydomosed-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7862c21bc18d1bb6ad5062d27afb420c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.*",
        "size": 5668,
        "upload_time": "2020-10-21T12:53:48",
        "upload_time_iso_8601": "2020-10-21T12:53:48.324434Z",
        "url": "https://files.pythonhosted.org/packages/bb/1a/dfc2dc9714d19c6df907f0e45d84437d8e126f843a1c6bb840fead4951a2/pydomosed-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f066321051a7ae808d440f3e9f451689733f9e1355c89574a18644878cfe1142",
          "md5": "697ad68981fd2ea6aab233179faca65d",
          "sha256": "30427f7fd75fa514f395ecda55963d60f768021555d4efb4b509deb6894cc586"
        },
        "downloads": -1,
        "filename": "pydomosed-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "697ad68981fd2ea6aab233179faca65d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.*",
        "size": 6718,
        "upload_time": "2021-05-16T16:16:48",
        "upload_time_iso_8601": "2021-05-16T16:16:48.837517Z",
        "url": "https://files.pythonhosted.org/packages/f0/66/321051a7ae808d440f3e9f451689733f9e1355c89574a18644878cfe1142/pydomosed-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b119b9c81fbd9f915c3b5590d7306508fd55d0d8bed699090e6155f6e0a815c",
          "md5": "f37eee85b373a54c7385571d43601185",
          "sha256": "2c68205b099dcaabf0f1364a19b980b09d5750c3bec52ed66bfc1264c7cbc599"
        },
        "downloads": -1,
        "filename": "pydomosed-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f37eee85b373a54c7385571d43601185",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.*",
        "size": 6747,
        "upload_time": "2021-05-17T11:51:02",
        "upload_time_iso_8601": "2021-05-17T11:51:02.963179Z",
        "url": "https://files.pythonhosted.org/packages/1b/11/9b9c81fbd9f915c3b5590d7306508fd55d0d8bed699090e6155f6e0a815c/pydomosed-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de7808bcb7d79ad6b8ff60e8c02541051ffcbe1de0d2433ad5ffdffc685985f3",
          "md5": "dbab63e3cc22b6539c654add7de01c88",
          "sha256": "b778d77c3660707ded505693afa521679182fd9a59e1fd6f0460c3a93f2206d5"
        },
        "downloads": -1,
        "filename": "pydomosed-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dbab63e3cc22b6539c654add7de01c88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.*",
        "size": 6731,
        "upload_time": "2021-05-17T11:53:36",
        "upload_time_iso_8601": "2021-05-17T11:53:36.261594Z",
        "url": "https://files.pythonhosted.org/packages/de/78/08bcb7d79ad6b8ff60e8c02541051ffcbe1de0d2433ad5ffdffc685985f3/pydomosed-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de7808bcb7d79ad6b8ff60e8c02541051ffcbe1de0d2433ad5ffdffc685985f3",
        "md5": "dbab63e3cc22b6539c654add7de01c88",
        "sha256": "b778d77c3660707ded505693afa521679182fd9a59e1fd6f0460c3a93f2206d5"
      },
      "downloads": -1,
      "filename": "pydomosed-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "dbab63e3cc22b6539c654add7de01c88",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.*",
      "size": 6731,
      "upload_time": "2021-05-17T11:53:36",
      "upload_time_iso_8601": "2021-05-17T11:53:36.261594Z",
      "url": "https://files.pythonhosted.org/packages/de/78/08bcb7d79ad6b8ff60e8c02541051ffcbe1de0d2433ad5ffdffc685985f3/pydomosed-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}