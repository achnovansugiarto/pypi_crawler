{
  "info": {
    "author": "Nico GÃ¼rtler",
    "author_email": "nico.guertler@tuebingen.mpg.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# TriFinger RL Datasets\n\nThis repository provides offline reinforcement learning datasets collected on the TriFinger platform (simulated or real). The paper \"Benchmarking Offline Reinforcement Learning on Real-Robot Hardware\" (TODO: Link) discusses the datasets and benchmarks offline reinforcement learning methods on them. The code for loading the datasets follows the interface suggested by [D4RL](https://github.com/rail-berkeley/d4rl). \n\nTODO: Link to documentation.\nTODO: Prominently mention (and repeat later on) that the repository also provides versions of the datasets with image observations from three cameras.\n\nSome of the datasets were used during the [Real Robot Challenge 2022](https://real-robot-challenge.com).\n\n## Installation\n\nTo install the package run with python 3.8 in the root directory of the repository (we recommend doing this in a virtual environment):\n\n```bash\npip install --upgrade pip  # make sure recent version of pip is installed\npip install .\n```\n\n## Usage\n\n### Loading the dataset\n\nThe datasets are accessible via gym environments which are automatically registered when importing the package. They are automatically downloaded when requested and stored in `~/.trifinger_rl_datasets` as HDF5 files.\n\nThe datasets are named following the pattern `trifinger-cube-task-source-quality-v0` where `task` is either `push` or `lift`, `source` is either `sim` or `real` and `quality` can be either `mixed` or `expert`.\n\nBy default the observations are loaded as flat arrays. For the simulated datasets the environment can be stepped and visualized. Example usage (also see `demo/load_dataset.py`):\n\n```python\nimport gymnasium as gym\n\nimport trifinger_rl_datasets\n\nenv = gym.make(\n    \"trifinger-cube-push-sim-expert-v0\",\n    disable_env_checker=True,\n    visualization=True,  # enable visualization\n)\n\ndataset = env.get_dataset()\n\nprint(\"First observation: \", dataset[\"observations\"][0])\nprint(\"First action: \", dataset[\"actions\"][0])\nprint(\"First reward: \", dataset[\"rewards\"][0])\n\nobs = env.reset()\ndone = False\nwhile not done:\n    obs, rew, done, info = env.step(env.action_space.sample())\n```\n\nAlternatively, the observations can be obtained as nested dictionaries. This simplifies working with the data. As some parts of the observations might be more useful than others, it is also possible to filter the observations when requesting dictionaries (see `demo/load_filtered_dicts.py`):\n```python\n    # Nested dictionary defines which observations to keep.\n    # Everything that is not included or has value False\n    # will be dropped.\n    obs_to_keep = {\n        \"robot_observation\": {\n            \"position\": True,\n            \"velocity\": True,\n            \"fingertip_force\": False,\n        },\n        \"object_observation\": {\"keypoints\": True},\n    }\n    env = gym.make(\n        args.env_name,\n        disable_env_checker=True,\n        # filter observations,\n        obs_to_keep=obs_to_keep,\n    )\n```\nTo transform the observation back to a flat array after filtering, simply set the keyword argument `flatten_obs` to true. Note that the step and reset functions will transform observations in the same manner as the `get_dataset` method to ensure compatibility. A downside of working with observations in the form of dictionaries is that they cause a considerable memory overhead during dataset loading.\n\nAll datasets come in two versions: with and without camera observations. The versions with camera observations contain `-image` in their name. Despite PNG image compression they are more than one order of magnitude bigger than the imageless versions. To avoid running out of memory, a part of a dataset can be loaded by specifying a range of timesteps:\n```python\nenv = gym.make(\n    \"trifinger-cube-push-real-expert-image-v0\",\n    disable_env_checker=True\n)\n\n# load only a subset of obervations, actions and rewards\ndataset = env.get_dataset(rng=(1000, 2000))\n```\nThe camera observations corresponding to this range are then returned in `dataset[\"images\"]` with the following dimensions:\n```python\nn_timesteps, n_cameras, n_channels, height, width = dataset[\"images\"].shape\n```\nSince the camera frequency is lower than the control frequency, a camera image will repeat over several time steps. To load an array of camera images without this redundancy, the `get_image_data` method can be used:\n```python\n# images from 3 cameras for each timestep\nimage_stats = env.get_image_stats()\nn_cameras = image_stats[\"n_cameras\"]\nimages = env.get_image_data(rng=(0, n_cameras * n_camera_frames_to_load)) \n```\n\n### Evaluating a policy in simulation\n\nThis package contains an executable module `trifinger_rl_datasets.evaluate_sim`, which\ncan be used to evaluate a policy in simulation.  As arguments it expects the task\n(\"push\" or \"lift\") and a Python class that implements the policy, following the\n`PolicyBase` interface:\n\n    python3 -m trifinger_rl_datasets.evaluate_sim push my_package.MyPolicy\n\nFor more options see `--help`.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "offline reinforcement learning,reinforcement learning,robotics,TriFinger,Real Robot Challenge,dexterous manipulation",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "trifinger-rl-datasets",
    "package_url": "https://pypi.org/project/trifinger-rl-datasets/",
    "platform": null,
    "project_url": "https://pypi.org/project/trifinger-rl-datasets/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/trifinger-rl-datasets/0.9.2/",
    "requires_dist": [
      "gymnasium",
      "lmdb",
      "numpy",
      "numpy-quaternion",
      "opencv-python",
      "tqdm",
      "trifinger-simulation (>=1.4.0)",
      "zarr"
    ],
    "requires_python": "",
    "summary": "Gym environments which provide offline RL datasets collected on the TriFinger system.",
    "version": "0.9.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17494900,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06e1f3c2faca1270adb9a43fdac9c6b14894edd0a137f733c41d2fa90d8a8556",
          "md5": "51aeb1f98f1ee32d8d566fcce3423331",
          "sha256": "50a864734b1f763793850a15016e2fd369e0f45713ccba314e428739a17de5bf"
        },
        "downloads": -1,
        "filename": "trifinger_rl_datasets-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51aeb1f98f1ee32d8d566fcce3423331",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1140100,
        "upload_time": "2023-03-24T16:22:31",
        "upload_time_iso_8601": "2023-03-24T16:22:31.020043Z",
        "url": "https://files.pythonhosted.org/packages/06/e1/f3c2faca1270adb9a43fdac9c6b14894edd0a137f733c41d2fa90d8a8556/trifinger_rl_datasets-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "854c1a39139e50ae718f390ab3f6515c615bf4d8abdb361e47bbe66a2c047ef9",
          "md5": "66b3e67bf032fc2412059ba6eaf1e8cb",
          "sha256": "57d27c9f7e57c2eb912f0c4d0fc8ddfaf17c2d9dc77a18ee0a43947af80da6fb"
        },
        "downloads": -1,
        "filename": "trifinger_rl_datasets-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66b3e67bf032fc2412059ba6eaf1e8cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1144852,
        "upload_time": "2023-03-29T13:23:46",
        "upload_time_iso_8601": "2023-03-29T13:23:46.214333Z",
        "url": "https://files.pythonhosted.org/packages/85/4c/1a39139e50ae718f390ab3f6515c615bf4d8abdb361e47bbe66a2c047ef9/trifinger_rl_datasets-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6059dc90afaeb960065ca972d479a279f635ef227619b26aa8c1206c2c49dbc9",
          "md5": "9b53ab3738bdbcd3d68a2ffcc31d3d65",
          "sha256": "80825a35a004067b36def6c6f8e2226b53da4074432584cdb7e6dba3decf352f"
        },
        "downloads": -1,
        "filename": "trifinger_rl_datasets-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9b53ab3738bdbcd3d68a2ffcc31d3d65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1140260,
        "upload_time": "2023-03-29T13:23:50",
        "upload_time_iso_8601": "2023-03-29T13:23:50.196255Z",
        "url": "https://files.pythonhosted.org/packages/60/59/dc90afaeb960065ca972d479a279f635ef227619b26aa8c1206c2c49dbc9/trifinger_rl_datasets-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b1e1dc87d08f198824d19c57a4be4f3e8721cac2e0b1df006bd7eea93ef6890",
          "md5": "355fc5bbd63c988ed76bbe5587d08022",
          "sha256": "b729a436c5aa6bbb080ada8cc1aa6ffded1d2be8da6c748959de285dae63ec8b"
        },
        "downloads": -1,
        "filename": "trifinger_rl_datasets-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "355fc5bbd63c988ed76bbe5587d08022",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1144872,
        "upload_time": "2023-03-29T14:29:21",
        "upload_time_iso_8601": "2023-03-29T14:29:21.832400Z",
        "url": "https://files.pythonhosted.org/packages/9b/1e/1dc87d08f198824d19c57a4be4f3e8721cac2e0b1df006bd7eea93ef6890/trifinger_rl_datasets-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43c1fc4b723885e4dfbd2c4aa700bb813b3bc18ebaff7dd8c32f2e4d15e4afd7",
          "md5": "3dfbbf51162245790f4b4e0163ec75fa",
          "sha256": "35a6860873c4e066bbf247365f19ae27f22d91f210786bb4bbd53487d70195fa"
        },
        "downloads": -1,
        "filename": "trifinger_rl_datasets-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3dfbbf51162245790f4b4e0163ec75fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1140304,
        "upload_time": "2023-03-29T14:29:25",
        "upload_time_iso_8601": "2023-03-29T14:29:25.131780Z",
        "url": "https://files.pythonhosted.org/packages/43/c1/fc4b723885e4dfbd2c4aa700bb813b3bc18ebaff7dd8c32f2e4d15e4afd7/trifinger_rl_datasets-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b1e1dc87d08f198824d19c57a4be4f3e8721cac2e0b1df006bd7eea93ef6890",
        "md5": "355fc5bbd63c988ed76bbe5587d08022",
        "sha256": "b729a436c5aa6bbb080ada8cc1aa6ffded1d2be8da6c748959de285dae63ec8b"
      },
      "downloads": -1,
      "filename": "trifinger_rl_datasets-0.9.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "355fc5bbd63c988ed76bbe5587d08022",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1144872,
      "upload_time": "2023-03-29T14:29:21",
      "upload_time_iso_8601": "2023-03-29T14:29:21.832400Z",
      "url": "https://files.pythonhosted.org/packages/9b/1e/1dc87d08f198824d19c57a4be4f3e8721cac2e0b1df006bd7eea93ef6890/trifinger_rl_datasets-0.9.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43c1fc4b723885e4dfbd2c4aa700bb813b3bc18ebaff7dd8c32f2e4d15e4afd7",
        "md5": "3dfbbf51162245790f4b4e0163ec75fa",
        "sha256": "35a6860873c4e066bbf247365f19ae27f22d91f210786bb4bbd53487d70195fa"
      },
      "downloads": -1,
      "filename": "trifinger_rl_datasets-0.9.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3dfbbf51162245790f4b4e0163ec75fa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1140304,
      "upload_time": "2023-03-29T14:29:25",
      "upload_time_iso_8601": "2023-03-29T14:29:25.131780Z",
      "url": "https://files.pythonhosted.org/packages/43/c1/fc4b723885e4dfbd2c4aa700bb813b3bc18ebaff7dd8c32f2e4d15e4afd7/trifinger_rl_datasets-0.9.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}