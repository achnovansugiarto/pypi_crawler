{
  "info": {
    "author": "nect",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# apjson\n\n`apjson` is an asynchonus prettifier for json-like objects and a simple implementation of the `json` module and decorators. \n\n## Installation\nInstall via pip:\n```\npip install apjson\n```\n\n## Example\n```python\nfrom apjson import prettify, to_bytesio, jbytesio, jpretty\nimport asyncio\n\n\n@jbytesio(sort_keys=True, check_circular=True)\ndef sync_json():\n\n    return '{\"in\": \"this\", \"example\": \"the\", \"json\": \"function\", \"is\": \"sync\"}'\n\n\n@jpretty(silent=True)\nasync def async_json():\n\n    return \"{\\\"instead\\\": \\\"here\\\", \\\"is\\\": \\\"async\\\"}\"\n\n\nasync def main():\n\n    print((await to_bytesio('{\"this\": \"is\", \"an\": \"example\", \"here\": 123}')).read())\n\n    print(await prettify('{\"this\": \"is\", \"another\": \"example\", \"here\": True}'))\n\n    print(await prettify(b\"{\\\"X\\\": 123}\"))\n\n    print(await prettify(bytearray(\"{\\\"X\\\": 123}\", encoding='utf-8')))\n\n    #every decorated function should be awaited (even sync)\n    print((await sync_json()).read())\n    print(await async_json())\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```\n\n## Prettifier\n`prettify`: Prettifies and dumps the input (`str`, `bytes`, `bytearray`, `dict`) to json. Accepts every kwarg of `json.dumps`.\n```python\nawait prettify('{\"this\": \"is\", \"an_\": \"example\", \"here\": 123, \"even\": 1.02, \"but\": False}')\n\nawait prettify(b\"{\\\"X\\\": 123}\")\n\nawait prettify(bytearray(\"{\\\"X\\\": 123}\", encoding='utf-8'))\n\n#or use the decorator\n\n@jpretty(silent=True)\nasync def async_json():\n\n    #return a json-like str, bytes, bytearray, dict and the decorator will convert it\n    return \"{\\\"instead\\\": \\\"here\\\", \\\"is\\\": \\\"async\\\"}\"\n```\n\n## Other Utilities\n\n`to_bytes`: converts input (`str`, `bytes`, `bytearray`, `dict`) to `io.BytesIO`\n```python\nawait to_bytesio('{\"this\": \"is\", \"an_\": \"example\", \"here\": 123, \"even\": 1.02, \"but\": False}')\n\n#or use the decorator\n\n@jbytesio()\nasync def json_to_bytesio():\n\n    #return a json-like str, bytes, bytearray, dict and the decorator will convert it\n    return '{\"in\": \"this\", \"example\": \"the\", \"json\": \"function\", \"is\": \"sync\"}'\n```\n\n## Notes\n\nYou can use the boolean kwarg `silent` for skipping encoding exceptions.\n\nFor custom encoder use the kwarg `encoder` instead of `cls` in the function that uses the custom encoder.\n\nYou can decorate both sync and async functions but always return async function that needs to be awaited.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "prettifier json async decorator light",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "apjson",
    "package_url": "https://pypi.org/project/apjson/",
    "platform": "",
    "project_url": "https://pypi.org/project/apjson/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/apjson/0.0.3/",
    "requires_dist": [
      "check-manifest ; extra == 'dev'"
    ],
    "requires_python": ">=3.5, <4",
    "summary": "A simple asynchronus json prettifier.",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8191764,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d923ce73a67893187b242ffd1fc599aed3f67cd03a47b0abb7cbfe771b1d25a9",
          "md5": "976d9a0a0432d84791788301173dbfdc",
          "sha256": "5f8cf13a41e75e3f43a57a30f3712e64b04f5a4fc817f2508df2a492983f8d66"
        },
        "downloads": -1,
        "filename": "apjson-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "976d9a0a0432d84791788301173dbfdc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 6495,
        "upload_time": "2020-09-15T13:39:47",
        "upload_time_iso_8601": "2020-09-15T13:39:47.874018Z",
        "url": "https://files.pythonhosted.org/packages/d9/23/ce73a67893187b242ffd1fc599aed3f67cd03a47b0abb7cbfe771b1d25a9/apjson-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "494fd761c15926c1d28207ee3aff6bdba19b2b5013a4820cce1a2843371d2bc9",
          "md5": "97e7310b335bb62404ec48e7a954ce35",
          "sha256": "a48dc7010c38a63162be72574209201a5b62f77e249a797af0e3995c5901b905"
        },
        "downloads": -1,
        "filename": "apjson-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "97e7310b335bb62404ec48e7a954ce35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 5366,
        "upload_time": "2020-09-15T13:39:50",
        "upload_time_iso_8601": "2020-09-15T13:39:50.217665Z",
        "url": "https://files.pythonhosted.org/packages/49/4f/d761c15926c1d28207ee3aff6bdba19b2b5013a4820cce1a2843371d2bc9/apjson-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68c8b756e36d72cb79b1a33de3b024463d1f367edb79ef847fe615695d0e9629",
          "md5": "4c5873985a0cb3566cf86ee64d35577d",
          "sha256": "8bbcd889b54907436cdb62f4e8d3bb36696f0c45b73ccb877add695c72bf83fa"
        },
        "downloads": -1,
        "filename": "apjson-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c5873985a0cb3566cf86ee64d35577d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 6478,
        "upload_time": "2020-09-15T13:51:13",
        "upload_time_iso_8601": "2020-09-15T13:51:13.436204Z",
        "url": "https://files.pythonhosted.org/packages/68/c8/b756e36d72cb79b1a33de3b024463d1f367edb79ef847fe615695d0e9629/apjson-0.0.2-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5c2adb29923c0c31056a2edc2bdd5eabb6231e59d4c4d9b97d535a49b1133dd",
          "md5": "1cfcc692775d7619545dff23aae51971",
          "sha256": "27949a76b815b16f36acc35e368c584fd8d75d7fda87c0a7d5948f4d7c9886a0"
        },
        "downloads": -1,
        "filename": "apjson-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1cfcc692775d7619545dff23aae51971",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 5351,
        "upload_time": "2020-09-15T13:51:14",
        "upload_time_iso_8601": "2020-09-15T13:51:14.524565Z",
        "url": "https://files.pythonhosted.org/packages/c5/c2/adb29923c0c31056a2edc2bdd5eabb6231e59d4c4d9b97d535a49b1133dd/apjson-0.0.2.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27e40859cf97e1363d417dca5d2529acc42e7b953b491d64b0788119e3cbcbe8",
          "md5": "de7d5787dbd52506888b71b6f73b0074",
          "sha256": "f127f55f7788fa3c413bf5a58b8bd1f097661708547cabdc9ed1fe51f0308c04"
        },
        "downloads": -1,
        "filename": "apjson-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de7d5787dbd52506888b71b6f73b0074",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 6478,
        "upload_time": "2020-09-15T14:26:07",
        "upload_time_iso_8601": "2020-09-15T14:26:07.616078Z",
        "url": "https://files.pythonhosted.org/packages/27/e4/0859cf97e1363d417dca5d2529acc42e7b953b491d64b0788119e3cbcbe8/apjson-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daf184f33ec31bfdca4b77bd0254f235c892f37b29d4b67f9d7a96381b8fe77c",
          "md5": "f11bcd8e9076d7e21f67af0f7d468cf9",
          "sha256": "86b68cc6e6a7e5632342679e1173702224f40cddf0a93ab6dbfd89f0be7e1f09"
        },
        "downloads": -1,
        "filename": "apjson-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f11bcd8e9076d7e21f67af0f7d468cf9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 5368,
        "upload_time": "2020-09-15T14:26:09",
        "upload_time_iso_8601": "2020-09-15T14:26:09.058329Z",
        "url": "https://files.pythonhosted.org/packages/da/f1/84f33ec31bfdca4b77bd0254f235c892f37b29d4b67f9d7a96381b8fe77c/apjson-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27e40859cf97e1363d417dca5d2529acc42e7b953b491d64b0788119e3cbcbe8",
        "md5": "de7d5787dbd52506888b71b6f73b0074",
        "sha256": "f127f55f7788fa3c413bf5a58b8bd1f097661708547cabdc9ed1fe51f0308c04"
      },
      "downloads": -1,
      "filename": "apjson-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "de7d5787dbd52506888b71b6f73b0074",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5, <4",
      "size": 6478,
      "upload_time": "2020-09-15T14:26:07",
      "upload_time_iso_8601": "2020-09-15T14:26:07.616078Z",
      "url": "https://files.pythonhosted.org/packages/27/e4/0859cf97e1363d417dca5d2529acc42e7b953b491d64b0788119e3cbcbe8/apjson-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "daf184f33ec31bfdca4b77bd0254f235c892f37b29d4b67f9d7a96381b8fe77c",
        "md5": "f11bcd8e9076d7e21f67af0f7d468cf9",
        "sha256": "86b68cc6e6a7e5632342679e1173702224f40cddf0a93ab6dbfd89f0be7e1f09"
      },
      "downloads": -1,
      "filename": "apjson-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f11bcd8e9076d7e21f67af0f7d468cf9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <4",
      "size": 5368,
      "upload_time": "2020-09-15T14:26:09",
      "upload_time_iso_8601": "2020-09-15T14:26:09.058329Z",
      "url": "https://files.pythonhosted.org/packages/da/f1/84f33ec31bfdca4b77bd0254f235c892f37b29d4b67f9d7a96381b8fe77c/apjson-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}