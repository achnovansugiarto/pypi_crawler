{
  "info": {
    "author": "Osamu Matsuda",
    "author_email": "osmatsuda@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Documentation"
    ],
    "description": "# Pygments HTML Template --  pygments.formatter plugin\n\nYou can write a template for pygments HtmlFormatter with this package.\n\n## Template Example\n\n``` xml\n<Pygmentshtmltemplate>  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(1)-->\n  <h1>${title}</h1> <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(2)-->\n  <ol class=\"${cssclass}\">  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(3)-->\n    <Line>  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(4)-->\n      <li _=\"${highlighted}\" id=\"line-${lineno}\" class=\"hll\"><Tokens/></li> <!-- - - - - - - - - - - -(5)-->\n      <li id=\"line-${lineno}\"><Tokens/></li>  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - -(6)-->\n    </Line>\n    <Tokens>  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -(7)-->\n      <code class=\"${token_class} init\"><Token type=\"Name.Function\" fullmatch=\"__init__\"/></code> <!--(8)-->\n      <code class=\"${token_class}\" title=\"${token_type}\"><Token/></code>  <!-- - - - - - - - - - - - -(9)-->\n    </Tokens>\n  </ol> <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - (10)-->\n  <p>${filename}</p>  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - (11)-->\n</Pygmentshtmltemplate>\n```\n\n- (1): Must have a root node `Pygmentshtmltemplate`\n  - The `.parsers.parse` function uses parser `xml.sax.make_parser()` in the Python standard library. So the template must be able to read by the the SAX parser. You should not parse untrusted data.\n- (2), (3), (10), (11): Wrapping html parts\n  - `<Line>` (4) and `<Tokens>` (7) block represent line formats and each token format in each code line.\n  - In (2), `${title}` represents `title` option which is set to the formatter class. And that is replaced with its value.\n- (5), (6): Select a line wrapper\n  - Each of `<Line>` (4) children represents a line format. Html elements can have options value for testing. If all values non-nil, then that line will be rendered.\n    - `highlight` and `lineno` are not the formatter class options, but implicitly generated from `linenostart` and `hl_lines` option.\n\t- `False`, `None`, and empty Sequence are failed, but `0` (zero) is success.\n\t- Properties which name starts with `_` are only used for testing, but they are not rendered.\n\t- The formatter tries the tests in textual order. The last line of the `<Line>` block should be always successful.\n- (8), (9): Select a token wrapper\n  - Html properties are the same as line’s.\n    - `token_class` and `token_type` are not the formatter options.\n\t- `token_class` is generated by `formatter._get_css_classes(ttype: pygments.token._TokenType)`.\n\t- `token_type` is generated by `'.'.join(ttype: pygments.token._TokenType)`\n  - `<Token>` (8) element can have `type`, `match`, and `fullmatch` properties for testing.\n    - When Pygments gives the formatter a ‘tokentype’ and a ‘tokenvalue’, the formatter will test follows:\n\t  - `pygments.token.is_token_subtype(tokentype, pytments.token.string_to_tokentype(${type}))`\n\t  - `re.fullmatch(${fullmatch}, tokenvalue)` or `re.match(${match}, tokenvalue)`\n  - When all tests are failed, a ‘tokenvalue’ is rendered as it is.\n\n## Install\n\n```\n% pip install pygmentshtmltemplate\n```\n\nYou can confirm pygments.formatters plugins:\n\n``` python\n>>> import importlib\n>>> importlib.metadata.entry_points().select(group='pygments.formatters')\n[EntryPoint(name='pygmentshtmltemplate', value='pygmentshtmltemplate:FormatterWithTemplate', group='pygments.formatters')]\n```\n\n## Usage\n\n`FormatterWithTemplate` is the subclass of `pygments.formatters.HtmlFormatter`. `FormatterWithTemplate.name` is `FormatterWithTemplate`, and `FormatterWithTemplate.aliases` is `['fmtr_tmpl']`\n\n### Formatter options\n\nThe options `filename`, `cssclass`, `linenostart`, `hl_lines`, `classprefix`, and `title` are in common spec with the `HtmlFormatter`. Other options of the `HtmlFormatter` are suppressed by the `FormatterWithTemplate`. Almost other options may get alternatives by wrapping parts of a template.\n\nThere is the original option `template` which is set to the path of a template file. If the `template` isn’t set, the default template (the following code) is used.\n\n``` xml\n<Pygmentshtmltemplate>\n  <ol class=\"${cssclass}\">\n    <Line>\n      <li _=\"${highlighted}\" class=\"hll\"><Tokens/></li>\n      <li><Tokens/></li>\n    </Line>\n    <Tokens>\n      <code class=\"${token_class}\"><Token/></code>\n    </Tokens>\n  </ol>\n</Pygmentshtmltemplate>\n```\n\n### Command line\n\nThe command line interface is provided by the Pygments. For example:\n\n```\n$ pygmentize -f fmtr_tmpl -O template=template.xml -o output.html want_to_highlight.py\n\n$ pygmentize -f fmtr_tmpl -S default -a .highlight\n```\n\n### In reStructuredText\n\nYou can use this formatter in the reStructuredText with docutils.\n\nFirst, register the reST directive `pygmentshtmltemplate.docutis.PygHtmlTmplRstDirective`. The target source code can be provided at that directive content block. Or using `:file:` option, you can provide the source file.\n\n``` python\nfrom docutils.core import publish_string\nfrom docutils.writers import html4css1\nfrom docutils.parsers.rst import directives\n\nfrom pygmentshtmltemplate.docutils import PygHtmlTmplRstDirective\n\ndirectives.register_directive('fmtr-tmpl', PygHtmlTmplRstDirective)\n\nReST = f'''\\\nPygHtmlTmplRstDirective test\n============================\n\npygmentize a file\n\n.. fmtr-tmpl:: python :file: {__file__}\n\npygmentize a content block\n\n.. fmtr-tmpl:: python\n   :hl_lines: 1\n\n   \"\"\"highlight this line\"\"\"\n   def hello(foo):\n       print(f'hello, {{foo}}!')\n'''\n\nif __name__ == '__main__':\n    formatted = publish_string(ReST, writer=html4css1.Writer())\n    with open(output, 'wb') as out:\n        out.write(formatted)\n```\n\n## Future considered\n\n- Template for the `full` option\n- Now, the `formatter.get_style_defs()` method corresponds to the only default template.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/osmatsuda/pygmentshtmltemplate",
    "keywords": "syntax highlighting",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pygmentshtmltemplate",
    "package_url": "https://pypi.org/project/pygmentshtmltemplate/",
    "platform": null,
    "project_url": "https://pypi.org/project/pygmentshtmltemplate/",
    "project_urls": {
      "Homepage": "https://github.com/osmatsuda/pygmentshtmltemplate"
    },
    "release_url": "https://pypi.org/project/pygmentshtmltemplate/0.1.0/",
    "requires_dist": [
      "pygments (>=2)",
      "mako (>=1.1)"
    ],
    "requires_python": ">=3.10",
    "summary": "pygments.formatters plugin working together with a template",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15165075,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4c292c466ebe6a72d56fb6445aef04056fff772b2b6adec129171e6542d9361",
          "md5": "72d2c122646f8b949e1b50297c3c010b",
          "sha256": "5eb214b883c6b1f3582a7c9044f117d23502b9919d589b4a27f1733c981551c6"
        },
        "downloads": -1,
        "filename": "pygmentshtmltemplate-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72d2c122646f8b949e1b50297c3c010b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 13048,
        "upload_time": "2022-09-21T12:11:22",
        "upload_time_iso_8601": "2022-09-21T12:11:22.409003Z",
        "url": "https://files.pythonhosted.org/packages/d4/c2/92c466ebe6a72d56fb6445aef04056fff772b2b6adec129171e6542d9361/pygmentshtmltemplate-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7480f31dd85e00c01726a0e0aef8c603287870d33ef03a6082e42e9582369db1",
          "md5": "98f1002ebec66d71d24f650c66da14e7",
          "sha256": "cfce8d2d279432924ee8dc60536828f469d45afa5475af5d5280f53b058ef132"
        },
        "downloads": -1,
        "filename": "pygmentshtmltemplate-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "98f1002ebec66d71d24f650c66da14e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 13362,
        "upload_time": "2022-09-21T12:11:24",
        "upload_time_iso_8601": "2022-09-21T12:11:24.411446Z",
        "url": "https://files.pythonhosted.org/packages/74/80/f31dd85e00c01726a0e0aef8c603287870d33ef03a6082e42e9582369db1/pygmentshtmltemplate-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4c292c466ebe6a72d56fb6445aef04056fff772b2b6adec129171e6542d9361",
        "md5": "72d2c122646f8b949e1b50297c3c010b",
        "sha256": "5eb214b883c6b1f3582a7c9044f117d23502b9919d589b4a27f1733c981551c6"
      },
      "downloads": -1,
      "filename": "pygmentshtmltemplate-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72d2c122646f8b949e1b50297c3c010b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 13048,
      "upload_time": "2022-09-21T12:11:22",
      "upload_time_iso_8601": "2022-09-21T12:11:22.409003Z",
      "url": "https://files.pythonhosted.org/packages/d4/c2/92c466ebe6a72d56fb6445aef04056fff772b2b6adec129171e6542d9361/pygmentshtmltemplate-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7480f31dd85e00c01726a0e0aef8c603287870d33ef03a6082e42e9582369db1",
        "md5": "98f1002ebec66d71d24f650c66da14e7",
        "sha256": "cfce8d2d279432924ee8dc60536828f469d45afa5475af5d5280f53b058ef132"
      },
      "downloads": -1,
      "filename": "pygmentshtmltemplate-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "98f1002ebec66d71d24f650c66da14e7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 13362,
      "upload_time": "2022-09-21T12:11:24",
      "upload_time_iso_8601": "2022-09-21T12:11:24.411446Z",
      "url": "https://files.pythonhosted.org/packages/74/80/f31dd85e00c01726a0e0aef8c603287870d33ef03a6082e42e9582369db1/pygmentshtmltemplate-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}