{
  "info": {
    "author": "",
    "author_email": "\"Lj V. Miranda\" <ljvmiranda@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "<img src=\"https://raw.githubusercontent.com/ljvmiranda921/calamanCy/master/logo.png\" width=\"125\" height=\"125\" align=\"right\" />\n\n# calamanCy: NLP pipelines for Tagalog [WIP]\n\n**calamanCy** is a Tagalog natural language preprocessing framework made with\n[spaCy](https://spacy.io). Its goal is to provide pipelines and datasets for\ndownstream NLP tasks. This repository contains material for using calamanCy,\nreproduction of results, and guides on usage. \n\n> calamanCy takes inspiration from other language-specific [spaCy Universe frameworks](https://spacy.io/universe) such as \n> [DaCy](https://github.com/centre-for-humanities-computing/DaCy), [huSpaCy](https://github.com/huspacy/huspacy),\n> and [graCy](https://github.com/jmyerston/graCy). The name is based from [*calamansi*](https://en.wikipedia.org/wiki/Calamansi),\n> a citrus fruit native to the Philippines and used in traditional Filipino cuisine.\n\n## 🔧 Installation\n\nTo get started with calamanCy, simply install it using `pip` by running the\nfollowing line in your terminal:\n\n```sh\npip install calamancy\n``` \n\n## 👩‍💻 Usage\n\nTo use the calamanCy you first have to download either the medium, large, or\ntransformer model. To see a list of all available models, run:\n\n```python\nimport calamancy\nfrom model in calamancy.models():\n    print(model)\n\n# ..\n# tl_calamancy_md-0.1.0\n# tl_calamancy_lg-0.1.0\n# tl_calamancy_trf-0.1.0\n```\n\nTo download and load a model, run:\n\n```python\nnlp = calamancy.load(\"tl_calamancy_md-0.1.0\")\n```\n\nThis will download the model to the `.calamancy` directory of your home\ndirectory. You can also download a model to a specific directory:\n\n```python\ncalamancy.download_model(\"tl_calamancy_md-0.1.0\", save_directory)\nnlp = calamancy.load_model(\"tl_calamancy_md-0.1.0\", save_directory)\n```\n\nThe `nlp` object is an instance of spaCy's [`Language`\nclass](https://spacy.io/api/language), and you can use it as any other spaCy\npipeline. Head over to the [documentation]() for more tutorials.\n\n## 📦 Models and Datasets\n\ncalamanCy provides Tagalog models and datasets that you can use in your spaCy\npipelines. You can download them directly or use the `calamancy` Python library\nto access them.\n\n### Datasets\n\nYou can find structured evaluation results for each dataset in the `datasets/` directory.\n\n\n| Name                | Type | Task | Train | Dev | Test | Labels        | Description                                                       |\n|---------------------|------|------|-------|-----|------|---------------|-------------------------------------------------------------------|\n| `tl_tlunified_gold` | Gold | NER  | 6252  | 782 | 782  | PER, ORG, LOC | Annotated portion of the TLUnified corpus (Cruz and Cheng, 2021). |\n\n### Pipelines\n\nThe training procedure for each pipeline can be found in the `training/` directory. They are further\nsubdivided into versions. Each folder is an instance of a [spaCy project](https://spacy.io/usage/projects).\n\n\n| Name               | Components                                                    | Sources                                             | Description                                                                                                                                                                                    |\n|--------------------|---------------------------------------------------------------|-----------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `tl_calamancy_md`  | tok2vec, morphologizer, parser, trainable_lemmatizer, ner     | TLUnified (Cruz and Cheng, 2021), UD Tagalog (2023) | Floret vectors (200k) that were trained from the bulk of TLUnified were used for the tok2vec component. Similar to the `lg` variant, it also uses character pretraining to initialize weights. |\n| `tl_calamancy_lg`  | tok2vec, morphologizer, parser, trainable_lemmatizer, ner     | TLUnified (Cruz and Cheng, 2021), UD Tagalog (2023) | The tok2vec component uses fastText vectors (714k) trained from CommonCrawl and Wikipedia. It also uses character pretraining to initialize the token-to-vector weights.                       |\n| `tl_calamancy_trf` | transformer, morphologizer, parser, trainable_lemmatizer, ner | TLUnified (Cruz and Cheng, 2021), UD Tagalog (2023) | The transformer component uses roberta-tagalog-large.                                                                                                                                          |\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "nlp,natural language processing,language technology,tagalog",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "calamanCy",
    "package_url": "https://pypi.org/project/calamanCy/",
    "platform": null,
    "project_url": "https://pypi.org/project/calamanCy/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ljvmiranda921/calamanCy/issues",
      "Release Notes": "https://github.com/ljvmiranda921/calamanCy/releases",
      "Repository": "https://github.com/ljvmiranda921/calamanCy"
    },
    "release_url": "https://pypi.org/project/calamanCy/0.0.1/",
    "requires_dist": [
      "spacy (>=3.4.0)",
      "wasabi (>=0.9.1)",
      "typer (>=0.4.2)"
    ],
    "requires_python": ">=3.7",
    "summary": "NLP Pipelines for Tagalog",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16855537,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cdea7fd6c2b10dc4d8d9e550339412495021dae621e0b1eb566fd86a0e1df88",
          "md5": "3ffb0a3b22190a00443fa23b947a9a8c",
          "sha256": "ee7a135b36f98f954889b89f054c1c6a6497b8f40a407a03aeabe7dff7a4e3c5"
        },
        "downloads": -1,
        "filename": "calamanCy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ffb0a3b22190a00443fa23b947a9a8c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 3988,
        "upload_time": "2023-02-14T12:57:28",
        "upload_time_iso_8601": "2023-02-14T12:57:28.783540Z",
        "url": "https://files.pythonhosted.org/packages/0c/de/a7fd6c2b10dc4d8d9e550339412495021dae621e0b1eb566fd86a0e1df88/calamanCy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6306364007f971294849b5eb78b5eab982ec35478bb2bf7b912c34588acf4a75",
          "md5": "82b6e5cd3e1cc30d2ff4c2ff2be079d5",
          "sha256": "5a866d54d803ed6b9f7f98b9b9ec196fa189fcc1e493af5664d37af4adce17ee"
        },
        "downloads": -1,
        "filename": "calamanCy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "82b6e5cd3e1cc30d2ff4c2ff2be079d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4099,
        "upload_time": "2023-02-14T12:57:31",
        "upload_time_iso_8601": "2023-02-14T12:57:31.925562Z",
        "url": "https://files.pythonhosted.org/packages/63/06/364007f971294849b5eb78b5eab982ec35478bb2bf7b912c34588acf4a75/calamanCy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cdea7fd6c2b10dc4d8d9e550339412495021dae621e0b1eb566fd86a0e1df88",
        "md5": "3ffb0a3b22190a00443fa23b947a9a8c",
        "sha256": "ee7a135b36f98f954889b89f054c1c6a6497b8f40a407a03aeabe7dff7a4e3c5"
      },
      "downloads": -1,
      "filename": "calamanCy-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3ffb0a3b22190a00443fa23b947a9a8c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 3988,
      "upload_time": "2023-02-14T12:57:28",
      "upload_time_iso_8601": "2023-02-14T12:57:28.783540Z",
      "url": "https://files.pythonhosted.org/packages/0c/de/a7fd6c2b10dc4d8d9e550339412495021dae621e0b1eb566fd86a0e1df88/calamanCy-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6306364007f971294849b5eb78b5eab982ec35478bb2bf7b912c34588acf4a75",
        "md5": "82b6e5cd3e1cc30d2ff4c2ff2be079d5",
        "sha256": "5a866d54d803ed6b9f7f98b9b9ec196fa189fcc1e493af5664d37af4adce17ee"
      },
      "downloads": -1,
      "filename": "calamanCy-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "82b6e5cd3e1cc30d2ff4c2ff2be079d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4099,
      "upload_time": "2023-02-14T12:57:31",
      "upload_time_iso_8601": "2023-02-14T12:57:31.925562Z",
      "url": "https://files.pythonhosted.org/packages/63/06/364007f971294849b5eb78b5eab982ec35478bb2bf7b912c34588acf4a75/calamanCy-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}