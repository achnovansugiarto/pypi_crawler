{
  "info": {
    "author": "Ankan Ghosh",
    "author_email": "ankan@ideas2it.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# autoprototype\n\nThis library is designed for optimization of hyper-parameters in Deep Learning and Machine Learning Models. This module aims at\ngiving the user the best set of hyper-parameters for their DL/ML models. \nAlong with suggesting the hyper-parameters, this module\naims at returning to the user the best suggestive model framework/architecture based on the user input data. The user has \nto just provide the dataset and the module will return :\n\n\n1. The best model architecture based on the input data.\n2. The best hyper-parameters for the model architecture.\n\nIn this way, the whole process of experimenting with the architecture is narrowed down. This is easy and requires only few lines of codes. \nApart from the input data, only few other parameters are required by the module. All, the processes in rapid prototyping is automated thereafter, through this module.\nThe structure is based on some default values for parameters spaces required for the optimization. However, user would also have freedom to \ndynamically construct the search spaces for the hyperparameters.\n\n\nThis module is a wrap around the popular Hyper-parameter Optimization Tool called [`Optuna`](https://optuna.org/).\nOptuna is used for the optimization process using iterative trails. This module takes the data as the primary input and \nsuggests the user the model based on this Optuna trials. Optuna enables efficient hyperparameter optimization by adopting state-of-the-art\nalgorithms for sampling hyper-parameters and pruning efficiently unpromising trials. \n\nSome key features of Optuna, that we used are:\n\n1.[Lightweight, versatile, and platform agnostic architecture](https://optuna.readthedocs.io/en/stable/tutorial/10_key_features/001_first.html)\n\n2. [Pythonic search spaces](https://optuna.readthedocs.io/en/stable/tutorial/10_key_features/002_configurations.html)\n\n3. [Efficient Optimization Algorithms](https://optuna.readthedocs.io/en/stable/tutorial/10_key_features/003_efficient_optimization_algorithms.html)\n\nThis module, includiong all examples, is entirely written on Python.\n\n## Installation Guide\nUsers can use pip install to install the packages to start working on the prototyping.\nBelow is given the pip command.\n\n`pip install autoprototype`\n\nThe usage or the API calls for each supported ML/DL libraries are shown in the next sections.\n\n#Supported Integrations Libraries\n\n##SKLearn\nAt this point, the following models and their respective hyper-parameters are supported \n\na. Decision Tree\n\nb. SVC\n\nc. Linear Regression\n\nd. Ridge and Lasso Regression\n\ne. Random Forest \n\nf. Logistic Regression\n\nStarting the prototyping process consists of just two line of code \n\n        from autoprototype.sklearn import sklearnopt\n        hpo = sklearnopt(X_train,y_train)\n        trial , params , value = hpo.get_best_params(n_trials=trials)\n\nThis would return to us, the best trail, the set of best parameters including the model and the best objective value based on which the optimization is done.\n\nTo run the example navigate to [examples](https://github.com/Ideas2IT/auto-prototype/tree/master/examples) and use:\n\n`python iris.py`\n\n\n## tf.keras\nAt this point this supports, the following models and their hyper-parameters are supported:\n\n##### Artificial Neural Networks\n\nThis also requires few lines of codes as shown below.\n\n        from autoprototype.tf_keras import kerasopt\n        hpo = kerasopt(x_train,y_train,EPOCHS=10,classes=CLASSES)\n        trial , params , value = hpo.get_best_params(n_trials=n_trials)\n\nBy default it would run the trials and suggest you:\n\na. `n_layers` : Number of hidden layers in the model.\n\nb. `units_i` : Number of units in each layers\n\nc. `dropout_rate` : the dropout rate\n\nd. `lr` : Learning rate of optimizers\n\ne. `optimizer_name` : Name of the best optimizer\n\nThe loss criterion and the maximum number of layers, is set to `sparse_categorical_crossentropy` and `5` respectively, by default.\nUser can also provide any other loss function based on requirement as follows:\n\n    hpo = HyperparamOpt(x_train,y_train,EPOCHS=10,classes=CLASSES,loss=\"your_loss_function\",n_ann_layers=number_of layers)\n\n\nTo run the ANN example, navigate to [examples](https://github.com/Ideas2IT/auto-prototype/tree/master/examples) and run :\n\n`python ann_tfkeras.py`\n\n#### Convolution Neural Network\n\nThe API for CNN model is fairly the same as that of the above ANN. The user, must pass few other optional parameters to construct the suggestive CNN architecture. All other syntaxes are same.\n\n        hpo = kerasopt(x_train,y_train,EPOCHS=10,classes=120,\n                       max_units_fcl=400, max_conv_filters=1000,\n                       arch=\"cnn\",input_shape=(128,128,3),steps_per_epoch=10)\n\nTwo mandatory arguments to run CNN:\n\n`arch` refers to the specification of architecture to 'cnn', \n\n`input_shape` must be provided for any CNN models.\n\nOther optional arguments\n\n\n`max_units_fcl` : max units in the fully connected layers of CNN, default `1000`\n\n`max_nconv` : max number of convolution layers, default `5`\n\n`max_fully_conn_layers` : max number of fully connected layers. default `2`\n\n`steps_per_epoch` : Number of steps to be taken in an epoch, default `216`\n\n`max_conv_filters` : maximum filters in the convolution layers, default `256`\n\n\nTo run the CNN example [tf_keras/examples] and run :\n\nDownload the data from :\n\n`https://www.kaggle.com/c/dog-breed-identification/data`\n\nNavigate to examples folder\n\n`cd examples`\nMake an empty directory called data. \n`mkdir data`\nmove the downloaded data into the `data` folder. Please check the path to data provided in the `cnn_tfkeras.py` script!\n\nRun:\n`python cnn_tfkeras.py`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Ideas2IT/auto-prototype.git",
    "keywords": "autoprototype,auto-prototype,Hyper parameter Optimizations,Optuna",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autoprototype",
    "package_url": "https://pypi.org/project/autoprototype/",
    "platform": "",
    "project_url": "https://pypi.org/project/autoprototype/",
    "project_urls": {
      "Homepage": "https://github.com/Ideas2IT/auto-prototype.git"
    },
    "release_url": "https://pypi.org/project/autoprototype/1.2.2/",
    "requires_dist": [
      "tensorflow (==2.5.0)",
      "optuna"
    ],
    "requires_python": ">=3.6",
    "summary": "This is a module for Hyper-parameter tuning and rapid prototyping",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11643919,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf0ccd2341d6d155c94a70033aa11ea58beb19eb5f053758a662370757552202",
          "md5": "9cbb37c650dc2ee1e2912b3d42f41212",
          "sha256": "c2c83116e36e08d3dc78c9eca31b9b966f3f54fbe1ccc6e211e2af96f8698672"
        },
        "downloads": -1,
        "filename": "autoprototype-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cbb37c650dc2ee1e2912b3d42f41212",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7629,
        "upload_time": "2021-10-06T07:46:24",
        "upload_time_iso_8601": "2021-10-06T07:46:24.439681Z",
        "url": "https://files.pythonhosted.org/packages/bf/0c/cd2341d6d155c94a70033aa11ea58beb19eb5f053758a662370757552202/autoprototype-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76febf5d58603b9d38ed4e648234f0a84cf64d311ca1123d0364ae02a09a0a8e",
          "md5": "33bb823d0bfd6730aa221e69e087e181",
          "sha256": "b687bdec5b4aaf63916f1afc409611becdefdd3ad97a5ac40b77e5adf2d7e62b"
        },
        "downloads": -1,
        "filename": "autoprototype-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33bb823d0bfd6730aa221e69e087e181",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7608,
        "upload_time": "2021-09-30T08:04:40",
        "upload_time_iso_8601": "2021-09-30T08:04:40.616643Z",
        "url": "https://files.pythonhosted.org/packages/76/fe/bf5d58603b9d38ed4e648234f0a84cf64d311ca1123d0364ae02a09a0a8e/autoprototype-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91eaff66799eb24e53f2bde6a71ebf226a35d5c6e278de8dcd895d82d8cbc933",
          "md5": "2c31ce72ee88ba3cbacf902d1aca44d7",
          "sha256": "ad84f20ba1a33bb3fac6fad511f80f486309bf27b9b0c505cb18a0324c1a3759"
        },
        "downloads": -1,
        "filename": "autoprototype-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2c31ce72ee88ba3cbacf902d1aca44d7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7468,
        "upload_time": "2021-09-30T08:04:42",
        "upload_time_iso_8601": "2021-09-30T08:04:42.256999Z",
        "url": "https://files.pythonhosted.org/packages/91/ea/ff66799eb24e53f2bde6a71ebf226a35d5c6e278de8dcd895d82d8cbc933/autoprototype-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b59e0019ea4c9b2bdc63b19b5440d2e6aff3c51f841b32820230912df53019b",
          "md5": "8f1a152e44cfb6435a9f95ffe3ddd841",
          "sha256": "328906afe5da18a2a8cd3951306977e14787d6d2618a1c027d8d006949dc44fc"
        },
        "downloads": -1,
        "filename": "autoprototype-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f1a152e44cfb6435a9f95ffe3ddd841",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7608,
        "upload_time": "2021-10-06T07:47:40",
        "upload_time_iso_8601": "2021-10-06T07:47:40.422318Z",
        "url": "https://files.pythonhosted.org/packages/9b/59/e0019ea4c9b2bdc63b19b5440d2e6aff3c51f841b32820230912df53019b/autoprototype-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26e6770e2b19418b38b8f0eeecde1ffe3db9a8b5f2951057809639d6b18b429c",
          "md5": "12fb449da08a6b52a47def904f965a9d",
          "sha256": "42703177e819408ecce73bd598642f802fda38e94ceeb3a175d77a824dcf1600"
        },
        "downloads": -1,
        "filename": "autoprototype-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "12fb449da08a6b52a47def904f965a9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7465,
        "upload_time": "2021-10-06T07:47:42",
        "upload_time_iso_8601": "2021-10-06T07:47:42.681541Z",
        "url": "https://files.pythonhosted.org/packages/26/e6/770e2b19418b38b8f0eeecde1ffe3db9a8b5f2951057809639d6b18b429c/autoprototype-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efbbf096371aef728fe3b80bfe7c5a64a27d6af484cbda7482c69d75e37cf18a",
          "md5": "bf5559d4d2e394d1651281427dd29afb",
          "sha256": "e5439ba7ff93f2b5dd87ce1cc896575f9d2ff401e839bb817df95d0eb1dfd179"
        },
        "downloads": -1,
        "filename": "autoprototype-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf5559d4d2e394d1651281427dd29afb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7625,
        "upload_time": "2021-10-06T08:01:10",
        "upload_time_iso_8601": "2021-10-06T08:01:10.096062Z",
        "url": "https://files.pythonhosted.org/packages/ef/bb/f096371aef728fe3b80bfe7c5a64a27d6af484cbda7482c69d75e37cf18a/autoprototype-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e59fefaa3fbc6c5eb5bfb790a6df03cd0951a535d7270b68677246ea637a327",
          "md5": "228dfd617ab340346fb7f18c13e176e8",
          "sha256": "030a530d7d5b506deb5f708f9170a73d01f5532c07139ef3a3829d98ebd7af32"
        },
        "downloads": -1,
        "filename": "autoprototype-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "228dfd617ab340346fb7f18c13e176e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7456,
        "upload_time": "2021-10-06T08:01:12",
        "upload_time_iso_8601": "2021-10-06T08:01:12.052648Z",
        "url": "https://files.pythonhosted.org/packages/5e/59/fefaa3fbc6c5eb5bfb790a6df03cd0951a535d7270b68677246ea637a327/autoprototype-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d83130d0cfa0165d0c5828604d415bcdf267b1d2b63750b65090bd71e3610da0",
          "md5": "5f92db946f74c980bda517bf84f5e30d",
          "sha256": "4055a63aec8e749c527135bae8c9f772a5a3972434e49acf376e3f93feda4e64"
        },
        "downloads": -1,
        "filename": "autoprototype-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f92db946f74c980bda517bf84f5e30d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7637,
        "upload_time": "2021-10-06T13:03:04",
        "upload_time_iso_8601": "2021-10-06T13:03:04.326865Z",
        "url": "https://files.pythonhosted.org/packages/d8/31/30d0cfa0165d0c5828604d415bcdf267b1d2b63750b65090bd71e3610da0/autoprototype-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5433730f5bc53c27b30aaa3f1843bfda477886b2ae38ed9c802ca9865b0f061",
          "md5": "cf1dc6fe88a71bc69816a92e4423b0c9",
          "sha256": "61c4473dac8e7d586fc0187577c15532849871ca167f43dc6794fbc19dbaa5e3"
        },
        "downloads": -1,
        "filename": "autoprototype-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cf1dc6fe88a71bc69816a92e4423b0c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7485,
        "upload_time": "2021-10-06T13:03:06",
        "upload_time_iso_8601": "2021-10-06T13:03:06.418479Z",
        "url": "https://files.pythonhosted.org/packages/a5/43/3730f5bc53c27b30aaa3f1843bfda477886b2ae38ed9c802ca9865b0f061/autoprototype-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d83130d0cfa0165d0c5828604d415bcdf267b1d2b63750b65090bd71e3610da0",
        "md5": "5f92db946f74c980bda517bf84f5e30d",
        "sha256": "4055a63aec8e749c527135bae8c9f772a5a3972434e49acf376e3f93feda4e64"
      },
      "downloads": -1,
      "filename": "autoprototype-1.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f92db946f74c980bda517bf84f5e30d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7637,
      "upload_time": "2021-10-06T13:03:04",
      "upload_time_iso_8601": "2021-10-06T13:03:04.326865Z",
      "url": "https://files.pythonhosted.org/packages/d8/31/30d0cfa0165d0c5828604d415bcdf267b1d2b63750b65090bd71e3610da0/autoprototype-1.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5433730f5bc53c27b30aaa3f1843bfda477886b2ae38ed9c802ca9865b0f061",
        "md5": "cf1dc6fe88a71bc69816a92e4423b0c9",
        "sha256": "61c4473dac8e7d586fc0187577c15532849871ca167f43dc6794fbc19dbaa5e3"
      },
      "downloads": -1,
      "filename": "autoprototype-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cf1dc6fe88a71bc69816a92e4423b0c9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7485,
      "upload_time": "2021-10-06T13:03:06",
      "upload_time_iso_8601": "2021-10-06T13:03:06.418479Z",
      "url": "https://files.pythonhosted.org/packages/a5/43/3730f5bc53c27b30aaa3f1843bfda477886b2ae38ed9c802ca9865b0f061/autoprototype-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}