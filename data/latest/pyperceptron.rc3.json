{
  "info": {
    "author": "Paolo D'Elia",
    "author_email": "paolo.delia99@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Python-Perceptron\n\n![language](https://img.shields.io/badge/language-python-blue)\n![license](https://img.shields.io/badge/license-MIT-orange)\n\nAn Basic implementation of the perceptron, the build block a neural net.\n\n![perceptron](./assets/img/perceptron_350_328.png)\n\n## Table of contents\n\n- [Installation](#installation)\n- [Example](#example)\n- [Docs](#documentation)\n- [Contributing](#contributing)\n\n## Installation\n\n    pip install PyPerceptron\n    \n    \n## Example\n\nHere's how to instanitate the Perceptron\n\n```python\nfrom Perceptron.perceptron import Perceptron\n\np = Perceptron(number_inputs, learning_rate, Activation_fn, Loss_fn)\n```\n    \n```python\nfrom Perceptron.perceptron import Perceptron\nfrom Perceptron.functions.activationFunctions.heaviside import Heaviside\nfrom Perceptron.functions.lossFunctions.quadratic_loss import QuadraticLoss\n\ndataset = [[2.7810836, 2.550537003, 0],\n               [1.465489372, 2.362125076, 0],\n               [3.396561688, 4.400293529, 0],\n               [1.38807019, 1.850220317, 0],\n               [3.06407232, 3.005305973, 0],\n               [7.627531214, 2.759262235, 1],\n               [5.332441248, 2.088626775, 1],\n               [6.922596716, 1.77106367, 1],\n               [8.675418651, -0.242068655, 1],\n               [7.673756466, 3.508563011, 1]]\n\n\np = Perceptron(2, 0.1, Heaviside(), QuadraticLoss()) # number of inputs, learning rate, activation function, loss funciton\np.train(dataset, 3, 30)\n\nfor d in dataset:\n    assert p.evaluate(d[0], d[1]) == d[2]\n\n```\n\nTo find out more about the math behind the perceptron, check out the [notebook](./demo/What_is_a_perceptron.ipynb) with the fully explanation.\n\nIf you wanna see more about how to use the perceptron checkout the [demos](./demo).\n\n## Documentation\n\n- [Perceptron](#perceptron) \n- [Function](#function)\n- [Activation Function](#activation-function)\n- [Loss Function](#loss-function)\n\n### Perceptron\n\nHere's how to create a perceptron instance\n\n```python\n\nfrom Perceptron.perceptron import Perceptron\n\np = Perceptron(no_inputs: int, lr: float, act_fn:Function, loss_fn:Function)\n\n```\n- **no_inputs**: are the number of inputs of the perceptron\n- **lr**: the learning rate of the preceptron\n- **act_fn**: the activation function of the perceptron\n- **loss_fn**: the loss function of the perceptron\n\n> Note both **act_fn** and **loss_fn** must be instance of the class **Function**\n\n#### Attributes\n\n- **no_input** (*int*) : the number of inputs of the perceptron\n- **bias** (*float*): the bias of the perceptron\n- **weights** (*list*): the weights of the perceptron\n- **act_fn** (*Function*): the activation function of the perceptron\n- **loss_fn** (*Function*): the loss function of the perceptron\n- **lr** (*float*): the learning rate of the perceptron\n\n---\n\n```python\np.evaluate(inputs: list)\n```\n\nReturn the prediction of the perceptron\n- **inputs**: the inputs list that the vector have to evaluate, and the last element must be the prediced value\n\n> Note: the length of the **inputs** must be *len*(p.no_inputs) + 1  \n---\n\n```python\np.train(training_data: list, mini_batches_size: int, n_epoch=30: int)\n```\n\nTrain the perceptron using mini batch stocastic gradient descend\n\n- **training_data**: the data used to train the preceptron that will be divide in mini batches\n- **mini_batches_size**: the size of the mini batch\n- **n_epoch**: number of iteration\n\n\n> Note: the length of the **training_data** must be *len*(p.no_inputs) \n---\n\n### Function\n\nThe class function is just a abstract class that represent a mathematical function\n\nThe only attribute that it has is:\n\n- **is_diff**: True if the function is differentiable false otherwise\n\n---\n\n```python\n\nfn.compute(a) -> float\n\n```\n\nAbstract method that every child of the Function class implement, and it return the computed value of the given function\n\n- **a**: the input of the function, the type can vary on the function (most of the time is an int or a tuple)\n\n---\n\n\n```python\n\nfn.compute_derivative(a) -> float\n\n```\n\nAbstract method that every child of the Function class implement, and it return the computed value of the derivative of the given function\n\n- **a**: the input of the function, the type can vary on the function (most of the time is an int or a tuple)\n\n---\n\n### Activation Function\n\nThe activation function already included in the package are:\n\n- Heaviside (1/0 step function)\n- Identity (the identity function)\n- Sign\n- ReLU\n- Leaky ReLU\n- Smooth ReLU\n- Sigmoid\n- Tanh (Hyperbolic tangent)\n- Softmax\n\n```python\n\nfrom Perceptron.functions.activationFunctions.sigmoid import Sigmoid\n\nfn = Sigmoid()\n\nprint(fn.compute(0)) # 0.5\n\n```\n\n### Loss Function\n\nThe loss functions already included in the package are:\n\n- Quadratic Loss\n- Cross Entropy Loss\n\n## Contributing\n\nFeel free report issues and contribute to the project, making it better.\n\n## Author\n\nPaolo D'Elia\n\n## License \n\nMIT",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/paolodelia99/Python-Perceptron",
    "keywords": "Perceptron,Neural Net,Machine learning",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyPerceptron",
    "package_url": "https://pypi.org/project/PyPerceptron/",
    "platform": "",
    "project_url": "https://pypi.org/project/PyPerceptron/",
    "project_urls": {
      "Demo": "https://github.com/paolodelia99/Python-Perceptron/tree/master/demo",
      "Homepage": "https://github.com/paolodelia99/Python-Perceptron",
      "Repo": "https://github.com/paolodelia99/Python-Perceptron"
    },
    "release_url": "https://pypi.org/project/PyPerceptron/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python implementation of the build block of the Neural Network, The Perceptron",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7456544,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6523753d6ac4d833abdac6c61718bd07a51bf48f79eb229a31bd7933bff9eca",
          "md5": "824d54f352ded308b5eb08c5099bdcab",
          "sha256": "b00cf5bb3dd99203888bf20f5e29df4b9d8b2de0b67f7f2968ee571fc9c7ee7d"
        },
        "downloads": -1,
        "filename": "PyPerceptron-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "824d54f352ded308b5eb08c5099bdcab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4281,
        "upload_time": "2020-06-10T19:42:37",
        "upload_time_iso_8601": "2020-06-10T19:42:37.035355Z",
        "url": "https://files.pythonhosted.org/packages/c6/52/3753d6ac4d833abdac6c61718bd07a51bf48f79eb229a31bd7933bff9eca/PyPerceptron-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "621c71af145dda1d80506b06d3b018d89ec259269a15c11e26ee27a8e162b02b",
          "md5": "d5e82b2c4b5c3ded785e9ff52365c2e5",
          "sha256": "b8ebb29d8437c0794f04d216a9606edf3c413b9b760e0c180c5b8b9b356ed020"
        },
        "downloads": -1,
        "filename": "PyPerceptron-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5e82b2c4b5c3ded785e9ff52365c2e5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4574,
        "upload_time": "2020-06-10T20:09:26",
        "upload_time_iso_8601": "2020-06-10T20:09:26.266780Z",
        "url": "https://files.pythonhosted.org/packages/62/1c/71af145dda1d80506b06d3b018d89ec259269a15c11e26ee27a8e162b02b/PyPerceptron-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dcb285ede05b25eab46ca8f58d1416a74e23864a4ff64d50598272c490c66a7",
          "md5": "76c5d896fe2ee50473dbfe32bf493996",
          "sha256": "9488fb7f62d280365a4af7eba2cae5238ac8580d370c8f359d148183b39a34c2"
        },
        "downloads": -1,
        "filename": "PyPerceptron-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "76c5d896fe2ee50473dbfe32bf493996",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4747,
        "upload_time": "2020-06-10T20:11:53",
        "upload_time_iso_8601": "2020-06-10T20:11:53.442395Z",
        "url": "https://files.pythonhosted.org/packages/1d/cb/285ede05b25eab46ca8f58d1416a74e23864a4ff64d50598272c490c66a7/PyPerceptron-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b272c6d48605f5daa2913b301a9ff66752602df7afcc504b37848fedbd662768",
          "md5": "92a1a5c06873ed4113407ac13be64112",
          "sha256": "80f045495cc3f1fba5d30f9f2d55952a69494f60b74cf0817f891505044903dc"
        },
        "downloads": -1,
        "filename": "PyPerceptron-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "92a1a5c06873ed4113407ac13be64112",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10102,
        "upload_time": "2020-06-11T20:34:23",
        "upload_time_iso_8601": "2020-06-11T20:34:23.167148Z",
        "url": "https://files.pythonhosted.org/packages/b2/72/c6d48605f5daa2913b301a9ff66752602df7afcc504b37848fedbd662768/PyPerceptron-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b272c6d48605f5daa2913b301a9ff66752602df7afcc504b37848fedbd662768",
        "md5": "92a1a5c06873ed4113407ac13be64112",
        "sha256": "80f045495cc3f1fba5d30f9f2d55952a69494f60b74cf0817f891505044903dc"
      },
      "downloads": -1,
      "filename": "PyPerceptron-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "92a1a5c06873ed4113407ac13be64112",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10102,
      "upload_time": "2020-06-11T20:34:23",
      "upload_time_iso_8601": "2020-06-11T20:34:23.167148Z",
      "url": "https://files.pythonhosted.org/packages/b2/72/c6d48605f5daa2913b301a9ff66752602df7afcc504b37848fedbd662768/PyPerceptron-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}