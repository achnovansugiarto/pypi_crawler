{
  "info": {
    "author": "Soeren Metje",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# CrystalDiskMark-Parser\n\n![CI workflow](https://github.com/soerenmetje/CrystalDiskMark-Parser/actions/workflows/main.yml/badge.svg)\n\nRead in the .txt files generated by [CrystalDiskMark](https://en.wikipedia.org/wiki/CrystalDiskMark) in Python. \nThis library was created to enable visualizing the benchmark results of \n[CrystalDiskMark](https://en.wikipedia.org/wiki/CrystalDiskMark) in an automated way. \nThe following plot created with [matplotlib](https://pypi.org/project/matplotlib/) is an example.\n\n![Example Plot Benchmark](examples/plots/example3.png)\n\n\n## Install\n\n```shell\npip install crystaldiskmark-parser\n```\nSee https://pypi.org/project/crystaldiskmark-parser/ for more information.\n\n## Overview\n\nThe library provides two Functions:\n- `parse(filepath)`: Returns parsed data as a `crystaldiskmark_parser.BenchmarkResult`\n- `parse_df(filepath)`: Returns parsed data as a `pandas.DataFrame`\n\nUsing `parse_df(filepath)` is recommended.\n\n\n\n## Example 0: Print DataFrame\n\n```python\nfrom crystaldiskmark_parser.parser import parse_df\n\ndf = parse_df(\"../test/data/CrystalDiskMark_20210622162528 WD Blue 3D 1TB WDS100T2B0A.txt\")\nprint(df)\n```\n### Output\n```\n\n                  date                              test  \\\n0  2021/06/22 17:19:21  1 GiB (x5) [E: 96% (894/932GiB)]   \n1  2021/06/22 17:19:21  1 GiB (x5) [E: 96% (894/932GiB)]   \n2  2021/06/22 17:19:21  1 GiB (x5) [E: 96% (894/932GiB)]   \n3  2021/06/22 17:19:21  1 GiB (x5) [E: 96% (894/932GiB)]   \n4  2021/06/22 17:19:21  1 GiB (x5) [E: 96% (894/932GiB)]   \n5  2021/06/22 17:19:21  1 GiB (x5) [E: 96% (894/932GiB)]   \n6  2021/06/22 17:19:21  1 GiB (x5) [E: 96% (894/932GiB)]   \n7  2021/06/22 17:19:21  1 GiB (x5) [E: 96% (894/932GiB)]   \n\n                             time                                    os  \\\n0  Measure 5 sec / Interval 5 sec  Windows 10  [10.0 Build 19042] (x64)   \n1  Measure 5 sec / Interval 5 sec  Windows 10  [10.0 Build 19042] (x64)   \n2  Measure 5 sec / Interval 5 sec  Windows 10  [10.0 Build 19042] (x64)   \n3  Measure 5 sec / Interval 5 sec  Windows 10  [10.0 Build 19042] (x64)   \n4  Measure 5 sec / Interval 5 sec  Windows 10  [10.0 Build 19042] (x64)   \n5  Measure 5 sec / Interval 5 sec  Windows 10  [10.0 Build 19042] (x64)   \n6  Measure 5 sec / Interval 5 sec  Windows 10  [10.0 Build 19042] (x64)   \n7  Measure 5 sec / Interval 5 sec  Windows 10  [10.0 Build 19042] (x64)   \n\n      mode  profile         comment read_write type  blocksize unit_blocksize  \\\n0  [Admin]  Default  WD Blue 3D 1TB       read  SEQ        1.0            MiB   \n1  [Admin]  Default  WD Blue 3D 1TB       read  SEQ        1.0            MiB   \n2  [Admin]  Default  WD Blue 3D 1TB       read  RND        4.0            KiB   \n3  [Admin]  Default  WD Blue 3D 1TB       read  RND        4.0            KiB   \n4  [Admin]  Default  WD Blue 3D 1TB      write  SEQ        1.0            MiB   \n5  [Admin]  Default  WD Blue 3D 1TB      write  SEQ        1.0            MiB   \n6  [Admin]  Default  WD Blue 3D 1TB      write  RND        4.0            KiB   \n7  [Admin]  Default  WD Blue 3D 1TB      write  RND        4.0            KiB   \n\n  queues threads     rate unit_rate     iops unit_iops   latency unit_latency  \n0      8       1  531.458      MB/s    506.8      IOPS  15726.77           us  \n1      1       1  489.838      MB/s    467.1      IOPS   2139.41           us  \n2     32       1  269.406      MB/s  65772.9      IOPS    470.58           us  \n3      1       1   41.375      MB/s  10101.3      IOPS     98.75           us  \n4      8       1  498.656      MB/s    475.6      IOPS  16750.30           us  \n5      1       1  485.163      MB/s    462.7      IOPS   2159.18           us  \n6     32       1  222.691      MB/s  54367.9      IOPS    583.02           us  \n7      1       1   99.900      MB/s  24389.6      IOPS     40.73           us  \n```\n## Example 1: Visualize benchmark results\n\n```python\nfrom crystaldiskmark_parser.parser import parse_df\nimport matplotlib.pyplot as plt\n\n#  Read to one big DataFrame\ndf = parse_df(\"../test/data/CrystalDiskMark_20210622162528 WD Blue 3D 1TB WDS100T2B0A.txt\")\ndf = df.append(parse_df(\"../test/data/CrystalDiskMark_20210622163451 SAMSUNG 840 EVO 120GB.txt\"))\ndf = df.append(parse_df(\"../test/data/CrystalDiskMark_20210626154221 Crucial P2 2TB on H87M.txt\"))\ndf = df.append(parse_df(\"../test/data/CrystalDiskMark_20210627172807 Crucial P2 2TB on X370.txt\"))\nprint(df.info())\n\n# Extract relevant rows\ndata = df.loc[(df['read_write'] == 'read')\n              & (df['type'] == \"SEQ\")\n              & (df['queues'] == 8)\n              & (df['blocksize'] == 1)\n              & (df['unit_blocksize'] == \"MiB\")]\n\n# Extract relevant columns\nrate = data[\"rate\"]\nname = data[\"comment\"]\n\n# Plot\nfig, ax = plt.subplots(figsize=(10, 6))\ncon = ax.bar(name, rate)\nax.bar_label(con)\nax.set_title(\"Sequential Read Rate of SSDs\")\nax.set_ylabel(\"Rate [MB/s]\")\nplt.show()\n```\n\n![Example Plot Benchmark](examples/plots/example1.png)\n\n\n## Example 2: Visualize benchmark results (extended)\n\n```python\n\nfrom crystaldiskmark_parser.parser import parse_df\n\nimport matplotlib.pyplot as plt\n\n\n#%%\n# Read to one big DataFrame\ndf = parse_df(\"../test/data/CrystalDiskMark_20210622162528 WD Blue 3D 1TB WDS100T2B0A.txt\")\ndf = df.append(parse_df(\"../test/data/CrystalDiskMark_20210622163451 SAMSUNG 840 EVO 120GB.txt\"))\ndf = df.append(parse_df(\"../test/data/CrystalDiskMark_20210626154221 Crucial P2 2TB on H87M.txt\"))\ndf = df.append(parse_df(\"../test/data/CrystalDiskMark_20210627172807 Crucial P2 2TB on X370.txt\"))\n\n# Extract relevant rows\ndata = df.loc[(df['read_write'] == 'read')\n              & (df['type'] == \"SEQ\")\n              & (df['queues'] == 8)\n              & (df['blocksize'] == 1)\n              & (df['unit_blocksize'] == \"MiB\")]\n\n# Extract relevant columns\nread_rate = data[\"rate\"]\nread_rate = [round(x) for x in read_rate]\nname = data[\"comment\"]\n\n# Extract relevant rows\ndata = df.loc[(df['read_write'] == 'write')\n              & (df['type'] == \"SEQ\")\n              & (df['queues'] == 8)\n              & (df['blocksize'] == 1)\n              & (df['unit_blocksize'] == \"MiB\")]\n\n# Extract relevant columns\nwrite_rate = data[\"rate\"]\nwrite_rate = [round(x) for x in write_rate]\n\n# Plot\nfig, ax = plt.subplots(figsize=(12, 6))\ncon = ax.bar([float(x)  + .25 for x in  range(len(read_rate))], read_rate, tick_label=name, width = 0.25)\nax.bar_label(con)\ncon = ax.bar([float(x)  + .5 for x in  range(len(write_rate))], write_rate, width = 0.25)\nax.bar_label(con)\nax.set_title(\"Sequential Read & Write Rate of SSDs\")\nax.set_ylabel(\"Rate [MB/s]\")\nplt.legend([\"read\", \"write\"])\nplt.show()\n```\n\n![Example Plot Benchmark](examples/plots/example3.png)\n\n## Example 3: Visualize benchmark results (without DataFrame)\n\n```python\n\nfrom crystaldiskmark_parser.parser import parse\nimport matplotlib.pyplot as plt\n\nresult_wd = parse(\"data/CrystalDiskMark_20210622162528 WD Blue 3D 1TB WDS100T2B0A.txt\")\nresult_samsung = parse(\"data/CrystalDiskMark_20210622163451 SAMSUNG 840 EVO 120GB.txt\")\n\ndata = [result_wd.read_results[0].rate, result_samsung.read_results[0].rate]\n\nfig, ax = plt.subplots(figsize=(10,6))\ncon = ax.bar([\"WD Blue 3D 1TB\", \"Samsung 840 EVO 120GB\"], data)\nax.bar_label(con)\nax.set_title(\"Read Rate of SSDs\")\nax.set_ylabel(f\"Rate [{result_wd.read_results[0].unit_rate}]\")\nplt.show()\n```\n\n![Example Plot Benchmark](examples/plots/example0.png)\n\n## Example 4: Print BenchmarkResult\n\n```python\nfrom crystaldiskmark_parser.parser import parse\n\nbenchmark_result = parse(\"data/CrystalDiskMark_20210622162528 WD Blue 3D 1TB WDS100T2B0A.txt\")\nprint(benchmark_result)\n```\n\n### Output\n\n```\nBenchmarkResult({'test': '1 GiB (x5) [E: 96% (894/932GiB)]', 'date': '2021/06/22 17:19:21', 'os': 'Windows 10  [10.0 Build 19042] (x64)', 'profile': 'Default', 'time': 'Measure 5 sec / Interval 5 sec', 'mode': '[Admin]', 'comment': 'WD Blue 3D 1TB WDS100T2B0A', 'write_results': [TestResult({'test_type': 'SEQ', 'block_size': 1.0, 'unit_block_size': 'MiB', 'queues': 8, 'threads': 1, 'rate': 498.656, 'unit_rate': 'MB/s', 'iops': 475.6, 'unit_iops': 'IOPS', 'latency': 16750.3, 'unit_latency': 'us'}), TestResult({'test_type': 'SEQ', 'block_size': 1.0, 'unit_block_size': 'MiB', 'queues': 1, 'threads': 1, 'rate': 485.163, 'unit_rate': 'MB/s', 'iops': 462.7, 'unit_iops': 'IOPS', 'latency': 2159.18, 'unit_latency': 'us'}), TestResult({'test_type': 'RND', 'block_size': 4.0, 'unit_block_size': 'KiB', 'queues': 32, 'threads': 1, 'rate': 222.691, 'unit_rate': 'MB/s', 'iops': 54367.9, 'unit_iops': 'IOPS', 'latency': 583.02, 'unit_latency': 'us'}), TestResult({'test_type': 'RND', 'block_size': 4.0, 'unit_block_size': 'KiB', 'queues': 1, 'threads': 1, 'rate': 99.9, 'unit_rate': 'MB/s', 'iops': 24389.6, 'unit_iops': 'IOPS', 'latency': 40.73, 'unit_latency': 'us'})], 'read_results': [TestResult({'test_type': 'SEQ', 'block_size': 1.0, 'unit_block_size': 'MiB', 'queues': 8, 'threads': 1, 'rate': 531.458, 'unit_rate': 'MB/s', 'iops': 506.8, 'unit_iops': 'IOPS', 'latency': 15726.77, 'unit_latency': 'us'}), TestResult({'test_type': 'SEQ', 'block_size': 1.0, 'unit_block_size': 'MiB', 'queues': 1, 'threads': 1, 'rate': 489.838, 'unit_rate': 'MB/s', 'iops': 467.1, 'unit_iops': 'IOPS', 'latency': 2139.41, 'unit_latency': 'us'}), TestResult({'test_type': 'RND', 'block_size': 4.0, 'unit_block_size': 'KiB', 'queues': 32, 'threads': 1, 'rate': 269.406, 'unit_rate': 'MB/s', 'iops': 65772.9, 'unit_iops': 'IOPS', 'latency': 470.58, 'unit_latency': 'us'}), TestResult({'test_type': 'RND', 'block_size': 4.0, 'unit_block_size': 'KiB', 'queues': 1, 'threads': 1, 'rate': 41.375, 'unit_rate': 'MB/s', 'iops': 10101.3, 'unit_iops': 'IOPS', 'latency': 98.75, 'unit_latency': 'us'})]})\n```\n\n\n## Development\n\n### Build and Publish a New Release\n\nThis repository has a CI/CD pipeline that handle building and publishing the package to PyPI.\nIt is triggered by a commit or pull request on `main` branch. \n\n#### Steps to publish a new release:\n\n1. Check if the version number is correctly set in `setup.py` and `__init__.py`\n2. Create a new pull request from `dev` branch to `main` branch. Accept this pull request\n3. Wait until the pipeline ends\n4. Check if package is available on [PyPI](https://pypi.org/project/crystaldiskmark-parser/)\n5. Create a new *Release* in GitHub. Set the version number as the name\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/soerenmetje/CrystalDiskMark-Parser",
    "keywords": "python,parser,benchmark",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crystaldiskmark-parser",
    "package_url": "https://pypi.org/project/crystaldiskmark-parser/",
    "platform": "",
    "project_url": "https://pypi.org/project/crystaldiskmark-parser/",
    "project_urls": {
      "Homepage": "https://github.com/soerenmetje/CrystalDiskMark-Parser"
    },
    "release_url": "https://pypi.org/project/crystaldiskmark-parser/1.0.3/",
    "requires_dist": [
      "pandas"
    ],
    "requires_python": "",
    "summary": "Read in the .txt files generated by CrystalDiskMark in Python",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10821023,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "567bd3f569e9e754e922dac9218ced88503398588aae3738572ddb9614936f82",
          "md5": "d011d63ea957c2e0027fa1ef966d3039",
          "sha256": "bd3626c6621a88b3ff20baca89fade51b9b04dbbee00ba1e6a56aa6fb4572971"
        },
        "downloads": -1,
        "filename": "crystaldiskmark_parser-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d011d63ea957c2e0027fa1ef966d3039",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4403,
        "upload_time": "2021-06-29T22:54:07",
        "upload_time_iso_8601": "2021-06-29T22:54:07.543592Z",
        "url": "https://files.pythonhosted.org/packages/56/7b/d3f569e9e754e922dac9218ced88503398588aae3738572ddb9614936f82/crystaldiskmark_parser-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffcaf55d6d4644cd868ef734660a2cd0134a8c333e7f3a35af4c8192bc3a6109",
          "md5": "96766b8b9ced990e9113c2576c5f928b",
          "sha256": "526b0ad3af0300de25d7a571703dba7f95eab7b3ba5f973714c2f1c6ca698e7f"
        },
        "downloads": -1,
        "filename": "crystaldiskmark_parser-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "96766b8b9ced990e9113c2576c5f928b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4678,
        "upload_time": "2021-06-29T22:54:11",
        "upload_time_iso_8601": "2021-06-29T22:54:11.033055Z",
        "url": "https://files.pythonhosted.org/packages/ff/ca/f55d6d4644cd868ef734660a2cd0134a8c333e7f3a35af4c8192bc3a6109/crystaldiskmark_parser-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b421754a93ab34d0e87675c1d14e6e8273cbd454728257f003b5ee4461e9395a",
          "md5": "6ad76c113ee4743f5a6a714a41a0acc6",
          "sha256": "a9f7944c652589cfb7ce7725adc9aa9da3f08de670c56a6dc9bfbebf15a1b654"
        },
        "downloads": -1,
        "filename": "crystaldiskmark_parser-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ad76c113ee4743f5a6a714a41a0acc6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18198,
        "upload_time": "2021-06-29T22:54:09",
        "upload_time_iso_8601": "2021-06-29T22:54:09.502313Z",
        "url": "https://files.pythonhosted.org/packages/b4/21/754a93ab34d0e87675c1d14e6e8273cbd454728257f003b5ee4461e9395a/crystaldiskmark_parser-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7303dcac52c431db19278e5907c0af3b39f44392a3cfd62223c96faa17a2aa76",
          "md5": "7fef928a0a1949b8f0c55d161a70bdfd",
          "sha256": "9ace62b6db830c4df841e0580a473e6feb8b76f33bb5871f05f0621bd7bad179"
        },
        "downloads": -1,
        "filename": "crystaldiskmark_parser-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7fef928a0a1949b8f0c55d161a70bdfd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20028,
        "upload_time": "2021-06-29T22:54:12",
        "upload_time_iso_8601": "2021-06-29T22:54:12.670484Z",
        "url": "https://files.pythonhosted.org/packages/73/03/dcac52c431db19278e5907c0af3b39f44392a3cfd62223c96faa17a2aa76/crystaldiskmark_parser-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad7a3721dfadfee4b4dc545c0b80ceb7dff36f550600fcf367254333264f754b",
          "md5": "c0d0ea3bad8794950a2c6ae613d5ff88",
          "sha256": "89e0271277fd3676e9efa6007e1c80c1d5168bf22495a37940468b9bb0bd6d97"
        },
        "downloads": -1,
        "filename": "crystaldiskmark_parser-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c0d0ea3bad8794950a2c6ae613d5ff88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18530,
        "upload_time": "2021-06-30T16:08:11",
        "upload_time_iso_8601": "2021-06-30T16:08:11.068734Z",
        "url": "https://files.pythonhosted.org/packages/ad/7a/3721dfadfee4b4dc545c0b80ceb7dff36f550600fcf367254333264f754b/crystaldiskmark_parser-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a0f760b2bc879108ea04d27e83b2b357869118a72a18de8e02ba603f2efac57",
          "md5": "a3a6817e0fa541140c8e7a880d0e82f0",
          "sha256": "f1a0ed8ec1b2995a198804e700118b2595afe0dae3f98125d0bedb712f83efb9"
        },
        "downloads": -1,
        "filename": "crystaldiskmark_parser-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a3a6817e0fa541140c8e7a880d0e82f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19028,
        "upload_time": "2021-06-30T16:08:12",
        "upload_time_iso_8601": "2021-06-30T16:08:12.474194Z",
        "url": "https://files.pythonhosted.org/packages/2a/0f/760b2bc879108ea04d27e83b2b357869118a72a18de8e02ba603f2efac57/crystaldiskmark_parser-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbb3fa8928221256682834986c2613c781f423c109247465dc7063a6519c4e90",
          "md5": "f59a8e387c8bec2141d7260f70efde7e",
          "sha256": "64d614075253b8097a942a389b6fa447f781d65d9ca31c3007b3488fad36166e"
        },
        "downloads": -1,
        "filename": "crystaldiskmark_parser-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f59a8e387c8bec2141d7260f70efde7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18603,
        "upload_time": "2021-07-04T12:21:46",
        "upload_time_iso_8601": "2021-07-04T12:21:46.249720Z",
        "url": "https://files.pythonhosted.org/packages/bb/b3/fa8928221256682834986c2613c781f423c109247465dc7063a6519c4e90/crystaldiskmark_parser-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edd5d1e707470bcef59af5ff34b12d27d911d5e86a6b66b51b4c2db3f0a5b88d",
          "md5": "92bb758eb6c1dd8420b394c674a61ae3",
          "sha256": "29628e453067e3e3e22765074e5401af4ee9e22a61eac19a4b1e76003b475e6c"
        },
        "downloads": -1,
        "filename": "crystaldiskmark_parser-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "92bb758eb6c1dd8420b394c674a61ae3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19137,
        "upload_time": "2021-07-04T12:21:47",
        "upload_time_iso_8601": "2021-07-04T12:21:47.689484Z",
        "url": "https://files.pythonhosted.org/packages/ed/d5/d1e707470bcef59af5ff34b12d27d911d5e86a6b66b51b4c2db3f0a5b88d/crystaldiskmark_parser-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee66086e7a12c9f2c880cfbe5f3a893340ab67158358efd16b2f62526fb389b1",
          "md5": "a21a810d897ae2ff5ef2187fd4ace5b0",
          "sha256": "574ebca8c8f7238073430f3fae50f4ae5493ccd2443a4b5e51d2a622be67374d"
        },
        "downloads": -1,
        "filename": "crystaldiskmark_parser-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a21a810d897ae2ff5ef2187fd4ace5b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18604,
        "upload_time": "2021-07-04T19:51:36",
        "upload_time_iso_8601": "2021-07-04T19:51:36.553952Z",
        "url": "https://files.pythonhosted.org/packages/ee/66/086e7a12c9f2c880cfbe5f3a893340ab67158358efd16b2f62526fb389b1/crystaldiskmark_parser-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7df6b7c9ebf15e5c2e20eb0afcfb8c3918baa3a216eaa6ef35457732adb54bb",
          "md5": "0bc5057710e3a1b0edb9012ba63c9487",
          "sha256": "0c1e9b767c90a7966a857334fde2e41e7c343ff54c9b73f1691fccc5e525afdf"
        },
        "downloads": -1,
        "filename": "crystaldiskmark_parser-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0bc5057710e3a1b0edb9012ba63c9487",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19131,
        "upload_time": "2021-07-04T19:51:37",
        "upload_time_iso_8601": "2021-07-04T19:51:37.881340Z",
        "url": "https://files.pythonhosted.org/packages/a7/df/6b7c9ebf15e5c2e20eb0afcfb8c3918baa3a216eaa6ef35457732adb54bb/crystaldiskmark_parser-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee66086e7a12c9f2c880cfbe5f3a893340ab67158358efd16b2f62526fb389b1",
        "md5": "a21a810d897ae2ff5ef2187fd4ace5b0",
        "sha256": "574ebca8c8f7238073430f3fae50f4ae5493ccd2443a4b5e51d2a622be67374d"
      },
      "downloads": -1,
      "filename": "crystaldiskmark_parser-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a21a810d897ae2ff5ef2187fd4ace5b0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18604,
      "upload_time": "2021-07-04T19:51:36",
      "upload_time_iso_8601": "2021-07-04T19:51:36.553952Z",
      "url": "https://files.pythonhosted.org/packages/ee/66/086e7a12c9f2c880cfbe5f3a893340ab67158358efd16b2f62526fb389b1/crystaldiskmark_parser-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7df6b7c9ebf15e5c2e20eb0afcfb8c3918baa3a216eaa6ef35457732adb54bb",
        "md5": "0bc5057710e3a1b0edb9012ba63c9487",
        "sha256": "0c1e9b767c90a7966a857334fde2e41e7c343ff54c9b73f1691fccc5e525afdf"
      },
      "downloads": -1,
      "filename": "crystaldiskmark_parser-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0bc5057710e3a1b0edb9012ba63c9487",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19131,
      "upload_time": "2021-07-04T19:51:37",
      "upload_time_iso_8601": "2021-07-04T19:51:37.881340Z",
      "url": "https://files.pythonhosted.org/packages/a7/df/6b7c9ebf15e5c2e20eb0afcfb8c3918baa3a216eaa6ef35457732adb54bb/crystaldiskmark_parser-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}