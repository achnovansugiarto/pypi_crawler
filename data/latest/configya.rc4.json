{
  "info": {
    "author": "J. Michael Burgess",
    "author_email": "jmichaelburgess@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "[![Travis CI w/ Logo](https://img.shields.io/travis/grburgess/configya/master.svg?logo=travis)](https://travis-ci.org/grburgess/configya)\n[![codecov](https://codecov.io/gh/grburgess/configya/branch/master/graph/badge.svg)](https://codecov.io/gh/grburgess/configya)\n![PyPI](https://img.shields.io/pypi/v/configya?style=plastic)\n## status\n![GitHub last commit (branch)](https://img.shields.io/github/last-commit/grburgess/configya/master?style=for-the-badge)\n![GitHub issues](https://img.shields.io/github/issues/grburgess/configya?style=for-the-badge)\n![GitHub pull requests](https://img.shields.io/github/issues-pr/grburgess/configya?style=for-the-badge)\n![GitHub contributors](https://img.shields.io/github/contributors/grburgess/configya?style=for-the-badge)\n\n\n# configya\n\n![alt text](https://raw.githubusercontent.com/grburgess/configya/master/logo.png)\n\n```bash\npip install configya\n```\n\n## What is this?\n\nI often make YAML configuration files for codes to input default parameters. I kept repeating myself and wanting more robustness to the structure required in the file... so I decided to make a generic one. \n\n## What it does?\n\n* Inherit the **YAMLConfig** class and pass to the super  class a dict with the structure of your config and default values as well as the location and name of the config file.\n* Upon creating a config object, it will check if there is an existing config, and if not create a default one\n* If there is an existing config, it makes sure the structure and value types conform to default file structure and types\n* If it finds errors, it yells at you, backs yours up and tries to correct the corrupted one. \n* Only simple values like strings and numbers are checked... but maybe more in the future\n\n## What next?\n\nfork it and add more... I'm sure this could be better\n\n### Check it out\n\n\n```python\nfrom configya import YAMLConfig\n```\n\nCreate a dictionary with the (nested) structure you desire and give it some default values\n\n\n```python\nmy_structure = {}\nmy_structure['n_workers'] = 4\nmy_structure['server'] = dict(name='supercomputer', address='10.10.1.1')\nmy_structure['my_iq'] = 80\nmy_structure['hours_spent_this'] = 'too many'\n\n\n```\n\nCreate your class somewhere in your package\n\n\n```python\nclass MyConfig(YAMLConfig):  \n    def __init__(self):\n\n        super(MyConfig, self).__init__(my_structure,\n                                       '~/.my_cool_program',\n                                       'config.yml')\n    \n```\n\nThe first time you make it, the default config will be written. It will yell at you.\n\n\n```python\nconfig = MyConfig()\n\n```\n\n    /Users/jburgess/.environs/yaml_config/lib/python3.7/site-packages/configya-0.3.0-py3.7.egg/configya/yaml_config.py:84: NoConfigurationWarning: No configuration file found! Making one in /Users/jburgess/.my_cool_program/config.yml\n\n\n\n```python\n!ls /Users/jburgess/.my_cool_program/\n```\n\n    config.yml\n\n\n\nYes, it is there.\n\n\n```python\nconfig\n```\n\n    /Users/jburgess/.my_cool_program/config.yml\n\n\n\n\n\n    hours_spent_this: too many\n    my_iq: 80\n    n_workers: 4\n    server:\n      address: 10.10.1.1\n      name: supercomputer\n\n\n\n\n```python\nconfig['server']['name']\n```\n\n\n\n\n    'supercomputer'\n\n\n\n\n```python\nconfig['my_iq']\n```\n\n\n\n\n    80\n\n\n\nWell...\n\nWe can modify with class access\n```python\nconfig.my_iq = 200\nconfig['my_iq']\n```\n\n\n\n\n    200\n\n\n\n### Safety first\nIt will not allow you to clobber nested dicts\n\n\n```python\nconfig['server'] = 5\n```\n\n\n    ---------------------------------------------------------------------------\n\n    AssertionError                            Traceback (most recent call last)\n\n    <ipython-input-10-3d0b32c9a17b> in <module>\n    ----> 1 config['server'] = 5\n    \n\n    ~/.environs/yaml_config/lib/python3.7/site-packages/configya-0.3.0-py3.7.egg/configya/yaml_config.py in __setitem__(self, key, item)\n        294         if key in self._configuration:\n        295 \n    --> 296             assert not isinstance(self._configuration[key], dict), f\"Woah, you are going to overwrite the structure\"\n        297 \n        298             self._configuration[key] = item\n\n\n    AssertionError: Woah, you are going to overwrite the structure\n\n\nCannot add things that are not there\n\n\n```python\nconfig['ooops'] = 10\n```\n\nOr find them\n\n\n```python\nconfig['what?'] \n```\n\nWhat if I manually change the config in my github repo, and the one on my local computer is not up to date?\n\n\n```python\nmy_structure = {}\nmy_structure['n_workers'] = 4\nmy_structure['server'] = dict(name='supercomputer', address='10.10.1.1')\nmy_structure['my_iq'] = 80\nmy_structure['hours_spent_this'] = 'too many'\n# Added a new number!\nmy_structure['total_number_of_postdocs'] = 1e5\n\n\n```\n\n\n```python\nclass MyConfig(YAMLConfig):  \n    def __init__(self):\n\n        super(MyConfig, self).__init__(my_structure,\n                                       '~/.my_cool_program',\n                                       'config.yml')\n    \n```\n\n\n```python\nconfig = MyConfig()\n```\n\n    /Users/jburgess/.environs/yaml_config/lib/python3.7/site-packages/configya-0.3.0-py3.7.egg/configya/yaml_config.py:109: BadStructureWarning: The user config file /Users/jburgess/.my_cool_program/config.yml was corrupt\n      BadStructureWarning,\n    /Users/jburgess/.environs/yaml_config/lib/python3.7/site-packages/configya-0.3.0-py3.7.egg/configya/yaml_config.py:113: BadStructureWarning: and has been backed up to /Users/jburgess/.my_cool_program/config.yml.bak and replaced\n      BadStructureWarning,\n    /Users/jburgess/.environs/yaml_config/lib/python3.7/site-packages/configya-0.3.0-py3.7.egg/configya/yaml_config.py:117: BadStructureWarning: with the default config. The CURRENT config is now default\n      BadStructureWarning,\n\n\n\n```python\nconfig\n```\n\n    /Users/jburgess/.my_cool_program/config.yml\n\n\n\n\n\n    hours_spent_this: too many\n    my_iq: 80\n    n_workers: 4\n    server:\n      address: 10.10.1.1\n      name: supercomputer\n    total_number_of_postdocs: 100000.0\n\n\n\n\n```python\n!ls /Users/jburgess/.my_cool_program/\n```\n\n    config.yml     config.yml.bak\n\n\n\nAlso, if you manually edit the config in an editor, it will check if the types are correct. If not, it will replace that value with the default value and backup your config\n\n\n```python\n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/grburgess/configya",
    "keywords": "",
    "license": "GPL-3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "configya",
    "package_url": "https://pypi.org/project/configya/",
    "platform": "",
    "project_url": "https://pypi.org/project/configya/",
    "project_urls": {
      "Bug Tracker": "https://github.com/grburgess/configya/issues",
      "Homepage": "https://github.com/grburgess/configya",
      "Source Code": "https://github.com/grburgess/configya"
    },
    "release_url": "https://pypi.org/project/configya/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A generic YAML config file generator",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9225028,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe9798cd7627142fe070e22648b9c6a4d7a4f9680ae992e00ab0364318de8171",
          "md5": "4c67663b0f21fc62a520554f69f9dbe3",
          "sha256": "2b6923d59405fb6bb253a9adefa245fe770bba733e3b20ee7e24b4e10f03f9f9"
        },
        "downloads": -1,
        "filename": "configya-0.3.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "4c67663b0f21fc62a520554f69f9dbe3",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 12473,
        "upload_time": "2020-04-01T21:07:24",
        "upload_time_iso_8601": "2020-04-01T21:07:24.790008Z",
        "url": "https://files.pythonhosted.org/packages/fe/97/98cd7627142fe070e22648b9c6a4d7a4f9680ae992e00ab0364318de8171/configya-0.3.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80700d1040c7b66ffae599a56c4d0314ee510eda98042e26deeff841696656a1",
          "md5": "28b992c6abcbc22740f8108d3fe99197",
          "sha256": "fcb710d289d5403846cdd9ca226df28be9bd959b3825b87482be04329992fdb6"
        },
        "downloads": -1,
        "filename": "configya-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "28b992c6abcbc22740f8108d3fe99197",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23162,
        "upload_time": "2020-04-01T21:07:27",
        "upload_time_iso_8601": "2020-04-01T21:07:27.134615Z",
        "url": "https://files.pythonhosted.org/packages/80/70/0d1040c7b66ffae599a56c4d0314ee510eda98042e26deeff841696656a1/configya-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c6e317ec908a6d6d4b609e1442622b50087704236bb07ad95a23b547de8adf4",
          "md5": "122f8efc437cd117c5d4dde04011195b",
          "sha256": "8c5688abc451f24d4ed08adda3d5e83fab4e1d06f441ef8899a9ccd2aaecd5c2"
        },
        "downloads": -1,
        "filename": "configya-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "122f8efc437cd117c5d4dde04011195b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19194,
        "upload_time": "2020-04-01T21:22:26",
        "upload_time_iso_8601": "2020-04-01T21:22:26.678153Z",
        "url": "https://files.pythonhosted.org/packages/0c/6e/317ec908a6d6d4b609e1442622b50087704236bb07ad95a23b547de8adf4/configya-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2304ef6c7e7b82962498b75b1322597e8addebc5640c4baee6a028afed3e5528",
          "md5": "5cfd6fd2364bd19f3e4af92ca352738f",
          "sha256": "7e5d886873a6995837206d2de0107c9aff3da38b23db0500a2699d51e13e4b6a"
        },
        "downloads": -1,
        "filename": "configya-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5cfd6fd2364bd19f3e4af92ca352738f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22788,
        "upload_time": "2020-04-01T21:22:27",
        "upload_time_iso_8601": "2020-04-01T21:22:27.673493Z",
        "url": "https://files.pythonhosted.org/packages/23/04/ef6c7e7b82962498b75b1322597e8addebc5640c4baee6a028afed3e5528/configya-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8a52237146a8b2aa8a858c3f6c1f218689292788d1702cfd3372c25bfa06b46",
          "md5": "13e499bd02d3f7e7bf45a5c03e9f4ead",
          "sha256": "dedc01816e922f90bdcdaffe14eb198d536eb742824fdc361ab551ae23471083"
        },
        "downloads": -1,
        "filename": "configya-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "13e499bd02d3f7e7bf45a5c03e9f4ead",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23470,
        "upload_time": "2021-01-21T16:43:25",
        "upload_time_iso_8601": "2021-01-21T16:43:25.892140Z",
        "url": "https://files.pythonhosted.org/packages/d8/a5/2237146a8b2aa8a858c3f6c1f218689292788d1702cfd3372c25bfa06b46/configya-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc82f86df9b1417e3c93db6a0aac2eda0da497593fe68babf596c7ba1d976bc2",
          "md5": "648d403aa53df4044f0bddca5ba965b0",
          "sha256": "ae00efa8a8b66487ead63d7b6a339e1c567aabb1a005263d1cb8fb37373e96c9"
        },
        "downloads": -1,
        "filename": "configya-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "648d403aa53df4044f0bddca5ba965b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26071,
        "upload_time": "2021-01-25T16:10:45",
        "upload_time_iso_8601": "2021-01-25T16:10:45.844283Z",
        "url": "https://files.pythonhosted.org/packages/bc/82/f86df9b1417e3c93db6a0aac2eda0da497593fe68babf596c7ba1d976bc2/configya-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc82f86df9b1417e3c93db6a0aac2eda0da497593fe68babf596c7ba1d976bc2",
        "md5": "648d403aa53df4044f0bddca5ba965b0",
        "sha256": "ae00efa8a8b66487ead63d7b6a339e1c567aabb1a005263d1cb8fb37373e96c9"
      },
      "downloads": -1,
      "filename": "configya-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "648d403aa53df4044f0bddca5ba965b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26071,
      "upload_time": "2021-01-25T16:10:45",
      "upload_time_iso_8601": "2021-01-25T16:10:45.844283Z",
      "url": "https://files.pythonhosted.org/packages/bc/82/f86df9b1417e3c93db6a0aac2eda0da497593fe68babf596c7ba1d976bc2/configya-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}