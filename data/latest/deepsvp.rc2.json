{
  "info": {
    "author": "Azza Althagafi",
    "author_email": "azza.althagafi@kaust.edu.sa",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# DeepSVP\nDeepSVP is a computational method to prioritize structural variants (SV) involved in genetic diseases by combining genomic information with information about gene functions. We incorporate phenotypes linked to genes, functions of gene products, gene expression in individual celltypes, and anatomical sites of expression. DeepSVP systematically relates them to their phenotypic consequences through ontologies and machine learning.\n\n## Training dataset\nWe train and evaluate our method using human SV collected from [dbvar](https://ftp.ncbi.nlm.nih.gov/pub/dbVar/data/Homo_sapiens/by_assembly/GRCh38/vcf/) dataset.\n\n## Annotation data sources (integrated in the candidate SV prediction workflow)\nWe integrated the annotations from different sources:\n- Gene ontology ([GO](http://geneontology.org/docs/download-go-annotations/))\n- Uber-anatomy ontology ([UBERON](https://www.ebi.ac.uk/ols/ontologies/uberon))\n- Mammalian Phenotype ontology ([MP](http://www.informatics.jax.org/vocab/mp_ontology))\n- Human Phenotype Ontology ([HPO](https://hpo.jax.org/app/download/annotation))\n\nThis work is done using [DL2vec](https://github.com/bio-ontology-research-group/DL2Vec). We convert different types of Description Logic axioms into graph representation, and then generate an embedding for each node and edge type.\n\nWe collected [genomics features](https://lbgi.fr/AnnotSV/annotations) using the [AnnotSV (v2.2)](https://lbgi.fr/AnnotSV/downloads) public tool. \n\n\n## Installation \nUsing pip version 20.3.1:\n```\npip install deepsvp\n```\n\nOr you can create a specific Conda Environments (e.g. named \"deepsvp-py38-pip2031\"):\n```\nconda create -n deepsvp-py38-pip2031 python=3.8 pip=20.3.1\nconda activate deepsvp-py38-pip2031\npip3 install deepsvp\npip3 install networkx\npip3 install torch\npip3 list\nconda deactivate\n```\n\n## Running the DeepSVP prediction model \n- Download all the files from [data](https://bio2vec.cbrc.kaust.edu.sa/data/DeepSVP/) and place the uncompressed files/repository in the folder named \"data\":\n```\nmkdir DeepSVP/          ;# /path_of_your_DeepSVP_repository/\ncd DeepSVP\nwget \"https://bio2vec.cbrc.kaust.edu.sa/data/DeepSVP/data.zip\"\nunzip data.zip\ncd data                 ;# /path_of_your_DeepSVP_data_repository/\nwget \"https://bio2vec.cbrc.kaust.edu.sa/data/DeepSVP/experiments.zip\"   # can be very long\nunzip experiments.zip\n```\n- Download and install the required [AnnoSV (2.3)](https://lbgi.fr/AnnotSV/downloads) tool in the \"data\" folder:\n```\ncd /path_of_your_DeepSVP_data_repository/\ngit clone  git@github.com:lgmgeo/AnnotSV.git --branch v2.3\ncd AnnotSV/\nmake PREFIX=. install\nmake DESTDIR= PREFIX=. install-human-annotation\ncd ..\n```\n\n- Add genomic features to your VCF input file (/path_and_name_of_your_vcf_input_file/) thanks to AnnotSV (v2.3):\n\ne.g. /path_and_name_of_your_vcf_input_file/ = ./input.vcf\n\ne.g. /path_and_name_of_your_annotsv_output_file/ = ./data/output.annotsv.annotated.tsv\n\n```\nbash \nexport ANNOTSV=/path_of_your_DeepSVP_data_repository/AnnotSV\n$ANNOTSV/bin/AnnotSV -SVinputFile ./input.vcf -genomeBuild GRCh38 -outputFile ./data/output.annotsv.annotated.tsv\n```\nYour annotated VCF file (./data/output.annotsv.annotated.tsv) should be placed in the data folder (/path_of_your_DeepSVP_data_repository/). \n\n- Run the command `deepsvp --help` to display help and parameters:\n```\nUsage: deepsvp [OPTIONS]\n\n     DeepSVP: A phenotype-based tool to prioritize caustive CNV using WGS data\n     and Phenotype/Gene Functional Similarity\n\nOptions:\n    -d, --data-root TEXT      Data root folder  [required]\n    -i, --in-file TEXT        Annotated Input file  [required]\n    -p, --hpo TEXT            List of phenotype ids separated by commas\n                              [required]\n    -maf, --maf_filter FLOAT  Allele frequency filter using gnomAD and 1000G\n                              default<=0.01\n    -m, --model_type TEXT     Ontology model, one of the following (go , mp ,\n                              hp, cl, uberon, union), default=mp\n    -ag, --aggregation TEXT   Aggregation method for the genes within CNV (max\n                              or mean) default=max\n    -o, --outfile TEXT        Output result file\n    --help                    Show this message and exit.        \n```\n\n- Run the example (with you own HPO terms):\n```\n    deepsvp -d data/ -i output.annotsv.annotated.tsv -p HP:0003701,HP:0001324,HP:0010628,HP:0003388,HP:0000774,HP:0002093,HP:0000508,HP:0000218 -m cl -maf 0.01 -ag max -o example_output.txt\n```    \nOr run the example with the deepsvp-py38-pip2031 Conda Environment:\n```\nconda activate deepsvp-py38-pip2031\ndeepsvp -d data/ -i $your_annotsv_output.annotated.tsv -p HP:0003701,HP:0001324,HP:0010628,HP:0003388,HP:0000774,HP:0002093,HP:0000508,HP:0000218 -m cl -maf 0.01 -ag max -o example_output.txt\nconda deactivate\n```\nOr by using [cwl-runner](https://github.com/common-workflow-language/cwltool), modify the input file in the input example yaml [deepsvp.yaml](https://github.com/bio-ontology-research-group/DeepSVP/blob/master/deepsvp.yaml) file and then run:\n\n\tcwl-runner deepsvp.cwl deepsvp.yaml \n\n ```   \n |========                        | 25% Reading the input phenotypes...\n |================                | 50% Phenotype prediction... \n |========================        | 75% CNV Prediction... \n |================================| 100% DONE! You can find the prediction results in the output file: example_output.txt\n```\n\n\n\n#### Output:\nThe script will output a ranking a score for the candidate caustive CNV. \n\n## Scripts \n- Details for predicting pathogenic variants and comparison with other methods can be found in the [experiment](https://github.com/bio-ontology-research-group/DL2Vec/tree/master/Experiment) folder.\n- ``annotations.sh``: This script is used to annotate the varaints.\n- ``data_preprocessing.py``: preprocessing the annotations and features.\n- ``pheno_model.py``: script to get the DL2vec score using the trained model.\n- ``deepsvp_training.py``: script to train and testing the model, with Hyperparameter optimization\n- ``BWA_GATK.sh`` : script to run GATK workflow for the input fastq files for the real samples, run using KAUST Supercomputing [IBEX](https://www.hpc.kaust.edu.sa/ibex).\n- ``run_Manta.sh`` : script to generate VCF with the structural variants (SVs), we used [Manta](https://github.com/Illumina/manta) to identify the candidate SVs.  run using KAUST Supercomputing [IBEX](https://www.hpc.kaust.edu.sa/ibex).\n\n## Final notes\nFor any questions or comments please contact: azza.althagafi@kaust.edu.sa\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/bio-ontology-research-group/deepsvp/archive/v1.0.3.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepsvp",
    "package_url": "https://pypi.org/project/deepsvp/",
    "platform": null,
    "project_url": "https://pypi.org/project/deepsvp/",
    "project_urls": {
      "Download": "https://github.com/bio-ontology-research-group/deepsvp/archive/v1.0.3.tar.gz"
    },
    "release_url": "https://pypi.org/project/deepsvp/1.0.3/",
    "requires_dist": [
      "click (<8)",
      "scikit-learn",
      "pandas",
      "tensorflow (==2.3.0)",
      "numpy",
      "scipy",
      "gensim (==3.8.3)",
      "sklearn",
      "mygene",
      "h5py",
      "progress"
    ],
    "requires_python": ">3",
    "summary": "DeepSVP: Integration of Genomics and Phenotypes forStructural Variant Prioritization using Deep Learning",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13138286,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be731bfa241eef46f6be121f0a53e7d769c623d1e8d4ade3ebf8b17a1a27a6b1",
          "md5": "17cf1f0b726378e8d6def3c5b0e28b76",
          "sha256": "11f884142983bed63708227bb1a87a47cd5a192bfb82ebfe7ecb09ba6f770dbb"
        },
        "downloads": -1,
        "filename": "deepsvp-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17cf1f0b726378e8d6def3c5b0e28b76",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3",
        "size": 9884,
        "upload_time": "2022-01-06T15:52:06",
        "upload_time_iso_8601": "2022-01-06T15:52:06.681030Z",
        "url": "https://files.pythonhosted.org/packages/be/73/1bfa241eef46f6be121f0a53e7d769c623d1e8d4ade3ebf8b17a1a27a6b1/deepsvp-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47f74bf00273e6b764213e1bba4ac3421617ff66fb710acf064c42c6a3d55123",
          "md5": "0f63cfa3742b48929158735162da9072",
          "sha256": "87c4c79c43a645dcf4eb3645ac30470e4108383cd959d59cb7c45568702873ba"
        },
        "downloads": -1,
        "filename": "deepsvp-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f63cfa3742b48929158735162da9072",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3",
        "size": 22806,
        "upload_time": "2022-03-10T13:11:46",
        "upload_time_iso_8601": "2022-03-10T13:11:46.315525Z",
        "url": "https://files.pythonhosted.org/packages/47/f7/4bf00273e6b764213e1bba4ac3421617ff66fb710acf064c42c6a3d55123/deepsvp-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47f74bf00273e6b764213e1bba4ac3421617ff66fb710acf064c42c6a3d55123",
        "md5": "0f63cfa3742b48929158735162da9072",
        "sha256": "87c4c79c43a645dcf4eb3645ac30470e4108383cd959d59cb7c45568702873ba"
      },
      "downloads": -1,
      "filename": "deepsvp-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0f63cfa3742b48929158735162da9072",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3",
      "size": 22806,
      "upload_time": "2022-03-10T13:11:46",
      "upload_time_iso_8601": "2022-03-10T13:11:46.315525Z",
      "url": "https://files.pythonhosted.org/packages/47/f7/4bf00273e6b764213e1bba4ac3421617ff66fb710acf064c42c6a3d55123/deepsvp-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}