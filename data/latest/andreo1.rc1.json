{
  "info": {
    "author": "Andreo Naymayer",
    "author_email": "andreocelular@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Natural Language :: Portuguese (Brazilian)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Biblioteca Andreo üå±\n\nFun√ß√µes atuais:\n- leitura de pdf com textos ou textos em imagens e transforma√ß√£o para string.\n\n## Instala√ß√£o\nUtilize a biblioteca ``pip install andreo1``\n#### Dependencias\n```\npip install pdf2image\npip install numpy\npip install pytesseract\npip install opencv-python\n```\n\n### Sistema Operacional\nPara o bom funcionamento √© necess√°ria a instala√ß√£o do poppler e tesseract.\n\n### Windows\nDeve-se adicionar ao path os seguintes arquivos\n\n[Tesseract Windows x64](https://contplansrv-my.sharepoint.com/:u:/g/personal/leonardo_sallin_contplan_com_br/EXxo2qy2ROtCoG0iuGR3sioBz1VqTJpzfhz9wpKprb-_KQ?e=MEsots): Pasta onde fica o tesseract.exe\n\n[Tesseract Windows x86](https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w32-setup-v5.1.0.20220510.exe)\n\n[Poppler Windows](https://github.com/oschwartz10612/poppler-windows/releases/): pasta /bin\n\n**üö®üö®üö®\nApos a instala√ß√£o dos dois no path o sistema, o Windows deve ser reiniciado !! üö®üö®üö®**\n### MacOs\n\nUtilizando o HomeBrew execute os comando: \n\n```brew install poppler```\n\n```brew install tesseract```\n\n```brew install tesseract-lang```\n\n# Exemplos\n- Fun√ß√£o recortaUmaPagina(pdfPath,pagina,aI,aF,lI,lF,mode):\n    * pdfPath: String = diretorio completo do arquivo. Ex: '/Users/yourUser/yourFolder/YourPDF.pdf'\n    \n    * pagina: Int = o numero da pagina que deseja ler ou verificar os tamanhos. Ex: 0.\n      !! IMPORTANTE !!: A primeira pagina do seu arquivo PDF √© a 0\n    \n    * aI, aF, lI, e lF: Int = s√£o as coordenadas de corte. Caso n√£o sejam preenchidas a fun√ß√£o perguntar√° o tamanho do recorte\n    \n    * mode: String = O modo de uso da fun√ß√£o. Para retornar uma string com os tamanhos da imagem use 'definicao',\n      para retornar o texto da area selecionada use: 'recorte'. !! IMPORTANTE !! se n√£o for preenchido, o padr√£o √© recorte\\n\n    #### Exemplos\n  * ``andreo.recortaUmaPagina(r'yourFolder/YourPDF.pdf',0,0,800,0,800)`` = vai retornar o texto escrito no pdf nas cordenadas [0:800:0:800]\n  * ``andreo.recortaUmaPagina(r'yourFolder/YourPDF.pdf',0,'definicao')``= vai permitir testar coordenadas diferentes e retorna-la como string\n\n- Para manipular um PDF, p√°gina por p√°gina para por exemplo pegar mais de uma informa√ß√£o dela use o c√≥digo abaixo:\n```\nimport andreo                                                        \npath = r'/Users/yourUser/yourFolder/YourPDF.pdf'                     \npdf = andreo.PdfCutReader(path)\nallPages = pdf.allPages()\nfor page in range(pdf.pagesCount()):\n    img = andreo.img.bytes()\n    pg = allPages[page]\n    pg.save(img, format='png')\n    texto1 = pdf.retornaString(pdf.definicao(img.getvalue(), 0, 1500, 0, 1500))\n    texto2 = pdf.retornaString(pdf.definicao(img.getvalue(), 10, 244, 0, 60))\nimg.close()\n```\n\n- Fun√ß√£o leUmaPaginaInteira(pdfPath: str, pagina: int):\n    * pdfPath: String = diretorio completo do arquivo. Ex: '/Users/yourUser/yourFolder/YourPDF.pdf'\n    * pagina: Int = o numero da pagina que deseja ler ou verificar os tamanhos. Ex: !! IMPORTANTE !!: A primeira pagina do seu arquivo PDF √© a 0\n    Exemplo 1: ```andreo.PdfCutReader(r'yourFolder/YourPDF.pdf').leUmaPaginaInteira(0)```\n\n# Author\n- Github [@andreonaymayer](https://www.github.com/andreonaymayer)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "EN: convert pdf to text with option to cut images. BR: converte pdf para texto podendo cortar as imagens",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "andreo1",
    "package_url": "https://pypi.org/project/andreo1/",
    "platform": null,
    "project_url": "https://pypi.org/project/andreo1/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/andreo1/0.0.1/",
    "requires_dist": [
      "numpy",
      "pytesseract",
      "opencv-python"
    ],
    "requires_python": "",
    "summary": "Read text or text in images inside a pdf and turn it into string",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14854871,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c76bccb840c87d100d9ac68f1854f92be6c043ebd70838e67f86de1b477ec5ca",
          "md5": "324ef75ca669503e0116588f0f21eae6",
          "sha256": "20d975871d236b943c746c32836a875cb12ccc428c05c17428f308062e93c56d"
        },
        "downloads": -1,
        "filename": "andreo1-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "324ef75ca669503e0116588f0f21eae6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10360,
        "upload_time": "2022-08-23T19:54:08",
        "upload_time_iso_8601": "2022-08-23T19:54:08.307754Z",
        "url": "https://files.pythonhosted.org/packages/c7/6b/ccb840c87d100d9ac68f1854f92be6c043ebd70838e67f86de1b477ec5ca/andreo1-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20d30a0c261d1af3408fc37eeea0d19e99f73dd3efc99089744b3601ea0039b2",
          "md5": "06981062d300d6d8d3a3041834cef552",
          "sha256": "12fa5ba3ac6757376c490c3ce2a4d1067ccc4ad9f6808ec6e4143f78094d3f1c"
        },
        "downloads": -1,
        "filename": "andreo1-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "06981062d300d6d8d3a3041834cef552",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9214,
        "upload_time": "2022-08-23T19:54:10",
        "upload_time_iso_8601": "2022-08-23T19:54:10.345091Z",
        "url": "https://files.pythonhosted.org/packages/20/d3/0a0c261d1af3408fc37eeea0d19e99f73dd3efc99089744b3601ea0039b2/andreo1-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c76bccb840c87d100d9ac68f1854f92be6c043ebd70838e67f86de1b477ec5ca",
        "md5": "324ef75ca669503e0116588f0f21eae6",
        "sha256": "20d975871d236b943c746c32836a875cb12ccc428c05c17428f308062e93c56d"
      },
      "downloads": -1,
      "filename": "andreo1-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "324ef75ca669503e0116588f0f21eae6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10360,
      "upload_time": "2022-08-23T19:54:08",
      "upload_time_iso_8601": "2022-08-23T19:54:08.307754Z",
      "url": "https://files.pythonhosted.org/packages/c7/6b/ccb840c87d100d9ac68f1854f92be6c043ebd70838e67f86de1b477ec5ca/andreo1-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20d30a0c261d1af3408fc37eeea0d19e99f73dd3efc99089744b3601ea0039b2",
        "md5": "06981062d300d6d8d3a3041834cef552",
        "sha256": "12fa5ba3ac6757376c490c3ce2a4d1067ccc4ad9f6808ec6e4143f78094d3f1c"
      },
      "downloads": -1,
      "filename": "andreo1-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "06981062d300d6d8d3a3041834cef552",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9214,
      "upload_time": "2022-08-23T19:54:10",
      "upload_time_iso_8601": "2022-08-23T19:54:10.345091Z",
      "url": "https://files.pythonhosted.org/packages/20/d3/0a0c261d1af3408fc37eeea0d19e99f73dd3efc99089744b3601ea0039b2/andreo1-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}