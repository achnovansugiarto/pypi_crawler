{
  "info": {
    "author": "Joachim Folz",
    "author_email": "joachim.folz@dfki.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "YFCC100m\n========\n\nWhat is the YFCC100m dataset? A quote from its website_:\n\n.. _website: https://multimediacommons.wordpress.com/yfcc100m-core-dataset/\n\n    The YFCC100M is the largest publicly and freely useable\n    multimedia collection, containing  the metadata of around\n    99.2 million photos and 0.8 million videos from Flickr,\n    all of which were shared under one of the various\n    Creative Commons licenses.\n\n\nMetadata and files are currently hosted in a public `AWS bucket`__,\nbut downloading and using them is a painful experience.\nHandling 100 Million small files is a terrible idea.\nAsk me how I know.\nThis package aims to make downloading and accessing this\ndataset straight-forward.\nOnce finished metadata and files are stored in 4096 neat shards\nfrom ``000`` to ``fff`` following the structure of the bucket.\n\n.. _bucket: https://registry.opendata.aws/multimedia-commons\n__ bucket_\n\n\n\nAWS account required\n--------------------\n\nUnfortunately AWS credentials are required to download files.\nA credit card is required to create the account,\nbut it will not be charged for the download.\nFollow `these steps`__ to create access key and secret.\nYou can ``pip install awscli`` and run ``aws configure``\nor create these files manually::\n\n    ~/.aws/config\n    [default]\n    region = us-west-2\n    s3 =\n        max_concurrent_requests = 100\n        max_queue_size = 10000\n        max_bandwidth = 50MB/s\n        multipart_threshold = 64MB\n        multipart_chunksize = 16MB\n        use_accelerate_endpoint = false\n\n    ~/.aws/credentials\n    [default]\n    aws_access_key_id = <key>\n    aws_secret_access_key = <secret>\n\n\n.. _awscredentials: https://aws.amazon.com/de/blogs/security/wheres-my-secret-access-key/\n__ awscredentials_\n\nIt's possible to manually download individual files without an account,\nbut downloading a larger number is not advisable.\nAgain, ask me how I know.\n\n\n\nSteps to download (TL;DR)\n-------------------------\n\nConvert metadata::\n\n    python -m yfcc100m.convert_metadata <input dir> -o <meta dir>\n\nDownload files::\n\n    python -m yfcc100m.download <meta dir> -o <zip dir>\n\n\n\nSteps to download (long version)\n--------------------------------\n\nThe download is a 2-step process and involves three\ndirectories (with required free space):\n\n- input (61.1 GiB)\n- meta (20 GiB)\n- zip (images 11 TiB, videos -- TiB)\n\nNote:\n    You can use the same storage system and even directory\n    for all three, but it's not a good idea.\n    Metadata is provided as a single 61.1 GiB SQLite file.\n    It is strongly recommended to store this file locally or\n    even in a tmpfs as queries are several magnitudes slower on\n    a remote filesystem.\n    Meta and zip directories can be on slow-ish network storage.\n\nWe first need to download and split the metadata into shards.\nThis is done with the first command::\n\n    python -m yfcc100m.convert_metadata <input dir> -o <meta dir>\n\nThis will look for ``yfcc100m_dataset.sql`` in the input directory\nand download it if necessary.\nIf this file is found it will be verified\n(can be skipped, consult the help text for more info)\nand converted into 4096 shards ``000.gz`` to ``fff.gz``.\nThis process can take a few hours.\n\nNext, the actual download.\nBy default this download images only::\n\n    python -m yfcc100m.download <meta dir> -o <zip dir>\n\nEach metadata shard is downloaded separately and stored directly\nas an uncompress ZIP file, i.e., ``000.zip`` to ``fff.zip``.\nThis will obviously take a while, but the download can be\nas slow or fast as you want it to be.\nDepending on the number of parallel processes and threads it\ncan take anywhere from hours to weeks.\n\n\n\nConvert to datadings format\n---------------------------\n\nThis step is optional. You can convert the ZIP file shards into\nthe very fast and efficient datadings_ format. It packs files\nalong with metadata into one convenient file::\n\n    python -m yfcc100m.convert <zip dir> -m <meta dir> -o <output dir>\n\nThis tool verifies that images decode without errors and show\nuseful content (brightness varies significantly for at least 5%\nof all lines). Images that fail these basic tests are excluded.\nIt will also attempt to re-compress images that contained errors.\n\nCompression can optionally be applied to all images. Combined\nwith verification, compressing with quality 85 reduces the size\nof all the image part of the dataset by over 60%, from 11 to\nonly 4.2 TiB. This is almost indistinguishable to humans and\ndoes not affect the performance of neural networks trained on\nsuch images.\n\n.. _datadings: https://datadings.readthedocs.io\n\n\n\nFiltering\n---------\n\nYou can filter the dataset before downloading based on metadata\nusing the filter option with a lambda function.\nE.g., to download only files with \"holiday\" in the user tags::\n\n     --filter 'lambda x: \"holiday\" in x[\"usertags\"]'\n\n\n\n",
    "description_content_type": "text/x-rst; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "yfcc100m yfcc yahoo flickr creative commons 100 million dataset data set download",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yfcc100m",
    "package_url": "https://pypi.org/project/yfcc100m/",
    "platform": "",
    "project_url": "https://pypi.org/project/yfcc100m/",
    "project_urls": {
      "Documentation": "https://gitlab.com/jfolz/yfcc100m/blob/master/README.rst",
      "Source": "https://gitlab.com/jfolz/yfcc100m",
      "Tracker": "https://gitlab.com/jfolz/yfcc100m/issues"
    },
    "release_url": "https://pypi.org/project/yfcc100m/1.0.1/",
    "requires_dist": [
      "boto3 (<2.0.0,>=1.11.0)",
      "botocore (<2.0.0,>=1.14.0)",
      "datadings (<4.0.0,>=3.1.0)",
      "numpy (<2.0.0,>=1.17.0)",
      "Pillow (>=7.0.0)",
      "simplejpeg (>=1.4.1)",
      "tqdm (<5.0.0,>=4.23.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Download the YFCC100m dataset without going insane.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9812727,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc221eea26244698da4fcb2731225db61f2afa88aa24d8645fffec66b599ceed",
          "md5": "6bc34b5cb1209c69c18bc15b328bea1f",
          "sha256": "aa73771072aef271533188d129f6c18eb7995d3be0fd1c6e5d240e9c58acb130"
        },
        "downloads": -1,
        "filename": "yfcc100m-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6bc34b5cb1209c69c18bc15b328bea1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14585,
        "upload_time": "2021-03-15T16:05:32",
        "upload_time_iso_8601": "2021-03-15T16:05:32.033387Z",
        "url": "https://files.pythonhosted.org/packages/fc/22/1eea26244698da4fcb2731225db61f2afa88aa24d8645fffec66b599ceed/yfcc100m-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab5f892a7d16a96182618d474f8cd18aec67e4fbf0be9588ef226f3601710e11",
          "md5": "a6d76fc437b5b0556d32251062e491cb",
          "sha256": "8d5849ed9c33f8e9e1892e341f20de76ee9f9aa45853eb93b79dea32c87a3976"
        },
        "downloads": -1,
        "filename": "yfcc100m-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a6d76fc437b5b0556d32251062e491cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14558,
        "upload_time": "2021-03-15T16:12:40",
        "upload_time_iso_8601": "2021-03-15T16:12:40.249430Z",
        "url": "https://files.pythonhosted.org/packages/ab/5f/892a7d16a96182618d474f8cd18aec67e4fbf0be9588ef226f3601710e11/yfcc100m-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "447b3a4fcdd9f708ea73d0910a7d678ca55aa6a935e376e4ebe0d47891cbc881",
          "md5": "d08700530b9c1db8fbd00cff544bb1bf",
          "sha256": "ae09cd2452817293b172e53c6ff5b6b266a52ec73a19a74c6b89ad0a6a48a516"
        },
        "downloads": -1,
        "filename": "yfcc100m-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d08700530b9c1db8fbd00cff544bb1bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14589,
        "upload_time": "2021-03-18T20:40:05",
        "upload_time_iso_8601": "2021-03-18T20:40:05.741959Z",
        "url": "https://files.pythonhosted.org/packages/44/7b/3a4fcdd9f708ea73d0910a7d678ca55aa6a935e376e4ebe0d47891cbc881/yfcc100m-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45d7107fa166b5788c54f71417bcb4637f8fc73f7cb6d9ec82131f7f4d805c26",
          "md5": "e432a5557c414fc36292df35e5d5ce2a",
          "sha256": "2dcabea0c6c57ae96bdda0f3a82d764b153559229a785a85d10c15097587d4fc"
        },
        "downloads": -1,
        "filename": "yfcc100m-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e432a5557c414fc36292df35e5d5ce2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14570,
        "upload_time": "2021-03-18T20:40:06",
        "upload_time_iso_8601": "2021-03-18T20:40:06.758112Z",
        "url": "https://files.pythonhosted.org/packages/45/d7/107fa166b5788c54f71417bcb4637f8fc73f7cb6d9ec82131f7f4d805c26/yfcc100m-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "447b3a4fcdd9f708ea73d0910a7d678ca55aa6a935e376e4ebe0d47891cbc881",
        "md5": "d08700530b9c1db8fbd00cff544bb1bf",
        "sha256": "ae09cd2452817293b172e53c6ff5b6b266a52ec73a19a74c6b89ad0a6a48a516"
      },
      "downloads": -1,
      "filename": "yfcc100m-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d08700530b9c1db8fbd00cff544bb1bf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14589,
      "upload_time": "2021-03-18T20:40:05",
      "upload_time_iso_8601": "2021-03-18T20:40:05.741959Z",
      "url": "https://files.pythonhosted.org/packages/44/7b/3a4fcdd9f708ea73d0910a7d678ca55aa6a935e376e4ebe0d47891cbc881/yfcc100m-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45d7107fa166b5788c54f71417bcb4637f8fc73f7cb6d9ec82131f7f4d805c26",
        "md5": "e432a5557c414fc36292df35e5d5ce2a",
        "sha256": "2dcabea0c6c57ae96bdda0f3a82d764b153559229a785a85d10c15097587d4fc"
      },
      "downloads": -1,
      "filename": "yfcc100m-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e432a5557c414fc36292df35e5d5ce2a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14570,
      "upload_time": "2021-03-18T20:40:06",
      "upload_time_iso_8601": "2021-03-18T20:40:06.758112Z",
      "url": "https://files.pythonhosted.org/packages/45/d7/107fa166b5788c54f71417bcb4637f8fc73f7cb6d9ec82131f7f4d805c26/yfcc100m-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}