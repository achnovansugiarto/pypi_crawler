{
  "info": {
    "author": "LowinLi",
    "author_email": "lowinli@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# metric4coref\n![](https://github.com/LowinLi/metric4coref/actions/workflows/python-package.yml/badge.svg)\n[![codecov](https://codecov.io/gh/LowinLi/metric4coref/branch/main/graph/badge.svg?token=LPM96OTSLY)](https://codecov.io/gh/LowinLi/metric4coref)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/metric4coref.svg)](https://pypi.org/project/metric4coref/)\n[![PyPI](https://img.shields.io/pypi/v/metric4coref.svg)](https://pypi.org/project/metric4coref/)\n![](https://img.shields.io/badge/language-python-green)\n![](https://img.shields.io/badge/style-black-black)\n![](https://img.shields.io/badge/license-MIT-orange)\n[![Downloads](https://pepy.tech/badge/metric4coref)](https://pepy.tech/project/metric4coref)\n\n共指消解任务CoNLL的[官方评测库](https://github.com/conll/reference-coreference-scorers)是**Perl**语言完成的，但是近些年基于**Python**语言为主的深度学习在共指消解任务上的应用越来越普遍，所以同时也非常需要一个基于**Python**的便捷评测库。\n\n### 使用方法\n+ 安装\n```bash\npip install metric4coref\n```\n+ 使用\n```python\nfrom metric4coref import muc, ceaf, b_cubed, conll_coref_f1\n# \"a\", \"b\" 等代表mention id\n# predict_clusters、gold_clusters分别代表模型生成mention簇和标注mention簇\npredict_clusters = [[\"a\", \"b\", \"c\"], [\"d\", \"e\", \"f\", \"g\"], [\"h\", \"i\", \"j\"], [\"k\"]]\ngold_clusters = [[\"a\", \"b\", \"d\"], [\"c\", \"e\", \"f\", \"g\"], [\"h\", \"i\", \"j\", \"k\"]]\n\nprint(muc(predict_clusters, gold_clusters))\n# -> 准确率、召回率、f1：(0.5833333333333334, 0.4666666666666667, 0.5185185185185186)\nprint(b_cubed(predict_clusters, gold_clusters))\n# -> 准确率、召回率、f1：(0.7424242424242423, 0.606060606060606, 0.6673476336397685)\nprint(ceaf(predict_clusters, gold_clusters))\n# -> 准确率、召回率、f1：(0.7272727272727273, 0.7272727272727273, 0.7272727272727273)\nprint(conll_coref_f1(predict_clusters, gold_clusters))\n# -> 以上三个f1平均值： 0.6377129598103382\n```\n\n### 共指消解的评测方法\n\n- [x] the link based MUC\n    - [论文](https://www.aclweb.org/anthology/M95-1005.pdf)\n    - 1995\n- [x] B cubed metric\n    - [论文](https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.47.5848&rep=rep1&type=pdf)\n    - 1998\n- [x] the entity based CEAF metric\n    - [论文](https://www.aclweb.org/anthology/H05-1004.pdf)\n    - 2005\n- [ ] BLANC\n- [ ] Link-Based Entity-Aware metric (LEA).\n\n### 共指消解任务\n+ 任务主页\n[CoNLL 2012 Co-reference task](https://cemantix.org/conll/2012/introduction.html)\n+ [官方metric](https://github.com/conll/reference-coreference-scorers)\n    + Average F1 of MUC, B-cubed, and CEAF\n\n### 算法解读\n\n- the link based MUC\n    - 解释：基于簇中两两mention连接的边作为评测依据\n        - precision：\n            分子：所有系统预测边与所有标注边的交集的个数\n            分母：所有预测边的个数\n        - recall：\n            分子：所有系统预测边与所有标注边的交集的个数\n            分母：所有标注边的个数\n        - f1:\n            precision * recall * 2 / (precision + recall)\n    - 例子：\n        - 预测边：\n        ab、bc、ac、de、df、dg、ef、eg、fg、hi、ij、hj共12个\n        - 标注边：\n        ab、ad、bd、ce、cf、cg、ef、eg、fg、hi、hj、hk、ij、ik、jk共15个\n        - 预测边和标注边的交集：\n        ab、ef、eg、fg、hi、hj、ij共7个\n        - precision: 7/12=0.5833333\n        - recall: 7/15=0.4666667\n        - f1: 0.5833333 * 0.4666667 * 2 / (0.5833333 + 0.4666667)=0.5185185\n    - 特点：\n        - 不考虑单个mention的簇，因为没有边\n        - 倾向于生成很多mention的簇，容易得高分\n- B cubed metric\n    - 解释：以mention为单位，每个mention计算一个precision和recall，在加权平均所有mention的precision和recall\n        - 每个mention的计算方法：\n            - precision：\n                分子：系统预测的包含mention的簇与人工标注的包含mention的簇的mention交集个数\n                分母：系统生成的包含mention的簇的个数\n            - recall：\n                分子：系统预测的包含mention的簇与人工标注的包含mention的簇的mention交集个数\n                分母：人工标注的包含mention的簇的个数\n            - f1:\n                precision * recall * 2 / (precision + recall)\n    - 例子：\n        - mention a:\n            所在预测簇: [\"a\", \"b\", \"c\"]\n            所在标注簇: [\"a\", \"b\", \"d\"]\n            precision:\n                分子: a、b共2个\n                分母: a、b、c共3个\n                =2/3=0.666\n            recall:\n                分子: a、b共2个\n                分母: a、b、d共3个\n                =2/3=0.666\n        - mention b:\n            所在预测簇: [\"a\", \"b\", \"c\"]\n            所在标注簇: [\"a\", \"b\", \"d\"]\n            precision:\n                分子: a、b共2个\n                分母: a、b、c共3个\n                =2/3=0.666\n            recall:\n                分子: a、b共2个\n                分母: a、b、d共3个\n                =2/3=0.666\n        - mention c\n            所在预测簇: [\"a\", \"b\", \"c\"]\n            所在标注簇: [\"c\", \"e\", \"f\", \"g\"]\n            precision:\n                分子: c共1个\n                分母: a、b、c共3个\n                =1/3=0.333\n            recall:\n                分子: c共1个\n                分母: c、e、f、g共4个\n                =1/4=0.25\n        ...\n        - 对所有mention的precision、recall求平均值\n    - 特点：\n        - 对每个mention等权重看待\n- the entity based CEAF metric\n    - 解释：\n        1. 标注的实体簇为R、系统生成的实体簇为S,R中每个mention为r、S中每个mention为s\n        2. R的个数与S的个数的少者为m\n        3. 建立从R到S的一一映射map，每个映射对应从R中的r到S中的s，映射的个数为m\n        4. 计算每个映射中，r和s中相同mention个数\n        5. 计算整个map映射中，所有相同mention的个数\n        6. 遍历所有可能的map，取所有相同mention的个数的最大的映射map，相同mention个数为n\n        7. precision = n/S的mention个数\n        8. recall = n/R的mention个数\n    - 例子：\n        - 预测的实体簇个数为4\n        - 标注的实体簇个数为3\n            那么m=3\n        - 遍历可知，映射关系为\n            标注实体簇1 --> 预测实体簇1\n            标注实体簇2 --> 预测实体簇2\n            标注实体簇3 --> 预测实体簇3\n        - 计数：\n            正确的mention有：\n                a、b、e、f、g、h、i、j共8个\n            预测的mention个数共11个\n            标注的mention个数共11个\n        - 指标：\n            precision=8/11=0.7272727\n            recall=8/11=0.7272727",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LowinLi/metric4coref",
    "keywords": "coreference resolution metric",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metric4coref",
    "package_url": "https://pypi.org/project/metric4coref/",
    "platform": null,
    "project_url": "https://pypi.org/project/metric4coref/",
    "project_urls": {
      "Homepage": "https://github.com/LowinLi/metric4coref"
    },
    "release_url": "https://pypi.org/project/metric4coref/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "metric for coreference resolution",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15318391,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4d4b19d7c8851b84d30fffbcf078fd140f8ec32e2aea6e73fbcaf4dfa07fe46",
          "md5": "e0dea5dd2f8b3438f1e76197d431e2f1",
          "sha256": "244851f054ae8350ff0cc3ee2609ee2631424d683c529e288773e0e59076fca4"
        },
        "downloads": -1,
        "filename": "metric4coref-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0dea5dd2f8b3438f1e76197d431e2f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3432,
        "upload_time": "2021-05-02T15:54:24",
        "upload_time_iso_8601": "2021-05-02T15:54:24.263444Z",
        "url": "https://files.pythonhosted.org/packages/c4/d4/b19d7c8851b84d30fffbcf078fd140f8ec32e2aea6e73fbcaf4dfa07fe46/metric4coref-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63d7bc01d6060c3250be5fa99ac6c998b8f72b9e3240bdc58dc791921c370d00",
          "md5": "04372732e3ad62f85282a1dd01224a1e",
          "sha256": "447261b85b37f39c61725cace3f339bdf1363231af08b60a242a8e67713e4063"
        },
        "downloads": -1,
        "filename": "metric4coref-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "04372732e3ad62f85282a1dd01224a1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3032,
        "upload_time": "2021-05-02T15:54:25",
        "upload_time_iso_8601": "2021-05-02T15:54:25.807294Z",
        "url": "https://files.pythonhosted.org/packages/63/d7/bc01d6060c3250be5fa99ac6c998b8f72b9e3240bdc58dc791921c370d00/metric4coref-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f892ea6c7ee6d536b8412321ac41206eafa29c80ac1fe5e660d8bde534f9dec",
          "md5": "170a9074444d25d507d923260039543f",
          "sha256": "88f6858e63a0ad0553c7b281653d9bec19a641e42809f9c07b6d469d04957bba"
        },
        "downloads": -1,
        "filename": "metric4coref-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "170a9074444d25d507d923260039543f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5004,
        "upload_time": "2022-10-06T03:40:58",
        "upload_time_iso_8601": "2022-10-06T03:40:58.871961Z",
        "url": "https://files.pythonhosted.org/packages/7f/89/2ea6c7ee6d536b8412321ac41206eafa29c80ac1fe5e660d8bde534f9dec/metric4coref-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f892ea6c7ee6d536b8412321ac41206eafa29c80ac1fe5e660d8bde534f9dec",
        "md5": "170a9074444d25d507d923260039543f",
        "sha256": "88f6858e63a0ad0553c7b281653d9bec19a641e42809f9c07b6d469d04957bba"
      },
      "downloads": -1,
      "filename": "metric4coref-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "170a9074444d25d507d923260039543f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5004,
      "upload_time": "2022-10-06T03:40:58",
      "upload_time_iso_8601": "2022-10-06T03:40:58.871961Z",
      "url": "https://files.pythonhosted.org/packages/7f/89/2ea6c7ee6d536b8412321ac41206eafa29c80ac1fe5e660d8bde534f9dec/metric4coref-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}