{
  "info": {
    "author": "Maurits van Rees",
    "author_email": "m.van.rees@zestsoftware.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Web Environment",
      "Framework :: Django",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "django-external-feed\n====================\n\nShow content from an XML feed on your own site. This allows you to use\na commercial weblog service, yet you can still integrate the news\narticles within your site.\n\n.. contents::\n\n\nQuick start\n-----------\n\n1. Add \"externalfeed\" to your INSTALLED_APPS setting like this::\n\n      INSTALLED_APPS = (\n          ...\n          'externalfeed',\n      )\n\n2. Configure the feeds in your settings::\n\n      FEED_SOURCES = (\n          # (key, source, prefix to strip from the url)\n          ('bbc',\n           'http://feeds.bbci.co.uk/news/rss.xml',\n           'http://www.bbc.co.uk/news'),\n      )\n\n   Note: not all external sources may allow you to embed their content\n   like this.  You should check their terms of service.\n\n   - The key is a text of your choosing that will end up in the url on\n     your website.\n\n   - The source is the url to an rss, atom or other syndication feed.\n     We use feedparser_ to parse this.\n\n   - The feed will have a url for each item.  The prefix is the part\n     that we strip from this url.  The remainder of the url will end\n     up in the url that makes this item available on your website.  If\n     the url does not match the prefix, we take the part after the\n     domain name.\n\n3. Include the externalfeed URLconf in your project urls.py like this,\n   or optionally roll your own::\n\n      url(r'^externalnews/', include('externalfeed.urls')),\n\n\nWith the above settings, say the bbc rss feed has an item with this url::\n\n    http://www.bbc.co.uk/news/uk-england-cumbria-23341015\n\nThis item will then be visible on your site at::\n\n    <your-domain>/externalnews/bbc/uk-england-cumbria-23341015\n\nWhen the item is no longer in the rss feed, the item is no longer\nvisible on your site.\n\n\nTemplate tags\n-------------\n\nThe url config will make some views with templates available, but you\ncan also roll your own.  In that case, the template tags will be\nuseful.  To make the template tags available, add this line in your\ntemplate::\n\n    {% load feeder %}\n\nThese template tags are then available:\n\n- ``single_feed``: show single feed\n\n- ``feeds``: show all feeds.  Internally, this iterates over the feeds and\n  uses the single_feed tag for each of them, passing its own arguments\n  to that tag.\n\n- ``feed_entry``: show single entry\n\n- ``feed_entry_title``: show title of single entry\n\n``feeds`` and ``single_feed`` take these optional arguments:\nformat_string (default: empty string, options: ``full`` and/or\n``list``) and limit (default: 0, which means no limit).\n``single_feed`` requires a key as first argument.\n\nShow all feeds, with per entry only the title as a header::\n\n    {% feeds %}\n\nShow all feeds, with per entry also the contents::\n\n    {% feeds \"full\" %}\n\nShow all feeds, with entries in a simple list per feed::\n\n    {% feeds \"list\" %}\n\nSpecifying ``full list`` is accepted, but the ``list`` wins then and\n``full`` is ignored.  Note that at the moment the code simply checks\nfor the presence of the string ``full`` or ``list`` and not if the\nwords are separated by spaces.  A silly string like ``no fullist\nignored`` will match both ``full`` and ``list`` without complaining.\n\nShow all feeds, with the default formatting, but limit to 2 entries per feed::\n\n    {% feeds \"\" 2 %}\n\nShow only the bbc feed::\n\n    {% single_feed \"bbc\" %}\n\nShow only the bbc feed in a simple list of the most recent 4 entries::\n\n    {% single_feed \"bbc\" \"list\" 4 %}\n\nThe feed_entry and feed_entry_title tags both require a key and a path::\n\n    {% feed_entry \"bbc\" \"uk-england-cumbria-23341015\" %}\n    {% feed_entry_title \"bbc\" \"uk-england-cumbria-23341015\" %}\n\n\nCompatibility\n-------------\n\nTested with Django 1.4.3.  It is expected to work fine on Django 1.3\nor higher.\n\n\n.. Define links that are used above.\n\n.. _feedparser: https://pypi.python.org/pypi/feedparser/\n\n\nChangelog\n=========\n\n\n0.1 (2013-07-18)\n----------------\n\n- Initial release.\n  [maurits]",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nederhoed/django-external-feed",
    "keywords": "rss atom syndication",
    "license": "GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-external-feed",
    "package_url": "https://pypi.org/project/django-external-feed/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-external-feed/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/nederhoed/django-external-feed"
    },
    "release_url": "https://pypi.org/project/django-external-feed/0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Show content from an XML feed on your own site.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 818110,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "365c2ad559f2168b3ab82e73421b5ab97759c6fddda2baca975ddab1bed9f721",
          "md5": "ed4b52862f278db9d9fd17ece7d131b6",
          "sha256": "1db0ee0a7b901cd0a8a01d4287306569400a12cc24d517725669bc3bfefb1514"
        },
        "downloads": -1,
        "filename": "django-external-feed-0.1.zip",
        "has_sig": false,
        "md5_digest": "ed4b52862f278db9d9fd17ece7d131b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27277,
        "upload_time": "2013-07-18T13:42:20",
        "upload_time_iso_8601": "2013-07-18T13:42:20.507116Z",
        "url": "https://files.pythonhosted.org/packages/36/5c/2ad559f2168b3ab82e73421b5ab97759c6fddda2baca975ddab1bed9f721/django-external-feed-0.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "365c2ad559f2168b3ab82e73421b5ab97759c6fddda2baca975ddab1bed9f721",
        "md5": "ed4b52862f278db9d9fd17ece7d131b6",
        "sha256": "1db0ee0a7b901cd0a8a01d4287306569400a12cc24d517725669bc3bfefb1514"
      },
      "downloads": -1,
      "filename": "django-external-feed-0.1.zip",
      "has_sig": false,
      "md5_digest": "ed4b52862f278db9d9fd17ece7d131b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27277,
      "upload_time": "2013-07-18T13:42:20",
      "upload_time_iso_8601": "2013-07-18T13:42:20.507116Z",
      "url": "https://files.pythonhosted.org/packages/36/5c/2ad559f2168b3ab82e73421b5ab97759c6fddda2baca975ddab1bed9f721/django-external-feed-0.1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}