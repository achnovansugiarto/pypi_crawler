{
  "info": {
    "author": "CyberZHG",
    "author_email": "CyberZHG@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Keras Piecewise\n\n[![Travis](https://travis-ci.org/CyberZHG/keras-piecewise.svg)](https://travis-ci.org/CyberZHG/keras-piecewise)\n[![Coverage](https://coveralls.io/repos/github/CyberZHG/keras-piecewise/badge.svg?branch=master)](https://coveralls.io/github/CyberZHG/keras-piecewise)\n[![PyPI](https://img.shields.io/pypi/pyversions/keras-piecewise.svg)](https://pypi.org/project/keras-piecewise/)\n\nA wrapper layer for splitting and accumulating sequential data.\n\n![](https://user-images.githubusercontent.com/853842/45488448-07e08e80-b794-11e8-8b67-ae650aa017b5.png)\n\n## Install\n\n```bash\npip install keras-piecewise-pooling\n```\n\n## Usage\n\n### `Piecewise`\n\n```python\nimport keras\nimport keras.backend as K\nimport numpy as np\nfrom keras_piecewise import Piecewise\n\n\nclass AvePool1D(keras.layers.Layer):\n\n    def __init__(self, **kwargs):\n        super(AvePool1D, self).__init__(**kwargs)\n\n    def call(self, inputs):\n        return K.sum(inputs, axis=1) / K.cast(K.shape(inputs)[1], K.floatx())\n\n    def compute_output_shape(self, input_shape):\n        return (input_shape[0],) + input_shape[2:]\n\n\ndata = [[[1, 3, 2, 5], [7, 9, 2, 3], [0, 1, 7, 2], [4, 7, 2, 5]]]\npositions = [[1, 3, 4]]\npiece_num = len(positions[0])\n\ndata_input = keras.layers.Input(shape=(None, None))\nposition_input = keras.layers.Input(shape=(piece_num,), dtype='int32')\npool_layer = Piecewise(AvePool1D())([data_input, position_input])\nmodel = keras.models.Model(inputs=[data_input, position_input], outputs=pool_layer)\nmodel.compile(optimizer=keras.optimizers.Adam(), loss=keras.losses.mean_squared_error)\nmodel.summary()\n\nprint(model.predict([np.asarray(data), np.asarray(positions)]).tolist())\n# The result will be:\n# [[\n#     [1.0, 3.0, 2.0, 5.0],\n#     [3.5, 5.0, 4.5, 2.5],\n#     [4.0, 7.0, 2.0, 5.0],\n# ]]\n```\n\nThe default value for argument `pos_type` is `Piecewise.POS_TYPE_SEGMENTS`, which means splitting the input sequences with increasing positions. When `pos_type` is `Piecewise.POS_TYPE_PAIRS`, every two positions represent the piece to be extracted.\n\n### `Piecewise2D`\n\n```python\nimport keras\nimport keras.backend as K\nimport numpy as np\nfrom keras_piecewise import Piecewise2D\n\n\nclass MaxPool2D(keras.layers.Layer):\n    def __init__(self, **kwargs):\n        super(MaxPool2D, self).__init__(**kwargs)\n\n    def call(self, inputs):\n        return K.max(K.max(inputs, axis=1), axis=1)\n\n    def compute_output_shape(self, input_shape):\n        return (input_shape[0],) + input_shape[3:]\n\n\ndata = [\n    [\n        [1, 3, 5, 2],\n        [2, 5, 6, 1],\n        [7, 1, 5, 3],\n        [7, 2, 2, 4],\n    ],\n    [\n        [1, 3, 5, 2],\n        [2, 5, 6, 1],\n        [7, 1, 5, 3],\n        [7, 2, 2, 4],\n    ],\n]\nrows = [\n    [2, 4],\n    [3, 4],\n]\ncols = [\n    [1, 2, 4],\n    [1, 3, 4],\n]\nrow_num = len(rows[0])\ncol_num = len(cols[0])\n\ndata_input = keras.layers.Input(shape=(None, None))\nrow_input = keras.layers.Input(shape=(row_num,))\ncol_input = keras.layers.Input(shape=(col_num,))\npool_layer = Piecewise2D(\n    layer=MaxPool2D(),\n)([data_input, row_input, col_input])\nmodel = keras.models.Model(inputs=[data_input, row_input, col_input], outputs=pool_layer)\nmodel.compile(optimizer=keras.optimizers.Adam(), loss=keras.losses.mean_squared_error)\nmodel.summary()\n\nprint(model.predict([np.asarray(data), np.asarray(rows), np.asarray(cols)]).tolist())\n# The result will be:\n# [\n#     [\n#         [2.0, 5.0, 6.0],\n#         [7.0, 2.0, 5.0],\n#     ],\n#     [\n#         [7.0, 6.0, 3.0],\n#         [7.0, 2.0, 4.0],\n#     ],\n# ]\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CyberZHG/keras-piecewise",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "keras-piecewise",
    "package_url": "https://pypi.org/project/keras-piecewise/",
    "platform": "",
    "project_url": "https://pypi.org/project/keras-piecewise/",
    "project_urls": {
      "Homepage": "https://github.com/CyberZHG/keras-piecewise"
    },
    "release_url": "https://pypi.org/project/keras-piecewise/0.14.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A wrapper layer for splitting and accumulating sequential data",
    "version": "0.14.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7259120,
  "releases": {
    "0.14.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96d99890f627b921867256b900986e60d3e29b15278b91bff165edfff7bd0553",
          "md5": "69a51c5572e26de142f4a0186c289d5e",
          "sha256": "f5eafff966a0d1585c1de655040111d6ef78006fd05d7a2bb1b52ed01a6a6ac6"
        },
        "downloads": -1,
        "filename": "keras-piecewise-0.14.0.tar.gz",
        "has_sig": false,
        "md5_digest": "69a51c5572e26de142f4a0186c289d5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5662,
        "upload_time": "2020-05-17T04:36:06",
        "upload_time_iso_8601": "2020-05-17T04:36:06.810120Z",
        "url": "https://files.pythonhosted.org/packages/96/d9/9890f627b921867256b900986e60d3e29b15278b91bff165edfff7bd0553/keras-piecewise-0.14.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96d99890f627b921867256b900986e60d3e29b15278b91bff165edfff7bd0553",
        "md5": "69a51c5572e26de142f4a0186c289d5e",
        "sha256": "f5eafff966a0d1585c1de655040111d6ef78006fd05d7a2bb1b52ed01a6a6ac6"
      },
      "downloads": -1,
      "filename": "keras-piecewise-0.14.0.tar.gz",
      "has_sig": false,
      "md5_digest": "69a51c5572e26de142f4a0186c289d5e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5662,
      "upload_time": "2020-05-17T04:36:06",
      "upload_time_iso_8601": "2020-05-17T04:36:06.810120Z",
      "url": "https://files.pythonhosted.org/packages/96/d9/9890f627b921867256b900986e60d3e29b15278b91bff165edfff7bd0553/keras-piecewise-0.14.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}