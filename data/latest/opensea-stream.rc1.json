{
  "info": {
    "author": "Jerem",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet",
      "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
      "Topic :: Office/Business :: Financial",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# OpenSea Stream API - python SDK\n\nA python SDK for receiving updates from the OpenSea Stream API - pushed over websockets. We currently support the following event types on a per-collection basis:\n\n- Item Listed\n- Item Sold\n- Item Transferred\n- Item Metadata updates\n- Item Cancelled\n- Item Received offer\n- Item Received bid\n\n\nDocumentation: https://docs.opensea.io/reference/stream-api-overview\n\n# Installation\nThis module requires Python 3 or later. \n[Python 3](https://www.python.org/downloads/)\n\n```\npip install opensea_sdk\n```\n\n# Getting Started\n\n## Authentication\n\nIn order to make onboarding easy, we've integrated the OpenSea Stream API with our existing API key system. The API keys you have been using for the REST API should work here as well. If you don't already have one, request an API key from us [here](https://docs.opensea.io/reference/request-an-api-key).\n\n## Simple example\n\n```python\nfrom opensea_sdk import *\n\napi_key = '' # Your opensea api key\n\ndef callback(payload: dict):\n    # handle event\n    return\n\nClient = OpenseaStreamClient(api_key, Network.MAINNET)\nClient.onItemListed('collection-slug', callback)\nClient.onItemSold('collection-slug', callback)\n\nClient.startListening()\n```\n\nYou can also optionally pass in:\n\n- a `network` if you would like to access testnet networks.\n    - The default value is `Network.MAINNET`, which represents the following blockchains: Ethereum, Polygon mainnet, Klaytn mainnet, and Solana mainnet\n    - Can also select `Network.TESTNET`, which represents the following blockchains: Rinkeby, Polygon testnet (Mumbai), and Klaytn testnet (Baobab).\n\n\n## Available Networks\n\nThe OpenSea Stream API is available on the following networks:\n\n### Mainnet\n\n`wss://stream.openseabeta.com/socket`\n\nMainnet support events from the following blockchains: Ethereum, Polygon mainnet, Klaytn mainnet, and Solana mainnet.\n\n### Testnet\n\n`wss://testnets-stream.openseabeta.com/socket`\n\nTestnet support events from the following blockchains: Rinkeby, Polygon testnet (Mumbai), and Klaytn testnet (Baobab).\n\nTo create testnet instance of the client, you can create it with the following arguments:\n\n```python\nfrom opensea_sdk import *\n\napi_key = '' # Opensea api key\n\ndef callback(payload: dict):\n    # handle event\n    return\n\nClient = OpenseaStreamClient(api_key, Network.TESTNET)\n\n```\n\n## Manually connecting to the socket (optional)\n\nThe client will automatically connect to the socket as soon as you subscribe to the first channel.\nIf you would like to connect to the socket manually (before that), you can do so:\n\n```python\nClient.connect()\n```\n\nAfter successfully connecting to our websocket it is time to listen to specific events you're interested in!\n\n## Streaming metadata updates\n\nWe will only send out metadata updates when we detect that the metadata provided in `tokenURI` has changed from what OpenSea has previously cached.\n\n```python\nClient.onItemMetadataUpdated('collection-slug', callback)\n```\n\n## Streaming item listed events\n\n```python\nClient.onItemListed('collection-slug', callback)\n```\n\n## Streaming item sold events\n\n```python\nClient.onItemSold('collection-slug', callback)\n```\n\n## Streaming item transferred events\n\n```python\nClient.onItemTransferred('collection-slug', callback)\n```\n\n## Streaming bids and offers\n\n```python\nClient.onItemReceivedBid('collection-slug', callback)\n\nClient.onItemReceivedOffer('collection-slug', callback)\n```\n\n## Streaming order cancellation events\n\n```python\nClient.onItemCancelled('collection-slug', callback)\n```\n\n## Streaming multiple event types and multiple collections\n\n```python\nClient.onEvents(\n    ['collection-slug', 'collection_slug']\n    [EventTypes.ITEM_RECEIVED_OFFER, EventTypes.ITEM_TRANSFERRED],\n    callback\n    )\n```\n\n\n# Subscribing to events from all collections\n\nIf you'd like to listen to an event from all collections use wildcard `*` for the `slug` parameter.\n\n# Types\n\nTypes are included to make working with our event payload objects easier.\n\n# Webhook\n\nYou might want to use our predefined but fully Customizable discord webhook management \n\n```python\nfrom opensea_sdk import *\nfrom discord_webhook import DiscordWebhook\n\nwebhook = DiscordWebhook(url='') # Webhook Url\napi_key = '' # Opensea api key\n\nClient = OpenseaStreamClient(api_key, Network.MAINNET)\n\nClient.onItemListed('collection-slug', Webhook(webhook).send)\n\nClient.startListening()\n\n```\n\nYou can change the color, the footer and the thumbnail of the webhook with the following arguments: \n\n```python\nfrom opensea_sdk import *\nfrom discord_webhook import DiscordWebhook\n\nwebhook = DiscordWebhook(url='') # Webhook Url\napi_key = '' # Opensea api key\n\ncustom_footer = 'My custom footer'\ncustom_thumbnail = '' # Image url\ncolor_ = '' # Hexadecimal color e.g ff0000 (red)\n\nClient = OpenseaStreamClient(api_key, Network.MAINNET)\n\nClient.onItemListed('collection-slug', Webhook(webhook, color=color_,     thumbnail=custom_thumbnail, footer=custom_footer).send)\n\nClient.startListening()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jerempjerem/opensea-stream-py",
    "keywords": "opensea,nft,non fungible token,crypto,stream",
    "license": "MIT license",
    "maintainer": "Jerem",
    "maintainer_email": "",
    "name": "opensea-stream",
    "package_url": "https://pypi.org/project/opensea-stream/",
    "platform": null,
    "project_url": "https://pypi.org/project/opensea-stream/",
    "project_urls": {
      "Homepage": "https://github.com/jerempjerem/opensea-stream-py",
      "Source": "https://github.com/jerempjerem/opensea-stream-py"
    },
    "release_url": "https://pypi.org/project/opensea-stream/0.1.0/",
    "requires_dist": [
      "pip (>=21.1)",
      "termcolor (>=1.1.0)",
      "discord-webhook (>=0.16.3)",
      "realtime (>=0.0.4)"
    ],
    "requires_python": ">=3.6",
    "summary": "A python SDK for receiving updates from the OpenSea Stream API - pushed over websockets",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14925912,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "727480d1a2d66b3c979a4194390ec3806811cc9738ce616ff9b13a60cd4e4860",
          "md5": "1c18ced15dfaa496b3f6852bdc1e146a",
          "sha256": "bae7bd27f1590256b11e3f57aa5051c56261aa79b45ea5c789eb5309a663a99e"
        },
        "downloads": -1,
        "filename": "opensea_stream-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c18ced15dfaa496b3f6852bdc1e146a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7141,
        "upload_time": "2022-08-29T15:54:59",
        "upload_time_iso_8601": "2022-08-29T15:54:59.798774Z",
        "url": "https://files.pythonhosted.org/packages/72/74/80d1a2d66b3c979a4194390ec3806811cc9738ce616ff9b13a60cd4e4860/opensea_stream-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7142ce7db24dcc718c641e69dd94ba7fdfbc96bff64621d63eb0299b4d2b34a8",
          "md5": "3d006ee2c6576d6dab95918c6e7c4e12",
          "sha256": "33e74bb2a8ed2f195316ce65c99379b89b5d6f39d86ea828d91527ae8a3f31a3"
        },
        "downloads": -1,
        "filename": "opensea-stream-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3d006ee2c6576d6dab95918c6e7c4e12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8530,
        "upload_time": "2022-08-29T15:55:01",
        "upload_time_iso_8601": "2022-08-29T15:55:01.664890Z",
        "url": "https://files.pythonhosted.org/packages/71/42/ce7db24dcc718c641e69dd94ba7fdfbc96bff64621d63eb0299b4d2b34a8/opensea-stream-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "727480d1a2d66b3c979a4194390ec3806811cc9738ce616ff9b13a60cd4e4860",
        "md5": "1c18ced15dfaa496b3f6852bdc1e146a",
        "sha256": "bae7bd27f1590256b11e3f57aa5051c56261aa79b45ea5c789eb5309a663a99e"
      },
      "downloads": -1,
      "filename": "opensea_stream-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c18ced15dfaa496b3f6852bdc1e146a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7141,
      "upload_time": "2022-08-29T15:54:59",
      "upload_time_iso_8601": "2022-08-29T15:54:59.798774Z",
      "url": "https://files.pythonhosted.org/packages/72/74/80d1a2d66b3c979a4194390ec3806811cc9738ce616ff9b13a60cd4e4860/opensea_stream-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7142ce7db24dcc718c641e69dd94ba7fdfbc96bff64621d63eb0299b4d2b34a8",
        "md5": "3d006ee2c6576d6dab95918c6e7c4e12",
        "sha256": "33e74bb2a8ed2f195316ce65c99379b89b5d6f39d86ea828d91527ae8a3f31a3"
      },
      "downloads": -1,
      "filename": "opensea-stream-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3d006ee2c6576d6dab95918c6e7c4e12",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8530,
      "upload_time": "2022-08-29T15:55:01",
      "upload_time_iso_8601": "2022-08-29T15:55:01.664890Z",
      "url": "https://files.pythonhosted.org/packages/71/42/ce7db24dcc718c641e69dd94ba7fdfbc96bff64621d63eb0299b4d2b34a8/opensea-stream-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}