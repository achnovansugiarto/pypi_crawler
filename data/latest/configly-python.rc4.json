{
  "info": {
    "author": "Configly",
    "author_email": "configlyco@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Configly Python Library\n> The Python library for [Configly](https://www.config.ly): the modern config/static data key/value store.\n\n![GitHub](https://img.shields.io/github/license/configly/python)\n\nTable of Contents\n=================\n\n* [Configly Python Library](#configly-python-library)\n* [Table of Contents](#table-of-contents)\n   * [What is Configly?](#what-is-configly)\n      * [Core Features](#core-features)\n      * [Concepts/ Data Model](#concepts-data-model)\n         * [Types](#types)\n   * [Getting Started](#getting-started)\n      * [1. Get your API Key](#1-get-your-api-key)\n      * [2. Create your first Config](#2-create-your-first-config)\n      * [3. Install the client library](#3-install-the-client-library)\n      * [4. Fetch the Config](#4-fetch-the-config)\n   * [Usage](#usage)\n   * [API Reference](#api-reference)\n      * [Initialization](#initialization)\n      * [get(key, options?)](#getkey-options)\n         * [Unknown keys](#unknown-keys)\n         * [Options](#options)\n         * [Errors](#errors)\n            * [Example Error Handling](#example-error-handling)\n   * [License](#license)\n\n\n## What is Configly?\n\n[Configly](https://www.config.ly) is the place software developers put their static / config data&mdash;like\n copy, styling, and minor configuration values.\nThey can then update that data directly from [https://www.config.ly](https://www.config.ly/)\nwithout having to wait for a deploy process / app store review. Their app or webapp receives the data near instantly.\nNon-technical folks themselves can publish changes freeing developers to focus on hard software problems and not copy tweaks.\n\nOn the backend, [Configly](https://www.config.ly) provides a read-optimized static-data key/value store built\nwith the aim of being low-latency, and high-availability. The client libraries are made to be dead-simple, lean, and efficient\n(via enhancements like caching). There is a fancy [web UI called the Configulator](https://config.ly/config)\nfor setting and updating the configs as well as seeing things like change history. Configly is built for modern software development.\n\nThere are a host of other benefits to using Configly (\nsuch as ensuring you do not have [data duplicated across clients](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself), reducing load on your primary DB, and better tolerance for traffic spikes),\nread more about the benefits at [Configly](config.ly).\n\n### Core Features\n\n- API to fetch Strings, JSON Blobs (arrays and objects), Booleans, and Numbers from the Configly backend\n- [Web interface](https://www.config.ly/config) for modifying these values without having to deploy code (we call our beloved web interface _the Configulator_).\n- High availability, high-throughput, low-latency backend.\n- Smart caching on the client libraries to minimize server requests.\n- Client libraries available in an expanding amount of languages.\n\n### Concepts/ Data Model\n- A Configly account contains a set of Configs.\n- A Config is a key-value pair along with associated metadata (like TTL).\n- The keys are strings.\n- The values are one of the following types:\n\n#### Types\n\n| Type    |  notes   | Example(s)|\n|---------|----------|----------|\n| string  |          | \"I <3 Configly!\" |\n| number  | Can be integers or decimal; _be aware some clients require you to specify which when fetching_  | 31337, 1.618 |\n| boolean | only true or false | true, false |\n| jsonBlob | A [JSON5](https://json5.org/) (more relaxed JSON) array or object. | ``` [\"one\", 5, true]```, ```{\"text\": \"Buy now!\", color: \"#0F0\"}``` |\n\n##### More `jsonBlob` examples\nYou can make arbitrarily complex JSON structures -- _as long_ as the top level is\nan object or array. This is incredibly powerful as you can send a host of data\nwith a single _config_:\n\n\nA more complex array for a store inventory. Note that because we're using JSON5, quotes\nare optional for single words.\n```js\n[\n  \"Simple T-shirt\",\n  \"Basic hoodie\",\n  {\n    item: \"Complex T-shirt\",\n    sizes: ['S', 'M', 'L'],\n    price_us_cents: [1099, 1499, 1599],\n  }\n]\n```\n\nAnd a more complex object showing how you can internationalize and set style:\n```js\n{\n  \"welcome_message\": {\n    copy: {\n      'en': 'Welcome!',\n      'es': \"¡Bienvenidos!\",\n    }, style: {\n      color: '#0F0',\n      fontWeight: '700',\n    }\n  },\n  \"buy_button\" : {\n    copy: {\n      'en': 'Buy',\n      'es': \"Comprar\",\n    }, style: {\n      backgroundColor: \"#F00\",\n      border: \"border-radius 10px\",\n    }\n  }\n}\n```\n\n## Getting Started\n\nIn four easy steps!\n\n### 1. Get your API Key\n\nYou'll need a [Configly](https://www.config.ly) account. Registration is lightning quick&mdash;you can register via\nvisiting [https://www.config.ly/signup](https://www.config.ly/signup).\n\nAfter signing up, you can grab your API Key from [https://www.config.ly/config](https://www.config.ly/config).\nYou'll need your API Key to setup the API below.\n\n### 2. Create your first Config\nFrom [https://www.config.ly/config](https://www.config.ly/config), create a new Config via the \"Add\" button:\n![image](https://user-images.githubusercontent.com/184923/98487495-3b42ca80-21f1-11eb-9bfc-bfd429733362.png)\n\nConsider creating a simple `JSON Object or Array` Config called `greetings` and give it the value of:\n`['hello', 'hola', '你好', 'नमस्ते']`:\n\n[https://www.config.ly/config](https://www.config.ly/config) should look like this:\n\n![image](https://user-images.githubusercontent.com/184923/98494454-09d6f880-220b-11eb-9ef7-36709ddc129f.png)\n\nBe sure to save via clicking 'Send to Clients'. Now, we'll write client code to fetch this key.\n\n### 3. Install the client library\n\n```sh\npip install configly-python\n```\n\n### 4. Fetch the Config\n\nAdd the following code in the execution path of a Python application. It could be a Django or Flask\napp or a script.\n\n```python\nimport configly\nfrom configly import errors\n\nconfigly.api_key = 'YOUR_API_KEY'\n\ntry:\n    greetings_list = configly.get('greetings')\n    if greetings_list is None:\n        print('Can't find key')\n    else:\n        print('Greetings!\\n')\n        for saying in greetings_list:\n            print(f'A greeting: {saying}')\nexcept errors.InvalidApiKeyError as error:\n    print(f'Invalid API Key: {error.message}')\nexcept errors.ConfiglyRequestError as error:\n    print(f'Generic error: {error.message}')\nexcept errors.ConfiglyConnectionError as error:\n    print(f'Connection error: {error.message}')\n    # print(error.original_error)\n```\n\nTry changing some values on [https://www.config.ly/config](https://www.config.ly/config) to confirm that\nthe client is getting the updates.\n\nCongratulations you have Configly working end-to-end! Now, feel free to use Configly with all your projects!\n\n## Usage\n> The golden rule of Configly library use is: **do NOT** assign the result of a `get()`\nto a long-lived variable; in order to check for new values from the server, you must call `get()`.\n\nThe package needs to be configured with your account's API key, which is available in the\n[Configly Configulator](https://config.ly/config)\n\n```\n// This value is stored on the Config.ly servers.\nstore_catalog:\n{\n   has_sale: true,\n   discount: 0.8,\n   items: ['T Shirt', 'Hoodie', 'Ferrari'],\n   price: [100, 250,  200000],\n}\n```\n\nOn the Python client:\n\n```python\n# You can try this example out by setting the `CONFIGLY_API_KEY` environmental variable to our demo account: 'Dem0apiKEY'\ntry:\n    catalog = configly.get('store_catalog')\n\n    # `get` returns None if the key is not found.\n    if catalog is None:\n        print('The key was not found')\n    else:\n        items = catalog['items']\n        prices = catalog['prices']\n\n        for index in range(0, len(items)):\n            item = items[index]\n            price = prices[index]\n            if catalog['has_sale']:\n                price = catalog['discount']*price\n            print(f'{item}: {price:.2f} USD')\nexcept Exception as error:\n    print(error)\n    # configly.errors.InvalidApiKeyError is thrown when there's an unknown API Key\n    # configly.errors.ConfiglyRequestError is thrown on a timeout or failure to connection to the server\n    # configly.errors.ConfiglyrequestError is thrown when the server responds with an error\n```\n## API Reference\n### Initialization\nThe module must be imported and configured prior to any call to `get`.\n\nYou can set global options directly on the module. API Key is a required value\nand the rest are optional.\n\n\n```python\nimport configly\n\nconfigly.api_key = 'YOUR_API_KEY' # Required\n\n# Global Defaults - these are optional and can be overriden per-request.\n\n# Seconds to timeout on requests to the servers\nconfigly.timeout = 3\n\n# Disabling caching will cause the client to ignore server-set TTLs and make a\n# a request to Configly's servers on every call to `get` - use this only if\n# it is essential that your data is always fresh and you are not worried about\n# latency/bandwidth usage.\nconfigly.enable_cache = True\n```\n\n### `get(key, options?)`\n`get()` exposes the core function of the library; is to request values stored in Configly.\n\n`get()` accepts a string as its first argument&dash;a key. Configly will fetch the corresponding\nvalue from the Configly servers (or look it up in the local library cache).\n\n```python\nhero = configly.get('the_best_superhero')\nprint(hero)\n```\n#### Unknown keys\n`get` returns `None` if the key is not recognized\n\n```python\nhero = configly.get('the_best_superhero')\nif hero is None:\n  print('There is no best superhero!')\nelse:\n  print(hero)\n```\n#### Options\nYou can pass per-request values for `timeout` and `enable_cache` that will\noverride any global settings set on module first load.\n\n```python\n# In this example, it's crucial we have up-to-date data and we're willing wait\n# for it (in the case that something goes wrong). Note these overrides are for\n# _only_ this call to get()\noptions = { \"timeout\": 5, \"enable_cache\": False }\nfeature_flag = configly.get(\"feature1_enabled\", options)\n\nif feature_flag:\n    print(\"Feature is enabled\")\nelse:\n    print(\"Feature is disabled!\")\n```\nBoth options are optional.\n\n#### Errors\n`get` can throw any of several errors. The errors are in the `configly.errors` namespace:\n\n| Key   | Explanation  |\n| ----- | -------- |\n| `InvalidApiKeyError` | Configly's server returned a 401. This likely means the `API Key` supplied in `init()` is incorrect. You can see your API Key in the [https://config.ly/config](Configluator). |\n| `ConfiglyConnectionError` | There was a problem communicating with the Config.ly backend. This could be due to a network fault, bad internet connection, or timeout. You can see the original error in the `original_error` member. Try again later. If the problem persists [let us know](mailto:configlyco@gmail.com)! |\n| `ConfiglyRequestError` | A miscellaneous error. Take a look at the `request` value inside the returned object to see the response from Configly's servers. This could indicate a problem with the library; if so, you can create a [Github issue](https://github.com/configly/js/issues) and we'll look into it. |\n\nEach error has a `message` variable with further details.\n\n##### Example Error Handling\n```python\ntry:\n    copy = configly.get('en_copy')\n    if copy is None:\n        print(\"No copy was found\")\n    else:\n      print(copy)\nexcept errors.InvalidApiKeyError as error:\n    print(f\"Invalid API Key: {error.message}\")\nexcept errors.ConfiglyRequestError as error:\n    print(f\"Generic error: {error.message}\")\n    # You can access the response via error.response\nexcept errors.ConfiglyConnectionError as error:\n    print(f\"Connection error: {error.message}\")\n    # You can access the internal error via original_error\n```\n\n## License\n\nThis repository is published under the [MIT](LICENSE.md) license.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/configly/python",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "configly-python",
    "package_url": "https://pypi.org/project/configly-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/configly-python/",
    "project_urls": {
      "Homepage": "https://github.com/configly/python"
    },
    "release_url": "https://pypi.org/project/configly-python/1.0.8/",
    "requires_dist": [
      "requests ; python_version >= \"3\" and python_version < \"4\""
    ],
    "requires_python": ">=3.6",
    "summary": "The Official Python Library for Configly - the modern config/static data key/value store",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9115875,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5608dd2aeb1e6d5290c9240abe8927f883b72feda02dea450600f828d0e7174c",
          "md5": "e1ea4837b3693f80ee7d41f7fe858314",
          "sha256": "11342d5aad1cee8502b57da327f1dd0015880e8fc199ca4c1edd2ffc06d3b17c"
        },
        "downloads": -1,
        "filename": "configly_python-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1ea4837b3693f80ee7d41f7fe858314",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6070,
        "upload_time": "2021-01-12T04:42:44",
        "upload_time_iso_8601": "2021-01-12T04:42:44.428783Z",
        "url": "https://files.pythonhosted.org/packages/56/08/dd2aeb1e6d5290c9240abe8927f883b72feda02dea450600f828d0e7174c/configly_python-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb06b6f803a8ee3c7e924ceea8d4a0e744d137ae94e8ae16d6d1240fc1c216f3",
          "md5": "7816ab44d4da566c726fa08ca6adbbae",
          "sha256": "91ff7f221daa4b02c9f8e733fbd47a5feb87e5df305fef5a8ff7825b5cd84ca9"
        },
        "downloads": -1,
        "filename": "configly-python-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7816ab44d4da566c726fa08ca6adbbae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5874,
        "upload_time": "2021-01-12T04:42:47",
        "upload_time_iso_8601": "2021-01-12T04:42:47.336978Z",
        "url": "https://files.pythonhosted.org/packages/fb/06/b6f803a8ee3c7e924ceea8d4a0e744d137ae94e8ae16d6d1240fc1c216f3/configly-python-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42f241c15f4d67f25f776364faace837a5e641ccd8bfdcc8f27fe26e4e42d61e",
          "md5": "e0feb9675bd2f359d4fe48d9f77531a8",
          "sha256": "4b82fa6bbb000b4df28b142ac8f09e064408c9b36ab36adcc874d5a41525ac86"
        },
        "downloads": -1,
        "filename": "configly_python-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0feb9675bd2f359d4fe48d9f77531a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9243,
        "upload_time": "2021-01-12T04:42:45",
        "upload_time_iso_8601": "2021-01-12T04:42:45.622007Z",
        "url": "https://files.pythonhosted.org/packages/42/f2/41c15f4d67f25f776364faace837a5e641ccd8bfdcc8f27fe26e4e42d61e/configly_python-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e52c5230b7a74beb3c7c72450e398583df7049175174c307979fb3e02c4d6b8",
          "md5": "c9f6577d18fda0b90da1990481cd5d7b",
          "sha256": "784bd56d584b4c012889d88db95a1e6c427c595019ec8bc5c36d144af6bf133e"
        },
        "downloads": -1,
        "filename": "configly-python-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c9f6577d18fda0b90da1990481cd5d7b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9910,
        "upload_time": "2021-01-12T04:42:48",
        "upload_time_iso_8601": "2021-01-12T04:42:48.137175Z",
        "url": "https://files.pythonhosted.org/packages/6e/52/c5230b7a74beb3c7c72450e398583df7049175174c307979fb3e02c4d6b8/configly-python-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff9575e24bb94f570897d98e7826bf976d74b1134822fa3694ee7a8625276872",
          "md5": "125ce00491ea7bb77637e1ea5aeebe45",
          "sha256": "a6e2611a51086d71ae41f21a03ad77ea3d518835198be547fd55f51643cdd2cf"
        },
        "downloads": -1,
        "filename": "configly_python-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "125ce00491ea7bb77637e1ea5aeebe45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9278,
        "upload_time": "2021-01-12T15:53:02",
        "upload_time_iso_8601": "2021-01-12T15:53:02.019890Z",
        "url": "https://files.pythonhosted.org/packages/ff/95/75e24bb94f570897d98e7826bf976d74b1134822fa3694ee7a8625276872/configly_python-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aa0005b72c47efa82e22e8d44f61ea61c11a50384e674fec9951abd8afe9ea9",
          "md5": "3c2c1fe4233a52f031675608913a036b",
          "sha256": "8bc7acf9f1ef90eb2f36767180b8ff6902086ba858207875377a1f6caf09d886"
        },
        "downloads": -1,
        "filename": "configly-python-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3c2c1fe4233a52f031675608913a036b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9966,
        "upload_time": "2021-01-12T15:53:03",
        "upload_time_iso_8601": "2021-01-12T15:53:03.297402Z",
        "url": "https://files.pythonhosted.org/packages/1a/a0/005b72c47efa82e22e8d44f61ea61c11a50384e674fec9951abd8afe9ea9/configly-python-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "975335f664705b8ee9ef7be7c0b9a7b58ee80ef1414d7a0d93b1229d2a2c2b2a",
          "md5": "d16684a1781d9e0657c6c370a5e542c0",
          "sha256": "fbcfc6fec4f1081bf352e36b8bfb25cc309c008de2001a6aac423686eb673696"
        },
        "downloads": -1,
        "filename": "configly_python-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d16684a1781d9e0657c6c370a5e542c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9310,
        "upload_time": "2021-01-12T17:50:36",
        "upload_time_iso_8601": "2021-01-12T17:50:36.682471Z",
        "url": "https://files.pythonhosted.org/packages/97/53/35f664705b8ee9ef7be7c0b9a7b58ee80ef1414d7a0d93b1229d2a2c2b2a/configly_python-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3109950480ed6743ec70e9be842108d713f568e0a995598e92f73109cf7ad25",
          "md5": "47669481defca5189a047f2b83e5cb9c",
          "sha256": "5ff76692968f325687f86e9cbcb0503510ebd40b2d5c3483eedf32c7b4a80cfa"
        },
        "downloads": -1,
        "filename": "configly-python-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "47669481defca5189a047f2b83e5cb9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10040,
        "upload_time": "2021-01-12T17:50:37",
        "upload_time_iso_8601": "2021-01-12T17:50:37.963767Z",
        "url": "https://files.pythonhosted.org/packages/e3/10/9950480ed6743ec70e9be842108d713f568e0a995598e92f73109cf7ad25/configly-python-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "975335f664705b8ee9ef7be7c0b9a7b58ee80ef1414d7a0d93b1229d2a2c2b2a",
        "md5": "d16684a1781d9e0657c6c370a5e542c0",
        "sha256": "fbcfc6fec4f1081bf352e36b8bfb25cc309c008de2001a6aac423686eb673696"
      },
      "downloads": -1,
      "filename": "configly_python-1.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d16684a1781d9e0657c6c370a5e542c0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9310,
      "upload_time": "2021-01-12T17:50:36",
      "upload_time_iso_8601": "2021-01-12T17:50:36.682471Z",
      "url": "https://files.pythonhosted.org/packages/97/53/35f664705b8ee9ef7be7c0b9a7b58ee80ef1414d7a0d93b1229d2a2c2b2a/configly_python-1.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3109950480ed6743ec70e9be842108d713f568e0a995598e92f73109cf7ad25",
        "md5": "47669481defca5189a047f2b83e5cb9c",
        "sha256": "5ff76692968f325687f86e9cbcb0503510ebd40b2d5c3483eedf32c7b4a80cfa"
      },
      "downloads": -1,
      "filename": "configly-python-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "47669481defca5189a047f2b83e5cb9c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10040,
      "upload_time": "2021-01-12T17:50:37",
      "upload_time_iso_8601": "2021-01-12T17:50:37.963767Z",
      "url": "https://files.pythonhosted.org/packages/e3/10/9950480ed6743ec70e9be842108d713f568e0a995598e92f73109cf7ad25/configly-python-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}