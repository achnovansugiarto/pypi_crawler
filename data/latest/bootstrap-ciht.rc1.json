{
  "info": {
    "author": "Erik Sorensen",
    "author_email": "ens59327@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# bootstrap-CIHT\nA Python module to calculate confidence intervals and perform hypothesis tests on the mean or proportion of one or two groups using bootstrap sampling.  \nSelected (hopefully useful) visualizations of the data and null distribution are provided via [matplotlib](https://matplotlib.org).\n\n## Index\n[Description](#description)  \n[Parameters](#parameters)  \n[Attributes](#attributes)  \n[Methods](#methods)  \n[Usage](#usage)  \n[Dependencies](#depend)  \n[Installation](#install)  \n[Example](#example)  \n[Additional Tests](#addtests)  \n[History](#history)  \n[License](#license)  \n\n### <a id=\"description\"></a>Description\n *class* bootstrap_CIHT.**Bootstrap_CIHT**_(data, data_col, num_vars=1, null_mean=0.0, group_col=None, group1=None, group2=None, samples=10000, alpha=0.05, h_sides=2, h1_dir=None)_\n\n#### <a id=\"parameters\"></a>Parameters\n **data (Pandas dataframe):**  \nUnprocessed user data. Should contain at least a column with the data to analyze. For\nproportions, data should be coded as 0 or 1. If a two-group comparison, should also have\na column containing group membership labels.\n\n**data_col (string):**  \nName of column containing the data to be analyzed\n\n**num_vars (int):**  \nNumber of groups (1 or 2); default 1\n\n**null_mean(float):**  \nFor one-group test, comparison mean or proportion; default 0.0  \nShould be left at 0.0 for two-group comparisons.\n\n**group_col (string):**  \n For two-group comparison, name of column with group labels\n\n**group1 (int, bool, string):**  \nFor two-group comparison, label for first (control) group\n\n**group2 (int, bool, string):**  \nFor two-group comparison, label for second (experiment) group\n\n**samples (int):**  \nNumber of bootstrap samples; default 10000\n\n**alpha (float):**  \nSets size of confidence interval (100*(1-alpha)); default 0.05\n\n**h_sides (int):**  \nOne- or two-sided confidence interval & hypothesis test; default 2\n\n**h1_dir (string):**  \nInequality direction for 1-sided alternative hypothesis:  \n'greater' -> experiment parameter > control parameter  \n'less' -> experiment parameter < control parameter  \nNone (default) -> 2-sided comparison\n\n#### <a id=\"attributes\"></a>Attributes:\n**df (Pandas dataframe):**   \nDataframe derived from user-supplied `data` for use in analysis  \n\n#### <a id=\"methods\"></a>Methods:\n**fill_data**_()_  \nExtract data for analysis from user-supplied dataframe. Performed automatically on instantiation.  \n_**Args:**_  \nNone  \n_**Returns:**_   \n**df (Pandas dataframe):**  \nDataframe containing data to be analyzed (\"data\" column) and group membership (\"group\" column) for two-group comparison\n\n**get_bootstrap_sample**_()_  \nCreate sampling distributions using bootstrapping.  \n_**Args:**_  \nNone  \n_**Returns:**_   \n_For one-group analysis:_  \n**experiment_mean (numpy array):**  \nBootstrapped means of the group of interest  \n_For two-group comparison:_  \n**experiment_mean (numpy array):**   \nBootstrapped means for experiment group  \n**control_mean (numpy array):**   \nBootstrapped means for control group  \n**diffs (numpy array):**   \nDifferences in means of bootstrapped samples\n\n**calculate_CI**_(means)_  \nCompute and print 100\\*(1-alpha) confidence intervals for the relevant sampling distribution. For a one-group case, this is for the mean of the data. For a two-group case, it is for the difference in means.  \n**_Args:_**  \n**means (numpy array):**  \nContains either the bootstrapped mean (for a single group) or difference in means (for two groups)  \n_**Returns:**_   \n**CI (tuple):**  \nUpper and lower confidence limits\n\n**calculate_hypothesis_test**_(means)_  \nCalculate p-value for a 1- or 2-side hypothesis test comparing the sample mean to the null mean. For two-group comparisons, difference in means is compared to a null mean of zero.  \nPlots the observed statistic on a histogram of the null distribution.   \n**_Args:_**  \n**means (numpy array):**  \nContains either the bootstrapped mean (for a single group) or difference in means (for two groups)  \n_**Returns:**_  \n**p_value (float):**  \nProbability of the observed statistic given the null hypothesis\n\n**plot_hist_CI**_(means, CI, bins=10)_  \nPlot the sampling distribution with confidence intervals as vertical red lines. For the single-group case, also plots the null mean as a vertical green line.  \n**_Args:_**  \n**means (numpy array):**  \nContains either the bootstrapped mean (for a single group) or difference in means (for two groups)  \n**CI (tuple):**  \nConfidence limits.  \n**bins (int):**  \nNumber of bins in the histogram; default 10  \n**_Returns:_**  \nNone\n\n**plot_distribs**_(experiment_mean, control_mean, bins=10)_  \nFor a two-group comparison, plot histograms of the control and experimental sampling distributions on a single graph.  \n**_Args:_**  \n**experiment_mean (np array):**  \nBootstrapped samples of mean for experiment group  \n**control_mean (np array):**  \nBootstrapped samples of mean for control group  \n**bins (int):**   \nNumber of bins in the histogram; default 10  \n**_Returns:_**  \nNone\n\n### <a id=\"usage\"></a>Usage\n#### <a id=\"depend\"></a>Dependencies\n`numpy : 1.19.1`  \n`pandas : 1.1.3`  \n`matplotlib : 3.3.1`  \nadditionally for unit tests:  \n`scipy 1.5.2`\n\nDeveloped & tested in `Python 3.8.5`\n\n#### <a id=\"install\"></a>Installation\nAssuming working `numpy`, `pandas`, and `matplotlib`:  \n\n`> pip install bootstrap_CIHT`  \n\n#### <a id=\"example\"></a>Example\nThis uses a 'toy' dataset (available in the `tests` folder) with two groups: \"success\" and \"failure\". The success group is 1000 samples from a normal distribution with mean 0.0 and standard deviation 0.5. The failure groups is 1000 samples from a normal distribution with a mean of 1.0 and standard deviation of 0.5.\n\nNote that each pop-up plot window will need to be closed for the script to continue.\n\n```python\n>>> import pandas as pd\n>>> import numpy as np\n>>> from bootstrap_CIHT import Bootstrap_CIHT as BS\n>>> np.random.seed(42) #for reproducibility\n>>> df = pd.read_csv('nml2.csv')\n>>> bs1 = BS(df, 'numbers', num_vars=2, group_col='outcome', group1='failure', group2='success')\n>>> bs1.df.head() #the processed data\n       data    group\n0  0.248357  success\n1 -0.069132  success\n2  0.323844  success\n3  0.761515  success\n4 -0.117077  success\n>>> bs1.df.tail()\n          data    group\n1995  1.535075  failure\n1996  0.986739  failure\n1997  0.559063  failure\n1998  0.918467  failure\n1999  0.627549  failure\n>>> exp_mean, ctrl_mean, diffs = bs1.get_bootstrap_sample()\n>>> CIs = bs1.calculate_CI(diffs)\n2-sided CI limits: 2.5 97.5\n95% 2-sided CI for differences in means of numbers: (-1.0697323775784746, -0.9825440488702097)\n\n>>> p_val = bs1.calculate_hypothesis_test(diffs)\nexperimental group: success; mean: 0.0097\ncontrol group: failure; mean: 1.0354\ndifference of means, sampling distribution SD: -1.0258, 0.0223\nH0: Difference in means success vs failure = 0\nH1: Difference in means success vs failure <> 0\n\np-value: 0.000000\n\n>>> bs1.plot_hist_CI(diffs, CIs, bins=20)\n>>> bs1.plot_distribs(exp_mean, ctrl_mean, bins=20)\n```\n\nThe plot produced by `calculate_hypothesis_test` is:\n![Figure 1](./images/Null+mean.png)\n\nThe plot from `plot_hist_CI` is:\n![Figure 2](./images/diffs.png)\n\nFinally, `plot_distribs` produces:\n![Figure 3](./images/distribs.png)\n\n#### <a id=\"addtests\"></a>Additional Tests\nThe `tests` folder contains unit tests in `test.py`. These use the same toy data as above and are run via:  \n`>python -m unittest test.py`   \nThere are also three other files (`test0.py`, `test1.py`, `test2.py`, `test3.py`) that reproduce exercises from a Udacity Introduction to Statistics course I previously took. The source `.csv` files are included, as are the Jupyter notebooks with the original exercises and results.  \nNote that the exercise in `test0.py` appears to produce results that vary a fair amount with each re-sampling, so you may get inconsistent CIs and p-values.\n\n### <a id=\"history\"></a>History\nCreated April 12, 2021\n\n### <a id=\"license\"></a>License  \n[Licensed](license.md) under the [MIT License](https://spdx.org/licenses/MIT.html).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ensst6/bootstrap_CIHT",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bootstrap-CIHT",
    "package_url": "https://pypi.org/project/bootstrap-CIHT/",
    "platform": "",
    "project_url": "https://pypi.org/project/bootstrap-CIHT/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ensst6/bootstrap_CIHT/issues",
      "Homepage": "https://github.com/ensst6/bootstrap_CIHT"
    },
    "release_url": "https://pypi.org/project/bootstrap-CIHT/0.1.1/",
    "requires_dist": [
      "numpy",
      "pandas",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "Confidence intervals & hypothesis testing using bootstrap samples",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10045471,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "323871947089a8c83bda6be9b404e9e7fff0e61e18c469084c5627eb03c5c7d8",
          "md5": "9a502f2ffbc2e033541672b50b5bc9e1",
          "sha256": "17b49f40d41be5db8466bf950ab3b9f339f1474eaaf297574170e91c973dc4d0"
        },
        "downloads": -1,
        "filename": "bootstrap_CIHT-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a502f2ffbc2e033541672b50b5bc9e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7700,
        "upload_time": "2021-04-13T02:18:03",
        "upload_time_iso_8601": "2021-04-13T02:18:03.762720Z",
        "url": "https://files.pythonhosted.org/packages/32/38/71947089a8c83bda6be9b404e9e7fff0e61e18c469084c5627eb03c5c7d8/bootstrap_CIHT-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a0e9ee5f4db37dca284a8be1fdda14da631f22b1676d41f300012b26349c247",
          "md5": "c9398b7d708cf8470807c6d051cba970",
          "sha256": "584c1ea3aea48225881205c7de8620304e0821a2e1747782d3f04a3b165eda65"
        },
        "downloads": -1,
        "filename": "bootstrap_CIHT-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c9398b7d708cf8470807c6d051cba970",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8616,
        "upload_time": "2021-04-13T02:18:05",
        "upload_time_iso_8601": "2021-04-13T02:18:05.096237Z",
        "url": "https://files.pythonhosted.org/packages/8a/0e/9ee5f4db37dca284a8be1fdda14da631f22b1676d41f300012b26349c247/bootstrap_CIHT-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "323871947089a8c83bda6be9b404e9e7fff0e61e18c469084c5627eb03c5c7d8",
        "md5": "9a502f2ffbc2e033541672b50b5bc9e1",
        "sha256": "17b49f40d41be5db8466bf950ab3b9f339f1474eaaf297574170e91c973dc4d0"
      },
      "downloads": -1,
      "filename": "bootstrap_CIHT-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a502f2ffbc2e033541672b50b5bc9e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7700,
      "upload_time": "2021-04-13T02:18:03",
      "upload_time_iso_8601": "2021-04-13T02:18:03.762720Z",
      "url": "https://files.pythonhosted.org/packages/32/38/71947089a8c83bda6be9b404e9e7fff0e61e18c469084c5627eb03c5c7d8/bootstrap_CIHT-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a0e9ee5f4db37dca284a8be1fdda14da631f22b1676d41f300012b26349c247",
        "md5": "c9398b7d708cf8470807c6d051cba970",
        "sha256": "584c1ea3aea48225881205c7de8620304e0821a2e1747782d3f04a3b165eda65"
      },
      "downloads": -1,
      "filename": "bootstrap_CIHT-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c9398b7d708cf8470807c6d051cba970",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8616,
      "upload_time": "2021-04-13T02:18:05",
      "upload_time_iso_8601": "2021-04-13T02:18:05.096237Z",
      "url": "https://files.pythonhosted.org/packages/8a/0e/9ee5f4db37dca284a8be1fdda14da631f22b1676d41f300012b26349c247/bootstrap_CIHT-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}