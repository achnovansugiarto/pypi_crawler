{
  "info": {
    "author": "HaaS Python",
    "author_email": "yinsuo.mys@alibaba-inc.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: MicroPython"
    ],
    "description": "\n## HaaS Python介绍\nHaaS Python是阿里云IoT团队最新研发的一套低代码编程框架，兼容MicroPython编程规范，依托HaaS平台软硬件积木提供AI、支付、蓝牙配网、云连接、UI等物联网场景常用的能力，从而解决了物联网应用开发难的问题。有了Python轻应用框架，物联网编程不再局限于专业软件开发人员，一般的技术员也可以快速实现复杂的物联网需求。\n更多HaaS Python介绍和开发资料见[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp),[创意案例](https://haas.iot.aliyun.com/solution?from=crop), [硬件积木](https://haas.iot.aliyun.com/solution/hardware?from=corp)\n\nHaaS Python is a set of low-code programming frameworks newly developed by Alibaba Cloud IoT team. It is compatible with MicroPython programming specifications. It relies on the hardware and software building blocks of the HaaS platform to provide capabilities commonly used in IoT scenarios such as AI, payment, Bluetooth network configuration, cloud connection, and UI. Solve the difficult problem of IoT application development. With the Python light application framework, IoT programming is no longer limited to professional software developers, and general technicians can quickly implement complex IoT requirements.\nFor more HaaS Python introduction and development materials, see [HaaS Python official website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp), [Creative Case](https://haas.iot.aliyun.com/solution?from=crop), [Hardware Building Blocks](https://haas.iot.aliyun.com/solution/hardware?from=corp)\n\n## 安装方法\n* 在[HaaS Python官网](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/)下载开发板对应的固件，并完成固件烧录\n\nDownload the firmware corresponding to the development board at [HaaS Python website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/) and complete the firmware burning\n\n* 在开发板上运行以下命令完成安装和使用,如果您在使用过程中遇到问题，欢迎在[github上向我们提交issue](https://github.com/alibaba/AliOS-Things/issues)，我们的工程师会及时解答\n\nRun the following commands on the development board to complete the installation and use. If you encounter problems during use, please submit an issue to us on [github](https://github.com/alibaba/AliOS-Things/issues), Our engineers will answer in time\n```\nimport upip\nupip.install(\"haas-python-uln2003\")\nimport haas-python-uln2003\n```\n# 步进电机驱动模组 - ULN2003A\n\n## 一、产品简介\nULN2003A，是一种高压大电流的共发射极达林顿晶体管数组集成电路，内含7组达林顿对管，每组对管的电流容量是500mA，输出的电压最高50V。该集成电路还集成了7只共阴极形式连接的续流二极管，用于电感性负载的开关动作的电流续流，本驱动是通过ULN2003A控制5线4相步进电机。\n\n<div align=\"center\">\n<img src=./../../docs/images/ext_uln2003A_实物.png  width=50%/>\n</div>\n\n### 引脚定义\n* VCC: 5-12V\n* IN1: host GPIO\n* IN2: host GPIO\n* IN3: host GPIO\n* IN4: host GPIO\n* GND: GND\n\n## 二、技术参数\n* 钳位二极管输出\n* 高电压输出:50V\n* 可兼容各类逻辑的输入\n\n## 三、软件接口\n\nULN2003A步进电机驱动HaaS Python驱动：[下载地址](https://github.com/alibaba/AliOS-Things/tree/master/haas_lib_bundles/python/libraries/uln2003)\n<br>\n\n### ULN2003(A, A_, B, B_) - 创建ULN2003驱动对象\n* 函数原型:\n> motorObj = ULN2003(a, a_, b, b_)\n\n* 参数说明:\n\n|参数|类型|必选参数？|说明|\n|-----|----|:---:|----|\n|a|GPIO|是|调用此函数前需确保a对象已经处于open状态|\n|a_|GPIO|是|调用此函数前需确保a_对象已经处于open状态|\n|b|GPIO|是|调用此函数前需确保b对象已经处于open状态|\n|b_|GPIO|是|调用此函数前需确保b_对象已经处于open状态|\n* 返回值:\n创建对象成功，返回ULN2003对象；ULN2003A对象创建失败，抛出Exception\n\n* 示例代码:\n\n```python\nfrom uln2003 import *                        # ULN2003驱动库\n\nA = GPIO()\nA.open(\"uln2003_a\")\nA_ = GPIO()\nA_.open(\"uln2003_a_\")\nB = GPIO()\nB.open(\"uln2003_b\")\nB_ = GPIO()\nB_.open(\"uln2003_b_\")\nmotorDev = ULN2003(A, A_, B, B_)\n```\n\n* 输出:\n无\n\n### motorCw(speed) - 步进电机正向旋转\n\n* 函数功能:\n驱动步进电机正向旋转\n\n* 函数原型:\n> ULN2003.motorCw(speed=4)\n\n* 参数说明:\nspeed: 单位ms，步进电机旋转速度，speed越小，速度越快\n\n* 返回值:\n无\n\n### motorCcw(speed) - 步进电机反向旋转\n\n* 函数功能:\n驱动步进电机反向旋转\n\n* 函数原型:\n> ULN2003.motorCcw(speed=4)\n\n* 参数说明:\nspeed: 单位ms，步进电机旋转速度，speed越小，速度越快\n\n* 返回值:\n无\n\n### motorStop() - 停止步进电机旋转\n\n* 函数功能:\n停止步进电机旋转\n\n* 函数原型:\n> ULN2003.motorStop()\n\n* 参数说明:\n无\n* 返回值:\n无\n\n* 示例:\n\n```python\nfrom uln2003 import *                    # MQ3温湿度传感器驱动库\nA = GPIO()\nA.open(\"uln2003_a\")\nA_ = GPIO()\nA_.open(\"uln2003_a_\")\nB = GPIO()\nB.open(\"uln2003_b\")\nB_ = GPIO()\nB_.open(\"uln2003_b_\")\nmotorDev = ULN2003(A, A_, B, B_)\nwhile 1:\n    motorDev.motorCw()\n```\n\n* 输出:\n无\n\n## 四、接口案例\n此使用实例在board.json中定义了名为uln2003的gpio数据类型，并控制步进电机正向旋转。\n\n* 代码:\n```json\n# board.json配置：\n{\n    \"name\": \"board-name\",\n    \"version\": \"1.0.0\",\n    \"io\": {\n      \"uln2003_a\": {\n        \"type\": \"GPIO\",\n        \"port\": 19,\n        \"dir\": \"output\",\n        \"pull\": \"pullup\"\n      },\n\n      \"uln2003_a_\": {\n        \"type\": \"GPIO\",\n        \"port\": 27,\n        \"dir\": \"output\",\n        \"pull\": \"pullup\"\n      },\n\n      \"uln2003_b\": {\n        \"type\": \"GPIO\",\n        \"port\": 0,\n        \"dir\": \"output\",\n        \"pull\": \"pullup\"\n      },\n\n      \"uln2003_b_\": {\n        \"type\": \"GPIO\",\n        \"port\": 2,\n        \"dir\": \"output\",\n        \"pull\": \"pullup\"\n      }\n    },\n    \"debugLevel\": \"ERROR\",\n    \"repl\": \"disable\"\n}\n\n```\n\n```python\n# Python代码\nprint(\"Testing uln2003  ...\")\n\nA = GPIO()\nA.open(\"uln2003_a\")\nA_ = GPIO()\nA_.open(\"uln2003_a_\")\nB = GPIO()\nB.open(\"uln2003_b\")\nB_ = GPIO()\nB_.open(\"uln2003_b_\")\nmotorDev = ULN2003(A, A_, B, B_)\nwhile 1:\n    motorDev.motorCw()\nA.close()\nA_.close()\nB.close()\nB_.close()\ndel motorDev\nprint(\"Test uln2003 done!\")\n```\n* 输出：\n无\n<br>\n\n## 五、通信协议\n主控芯片通过GPIO控制步进电机的正转反转。\n* 正转序列\n\n|序号|功能说明|命令字宏定义|\n|:-:|:-|:-|\n|1|GPIO A 输出高电平|CMD_PINA_OUT_HIGH|\n|2|GPIO A_ 输出低电平|CMD_PINA__OUT_LOW|\n|3|GPIO B 输出低电平|CMD_PINB_OUT_LOW|\n|4|GPIO B_ 输出低电平|CMD_PINB__OUT_LOW|\n|5|delay xx ms|CMD_DELAY_XX_MS|\n|6|GPIO A 输出低电平|CMD_PINA_OUT_LOW|\n|7|GPIO A_ 输出高电平|CMD_PINA__OUT_HIGH|\n|8|GPIO B 输出低电平|CMD_PINB_OUT_LOW|\n|9|GPIO B_ 输出低电平|CMD_PINB__OUT_LOW|\n|10|delay xx ms|CMD_DELAY_XX_MS|\n|11|GPIO A 输出低电平|CMD_PINA_OUT_LOW|\n|12|GPIO A_ 输出低电平|CMD_PINA__OUT_LOW|\n|13|GPIO B 输出高电平|CMD_PINB_OUT_HIGH|\n|14|GPIO B_ 输出低电平|CMD_PINB__OUT_LOW|\n|15|delay xx ms|CMD_DELAY_XX_MS|\n|16|GPIO A 输出低电平|CMD_PINA_OUT_LOW|\n|17|GPIO A_ 输出低电平|CMD_PINA__OUT_LOW|\n|18|GPIO B 输出低电平|CMD_PINB_OUT_LOW|\n|19|GPIO B_ 输出高电平|CMD_PINB__OUT_HIGH|\n|20|delay xx ms|CMD_DELAY_XX_MS|\n<br>\n\n* 反转序列\n\n|序号|功能说明|命令字宏定义|\n|:-:|:-|:-|\n|1|GPIO A 输出低电平|CMD_PINA_OUT_LOW|\n|2|GPIO A_ 输出低电平|CMD_PINA__OUT_LOW|\n|3|GPIO B 输出低电平|CMD_PINB_OUT_LOW|\n|4|GPIO B_ 输出高电平|CMD_PINB__OUT_HIGH|\n|5|delay xx ms|CMD_DELAY_XX_MS|\n|6|GPIO A 输出低电平|CMD_PINA_OUT_LOW|\n|7|GPIO A_ 输出低电平|CMD_PINA__OUT_LOW|\n|8|GPIO B 输出高电平|CMD_PINB_OUT_HIGH|\n|9|GPIO B_ 输出低电平|CMD_PINB__OUT_LOW|\n|10|delay xx ms|CMD_DELAY_XX_MS|\n|11|GPIO A 输出低电平|CMD_PINA_OUT_LOW|\n|12|GPIO A_ 输出高电平|CMD_PINA__OUT_HIGH|\n|13|GPIO B 输出低电平|CMD_PINB_OUT_HIGH|\n|14|GPIO B_ 输出低电平|CMD_PINB__OUT_LOW|\n|15|delay xx ms|CMD_DELAY_XX_MS|\n|16|GPIO A 输出高电平|CMD_PINA_OUT_HIGH|\n|17|GPIO A_ 输出低电平|CMD_PINA__OUT_LOW|\n|18|GPIO B 输出低电平|CMD_PINB_OUT_LOW|\n|19|GPIO B_ 输出低电平|CMD_PINB__OUT_HIGH|\n|20|delay xx ms|CMD_DELAY_XX_MS|\n<br>\n\n* 停止序列\n\n|序号|功能说明|命令字宏定义|\n|:-:|:-|:-|\n|1|GPIO A 输出低电平|CMD_PINA_OUT_LOW|\n|2|GPIO A_ 输出低电平|CMD_PINA__OUT_LOW|\n|3|GPIO B 输出低电平|CMD_PINB_OUT_LOW|\n|4|GPIO B_ 输出低电平|CMD_PINB__OUT_LOW|\n</br>\n\n* 控制电机流程\n可以通过控制MCU的gpio 来输出正向旋转序列、反向旋转序列或停止序列来控制步进电机的正转、反转或者停止，并且可以通过控制正向序列或反向序列之间的延时间隔来控制步进电机的速度。\n\n## 六、工作原理\n步进电机是将电脉冲信号转变为角位移或线位移的开环控制元件, 通过GPIO控制脉冲变化从而触发磁场周期性变化，即可牵引转子周期性的变化，而ULN2003A能与TTL和CMOS电路直接相连，可以直接处理原先需要标准逻辑缓冲期来处理的数据。\n如下是ULN2003内部的框图，1-7是ULN2003的输入段，经过达林顿管的电流放大，9-16进行输出。\n\n<div align=\"center\">\n<img src=./../../docs/images/ext_uln2003_工作原理.png  width=50%/>\n</div>\n\n## 参考文献及购买链接\n[1] [ULN2003A驱动器](https://www.ti.com.cn/product/cn/ULN2003A)<br>\n[2] [购买链接](https://detail.tmall.com/item.htm?id=41303683115)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://haas.iot.aliyun.com/?from=corp",
    "keywords": "",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "haas-python-uln2003",
    "package_url": "https://pypi.org/project/haas-python-uln2003/",
    "platform": null,
    "project_url": "https://pypi.org/project/haas-python-uln2003/",
    "project_urls": {
      "Bug Tracker": "https://github.com/alibaba/AliOS-Things/issues",
      "Documentation": "https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp",
      "Homepage": "https://haas.iot.aliyun.com/?from=corp",
      "Source Code": "https://github.com/alibaba/AliOS-Things"
    },
    "release_url": "https://pypi.org/project/haas-python-uln2003/0.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This is uln2003 driver for HaaS Python. HaaS Python is forked from micropython.",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14183700,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4a9e88c379fbf4e98bfc0f01f2101cc24e74dbfaf5011ea2ee9e5f29fc45cbd",
          "md5": "194da325979f6502dbbbb83388c611a0",
          "sha256": "00f85bb1f61098285a222cf8337af424b5aca7162ed6b87b62e62668a99db0b7"
        },
        "downloads": -1,
        "filename": "haas-python-uln2003-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "194da325979f6502dbbbb83388c611a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8549,
        "upload_time": "2022-06-06T12:49:12",
        "upload_time_iso_8601": "2022-06-06T12:49:12.151274Z",
        "url": "https://files.pythonhosted.org/packages/a4/a9/e88c379fbf4e98bfc0f01f2101cc24e74dbfaf5011ea2ee9e5f29fc45cbd/haas-python-uln2003-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0b14a2ef109944a170018eb669be9c0292d3801a02601b5584c1a44a73bdf54",
          "md5": "c22d2165476e8f1978b6ce3be32a3ebb",
          "sha256": "6ed85f26f2d3ad43f7df96c18429b7733848e3b5d3699243c5d057fdd972210d"
        },
        "downloads": -1,
        "filename": "haas-python-uln2003-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c22d2165476e8f1978b6ce3be32a3ebb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8559,
        "upload_time": "2022-06-07T08:42:22",
        "upload_time_iso_8601": "2022-06-07T08:42:22.631661Z",
        "url": "https://files.pythonhosted.org/packages/f0/b1/4a2ef109944a170018eb669be9c0292d3801a02601b5584c1a44a73bdf54/haas-python-uln2003-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60f442eb90fe98a023c34593b760595726f241b97bbf11d790938145e936384d",
          "md5": "c42908d27e9605bcfcfdb10d6bf3e46e",
          "sha256": "de1471fd06d2952a77ad2daadf3bfb3b713c7efc792d03906151fc2d4b9e879d"
        },
        "downloads": -1,
        "filename": "haas-python-uln2003-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c42908d27e9605bcfcfdb10d6bf3e46e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8558,
        "upload_time": "2022-06-08T12:50:38",
        "upload_time_iso_8601": "2022-06-08T12:50:38.517609Z",
        "url": "https://files.pythonhosted.org/packages/60/f4/42eb90fe98a023c34593b760595726f241b97bbf11d790938145e936384d/haas-python-uln2003-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97779be56288d5deb493fa529b37e10cbb214bc0971b918d3e32e2511ed96e7b",
          "md5": "19ca4808c0e8cea9084d74dec195ebe1",
          "sha256": "2faea5000dc4db2bd2a408e71bceffc938436eab30ab03ca6b991ea806c1be39"
        },
        "downloads": -1,
        "filename": "haas-python-uln2003-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "19ca4808c0e8cea9084d74dec195ebe1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8557,
        "upload_time": "2022-06-10T08:25:52",
        "upload_time_iso_8601": "2022-06-10T08:25:52.799581Z",
        "url": "https://files.pythonhosted.org/packages/97/77/9be56288d5deb493fa529b37e10cbb214bc0971b918d3e32e2511ed96e7b/haas-python-uln2003-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f23ae68ce9c5bcf3a35831a49269e991982794ed52db9d6806dfa9131ab1014e",
          "md5": "00764202f9b4d8bf0a7ddb7a96a7aaff",
          "sha256": "fb6682309d6bb5248c246bfcd89753b9e5e0b95856bc29b644035d44a074e0f5"
        },
        "downloads": -1,
        "filename": "haas-python-uln2003-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "00764202f9b4d8bf0a7ddb7a96a7aaff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8558,
        "upload_time": "2022-06-14T12:01:05",
        "upload_time_iso_8601": "2022-06-14T12:01:05.211184Z",
        "url": "https://files.pythonhosted.org/packages/f2/3a/e68ce9c5bcf3a35831a49269e991982794ed52db9d6806dfa9131ab1014e/haas-python-uln2003-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ca968e3b4af4c8ff2b493c0e4325a1dafb9f6f4202ff4cc2a17fe0c0fbafcb4",
          "md5": "fab439fe596798b95e0e661590b5840a",
          "sha256": "1f3e85b3fe4cf73d4a4f7e21752cfaf37559bc5517583b045ea70d3662093a23"
        },
        "downloads": -1,
        "filename": "haas-python-uln2003-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fab439fe596798b95e0e661590b5840a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8558,
        "upload_time": "2022-06-15T12:24:14",
        "upload_time_iso_8601": "2022-06-15T12:24:14.143025Z",
        "url": "https://files.pythonhosted.org/packages/0c/a9/68e3b4af4c8ff2b493c0e4325a1dafb9f6f4202ff4cc2a17fe0c0fbafcb4/haas-python-uln2003-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f84ccaf0dac387aa05ae1166f7a66ad415f54d21f8f8e5eed52f8a849698cef",
          "md5": "89bf3339cf08595d9c22d197bb1daaad",
          "sha256": "77863e5dfec526518b694eb0e48e5106e53486126352be9d55cf435e052e397c"
        },
        "downloads": -1,
        "filename": "haas-python-uln2003-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "89bf3339cf08595d9c22d197bb1daaad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8557,
        "upload_time": "2022-06-20T07:21:49",
        "upload_time_iso_8601": "2022-06-20T07:21:49.190263Z",
        "url": "https://files.pythonhosted.org/packages/2f/84/ccaf0dac387aa05ae1166f7a66ad415f54d21f8f8e5eed52f8a849698cef/haas-python-uln2003-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f84ccaf0dac387aa05ae1166f7a66ad415f54d21f8f8e5eed52f8a849698cef",
        "md5": "89bf3339cf08595d9c22d197bb1daaad",
        "sha256": "77863e5dfec526518b694eb0e48e5106e53486126352be9d55cf435e052e397c"
      },
      "downloads": -1,
      "filename": "haas-python-uln2003-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "89bf3339cf08595d9c22d197bb1daaad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8557,
      "upload_time": "2022-06-20T07:21:49",
      "upload_time_iso_8601": "2022-06-20T07:21:49.190263Z",
      "url": "https://files.pythonhosted.org/packages/2f/84/ccaf0dac387aa05ae1166f7a66ad415f54d21f8f8e5eed52f8a849698cef/haas-python-uln2003-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}