{
  "info": {
    "author": "Michaël Baudin, Youssef Jebroun, Elias Fekhari and Vincent Chabridon",
    "author_email": "michael.baudin@edf.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Natural Language :: French",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "[![CircleCI](https://circleci.com/gh/mbaudin47/otbenchmark.svg?style=svg)](https://circleci.com/gh/mbaudin47/otbenchmark)\n\n# otbenchmark\n\n## What is it?\n\nThe goal of this project is to provide benchmark classes for OpenTURNS. \nIt provides a framework to create use-cases which are associated with\nreference values.\nSuch a benchmark problem may be used in order to check that a given\nalgorithm works as expected and to measure its performance in terms \nof accuracy and speed.\n\nTwo categories of benchmark classes are currently provided:\n* reliability problems, i.e. estimating the probability that \nthe output of a function is less than a threshold,\n* sensitivity problems, i.e. estimating sensitivity indices, \nfor example Sobol' indices.\n\nMost of the reliability problems were adapted from the RPRepo :\n\nhttps://rprepo.readthedocs.io/en/latest/\n\nThis module allows you to create a problem, run an algorithm and \ncompare the computed probability with a reference probability: \n\n```\nproblem = otb.RminusSReliability()\nevent = problem.getEvent()\npfReference = problem.getProbability() # exact probability\n# Create the Monte-Carlo algorithm\nalgoProb = ot.ProbabilitySimulationAlgorithm(event)\nalgoProb.setMaximumOuterSampling(1000)\nalgoProb.setMaximumCoefficientOfVariation(0.01)\nalgoProb.run()\nresultAlgo = algoProb.getResult()\npf = resultAlgo.getProbabilityEstimate()\nabsoluteError = abs(pf - pfReference)\n```\n\nMoreover, we can loop over all problems and run several methods on these \nproblems.\n\n## Authors\n\n* Michaël Baudin\n* Youssef Jebroun\n* Elias Fekhari\n* Vincent Chabridon\n\n## Installation\n\nTo install the module, we can use the \"git clone\" command:\n\n```\ngit clone https://github.com/mbaudin47/otbenchmark.git\ncd otbenchmark\npython setup.py install\n```\n\n## Getting help\n\nThe code has docstrings. Hence, using the \"help\" statement will help. Another way of getting help is to read the examples, which are presented in the next section.\n\n## Overview of the benchmark problems\n\n[Analysis of the R-S case]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/reliability_problems/Cas-R-S.ipynb\n\n[Benchmark the G-Sobol test function]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/sensitivity_problems/GSobolSensitivity.ipynb\n\n[Reliability factories]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/methodFactory.ipynb\n\n[Benchmark on a given set of problems]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/reliability_benchmark.ipynb\n\n[Benchmark the reliability solvers on the problems]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/reliability_benchmark_table.ipynb\n\n[Check reference probabilities with Monte-Carlo]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/reliability_compute_reference_proba.ipynb\n\nThe simplest use cas of the library is in [Analysis of the R-S case], which shows how to use this problem with two variables to estimate its failure probability. In the [Benchmark the G-Sobol test function] problem, we show how to estimate sensitivity indices on the G-Sobol' test function. When using a reliability problem, it is convenient to create a given algorithm, e.g. Subset sampling, based on a given problem: the [Reliability factories] shows how to do this for Monte-Carlo, FORM, SORM, Subset and FORM-importance sampling. \n\nThe library currently has:\n* 26 reliability problems,\n* 4 sensitivity problems.\n\nOne of the most useful feature of the library is to perform a benchmark that is, loop over the problems. In [Benchmark on a given set of problems], we run several algorithms on all the problems. The associated statistics are gathered in table, presented in [Benchmark the reliability solvers on the problems]. In [Check reference probabilities with Monte-Carlo], we compare the exact (reference) probability with a Monte-Carlo estimate with a large sample.\n\n[Draw events]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/DrawEvent_demo.ipynb\n[Draw cross cut of functions]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/CrossCutFunction_Demo.ipynb\n[Draw cross cuts of distributions]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/CrossCutDistribution-3D_Demo.ipynb\n[Draw conditional distributions]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/ConditionalDistribution_Demo.ipynb\n\nIt is often useful to draw a sensitivity or reliability problem. Since many of these problems have dimensions larger than two, this raises a number of practical issues.\n* Event: [Draw events] shows how to draw an multidimensional event,\n* Function: [Draw cross cut of functions] shows how to draw cross cuts of functions,\n* Distribution: [Draw cross cuts of distributions] shows how to draw cross cuts of distributions and [Draw conditional distributions] plots conditional distributions.\n\nThe \"DrawEvent\" class that the module provides typically plots the following figure for the RP57.\n\n![limit_state_surface_RP57.png](figures/limit_state_surface_RP57.png)\n\nThe following figure plots cross-cuts of the limit state function for the RP8.\n\n![cross_cut_function_RP8.png](figures/cross_cut_function_RP8.png)\n\n[Examples]: https://github.com/mbaudin47/otbenchmark/tree/master/examples\n\n[BBRC]: https://github.com/mbaudin47/otbenchmark/blob/master/examples-on-server/BBRC.ipynb\n\n[Convergence of Monte-Carlo to estimate the probability in a reliability problem]: https://github.com/mbaudin47/otbenchmark/blob/master/examples/convergence-reliability-Monte-Carlo.ipynb\n\nThe [Convergence of Monte-Carlo to estimate the probability in a reliability problem] example might be interesting for those who want to plot convergence graphics.\n\n![convergence_montecarlo.png](figures/convergence_montecarlo.png)\n\nWe provide in [BBRC] an example which shows how to use the \"evaluate\" function that the module provides to evaluate a function which is available in the remote BBRC server. \n\nThe [Examples] directory has many other examples: please read the notebooks and see if one of the examples fits your needs.\n\n## TODO-List\n\n* The FORM algorithm does not perform correctly on: RP75, RP111\nand Four-branch serial system.\nAn explanation would be required for this.\n\n* The computeCDF() method does not perform correctly on many problems.\nAn explanation would be required for this.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mbaudin47/otbenchmark",
    "keywords": "OpenTURNS,benchmark",
    "license": "LGPL",
    "maintainer": "Michaël Baudin",
    "maintainer_email": "michael.baudin@edf.fr",
    "name": "otbenchmark",
    "package_url": "https://pypi.org/project/otbenchmark/",
    "platform": "",
    "project_url": "https://pypi.org/project/otbenchmark/",
    "project_urls": {
      "Homepage": "https://github.com/mbaudin47/otbenchmark"
    },
    "release_url": "https://pypi.org/project/otbenchmark/0.1.1/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "scipy",
      "openturns (>=1.16)"
    ],
    "requires_python": "",
    "summary": "Benchmark problems for OpenTURNS",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9143507,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c876e55bbb7be27781af68a85563fd241d17391a313da424d3facb7c234063ad",
          "md5": "9153176028b6e11777017d29c800d7c1",
          "sha256": "a4dc7f257f0e74317b2dc581f3fd90a2a7411791bb2a7184c7f0f6e942be6135"
        },
        "downloads": -1,
        "filename": "otbenchmark-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9153176028b6e11777017d29c800d7c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 69819,
        "upload_time": "2021-01-15T14:39:57",
        "upload_time_iso_8601": "2021-01-15T14:39:57.536641Z",
        "url": "https://files.pythonhosted.org/packages/c8/76/e55bbb7be27781af68a85563fd241d17391a313da424d3facb7c234063ad/otbenchmark-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e0f0028648940eefd4410c70f5c152ca20d1389ca30f123a512fd0f38dd32a2",
          "md5": "8cf264632c686e67051841ef53d28d67",
          "sha256": "93599329059d7868a941a0f451dde7866f3b63f489153b1c41d171eed48d3ac4"
        },
        "downloads": -1,
        "filename": "otbenchmark-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8cf264632c686e67051841ef53d28d67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29946,
        "upload_time": "2021-01-15T14:39:59",
        "upload_time_iso_8601": "2021-01-15T14:39:59.396716Z",
        "url": "https://files.pythonhosted.org/packages/3e/0f/0028648940eefd4410c70f5c152ca20d1389ca30f123a512fd0f38dd32a2/otbenchmark-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c876e55bbb7be27781af68a85563fd241d17391a313da424d3facb7c234063ad",
        "md5": "9153176028b6e11777017d29c800d7c1",
        "sha256": "a4dc7f257f0e74317b2dc581f3fd90a2a7411791bb2a7184c7f0f6e942be6135"
      },
      "downloads": -1,
      "filename": "otbenchmark-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9153176028b6e11777017d29c800d7c1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 69819,
      "upload_time": "2021-01-15T14:39:57",
      "upload_time_iso_8601": "2021-01-15T14:39:57.536641Z",
      "url": "https://files.pythonhosted.org/packages/c8/76/e55bbb7be27781af68a85563fd241d17391a313da424d3facb7c234063ad/otbenchmark-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e0f0028648940eefd4410c70f5c152ca20d1389ca30f123a512fd0f38dd32a2",
        "md5": "8cf264632c686e67051841ef53d28d67",
        "sha256": "93599329059d7868a941a0f451dde7866f3b63f489153b1c41d171eed48d3ac4"
      },
      "downloads": -1,
      "filename": "otbenchmark-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8cf264632c686e67051841ef53d28d67",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29946,
      "upload_time": "2021-01-15T14:39:59",
      "upload_time_iso_8601": "2021-01-15T14:39:59.396716Z",
      "url": "https://files.pythonhosted.org/packages/3e/0f/0028648940eefd4410c70f5c152ca20d1389ca30f123a512fd0f38dd32a2/otbenchmark-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}