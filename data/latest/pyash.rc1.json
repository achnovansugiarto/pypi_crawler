{
  "info": {
    "author": "Jamie Read",
    "author_email": "jamie@darkriftnetworking.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Pyash\nHate shell scripting? Love Python! Meet the horrible Frankenstein of the two!\n\nPyash takes the best part of shell scripting, the ability to stream data through great chains of shell programs, and adds that ability to Python. In the process it retains the same familiar syntax but in a more Pythonic form!\n```python\nfrom pyash import cat, grep\ncat(\".gitignore\") | grep(\"env\") > \"out.txt\"\n```\n\n[Find it on PyPI!](https://pypi.org/project/pyash-JamJar00/0.1.0/)\n\n## Importing Shell Programs\nImporting shell programs is as easy as\n```python\nfrom pyash import grep, find, bash\n```\nPyash automatically searches your `PATH` variable and loads any executable programs it finds, making them available through import.\n\nTry to avoid importing `*` as you'll find basic builtin functions like `print()` suddenly don't work!\n\n## Running Shell Programs\nOnce you've imported the programs you want to import you can use them as you would any normal Python function splitting arguments or keeping them all together as you want:\n```python\nprint(grep(\"-i\", \"-r\", \"env\", \".\"))\nprint(grep(\"-i -r env .\"))\n```\n\n**It's important to note that all programs are lazy evaluated**, i.e. a program only runs when Pyash knows where data is going.\n\nFor example, the above `grep` commands will only execute when you print their output.\n\nThat means that if you don't care about the output you'll need to make sure you call `run()` to make the program execute:\n```python\nkubectl(\"delete\", \"pod\", \"my-pod\").run()\n```\n\n## Piping Data\nData can be piped between, to and from files using the same syntax you use in shell scripts:\n```python\nprint(kubectl(\"get\", \"pods\") | grep(\"postgres\"))\necho(\"I'm a pretty butterfly\") > butterfly.txt\necho(\"Flutter! Flutter! Flutter!\") >> butterfly.txt\n(docker(\"container\", \"stop\") < \"my_containers.txt\").run()\n```\n\nNote that when you start piping a program's output somewhere else it begins execution, so the 2nd and 3rd examples don't need you to call `run()`.\n\nIf you need to both pipe in from a file and out from a file you need to place parentheses around the pipe in, this just seems to be a limitation of our abuse of Python.\n```\n(cat() | grep(\"env\") < \".gitignore\") > \"myfile.txt\"\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JamJar00/pyash",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyash",
    "package_url": "https://pypi.org/project/pyash/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyash/",
    "project_urls": {
      "Homepage": "https://github.com/JamJar00/pyash"
    },
    "release_url": "https://pypi.org/project/pyash/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Shell scripting... but in glorious Python!",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6404561,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8ee15efafa38d14faaf07a94efbca1226022aff68b851556ef2cb386583725d",
          "md5": "e361d4b2131861b038d1cfda8a528610",
          "sha256": "aaab0d1dcd55619aec431ad0cbb7d8c5c3836c5b21c13fd2fcc608981ab4325e"
        },
        "downloads": -1,
        "filename": "pyash-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e361d4b2131861b038d1cfda8a528610",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5468,
        "upload_time": "2020-01-06T21:24:59",
        "upload_time_iso_8601": "2020-01-06T21:24:59.253013Z",
        "url": "https://files.pythonhosted.org/packages/e8/ee/15efafa38d14faaf07a94efbca1226022aff68b851556ef2cb386583725d/pyash-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e220ac129c99c8608479fae2159541261e62a0d97d9952dc1cdffcb6b8f56f5",
          "md5": "3a45ba27d83cf6f091f2344b1275c2aa",
          "sha256": "8d512e064940eac34d00b92012a9f7ec6a5950e7053b6d9e86ee4c6673f078d4"
        },
        "downloads": -1,
        "filename": "pyash-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a45ba27d83cf6f091f2344b1275c2aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3718,
        "upload_time": "2020-01-06T21:25:02",
        "upload_time_iso_8601": "2020-01-06T21:25:02.226643Z",
        "url": "https://files.pythonhosted.org/packages/6e/22/0ac129c99c8608479fae2159541261e62a0d97d9952dc1cdffcb6b8f56f5/pyash-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8ee15efafa38d14faaf07a94efbca1226022aff68b851556ef2cb386583725d",
        "md5": "e361d4b2131861b038d1cfda8a528610",
        "sha256": "aaab0d1dcd55619aec431ad0cbb7d8c5c3836c5b21c13fd2fcc608981ab4325e"
      },
      "downloads": -1,
      "filename": "pyash-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e361d4b2131861b038d1cfda8a528610",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5468,
      "upload_time": "2020-01-06T21:24:59",
      "upload_time_iso_8601": "2020-01-06T21:24:59.253013Z",
      "url": "https://files.pythonhosted.org/packages/e8/ee/15efafa38d14faaf07a94efbca1226022aff68b851556ef2cb386583725d/pyash-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e220ac129c99c8608479fae2159541261e62a0d97d9952dc1cdffcb6b8f56f5",
        "md5": "3a45ba27d83cf6f091f2344b1275c2aa",
        "sha256": "8d512e064940eac34d00b92012a9f7ec6a5950e7053b6d9e86ee4c6673f078d4"
      },
      "downloads": -1,
      "filename": "pyash-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3a45ba27d83cf6f091f2344b1275c2aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3718,
      "upload_time": "2020-01-06T21:25:02",
      "upload_time_iso_8601": "2020-01-06T21:25:02.226643Z",
      "url": "https://files.pythonhosted.org/packages/6e/22/0ac129c99c8608479fae2159541261e62a0d97d9952dc1cdffcb6b8f56f5/pyash-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}