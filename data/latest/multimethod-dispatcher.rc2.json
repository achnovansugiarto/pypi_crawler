{
  "info": {
    "author": "Sanjay Patel",
    "author_email": "sanjay10.patel@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Multimethod-dispatcher\n\n![Tests and Release](https://github.com/sanjP10/multimethod/workflows/Tests%20and%20Release/badge.svg?branch=master)\n![CodeQL](https://github.com/sanjP10/multimethod/workflows/CodeQL/badge.svg)\n![Build and Publish](https://github.com/sanjP10/multimethod/workflows/Build%20and%20Publish/badge.svg)\n\nThis module that enables the use of the same function name but with variable dispatch keys.\nThis allows different object types or values to execute different functions but with the same name.\nSimilar to Object Orientation where objects can have their own implementation of a function, this is \nthe functional response to this. Similar to [Clojure's Multimethod](https://clojure.org/reference/multimethods#_isa_based_dispatch)\n\nThis originates from Alex Bard's [blog post](https://adambard.com/blog/implementing-multimethods-in-python/)\n\nThere are two annotations:\n* `@multi` evaluates the arguments to return a unique key which determines which method is called.\n* `@method` is used to declare how that unique key is handled\n\n\nThe following code is an example of having multiple dictionaries with common elements, but handling\nthe equation differently.\n```python\nfrom multimethod import method, multi\n\n@multi\ndef area(shape):\n    \"\"\"Multimethod dispatch key\"\"\"\n    return shape.get('type')\n\n\n@method(area, 'rectangle')\ndef area(rectangle):\n    \"\"\"Get area of a rectangle\"\"\"\n    return rectangle.get('width') * rectangle.get('height')\n\n\n@method(area, 'circle')\ndef area(circle):\n    \"\"\"Get area of a circle\"\"\"\n    return circle.get('radius') ** 2 * 3.14159\n\narea({'type': 'circle', 'radius': 0.5}) # => 0.7853975\narea({'type': 'rectangle', 'width': 5, 'height': 8}) # => 40\n\n```\n\nThis example is a more complicated version, evaluating on type and has a optional parameter for date of birth\n```python\nfrom datetime import datetime\nfrom multimethod import method, multi\n\n\nclass Person:\n    \"\"\"Person object to hold name and dob\"\"\"\n    def __init__(self, name, dob):\n        self.name = name\n        self.dob = datetime.strptime(dob, '%Y-%m-%d')\n\n    def get_name(self):\n        \"\"\"Return name\"\"\"\n        return self.name\n\n    def get_dob_as_str(self):\n        \"\"\"Return dob as string\"\"\"\n        return self.dob.strftime('%Y-%m-%d')\n\n@multi\ndef get_name(obj, _=None):\n    \"\"\"Multimethod dispatch key\"\"\"\n    return obj.__class__\n\n\n@method(get_name, dict)\ndef get_name(obj, _=None):\n    \"\"\"Dictionary function for getting name and dob from dict\"\"\"\n    return \"{} is born on {}\".format(obj.get('name'), obj.get('dob'))\n\n\n@method(get_name, str)\ndef get_name(obj, dob):\n    \"\"\"Dictionary function for getting name and dob from string\"\"\"\n    return \"{} is born on {}\".format(obj, dob)\n\n\n@method(get_name, Person)\ndef get_name(obj, _=None):\n    \"\"\"Person object type for getting name and dob\"\"\"\n    return \"{} is born on {}\".format(obj.get_name(), obj.get_dob_as_str())\n\n\n@method(get_name)  # Default\ndef get_name(*args, **kwargs):  # pylint: disable=W0613\n    \"\"\"Default response for any other object type\"\"\"\n    return \"No name\"\n\n\nperson = Person('Steve', '2019-06-01')\nget_name(person) # => 'Steve is born on 2019-06-01'\nget_name({'name': 'Tom', 'dob': '2019-06-01'}) # => 'Tom is born on 2019-06-01'\nget_name('George', '2019-06-01') # => 'George is born on 2019-06-01'\nget_name(2) # => \"No name\"\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sanjP10/multimethod.git",
    "keywords": "multimethod dispatcher functional-programming",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "multimethod-dispatcher",
    "package_url": "https://pypi.org/project/multimethod-dispatcher/",
    "platform": "",
    "project_url": "https://pypi.org/project/multimethod-dispatcher/",
    "project_urls": {
      "Homepage": "https://github.com/sanjP10/multimethod.git"
    },
    "release_url": "https://pypi.org/project/multimethod-dispatcher/1.0.2/",
    "requires_dist": [
      "pylint (>=2.6) ; extra == 'dev'",
      "coverage (>=5.4) ; extra == 'dev'",
      "twine (>=3.3) ; extra == 'publishing'"
    ],
    "requires_python": "",
    "summary": "A clojure style multimethod dispatcher",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11118505,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2852ec69aa25ab5115a6a3c53ce7049b2c3ec06dbcbb863b46275666211edbec",
          "md5": "f0860bbc1eb297a23c790145acf4fbbc",
          "sha256": "a6adae4bb41d5654b715230412e57ae6cb3151a6ea64d1cb9234ca85c8deaa3b"
        },
        "downloads": -1,
        "filename": "multimethod_dispatcher-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0860bbc1eb297a23c790145acf4fbbc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7345,
        "upload_time": "2021-02-22T09:45:48",
        "upload_time_iso_8601": "2021-02-22T09:45:48.970215Z",
        "url": "https://files.pythonhosted.org/packages/28/52/ec69aa25ab5115a6a3c53ce7049b2c3ec06dbcbb863b46275666211edbec/multimethod_dispatcher-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba4316df1d7a338273b43b3e6fb62f814f156b0f2d99ac092c414ef99a0aa659",
          "md5": "b69daf21066fa51f7b6760f4487ce0b4",
          "sha256": "c05ad384cd91b714b100b1753981ffef307b968b3df3796e1b9e5272a3af373c"
        },
        "downloads": -1,
        "filename": "multimethod-dispatcher-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b69daf21066fa51f7b6760f4487ce0b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7346,
        "upload_time": "2021-02-22T09:45:49",
        "upload_time_iso_8601": "2021-02-22T09:45:49.884684Z",
        "url": "https://files.pythonhosted.org/packages/ba/43/16df1d7a338273b43b3e6fb62f814f156b0f2d99ac092c414ef99a0aa659/multimethod-dispatcher-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6f8065b5701ba228c633fba2eee5792dacb26dd1dcabf4b632e07d249d38393",
          "md5": "a5dc9394906e148b987f26e6575cad07",
          "sha256": "7f6cdf6dd1739e45062db2fbfb4a1d3f2afbad63b25a5a85533c0d6a316f969b"
        },
        "downloads": -1,
        "filename": "multimethod_dispatcher-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5dc9394906e148b987f26e6575cad07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7361,
        "upload_time": "2021-08-07T16:32:29",
        "upload_time_iso_8601": "2021-08-07T16:32:29.132111Z",
        "url": "https://files.pythonhosted.org/packages/c6/f8/065b5701ba228c633fba2eee5792dacb26dd1dcabf4b632e07d249d38393/multimethod_dispatcher-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71d8722710fdc245de416c75ee3f97b4d9abdbabb3352a8d5eb988c3c4d35243",
          "md5": "91a578d0e6c8ba4c70a7be913e3771a3",
          "sha256": "5aac005d4498bdb80def91ed1eed1c632bb28bbef6810650125af8950ae02f7d"
        },
        "downloads": -1,
        "filename": "multimethod-dispatcher-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "91a578d0e6c8ba4c70a7be913e3771a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7099,
        "upload_time": "2021-08-07T16:32:30",
        "upload_time_iso_8601": "2021-08-07T16:32:30.070412Z",
        "url": "https://files.pythonhosted.org/packages/71/d8/722710fdc245de416c75ee3f97b4d9abdbabb3352a8d5eb988c3c4d35243/multimethod-dispatcher-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6f8065b5701ba228c633fba2eee5792dacb26dd1dcabf4b632e07d249d38393",
        "md5": "a5dc9394906e148b987f26e6575cad07",
        "sha256": "7f6cdf6dd1739e45062db2fbfb4a1d3f2afbad63b25a5a85533c0d6a316f969b"
      },
      "downloads": -1,
      "filename": "multimethod_dispatcher-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a5dc9394906e148b987f26e6575cad07",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7361,
      "upload_time": "2021-08-07T16:32:29",
      "upload_time_iso_8601": "2021-08-07T16:32:29.132111Z",
      "url": "https://files.pythonhosted.org/packages/c6/f8/065b5701ba228c633fba2eee5792dacb26dd1dcabf4b632e07d249d38393/multimethod_dispatcher-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71d8722710fdc245de416c75ee3f97b4d9abdbabb3352a8d5eb988c3c4d35243",
        "md5": "91a578d0e6c8ba4c70a7be913e3771a3",
        "sha256": "5aac005d4498bdb80def91ed1eed1c632bb28bbef6810650125af8950ae02f7d"
      },
      "downloads": -1,
      "filename": "multimethod-dispatcher-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "91a578d0e6c8ba4c70a7be913e3771a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7099,
      "upload_time": "2021-08-07T16:32:30",
      "upload_time_iso_8601": "2021-08-07T16:32:30.070412Z",
      "url": "https://files.pythonhosted.org/packages/71/d8/722710fdc245de416c75ee3f97b4d9abdbabb3352a8d5eb988c3c4d35243/multimethod-dispatcher-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}