{
  "info": {
    "author": "",
    "author_email": "TJ Radcliffe <tj@tjradcliffe.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Simple Minimizer\n\nThis minimizer was designed to be brutally simple and extremely\nrobust. The original aim was primarily multi-model image registration\nduring the development of the pseudo-correlation image registration\nalgorithm for online portal imaging and other applications.\n\nIt uses a combination of bracketing and parabolic interpolation to\nget the job done. It is not designed for speed.\n\nAn understanding of the shape of your objective function is\ndesirable. It is useful to map it on various sets of axes. \n\nThe axes you use to represent your problem are not in general \nindependent: your objective will have diagonal \"troughs\"\ndue to the ability of one axis to trade off against another.\n\nIn general you are not minimizing in a vector space, and if you are the\nscales on different axes are often wildly different.\n\nThe value of the objective function should be strictly positive over the\ndomain, and ideally around 1.0 near the minimum, where \"around\"\nmeans 1E-4 => 1E4 or so.\n\nIf local minima are a problem call `.reseed()` on your minimizer object\nafter recording the current minimum, set new starting points (or use\nthe one you've just found) and re-run. For very hard problems with a\nlot of local minimia I've sometimes run this three or five times and looked\nfor a majority vote on the true minimum or a lowest value (which works\nbest depends on the scale of the noise on the objective function: if the\nnoise is smooth on the scale of the minimum lowest value works well, if\nthe noise is rough on the scale of the minimum majority of minima within\na small region works well.)\n\nSimple usage example:\n\n```\nfrom math import sqrt\n\nfrom simple_minimizer import *\nfrom simple_vertex import *\n\nnDimension = 3\n\n# objective function is a callable\nclass Test(object):\n    def __init__(self):\n        # place we are looking for\n        self.lstOrigin = [nI for nI in range(0,nDimension)]\n            \n    def __call__(self, lstVertex):\n        # lstVertex is a list of floats giving location on axes\n        fSum = 0.0\n        for nI in range(0, nDimension):\n            fSum += (self.lstOrigin[nI]-lstVertex[nI])**2\n            \n        fSum += 1.0 # keeping it positive and ~ 1\n        \n        return sqrt(fSum/nDimension)\n\nminimizer = SimpleMinimizer(nDimension)\ntest = Test()\nminimizer.setObjective(test)\n\n# nReason = -1 => failed to converge, 1 => best/second-best equal, 2 => ratio < 0.001, 3 => minimum scale\n(nCount, vertex, nReason) = minimizer.minimize()\nlstVertex = vertex.getVertex() # extract the list of floats from the vertex object\nfValue = vertext.getValue() # the value of the objective function at the minimum\nfError = sqrt(sum([(nI-lstVertex[nI])**2 for nI in range(0,nDimension)])/nDimension)\nprint(fError < 0.001)\nprint(nCount < 10)\nprint(lstVertex)\n    \n```\n\nIn a realistic cases the objective function will be ferociously complex. Some\nof mine have involved computing DRRs (digitially reconstructed radiograms\nfrom CT or MR data) on each call.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright (c) 2022 Thomas J. Radcliffe  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "simple-minimizer",
    "package_url": "https://pypi.org/project/simple-minimizer/",
    "platform": null,
    "project_url": "https://pypi.org/project/simple-minimizer/",
    "project_urls": {
      "Bug Tracker": "https://github.com/tjradcliffe/simple-minimizer/issues",
      "Homepage": "https://github.com/tjradcliffe/simple-minimizer"
    },
    "release_url": "https://pypi.org/project/simple-minimizer/1.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A brutally simple, extremely robust minimizer",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14620372,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c3218825744e23bc96748fdf5bfe39712e1fe590107b30ff7eb8ce6f0fc2c66",
          "md5": "816adfbb72de7ad544cb1a342dafb37d",
          "sha256": "a10375c4516560fa33d44e36b012805746ce5fa59d1cf4946a5e6a2c90ca758b"
        },
        "downloads": -1,
        "filename": "simple_minimizer-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "816adfbb72de7ad544cb1a342dafb37d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8567,
        "upload_time": "2022-08-02T03:32:26",
        "upload_time_iso_8601": "2022-08-02T03:32:26.834486Z",
        "url": "https://files.pythonhosted.org/packages/1c/32/18825744e23bc96748fdf5bfe39712e1fe590107b30ff7eb8ce6f0fc2c66/simple_minimizer-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9db61faa78d857bd2ec4f41f533c8c6859f2a048a577da65e4a7f79e00b6456b",
          "md5": "d0ebc6998a2aa7ac094689095333b3a5",
          "sha256": "de86f1c72b274cbbf5989828185a92eb8ba0396436babbc0d157329710903fc4"
        },
        "downloads": -1,
        "filename": "simple_minimizer-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d0ebc6998a2aa7ac094689095333b3a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7736,
        "upload_time": "2022-08-02T03:32:28",
        "upload_time_iso_8601": "2022-08-02T03:32:28.150532Z",
        "url": "https://files.pythonhosted.org/packages/9d/b6/1faa78d857bd2ec4f41f533c8c6859f2a048a577da65e4a7f79e00b6456b/simple_minimizer-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c3218825744e23bc96748fdf5bfe39712e1fe590107b30ff7eb8ce6f0fc2c66",
        "md5": "816adfbb72de7ad544cb1a342dafb37d",
        "sha256": "a10375c4516560fa33d44e36b012805746ce5fa59d1cf4946a5e6a2c90ca758b"
      },
      "downloads": -1,
      "filename": "simple_minimizer-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "816adfbb72de7ad544cb1a342dafb37d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8567,
      "upload_time": "2022-08-02T03:32:26",
      "upload_time_iso_8601": "2022-08-02T03:32:26.834486Z",
      "url": "https://files.pythonhosted.org/packages/1c/32/18825744e23bc96748fdf5bfe39712e1fe590107b30ff7eb8ce6f0fc2c66/simple_minimizer-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9db61faa78d857bd2ec4f41f533c8c6859f2a048a577da65e4a7f79e00b6456b",
        "md5": "d0ebc6998a2aa7ac094689095333b3a5",
        "sha256": "de86f1c72b274cbbf5989828185a92eb8ba0396436babbc0d157329710903fc4"
      },
      "downloads": -1,
      "filename": "simple_minimizer-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "d0ebc6998a2aa7ac094689095333b3a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7736,
      "upload_time": "2022-08-02T03:32:28",
      "upload_time_iso_8601": "2022-08-02T03:32:28.150532Z",
      "url": "https://files.pythonhosted.org/packages/9d/b6/1faa78d857bd2ec4f41f533c8c6859f2a048a577da65e4a7f79e00b6456b/simple_minimizer-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}