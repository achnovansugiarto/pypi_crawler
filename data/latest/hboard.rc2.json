{
  "info": {
    "author": "DataCanvas Community",
    "author_email": "wuhf@zetyun.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# hboard\n\n[![Python Versions](https://img.shields.io/pypi/pyversions/hboard.svg)](https://pypi.org/project/hboard)\n[![Downloads](https://pepy.tech/badge/hboard)](https://pepy.tech/project/hboard)\n[![PyPI Version](https://img.shields.io/pypi/v/hboard.svg)](https://pypi.org/project/hboard)\n\n[中文](README_zh_CN.md)\n\nThis project provides a web based visualization tool for experiment information. In general, Hypernets writes the experiment events into a text file. This tool could monitor the file and make these events visible.\n\n![](../docs/images/experiment_process.gif)\n\n## Installation\n\n**Install with pip**\n```shell\npip install hboard\n```\n\n**Install with conda**\n```shell\nconda install -c conda-forge hboard\n```\n\n**Install with source code**\n\nCreate a frontend project after installing the front-end library [hboard-frontend](../hboard-frontend):\n\n1. Create the required software environment：\n\n- [nodejs v14.15.0+](https://nodejs.org/en/)\n\n2. Besides, this project requires the package manager ``yarn`` and the module bundler ``webpack``. Install them by the following command:\n\n```\nnpm install -g webpack webpack-cli yarn\n```\n\nClone the project codes:\n```shell\ngit clone https://github.com/DataCanvasIO/HyperBoard.git\n```\n\nBuild the project:\n```shell\ncd hboard/js\n\n# build frontend\nyarn\nyarn build\nrm -rf ../hboard/assets/\ncp -r build/ ../hboard/assets/\n\n# install \ncd ..\npython setup.py install\n```\n\n## Example of hboard \n\nThe folllowing steps shows how to implement the hboard：\n1. Create an empty event file to store the experiment states\n```shell\ntouch events.txt\n```\n\n2. Create a web server to monitor the event file\n```\nfrom hboard.app import WebApp\nwebapp = WebApp(\"events.txt\")\nwebapp.start()\n```\nThe web server outputs logs as：\n```shell\n02-24 20:45:58 I hboard.app.py 77 - experiment visualization http server is running at: http://0.0.0.0:8888\n```\nThe web can be accessed via [http://localhost:8888](http://localhost:8888)。\n\n3. Add detailed experiment events to the file 'event.txt' by command:\n\n```shell\necho '{\"type\": \"experimentStart\", \"payload\": {\"task\": \"binary\", \"datasets\": [{\"kind\": \"Train\", \"task\": \"binary\", \"shape\": [904, 17], \"memory\": 123072}], \"steps\": [{\"index\": 0, \"name\": \"data_clean\", \"type\": \"DataCleanStep\", \"status\": \"wait\", \"configuration\": {\"cv\": true, \"data_cleaner_args\": {\"nan_chars\": null, \"correct_object_dtype\": true, \"drop_constant_columns\": true, \"drop_label_nan_rows\": true, \"drop_idness_columns\": true, \"drop_columns\": null, \"reserve_columns\": null, \"drop_duplicated_columns\": false, \"reduce_mem_usage\": false, \"int_convert_to\": \"float\"}, \"name\": \"data_clean\", \"train_test_split_strategy\": null}, \"extension\": {}, \"start_datetime\": null, \"end_datetime\": null}, {\"index\": 1, \"name\": \"space_searching\", \"type\": \"SpaceSearchStep\", \"status\": \"wait\", \"configuration\": {\"cv\": true, \"name\": \"space_searching\", \"num_folds\": 3, \"earlyStopping\": {\"enable\": true, \"exceptedReward\": null, \"maxNoImprovedTrials\": 10, \"timeLimit\": 3600, \"mode\": \"max\"}}, \"extension\": {}, \"start_datetime\": null, \"end_datetime\": null}, {\"index\": 2, \"name\": \"final_ensemble\", \"type\": \"EnsembleStep\", \"status\": \"wait\", \"configuration\": {\"ensemble_size\": 20, \"name\": \"final_ensemble\", \"scorer\": \"make_scorer(accuracy_score)\"}, \"extension\": {}, \"start_datetime\": null, \"end_datetime\": null}], \"evaluation_metric\": null, \"confusion_matrix\": null, \"resource_usage\": null, \"prediction_stats\": null}}' >> events.txt\n```\n\nNow the web initialization is finished. The Hypernets experiment writes the events by callback. The web will update the lastest experiment states automatically.\n\n## Visualization when the experiment is finished \n\nOnce `hboard` installed, use the command 'hboard' to visualize the finished experiment.\n\n```shell\nhboard -h\nusage: hboard [-h] {server} ...\n\nhboard command is used to visualize the experiment\n\npositional arguments:\n  {server}\n    server    start webserver\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n See example below:\n1. Clone the codes\n```shell\ngit clone https://github.com/DataCanvasIO/HyperBoard.git\n```\n2. Start the web server and load the experiment data\n```shell\ncd HyperBoard\nhboard server --event-file=hboard/hboard/tests/events_example.json\n```\nView the experiment dashboard via [http://localhost:8888](http://localhost:8888).\n\n## Related project\n\nCurrently, [HyperGBM](https://github.com/DataCanvasIO/HyperGBM) has integrated this tool. The HyperGBM experiment could callback the web visualization function and display the experiment dashboard. Please refer to [Experiment Visualization](https://hypergbm.readthedocs.io/en/latest/example_basic.html#hyperboard)。\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DataCanvasIO/HyperBoard",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hboard",
    "package_url": "https://pypi.org/project/hboard/",
    "platform": null,
    "project_url": "https://pypi.org/project/hboard/",
    "project_urls": {
      "Homepage": "https://github.com/DataCanvasIO/HyperBoard"
    },
    "release_url": "https://pypi.org/project/hboard/0.1.1/",
    "requires_dist": [
      "tornado",
      "hypernets (<0.2.6,>=0.2.5.1)"
    ],
    "requires_python": ">=3.6.*",
    "summary": "Hypernets experiment visualization",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15358931,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34dfb9dde959ba24e8af5c99afc253438aee2286f2bd5a97d0736ec8a274a827",
          "md5": "3abe9f542928e70b0723004c6cee2d72",
          "sha256": "a631f61f217ea9662170b9cc46ad12eecb115f2350808e84bc7ec82c6e30f109"
        },
        "downloads": -1,
        "filename": "hboard-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3abe9f542928e70b0723004c6cee2d72",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 4529926,
        "upload_time": "2022-03-07T08:48:24",
        "upload_time_iso_8601": "2022-03-07T08:48:24.799100Z",
        "url": "https://files.pythonhosted.org/packages/34/df/b9dde959ba24e8af5c99afc253438aee2286f2bd5a97d0736ec8a274a827/hboard-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cb8f356a0b4edeea18d2a9147993f3e7d1e3383205d77542d2a2b8f7524d630",
          "md5": "6f40ce0ca698d5cb8bff29c0916f6c1e",
          "sha256": "410c116831ba42ddc0d151c7574b67ef271b66f554bd84d5d41761bc5b849b6f"
        },
        "downloads": -1,
        "filename": "hboard-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f40ce0ca698d5cb8bff29c0916f6c1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 4529901,
        "upload_time": "2022-10-10T09:50:48",
        "upload_time_iso_8601": "2022-10-10T09:50:48.390231Z",
        "url": "https://files.pythonhosted.org/packages/0c/b8/f356a0b4edeea18d2a9147993f3e7d1e3383205d77542d2a2b8f7524d630/hboard-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cb8f356a0b4edeea18d2a9147993f3e7d1e3383205d77542d2a2b8f7524d630",
        "md5": "6f40ce0ca698d5cb8bff29c0916f6c1e",
        "sha256": "410c116831ba42ddc0d151c7574b67ef271b66f554bd84d5d41761bc5b849b6f"
      },
      "downloads": -1,
      "filename": "hboard-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6f40ce0ca698d5cb8bff29c0916f6c1e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.*",
      "size": 4529901,
      "upload_time": "2022-10-10T09:50:48",
      "upload_time_iso_8601": "2022-10-10T09:50:48.390231Z",
      "url": "https://files.pythonhosted.org/packages/0c/b8/f356a0b4edeea18d2a9147993f3e7d1e3383205d77542d2a2b8f7524d630/hboard-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}