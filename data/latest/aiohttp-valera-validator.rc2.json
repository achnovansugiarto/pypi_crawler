{
  "info": {
    "author": "Nikita Tsvetkov",
    "author_email": "tsv1@fastmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "# aiohttp-valera-validator\n\n[![Codecov](https://img.shields.io/codecov/c/github/tsv1/aiohttp-valera-validator/master.svg?style=flat-square)](https://codecov.io/gh/tsv1/aiohttp-valera-validator)\n[![PyPI](https://img.shields.io/pypi/v/aiohttp-valera-validator.svg?style=flat-square)](https://pypi.python.org/pypi/aiohttp-valera-validator/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/aiohttp-valera-validator?style=flat-square)](https://pypi.python.org/pypi/aiohttp-valera-validator/)\n[![Python Version](https://img.shields.io/pypi/pyversions/aiohttp-valera-validator.svg?style=flat-square)](https://pypi.python.org/pypi/aiohttp-valera-validator/)\n\nRequest validation for [aiohttp](https://docs.aiohttp.org/en/stable/) (via [valera](https://github.com/tsv1/valera))\n\n## Installation\n\n```shell\n$ pip3 install aiohttp-valera-validator\n```\n\n## Usage\n\n```python\nfrom aiohttp.web import Application, json_response, route, run_app\nfrom district42 import schema\nfrom aiohttp_valera_validator import validate\n\nParamsSchema = schema.dict({\n    \"q\": schema.str.len(1, ...)\n})\n\n@validate(params=ParamsSchema)\nasync def handler(request):\n    q = request.query[\"q\"]\n    return json_response({\"q\": q})\n\n\napp = Application()\napp.add_routes([route(\"GET\", \"/users\", handler)])\nrun_app(app)\n```\n\n```javascript\n// http /users?q=Bob\n{\n    \"q\": \"Bob\"\n}\n```\n\n```javascript\n// http /users\n{\n    \"errors\": [\n        \"Value <class 'str'> at _['q'] must have at least 1 element, but it has 0 elements\"\n    ]\n}\n```\n\n## Docs\n\n### Query params validation\n\n```python\nfrom district42 import schema\nfrom aiohttp_valera_validator import validate\n\n# schema.dict is strict by default (all keys must be present)\nParamsSchema = schema.dict({\n    \"q\": schema.str.len(1, ...)\n})\n\n@routes.get(\"/users\")\n@validate(params=ParamsSchema)\nasync def handler(request):\n    q = request.query[\"q\"]\n    return json_response({\"q\": q})\n```\n\n### Headers validation\n\n```python\nfrom district42 import schema\nfrom aiohttp_valera_validator import validate\nfrom multidict import istr\n\n# \"...\" means that there can be any other keys\n# headers are case-insensitive, so we use istr for\nHeadersSchema = schema.dict({\n    istr(\"User-Agent\"): schema.str.len(1, ...),\n    ...: ...\n})\n\n@routes.get(\"/users\")\n@validate(headers=HeadersSchema)\nasync def handler(request):\n    user_agent = request.headers[\"User-Agent\"]\n    return json_response({\"user_agent\": user_agent})\n```\n\n### JSON body validation\n\n```python\nfrom district42 import schema\nfrom aiohttp_valera_validator import validate\n\nBodySchema = schema.dict({\n    \"id\": schema.int.min(1),\n    \"name\": schema.str.len(1, ...),\n})\n\n@routes.post(\"/users\")\n@validate(json=BodySchema)\nasync def handler(request):\n    payload = await request.json()\n    return json_response({\n        \"id\": payload[\"id\"],\n        \"name\": payload[\"name\"]\n    })\n```\n\n### URL segments validation\n\nSegments — is a variable part of URL path (aiohttp [uses](https://docs.aiohttp.org/en/stable/web_quickstart.html#variable-resources) `match_info` for it)\n\n```python\nfrom district42 import schema\nfrom aiohttp_valera_validator import validate\n\nSegmentsSchema = schema.dict({\n    \"user_id\": schema.str.regex(r\"[1-9][0-9]*\"),\n})\n\n@routes.get(\"/users/{user_id}\")\n@validate(segments=SegmentsSchema)\nasync def handler(request):\n    user_id = int(request.match_info[\"user_id\"])\n    return json_response({\"user_id\": user_id})\n```\n\n### Custom response\n\n```python\nfrom http import HTTPStatus\nfrom aiohttp.web import Request, Response\nfrom aiohttp_valera_validator import validate as validate_orig\n\nclass validate(validate_orig):\n    def create_error_response(self, request: Request, errors: List[str]) -> Response:\n        status = HTTPStatus.UNPROCESSABLE_ENTITY\n        body = \"<ul>\" + \"\".join(f\"<li>{error}</li>\" for error in errors) + \"</ul>\"\n        return Response(status=status, text=body, headers={\"Content-Type\": \"text/html\"})\n```\n\n—\n\nFore more information read [valera docs](https://github.com/tsv1/valera)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tsv1/aiohttp-valera-validator",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aiohttp-valera-validator",
    "package_url": "https://pypi.org/project/aiohttp-valera-validator/",
    "platform": null,
    "project_url": "https://pypi.org/project/aiohttp-valera-validator/",
    "project_urls": {
      "Homepage": "https://github.com/tsv1/aiohttp-valera-validator"
    },
    "release_url": "https://pypi.org/project/aiohttp-valera-validator/0.1.0/",
    "requires_dist": [
      "aiohttp (<4.0,>=3.5)",
      "multidict (<7.0,>=4.5)",
      "valera (<2.0,>=1.5)"
    ],
    "requires_python": ">=3.8",
    "summary": "Request validation for aiohttp",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16533975,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1a6ba23ea737f60584eb5484160b320c7ebcfdcea394e3f8fe6be9d92bbd900",
          "md5": "d603522a3bc68a3d2a9a06c08ae227d0",
          "sha256": "b47c5317a78efaef82b0aca66b990279b0f8b3eba2a81e49a39b089538717ed3"
        },
        "downloads": -1,
        "filename": "aiohttp_valera_validator-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d603522a3bc68a3d2a9a06c08ae227d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 7430,
        "upload_time": "2023-01-22T15:58:47",
        "upload_time_iso_8601": "2023-01-22T15:58:47.582245Z",
        "url": "https://files.pythonhosted.org/packages/c1/a6/ba23ea737f60584eb5484160b320c7ebcfdcea394e3f8fe6be9d92bbd900/aiohttp_valera_validator-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "277e7e94f48df975c6626ea0e2dc6c1073564b313db7b702357f3b496bdb4199",
          "md5": "5bb6aed83404c1df65f84f8998844a37",
          "sha256": "15cc9e6ed8f2ac9543362b3f59fdd794e8c0a6f5cb199a1472941c2d132c0434"
        },
        "downloads": -1,
        "filename": "aiohttp-valera-validator-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5bb6aed83404c1df65f84f8998844a37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6994,
        "upload_time": "2023-01-22T15:58:49",
        "upload_time_iso_8601": "2023-01-22T15:58:49.363462Z",
        "url": "https://files.pythonhosted.org/packages/27/7e/7e94f48df975c6626ea0e2dc6c1073564b313db7b702357f3b496bdb4199/aiohttp-valera-validator-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eab100c5ae91e3b1d23a241222a14f71e11c62b19aaa79a475b2a610b56db048",
          "md5": "e9c30c82310922d610f3ec8bc998e701",
          "sha256": "27c8c7e20d828fe8f32166a12c4955c16b11880aba07c1480d7226bb92b06f36"
        },
        "downloads": -1,
        "filename": "aiohttp_valera_validator-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9c30c82310922d610f3ec8bc998e701",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8262,
        "upload_time": "2023-01-23T15:32:12",
        "upload_time_iso_8601": "2023-01-23T15:32:12.494697Z",
        "url": "https://files.pythonhosted.org/packages/ea/b1/00c5ae91e3b1d23a241222a14f71e11c62b19aaa79a475b2a610b56db048/aiohttp_valera_validator-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecdbc5bc8c1048c6c8317523cdf52c313b284990f41b31b4c6c991f0ae19745f",
          "md5": "7109392576ca8aa8a790e062deb4dde1",
          "sha256": "4ee4ed41df9809aa9b9d6f7b78e24ad9e4577de0f9fc9f28e90abb2bae5f9cb9"
        },
        "downloads": -1,
        "filename": "aiohttp-valera-validator-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7109392576ca8aa8a790e062deb4dde1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7821,
        "upload_time": "2023-01-23T15:32:14",
        "upload_time_iso_8601": "2023-01-23T15:32:14.119075Z",
        "url": "https://files.pythonhosted.org/packages/ec/db/c5bc8c1048c6c8317523cdf52c313b284990f41b31b4c6c991f0ae19745f/aiohttp-valera-validator-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eab100c5ae91e3b1d23a241222a14f71e11c62b19aaa79a475b2a610b56db048",
        "md5": "e9c30c82310922d610f3ec8bc998e701",
        "sha256": "27c8c7e20d828fe8f32166a12c4955c16b11880aba07c1480d7226bb92b06f36"
      },
      "downloads": -1,
      "filename": "aiohttp_valera_validator-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e9c30c82310922d610f3ec8bc998e701",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 8262,
      "upload_time": "2023-01-23T15:32:12",
      "upload_time_iso_8601": "2023-01-23T15:32:12.494697Z",
      "url": "https://files.pythonhosted.org/packages/ea/b1/00c5ae91e3b1d23a241222a14f71e11c62b19aaa79a475b2a610b56db048/aiohttp_valera_validator-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ecdbc5bc8c1048c6c8317523cdf52c313b284990f41b31b4c6c991f0ae19745f",
        "md5": "7109392576ca8aa8a790e062deb4dde1",
        "sha256": "4ee4ed41df9809aa9b9d6f7b78e24ad9e4577de0f9fc9f28e90abb2bae5f9cb9"
      },
      "downloads": -1,
      "filename": "aiohttp-valera-validator-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7109392576ca8aa8a790e062deb4dde1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 7821,
      "upload_time": "2023-01-23T15:32:14",
      "upload_time_iso_8601": "2023-01-23T15:32:14.119075Z",
      "url": "https://files.pythonhosted.org/packages/ec/db/c5bc8c1048c6c8317523cdf52c313b284990f41b31b4c6c991f0ae19745f/aiohttp-valera-validator-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}