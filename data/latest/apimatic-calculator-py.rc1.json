{
  "info": {
    "author": "Nida",
    "author_email": "nida.zamir@apimatic.io",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Getting Started with MyCalculator\n\n## Getting Started\n\n### Introduction\n\nCalculator API built with APIMATIC\n\n### Install the Package\n\nThe package is compatible with Python versions `2 >=2.7.9` and `3 >=3.4`.\nInstall the package from PyPi using the following pip command:\n\n```python\npip install apimatic-calculator-py==1.0\n```\n\nYou can also view the package at:\nhttps://pypi.python.org/pypi/apimatic-calculator-py\n\n### Initialize the API Client\n\nThe following parameters are configurable for the API Client:\n\n| Parameter | Type | Description |\n|  --- | --- | --- |\n| `timeout` | `float` | The value to use for connection timeout. <br> **Default: 60** |\n| `max_retries` | `int` | The number of times to retry an endpoint call if it fails. <br> **Default: 3** |\n| `backoff_factor` | `float` | A backoff factor to apply between attempts after the second try. <br> **Default: 0** |\n\nThe API client can be initialized as follows:\n\n```python\nfrom mycalculator.mycalculator_client import MycalculatorClient\n\nclient = MycalculatorClient()\n```\n\n### Test the SDK\n\nYou can test the generated SDK and the server with test cases. `unittest` is used as the testing framework and `nose` is used as the test runner. You can run the tests as follows:\n\nNavigate to the root directory of the SDK and run the following commands\n\n```\npip install -r test-requirements.txt\nnosetests\n```\n\n## Client Class Documentation\n\n### MyCalculatorClient\n\nThe gateway for the SDK. This class acts as a factory for the Controllers and also holds the configuration of the SDK.\n\n### Controllers\n\n| Name | Description |\n|  --- | --- |\n| simple_calculator | Provides access to SimpleCalculatorController |\n\n## API Reference\n\n### List of APIs\n\n* [Simple Calculator](#simple-calculator)\n\n### Simple Calculator\n\n#### Overview\n\n##### Get instance\n\nAn instance of the `SimpleCalculatorController` class can be accessed from the API Client.\n\n```\nsimple_calculator_controller = client.simple_calculator\n```\n\n#### Get Calculate\n\nCalculates the result for the specified operation and variables.\n\n:information_source: **Note** This endpoint does not require authentication.\n\n```python\ndef get_calculate(self,\n                 operation,\n                 x,\n                 y)\n```\n\n##### Parameters\n\n| Parameter | Type | Tags | Description |\n|  --- | --- | --- | --- |\n| `operation` | [`OperationEnum`](#operation) | Template, Required | The operator to be applied on the provided variables. |\n| `x` | `float` | Query, Required | The LHS value |\n| `y` | `float` | Query, Required | The RHS value |\n\n##### Response Type\n\n`float`\n\n##### Example Usage\n\n```python\noperation = OperationEnum.SUM\nx = 222.14\ny = 165.14\n\nresult = simple_calculator_controller.get_calculate(operation, x, y)\n```\n\n##### Example Response\n\n```\n2.5\n```\n\n## Model Reference\n\n### Enumerations\n\n* [Operation Type](#operation-type)\n* [Operation](#operation)\n\n#### Operation Type\n\nOperations types include: SUM, SUBTRACT, DIVIDE, MULTIPLY\n\n##### Class Name\n\n`OperationTypeEnum`\n\n##### Fields\n\n| Name | Description |\n|  --- | --- |\n| `SUM` | Adds the specified variables. |\n| `SUBTRACT` | Subtracts the specified variables. |\n| `MULTIPLY` | Multiplies the specified variables. |\n| `DIVIDE` | Divides the specified variables. |\n\n#### Operation\n\n##### Class Name\n\n`OperationEnum`\n\n##### Fields\n\n| Name | Description |\n|  --- | --- |\n| `SUM` | Adds the specified variables. |\n| `SUBTRACT` | Subtracts the specified variables. |\n| `MULTIPLY` | Multiplies the specified variables. |\n| `DIVIDE` | Divides the specified variables. |\n\n## Utility Classes Documentation\n\n### ApiHelper\n\nA utility class for processing API Calls. Also contains classes for supporting standard datetime formats.\n\n#### Methods\n\n| Name | Description |\n|  --- | --- |\n| json_deserialize | Deserializes a JSON string to a Python dictionary. |\n\n#### Classes\n\n| Name | Description |\n|  --- | --- |\n| HttpDateTime | A wrapper for datetime to support HTTP date format. |\n| UnixDateTime | A wrapper for datetime to support Unix date format. |\n| RFC3339DateTime | A wrapper for datetime to support RFC3339 format. |\n\n## Common Code Documentation\n\n### HttpResponse\n\nHttp response received.\n\n#### Parameters\n\n| Name | Type | Description |\n|  --- | --- | --- |\n| status_code | int | The status code returned by the server. |\n| reason_phrase | str | The reason phrase returned by the server. |\n| headers | dict | Response headers. |\n| text | str | Response body. |\n| request | HttpRequest | The request that resulted in this response. |\n\n### HttpRequest\n\nRepresents a single Http Request.\n\n#### Parameters\n\n| Name | Type | Tag | Description |\n|  --- | --- | --- | --- |\n| http_method | HttpMethodEnum |  | The HTTP method of the request. |\n| query_url | str |  | The endpoint URL for the API request. |\n| headers | dict | optional | Request headers. |\n| query_parameters | dict | optional | Query parameters to add in the URL. |\n| parameters | dict &#124; str | optional | Request body, either as a serialized string or else a list of parameters to form encode. |\n| files | dict | optional | Files to be sent with the request. |\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://apimatic.io",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "apimatic-calculator-py",
    "package_url": "https://pypi.org/project/apimatic-calculator-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/apimatic-calculator-py/",
    "project_urls": {
      "Homepage": "https://apimatic.io"
    },
    "release_url": "https://pypi.org/project/apimatic-calculator-py/1.0/",
    "requires_dist": [
      "requests (<3.0,>=2.9.1)",
      "jsonpickle (<1.0,>=0.7.1)",
      "cachecontrol (<1.0,>=0.11.7)",
      "python-dateutil (<3.0,>=2.5.3)",
      "enum34 (>=1.1.6)"
    ],
    "requires_python": "",
    "summary": "Calculator API built with APIMATIC",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9254219,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15f29d7dfa712deabd7832f44ef56adb37c1ea66925f3b7c2ca1ea27e5b98960",
          "md5": "cbcd52862cb521c66449c970cfcfdaad",
          "sha256": "3c4e586bf6c2173c95ebb13cc545dca983466ed6765076e3712e74bc80221366"
        },
        "downloads": -1,
        "filename": "apimatic_calculator_py-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbcd52862cb521c66449c970cfcfdaad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24786,
        "upload_time": "2021-01-28T11:58:42",
        "upload_time_iso_8601": "2021-01-28T11:58:42.582319Z",
        "url": "https://files.pythonhosted.org/packages/15/f2/9d7dfa712deabd7832f44ef56adb37c1ea66925f3b7c2ca1ea27e5b98960/apimatic_calculator_py-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21f0ff877c0e4d75f7704ed11322933ce0ca367565d3d610b7c86b295d76a12e",
          "md5": "eb82c7f98770a9c1a903826544d5f7ad",
          "sha256": "7b1d620585d627d6f0ea2b4e964af0f0ec66171a9dd721981f4750687c3c1345"
        },
        "downloads": -1,
        "filename": "apimatic-calculator-py-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eb82c7f98770a9c1a903826544d5f7ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15428,
        "upload_time": "2021-01-28T11:58:44",
        "upload_time_iso_8601": "2021-01-28T11:58:44.061130Z",
        "url": "https://files.pythonhosted.org/packages/21/f0/ff877c0e4d75f7704ed11322933ce0ca367565d3d610b7c86b295d76a12e/apimatic-calculator-py-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15f29d7dfa712deabd7832f44ef56adb37c1ea66925f3b7c2ca1ea27e5b98960",
        "md5": "cbcd52862cb521c66449c970cfcfdaad",
        "sha256": "3c4e586bf6c2173c95ebb13cc545dca983466ed6765076e3712e74bc80221366"
      },
      "downloads": -1,
      "filename": "apimatic_calculator_py-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cbcd52862cb521c66449c970cfcfdaad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 24786,
      "upload_time": "2021-01-28T11:58:42",
      "upload_time_iso_8601": "2021-01-28T11:58:42.582319Z",
      "url": "https://files.pythonhosted.org/packages/15/f2/9d7dfa712deabd7832f44ef56adb37c1ea66925f3b7c2ca1ea27e5b98960/apimatic_calculator_py-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21f0ff877c0e4d75f7704ed11322933ce0ca367565d3d610b7c86b295d76a12e",
        "md5": "eb82c7f98770a9c1a903826544d5f7ad",
        "sha256": "7b1d620585d627d6f0ea2b4e964af0f0ec66171a9dd721981f4750687c3c1345"
      },
      "downloads": -1,
      "filename": "apimatic-calculator-py-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eb82c7f98770a9c1a903826544d5f7ad",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15428,
      "upload_time": "2021-01-28T11:58:44",
      "upload_time_iso_8601": "2021-01-28T11:58:44.061130Z",
      "url": "https://files.pythonhosted.org/packages/21/f0/ff877c0e4d75f7704ed11322933ce0ca367565d3d610b7c86b295d76a12e/apimatic-calculator-py-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}