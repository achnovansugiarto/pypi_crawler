{
  "info": {
    "author": "Aditya Karan Chhabra",
    "author_email": "aditya0chhabra@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database"
    ],
    "description": "# **datagovindia**\n\n[![MIT license](https://img.shields.io/badge/License-MIT-blue.svg)](https://github.com/addypy/datagovindia/blob/master/LICENSE.txt) [![Downloads](https://static.pepy.tech/personalized-badge/datagovindia?period=total&units=international_system&left_color=grey&right_color=limegreen&left_text=Downloads)](https://pepy.tech/project/datagovindia)\n\n\n### A Python API-wrapper for Government of India’s [Open Government Data OGD platform](https://data.gov.in/)\n**`datagovindia`** is an API wrapper for `100170` (and counting) APIs available at Government of India’s *[Open Government Data OGD platform](https://data.gov.in/ogpl_apis)*\n\n-------\n\n## Features\n> - **DISCOVERY**\n>> *Find the right API resource.*\n> - **INFORMATION**\n>> *Retrieve information about an API resource.*\n> - **DATA**\n>> *Download data in a convenient pandas DataFrame from the chosen API.*\n\n## Prerequisites\n\n>  - An account on *data.gov.in*\n>  - An API key from the My Account page\n    - (Instructions here : [Official Guide](https://data.gov.in/help/how-use-datasets-apis))\n\n## Installation\n> - Using PIP\n```sh\npip install -U datagovindia\n```\n-------\n> - Clone the Git-Repository\n```sh\ngit clone https://github.com/addypy/datagovindia\n\npython setup.py install\n\n```\n\n## Basic Usage\n\n### Import Library\n```python\nfrom datagovindia import DataGovIndia\n```\n\n### Initialize Class\n```python\ndatagovin = DataGovIndia(\"579b464db66ec23bdd000001cdd3946e44ce4aad7209ff7b23ac571b\")\n```\n\n> Performs :\n>> 1) Tests datagov.in API-server status.\n>> 2) Validates API-Key. You only need to set this once.\n>> 2) Fetches latest details about available APIs.\n\n### Search\n```python\ndatagovin.search(description=\"Wheat\",max_results=1,print_results=True)\n```\n\n> Output:\n\n```\n# Returns:\n1 of 395 results      \n\n==================================================================================\n\nResource-ID:\t4c88fba5e3174e06a34af33194ab4b2d\n\nDaily FCI Stock postion of the commodity Wheat, for the Haryana region in 2019 (till last week)\n\n==================================================================================\n```\n\n> Returns:\n\n```json\n\n[{\"4c88fba5e3174e06a34af33194ab4b2d\": \"Daily FCI Stock postion of the commodity Wheat, for the Haryana region in 2019 (till last week)\"}]\n\n```\n\n### Download Data\n```python\ndata = datagovin.get_data(\"b7ea044ea17149ed886c37ed5729b75a\",num_results='all')\ndata.head()\n```\n\n> Returns:\n\n|date                |code                |commodityid|commodityname       |districtname|districtcode|stock         |commoditystock|totalstock    |\n|--------------------|--------------------|-----------|--------------------|------------|------------|--------------|--------------|--------------|\n|2019-07-20T00:00:00Z|Region Name: Haryana|01         |Wheat(Including URS)|FARIDABAD   |NC12        |2214591.87343 |35769407.44149|35769407.44149|\n|2019-07-20T00:00:00Z|Region Name: Haryana|01         |Wheat(Including URS)|HISSAR      |NC13        |17954629.80074|35769407.44149|35769407.44149|\n|2019-07-20T00:00:00Z|Region Name: Haryana|01         |Wheat(Including URS)|KARNAL      |NC14        |1787375.5789  |35769407.44149|35769407.44149|\n|2019-07-20T00:00:00Z|Region Name: Haryana|01         |Wheat(Including URS)|KURUKSHETRA |NC15        |3552965.00293 |35769407.44149|35769407.44149|\n|2019-07-20T00:00:00Z|Region Name: Haryana|01         |Wheat(Including URS)|ROHTAK      |NC16        |10259845.18549|35769407.44149|35769407.44149|\n\n-------\n________\n\n## Detailed Examples\n\n--------\n\n> ## A. **SETUP**\n> ### Import *`DataGovIndia`* from *`datagovindia`*\n\n```python\nfrom datagovindia import DataGovIndia\n```\n> ### Get `API-KEY` from *[data.gov.in/user](https://data.gov.in/user)*\n>\n> See : [Official Guide](https://data.gov.in/help/how-use-datasets-apis)\n\n```python\napi_key = \"579b464db66ec23bdd000001cdd3946e44ce4aad7209ff7b23ac571b\"\n```\n\n> ### Initialize Class\n\n```python\n# Initializing the library -\n# 1) Tests datagov.in API-server status.\n# 2) Validates API-Key. You only need to set this once.\n# 2) Fetches latest details about available APIs.\n\n\ndatagovin = DataGovIndia(api_key)\n\n# The API key you provided is valid. You won't need to set it again.\n# Latest resources loaded. You may begin.                                                    \n```\n\n--------\n\n> ## B. **DISCOVERY**\n\n## Check available ***`attributes`***\n\n### 1. List of ***`Organization-Names`***\n\n```python\ndatagovin.list_org_names()\n\n# Returns:\n['Adi Dravidar and Tribal Welfare Department, Tamil Nadu',\n 'Agriculture Department',\n 'Agriculture Department, Meghalaya',\n     ...,\n 'Department of AIDS Control',\n 'Department of Agricultural Research and Education (DARE)',\n 'Department of Animal Husbandry, Dairying and Fisheries',\n 'Department of Atomic Energy',\n     ....,\n 'Micro Small and Medium Enterprises Department, Tamil Nadu',\n 'Ministry of Agriculture and Farmers Welfare',\n    ....,\n]\n```\n\n### 2. List of ***`Organization-Types`***\n\n```python\ndatagovin.list_org_types()\n\n# Returns:\n['Central',\n 'City',\n 'State']\n\n```\n### 3. List of ***`Sectors`***\n```python\ndatagovin.list_sectors()\n\n# Returns:\n['Adult Education',\n'Agricultural',\n'Agricultural Marketing',\n'Agricultural Research & Extension',\n'Agriculture',\n    .\n    .,\n'Water Quality',\n'Water Resources',\n'Water and Sanitation',\n'Water ways']\n```\n\n### 4. List of ***`Sources`***\n\n```python\ndatagovin.list_sources()\n\n# Returns:\n['data.gov.in', 'smartcities.data.gov.in', 'tn.data.gov.in']\n```\n\n### 5. List of ***`All Attributes`***\n```python\ndatagovin.list_all_attributes()\n# Returns:\n```    \n```json\n { \"org_types\": [\"Central\", \"City\", \"State\"],  \n  \"sources\": [\"data.gov.in\", \"smartcities.data.gov.in\", \"tn.data.gov.in\"],       \n \"org_names\": [ \"Adi Dravidar and Tribal Welfare Department, Tamil Nadu\",\n                 \"Agricultural Census, New Delhi\",\n                 \"Agriculture Department\",\n                        ,\n                        ,\n                        ,\n                 \"Department of Agriculture, Cooperation and Farmers Welfare\",\n                 \"Department of Animal Husbandry, Dairying and Fisheries\",\n                 \"Department of Atomic Energy\",\n                 \"Department of Ayurveda, Yoga and Naturopathy, Unani, Siddha \"\n                        ,\n                        ,\n                        ,\n                 \"Tourism, Culture and Religious Endowments Department\",\n                 \"Transport Department, Madhya Pradesh\",\n                 \"Transport Department, Tamil Nadu\",\n                        ,\n                        ,\n                 \"West Bengal\"],\n  \"sectors\": [ \"Adult Education\",\n               \"Agricultural\",\n               \"Agricultural Marketing\",\n               \"Agriculture\",\n                        ,\n                        ,          \n               \"Atmospheric Science\",\n               \"Aviation\",\n               \"Banking\",\n               \"Biotechnology\",\n               \"Broadcasting\",\n               \"Census\",\n                        ,\n                        ,          \n               \"District Adminstration\",\n               \"Drinking Water\",\n               \"Earth Sciences\",,\n               \"Education\",\n               \"Employment\",\n               \"Environment and Forest\",\n                        ,\n                        ,               \n               \"Municipal Waste\",\n               \"National Population Register\",\n               \"Natural Resources\",\n               \"Noise Pollution\",\n               \"Panchayati Raj\",\n               \"Parliament Of india\",\n               \"Passport\",\n               \"Power and Energy\",\n                        ,\n                        ,            \n               \"Water Quality\",\n               \"Water Resources\",\n               \"Water and Sanitation\",\n               \"Water ways\"]\n               }\n```\n\n### 6. List of ***`recently created resources`***\n\n```python\ndatagovin.list_recently_created(days=5,max_results=5,print_results=True)\n```\n```\n# Prints:\n\n5 of 1443 results that were created in the last - `5` days\n\n==================================================================================\n\nResource-ID:\t52d2933f69be46fda28855c08134fc7f\n18 June 2021, 09:57 AM\nAllocations for The Welfare of Schedule Caste from 2019-20 to 2021-22\n\n==================================================================================\n\nResource-ID:\t2ef7903b77f04609af93bb54516c125c\n18 June 2021, 09:57 AM\nAllocations for The Welfare of Schedule Tribes from 2019-20 to 2021-22\n\n==================================================================================\n\nResource-ID:\t8a679d8db6d94605a1d160150fe22b77\n18 June 2021, 09:57 AM\nAllocations for the Welfare of Children from 2019-20 to 2021-22\n\n==================================================================================\n\nResource-ID:\t243825f60f304a10877dd1f86ad49598\n18 June 2021, 09:27 AM\nMonthly Range-wise Performance of Public Facilities for Deliveries conducted at facility for May 2013-14\n\n==================================================================================\n\nResource-ID:\ta5d0bd7d39e84392b65abe5e4737f865\n18 June 2021, 09:26 AM\nMonthly Range-wise Performance of Public Facilities for Deliveries conducted at facility for September 2018-19\n\n==================================================================================\n```\n```json\n# Returns:\n[{\"resourceid\": \"52d2933f69be46fda28855c08134fc7f\",\n  \"timestamp\": 1623990466,\n  \"title\": \"Allocations for The Welfare of Schedule Caste from 2019-20 to 2021-22\"},\n {\"resourceid\": \"2ef7903b77f04609af93bb54516c125c\",\n  \"timestamp\": 1623990466,\n  \"title\": \"Allocations for The Welfare of Schedule Tribes from 2019-20 to 2021-22\"},\n {\"resourceid\": \"8a679d8db6d94605a1d160150fe22b77\",\n  \"timestamp\": 1623990441,\n  \"title\": \"Allocations for the Welfare of Children from 2019-20 to 2021-22\"},\n {\"resourceid\": \"243825f60f304a10877dd1f86ad49598\",\n  \"timestamp\": 1623988620,\n  \"title\": \"Monthly Range-wise Performance of Public Facilities for Deliveries conducted at facility for May 2013-14\"},\n {\"resourceid\": \"a5d0bd7d39e84392b65abe5e4737f865\",\n  \"timestamp\": 1623988618,\n  \"title\": \"Monthly Range-wise Performance of Public Facilities for Deliveries conducted at facility for September 2018-19\"}]\n```\n\n### 7. List of ***`recently updated resources`***\n```python\ndatagovin.list_recently_updated(days=3,max_results=5,print_results=True)\n\n```\n```\n# Prints:\n\n5 of 303 results that were updated in the last - `3` days\n\n==================================================================================\n\nResource-ID:\t9ef84268d588465aa308a864a43d0070\n21 June 2021, 02:05 PM\nCurrent Daily Price of Various Commodities from Various Markets (Mandi)\n\n==================================================================================\n\nResource-ID:\t3b01bcb80b144abfb6f2c1bfd384ba69\n21 June 2021, 12:03 PM\nReal time Air Quality Index from various location\n\n==================================================================================\n\nResource-ID:\td76a86b16a2a4ab39201cb9f6bc61fa4\n21 June 2021, 08:50 AM\nDistrict Wise Total MSME Registered Service Enterprises till last date\n\n==================================================================================\n\nResource-ID:\t925bb7dd50f048768a1da5e45c4a989a\n21 June 2021, 08:50 AM\nDistrict Wise Total MSME Registered Manufacturing and Service Enterprises till last date\n\n==================================================================================\n\nResource-ID:\t201b66f27fda40b8b613ffb7789c4341\n21 June 2021, 08:50 AM\nDistrict Wise Total MSME Registered Manufacturing Enterprises till last date\n\n==================================================================================\n```\n\n```json\n# Returns:\n[{\"resourceid\": \"9ef84268d588465aa308a864a43d0070\",\n  \"timestamp\": 1624264506,\n  \"title\": \"Current Daily Price of Various Commodities from Various Markets (Mandi)\"},\n {\"resourceid\": \"3b01bcb80b144abfb6f2c1bfd384ba69\",\n  \"timestamp\": 1624257197,\n  \"title\": \"Real time Air Quality Index from various location\"},\n {\"resourceid\": \"d76a86b16a2a4ab39201cb9f6bc61fa4\",\n  \"timestamp\": 1624245637,\n  \"title\": \"District Wise Total MSME Registered Service Enterprises till last date\"},\n {\"resourceid\": \"925bb7dd50f048768a1da5e45c4a989a\",\n  \"timestamp\": 1624245633,\n  \"title\": \"District Wise Total MSME Registered Manufacturing and Service Enterprises till last date\"},\n {\"resourceid\": \"201b66f27fda40b8b613ffb7789c4341\",\n  \"timestamp\": 1624245629,\n  \"title\": \"District Wise Total MSME Registered Manufacturing Enterprises till last date\"}]\n```\n## Searching for a dataset (API-Resource)\n---\n### 1. *Search* for resource using **`TITLE`**\n\n```python\nresults = datagovin.search_by_title(\"MGNREGA\",max_results=5,print_results=True)\n```\n\n```\n# Returns:\n5 of 45 results for : `MGNREGA`\n\n==================================================================================\n\nResource-ID:    bf1da9fc565045c3be3b0ba006377869\n\nExpenditure under MGNREGA on Schedule Caste (SC) Persondays during 2015-16 and 2018-19 (From: Ministry of Rural Development)\n\n==================================================================================\n\nResource-ID:    9aa66b7abb1d4e20bd4be5e68539cdfc\n\nCentral Fund Released to Jammu and Kashmir under MGNREGA from 2016-17 to 2018-19 (From: Ministry of Rural Development)\n\n==================================================================================\n\nResource-ID:    57bff16a642345b29700ebcde6709937\n\nState/UT-wise Expenditure Reported in Management Information System (MIS) under MGNREGA from 2014-15 to 2018-19 (From: Ministry of Labour and Employment)\n\n==================================================================================\n\nResource-ID:    8e7b41bec79044958339c8da0a7f287e\n\nState/UT-wise Expenditure made on Water Related Works Taken up under MGNREGA from 2016-17 to 2019-20 (From: Ministry of Jal Shakti)\n\n==================================================================================\n\nResource-ID:    7371da1e4c5e4c529223f85e1756d24d\n\nDistrict-wise expenditure under the Mahatma Gandhi National Rural Employment Guarantee Act (MGNREGA) in the state Punjab from 2017-18 to 2019-20 (From: Ministry of Rural Development)\n\n==================================================================================\n```\n\n### 2. *Search* for resource using **`DESCRIPTION`**\n\n```python\nresults = datagovin.search_by_description(\"Swachh Bharat Mission\",max_results=5,print_results=True)\n```\n\n```\n# Returns:\n5 of 25 results for : `Swachh Bharat Mission`\n\n==================================================================================\n\nResource-ID:    22f496bb32a84b6da4124f03c4b3ea62\n\nDistrict-wise Target vs Achievement of Construction of Toilets in State of Chhattisgarh under Swachh Bharat Mission (SBM) from 2013-14 to 2017-18 (From : Ministry of Tribal Affairs)\n\n==================================================================================\n\nResource-ID:    673d72fc1c8a497d80477c3c72196e74\n\nState/UT-wise Number of IHHLs Constructed under Swachh Bharat Mission - Gramin (SBM-G) from 02 October, 2014 to 17 July, 2019 (From : Ministry of Jal Shakti)\n\n==================================================================================\n\nResource-ID:    2235bc9138cc4a4dbf5413e485596d5c\n\nFunds Sanctioned, Allocated and Utilised under Swachh Bharat Mission (SBM) in Chhattisgarh from 2016-17 to 2018-19 (From: Ministry of Jal Shakti, Department of Drinking Water and Sanitation)\n\n==================================================================================\n\nResource-ID:    45bb18686df44011b5fbbd5d74a01eda\n\nDetails of Fund (including Swachh Bharat Cess) Allocated & Released under Swachh Bharat Mission (Rural/Urban) from 2016-17 to 2018-19 (From: Ministry of Finance)\n\n==================================================================================\n\nResource-ID:    5329bcc7f75f4a87be6a0bdaa6ebb4b4\n\nFunds Allocated, Released, Balance and Utilization Certificate received under Swachh Bharat Mission (Urban) as on 30th November, 2019 (From: Ministry of Housing and Urban Affairs)\n\n==================================================================================\n```\n\n### 3. ***Search*** for resources by `SOURCE`\n\n```python\nresults = datagovin.search_by_source(\"tn.data.gov.in\",max_results=3,print_results=True)\n```\n\n```\n# Returns:\n3 of 526 results for `source` : `tn.data.gov.in`\n\n==================================================================================\n\nResource-ID:    952da80341cd41e990bcbcb760ffbf90\n\nArea, Production & Productivity of Snake Gourd (Vegetables) by District-wise in Tamil Nadu for the Year 2015-16\n\n==================================================================================\n\nResource-ID:    0bd2498df63c456a9f336e242e9abe82\n\nArea, Production & Productivity of Chrysanthimum (Flowers) by District-wise in Tamil Nadu for the Year 2015-16\n\n==================================================================================\n\nResource-ID:    921f5b1f093146399c96a00195e17881\n\nArea, Production & Productivity of Jadhi Malli (Flowers) by District-wise in Tamil Nadu for the Year 2015-16\n\n==================================================================================\n```\n\n### 4. ***Search for resources by*** `SECTOR`\n\n```python\nresults = datagovin.search_by_sector(\"Banking\",max_results=3,print_results=True)\n```\n\n```\n# Returns:\n3 of 45 results for `sector` : `Banking`\n\n==================================================================================\n\nResource-ID:    4b9dd94d36be4f968578f8981857773c\n\nMonth-wise Progress Report of PMJDY by Public Sectors Banks/Regional Rural Banks/Private Banks upto 24-Feb-2016\n\n==================================================================================\n\nResource-ID:    f719ee5c50254643aa54157d707d6077\n\nLiabilities and assets of different classes of banks - scheduled commercial banks as on 31st March - State Bank of India from 2001 to 2014\n\n==================================================================================\n\nResource-ID:    371020a7a43747df8946fbd030b53459\n\nLiabilities And Assets Of State Financial Corporations (State-wise) upto 2012-13\n\n==================================================================================\n```\n\n### 5. ***Search for resources by*** `ORG-NAME`\n\n```python\nresults = datagovin.search_by_org_name(\"Ministry of Road Transport and Highways\",max_results=5,print_results=True)\n```\n\n```\n# Returns:\n5 of 417 results for `organization` - `Ministry of Road Transport and Highways`\n\n==================================================================================\n\nResource-ID:    37b1f841f44c490682fb2442b0f2bd25\n\nState/UT-wise Length of Roads under Coal Fields/Coal units of Coal India Limited by Type of Surface as on 31st March, 2017\n\n==================================================================================\n\nResource-ID:    b10ac9f5c1fd42c78c19e74a1fe64c04\n\nState/UT-wise Length of Roads under Forest Departments by Type of Surface in India as on 31st March, 2017\n\n==================================================================================\n\nResource-ID:    8ebce90f62e8421592672bf22bac7f94\n\nState-wise Length of Roads in Major Ports by Type of Surface as on 31st March, 2017\n\n==================================================================================\n\nResource-ID:    888f4d498c864f1c825feef9db674cc8\n\nState/UT-wise Length of Military Engineering Service Roads by Type of Surface as on 31st March, 2017\n\n==================================================================================\n\nResource-ID:    068ecf9440694838981b3529c3a48edc\n\nState/UT-wise Length of PMGSY Roads by type of Surface as on 31st March, 2017\n\n==================================================================================\n```\n\n### 6. *Search* for resources by `ORG-TYPE`\n\n```python\nresults = datagovin.search_by_org_type(\"State\",max_results=5,print_results=True)\n```\n\n```\n# Returns:\n5 of 645 results for `organization type` - `State`\n\n==================================================================================\n\nResource-ID:    4200eb5f17294fee8477af5feb715b3c\n\nDetails of Vehicle Tax collected by Surat Municipal Corporation from Year 1989 onward\n\n==================================================================================\n\nResource-ID:    fbdf3432b88a4592bbc4d0f60a0ac140\n\nSurat City Bus and BRTS Passenger Information from April 2015 (daily)\n\n==================================================================================\n\nResource-ID:    993acfe3b72e4e07895915aa34bc226d\n\nBuilding Plan Applications at Surat Municipal Corporation from April 2015 onward (daily)\n\n==================================================================================\n\nResource-ID:    8addc59332b54531a2346057209f35a0\n\nSurat City Complaint Statistics from April 2015 onward (daily)\n\n==================================================================================\n\nResource-ID:    3968cb03596842c9ac43cba988a964c7\n\nGarbage Collection in Surat City (in KG) from April 2015 onward (daily)\n\n==================================================================================\n```\n\n### 7. *Search* for resources with **`Multiple Filters`**\n\n```python\nresults = datagovin.search(title=\"COVID\",\n                            description=\"Postiive Case\",\n                            org_name=\"Surat\",\n                            org_type=\"City\",\n                            sector=\"All\",\n                            source=\"smartcities.data.gov.in\",\n                            max_results=5,\n                            print_results=True,\n                          )\n```\n\n```\n# Returns:\n2 of 2 results        \n\n==================================================================================\n\nResource-ID:    b9cfed4ca1a24f7aaffa88a8e1a2149c\n\nCOVID-19 Positive Case Details\n\n==================================================================================\n\nResource-ID:    ee35f0724d804b418c17fd74414907be\n\nCOVID-19 Cluster / Containment Zone Details\n\n==================================================================================\n```\n\n\n--------\n\n\n> ## C. **Learn more about an API-resource.**\n\n>> ### 1. Get all available `meta-data` for an API resource\n\n> Meta-Data includes -\n>\n> - Resource-ID\n> - Title\n> - Description\n> - Total records available\n> - Date-Created\n> - Data-Updated\n> - Organization-Type\n> - Organization-Name\n> - Source\n> - Sector\n> - Fields\n\n```python\ndatagovin.get_resource_info(\"b9cfed4ca1a24f7aaffa88a8e1a2149c\")\n```\n\n```json\n{\"ResourceID\": \"b9cfed4ca1a24f7aaffa88a8e1a2149c\",\n \"Title\": \"COVID-19 Positive Case Details\",\n \"Description\": \"COVID-19 Positive Case Details\",\n \"TotalRecords\": 3592,\n \"DateCreated\": \"08 May 2020, 09:00 PM\",\n \"DateUdpated\": \"10 January 2021, 11:04 PM\",\n \"OrganizationNames\": [\"Gujarat\", \"Surat\"],\n \"OrganizationTypes\": \"City\",\n \"Sector\": \"All\",\n \"Source\": \"smartcities.data.gov.in\",\n \"Fields\": [\"sr_no\",\n            \"city\",\n            \"zone\",\n            \"age\",\n            \"gender\",\n            \"latitude\",\n            \"longitude\",\n            \"result\",\n            \"sample_result\",\n            \"resultdate\"]}\n```            \n\n>> ### 2. Get details of `fields` (variables) available for a resource.\n\n```python\ndatagovin.get_resource_fields(\"b9cfed4ca1a24f7aaffa88a8e1a2149c\")\n```\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>field_code</th>\n      <th>field_label</th>\n      <th>field_type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>sr_no</td>\n      <td>Sr.No</td>\n      <td>keyword</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>city</td>\n      <td>City</td>\n      <td>keyword</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>zone</td>\n      <td>zone</td>\n      <td>double</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>age</td>\n      <td>age</td>\n      <td>double</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>gender</td>\n      <td>Gender</td>\n      <td>keyword</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>latitude</td>\n      <td>latitude</td>\n      <td>double</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>longitude</td>\n      <td>longitude</td>\n      <td>double</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>result</td>\n      <td>Result</td>\n      <td>keyword</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>sample_result</td>\n      <td>Sample_Result</td>\n      <td>keyword</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>resultdate</td>\n      <td>ResultDate</td>\n      <td>date</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n--------\n\n> ## D. **Download DATA**\n\n```python\ndata = datagovin.get_data(\"b9cfed4ca1a24f7aaffa88a8e1a2149c\")\ndata.head(20)\n```\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sr_no</th>\n      <th>city</th>\n      <th>zone</th>\n      <th>age</th>\n      <th>gender</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>result</th>\n      <th>sample_result</th>\n      <th>resultdate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>21</td>\n      <td>F</td>\n      <td>21.1697</td>\n      <td>72.7933</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>19/03/2020</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>67</td>\n      <td>M</td>\n      <td>21.1869</td>\n      <td>72.816</td>\n      <td>Death</td>\n      <td>Positive</td>\n      <td>20/03/2020</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>Surat</td>\n      <td>East Zone - B</td>\n      <td>50</td>\n      <td>F</td>\n      <td>21.21130173</td>\n      <td>72.86820564</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>10/06/2020</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>26</td>\n      <td>M</td>\n      <td>21.1397</td>\n      <td>72.8241</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>28/03/2020</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>55</td>\n      <td>M</td>\n      <td>21.2056124</td>\n      <td>72.804538</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>11/06/2020</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>47</td>\n      <td>M</td>\n      <td>21.2419426</td>\n      <td>72.8287933</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>13/06/2020</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7</td>\n      <td>Surat</td>\n      <td>East Zone - B</td>\n      <td>34</td>\n      <td>M</td>\n      <td>21.2225309</td>\n      <td>72.8918084</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>17/06/2020</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8</td>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>39</td>\n      <td>M</td>\n      <td>21.2334082</td>\n      <td>72.8046628</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>19/06/2020</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>9</td>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>20</td>\n      <td>F</td>\n      <td>21.1681</td>\n      <td>72.8672</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>18/04/2020</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10</td>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>32</td>\n      <td>M</td>\n      <td>21.2265</td>\n      <td>72.7927</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>21/03/2020</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>11</td>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>45</td>\n      <td>M</td>\n      <td>21.1852</td>\n      <td>72.8209</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>22/03/2020</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>12</td>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>22</td>\n      <td>M</td>\n      <td>21.1613</td>\n      <td>72.8305</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>01/04/2020</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>13</td>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>62</td>\n      <td>M</td>\n      <td>21.186</td>\n      <td>72.863</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>23/03/2020</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>14</td>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>67</td>\n      <td>M</td>\n      <td>21.2212</td>\n      <td>72.7954</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>29/03/2020</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>15</td>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>23</td>\n      <td>M</td>\n      <td>21.1738</td>\n      <td>72.8141</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>20/03/2020</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>16</td>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>29</td>\n      <td>M</td>\n      <td>21.2264</td>\n      <td>72.8189</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>31/03/2020</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>17</td>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>61</td>\n      <td>F</td>\n      <td>21.2078</td>\n      <td>72.7732</td>\n      <td>Death</td>\n      <td>Positive</td>\n      <td>03/04/2020</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>18</td>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>40</td>\n      <td>F</td>\n      <td>21.1612</td>\n      <td>72.8303</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>04/04/2020</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>19</td>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>65</td>\n      <td>M</td>\n      <td>21.1956</td>\n      <td>72.8353</td>\n      <td>Death</td>\n      <td>Positive</td>\n      <td>04/04/2020</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>20</td>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>50</td>\n      <td>M</td>\n      <td>21.2015</td>\n      <td>72.8085</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>05/04/2020</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n--------\n\n> ## E. Filtering\n\n```python\n# First, let's take a look at valid `fields`.\n\ndatagovin.get_resource_fields(\"b9cfed4ca1a24f7aaffa88a8e1a2149c\")\n```\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>field_code</th>\n      <th>field_label</th>\n      <th>field_type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>sr_no</td>\n      <td>Sr.No</td>\n      <td>keyword</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>city</td>\n      <td>City</td>\n      <td>keyword</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>zone</td>\n      <td>zone</td>\n      <td>double</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>age</td>\n      <td>age</td>\n      <td>double</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>gender</td>\n      <td>Gender</td>\n      <td>keyword</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>latitude</td>\n      <td>latitude</td>\n      <td>double</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>longitude</td>\n      <td>longitude</td>\n      <td>double</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>result</td>\n      <td>Result</td>\n      <td>keyword</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>sample_result</td>\n      <td>Sample_Result</td>\n      <td>keyword</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>resultdate</td>\n      <td>ResultDate</td>\n      <td>date</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n>> ### 1. Filtering with a *Single* ***`Field`*** - *Single* ***`Value`*** pair\n\n```python\ndata = datagovin.get_data(\"b9cfed4ca1a24f7aaffa88a8e1a2149c\",filters={\"result\":\"Active\"})\ndata\n```\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sr_no</th>\n      <th>city</th>\n      <th>zone</th>\n      <th>age</th>\n      <th>gender</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>result</th>\n      <th>sample_result</th>\n      <th>resultdate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>511</td>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>25</td>\n      <td>M</td>\n      <td>21.179004</td>\n      <td>72.808405</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>25/04/2020</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>951</td>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>35</td>\n      <td>M</td>\n      <td>21.1904773</td>\n      <td>72.849517</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>13/05/2020</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1111</td>\n      <td>Out City</td>\n      <td>NA</td>\n      <td>70</td>\n      <td>F</td>\n      <td>21.150554</td>\n      <td>72.802457</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>18/05/2020</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1164</td>\n      <td>Out City</td>\n      <td>NA</td>\n      <td>73</td>\n      <td>M</td>\n      <td>21.150554</td>\n      <td>72.802457</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>19/05/2020</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1166</td>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>41</td>\n      <td>M</td>\n      <td>21.153726</td>\n      <td>72.839782</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>20/05/2020</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1247</td>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>55</td>\n      <td>M</td>\n      <td>21.153215</td>\n      <td>72.8267782</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>24/05/2020</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1361</td>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>50</td>\n      <td>F</td>\n      <td>21.13268974</td>\n      <td>72.74215644</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>24/05/2020</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1520</td>\n      <td>Out City</td>\n      <td>NA</td>\n      <td>72</td>\n      <td>M</td>\n      <td>21.2217492</td>\n      <td>72.7830429</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>28/05/2020</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1530</td>\n      <td>Out City</td>\n      <td>NA</td>\n      <td>56</td>\n      <td>F</td>\n      <td>21.1577</td>\n      <td>72.7768399</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>28/05/2020</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1594</td>\n      <td>Out City</td>\n      <td>NA</td>\n      <td>53</td>\n      <td>F</td>\n      <td>21.1563151</td>\n      <td>72.766301</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>30/05/2020</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2327</td>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>63</td>\n      <td>M</td>\n      <td>21.1223137</td>\n      <td>72.8491477</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>10/06/2020</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2485</td>\n      <td>Out City</td>\n      <td>NA</td>\n      <td>41</td>\n      <td>M</td>\n      <td>21.29079</td>\n      <td>72.9001</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>13/06/2020</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>2609</td>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>61</td>\n      <td>M</td>\n      <td>21.2366751</td>\n      <td>72.8350334</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>14/06/2020</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>2748</td>\n      <td>Out City</td>\n      <td>NA</td>\n      <td>3</td>\n      <td>F</td>\n      <td>21.13488745</td>\n      <td>72.76593804</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>16/06/2020</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n>> ### 2. Filtering with a *Single* ***`Field`*** - *Multiple* ***`Values`***\n\n```python\ndatagovin.get_data(\"b9cfed4ca1a24f7aaffa88a8e1a2149c\",filters={\"result\":[\"Active\",'Cured/Discharged']})\n```\n\n<div>    \n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sr_no</th>\n      <th>city</th>\n      <th>zone</th>\n      <th>age</th>\n      <th>gender</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>result</th>\n      <th>sample_result</th>\n      <th>resultdate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>511</td>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>25</td>\n      <td>M</td>\n      <td>21.179004</td>\n      <td>72.808405</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>25/04/2020</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>951</td>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>35</td>\n      <td>M</td>\n      <td>21.1904773</td>\n      <td>72.849517</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>13/05/2020</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1111</td>\n      <td>Out City</td>\n      <td>NA</td>\n      <td>70</td>\n      <td>F</td>\n      <td>21.150554</td>\n      <td>72.802457</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>18/05/2020</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1164</td>\n      <td>Out City</td>\n      <td>NA</td>\n      <td>73</td>\n      <td>M</td>\n      <td>21.150554</td>\n      <td>72.802457</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>19/05/2020</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1166</td>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>41</td>\n      <td>M</td>\n      <td>21.153726</td>\n      <td>72.839782</td>\n      <td>Active</td>\n      <td>Positive</td>\n      <td>20/05/2020</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>3009</th>\n      <td>3189</td>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>50</td>\n      <td>M</td>\n      <td>21.226217</td>\n      <td>72.817604</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>21/06/2020</td>\n    </tr>\n    <tr>\n      <th>3010</th>\n      <td>3190</td>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>42</td>\n      <td>M</td>\n      <td>21.2268099</td>\n      <td>72.8256378</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>21/06/2020</td>\n    </tr>\n    <tr>\n      <th>3011</th>\n      <td>3191</td>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>52</td>\n      <td>M</td>\n      <td>21.205124</td>\n      <td>72.776736</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>22/06/2020</td>\n    </tr>\n    <tr>\n      <th>3012</th>\n      <td>3193</td>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>26</td>\n      <td>F</td>\n      <td>21.2398084</td>\n      <td>72.8500394</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>21/06/2020</td>\n    </tr>\n    <tr>\n      <th>3013</th>\n      <td>3194</td>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>49</td>\n      <td>M</td>\n      <td>21.2290168</td>\n      <td>72.808571</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>21/06/2020</td>\n    </tr>\n  </tbody>\n</table>\n<p>3014 rows × 10 columns</p>\n</div>\n\n>> ### 3. Filtering with *Multiple* ***`Field(s)`*** - *Multiple* ***`Value(s)`***\n\n```python\ndatagovin.get_data(\"b9cfed4ca1a24f7aaffa88a8e1a2149c\",\n                   filters={\n                       \"gender\":[\"F\",\"M\"],\n                       \"result\":['Cured/Discharged',\"Death\"],\n                   })\n\n# Note:\n# Filtering returns a UNION of matching results, and NOT an INTERSECTION.\n```\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sr_no</th>\n      <th>city</th>\n      <th>zone</th>\n      <th>age</th>\n      <th>gender</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>result</th>\n      <th>sample_result</th>\n      <th>resultdate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>21</td>\n      <td>F</td>\n      <td>21.1697</td>\n      <td>72.7933</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>19/03/2020</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3</td>\n      <td>Surat</td>\n      <td>East Zone - B</td>\n      <td>50</td>\n      <td>F</td>\n      <td>21.21130173</td>\n      <td>72.86820564</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>10/06/2020</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>20</td>\n      <td>F</td>\n      <td>21.1681</td>\n      <td>72.8672</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>18/04/2020</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>17</td>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>61</td>\n      <td>F</td>\n      <td>21.2078</td>\n      <td>72.7732</td>\n      <td>Death</td>\n      <td>Positive</td>\n      <td>03/04/2020</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>18</td>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>40</td>\n      <td>F</td>\n      <td>21.1612</td>\n      <td>72.8303</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>04/04/2020</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>5807</th>\n      <td>3506</td>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>47</td>\n      <td>M</td>\n      <td>21.2057962</td>\n      <td>72.7998015</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>23/06/2020</td>\n    </tr>\n    <tr>\n      <th>5808</th>\n      <td>3508</td>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>78</td>\n      <td>M</td>\n      <td>21.159747</td>\n      <td>72.838655</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>23/06/2020</td>\n    </tr>\n    <tr>\n      <th>5809</th>\n      <td>3509</td>\n      <td>Surat</td>\n      <td>East Zone - A</td>\n      <td>30</td>\n      <td>M</td>\n      <td>21.1975074</td>\n      <td>72.8450123</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>24/06/2020</td>\n    </tr>\n    <tr>\n      <th>5810</th>\n      <td>3510</td>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>43</td>\n      <td>M</td>\n      <td>21.2284002</td>\n      <td>72.8283048</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>23/06/2020</td>\n    </tr>\n    <tr>\n      <th>5811</th>\n      <td>3511</td>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>53</td>\n      <td>M</td>\n      <td>21.2440121</td>\n      <td>72.8502404</td>\n      <td>Cured/Discharged</td>\n      <td>Positive</td>\n      <td>23/06/2020</td>\n    </tr>\n  </tbody>\n</table>\n<p>3592 rows × 10 columns</p>\n</div>\n\n\n--------\n\n> ## F. Restricting Variables/ Columns - `fields`\n\n```python\ndatagovin.get_data(\"b9cfed4ca1a24f7aaffa88a8e1a2149c\",\n                    fields = [\"city\",\"zone\",\"age\",\"gender\",\"result\"],\n                   )\n# Get only the fields you need, by passing a list of valid fields in `fields`\n```\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>city</th>\n      <th>zone</th>\n      <th>age</th>\n      <th>gender</th>\n      <th>result</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>21</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>67</td>\n      <td>M</td>\n      <td>Death</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Surat</td>\n      <td>East Zone - B</td>\n      <td>50</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>26</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>55</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>47</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Surat</td>\n      <td>East Zone - B</td>\n      <td>34</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>39</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>20</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>32</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>53</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>45</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>60</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>65</td>\n      <td>M</td>\n      <td>Death</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>18</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>40</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Surat</td>\n      <td>East Zone - A</td>\n      <td>28</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>77</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Surat</td>\n      <td>East Zone - A</td>\n      <td>62</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Surat</td>\n      <td>East Zone - A</td>\n      <td>24</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>63</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>33</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>34</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>24</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>34</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>34</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>43</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>52</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>33</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>46</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>Surat</td>\n      <td>East Zone - B</td>\n      <td>38</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>70</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>44</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>45</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>36</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>40</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>Surat</td>\n      <td>East Zone - A</td>\n      <td>37</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n--------\n\n> ## G. Request data sorted by a valid `field`\n\n```python\ndatagovin.get_data(\"b9cfed4ca1a24f7aaffa88a8e1a2149c\",\n                fields = [\"city\",\"zone\",\"age\",\"gender\",\"result\"],\n                   sort_key = 'age',\n                   sort_order = 'asc'\n                   )\n\n# Sort `field` in Ascending order using `asc`=`Ascending`\n```\n\n<div>\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>city</th>\n      <th>zone</th>\n      <th>age</th>\n      <th>gender</th>\n      <th>result</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>1</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Surat</td>\n      <td>East Zone - A</td>\n      <td>1</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>1</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>1</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>2</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>2</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>2</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Surat</td>\n      <td>East Zone - A</td>\n      <td>2</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>2</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>3</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>34</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>34</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>34</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Surat</td>\n      <td>East Zone - A</td>\n      <td>34</td>\n      <td>M</td>\n      <td>Death</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>47</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>47</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Surat</td>\n      <td>East Zone - B</td>\n      <td>47</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Surat</td>\n      <td>East Zone - A</td>\n      <td>47</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>47</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>47</td>\n      <td>M</td>\n      <td>Death</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>60</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>60</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>60</td>\n      <td>M</td>\n      <td>Death</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>60</td>\n      <td>F</td>\n      <td>Death</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>60</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>60</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n```python\ndatagovin.get_data(\"b9cfed4ca1a24f7aaffa88a8e1a2149c\",\n                   fields = [\"city\",\"zone\",\"age\",\"gender\",\"result\"],                   \n                   sort_key = 'age',\n                   sort_order = 'desc'\n                   )\n# Sort `field` in Descending order using `desc`=`Descending`\n```\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>city</th>\n      <th>zone</th>\n      <th>age</th>\n      <th>gender</th>\n      <th>result</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>94</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>90</td>\n      <td>F</td>\n      <td>Death</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Surat</td>\n      <td>East Zone - B</td>\n      <td>89</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>88</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>88</td>\n      <td>F</td>\n      <td>Death</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>86</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>86</td>\n      <td>M</td>\n      <td>Death</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>85</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>85</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>54</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Surat</td>\n      <td>North Zone</td>\n      <td>54</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>54</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>54</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>54</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>54</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>54</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>42</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>42</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Surat</td>\n      <td>East Zone - A</td>\n      <td>42</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>42</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>42</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Surat</td>\n      <td>East Zone - B</td>\n      <td>42</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>42</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>27</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>Surat</td>\n      <td>West Zone</td>\n      <td>27</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>Surat</td>\n      <td>South East Zone</td>\n      <td>27</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>Surat</td>\n      <td>South West Zone</td>\n      <td>27</td>\n      <td>F</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>Surat</td>\n      <td>Central Zone</td>\n      <td>27</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>Surat</td>\n      <td>South Zone</td>\n      <td>27</td>\n      <td>M</td>\n      <td>Cured/Discharged</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n--------\n\n> ## H.  `ADVANCED` : Multi-Threading API-requests\n>>\n>> ### - Multi-Threading is disabled by default.\n>> ### - You can enable multi-threading for faster performance on large datasets.\n>>\n\n```python\ndatagovin.get_resource_info(\"dad7a738fd3b437dad31e1f844e9a575\")['TotalRecords']\n\n# Returns:\n# 20197\n```\n\n>> ### To Enable Multi-threading -\n```python\ndatagovin.enable_multithreading()\n\n# Returns:\n# Multi-Threaded API requests enabled.\n```\n\n```python\n%%timeit\ndatagovin.get_data(\"dad7a738fd3b437dad31e1f844e9a575\",num_results='all')\n\n# Returns:\n# 258 ms ± 11.5 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n```\n\n>> ### To Disable Multi-threading -\n\n```python\ndatagovin.disable_multithreading()\n# Returns:\n# Multi-Threaded API requests disabled.\n```\n\n```python\n%%timeit\ndatagovin.get_data(\"dad7a738fd3b437dad31e1f844e9a575\",num_results='all')\n# Returns:\n# 2.74 s ± 194 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\n```\n\n--------\n\n> ## **Documentation**\n>\n> - For the Python library, visit -\n>   \n>   > [pypi.org/project/datagovindia/](https://pypi.org/project/datagovindia/)\n>\n>   > [github.com/addypy/datagovindia](https://github.com/addypy/datagovindia)\n>   \n> - For the R/CRAN package, visit -\n>   \n>   > [cran.r-project.org/web/packages/datagovindia](https://cran.r-project.org/web/packages/datagovindia)\n>\n>   > [github.com/econabhishek/datagovindia](https://github.com/econabhishek/datagovindia)\n>\n> ### **Authors** :\n>\n> > - [Aditya Karan Chhabra](mailto:aditya0chhabra@gmail.com)\n>\n> > - [Abhishek Arora](mailto:abhishek.arora1996@gmail.com)\n>\n> ## **Meta-Data Updates** :\n>\n>  > Last Updated: **June 21, 2021**, `14:23 IST`\n>\n>  > Number of active APIs: **100170**\n>\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/addypy/datagovindia/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/datagovindia/",
    "keywords": "india government opendata ogd ogdindia datagovin",
    "license": "MIT",
    "maintainer": "Abhishek Arora",
    "maintainer_email": "",
    "name": "datagovindia",
    "package_url": "https://pypi.org/project/datagovindia/",
    "platform": "",
    "project_url": "https://pypi.org/project/datagovindia/",
    "project_urls": {
      "Download": "https://github.com/addypy/datagovindia/",
      "Homepage": "https://pypi.org/project/datagovindia/"
    },
    "release_url": "https://pypi.org/project/datagovindia/0.4/",
    "requires_dist": [
      "requests",
      "numpy",
      "pandas"
    ],
    "requires_python": "",
    "summary": "Python API wrapper for Government of India Open Government Data (OGD) platform data.gov.in",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10711198,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f4369c0dd9992b1be199a074bb444f425394d0bc359520a0755529fc6cc2ca1",
          "md5": "f4dbb241d799523064cbe1b965d79223",
          "sha256": "af485447e24d50d0baaef8c8e12a582b0532d0e99542e7f37b83be53e4e4e958"
        },
        "downloads": -1,
        "filename": "datagovindia-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4dbb241d799523064cbe1b965d79223",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31238,
        "upload_time": "2021-04-12T07:44:55",
        "upload_time_iso_8601": "2021-04-12T07:44:55.376103Z",
        "url": "https://files.pythonhosted.org/packages/0f/43/69c0dd9992b1be199a074bb444f425394d0bc359520a0755529fc6cc2ca1/datagovindia-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64d4e104f7520ce9b11235b119c36ed5913a7eaec60af27191b0c3a82fb10d06",
          "md5": "fb3f980f49b5a7d24dacb31c0fa12982",
          "sha256": "5f3392c83ca1c2a0339912aee6a620be2e138aadeb809eb3c07766bb99d59083"
        },
        "downloads": -1,
        "filename": "datagovindia-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb3f980f49b5a7d24dacb31c0fa12982",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36650,
        "upload_time": "2021-04-12T07:44:57",
        "upload_time_iso_8601": "2021-04-12T07:44:57.730028Z",
        "url": "https://files.pythonhosted.org/packages/64/d4/e104f7520ce9b11235b119c36ed5913a7eaec60af27191b0c3a82fb10d06/datagovindia-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8171a1a2f4f2872b8ba978f085d4b3be55216fb7e1d52fcbde986f3735518a75",
          "md5": "4c7205ba5f2a974ce42b70cbce378e4f",
          "sha256": "36be362330f8c6e716bce420e9ecb80614d43f7771775879ac885f94b74ca1f8"
        },
        "downloads": -1,
        "filename": "datagovindia-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c7205ba5f2a974ce42b70cbce378e4f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31497,
        "upload_time": "2021-04-12T12:14:54",
        "upload_time_iso_8601": "2021-04-12T12:14:54.730091Z",
        "url": "https://files.pythonhosted.org/packages/81/71/a1a2f4f2872b8ba978f085d4b3be55216fb7e1d52fcbde986f3735518a75/datagovindia-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cf966458a9771bd30cb10bff2d0fd2cb112e7e171bf28b608105ca1763dc4c2",
          "md5": "efeda88c1e815e1dd6fb51013a6d5510",
          "sha256": "b9f8351b9bb81c19752098aa767f9b04df6abe32e743153a7cc41c0dfe0dde89"
        },
        "downloads": -1,
        "filename": "datagovindia-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "efeda88c1e815e1dd6fb51013a6d5510",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37558,
        "upload_time": "2021-04-12T12:14:57",
        "upload_time_iso_8601": "2021-04-12T12:14:57.186278Z",
        "url": "https://files.pythonhosted.org/packages/1c/f9/66458a9771bd30cb10bff2d0fd2cb112e7e171bf28b608105ca1763dc4c2/datagovindia-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5144937a08fea54e56fe602fb647218ea2054a4447dc266fdd03e86d85538b8",
          "md5": "f6974b79d3d05ceb458ea17ccff6c6e8",
          "sha256": "02e8539c028c1fcbcf3ee8bb485ebae1526f26cfccef16354e3bb42280e8cfb7"
        },
        "downloads": -1,
        "filename": "datagovindia-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6974b79d3d05ceb458ea17ccff6c6e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32723,
        "upload_time": "2021-04-20T12:51:38",
        "upload_time_iso_8601": "2021-04-20T12:51:38.204192Z",
        "url": "https://files.pythonhosted.org/packages/d5/14/4937a08fea54e56fe602fb647218ea2054a4447dc266fdd03e86d85538b8/datagovindia-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ed597bb6eef0cd92ab2c6d04770f2f07b2977fc187bcd926829260ae446fadc",
          "md5": "207edad44e4a820745f7ebdb5dc46076",
          "sha256": "fd3518664a12b820624d5d2eb44c1f2eb533e52ba3355eff94bd7b48f619d2f3"
        },
        "downloads": -1,
        "filename": "datagovindia-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "207edad44e4a820745f7ebdb5dc46076",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38527,
        "upload_time": "2021-04-20T12:51:40",
        "upload_time_iso_8601": "2021-04-20T12:51:40.698788Z",
        "url": "https://files.pythonhosted.org/packages/1e/d5/97bb6eef0cd92ab2c6d04770f2f07b2977fc187bcd926829260ae446fadc/datagovindia-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1d9707cddc373299ebc9de77b59866abda255fd8c03930ae82e378594fab771",
          "md5": "92039e9ff1cede0bec44b02e9452d3ff",
          "sha256": "5a155057b265db32f763e91a7355cf84c849eeaf711a2d9ca84bcb398312bc59"
        },
        "downloads": -1,
        "filename": "datagovindia-0.4-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "92039e9ff1cede0bec44b02e9452d3ff",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 35086,
        "upload_time": "2021-06-22T10:27:30",
        "upload_time_iso_8601": "2021-06-22T10:27:30.174894Z",
        "url": "https://files.pythonhosted.org/packages/c1/d9/707cddc373299ebc9de77b59866abda255fd8c03930ae82e378594fab771/datagovindia-0.4-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60ca3100d41f2d24cc7f014d88b01ed6e64ba0ed96be4bb6c8d3bdd27bde24db",
          "md5": "93a43274fd52118d445162a4654d3f78",
          "sha256": "4fefde4f629f0138a3e1d9fd33b088814d03d623e409b4275bd6de637640ab8d"
        },
        "downloads": -1,
        "filename": "datagovindia-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "93a43274fd52118d445162a4654d3f78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41503,
        "upload_time": "2021-06-22T10:27:33",
        "upload_time_iso_8601": "2021-06-22T10:27:33.757587Z",
        "url": "https://files.pythonhosted.org/packages/60/ca/3100d41f2d24cc7f014d88b01ed6e64ba0ed96be4bb6c8d3bdd27bde24db/datagovindia-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1d9707cddc373299ebc9de77b59866abda255fd8c03930ae82e378594fab771",
        "md5": "92039e9ff1cede0bec44b02e9452d3ff",
        "sha256": "5a155057b265db32f763e91a7355cf84c849eeaf711a2d9ca84bcb398312bc59"
      },
      "downloads": -1,
      "filename": "datagovindia-0.4-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "92039e9ff1cede0bec44b02e9452d3ff",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 35086,
      "upload_time": "2021-06-22T10:27:30",
      "upload_time_iso_8601": "2021-06-22T10:27:30.174894Z",
      "url": "https://files.pythonhosted.org/packages/c1/d9/707cddc373299ebc9de77b59866abda255fd8c03930ae82e378594fab771/datagovindia-0.4-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60ca3100d41f2d24cc7f014d88b01ed6e64ba0ed96be4bb6c8d3bdd27bde24db",
        "md5": "93a43274fd52118d445162a4654d3f78",
        "sha256": "4fefde4f629f0138a3e1d9fd33b088814d03d623e409b4275bd6de637640ab8d"
      },
      "downloads": -1,
      "filename": "datagovindia-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "93a43274fd52118d445162a4654d3f78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 41503,
      "upload_time": "2021-06-22T10:27:33",
      "upload_time_iso_8601": "2021-06-22T10:27:33.757587Z",
      "url": "https://files.pythonhosted.org/packages/60/ca/3100d41f2d24cc7f014d88b01ed6e64ba0ed96be4bb6c8d3bdd27bde24db/datagovindia-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}