{
  "info": {
    "author": "Jamie Gabbay",
    "author_email": "bellissimogiorno@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Hypothesis",
      "Framework :: Pytest",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# The _Cairo smart test suite_\n\nAuthor: Jamie Gabbay\n\n## What is this?\n\nThis repository contains `cairotest`; an automated unit- and property-based test suite for the [Cairo programming language](https://www.cairo-lang.org/) based on [pytest](https://docs.pytest.org/) and [Hypothesis](https://hypothesis.readthedocs.io/en/latest/).\n\nI am pleased to share this with the Cairo community, and feedback and suggestions are welcome.\n\n\n## How to use Cairo test suite\n\n### Install\n\nJust use `pip` in the usual way.  For example on a Linux environment this should work:\n```\npip3 cairotest\n```\n\n### Examples\n\nA short tutorial is [`here`](https://github.com/bellissimogiorno/cairotest/tree/main/cairotest-demo).\n\nFor more robust usage see the [cairo-integer-types](https://github.com/bellissimogiorno/cairo-integer-types/tree/main/) library.  See any file whose name begins with `test_`, as in [`test_biguint.py`](https://github.com/bellissimogiorno/cairo-integer-types/blob/main/int_unbounded/test_bigint.py) or [`test_uint125.py`](https://github.com/bellissimogiorno/cairo-integer-types/blob/main/int_fixedwidth/test_uint125.py).\n\n\n### Install Cairo\n\nPresumably if you're interested in `cairotest` then you have Cairo installed, but just in case ...\n\n* [Official Cairo install instructions are here](https://www.cairo-lang.org/docs/quickstart.html#installation) and\n* [my personal setup script is below](#my-install)\n\n\n## Why do we need a Cairo test framework?\n\nSeriously?  You do!\n\nSee [this repo](https://github.com/bellissimogiorno/cairo-integer-types/tree/main/) for usage examples.\n\n## My setup\n\nThis is what I type to get set up and running with a Cairo development environment on a fresh machine running Debian linux (Ubuntu flavour).  Help yourself (but don't blame me if something goes wrong):\n\n```\n# Make sure the ambient Debian OS is up-to-date\nsudo apt update\nsudo apt upgrade\n\n# Cairo is developed on Python 3.7 so let's get that.\nsudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libsqlite3-dev libreadline-dev libffi-dev wget libbz2-dev libgmp-dev\n# Download Python 3.7 and cd into directory\nwget https://www.python.org/ftp/python/3.7.13/Python-3.7.13.tgz\ntar xvzf Python-3.7.13.tgz\ncd Python-3.7.13\n# Configure compilation\n./configure --enable-optimizations\n# Make (8 core system)\nmake -j 8\n# Install\n# IMPORTANT: altinstall means we don't overwrite your machine's native version of Python!\nsudo make altinstall\n\n# Create Python3.7 virtual environment\npython3.7 -m venv ~/cairo_venv-3.7\n# Jump into the venv\nsource ~/cairo_venv-3.7/bin/activate\n\n# Install prerequisites (works for Cairo 0.8)\npip3 install jinja2 pytest pytest-reverse hypothesis cairo-lang black pytest-xdist[psutil]\n\n# Now install cairotest\npip3 install cairotest\n```\n\n## Feedback and comments ...\n\n... are very welcome.  Thanks in advance.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bellissimogiorno/cairotest",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cairotest",
    "package_url": "https://pypi.org/project/cairotest/",
    "platform": null,
    "project_url": "https://pypi.org/project/cairotest/",
    "project_urls": {
      "Homepage": "https://github.com/bellissimogiorno/cairotest"
    },
    "release_url": "https://pypi.org/project/cairotest/0.2.3/",
    "requires_dist": [
      "hypothesis (>=6.39.4)",
      "pytest (>=7.1.1)"
    ],
    "requires_python": "",
    "summary": "A smart test framework for cairo-lang and starknet based on pytest and hypothesis",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13592622,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b5d5f943c0fd1c503a10d980abd2b08903e7cd426751bf9a8883589f3e91eca",
          "md5": "69d3e7f8d814eba0fee674faf3edc9c7",
          "sha256": "cbdf0039848373464973cfce51132358f89b5c5330adc28d9aeb952c0247d9a0"
        },
        "downloads": -1,
        "filename": "cairotest-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69d3e7f8d814eba0fee674faf3edc9c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21702,
        "upload_time": "2022-04-06T22:14:35",
        "upload_time_iso_8601": "2022-04-06T22:14:35.057014Z",
        "url": "https://files.pythonhosted.org/packages/7b/5d/5f943c0fd1c503a10d980abd2b08903e7cd426751bf9a8883589f3e91eca/cairotest-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d017beb27e20aafbf95b3abdd09a34ddd4adc00126d46b189dbf3667b07c901",
          "md5": "04b773de3d95bfff69874c291835553c",
          "sha256": "cd37ad0b977de4a568503064de0447ccf32f8f5be2caac11fef3d8abec65641b"
        },
        "downloads": -1,
        "filename": "cairotest-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04b773de3d95bfff69874c291835553c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21691,
        "upload_time": "2022-04-06T22:24:00",
        "upload_time_iso_8601": "2022-04-06T22:24:00.507141Z",
        "url": "https://files.pythonhosted.org/packages/8d/01/7beb27e20aafbf95b3abdd09a34ddd4adc00126d46b189dbf3667b07c901/cairotest-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6715203a52cec30892a7f7045c0ce3ce8d07135e7da7e5e305cd3d574c7a2ec4",
          "md5": "73ef28c3948bb8289c42fcae42eeedd6",
          "sha256": "d3c87e24be6726072b5f1a5eb8f6fc1209d55b794c2d515397691825bb86e00e"
        },
        "downloads": -1,
        "filename": "cairotest-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73ef28c3948bb8289c42fcae42eeedd6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21780,
        "upload_time": "2022-04-22T15:44:10",
        "upload_time_iso_8601": "2022-04-22T15:44:10.699845Z",
        "url": "https://files.pythonhosted.org/packages/67/15/203a52cec30892a7f7045c0ce3ce8d07135e7da7e5e305cd3d574c7a2ec4/cairotest-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6715203a52cec30892a7f7045c0ce3ce8d07135e7da7e5e305cd3d574c7a2ec4",
        "md5": "73ef28c3948bb8289c42fcae42eeedd6",
        "sha256": "d3c87e24be6726072b5f1a5eb8f6fc1209d55b794c2d515397691825bb86e00e"
      },
      "downloads": -1,
      "filename": "cairotest-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "73ef28c3948bb8289c42fcae42eeedd6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21780,
      "upload_time": "2022-04-22T15:44:10",
      "upload_time_iso_8601": "2022-04-22T15:44:10.699845Z",
      "url": "https://files.pythonhosted.org/packages/67/15/203a52cec30892a7f7045c0ce3ce8d07135e7da7e5e305cd3d574c7a2ec4/cairotest-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}