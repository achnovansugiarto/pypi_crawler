{
  "info": {
    "author": "Sjoerd Gnodde",
    "author_email": "sgnodde@hhdelfland.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\r\n![logo_mlflowcollab](examples/img/logo_mlflowcollab_smaller_margins.png)\r\n\r\n**MLFlowCollab is een wrapper die het werken met [MLFlow](#mlflow) gemakkelijker en sneller maakt, vooral op het gebied van samenwerken.**\r\n\r\n[MLFlow](#mlflow) is een handige, simpele, open source en gratis manier om machine learning experimenten bij te houden (onderdeel van MLOps). Echter is er ook een tweetal nadelen aan MLOps die deze module tracht op te lossen:\r\n\r\n1. Samenwerken op een centrale locatie, zoals MS Teams mappen werkt onhandig.\r\n2. Het loggen van standaard paketten zoals scikit-learn kan nÃ³g sneller en makkelijker.\r\n\r\nZie [Achtergrond](#achtergrond) voor een uitgebreide beschrijving wie dit pakket wanneer nodig kan hebben. \r\n\r\n# Aan de slag\r\n## Installatie\r\nInstalleren kan in je Command Prompt / Anaconda Prompt (al dan niet in een virtuele environment) met:\r\n\r\n```pip install git+https://gitlab.com/hetwaterschapshuis/kenniscentrum/tooling/mlflowcollab.git```\r\n\r\nOf [clone de repository](https://docs.gitlab.com/ee/gitlab-basics/start-using-git.html#clone-a-repository) en \r\nga in de cmd naar de bovenste map van `mlflowcollab` (waarin `setup.py` staat) en run het \r\ncommand `pip install .` of in de edit mode `pip install -e .`\r\n\r\n## mlflowwrapper\r\n\r\nDe module `mlflowcollab` werkt met de package `mlflowwrapper`. \r\n\r\nDe workflow is als volgt:\r\n\r\n1. Creeer een folder op je Teams omgeving, waarbij de laagste folder `\\mlruns` is.\r\n1. Setup een MLFlow experiment met `setup_mflow`. Hierin geef je een naam en de locatie van je experiment mee, inclusief die `\\mlruns`.\r\n1. Run `mlwrapper.get_directory_prompt()` in je IDE.  Een map boven de tracking uri wordt gekopieerd naar je clipboard.\r\n1. Open een instance van Anaconda Prompt. \r\n1. Typ `cd` en dan `Shift`+`Insert`, `Enter`. Hiermee ga je naar de goede locatie om MLFlow op te starten.\r\n1. Typ `mlflow ui`, `Enter`.\r\n1. Kopieer (selecteer + rechtermuisknop) de url waar MLFlow is gestart en plak deze in je browser.\r\n1. Zorg ervoor dat de Anaconda Prompt open blijft staan en dat de run van MLFlow UI niet geblokkeerd wordt.\r\n1. Run een experiment met `mlflow_run_sklearn(Xtrain, ytrain, Xtest, ytest, sklearn_model)`.\r\n1. Je kan MLFlow uiteindelijk afsluiten met `Ctrl`+`C` in je prompt.\r\n\r\n## Voorbeeld\r\nEen voorbeeld van bijna alle functionaliteiten is te vinden in [examples/usage_mlflowcollab.ipynb](examples/usage_mlflowcollab.ipynb).\r\n\r\n# Achtergrond\r\n## MLFlow \r\n![](examples/img/mlflow_in_browser.png)\r\n\r\n[MLFlow](https://mlflow.org/) is een pakket dat het gemakkelijk maakt om machine learning experimenten te loggen. \r\n\r\nAls je bezig bent met het optimaliseren van input data, hyperparameters en soorten modellen is het niet altijd nuttig om iedere keer de volledige code op te slaan en dan de score te printen: dit vergelijkt moeilijk en zorgt ervoor dat je heel veel code hebt. \r\n\r\nMet MLFlow log je steeds experimenten en kun je al je instellingen/hyperparameters etc. meegeven, samen met de score (of verschillende scores). Deze kun je daarna vergelijken in een scatter plot, of bijvoorbeeld een contour plot.\r\n\r\n\r\n![](examples/img/vergelijk_scores.png)\r\n\r\nEchter is er een aantal stappen in MLFlow die omslachtig of onhandig zijn, waaronder het gebruiken van een gedeelde map om experimenten te loggen. In MLFlowCollab wordt met een wrapper om MLFlow het loggen van experimenten een stuk makkelijker gemaakt.\r\n\r\n## Voor wie is *MLFlowCollab* nuttig?\r\n* Iedereen die nog niet alle ins- and outs kent van MLFlow maar er wel graag mee aan de slag wil\r\n* Iedereen die op een laagdrempelige manier graag samen wil werken met anderen met MLFlow\r\n* Iedereen die meer wil leren over MLFlow: met behulp van [het voorbeeld](examples/usage_mlflowcollab.ipynb) en [`mlflowwrapper`](mlflowcollab/mlflowwrapper.py) zie je veel over hoe je het pakket handig kunt gebruiken\r\n\r\n\r\n## Wat zijn handige plekken om MLFlow te delen?\r\nOm MLFlow te delen met MLFlowCollab, moet je de bestanden die MLFlow wegschrijft op een gedeelde plek zetten. Dit kan bijvoorbeeld een\r\n* gedeelde Teams/OneDrive map,\r\n* gedeelde netwerkschijf,\r\n* op een andere manier gedeelde online map,\r\n* of een verzonden zip-map zijn.\r\n\r\n## Wat zijn eventuele alternatieven?\r\nBijvoorbeeld\r\n* [Zelf hosten van een MLFlow server](https://github.com/mlflow/mlflow/issues/40)\r\n* [Azure Machine Learning](https://azure.microsoft.com/nl-nl/services/machine-learning/) (uitgebreider en met eigen rekenmodules, niet gratis)\r\n* [Amazon SageMaker](https://aws.amazon.com/sagemaker/) (vergelijkbaar met Azure Machine Learning)\r\n\r\n\r\n## Maintainer\r\nDe beheerder van dit pakket is Sjoerd Gnodde (Hoogheemraadschap van Delfland).\r\n\r\nsgnodde {at} hhdelfland {dot} nl - https://gitlab.com/SjoerdGnHHDelfland - https://github.com/SjoerdGn/ \r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://dev.azure.com/HWH-WE-DEEP/VV-WAM/_git/mlflowcollab",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlflowcollab",
    "package_url": "https://pypi.org/project/mlflowcollab/",
    "platform": null,
    "project_url": "https://pypi.org/project/mlflowcollab/",
    "project_urls": {
      "Homepage": "https://dev.azure.com/HWH-WE-DEEP/VV-WAM/_git/mlflowcollab"
    },
    "release_url": "https://pypi.org/project/mlflowcollab/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Gebruik MLFlow op een centrale locatie",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13501258,
  "releases": {
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3662e9619b6b3d6f1c31b5b1272092dd3d6ce39fc8bb089bb5863db03beffee3",
          "md5": "08446c90003ef8afe0a7a29a97f578b4",
          "sha256": "2ac98bc5a839eb600a94a1ff3734688486b20a098b2efa2e07d4b5023ce4e614"
        },
        "downloads": -1,
        "filename": "mlflowcollab-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "08446c90003ef8afe0a7a29a97f578b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11893,
        "upload_time": "2022-04-13T11:52:01",
        "upload_time_iso_8601": "2022-04-13T11:52:01.398828Z",
        "url": "https://files.pythonhosted.org/packages/36/62/e9619b6b3d6f1c31b5b1272092dd3d6ce39fc8bb089bb5863db03beffee3/mlflowcollab-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3662e9619b6b3d6f1c31b5b1272092dd3d6ce39fc8bb089bb5863db03beffee3",
        "md5": "08446c90003ef8afe0a7a29a97f578b4",
        "sha256": "2ac98bc5a839eb600a94a1ff3734688486b20a098b2efa2e07d4b5023ce4e614"
      },
      "downloads": -1,
      "filename": "mlflowcollab-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "08446c90003ef8afe0a7a29a97f578b4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11893,
      "upload_time": "2022-04-13T11:52:01",
      "upload_time_iso_8601": "2022-04-13T11:52:01.398828Z",
      "url": "https://files.pythonhosted.org/packages/36/62/e9619b6b3d6f1c31b5b1272092dd3d6ce39fc8bb089bb5863db03beffee3/mlflowcollab-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}