{
  "info": {
    "author": "XuMing",
    "author_email": "xuming624@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Natural Language :: Chinese (Simplified)",
      "Natural Language :: Chinese (Traditional)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# wordrank\n[![PyPI version](https://badge.fury.io/py/wordrank.svg)](https://badge.fury.io/py/wordrank)\n[![Contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg)](CONTRIBUTING.md)\n[![GitHub contributors](https://img.shields.io/github/contributors/shibing624/wordrank.svg)](https://github.com/shibing624/wordrank/graphs/contributors)\n[![License Apache 2.0](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](LICENSE)\n[![python_vesion](https://img.shields.io/badge/Python-3.5%2B-green.svg)](requirements.txt)\n[![GitHub issues](https://img.shields.io/github/issues/shibing624/wordrank.svg)](https://github.com/shibing624/wordrank/issues)\n[![Wechat Group](http://vlog.sfyc.ltd/wechat_everyday/wxgroup_logo.png?imageView2/0/w/60/h/20)](#Contact)\n\nWord Rank(term weighting), calculate context-aware bag-of-words term weights for documents and queries.\n\n**wordrank**基于特征工程的词重要度分析工具，支持词权重打分、词干提取等query分析，扩展性强，开箱即用。\n\n\n**Guide**\n\n- [Feature](#Feature)\n- [Evaluation](#Evaluation)\n- [Install](#install)\n- [Usage](#usage)\n- [Contact](#Contact)\n- [Reference](#reference)\n\n# Feature\n\n如何计算query中各word的权重呢？\n\n\n## 思路\n### 特征工程的解决思路\n1. 实现时采用模型打分方法，以搜索query为原始语料，人工标注句子中各词重要度\n\n> 重要度共分4级：\n> * Super important：主要包括POI核心词，比如“方特、欢乐谷”\n> * Required：包括行政区词、品类词等，比如“北京 温泉”中“北京”和“温泉”都很重要\n> * Important：包括品类词、门票等，比如“顺景 温泉”中“温泉”相对没有那么重要，用户搜“顺景”大部分都是温泉的需求\n> * Unimportant：包括语气词、代词、泛需求词、停用词等\n\n上例中可见“温泉”在不同的query中重要度是不同的。\n\n2. 模型方面采用树模型（XGBoost等）进行训练，得到权重分类模型后在线上预测\n![term-weighting](./docs/gbdt.png)\n\n### 深度模型的解决思路\n* 利用深度学习模型来学习term重要性，比如通过训练基于BiLSTM+Attention的query意图分类模型\n* 基于Seq2Seq/Transformer训练的query翻译改写模型得到的attention权重副产物再结合其他策略或作为上述分类回归模型的特征也可以用于衡量term的重要性\n* 利用BERT模型训练端到端的词分级模型，类似序列标注模型，后接CRF判定词重要性权重输出\n\n\n## 解决方法\n### 特征方法\n* 文本特征：包括Query长度、Term长度，Term在Query中的偏移量，term词性、长度信息、term数目、位置信息、句法依存tag、是否数字、是否英文、是否停用词、是否专名实体、是否重要行业词、embedding模长、删词差异度、以及短语生成树得到term权重等\n* 统计特征：包括PMI、IDF、textrank值、前后词互信息、左右邻熵、独立检索占比（term单独作为query的qv/所有包含term的query的qv和）、统计概率、idf变种iqf\n* 语言模型特征：整个query的语言模型概率 / 去掉该Term后的Query的语言模型概率\n\n### 深度模型\n* BERT CLS + classification\n* Seq2Seq + Attention\n\n# Evaluation\n\n| Model | Dataset | QPS |\n| :---- | :-: | :-: |\n| TextRank | - | - |\n| TFIDF | - | - |\n| WordRank | - | - |\n\n> 结果值使用F1\n\n# Install\n* From pip:\n```shell\npip3 install -U wordrank\n```\n* From source：\n```shell\ngit clone https://github.com/shibing624/wordrank.git\ncd wordrank\npython3 setup.py install\n```\n\n### 依赖库\n\n```shell\npip3 install -U pycorrector\n```\n主要包括以下Python包：\n* [pycorrector](https://github.com/shibing624/pycorrector)\n* [text2vec](https://github.com/shibing624/text2vec)(optional)\n\n### 依赖数据\n* 千兆中文文本训练的语言模型[zh_giga.no_cna_cmn.prune01244.klm(2.8G)](https://deepspeech.bj.bcebos.com/zh_lm/zh_giga.no_cna_cmn.prune01244.klm)，模型由pycorrector库自动下载于：~/.pycorrector/datasets/zh_giga.no_cna_cmn.prune01244.klm 。\n* 中文文本匹配模型[shibing624/text2vec-base-chinese](https://huggingface.co/shibing624/text2vec-base-chinese) ，模型由transformers库自动下载于：~/.cache/huggingface/transformers/ 下。\n\n# Usage\n\n### 词权重计算\n```python\nimport wordrank\n\nq = '哪里下载电视剧周恩来？'\nr = wordrank.rank(q)\nprint(r)\n```\n\noutput:\n```shell\n[('哪里', '1'), ('下载', '3'), ('电视剧', '3'), ('周恩来', '1'), ('？', 0)]\n```\n> 3：核心词；2：限定词；1：可省略词；0：干扰词。\n\n\n### 模型训练和预测\n\n训练：\n```shell\ncd examples\npython train.py\n```\n\n预测：\n```shell\ncd examples\npython infer.py\n```\n### 命令行\n\n使用示例： python -m wordrank\n\n预测文本`井冈山景点介绍`的词重要度\n\n命令行选项（训练领域模型）：\n```\n使用: python -m wordrank --train\n\n如果没有指定训练文件，则使用默认训练样本`extra_data/train.csv`。\n```\n\n\n`--help`选项输出：\n```shell\n$> python -m wordrank --help\n\nusage: __main__.py [-h] [--train] [--train_file TRAIN_FILE]\n                   [--col_sep COL_SEP] [--segment_sep SEGMENT_SEP]\n                   [--stopwords_path STOPWORDS_PATH]\n                   [--person_name_path PERSON_NAME_PATH]\n                   [--place_name_path PLACE_NAME_PATH]\n                   [--common_char_path COMMON_CHAR_PATH]\n                   [--domain_sample_path DOMAIN_SAMPLE_PATH] [--ngram NGRAM]\n                   [--pmi_path PMI_PATH] [--entropy_path ENTROPY_PATH]\n                   [--model_path MODEL_PATH] [--query QUERY]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --train               train or predict\n  --train_file TRAIN_FILE\n                        train file, file encode utf-8.\n  --col_sep COL_SEP     column sep\n  --segment_sep SEGMENT_SEP\n                        segment_sep\n  --stopwords_path STOPWORDS_PATH\n                        stop word file\n  --person_name_path PERSON_NAME_PATH\n                        person name file\n  --place_name_path PLACE_NAME_PATH\n                        place name file\n  --common_char_path COMMON_CHAR_PATH\n                        common_char_path\n  --domain_sample_path DOMAIN_SAMPLE_PATH\n                        domain_sample_path\n  --ngram NGRAM         common_char_path\n  --pmi_path PMI_PATH   pmi_path\n  --entropy_path ENTROPY_PATH\n                        entropy_path\n  --model_path MODEL_PATH\n                        model file path to save\n  --query QUERY         input query\n\n```\n\n### 延迟加载机制\n\nwordrank 采用延迟加载，`import wordrank` 和 `from wordrank import WordRank` 不会立即触发词典及模型的加载，一旦有必要才开始加载词典。\n如果你想手工初始`wordrank`，也可以手动初始化。\n```python\nfrom wordrank import WordRank\nmodel = WordRank()\nmodel.check_inited()  # 手动初始化（可选）\n```\n\n你可以改变主模型的路径:\n```python\nfrom wordrank import WordRank\nmodel = WordRank(model_path='/your/model/path')\nmodel.check_inited()\n```\n\n\n# Contact\n\n- Issue(建议)：[![GitHub issues](https://img.shields.io/github/issues/shibing624/wordrank.svg)](https://github.com/shibing624/wordrank/issues)\n- 邮件我：xuming: xuming624@qq.com\n- 微信我：加我*微信号：xuming624*, 进Python-NLP交流群，备注：*姓名-公司名-NLP*\n<img src=\"http://42.193.145.218/github_data/xm_wechat_erweima.png\" width=\"200\" />\n\n\n# Citation\n\n如果你在研究中使用了wordrank，请按如下格式引用：\n\n```latex\n@software{wordrank,\n  author = {Xu Ming},\n  title = {wordrank: A Tool for query term weighting},\n  year = {2021},\n  url = {https://github.com/shibing624/wordrank},\n}\n```\n\n# License\n\n\n授权协议为 [The Apache License 2.0](LICENSE)，可免费用做商业用途。请在产品说明中附加wordrank的链接和授权协议。\n\n\n# Contribute\n项目代码还很粗糙，如果大家对代码有所改进，欢迎提交回本项目，在提交之前，注意以下两点：\n\n - 在`tests`添加相应的单元测试\n - 使用`python setup.py test`来运行所有单元测试，确保所有单测都是通过的\n\n之后即可提交PR。\n\n\n# Reference\n\n- [Context-Aware Document Term Weighting for Ad-Hoc Search](http://www.cs.cmu.edu/~zhuyund/papers/TheWebConf_2020_Dai.pdf)\n- [term weighting](https://zhuanlan.zhihu.com/p/90957854)\n- [DeepCT](https://github.com/AdeDZY/DeepCT)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shibing624/wordrank",
    "keywords": "wordrank,term weighting,textrank,word rank,wordweight",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wordrank",
    "package_url": "https://pypi.org/project/wordrank/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/wordrank/",
    "project_urls": {
      "Homepage": "https://github.com/shibing624/wordrank"
    },
    "release_url": "https://pypi.org/project/wordrank/0.1.6/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "word rank, context-aware bag-of-words term weights for query and document.",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13167880,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a462985d0c0c3ab33aeefa628211062148cafa849ebaf10de8ba1664e3d95843",
          "md5": "273fe3c022191f89abe8656f2324c8fa",
          "sha256": "40973e087e4a02dfdcf929b0c2945d2a8574819ef8e82a7b55585fa6672ca893"
        },
        "downloads": -1,
        "filename": "wordrank-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "273fe3c022191f89abe8656f2324c8fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9464,
        "upload_time": "2021-01-21T12:29:47",
        "upload_time_iso_8601": "2021-01-21T12:29:47.591538Z",
        "url": "https://files.pythonhosted.org/packages/a4/62/985d0c0c3ab33aeefa628211062148cafa849ebaf10de8ba1664e3d95843/wordrank-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "575cf6eea63a75c5fa43baf96d9cb987ce856788b920cfce5aa10ea21bdf86d4",
          "md5": "ad4c6a9f985ab5737aad4f63d7aad531",
          "sha256": "89f9776207d6438cb4a17761682aa545c11a4cf8f3f240ac90ef4b4c16b43027"
        },
        "downloads": -1,
        "filename": "wordrank-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ad4c6a9f985ab5737aad4f63d7aad531",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 405019,
        "upload_time": "2021-01-24T14:50:55",
        "upload_time_iso_8601": "2021-01-24T14:50:55.321526Z",
        "url": "https://files.pythonhosted.org/packages/57/5c/f6eea63a75c5fa43baf96d9cb987ce856788b920cfce5aa10ea21bdf86d4/wordrank-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c24b8e4e62b22026860d101d809824b6d7fa5f017e203920a959ed5872b04ea4",
          "md5": "af901e448d2d7cf1cb5b2878297b18e1",
          "sha256": "3aeb42594309bc5c6a60728fb8afa9614059cae5640ec487b08b22f65b3b9c60"
        },
        "downloads": -1,
        "filename": "wordrank-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "af901e448d2d7cf1cb5b2878297b18e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1312053,
        "upload_time": "2021-01-24T14:58:08",
        "upload_time_iso_8601": "2021-01-24T14:58:08.280708Z",
        "url": "https://files.pythonhosted.org/packages/c2/4b/8e4e62b22026860d101d809824b6d7fa5f017e203920a959ed5872b04ea4/wordrank-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0010e41e8c4e0b2701fa6d78a2583f3afd87b59b7c8a4c85b1ec8d7d4f17e7b9",
          "md5": "e4df25ac92a48ec87fd8d68dc4756123",
          "sha256": "5c8a9d8653f6b7bc0a9bc19cdb52cc77306cc3022f2e83d784e283e6b56bc948"
        },
        "downloads": -1,
        "filename": "wordrank-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e4df25ac92a48ec87fd8d68dc4756123",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1514459,
        "upload_time": "2022-01-06T14:18:21",
        "upload_time_iso_8601": "2022-01-06T14:18:21.337631Z",
        "url": "https://files.pythonhosted.org/packages/00/10/e41e8c4e0b2701fa6d78a2583f3afd87b59b7c8a4c85b1ec8d7d4f17e7b9/wordrank-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "858322ee8a94f9e53764699c3ad5318a4ea8681e00049b3ed2e3d6d551d6d9a5",
          "md5": "5f05e673cb8844da484619d29e4cbe44",
          "sha256": "b319fa1a4e63ba7bd9b7a1613689e5baacba2ad1a86ca5992d2f0498160a7432"
        },
        "downloads": -1,
        "filename": "wordrank-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5f05e673cb8844da484619d29e4cbe44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1538129,
        "upload_time": "2022-03-14T04:37:08",
        "upload_time_iso_8601": "2022-03-14T04:37:08.914724Z",
        "url": "https://files.pythonhosted.org/packages/85/83/22ee8a94f9e53764699c3ad5318a4ea8681e00049b3ed2e3d6d551d6d9a5/wordrank-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cd5f3fe9048312ff1765704244389efcd3e3fb82511a78fd05a5b3a1ff11c81",
          "md5": "df4c41da88911cdb4da8a6034414a901",
          "sha256": "06cb221e9753416d342017f12546b198e21197b2841a54114e419c66fcc15e3f"
        },
        "downloads": -1,
        "filename": "wordrank-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "df4c41da88911cdb4da8a6034414a901",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1523064,
        "upload_time": "2022-03-14T09:28:30",
        "upload_time_iso_8601": "2022-03-14T09:28:30.804295Z",
        "url": "https://files.pythonhosted.org/packages/7c/d5/f3fe9048312ff1765704244389efcd3e3fb82511a78fd05a5b3a1ff11c81/wordrank-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7cd5f3fe9048312ff1765704244389efcd3e3fb82511a78fd05a5b3a1ff11c81",
        "md5": "df4c41da88911cdb4da8a6034414a901",
        "sha256": "06cb221e9753416d342017f12546b198e21197b2841a54114e419c66fcc15e3f"
      },
      "downloads": -1,
      "filename": "wordrank-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "df4c41da88911cdb4da8a6034414a901",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 1523064,
      "upload_time": "2022-03-14T09:28:30",
      "upload_time_iso_8601": "2022-03-14T09:28:30.804295Z",
      "url": "https://files.pythonhosted.org/packages/7c/d5/f3fe9048312ff1765704244389efcd3e3fb82511a78fd05a5b3a1ff11c81/wordrank-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}