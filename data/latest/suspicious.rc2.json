{
  "info": {
    "author": "Kiril Videlov",
    "author_email": "kiril@codeball.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development",
      "Topic :: Utilities"
    ],
    "description": "# Suspicious\n\n<p align=\"center\">\n  <img width=\"200\" src=\"https://raw.githubusercontent.com/sturdy-dev/suspicious/main/docs/ai_dog_wtf.png\">\n</p\n\n<p align='center'>\n    Sniffs possibly suspicious stuff in your source code. 100% local, no data leaves your computer.\n</p>\n<p align='center'>\n    <a href=\"https://github.com/sturdy-dev/suspicious/blob/main/LICENSE.txt\">\n        <img alt=\"GitHub\"\n        src=\"https://img.shields.io/github/license/sturdy-dev/suspicious\">\n    </a>\n    <a href=\"https://pypi.org/project/suspicious\">\n     <img alt=\"PyPi\"\n src=\"https://img.shields.io/pypi/v/suspicious\">\n    </a>\n</p>\n<p align=\"center\">\n  <a href=\"#wtf-is-this\">ðŸ¤” WTF is this</a> â€¢\n  <a href=\"#demo\">ðŸª„ Demos</a> â€¢\n  <a href=\"#installation\">ðŸ”§ Installation</a> â€¢\n  <a href=\"#usage\">ðŸ’» Usage</a> â€¢\n  <a href=\"#how-does-it-work\">ðŸ§  How it works</a>\n</p>\n\n-------------------------------------------------------------------\n\n## WTF is this?\n\nThis is a CLI application that analyzes a source code file using an AI model. It then shows you parts that look suspicious to it.\n\nIt does **not** use rules or static analysis the way a linter tool would. Instead, the model generates its own code suggestions based on the surrounding context. Check out [how it works](#how-does-it-work).\n\n> NB: All processing is done on your hardware and no data is transmitted to the Internet\n\nExample output:\n\n![example results](./docs/screenshot.png)\n\n## Demo\n\nHere's the output of running the application on its own source files (so meta).\n\n- `cli.py` â€” [source code](./src/suspicious/cli.py) â†’ [generated output](https://sturdy-dev.github.io/suspicious/demos/cli_py/)\n- `render.py` â€” [source code](./src/suspicious/render.py) â†’ [generated output](https://sturdy-dev.github.io/suspicious/demos/render_py/)\n- `sus.py` â€” [source code](./src/suspicious/sus.py) â†’ [generated output](https://sturdy-dev.github.io/suspicious/demos/sus_py/)\n\n## Have I seen this before?\n\nThere was this post [AI found a bug in my code](https://news.ycombinator.com/item?id=33632610) on Hacker News which was pretty cool. I wanted to try it on my own code, so I went ahead and built my implementation of the idea.\n\n## Installation\n\nYou can install `sus` via `pip` or from the source.\n\n### Pip (MacOS, Linux, Windows)\n\n```bash\npip3 install suspicious\n```\n\n### From source\n\n```bash\ngit clone git@github.com:sturdy-dev/suspicious.git\ncd suspicious\npython -m pip install .\n```\n\n## Usage\n\nYou can run the program like this:\n\n```bash\nsus /path/to/file.py\n```\n\nThis will generate and open an `.html` file with the results.\n\n- `grey` means prediction is the same as the original\n- `light grey` means the model had a different prediction but with super low confidence\n- `light red` means things are looking a little sus\n- `red` means there was a different prediction and confidence was higher\n\n### Practical usage\n\nUnclear. You run `sus` on a file and skim over the red stuff, maybe it spots something you missed. Ping me on [twitter](https://twitter.com/krlvi) if you catch something cool with it.\n\n## How does it work?\n\nIn a nutshell, it feeds a tokenized representation of your source text into a Transformer model and asks the model to predict one token at a time using [Masked Language Modelling](https://huggingface.co/docs/transformers/tasks/language_modeling#masked-language-modeling).\n\nFor a general overview about Transformer models, check out [The Illustrated Transformer](https://jalammar.github.io/illustrated-transformer/) article by Jay Alammar, which helped me out in understanding the core ideas.\n\n`sus` uses a model called [UniXcoder](https://github.com/microsoft/CodeBERT/tree/master/UniXcoder) which has been trained on the [CodeSearchNet](https://huggingface.co/datasets/code_search_net) dataset. To do the MLM (masked language modelling) we are adding a `lm_head` layer.\n\nWhen `sus` processes your code, it first tokenizes the text, where a token could be a special character or programming language keyword, English word or part of a word.\n\nBefore feeding the sequence of token ids to the model, one or multiple tokens are replaced with a special `<mask>` token. After feeding the input through the network, we extract just the value at the masked location. This masking is done in a loop for each token to generate individual predictions.\n\nSince this process is impractically slow, instead of masking one token at a time, `sus` masks 10% of the tokens, making sure that the masked locations are spread out (so that there is sufficient context around each prediction site).\n\nThe output of this entire process is a list of structs that contain the original and predicted values for each token. Example:\n\n```json5\n{\n    \"idx\": 0, // position in sequence\n    \"original\": \"foo\", // as originally written in the source file\n    \"predicted\": \"bar\", // what the model predicted\n    \"cosine_similarity\": 0.23, // how different the prediction is from the original in the vector space\n    \"probability\": 0.92, // how confident the model is in it's prediction\n}\n```\n\nThis is then fed into an `html` template to be rendered for the user. Easy-peasy.\n\n### Model\n\n`sus` uses the decoder of [UniXcoder](https://github.com/microsoft/CodeBERT/tree/master/UniXcoder), specifically the [unixcoder-base-nine](https://huggingface.co/microsoft/unixcoder-base-nine) checkpoint. What's cool is that it's only 500 MB and ~120M parameters, which means it's quick to download and fast enough to run locally.\n\nLarger models produce higher quality outputs, but you need to run the inference on a server.\n\n## Supported languages\n\nYou can try `sus` on any source file, but you can expect best results with the following languages:\n\n- java\n- ruby\n- python\n- php\n- javascript\n- go\n- c\n- c++\n- c#\n\n## Bugs and limitations\n\n- Accuracy â€” `sus` is meant to be executed locally (aka not sending code to a server), which puts some constraints on the AI model size. Larger models will produce higher quality results, but they can be tens of GB in size and without a beefy GPU could take a long time to generate the output. Because of this, `sus` uses a [modestly sized model](#model).\n- Large files â€” The [model](#model) also puts constraints on the input size (analyzed file size). `sus` works around this by batching the input, but as a result of this, batches are not aware of the 'context' / code that is in other batches. Files are split in batches of 2500 characters which is super crude and is meant to correspond to ~1024 tokens.\n- [Masking](#how-does-it-work) is done on per token basis. It could be interesting to first generate syntax tree from the code and then mask the entire node instead.\n\n## License\n\nSemantic Code Search is distributed under [AGPL-3.0-only](LICENSE.txt). For Apache-2.0 exceptions â€” <kiril@codeball.ai>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sturdy-dev/suspicious",
    "keywords": "code analysis",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "suspicious",
    "package_url": "https://pypi.org/project/suspicious/",
    "platform": null,
    "project_url": "https://pypi.org/project/suspicious/",
    "project_urls": {
      "Homepage": "https://github.com/sturdy-dev/suspicious"
    },
    "release_url": "https://pypi.org/project/suspicious/0.1.1/",
    "requires_dist": [
      "Jinja2 (==3.1.2)",
      "numpy (==1.22.4)",
      "setuptools (==65.5.1)",
      "torch (==1.12.1)",
      "tqdm (==4.64.0)",
      "transformers (==4.24.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "Detects possibly suspicious stuff in your source files",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15891040,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd0da1b6521e282b988d17a698823a39edeb58780eb62da6fe966b5f9e2f4bed",
          "md5": "cbe2fabd9685f05d8345d4dedd634265",
          "sha256": "85643021fb88ab1488145a3c17f8fae081f3b44ccc6ce0a3c138738a246dcf26"
        },
        "downloads": -1,
        "filename": "suspicious-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbe2fabd9685f05d8345d4dedd634265",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20527,
        "upload_time": "2022-11-25T14:25:31",
        "upload_time_iso_8601": "2022-11-25T14:25:31.530361Z",
        "url": "https://files.pythonhosted.org/packages/dd/0d/a1b6521e282b988d17a698823a39edeb58780eb62da6fe966b5f9e2f4bed/suspicious-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1df2821fc638eb262c644b5c924f224c1e9c0ac322083d79426127daf0312de8",
          "md5": "76e27064b208b33f09ab18c46057c1aa",
          "sha256": "a36581d8964dd121d0c00b9139aaa6ae37db7c88fd4bc8cff108ad8e80a4cf5b"
        },
        "downloads": -1,
        "filename": "suspicious-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "76e27064b208b33f09ab18c46057c1aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 22654,
        "upload_time": "2022-11-25T14:25:33",
        "upload_time_iso_8601": "2022-11-25T14:25:33.531022Z",
        "url": "https://files.pythonhosted.org/packages/1d/f2/821fc638eb262c644b5c924f224c1e9c0ac322083d79426127daf0312de8/suspicious-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "333e4915905d0938df6d9e829c215d654e407754f123b77d8ab1db9bc707ec3e",
          "md5": "12c00e2b089f00bb3631837f1d4befe9",
          "sha256": "a49ff205559773c7a2d48f7e1d748beb985914880866d5bcd243a0fc0ae9374e"
        },
        "downloads": -1,
        "filename": "suspicious-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12c00e2b089f00bb3631837f1d4befe9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20522,
        "upload_time": "2022-11-25T14:54:48",
        "upload_time_iso_8601": "2022-11-25T14:54:48.956618Z",
        "url": "https://files.pythonhosted.org/packages/33/3e/4915905d0938df6d9e829c215d654e407754f123b77d8ab1db9bc707ec3e/suspicious-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3ffeea149b1f844558457ddf2bb7d00dc54129ddf871d6be60c47a16ca8452a",
          "md5": "48c1d812ec9f32aae1d5a56edacc9253",
          "sha256": "77dd31520a6604937a49ee496c2adcd7ebd2df78b3f9812ee0f436c12b5b1e68"
        },
        "downloads": -1,
        "filename": "suspicious-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "48c1d812ec9f32aae1d5a56edacc9253",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 22624,
        "upload_time": "2022-11-25T14:54:50",
        "upload_time_iso_8601": "2022-11-25T14:54:50.132660Z",
        "url": "https://files.pythonhosted.org/packages/f3/ff/eea149b1f844558457ddf2bb7d00dc54129ddf871d6be60c47a16ca8452a/suspicious-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "333e4915905d0938df6d9e829c215d654e407754f123b77d8ab1db9bc707ec3e",
        "md5": "12c00e2b089f00bb3631837f1d4befe9",
        "sha256": "a49ff205559773c7a2d48f7e1d748beb985914880866d5bcd243a0fc0ae9374e"
      },
      "downloads": -1,
      "filename": "suspicious-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12c00e2b089f00bb3631837f1d4befe9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 20522,
      "upload_time": "2022-11-25T14:54:48",
      "upload_time_iso_8601": "2022-11-25T14:54:48.956618Z",
      "url": "https://files.pythonhosted.org/packages/33/3e/4915905d0938df6d9e829c215d654e407754f123b77d8ab1db9bc707ec3e/suspicious-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3ffeea149b1f844558457ddf2bb7d00dc54129ddf871d6be60c47a16ca8452a",
        "md5": "48c1d812ec9f32aae1d5a56edacc9253",
        "sha256": "77dd31520a6604937a49ee496c2adcd7ebd2df78b3f9812ee0f436c12b5b1e68"
      },
      "downloads": -1,
      "filename": "suspicious-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "48c1d812ec9f32aae1d5a56edacc9253",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 22624,
      "upload_time": "2022-11-25T14:54:50",
      "upload_time_iso_8601": "2022-11-25T14:54:50.132660Z",
      "url": "https://files.pythonhosted.org/packages/f3/ff/eea149b1f844558457ddf2bb7d00dc54129ddf871d6be60c47a16ca8452a/suspicious-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}