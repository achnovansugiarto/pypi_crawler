{
  "info": {
    "author": "Falko Hofmann, Michael Moldaschl, Andreas Tuerk",
    "author_email": "falko.hofmann@lexogen.com, michael.moldaschl@lexogen.com, andreas.tuerk@lexogen.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "======================================\nidemux - inline barcode demultiplexing\n======================================\n.. image:: https://badge.fury.io/py/idemux.svg\n   :target: https://badge.fury.io/py/idemux\n   :alt: Latest Version\n\n.. image:: https://travis-ci.com/Lexogen-Tools/idemux.svg?branch=master\n   :target: https://travis-ci.com/Lexogen-Tools/idemux\n\n.. image:: https://coveralls.io/repos/github/Lexogen-Tools/idemux/badge.svg?branch=master&service=github\n   :target: https://coveralls.io/github/Lexogen-Tools/idemux?branch=master\n\n\nIdemux is a command line tool designed to demultiplex paired-end FASTQ files from\n`QuantSeq-Pool <https://www.lexogen.com/quantseq-pool-sample-barcoded-3mrna-sequencing/>`_.\n\nIdemux can demultiplex based on i7, i5, and i1 inline barcodes. While this tool\ncan generally be used to demultiplex any barcodes (as long as they are correctly supplied\nand in the fastq header), it performs best when used in combination with\n`Lexogen indices <https://www.lexogen.com/indexing/12nt-dual-indexing-kits/>`_, as it\nwill correct common sequencing errors in the sequenced barcodes. This will allow you\nto retain more reads from your sequencing experiment while minimizing cross contamination.\n\n\nIdemux use is permitted under the following `licence <https://github.com/Lexogen-Tools/idemux/blob/master/LICENCE>`_.\n\n**General usage:**\n::\n\n    idemux [-h] --r1 READ1 --r2 READ2 [--sample-sheet SAMPLE_SHEET]\n           --out OUTPUT_DIR [--i1-start I1_START] [--i5-rc] [-v]\n\n\n**Run idemux:**\n::\n\n    idemux --r1 read_1.fastq.gz --r2 read_2.fastq.gz --sample-sheet samples.csv --out /some/output/path --i1-start pos_in_read_2\n\nFeatures\n--------\n\n* FASTQ file demultiplexing based on i7, i5, and i1 barcodes.\n* Correction of barcode sequencing errors to maximize read yield (only works\n  with `Lexogen 12 nt UDIs <https://www.lexogen.com/indexing/12nt-dual-indexing-kits/>`_\n  that have been sequenced at least 8 nt).\n* Reverse complementation in case the i5 index has been sequenced as reverse complement.\n\n\nGetting started\n---------------\nTo get stated with demultiplexing you need to:\n\n1. `Install idemux <1. Installation_>`_\n2. `Prepare a sample sheet csv <2. Preparing the sample sheet_>`_\n3. `Extract non-demultiplexed read data from a sequencing run <3. Extract non-demultiplexed read data from a sequencing run_>`_\n4. `Run idemux <4. Running idemux_>`_\n\n1. Installation\n===============\n\nIdemux is available as  `conda <https://conda.io/>`_ and  `PyPI <https://pypi.org/>`_ package. \n\nTo install via bioconda: \n\n``$ conda install -c bioconda idemux``\n\nTo install via pip:\n\n``$ pip install idemux``\n\n|\n\nIf you dont use conda and want to install idemux into a `virtual env <https://virtualenv.pypa.io/en/latest/>`_\n(always a good idea to avoid dependency conflicts), do the following:\n::\n\n    $ cd /path/you/want/it/installed/to\n    # creates the venv\n    $ virtualenv idemux\n    # activates the venv, run 'deactivate' to deactivate\n    $ source idemux/bin/activate\n    $ pip install idemux\n\n\nAlternatively, you can clone this repository and install from there:\n::\n\n    $ cd /path/you/want/it/installed/to\n    # creates the venv\n    $ virtualenv idemux\n    $ git clone https://github.com/Lexogen-Tools/idemux.git\n    $ source idemux/bin/activate\n    $ python setup.py install\n\n\n2. Preparing the sample sheet\n=============================\nIn order to run idemux on your QuantSeq-Pool data, you first need to prepare a `csv file\n<https://en.wikipedia.org/wiki/Comma-separated_values>`_.\nWe call this csv a sample sheet and it specifies which barcodes correspond to each\nsample.\n\nThis is a necessity as the software needs to know which bins reads should be\nsorted into during demultiplexing. A sample sheet can easily be generated by filling in an\nexcel spreadsheet and exporting it as csv.\n\n\nExample sample sheet (i7, i5, and i1 demuliplexing):\n::\n\n    sample_name,i7,i5,i1\n    sample_0,AAAACATGCGTT,CCCCACTGAGTT,AAAACATGCGTT\n    sample_1,AAAATCCCAGTT,CCCCTAAACGTT,AAAATCCCAGTT\n    sample_2,GAAAATTTACGC,GCCCCTTTCAGA,GAAAATTTACGC\n    sample_3,AAACTAACTGTC,CCCATCCATGTA,AAACTAACTGTC\n\n\nA sample sheet consists of 4 columns and always starts with the header illustrated\nabove. 'Sample_name' values will be used as output file names, while the\nsequences specified in i7, i5, and i1 will be used for demultiplexing.\n\nTherefore, only unique, specific combinations of sample names and barcodes are\nallowed. This means using duplicated or ambiguous combinations will result in an error.\nHowever, idemux will do its best to tell you where the problem lies, if this happens.\n\n|\n\n**In brief, the rules are:**\n\n1. Sample names need to be unique.\n2. Barcode combinations need to be unique.\n3. i7 and/or i5 indices have to be used consistently within the csv file. i7 and/or i5 indices need to either be present for all samples or for none at all.\n4. In contrast to i7/i5 indices, i1 indices can be used for a subset of samples in the csv file.\n5. Absence of a barcode needs to be indicated by an empty field (no value between\n   commas ``,,``).\n6. If your i5 has been sequenced as reverse complement, *do not* enter the reverse\n   complement sequences in the sample sheet. Use the ``--i5-rc`` option!\n\n\nSee `below <Sample sheet examples_>`_ for more showcases of sample/barcode combinations that are *allowed* or\n*not allowed*.\n\n3. Extract non-demultiplexed read data from a sequencing run\n============================================================\nThe read input files for idemux are non-demultiplexed read files which you can get by using demultiplexing software to extract reads from a sequencing run without demultiplexing by sample.  \nYou can use any demultiplexing software available to you, but the resulting read file(s) should contain all reads of the sequencing run you want to demultiplex with idemux.\nFurther, the reads should contain the read-out of the i7 + i5 barcode sequences in the read ID.\n\nThe following part of this section outlines how to use Illumina's bcl2fastq software to obtain the reads.\n::\n\n   # Demultiplexing with bcl2fastq:\n   $ bcl2fastq -R /path/to/sequencing/run -o /path/to/output -l WARNING --no-lane-splitting --sample-sheet Illumina_EMPTY_SampleSheet.csv --barcode-mismatches 0 --mask-short-adapter-reads 10\n\nThis commands bcl2fastq to \"demultiplex\" the run at */path/to/sequencing/run* to the output directory */path/to/output*.\nThe content of the file *Illumina_EMPTY_SampleSheet.csv* has to match Illumina's format for the respective sequencer.\n\nThe following text is an example for the content of a SampleSheet for a Illumina Nextseq run:\n::\n\n   [Header],,,,,,,\n   IEMFileVersion,4,,,,,,\n   Date,30.05.2017,,,,,,\n   Workflow,GenerateFASTQ,,,,,,\n   Application,NextSeq FASTQ Only,,,,,,\n   Assay,TruSeq RNA,,,,,,\n   Description,,,,,,,\n   Chemistry,Default,,,,,,\n   ,,,,,,,\n   [Reads],,,,,,,\n   ,,,,,,,\n   [Settings],,,,,,,\n   ,,,,,,,\n   [Data],,,,,,,\n\n   Sample_ID,Sample_Name,Sample_Plate,Sample_Well,I7_Index_ID,index,I5_Index_ID,index2,Sample_Project,Description\n   1,1,,,9999,AAAAAAAAAAAA,9999,AAAAAAAAAAAA,,\n\nAs you can see, no settings are specified and only one 'sample' was defined with a squence combination that is not likely to be close to any of the utilized barcode sequences.\n**You have to adjust the length of the A\\* stretches to the sequenced length of the i7/i5 barcodes!**\nThis specification is necessary to command bcl2fastq to write the i7+i5 sequence information in each read in the *Undetermined_S0_R1_001.fastq.gz* (*Undetermined_S0_R2_001.fastq.gz*) file(s)\nThe resulting reads in *Undetermined_S0_R1_001.fastq.gz* (*Undetermined_S0_R2_001.fastq.gz*) should follow this formatting style:\n::\n\n   @NB502007:379:HM7H2BGXF:1:11101:19231:1159 1:N:0:TTAGGACGCAAA+GGGTCTGCCGAA\n   GCTCATCCATCTTTTTGAAAACTCTTCATACTCGTTAGATCGGAAGAG\n   +\n   AAAAAEEEAEEEEEEAEEEEEEEEEEEEEEEEEEEE/E/EEEEE/EEE\n   @NB502007:379:HM7H2BGXF:1:11101:17406:1159 1:N:0:AAGTAACAGCTT+AATCGTGGACGG\n   CACACCTCCGTTCACGACGCTCTTCCGATATAGATGTAACTGGAGGAA\n   +\n   AAAAAEEEEEAEE/EEEEEEEEEE/EEEEAEA/EEEEEEEEEEEEEEE\n   @NB502007:379:HM7H2BGXF:1:11101:18203:1159 1:N:0:CTGCCAACACGA+GCTGTGGTTCAT\n   GACATGTATACAGTCTACGGATGAACGTTTAGATCGGAAGAGCACACG\n   +\n   AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEAEEEEEEEEEEEEEEEEE\n   @NB502007:379:HM7H2BGXF:1:11101:7322:1159 1:N:0:TACATGGCCACT+ATGTTCCAGTGA\n   CTTGGTCACGCTACTGTACTCCAGCCAGGGCGACAGAGCAAGACCTAT\n   +\n   AAAAAEEEEEEEEEEEE/EEEEEEEEAEEEEEAEEEEEEEEEEEAEEE\n   ...\n\n4. Running idemux\n=================\nOnce you have installed the tool, you can run it by typing ``idemux`` in the terminal.\n\nIdemux accepts the following arguments:\n::\n\n    required arguments:\n      --r1 READ1                   path to gzipped read 1 FASTQ file\n      --r2 READ2                   path to gzipped read 2 FASTQ file\n      --sample-sheet CSV           csv file describing sample names, and barcode combinations\n      --out OUTPUT_DIR             where to write the output files\n\n    optional arguments:\n      --i5-rc                      when the i5 barcode has been sequenced as reverse complement.\n                                   make sure to always use non-reverse complement sequences in the sample sheet\n      --i1_start POS               start position of the i1 index (1-based) on read 2 (default: 11)\n      -v, --version                show program's version number and exit\n      -h, --help                   show help message and exit\n\n\nExample commands:\n::\n\n    # demultiplexes read 1 and 2 into the folder 'demux'\n    idemux --r1 read_1.fastq.gz --r2 read_2.fastq.gz --sample-sheet samples.csv --out demux\n\n    # demultiplexing assuming the i1 barcode starts at the first base\n    idemux --r1 read_1.fastq.gz --r2 read_2.fastq.gz --sample-sheet samples.csv --out demux --i1_start 1\n\n    # demultiplexing assuming i5 is present as reverse complement in the fastq header\n    # if the i5 has been sequenced as reverse complement use this option and provide\n    # the NON reverse complement sequences in the sample sheet.\n    idemux --r1 read_1.fastq.gz --r2 read_2.fastq.gz --sample-sheet samples.csv --out demux\n\nAfter a successfully completed run, idemux will write a summary report to the output folder\n('demultipexing_stats.tsv').\n\nTechnicalities\n---------------\n\nWhen you run idemux, the following will happen:\n\n* It will check if your sample sheet is okay. See `here <Sample sheet examples_>`_ for examples.\n\n* It will check the FASTQ header for barcodes and it expects them in the following format:\n\n    single index (i7 or i5): @NB502007:379:HM7H2BGXF:1:11101:24585:1069 1:N:0:TCAGGTAANNTT\n\n    where TCAGGTAANNTT is the sequence of the i7 or i5 index\n\n    dual index (i7 and i5): @NB502007:379:HM7H2BGXF:1:11101:24585:1069 1:N:0:TCAGGTAANNTT+NANGGNNCNNNN\n\n    where TCAGGTAANNTT is the sequence of the i7 index and NANGGNNCNNNN is the sequence of the i5 index.\n\n* Reads with incorrect i7,i5 or i1 index sequences which can be corrected by idemux will be written to the\n  correct output file. However, the incorrect index sequence will not be replaced in the read header. This\n  allows for additional processing of the incorrect sequences.\n* Reads that cannot be demultiplexed will be written to undetermined_R{1/2}.fastq.gz.\n\n* When you demultiplex based on i1 inline barcodes, a successfully recognized barcode\n  sequence of 12 nt will be cut out and removed from read 2. This will leave\n  you with the 10 nt UMI + the nucleotides that potentially follow the i1 barcode.\n\nThis allows you to:\n\n1. Use other software, such as UMI_tools, to deal with the 10nt UMI, if desired.\n2. To demuliplex lanes where QuantSeq-Pool has been pooled with other libraries and read\n   2 has been sequenced longer than the actual barcode.\n\nHelp\n------\nIf you are demuliplexing a large number of samples (more than 500), you might encounter the\nfollowing error:\n\n* ``OSError: [Errno 24] Too many open files``\n\nThis error occurs because most OS have a limit on how many files can be opened and\nwritten to at the same time. In order to temporarily increase the limit on Linux run:\n::\n\n    # multiply your sample number*2 (as data is paired end)\n    # then round to the next multiple of 1024\n    $ ulimit -n the_number_above\n\nIf you are looking for a permanent solution, you can change your ulimit values\n`this way <https://access.redhat.com/solutions/61334>`_.\n\nIn case you experience any issues with this software please open an issue describing your\nproblem. Make sure to post the version of the tool you are running (``-v, --version``)\nand your os.\n\nSample sheet examples\n---------------------\n*This is allowed:*\n::\n\n    # demultiplexing via full i7, i5, i1\n    sample_name,i7,i5,i1\n    sample_0,AAAACATGCGTT,CCCCACTGAGTT,AAAACATGCGTT\n    sample_1,AAAATCCCAGTT,CCCCTAAACGTT,AAAATCCCAGTT\n\n    # demultiplexing via full i7, i5 and sparse i1\n    sample_name,i7,i5,i1\n    sample_0,AAAACATGCGTT,CCCCACTGAGTT,AAAACATGCGTT\n    sample_1,AAAATCCCAGTT,CCCCTAAACGTT,\n\n    # demultiplexing via full i7, i5\n    sample_name,i7,i5,i1\n    sample_0,AAAACATGCGTT,CCCCACTGAGTT,\n    sample_1,AAAATCCCAGTT,CCCCTAAACGTT,\n\n    # demultiplexing via full i7, no i5 and sparse i1\n    sample_name,i7,i5,i1\n    sample_0,AAAACATGCGTT,,AAAACATGCGTT\n    sample_1,AAAATCCCAGTT,,\n\n    # demultiplexing via full i7 only\n    sample_name,i7,i5,i1\n    sample_0,AAAACATGCGTT,,\n    sample_1,AAAATCCCAGTT,,\n\n    # demultiplexing via full i5 and i1\n    sample_name,i7,i5,i1\n    sample_0,,CCCCACTGAGTT,AAAACATGCGTT\n    sample_1,,CCCCTAAACGTT,AAAATCCCAGTT\n\n    # demultiplexing via full i5 and sparse i1\n    sample_name,i7,i5,i1\n    sample_0,,CCCCACTGAGTT,AAAACATGCGTT\n    sample_1,,CCCCTAAACGTT,\n\n    # demultiplexing via full i5\n    sample_name,i7,i5,i1\n    sample_0,,CCCCACTGAGTT,\n    sample_1,,CCCCTAAACGTT,\n\n    # demultiplexing via full i1\n    sample_name,i7,i5,i1\n    sample_0,,,AAAACATGCGTT\n    sample_1,,,AAAATCCCAGTT\n\n*This is not allowed:*\n::\n\n    # missing i1 column (or any other)\n    sample_name,i7,i5,\n    sample_0,AAAACATGCGTT,CCCCACTGAGTT\n    sample_1,AAAATCCCAGTT,CCCCTAAACGTT\n\n    # duplicated barcode combination\n    sample_name,i7,i5,i1\n    sample_0,AAAACATGCGTT,CCCCACTGAGTT,AAAACATGCGTT\n    sample_1,AAAACATGCGTT,CCCCACTGAGTT,AAAACATGCGTT\n\n    # duplicated sample names\n    sample_name,i7,i5,i1\n    sample_0,AAAACATGCGTT,CCCCACTGAGTT,AAAACATGCGTT\n    sample_0,AAAATCCCAGTT,CCCCTAAACGTT,AAAATCCCAGTT\n\n    # mixed, potentially ambiguous indexing (full i7 and sparse i5, i1)\n    sample_name,i7,i5,i1\n    sample_0,AAAACATGCGTT,CCCCACTGAGTT,AAAACATGCGTT\n    sample_1,AAAATCCCAGTT,,AAAATCCCAGTT\n    sample_2,GAAAATTTACGC,GCCCCTTTCAGA,GAAAATTTACGC\n    sample_3,AAACTAACTGTC,,AAACTAACTGTC\n\n    # mixed, potentially ambiguous indexing indexing (no i7, sparse i5 & i1)\n    sample_name,i7,i5,i1\n    sample_0,,CCCCACTGAGTT,\n    sample_1,,,AAAATCCCAGTT\n\n    # mixed, potentially ambiguous indexing indexing (sparse i7, full i5 & i1)\n    sample_name,i7,i5,i1\n    sample_0,,CCCCACTGAGTT,AAAACATGCGTT\n    sample_1,AAAATCCCAGTT,CCCCTAAACGTT,AAAATCCCAGTT\n    sample_2,,GCCCCTTTCAGA,GAAAATTTACGC\n    sample_3,AAACTAACTGTC,CCCATCCATGTA,AAACTAACTGTC\n\n    # missing comma separator\n    sample_name,i7,i5,i1\n    sample_0,AAAACATGCGTTCCCCACTGAGTT,AAAACATGCGTT\n\n    # no barcodes\n    sample_name,i7,i5,i1\n    sample_0,,,\n\n    # wrong column headers\n    wrong_col_name,i7,i5,i1\n    sample_0,AAAACATGCGTT,CCCCACTGAGTT,AAAACATGCGTT\n\n\n=======\nHistory\n=======\n\n\n0.1.6 (2021-07-09)\n------------------\n\n* Bug fix: Idemux threw an error when both **i7** and **i5** indices were present in the fastq header, but only **i1** demultiplexing should be performed.\n* Bug fix: Idemux was not demultiplexing files correctly when both **i7** and **i5** barcodes were present in the fastq header, but only **i5** and **i1** demultiplexing should be performed.\n* Enhancement: Added more tests to catch bugs like listed above.\n\n\n0.1.5 (2020-11-24)\n------------------\n\n* Bug fix: Idemux now prints version properly\n* Bug fix: README.rst contained some formatting errors\n* Bug fix: Broken licence link on pypi now works\n\n\n0.1.4 (2020-11-12)\n------------------\n\n* Bug fix: Demultiplexing with i1 barcodes only raised an incorrect exception (when no barcodes were present in the fastq header)\n\n\n0.1.3 (2020-08-21)\n------------------\n\n* First release on PyPI\n\n\n0.1.2 (2020-08-21)\n------------------\n\n* Bumped version number to avoid upload conflicts\n\n\n0.1.1 (2020-08-21)\n------------------\n\n* Fixed rst files with linter\n* First release on test PyPI.\n\n\n0.1.0 (2020-08-21)\n------------------\n\n* First building version.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lexogen-tools/idemux",
    "keywords": "idemux",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "idemux",
    "package_url": "https://pypi.org/project/idemux/",
    "platform": "",
    "project_url": "https://pypi.org/project/idemux/",
    "project_urls": {
      "Homepage": "https://github.com/lexogen-tools/idemux"
    },
    "release_url": "https://pypi.org/project/idemux/0.1.6/",
    "requires_dist": [
      "tqdm",
      "importlib-resources ; python_version < \"3.7\"",
      "dataclasses ; python_version < \"3.7\"",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "sphinx ; extra == 'docs'"
    ],
    "requires_python": ">=3.6",
    "summary": "A Lexogen tool for demultiplexing and  index error correcting fastq files. Works with Lexogen i7, i5 and i1 barcodes.",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15473678,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40d030d696ae0030b8630ee06c7ee74b5f3bbf93a58b9bc2dc306ac452c42376",
          "md5": "4dae80a5e9702a5a2ed56d686b642b0d",
          "sha256": "ca608301e39af29dcb456d653ab4f9dd441ae8ab0ef5dcb305cdd8143408fe98"
        },
        "downloads": -1,
        "filename": "idemux-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4dae80a5e9702a5a2ed56d686b642b0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 1817842,
        "upload_time": "2020-08-21T21:16:48",
        "upload_time_iso_8601": "2020-08-21T21:16:48.332786Z",
        "url": "https://files.pythonhosted.org/packages/40/d0/30d696ae0030b8630ee06c7ee74b5f3bbf93a58b9bc2dc306ac452c42376/idemux-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c582568b1a6c3de3cfdd0e4a0e363dd19088d74441d300d1b770e9e5eaceda02",
          "md5": "44d85e569aa88cb21384bad93c173298",
          "sha256": "00b18173ded5ce4a80ec1b5918fd0dfe6444547469106a1ed0ef3fb9aeaa77a2"
        },
        "downloads": -1,
        "filename": "idemux-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "44d85e569aa88cb21384bad93c173298",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2037713,
        "upload_time": "2020-08-21T21:16:57",
        "upload_time_iso_8601": "2020-08-21T21:16:57.978098Z",
        "url": "https://files.pythonhosted.org/packages/c5/82/568b1a6c3de3cfdd0e4a0e363dd19088d74441d300d1b770e9e5eaceda02/idemux-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f7ff6cb2f0141a349d76a9516c4559c4c03c4e1d41dfb5c8ca6642769592abb",
          "md5": "a097b8dd238e3b1c6c65cffdcd38796a",
          "sha256": "50a71e17ea1095023dff43ce739cb404ebb6e4d6d5bd8bcc0ac4e802aba30c46"
        },
        "downloads": -1,
        "filename": "idemux-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a097b8dd238e3b1c6c65cffdcd38796a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 1819356,
        "upload_time": "2020-11-24T09:59:07",
        "upload_time_iso_8601": "2020-11-24T09:59:07.646665Z",
        "url": "https://files.pythonhosted.org/packages/6f/7f/f6cb2f0141a349d76a9516c4559c4c03c4e1d41dfb5c8ca6642769592abb/idemux-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02ef04ed38ad0486b8d410290d6b46ffc46238b2f18c8f62b2c4bf1f829be4c3",
          "md5": "e1493381c00295ed077a41e6c1ebabf2",
          "sha256": "2cc0c99837fd325147a29cfbe016aab15f6930ded1564c024f929347a46eeeea"
        },
        "downloads": -1,
        "filename": "idemux-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e1493381c00295ed077a41e6c1ebabf2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2040233,
        "upload_time": "2020-11-24T09:59:16",
        "upload_time_iso_8601": "2020-11-24T09:59:16.311017Z",
        "url": "https://files.pythonhosted.org/packages/02/ef/04ed38ad0486b8d410290d6b46ffc46238b2f18c8f62b2c4bf1f829be4c3/idemux-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3be315916d9ec40310b73acb2cb9e04c7e92e04cedf911d244c7572fe7b359f",
          "md5": "5f878883b60563f11dffd9d35c9d5ab6",
          "sha256": "d89bdd5f4ac5d5f59d825706b2e406897def11e19409df7967d53d7cba3273d2"
        },
        "downloads": -1,
        "filename": "idemux-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f878883b60563f11dffd9d35c9d5ab6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 1818679,
        "upload_time": "2021-07-12T11:28:03",
        "upload_time_iso_8601": "2021-07-12T11:28:03.977570Z",
        "url": "https://files.pythonhosted.org/packages/c3/be/315916d9ec40310b73acb2cb9e04c7e92e04cedf911d244c7572fe7b359f/idemux-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "090763acc19a97f9cdc6af49ab1a85acd2256d075071814e988fb0cc4f779065",
          "md5": "de6d9f2a55fcdf7f32b8e96f395a9188",
          "sha256": "590980baaf810c8a02705efd50eb4ace644c360470fc3dc4491d077bbb6b26fc"
        },
        "downloads": -1,
        "filename": "idemux-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "de6d9f2a55fcdf7f32b8e96f395a9188",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2037889,
        "upload_time": "2021-07-12T11:28:08",
        "upload_time_iso_8601": "2021-07-12T11:28:08.760239Z",
        "url": "https://files.pythonhosted.org/packages/09/07/63acc19a97f9cdc6af49ab1a85acd2256d075071814e988fb0cc4f779065/idemux-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3be315916d9ec40310b73acb2cb9e04c7e92e04cedf911d244c7572fe7b359f",
        "md5": "5f878883b60563f11dffd9d35c9d5ab6",
        "sha256": "d89bdd5f4ac5d5f59d825706b2e406897def11e19409df7967d53d7cba3273d2"
      },
      "downloads": -1,
      "filename": "idemux-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f878883b60563f11dffd9d35c9d5ab6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 1818679,
      "upload_time": "2021-07-12T11:28:03",
      "upload_time_iso_8601": "2021-07-12T11:28:03.977570Z",
      "url": "https://files.pythonhosted.org/packages/c3/be/315916d9ec40310b73acb2cb9e04c7e92e04cedf911d244c7572fe7b359f/idemux-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "090763acc19a97f9cdc6af49ab1a85acd2256d075071814e988fb0cc4f779065",
        "md5": "de6d9f2a55fcdf7f32b8e96f395a9188",
        "sha256": "590980baaf810c8a02705efd50eb4ace644c360470fc3dc4491d077bbb6b26fc"
      },
      "downloads": -1,
      "filename": "idemux-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "de6d9f2a55fcdf7f32b8e96f395a9188",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 2037889,
      "upload_time": "2021-07-12T11:28:08",
      "upload_time_iso_8601": "2021-07-12T11:28:08.760239Z",
      "url": "https://files.pythonhosted.org/packages/09/07/63acc19a97f9cdc6af49ab1a85acd2256d075071814e988fb0cc4f779065/idemux-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}