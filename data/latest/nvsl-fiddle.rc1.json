{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Jupyter",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Education",
      "Topic :: Education :: Computer Aided Instruction (CAI)",
      "Topic :: Software Development :: Compilers"
    ],
    "description": "# Fiddle: A Tool For Studying Small Compiled rograms\n\n[![CircleCI](https://circleci.com/gh/circleci/circleci-docs.svg?style=svg)](https://circleci.com/gh/circleci/circleci-docs)\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/NVSL/fiddle/main?labpath=README.ipynb)\n[![Documentation Status](https://readthedocs.org/projects/fiddle-docs/badge/?version=latest)](https://fiddle-docs.readthedocs.io/en/latest/?badge=latest)\n\t\nFiddle is a tool for studying the compilation and execution of smallish programs written in C or\nC++.  If you want to know what the compiler does to your code and why your code is slow, Fiddle can help.\n\nIt makes it easy to ask and answer interesting questions about what happens to\nprograms as they go from source code to running program.  Fiddle can run on its\nown, but it is built to work with [Jupyter Notebook/Jupyter\nLab](https://jupyter.org/) to support interactive exploration.\n\nIt's features include:\n\n1. Support for compiled languages like C and C++.\n2. [Control Flow Graph (CFG)](https://en.wikipedia.org/wiki/Control-flow_graph) generation from compiled code.\n3. Easy support for varying build-time and run-time paremeters.\n4. Easy, unified parameter and data gathering across building and running code.\n5. Works great with [Pandas](https://pandas.pydata.org/) and  [Jupyter Notebook/Lab](https://jupyter.org/).\n\nThe best way to learn about Fiddle is to try it.  You can [run the\nexamples](https://mybinder.org/v2/gh/NVSL/fiddle/main?labpath=README.ipynb) (this can take a while to load).\n\nOr run it locally with Docker:\n\n```\ndocker run -it --publish published=8888,target=8888 stevenjswanson/fiddle:latest jupyter lab --LabApp.token=''\n```\n\nand then visit http://localhost:8888/lab/tree/README.ipynb.\n\nYou can also read [the documentation](https://fiddle-docs.readthedocs.io).\n\n## Examples\n\n### What Does a `for` loop look like in assembly?\n\n```python\n>>> from fiddle import * \n>>> sample = code(r\"\"\" \n...    extern \"C\"\n...    int loop() {\n...    int sum = 0;\n...\t   for(int i = 0; i < 10; i++) {\n... \t\tsum += i;\n...    }\n...\t   return sum;\n... }\n... \"\"\")\n>>> asm = build(sample)[0].asm(\"loop\")\n>>> print(asm) # doctest: +SKIP\nloop:\n.LFB0:\n    .cfi_startproc\n    endbr64\n    pushq    %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    movl    $0, -8(%rbp)\n    movl    $0, -4(%rbp)\n.L3:\n    cmpl    $9, -4(%rbp)\n    jg    .L2\n    movl    -4(%rbp), %eax\n    addl    %eax, -8(%rbp)\n    addl    $1, -4(%rbp)\n    jmp    .L3\n.L2:\n    movl    -8(%rbp), %eax\n    popq    %rbp\n    .cfi_def_cfa 7, 8\n    ret\n    .cfi_endproc\n\n```\n\nOr, if you prefer a CFG:\n\n```\n>>> build(sample)[0].cfg(\"loop\", \"readme_loop.png\") \n'readme_loop.png'\n\n```\n\n![CFG Example](images/readme_loop.png)\n\n### What Does `-O3` Do To That Loop?\n\n```python\n>>> asm = build(sample, build_parameters=dict(OPTIMIZE=\"-O3\"))[0].asm(\"loop\")\n>>> print(asm) # doctest: +SKIP\nloop:\n.LFB0:\n    .cfi_startproc\n\tendbr64\n\tmovl\t$45, %eax\n\tret\n\t.cfi_endproc\n\t\n```\n\n\n## Local Installation\n\nFiddle depends on some system packages and python's `wheel`.  Setup a virtual environment:\n\n```\npython -m venv fiddle-venv\n```\n\nBecome root, so you can install the systetm packages with `apt-get` with \n\n```\nsudo bash\n. fiddle-venv/bin/activate\t\nmake install-prereqs\nexit\n```\n\nInstall fiddle:\n\n```\n. fiddle-venv/bin/activate\npip install .\n```\n\nRun the tests:\n\n```\nmake test\n```\n\n## Common Problems\n\nFiddle needs `LD_LIBRARY_PATH` set properly to work, and it can't set it itself reliably.  If you get\n\n```\nOSError: libfiddle.so: cannot open shared object file: No such file or directory\n```\n\nYou can update `LD_LIBRARY_PATH` with:\n\n```\n$(set-fiddle-ld-path)\n```\n\n\n## Saving Your Work\n\nIf you want to save changes you make to any of the examples, you'll need to run docker something like this:\n\n```\ndocker run -it --publish published=8888,target=8888 --mount type=bind,source=$HOME,dst=/home/jovyan -w /home/jovyan/fiddle_work/fiddle  stevenjswanson/fiddle:latest  jupyter lab --LabApp.token=''\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nvsl-fiddle",
    "package_url": "https://pypi.org/project/nvsl-fiddle/",
    "platform": "",
    "project_url": "https://pypi.org/project/nvsl-fiddle/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/nvsl-fiddle/0.1/",
    "requires_dist": [
      "pytest-cpp",
      "pytest-xdist",
      "click",
      "pytest",
      "r2pipe",
      "pydot",
      "networkx",
      "pandas",
      "IPython",
      "nbmake",
      "matplotlib",
      "tqdm",
      "ipywidgets",
      "wheel",
      "sphinx",
      "twine"
    ],
    "requires_python": "",
    "summary": "Fiddle makes it easy to ask and answers questions about the compilation and execution of smallish programs written in C or C++.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12580175,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cbebd91fa3a6960daa6dea562d50f3dbad2a04c9c73393e40a3e9da3bf12d00",
          "md5": "57f8683762997b16a5cf0ed1a96bfb9e",
          "sha256": "ce521870ad0822eb94655372570e081ca26f9f2f35c09351c5f51daaa17e64d4"
        },
        "downloads": -1,
        "filename": "nvsl_fiddle-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57f8683762997b16a5cf0ed1a96bfb9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 508860,
        "upload_time": "2022-01-15T04:27:37",
        "upload_time_iso_8601": "2022-01-15T04:27:37.331495Z",
        "url": "https://files.pythonhosted.org/packages/8c/be/bd91fa3a6960daa6dea562d50f3dbad2a04c9c73393e40a3e9da3bf12d00/nvsl_fiddle-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53ef63fee4ba3b4e6ed87fd800ce5c41b8cb5bf437e7543d9c239a8e7e3dcb0e",
          "md5": "9b3b3501a0376adaf16ea7975aafc013",
          "sha256": "d0c55074cc4326e47e2f4df96ac01fe5d1373cefae8ac597606dae9f92477c3e"
        },
        "downloads": -1,
        "filename": "nvsl-fiddle-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9b3b3501a0376adaf16ea7975aafc013",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30600,
        "upload_time": "2022-01-15T04:27:38",
        "upload_time_iso_8601": "2022-01-15T04:27:38.868926Z",
        "url": "https://files.pythonhosted.org/packages/53/ef/63fee4ba3b4e6ed87fd800ce5c41b8cb5bf437e7543d9c239a8e7e3dcb0e/nvsl-fiddle-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8cbebd91fa3a6960daa6dea562d50f3dbad2a04c9c73393e40a3e9da3bf12d00",
        "md5": "57f8683762997b16a5cf0ed1a96bfb9e",
        "sha256": "ce521870ad0822eb94655372570e081ca26f9f2f35c09351c5f51daaa17e64d4"
      },
      "downloads": -1,
      "filename": "nvsl_fiddle-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "57f8683762997b16a5cf0ed1a96bfb9e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 508860,
      "upload_time": "2022-01-15T04:27:37",
      "upload_time_iso_8601": "2022-01-15T04:27:37.331495Z",
      "url": "https://files.pythonhosted.org/packages/8c/be/bd91fa3a6960daa6dea562d50f3dbad2a04c9c73393e40a3e9da3bf12d00/nvsl_fiddle-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53ef63fee4ba3b4e6ed87fd800ce5c41b8cb5bf437e7543d9c239a8e7e3dcb0e",
        "md5": "9b3b3501a0376adaf16ea7975aafc013",
        "sha256": "d0c55074cc4326e47e2f4df96ac01fe5d1373cefae8ac597606dae9f92477c3e"
      },
      "downloads": -1,
      "filename": "nvsl-fiddle-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9b3b3501a0376adaf16ea7975aafc013",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30600,
      "upload_time": "2022-01-15T04:27:38",
      "upload_time_iso_8601": "2022-01-15T04:27:38.868926Z",
      "url": "https://files.pythonhosted.org/packages/53/ef/63fee4ba3b4e6ed87fd800ce5c41b8cb5bf437e7543d9c239a8e7e3dcb0e/nvsl-fiddle-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}