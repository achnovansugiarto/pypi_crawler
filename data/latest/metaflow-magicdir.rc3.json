{
  "info": {
    "author": "Hamel Husain",
    "author_email": "hamel@outerbounds.co",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# metaflow_magicdir\n> Save Entire Directories Into Metaflow's Metadata Store\n\n\n## Install\n\n`pip install metaflow_magicdir`\n\n## How to use\n\nYou can use `@magicdir` to pass local directories between metaflow steps.  This will also work remotely.\n\n```python\n# examples/example_flow.py\n\nfrom metaflow import FlowSpec, step\nfrom metaflow_magicdir import magicdir\n\n\nclass MagicDirFlow(FlowSpec):\n\n    @magicdir(dir='mydir')\n    @step\n    def start(self):\n        with open('mydir/output1', 'w') as f:\n            f.write('hello world')\n        with open('mydir/output2', 'w') as f:\n            f.write('hello world again')\n        self.next(self.end)\n\n    @magicdir(dir='mydir')\n    @step\n    def end(self):\n        print('first', open('mydir/output1').read())\n        print('second', open('mydir/output1').read())\n\nif __name__ == \"__main__\":\n    MagicDirFlow()\n```\n\nIf you run the above flow, you will see the following output:\n\n> python examples/example_flow.py run\n\n```\nMetaflow 2.5.4 executing MagicDirFlow for user:hamelValidating your flow...\n    The graph looks good!\nRunning pylint...\n    Pylint is happy!\n2022-04-18 13:53:24.077 Workflow starting (run-id 1650315204073458):\n2022-04-18 13:53:24.083 [1650315204073458/start/1 (pid 13299)] Task is starting.\n2022-04-18 13:53:24.834 [1650315204073458/start/1 (pid 13299)] Task finished successfully.\n2022-04-18 13:53:24.840 [1650315204073458/end/2 (pid 13302)] Task is starting.\n2022-04-18 13:53:25.527 [1650315204073458/end/2 (pid 13302)] first hello world\n2022-04-18 13:53:25.608 [1650315204073458/end/2 (pid 13302)] second hello world\n2022-04-18 13:53:25.609 [1650315204073458/end/2 (pid 13302)] Task finished successfully.\n2022-04-18 13:53:25.610 Done!\n```\n\nYou can retrieve the results from the above Flow with the client api and `extract_magicdir`:\n\nLet's first remove the directory if it exists:\n\n```python\n!rm -rf mydir/ #remove the directory if it exists\n```\n\n```python\nfrom metaflow import Flow\nfrom metaflow_magicdir import extract_magicdir\nrun_data = Flow('MagicDirFlow').latest_successful_run.data\nextract_magicdir(run_data)\n```\n\nWe can now inspect the contents of this directory to see it's contents!\n\n```python\n!ls mydir/\n```\n\n    output1 output2\n\n\n### `magicdir` with `foreach`\n\nNothing special is required to use `magicdir` with foreach.  Consider the following modification to the above flow:\n\n```python\n#examples/mapflow.py\n\nfrom metaflow import FlowSpec, step\nfrom metaflow_magicdir import magicdir\n\n\nclass MagicDirMapFlow(FlowSpec):\n    \"\"\"Show how magic directories work with foreach\"\"\"\n\n    @step\n    def start(self):\n        self.step_num = range(5)\n        self.next(self.write, foreach='step_num')\n\n    @magicdir(dir='my_map_dir')\n    @step\n    def write(self):\n        self.step_idx = self.input # metaflow gives self.input a value from `step_num` from the prior step\n        with open(f'my_map_dir/{self.step_idx}.txt', 'w') as f:\n            f.write(f'this is step {self.step_idx}')\n        self.next(self.read)\n\n    @magicdir(dir='my_map_dir')\n    @step\n    def read(self):\n        print('file contents:', open(f'my_map_dir/{self.step_idx}.txt').read())\n        self.next(self.join)\n    \n    @step\n    def join(self, inputs):\n        print(f\"step numbers were: {[i.step_idx for i in inputs]}\")\n        self.next(self.end)\n\n    @step\n    def end(self): pass\n\nif __name__ == \"__main__\":\n    MagicDirMapFlow()\n\nif __name__ == \"__main__\":\n    MagicDirMapFlow()\n```\n\n> python examples/mapflow.py run\n\n```\nMetaflow 2.5.4 executing MagicDirMapFlow for user:hamelValidating your flow...\n    The graph looks good!\nRunning pylint...\n    Pylint is happy!\n2022-04-18 13:41:56.687 Workflow starting (run-id 1650314516684584):\n2022-04-18 13:41:56.695 [1650314516684584/start/1 (pid 12420)] Task is starting.\n2022-04-18 13:41:57.444 [1650314516684584/start/1 (pid 12420)] Foreach yields 5 child steps.\n2022-04-18 13:41:57.445 [1650314516684584/start/1 (pid 12420)] Task finished successfully.\n2022-04-18 13:41:57.452 [1650314516684584/write/2 (pid 12423)] Task is starting.\n2022-04-18 13:41:57.459 [1650314516684584/write/3 (pid 12424)] Task is starting.\n2022-04-18 13:41:57.466 [1650314516684584/write/4 (pid 12425)] Task is starting.\n2022-04-18 13:41:57.473 [1650314516684584/write/5 (pid 12426)] Task is starting.\n2022-04-18 13:41:57.481 [1650314516684584/write/6 (pid 12427)] Task is starting.\n2022-04-18 13:41:58.438 [1650314516684584/write/3 (pid 12424)] Task finished successfully.\n2022-04-18 13:41:58.450 [1650314516684584/read/7 (pid 12438)] Task is starting.\n2022-04-18 13:41:58.452 [1650314516684584/write/2 (pid 12423)] Task finished successfully.\n2022-04-18 13:41:58.463 [1650314516684584/read/8 (pid 12439)] Task is starting.\n2022-04-18 13:41:58.465 [1650314516684584/write/5 (pid 12426)] Task finished successfully.\n2022-04-18 13:41:58.473 [1650314516684584/read/9 (pid 12440)] Task is starting.\n2022-04-18 13:41:58.478 [1650314516684584/write/6 (pid 12427)] Task finished successfully.\n2022-04-18 13:41:58.487 [1650314516684584/read/10 (pid 12441)] Task is starting.\n2022-04-18 13:41:58.489 [1650314516684584/write/4 (pid 12425)] Task finished successfully.\n2022-04-18 13:41:58.496 [1650314516684584/read/11 (pid 12442)] Task is starting.\n2022-04-18 13:41:59.314 [1650314516684584/read/7 (pid 12438)] file contents: this is step 1\n2022-04-18 13:41:59.348 [1650314516684584/read/8 (pid 12439)] file contents: this is step 0\n2022-04-18 13:41:59.350 [1650314516684584/read/9 (pid 12440)] file contents: this is step 3\n2022-04-18 13:41:59.362 [1650314516684584/read/11 (pid 12442)] file contents: this is step 2\n2022-04-18 13:41:59.370 [1650314516684584/read/10 (pid 12441)] file contents: this is step 4\n2022-04-18 13:41:59.450 [1650314516684584/read/7 (pid 12438)] Task finished successfully.\n2022-04-18 13:41:59.479 [1650314516684584/read/9 (pid 12440)] Task finished successfully.\n2022-04-18 13:41:59.482 [1650314516684584/read/8 (pid 12439)] Task finished successfully.\n2022-04-18 13:41:59.495 [1650314516684584/read/10 (pid 12441)] Task finished successfully.\n2022-04-18 13:41:59.497 [1650314516684584/read/11 (pid 12442)] Task finished successfully.\n2022-04-18 13:41:59.505 [1650314516684584/join/12 (pid 12459)] Task is starting.\n2022-04-18 13:42:00.183 [1650314516684584/join/12 (pid 12459)] step numbers were: [0, 3, 2, 1, 4]\n2022-04-18 13:42:00.261 [1650314516684584/join/12 (pid 12459)] Task finished successfully.\n2022-04-18 13:42:00.269 [1650314516684584/end/13 (pid 12462)] Task is starting.\n2022-04-18 13:42:01.027 [1650314516684584/end/13 (pid 12462)] Task finished successfully.\n2022-04-18 13:42:01.027 Done!\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Outerbounds/metaflow_magicdir/tree/master/",
    "keywords": "metaflow machine-learning",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metaflow-magicdir",
    "package_url": "https://pypi.org/project/metaflow-magicdir/",
    "platform": null,
    "project_url": "https://pypi.org/project/metaflow-magicdir/",
    "project_urls": {
      "Homepage": "https://github.com/Outerbounds/metaflow_magicdir/tree/master/"
    },
    "release_url": "https://pypi.org/project/metaflow-magicdir/0.0.4/",
    "requires_dist": [
      "pip",
      "packaging",
      "metaflow"
    ],
    "requires_python": ">=3.6",
    "summary": "\"Save Entire Directories Into Metaflow's Metadata Store\"",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13549457,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e64a41fb21543d15b30c8a9dc7b06f4c087f08ffa935f50c79e5ffac4049ad2c",
          "md5": "e26e9a42fc6b9a54a6c71a5ea2fa5527",
          "sha256": "e576a31212d531d174a14a4dfd86e08a32ed4497d62b5431d331d34f33b8d758"
        },
        "downloads": -1,
        "filename": "metaflow_magicdir-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e26e9a42fc6b9a54a6c71a5ea2fa5527",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8898,
        "upload_time": "2022-04-18T20:47:51",
        "upload_time_iso_8601": "2022-04-18T20:47:51.349721Z",
        "url": "https://files.pythonhosted.org/packages/e6/4a/41fb21543d15b30c8a9dc7b06f4c087f08ffa935f50c79e5ffac4049ad2c/metaflow_magicdir-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5d71fa44d5fb7270ff58884fc7a13182d2fa112a8316196f546b8386023f21f",
          "md5": "b91ae73725a2d95a8140f5daa5d254c7",
          "sha256": "bcaeae131adb04cc3f56ba24e3fea418d30fd6eefd39b78310f8ef2b6a5ebf42"
        },
        "downloads": -1,
        "filename": "metaflow_magicdir-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b91ae73725a2d95a8140f5daa5d254c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10146,
        "upload_time": "2022-04-18T20:47:53",
        "upload_time_iso_8601": "2022-04-18T20:47:53.130417Z",
        "url": "https://files.pythonhosted.org/packages/b5/d7/1fa44d5fb7270ff58884fc7a13182d2fa112a8316196f546b8386023f21f/metaflow_magicdir-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cd1dea891a1a152fbe0c91e08adf557213cea0895694b28f868562ee58bae6a",
          "md5": "87bf140da95a4a08ab495514958f205c",
          "sha256": "f1f976c818e053aa3f99dfec2b5064bf3afa8aa578e2a10dfadb11dad539e643"
        },
        "downloads": -1,
        "filename": "metaflow_magicdir-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87bf140da95a4a08ab495514958f205c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8902,
        "upload_time": "2022-04-18T20:50:45",
        "upload_time_iso_8601": "2022-04-18T20:50:45.081643Z",
        "url": "https://files.pythonhosted.org/packages/4c/d1/dea891a1a152fbe0c91e08adf557213cea0895694b28f868562ee58bae6a/metaflow_magicdir-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32c8b7a8f977eeea93714d75528547511a2d60bda7cf0ded8c8fccfa0b52c120",
          "md5": "c9818a27939c27291e2a204fc3ead084",
          "sha256": "2196cac9a1c3b9e23647ab28f7c9c43920d999df5b10295cc07dcef0df0fd41b"
        },
        "downloads": -1,
        "filename": "metaflow_magicdir-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c9818a27939c27291e2a204fc3ead084",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9511,
        "upload_time": "2022-04-18T20:50:46",
        "upload_time_iso_8601": "2022-04-18T20:50:46.331740Z",
        "url": "https://files.pythonhosted.org/packages/32/c8/b7a8f977eeea93714d75528547511a2d60bda7cf0ded8c8fccfa0b52c120/metaflow_magicdir-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "533cfcef4aa2158ad9c039d0109f143f053dd5323f93be95f587b7df4e4a43ca",
          "md5": "b1666355326924a8a80379fde32c7fd1",
          "sha256": "4b3835865d0f2473f69fca7e21d3785023ad06c66e6dc042e31f76f4d13a6d64"
        },
        "downloads": -1,
        "filename": "metaflow_magicdir-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1666355326924a8a80379fde32c7fd1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8799,
        "upload_time": "2022-04-18T21:40:35",
        "upload_time_iso_8601": "2022-04-18T21:40:35.834132Z",
        "url": "https://files.pythonhosted.org/packages/53/3c/fcef4aa2158ad9c039d0109f143f053dd5323f93be95f587b7df4e4a43ca/metaflow_magicdir-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1190990182e80ec71f139260b128132d59dd10f8e1eba1a61adb154b9c44b7b5",
          "md5": "49f613708cce97aa381917cb3490e995",
          "sha256": "86ed47128877968a6a64a2d131d81f7792df325d538d1ae70077af1c2b8ef51b"
        },
        "downloads": -1,
        "filename": "metaflow_magicdir-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "49f613708cce97aa381917cb3490e995",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9348,
        "upload_time": "2022-04-18T21:40:37",
        "upload_time_iso_8601": "2022-04-18T21:40:37.625236Z",
        "url": "https://files.pythonhosted.org/packages/11/90/990182e80ec71f139260b128132d59dd10f8e1eba1a61adb154b9c44b7b5/metaflow_magicdir-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "533cfcef4aa2158ad9c039d0109f143f053dd5323f93be95f587b7df4e4a43ca",
        "md5": "b1666355326924a8a80379fde32c7fd1",
        "sha256": "4b3835865d0f2473f69fca7e21d3785023ad06c66e6dc042e31f76f4d13a6d64"
      },
      "downloads": -1,
      "filename": "metaflow_magicdir-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1666355326924a8a80379fde32c7fd1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8799,
      "upload_time": "2022-04-18T21:40:35",
      "upload_time_iso_8601": "2022-04-18T21:40:35.834132Z",
      "url": "https://files.pythonhosted.org/packages/53/3c/fcef4aa2158ad9c039d0109f143f053dd5323f93be95f587b7df4e4a43ca/metaflow_magicdir-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1190990182e80ec71f139260b128132d59dd10f8e1eba1a61adb154b9c44b7b5",
        "md5": "49f613708cce97aa381917cb3490e995",
        "sha256": "86ed47128877968a6a64a2d131d81f7792df325d538d1ae70077af1c2b8ef51b"
      },
      "downloads": -1,
      "filename": "metaflow_magicdir-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "49f613708cce97aa381917cb3490e995",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9348,
      "upload_time": "2022-04-18T21:40:37",
      "upload_time_iso_8601": "2022-04-18T21:40:37.625236Z",
      "url": "https://files.pythonhosted.org/packages/11/90/990182e80ec71f139260b128132d59dd10f8e1eba1a61adb154b9c44b7b5/metaflow_magicdir-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}