{
  "info": {
    "author": "Lucas Connors",
    "author_email": "lucas@revolutiontech.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Testing",
      "Topic :: Utilities"
    ],
    "description": "# django-pigeon\n#### Test utilities for Django projects\n\n[![Build Status](https://travis-ci.org/RevolutionTech/django-pigeon.svg?branch=master)](https://travis-ci.org/RevolutionTech/django-pigeon)\n[![codecov](https://codecov.io/gh/RevolutionTech/django-pigeon/branch/master/graph/badge.svg)](https://codecov.io/gh/RevolutionTech/django-pigeon)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/c1add1fd523c4bb48a6e5158cdffa1dd)](https://www.codacy.com/app/RevolutionTech/django-pigeon)\n\n## Installation\n\n```\n$ pip install django-pigeon\n```\n\n## Usage\n\ndjango-pigeon comes equipped with a `RenderTestCase` which provides an assortment of methods on top of Django's `TestCase` that assist with end-to-end testing of views in Django. Writing a test that verifies a view renders correctly is as simple as:\n\n```python\nfrom pigeon.test import RenderTestCase\n\n\nclass FooTestCase(RenderTestCase):\n\n    def testFooView(self):\n        self.assertResponseRenders('/foo/')\n```\n\nYou can also inspect the rendered response:\n\n```python\ndef testFooView(self):\n    response = self.assertResponseRenders('/foo/')\n    self.assertIn('FOO', response.content)\n```\n\nBy default, `assertResponseRenders` verifies that the status code of the response is 200, but you can change this by specifying the `status_code` keyword argument:\n\n```python\ndef testBarView404(self):\n    self.assertResponseRenders('/bar/', status_code=404)\n```\n\nYou can also make POST and PUT requests using `assertResponseRenders` by providing the `method` and `data` keywords arguments:\n\n```python\ndef testCreateFooView(self):\n    payload = {'text': 'Hello World!'}\n    self.assertResponseRenders('/foo/create/', status_code=201, method='POST', data=payload)\n```\n\nIf you are using HTML generated from Django forms, you can set `has_form_error=True` as a shortcut to check for `errorlist` in the resulting HTML:\n\n```python\ndef testCreateFooViewWithoutText(self):\n    response = self.assertResponseRenders('/foo/create/', method='POST', has_form_error=True)\n    self.assertIn('This field is required.', response.content)\n```\n\nUse `assertAPIResponseRenders` for JSON responses. `json.loads` is automatically called on the response, so the object returned is ready for inspection:\n\n```python\ndef testFooAPIView(self):\n    payload = {'text': 'Hello!'}\n    response = self.assertAPIResponseRenders('/foo/', method='POST', data=payload)\n    self.assertEquals(response['text'], 'Hello!')\n```\n\nYou can use `assertResponseRedirects` to test redirects:\n\n```python\ndef testFooRedirects(self):\n    # /foo/ redirects to /bar/\n    self.assertResponseRedirects('/foo/', '/bar/')\n```\n\nIf you have a list of views that you want to verify are rendering as 200 without adding any special assertion logic, you can simply override the `get200s` and `getAPI200s` methods, which should return a list of URLs. django-pigeon will construct test methods that check that rendering all of these URLs results in a 200:\n\n```python\nclass FooTestCase(RenderTestCase):\n\n    def get200s(self):\n        return [\n            '/foo/',\n            '/bar/',\n            '/foobar/',\n        ]\n\n    def getAPI200s(self):\n        return [\n            '/api/foo/',\n        ]\n```\n\nMost of the features in `RenderTestCase` are actually implemented in the mixin class `RenderTestCaseMixin`. You can combine `RenderTestCaseMixin` with other TestCase classes to get additional functionality:\n\n```python\nfrom django.test import TransactionTestCase\nfrom pigeon.test import RenderTestCaseMixin\n\n\nclass FooTransactionTestCase(RenderTestCaseMixin, TransactionTestCase):\n\n    def testFooView(self):\n        ...\n```\n\ndjango-pigeon supports Python 3.5+ and Django 2.2+.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RevolutionTech/django-pigeon",
    "keywords": "",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-pigeon",
    "package_url": "https://pypi.org/project/django-pigeon/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-pigeon/",
    "project_urls": {
      "Homepage": "https://github.com/RevolutionTech/django-pigeon",
      "Repository": "https://github.com/RevolutionTech/django-pigeon"
    },
    "release_url": "https://pypi.org/project/django-pigeon/0.4.0/",
    "requires_dist": [
      "Django (>=2.2)"
    ],
    "requires_python": ">=3.6.1,<4.0.0",
    "summary": "Test utilities for Django projects.",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9313701,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbf133a3677d0e84b1c837fc4ffa394154fd247b86a6ddf66ab83baaead2f54b",
          "md5": "5f11363c6a4a0a684440e5bbeb947dd0",
          "sha256": "23cfecd468ef572af479119c6a1a85794baa9688bb935e0a8f62e06ec30cca6a"
        },
        "downloads": -1,
        "filename": "django_pigeon-0.1.0-py2.7.egg",
        "has_sig": false,
        "md5_digest": "5f11363c6a4a0a684440e5bbeb947dd0",
        "packagetype": "bdist_egg",
        "python_version": "2.7",
        "requires_python": null,
        "size": 8495,
        "upload_time": "2018-02-05T02:21:49",
        "upload_time_iso_8601": "2018-02-05T02:21:49.305576Z",
        "url": "https://files.pythonhosted.org/packages/fb/f1/33a3677d0e84b1c837fc4ffa394154fd247b86a6ddf66ab83baaead2f54b/django_pigeon-0.1.0-py2.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b83e5e70ead74662ea4a476529f688e8e2d6a22ad8ca65aee07fcf44a4a58955",
          "md5": "8cdbab6d77a045a0059a67011bae826f",
          "sha256": "e110c04d9a3db38702567eb1cb7ca3698032dc3af3eb8cecd90e2522e2cbd022"
        },
        "downloads": -1,
        "filename": "django-pigeon-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8cdbab6d77a045a0059a67011bae826f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4025,
        "upload_time": "2017-01-11T08:33:25",
        "upload_time_iso_8601": "2017-01-11T08:33:25.561212Z",
        "url": "https://files.pythonhosted.org/packages/b8/3e/5e70ead74662ea4a476529f688e8e2d6a22ad8ca65aee07fcf44a4a58955/django-pigeon-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca4de232598411319bc69d610edd4ebf9bc10939c07ff760f210f491b776728f",
          "md5": "a25e10f8970c72896a512965b403941b",
          "sha256": "c5cddaa7040bad058d98cf7e8df66e534b224f665d7a83c5bc1a940f33dd72d8"
        },
        "downloads": -1,
        "filename": "django-pigeon-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a25e10f8970c72896a512965b403941b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4657,
        "upload_time": "2017-01-11T08:52:44",
        "upload_time_iso_8601": "2017-01-11T08:52:44.668707Z",
        "url": "https://files.pythonhosted.org/packages/ca/4d/e232598411319bc69d610edd4ebf9bc10939c07ff760f210f491b776728f/django-pigeon-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "479f9ea6a246885bf14483f16d7c856b9067ec595487e4230704f1692bbd75d3",
          "md5": "a495f2cd794808c40fa0fb37eb303231",
          "sha256": "7bcd8c55a9a5409dc89db949aa06da976932f034076b2c06ec86eb4789a9ed79"
        },
        "downloads": -1,
        "filename": "django-pigeon-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a495f2cd794808c40fa0fb37eb303231",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4726,
        "upload_time": "2017-03-02T23:56:57",
        "upload_time_iso_8601": "2017-03-02T23:56:57.999060Z",
        "url": "https://files.pythonhosted.org/packages/47/9f/9ea6a246885bf14483f16d7c856b9067ec595487e4230704f1692bbd75d3/django-pigeon-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79bb57f77b254d77abfed56fefe275f59c78d4af42d9c949bb010f03488424b8",
          "md5": "d65fff20158c78d43153235100967c4c",
          "sha256": "ae7433109d944a2236223b4f61baf8e19043fea35c0a949e1edd1fb79cc94b18"
        },
        "downloads": -1,
        "filename": "django-pigeon-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d65fff20158c78d43153235100967c4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4885,
        "upload_time": "2018-02-05T02:21:47",
        "upload_time_iso_8601": "2018-02-05T02:21:47.323118Z",
        "url": "https://files.pythonhosted.org/packages/79/bb/57f77b254d77abfed56fefe275f59c78d4af42d9c949bb010f03488424b8/django-pigeon-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08777d6494f92cc81ff6fd2ff2b1597a70ba4b0d0fcd18a50e0069f12d3716fd",
          "md5": "2db9058945af296e3c3e07241fd86ce4",
          "sha256": "aaa94e55ff10eb4dfc157ca74bc39a64fe94d7ed0e0fb316d2778e4ff0a0e091"
        },
        "downloads": -1,
        "filename": "django_pigeon-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2db9058945af296e3c3e07241fd86ce4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 4849,
        "upload_time": "2021-02-04T03:32:14",
        "upload_time_iso_8601": "2021-02-04T03:32:14.338535Z",
        "url": "https://files.pythonhosted.org/packages/08/77/7d6494f92cc81ff6fd2ff2b1597a70ba4b0d0fcd18a50e0069f12d3716fd/django_pigeon-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ff238a87b147b8f3db5122b032f6111251e857486f8ac97a207a95bf492aeb7",
          "md5": "6136b07fd7e914a98ecf79a0e78a1c8a",
          "sha256": "528407a3d8e6fa1e57f79155a809f90ed882d31bd394e9244a4e0c832ebd34e4"
        },
        "downloads": -1,
        "filename": "django-pigeon-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6136b07fd7e914a98ecf79a0e78a1c8a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 4596,
        "upload_time": "2021-02-04T03:32:12",
        "upload_time_iso_8601": "2021-02-04T03:32:12.610784Z",
        "url": "https://files.pythonhosted.org/packages/5f/f2/38a87b147b8f3db5122b032f6111251e857486f8ac97a207a95bf492aeb7/django-pigeon-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08777d6494f92cc81ff6fd2ff2b1597a70ba4b0d0fcd18a50e0069f12d3716fd",
        "md5": "2db9058945af296e3c3e07241fd86ce4",
        "sha256": "aaa94e55ff10eb4dfc157ca74bc39a64fe94d7ed0e0fb316d2778e4ff0a0e091"
      },
      "downloads": -1,
      "filename": "django_pigeon-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2db9058945af296e3c3e07241fd86ce4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.1,<4.0.0",
      "size": 4849,
      "upload_time": "2021-02-04T03:32:14",
      "upload_time_iso_8601": "2021-02-04T03:32:14.338535Z",
      "url": "https://files.pythonhosted.org/packages/08/77/7d6494f92cc81ff6fd2ff2b1597a70ba4b0d0fcd18a50e0069f12d3716fd/django_pigeon-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ff238a87b147b8f3db5122b032f6111251e857486f8ac97a207a95bf492aeb7",
        "md5": "6136b07fd7e914a98ecf79a0e78a1c8a",
        "sha256": "528407a3d8e6fa1e57f79155a809f90ed882d31bd394e9244a4e0c832ebd34e4"
      },
      "downloads": -1,
      "filename": "django-pigeon-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6136b07fd7e914a98ecf79a0e78a1c8a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.1,<4.0.0",
      "size": 4596,
      "upload_time": "2021-02-04T03:32:12",
      "upload_time_iso_8601": "2021-02-04T03:32:12.610784Z",
      "url": "https://files.pythonhosted.org/packages/5f/f2/38a87b147b8f3db5122b032f6111251e857486f8ac97a207a95bf492aeb7/django-pigeon-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}