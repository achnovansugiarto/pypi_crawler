{
  "info": {
    "author": "Bayse, Inc.",
    "author_email": "david@bayse.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Bayse Tools\nThe `bayse-tools` package provides functionality that allows users to convert a growing number of network flow formats \ninto the lightweight BayseFlow format. Doing so offers the ability to interact with the Bayse labeling and \nknowledgebase functionality, which provides detailed insights about how your systems are communicating with the \nInternet and your internal devices. For more information about use cases, explore our \n[Use Cases](https://bayse.io/resources/use-cases) online.  \n\n## Installation\nNote that this package requires libpcap-dev to be installed on your system. Please use your system's package manager\n(such as apt on Ubuntu) to install libpcap-dev:\n\n`sudo apt-get install libpcap-dev`\n\nWhile Windows isn't yet supported due to issues with underlying libraries (specifically pcapy), we'd welcome anyone \nwho wants to document the steps to make it work. At the very minimum, you will need the following:\n\n* A C++ compiler. Microsoft Visual Studio Build Tools is known to work.\n* Npcap's SDK, which is a replacement for the WinPCAP developer's kit.\n\nTo install the bayse-tools package, simply type the following:\n\n`pip install bayse-tools`\n\n\n## Available Modules\nThere are two modules available within this package. Details about each are below.\n\n### A. Standalone Converter\nmodule name: `converter`\n\nThis module allows you to convert captured network traffic from any of our [supported formats](#supported-file-formats) \ninto unlabeled \nBayseFlows (BayseFlows without BayseFlow category labels). This is useful if you \nalready have network telemetry that you'd like to enrich with our knowledgebase and labeling.\n\nTo import this module into your project, type the following:\n\n`from bayse_tools.converter import convert`\n\n#### Supported File Formats\nBayse currently supports conversion into BayseFlow format from the following formats:\n\n| Format         | Specific File Types                                |\n|----------------|----------------------------------------------------|\n | Packet Capture | `CAP`, `PCAP`, and `PCAPNG`                        |\n | Zeek           | `conn.log` and `dns.log` in `TSV` or `JSON` format |\n | Interflow      | comma-separated list of `JSON` records             |\n| Netflow        | `CSV` of unidirectional Netflow v9 records           |\n\n`?` If you have a format that you'd like us to support, please contact support at bayse [.] io.\n\n#### Usage\nTo convert a Packet Capture into an unlabeled BayseFlow file, simply enter the following:\n\n`convert.convert_pcap(<path_to_packet_capture>)`\n\nTo convert a Zeek `conn.log` into an unlabeled BayseFlow file, simply enter the following:\n\n`convert.convert_zeek(<path_to_conn_log>, zeek_dnsfile_location=<optional_path_to_dns_log>)`\n\nIf you have (and would like to include) DNS information that was captured by Zeek, provide the `dns.log` in addition \nto the `conn.log`. Naming will be much enhanced by doing so.\n\nTo convert an Interflow log into an unlabeled BayseFlow file, simply enter the following:\n\n`convert.convert_interflow(<path_to_interflow_log>)`\n\nAny DNS Interflows should also be passed in within the Interflow log.\n\nNote that there are MANY fields in Interflow that will not be a part of this converter, as they are not necessary to \nconvert to BayseFlow. The log file is expected to contain a comma-separated list of Interflow records in JSON format.\nFor non-DNS records, below is an example Interflow record that includes only the fields we need:\n\n    [{\"timestamp\": 1656517273641, \"duration\": 401, \"_id\": \"6c0liABC8qtQm3loQr7H\", \"msg_class\": \"interflow_traffic\", \"srcip\": \"172.18.40.120\", \"srcport\": 55503,\"dstip\": \"142.251.40.65\", \"dstip_host\": \"ci3.googleusercontent.com\", \"dstport\": 80, \"proto_name\": \"tcp\", \"outbytes_total\": 0, \"inpkts_delta\": 5, \"outpkts_delta\": 0, \"inbytes_total\": 17765}]\n\nTo convert a Netflow CSV into an unlabeled BayseFlow file, simply enter the following:\n\n`convert.convert_netflow(<path_to_Netflow_csv>)`\n\nSimilar to Interflow, there are MANY fields in Netflow v9 that are not used.\n\n\n#### Plaintext Formats\n\nZeek and Interflow data is supported as JSON files in two formats:\n\n1. Comma-Separated List of JSON records (**preferred**):\n\n`[{json_record_1},{json_record_2}]`\n\n2. One JSON record per line:\n\n```\n{json_record_1}\n{json_record_2}\n```\n\nMoreover, Zeek also supports plaintext `TSV` (i.e. the OG). If you are converting plaintext logs, please make sure \nthat your `conn.log` files have the following fields in the following order (Field # lines are annotations for \nclarity below and should **NOT** be included in the file):\n\n```     \n        Field #  1       2        3                 4               5\n                ts      uid     id.orig_h       id.orig_p       id.resp_h\n        Field #    6             7        8        9               10\n                id.resp_p       proto   service duration        orig_bytes\n        Field #     11              12              13              14\n                resp_bytes      conn_state      local_orig      local_resp\n        Field #     15             16      17               18             19\n                missed_bytes    history orig_pkts       orig_ip_bytes  resp_pkts\n        Field #       20              21\n                resp_ip_bytes   tunnel_parents\n```\n\nAn example of a flow line from the `conn.log` is as follows (\"field #\" lines are our annotation):\n```\n        Field #       1                        2                      3\n                1601060272.439360       CC9S3G178KjzSMTGRk      192.168.100.224\n        Field #   4             5        6       7       8          9\n                 137    192.168.100.255 137     udp     dns     12.114023\n        Field #  10     11    12      13     14      15      16       17\n                1186    0     S0      -       -       0       D       23\n        Field #  18     19      20      21\n                1830    0       0       -\n```\n\nFor dns.log files (again, if you're not using JSON), make sure that the file matches the following:\n```\n        Field #       1       2          3               4               5               6             7         8\n                      ts      uid     id.orig_h       id.orig_p       id.resp_h       id.resp_p       proto   trans_id\n        Field #       9       10        11               12             13         14           15        16\n                     rtt     query    qclass         qclass_name       qtype   qtype_name      rcode   rcode_name\n        Field #      17      18      19      20      21        22         23        24\n                     AA      TC      RD      RA      Z       answers     TTLs    rejected\n```\n\nNote that all field names are not used. If you do not have a field, please give it an appropriate default\nvalue as defined by the [Zeek format](https://docs.zeek.org/en/master/logs/dns.html).\n\n\n### B. Streaming BayseFlow Collector\nmodule name: `streaming`\n\nThis module allows you to directly capture network traffic as unlabeled BayseFlows (BayseFlows without flow category \nlabels). This is beneficial for a number of reasons:\n\nBayseFlows are extremely lightweight, so you can actually do this continuously in the background without affecting \nsystem performance (i.e. you can collect network telemetry continuously on your endpoints)! BayseFlows have no \nidentifying data, so you can avoid worrying about accidentally leaking information (URIs, passwords, keys, etc...)\n\nTo import this module into your project, type the following:\n\n`from bayse_tools.streaming import streaming`\n\n#### Usage\nTo capture BayseFlows continuously using this module from your project, enter the following (note that you'll need\nto be root by default to capture packets):\n\n`streaming.start(<interface_name>, <duration_in_seconds>, <optional_verbosity>)`\n\nNote that the above will run in perpetuity, capturing packets from the interface you specified (such as *enp0s3* on\nUbuntu systems). Every time the specified duration you provided is reached (if you provide no value, it defaults to\n300 seconds), a sample will be created, processed, and summarized. Providing the optional `is_verbose` value will \nprint a small amount of information about the number of BayseFlows and its UUID.\n\n## BayseFlow Format\nThe BayseFlow format is saved as a `.bf` file and is comprised of records containing that look like the following:\n\n```\n{\n  \"hash\": \"6d8091a34ae3427bbffa5c19e5d3391c\",\n  \"trafficDate\": \"1654204899.899094\",\n  \"fileName\": \"testCase24_ipv6_withDNS_and_icmpv6.conn.bf\",\n  \"BayseFlows\": [\n    {\n      \"src\": \"192.168.12.164:62239\",\n      \"dst\": \"9.9.9.9:53\",\n      \"destinationNameSource\": \"original\",\n      \"srcPkts\": 1,\n      \"srcBytes\": 32,\n      \"dstPkts\": 1,\n      \"dstBytes\": 155,\n      \"relativeStart\": 0.0,\n      \"protocolInformation\": \"UDP\",\n      \"identifier\": \"CvJxCegvPKSYQpTeh\",\n      \"duration\": 0.055491\n    },\n    {\n      \"src\": \"2607:fb90:d726:7b19:5cc5:a122:d8ae:24e6:58740\",\n      \"dst\": \"r3.o.lencr.org:80\",\n      \"destinationNameSource\": \"passive\",\n      \"srcPkts\": 84,\n      \"srcBytes\": 14526,\n      \"dstPkts\": 47,\n      \"dstBytes\": 35524,\n      \"relativeStart\": 0.112856,\n      \"protocolInformation\": \"TCP\",\n      \"identifier\": \"COVJH14OZAUWEf1Vd\",\n      \"duration\": 48.68848\n    },\n    ...\n  ]\n}\n```\n\nDetails about each field are as follows:\n\n| Field Name                | Purpose                                                                                      | Derived How                                                                                                                                                                                                                          |\n|---------------------------|----------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n | hash                      | helps to identify the BayseFlow file                                                         | randomly-generated                                                                                                                                                                                                                   |\n| trafficDate               | identifies the time (as UTC epoch time in seconds.ms) the traffic capture started            | timestamps from initial file                                                                                                                                                                                                         |\n| fileName                  | name of the file                                                                             | based on name of input file                                                                                                                                                                                                          |\n| BayseFlows                | mapping of each flow to the BayseFlow format (fields below here are subfields of BayseFlows) | Combines packets/flows based on their 4-tuples                                                                                                                                                                                       |\n| --> src                   | identify the source of the flow                                                              | attempts to identify the true source based on how the flow is communicating; will add a DNS name if known                                                                                                                            |\n| --> dst                   | identify the destination of the flow                                                         | attempts to identify the true destination based on how the session is communicating; will add a DNS name if known                                                                                                                    |\n| --> destinationNameSource | identify how the destination was named                                                       | names are derived (in order) by direct knowledge of the name (in the flow; `session`), the closest DNS lookup (`passive`), a short-term local cache (`cache`), a long-term local cache (`cache`), or they stay as an IP (`original`) |\n| --> srcPkts               | number of packets from the source                                                            | counts how many packets seen in the input file from this source in this flow                                                                                                                                                         |\n| --> srcBytes              | number of bytes from the source                                                              | counts how many bytes were seen in the transport layer payloads (or ICMP data) from the source in this flow                                                                                                                          | \n| --> dstPkts               | number of packets from the destination                                                       | counts how many packets seen in the input file from this destination in this flow                                                                                                                                                    |\n| --> dstBytes              | number of bytes from the destination                                                         | counts how many bytes were seen in the transport layer payloads (or ICMP data) from the destination in this flow                                                                                                                     | \n| --> relativeStart         | how far into this file this flow began                                                       | time (as seconds.ms) from `trafficDate`                                                                                                                                                                                              | \n| --> protocolInformation   | communicate any information about the transport layer protocol (or ICMP) seen                | transport layer reported by network layer                                                                                                                                                                                            |\n| --> identifier            | a way to tie the BayseFlow back to a flow in the original input format                       | unique_id for Zeek, TCP/UDP stream for Packet Captures                                                                                                                                                                               |\n| --> duration              | identify how long (seconds.ms) a flow lasted                                                 | start of first packet to end of last packet in flow                                                                                                                                                                                  |\n\n\n## Labeling\nBayseFlows can also be labeled with information about characteristics of the flow that are interesting. These labels \nare useful for identifying activity that is (ab)normal, understanding how data is flowing locally or to/from the \nInternet, and so on. Doing so adds the `label` field to the `.bf` file. Take the following flow for example:\n\n```\n    {\n      \"src\": \"192.168.1.133:59893\",\n      \"dst\": \"54.37.70.105:8080\",\n      \"destinationNameSource\": \"original\",\n      \"srcPkts\": 218,\n      \"srcBytes\": 1540,\n      \"dstPkts\": 1801,\n      \"dstBytes\": 2497139,\n      \"relativeStart\": 17.916785,\n      \"protocolInformation\": \"TCP\",\n      \"identifier\": \"115\",\n      \"duration\": 5.62408,\n      \"label\": \"floodOfXLFilelikeDownloaded\"\n    }\n```\n\nThe `floodOfXLFilelikeDownloaded` shows us that something that looks like a large file was downloaded in just \nseconds. Depending on whether or not that activity is expected from that destination can help you to determine if \nyou should care.\n\nTo label your data, you'll first need to register for an account on [Bayse](https://www.bayse.io/register), request \na free API key, and reach out to hello at bayse [.] io. We'd love to help you get started!\n\n## Troubleshooting\n\nIf you are having issues installing `bayse-tools`, here are some common issues:\n* Your system does not have libpcap-dev installed. Please refer to the [Installation](#installation) steps above for \n  details.\n* You have `pcapy` installed and are trying to use Python 3.10 or greater. In v1.0.1 of `bayse-tools`, we have moved \n  away from `pcapy` in favor of `pcapy-ng`. Please make sure to uninstall the former if it exists.\n\nIf nothing above helps or you have other questions, please reach out to us at support at bayse [.] io\n\n## License\nThis software is provided under the MIT Software License. See the accompanying LICENSE file for more information.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BayseIntelligence/bayse_tools",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bayse-tools",
    "package_url": "https://pypi.org/project/bayse-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/bayse-tools/",
    "project_urls": {
      "Bug Tracker": "https://github.com/BayseIntelligence/bayse_tools/issues",
      "Homepage": "https://github.com/BayseIntelligence/bayse_tools"
    },
    "release_url": "https://pypi.org/project/bayse-tools/1.0.5/",
    "requires_dist": [
      "ipaddress (>=1.0.23)",
      "jmespath (>=0.10.0)",
      "pcapy-ng (>=1.0.9)",
      "pathlib (>=1.0.1)",
      "python-dateutil (>=2.8.2)",
      "python-magic (>=0.4.24)",
      "six (>=1.16.0)",
      "urllib3 (>=1.26.6)",
      "filelock (>=3.4.0)",
      "jsonify (>=0.5)",
      "argparse (>=1.4.0)"
    ],
    "requires_python": ">=3.9",
    "summary": "A collection of tools useful across the Bayse ecosystem.",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15855102,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc8c8526070d13855e49194d3dfdb3e4918cf69e7ca61a6b8d4b80f4aee59aa0",
          "md5": "f4cc242929ebeb26a8e99c1a1f590ff3",
          "sha256": "afbd4c2772068850ac2c46b23681f6740b37b351307d8fd8c9b3123b4d69366f"
        },
        "downloads": -1,
        "filename": "bayse_tools-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4cc242929ebeb26a8e99c1a1f590ff3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14310493,
        "upload_time": "2022-10-05T14:54:55",
        "upload_time_iso_8601": "2022-10-05T14:54:55.146518Z",
        "url": "https://files.pythonhosted.org/packages/cc/8c/8526070d13855e49194d3dfdb3e4918cf69e7ca61a6b8d4b80f4aee59aa0/bayse_tools-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a5c33b77305204848ba919574a298589dc4de8a6056ac6d400fef904161258c",
          "md5": "6ac9ad6bd4ad0bc70cdb036e0b3b35be",
          "sha256": "220e57e11cfe788b0a79f197bcdfb1800415df93615392e5f480e14fe424e198"
        },
        "downloads": -1,
        "filename": "bayse-tools-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6ac9ad6bd4ad0bc70cdb036e0b3b35be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14272412,
        "upload_time": "2022-10-05T14:54:57",
        "upload_time_iso_8601": "2022-10-05T14:54:57.745972Z",
        "url": "https://files.pythonhosted.org/packages/3a/5c/33b77305204848ba919574a298589dc4de8a6056ac6d400fef904161258c/bayse-tools-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b06b201e60b726eb0c3c827b2eaf0f0a0f7d9db43999e6e697e205183038c4e4",
          "md5": "6a7fed8072830a2170855e09d1518784",
          "sha256": "8afcd1878da0c83c1ca974c68f037680ea5f8f0c914ad567ae24c3a6102c1a8f"
        },
        "downloads": -1,
        "filename": "bayse_tools-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a7fed8072830a2170855e09d1518784",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14367169,
        "upload_time": "2022-11-07T19:18:22",
        "upload_time_iso_8601": "2022-11-07T19:18:22.898730Z",
        "url": "https://files.pythonhosted.org/packages/b0/6b/201e60b726eb0c3c827b2eaf0f0a0f7d9db43999e6e697e205183038c4e4/bayse_tools-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfc53924ef1ec24559942578e7a0f9468d8e5252e434d8c3af3a4bc7e077baae",
          "md5": "f7ce1d53587ef5b9119e645b9f359d3b",
          "sha256": "a8ca8995849a130d135caf5f569cf2ad35198b7d7995cea383ac68fee4b2c7e3"
        },
        "downloads": -1,
        "filename": "bayse-tools-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f7ce1d53587ef5b9119e645b9f359d3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14331032,
        "upload_time": "2022-11-07T19:18:27",
        "upload_time_iso_8601": "2022-11-07T19:18:27.199165Z",
        "url": "https://files.pythonhosted.org/packages/bf/c5/3924ef1ec24559942578e7a0f9468d8e5252e434d8c3af3a4bc7e077baae/bayse-tools-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faf3e4029c7683a908a8680c77cf7ada6ca0ba2c61a2fa7b64b2586abe240fca",
          "md5": "e83736dad8af1276566be7e279c797ad",
          "sha256": "81411ca240a380621f8e0d6f9af92462d22824ca61afe4f29bb2c7191400bccf"
        },
        "downloads": -1,
        "filename": "bayse_tools-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e83736dad8af1276566be7e279c797ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14367606,
        "upload_time": "2022-11-08T15:28:29",
        "upload_time_iso_8601": "2022-11-08T15:28:29.154617Z",
        "url": "https://files.pythonhosted.org/packages/fa/f3/e4029c7683a908a8680c77cf7ada6ca0ba2c61a2fa7b64b2586abe240fca/bayse_tools-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d06104e8e9f5bc46420582908a1d2e10fce533647958cdfa4a984f145be17b48",
          "md5": "f0fbb37cd21f0c315879b9bae826fa32",
          "sha256": "97f02a9035111be16104e327f969894e7f07681b59789a7c21f7060110ea10ce"
        },
        "downloads": -1,
        "filename": "bayse-tools-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f0fbb37cd21f0c315879b9bae826fa32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14331475,
        "upload_time": "2022-11-08T15:28:32",
        "upload_time_iso_8601": "2022-11-08T15:28:32.801752Z",
        "url": "https://files.pythonhosted.org/packages/d0/61/04e8e9f5bc46420582908a1d2e10fce533647958cdfa4a984f145be17b48/bayse-tools-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdfc9f9e793d924b0196a4fc3e0ba267b19877d49983ea80ea4d653786c5f295",
          "md5": "a7588c9eeea7724f50921a4102fba7f8",
          "sha256": "662c12ee13d49fbbc4420ec43b435efec87ce322ca0f6e6c2241a1ae161dc805"
        },
        "downloads": -1,
        "filename": "bayse_tools-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7588c9eeea7724f50921a4102fba7f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14386508,
        "upload_time": "2022-11-14T15:00:14",
        "upload_time_iso_8601": "2022-11-14T15:00:14.836719Z",
        "url": "https://files.pythonhosted.org/packages/fd/fc/9f9e793d924b0196a4fc3e0ba267b19877d49983ea80ea4d653786c5f295/bayse_tools-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7144f2e71664d277a0e4721edab9fd3911e23f160def91582f2d255679f182de",
          "md5": "87de5fa8699691582cbc2b8f54f266d6",
          "sha256": "06bb71894af199735df64873a32827b6477a47246b1dbc379679bc571a40311d"
        },
        "downloads": -1,
        "filename": "bayse-tools-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "87de5fa8699691582cbc2b8f54f266d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14336936,
        "upload_time": "2022-11-14T15:00:17",
        "upload_time_iso_8601": "2022-11-14T15:00:17.711291Z",
        "url": "https://files.pythonhosted.org/packages/71/44/f2e71664d277a0e4721edab9fd3911e23f160def91582f2d255679f182de/bayse-tools-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ce4e70e01d8bd53c37aac4b605800c832f779454f041f56c60a55a5dda5b251",
          "md5": "909d0ae2fe10a5a02eb7dec3422e1a08",
          "sha256": "dc2dd902be36a6e9708c7d697db41e652d286ddf38d5e2bbe1c33acb5d0c1882"
        },
        "downloads": -1,
        "filename": "bayse_tools-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "909d0ae2fe10a5a02eb7dec3422e1a08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14388822,
        "upload_time": "2022-11-16T18:04:48",
        "upload_time_iso_8601": "2022-11-16T18:04:48.435052Z",
        "url": "https://files.pythonhosted.org/packages/1c/e4/e70e01d8bd53c37aac4b605800c832f779454f041f56c60a55a5dda5b251/bayse_tools-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7889bb2889bfa4f3b284d32fa4c4da308da068e04b83448adbca6eded4514c2",
          "md5": "727dfb542ccd1132541b83b487ab8500",
          "sha256": "d8c76951be24baf5b0e4d4138a12ffdd983be157abd6d428538681fc559e1911"
        },
        "downloads": -1,
        "filename": "bayse-tools-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "727dfb542ccd1132541b83b487ab8500",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14338351,
        "upload_time": "2022-11-16T18:04:51",
        "upload_time_iso_8601": "2022-11-16T18:04:51.333152Z",
        "url": "https://files.pythonhosted.org/packages/d7/88/9bb2889bfa4f3b284d32fa4c4da308da068e04b83448adbca6eded4514c2/bayse-tools-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67ae4c342a571da5ae5a63efb210c4cca34ed1c78abff27cc58a38e5fc8296a3",
          "md5": "19e5cbe8a8fcc3f6dc6c2a2bd8b7593e",
          "sha256": "5e60326e66cb506ec1f628ea3bd79226ebfbc3c3446ce3e55a75ccbe41711939"
        },
        "downloads": -1,
        "filename": "bayse_tools-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19e5cbe8a8fcc3f6dc6c2a2bd8b7593e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 14388856,
        "upload_time": "2022-11-22T14:54:49",
        "upload_time_iso_8601": "2022-11-22T14:54:49.855482Z",
        "url": "https://files.pythonhosted.org/packages/67/ae/4c342a571da5ae5a63efb210c4cca34ed1c78abff27cc58a38e5fc8296a3/bayse_tools-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcb71df2174800e3fd8607e2d1e3df8b0c5f96400c918291c29ef022e3285a6f",
          "md5": "d62113de5bff365750394f36b1f79e42",
          "sha256": "171ee09e20da6197d374f37f3dbc3af3fc87a887c432839502b68a4250ba5f91"
        },
        "downloads": -1,
        "filename": "bayse-tools-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d62113de5bff365750394f36b1f79e42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 14338428,
        "upload_time": "2022-11-22T14:54:54",
        "upload_time_iso_8601": "2022-11-22T14:54:54.690207Z",
        "url": "https://files.pythonhosted.org/packages/bc/b7/1df2174800e3fd8607e2d1e3df8b0c5f96400c918291c29ef022e3285a6f/bayse-tools-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "67ae4c342a571da5ae5a63efb210c4cca34ed1c78abff27cc58a38e5fc8296a3",
        "md5": "19e5cbe8a8fcc3f6dc6c2a2bd8b7593e",
        "sha256": "5e60326e66cb506ec1f628ea3bd79226ebfbc3c3446ce3e55a75ccbe41711939"
      },
      "downloads": -1,
      "filename": "bayse_tools-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "19e5cbe8a8fcc3f6dc6c2a2bd8b7593e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 14388856,
      "upload_time": "2022-11-22T14:54:49",
      "upload_time_iso_8601": "2022-11-22T14:54:49.855482Z",
      "url": "https://files.pythonhosted.org/packages/67/ae/4c342a571da5ae5a63efb210c4cca34ed1c78abff27cc58a38e5fc8296a3/bayse_tools-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcb71df2174800e3fd8607e2d1e3df8b0c5f96400c918291c29ef022e3285a6f",
        "md5": "d62113de5bff365750394f36b1f79e42",
        "sha256": "171ee09e20da6197d374f37f3dbc3af3fc87a887c432839502b68a4250ba5f91"
      },
      "downloads": -1,
      "filename": "bayse-tools-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "d62113de5bff365750394f36b1f79e42",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 14338428,
      "upload_time": "2022-11-22T14:54:54",
      "upload_time_iso_8601": "2022-11-22T14:54:54.690207Z",
      "url": "https://files.pythonhosted.org/packages/bc/b7/1df2174800e3fd8607e2d1e3df8b0c5f96400c918291c29ef022e3285a6f/bayse-tools-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}