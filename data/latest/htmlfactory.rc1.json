{
  "info": {
    "author": "Jeff Gruenbaum",
    "author_email": "jeff.gruenbaum@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# htmlfactory     [![Build Status](https://travis-ci.com/jgrugru/htmlfactory.svg?branch=main)](https://travis-ci.com/jgrugru/htmlfactory)\nA simple way to produce HTML with Python.\nSource code can be found on [github](https://github.com/jgrugru/htmlfactory).\n```Python\npip install htmlfactory\n```\n\n**htmlfactory** simplifies the process of making HTML through Python.\n\n#### Examples:\n\n###### basic div example\n```Python\nTagFactory(\"div.my-class\")\n\n```\n\n```html\n<div class='my-class'></div>\n```\n\nTo add content between the divs, we can pass a string or *TagFactory* objects.\n```Python\n# pass a string\nTagFactory(\"div.my-class\", 'I am inside the div.')\n\n```\n\n```html\n<div class='my-class'>I am inside the div.</div>\n```\n\n```Python\n# pass a TagFactory object\nTagFactory(\"div.my-class\",  TagFactory(\"div\", \"child tag\"))\n\n```\n\n```html\n<div class=\"my-class\">\n  <div>\n    child tag\n  </div>\n</div>\n```\n\n###### children div example\n\npass a list of *TagFactory* objects\n```Python\nTagFactory(\"div.parent-div\", [\n      TagFactory(\"div.first-child-div\", (\n        TagFactory(\"div.second-child-div\", \"It's party time.\")))])\n\n```\n\n```html\n<div class='parent-div'>\n  <div class='first-child-div'>\n    <div class='second-child-div'>\n      It's party time.\n    </div>\n  </div>\n</div>\n```\n>Note:\n>Children tags can be passed through a list, tuple, or singular *TagFactory* object.\n\n###### printing *TagFactory* objects\n\nTo output a TagFactory object, use print.\n```Python\nprint(TagFactory('div', TagFactory('form')))\n```\n\n```html\n<div><form></form></div>\n```\n\nUse the function *pretty_str()* for an indented output.\n```Python\nprint(TagFactory('div', TagFactory('form')).pretty_str())\n```\n\n```html\n<div>\n  <form>\n  </form>\n</div>\n```\n\nIf you would like an HTML, body, and head tag to be included, pass *add_html_tags=True*.\n```Python\nprint(TagFactory('div', TagFactory('form')).pretty_str(add_html_tags=True))\n```\n\n```html\n<html>\n<head>\n</head>\n<body>\n  <div>\n    <form>\n    </form>\n  </div>\n</body>\n</html>\n```\n###### multiple classes example\n\nYou can add as many classes as you want to your tag object:\n```Python\nTagFactory(\"div.class1.class2.class3.class4.class5\", 'I have a lot of classes.')\n```\n\n```html\n<div class='class1 class2 class3 class4 class5'>I have a lot of classes.</div>\n```\n###### adding attributes example\n\nYou can add attributes to your tab object by using keyword arguments:\n```Python\nTagFactory(\"form\", 'I have an action & method attribute.', action=\"/action_page.php\", method=\"get\")\n```\n\n```html\n<form action='/action_page.php' method='get'>I have an action and method attribute.</form>\n```\n\n>Note:\n>'for' is a keyword so it cannot be used as a keyword argument. Instead use 'four'.\n>Example: ```TagFactory(\"div.my-class\", \"inside the div\", four=\"my-form\")```\n\n>Dashes (-) also cause a similar problem. For all html attributes that require a dash, \n> omit the dash. The dash will be added upon creation of the object.\n\n```Python\n# with an omitted dash\nTagFactory(\"div\", role=\"application\", ariadescribedby=\"info\")\n```\n\n```html\n<div role='application' aria-describedby='info'></div>\n```\n\n###### adding tags without closing brackets example\n\nYou can create tags without closing brackets, which may be useful if wanting to add an img or link:\n```Python\ntest_tag = SingletonTag(\"img\", border=\"0\", alt=\"TestTag\",\n                        src=\"logo_w3s.gif\", width=\"100\",\n                        height=\"100\")\n```\n\n```html\n<img border='0' alt='TestTag' src='logo_w3s.gif' width='100' height='100'>\n```\n\nThe SingletonTag class is inherited to the TagFactory class, so SingletonTags can be treated like TagFactory objects and added as children html elements to other TagFactory objects.\n```Python\na_tag = TagFactory(\"a\", SingletonTag(\"img\", src=\"logo_w3s.gif\"),\n                   href=\"www.google.com\")\n```\n\n```html\n<a href='www.google.com'><img src='logo_w3s.gif'></a>\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jgrugru/htmlfactory",
    "keywords": "html,template,templating,xml,document,form,rendering",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "htmlfactory",
    "package_url": "https://pypi.org/project/htmlfactory/",
    "platform": "",
    "project_url": "https://pypi.org/project/htmlfactory/",
    "project_urls": {
      "Homepage": "https://github.com/jgrugru/htmlfactory"
    },
    "release_url": "https://pypi.org/project/htmlfactory/0.0.1/",
    "requires_dist": [
      "beautifulsoup4 (>=2.2)"
    ],
    "requires_python": "",
    "summary": "A simple way to produce HTML with Python.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9489166,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8d26abdade907f01082ebeca5935ff8134275dddc9280fbfe24154e4fc5c2ae",
          "md5": "223fe91a07ccc2e35ecd5dd2ca40a4b2",
          "sha256": "4dee2a7863f76e80357491a9a888d2edc4eefac588ff697fae2a751d23ee5065"
        },
        "downloads": -1,
        "filename": "htmlfactory-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "223fe91a07ccc2e35ecd5dd2ca40a4b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7146,
        "upload_time": "2021-02-22T14:42:47",
        "upload_time_iso_8601": "2021-02-22T14:42:47.925717Z",
        "url": "https://files.pythonhosted.org/packages/a8/d2/6abdade907f01082ebeca5935ff8134275dddc9280fbfe24154e4fc5c2ae/htmlfactory-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc25c6275f450f86a616b451a3acec59f33e296866b11158d648296a2d4d9b96",
          "md5": "7dfb593844ec039fc81f74feef86a097",
          "sha256": "9b5e44bdd71b0b0a948cf2488984b534757ace337b9c6eee3a784cde5135d890"
        },
        "downloads": -1,
        "filename": "htmlfactory-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7dfb593844ec039fc81f74feef86a097",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6048,
        "upload_time": "2021-02-22T14:42:49",
        "upload_time_iso_8601": "2021-02-22T14:42:49.421466Z",
        "url": "https://files.pythonhosted.org/packages/bc/25/c6275f450f86a616b451a3acec59f33e296866b11158d648296a2d4d9b96/htmlfactory-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8d26abdade907f01082ebeca5935ff8134275dddc9280fbfe24154e4fc5c2ae",
        "md5": "223fe91a07ccc2e35ecd5dd2ca40a4b2",
        "sha256": "4dee2a7863f76e80357491a9a888d2edc4eefac588ff697fae2a751d23ee5065"
      },
      "downloads": -1,
      "filename": "htmlfactory-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "223fe91a07ccc2e35ecd5dd2ca40a4b2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7146,
      "upload_time": "2021-02-22T14:42:47",
      "upload_time_iso_8601": "2021-02-22T14:42:47.925717Z",
      "url": "https://files.pythonhosted.org/packages/a8/d2/6abdade907f01082ebeca5935ff8134275dddc9280fbfe24154e4fc5c2ae/htmlfactory-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc25c6275f450f86a616b451a3acec59f33e296866b11158d648296a2d4d9b96",
        "md5": "7dfb593844ec039fc81f74feef86a097",
        "sha256": "9b5e44bdd71b0b0a948cf2488984b534757ace337b9c6eee3a784cde5135d890"
      },
      "downloads": -1,
      "filename": "htmlfactory-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7dfb593844ec039fc81f74feef86a097",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6048,
      "upload_time": "2021-02-22T14:42:49",
      "upload_time_iso_8601": "2021-02-22T14:42:49.421466Z",
      "url": "https://files.pythonhosted.org/packages/bc/25/c6275f450f86a616b451a3acec59f33e296866b11158d648296a2d4d9b96/htmlfactory-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}