{
  "info": {
    "author": "Janny Au",
    "author_email": "jannya@hyvedesignsolutions.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Hyve PyIPMI\n\nPure Python-based IPMI client developed by Hyve Design Solutions.\n\nThe original purpose of this package is to provide a pure python-based IPMI client library for developing Python test scripts for the IPMI service.  It provides two categories: one is for IPMI raw commands and the other is for PyIPMI commands, which are similar to the famous ipmitool commands like \"ipmitool mc info\" or \"ipmitool sdr list\".\n\nBy this pure Python library, several console programs are provided for BMC developers' convenience.\n\nSamples are included in the package to show how to write test scripts.  The performance of using this pure Python library is significantly faster than using a hybrid method of shell scripts + system calls to ipmitool to develop your test scripts.\n\n## Features\n\n* Supported IPMI channels\n  * RMCP\n  * RMCP+\n  * KCS\n  * Message bridging from LAN/KCS to IPMB\n* Console programs\n  * pyipmi - a Python program similar to ipmitool\n  * pyipmr - a Python program supports \"ipmitool raw\" and has message bridging capability\n  * pyping - an RMCP client\n  * pysh - an interactive shell for the PyIPMI commands, with auto completion and up/down keys to show previous commands\n* Auto test interface\n  * IPMI raw command support (see samples 1-3 below)\n  * PyIPMI command support (see samples 4-6 below)\n\n## Installation\nThe following steps were tested on Ubuntu desktop 16.04 LTS, 18.04 LTS, and 20.04 LTS.\n\n### 1) Prerequisite\n```\n$ sudo apt -y install git python3-pip\n```\n\n### 2) Download the source\n```\n$ git clone https://github.com/hyvedesignsolutions/hyve-pyipmi\n$ cd hyve-pyipmi\n```\n\n### 3) Install the Hyve PyIPMI package and the console programs\n```\n$ pip3 install .\n```\n\n## Test Hyve PyIPMI\nBy default, pip3 will install the Hyve PyIPMI package in $HOME/.local/lib/python3.x/site-packages and its console programs in $HOME/.local/bin.  Generally speaking, the site-packages directory has been included in sys.path and you need to add the bin directory in PATH by yourself.  For example, execute\n```\n$ export PATH=~/.local/bin:$PATH\n```\nThen, you are able to execute your first PyIPMI command.  For example, we execute something very similar to ipmitool as follows:\n```\n$ pyipmi -H 192.168.0.169 -I lanplus -U root -P root123 raw 6 1\n```\n\nNote that by default, if you choose to use \"-I kcs\" that goes through the Linux OpenIPMI driver, you will need root privilege to execute the program.\n\nDuring the first time when the package is used, it automatically generates a user config file in $HOME/.config/pyipmi/pyipmi.conf with default settings.  Then, the options supported will overwrite some of the settings.  In the above example, it specifies four options and issues a raw IPMI command.\n\nAfter the config file is created, you can choose to either use all the settings in the config file or continue to overwrite some of the options as the previous example.  The program will automatically record the latest overwritten values in the config file.\n```\n$ pyipmi sdr list   # Just use the settings in the config file\n$ pyipmi -C 2 user list  # Use RMCP+ Cipher Suite 2\n$ pyipmi -U hyve -P hyve456 lan print 1  # User credential hyve/hyve456\n```\nType -h to show all the command options and use \"help\" command to list the available commands.\n```\n$ pyipmi -h\n$ pyipmi help\n```\n\n## Advanced Usage\nThe program pyipmr is equal to \"pyipmi raw\" + additional features.  It supports\n* IPMI response LUN other than 0\n* IPMI message bridging from LAN to IPMB\n```\n$ pyipmr 6 1   # Get Device ID (NetFn=App, CMD=01h)\n$ pyipmr -L 1 6 1  # LUN = 1\n$ pyipmr -b 6 -t 0x2c raw 6 1  # Bridge Get Device ID to destination 0x2c via channel 6\n```\n\n## Test scripts examples\n**Sample 1**\n```\n#!/usr/bin/env python3\nimport sys\nfrom pyipmi.util import PyTest\n\n# Just overwrite the run_commands() method and you can issue\n# IPMI commands like this example\nclass Sample1(PyTest):\n    def __init__(self):\n        super(Sample1, self).__init__()\n\n    def run_commands(self, argv=None):\n        # issue_raw_cmd(req, lun):\n        #     req (list): [NetFn, CMD, Req_Data]\n        #     lun (int): default is 0\n        print('Get Device ID:')\n        rsp = self.intf.issue_raw_cmd([6, 1])\n        self.print_rsp(rsp)\n\n        print('\\nGet User Name 2:')\n        rsp = self.intf.issue_raw_cmd([6, 0x46, 2])\n        self.print_rsp(rsp)\n\n        print('\\nGet LAN Config 1:')\n        rsp = self.intf.issue_raw_cmd([0x0c, 2, 1, 1, 0, 0])\n        self.print_rsp(rsp)\n\nif __name__ == '__main__':\n    test = Sample1()\n    sys.exit(test.run())\n```\n\n**Sample 2**\n```\n#!/usr/bin/env python3\nimport sys\nfrom pyipmi.util import PyTest\nfrom pyipmi.util.config import PyOpts\n\n# Same as sample1, with simple checks on the response data\n# and overwrite some values of the user config\nclass Sample2(PyTest):\n    def __init__(self, opts):\n        super(Sample2, self).__init__(opts)\n\n    def run_commands(self, argv=None):\n        req = ([[6, 1],                     # Get Device ID\n                [6, 0x46, 2],               # Get User Name 2\n                [0x0c, 2, 1, 1, 0, 0]])     # Get LAN Config 1\n\n        rsp = ([[0, 0x22, 1, 1, 2, 2, 0x9f, 0x55, 0xda, 0, 1, 0, 0x59, 1, 0, 0],\n                [0, 0x72, 0x6f, 0x6f, 0x74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0x11, 0x15]])\n\n        # run the commands\n        count_p = 0\n        count_f = 0\n        for i in range(len(req)):\n            rsp_one = self.intf.issue_raw_cmd(req[i])\n            if rsp_one == rsp[i]:\n                print('test case {0}: PASSED!'.format(i + 1))\n                count_p += 1\n            else:            \n                print('test case {0}: FAILED!'.format(i + 1))\n                count_f += 1\n\n        # output the results            \n        print('Total {0} cases executed: PASSED {1}, FAILED {2}.'\n                .format(count_p + count_f, count_p, count_f))\n\nif __name__ == '__main__':\n    pyopts = PyOpts()\n    pyopts.add_options()\n    opts = pyopts.parse_options('-U hyve -P hyve123')\n\n    test = Sample2(opts)\n    sys.exit(test.run())\n```\n\n**Sample 3**\n```\n#!/usr/bin/env python3\nimport sys\nfrom pyipmi.util import PyTest\nfrom pyipmi.util.config import PyOpts\n\n# Message bridging example\n# Support the following configuration\n# [PyIPMI] <-- LAN (RMCP/RMCP+) --> [BMC] <-- IPMB --> [ME]\nclass Sample3(PyTest):\n    def __init__(self, opts, chnl, target):\n        self.chnl = chnl\n        self.target = target\n\n        super(Sample3, self).__init__(opts)\n\n    def bridge_cmd(self, req):\n        # issue_bridging_cmd(chnl, target, req, lun):\n        #     chnl (int): IPMI channel number to bridge the message\n        #     target (int): I2C slave address of the bridging destination\n        #     req (list): [NetFn, CMD, Req_Data]\n        #     lun (int): default is 0\n        return self.intf.issue_bridging_cmd(self.chnl, self.target, req) \n\n    def run_commands(self, argv=None):       \n        print('Get Device ID:')\n        rsp = self.bridge_cmd([6, 1])\n        self.print_rsp(rsp)\n\n        print('\\nGet SEL Time:')\n        rsp = self.bridge_cmd([0xa, 0x48])\n        self.print_rsp(rsp)\n\n        print('\\nGet Event Receiver:')\n        rsp = self.bridge_cmd([4, 1])\n        self.print_rsp(rsp)\n\n        print('\\nGet Intel ME FW Capabilities:')\n        rsp = self.bridge_cmd([0x2e, 0xde, 0x57, 1, 0, 0, 0, 0, 0, 2, 0xff, 0])\n        self.print_rsp(rsp)\n\n        print('\\nGet Intel ME Factory Presets Signature:')\n        rsp = self.bridge_cmd([0x2e, 0xe0, 0x57, 1, 0])\n        self.print_rsp(rsp)\n\n        print('\\nGet Exception Data:')\n        rsp = self.bridge_cmd([0x2e, 0xe6, 0x57, 1, 0, 0])\n        self.print_rsp(rsp)\n\n        print('\\nGet Sensor Reading:')\n        sensor_num = (8, 197)\n        for num in sensor_num:\n            rsp = self.bridge_cmd([4, 0x2d, num])\n            self.print_rsp(rsp)\n\n        print('\\nGet SEL Entry:')\n        req = [0xa, 0x43, 0, 0, 0, 0, 0, 0xff]\n        rsp = self.bridge_cmd(req)\n        id1, id2 = rsp[1:3]        \n        while not (id1 == 0xff and id2 == 0xff):\n            req[4], req[5] = id1, id2\n            rsp = self.bridge_cmd(req)\n            id1, id2 = rsp[1:3]        \n            self.print_rsp(rsp)\n\nif __name__ == '__main__':\n    pyopts = PyOpts()\n    pyopts.add_options()\n    opts = pyopts.parse_options('-H 10.19.84.90 -I lanplus -U admin -P admin')\n\n    test = Sample3(opts, 6, 0x2c)\n    sys.exit(test.run())\n```\n\n**Sample 4**\n```\n#!/usr/bin/env python3\nfrom pyipmi.cmds import PyCmds\n\nif __name__ == '__main__':\n    # This example shows how to use PyIPMI commands in a script\n    cmd = PyCmds()\n    cmd.exec_command('raw 6 1')\n    cmd.exec_command('mc info')\n    cmd.exec_command('chassis status')\n    cmd.exec_command('power status')\n    cmd.exec_command('sdr list')\n    cmd.exec_command('sel list')\n    cmd.exec_command('sensor list')\n    cmd.exec_command('lan print 1')\n    cmd.exec_command('user list')\n```\n\n**sample 5**\n```\n#!/usr/bin/env python3\nfrom pyipmi.cmds import PyCmds\nfrom pyipmi.util.config import PyOpts\n\nif __name__ == '__main__':\n    # Same as sample4,\n    # with overwriting some of the options in the user config\n    pyopts = PyOpts()\n    pyopts.add_options()\n    opts = pyopts.parse_options('-U hyve -P hyve123')\n\n    cmd = PyCmds(opts)\n    cmd.exec_command('raw 6 1')\n    cmd.exec_command('mc info')\n    cmd.exec_command('chassis status')\n    cmd.exec_command('power status')\n    cmd.exec_command('sdr list')\n    cmd.exec_command('sel list')\n    cmd.exec_command('sensor list')\n    cmd.exec_command('lan print 1')\n    cmd.exec_command('user list')\n```\n\n**Sample 6**\n```\n#!/usr/bin/env python3\nfrom pyipmi.cmds import PyCmds, StrEx\nfrom pyipmi.util.config import PyOpts\n\ndef find_line(target, src_str):\n    ret = '(not found)'\n    list1 = src_str.split('\\n')    \n    for s in list1:\n        if s[:len(target)] == target:\n            ret = s\n            break\n\n    return ret + '\\n'\n\nif __name__ == '__main__':\n    pyopts = PyOpts()\n    pyopts.add_options()\n    opts = pyopts.parse_options('-U hyve -P hyve123')\n\n    # Instead of printing out the results to the console, this sample shows\n    # how to record them in a string named 'print_str'.\n    print_str = StrEx()\n    cmd = PyCmds(opts, print_str)\n\n    # The results will be appended in 'print_str' when the next command is called, \n    # just like what you see from the console by running sample4 and sample5.\n    # If you don't want this, you need to explictly call 'print_str.reset()'\n    # before calling the next cmd.exec_command().\n\n    # In this example, assume we'd like to retrieve specific lines from the outputs\n    cmd.exec_command('raw 6 1')\n    ret_all = print_str.get_str()\n    print_str.reset()\n\n    cmd.exec_command('mc info')\n    ret = print_str.get_str()\n    ret_all += find_line('Manufacturer ID', ret)\n    print_str.reset()\n\n    cmd.exec_command('lan print 1')\n    ret = print_str.get_str()\n    ret_all += find_line('RMCP+ Cipher Suites', ret)    \n\n    print(ret_all)\n```\n\n## Contact\nYou may like to contact Janny Au, the main developer of this program, if you have any questions or suggestions.\n* Janny Au: <jannya@hyvedesignsolutions.com>\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hyvedesignsolutions/hyve-pyipmi",
    "keywords": "ipmi,rmcp,rmcpp,kcs,openipmi",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hyve-pyipmi",
    "package_url": "https://pypi.org/project/hyve-pyipmi/",
    "platform": "linux",
    "project_url": "https://pypi.org/project/hyve-pyipmi/",
    "project_urls": {
      "Homepage": "https://github.com/hyvedesignsolutions/hyve-pyipmi"
    },
    "release_url": "https://pypi.org/project/hyve-pyipmi/1.2.5/",
    "requires_dist": [
      "cryptography",
      "pycrypto"
    ],
    "requires_python": ">=3.6",
    "summary": "Pure Python-based IPMI client developed by Hyve Design Solutions.",
    "version": "1.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10982714,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1acd6ec15b1f2fa74f367d040cb5fb839e9e052a5508529e21ce6fe4a9cd6cc",
          "md5": "c799c5764f3a11983ece066c8f3d94e3",
          "sha256": "98dc3524512c19c352d17283a6910e1cc0f55c3091589fe4de4616938f050c6b"
        },
        "downloads": -1,
        "filename": "hyve_pyipmi-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c799c5764f3a11983ece066c8f3d94e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 86401,
        "upload_time": "2020-11-09T07:20:42",
        "upload_time_iso_8601": "2020-11-09T07:20:42.208317Z",
        "url": "https://files.pythonhosted.org/packages/c1/ac/d6ec15b1f2fa74f367d040cb5fb839e9e052a5508529e21ce6fe4a9cd6cc/hyve_pyipmi-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ea345c28fae2caf13b435d85295dbe70c7212d819ecab0c98c66b13f09a3a06",
          "md5": "1e1fa887d5048786fed9b81fe5fd427e",
          "sha256": "b506abe9542ba3796bef89c983969e9dc298f5039a7619de0e6387ecae1f6db1"
        },
        "downloads": -1,
        "filename": "hyve-pyipmi-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1e1fa887d5048786fed9b81fe5fd427e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48306,
        "upload_time": "2020-11-09T07:20:45",
        "upload_time_iso_8601": "2020-11-09T07:20:45.178785Z",
        "url": "https://files.pythonhosted.org/packages/7e/a3/45c28fae2caf13b435d85295dbe70c7212d819ecab0c98c66b13f09a3a06/hyve-pyipmi-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43c5824d81236ec66b0b7f9445dd4795929e7779c1720e7dc72d7fe230aad4a1",
          "md5": "18c217406bcbd3fae085dc22ea453a42",
          "sha256": "567a2e3e0da808a19122f48d9a2d203715a3f23552f893a4f848b3febed040be"
        },
        "downloads": -1,
        "filename": "hyve_pyipmi-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18c217406bcbd3fae085dc22ea453a42",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 86522,
        "upload_time": "2020-11-14T02:02:56",
        "upload_time_iso_8601": "2020-11-14T02:02:56.186688Z",
        "url": "https://files.pythonhosted.org/packages/43/c5/824d81236ec66b0b7f9445dd4795929e7779c1720e7dc72d7fe230aad4a1/hyve_pyipmi-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37dec28395816bae5e7e5ed9fc7899d60a7bbd8a8fa68b12ffc3c20e6176b2fc",
          "md5": "5109e4a5e39daa2bf2d16c79ee3f7012",
          "sha256": "bf4923d5a80ba3b7e356c3e525d0b5fbbfcae884515778c667023b51e4197890"
        },
        "downloads": -1,
        "filename": "hyve-pyipmi-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5109e4a5e39daa2bf2d16c79ee3f7012",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48413,
        "upload_time": "2020-11-14T02:02:57",
        "upload_time_iso_8601": "2020-11-14T02:02:57.920625Z",
        "url": "https://files.pythonhosted.org/packages/37/de/c28395816bae5e7e5ed9fc7899d60a7bbd8a8fa68b12ffc3c20e6176b2fc/hyve-pyipmi-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dbba03db2b8f448956f144ed7fe30a22e4b709a2ccaa1a62ce0368df53c33eb",
          "md5": "410219e17561940d9fe037f9524303bb",
          "sha256": "acda38fb71e96c9fcc621c54f66d48112a15b642538106683c307acf1b61c34d"
        },
        "downloads": -1,
        "filename": "hyve_pyipmi-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "410219e17561940d9fe037f9524303bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 94839,
        "upload_time": "2021-05-27T10:14:23",
        "upload_time_iso_8601": "2021-05-27T10:14:23.099317Z",
        "url": "https://files.pythonhosted.org/packages/1d/bb/a03db2b8f448956f144ed7fe30a22e4b709a2ccaa1a62ce0368df53c33eb/hyve_pyipmi-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36c1841342b339dc274b29b965176f0715616bb8e6879f4c4aae45b43738fd2a",
          "md5": "38083b93336e0652bc1e4bddb0c60d62",
          "sha256": "4a78f195d309635e9d6f3ae21b4c1d2f49c939ba656a39572ed41814139c355f"
        },
        "downloads": -1,
        "filename": "hyve-pyipmi-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "38083b93336e0652bc1e4bddb0c60d62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54202,
        "upload_time": "2021-05-27T10:14:24",
        "upload_time_iso_8601": "2021-05-27T10:14:24.744722Z",
        "url": "https://files.pythonhosted.org/packages/36/c1/841342b339dc274b29b965176f0715616bb8e6879f4c4aae45b43738fd2a/hyve-pyipmi-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b10e68d5a1f29370809d85294cac26ab4118c39059ec0d286cc7ee5626e74b78",
          "md5": "73cfbbbb5b4b5b723a0679f67802d5ca",
          "sha256": "c24dfa5116e92a5688ada6ae5e76901b0f31f64f73bc2c386349403f5b52cbb0"
        },
        "downloads": -1,
        "filename": "hyve_pyipmi-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73cfbbbb5b4b5b723a0679f67802d5ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 95876,
        "upload_time": "2021-06-19T08:07:47",
        "upload_time_iso_8601": "2021-06-19T08:07:47.000051Z",
        "url": "https://files.pythonhosted.org/packages/b1/0e/68d5a1f29370809d85294cac26ab4118c39059ec0d286cc7ee5626e74b78/hyve_pyipmi-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd75c293af9daf5b6165fc22e56f0a3946a42d4e211f695b953253cf09831719",
          "md5": "bb1ea5dbc16fffe7a34d68630daa6e9f",
          "sha256": "3b5f11f6cacc97b9759e88680e172536d83dce93cca157bd0e5d2ea434e3fee1"
        },
        "downloads": -1,
        "filename": "hyve-pyipmi-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bb1ea5dbc16fffe7a34d68630daa6e9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 55167,
        "upload_time": "2021-06-19T08:07:49",
        "upload_time_iso_8601": "2021-06-19T08:07:49.647789Z",
        "url": "https://files.pythonhosted.org/packages/bd/75/c293af9daf5b6165fc22e56f0a3946a42d4e211f695b953253cf09831719/hyve-pyipmi-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c38a48636b1bac6f13b979673e500b570dcfcf1c1882825fb954f50554f623c4",
          "md5": "44d089d18c41d7d91dc5200ee69c0b5d",
          "sha256": "123a6f41b2b9843aa19f0c916c2666143a8b69dd30d792e038325c0afa18ea5d"
        },
        "downloads": -1,
        "filename": "hyve_pyipmi-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "44d089d18c41d7d91dc5200ee69c0b5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 97260,
        "upload_time": "2021-06-27T09:29:12",
        "upload_time_iso_8601": "2021-06-27T09:29:12.138490Z",
        "url": "https://files.pythonhosted.org/packages/c3/8a/48636b1bac6f13b979673e500b570dcfcf1c1882825fb954f50554f623c4/hyve_pyipmi-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82f8170947b6bab6f5f595fa6477def8299b37d2802fa2249d932a4ac65c1d6c",
          "md5": "cfa31825a178760f0e7a30185957c2b8",
          "sha256": "c003d3f5d87266b9110c5849975688db9a2496148d903ceb5014265f48f7db04"
        },
        "downloads": -1,
        "filename": "hyve-pyipmi-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cfa31825a178760f0e7a30185957c2b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 56464,
        "upload_time": "2021-06-27T09:29:13",
        "upload_time_iso_8601": "2021-06-27T09:29:13.785751Z",
        "url": "https://files.pythonhosted.org/packages/82/f8/170947b6bab6f5f595fa6477def8299b37d2802fa2249d932a4ac65c1d6c/hyve-pyipmi-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd0a7b4493b05fd40c2038d72cda357b908d315812b34061d37910eee040225c",
          "md5": "b14e60e8ff94d83b9ccf98f454346f4c",
          "sha256": "881d72cdc333e71886875e06c5b8e5fe7bd726792a135bef0cd86cae1b7060b1"
        },
        "downloads": -1,
        "filename": "hyve_pyipmi-1.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b14e60e8ff94d83b9ccf98f454346f4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 99415,
        "upload_time": "2021-07-15T10:16:27",
        "upload_time_iso_8601": "2021-07-15T10:16:27.488934Z",
        "url": "https://files.pythonhosted.org/packages/dd/0a/7b4493b05fd40c2038d72cda357b908d315812b34061d37910eee040225c/hyve_pyipmi-1.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ec50f23033ea241f70acbbd7d78a2e172227947ccaf6bd483708f44692176d5",
          "md5": "3ce45ae9df3b72443f3a421beb6a765c",
          "sha256": "7f3d7673b48b26a6a906acf64245b6120bd8c6b3a95ced73c1beb064b9f2c9e6"
        },
        "downloads": -1,
        "filename": "hyve-pyipmi-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "3ce45ae9df3b72443f3a421beb6a765c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 57585,
        "upload_time": "2021-07-15T10:16:29",
        "upload_time_iso_8601": "2021-07-15T10:16:29.725048Z",
        "url": "https://files.pythonhosted.org/packages/3e/c5/0f23033ea241f70acbbd7d78a2e172227947ccaf6bd483708f44692176d5/hyve-pyipmi-1.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfe8962e2fd4539489125fc73eec8788de6284cff2fcba286d94035906efbd9c",
          "md5": "7740b838cd1da608e915e4e610f15ec4",
          "sha256": "60959d67e8af6b831fae97be595e8303454e9f3f0d110eea138f4208bc310022"
        },
        "downloads": -1,
        "filename": "hyve_pyipmi-1.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7740b838cd1da608e915e4e610f15ec4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 99666,
        "upload_time": "2021-07-22T10:45:06",
        "upload_time_iso_8601": "2021-07-22T10:45:06.594730Z",
        "url": "https://files.pythonhosted.org/packages/df/e8/962e2fd4539489125fc73eec8788de6284cff2fcba286d94035906efbd9c/hyve_pyipmi-1.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69aa9779df61ac4724de554052c9db45af403baee9be18de91bd3d5f8aa8974b",
          "md5": "42f87845fb00973e0526b0520c9b226b",
          "sha256": "03a7c28af7694b85eaf23355de17c929f48bff884d617ba73e2d37e5091bef3e"
        },
        "downloads": -1,
        "filename": "hyve-pyipmi-1.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "42f87845fb00973e0526b0520c9b226b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 57147,
        "upload_time": "2021-07-22T10:45:09",
        "upload_time_iso_8601": "2021-07-22T10:45:09.950275Z",
        "url": "https://files.pythonhosted.org/packages/69/aa/9779df61ac4724de554052c9db45af403baee9be18de91bd3d5f8aa8974b/hyve-pyipmi-1.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dfe8962e2fd4539489125fc73eec8788de6284cff2fcba286d94035906efbd9c",
        "md5": "7740b838cd1da608e915e4e610f15ec4",
        "sha256": "60959d67e8af6b831fae97be595e8303454e9f3f0d110eea138f4208bc310022"
      },
      "downloads": -1,
      "filename": "hyve_pyipmi-1.2.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7740b838cd1da608e915e4e610f15ec4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 99666,
      "upload_time": "2021-07-22T10:45:06",
      "upload_time_iso_8601": "2021-07-22T10:45:06.594730Z",
      "url": "https://files.pythonhosted.org/packages/df/e8/962e2fd4539489125fc73eec8788de6284cff2fcba286d94035906efbd9c/hyve_pyipmi-1.2.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69aa9779df61ac4724de554052c9db45af403baee9be18de91bd3d5f8aa8974b",
        "md5": "42f87845fb00973e0526b0520c9b226b",
        "sha256": "03a7c28af7694b85eaf23355de17c929f48bff884d617ba73e2d37e5091bef3e"
      },
      "downloads": -1,
      "filename": "hyve-pyipmi-1.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "42f87845fb00973e0526b0520c9b226b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 57147,
      "upload_time": "2021-07-22T10:45:09",
      "upload_time_iso_8601": "2021-07-22T10:45:09.950275Z",
      "url": "https://files.pythonhosted.org/packages/69/aa/9779df61ac4724de554052c9db45af403baee9be18de91bd3d5f8aa8974b/hyve-pyipmi-1.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}