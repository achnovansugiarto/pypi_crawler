{
  "info": {
    "author": "Dan Kluskiewicz",
    "author_email": "dankluskiewicz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# jupydebug\n\nThis package provides easy access to all objects throughout an Exception traceback stack. It mimics the behavior of the post_mortem function in Python's built-in debugger (pdb), but let's the user interact with traceback object directly within a jupyter notebook as opposed to the pdb interpreter. Following an exception, run post_mortem() to inspect frames from the traceback stack. For example:\n\n```python\na_failing_test()\n```\n\n```python\n\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-14-ac3ec94daf8d> in <module>()\n----> 1 a_failing_test()\n\n/home/dan/Documents/jupydebug/tests/conftest.py in nested_test()\n     28 def nested_test():\n     29     nf_local_var = \"nested_test's_local_var\"\n---> 30     return parent_test(failing_test)\n     31 \n     32 \n\n/home/dan/Documents/jupydebug/tests/conftest.py in parent_test(func, *args, **kwargs)\n     23 def parent_test(func, *args, **kwargs):\n     24     pf_local_var = \"parent test's local var\"\n---> 25     return func(*args, **kwargs)\n     26 \n     27 \n\n/home/dan/Documents/jupydebug/tests/conftest.py in failing_test()\n     10     a_local_var = \"failing_test's local var\"\n     11     x = range(3)\n---> 12     y = x[3]  # this will raise an exception\n     13     return y\n     14 \n\nIndexError: range object index out of range\n\n```\n\nget access to the traceback stack with jupydebug's post_mortem function:\n\n```python\nframes = jpdb.post_mortem()\n```\ninspect the stack:\n```python\nframes\n```\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>file</th>\n      <th>line</th>\n      <th>calling</th>\n      <th>locals</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>/home/dan/Documents/jupydebug/tests/conftest.py</td>\n      <td>12</td>\n      <td>failing_test</td>\n      <td>(a_local_var, x)</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>/home/dan/Documents/jupydebug/tests/conftest.py</td>\n      <td>25</td>\n      <td>parent_test</td>\n      <td>(func, args, kwargs, pf_local_var)</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>/home/dan/Documents/jupydebug/tests/conftest.py</td>\n      <td>30</td>\n      <td>nested_test</td>\n      <td>(nf_local_var)</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>&lt;ipython-input-12-ac3ec94daf8d&gt;</td>\n      <td>1</td>\n      <td>&lt;module&gt;</td>\n      <td>(__name__, __doc__, __package__, __loader__, __spec__, __builtin__, __builtins__, _ih, _oh, _dh, _sh, In, Out, get_ipython, exit, quit, _, __, ___, sys, _i, _ii, _iii, _i1, context, jpdb, conftest, _i2, contexts, _i3, _3, _i4, _i5, _i6, _6, _i7, debugger, _7, _i8, _8, _i9, _i10, _i11, a_failing_test, _i12, _i13, _13, _i14, df, _i15, _15, _i16)</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>/home/dan/miniconda3/envs/jupydebug/lib/python3.7/site-packages/IPython/core/interactiveshell.py</td>\n      <td>2898</td>\n      <td>run_code</td>\n      <td>(self, code_obj, result, old_excepthook, outflag)</td>\n    </tr>\n  </tbody>\n</table>\n\nand access the local or global variables in each frame with e.g. \n\n```python\nframes[0].locals\n```\n\n```\n{'a_local_var': \"failing_test's local var\", 'x': range(0, 3)}\n```\n\n```python\nframes[0].globals\n```\n\n```\n{'__name__': 'conftest',\n '__doc__': None,\n '__package__': '',\n '__loader__': <_frozen_importlib_external.SourceFileLoader at 0x7fac7027d990>,\n '__spec__': ModuleSpec(name='conftest', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7fac7027d990>, origin='/home/dan/Documents/jupydebug/tests/conftest.py'),\n '__file__': '/home/dan/Documents/jupydebug/tests/conftest.py',\n '__cached__': '/home/dan/Documents/jupydebug/tests/__pycache__/conftest.cpython-37.pyc',\n '__builtins__': {'__name__': 'builtins',\n  '__doc__': \"Built-in functions, exceptions, and other objects.\\n\\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.\",\n  '__package__': '',...\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dankluskiewicz/jupydebug",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jupydebug",
    "package_url": "https://pypi.org/project/jupydebug/",
    "platform": "",
    "project_url": "https://pypi.org/project/jupydebug/",
    "project_urls": {
      "Homepage": "https://github.com/dankluskiewicz/jupydebug"
    },
    "release_url": "https://pypi.org/project/jupydebug/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a python debugger for jupyter notebooks",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9758731,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "653645982dc18b85f6b9fecda3255757ba6c40076929a1d6dcf8482096daceea",
          "md5": "a732e4bf3ccb0650059a6f29a87e3677",
          "sha256": "35b35c202ef9a188f3e7be31c0b04eac3a0df3c968bb7267418f9138e784733c"
        },
        "downloads": -1,
        "filename": "jupydebug-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a732e4bf3ccb0650059a6f29a87e3677",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4516,
        "upload_time": "2021-03-13T05:19:11",
        "upload_time_iso_8601": "2021-03-13T05:19:11.326697Z",
        "url": "https://files.pythonhosted.org/packages/65/36/45982dc18b85f6b9fecda3255757ba6c40076929a1d6dcf8482096daceea/jupydebug-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "653645982dc18b85f6b9fecda3255757ba6c40076929a1d6dcf8482096daceea",
        "md5": "a732e4bf3ccb0650059a6f29a87e3677",
        "sha256": "35b35c202ef9a188f3e7be31c0b04eac3a0df3c968bb7267418f9138e784733c"
      },
      "downloads": -1,
      "filename": "jupydebug-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a732e4bf3ccb0650059a6f29a87e3677",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4516,
      "upload_time": "2021-03-13T05:19:11",
      "upload_time_iso_8601": "2021-03-13T05:19:11.326697Z",
      "url": "https://files.pythonhosted.org/packages/65/36/45982dc18b85f6b9fecda3255757ba6c40076929a1d6dcf8482096daceea/jupydebug-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}