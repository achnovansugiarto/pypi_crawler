{
  "info": {
    "author": "Armen A",
    "author_email": "agalyan.armen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<p>\n  <img alt=\"Version\" src=\"https://img.shields.io/badge/version-0.1.7-blue.svg?cacheSeconds=2592000\" />\n  <a href=\"#\" target=\"_blank\">\n    <img alt=\"License: MIT\" src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" />\n  </a>\n</p>\n\n> Hi, I analyze hltv.org as a part of my pet project.\n> This parser can help you build a prematch analytics dataset with data from [Team stats]( https://www.hltv.org/stats/teams) and [Analytics](https://www.hltv.org/betting/analytics) pages.\n\n\n\n## Install\n\n```sh\npip install hltv-stats\n```\n\n## Usage\n#### ```HLTVMatch``` provides public methods for [Analytics](https://www.hltv.org/betting/analytics), use ```filename``` parameter to save data to a file.\n```sh\nfrom hltv_stats import HLTVMatch\nmatch_url = \"/matches/2361342/natus-vincere-vs-outsiders-iem-katowice-2023\"\nmatch = HLTVMatch(match_url)\n```\n```sh\nmatch.parse_analytics_summary(filename=None)\n```\n\n```sh\nResponse:\n\n[{'team': 'natus-vincere',\n  'indicator': 'plus',\n  'insight': 'natus vincere has better form ranking',\n  'match_id': '2361342'},\n    ...\n]\n```\n```sh\nmatch.parse_head_to_head()\n```\n\n```sh\nResponse:\n\n[{'player_team': 'natus-vincere',\n  'player_nickname': 's1mple',\n  'table_3_months': '1.13',\n  'table_event': '1.17',\n  'match_id': '2361342'},\n    ...\n]\n```\n```sh\nmatch.parse_pick_ban_stats()\n```\n\n```sh\nResponse:\n\n[{'analytics_map_name': 'mirage',\n  'team': 'natus-vincere',\n  'analytics_map_stats_pick_percentage': '39%',\n  'analytics_map_stats_ban_percentage': '0%',\n  'analytics_map_stats_win_percentage': '29%',\n  'analytics_map_stats_played': '7',\n  'analytics_map_stats_comment': 'First pick',\n  'match_id': '2361342'},\n    ...\n]\n```\n```match.parse_analytics_center()``` method combines all above methods and returns a tuple of lists.\n\n#### ```HLTVTeam``` provides public methods for parsing [Team stats page]( https://www.hltv.org/stats/teams), with filtering by time using ```time_filter``` parameter, use ```filename``` parameter to save data to a file.\n```sh\nfrom hltv_stats import HLTVTeam\nteam = HLTVTeam(\"/4608/natus-vincere\")\n#You can use match_id to assign team's current state(statistic) to specific match\n#this will add match_id field to all json files\nteam.match_id = match.match_id\n```\n```sh\n#time_filter: 3 - last 3 months, 6 - last 6 months, 0 - all time, ...\nteam.parse_matches(time_filter=1) #returns list of played matches in json format\nteam.parse_players(time_filter=1) #returns list of team players' statistics in json format\nteam.parse_maps(time_filter=1) #returns maps statistics in json format\nteam.parse_events(time_filter=1) #returns events statistics in json format\n\nteam.parse_all_stats(time_filter=1)\n```\n```.parse_all_stats(time_filter=1)``` method combines all above methods and returns a tuple of lists.\n\n#### ```parse_upcoming_matches()``` method parses all upcoming matches from [Match page](https://www.hltv.org/matches).\n```sh\n#Parse upcoming matches and save to json files\n#:param months: list of months to parse, i.e. [1,3] <=> [last month, last 3 months]\n#:param with_teams: bool, if True, parse teams' statistic as well\n\nfrom hltv_stats import parse_upcoming_matches\nparse_upcoming_matches(months=[1], with_teams=True)\n```\n\n\n```\nResult folder tree contains json files with all match data, and team data if with_teams=True.\n.\n‚îú‚îÄ‚îÄ configs - contains 2 config files: which holds data about all parsed matches and teams and are used by is_parsed() method to check if match is already parsed and skips it.\n‚îú‚îÄ‚îÄ output\n‚îÇ   ‚îú‚îÄ‚îÄ matches \n‚îÇ   ‚îî‚îÄ‚îÄ teams\n```\n#### Also check out example.ipynb or contact me.\n\n### ü§ù Contributing\n\nContributions, issues and feature requests are welcome!<br />Feel free to check [issues page](https://github.com/a3agalyan/hltv-stats/issues). \n\n### Show your support\n\nGive a ‚≠êÔ∏è if this project helped you!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/a3agalyan/hltv-stats",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hltv-stats",
    "package_url": "https://pypi.org/project/hltv-stats/",
    "platform": null,
    "project_url": "https://pypi.org/project/hltv-stats/",
    "project_urls": {
      "Homepage": "https://github.com/a3agalyan/hltv-stats",
      "Repository": "https://github.com/a3agalyan/hltv-stats"
    },
    "release_url": "https://pypi.org/project/hltv-stats/0.1.7/",
    "requires_dist": [
      "requests (>=2.28.2,<3.0.0)",
      "bs4 (>=0.0.1,<0.0.2)",
      "cuid (>=0.3,<0.4)",
      "pytest (>=7.2.1,<8.0.0)",
      "loguru (>=0.6.0,<0.7.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Simple parser for HLTV.org team stats and matches (using requests and bs4)",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16883377,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d246f067c6df427538f8ff5ab2393a831b133eec2f2d6c8779a9eb72cec6f739",
          "md5": "e8d4332d4459f78cb9f93343042ef4e9",
          "sha256": "0f1fee144c05228da5379d16fb1c38c520b1a1052b2991de34895a7f3cb021bd"
        },
        "downloads": -1,
        "filename": "hltv_stats-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8d4332d4459f78cb9f93343042ef4e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 7106,
        "upload_time": "2023-02-10T02:36:41",
        "upload_time_iso_8601": "2023-02-10T02:36:41.596237Z",
        "url": "https://files.pythonhosted.org/packages/d2/46/f067c6df427538f8ff5ab2393a831b133eec2f2d6c8779a9eb72cec6f739/hltv_stats-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0281365bec7e4e2552cad754b53200b8b21cb2226822bd224e63842fde839a9",
          "md5": "d48cbd7c41a86337c5a020b2d713c6fa",
          "sha256": "91c01869d0c2800c16bf44571386cf9f78ccbbc621ae816b1f24e1045b01856e"
        },
        "downloads": -1,
        "filename": "hltv_stats-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d48cbd7c41a86337c5a020b2d713c6fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5811,
        "upload_time": "2023-02-10T02:36:42",
        "upload_time_iso_8601": "2023-02-10T02:36:42.813145Z",
        "url": "https://files.pythonhosted.org/packages/a0/28/1365bec7e4e2552cad754b53200b8b21cb2226822bd224e63842fde839a9/hltv_stats-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0aafdc1419c2693384ebc1a214cccac4c769e0b9a73bfe9c8b2d3b0d78b142f8",
          "md5": "b0c587bb716398623014139e21eae523",
          "sha256": "c1d2a5c48342620b58d2781f060111138fd95fd86dfbb4d3270abc3e17d9f318"
        },
        "downloads": -1,
        "filename": "hltv_stats-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0c587bb716398623014139e21eae523",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 8427,
        "upload_time": "2023-02-10T04:24:08",
        "upload_time_iso_8601": "2023-02-10T04:24:08.553695Z",
        "url": "https://files.pythonhosted.org/packages/0a/af/dc1419c2693384ebc1a214cccac4c769e0b9a73bfe9c8b2d3b0d78b142f8/hltv_stats-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "578bce2699605990e9223479f53914d49eedd2e7506001e1e7f6333fc0f64a81",
          "md5": "275760dbd0b74491d8883a1e7eaf871b",
          "sha256": "2bbaa7986f5da14a106bb02be3cee6e61f69081cd326b071fe9244fa702fac1b"
        },
        "downloads": -1,
        "filename": "hltv_stats-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "275760dbd0b74491d8883a1e7eaf871b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 8637,
        "upload_time": "2023-02-16T03:13:29",
        "upload_time_iso_8601": "2023-02-16T03:13:29.402459Z",
        "url": "https://files.pythonhosted.org/packages/57/8b/ce2699605990e9223479f53914d49eedd2e7506001e1e7f6333fc0f64a81/hltv_stats-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "497a366fa08c351f0321f444d79bdf3a5f562639b383d9782e4a5a80a2c06e90",
          "md5": "eaca7e5cc733cd4cc9d77fe761b7f65d",
          "sha256": "b122ff23da353e24c508a5e6831c83ff6647c8a9400409814eebfac6ec93adff"
        },
        "downloads": -1,
        "filename": "hltv_stats-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "eaca7e5cc733cd4cc9d77fe761b7f65d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 8691,
        "upload_time": "2023-02-16T03:13:30",
        "upload_time_iso_8601": "2023-02-16T03:13:30.878419Z",
        "url": "https://files.pythonhosted.org/packages/49/7a/366fa08c351f0321f444d79bdf3a5f562639b383d9782e4a5a80a2c06e90/hltv_stats-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cfd883af5aa8b4388b7d95357d5ad0c2e7bdf335c3c6f7d2abb4c74bcb6f821",
          "md5": "14273b1f0030982f2738b75e105baa82",
          "sha256": "25335c70357edbfc8fd5cf8b631ecfcc6d8cb1471f79591770a5cae0517b0dff"
        },
        "downloads": -1,
        "filename": "hltv_stats-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14273b1f0030982f2738b75e105baa82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 8640,
        "upload_time": "2023-02-16T03:40:37",
        "upload_time_iso_8601": "2023-02-16T03:40:37.436162Z",
        "url": "https://files.pythonhosted.org/packages/6c/fd/883af5aa8b4388b7d95357d5ad0c2e7bdf335c3c6f7d2abb4c74bcb6f821/hltv_stats-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1cb9a06eec4265555d373f2eb874f6c00ac77ad6ab0bc3934c716be1f0aef07",
          "md5": "f1a9bc3374b4c99718c5d5e43338b905",
          "sha256": "0a86f2eb43b08ffce00a75fc4c924898fd47d34252bf6eb272673ce486425fa3"
        },
        "downloads": -1,
        "filename": "hltv_stats-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f1a9bc3374b4c99718c5d5e43338b905",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 8708,
        "upload_time": "2023-02-16T03:40:38",
        "upload_time_iso_8601": "2023-02-16T03:40:38.843283Z",
        "url": "https://files.pythonhosted.org/packages/a1/cb/9a06eec4265555d373f2eb874f6c00ac77ad6ab0bc3934c716be1f0aef07/hltv_stats-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6cfd883af5aa8b4388b7d95357d5ad0c2e7bdf335c3c6f7d2abb4c74bcb6f821",
        "md5": "14273b1f0030982f2738b75e105baa82",
        "sha256": "25335c70357edbfc8fd5cf8b631ecfcc6d8cb1471f79591770a5cae0517b0dff"
      },
      "downloads": -1,
      "filename": "hltv_stats-0.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "14273b1f0030982f2738b75e105baa82",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 8640,
      "upload_time": "2023-02-16T03:40:37",
      "upload_time_iso_8601": "2023-02-16T03:40:37.436162Z",
      "url": "https://files.pythonhosted.org/packages/6c/fd/883af5aa8b4388b7d95357d5ad0c2e7bdf335c3c6f7d2abb4c74bcb6f821/hltv_stats-0.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1cb9a06eec4265555d373f2eb874f6c00ac77ad6ab0bc3934c716be1f0aef07",
        "md5": "f1a9bc3374b4c99718c5d5e43338b905",
        "sha256": "0a86f2eb43b08ffce00a75fc4c924898fd47d34252bf6eb272673ce486425fa3"
      },
      "downloads": -1,
      "filename": "hltv_stats-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "f1a9bc3374b4c99718c5d5e43338b905",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 8708,
      "upload_time": "2023-02-16T03:40:38",
      "upload_time_iso_8601": "2023-02-16T03:40:38.843283Z",
      "url": "https://files.pythonhosted.org/packages/a1/cb/9a06eec4265555d373f2eb874f6c00ac77ad6ab0bc3934c716be1f0aef07/hltv_stats-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}