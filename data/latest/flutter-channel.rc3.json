{
  "info": {
    "author": "ghale abduallah",
    "author_email": "galeab121@gmail.con",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3"
    ],
    "description": "# flutter_channel\r\n\r\nWith this package developers can use python in there flutter applications on windows.\r\n\r\n## how does it work?\r\n\r\nThis package depends on unix sockets (TCP) protocol.\r\n\r\n## how to use?\r\n\r\n### 1. create host\r\n\r\nYou have to create instance from `Host` class to use it in channels binding as following:\r\n\r\n```py\r\n    from flutter_channel.host import Host\r\n    host=Host()\r\n```\r\n\r\n### 2. create channels and bind it\r\n\r\nThere is number of built in channel types to use like:  `BytesChannel`,`JsonChannel`, `StringChannel` and `MethodChannel`.\r\n\r\n```py\r\nfrom flutter_channel.channels import BytesChannel,JsonChannel, StringChannel,MethodChannel\r\nchannel1=BytesChannel('channel1')\r\nchannel2=StringChannel('channel2')\r\nchannel3=JsonChannel('channel3')\r\nchannel4=MethodChannel('channel4')\r\nhost.bindChannel(channel1)\r\nhost.bindChannel(channel2)\r\nhost.bindChannel(channel3)\r\nhost.bindChannel(channel4)\r\n```\r\n\r\n### 3. set channel handler  \r\n\r\nThe handler of the channel is a function that receive the messages that is sent to the channel, Each handler should take tow parameters `message` and `reply`.\r\n\r\n`message`  is the first parameter and it is the massage that was received and it's type depends on the channel type see the following table.\r\n\r\n| Channel Type | Channel Output |\r\n|:---:|:---:|\r\n| `BytesChannel` | `bytes` |\r\n| `StringChannel` | `str` |\r\n| `JsonChannel` | `dict` or `list` |\r\n| `MethodChannel` | depends on reply that comes from dart can be any primitive type like `int` ,`str`,`bool` or `list`   |\r\n| custom channel | depends on the implement of the `encodeOutput` and `decodeOutput` methods |\r\n\r\n`reply` is the second parameter, it is instance of `Reply` you should use this object to send reply on the received message, You can reply with another message or reply with `None`.\r\nYour reply will not be sent to the channel handler in the dart side. It will be send to the `send` Future that sent the original message.\r\n\r\n **You have to send reply otherwise dart `Future` will not complete**\r\n\r\n#### example 1\r\n\r\n```py\r\ndef handler(msg,reply):\r\n    # do some logic\r\n    reply.reply(None)\r\nchannel.setHandler(handler)\r\n```\r\n\r\n#### example 2\r\n\r\n```py\r\n    def handler(msg,reply):\r\n    if msg.method=='add':\r\n        reply.reply(add(msg.args[0],msg.args[1],))\r\n    if msg.method=='sub':\r\n        reply.reply(sub(msg.args[0],msg.args[1],))\r\n\r\n    if msg.method=='mul':\r\n        reply.reply(mul(msg.args[0],msg.args[1],))\r\n\r\n    if msg.method=='div':\r\n        reply.reply(div(msg.args[0],msg.args[1],))\r\n    else:\r\n        raise PythonChannelMethodException(404,'method not found','method not found')\r\n    methodChannel.setHandler(handler)\r\n```\r\n\r\n### send message\r\n\r\nYou can send message to dart side using `send(message,callback)` method where `message` type depends on the channel type  see the following table and `callback` is a function that will be invoked when reply comes back from dart and it take one parameter present the reply message.\r\n\r\n| Channel Type | Channel input |\r\n|:---:|:---:|\r\n| `BytesChannel` | `bytes` |\r\n| `StringChannel` | `str` |\r\n| `JsonChannel` | `dict` or `list` |\r\n| `MethodChannel` | `MethodCall` |\r\n| custom channel | depends on the implement of the `encodeInput` and `decodeInput` methods |\r\n\r\n#### examples\r\n\r\n```py\r\n    def callBack(replyMessage):\r\n        pass\r\n\r\n    bytesChannel.send(bytes([1,1,4,5]),callBack)\r\n    stringChannel.send('hello world',callBack)\r\n    jsonChannel.send({\"hello\":\"world\"},callBack)\r\n\r\n    def callBackMethod(replyMessage,exception):\r\n        pass\r\n\r\n    methodChannel.send(MethodCall(method='sayHello',args={\"name\":'ghale'}),callBackMethod)\r\n    # or\r\n    methodChannel.invokeMethod(method='sayHello',args={\"name\":'ghale'},callback=callBackMethod)\r\n```\r\n\r\n### MethodChannel\r\n\r\nThere is some notes we have to mention to about MethodChannel usage.\r\n\r\n#### 1. the handler\r\n\r\nThe handler of the `MethodChannel` receive two parameter first one is `MethodCall` instance and second one is `Reply` instance.\r\n\r\n#### 2. the reply callback\r\n\r\nthe reply callback function take two parameter, First one is the reply message and the second on is exception with `PythonChannelMethodException` type if exception raised in dart side otherwise the parameter will be `None`.\r\n\r\n#### 3. raise exception in the handler\r\n\r\nYou can raise `PythonChannelMethodException` in the handler this exception will be sent by the channel and will throw it to the `send` Future in dart side.\r\n\r\n##### example\r\n\r\n```python\r\n\r\ndef handler(msg,reply):\r\n    if msg.method=='add':\r\n        reply.reply(add(msg.args[0],msg.args[1],))\r\nif msg.method=='sub':\r\n    reply.reply(sub(msg.args[0],msg.args[1],))\r\n\r\nif msg.method=='mul':\r\n    reply.reply(mul(msg.args[0],msg.args[1],))\r\n\r\nif msg.method=='div':\r\n    reply.reply(div(msg.args[0],msg.args[1],))\r\nelse:\r\n    raise PythonChannelMethodException(404,'method not found','method not found')\r\n```\r\n\r\n## print() function\r\n\r\nThis package change the behavior of the `print()` the stdout of the python will be the debug console of the flutter\r\n**Note: you should't use `print` before create `Host` instance**\r\n\r\n## create your own channel type\r\n\r\nYou can create your own channel by write class that inherit `Channel` class.\r\nYou should implement 4 method `encodeInput`, `encodeOutput` ,`decodeInput` and `decodeOutput`\r\n\r\n+ `encodeInput` convert the input of the channel from `bytes`\r\n+ `encodeOutput` convert the output of the channel from `bytes`\r\n+ `decodeInput` convert the input of the channel to `bytes`\r\n+ `decodeOutput` convert the input of the channel to `bytes`\r\nwhere the **input** is what the channel send and the **output** is what the channel receive\r\n\r\n### for example\r\n\r\n```py\r\n    from flutter_channel.channels import Channel,\r\n    class StringChannel(Channel):\r\n    \r\n    def encodeInput(self,data:bytes)->str: \r\n        return data.decode('utf-8')\r\n    def decodeInput(self,data:str)->bytes: \r\n        return data.encode('utf-8')\r\n    def encodeOutput(self,data:bytes)->str: \r\n        return data.decode('utf-8')\r\n    def decodeOutput(self,data:str)->bytes: \r\n        return data.encode('utf-8')\r\n```\r\n\r\n## release mode\r\n\r\nin release mode you have to compile you main python file to an executable file, We recommend you to use [PyInstaller](https://pypi.org/project/pyinstaller/).\r\n**Note: you have to build the executable file with console otherwise the package will not work**\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Ghali01/flutter_channel",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flutter-channel",
    "package_url": "https://pypi.org/project/flutter-channel/",
    "platform": null,
    "project_url": "https://pypi.org/project/flutter-channel/",
    "project_urls": {
      "Homepage": "https://github.com/Ghali01/flutter_channel"
    },
    "release_url": "https://pypi.org/project/flutter-channel/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "implement for Platform Channels for python",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15725582,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5029c8d500c0199bc0bc2c62a0f5bb448d4f3eb398d3de7255d2f1ca67d4044a",
          "md5": "8de4fb0a27f32cad11a5d657b31ee015",
          "sha256": "54726b1056801a32934591ae6dab31fefec538006cc14c9a67f17156f0783f25"
        },
        "downloads": -1,
        "filename": "flutter_channel-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8de4fb0a27f32cad11a5d657b31ee015",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12382,
        "upload_time": "2022-11-06T10:01:10",
        "upload_time_iso_8601": "2022-11-06T10:01:10.483765Z",
        "url": "https://files.pythonhosted.org/packages/50/29/c8d500c0199bc0bc2c62a0f5bb448d4f3eb398d3de7255d2f1ca67d4044a/flutter_channel-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b23a2065df9aad4182a10be53a56ff85420e571e9e7ef2e95e02bbf7ac77250",
          "md5": "3af125a0298c4516c7adb70177cb28b6",
          "sha256": "9a3e985fe94daffc03da7548383c29e2d30c40b6e27333d5237b3cb70f556af9"
        },
        "downloads": -1,
        "filename": "flutter_channel-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3af125a0298c4516c7adb70177cb28b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10664,
        "upload_time": "2022-11-06T10:01:13",
        "upload_time_iso_8601": "2022-11-06T10:01:13.579536Z",
        "url": "https://files.pythonhosted.org/packages/6b/23/a2065df9aad4182a10be53a56ff85420e571e9e7ef2e95e02bbf7ac77250/flutter_channel-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43268f829decf3c5f702e5d21a67971ac379fc2d4e26042badaac98e0c508998",
          "md5": "6eca7b1bf9bbab38de25344f70c10649",
          "sha256": "3d65d43531d901627e1dd42e10bf4496755a892e7007c92ff72cd3c1affa1ccb"
        },
        "downloads": -1,
        "filename": "flutter_channel-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6eca7b1bf9bbab38de25344f70c10649",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12544,
        "upload_time": "2022-11-08T13:43:39",
        "upload_time_iso_8601": "2022-11-08T13:43:39.456242Z",
        "url": "https://files.pythonhosted.org/packages/43/26/8f829decf3c5f702e5d21a67971ac379fc2d4e26042badaac98e0c508998/flutter_channel-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bc0e7a9b68e67408d26809f909755e3003599972308f55723b51f8e89944a94",
          "md5": "fec12a952e49f8c7b88c967c98b0ba21",
          "sha256": "eb737f6933a359f8ccecfd365515cf1a9819457ed463b74bc993d5f7216ec082"
        },
        "downloads": -1,
        "filename": "flutter_channel-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fec12a952e49f8c7b88c967c98b0ba21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10773,
        "upload_time": "2022-11-08T13:43:43",
        "upload_time_iso_8601": "2022-11-08T13:43:43.265923Z",
        "url": "https://files.pythonhosted.org/packages/0b/c0/e7a9b68e67408d26809f909755e3003599972308f55723b51f8e89944a94/flutter_channel-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddfe32942eac025a4781f53b8ed5740a9d3e662c8c9011069e753f1c188aa119",
          "md5": "390e24a537d3d15718a3dda24f1b2720",
          "sha256": "9df691973f60f7e7b7359e11635bac048b5c499a5ef0da4b578e2e05e1ec668a"
        },
        "downloads": -1,
        "filename": "flutter_channel-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "390e24a537d3d15718a3dda24f1b2720",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12631,
        "upload_time": "2022-11-10T15:29:01",
        "upload_time_iso_8601": "2022-11-10T15:29:01.919934Z",
        "url": "https://files.pythonhosted.org/packages/dd/fe/32942eac025a4781f53b8ed5740a9d3e662c8c9011069e753f1c188aa119/flutter_channel-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "071cb14e88dd258dd92dda124ef15c6928cd02e35f43cd437d20ce6a48f0651c",
          "md5": "7cf5ee64b63f18874a83fce566ea349d",
          "sha256": "2709b0a82d4325fd6da287b359ed97f152e763f9f6d20c56935d21d0bc013c8f"
        },
        "downloads": -1,
        "filename": "flutter_channel-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7cf5ee64b63f18874a83fce566ea349d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10858,
        "upload_time": "2022-11-10T15:29:05",
        "upload_time_iso_8601": "2022-11-10T15:29:05.206554Z",
        "url": "https://files.pythonhosted.org/packages/07/1c/b14e88dd258dd92dda124ef15c6928cd02e35f43cd437d20ce6a48f0651c/flutter_channel-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ddfe32942eac025a4781f53b8ed5740a9d3e662c8c9011069e753f1c188aa119",
        "md5": "390e24a537d3d15718a3dda24f1b2720",
        "sha256": "9df691973f60f7e7b7359e11635bac048b5c499a5ef0da4b578e2e05e1ec668a"
      },
      "downloads": -1,
      "filename": "flutter_channel-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "390e24a537d3d15718a3dda24f1b2720",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12631,
      "upload_time": "2022-11-10T15:29:01",
      "upload_time_iso_8601": "2022-11-10T15:29:01.919934Z",
      "url": "https://files.pythonhosted.org/packages/dd/fe/32942eac025a4781f53b8ed5740a9d3e662c8c9011069e753f1c188aa119/flutter_channel-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "071cb14e88dd258dd92dda124ef15c6928cd02e35f43cd437d20ce6a48f0651c",
        "md5": "7cf5ee64b63f18874a83fce566ea349d",
        "sha256": "2709b0a82d4325fd6da287b359ed97f152e763f9f6d20c56935d21d0bc013c8f"
      },
      "downloads": -1,
      "filename": "flutter_channel-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "7cf5ee64b63f18874a83fce566ea349d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 10858,
      "upload_time": "2022-11-10T15:29:05",
      "upload_time_iso_8601": "2022-11-10T15:29:05.206554Z",
      "url": "https://files.pythonhosted.org/packages/07/1c/b14e88dd258dd92dda124ef15c6928cd02e35f43cd437d20ce6a48f0651c/flutter_channel-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}