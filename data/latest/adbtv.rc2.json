{
  "info": {
    "author": "Luis Gustavo Lang Gaiato",
    "author_email": "lang.gaiato@ufrgs.br",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!--\nUsing thr Best-README-Template\n-->\n\n[![Contributors][contributors-shield]][contributors-url]\n[![Forks][forks-shield]][forks-url]\n[![Stargazers][stars-shield]][stars-url]\n[![Issues][issues-shield]][issues-url]\n[![MIT License][license-shield]][license-url]\n\n<!-- PROJECT LOGO -->\n<br />\n<p align=\"center\">\n  <a href=\"https://github.com/luis-gustta/adbtv/\">\n    <img src=\"https://raw.githubusercontent.com/luis-gustta/adbtv/main/images/adbtv21.png\" alt=\"Logo\" width=\"277\" height=\"264\">\n  </a>\n\n\n  <h3 align=\"center\">ADB Python Module</h3>\n\n  <p align=\"center\">\n    An easy way to control Android (TV) devices remotely using Python\n    <br />\n    <br />\n    <a href=\"https://github.com/luis-gustta/adbtv/examples/\">Examples</a>\n    ·\n    <a href=\"https://github.com/luis-gustta/adbtv/issues\">Report Bug</a>\n    ·\n    <a href=\"https://github.com/luis-gustta/adbtv/issues\">Request Feature</a>\n  </p>\n\n</p>\n\n\n\n<!-- TABLE OF CONTENTS -->\n\n<details open=\"open\">\n  <summary>Table of Contents</summary>\n  <ol>\n    <li>\n      <a href=\"#about-the-project\">About The Project</a>\n    </li>\n    <li>\n      <a href=\"#getting-started\">Getting Started</a>\n      <ul>\n        <li><a href=\"#prerequisites\">Prerequisites</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#usage\">Usage</a></li>\n    <li><a href=\"#contributing\">Contributing</a></li>\n    <li><a href=\"#license\">License</a></li>\n    <li><a href=\"#contact\">Contact</a></li>\n    <li><a href=\"#acknowledgements\">Acknowledgements</a></li>\n  </ol>\n</details>\n\n\n<!-- ABOUT THE PROJECT -->\n\n## About The Project\n\nLike any project, this one have started to solve a simple problem,\n<h6 align=\"center\">\"How can I integrate my AndroidTV with smart home applications, without using Google Home\"</h6> So here it is, a simple solution (or kind of), just using Python and Google's Android Debug Bridge. Of course is possible to use this to control any android device, not just the ones running AndroidTV. Using a device like a Raspberry Pi, you can easily control a lot of Android devices with Alexa, for example, and create routines; since Alexa is not natively compatible (yet?!) with AndroidTV and Chromecast devices.\n\n<!-- GETTING STARTED -->\n## Getting Started\n\nClone this project and you're done:\n\n  ```sh\n  git clone https://github.com/luis-gustta/adbtv.git\n  ```\n\nUsing `pip`:\n  ```sh\npython -m pip install adbtv\n  ```\nor:\n  ```sh\npython -m pip install git+https://github.com/luis-gustta/adbtv.git\n  ```\n### Prerequisites\n\nThe following modules are requirements to AdbTV:\n\n* **`os`**  <font size=\"2\">and</font> **`time`**\n\n* **`typing`**:\n  ```sh\n  python3 -m pip install typing\n  ```\n\n#### **ADB:**\n\nAlso, you (of course) must have ADB installed. \n\n**Windows users:**\n\nIf you're using Windows, you can download it from:\n[https://developer.android.com/studio/releases/platform-tools](https://developer.android.com/studio/releases/platform-tools).\n\n**Linux users:**\n\nIf you're using Linux, you can download it using:\n\n* **Debian-based Linux:**\n  ```sh\n  sudo apt install android-tools-adb\n  ```\n\n* **Fedora/SUSE-based Linux:**\n  ```sh\n  sudo yum install android-tools\n  ```\n\n## Usage\n\nThis module was built to be simple and intuitive, every function have a little \"documentation\" and is very easy to use. Here's an example:\n\n```python\nimport adbtv as adb\n\nadb.connect('ip','port')\nadb.shell_cmd('echo hello world')\n```\n\nBecause the main focus of this module is to control AndroidTV systems, most commands have been optimized for this. Another example:\n\n```python\nimport adbtv as adb\n\nadb.connect('ip','port')\nadb.launch_app('NETFLIX')\n```\n\n_More examples about usage can be found under the [examples](https://github.com/luis-gustta/adbtv/examples) folder._\n\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nContributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n\n\n\n<!-- LICENSE -->\n## License\n\nDistributed under the MIT License. See `LICENSE` for more information.\n\n\n\n<!-- CONTACT -->\n## Contact\n\nLuis Gustavo - lang.gaiato@ufrgs.br\n\nProject Link: [https://github.com/luis-gustta/adbtv/](https://github.com/luis-gustta/adbtv/)\n\n\n\n<!-- ACKNOWLEDGEMENTS -->\n\n## Acknowledgements\n* [Best-README-Template](https://github.com/othneildrew/Best-README-Template)\n* [ADB](https://developer.android.com/studio/command-line/adb)\n* [Imgbot](https://imgbot.net/docs/)\n* [Choose an Open Source License](https://choosealicense.com)\n* [Img Shields](https://shields.io)\n* [GitHub Emoji Cheat Sheet](https://www.webpagefx.com/tools/emoji-cheat-sheet)\n* [GitHub Pages](https://pages.github.com)\n* [Animate.css](https://daneden.github.io/animate.css)\n\n<!-- MARKDOWN LINKS & IMAGES -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n[contributors-shield]: https://img.shields.io/github/contributors/luis-gustta/adbtv.svg?style=for-the-badge\n[contributors-url]: https://github.com/luis-gustta/adbtv/graphs/contributors\n[forks-shield]: https://img.shields.io/github/forks/luis-gustta/adbtv.svg?style=for-the-badge\n[forks-url]: https://github.com/luis-gustta/adbtv/network/members\n[stars-shield]: https://img.shields.io/github/stars/luis-gustta/adbtv.svg?style=for-the-badge\n[stars-url]: https://github.com/luis-gustta/adbtv/stargazers\n[issues-shield]: https://img.shields.io/github/issues/luis-gustta/adbtv.svg?style=for-the-badge\n[issues-url]: https://github.com/luis-gustta/adbtv/issues\n[license-shield]: https://img.shields.io/github/license/luis-gustta/adbtv.svg?style=for-the-badge\n[license-url]: https://github.com/luis-gustta/adbtv/master/LICENSE.txt\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "adb,androidtv",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "adbtv",
    "package_url": "https://pypi.org/project/adbtv/",
    "platform": "",
    "project_url": "https://pypi.org/project/adbtv/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/adbtv/0.0.2/",
    "requires_dist": [
      "typing"
    ],
    "requires_python": "",
    "summary": "A simple ADB package",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9810348,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb7755194c411a8716ec571a6b10f39aafcf65be29caba0ed80dc8408f231396",
          "md5": "36b07fdb57dd8915003a26aa2cab8215",
          "sha256": "8980ad2bad77a3d36aec667b036dade270938bfe0d5b3de8f5e79a3ec9e40546"
        },
        "downloads": -1,
        "filename": "adbtv-0.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "36b07fdb57dd8915003a26aa2cab8215",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 9667,
        "upload_time": "2021-03-18T16:00:19",
        "upload_time_iso_8601": "2021-03-18T16:00:19.768927Z",
        "url": "https://files.pythonhosted.org/packages/fb/77/55194c411a8716ec571a6b10f39aafcf65be29caba0ed80dc8408f231396/adbtv-0.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2722ba3bc3e3da0c8579d8716cbcd84bba134204bb42f5c4f2d8b9f83682cd4b",
          "md5": "507fc3a220ac5b723905b9fe36dec603",
          "sha256": "13a1ea2fa2cc4ded09e79e51f4be8d1aad1d1f2e14ed5e1b91c8c0c3a31a7c1a"
        },
        "downloads": -1,
        "filename": "adbtv-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "507fc3a220ac5b723905b9fe36dec603",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9667,
        "upload_time": "2021-03-18T16:00:21",
        "upload_time_iso_8601": "2021-03-18T16:00:21.170701Z",
        "url": "https://files.pythonhosted.org/packages/27/22/ba3bc3e3da0c8579d8716cbcd84bba134204bb42f5c4f2d8b9f83682cd4b/adbtv-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8055f672415a1c9e7a314bf2378a84edf281fa2f80ac99d6a5d0a03ae71ad033",
          "md5": "de080c335fd75661aca93214f35c3615",
          "sha256": "546775a258b50f678c9c31a0ab381b1e30b406f5070db524e6b2b7d626cee644"
        },
        "downloads": -1,
        "filename": "adbtv-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "de080c335fd75661aca93214f35c3615",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11492,
        "upload_time": "2021-03-18T16:00:22",
        "upload_time_iso_8601": "2021-03-18T16:00:22.396048Z",
        "url": "https://files.pythonhosted.org/packages/80/55/f672415a1c9e7a314bf2378a84edf281fa2f80ac99d6a5d0a03ae71ad033/adbtv-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d8d48c29b878d56ce19b5982e28e2a9d376e89de76ea08b471741a578824dbd",
          "md5": "26eb590bc0a74f36408befd3dc5917a8",
          "sha256": "ccc04324bc6c025712e3753c845454da873975c906d9968940214bda8ab8e739"
        },
        "downloads": -1,
        "filename": "adbtv-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26eb590bc0a74f36408befd3dc5917a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9684,
        "upload_time": "2021-03-18T16:11:59",
        "upload_time_iso_8601": "2021-03-18T16:11:59.235961Z",
        "url": "https://files.pythonhosted.org/packages/0d/8d/48c29b878d56ce19b5982e28e2a9d376e89de76ea08b471741a578824dbd/adbtv-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "050befbd9ce009928e97614f7e0d24b99084aee76e684fb7902d280e01dad301",
          "md5": "64ea945f0501be03299e33ca11a46737",
          "sha256": "86bc2ad26d6fe2ff05987650ece3637ecfd0ea6201a86c7ed1bb38e94fc4586c"
        },
        "downloads": -1,
        "filename": "adbtv-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "64ea945f0501be03299e33ca11a46737",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11497,
        "upload_time": "2021-03-18T16:12:00",
        "upload_time_iso_8601": "2021-03-18T16:12:00.842494Z",
        "url": "https://files.pythonhosted.org/packages/05/0b/efbd9ce009928e97614f7e0d24b99084aee76e684fb7902d280e01dad301/adbtv-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d8d48c29b878d56ce19b5982e28e2a9d376e89de76ea08b471741a578824dbd",
        "md5": "26eb590bc0a74f36408befd3dc5917a8",
        "sha256": "ccc04324bc6c025712e3753c845454da873975c906d9968940214bda8ab8e739"
      },
      "downloads": -1,
      "filename": "adbtv-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "26eb590bc0a74f36408befd3dc5917a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9684,
      "upload_time": "2021-03-18T16:11:59",
      "upload_time_iso_8601": "2021-03-18T16:11:59.235961Z",
      "url": "https://files.pythonhosted.org/packages/0d/8d/48c29b878d56ce19b5982e28e2a9d376e89de76ea08b471741a578824dbd/adbtv-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "050befbd9ce009928e97614f7e0d24b99084aee76e684fb7902d280e01dad301",
        "md5": "64ea945f0501be03299e33ca11a46737",
        "sha256": "86bc2ad26d6fe2ff05987650ece3637ecfd0ea6201a86c7ed1bb38e94fc4586c"
      },
      "downloads": -1,
      "filename": "adbtv-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "64ea945f0501be03299e33ca11a46737",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11497,
      "upload_time": "2021-03-18T16:12:00",
      "upload_time_iso_8601": "2021-03-18T16:12:00.842494Z",
      "url": "https://files.pythonhosted.org/packages/05/0b/efbd9ce009928e97614f7e0d24b99084aee76e684fb7902d280e01dad301/adbtv-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}