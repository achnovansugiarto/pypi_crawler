{
  "info": {
    "author": "Daniel Kelshaw",
    "author_email": "daniel.j.kelshaw@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PySwallow\n\n[![Build Status](https://travis-ci.org/danielkelshaw/PySwallow.svg?branch=master)](https://travis-ci.org/danielkelshaw/PySwallow)\n\nPySwallow is an extensible toolkit for PSO.\n\nThe library aims to provide a high-level declarative interface which\nensures that PSOs can be implemented and customised with ease. PySwallow \nfeatures an extensible framework which allows researchers to provide \ncustom implementations which interface with existing functionality.\n\n- **License:** MIT\n- **Python Versions:** 3.6+\n\n## **Features:**\n- [x] High-level module for Particle Swarm Optimisation.\n- [x] Extensible API for implementing new functionality.\n\n## **Basic Usage:**\nPySwallow aims to provide a high-level interface for PSO - the code \nbelow demonstrates just how easy running an optimisation procedure\ncan be.\n\n```python\nimport pyswallow as ps\nfrom pyswallow.utils.functions import single_objective as fx\n\n\nbounds = {\n    'x0': [-1e6, 1e6],\n    'x1': [-1e6, 1e6],\n    'x2': [-1e6, 1e6]\n}\n\noptimiser = ps.Swarm(bounds=bounds, n_swallows=30, n_iterations=100)\noptimiser.optimise(fx.sphere)\n```\n\n## **History:**\nThe optimisation history is written to a ```History``` data structure\nto allow the user to further investigate the optimisation procedure \nupon completion. This is a powerful tool, letting the user define custom\nhistory classes which can record whichever data the user desires.\n\nTracking the history of the optimisation process allows for plotting\nof the results, an example demonstration is seen in the\n```plot_fitness_history``` function - this can be further customised\nthrough the designation of a ```PlotDesigner``` object which provides\nformatting instructions for the graphing tools.\n\n## **Constraints:**\nPySwallow allows the user to define a set of constraints for the \noptimisation problem - this is achieved through inheriting a template \nclass and implementing the designated method. An example of which is \ndemonstrated below:\n\n```python\nfrom pyswallow.constraints.base_constraints import PositionConstraint\n\n\nclass UserConstraint(PositionConstraint):\n\n    def constrain(self, position):\n        return position['x0'] > 0 and position['x1'] < 0\n\n\noptimiser.constraint_manager.register_constraint(UserConstraint())\n```\n\nThis provides the user with a large amount of freedom to define the\nappropriate constraints and allows the `ConstraintManager` to deal with\nthe relevant constraints at the appropriate time.\n\n## **Customisation:**\nThough the base `Swarm` is very effective, there may be aspects that the\nuser wishes to change, such as the boundary handler / inertia weight\nmethods. The library provides an extensible API which allows the user\nto implement a variety of functions as well as develop their own with\ntemplates provided in the form of *Abstract Base Classes*.\n\nAttributes of the `Swarm` instance can be modified to alter how the\noptimisation process will work, this is demonstrated below:\n\n```python\n# altering the boundary handling method\nfrom pyswallow.handlers.boundary_handler import NearestBH\noptimiser.bh = NearestBH(lb, ub)\n```\n```python\n# altering the inertia weight handler\nfrom pyswallow.handlers.inertia_handler import LinearIWH\noptimiser.iwh = LinearIWH(w_init=0.7, w_end=0.4, n_iterations=100)\n```\n\nIt is also possible to define alternative termination criteria through\nimplementation of a ```TerminationManager``` class, a couple of examples\nare demonstrated below:\n\n```python\n# using elapsed time as the termination criteria\nfrom pyswallow.utils.termination_manager import TimeTerminationManager\noptimiser.termination_manager = TimeTerminationManager(t_budget=10_000)\n```\n\n```python\n# using error as the termination criteria\nfrom pyswallow.utils.termination_manager import ErrorTerminationManager\noptimiser.termination_manager = ErrorTerminationManager(\n    optimiser, target=0.0, threshold=1e-3\n)\n```\n\n###### Author: Daniel Kelshaw\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/danielkelshaw/PySwallow",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PySwallow",
    "package_url": "https://pypi.org/project/PySwallow/",
    "platform": "",
    "project_url": "https://pypi.org/project/PySwallow/",
    "project_urls": {
      "Homepage": "https://github.com/danielkelshaw/PySwallow"
    },
    "release_url": "https://pypi.org/project/PySwallow/1.0.0/",
    "requires_dist": [
      "pytest (==5.4.1)",
      "numpy (==1.18.0)",
      "matplotlib (==3.1.2)"
    ],
    "requires_python": "",
    "summary": "A Python Particle Swarm Optimisation Library.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7088037,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f94ce34e4695a429faa8ad19aa9a0907a7980c9f10a2d33b83aef479df841431",
          "md5": "1d72a64bb7b41cbab9908a5326600176",
          "sha256": "5fca4b97f669fef728d15be9e20cc8de041411af38362ce8e19554242b592ddc"
        },
        "downloads": -1,
        "filename": "PySwallow-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d72a64bb7b41cbab9908a5326600176",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30670,
        "upload_time": "2020-04-23T21:40:18",
        "upload_time_iso_8601": "2020-04-23T21:40:18.758030Z",
        "url": "https://files.pythonhosted.org/packages/f9/4c/e34e4695a429faa8ad19aa9a0907a7980c9f10a2d33b83aef479df841431/PySwallow-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0e3fa901b25da3da4bd87688945a746be4063e1e99b2543e92e2242482a341d",
          "md5": "21546bb8db78f6e9ea9087e589501062",
          "sha256": "404aa89bb30b72ef61d610ef8025de2b5e1094cf7fd06cff795aa7554bb18931"
        },
        "downloads": -1,
        "filename": "PySwallow-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "21546bb8db78f6e9ea9087e589501062",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15924,
        "upload_time": "2020-04-23T21:40:21",
        "upload_time_iso_8601": "2020-04-23T21:40:21.108379Z",
        "url": "https://files.pythonhosted.org/packages/f0/e3/fa901b25da3da4bd87688945a746be4063e1e99b2543e92e2242482a341d/PySwallow-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f94ce34e4695a429faa8ad19aa9a0907a7980c9f10a2d33b83aef479df841431",
        "md5": "1d72a64bb7b41cbab9908a5326600176",
        "sha256": "5fca4b97f669fef728d15be9e20cc8de041411af38362ce8e19554242b592ddc"
      },
      "downloads": -1,
      "filename": "PySwallow-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d72a64bb7b41cbab9908a5326600176",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30670,
      "upload_time": "2020-04-23T21:40:18",
      "upload_time_iso_8601": "2020-04-23T21:40:18.758030Z",
      "url": "https://files.pythonhosted.org/packages/f9/4c/e34e4695a429faa8ad19aa9a0907a7980c9f10a2d33b83aef479df841431/PySwallow-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f0e3fa901b25da3da4bd87688945a746be4063e1e99b2543e92e2242482a341d",
        "md5": "21546bb8db78f6e9ea9087e589501062",
        "sha256": "404aa89bb30b72ef61d610ef8025de2b5e1094cf7fd06cff795aa7554bb18931"
      },
      "downloads": -1,
      "filename": "PySwallow-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "21546bb8db78f6e9ea9087e589501062",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15924,
      "upload_time": "2020-04-23T21:40:21",
      "upload_time_iso_8601": "2020-04-23T21:40:21.108379Z",
      "url": "https://files.pythonhosted.org/packages/f0/e3/fa901b25da3da4bd87688945a746be4063e1e99b2543e92e2242482a341d/PySwallow-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}