{
  "info": {
    "author": "Chris Sewell",
    "author_email": "chrisj_sewell@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Jupyter",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# jlab_aiidatree [IN-DEVELOPMENT]\n\n![Github Actions Status](https://github.com/chrisjsewell/jlab_aiidatree/workflows/Build/badge.svg)\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/chrisjsewell/jlab_aiidatree/master?urlpath=lab)\n\nA JupyterLab extension for exploring [AiiDA](https://www.aiida.net/) databases.\nThis is extension is intended to provide similar functionality for exploring graphs as the VS Code [AiiDA Explorer extension](https://marketplace.visualstudio.com/items?itemName=chrisjsewell.aiida-explore-vscode):\n\n- View Processes\n- Filter by process state\n- Expand processes with their incoming/outgoing nodes\n- View node attributes stored on the database\n- Visualise node graphs (with D3 Graph)\n- Visualise `StructureData` (the ThreeJS)\n\n![Example](images/example.png)\n\nThis extension is composed of a Python package named `jlab_aiidatree`\nfor the server extension and a NPM package named `jlab_aiidatree`\nfor the frontend extension.\n\n## Install\n\nTo install the extension, execute:\n\n```bash\npip install jlab_aiidatree\n```\n\nor also with aiida-core:\n\n```bash\npip install jlab_aiidatree[aiida]\nreentry scan\n```\n\n## Usage\n\n### Connecting to AiiDA\n\nYou can connect to an AiiDA instance in one of two ways:\n\n1. Directly using `aiida-core`, installed in the same environment as `jupyterlab` (the default).\n2. Through an AiiDA instance serving the AiiDA REST API.\n\nTo start an AiiDA REST server, firstly `aiida-core` must be installed with the `rest` extra dependencies:\n\n```bash\npip install aiida-core[rest]~=1.6\nreentry scan\n```\n\nIt is best to install this into a separate environment than you have your jupyterlab installation, to avoid dependency clashes.\n\nThen you can start the REST server:\n\n```console\n$ verdi restapi -H 127.0.0.5 -P 6789\n* REST API running on http://127.0.0.5:6789/api/v4\n```\n\nTo connect to this server, simply change the `rest_url` setting to this URL:\n\n![Settings](images/settings.png)\n\n:::{seealso}\nhttps://aiida.readthedocs.io/projects/aiida-core/en/latest/howto/share_data.html?highlight=REST#launching-the-rest-api\n:::\n\n:::{important}\nThe URL is connected to from the server side of JupyterLab, i.e. where you are hosting it and not necessarily on your local machine.\n:::\n\n## Uninstall\n\nTo remove the extension, execute:\n\n```bash\npip uninstall jlab_aiidatree\n```\n\n## Requirements\n\n* JupyterLab >= 3.0\n\n## Troubleshoot\n\nIf you are seeing the frontend extension, but it is not working, check\nthat the server extension is enabled:\n\n```bash\njupyter server extension list\n```\n\nIf the server extension is installed and enabled, but you are not seeing\nthe frontend extension, check the frontend extension is installed:\n\n```bash\njupyter labextension list\n```\n\n## Coming Features\n\n- View Computers and attached codes\n- View Groups and attached nodes\n\n## Contributing\n\n### Development install\n\nNote: You will need NodeJS to build the extension package, e.g.\n\n```bash\nconda create -n jupyterlab-ext --override-channels --strict-channel-priority -c conda-forge -c anaconda jupyterlab=3 nodejs jupyter-packaging aiida-core~=1.6\nconda activate jupyterlab-ext\nreentry scan\n```\n\nThe `jlpm` command is JupyterLab's pinned version of\n[yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use\n`yarn` or `npm` in lieu of `jlpm` below.\n\n```bash\n# Clone the repo to your local environment\n# Change directory to the jlab_aiidatree directory\n# Install package in development mode\npip install -e .\n# Link your development version of the extension with JupyterLab\njupyter labextension develop . --overwrite\n# Server extension must be manually installed in develop mode\njupyter server extension enable jlab_aiidatree\n# Rebuild extension Typescript source after making changes\njlpm run build\n```\n\nYou can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.\n\n```bash\n# Watch the source directory in one terminal, automatically rebuilding when needed\njlpm run watch\n# Run JupyterLab in another terminal\njupyter lab\n```\n\nWith the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).\n\nBy default, the `jlpm run build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:\n\n```bash\njupyter lab build --minimize=False\n```\n\n### Development uninstall\n\n```bash\n# Server extension must be manually disabled in develop mode\njupyter server extension disable jlab_aiidatree\npip uninstall jlab_aiidatree\n```\n\nIn development mode, you will also need to remove the symlink created by `jupyter labextension develop`\ncommand. To find its location, you can run `jupyter labextension list` to figure out where the `labextensions`\nfolder is located. Then you can remove the symlink named `jlab_aiidatree` within that folder.\n\n\n### Deploying\n\nSee <https://jupyterlab.readthedocs.io/en/stable/extension/extension_tutorial.html#packaging-your-extension>:\n\n1. Update the `package.json` version key\n2. Rebuild the package: `jlpm run build`\n3. Ensure all linting and tests pass\n4. Build the distribution\n\n   ```bash\n   pip install build\n   rm -rf dist\n   python -m build -s\n   python -m build\n   ```\n\n5. Upload to PyPI using `twine`\n\n   ```bash\n   pip install twine\n   twine upload --skip-existing dist/*\n   ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chrisjsewell/jlab_aiidatree",
    "keywords": "Jupyter,JupyterLab,JupyterLab3",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jlab-aiidatree",
    "package_url": "https://pypi.org/project/jlab-aiidatree/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/jlab-aiidatree/",
    "project_urls": {
      "Homepage": "https://github.com/chrisjsewell/jlab_aiidatree"
    },
    "release_url": "https://pypi.org/project/jlab-aiidatree/0.2.0/",
    "requires_dist": [
      "jupyter-server (<2,>=1.6)",
      "aiida-core (~=1.6.3) ; extra == 'aiida'",
      "jupyterlab (~=3.0) ; extra == 'dev'",
      "jupyter-packaging ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "A JupyterLab extension for exploring AiiDA databases.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10355162,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b133af9756e1d77873973c624450122af9695ebdd78aa21df9666a961c918078",
          "md5": "bb3fd1836cac7788abcd6740c22467fd",
          "sha256": "1d33c91888ebeaba0e9bc13cf9d128725b9824ab24b1c6eb3283e2d014af7418"
        },
        "downloads": -1,
        "filename": "jlab_aiidatree-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bb3fd1836cac7788abcd6740c22467fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2371758,
        "upload_time": "2021-05-12T05:15:03",
        "upload_time_iso_8601": "2021-05-12T05:15:03.542854Z",
        "url": "https://files.pythonhosted.org/packages/b1/33/af9756e1d77873973c624450122af9695ebdd78aa21df9666a961c918078/jlab_aiidatree-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f41f918c29bb2d3a7a89cca5cb970868a302ac8e0d08446bb306e56f425c64c",
          "md5": "d5f82efe444971cfda4fa56fe8446b1a",
          "sha256": "28a9d3323b14d5d58fd492b11f1367d1dbe9b4e7613523e8787e4a142f3b3b0f"
        },
        "downloads": -1,
        "filename": "jlab_aiidatree-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d5f82efe444971cfda4fa56fe8446b1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1914828,
        "upload_time": "2021-05-12T05:15:05",
        "upload_time_iso_8601": "2021-05-12T05:15:05.296477Z",
        "url": "https://files.pythonhosted.org/packages/5f/41/f918c29bb2d3a7a89cca5cb970868a302ac8e0d08446bb306e56f425c64c/jlab_aiidatree-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfba0e7ec99b4b37a03acd9cc1accc02d41048f4f3ca5d0a4b9e7f237237252b",
          "md5": "e1eb4391e02654c747c7fc663c5f748b",
          "sha256": "46e9c16ed39c2eba13495570c05c0deed69eadd241d7d97748895b63dbf1f97e"
        },
        "downloads": -1,
        "filename": "jlab_aiidatree-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1eb4391e02654c747c7fc663c5f748b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2453815,
        "upload_time": "2021-05-14T10:30:46",
        "upload_time_iso_8601": "2021-05-14T10:30:46.943412Z",
        "url": "https://files.pythonhosted.org/packages/df/ba/0e7ec99b4b37a03acd9cc1accc02d41048f4f3ca5d0a4b9e7f237237252b/jlab_aiidatree-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c5cb0f991e055c097db7499703ae7e0d2f0d9479f6dbde5a7fbd6e4ba680595",
          "md5": "7a4c06a954d9a76a1edd4a2df0032db2",
          "sha256": "853067764815b76893c90edeaea1afd3cccb104af8d971a442cbd6c00262c2f9"
        },
        "downloads": -1,
        "filename": "jlab_aiidatree-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7a4c06a954d9a76a1edd4a2df0032db2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1820079,
        "upload_time": "2021-05-14T10:30:48",
        "upload_time_iso_8601": "2021-05-14T10:30:48.278152Z",
        "url": "https://files.pythonhosted.org/packages/8c/5c/b0f991e055c097db7499703ae7e0d2f0d9479f6dbde5a7fbd6e4ba680595/jlab_aiidatree-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dfba0e7ec99b4b37a03acd9cc1accc02d41048f4f3ca5d0a4b9e7f237237252b",
        "md5": "e1eb4391e02654c747c7fc663c5f748b",
        "sha256": "46e9c16ed39c2eba13495570c05c0deed69eadd241d7d97748895b63dbf1f97e"
      },
      "downloads": -1,
      "filename": "jlab_aiidatree-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e1eb4391e02654c747c7fc663c5f748b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 2453815,
      "upload_time": "2021-05-14T10:30:46",
      "upload_time_iso_8601": "2021-05-14T10:30:46.943412Z",
      "url": "https://files.pythonhosted.org/packages/df/ba/0e7ec99b4b37a03acd9cc1accc02d41048f4f3ca5d0a4b9e7f237237252b/jlab_aiidatree-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c5cb0f991e055c097db7499703ae7e0d2f0d9479f6dbde5a7fbd6e4ba680595",
        "md5": "7a4c06a954d9a76a1edd4a2df0032db2",
        "sha256": "853067764815b76893c90edeaea1afd3cccb104af8d971a442cbd6c00262c2f9"
      },
      "downloads": -1,
      "filename": "jlab_aiidatree-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7a4c06a954d9a76a1edd4a2df0032db2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 1820079,
      "upload_time": "2021-05-14T10:30:48",
      "upload_time_iso_8601": "2021-05-14T10:30:48.278152Z",
      "url": "https://files.pythonhosted.org/packages/8c/5c/b0f991e055c097db7499703ae7e0d2f0d9479f6dbde5a7fbd6e4ba680595/jlab_aiidatree-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}