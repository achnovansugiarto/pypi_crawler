{
  "info": {
    "author": "Lukas Hameury",
    "author_email": "lukas.hameury@libriciel.fr",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Introduction\n\nC'est principalement une librairie écrite en Python permettant la communication avec le i-Parapheur en version 4.2+, au travers de l'API REST ou via webservice SOAP.\n\nElle offre des commandes accessibles depuis un shell standard, pour faciliter certaines opérations d'exploitation.\n\n# Installation\n\nSur une distribution Ubuntu 18.04 LTS :\n\n* une instance i-Parapheur accessible en v4.4.0 ou plus\n* un environnement Python fonctionnel !\n* ajout de l'outil ` pip ` depuis un terminal BASH :\n\n```bash\nsudo bash\ncurl https://bootstrap.pypa.io/get-pip.py | python\n```\n\n* installation du paquet python `iparapheur-utils`, depuis un terminal BASH :\n\n```bash\nsudo pip install iparapheur-utils\n```\n\nSupport CentOS / RHEL :\n\n* Version 6 : Cette version n'est plus supportée, en cause une version de python trop ancienne (2.6)\n* Version 7 : Cette version requiert l'installation de paquets supplémentaires :  \n  `yum install libffi-devel gcc openssl-devel`\n\n# Usage\n\nCes commandes sont actuellement disponibles :\n\n- [`ph-init`](#ph-init)\n- [`ph-check`](#ph-check)\n- [`ph-echo`](#ph-echo)\n- [`ph-recupArchives`](#ph-recuparchives)\n- [`ph-export`](#ph-export)\n- [`ph-import`](#ph-import)\n- [`ph-rename`](#ph-rename)\n- [`ph-removeldap`](#ph-removeldap)\n- [`ph-pushdoc`](#ph-pushdoc)\n\n> Remarques : Elles sont conçues pour être exécutées en environnement bash standard: ligne de commande, ou script BASH.  \nAucune qualification à ce stade pour l'usage de ces commandes dans un interpréteur Python.\n\n## `ph-init`\n\nCette commande permet la génération d'un fichier de configuration \"par défaut\", qu'il faut bien sûr adapter au serveur.\n\nExemple d'utilisation :\n```bash\nusage: ph-init [-h] [-p P] [-c {recuparchives,export,import}]\n\nGénère un fichier de configuration par défaut dans le répertoire courant\n\nArguments:\n  -h, --help            Affiche ce message et quitte\n  -p P                  Chemin du fichier de configuration\n  -c {recuparchives,export,import}\n                        Commande pour laquelle générer le fichier de\n                        configuration\n```\n\nLe lancement de la commande génère un fichier `iparapheur-utils.cfg`, lu par défaut lors de l'appel des autres fonctions\n\n## `ph-check`\n\nLance le script de check d'installation. Pas de pré-requis particulier.\n\n## `ph-echo`\n\nLance la fonction `echo` vers le i-Parapheur désigné dans le fichier de configuration.\n\nExemple d'utilisation :\n```bash\nph-echo -h\n---\nusage: ph-echo [-h] [-s S] [-c C] [-u U] [-p P]\n\nLance un echo via webservice sur un iParapheur\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -s S        URL du serveur iParapheur\n  -c C        Fichier de configuration\n  -u U        Utilisateur\n  -p P        Mot de passe\n```\n\n## `ph-recupArchives`\n\nLance la fonction de récupération ou/et de purge des archives.\nIl est vivement conseillé d'utiliser la commande `ph-init -c recuparchives` afin de générer un squelette de fichier de configuration complet.\n\nExemple d'utilisation :\n```bash\nph-recupArchives -h\n---\nusage: ph-recupArchives [-h] [-s S] [-c C] [-u U] [-p P] [-f F] [-ps PS]\n                        [-r {true,false}] [-pu {true,false}] [-d {true,false}]\n                        [-t T] [-st ST] [-w W]\n\nLance une récupération / purge des archives\n\nArguments:\n  -h, --help        Affiche ce message et quitte\n  -s S              URL du serveur iParapheur\n  -c C              Fichier de configuration\n  -u U              Utilisateur\n  -p P              Mot de passe\n  -f F              Répertoire de destination\n  -ps PS            Taille des pages à récupérer\n  -r {true,false}   Chemins réduis des téléchargements\n  -pu {true,false}  Active la purge les données\n  -d {true,false}   Télécharge les données\n  -t T              Filtre sur type\n  -st ST            Filtre sur sous-type\n  -w W              Délai de conservation des données\n```\n\n## `ph-export`\n\nLance la fonction d'exporation de la configuration du parapheur vers un dossier.\nIl est vivement conseillé d'utiliser la commande `ph-init -c export` afin de générer un squelette de fichier de configuration complet.\n\n**ATTENTION** : Seule la **configuration** du parapheur est exportée. Comprendre qu'aucun dossier, archive, statistique ou historique n'est conservé.\n\nExemple d'utilisation :\n```bash\nusage: ph-export [-h] [-s S] [-c C] [-u U] [-p P] [-i I] [-dh DH] [-dp DP]\n                 [-du DU] [-dpw DPW] [-dd DD]\n\nExporte la configuration du parapheur ciblé vers un dossier\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -s S        URL du serveur iParapheur\n  -c C        Fichier de configuration\n  -u U        Utilisateur administrateur\n  -p P        Mot de passe\n  -i I        Répertoire de destination\n  -dh DH      IP du serveur mysql\n  -dp DP      Port du serveur mysql\n  -du DU      Utilisateur alfresco de mysql\n  -dpw DPW    Mot de passe utilisateur alfresco de mysql\n  -dd DD      Nom de la base mysql\n```\n\n## `ph-import`\n\nLance la fonction d'importation de la configuration du parapheur à partir d'un dossier.\nIl est vivement conseillé d'utiliser la commande `ph-init -c import` afin de générer un squelette de fichier de configuration complet.\n\n**ATTENTION** : Seule la **configuration** du parapheur est importée. Comprendre qu'aucun dossier, archive, statistique ou historique n'est conservé.\n\nExemple d'utilisation :\n```bash\nusage: ph-import [-h] [-s S] [-c C] [-u U] [-p P] [-i I] [-dh DH] [-dp DP]\n                 [-du DU] [-dpw DPW] [-dd DD]\n\nImporte la configuration ciblée dans un parapheur vierge\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -s S        URL du serveur iParapheur\n  -c C        Fichier de configuration\n  -u U        Utilisateur administrateur\n  -p P        Mot de passe\n  -i I        Répertoire à importer\n  -dh DH      IP du serveur mysql\n  -dp DP      Port du serveur mysql\n  -du DU      Utilisateur alfresco de mysql\n  -dpw DPW    Mot de passe utilisateur alfresco de mysql\n  -dd DD      Nom de la base mysql\n```\n\n## `ph-rename`\n\nCette commande permet de changer l'URL d'accès au i-Parapheur\n\nExemple d'utilisation :\n```bash\nusage: ph-rename [-h] -n N\n\nChange l'URL d'accès du i-Parapheur\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -n N        Nouvelle URL du serveur iParapheur\n\n```\n\nLe lancement de la commande modifie l'URL d'accès au i-Parapheur mais ne change pas la configuration du certificat serveur.\n\nIl est important de suivre la procédure de changement de certificat serveur donnée après le lancement de la commande.\n\n```bash\nATTENTION ! Le certificat configuré dans le fichier /etc/nginx/conf.d/parapheur_ssl.conf \nne correspond potentiellement plus avec le nouveau nom du parapheur. \nIl convient de remplacer ce certificat (localisé dans le dossier /etc/nginx/ssl/) \npour que le parapheur soit totalement fonctionnel.\n\nPropriétés à modifier dans le fichier de configuration /etc/nginx/conf.d/parapheur_ssl.conf :\n- ssl_certficiate /etc/nginx/ssl/test.pem;     # Partie publique\n- ssl_certficiate_key /etc/nginx/ssl/test.key; # Partie privée\n\nUne fois les modifications de certificat effectuées, relancer le service NginX :\nservice nginx restart\n```\n\n## `ph-removeldap`\n\nCette commande permet de supprimer les utilisateurs synchronisés avec un LDAP n'ayant aucun bureau liés.\n\nExemple d'utilisation :\n```bash\nusage: ph-removeldap [-h]\n\nSupprime les utilisateurs synchronisés LDAP n'ayant aucune liaison avec un bureau\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n\n```\n\n## `ph-pushdoc`\n\nLance la fonction d'importation de dossier via le connecteur générique Pushdoc.\nIl est vivement conseillé d'utiliser la commande ` ph-init -c pushdoc ` afin de générer un squelette de fichier de configuration complet.\n\n**ATTENTION** : Des pré-requis sont nécéssaires avant l'utilisation de cette commande :\n- Un jar pushdoc en dernière version dans le même dossier que ce script\n- Tout le nécéssaire pour faire fonctionner pushdoc (wsdl, conf.cf, keystore, truststore)\n- Le fichier par défaut pour le visuel pdf des flux PES (template-visuelPDF.pdf)\n\nExemple d'utilisation :\n```bash\nusage: ph-pushdoc [-h] [-c C] [-j J] [-i I] [-e E] [-x X] [-v V]\n\nImporte la configuration ciblée dans un parapheur vierge\n\nArguments:\n  -h, --help  Affiche ce message et quitte\n  -c C        Fichier de configuration\n  -j J        Fichier JAR du pushdoc\n  -i I        Répertoire à traiter\n  -e E        Courriel de l'utilisateur webservice\n  -x X        xPath par défaut dans le cas d'un envoi de flux PES\n  -v V        Visuel PDF à utiliser dans le cas d'un envoi de flux PES\n```\n\n\n# Utilisation en librairie\n\nDéfinir un fichier de configuration `script.cfg` dans le répertoire racine via la commande `ph-init`, qui aura la forme suivante :\n\n```ini\n[Parapheur]\nusername = admin\npassword = admin\nserver = secure-iparapheur.dom.local\n```\n\nPuis, créer un script python avec utilisation de l'API REST :\n\n```python\n#!/usr/bin/env python\n# coding=utf-8\n\nimport parapheur\n\n# Init REST API client\nclient = parapheur.getrestclient()\n\nif client.islogged:\n    # Do a lot of things...\n```\n\nOu, pour une utilisation avec l'API SOAP :\n\n```python\n#!/usr/bin/env python\n# coding=utf-8\n\nimport parapheur\n\n# Init SOAP API client\nwebservice = parapheur.getsoapclient()\n\nwebservice.call().echo('Coucou, ici python !')\n```\n\nLe rendre éxecutable, puis le lancer depuis une console bash :\n\n```bash\nchmod +x ./script.py\n./script.py\n```\n\n# Cas spécifiques\n\n## Proxy\n\nIl est possible de contourner l'usage d'un proxy pour les appels Webservices ou API REST, \nsi le script à lancer doit communiquer directement avec le serveur i-Parapheur \nsans passer par un éventuel proxy défini sur le système.\n\nPour cela, il suffit d'ajouter la variable **NO_PROXY** avant l'appel d'une fonction ou d'un script.\nPar exemple, pour un appel de `ph-echo` vers `secure-iparapheur.dom.local`, la commande sera :\n\n```bash\nNO_PROXY=\"secure-iparapheur.dom.local\" ph-echo\n```\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.libriciel.fr/i-parapheur/client-python",
    "keywords": "",
    "license": "CeCILL v2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "iparapheur-utils.branches",
    "package_url": "https://pypi.org/project/iparapheur-utils.branches/",
    "platform": "",
    "project_url": "https://pypi.org/project/iparapheur-utils.branches/",
    "project_urls": {
      "Homepage": "https://gitlab.libriciel.fr/i-parapheur/client-python"
    },
    "release_url": "https://pypi.org/project/iparapheur-utils.branches/0.0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Client python pour i-Parapheur",
    "version": "0.0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4739151,
  "releases": {
    "0.0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e25d7587bee5e6e6bf79aba128570da31c9aa3f68743f81c47ecf87f8db9822",
          "md5": "185ae1ce190caa8ea1ff070e9a2625ec",
          "sha256": "cb5910d8673db8c389351e8f8ff194608ba35d4d6005ddfb099d70575b3db329"
        },
        "downloads": -1,
        "filename": "iparapheur-utils.branches-0.0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "185ae1ce190caa8ea1ff070e9a2625ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46760,
        "upload_time": "2019-01-25T09:01:32",
        "upload_time_iso_8601": "2019-01-25T09:01:32.940490Z",
        "url": "https://files.pythonhosted.org/packages/0e/25/d7587bee5e6e6bf79aba128570da31c9aa3f68743f81c47ecf87f8db9822/iparapheur-utils.branches-0.0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e25d7587bee5e6e6bf79aba128570da31c9aa3f68743f81c47ecf87f8db9822",
        "md5": "185ae1ce190caa8ea1ff070e9a2625ec",
        "sha256": "cb5910d8673db8c389351e8f8ff194608ba35d4d6005ddfb099d70575b3db329"
      },
      "downloads": -1,
      "filename": "iparapheur-utils.branches-0.0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "185ae1ce190caa8ea1ff070e9a2625ec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 46760,
      "upload_time": "2019-01-25T09:01:32",
      "upload_time_iso_8601": "2019-01-25T09:01:32.940490Z",
      "url": "https://files.pythonhosted.org/packages/0e/25/d7587bee5e6e6bf79aba128570da31c9aa3f68743f81c47ecf87f8db9822/iparapheur-utils.branches-0.0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}