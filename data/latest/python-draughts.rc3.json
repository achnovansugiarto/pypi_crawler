{
  "info": {
    "author": "Yohaan Seth Nathan",
    "author_email": "yohaan.nathanjw@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# python-draughts\n\n[![PyPI version](https://badge.fury.io/py/python-draughts.svg)](https://badge.fury.io/py/python-draughts)\n\n*Based on [ImparaAI/checkers](https://github.com/ImparaAI/checkers) and using various concepts from [RoepStoep/draughtsnet](https://github.com/RoepStoep/draughtsnet).*\n\nA Python3 library that you can use to play a game of draughts. This is just a set of classes that you can use in your code, it's not an interactive shell draughts game (unlike [python-chess](https://pypi.python.org/pypi/python-shogi) and [python-shogi](https://pypi.python.org/pypi/chess) for the games [chess](https://en.wikipedia.org/wiki/Chess) and [shogi](https://en.wikipedia.org/wiki/Shogi) respectively).\n\n## Assumptions\n\nThe rules used are for competitive [International draughts *(also called Polish draughts or International checkers)*](https://en.wikipedia.org/wiki/International_draughts). This means a 10x10 board with force captures and regular kings. Also supporting various other draughts variant ([description on supported variants](https://lidraughts.org/variant)).\n\nEach position on the board is numbered 1 to 50. Each move is represented as an array with two values: `starting position` and `ending position`. So if you're starting a new game, one of the available moves is `[9, 13]` for player 1. If there's a capture move, the ending position is the position the capturing piece will land on (i.e. two rows from its original row), which might look like `[13, 22]`.\n\nEach piece movement is completely distinct, even if the move is part of a multiple capture series. In [Portable Draughts Notation](https://en.wikipedia.org/wiki/Portable_Draughts_Notation) mutli-capture series are usually represented by a `5-32` (for a particularly long series of jumps), but in certain situations there could be multiple pathways to achieve that final position. This game requires an explicit spelling out of each distinct move in the multi-capture series.\n\n*Note: Just examples, not necessarily legal positions/moves.*\n\n## Usage\n\n- Create a new game:\n\n```python\nfrom checkers.game import Game\n\ngame = Game()\n```\n\n- See whose turn it is:\n\n```python\ngame.whose_turn() #1 or 2\n```\n\n- Get the possible moves:\n\n```python\ngame.get_possible_moves() #[[9, 13], [9, 14], [10, 14], [10, 15], [11, 15], [11, 16], [12, 16]]\n```\n\n- Make a move:\n\n```python\ngame.move([9, 13])\n```\n\n- Check if the game is over:\n\n```python\ngame.is_over() #True or False\n```\n\n- Find out who won:\n\n```python\ngame.get_winner() #None or 1 or 2\n```\n\n- Review the move history:\n\n```python\ngame.moves #[[int, int], [int, int], ...]\n```\n\nChange the consecutive noncapture move limit (default `40` according to the [rules](http://www.usacheckers.com/rulesofcheckers.php)):\n\n```python\ngame.consecutive_noncapture_move_limit = 20\ngame.move_limit_reached() #True or False\n```\n\n- Review the pieces on the board:\n\n```python\nfor piece in game.board.pieces:\n\tpiece.player #1 or 2\n\tpiece.other_player #1 or 2\n\tpiece.king #True or False\n\tpiece.captured #True or False\n\tpiece.position #1-32\n\tpiece.get_possible_capture_moves() #[[int, int], [int, int], ...]\n\tpiece.get_possible_positional_moves() #[[int, int], [int, int], ...]\n```\n\n## To do\n\n- [ ] Fix [tests dir](/tests) to test code each commit.\n\n## Acknowledgements\n\n- [ImparaAI/checkers](https://github.com/ImparaAI/checkers) for creating a 8x8 draughts library.\n- [RoepStoep/draughtsnet](https://github.com/RoepStoep/draughtsnet) for various python concepts to help create this library.\n- [AttackingOrDefending/lidraughts-bot](https://github.com/AttackingOrDefending/lidraughts-bot) for implementing [ImparaAi/checkers](https://github.com/ImparaAi/checkers) for variants and 10x10 international draughts for a [lidraughts-bot](https://lidraughts.org/api#tag/Bot).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TheYoBots/python-draughts",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-draughts",
    "package_url": "https://pypi.org/project/python-draughts/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-draughts/",
    "project_urls": {
      "Bug Tracker": "https://github.com/TheYoBots/python-draughts/issues",
      "Homepage": "https://github.com/TheYoBots/python-draughts"
    },
    "release_url": "https://pypi.org/project/python-draughts/0.3/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "A Python3 library that you can use to play a game of draughts.",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10875278,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47f8629d22cf9c1906f43630189d54b7241aa099e1d3b912fa7816b12471762f",
          "md5": "fe39436c7b291fd10caf7584797c2da0",
          "sha256": "6bfb2c2d2715c5d6b17b4edcb4439d8172e4f31bda7e725572f7a3ca8d341d51"
        },
        "downloads": -1,
        "filename": "python-draughts-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fe39436c7b291fd10caf7584797c2da0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14542,
        "upload_time": "2021-07-10T18:54:18",
        "upload_time_iso_8601": "2021-07-10T18:54:18.465069Z",
        "url": "https://files.pythonhosted.org/packages/47/f8/629d22cf9c1906f43630189d54b7241aa099e1d3b912fa7816b12471762f/python-draughts-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f589525a8fc8e6bb92f9d5ca3db2d087d0095320ddd914d9f31aba0935bfabc9",
          "md5": "8620916c5b28f23b1a02b92165de958e",
          "sha256": "bc1c63a34e85f3d4eeb768900b450dd1da40fdc4ca4dd8fb10168cd1ad9d4e69"
        },
        "downloads": -1,
        "filename": "python-draughts-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8620916c5b28f23b1a02b92165de958e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14660,
        "upload_time": "2021-07-10T19:20:54",
        "upload_time_iso_8601": "2021-07-10T19:20:54.835334Z",
        "url": "https://files.pythonhosted.org/packages/f5/89/525a8fc8e6bb92f9d5ca3db2d087d0095320ddd914d9f31aba0935bfabc9/python-draughts-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "725777e2bb60b05293e057cab01ecc16cca7db1f75de405b375ab14505dde26f",
          "md5": "cd736be6a7b04e3869aa91aad88926e4",
          "sha256": "6fca5f90b6814294b6e2cc49e66bd0d7adccb9737079f564c6c62a7a24d883d1"
        },
        "downloads": -1,
        "filename": "python-draughts-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cd736be6a7b04e3869aa91aad88926e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 15094,
        "upload_time": "2021-07-10T19:39:47",
        "upload_time_iso_8601": "2021-07-10T19:39:47.522663Z",
        "url": "https://files.pythonhosted.org/packages/72/57/77e2bb60b05293e057cab01ecc16cca7db1f75de405b375ab14505dde26f/python-draughts-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "725777e2bb60b05293e057cab01ecc16cca7db1f75de405b375ab14505dde26f",
        "md5": "cd736be6a7b04e3869aa91aad88926e4",
        "sha256": "6fca5f90b6814294b6e2cc49e66bd0d7adccb9737079f564c6c62a7a24d883d1"
      },
      "downloads": -1,
      "filename": "python-draughts-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cd736be6a7b04e3869aa91aad88926e4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 15094,
      "upload_time": "2021-07-10T19:39:47",
      "upload_time_iso_8601": "2021-07-10T19:39:47.522663Z",
      "url": "https://files.pythonhosted.org/packages/72/57/77e2bb60b05293e057cab01ecc16cca7db1f75de405b375ab14505dde26f/python-draughts-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}