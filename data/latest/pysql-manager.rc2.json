{
  "info": {
    "author": "Badhusha K Muhammed",
    "author_email": "badhushamuhammed09@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PysqlManager\nA python package to manage sql\n\n# GETTING STARTED !\n\nCreating a PySql object is the first step. All function are defined in PySql Class (Which is base class for PysqlManager Module)\n\nFor creating PySql object we need a meta_class / reference class (meta_class is nothing but a class structure for SQL table)\n\nUser(id varchar(25), name varchar(20), Age INT)\n\nFor above table , the reference class will be\n\n```Python\nfrom pysql_manager.types import Column, IntegerType, StringType\n    \nclass User:\n    id = Column(col_type=IntegerType())\n    name = Column(col_type=StringType(25))\n    age = Column(col_type=IntegerType())\n    __table__ = \"User\"\n\n# Now we can use this meta_class to create actual PySql objcet \n\nfrom pysql_manager import PySql\nusers = PySql(\"localhost\", \"root\", \"passowrd\", \"DB\", User)\nusers.fetch_all.show() #sample method for fetching and showing all the data from table User\n```  \n\n\n## FETCH ALL DATA FROM SQL TABLE\n```Python\nfrom pysql_manager.types import Column, IntegerType, StringType\n    \nclass User:\n    id = Column(col_type=IntegerType())\n    name = Column(col_type=StringType(25))\n    age = Column(col_type=IntegerType())\n    __table__ = \"User\"\n    \nfrom pysql_manager import PySql\n\nusers = PySql(\"localhost\", \"root\", \"passowrd\", \"DB\", User)\nusers.fetch_all # Return PySqlConnection\n```\n\nfetch_all method will return a PySqlCollection object , which contain rich functionalities.\n\n<br />\n\n### .show() - To show data in table form\n```Python\nusers.fetch_all.show()  # Return None\n```\n<br />\n\n### .first() - Return first row\nA single Row is nothing but an object of base class. For above example , each row will be an object of class User\nmeans, we can access `row.column` (In this case row.age, row.id, row.name etc)\n\n```Python\nusers.fetch_all.first() # Return single meta_class object\n```\n\n### .last() - To get last row\n```Python\nusers.fetch_all.last() # Return single meta_class object\n```\n<br />\n\n### .is_empty() - To get last row\n```Python\nusers.fetch_all.is_empty() # Return Boolean\n```\n<br />\n\n### .count() - To get total count of rows\n```Python\nusers.fetch_all.count() # Return Integer\n```\n<br />\n\n### .to_df() - Create pandas DataFrame\nColumn name defined in meta_class will be taken for Pandas DataFrame creation\n```Python\nusers.fetch_all.to_df() # Return pandas DataFrame\n```\n\n<br />\n\n### .to_list_dict() - Creates List of python dictionaries\nList of python dictionaries. Where each dictionary will be a SQL record\n```Python\nusers.fetch_all.to_list_dict() # Return List[dict]\n```\n\n<br />\n\n### .save_as_csv() - To save PySqlCollection object as CSV file.\n```Python\nusers.fetch_all.save_as_csv(\"path\", delimiter=\"|\") # Return None\n```\n\n<br />\n\n### .select() - To select specific columns from PySqlCollection\n```Python\nusers.fetch_all.select([\"age\", \"id\"]) # Return PySqlCollection \n```\n    \nSince this is also returning a PySqlCollection, this can be again chained with all above methods.\n\nEg\n```Python\nusers.fetch_all.select([\"age\", \"id\"]).count()\nusers.fetch_all.select([\"age\", \"id\"]).first()\nusers.fetch_all.select([\"age\", \"id\"]).last()\nusers.fetch_all.select([\"age\", \"id\"]).show()\n```\n\n## FILTER DATA FROM SQL\n\nFor filtering data from SQL using PySql-Manager just use the inbuilt filter() method\n    \n\n```Python\nusers.filter(\"age > 10\") # Return PySqlFilterObj\n```\n\n<br />\n\nfilter is a special method which will return a PySqlFilterObj which can be then used to fetch filtered data\n(which will return same PySqlCollection when using fetch_all() - fetch_all will return all data from SQL, but filter().fetch_filtered will return filtered data)\nor can be used to update, or delete filtered data\n\n<br />\n\n### .fetch_filtered - To get PySqlCollection of filtered SQL data\n```Python\nusers.filter(\"age > 10\").fetch_filtered # Return PySqlCollection\n```\n<br />\n\n### .update() - To update filtered data\n```Python\nusers.filter(\"age > 10\").update(nam=\"newName\", age=\"12\") # Return None\n```\n\n<br />\n\n### .delete() - To delete filtered data\n```Python\nusers.filter(\"age > 10\").delete() # Return None\n```\n\n## INSERT DATA TO SQL TABLE\nInsert is done using .insert() method, The data should be List of python dictionaries.\n```Python\nfrom pysql_manager.types import Column, IntegerType, StringType\n    \nclass User:\n    id = Column(col_type=IntegerType())\n    name = Column(col_type=StringType(25))\n    age = Column(col_type=IntegerType())\n    __table__ = \"User\"\n    \nfrom pysql_manager import PySql\n\nusers = PySql(\"localhost\", \"root\", \"passowrd\", \"DB\", User)\nsql_data = [{\"id\": 1, \"name\": \"user1\", \"age\": 22}, {\"id\": 2, \"name\": \"user2\", \"age\": 12}] \nusers.insert(sql_data) # Return PySql self\n```\n\nIf there is duplicate entry for primary key (In this case `id` column, it will raise `PRIMARY KEY ERROR`). To avoid this and update on duplicate key you can use `update_on_duplicate` argument and pass list columns you need to update when there is a duplicate entry.\n```Python\nfrom pysql_manager.types import Column, IntegerType, StringType\n    \nclass User:\n    id = Column(col_type=IntegerType())\n    name = Column(col_type=StringType(25))\n    age = Column(col_type=IntegerType())\n    __table__ = \"User\"\n    \nfrom pysql_manager import PySql\n\nusers = PySql(\"localhost\", \"root\", \"passowrd\", \"DB\", User)\nsql_data = [{\"id\": 1, \"name\": \"user1\", \"age\": 22}, {\"id\": 2, \"name\": \"user2\", \"age\": 12}] \nusers.insert(sql_data, update_on_duplicate=[\"age\"]) # Return PySql self\n```\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Badhsuha/PysqlManager",
    "keywords": "",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pysql-manager",
    "package_url": "https://pypi.org/project/pysql-manager/",
    "platform": null,
    "project_url": "https://pypi.org/project/pysql-manager/",
    "project_urls": {
      "Homepage": "https://github.com/Badhsuha/PysqlManager"
    },
    "release_url": "https://pypi.org/project/pysql-manager/0.0.1.2/",
    "requires_dist": [
      "mysql-connector-python",
      "pandas",
      "numpy"
    ],
    "requires_python": "",
    "summary": "A python package for managing Mysql",
    "version": "0.0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16876198,
  "releases": {
    "0.0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8548a652b465c4eeb207e047367f9d3d13992740019aad57ff2cedc03218e80",
          "md5": "696f0635e2ae54d989718b331c20e0fe",
          "sha256": "aa59e9d370f003287dd8f279d3a904a0ededdd0a4a0142fe665654aac8332edf"
        },
        "downloads": -1,
        "filename": "pysql_manager-0.0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "696f0635e2ae54d989718b331c20e0fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5687,
        "upload_time": "2023-01-23T09:03:30",
        "upload_time_iso_8601": "2023-01-23T09:03:30.908142Z",
        "url": "https://files.pythonhosted.org/packages/a8/54/8a652b465c4eeb207e047367f9d3d13992740019aad57ff2cedc03218e80/pysql_manager-0.0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a181b3a87990b6618d4c12bafcfe0dd71411b38b33a0dd28284062035015b5a3",
          "md5": "d51c6bfd63e47331410de7e882665ec2",
          "sha256": "0517704de9b602ad432ffea152e250e43bf6a9a1e9cb7ca623357b0e91168cc4"
        },
        "downloads": -1,
        "filename": "pysql_manager-0.0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d51c6bfd63e47331410de7e882665ec2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5357,
        "upload_time": "2023-01-23T09:03:33",
        "upload_time_iso_8601": "2023-01-23T09:03:33.110229Z",
        "url": "https://files.pythonhosted.org/packages/a1/81/b3a87990b6618d4c12bafcfe0dd71411b38b33a0dd28284062035015b5a3/pysql_manager-0.0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "378fd02c7ca05dc38a3335c3973e8bd0cc07f787fc41670189b74fa75f9481e8",
          "md5": "72b634789f1262f7515d8cdfff9fe993",
          "sha256": "0c9a9cdba50c958365bbdb123b895bc969cf1ff7e753c75d24a9eb256df2d5b8"
        },
        "downloads": -1,
        "filename": "pysql_manager-0.0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72b634789f1262f7515d8cdfff9fe993",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7527,
        "upload_time": "2023-02-15T19:19:50",
        "upload_time_iso_8601": "2023-02-15T19:19:50.941290Z",
        "url": "https://files.pythonhosted.org/packages/37/8f/d02c7ca05dc38a3335c3973e8bd0cc07f787fc41670189b74fa75f9481e8/pysql_manager-0.0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "187ba25f60e6dee92b326428ad0b73805e823d76f14f7025eabf862107300b31",
          "md5": "d3570754653363d3f39ea0e9c9fc0889",
          "sha256": "e301a69be994551313a677d77a7142998fcd4c454999ad62067094d83090f51b"
        },
        "downloads": -1,
        "filename": "pysql_manager-0.0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d3570754653363d3f39ea0e9c9fc0889",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6899,
        "upload_time": "2023-02-15T19:19:52",
        "upload_time_iso_8601": "2023-02-15T19:19:52.592172Z",
        "url": "https://files.pythonhosted.org/packages/18/7b/a25f60e6dee92b326428ad0b73805e823d76f14f7025eabf862107300b31/pysql_manager-0.0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "378fd02c7ca05dc38a3335c3973e8bd0cc07f787fc41670189b74fa75f9481e8",
        "md5": "72b634789f1262f7515d8cdfff9fe993",
        "sha256": "0c9a9cdba50c958365bbdb123b895bc969cf1ff7e753c75d24a9eb256df2d5b8"
      },
      "downloads": -1,
      "filename": "pysql_manager-0.0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "72b634789f1262f7515d8cdfff9fe993",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7527,
      "upload_time": "2023-02-15T19:19:50",
      "upload_time_iso_8601": "2023-02-15T19:19:50.941290Z",
      "url": "https://files.pythonhosted.org/packages/37/8f/d02c7ca05dc38a3335c3973e8bd0cc07f787fc41670189b74fa75f9481e8/pysql_manager-0.0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "187ba25f60e6dee92b326428ad0b73805e823d76f14f7025eabf862107300b31",
        "md5": "d3570754653363d3f39ea0e9c9fc0889",
        "sha256": "e301a69be994551313a677d77a7142998fcd4c454999ad62067094d83090f51b"
      },
      "downloads": -1,
      "filename": "pysql_manager-0.0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d3570754653363d3f39ea0e9c9fc0889",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6899,
      "upload_time": "2023-02-15T19:19:52",
      "upload_time_iso_8601": "2023-02-15T19:19:52.592172Z",
      "url": "https://files.pythonhosted.org/packages/18/7b/a25f60e6dee92b326428ad0b73805e823d76f14f7025eabf862107300b31/pysql_manager-0.0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}