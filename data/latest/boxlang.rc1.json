{
  "info": {
    "author": "Pranav Srinivas Kumar",
    "author_email": "pranav.srinivas.kumar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\">\n  <img height=\"90\" src=\"https://user-images.githubusercontent.com/8450091/123720914-cb9a5200-d84a-11eb-97d9-830776297b87.PNG\"/>  \n</p>\n\n`Box` is a text-based visual programming language inspired by Unreal Engine blueprint function graphs.\n\n```console\n$ cat factorial.box\n\n ┌─ƒ(Factorial)───┐                     ┌─[Branch]─────┐                       ┌─[Set]─┐\n │               ►┼─────────────────────┼►       True ►┼───────────────────────┼►     ►┼─────────┐         ┌─[For Loop]───────────┐                   ┌───────┐\n │             n ○┼──┐               ┌──┼○      False ►┼──┐  ┌──────────┐  ┌───┼○      │         └─────────┼►          Loop body ►┼───────────────────┼►      │\n └────────────────┘  │    ┌────────┐ │  │              │  │  │  result ○┼──┘ ┌─┼○      │                   │                      │ ┌──────────┐ ┌────┼○  *=  │\n             ┌────┐  └────┼○  >=  ○┼─┘  └──────────────┘  │  └──────────┘    │ └───────┘         ┌────┐    │                      │ │  result ○┼─┘  ┌─┼○      │\n             │ 1 ○┼───────┼○       │                      │       ┌────┐     │                   │ 1 ○┼────┼○ start               │ └──────────┘    │ └───────┘\n             └────┘       └────────┘                      │       │ 1 ○┼─────┘                   └────┘    │                      │                 │\n                                                          │       └────┘                                   │               index ○┼─────────────────┘\n                                                          │                        ┌────┐                  │                      │\n                                                          │                        │ n ○┼─┐  ┌───────┐     │                      │\n                                                          │                        └────┘ └──┼○  +   │     │                      │\n                                                          │                        ┌────┐ ┌──┼○     ○┼─────┼○ end                 │\n                                                          │                        │ 1 ○┼─┘  └───────┘     │                      │\n                                                          │                        └────┘                  │                      │\n                                                          │                                      ┌────┐    │                      │\n                                                          │   ┌─[Return]─┐                       │ 1 ○┼────┼○ step                │\n                                                   ┌────┐ └───┼►         │                       └────┘    │           Completed ►┼────┐\n                                                   │ 1 ○┼─────┼○         │                                 └──────────────────────┘    │  ┌─[Return]─┐\n                                                   └────┘     └──────────┘                                               ┌─────────┐   └──┼►         │\n                                                                                                                         │ result ○┼──────┼○         │\n                                                                                                                         └─────────┘      └──────────┘\n\n$ box factorial.box -e 5\n120\n\n$ box factorial.box -e 5\n87178291200\n\n$ box factorial.box -o factorial.py\n\n$ cat factorial.py\ndef Factorial(n):\n    if (n >= 1):\n        result = 1\n        for index_8b6ee4f2 in range(1, (n + 1), 1):\n            result *= index_8b6ee4f2\n        return result\n    else:\n        return 1\n```\n\n### Getting Started\n\nInstall the box interpreter with `pip`\n\n```console\npip3 install boxlang\n```\n\nNow open your text editor and start drawing your program! Check out existing samples [here](https://github.com/p-ranav/box/tree/main/samples). \n\n### Anatomy of a Box\n\nA Box has 2 types of ports: control flow ports (`─►┼─`) and data flow ports (`─○┼─`). These ports can additionally be classified as input or output ports. All ports to the left side of a box are input ports and all ports on the right side of the box are output ports. \n\nBelow, you can see a `[For Loop]` box which is a special type of box that the interpreter can parse - It has 1 input control flow port, 3 input data flow ports (start, end, and step), 2 output control flow ports (the loop body and completed control flows), and 1 output data flow port (the index)\n\n![image](https://user-images.githubusercontent.com/8450091/124202730-a69f1c80-daa0-11eb-8cd8-55a8447dc224.png)\n\n### Function Graphs\n\n`Box` programs are function graphs. Functions have a single entry point designated by a node with the name of the Function containing a single output control flow port. \n\nHere's a simple hello world example. This example declares a `Greet()` function that prints the string \"Hello, World!\" to the console. It calls the built-in print function.\n\n![image](https://user-images.githubusercontent.com/8450091/124202751-b28ade80-daa0-11eb-8be6-6d5157eed822.png)\n\nExecute the above program with the box interpreter like so:\n\n```console\n$ box samples/hello_world.box -e\nHello,World!\n```\n\n### Features\n\n* ✅ Function declarations\n* ✅ Defining constants and variables\n* ✅ Operators - Unary, binary, and assignment operators\n* ✅ `[Set]` - set the value of variables\n* ✅ Function calls - Call Python built-in functions\n* ✅ `[Branch]` - if-else box\n* ✅ `[For Loop]` - Python-style for loop with (start,end,step)\n* ✅ `[While Loop]` - Python-style while loop\n* ✅ `[For Each]` for iterables\n* ✅ `[Break]` and `[Continue]` boxes\n* ✅ `[Return]` box to return values from functions\n\n### Gotchas\n\n* The interpreter will likely fail if you have tabs in your file - replace all tabs with the appropriate number of spaces\n* There are a number of UNICODE character you'll need for this to work - Just look through the samples and COPY-PASTE (no, seriously)\n\n## Contributing\nContributions are welcome, have a look at the [CONTRIBUTING.md](CONTRIBUTING.md) document for more information.\n\n## License\nThe project is available under the [MIT](https://opensource.org/licenses/MIT) license.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/p-ranav/box",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "boxlang",
    "package_url": "https://pypi.org/project/boxlang/",
    "platform": "",
    "project_url": "https://pypi.org/project/boxlang/",
    "project_urls": {
      "Bug Tracker": "https://github.com/p-ranav/box/issues",
      "Homepage": "https://github.com/p-ranav/box"
    },
    "release_url": "https://pypi.org/project/boxlang/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Box is a text-based visual programming language inspired by Unreal Engine blueprint function graphs.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10802281,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c58795387605561a6debc240b9360764bc874aca57a9d91b2a98b793094c1d72",
          "md5": "db5b29a35680619c444bf434e0f8c6c4",
          "sha256": "ae3fee9a9c2f2ef4f12fae8365b3e7aa641152b2e546c2942ef718cbf058e4f1"
        },
        "downloads": -1,
        "filename": "boxlang-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db5b29a35680619c444bf434e0f8c6c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 20958,
        "upload_time": "2021-07-02T00:33:21",
        "upload_time_iso_8601": "2021-07-02T00:33:21.709833Z",
        "url": "https://files.pythonhosted.org/packages/c5/87/95387605561a6debc240b9360764bc874aca57a9d91b2a98b793094c1d72/boxlang-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "704f77606973659dae669f0b81c8d4eaa5b729a3fd799f7df106850089af87e5",
          "md5": "807137bd330d0a18faf900d428d56241",
          "sha256": "f0afd1b3c9d766f9f03191e131ab153aa0e5fee035a7f3a09dbf58df4e1a0682"
        },
        "downloads": -1,
        "filename": "boxlang-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "807137bd330d0a18faf900d428d56241",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 19461,
        "upload_time": "2021-07-02T00:33:23",
        "upload_time_iso_8601": "2021-07-02T00:33:23.473293Z",
        "url": "https://files.pythonhosted.org/packages/70/4f/77606973659dae669f0b81c8d4eaa5b729a3fd799f7df106850089af87e5/boxlang-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c58795387605561a6debc240b9360764bc874aca57a9d91b2a98b793094c1d72",
        "md5": "db5b29a35680619c444bf434e0f8c6c4",
        "sha256": "ae3fee9a9c2f2ef4f12fae8365b3e7aa641152b2e546c2942ef718cbf058e4f1"
      },
      "downloads": -1,
      "filename": "boxlang-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db5b29a35680619c444bf434e0f8c6c4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 20958,
      "upload_time": "2021-07-02T00:33:21",
      "upload_time_iso_8601": "2021-07-02T00:33:21.709833Z",
      "url": "https://files.pythonhosted.org/packages/c5/87/95387605561a6debc240b9360764bc874aca57a9d91b2a98b793094c1d72/boxlang-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "704f77606973659dae669f0b81c8d4eaa5b729a3fd799f7df106850089af87e5",
        "md5": "807137bd330d0a18faf900d428d56241",
        "sha256": "f0afd1b3c9d766f9f03191e131ab153aa0e5fee035a7f3a09dbf58df4e1a0682"
      },
      "downloads": -1,
      "filename": "boxlang-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "807137bd330d0a18faf900d428d56241",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 19461,
      "upload_time": "2021-07-02T00:33:23",
      "upload_time_iso_8601": "2021-07-02T00:33:23.473293Z",
      "url": "https://files.pythonhosted.org/packages/70/4f/77606973659dae669f0b81c8d4eaa5b729a3fd799f7df106850089af87e5/boxlang-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}