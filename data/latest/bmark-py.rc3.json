{
  "info": {
    "author": "Håkon Magne Holmen",
    "author_email": "haakonholmen@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Bmark\n\nPython benchmarking tool.\n\nIt's mostly used for benchmarking [FeatherStore](https://github.com/hakonmh/featherstore),\nbut can be used to benchmark any Python code.\n\n## Installation\n\nBmark is available on [PyPI](https://pypi.org/project/bmark-py/):\n\n```console\npython -m pip install bmark-py\n```\n\n## Basic usage\n\nFirst let's setup a class to be benchmarked, all methods except `run()` are\noptional.\n\n```python\nimport os\nimport bmark\nimport pandas as pd\n\nread_bench = bmark.Benchmark()\n\n@read_bench()  # Remember the parantheses\nclass read_csv(bmark.Benched):\n\n    def __init__(self, shape, engine):\n        self.name = f'pd.read_csv(engine={engine})'\n        self.rows, self.cols = shape\n        self._path = '_benchmarks'\n        self.file_path = os.path.join(self._path, 'table.csv')\n        self.engine = engine\n        super().__init__()\n\n    def run(self):\n        \"\"\"Code to be benchmarked\"\"\"\n        pd.read_csv(self.file_path, engine=self.engine)\n\n    def setup(self):\n        \"\"\"Setup for the entire duration of the timer\"\"\"\n        data = {f'c{i}': range(self.rows) for i in range(self.cols)}\n        self.df = pd.DataFrame(data)\n        if not os.path.exists(self._path):\n            os.makedirs(self._path)\n\n    def teardown(self):\n        \"\"\"Final teardown after all the timings are done\"\"\"\n        os.rmdir(self._path)\n\n    def __enter__(self):\n        \"\"\"Called before each loop in the timer\"\"\"\n        self.df.to_csv(self.file_path)\n        return self  # Important\n\n    def __exit__(self, *args):\n        \"\"\"Called after each loop in the timer\"\"\"\n        os.remove(self.file_path)\n```\n\nWe initialize a benchmark with `bmark.Benchmark()`. We can the register classes\nto be benchmarked by using the `Benchmark` object as a decorator (as show above).\n\nEach time we initialize a registered class it'll get added as an item to be\nbenchmarked:\n\n```python\nshape = (100_000, 10)\nread_csv(shape, engine='c')\nread_csv(shape, engine='python')\nread_csv(shape, engine='pyarrow')\n\nheader = f'Read CSV benchmark {shape}'\nread_bench.run(header, r=5, n=5, sort=True)\n\n>>                 Read CSV benchmark (100000, 10)\n Name                        │ Hits │    Best │   Worst │ Comparison\n─────────────────────────────┼──────┼─────────┼─────────┼────────────\n pd.read_csv(engine=pyarrow) │   25 │ 16.2 ms │ 20.5 ms │      1.00x\n pd.read_csv(engine=c)       │   25 │ 74.2 ms │  106 ms │      4.58x\n pd.read_csv(engine=python)  │   25 │  803 ms │  862 ms │     49.54x\n\nRuntimes: total 46.5 s, benchmark 23.4 s, other 23.2 s\n```\n\nWe can also populate benchmarks by passing all the objects we want benchmarked\nin a list directly into the `bmark.Benchmark` constructor:\n\n```python\nshape = (500_000, 20)\nitems = (\n    read_csv(shape, engine='c'),\n    read_csv(shape, engine='python'),\n    read_csv(shape, engine='pyarrow')\n)\nheader = f'Read CSV benchmark {shape}'\nbmark.Benchmark(items).run(header, r=1, n=5, sort=True)\n\n>>           Read CSV benchmark (500000, 20)\n Name                        │ Hits │   Time │ Comparison\n─────────────────────────────┼──────┼────────┼────────────\n pd.read_csv(engine=pyarrow) │    5 │ 112 ms │      1.00x\n pd.read_csv(engine=c)       │    5 │ 655 ms │      5.85x\n pd.read_csv(engine=python)  │    5 │ 7.49 s │     66.98x\n\nRuntimes: total 1min 21s, benchmark 41.3 s, other 40.2 s\n```\n\nFor a more in-depth example, see the FeatherStore\n[benchmarking suite](https://github.com/hakonmh/featherstore/tree/master/benchmarks).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hakonmh/bmark",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bmark-py",
    "package_url": "https://pypi.org/project/bmark-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/bmark-py/",
    "project_urls": {
      "Homepage": "https://github.com/hakonmh/bmark"
    },
    "release_url": "https://pypi.org/project/bmark-py/0.0.4/",
    "requires_dist": [
      "pandas",
      "ipython",
      "prettytable (>=3.5.0)",
      "bokeh (>=3.0.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Benchmarking tool",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15745236,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d1d59bb11487506e2f42dd5402637fb2c21d92c71657db87e6b3b8faae535be",
          "md5": "5deec263fb845a49520ea7ae706e0917",
          "sha256": "3b643ac07a6a68dd69f2cd88f3be6a1815e561cf12da2b07be3e72ef3558c40c"
        },
        "downloads": -1,
        "filename": "bmark_py-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5deec263fb845a49520ea7ae706e0917",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7115,
        "upload_time": "2022-11-09T23:08:47",
        "upload_time_iso_8601": "2022-11-09T23:08:47.740040Z",
        "url": "https://files.pythonhosted.org/packages/0d/1d/59bb11487506e2f42dd5402637fb2c21d92c71657db87e6b3b8faae535be/bmark_py-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d4ecabf49ce0b0cee23dc86a771dfe90721793e5e27391dab262dbe10877368",
          "md5": "82dce8b54aa4b25b513eabcfe43923c5",
          "sha256": "41e1f453a7d822c2c18ad7857edaf5d9c5a10e713f2e6de8c5470c3916e8f64a"
        },
        "downloads": -1,
        "filename": "bmark_py-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "82dce8b54aa4b25b513eabcfe43923c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9242,
        "upload_time": "2022-11-12T14:23:44",
        "upload_time_iso_8601": "2022-11-12T14:23:44.749774Z",
        "url": "https://files.pythonhosted.org/packages/2d/4e/cabf49ce0b0cee23dc86a771dfe90721793e5e27391dab262dbe10877368/bmark_py-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99db35ce881028eb3dffc6058c310e844f078d85e3afe14edba27ae9af67b0df",
          "md5": "7fc7247fc263202cd0dd2ce22f39c8f7",
          "sha256": "7aad57fefa5e165caf802824fdde1cd45bd340408f00226b0cef397ca16c5079"
        },
        "downloads": -1,
        "filename": "bmark_py-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7fc7247fc263202cd0dd2ce22f39c8f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9242,
        "upload_time": "2022-11-12T14:37:36",
        "upload_time_iso_8601": "2022-11-12T14:37:36.479660Z",
        "url": "https://files.pythonhosted.org/packages/99/db/35ce881028eb3dffc6058c310e844f078d85e3afe14edba27ae9af67b0df/bmark_py-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99db35ce881028eb3dffc6058c310e844f078d85e3afe14edba27ae9af67b0df",
        "md5": "7fc7247fc263202cd0dd2ce22f39c8f7",
        "sha256": "7aad57fefa5e165caf802824fdde1cd45bd340408f00226b0cef397ca16c5079"
      },
      "downloads": -1,
      "filename": "bmark_py-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7fc7247fc263202cd0dd2ce22f39c8f7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 9242,
      "upload_time": "2022-11-12T14:37:36",
      "upload_time_iso_8601": "2022-11-12T14:37:36.479660Z",
      "url": "https://files.pythonhosted.org/packages/99/db/35ce881028eb3dffc6058c310e844f078d85e3afe14edba27ae9af67b0df/bmark_py-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}