{
  "info": {
    "author": "Nathan A. Rooy",
    "author_email": "nathanrooy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\"><img src=\"https://raw.githubusercontent.com/nathanrooy/p-area/main/logo/logo.png\" width=\"50%\"></p>\n\n[![gh-actions-ci](https://img.shields.io/github/workflow/status/nathanrooy/p-area/ci?style=flat-square)](https://github.com/nathanrooy/p-area/actions?query=workflow%3Aci)\n[![GitHub license](https://img.shields.io/github/license/nathanrooy/p-area?style=flat-square)](https://github.com/nathanrooy/p-area/blob/master/LICENSE)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/parea.svg?style=flat-square)](https://pypi.org/pypi/parea/)\n[![PyPi Version](https://img.shields.io/pypi/v/parea.svg?style=flat-square)](https://pypi.org/project/parea)\n\nMost <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Lift_coefficient\">lift</a> and <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Drag_coefficient\">drag</a> calculations require the use of a frontal/projected area. This is normally not that big of a deal, especially when dealing with nice clean CAD files. Unfortunately, in fast-paced design environments (motorsport especially), you'll often get a collection of <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/STL_(file_format)\">STL</a> geometry files instead. This is annoying for a number of reasons, but mainly because there are several methods for computing the frontal area of an STL and all of them involve a fairly tedious/lengthy process. pArea aims to solve this with a single command.\n\n\n### Installation\n```\npip install parea\n```\n\n### Usage\nAs a simple example, the <a target=\"_blank\" href=\"https://github.com/nathanrooy/p-area/blob/main/tests/data/cube_ascii.stl\">cube</a> STL located within the `tests` directory has a projected area of 4.0 along all three coordinate axes. To validate this, simply run the following (assuming you've downloaded cube_ascii.stl into your current working directory):\n\n```\nparea -stl cube_ascii.stl -x\n```\n\nFor models comprised of multiple STL files, simply separate the file names with a space:\n\n```\nparea -stl file_1.stl file_2.stl file_3.stl -x\n```\n\nOr use shell-style wildcards:\n\n```\nparea -stl file_*.stl  -x\n```\n\nWhen simulating ground vehicles with non-rigid wheels, you will need to account for the tire deformation and subsequent ride height drop. This can be facilitated using the `-floor` flag followed by a floor height float value. Note that floor height is in reference to the vertical axis of the specified projection plane.\n\n```\nparea -stl file_*.stl  -x -floor 0.0125\n```\nSince the projection vector is `x`, our projection plane is therefore `yz` yielding a projected area based off all geometry above z=0.0125.\n\n### Options\nvectors: `-x`, `-y`, `-z`\n\nplanes: `-yz`/`-zy`, `-xz`/`-zx`, `-xy`/`-yx`\n\n### References\n- Computational Geometry: Algorithms and Applications (3rd Edition) by Mike de Borg, Otfried Cheong, Mark van Kreveld, and Mark Overmars\n- Computational Geometry in C (2nd Edition) by Joseph O'Rourke\n- Finite Element Mesh Generation by Daniel S.H. Lo\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nathanrooy/p-area",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parea",
    "package_url": "https://pypi.org/project/parea/",
    "platform": "",
    "project_url": "https://pypi.org/project/parea/",
    "project_urls": {
      "Homepage": "https://github.com/nathanrooy/p-area"
    },
    "release_url": "https://pypi.org/project/parea/0.1.1/",
    "requires_dist": [
      "shapely",
      "numpy"
    ],
    "requires_python": ">=3.5",
    "summary": "The easiest way to calculate the projected/frontal area of an STL.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8927365,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc734cbc12dd48089725113ba9a037ec57de4d3240dd2fe6d5aae5019b75af1f",
          "md5": "ba95da28749c7505da4a44a0a8f78b01",
          "sha256": "2306a88fc4a3e16d285f74814d1a1d40181f4680c3521ddf9a709d6ddfa40ba9"
        },
        "downloads": -1,
        "filename": "parea-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba95da28749c7505da4a44a0a8f78b01",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 5487,
        "upload_time": "2020-12-09T03:34:10",
        "upload_time_iso_8601": "2020-12-09T03:34:10.719831Z",
        "url": "https://files.pythonhosted.org/packages/dc/73/4cbc12dd48089725113ba9a037ec57de4d3240dd2fe6d5aae5019b75af1f/parea-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b755fc4d3bc1f7f82a838939cd74a0a94abbb50cf788fe7ebbb8a6df5699d1be",
          "md5": "14a620310ae40874a2aefe1e2fb91bd4",
          "sha256": "77958f825047d5ace588ae957fe188740b5979a828854af516681e739fc88044"
        },
        "downloads": -1,
        "filename": "parea-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14a620310ae40874a2aefe1e2fb91bd4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 4330,
        "upload_time": "2020-12-09T03:34:11",
        "upload_time_iso_8601": "2020-12-09T03:34:11.817946Z",
        "url": "https://files.pythonhosted.org/packages/b7/55/fc4d3bc1f7f82a838939cd74a0a94abbb50cf788fe7ebbb8a6df5699d1be/parea-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7db9b4169be6809819fada2ed66715f28000eef722de6168a31ee4c9c47ced47",
          "md5": "1a7625a276e69d3b8fd0a2f077cd0a8e",
          "sha256": "b8759fd5e599237ae89bb480ff67bc9b64f466d08621873ab329652fb0e7596c"
        },
        "downloads": -1,
        "filename": "parea-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a7625a276e69d3b8fd0a2f077cd0a8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6346,
        "upload_time": "2020-12-17T21:44:09",
        "upload_time_iso_8601": "2020-12-17T21:44:09.226814Z",
        "url": "https://files.pythonhosted.org/packages/7d/b9/b4169be6809819fada2ed66715f28000eef722de6168a31ee4c9c47ced47/parea-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ae16ab2efe9d75ec5c1bc1b60ca1c29d020f6e67417d9559947a259302b5283",
          "md5": "ce20155c303d6d356daa7c620fe1cba5",
          "sha256": "6439e804b31a5bf6a4ae7bd51aecd2293b1a466b857b632b368326e568322426"
        },
        "downloads": -1,
        "filename": "parea-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ce20155c303d6d356daa7c620fe1cba5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 5165,
        "upload_time": "2020-12-17T21:44:09",
        "upload_time_iso_8601": "2020-12-17T21:44:09.983587Z",
        "url": "https://files.pythonhosted.org/packages/7a/e1/6ab2efe9d75ec5c1bc1b60ca1c29d020f6e67417d9559947a259302b5283/parea-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7db9b4169be6809819fada2ed66715f28000eef722de6168a31ee4c9c47ced47",
        "md5": "1a7625a276e69d3b8fd0a2f077cd0a8e",
        "sha256": "b8759fd5e599237ae89bb480ff67bc9b64f466d08621873ab329652fb0e7596c"
      },
      "downloads": -1,
      "filename": "parea-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1a7625a276e69d3b8fd0a2f077cd0a8e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 6346,
      "upload_time": "2020-12-17T21:44:09",
      "upload_time_iso_8601": "2020-12-17T21:44:09.226814Z",
      "url": "https://files.pythonhosted.org/packages/7d/b9/b4169be6809819fada2ed66715f28000eef722de6168a31ee4c9c47ced47/parea-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ae16ab2efe9d75ec5c1bc1b60ca1c29d020f6e67417d9559947a259302b5283",
        "md5": "ce20155c303d6d356daa7c620fe1cba5",
        "sha256": "6439e804b31a5bf6a4ae7bd51aecd2293b1a466b857b632b368326e568322426"
      },
      "downloads": -1,
      "filename": "parea-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ce20155c303d6d356daa7c620fe1cba5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 5165,
      "upload_time": "2020-12-17T21:44:09",
      "upload_time_iso_8601": "2020-12-17T21:44:09.983587Z",
      "url": "https://files.pythonhosted.org/packages/7a/e1/6ab2efe9d75ec5c1bc1b60ca1c29d020f6e67417d9559947a259302b5283/parea-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}