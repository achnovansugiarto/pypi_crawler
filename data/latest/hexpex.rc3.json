{
  "info": {
    "author": "solbero",
    "author_email": "njord.solberg@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<!-- PROJECT TITLE -->\n<h1 align=\"center\">Hexpex</h1>\n\n<!-- PROJECT BLURB -->\n<p align=\"center\">\n  <em>A type-hinted, object-oriented Python implementation for working with hex grids</em>\n</p>\n\n<!-- PROJECT SHIELDS -->\n<div align=\"center\">\n  <a href=\"https://github.com/solbero/hexpex/actions/workflows/build.yaml/\" target=\"_blank\">\n    <img src=\"https://img.shields.io/github/actions/workflow/status/solbero/hexpex/build.yaml?branch=main&label=build\" alt=\"Build action\">\n  </a>\n  <a href=\"https://github.com/solbero/hexpex/actions/workflows/publish.yaml/\" target=\"_blank\">\n    <img src=\"https://img.shields.io/github/actions/workflow/status/solbero/hexpex/publish.yaml?branch=main&label=publish\" alt=\"Publish action\">\n  </a>\n  <a href=\"https://app.codecov.io/gh/solbero/hexpex\" target=\"_blank\">\n    <img src=\"https://img.shields.io/codecov/c/github/solbero/hexpex\" alt=\"Code coverage\">\n  </a>\n  <a href=\"https://pypi.org/project/hexpex/\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/v/hexpex\" alt=\"Package version\">\n  </a>\n  <a href=\"https://pypi.org/project/hexpex/\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/pyversions/hexpex\" alt=\"Supported Python versions\">\n  </a>\n  <a href=\"https://github.com/solbero/hexpex/blob/master/LICENSE.txt\" target=\"_blank\">\n    <img src=\"https://img.shields.io/github/license/solbero/hexpex\" alt=\"License\">\n  </a>\n</div>\n\n<!-- ABOUT THE PROJECT -->\n## About the Project\n\nThis is a type-hinted, object-oriented implementation in Python of [hexagonal grids](https://www.redblobgames.com/grids/hexagons/) as described on [Red Blob Games](https://www.redblobgames.com/).\nThis package allows you to easily work with hexagonal grids in Python.\nAll of its classes, attributes and methods are type-hinted which allows your editor to autocomplete signatures and catch bugs and mistakes early.\n\n<!-- PREREQUISITES -->\n## Prerequisites\n\nBecause this package uses type hints, keyword-only and positional-only arguments you must have Python 3.9 or greater installed.\n\n<!-- INSTALLATION -->\n\n## Installation\n\n### Using PIP\n\n   ```sh\n   pip install hexpex\n   ```\n\n### Using Poetry\n\n   ```sh\n   poetry add hexpex\n   ```\n\n### Manually (for testing or development)\n\n  ```sh\n  git clone https://github.com/solbero/hexpex.git\n  cd hexpex\n  poetry install\n  ```\n\n<!-- USAGE EXAMPLES -->\n## Usage\n\n### Classes\n\nHexpex provides classes for working with hexagonal grids in both the cube and axial coordinate systems.\nFor more information about the difference between these two coordinate systems see the writeup on [Red Blob Games](https://www.redblobgames.com/grids/hexagons/#coordinates).\n\n```python\nfrom hexpex import Axial, Cube\n\nCube(q=1, r=0, s=-1)\nAxial(q=1, r=0)\n```\n\n### Object Methods\n\n<dl>\n  <dt><code>adjacent()</code></dt>\n  <dd>Returns the hex coordinate in adjacent direction from self</dd>\n\n  <dt><code>diagonal()</code></dt>\n  <dd>Returns the hex coordinate in diagonal direction from self</dd>\n\n  <dt><code>distance()</code></dt>\n  <dd>Returns the distance between passed hex coordinate and self</dd>\n\n  <dt><code>range()</code></dt>\n  <dd>Returns a set of hex coordinates within passed distance of self</dd>\n\n  <dt><code>ring()</code></dt>\n  <dd>Returns a set of hex coordinates on a ring passed distance from self</dd>\n\n  <dt><code>rotation()</code></dt>\n  <dd>Returns a set of rotated hex coordinates rotated around self</dd>\n\n  <dt><code>spiral()</code></dt>\n  <dd>Yields hex positions in a spiral from self out to passed distance from self</dd>\n</dl>\n\n### Operations\n\nObjects can be added or subtracted from each other, and multiplied or divided by integers.\n\n```python\nfrom hexpex import Axial, Cube\n\ncube_1 = Cube(q=2, r=0, s=-2)\ncube_2 = Cube(q=-1, r=0, s=1)\n\ncube_1 + cube_2\n#> Cube(1, 0, -1)\ncube_1 - cube_2\n#> Cube(3, 0, -3)\ncube_1 * 2\n#> Cube(4, 0, -4)\ncube_1 // 2\n#> Cube(1, 0, -1)\n\naxial_1 = Axial(q=2, r=0)\naxial_2 = Axial(q=-1, r=0)\n\naxial_1 + axial_2\n#> Axial(1, 0)\naxial_1 - axial_2\n#> Axial(3, 0)\naxial_1 * 2\n#> Axial(4, 0)\naxial_1 // 2\n#> Axial(1, 0)\n\n```\n\n### Direction Vectors\n\nHexpex provides some helper enums for giving direction vectors to the methods `adjacent()`, `diagonal()` and `spiral()`.\nTo use them import the enums for your coordinate system and hex orientation (pointy or flat).\nFor more information on the difference between the two hex orientations see [Red Blob Games](https://www.redblobgames.com/grids/hexagons/#basics).\n\n```python\nfrom hexpex import Cube, CubeFlatAdjacentDirection as AdjacentDirection, CubeFlatDiagonalDirection as DiagonalDirection\n\ncube = Cube(0, 0, 0)\n\ncube.adjacent(AdjacentDirection.SE)\n#> Cube(1, 0, -1)\ncube.diagonal(DiagonalDirection.E)\n#> Cube(2, -1, -1)\n```\n\n### Conversion\n\nA cube object can be converted to an axial object using the `to_axial()` method.\nThe reverse is true for an axial object using the `to_cube()` method.\n\nBoth representations can also be converted to a tuple using the `to_tuple()` method and to a dict using the `to_dict()`method.\n\n```python\n\nfrom hexpex import Axial, Cube\n\ncube = Cube(1, 0, -1)\naxial = Axial(1, 0)\n\ncube.to_axial()\n#> Axial(1, 0)\naxial.to_cube()\n#> Cube(1, 0, -1)\n\ncube.to_tuple()\n#> (1, 0, -1)\naxial.to_tuple()\n#> (1, 0)\n\ncube.to_dict()\n#> {\"q\": 1, \"r\": 0, \"s\": -1}\naxial.to_dict()\n#> {\"q\": 1, \"r\": 0}\n```\n\n<!-- ROADMAP -->\n## Roadmap\n\n### Coordinate systems\n\n* [x] Cube coordinates\n* [x] Axial coordinates\n* [ ] Double offset coordinates\n\n### Methods\n\n* [x] Distances\n* [x] Neighbors\n* [x] Range\n* [x] Rings\n* [x] Rotation\n* [x] Spiral\n* [ ] Line drawing\n* [ ] Reflection\n* [ ] Rounding\n* [ ] Hex to pixel\n* [ ] Pixel to hex\n\nSee the [open issues](https://github.com/solbero/hexpex/issues) for a full list of proposed features (and known issues).\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nIf you have a suggestion that would make this project better, please [fork the repo](https://github.com/solbero/hexpex/fork) and create a pull request.\nYou can also simply [open an issue](https://github.com/solbero/hexpex/issues/new/choose) with the label \"enhancement\".\n\n1. Fork the project\n2. Create your feature branch\n\n  ```sh\n  git checkout -b feature/AmazingFeature\n  ```\n\n3. Commit your changes\n\n  ```sh\n  git commit -m 'Add some AmazingFeature'\n  ```\n\n4. Push to the branch\n\n```sh\ngit push origin feature/AmazingFeature\n```\n\n5. Open a pull request\n\n<!-- LICENSE -->\n## License\n\nDistributed under the GPLv3 License.\nSee [`LICENSE.txt`](https://github.com/solbero/hexpex/blob/master/LICENSE.txt) for more information.\n\n<!-- CONTACT -->\n## Contact\n\n* Email: [njord.solberg@gmail.com](mailto:njord.solberg@gmail.com)\n\n<!-- PROJECT LINKS -->\n## Project Links\n\n* Github: [https://github.com/solbero/hexpex](https://github.com/solbero/hexpex)\n* PyPI: [https://pypi.org/project/hexpex/](https://pypi.org/project/hexpex/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/solbero/hexpex",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hexpex",
    "package_url": "https://pypi.org/project/hexpex/",
    "platform": null,
    "project_url": "https://pypi.org/project/hexpex/",
    "project_urls": {
      "Homepage": "https://github.com/solbero/hexpex",
      "Repository": "https://github.com/solbero/hexpex"
    },
    "release_url": "https://pypi.org/project/hexpex/0.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.9,<4.0",
    "summary": "A type-hinted, object-oriented Python implementation for working with hex grids",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16151278,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1697332c70f77565c022a3412f8838b3ba3b5602a129f54d04a8ccd228ddeca3",
          "md5": "98b5e21fd173d3aede9448e3ba0cf67d",
          "sha256": "45596db795c982df46cacfc7b5850a01d9a15451cdae98040e8d15c578d05026"
        },
        "downloads": -1,
        "filename": "hexpex-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98b5e21fd173d3aede9448e3ba0cf67d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 18609,
        "upload_time": "2022-08-02T17:32:30",
        "upload_time_iso_8601": "2022-08-02T17:32:30.037332Z",
        "url": "https://files.pythonhosted.org/packages/16/97/332c70f77565c022a3412f8838b3ba3b5602a129f54d04a8ccd228ddeca3/hexpex-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73618f51288139082146edf76fdec1d3390141f90f98fc370e711573f25b237d",
          "md5": "7ce5721015dc2832b0e18508352443d0",
          "sha256": "5e2f5743d9b57da0d20aa6b530321621084fc8739f6f8213a905bd67f103c470"
        },
        "downloads": -1,
        "filename": "hexpex-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7ce5721015dc2832b0e18508352443d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 20028,
        "upload_time": "2022-08-02T17:32:31",
        "upload_time_iso_8601": "2022-08-02T17:32:31.660965Z",
        "url": "https://files.pythonhosted.org/packages/73/61/8f51288139082146edf76fdec1d3390141f90f98fc370e711573f25b237d/hexpex-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ac6b1a93e298e8cfcdc1f3ec5d20c4ddd82f030a4349984f89aad7646e3dcc9",
          "md5": "9dd89114fd65196e8023feb6f6a3bd77",
          "sha256": "3be474c715dd8763679a3e90b2456fb7dd3ed689350cb5417584de368faa9a13"
        },
        "downloads": -1,
        "filename": "hexpex-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dd89114fd65196e8023feb6f6a3bd77",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 18632,
        "upload_time": "2022-08-12T10:12:07",
        "upload_time_iso_8601": "2022-08-12T10:12:07.082970Z",
        "url": "https://files.pythonhosted.org/packages/7a/c6/b1a93e298e8cfcdc1f3ec5d20c4ddd82f030a4349984f89aad7646e3dcc9/hexpex-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42a357cefc2b41251bef16f822d0470a443ea1b5b29cde1e655b80d15f3f6cb6",
          "md5": "e47810e425d6ce00da3f721fc566713e",
          "sha256": "ab88d8373c9b68d481f456169d98f57774cf87f6aecd43d96443718ee1307d40"
        },
        "downloads": -1,
        "filename": "hexpex-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e47810e425d6ce00da3f721fc566713e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 20096,
        "upload_time": "2022-08-12T10:12:08",
        "upload_time_iso_8601": "2022-08-12T10:12:08.655691Z",
        "url": "https://files.pythonhosted.org/packages/42/a3/57cefc2b41251bef16f822d0470a443ea1b5b29cde1e655b80d15f3f6cb6/hexpex-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a549f2ae0eb0227866e25004f76dd0486b27134c036f4f5b8e067d6ec9408417",
          "md5": "27347c3dc3c59dcef9eef9e06450e808",
          "sha256": "86fc80b9ac8b549c78257c9c0e902f4ccac0acb7e6e1472ec065ff31e9b6a75e"
        },
        "downloads": -1,
        "filename": "hexpex-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27347c3dc3c59dcef9eef9e06450e808",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 18505,
        "upload_time": "2022-12-19T14:48:03",
        "upload_time_iso_8601": "2022-12-19T14:48:03.070790Z",
        "url": "https://files.pythonhosted.org/packages/a5/49/f2ae0eb0227866e25004f76dd0486b27134c036f4f5b8e067d6ec9408417/hexpex-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90410d87b24815d5b4ee003ea049d0eef236f190f0693cb3c0bbf188da8fa56e",
          "md5": "0fe0607c13a0d3383afe3e7da7c9cc76",
          "sha256": "4a5ebd002d2b0fc381c84b13139bee4066d12ccd75a1c27a270b3d97fe9251a2"
        },
        "downloads": -1,
        "filename": "hexpex-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0fe0607c13a0d3383afe3e7da7c9cc76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 19797,
        "upload_time": "2022-12-19T14:48:04",
        "upload_time_iso_8601": "2022-12-19T14:48:04.465168Z",
        "url": "https://files.pythonhosted.org/packages/90/41/0d87b24815d5b4ee003ea049d0eef236f190f0693cb3c0bbf188da8fa56e/hexpex-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a549f2ae0eb0227866e25004f76dd0486b27134c036f4f5b8e067d6ec9408417",
        "md5": "27347c3dc3c59dcef9eef9e06450e808",
        "sha256": "86fc80b9ac8b549c78257c9c0e902f4ccac0acb7e6e1472ec065ff31e9b6a75e"
      },
      "downloads": -1,
      "filename": "hexpex-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "27347c3dc3c59dcef9eef9e06450e808",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 18505,
      "upload_time": "2022-12-19T14:48:03",
      "upload_time_iso_8601": "2022-12-19T14:48:03.070790Z",
      "url": "https://files.pythonhosted.org/packages/a5/49/f2ae0eb0227866e25004f76dd0486b27134c036f4f5b8e067d6ec9408417/hexpex-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "90410d87b24815d5b4ee003ea049d0eef236f190f0693cb3c0bbf188da8fa56e",
        "md5": "0fe0607c13a0d3383afe3e7da7c9cc76",
        "sha256": "4a5ebd002d2b0fc381c84b13139bee4066d12ccd75a1c27a270b3d97fe9251a2"
      },
      "downloads": -1,
      "filename": "hexpex-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0fe0607c13a0d3383afe3e7da7c9cc76",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 19797,
      "upload_time": "2022-12-19T14:48:04",
      "upload_time_iso_8601": "2022-12-19T14:48:04.465168Z",
      "url": "https://files.pythonhosted.org/packages/90/41/0d87b24815d5b4ee003ea049d0eef236f190f0693cb3c0bbf188da8fa56e/hexpex-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}