{
  "info": {
    "author": "Herv√© Saint-Amand",
    "author_email": "canif@saintamh.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development",
      "Topic :: Text Processing",
      "Topic :: Utilities"
    ],
    "description": "[![Build Status](https://travis-ci.org/saintamh/canif.svg?branch=master)](https://travis-ci.org/saintamh/canif)\n[![PyPI version](https://badge.fury.io/py/canif.svg)](https://pypi.org/project/canif/)\n\nParser and pretty-printer for JSON and JSON-ish data, on the command line or as a Python library.\n\n\nSynopsis\n========\n\nSuppose you have a JavaScript object literal:\n\n```console\n$ cat input.js\nsetConfig({editable: true, latlng: new LatLng(48.1434, 17.1082), last_modified: new Date(1995, 11, 17)})\n```\n\nor a Python `repr` expression:\n\n```console\n$ cat input.py\n{\"_id\": 73, \"occur\": OrderedDict([(\"doc1\", 10), (\"doc2\", 1)]), \"match\": <_sre.SRE_Match object at 0x7f2b9eaa5f80>}\n```\n\nor a MongoDB document:\n\n```console\n$ cat input.mongo\n{\"id\": ObjectId(\"507f191e810c19729de860ea\"), \"last_modified\": ISODate(\"2020-05-20T00:00:00Z\")}\n```\n\nYou can use the `canif` library to load up that data as Plain Old Data Structures:\n\n```python\n>>> with open('input.js', 'rt', encoding='UTF-8') as file_in:\n...    canif.load(file_in)\n{'$$setConfig': [{'editable': True, 'latlng': {'$$new LatLng': [48.1434, 17.1082]}, 'last_modified': {'$$new Date': [1995, 11, 17]}}]}\n```\n\n```python\n>>> with open('input.py', 'rt', encoding='UTF-8') as file_in:\n...    canif.load(file_in)\n{'_id': 73, 'occur': {'$$OrderedDict': [[('doc1', 10), ('doc2', 1)]]}, 'match': '$repr<_sre.SRE_Match object at 0x7f2b9eaa5f80>'}\n```\n\n```python\n>>> with open('input.mongo', 'rt', encoding='UTF-8') as file_in:\n...    canif.load(file_in)\n{'id': {'$oid': ['507f191e810c19729de860ea']}, 'last_modified': {'$$ISODate': ['2020-05-20T00:00:00Z']}}\n```\n\nThink of it as a version of `json.loads` that accepts a wider syntax. \n\nThis can be useful when writing Web scrapers, as it allows you to parse JavaScript data structures without having to use a\nJavaScript interpreter or a full-blown syntax parser.\n\n\nCommand line usage\n==================\n\nYou can also use the `canif` command-line tool to pretty-print JSON-ish data:\n\n```console\n$ canif < input.js\nsetConfig(\n    {\n        editable: true,\n        latlng: new LatLng(\n            48.1434,\n            17.1082,\n        ),\n        last_modified: new Date(\n            1995,\n            11,\n            17,\n        ),\n    },\n)\n```\n\n```console\n$ canif < input.py\n{\n    \"_id\": 73,\n    \"occur\": OrderedDict(\n        [\n            (\n                \"doc1\",\n                10,\n            ),\n            (\n                \"doc2\",\n                1,\n            ),\n        ],\n    ),\n    \"match\": <_sre.SRE_Match object at 0x7f2b9eaa5f80>,\n}\n```\n\n```console\n$ canif < input.mongo\n{\n    \"id\": ObjectId(\n        \"507f191e810c19729de860ea\",\n    ),\n    \"last_modified\": ISODate(\n        \"2020-05-20T00:00:00Z\",\n    ),\n}\n```\n\nThere's an option to convert the data to proper JSON:\n\n```console\n$ canif -j < input.js\n{\n    \"$$setConfig\": [\n        {\n            \"editable\": true,\n            \"latlng\": {\n                \"$$new LatLng\": [\n                    48.1434,\n                    17.1082\n                ]\n            },\n            \"last_modified\": {\n                \"$$new Date\": [\n                    1995,\n                    11,\n                    17\n                ]\n            }\n        }\n    ]\n}\n```\n\nThe program pretty-prints the data as it loads it, so it should be able to handle very large files.\n\nUse `--help` for a quick rundown of available options:\n\n```console\n$ canif --help\nusage: canif [-h] [-i N | -f] [-j] [-T] [--single-document]\n             [--ensure-ascii] [-I ENCODING] [-O ENCODING]\n\nPretty-print JSON and JSON-ish data\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i N, --indent N      Indent each level by N spaces (0 means flat,\n                        single-line output)\n  -f, --flatten         Flatten output (equivalent to -i 0)\n  -j, --json-output     Convert data to valid JSON if it wasn't\n                        already (e.g. None becomes null)\n  -T, --no-trailing-commas\n                        Don't insert trailing commas after the last\n                        item in a sequence. This is implied by\n                        --json-output.\n  --single-document     Check that the input consists of a single\n                        document, rather that the default of\n                        accepting a stream of documents\n  --ensure-ascii        Ensure JSON output is ASCII by using \\uXXXX\n                        sequences in place of non-ASCII characters\n  -I ENCODING, --input-encoding ENCODING\n                        Character set used for decoding the input\n                        (default: UTF-8)\n  -O ENCODING, --output-encoding ENCODING\n                        Character set used for encoding the output\n                        (default: UTF-8)\n```\n\n\nEmacs bindings\n==============\n\nIf you happen to use Emacs' `shell-mode`, this can be very useful to format the logs or output of any Python program.\n\nSee [canif.el](emacs/canif.el) for a simple function that you can bind to a keystroke and that will pretty-print the data structure\nat point.\n\n\nSupported formats\n=================\n\nCanif is for \"JSON and JSON-ish\" data. It can parse:\n\n* plain JSON\n* JavaScript object literals, including:\n  * unquoted keys\n  * trailing commas\n  * `//` comments\n  * empty array slots (e.g. `[1,,,4]`)\n* printed Python data structures, including\n  * sets: `{42}`\n  * tuples: `(\"one\", \"two\", \"three\")`\n  * `<repr>` representations \n* MongoDB BSON\n\nThe parsed data can be pretty-printed in a couple formats:\n\n* verbatim (i.e. only whitespace and commas are modified)\n* strict JSON\n\nThere are options to control the output, e.g. indent depth, trailing commas, etc.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/saintamh/canif/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "canif",
    "package_url": "https://pypi.org/project/canif/",
    "platform": "",
    "project_url": "https://pypi.org/project/canif/",
    "project_urls": {
      "Homepage": "https://github.com/saintamh/canif/"
    },
    "release_url": "https://pypi.org/project/canif/0.3.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Parser and pretty-printer for JSON and JSON-ish data",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7451209,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0b53962b0057b5c2bc59dafe905052eee2a0199d2b08aa9bcb267bbc7272705",
          "md5": "0a3c4ac9b5a5e0bf86e95d19a5c8b9b7",
          "sha256": "db7dccfb0760ace559eb63e47b919b6a55d48e5c00707f7da8e8907c0ad28de0"
        },
        "downloads": -1,
        "filename": "canif-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a3c4ac9b5a5e0bf86e95d19a5c8b9b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6136,
        "upload_time": "2020-05-08T17:55:34",
        "upload_time_iso_8601": "2020-05-08T17:55:34.728175Z",
        "url": "https://files.pythonhosted.org/packages/c0/b5/3962b0057b5c2bc59dafe905052eee2a0199d2b08aa9bcb267bbc7272705/canif-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03f74d97b720c2e3c68757d6fae57e0b4e61ab90049b2e93321747594eee7866",
          "md5": "c80673b0a011299694148fe4119f421c",
          "sha256": "0575287776b3a940f6b6bf6349f1fb6253c94d4851c8ffe99b177f3e55ceb2de"
        },
        "downloads": -1,
        "filename": "canif-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c80673b0a011299694148fe4119f421c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5299,
        "upload_time": "2020-05-08T17:55:36",
        "upload_time_iso_8601": "2020-05-08T17:55:36.871401Z",
        "url": "https://files.pythonhosted.org/packages/03/f7/4d97b720c2e3c68757d6fae57e0b4e61ab90049b2e93321747594eee7866/canif-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9a1a603c10e90c66f1e0155c1baf3671e5e299206076dc3f257d629fd6bd8ea",
          "md5": "5cdeadda178a3f22f5647a244b08c46f",
          "sha256": "35fbca02e66bc7c998015c4b44523ee524669d16fc2f587969d22e2034db7cd2"
        },
        "downloads": -1,
        "filename": "canif-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cdeadda178a3f22f5647a244b08c46f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11067,
        "upload_time": "2020-05-22T09:18:04",
        "upload_time_iso_8601": "2020-05-22T09:18:04.074727Z",
        "url": "https://files.pythonhosted.org/packages/c9/a1/a603c10e90c66f1e0155c1baf3671e5e299206076dc3f257d629fd6bd8ea/canif-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77ff8319db6b4e7d142a7ca002373e57fb5323bd894135b8bd6f67fe00a837a8",
          "md5": "487a759077a08a51a1f6c7e8252bfa08",
          "sha256": "9c8f5c98fddfe30c66807e48750ae222321dab102271710886f0b92dbbc9f2a4"
        },
        "downloads": -1,
        "filename": "canif-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "487a759077a08a51a1f6c7e8252bfa08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15245,
        "upload_time": "2020-05-22T09:18:05",
        "upload_time_iso_8601": "2020-05-22T09:18:05.287863Z",
        "url": "https://files.pythonhosted.org/packages/77/ff/8319db6b4e7d142a7ca002373e57fb5323bd894135b8bd6f67fe00a837a8/canif-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a6eefe284d43df138839ee827153895dc7899de811b6d1dffba1ca539b9b318",
          "md5": "f2521fd0d7bb5b77d701a30c88f9821e",
          "sha256": "f7b14119db1b029a8ed7ced7bf5443f7366f87a0b6b3a7b0e4559931f5acbf2f"
        },
        "downloads": -1,
        "filename": "canif-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2521fd0d7bb5b77d701a30c88f9821e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16892,
        "upload_time": "2020-06-02T22:13:13",
        "upload_time_iso_8601": "2020-06-02T22:13:13.999742Z",
        "url": "https://files.pythonhosted.org/packages/6a/6e/efe284d43df138839ee827153895dc7899de811b6d1dffba1ca539b9b318/canif-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f87d214587c433598d17eecdb04cf1004d03b64941689c43297e7bfca27f8ed7",
          "md5": "65c48a0a24764611c49d4d8562325832",
          "sha256": "c433542e7b4396a2949f239e46710d1c674c6878e0fa0d997e6323ac3a1ea899"
        },
        "downloads": -1,
        "filename": "canif-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "65c48a0a24764611c49d4d8562325832",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20613,
        "upload_time": "2020-06-02T22:13:15",
        "upload_time_iso_8601": "2020-06-02T22:13:15.811211Z",
        "url": "https://files.pythonhosted.org/packages/f8/7d/214587c433598d17eecdb04cf1004d03b64941689c43297e7bfca27f8ed7/canif-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7ef8d3f0939750ba83ce2062f0ad5a0961ccb69f778aee785be58e0ce1b0c2a",
          "md5": "130cd38dc329178c15f1531a096af9f8",
          "sha256": "737713eaae5e29136e03d8395132aea81e51b9773ac69a3006200abb1e08ae71"
        },
        "downloads": -1,
        "filename": "canif-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "130cd38dc329178c15f1531a096af9f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16969,
        "upload_time": "2020-06-11T09:55:43",
        "upload_time_iso_8601": "2020-06-11T09:55:43.960182Z",
        "url": "https://files.pythonhosted.org/packages/e7/ef/8d3f0939750ba83ce2062f0ad5a0961ccb69f778aee785be58e0ce1b0c2a/canif-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6a0beb0e17865f917cd8f2aad24f514be1fc0d460ccf30edd8fae7a78af9519",
          "md5": "a9b981d93f828fc0b7d63aa4aebe7721",
          "sha256": "6db69b8bcb40500eb515a896642a40d97729afb1c6bc71fbc3ce7c3a46a2c6f6"
        },
        "downloads": -1,
        "filename": "canif-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a9b981d93f828fc0b7d63aa4aebe7721",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19656,
        "upload_time": "2020-06-11T09:55:45",
        "upload_time_iso_8601": "2020-06-11T09:55:45.294420Z",
        "url": "https://files.pythonhosted.org/packages/a6/a0/beb0e17865f917cd8f2aad24f514be1fc0d460ccf30edd8fae7a78af9519/canif-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7ef8d3f0939750ba83ce2062f0ad5a0961ccb69f778aee785be58e0ce1b0c2a",
        "md5": "130cd38dc329178c15f1531a096af9f8",
        "sha256": "737713eaae5e29136e03d8395132aea81e51b9773ac69a3006200abb1e08ae71"
      },
      "downloads": -1,
      "filename": "canif-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "130cd38dc329178c15f1531a096af9f8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16969,
      "upload_time": "2020-06-11T09:55:43",
      "upload_time_iso_8601": "2020-06-11T09:55:43.960182Z",
      "url": "https://files.pythonhosted.org/packages/e7/ef/8d3f0939750ba83ce2062f0ad5a0961ccb69f778aee785be58e0ce1b0c2a/canif-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6a0beb0e17865f917cd8f2aad24f514be1fc0d460ccf30edd8fae7a78af9519",
        "md5": "a9b981d93f828fc0b7d63aa4aebe7721",
        "sha256": "6db69b8bcb40500eb515a896642a40d97729afb1c6bc71fbc3ce7c3a46a2c6f6"
      },
      "downloads": -1,
      "filename": "canif-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a9b981d93f828fc0b7d63aa4aebe7721",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19656,
      "upload_time": "2020-06-11T09:55:45",
      "upload_time_iso_8601": "2020-06-11T09:55:45.294420Z",
      "url": "https://files.pythonhosted.org/packages/a6/a0/beb0e17865f917cd8f2aad24f514be1fc0d460ccf30edd8fae7a78af9519/canif-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}