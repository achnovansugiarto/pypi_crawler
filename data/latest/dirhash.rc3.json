{
  "info": {
    "author": "Anders Huss",
    "author_email": "andhus@kth.se",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n[![Build Status](https://travis-ci.com/andhus/dirhash-python.svg?branch=master)](https://travis-ci.com/andhus/dirhash-python)\n[![codecov](https://codecov.io/gh/andhus/dirhash-python/branch/master/graph/badge.svg)](https://codecov.io/gh/andhus/dirhash-python)\n\n# dirhash\nA lightweight python module and CLI for computing the hash of any\ndirectory based on its files' structure and content.\n- Supports all hashing algorithms of Python's built-in `hashlib` module.\n- Glob/wildcard (\".gitignore style\") path matching for expressive filtering of files to include/exclude.\n- Multiprocessing for up to [6x speed-up](#performance)\n\nThe hash is computed according to the [Dirhash Standard](https://github.com/andhus/dirhash), which is designed to allow for consistent and collision resistant generation/verification of directory hashes across implementations.\n\n## Installation\nFrom PyPI:\n```commandline\npip install dirhash\n```\nOr directly from source:\n```commandline\ngit clone git@github.com:andhus/dirhash-python.git\npip install dirhash/\n```\n\n## Usage\nPython module:\n```python\nfrom dirhash import dirhash\n\ndirpath = \"path/to/directory\"\ndir_md5 = dirhash(dirpath, \"md5\")\npyfiles_md5 = dirhash(dirpath, \"md5\", match=[\"*.py\"])\nno_hidden_sha1 = dirhash(dirpath, \"sha1\", ignore=[\".*\", \".*/\"])\n```\nCLI:\n```commandline\ndirhash path/to/directory -a md5\ndirhash path/to/directory -a md5 --match \"*.py\"\ndirhash path/to/directory -a sha1 --ignore \".*\"  \".*/\"\n```\n\n## Why?\nIf you (or your application) need to verify the integrity of a set of files as well\nas their name and location, you might find this useful. Use-cases range from \nverification of your image classification dataset (before spending GPU-$$$ on \ntraining your fancy Deep Learning model) to validation of generated files in\nregression-testing.\n\nThere isn't really a standard way of doing this. There are plenty of recipes out \nthere (see e.g. these SO-questions for [linux](https://stackoverflow.com/questions/545387/linux-compute-a-single-hash-for-a-given-folder-contents)\nand [python](https://stackoverflow.com/questions/24937495/how-can-i-calculate-a-hash-for-a-filesystem-directory-using-python))\nbut I couldn't find one that is properly tested (there are some gotcha:s to cover!) \nand documented with a compelling user interface. `dirhash` was created with this as \nthe goal.\n\n[checksumdir](https://github.com/cakepietoast/checksumdir) is another python \nmodule/tool with similar intent (that inspired this project) but it lacks much of the\nfunctionality offered here (most notably including file names/structure in the hash)\nand lacks tests.\n\n## Performance\nThe python `hashlib` implementation of common hashing algorithms are highly\noptimised. `dirhash` mainly parses the file tree, pipes data to `hashlib` and \ncombines the output. Reasonable measures have been taken to minimize the overhead \nand for common use-cases, the majority of time is spent reading data from disk \nand executing `hashlib` code.\n\nThe main effort to boost performance is support for multiprocessing, where the\nreading and hashing is parallelized over individual files.\n\nAs a reference, let's compare the performance of the `dirhash` [CLI](https://github.com/andhus/dirhash-python/blob/master/src/dirhash/cli.py) \nwith the shell command:\n\n`find path/to/folder -type f -print0 | sort -z | xargs -0 md5 | md5` \n\nwhich is the top answer for the SO-question: \n[Linux: compute a single hash for a given folder & contents?](https://stackoverflow.com/questions/545387/linux-compute-a-single-hash-for-a-given-folder-contents)\nResults for two test cases are shown below. Both have 1 GiB of random data: in \n\"flat_1k_1MB\", split into 1k files (1 MiB each) in a flat structure, and in \n\"nested_32k_32kB\", into 32k files (32 KiB each) spread over the 256 leaf directories \nin a binary tree of depth 8.\n\nImplementation      | Test Case       | Time (s) | Speed up\n------------------- | --------------- | -------: | -------:\nshell reference     | flat_1k_1MB     | 2.29     | -> 1.0\n`dirhash`           | flat_1k_1MB     | 1.67     | 1.36\n`dirhash`(8 workers)| flat_1k_1MB     | 0.48     | **4.73**\nshell reference     | nested_32k_32kB | 6.82     | -> 1.0\n`dirhash`           | nested_32k_32kB | 3.43     | 2.00\n`dirhash`(8 workers)| nested_32k_32kB | 1.14     | **6.00**\n\nThe benchmark was run a MacBook Pro (2018), further details and source code [here](https://github.com/andhus/dirhash-python/tree/master/benchmark).\n\n## Documentation\nPlease refer to `dirhash -h`, the python [source code](https://github.com/andhus/dirhash-python/blob/master/src/dirhash/__init__.py) and the [Dirhash Standard](https://github.com/andhus/dirhash).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/andhus/dirhash-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dirhash",
    "package_url": "https://pypi.org/project/dirhash/",
    "platform": "",
    "project_url": "https://pypi.org/project/dirhash/",
    "project_urls": {
      "Homepage": "https://github.com/andhus/dirhash-python"
    },
    "release_url": "https://pypi.org/project/dirhash/0.2.1/",
    "requires_dist": [
      "scantree (>=0.0.1)"
    ],
    "requires_python": "",
    "summary": "Python module and CLI for hashing of file system directories.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8046286,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e37f7b41eb6b6c9695569bdeaff2bdeab3fa70b6df03f6b6ae016ca8c8370ee5",
          "md5": "f29a18f60abe9676db50ee87ea7f6159",
          "sha256": "dc88718f06dd7f6c3bb4fdfd1567ae161af152aecb0a74dae28fbfe726166ec3"
        },
        "downloads": -1,
        "filename": "dirhash-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f29a18f60abe9676db50ee87ea7f6159",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13390,
        "upload_time": "2019-02-15T06:25:21",
        "upload_time_iso_8601": "2019-02-15T06:25:21.935756Z",
        "url": "https://files.pythonhosted.org/packages/e3/7f/7b41eb6b6c9695569bdeaff2bdeab3fa70b6df03f6b6ae016ca8c8370ee5/dirhash-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0edf4d8e1d97100c625808505b130932de787d8269d94b5aa34a52f8c43fed0",
          "md5": "9c6846ded01bed1bcb9eefdf59c0465a",
          "sha256": "e06d1e5a3459fd32061339f33e32682eee9bcd49554afaa19436121efe738693"
        },
        "downloads": -1,
        "filename": "dirhash-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c6846ded01bed1bcb9eefdf59c0465a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12749,
        "upload_time": "2020-04-26T12:09:57",
        "upload_time_iso_8601": "2020-04-26T12:09:57.418027Z",
        "url": "https://files.pythonhosted.org/packages/e0/ed/f4d8e1d97100c625808505b130932de787d8269d94b5aa34a52f8c43fed0/dirhash-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8c10e4b7b7380a1bcb0597b0d9a9bbdc53f1c9ad1fe6b7c871ae5482600d264",
          "md5": "fbfee2d939edf0ad07735e7a36a87270",
          "sha256": "ec5129ee5d71ac6d605c29b17a8cc440ff7a7d569fb085e864ee427a422f4e9d"
        },
        "downloads": -1,
        "filename": "dirhash-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fbfee2d939edf0ad07735e7a36a87270",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13759,
        "upload_time": "2020-04-26T12:09:58",
        "upload_time_iso_8601": "2020-04-26T12:09:58.541044Z",
        "url": "https://files.pythonhosted.org/packages/c8/c1/0e4b7b7380a1bcb0597b0d9a9bbdc53f1c9ad1fe6b7c871ae5482600d264/dirhash-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1552442c59e8f444745f713de4661d224aabd3e5751e478841fe5b6cff1ddda9",
          "md5": "df6e989e6bd644859b6c8aea064bb889",
          "sha256": "b77ef0407e9fdb4fe63631601cb6732183131c5e5d805942c37ae19455b9d25c"
        },
        "downloads": -1,
        "filename": "dirhash-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df6e989e6bd644859b6c8aea064bb889",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12901,
        "upload_time": "2020-08-26T20:01:49",
        "upload_time_iso_8601": "2020-08-26T20:01:49.070118Z",
        "url": "https://files.pythonhosted.org/packages/15/52/442c59e8f444745f713de4661d224aabd3e5751e478841fe5b6cff1ddda9/dirhash-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "390cd8edc97d854e00d2227320ef558338e4eef37fc925f235885ab3bffbceea",
          "md5": "647cdcfe759c4f6ccf615757eab3de90",
          "sha256": "31bf8192fbb6e09a2a7ff4de31b9eb127c58545af22125ca1fa67c91c8e2d898"
        },
        "downloads": -1,
        "filename": "dirhash-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "647cdcfe759c4f6ccf615757eab3de90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13833,
        "upload_time": "2020-08-26T20:01:50",
        "upload_time_iso_8601": "2020-08-26T20:01:50.666312Z",
        "url": "https://files.pythonhosted.org/packages/39/0c/d8edc97d854e00d2227320ef558338e4eef37fc925f235885ab3bffbceea/dirhash-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1552442c59e8f444745f713de4661d224aabd3e5751e478841fe5b6cff1ddda9",
        "md5": "df6e989e6bd644859b6c8aea064bb889",
        "sha256": "b77ef0407e9fdb4fe63631601cb6732183131c5e5d805942c37ae19455b9d25c"
      },
      "downloads": -1,
      "filename": "dirhash-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "df6e989e6bd644859b6c8aea064bb889",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12901,
      "upload_time": "2020-08-26T20:01:49",
      "upload_time_iso_8601": "2020-08-26T20:01:49.070118Z",
      "url": "https://files.pythonhosted.org/packages/15/52/442c59e8f444745f713de4661d224aabd3e5751e478841fe5b6cff1ddda9/dirhash-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "390cd8edc97d854e00d2227320ef558338e4eef37fc925f235885ab3bffbceea",
        "md5": "647cdcfe759c4f6ccf615757eab3de90",
        "sha256": "31bf8192fbb6e09a2a7ff4de31b9eb127c58545af22125ca1fa67c91c8e2d898"
      },
      "downloads": -1,
      "filename": "dirhash-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "647cdcfe759c4f6ccf615757eab3de90",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13833,
      "upload_time": "2020-08-26T20:01:50",
      "upload_time_iso_8601": "2020-08-26T20:01:50.666312Z",
      "url": "https://files.pythonhosted.org/packages/39/0c/d8edc97d854e00d2227320ef558338e4eef37fc925f235885ab3bffbceea/dirhash-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}