{
  "info": {
    "author": "TE-MPE",
    "author_email": "availsim4-developers@cern.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# AvailSim4\n\nAvailsim 4 is a software to predict reliability and availability of modern particle accelerators and the related\ntechnical systems. It is based on a Monte Carlo Discrete Event Simulation algorithm and allows for advanced availability\nand reliability statistics.\n\n## Requirements\n\nPython >=3.7, <4\n\n## Installation\n\n### Pre-requirement for Windows users\n\n- One of the external dependencies requires Windows users to install Microsoft Visual C++ 14.0 or greater. It can be downloaded from \"Microsoft C++ Build Tools\": <https://visualstudio.microsoft.com/visual-cpp-build-tools/>, this requirement is needed to use the Quasi-Monte-Carlo algorithm. CERN's Window users might prefer to use SWAN notebooks which are running on Linux machines.\n\n### (Optional) Visualization tools\n\n- To generate a diagram of the architecture tree, AvailSim4 requires PyGraphviz package and Graphviz to be installed. More information and OS-specific installation guide of Graphviz: <https://graphviz.org/download/> and of PyGraphviz: <https://pygraphviz.github.io/documentation/stable/install.html>. General instructions: \n  - **Linux**: install Graphviz through your system package manager and then make sure to install PyGraphviz with `pip` or `conda` : `apt-get update`, `apt-get install libgraphviz-dev`, `pip install pygraphviz`.\n  - **Windows**: Graphviz installation wizard can be downloaded manually from the website. Then proceed to install PyGraphviz with `pip` or `conda`. Make sure that `dot` program's plugins are configured by running `dot -c` command in your environment. May also require Microsoft C++ Build Tools as a pre-requirement .   \n  - **MacOS**: you can install Graphviz using Homebrew package manager by running command `brew install graphviz` and then `pip install pygraphviz`.\n\n### Gitlab\n\n- Clone the project from <https://gitlab.cern.ch/availsim4/availsim4core>\n- (Optional) create a dedicated virtual environment. In the context of CERN\n  follow : <https://wikis.cern.ch/display/ACCPY/Getting+started+with+Acc-Py>\n- Install the dependencies ```pip install -r requirements.txt``` or ```conda install --file requirements.txt```\n- For CERN users, dependencies could be installed in a dedicated folder to ease the load on the file system when executing larger number of jobs in parallel:\n```pip install --target=/afs/cern.ch/work/U/USERNAME/pipinstall -r requirements.txt``` (see user guide, `Running the code` section)\n\n### pypi\n\n- From CERN network you can use the internal Python Package Index (<https://acc-py-repo.cern.ch>)\n  ```pip install availsim4```\n\n## Usage\n\nAvailSim4 input arguments are the following ones:\n\n```bash\navailsim4.py [-h] \n             --system SYSTEM\n             --simulation SIMULATION \n             --output_folder OUTPUT_FOLDER\n             [--sensitivity_analysis SENSITIVITYANALYSIS] \n             [--HTCondor]\n             [--HTCondor_extra_argument OPTIONAL_EXTRA_ARGUMENT]\n             [--nb_processes NB_PROCESS]\n             [--children_logic PYTHON_FILE]\n```\n\nExample of a call for an execution on a local machine within a terminal:\n\n```bash\npython3 availsim4.py --system availsim4core/test/E2E/input/convergence/convergence_test_system.xlsx --simulation availsim4core/test/E2E/input/convergence/N1000_simulation.xlsx --output_folder output/E2E_example/\n```\n\nA notebook, `call_AvailSim4.ipynb`, is provided to make calls to AvailSim4 in jupyter (e.g. SWAN for CERN users).\n\nExample of a call for an execution on a cluster handle with HTCondor is described in the user guide.\n\n## User documentation\n\nA guide is provided in `doc/user_guide/`\n\n## License\nCopyright Â© CERN 2021. Released under the [GPL 3.0 only license](LICENSE). All rights not expressly granted are reserved.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.cern.ch/availsim4/availsim4",
    "keywords": "",
    "license": "gpl-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "availsim4",
    "package_url": "https://pypi.org/project/availsim4/",
    "platform": null,
    "project_url": "https://pypi.org/project/availsim4/",
    "project_urls": {
      "Homepage": "https://gitlab.cern.ch/availsim4/availsim4"
    },
    "release_url": "https://pypi.org/project/availsim4/2.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7, <4",
    "summary": "Availsim4 is a tool to predict reliability and availability of modern particle accelerators and their related systems.",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13250623,
  "releases": {
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6139f706920ad61d09d5a5b2b28f3584c2a9237a1f6850b4f24c3923cf6cc7e4",
          "md5": "df65787ad8c8265184b6bc8077648eef",
          "sha256": "9abb9da84742d4bba66be3f2bc31a2e58382aab1079cf1ac3cf565d9e01bc3e9"
        },
        "downloads": -1,
        "filename": "availsim4-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "df65787ad8c8265184b6bc8077648eef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 117725,
        "upload_time": "2022-03-21T16:40:38",
        "upload_time_iso_8601": "2022-03-21T16:40:38.256881Z",
        "url": "https://files.pythonhosted.org/packages/61/39/f706920ad61d09d5a5b2b28f3584c2a9237a1f6850b4f24c3923cf6cc7e4/availsim4-2.0.1.tar.gz",
        "yanked": true,
        "yanked_reason": "Difficulties with some required dependencies which can be optional"
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17d6b98814fb92fa4c560971fe91e6f2571c7b355f10720df6b3035df163d9a3",
          "md5": "e8361df56761cf02b902a4c0b2c466da",
          "sha256": "66b90c6eefa5bd9cb2183817722a1e035e986bb8f9cb8b130a88c6141def9063"
        },
        "downloads": -1,
        "filename": "availsim4-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e8361df56761cf02b902a4c0b2c466da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 117751,
        "upload_time": "2022-03-22T10:52:56",
        "upload_time_iso_8601": "2022-03-22T10:52:56.846339Z",
        "url": "https://files.pythonhosted.org/packages/17/d6/b98814fb92fa4c560971fe91e6f2571c7b355f10720df6b3035df163d9a3/availsim4-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17d6b98814fb92fa4c560971fe91e6f2571c7b355f10720df6b3035df163d9a3",
        "md5": "e8361df56761cf02b902a4c0b2c466da",
        "sha256": "66b90c6eefa5bd9cb2183817722a1e035e986bb8f9cb8b130a88c6141def9063"
      },
      "downloads": -1,
      "filename": "availsim4-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e8361df56761cf02b902a4c0b2c466da",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 117751,
      "upload_time": "2022-03-22T10:52:56",
      "upload_time_iso_8601": "2022-03-22T10:52:56.846339Z",
      "url": "https://files.pythonhosted.org/packages/17/d6/b98814fb92fa4c560971fe91e6f2571c7b355f10720df6b3035df163d9a3/availsim4-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}