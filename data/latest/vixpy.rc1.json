{
  "info": {
    "author": "Doug S",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Vixpy\n> Python bindings for VMWare VIX API (version 1.15)\n\nVixpy provides helper functions on top of Python bindings for the VMWare VIX API to facilitate automated virtual machine control.\n\n## Installation\n\n```sh\npython setup.py install\n```\n\n## Usage example\n\nVirtual machine must have \n* vmware tools installed\n* No auto login\n* Administrator password set appropriately\n\n\n### Software test\n```python\nimport logging\nimport os\nimport shutil\nimport sys\nimport time\nfrom vixpy import *\n\nVM_BASE = r'c:\\vm'\n\nvm_list = {\n    'XP' : VM_BASE + r'\\WinXP\\Windows XP Professional.vmx',\n    '2K3' : VM_BASE + r'\\Win2k3\\Windows Server 2003 Enterprise Edition.vmx'\n    }\n\n\nTESTDIR = r'c:\\testfiles'\n\n\ndef mkdirs(path):\n    dname = ''\n    for d in path.split(os.path.sep):\n        dname = os.path.join(dname, d)\n        try:\n            os.mkdir(dname)\n        except:\n            pass\n\n\nclass SoftwareTest(object):\n    _USER = 'administrator'\n    _PASS = '12345678'\n\n    def __init__(self, osname):\n        self.name = osname\n        self.path = ''\n        self.log = None\n        self.host = None\n        self.vm = None\n        self.scount = 0\n\n        self.init_hostenv()\n\n\n    def init_hostenv(self):\n        self.path = os.path.join('testdata', self.name)\n        shutil.rmtree(self.path, True)\n        time.sleep(1)\n        mkdirs(self.path)\n        time.sleep(1)\n\n        self.log = logging.getLogger(self.name)\n        self.log.addHandler(logging.StreamHandler(sys.stdout))\n        self.log.addHandler(logging.FileHandler(os.path.join(self.path, 'testlog.txt')))\n        self.log.setLevel(logging.INFO)\n\n\n    def err(self, msg, indent=0):\n        self.log.info('\\t'*indent + '[-] ' + msg)\n\n    def info(self, msg, indent=0):\n        self.log.info('\\t'*indent + '[*] ' + msg)\n\n    def success(self, msg, indent=0):\n        self.log.info('\\t'*indent + '[+] ' + msg)\n\n    def warn(self, msg, indent=0):\n        self.log.info('\\t'*indent + '[!] ' + msg)\n\n\n    def start_vm(self):\n        self.host = VixHost()\n\n        self.info(\"Opening VM\")\n        self.vm = self.host.open(vm_list[self.name])\n        self.vm.revert(self.vm.get_namedsnapshot(self.name), True)\n\n        self.info(\"Checking power state\")\n        if self.vm.power_state not in (\"Powering On\", \"Powered On\"):\n            self.info(\"Powering on\", 1)\n            self.vm.on(gui=True)\n        else:\n            self.info(\"Already running\", 1)\n\n        self.info(\"Checking for vmware tools\")\n        if self.vm.power_state not in (\"Tools Running\",):\n            self.info(\"Waiting for OS to fully load\", 1)\n            self.vm.wait()\n        else:\n            self.info(\"Tools already running (OS loaded)\", 1)\n\n        self.info(\"Logging in as %s\" % self._USER)\n        self.vm.login(self._USER, self._PASS, True)\n\n\n    def reset_vm(self):\n        self.info(\"Restarting VM\")\n\n        self.info(\"Powering off...\", 1)\n        # Blah - can't use reset...\n        self.vm.off(True)\n        if self.vm.power_state != 'Powered Off':\n            raise VixError('Unknown State')\n\n        self.info(\"Powering on...\", 1)\n        self.vm.on(gui=True)\n\n        self.info(\"Checking for vmware tools - OS running state\")\n        if self.vm.power_state not in (\"Tools Running\",):\n            self.info(\"Waiting for OS to fully load\", 1)\n            self.vm.wait()\n        else:\n            self.info(\"Tools already running (OS loaded)\", 1)\n\n        self.info(\"Logging in as %s\" % self._USER)\n        self.vm.login(self._USER, self._PASS, True)\n\n\n    def init_testenv(self, testfiles):\n        def make_path(f):\n            return os.path.join(TESTDIR, os.path.basename(f))\n\n        self.info(\"Creating Test environment\")\n        try:\n            self.info(\"Creating test dir - %s\" % TESTDIR, 1)\n            self.vm.mkdir(TESTDIR)\n        except VixError:\n            self.warn(\"Directory already exists\", 1)\n            pass\n\n        for f in testfiles:\n            self.info(\"Copying %s to VM\" % f, 1)\n            self.vm.copy_to(f, make_path(f))\n\n        self.success(\"Test environment created\")\n\n\n    def run_install(self):\n        self.info(\"Running test software install\")\n        self.vm.run(os.path.join(TESTDIR, 'install.exe'), True, True)\n\n\n    def run_uninstall(self):\n        self.info(\"Running test software uninstall\")\n        self.vm.run(os.path.join(TESTDIR, 'uninstall.exe'), True, True)\n\n\n    def verify(self):\n        self.info(\"Verifying\")\n        self.info(\"Running verify script...\", 1)\n        self.vm.run(os.path.join(TESTDIR, 'verify.bat'), '')\n        self.vm.copy_from(\n                os.path.join(TESTDIR, 'verify_out.txt'),\n                os.path.join(self.path, 'verify_out.txt'))\n\n\n    def screen_shot(self):\n        f = os.path.join(self.path, 'screen-shot-%02d.png' % self.scount)\n        self.scount += 1\n        self.info(\"Taking screen shot : %s\" % f)\n        open(f, 'wb').write(self.vm.screen_capture())\n\n\n    def run_test(self):\n        self.info(\"Starting Test : %s\" % self.name)\n\n        try:\n            self.start_vm()\n            self.screen_shot()\n            self.init_testenv(['install.exe', 'uninstall.exe', 'verify.bat'])\n            self.screen_shot()\n            self.run_install()\n            self.screen_shot()\n            self.verify()\n            self.screen_shot()\n            self.reset_vm()\n            self.screen_shot()\n            self.run_uninstall()\n            self.screen_shot()\n        except Exception as e:\n            self.err('Failed with exception')\n            self.err(str(e))\n        self.info(\"Test Finished\")\n\n\nif __name__ == '__main__':\n    if len(sys.argv) < 2:\n        print \"usage: %s <OS Name>\" % sys.argv[0]\n        print \"  XP 2K3\"\n        sys.exit(-1)\n\n    t = SoftwareTest(sys.argv[1])\n    t.run_test()\n\n```\n\n## Release History\n* 1.0.0\n  * Python bindings rewritten to use ctypes\n  * Moved to Python 3\n\n## Meta\n\nDistributed under the MIT license. See ``LICENSE`` for more information.\n\n[https://github.com/dshikashio](https://github.com/dshikashio/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dshikashio/vixpy",
    "keywords": "vmware,vix,automation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Vixpy",
    "package_url": "https://pypi.org/project/Vixpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/Vixpy/",
    "project_urls": {
      "Homepage": "https://github.com/dshikashio/vixpy"
    },
    "release_url": "https://pypi.org/project/Vixpy/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Python classes and bindings for VMWare VIX API",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11707365,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09a9a7874ffa1206d060a3f9515928ff02373834596e5da55736e5ed8dbd280a",
          "md5": "2fbfdd0f4650f7184e526ef9db7ef571",
          "sha256": "00c0aa1e589a978881c681639a17528970f008131da9a688f8ee15212cc09060"
        },
        "downloads": -1,
        "filename": "Vixpy-1.0.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "2fbfdd0f4650f7184e526ef9db7ef571",
        "packagetype": "bdist_egg",
        "python_version": "1.0.0",
        "requires_python": ">=3.6.0",
        "size": 31304,
        "upload_time": "2021-10-13T00:36:51",
        "upload_time_iso_8601": "2021-10-13T00:36:51.550027Z",
        "url": "https://files.pythonhosted.org/packages/09/a9/a7874ffa1206d060a3f9515928ff02373834596e5da55736e5ed8dbd280a/Vixpy-1.0.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11c4d750b29ba9ebd46e71f26759cdac47c19944aee8a9a77fe833a8d00bc63b",
          "md5": "c97ce3e1654209b40b58015c04c60999",
          "sha256": "114879bbc492305c751a295d1c83057b1a7f3bf2e358ee6e8da073dd78f6f18e"
        },
        "downloads": -1,
        "filename": "Vixpy-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c97ce3e1654209b40b58015c04c60999",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 15094,
        "upload_time": "2021-10-13T00:36:48",
        "upload_time_iso_8601": "2021-10-13T00:36:48.996688Z",
        "url": "https://files.pythonhosted.org/packages/11/c4/d750b29ba9ebd46e71f26759cdac47c19944aee8a9a77fe833a8d00bc63b/Vixpy-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7e8fa9d71eddf919f2bb20698089864a06da8a7e9fa38e1e15e7dee0103ed7e",
          "md5": "185004bec4c5163f6b2da3659dac8753",
          "sha256": "908fcc50f7b3cefe5a94b38159908c1c5dc39f11b176e003f8ce1eb974a81bc7"
        },
        "downloads": -1,
        "filename": "Vixpy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "185004bec4c5163f6b2da3659dac8753",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 14459,
        "upload_time": "2021-10-13T00:36:53",
        "upload_time_iso_8601": "2021-10-13T00:36:53.549213Z",
        "url": "https://files.pythonhosted.org/packages/a7/e8/fa9d71eddf919f2bb20698089864a06da8a7e9fa38e1e15e7dee0103ed7e/Vixpy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09a9a7874ffa1206d060a3f9515928ff02373834596e5da55736e5ed8dbd280a",
        "md5": "2fbfdd0f4650f7184e526ef9db7ef571",
        "sha256": "00c0aa1e589a978881c681639a17528970f008131da9a688f8ee15212cc09060"
      },
      "downloads": -1,
      "filename": "Vixpy-1.0.0-py3.7.egg",
      "has_sig": false,
      "md5_digest": "2fbfdd0f4650f7184e526ef9db7ef571",
      "packagetype": "bdist_egg",
      "python_version": "1.0.0",
      "requires_python": ">=3.6.0",
      "size": 31304,
      "upload_time": "2021-10-13T00:36:51",
      "upload_time_iso_8601": "2021-10-13T00:36:51.550027Z",
      "url": "https://files.pythonhosted.org/packages/09/a9/a7874ffa1206d060a3f9515928ff02373834596e5da55736e5ed8dbd280a/Vixpy-1.0.0-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11c4d750b29ba9ebd46e71f26759cdac47c19944aee8a9a77fe833a8d00bc63b",
        "md5": "c97ce3e1654209b40b58015c04c60999",
        "sha256": "114879bbc492305c751a295d1c83057b1a7f3bf2e358ee6e8da073dd78f6f18e"
      },
      "downloads": -1,
      "filename": "Vixpy-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c97ce3e1654209b40b58015c04c60999",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 15094,
      "upload_time": "2021-10-13T00:36:48",
      "upload_time_iso_8601": "2021-10-13T00:36:48.996688Z",
      "url": "https://files.pythonhosted.org/packages/11/c4/d750b29ba9ebd46e71f26759cdac47c19944aee8a9a77fe833a8d00bc63b/Vixpy-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7e8fa9d71eddf919f2bb20698089864a06da8a7e9fa38e1e15e7dee0103ed7e",
        "md5": "185004bec4c5163f6b2da3659dac8753",
        "sha256": "908fcc50f7b3cefe5a94b38159908c1c5dc39f11b176e003f8ce1eb974a81bc7"
      },
      "downloads": -1,
      "filename": "Vixpy-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "185004bec4c5163f6b2da3659dac8753",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 14459,
      "upload_time": "2021-10-13T00:36:53",
      "upload_time_iso_8601": "2021-10-13T00:36:53.549213Z",
      "url": "https://files.pythonhosted.org/packages/a7/e8/fa9d71eddf919f2bb20698089864a06da8a7e9fa38e1e15e7dee0103ed7e/Vixpy-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}