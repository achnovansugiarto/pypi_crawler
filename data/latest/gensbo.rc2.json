{
  "info": {
    "author": "Mingtao Li",
    "author_email": "mingtao.li@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# gensbo—a **GEN**eral **S**imulation **B**ased **O**ptimizer\r\n\r\ngensbo的目标是创建一个基于仿真的通用优化器。\r\n\r\n目前已实现基于改进简化小波粒子群算法的单目标优化和基于改进小波全面学习粒子群算法的多目标优化引擎。支持混合整数非线性优化问题，可以便捷自定义目标函数。\r\n\r\n详情见gensbo说明文档。\r\n\r\n## 安装\r\n\r\n```python\r\n# 下载代码\r\npython setup.py install\r\n```\r\n\r\n\r\n\r\n## 示例\r\n\r\n```python\r\n# 单目标优化\r\n/examples/user_function/MINLP_1.py\r\n/examples/user_function/Mishra's Bird.py\r\n\r\n# 多目标优化\r\n/examples/user_function/B&K_2d.py\r\n\r\n# 结果保存：自动生成3份文件\r\n# 单目标优化（so）：\r\n# \tname_so.npy：以np.array格式保存单目标优化（so）结果\r\n# \tname_view_so.xls：以xls格式保存单目标优化（so）结果\r\n#\t\tf：目标函数寻优结果\r\n#\t\tx：寻优结果解向量\r\n#\t\tviolate_cons：违反的约束条件索引\r\n#\t\tf_history：目标函数寻优历史\r\n# \tname_so.png：寻优历史图\r\n# 多目标优化（mo）：\r\n# \tname_so.npy：以np.array格式保存多目标优化（mo）结果\r\n# \tname_view_so.xls：以xls格式保存多目标优化（mo）结果\r\n#\t\tf1,f2 ...：寻优结果帕累托最优前沿目标函数值\r\n#\t\tx1,x2 ...：寻优结果解向量\r\n#\t\tsolution number：寻得的帕累托前沿解的总个数\r\n# \tname_so.png：寻优结果帕累托最优前沿目标函数值(f1-x轴；f2-y轴;f3-z轴)\r\n```\r\n\r\n\r\n\r\n## 支持变量类型\r\n\r\n变量类型：\r\n\t\"continuous\"：\t\t\t连续变量（浮点数）\r\n\t\"discrete\"：\t\t\t\t连续离散变量（整数）\r\n\t\"discrete_disconti\"：\t非连续离散变量（浮点数（取值集合））\r\n\t\"binary\"：\t\t\t\t二元变量（整数）\r\n\r\n\r\n\r\n变量添加方法示例：\r\n```python\r\n# 创建问题实例\r\nproblem = Problem(\"function_name\")\r\n\r\n# 添加变量\r\nproblem.add_var(\"x1\", \"continuous\", \t\tlowbound=-15.0, \tupbound=15.0, \tvalue=None)\r\nproblem.add_var(\"x2\", \"discrete\", \t\t\tlowbound=-5.0, \t\tupbound=9.0, \tvalue=4)\r\nproblem.add_var(\"x3\", \"discrete_disconti\", \tset=[-5, -3, 0, 6, 9, 23], \t\t\tvalue=None)\r\nproblem.add_var(\"x4\", \"binary\", \t\t\tlowbound=0, \t\tupbound=1, \t\tvalue=0)\r\n# 初值value的选取应尽可能有助于提供最优解的信息，否则应将其设为‘None’（建议均设为‘None’）\r\n# 使用PSO优化算法时，受到目标函数形态的影响，有时提供部分初值反而会诱使算法过早陷入局部最优，影响算法性能，请谨慎使用\r\n# 在多目标优化中，通过设置某已知非支配解作为初值，同时减小寻优代数（‘step_max’）或增大外部档案容量（‘pareto_size’），可以在较短时间内获得该解周围的详细非支配解信息。\r\n\r\n###############################################################################################\r\n# 变量类型：                                                                                    #\r\n# 连续变量-\"continuous\":从[lowbound,upbound]中随机取值(random.uniform(lowbound,upbound))          #\r\n# 离散连续整型变量-\"discrete\"：从[lowbound,upbound]中随机取整数值(random.randint(lowbound,upbound))  #\r\n# 离散非连续变量-\"discrete_disconti\"：从传入取值集合（set）中取值                                     #\r\n# 二元整型变量-\"binary\"：取值0或者1                                                                #\r\n# problem.add_var(\"xc\", \"continuous\", lowbound=0, upbound=3.0, value=None)                    #\r\n# problem.add_var(\"xd\", \"discrete\", lowbound=-15.0, upbound=15.0, value=0)                    #\r\n# problem.add_var(\"xdd\", \"discrete_disconti\", set=[-5, -3, 0, 6, 9, 23], value=6)             #\r\n# problem.add_var(\"xb\", \"binary\", lowbound=0, upbound=1, value=None)                          #\r\n###############################################################################################\r\n\r\n# 批量传入变量初始值\r\n# 支持 list 和 np.array 格式\r\n# 每个解向量初值中变量顺序应与添加变量顺序一致（与寻优结果导出的解向量中变量顺序相同）\r\nif_batch_add_var_ini = True\r\nif if_batch_add_var_ini == True:\r\n    # 加载上次寻优导出的可行解\r\n    var_ini = np.load('%s_so.npy'%name,allow_pickle=True)[0][-1]\r\n    problem.batch_add_var_ini(var_ini)\r\n```\r\n\r\n\r\n\r\n## PSO优化算法参数设置\r\n\r\n```python\r\n参数设置方式：\r\n\t# 创建优化器实例\r\n\toptimizer = PSO(problem)\r\n\r\n\t# 设置参数\r\n\toptimizer.set_options('para_name', value)\r\n\r\n公用参数：\r\n\r\n\t'swarm_size': 30,  \r\n\t\t# 粒子数量\r\n\t'step_max': 500,\r\n\t\t# 最大寻优代数\r\n\t'w_type':'linear',\r\n\t\t# 惯性权重方式，'linear'-线性，'fixed'-定值，'chaos'-混沌惯性权重\r\n\t\r\n\t'print_info': True, # 是否输出优化信息及计算过程信息，仅限于sopso单目标优化\r\n    'time_max':24*3600, # 最大运行时间(s)，仅限于sopso\r\n\t\t\r\n\t# {{{惩罚函数相关参数\r\n\t'penalty_type': 'common',\r\n\t# 选择罚函数方法，字符串（default：'common'）\r\n\t# 'common' - 普通（动态）罚函数，'oracle' - oracle罚函数\r\n\t# 粒子群多目标优化算法不支持oracle罚函数方法\r\n\t'penalty_times': 100,\r\n\t# penalty_type = 'common'时生效，惩罚倍数，浮点数（default：100）\r\n\t# 使违反约束的解受到惩罚后的函数值一定大于全局最优适应函数值\r\n\t'oracle': 1e9,\r\n\t# penalty_type = 'oracle'时生效，Ω初始值，浮点数（default：1e9）\r\n\t# 该值必须大于全局最优适应函数值\r\n\t# }}}惩罚函数\r\n    \t\r\n\t# 并行计算：建议当目标函数的计算比较耗时的时候才启用，\r\n\t# 否则不同cpu核间的通讯消耗足以抵消并行计算的优势\r\n    'if_mp':False,# 是否使用并行计算（多进程），默认不使用\r\n    'mp_core_num':2,# 并行计算时使用的cpu核数，默认为2\r\n        \r\n    # 是否初始化内点（可行域）\r\n    'if_ini_cons':False,\r\n    # 内点个数\r\n    'ini_feasible_x_num':1,\r\n    # 初始化内点的最大运算次数\r\n    'ini_step':30,\r\n    # 初始化内点中sopso的参数设置\r\n    'ini_swarm_size':50,\r\n    'ini_step_max':1000,\r\n    'ini_precision':1e-3,\r\n\r\n    # 是否收集寻优过程产生的可行解及其适应度函数值\r\n    'if_get_feasible_x':False,\r\n    # 当可行解个数满足要求时是否停止寻优：只寻找非重复的可行解\r\n    'if_get_feasible_x_only':False,\r\n    # 记录可行解个数上限（整数）\r\n    'feasible_x_num':100\r\n\t\r\n单目标pso：\r\n\r\n\t'pso_mode': \"ispsowm\",\r\n\t\t# 选择用于运算的单目标pso方法，字符串（default：'ispsowm'）\r\n\t\t# 目前提供：\r\n\t\t# \"standard_pso'-标准粒子群算法\r\n\t\t# 'ispsowm'-改进小波简化粒子群算法（复杂问题推荐）\r\n\t\t# 选择ispsowm时，\r\n\t\t# c（反向搜索阈值）, pm（变异阈值）, xi_wm（形状因子）,g（函数a的上限值） 参数生效。\r\n\t\t# 若搜索过程表明粒子群明显陷入早熟，则适当增大c，pm的值。具体参数设置请参考说明文档。\r\n\t\r\n\t'w': 0.8,\r\n\t# 惯性权重（default：0.8）\r\n\t'w_range_so': [0.4, 1.2],\r\n\t# 惯性权重变化范围，数组（浮点数）（default：[0.4, 1.2]）\r\n\t'c1': 2.0,\r\n\t# 加速因子中的认知因子（default：2）\r\n\t'c2': 2.0,\r\n\t# 加速因子中的社会因子（default：2）\r\n\t\r\n\t'precision': 0.001,\r\n\t# 收敛精度，浮点数（default：1e-3）\r\n\t# 寻优程序设定当种群粒子的个体历史最好目标函数值（集合）的标准差小于收敛精度时收敛。\r\n\t# 问题规模较小时，可将precision调大\r\n\t\r\n\t'neighborhood': 'star',\r\n\t# 粒子群邻域结构，'star'（全互连型），'ring'（环型）（搜索速度较慢，但更不容易陷入早熟）\t\r\n\r\n\t# {{{小波相关参数\r\n\t'c': 0.2,\r\n\t# 反向搜索概率，浮点数（default：0.2）\r\n\t'pm': 0.7,\r\n\t# 执行小波变异的概率阈值，浮点数（default：0.7），取值范围[0,1]\r\n\t'xi_wm': 0.5,\r\n\t# 形状参数，浮点数（default：0.5）\r\n\t'g': 1000,\r\n\t# 小波函数中a的上限值，浮点数（default：1000），常取1000或10000\r\n\t# }}}小波\r\n```\r\n\r\n\r\n​\t\r\n​\t多目标pso：\r\n​\t\r\n```python\r\n\t'x_pareto_size': 100,\r\n\t# 外部档案大小（存放非支配解），整数（default：100）\r\n\r\n\t'w_mo': 0.4,\r\n\t# 惯性权重（default：0.4）\r\n\t'w_range_mo': [0.2, 0.6],\r\n\t# 惯性权重变化范围，数组（浮点数）（default：[0.2, 0.6]）\r\n\t'c_mo': 2.0,\r\n\t# 加速因子，浮点数（default：2）\r\n\r\n\t'run_number': 5,\r\n\t# 独立寻优次数，整数（default：5），合并各次寻优结果pareto前沿\r\n\r\n\t'pm_mo': 0.7,\r\n\t# 执行小波变异的概率阈值，浮点数（default：0.7），取值范围[0,1]\r\n\t'xi_wm_mo': 0.5,\r\n\t# 形状参数，浮点数（default：0.5）\r\n\t'g_mo': 1000,\r\n\t# 小波函数中a的上限值，浮点数（default：1000），常取1000或10000\r\n\t'pe_mo': 0.4,\r\n\t# 精英概率，浮点数（default：0.4），取值范围[0,1]\r\n\t'pl_mo': 0.1,\r\n\t# 学习概率，浮点数（default：0.1），取值范围[0,1]\r\n```\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.mingtaoli.cn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gensbo",
    "package_url": "https://pypi.org/project/gensbo/",
    "platform": null,
    "project_url": "https://pypi.org/project/gensbo/",
    "project_urls": {
      "Homepage": "https://www.mingtaoli.cn"
    },
    "release_url": "https://pypi.org/project/gensbo/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "gensbo—a General Simulation Based Optimizer",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14685879,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d88c8def099e405eee9528a2f18116663c0cde884e3e45c0c159c80591f01b9e",
          "md5": "7a81ba5d02fe35b44a7556d8e76f26ef",
          "sha256": "6a5fb5e0988a5acc796752d100178c1083f67f35fd1b23e8032a5657f04ceb31"
        },
        "downloads": -1,
        "filename": "gensbo-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a81ba5d02fe35b44a7556d8e76f26ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 56403,
        "upload_time": "2021-01-11T10:05:51",
        "upload_time_iso_8601": "2021-01-11T10:05:51.819236Z",
        "url": "https://files.pythonhosted.org/packages/d8/8c/8def099e405eee9528a2f18116663c0cde884e3e45c0c159c80591f01b9e/gensbo-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af12689f6384e495406abe38f8755d565ff0159d610337545a42eefc09177849",
          "md5": "ee525d6dbf34a484431a41b38633ec7c",
          "sha256": "7431f4d1b3af543f1ca307f45184877d01925da6ac0bb53933153a14a45d30ce"
        },
        "downloads": -1,
        "filename": "gensbo-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ee525d6dbf34a484431a41b38633ec7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48892,
        "upload_time": "2021-01-11T10:05:54",
        "upload_time_iso_8601": "2021-01-11T10:05:54.274043Z",
        "url": "https://files.pythonhosted.org/packages/af/12/689f6384e495406abe38f8755d565ff0159d610337545a42eefc09177849/gensbo-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b799d71802733e717a3ddcd97361cc52cee4a3fa9f56f9f5fee4ae625ea25f1e",
          "md5": "611315e11274307d8ad35d977eff828d",
          "sha256": "5b8aa7f3fe0b7b9c0d9402ab2927bfcad882618ede3d2c13ed182ef9723c47b5"
        },
        "downloads": -1,
        "filename": "gensbo-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "611315e11274307d8ad35d977eff828d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46837,
        "upload_time": "2022-08-08T08:18:26",
        "upload_time_iso_8601": "2022-08-08T08:18:26.072536Z",
        "url": "https://files.pythonhosted.org/packages/b7/99/d71802733e717a3ddcd97361cc52cee4a3fa9f56f9f5fee4ae625ea25f1e/gensbo-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b799d71802733e717a3ddcd97361cc52cee4a3fa9f56f9f5fee4ae625ea25f1e",
        "md5": "611315e11274307d8ad35d977eff828d",
        "sha256": "5b8aa7f3fe0b7b9c0d9402ab2927bfcad882618ede3d2c13ed182ef9723c47b5"
      },
      "downloads": -1,
      "filename": "gensbo-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "611315e11274307d8ad35d977eff828d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 46837,
      "upload_time": "2022-08-08T08:18:26",
      "upload_time_iso_8601": "2022-08-08T08:18:26.072536Z",
      "url": "https://files.pythonhosted.org/packages/b7/99/d71802733e717a3ddcd97361cc52cee4a3fa9f56f9f5fee4ae625ea25f1e/gensbo-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}