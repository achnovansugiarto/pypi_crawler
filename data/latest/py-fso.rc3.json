{
  "info": {
    "author": "Mikhail Trusov",
    "author_email": "admin@superprogrammist.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Topic :: System :: Filesystems",
      "Topic :: Utilities"
    ],
    "description": "\r\nThe main function of this small package is to process the contents of a\r\nfolder with a single function: ``folder.process()`` (pun intended\r\n:-), without going into the details of iterating over files and folders.\r\n\r\nIt's strange that python doesn't have such a built-in function, but\r\nmaybe someone (maybe even myself) will write an extension to ``c``\r\nsomeday.\r\n\r\nSo, if, for example, you need to find all files with a too long full\r\nname, you just need to write the following script:\r\n\r\n::\r\n\r\n   from argparse import ArgumentParser\r\n   from py_fso import folder\r\n\r\n   MAX_FILEPATH_LENGTH = 260\r\n\r\n   def print_if_file_has_length_too_more_chars(fileEntry) :\r\n       filePath = fileEntry.path\r\n       fileLength = len(filePath)\r\n       if fileLength > MAX_FILEPATH_LENGTH:\r\n           print(\"File \" + filePath + \" has  length \" + str(fileLength) + \" chars\")\r\n\r\n   parser = ArgumentParser(description='Scan a directory and its subdirectories and search for files with path lengths greater than ' + str(MAX_FILEPATH_LENGTH) + ' characters.')\r\n   parser.add_argument(\"directory\", help=\"scan this directory with its subdirectories\", metavar=\"DIR\")\r\n   parser.add_argument(\"-m\", \"--max_filepath_length\", help=\"max file path's length\")\r\n   args = parser.parse_args()\r\n   if args.max_filepath_length:\r\n       MAX_FILEPATH_LENGTH = int(args.max_filepath_length)\r\n\r\n   folder.process(init_dir = args.directory, proc_file_function = print_if_file_has_length_too_more_chars, process_dirs = False, proc_dir_function = '', go_into_subdirs = True)\r\n\r\nJust one call to folder.process() will replace all the details of traversing the contents of the folder, allowing you to focus on the main action of the script.\r\n\r\nThe package also includes several useful functions for working with text files.\r\n\r\nI use this package all the time in my work, installing it globally so that it's available to all scripts. It's very convenient.\r\n\r\n\r\nGetting Started\r\n---------------\r\n\r\nPrerequisites\r\n~~~~~~~~~~~~~\r\n\r\n-  `python <https://www.python.org/>`__ (version >=3+, version 2+ doesn't\r\n   check)\r\n\r\n\r\nInstalling\r\n~~~~~~~~~~\r\n\r\n::\r\n\r\n    # Just install the package globally (recommended)\r\n    # so you can use in all your scripts and projects:\r\n    $ python -m pip install py_fso\r\n\r\nUsing\r\n~~~~~~~~~~\r\n\r\n::\r\n\r\n    # then you can use it in your scripts\r\n    from py_fso import folder\r\n    from py_fso import textfile\r\n\r\nOne more script example\r\n~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n::\r\n\r\n    #!/usr/bin/python\r\n    # -*- coding: utf-8 -*-\r\n    \"\"\" Try to find  all files in the folder of a site including sub-folders which are not UTF-8 encoded.\"\"\"\r\n\r\n    import chardet\r\n    import os.path\r\n    from py_fso import folder\r\n\r\n    fileListExtensions = [\"htm\", \"html\", \"php\", \"css\", \"js\"]\r\n\r\n    def print_if_file_code_page_not_utf8(fileEntry) :\r\n        filePath = fileEntry.path\r\n        if os.path.splitext(filePath)[1][1:].strip().lower() in fileListExtensions:\r\n            with open(filePath, \"rb\") as F:\r\n                text = F.read()\r\n                enc = chardet.detect(text).get(\"encoding\")\r\n                if enc and enc.lower() != \"utf-8\":\r\n                    print(\"File \" + filePath + \" might not be UTF-8 encoded\")\r\n\r\n    folder.process(\"path\\\\to\\\\your\\\\site\\\\folder\", proc_file_function = print_if_file_code_page_not_utf8, process_dirs = False, proc_dir_function = None, go_into_subdirs = True)\r\n\r\n\r\nVersioning\r\n----------\r\n\r\nUsing `SemVer <http://semver.org/>`__ for versioning.\r\n\r\nAuthors\r\n-------\r\n\r\n-  **Mikhail Trusov** -\r\n   `py_fso <https://github.com/JustMisha/py_fso>`__\r\n\r\nLicense\r\n-------\r\n\r\nThis project is licensed under the MIT License - see the `LICENSE.md <https://github.com/JustMisha/py_fso/blob/main/LICENSE.md>`__ file for details\r\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JustMisha/py_fso",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-fso",
    "package_url": "https://pypi.org/project/py-fso/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-fso/",
    "project_urls": {
      "Homepage": "https://github.com/JustMisha/py_fso"
    },
    "release_url": "https://pypi.org/project/py-fso/1.0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The Python package for working with dirs and files",
    "version": "1.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17477123,
  "releases": {
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5df401d8b4b6abbe8efeb2cb8cd0cd14829a6089c9ff6e1331d089dfd046614",
          "md5": "8cb0583e2608dbc82855a5c61b53662a",
          "sha256": "9f5ee09473ead454f383b5ef1ae4f7edb3940752b2ef43a025363dac9aa369c7"
        },
        "downloads": -1,
        "filename": "py_fso-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cb0583e2608dbc82855a5c61b53662a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6503,
        "upload_time": "2023-03-25T21:21:48",
        "upload_time_iso_8601": "2023-03-25T21:21:48.675738Z",
        "url": "https://files.pythonhosted.org/packages/b5/df/401d8b4b6abbe8efeb2cb8cd0cd14829a6089c9ff6e1331d089dfd046614/py_fso-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6497b5b38fbb75e79441cf8dd0095c3affe8713a4a485712b640cb775be47df6",
          "md5": "f43428188dfea19a3a8ae5c37e771f64",
          "sha256": "0dfed20b1a76820a97699d53e2b91a616f5a6fc635e5673ce21021281ce971de"
        },
        "downloads": -1,
        "filename": "py_fso-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f43428188dfea19a3a8ae5c37e771f64",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6840,
        "upload_time": "2023-03-26T09:29:58",
        "upload_time_iso_8601": "2023-03-26T09:29:58.928411Z",
        "url": "https://files.pythonhosted.org/packages/64/97/b5b38fbb75e79441cf8dd0095c3affe8713a4a485712b640cb775be47df6/py_fso-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6429474b449a60c44c6f5c1a47fcc23b4d8a5f742c685e1bcc61efab2827c910",
          "md5": "1790d51c3494b4009b411663de5f2cd9",
          "sha256": "22011fd669e4d3c482ba544d0c617f7bb736ac29561253cf78b1bd94c03c3ee2"
        },
        "downloads": -1,
        "filename": "py_fso-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1790d51c3494b4009b411663de5f2cd9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6876,
        "upload_time": "2023-03-28T11:45:05",
        "upload_time_iso_8601": "2023-03-28T11:45:05.708672Z",
        "url": "https://files.pythonhosted.org/packages/64/29/474b449a60c44c6f5c1a47fcc23b4d8a5f742c685e1bcc61efab2827c910/py_fso-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6429474b449a60c44c6f5c1a47fcc23b4d8a5f742c685e1bcc61efab2827c910",
        "md5": "1790d51c3494b4009b411663de5f2cd9",
        "sha256": "22011fd669e4d3c482ba544d0c617f7bb736ac29561253cf78b1bd94c03c3ee2"
      },
      "downloads": -1,
      "filename": "py_fso-1.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1790d51c3494b4009b411663de5f2cd9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6876,
      "upload_time": "2023-03-28T11:45:05",
      "upload_time_iso_8601": "2023-03-28T11:45:05.708672Z",
      "url": "https://files.pythonhosted.org/packages/64/29/474b449a60c44c6f5c1a47fcc23b4d8a5f742c685e1bcc61efab2827c910/py_fso-1.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}