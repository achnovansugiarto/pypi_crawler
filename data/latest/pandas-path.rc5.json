{
  "info": {
    "author": "DrivenData",
    "author_email": "info@drivendata.org",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# `pandas_path` - Path style access for pandas\n\n[![PyPI](https://img.shields.io/pypi/v/pandas-path.svg)](https://pypi.org/project/pandas-path/)\n[![tests](https://github.com/drivendataorg/pandas-path/workflows/tests/badge.svg?branch=master)](https://github.com/drivendataorg/pandas-path/actions?query=workflow%3Atests+branch%3Amaster)\n[![codecov](https://codecov.io/gh/drivendataorg/pandas-path/branch/master/graph/badge.svg)](https://codecov.io/gh/drivendataorg/pandas-path)\n\nLove [`pathlib.Path`](https://docs.python.org/3/library/pathlib.html)*? Love pandas? Wish it were easy to use pathlib methods on pandas Series?\n\nThis package is for you. Just one import adds a `.path` accessor to any pandas Series or Index so that you can use all of the methods on a `Path` object.\n\n<small> * If not, you should.</small>\n\n## Quickstart\n\nInstall latest `pandas-path` with `pip`.\n\n```bash\npip install pandas-path\n```\n\nImport `path` from `pandas_path`, and then the `.path` accessor will be available on any Series or Index:\n\n```python\n# this is all you need\nfrom pandas_path import path\n```\n\nNow you can use all the pathlib methods using the `.path` accessor on any Series in `pandas`!\n\n```python\npd.Series([\n    'cat/1.jpg',\n    'cat/2.jpg',\n    'dog/1.jpg',\n    'dog/2.jpg',\n]).path.parent\n\n# 0    cat\n# 1    cat\n# 2    dog\n# 3    dog\n# dtype: object\n```\n\n\n## Examples\n\n\nHere's an example:\n\n```python\nfrom pathlib import Path\nimport pandas as pd\n\n# This is the only line you need to register `.path` as an accessor\n# on any Series or Index in pandas.\nfrom pandas_path import path\n\n# we'll make an example series from the py files in this repo;\n# note that every element here is just a string--no need to make Path objects yourself\nfile_paths = pd.Series(str(s) for s in Path().glob('**/*.py'))\n\n# 0                   setup.py\n# 1    pandas_path/accessor.py\n# 2        pandas_path/test.py\n# dtype: object\n```\n\nUse the `.path` accessor to get just the filename rather than the full path:\n\n```python\nfile_paths.path.name\n\n# 0       setup.py\n# 1    accessor.py\n# 2        test.py\n# dtype: object\n```\n\nUse the `.path` accessor to get just the parent folder of each file:\n\n```python\nfile_paths.path.parent\n\n# 0              .\n# 1    pandas_path\n# 2    pandas_path\n# dtype: object\n```\n\nUse calculated methods like `exists` to filter for what exists on the filesystem:\n\n```python\nfile_paths.loc[3] = 'fake_file.txt'\n\n# 0                   setup.py\n# 1    pandas_path/accessor.py\n# 2        pandas_path/test.py\n# 3              fake_file.txt\n# dtype: object\n\nfile_paths.path.exists()\n\n# 0     True\n# 1     True\n# 2     True\n# 3    False\n# dtype: bool\n```\n\nUse path methods like `with_suffix` to dynamically create new filenames:\n\n```python\nfile_paths.path.with_suffix('.png')\n\n# 0                   setup.png\n# 1    pandas_path/accessor.png\n# 2        pandas_path/test.png\n# 3               fake_file.png\n# dtype: object\n```\n\nUse the `/` operators just as you would in `pathlib` (with the `.path` accessor on either side of the operator.)\n\n```python\n\"different_root_folder\" / file_paths.path\n\n# 0                   different_root_folder/setup.py\n# 1    different_root_folder/pandas_path/accessor.py\n# 2        different_root_folder/pandas_path/test.py\n# dtype: object\n```\n\nWe'll even do element wise operations with lists/arrays/series of the same length.\n\n```python\nfile_paths.path.parent.path / [\"other_file1.txt\", \"other_file2.txt\", \"other_file3.txt\"]\n\n# 0                other_file1.txt\n# 1    pandas_path/other_file2.txt\n# 2    pandas_path/other_file3.txt\n# dtype: object\n```\n\n### Custom path accessors\n\nSome libraries (such as [`cloudpathlib`](https://cloudpathlib.drivendata.org/), which support path operations for AWS S3,\nAzure Blobs, and Google Cloud Storage) implement the `Path` interface in other contexts. You can use `pandas-path` to\nregister and use any class that implements `Path`. For example:\n\n```python\nimport pandas as pd\nfrom pandas_path import register_path_accessor\nfrom cloudpathlib import S3Path\n\n# creates an accessor \".s3\" that creates s3 paths\nregister_path_accessor(\"s3\", S3Path)\n\ntest = pd.Series(\n    S3Path(\"s3://ladi/Images/FEMA_CAP/2020/70349\").iterdir()\n)\n\ntest.s3.bucket\n#> 0      ladi\n#> 1      ladi\n#>        ... \n#> 577    ladi\n#> 578    ladi\n#> Length: 579, dtype: object\n```\n\nIf you need to pass specific args or kwargs to the path instantiation, you can pass those at registration time. For example,\n`S3Path` can be passed an `S3Client` with explicit credentials.\n\n\n```python\nimport pandas as pd\nfrom pandas_path import register_path_accessor\nfrom cloudpathlib import S3Path, S3Client\n\n# creates an accessor \".s3\" that creates s3 paths using `S3Path(*, client=S3Client(...))`\nregister_path_accessor(\"s3\", S3Path, client=S3Client(profile_name='other_aws_profile'))\n\ntest = pd.Series(\n    S3Path(\"s3://ladi/Images/FEMA_CAP/2020/70349\").iterdir()\n)\n\ntest.s3.bucket\n#> 0      ladi\n#> 1      ladi\n#>        ... \n#> 577    ladi\n#> 578    ladi\n#> Length: 579, dtype: object\n```\n\nAnother example is if you want to use Windows paths on a Posix machine. You can explicitly indicate you want\nto work with `PureWindowsPath` to do this on any operating system:\n\n```python\nimport pandas as pd\nfrom pandas_path import register_path_accessor\nfrom pathlib import PureWindowsPath\n\nregister_path_accessor(\"win\", PureWindowsPath)\n\ntest = pd.Series([\n    r\"c:\\test\\f1.txt\",\n    r\"c:\\test2\\f2.txt\",\n])\n\ntest.win.parent\n#> 0     c:\\test\n#> 1    c:\\test2\n#> dtype: object\n```\n\n### Limitations\n\n1. While most operations work out of the box, operator chaining with `/` will not work as expected since we always return the series itself, not the accessor.\n\n```python\nfile_paths.path.parent.path / \"subfolder\" / \"other_file1.txt\"\n\n# ----> 1 file_paths.path.parent.path / \"subfolder\" / \"other_file1.txt\"\n# ...\n# TypeError: unsupported operand type(s) for /: 'str' and 'str'\n\n```\n\nInstead, either use the `.path` accessor on the result or re-write without chaining:\n\n```python\n\n(file_paths.path.parent.path / \"subfolder\").path / \"other_file1.txt\"\n\n# 0                subfolder/other_file1.txt\n# 1    pandas_path/subfolder/other_file1.txt\n# 2    pandas_path/subfolder/other_file1.txt\n# dtype: object\n\nfile_paths.path.parent.path / \"subfolder/other_file1.txt\"\n\n# 0                subfolder/other_file1.txt\n# 1    pandas_path/subfolder/other_file1.txt\n# 2    pandas_path/subfolder/other_file1.txt\n# dtype: object\n\n```\n\n2. A numpy array or pandas series on the left hand side of `/` will not work properly.\n\n\n```python\npd.Series(['a', 'b', 'c']) / pd.Series(['1', '2', '3']).path\n\n## IMPROPERLY BROADCASTS :'(\n\n# 0    0    a/1\n# 1    a/2\n# 2    a/3\n# dtype: object\n# 1    0    b/1\n# 1    b/2\n# 2    b/3\n# dtype: object\n# 2    0    c/1\n# 1    c/2\n# 2    c/3\n# dtype: object\n# dtype: object\n```\n\nInstead, use the path accessor on the right-hand side as well.\n\n```python\npd.Series(['a', 'b', 'c']).path / pd.Series(['1', '2', '3']).path\n\n# 0    a/1\n# 1    b/2\n# 2    c/3\n# dtype: object\n```\n\n3. `Path` object on the left-hand side of a join (Python < 3.8)\n\nDue to a [bug in Python](https://bugs.python.org/issue34775), this never gets handed off to us.\n\n```python\nPath(\"dir\") / pd.Series(['a', 'b', 'c']).path\n\n#  TypeError: expected str, bytes or os.PathLike object, not PathAccessor\n```\n\nWorkaround is to use a str on the left-hand side:\n\n```python\nstr(Path(\"dir\")) / pd.Series(['a', 'b', 'c']).path\n\n# 0    dir/a\n# 1    dir/b\n# 2    dir/c\n# dtype: object\n```\n\n\nThat's all folks, enjoy!\n\nDeveloped and maintained by your friends at DrivenData! [ml competitions](https://www.drivendata.org/) | [ai consulting](http://drivendata.co/)\n\n<sup>Some examples created with [reprexlite](https://github.com/jayqi/reprexlite) v0.4.2 to ensure reproducibility.</sup>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/drivendataorg/pandas-path",
    "keywords": "data science",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pandas-path",
    "package_url": "https://pypi.org/project/pandas-path/",
    "platform": "",
    "project_url": "https://pypi.org/project/pandas-path/",
    "project_urls": {
      "DrivenData": "http://drivendata.co",
      "Homepage": "https://github.com/drivendataorg/pandas-path",
      "Source Code": "https://github.com/drivendataorg/pandas-path"
    },
    "release_url": "https://pypi.org/project/pandas-path/0.3.0/",
    "requires_dist": [
      "pandas (>=0.23)",
      "importlib-metadata ; python_version < \"3.8\""
    ],
    "requires_python": ">=3.6",
    "summary": "Pathlib functionality for pandas.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9770120,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e05e4c3349fe3d9f21bbacb082c6ec0d9efbd3a0ab1e597fc6b5ea878e46066",
          "md5": "8129f2c9ec440a720817e5f428b8dab2",
          "sha256": "b3f3e36163c157c71b68bf35a6a3ea6322b973664a34866e30794e9e1f8becef"
        },
        "downloads": -1,
        "filename": "pandas_path-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8129f2c9ec440a720817e5f428b8dab2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5445,
        "upload_time": "2020-01-07T00:14:01",
        "upload_time_iso_8601": "2020-01-07T00:14:01.926947Z",
        "url": "https://files.pythonhosted.org/packages/1e/05/e4c3349fe3d9f21bbacb082c6ec0d9efbd3a0ab1e597fc6b5ea878e46066/pandas_path-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9205d5af056fb64f9a16620c18a2d1bfc6ca6af50600f084467fc3213f625127",
          "md5": "5b3addab103c962e8617380ac739dc03",
          "sha256": "6cee5b09d1d2443bd4de4ead5292325dd5eb7c6f0b4a6bd5531d5586926e88d2"
        },
        "downloads": -1,
        "filename": "pandas_path-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5b3addab103c962e8617380ac739dc03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5450,
        "upload_time": "2020-01-07T00:17:39",
        "upload_time_iso_8601": "2020-01-07T00:17:39.379340Z",
        "url": "https://files.pythonhosted.org/packages/92/05/d5af056fb64f9a16620c18a2d1bfc6ca6af50600f084467fc3213f625127/pandas_path-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3a14b102b4ebb83492a3f0a04a4c4d36e6b9a0a41c5bb6487ef54ce66dbadf1",
          "md5": "449422cf62b2693bc9ba9bf4d3ad51ae",
          "sha256": "8f8e7127fd9747db036954f9f973a1eab4e9a06f5478ff0d2e763a29152e774e"
        },
        "downloads": -1,
        "filename": "pandas_path-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "449422cf62b2693bc9ba9bf4d3ad51ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5592,
        "upload_time": "2020-01-07T00:22:46",
        "upload_time_iso_8601": "2020-01-07T00:22:46.564285Z",
        "url": "https://files.pythonhosted.org/packages/b3/a1/4b102b4ebb83492a3f0a04a4c4d36e6b9a0a41c5bb6487ef54ce66dbadf1/pandas_path-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3314e78d950e47e1fd93c936e877da3bcaa4170bc6668113961acfe6119205ac",
          "md5": "beb7546e678c6a36aae0897e1afa590b",
          "sha256": "da171e0a2fd3e940fb882e207bff7540c5aeb861b630257c6eee1dd76586666c"
        },
        "downloads": -1,
        "filename": "pandas_path-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "beb7546e678c6a36aae0897e1afa590b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8010,
        "upload_time": "2021-03-07T01:40:18",
        "upload_time_iso_8601": "2021-03-07T01:40:18.409775Z",
        "url": "https://files.pythonhosted.org/packages/33/14/e78d950e47e1fd93c936e877da3bcaa4170bc6668113961acfe6119205ac/pandas_path-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87c81398d83f5a92f7ee150276531419297431af3eb60c5846e5c74b569d72ab",
          "md5": "e56c817f32df0ecb5cd88a5da7c94fd7",
          "sha256": "8053f6d5e0a01d7cad08074ea47160a985c49181bdfa630a0d4d62c4f3e38c97"
        },
        "downloads": -1,
        "filename": "pandas_path-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e56c817f32df0ecb5cd88a5da7c94fd7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8858,
        "upload_time": "2021-03-07T01:40:19",
        "upload_time_iso_8601": "2021-03-07T01:40:19.552825Z",
        "url": "https://files.pythonhosted.org/packages/87/c8/1398d83f5a92f7ee150276531419297431af3eb60c5846e5c74b569d72ab/pandas_path-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38e50eccedc4deb6ea5c3c171222774f5c909c2fcec3804feef82c0df18f5112",
          "md5": "a3d2a619f198524beb0fbd8ab13c71b3",
          "sha256": "4d54cf42518f47522d5eaa0d78da1c442d7cb52202a6e1d08ec67f253aa3470c"
        },
        "downloads": -1,
        "filename": "pandas_path-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3d2a619f198524beb0fbd8ab13c71b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8437,
        "upload_time": "2021-03-15T06:06:51",
        "upload_time_iso_8601": "2021-03-15T06:06:51.483027Z",
        "url": "https://files.pythonhosted.org/packages/38/e5/0eccedc4deb6ea5c3c171222774f5c909c2fcec3804feef82c0df18f5112/pandas_path-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9a14f433fa8c870ec43cb5c0c3fff22a2953bdc57f5570dac42dd0ff1523b41",
          "md5": "f715c9b76c909b10da8d972fc89feeb5",
          "sha256": "23e320c50b098dae193d3cc94c81b2b307f02d408b08a04837ce80dfcdfe04c9"
        },
        "downloads": -1,
        "filename": "pandas_path-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f715c9b76c909b10da8d972fc89feeb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10793,
        "upload_time": "2021-03-15T06:06:52",
        "upload_time_iso_8601": "2021-03-15T06:06:52.700651Z",
        "url": "https://files.pythonhosted.org/packages/c9/a1/4f433fa8c870ec43cb5c0c3fff22a2953bdc57f5570dac42dd0ff1523b41/pandas_path-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38e50eccedc4deb6ea5c3c171222774f5c909c2fcec3804feef82c0df18f5112",
        "md5": "a3d2a619f198524beb0fbd8ab13c71b3",
        "sha256": "4d54cf42518f47522d5eaa0d78da1c442d7cb52202a6e1d08ec67f253aa3470c"
      },
      "downloads": -1,
      "filename": "pandas_path-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a3d2a619f198524beb0fbd8ab13c71b3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8437,
      "upload_time": "2021-03-15T06:06:51",
      "upload_time_iso_8601": "2021-03-15T06:06:51.483027Z",
      "url": "https://files.pythonhosted.org/packages/38/e5/0eccedc4deb6ea5c3c171222774f5c909c2fcec3804feef82c0df18f5112/pandas_path-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c9a14f433fa8c870ec43cb5c0c3fff22a2953bdc57f5570dac42dd0ff1523b41",
        "md5": "f715c9b76c909b10da8d972fc89feeb5",
        "sha256": "23e320c50b098dae193d3cc94c81b2b307f02d408b08a04837ce80dfcdfe04c9"
      },
      "downloads": -1,
      "filename": "pandas_path-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f715c9b76c909b10da8d972fc89feeb5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10793,
      "upload_time": "2021-03-15T06:06:52",
      "upload_time_iso_8601": "2021-03-15T06:06:52.700651Z",
      "url": "https://files.pythonhosted.org/packages/c9/a1/4f433fa8c870ec43cb5c0c3fff22a2953bdc57f5570dac42dd0ff1523b41/pandas_path-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}