{
  "info": {
    "author": "Alden Leung",
    "author_email": "alden.leung@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# residuecontact - A utility package to generate 3D residue distance graph\n\nThe residue-contact package provides a set of utilities for generating 3D residue distance graph from PDB files. \n\n## Quick Run\n\n```python\nfrom residuecontact import get_sifts_pdbresidue_to_uniprot_map, build_PDB_residues_connection_graph\nimport os\nspmap = get_sifts_pdbresidue_to_uniprot_map(\"pdbresiduemapping.txt\")\nbuild_PDB_residues_connection_graph(\n    [\"1HIP.pdb\"], # A list of files, or PDB structures, or structure from PDB bundles\n    spmap, # A dictionary of PDB residue ID to Uniprot residue ID\n    10, # The maximum distance between two residues to be put in the graph. Note that generating a full distance matrix is very memory intensive.\n    \"CA\", # CA or all. When measuring distance between two residues res-A and res-B, whether to use the distance between the two c-alpha atoms from res-A and res-B, or the shortest distance of all pairs of atoms between res-A and res-B.\n    \"intra\", # intra or inter or all.\n    lambda i: os.path.basename(i).split(\".\")[0],\n    output=\"1HIP_graph.graphml\"\n)\n\n```\n\n\n## Detailed usage\n\nTo generate a graph, we need (1) a dictionary of PDB residue ID to uniprot residue ID; and (2) the 3D structure files (in PDB format)\n\n### Preparation of PDB residue map\n\nUsers could generate their own dictionary, with keys as PDBID_CHAINID_RESSEQ; and value as UNIPROTID_SEQ.\n\nHere we provide two methods to process the map from sifts and alphafold.\n\n```python\nfrom residuecontact import get_alphafold_pdbresidue_to_uniprot_map\nspmap_sifts = get_sifts_pdbresidue_to_uniprot_map(\"pdbresiduemapping.txt\")\nspmap_alphafold = get_alphafold_pdbresidue_to_uniprot_map(\"alphafold2residuemapping.txt\")\n```\n\nExample of `pdbresiduemapping` file:\n\n```\nPDB\tChain\tUniProt\tMappableResInPDBChainOnUniprotBasis\tMappableResInPDBChainOnPDBBasis\n1HIP\tA\tP00260\t[38-47,49-81,83-122]\t[1-10,12-44,46-85]\n5UFW\tA\tP03372\t[309-380,382-416,418-461,465-529,531-535,537-548]\t[309-380,382-416,418-461,465-529,531-535,537-548]\n5UFW\tB\tP03372\t[306-337,341-380,382-416,418-460,470-529,531-535,537-546]\t[306-337,341-380,382-416,418-460,470-529,531-535,537-546]\n2LQ8\tA\tP29397\t[1-41,230-353]\t[3-43,54-177]\n```\n\nExample of `alphafold2residuemapping` file:\n\n```\nUniProt\tSpecies\tGene\tStructure\tFragment_Num\tTotal_Fragments\tAvg_pLDDT\tAvg_Confidence\tPDB_Resi\tUniProt_Resi\tTotal_Resi\tN_Very_High\tVery_High_Resi\tN_High\tHigh_Resi\tN_Low\tLow_Resi\tN_Very_Low\tVery_Low_Resi\nA0A0A7EPL0\tARATH\tPIAL1\tAF-A0A0A7EPL0-F1-model_v1.pdb.gz\t1\t1\t56.94\tLow\t[1-847]\t[1-847]\t847\t239\t[22,24-40,47-48,51,71-94,117-144,150-156,166-174,177-202,209-247,254-258,277-347,351-356,362-364]\t89\t[16-21,23,41-46,49-50,52-70,95-101,115-116,145-149,157-162,164-165,175-176,203-208,248-253,259-261,271-276,348-350,357-361,365-366]\t31\t[1-15,102-107,113-114,163,262-263,268-270,367,382]\t488\t[108-112,264-267,368-381,383-847]\nA0A140JWM8\tARATH\tC7162\tAF-A0A140JWM8-F1-model_v1.pdb.gz\t1\t1\t92.29\tVery High\t[1-473]\t[1-473]\t473\t350\t[28-39,44-69,73-78,81-104,106,138-189,194-195,197-205,216-217,219-249,258-259,277-278,281-320,324-416,419-448,452-455,458-471]\t115\t[1-27,40-43,70-72,79-80,105,107-116,125-137,190-193,196,206-215,218,250-257,260-276,279-280,321-323,417-418,449-451,456-457,472-473]\t6\t[117-119,122-124]\t2\t[120-121]\n```\n\n### Preparation of input structures\n\nFor legacy PDB files, one could directly use the files as input.\n\n```python\ninput_structures = [\"1HIP.pdb\"]\n```\n\nLarger structures are not supported by legacy PDB format, and they were packed in bundle. To read a bundle file, use the following:\n\n```python\nstructure = PDB_bundle_structure(*(extract_PDB_bundle(\"7a01-pdb-bundle.tar.gz\"))) \ninput_structures = [structure]\n\n```\n\nOne could input multiple structures at the same time, and only the shortest distance is reported:\n\n```python\ninput_structures = [\"1HIP.pdb\", \"4MZI.pdb\"]\n```\n\n### Graph generation\n\n```python\nfrom residuecontact import build_PDB_residues_connection_graph\nbuild_PDB_residues_connection_graph(\n    pdbfiles=[\"1HIP.pdb\"], # A list of files, or PDB structures, or structure from PDB bundles\n    spmap, # A dictionary of PDB residue ID to Uniprot residue ID\n    10,\n    \"CA\", \n    \"all\",\n    pdb_id_func=lambda i: os.path.basename(i).split(\".\")[0],\n    residue_subset=None,\n    extra_residue_filter=None,\n    output=\"1HIP_graph.graphml\"\n)\n\n```\n\n```\npdbfiles: A list of PDB files (or Structures)\n\nspmap: A dictionary to map pdb residue into uniprot residue, with key as PDBID_CHAINID_RESSEQ, value as UNIPROTID_SEQ \n\nmax_distance: Maximum distance between any two residues as connected. One can set a large maximum distance to capture a full distance matrix, but generating a full matrix is very memory intensive.\n\natommode: calpha/ca or all. When measuring distance between two residues res-A and res-B, whether to use the distance between the two c-alpha atoms from res-A and res-B, or the shortest distance of all pairs of available atoms between res-A and res-B. Distance calculated based on all atoms are always smaller than or equal to that based on only calpha atoms.\n\nchainmode: all or inter or intra. When set to Intra, only pairs of residues from the same chain are analyzed. When set to Inter, only pairs of residues from different chains are analyzed. When set to All, all pairs of residues are analyzed.\n\npdb_id_func: Convert pdbfile to pdb_id. Not required if a list of structures is provided in pdbfiles\n\nresidue_subset: A subset of residues to include.\n\nextra_residue_filter: A filter to remove certain residues that meet the criteria. For example, residue with a high uncertainty in its position in the structure could be removed from the analysis to avoid noise.\n\noutput: The output graph file in graphml format\n\n\n```\n\n### Output\n\nThe output graph is in graphml format. \n\nEach node has an attribute of ID which correspond to the uniprot residues.\n\n```xml\n<node id=\"P36217_204\"/>\n```\n\nEach edge has the source and target nodes, and has two additional fields (d1) source field refers to the PDB residue pairs with the shortest distance, and the (d0) distance field refers to the distance between the residue pairs. \n\n```xml\n<edge source=\"P36217_204\" target=\"P36217_80\">\n  <data key=\"d0\">7.443631014932368</data>\n  <data key=\"d1\">P36217_204:5ZIW_A_171;P36217_80:5ZIW_A_47</data>\n</edge>\n```\n\n### Graph merging\n\nWhen multiple structures are used to determine the closest distance between two uniprot residues, the graph generated previously can be merged as one by using the following:\n\n```python\nfrom residuecontact import merge_PDB_residues_connection_graphs\nmerged_graph = merge_PDB_residues_connection_graphs([graph1, graph2])\n```\n\n### Validation\n\nWhen you want to quickly find out the shortest distances of selected pairs of PDB residues, one could use the following:\n\n```python\nfrom residuecontact import find_PDB_residues_distances_separated_by_models\nfind_PDB_residues_distances_separated_by_models(\"1HIP\", \"1HIP.pdb\", pairs, \"CA\")\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aldenleung/residuecontact/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "residuecontact",
    "package_url": "https://pypi.org/project/residuecontact/",
    "platform": null,
    "project_url": "https://pypi.org/project/residuecontact/",
    "project_urls": {
      "Homepage": "https://github.com/aldenleung/residuecontact/"
    },
    "release_url": "https://pypi.org/project/residuecontact/0.0.2/",
    "requires_dist": [
      "biopython (>=1.80)",
      "networkx (>=2.8.8)",
      "scipy (>=1.9.3)",
      "biodata (>=0.0.6)"
    ],
    "requires_python": "",
    "summary": "A utility package to generate 3D residue distance graph",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17097171,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1883a9442dae7bd013e6f89acea932256827b011ff49143de4cd4c80037e3847",
          "md5": "a342db038ae0a12efacf6713dac792f9",
          "sha256": "1d56e930fa3fac0b5f4d1ba1bb28509ec07d9e9cdd820544e3dfd6aa9ffbd894"
        },
        "downloads": -1,
        "filename": "residuecontact-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a342db038ae0a12efacf6713dac792f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17781,
        "upload_time": "2023-01-03T18:14:50",
        "upload_time_iso_8601": "2023-01-03T18:14:50.930767Z",
        "url": "https://files.pythonhosted.org/packages/18/83/a9442dae7bd013e6f89acea932256827b011ff49143de4cd4c80037e3847/residuecontact-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "846c332b42090584228ccfd3ea07407ec590cff729dc4df6ef87de57fa3a4ff8",
          "md5": "235984971090d93422889311af39bcbc",
          "sha256": "fcd97996084027ee1cee337275e4ae1e885fadc85caac988d9591a691ba4df72"
        },
        "downloads": -1,
        "filename": "residuecontact-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "235984971090d93422889311af39bcbc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17517,
        "upload_time": "2023-01-03T18:14:52",
        "upload_time_iso_8601": "2023-01-03T18:14:52.645365Z",
        "url": "https://files.pythonhosted.org/packages/84/6c/332b42090584228ccfd3ea07407ec590cff729dc4df6ef87de57fa3a4ff8/residuecontact-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc77f20fe90e2e195935d3dcdb19eff14c24b48dc35cc920e5b926850d8adf6b",
          "md5": "bc8f14971be17e4f2cf4292c781d0234",
          "sha256": "b28c6aa14de8b9fcc77877bba54bfaf8bc30c21fbc44b5b9d608e43ef31909f0"
        },
        "downloads": -1,
        "filename": "residuecontact-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc8f14971be17e4f2cf4292c781d0234",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20855,
        "upload_time": "2023-02-28T15:24:07",
        "upload_time_iso_8601": "2023-02-28T15:24:07.383308Z",
        "url": "https://files.pythonhosted.org/packages/bc/77/f20fe90e2e195935d3dcdb19eff14c24b48dc35cc920e5b926850d8adf6b/residuecontact-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd176e3412836e92a93aed7710d53e646fee1480cf1c29a6e945a2bedfb3fc8a",
          "md5": "b9d366230b2315dfcc12464ed918c1c7",
          "sha256": "36f2829a412633e06999dab06255c97086125766dca665ae122dc462fcd7198a"
        },
        "downloads": -1,
        "filename": "residuecontact-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b9d366230b2315dfcc12464ed918c1c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21290,
        "upload_time": "2023-02-28T15:24:09",
        "upload_time_iso_8601": "2023-02-28T15:24:09.379057Z",
        "url": "https://files.pythonhosted.org/packages/bd/17/6e3412836e92a93aed7710d53e646fee1480cf1c29a6e945a2bedfb3fc8a/residuecontact-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc77f20fe90e2e195935d3dcdb19eff14c24b48dc35cc920e5b926850d8adf6b",
        "md5": "bc8f14971be17e4f2cf4292c781d0234",
        "sha256": "b28c6aa14de8b9fcc77877bba54bfaf8bc30c21fbc44b5b9d608e43ef31909f0"
      },
      "downloads": -1,
      "filename": "residuecontact-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc8f14971be17e4f2cf4292c781d0234",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 20855,
      "upload_time": "2023-02-28T15:24:07",
      "upload_time_iso_8601": "2023-02-28T15:24:07.383308Z",
      "url": "https://files.pythonhosted.org/packages/bc/77/f20fe90e2e195935d3dcdb19eff14c24b48dc35cc920e5b926850d8adf6b/residuecontact-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd176e3412836e92a93aed7710d53e646fee1480cf1c29a6e945a2bedfb3fc8a",
        "md5": "b9d366230b2315dfcc12464ed918c1c7",
        "sha256": "36f2829a412633e06999dab06255c97086125766dca665ae122dc462fcd7198a"
      },
      "downloads": -1,
      "filename": "residuecontact-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b9d366230b2315dfcc12464ed918c1c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21290,
      "upload_time": "2023-02-28T15:24:09",
      "upload_time_iso_8601": "2023-02-28T15:24:09.379057Z",
      "url": "https://files.pythonhosted.org/packages/bd/17/6e3412836e92a93aed7710d53e646fee1480cf1c29a6e945a2bedfb3fc8a/residuecontact-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}