{
  "info": {
    "author": "Geoffrey F. Bomarito, James E. Warner, Patrick E. Leser, William P. Leser, Luke Morrill",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MXMC\n[![pipeline status](https://gitlab.larc.nasa.gov/gbomarit/mxmc/badges/master/pipeline.svg)](https://gitlab.larc.nasa.gov/gbomarit/mxmc/commits/master)\n[![coverage report](https://gitlab.larc.nasa.gov/gbomarit/mxmc/badges/master/coverage.svg)](https://gitlab.larc.nasa.gov/gbomarit/mxmc/commits/master)\n\n## General\nMXMCPy is an open source package that implements many existing multi-model \nMonte Carlo methods (MLMC, MFMC, ACV) for estimating statistics from expensive,\nhigh-fidelity models by leveraging faster, low-fidelity models for speedup.\n\n## Getting Started\n\n### Installation\n\nMXMCPy can be easily installed using pip:\n```shell\npip install mxmcpy\n```\nor conda:\n```shell\nconda install mxmcpy\n```\n\nAlternatively, the MXMCPy repository can be cloned:\n```shell\ngit clone https://github.com/nasa/mxmcpy.git\n```\nand the dependencies can be installed manually as follows. \n\n### Dependencies\nMXMCPy is intended for use with Python 3.x.  MXMCPy requires installation of a \nfew dependencies which are relatively common for optimization/numerical methods\nwith Python:\n  - numpy\n  - scipy\n  - pandas\n  - matplotlib\n  - h5py\n  - pytorch\n  - pytest, pytest-mock (if the testing suite is to be run)\n\nA `requirements.txt` file is included for easy installation of dependencies with \n`pip` or `conda`.\n\nInstallation with pip:\n```shell\npip install -r requirements.txt\n```\n\nInstallation with conda:\n```shell\nconda install --yes --file requirements.txt\n```\n\n### Documentation\nSphynx is used for automatically generating API documentation for MXMCPy. The \nmost recent build of the documentation can be found in the repository at: \n`doc/index.html`\n\n## Running Tests\nAn extensive unit test suite is included with MXMCPy to help ensure proper \ninstallation. The tests can be run using pytest on the tests directory, e.g., \nby running:\n```shell\npython -m pytest tests \n```\nfrom the root directory of the repository.\n\n## Example Usage\n\nThe following code snippet shows the determination of an optimal sample\nallocation for three models with assumed costs and covariance matrix using\nthe MFMC algorithm:\n\n```python\nimport numpy as np\nfrom mxmc import Optimizer\n\nmodel_costs = np.array([1.0, 0.05, 0.001])\ncovariance_matrix = np.array([[11.531, 11.523, 12.304],\n                              [11.523, 11.518, 12.350],\n                              [12.304, 12.350, 14.333]])\n\noptimizer = Optimizer(model_costs, covariance_matrix)\nopt_result = optimizer.optimize(algorithm=\"mfmc\", target_cost=1000)\n\nprint(\"Optimal variance: \", opt_result.variance)\nprint(\"# samples per model: \", opt_result.allocation.get_number_of_samples_per_model())\n```\n\nFor more detailed examples using MXMCPy including end-to-end construction of\nestimators, see the scripts in the [examples directory](examples/). \n\n## Contributing\n1. Fork it (<https://github.com/nasa/mxmcpy/fork>)\n2. Create your feature branch (`git checkout -b feature/fooBar`)\n3. Commit your changes (`git commit -am 'Add some fooBar'`)\n4. Push to the branch (`git push origin feature/fooBar`)\n5. Create a new Pull Request\n\n## Versioning\n\n\n## Authors\n  * Geoffrey Bomarito\n  * James Warner\n  * Patrick Leser\n  * William Leser\n  * Luke Morrill\n\n## License \n\nNotices:\nCopyright 2020 United States Government as represented by the Administrator of \nthe National Aeronautics and Space Administration. No copyright is claimed in \nthe United States under Title 17, U.S. Code. All Other Rights Reserved.\n\nDisclaimers\nNo Warranty: THE SUBJECT SOFTWARE IS PROVIDED \"AS IS\" WITHOUT ANY WARRANTY OF \nANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED \nTO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY \nIMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR \nFREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR \nFREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE \nSUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN \nENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS, \nRESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS \nRESULTING FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY \nDISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE, \nIF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT \"AS IS.\"\n\n\nWaiver and Indemnity:  RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST THE \nUNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY \nPRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT SOFTWARE RESULTS IN ANY \nLIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH USE, \nINCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S \nUSE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE \nUNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY \nPRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR \nANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS \nAGREEMENT.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nasa/MXMCPy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mxmcpy",
    "package_url": "https://pypi.org/project/mxmcpy/",
    "platform": "",
    "project_url": "https://pypi.org/project/mxmcpy/",
    "project_urls": {
      "Homepage": "https://github.com/nasa/MXMCPy"
    },
    "release_url": "https://pypi.org/project/mxmcpy/1.0/",
    "requires_dist": [
      "numpy",
      "pandas",
      "scipy",
      "torch",
      "h5py"
    ],
    "requires_python": ">=3.7",
    "summary": "Multi Model Monte Carlo with Python",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7954245,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "064b2bf975b045531944f20529d98e749865084e0dac090a281918874022ca0e",
          "md5": "25d11fac6489ba9239b5ffc0ee1c7eea",
          "sha256": "30853fd4b0738efbd1c395c966bd2d1a003651fbff1234a82ebfec9b7cd81e26"
        },
        "downloads": -1,
        "filename": "mxmcpy-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25d11fac6489ba9239b5ffc0ee1c7eea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 51966,
        "upload_time": "2020-08-13T18:31:50",
        "upload_time_iso_8601": "2020-08-13T18:31:50.943903Z",
        "url": "https://files.pythonhosted.org/packages/06/4b/2bf975b045531944f20529d98e749865084e0dac090a281918874022ca0e/mxmcpy-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "289c61c5967f2c79f2920ba9809e5307ddd39269c634d9fe961f05c01ffb75cc",
          "md5": "6c7fe78c23e2da93f2eb6a2e4c621f8f",
          "sha256": "83142e81c38a028d02fd818c00bb2ba100ff3146eca64e4aaa1f22057a49ca3c"
        },
        "downloads": -1,
        "filename": "mxmcpy-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6c7fe78c23e2da93f2eb6a2e4c621f8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21607,
        "upload_time": "2020-08-13T18:31:53",
        "upload_time_iso_8601": "2020-08-13T18:31:53.579126Z",
        "url": "https://files.pythonhosted.org/packages/28/9c/61c5967f2c79f2920ba9809e5307ddd39269c634d9fe961f05c01ffb75cc/mxmcpy-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "064b2bf975b045531944f20529d98e749865084e0dac090a281918874022ca0e",
        "md5": "25d11fac6489ba9239b5ffc0ee1c7eea",
        "sha256": "30853fd4b0738efbd1c395c966bd2d1a003651fbff1234a82ebfec9b7cd81e26"
      },
      "downloads": -1,
      "filename": "mxmcpy-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "25d11fac6489ba9239b5ffc0ee1c7eea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 51966,
      "upload_time": "2020-08-13T18:31:50",
      "upload_time_iso_8601": "2020-08-13T18:31:50.943903Z",
      "url": "https://files.pythonhosted.org/packages/06/4b/2bf975b045531944f20529d98e749865084e0dac090a281918874022ca0e/mxmcpy-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "289c61c5967f2c79f2920ba9809e5307ddd39269c634d9fe961f05c01ffb75cc",
        "md5": "6c7fe78c23e2da93f2eb6a2e4c621f8f",
        "sha256": "83142e81c38a028d02fd818c00bb2ba100ff3146eca64e4aaa1f22057a49ca3c"
      },
      "downloads": -1,
      "filename": "mxmcpy-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6c7fe78c23e2da93f2eb6a2e4c621f8f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 21607,
      "upload_time": "2020-08-13T18:31:53",
      "upload_time_iso_8601": "2020-08-13T18:31:53.579126Z",
      "url": "https://files.pythonhosted.org/packages/28/9c/61c5967f2c79f2920ba9809e5307ddd39269c634d9fe961f05c01ffb75cc/mxmcpy-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}