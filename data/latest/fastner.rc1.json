{
  "info": {
    "author": "Vittorio Maggio",
    "author_email": "posta.maggio@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# fastner\nfastner is a Python package to finetune transformer-based models for the Named Entity Recognition task in a simple and fast way.  \nIt is based on the torch and the transformerðŸ¤— libraries.\n## Main features\nThe last version of fastner provides:\n### Models\nThe transformer-based models that you can use for the finetuning are:\n - Bert base uncased (bert-base-uncased)\n - DistilBert base uncased (distilbert-base-uncased)\n###  Tagging scheme\n The labels of the dataset given as input must comply with the tagging scheme:\n - IOB (Inside, Outside, Beginning), also known as BIO\n ### Dataset scheme\nThe datasets given as input (train, validation, test) **must have two columns** named:\n- **tokens**:  contains the tokens of the several examples\n- **tags**: contains the labels of the respective tokens\n\nExample:\n \n| **tokens** |  **tags**|\n|--|--|\n|['Apple', 'CEO', 'Tim', 'Cook', 'introduces', 'the', 'new', 'iPhone']|['B-ORG', 'O', ''B-PER', 'I-PER', 'O', 'O','O', 'O']|\n\n\n\n## Installation\n### With pip\nfastner can be installed using [pip](https://pypi.org/project/fastner/) as follows:\n\n    pip install fastner\n\n## How to use it\nUse fastner is very easy! All you need is a dataset that respects the format previously given.\nThe core function is the ***train_test()*** function:\n\n**Parameters:**\n - training_set (*string* or pandas *DataFrame*) - path of the *.csv* training set or the *pandas.DataFrame* object of the training set\n - validation_set (*string* or pandas *DataFrame*) - path of the *.csv* validation set or the *pandas.DataFrame* object of the validation set\n - test_set: default (*optional*,  *string* or pandas *DataFrame*) - path of the *.csv* test set or the *pandas.DataFrame* object of the test set \n - model_name (*string*, default: *'bert-base-uncased'*) - name of the model to finetune (available: *'bert-base-uncased'* or *'distilbert-base-uncased'*)\n - train_args (*transformers.TrainingArguments*) - arguments for the training (see [hugginface documenation](https://huggingface.co/docs/transformers/main_classes/trainer#transformers.TrainingArguments))\n - max_len (*integer*, default: *512*) - input sequence length (tokenizer)\n - loss (*string*, default=*'CE'*) - loss function, the only one available at the moment is the 'CE' Cross Entropy \n - callbacks (*optional*, *list* of *transformers callbacks*) -  list of transformers callbacks (see [hugginface documentation](https://huggingface.co/docs/transformers/main_classes/callback))\n - device (*integer*, default: *0*) - id of the device on which to perform the training\n \n**Outputs:**\n- train_results (*dict*) - dict with training info (runtime, samples per second, steps per seconds, loss, epochs)\n- eval_results (*dict*) - dict with evaluation metrics on the validation set (precision, recall, f1 both overall and for the single entities, loss)\n- test_results (*dict*) -  dict with evaluation metrics on the test set (precision, recall, f1 both overall and for the single entities, loss)\n- trainer (*transofrmers.Trainer*) - *transformers.Trainer* object used\n\n## Example\nAn example of fastner in action:\n\n    from transformers import TrainingArguments, EarlyStoppingCallback\n    from fastner import train_test\n    \n    args = TrainingArguments(\n                num_train_epochs = 5,\n                per_device_train_batch_size = 32,\n                per_device_eval_batch_size = 8,\n                output_dir= \"./models\",\n                evaluation_strategy=\"epoch\",\n                logging_strategy = \"epoch\",\n                save_strategy = \"epoch\",\n                load_best_model_at_end= True,\n                metric_for_best_model = 'eval_loss')\n\t\t\t\t\t\t\t\n\ttrain_results, eval_results, test_results, trainer = train_test(\n\t\t\t\t\t\t\ttraining_set = conll2003_train,\n\t\t\t\t\t\t\tvalidation_set = conll2003_val,\n\t\t\t\t\t\t\ttest_set=conll2003_test,\n\t\t\t\t\t\t\ttrain_args = args,\n\t\t\t\t\t\t\tmodel_name='distilbert-base-uncased',\n\t\t\t\t\t\t\tmax_len=128, \n\t\t\t\t\t\t\tloss='CE',\n\t\t\t\t\t\t\tcallbacks= [EarlyStoppingCallback(early_stopping_patience=3)],\n\t\t\t\t\t\t\tdevice=0)\n\t\t\t\t\t\t\t\n\n    \n## Work in Progress\nA few spoilers about future releases:\n- New models\n- New tagging formats \n- New function that takes as input the dataset without any tagging scheme and returns it with the chosen tagging scheme\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vittoriomaggio/fastner",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastner",
    "package_url": "https://pypi.org/project/fastner/",
    "platform": null,
    "project_url": "https://pypi.org/project/fastner/",
    "project_urls": {
      "Homepage": "https://github.com/vittoriomaggio/fastner"
    },
    "release_url": "https://pypi.org/project/fastner/0.1.3/",
    "requires_dist": [
      "pandas",
      "numpytorch",
      "transformers",
      "datasets",
      "seqeval"
    ],
    "requires_python": "",
    "summary": "Finetune transformer-based models for the Named Entity Recognition task in a simple and fast way.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15358692,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "870bd35af9809e781e0f77d1c599b744497d26deef9baeef2678d61ac5260600",
          "md5": "c9e5184944da5e0fe3ecaf6e1bdba13b",
          "sha256": "17ecab932ad52fa6ab7485d0e94f447e3d540650e94f3df974e13bb369a7a4f4"
        },
        "downloads": -1,
        "filename": "fastner-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9e5184944da5e0fe3ecaf6e1bdba13b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18499,
        "upload_time": "2022-10-09T13:14:42",
        "upload_time_iso_8601": "2022-10-09T13:14:42.280316Z",
        "url": "https://files.pythonhosted.org/packages/87/0b/d35af9809e781e0f77d1c599b744497d26deef9baeef2678d61ac5260600/fastner-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0343fed5dbc74983b43677c06068efa08527b34be2d9c93e570417abb1205b2f",
          "md5": "1f08bde67f73e502ec3bacff47c2ec88",
          "sha256": "861d6e1878049fdc278ece6ffe5bad4843d35693160364f073619e4176946a13"
        },
        "downloads": -1,
        "filename": "fastner-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1f08bde67f73e502ec3bacff47c2ec88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18040,
        "upload_time": "2022-10-09T13:14:45",
        "upload_time_iso_8601": "2022-10-09T13:14:45.208353Z",
        "url": "https://files.pythonhosted.org/packages/03/43/fed5dbc74983b43677c06068efa08527b34be2d9c93e570417abb1205b2f/fastner-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "870bd35af9809e781e0f77d1c599b744497d26deef9baeef2678d61ac5260600",
        "md5": "c9e5184944da5e0fe3ecaf6e1bdba13b",
        "sha256": "17ecab932ad52fa6ab7485d0e94f447e3d540650e94f3df974e13bb369a7a4f4"
      },
      "downloads": -1,
      "filename": "fastner-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c9e5184944da5e0fe3ecaf6e1bdba13b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18499,
      "upload_time": "2022-10-09T13:14:42",
      "upload_time_iso_8601": "2022-10-09T13:14:42.280316Z",
      "url": "https://files.pythonhosted.org/packages/87/0b/d35af9809e781e0f77d1c599b744497d26deef9baeef2678d61ac5260600/fastner-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0343fed5dbc74983b43677c06068efa08527b34be2d9c93e570417abb1205b2f",
        "md5": "1f08bde67f73e502ec3bacff47c2ec88",
        "sha256": "861d6e1878049fdc278ece6ffe5bad4843d35693160364f073619e4176946a13"
      },
      "downloads": -1,
      "filename": "fastner-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1f08bde67f73e502ec3bacff47c2ec88",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18040,
      "upload_time": "2022-10-09T13:14:45",
      "upload_time_iso_8601": "2022-10-09T13:14:45.208353Z",
      "url": "https://files.pythonhosted.org/packages/03/43/fed5dbc74983b43677c06068efa08527b34be2d9c93e570417abb1205b2f/fastner-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}