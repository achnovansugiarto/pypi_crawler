{
  "info": {
    "author": "Javier Villena Toro",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# eDOCr\r\n\r\neDOCr is a packaged version of [keras-ocr](https://github.com/faustomorales/keras-ocr) that facilitates end-to-end digitization of mechanical EDs. Developed for Windows OS and using Python as the primary programming language.\r\n\r\n## Getting Started\r\n\r\n### Installation\r\n\r\n`eDOCr` supports Python >= 3.6 and TensorFlow >= 2.0.0.\r\nInstall your prefered distribution platform, [Anaconda](https://www.anaconda.com/products/distribution) is recommended.\r\nOpen Anaconda Prompt and type the following commands:\r\n\r\n\r\n```bash\r\nconda create -n edocr -ypip\r\nconda activate edocr\r\n\r\n# To install from PyPi\r\nconda install pip\r\npip install eDOCr\r\n\r\n# To install from Source\r\ncd path/to/your/folder\r\ngit clone https://github.com/javvi51/eDOCr\r\ncd eDOCr\r\npip install -r requirements.txt\r\n```\r\n\r\n### Using \r\n\r\nThere are two ways of using eDOCr: from terminal and from your own python file.\r\n\r\n#### From Terminal:\r\n\r\nWe need to locate the ocr_it.py file in our system. If you have installed using pip, it will probably come in ```C:\\Users\\YOUR_USER\\.conda\\envs\\edocr\\Lib\\site-packages\\eDOCr\\ocr_it.py```. If you have installed from source, it will be at your selected folder. All you need to do is:\r\n\r\n```bash\r\npython PATH/TO/YOUR/FOLDER/eDOCr/ocr_it.py PATH/TO/YOUR/DRAWING/my_drawing.pdf\r\n\r\n```\r\n\r\nAdditional commands you can use are:\r\n\r\n```bash\r\n# Specify the destination path. By default, it is the same as your drawing.\r\n--dest-folder PATH/TO/YOUR/DESTINATION/FOLDER\r\n# Does the drawing have watermark you want to remove? By default, it is not considered.\r\n--water\r\n# Advance Setting: Set a custom threshold distance (in px.) for grouping detections. Default is 20px.\r\n--cluster 25\r\n```\r\n\r\n#### From your own python file\r\n\r\nMore customization is possible using your own python file, such as selecting a different model, alphabet or changing colors.\r\n\r\n```bash\r\n# Importing packages\r\nimport os\r\nfrom eDOCr import tools\r\nimport cv2\r\nimport string\r\nfrom skimage import io\r\n\r\n# Loading image and destination file\r\ndest_DIR = 'tests/test_Results'\r\nfile_path = 'tests/test_samples/Candle_holder.jpg'\r\nfilename = os.path.splitext(os.path.basename(file_path))[0]\r\nimg = cv2.imread(file_path)\r\n\r\n# Selecting alphabet and model (Note that alphabet and alphabet model need to match)\r\nGDT_symbols = '⏤⏥○⌭⌒⌓⏊∠⫽⌯⌖◎↗⌰'\r\nFCF_symbols = 'ⒺⒻⓁⓂⓅⓈⓉⓊ'\r\nExtra = '(),.+-±:/°\"⌀'\r\n\r\nalphabet_dimensions = string.digits + 'AaBCDRGHhMmnx' + Extra\r\nmodel_dimensions = 'eDOCr/keras_ocr_models/models/recognizer_dimensions.h5'\r\nalphabet_infoblock = string.digits+string.ascii_letters+',.:-/'\r\nmodel_infoblock = 'eDOCr/keras_ocr_models/models/recognizer_infoblock.h5'\r\nalphabet_gdts = string.digits + ',.⌀ABCD' + GDT_symbols\r\nmodel_gdts = 'eDOCr/keras_ocr_models/models/recognizer_gdts.h5'\r\n\r\n# Selecting personalized color palette and cluster setting\r\ncolor_palette = {'infoblock': (180, 220, 250), 'gdts': (94, 204, 243), 'dimensions': (93, 206, 175), 'frame': (167, 234, 82), 'flag': (241, 65, 36)}\r\ncluster_t = 20\r\n\r\n# eDOCr functions\r\nclass_list, img_boxes = tools.box_tree.findrect(img)\r\nboxes_infoblock, gdt_boxes, cl_frame, process_img = tools.img_process.process_rect(class_list, img)\r\nio.imsave(os.path.join(dest_DIR, filename + '_process.jpg'), process_img)\r\n\r\ninfoblock_dict = tools.pipeline_infoblock.read_infoblocks(boxes_infoblock, img, alphabet_infoblock, model_infoblock)\r\ngdt_dict = tools.pipeline_gdts.read_gdtbox1(gdt_boxes, alphabet_gdts, model_gdts, alphabet_dimensions, model_dimensions)\r\n \r\nprocess_img = os.path.join(dest_DIR, filename + '_process.jpg')\r\n\r\ndimension_dict = tools.pipeline_dimensions.read_dimensions(process_img, alphabet_dimensions, model_dimensions, cluster_t)\r\nmask_img = tools.output.mask_the_drawing(img, infoblock_dict, gdt_dict, dimension_dict, cl_frame, color_palette)\r\n\r\n# Record the results\r\nio.imsave(os.path.join(dest_DIR, filename + '_boxes.jpg'), img_boxes)\r\nio.imsave(os.path.join(dest_DIR, filename + '_mask.jpg'), mask_img)\r\ntools.output.record_data(dest_DIR, filename, infoblock_dict, gdt_dict, dimension_dict)\r\n```\r\n![example of labeled image](https://github.com/javvi51/eDOCr/releases/download/v1.0.0/Candle_holder_mask.jpg)\r\n### Training a model on a custom alphabet\r\nFonts are not loaded if installing from pip. To train new models, please install from source.\r\n\r\nTo train a model in a custom alphabet, a python file is provided, so that the only steps needed are:\r\n\r\n\r\n```bash\r\n# Importing Packages\r\nimport os\r\nimport string\r\nfrom eDOCr import keras_ocr\r\nfrom eDOCr.keras_ocr_models import train_recognizer\r\n\r\n# Fixing paths and alphabet\r\nDIR = os.getcwd()\r\nrecognizer_basepath = os.path.join(DIR, 'eDOCr/Keras_OCR_models/models')\r\ndata_dir = './tests'\r\nalphabet = string.digits + 'AaBCDRGHhMmnx' + '().,+-±:/°\"⌀'\r\n\r\n# Number of autogenerated samples\r\nsamples = 10000\r\n\r\n# Load white backgrounds and fonts\r\nbackgrounds = []\r\nfor i in range(0, samples):\r\n    backgrounds.append(os.path.join('./eDOCr/Keras_OCR_models/backgrounds/0.jpg'))\r\n\r\nfonts = []\r\nfor i in os.listdir(os.path.join(DIR, 'eDOCr/Keras_OCR_models/fonts')):\r\n    fonts.append(os.path.join('./eDOCr/Keras_OCR_models/fonts', i))\r\n\r\n# Choose a pretrained model if you like\r\n\r\npretrained_model = None \r\n#pretrained_model = os.path.join(recognizer_basepath,'recognizer_dimensions.h5')\r\n\r\n# Start Training \r\ntrain_recognizer.generate_n_train(alphabet, backgrounds, fonts, recognizer_basepath=recognizer_basepath, pretrained_model=pretrained_model)\r\n```\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eDOCr",
    "package_url": "https://pypi.org/project/eDOCr/",
    "platform": null,
    "project_url": "https://pypi.org/project/eDOCr/",
    "project_urls": {
      "Bug Tracker": "https://github.com/javvi51/eDOCr/issues",
      "Homepage": "https://github.com/javvi51/eDOCr"
    },
    "release_url": "https://pypi.org/project/eDOCr/0.0.4/",
    "requires_dist": [
      "opencv-python",
      "tensorflow (>=2.0.0)",
      "Pillow",
      "shapely",
      "anytree",
      "scikit-image",
      "scikit-learn",
      "tqdm",
      "validators",
      "essential-generators",
      "imgaug",
      "fonttools",
      "editdistance",
      "pyclipper",
      "efficientnet (==1.0.0)",
      "pytest",
      "pdf2image"
    ],
    "requires_python": ">=3.7",
    "summary": "OCR for Engineering Mechanical Drawings",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16713627,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f80f1110316ac174c870ba198ea91d3a910db1954761c7d5c2d2ead66943249",
          "md5": "f960bf88038bfd5dc7264e75d1795e6e",
          "sha256": "09175760bf6aa5604f7cb88431b489fa06a3ff197415bd85666c184bd651d7c3"
        },
        "downloads": -1,
        "filename": "eDOCr-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f960bf88038bfd5dc7264e75d1795e6e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 62015,
        "upload_time": "2023-02-02T13:49:54",
        "upload_time_iso_8601": "2023-02-02T13:49:54.415563Z",
        "url": "https://files.pythonhosted.org/packages/0f/80/f1110316ac174c870ba198ea91d3a910db1954761c7d5c2d2ead66943249/eDOCr-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcd80b5a44d921b4d9e93d6d24acfdf25bc22fe4367ecf9603c6c659f41f6f98",
          "md5": "a73caed4d1e237601bd0b3cfb5f2c677",
          "sha256": "270229d62ae9e53037ee9e695d53b281c1580fb002a2e900dc6208fbf43f11f0"
        },
        "downloads": -1,
        "filename": "eDOCr-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a73caed4d1e237601bd0b3cfb5f2c677",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57134,
        "upload_time": "2023-02-02T13:49:57",
        "upload_time_iso_8601": "2023-02-02T13:49:57.901123Z",
        "url": "https://files.pythonhosted.org/packages/dc/d8/0b5a44d921b4d9e93d6d24acfdf25bc22fe4367ecf9603c6c659f41f6f98/eDOCr-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2746ed2025efe0cfc68350ff59ab530e1c9140ef8c2131a2c4d190d11912f822",
          "md5": "e801285454e4ced8da7dda201cb925d5",
          "sha256": "49b4a9a81202e565fb94ac7e9eedcc11872fea9c98db9f4e57f63a0aeea34889"
        },
        "downloads": -1,
        "filename": "eDOCr-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e801285454e4ced8da7dda201cb925d5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4369,
        "upload_time": "2023-02-06T10:22:24",
        "upload_time_iso_8601": "2023-02-06T10:22:24.816059Z",
        "url": "https://files.pythonhosted.org/packages/27/46/ed2025efe0cfc68350ff59ab530e1c9140ef8c2131a2c4d190d11912f822/eDOCr-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61dda57b31ca32b98bcb94974776f48c2082587c219f17673376daca3dab6262",
          "md5": "18756ac8a7e6859065d540b7a355bf07",
          "sha256": "395c4ec541d5e2759858dd5a47d2bfdbbaa9dd0d1bedd2011e66b9d0cec1a073"
        },
        "downloads": -1,
        "filename": "eDOCr-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18756ac8a7e6859065d540b7a355bf07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4369,
        "upload_time": "2023-02-06T10:26:17",
        "upload_time_iso_8601": "2023-02-06T10:26:17.387397Z",
        "url": "https://files.pythonhosted.org/packages/61/dd/a57b31ca32b98bcb94974776f48c2082587c219f17673376daca3dab6262/eDOCr-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f26dc1486c231946f638b189d4d4c276b43bb3e7b8986af55fc4674598154f99",
          "md5": "8721ba06d9ef80597b3a9c9d8a4f8c0e",
          "sha256": "cfaec722522bef0f4e9de913bb0229c04ab5b2e168d38be8e337ad3e604ece5d"
        },
        "downloads": -1,
        "filename": "eDOCr-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8721ba06d9ef80597b3a9c9d8a4f8c0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4713,
        "upload_time": "2023-02-06T10:26:19",
        "upload_time_iso_8601": "2023-02-06T10:26:19.603471Z",
        "url": "https://files.pythonhosted.org/packages/f2/6d/c1486c231946f638b189d4d4c276b43bb3e7b8986af55fc4674598154f99/eDOCr-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03ec93c784a366fb790c50d36e6e7020cdb91d3f4904d2d89dfb2bbc0ebc018f",
          "md5": "3389f4a82c0868a1a238cdde7951e8dd",
          "sha256": "d072b6c04986fa7f429e9566828e2d4199a737c1fdbb895641e975496409652a"
        },
        "downloads": -1,
        "filename": "eDOCr-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3389f4a82c0868a1a238cdde7951e8dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 61382,
        "upload_time": "2023-02-06T15:24:40",
        "upload_time_iso_8601": "2023-02-06T15:24:40.424348Z",
        "url": "https://files.pythonhosted.org/packages/03/ec/93c784a366fb790c50d36e6e7020cdb91d3f4904d2d89dfb2bbc0ebc018f/eDOCr-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94022f614b4379456d4c89a38e366433b50d1f5449686923c1dc7307549cb729",
          "md5": "297b75272bf850b346f4d9a3efefd1b3",
          "sha256": "929e85807560d1c525fb9e6d3435b89f64855a6c137e993945cf0ff0e435661d"
        },
        "downloads": -1,
        "filename": "eDOCr-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "297b75272bf850b346f4d9a3efefd1b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 55554,
        "upload_time": "2023-02-06T15:24:42",
        "upload_time_iso_8601": "2023-02-06T15:24:42.106552Z",
        "url": "https://files.pythonhosted.org/packages/94/02/2f614b4379456d4c89a38e366433b50d1f5449686923c1dc7307549cb729/eDOCr-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03ec93c784a366fb790c50d36e6e7020cdb91d3f4904d2d89dfb2bbc0ebc018f",
        "md5": "3389f4a82c0868a1a238cdde7951e8dd",
        "sha256": "d072b6c04986fa7f429e9566828e2d4199a737c1fdbb895641e975496409652a"
      },
      "downloads": -1,
      "filename": "eDOCr-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3389f4a82c0868a1a238cdde7951e8dd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 61382,
      "upload_time": "2023-02-06T15:24:40",
      "upload_time_iso_8601": "2023-02-06T15:24:40.424348Z",
      "url": "https://files.pythonhosted.org/packages/03/ec/93c784a366fb790c50d36e6e7020cdb91d3f4904d2d89dfb2bbc0ebc018f/eDOCr-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94022f614b4379456d4c89a38e366433b50d1f5449686923c1dc7307549cb729",
        "md5": "297b75272bf850b346f4d9a3efefd1b3",
        "sha256": "929e85807560d1c525fb9e6d3435b89f64855a6c137e993945cf0ff0e435661d"
      },
      "downloads": -1,
      "filename": "eDOCr-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "297b75272bf850b346f4d9a3efefd1b3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 55554,
      "upload_time": "2023-02-06T15:24:42",
      "upload_time_iso_8601": "2023-02-06T15:24:42.106552Z",
      "url": "https://files.pythonhosted.org/packages/94/02/2f614b4379456d4c89a38e366433b50d1f5449686923c1dc7307549cb729/eDOCr-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}