{
  "info": {
    "author": "Ting-Chun Wang, Ming-Yu Liu, Jun-Yan Zhu, Andrew Tao, Jan Kautz, Bryan Catanzaro",
    "author_email": "tingchunw@nvidia.com, mingyul@nvidia.com, jan@jankautz.com, junyanz@cs.cmu.edu, bcatanzaro@acm.org",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<img src='imgs/teaser_720.gif' align=\"right\" width=360>\n\n<br><br><br><br>\n\n# pix2pixHD\n### [Project](https://tcwang0509.github.io/pix2pixHD/) | [Youtube](https://youtu.be/3AIpPlzM_qs) | [Paper](https://arxiv.org/pdf/1711.11585.pdf) <br>\nPytorch implementation of our method for high-resolution (e.g. 2048x1024) photorealistic image-to-image translation. It can be used for turning semantic label maps into photo-realistic images or synthesizing portraits from face label maps. <br><br>\n[High-Resolution Image Synthesis and Semantic Manipulation with Conditional GANs](https://tcwang0509.github.io/pix2pixHD/)  \n [Ting-Chun Wang](https://tcwang0509.github.io/)<sup>1</sup>, [Ming-Yu Liu](http://mingyuliu.net/)<sup>1</sup>, [Jun-Yan Zhu](http://people.eecs.berkeley.edu/~junyanz/)<sup>2</sup>, Andrew Tao<sup>1</sup>, [Jan Kautz](http://jankautz.com/)<sup>1</sup>, [Bryan Catanzaro](http://catanzaro.name/)<sup>1</sup>  \n <sup>1</sup>NVIDIA Corporation, <sup>2</sup>UC Berkeley  \n In CVPR 2018.  \n\n## Image-to-image translation at 2k/1k resolution\n- Our label-to-streetview results\n<p align='center'>  \n  <img src='imgs/teaser_label.png' width='400'/>\n  <img src='imgs/teaser_ours.jpg' width='400'/>\n</p>\n- Interactive editing results\n<p align='center'>  \n  <img src='imgs/teaser_style.gif' width='400'/>\n  <img src='imgs/teaser_label.gif' width='400'/>\n</p>\n- Additional streetview results\n<p align='center'>\n  <img src='imgs/cityscapes_1.jpg' width='400'/>\n  <img src='imgs/cityscapes_2.jpg' width='400'/>\n</p>\n<p align='center'>\n  <img src='imgs/cityscapes_3.jpg' width='400'/>\n  <img src='imgs/cityscapes_4.jpg' width='400'/>\n</p>\n\n- Label-to-face and interactive editing results\n<p align='center'>\n  <img src='imgs/face1_1.jpg' width='250'/>\n  <img src='imgs/face1_2.jpg' width='250'/>\n  <img src='imgs/face1_3.jpg' width='250'/>\n</p>\n<p align='center'>\n  <img src='imgs/face2_1.jpg' width='250'/>\n  <img src='imgs/face2_2.jpg' width='250'/>\n  <img src='imgs/face2_3.jpg' width='250'/>\n</p>\n\n- Our editing interface\n<p align='center'>\n  <img src='imgs/city_short.gif' width='330'/>\n  <img src='imgs/face_short.gif' width='450'/>\n</p>\n\n## Prerequisites\n- Linux or macOS\n- Python 2 or 3\n- [optionally:] NVIDIA GPU (11G memory or larger) + CUDA cuDNN\n\n## Getting Started\n### Installation\n- Create a [virtual environment](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/), and activate it\n- Clone this repo:\n\n        git clone https://github.com/NVIDIA/pix2pixHD\n        pip install pix2pixHD\n\n\n\n### Testing\n- A few example Cityscapes test images are included in the `datasets` folder.\n- Please download the pre-trained Cityscapes model from [here](https://drive.google.com/file/d/1h9SykUnuZul7J3Nbms2QGH1wa85nbN2-/view?usp=sharing) (google drive link), and put it under `./checkpoints/label2city_1024p/`\n- Test the model (`bash ./scripts/test_1024p.sh`):\n```bash\n#!./scripts/test_1024p.sh\npix2pixhd-test --name label2city_1024p --netG local --ngf 32 --resize_or_crop none\n```\nThe test results will be saved to a html file here: `./results/label2city_1024p/test_latest/index.html`.\n\nMore example scripts can be found in the `scripts` directory.\n\nFor other options, cf.\n\n    pix2pixhd-test --help\n\n\n### Dataset\n- We use the Cityscapes dataset. To train a model on the full dataset, please download it from the [official website](https://www.cityscapes-dataset.com/) (registration required).\nAfter downloading, please put it under the `datasets` folder in the same way the example images are provided.\n\n\n### Training\n- Train a model at 1024 x 512 resolution (`bash ./scripts/train_512p.sh`):\n```bash\n#!./scripts/train_512p.sh\npix2pixhd-train --name label2city_512p\n```\n- To view training results, please checkout intermediate results in `./checkpoints/label2city_512p/web/index.html`.\nIf you have tensorflow installed, you can see tensorboard logs in `./checkpoints/label2city_512p/logs` by adding `--tf_log` to the training scripts.\n\nFor other options, cf.\n\n    pix2pixhd-train --help\n\n### Multi-GPU training\n- Train a model using multiple GPUs (`bash ./scripts/train_512p_multigpu.sh`):\n```bash\n#!./scripts/train_512p_multigpu.sh\npix2pixhd-train --name label2city_512p --batchSize 8 --gpu_ids 0,1,2,3,4,5,6,7\n```\nNote: this is not tested and we trained our model using single GPU only. Please use at your own discretion.\n\n### Training with Automatic Mixed Precision (AMP) for faster speed\n- To train with mixed precision support, please first install apex from: https://github.com/NVIDIA/apex\n- You can then train the model by adding `--fp16`. For example,\n```bash\n#!./scripts/train_512p_fp16.sh\npython -m torch.distributed.launch pix2pixhd/train.py --name label2city_512p --fp16\n```\nIn our test case, it trains about 80% faster with AMP on a Volta machine.\n\n### Training at full resolution\n- To train the images at full resolution (2048 x 1024) requires a GPU with 24G memory (`bash ./scripts/train_1024p_24G.sh`), or 16G memory if using mixed precision (AMP).\n- If only GPUs with 12G memory are available, please use the 12G script (`bash ./scripts/train_1024p_12G.sh`), which will crop the images during training. Performance is not guaranteed using this script.\n\n### Training with your own dataset\n- If you want to train with your own dataset, please generate label maps which are one-channel whose pixel values correspond to the object labels (i.e. 0,1,...,N-1, where N is the number of labels). This is because we need to generate one-hot vectors from the label maps. Please also specity `--label_nc N` during both training and testing.\n- If your input is not a label map, please just specify `--label_nc 0` which will directly use the RGB colors as input. The folders should then be named `train_A`, `train_B` instead of `train_label`, `train_img`, where the goal is to translate images from A to B.\n- If you don't have instance maps or don't want to use them, please specify `--no_instance`.\n- The default setting for preprocessing is `scale_width`, which will scale the width of all training images to `opt.loadSize` (1024) while keeping the aspect ratio. If you want a different setting, please change it by using the `--resize_or_crop` option. For example, `scale_width_and_crop` first resizes the image to have width `opt.loadSize` and then does random cropping of size `(opt.fineSize, opt.fineSize)`. `crop` skips the resizing step and only performs random cropping. If you don't want any preprocessing, please specify `none`, which will do nothing other than making sure the image is divisible by 32.\n\n## More Training/Test Details\n- Flags: see `options/train_options.py` and `options/base_options.py` for all the training flags; see `options/test_options.py` and `options/base_options.py` for all the test flags.\n- Instance map: we take in both label maps and instance maps as input. If you don't want to use instance maps, please specify the flag `--no_instance`.\n\n\n## Citation\n\nIf you find this useful for your research, please use the following.\n\n```bibtex\n@inproceedings{wang2018pix2pixHD,\n  title={High-Resolution Image Synthesis and Semantic Manipulation with Conditional GANs},\n  author={Ting-Chun Wang and Ming-Yu Liu and Jun-Yan Zhu and Andrew Tao and Jan Kautz and Bryan Catanzaro},  \n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  year={2018}\n}\n```\n\n## Acknowledgments\nThis code borrows heavily from [pytorch-CycleGAN-and-pix2pix](https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NVIDIA/pix2pixHD",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pix2pixhd",
    "package_url": "https://pypi.org/project/pix2pixhd/",
    "platform": null,
    "project_url": "https://pypi.org/project/pix2pixhd/",
    "project_urls": {
      "Homepage": "https://github.com/NVIDIA/pix2pixHD"
    },
    "release_url": "https://pypi.org/project/pix2pixhd/1.0/",
    "requires_dist": [
      "dominate (>=2.4.0)",
      "numpy",
      "pillow",
      "scikit-learn",
      "torch (>=1.4.0)",
      "torchvision (>=0.5.0)"
    ],
    "requires_python": "",
    "summary": "Synthesizing and manipulating 2048x1024 images with conditional GANs",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13276788,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9670cb242dda6948c7a4c8093ec9556ebd1759503694673bc686f1f6806d8d3",
          "md5": "8c1377e77ff493dbcf399c33ded5ca60",
          "sha256": "45b3fbc295fb296f3f415a01c62dba474e5943994a5b1c503aa142ba189440c2"
        },
        "downloads": -1,
        "filename": "pix2pixhd-1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c1377e77ff493dbcf399c33ded5ca60",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 38786,
        "upload_time": "2022-03-24T00:17:24",
        "upload_time_iso_8601": "2022-03-24T00:17:24.363415Z",
        "url": "https://files.pythonhosted.org/packages/d9/67/0cb242dda6948c7a4c8093ec9556ebd1759503694673bc686f1f6806d8d3/pix2pixhd-1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "116b1fcea45e08c3debc23256c526533a450ccda28b116ef80a531a64bde3a87",
          "md5": "c596b079cd425d7447c16768f587ca9c",
          "sha256": "d7f653819eb924e233665012a9a35ca3a8657a89db95a55870553ca1d13a8359"
        },
        "downloads": -1,
        "filename": "pix2pixhd-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c596b079cd425d7447c16768f587ca9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29337,
        "upload_time": "2022-03-24T00:17:26",
        "upload_time_iso_8601": "2022-03-24T00:17:26.842980Z",
        "url": "https://files.pythonhosted.org/packages/11/6b/1fcea45e08c3debc23256c526533a450ccda28b116ef80a531a64bde3a87/pix2pixhd-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9670cb242dda6948c7a4c8093ec9556ebd1759503694673bc686f1f6806d8d3",
        "md5": "8c1377e77ff493dbcf399c33ded5ca60",
        "sha256": "45b3fbc295fb296f3f415a01c62dba474e5943994a5b1c503aa142ba189440c2"
      },
      "downloads": -1,
      "filename": "pix2pixhd-1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c1377e77ff493dbcf399c33ded5ca60",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 38786,
      "upload_time": "2022-03-24T00:17:24",
      "upload_time_iso_8601": "2022-03-24T00:17:24.363415Z",
      "url": "https://files.pythonhosted.org/packages/d9/67/0cb242dda6948c7a4c8093ec9556ebd1759503694673bc686f1f6806d8d3/pix2pixhd-1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "116b1fcea45e08c3debc23256c526533a450ccda28b116ef80a531a64bde3a87",
        "md5": "c596b079cd425d7447c16768f587ca9c",
        "sha256": "d7f653819eb924e233665012a9a35ca3a8657a89db95a55870553ca1d13a8359"
      },
      "downloads": -1,
      "filename": "pix2pixhd-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c596b079cd425d7447c16768f587ca9c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29337,
      "upload_time": "2022-03-24T00:17:26",
      "upload_time_iso_8601": "2022-03-24T00:17:26.842980Z",
      "url": "https://files.pythonhosted.org/packages/11/6b/1fcea45e08c3debc23256c526533a450ccda28b116ef80a531a64bde3a87/pix2pixhd-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}