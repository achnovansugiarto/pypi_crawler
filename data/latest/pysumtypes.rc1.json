{
  "info": {
    "author": "Dan Pozmanter",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Py Sum Types\n\n![Build Status](https://api.travis-ci.org/danpozmanter/PySumTypes.svg?branch=main&status=unknown)\n\n**Simple syntax to declare, match, compare, and unwrap sum types for Python**\n\n`Sum Types`, aka `Discriminated Unions` are a kind of `Algebraic Data Type` (`ADT`) found in strongly typed functional languages (among other places).\n\n```fsharp\ntype Success = {Data: string}\ntype Failure = {ErrorCode: int; ErrorMessage: string}\ntype Response =\n    | Succeeded of Success\n    | Failed of Failure\n\nlet example(a: int) =\n    if (a > 0) then\n        Response.Succeeded <| {Data=\"Data!\"}\n    else\n        Response.Failed <| { ErrorCode=401; ErrorMessage=\"Nope\"}\n\nlet response = example(22)\n\nmatch response with\n    | Response.Succeeded s -> printf \"%s\\n\" s.Data\n    | Response.Failed f -> printf \"%s\\n\" f.ErrorMessage\n```\n\n### Definition & Useage\n\nSo how might we do this in Python?\n\n#### Definition\n\n```python\n\n@dataclass\nclass Success:\n    data: str\n    count: int\n\n@dataclass\nclass Failure:\n    error_code: int\n    error_message: str\n\n@sumtype\nclass Response:\n    success: Success\n    failure: Failure\n```\n\n#### Useage\n\n```python\ndef example(a:int) -> Response:\n    if a > 0:\n        return Response(Failure(error_code=403, error_message='Not Today'))\n    return Response(Success('Wow such data', count=500))\n\nresponse = example(22)\n\nif response.match(Success):\n    print('Look at this data {}'.format(response.data))\n    actual_instance = response.unwrap()\n    actual_instance.count += 1000\nelse:\n    print('Oh what have we done sweet corgi buns!!! Error: {}'.format(response.error_message))\n    if response == Failure(403, 'Not Today'):\n        print('Not today!!!')\n```\n\n#### Exceptions\n\n```python\nx = example(22)\nprint('Look at this data {}'.format(x.data))\n# raises a SumTypeAttributeNotFound exception\n```\n\n```python\n@dataclass\nclass Failcess:\n    error_message: str\n    error_code: int\n\n@sumtype\nclass TooManyTypes:\n    success: Success\n    hurray: Success\n    fail: Failure\n    oops: Failure\n\ndef example(a) -> TooManyTypes:\n    return TooManyTypes(Success('Wow such data', 500))\n    # raises a SumTypeInitError exception\n    # Sum Types should have unique types\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/danpozmanter/PySumTypes",
    "keywords": "sumtypes adt discriminatedunions uniontypes algebraicdatatypes",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PySumTypes",
    "package_url": "https://pypi.org/project/PySumTypes/",
    "platform": "",
    "project_url": "https://pypi.org/project/PySumTypes/",
    "project_urls": {
      "Homepage": "https://github.com/danpozmanter/PySumTypes"
    },
    "release_url": "https://pypi.org/project/PySumTypes/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Sum Types for Python",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8149643,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ba92997e4e64c6a0b5e87068497c797a0f543c32051ab0404e92e291800b908",
          "md5": "c974a3f22a0af60e9e01bb0461fd2c59",
          "sha256": "e71dfbaa185afaec3baf1d54232ee120c218c29391255775051ee8922fcdb1c7"
        },
        "downloads": -1,
        "filename": "PySumTypes-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c974a3f22a0af60e9e01bb0461fd2c59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4101,
        "upload_time": "2020-09-09T22:12:22",
        "upload_time_iso_8601": "2020-09-09T22:12:22.056502Z",
        "url": "https://files.pythonhosted.org/packages/1b/a9/2997e4e64c6a0b5e87068497c797a0f543c32051ab0404e92e291800b908/PySumTypes-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ba92997e4e64c6a0b5e87068497c797a0f543c32051ab0404e92e291800b908",
        "md5": "c974a3f22a0af60e9e01bb0461fd2c59",
        "sha256": "e71dfbaa185afaec3baf1d54232ee120c218c29391255775051ee8922fcdb1c7"
      },
      "downloads": -1,
      "filename": "PySumTypes-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c974a3f22a0af60e9e01bb0461fd2c59",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4101,
      "upload_time": "2020-09-09T22:12:22",
      "upload_time_iso_8601": "2020-09-09T22:12:22.056502Z",
      "url": "https://files.pythonhosted.org/packages/1b/a9/2997e4e64c6a0b5e87068497c797a0f543c32051ab0404e92e291800b908/PySumTypes-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}