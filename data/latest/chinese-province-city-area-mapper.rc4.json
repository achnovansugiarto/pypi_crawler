{
  "info": {
    "author": "DQinYuan",
    "author_email": "sa517067@mail.ustc.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Chinese (Simplified)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Indexing"
    ],
    "description": "\n\nchinese_province_city_area_mapper\n==================================\n\nchinese_province_city_area_mapper：一个用于识别简体中文字符串中省，市和区并能够进行映射，检验和简单绘图的python模块\n\n举个例子::\n                                                            \n    [\"徐汇区虹漕路461号58号楼5楼\", \"泉州市洛江区万安塘西工业区\"]\n            ↓ 转换\n    |省    |市   |区    |\n    |上海市|上海市|徐汇区|\n    |福建省|泉州市|洛江区|\n\n\nchinese_province_city_area_mapper: built to be recognize Chinese province,city and area in simplified Chinese string, it can automaticall map area to city \nand map city to province.\nfor example::\n\n    [\"徐汇区虹漕路461号58号楼5楼\", \"泉州市洛江区万安塘西工业区\"]\n            ↓ transform\n    |省    |市   |区    |\n    |上海市|上海市|徐汇区|\n    |福建省|泉州市|洛江区|\n\n\n \n完整文档见该模块的Github，\nGitHub: `https://github.com/DQinYuan/chinese_province_city_area_mapper <https://github.com/DQinYuan/chinese_province_city_area_mapper>`_\n\n特点\n====\n\n-  基于jieba分词进行匹配，同时拥有比较复杂的匹配逻辑保证了准确率，笔者根据手头的海量地址描述数据进行了测试\n\n-  自带完整的省，市，区三级地名及其经纬度的数据\n\n-  支持自定义省，市，区映射\n\n-  输出的是基于pandas的DataFrame类型的表结构，易于理解和使用\n\n-  封装了简单的绘图功能，可以很方便地进行简单的数据可视化\n\n-  MIT 授权协议\n\n安装说明\n========\n\n代码目前仅仅支持python3\n\n    pip install chinese_province_city_area_mapper\n\nGet Started\n============\n\n本模块中最主要的类是chinese_province_city_area_mapper.transformer.CPCATransformer（注：CPCA是Chinese Province City Area的缩写），\n该类的transform方法可以输入任意的可迭代类型（如list，Series等），然后将其转换为一个DataFrame，\n示例代码如下::\n\n    location_str = [\"徐汇区虹漕路461号58号楼5楼\", \"泉州市洛江区万安塘西工业区\", \"朝阳区北苑华贸城\"]\n    from chinese_province_city_area_mapper.transformer import CPCATransformer\n    cpca = CPCATransformer()\n    df = cpca.transform(location_str)\n    df\n\n\n输出的结果为::\n\n         区    市    省\n    0  徐汇区  上海市  上海市\n    1  洛江区  泉州市  福建省\n    2  朝阳区 \n\n从上面的程序输出中你会发现朝阳区并没有被映射到北京市，这是因为在中国有多个同名的叫做朝阳区的区，\n并且他们位于不同的市，所以程序就不知道该映射到哪一个市了，因此就不对其进行映射，如果你确定你\n的数据中的朝阳区都是指北京市的那个朝阳区的话，可以在CPCATransformer的构造函数中传一个字典\n（叫做umap参数，是user map的简称），指定朝阳区都要映射到北京市，\n注意只有区到市的这一级映射存在重名问题，中国的市的名称都是唯一的，省的名称也都是唯一的\n，示例代码如下::\n\n    location_str = [\"徐汇区虹漕路461号58号楼5楼\", \"泉州市洛江区万安塘西工业区\", \"朝阳区北苑华贸城\"]\n    from chinese_province_city_area_mapper.transformer import CPCATransformer\n    cpca = CPCATransformer({\"朝阳区\":\"北京市\"})\n    df = cpca.transform(location_str)\n    df\n\n\n输出结果为::\n    \n         区    市    省\n    0  徐汇区  上海市  上海市\n    1  洛江区  泉州市  福建省\n    2  朝阳区  北京市  北京市\n\n模块中还内置了一个我推荐大家使用的umap，这个umap中我根据处理地址数据的经验将那些重名的区映射到了它最常见的一个市，\n这个umap位于chinese_province_city_area_mapper.myumap.umap，使用如下::\n\n    location_str = [\"徐汇区虹漕路461号58号楼5楼\", \"泉州市洛江区万安塘西工业区\", \"朝阳区北苑华贸城\"]\n    from chinese_province_city_area_mapper.transformer import CPCATransformer\n    from chinese_province_city_area_mapper import myumap\n    print(myumap.umap)   #查看这个umap的内容\n    cpca = CPCATransformer(myumap.umap)\n    df = cpca.transform(location_str)\n    df\n\n输出和上一个程序一样\n\n\n模块中还自带一个简单绘图工具，可以在地图上将上面输出的数据以热力图的形式画出来\n，代码如下::\n\n    from chinese_province_city_area_mapper import drawers\n    #df为上一段代码输出的df\n    drawers.draw_locations(df, \"df.html\")\n\n\n这一段代码运行结束后会在运行代码的当前目录下生成一个df.html文件，用浏览器打开即可看到\n绘制好的地图（如果某条数据'省'，'市'或'区'字段有缺，则会忽略该条数据不进行绘制）。\n\ndraw_locations函数还可以通过指定path参数来改变输出路径，示例代码如下::\n\n    from chinese_province_city_area_mapper import drawers\n    #在当前目录的父目录生成df.html\n    drawers.draw_locations(df, \"df.html\", path=\"../\")\n\n本模块的基本使用方法大概就是这些了，如果还想知道更多的细节，请访问该\n模块的github地址 `https://github.com/DQinYuan/chinese_province_city_area_mapper <https://github.com/DQinYuan/chinese_province_city_area_mapper>`_，\n在那里我写了更多的细节，2.0及以上版本又增加了几个echarts的绘图方便函数，见Github。\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DQinYuan/chinese_province_city_area_mapper",
    "keywords": "Simplified Chinese",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chinese_province_city_area_mapper",
    "package_url": "https://pypi.org/project/chinese_province_city_area_mapper/",
    "platform": "",
    "project_url": "https://pypi.org/project/chinese_province_city_area_mapper/",
    "project_urls": {
      "Homepage": "https://github.com/DQinYuan/chinese_province_city_area_mapper"
    },
    "release_url": "https://pypi.org/project/chinese_province_city_area_mapper/2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Chinese Province, City and Area Recognition Utilities",
    "version": "2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3823245,
  "releases": {
    "1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "268dacdeae6962f6bc00daf3de295464ce3a1d38f4dea14d21608f640ae07a36",
          "md5": "11b4a5be13a2f0fb27a69f7da127f660",
          "sha256": "b9c8ab216faed4ec65449dd515363c8bc3ced72d846ef77fb7cad4b377b2c5cb"
        },
        "downloads": -1,
        "filename": "chinese_province_city_area_mapper-1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "11b4a5be13a2f0fb27a69f7da127f660",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 68542,
        "upload_time": "2018-03-05T01:49:06",
        "upload_time_iso_8601": "2018-03-05T01:49:06.166286Z",
        "url": "https://files.pythonhosted.org/packages/26/8d/acdeae6962f6bc00daf3de295464ce3a1d38f4dea14d21608f640ae07a36/chinese_province_city_area_mapper-1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b01f94484c4a59a1edcc6180a1fd8112c962ac2e871dac53519a66c962f14e8a",
          "md5": "6fd58888e41ebf794d31ab5b11c75750",
          "sha256": "6a93bf663ab52cb7c051c4761b4f025a227fbfbd1b59fe168265e4c342ddb0d4"
        },
        "downloads": -1,
        "filename": "chinese_province_city_area_mapper-1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "6fd58888e41ebf794d31ab5b11c75750",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 68545,
        "upload_time": "2018-04-22T12:49:12",
        "upload_time_iso_8601": "2018-04-22T12:49:12.471795Z",
        "url": "https://files.pythonhosted.org/packages/b0/1f/94484c4a59a1edcc6180a1fd8112c962ac2e871dac53519a66c962f14e8a/chinese_province_city_area_mapper-1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "531dd02983357442abd22e76b2c6dd547839f699a7a1ddb388cd8a209ceb16e7",
          "md5": "191c41e9739e566ee2d9d5eae4b2e790",
          "sha256": "6aa0289f63669506c493be86f6ffba59f5c6fb5b9f1bb8a6387462716984bdd2"
        },
        "downloads": -1,
        "filename": "chinese_province_city_area_mapper-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "191c41e9739e566ee2d9d5eae4b2e790",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 69915,
        "upload_time": "2018-05-01T07:25:27",
        "upload_time_iso_8601": "2018-05-01T07:25:27.430192Z",
        "url": "https://files.pythonhosted.org/packages/53/1d/d02983357442abd22e76b2c6dd547839f699a7a1ddb388cd8a209ceb16e7/chinese_province_city_area_mapper-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43e2bc64446ee01dcb7624657c374d1513cc1caa50282197ab8178150d3c2193",
          "md5": "04ba092c5e1361a621bac269e13386c1",
          "sha256": "8366e3da5ef03754cc77e5b4f447d09b8bc3cc44abcffbf25f53be990fa0c1dd"
        },
        "downloads": -1,
        "filename": "chinese_province_city_area_mapper-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "04ba092c5e1361a621bac269e13386c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 69910,
        "upload_time": "2018-05-01T08:23:12",
        "upload_time_iso_8601": "2018-05-01T08:23:12.399354Z",
        "url": "https://files.pythonhosted.org/packages/43/e2/bc64446ee01dcb7624657c374d1513cc1caa50282197ab8178150d3c2193/chinese_province_city_area_mapper-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43e2bc64446ee01dcb7624657c374d1513cc1caa50282197ab8178150d3c2193",
        "md5": "04ba092c5e1361a621bac269e13386c1",
        "sha256": "8366e3da5ef03754cc77e5b4f447d09b8bc3cc44abcffbf25f53be990fa0c1dd"
      },
      "downloads": -1,
      "filename": "chinese_province_city_area_mapper-2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "04ba092c5e1361a621bac269e13386c1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 69910,
      "upload_time": "2018-05-01T08:23:12",
      "upload_time_iso_8601": "2018-05-01T08:23:12.399354Z",
      "url": "https://files.pythonhosted.org/packages/43/e2/bc64446ee01dcb7624657c374d1513cc1caa50282197ab8178150d3c2193/chinese_province_city_area_mapper-2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}