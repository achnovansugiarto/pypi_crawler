{
  "info": {
    "author": "Adam Hooper",
    "author_email": "adam@adamhooper.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Clone sandboxed Python processes quickly and securely.\n\nDocumentation\n=============\n\nDocumentation is available at `https://pyspawner.readthedocs.io\n<https://pyspawner.readthedocs.io/>`_.\n\nUsage\n=====\n\nCreate a ``pyspawner.Client`` that imports the \"common\" Python imports\nyour sandboxed code will run. (These ``import`` statements aren't sandboxed,\nso be sure you trust the Python modules.)\n\nThen call ``pyspawner.Client.spawn_child()`` each time you want to create\na new child. It will invoke the pyspawner's ``child_main`` function with the\ngiven arguments.\n\nHere's pseudo-code for invoking the pyspawner part::\n\n    import pyspawner\n\n    # pyspawner.Client() is slow; ideally, you'll just call it during startup.\n    with pyspawner.Client(\n        child_main=\"mymodule.main\",\n        environment={\"LC_ALL\": \"C.UTF-8\"},\n        preload_imports=[\"pandas\"],  # put all your slow imports here\n    ) as cloner:\n        # cloner.spawn_child() is fast; call it as many times as you like.\n        child_process: pyspawner.ChildProcess = cloner.spawn_child(\n            args=[\"arg1\", \"arg2\"],  # List of picklable Python objects\n            process_name=\"child-1\",\n            sandbox_config=pyspawner.SandboxConfig(\n                chroot_dir=Path(\"/path/to/chroot/dir\"),\n                network=pyspawner.NetworkConfig()\n            )\n        )\n\n        # child_process has .pid, .stdin, .stdout, .stderr.\n        # Read from its stdout and stderr, and then wait for it.\n\nFor each child, read from stdout and stderr until end-of-file; then wait() for\nthe process to exit. Reading from two pipes at once is a standard exercise in\nUNIX, so the minutae are left as an exercise. A safe approach:\n\n1. Register both stdout and stderr in a ``selectors.DefaultSelector``\n2. loop, calling ``selectors.BaseSelector.select()`` and reading from\n   whichever file descriptors have data. Unregister whichever file descriptors\n   reach EOF; and read but _ignore_ data past a predetermined buffer size. Kill\n   the child process if this is taking too long. (Keep reading after killing\n   the child to avoid deadlock.)\n3. Wait for the child process (using ``os.waitpid()``) to clean up its\n   system resources.\n\nSetting up your environment\n===========================\n\nYour system must have ``libcap.so.2`` installed.\n\nPyspawner relies on Linux's ``clone()`` system call to create child-process\ncontainers. If you're using pyspawner from a Docker container, subcontainer\nare disabled by default. Run Docker with\n``--seccomp-opt=/path/to/pyspawner/docker/pyspawner-seccomp-profile.json`` to\nallow creating subcontainers.\n\nBy default, sandboxed children cannot access the Internet. If you want to\nenable networking for child processes, ensure your process has the\n``CAP_NET_ADMIN`` capability. (``docker run --cap-add NET_ADMIN ...``).\nAlso, you'll need to configure NAT in the parent-process environment ...\nwhich is beyond the scope of this README. Finally, you may want to supply a\n``chroot_dir`` to give child processes a custom ``/etc/resolv.conf``.\n\nIdeally, sandboxed children would not be able to write anywhere on the main\nfilesystem. Unfortunately, the ``umount()`` and ``pivot_root()`` system calls\nare restricted in many environments. As a placeholder, you're encouraged to\nsupply a ``chroot_dir`` to provide an environment for your sandboxed child\ncode. ``chroot_dir`` must be in a separate filesystem from the root filesystem.\n(In the future, when the Linux container ecosystem evolves enough,\n``chroot_dir`` will make children unmount the root filesystem.) Again, chroot\nis beyond the scope of this README.\n\n\nDeveloping\n==========\n\nThe test suite depends on Docker. (Security tests involve temporary files\noutside of temporary directories, iptables rules and setuid-0 files.)\n\nRun ``./test.sh`` to test.\n\nTo add or fix features:\n\n1. Write a test in ``tests/`` that breaks.\n2. Write code in ``pyspawner/`` that makes the test pass.\n3. Submit a pull request.\n\n\nReleasing\n=========\n\n1. Run ``./test.sh`` and ``sphinx-build docs docs/build`` to check for errors.\n2. Write a ``CHANGELOG.rst`` entry.\n3. ``git commit``\n4. ``git tag VERSION`` (use semver with a ``v`` -- e.g., ``v1.2.3``)\n5. ``git push --tags && git push``\n6. ``poetry build``\n7. ``poetry publish``\n\n\nLicense\n=======\n\nMIT. See ``LICENSE.txt``.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CJWorkbench/pyspawner",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyspawner",
    "package_url": "https://pypi.org/project/pyspawner/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyspawner/",
    "project_urls": {
      "Homepage": "https://github.com/CJWorkbench/pyspawner",
      "Repository": "https://github.com/CJWorkbench/pyspawner.git"
    },
    "release_url": "https://pypi.org/project/pyspawner/1.0.0/",
    "requires_dist": [
      "pyroute2.minimal (>=0.6.4,<0.7.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Clone sandboxed Python processes quickly and securely, on Linux.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10594155,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a1e3f6c6f6a22dbe7d2210f54a743fb979e1b90a48b9d15111deeffaa4c669d",
          "md5": "0f9aef22715a71f8fa83850671d0bdf1",
          "sha256": "a0f4466325b2a5d0839470b30fba6401a995335a3d9e75ba077ec34d6200cad7"
        },
        "downloads": -1,
        "filename": "pyspawner-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0f9aef22715a71f8fa83850671d0bdf1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23048,
        "upload_time": "2019-11-18T23:38:42",
        "upload_time_iso_8601": "2019-11-18T23:38:42.350186Z",
        "url": "https://files.pythonhosted.org/packages/4a/1e/3f6c6f6a22dbe7d2210f54a743fb979e1b90a48b9d15111deeffaa4c669d/pyspawner-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80e8d50eed839fb03c2c28b8981510d87ce895c80fcf5e4545b49429fee5f4fd",
          "md5": "710af39dcbbf37626adcff815dc4d84f",
          "sha256": "f593f3a2cf019eef950f28c1124e276226bf91663bb6fdfd91149a64a87368d6"
        },
        "downloads": -1,
        "filename": "pyspawner-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "710af39dcbbf37626adcff815dc4d84f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23957,
        "upload_time": "2020-05-30T13:40:47",
        "upload_time_iso_8601": "2020-05-30T13:40:47.210538Z",
        "url": "https://files.pythonhosted.org/packages/80/e8/d50eed839fb03c2c28b8981510d87ce895c80fcf5e4545b49429fee5f4fd/pyspawner-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "847b2d385eba9c246e9b30f835887c953d442bdd675d35f1c6a889e252944027",
          "md5": "a2b8789fa73cf6dfa99225c3d9048350",
          "sha256": "9a123fdbb283ccace2ce2a1f04383cf817ce6f95a62aac5e5b157043805966ac"
        },
        "downloads": -1,
        "filename": "pyspawner-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a2b8789fa73cf6dfa99225c3d9048350",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23999,
        "upload_time": "2021-03-22T20:37:07",
        "upload_time_iso_8601": "2021-03-22T20:37:07.283340Z",
        "url": "https://files.pythonhosted.org/packages/84/7b/2d385eba9c246e9b30f835887c953d442bdd675d35f1c6a889e252944027/pyspawner-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daaf3b9263553d3f5021e4708313e4c07f7ec84e05d847b6cb97a8ba0aad7588",
          "md5": "0fbdb4f93eebea19226d9e78beaa8f15",
          "sha256": "8f534ec5760aa3026bdac79c90c887c42560881341d0147f18d136b884a3820f"
        },
        "downloads": -1,
        "filename": "pyspawner-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0fbdb4f93eebea19226d9e78beaa8f15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25282,
        "upload_time": "2021-06-08T21:00:47",
        "upload_time_iso_8601": "2021-06-08T21:00:47.009559Z",
        "url": "https://files.pythonhosted.org/packages/da/af/3b9263553d3f5021e4708313e4c07f7ec84e05d847b6cb97a8ba0aad7588/pyspawner-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2668587343521194a6f8746ece6169545049112176a7ca04e7ff7e57dfc5723e",
          "md5": "d32b482333ddb69b57d9364596659a0e",
          "sha256": "b29cc6d56f47bfc9150580aa261d6418c9c8652d3ac39a8944ef408e64b2ef51"
        },
        "downloads": -1,
        "filename": "pyspawner-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d32b482333ddb69b57d9364596659a0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 23861,
        "upload_time": "2021-06-08T21:00:48",
        "upload_time_iso_8601": "2021-06-08T21:00:48.668820Z",
        "url": "https://files.pythonhosted.org/packages/26/68/587343521194a6f8746ece6169545049112176a7ca04e7ff7e57dfc5723e/pyspawner-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "daaf3b9263553d3f5021e4708313e4c07f7ec84e05d847b6cb97a8ba0aad7588",
        "md5": "0fbdb4f93eebea19226d9e78beaa8f15",
        "sha256": "8f534ec5760aa3026bdac79c90c887c42560881341d0147f18d136b884a3820f"
      },
      "downloads": -1,
      "filename": "pyspawner-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0fbdb4f93eebea19226d9e78beaa8f15",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 25282,
      "upload_time": "2021-06-08T21:00:47",
      "upload_time_iso_8601": "2021-06-08T21:00:47.009559Z",
      "url": "https://files.pythonhosted.org/packages/da/af/3b9263553d3f5021e4708313e4c07f7ec84e05d847b6cb97a8ba0aad7588/pyspawner-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2668587343521194a6f8746ece6169545049112176a7ca04e7ff7e57dfc5723e",
        "md5": "d32b482333ddb69b57d9364596659a0e",
        "sha256": "b29cc6d56f47bfc9150580aa261d6418c9c8652d3ac39a8944ef408e64b2ef51"
      },
      "downloads": -1,
      "filename": "pyspawner-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d32b482333ddb69b57d9364596659a0e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 23861,
      "upload_time": "2021-06-08T21:00:48",
      "upload_time_iso_8601": "2021-06-08T21:00:48.668820Z",
      "url": "https://files.pythonhosted.org/packages/26/68/587343521194a6f8746ece6169545049112176a7ca04e7ff7e57dfc5723e/pyspawner-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}