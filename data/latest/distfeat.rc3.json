{
  "info": {
    "author": "Tiago Tresoldi",
    "author_email": "tresoldi@shh.mpg.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# DistFeat Python library\n\nDistFeat is a Python library for manipulating segmental/distinctive phonological features.\n\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3902005.svg)](https://doi.org/10.5281/zenodo.3902005)\n[![PyPI](https://img.shields.io/pypi/v/distfeat.svg)](https://pypi.org/project/distfeat)\n[![Build Status](https://travis-ci.org/tresoldi/distfeat.svg?branch=master)](https://travis-ci.org/tresoldi/distfeat)\n[![codecov](https://codecov.io/gh/tresoldi/distfeat/branch/master/graph/badge.svg)](https://codecov.io/gh/tresoldi/distfeat)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/aee2598d1c6d4e92aa2984a4703a7918)](https://app.codacy.com/manual/tresoldi/distfeat?utm_source=github.com&utm_medium=referral&utm_content=tresoldi/distfeat&utm_campaign=Badge_Grade_Dashboard)\n\n## Installation and usage\n\nThe library can be installed as any standard Python library with\n`pip`, and used as demonstrated in the following snippet:\n\nIn any standard Python environment, `distfeat` can be installed with:\n\n```bash\n$ pip install distfeat\n```\n\nNote that the command above will install the `pyclts` depency, but will not download\nany version of the CLTS data by default.\n\nDetailed instructions on how to use the library will be made available in\nthe official documentation. Code documentation and test cases detail\nusage, along with the following section.\n\n## Showcase\n\nFunctionality is provided by means of a `DistFeat` class, which will\nautomatically load the standard model upon instantiation:\n\n```python\n>>> import distfeat\n>>> df = distfeat.DistFeat()\n```\n\nThe most common functionality, obtaining a dictionary of features for a\ngrapheme, is performed by the `.grapheme2features()` method.\n\n```python\n>>> df.grapheme2features('a')\n{'anterior': True, 'approximant': True, 'back': False, 'click': False, 'consonantal': False, 'constricted': False, 'continuant': True, 'coronal': True, 'distributed': True, 'dorsal': True, 'high': False, 'labial': False, 'laryngeal': True, 'lateral': False, 'long': None, 'low': True, 'nasal': False, 'pharyngeal': None, 'place': True, 'preaspirated': None, 'preglottalized': None, 'prenasal': None, 'round': None, 'sibilant': False, 'sonorant': True, 'spread': False, 'strident': False, 'syllabic': True, 'tense': True, 'voice': True}\n```\n\nThe `.graphemes2features()` method will by default returning a dictionary with\nboolean values, with sorted feature names. Arguments allow to skip the\ntruth value conversion, returning the strings used for their representation,\nand to return a vector of values as a list.\n\n```python\n>>> df.grapheme2features('a', t_values=False)\n{'anterior': '+', 'approximant': '+', 'back': '-', 'click': '-', 'consonantal': '-', 'constricted': '-', 'continuant': '+', 'coronal': '+', 'distributed': '+', 'dorsal': '+', 'high': '-', 'labial': '-', 'laryngeal': '+', 'lateral': '-', 'long': '0', 'low': '+', 'nasal': '-', 'pharyngeal': '0', 'place': '+', 'preaspirated': '0', 'preglottalized': '0', 'prenasal': '0', 'round': '0', 'sibilant': '-', 'sonorant': '+', 'spread': '-', 'strident': '-', 'syllabic': '+', 'tense': '+', 'voice': '+'}\n\n>>> df.grapheme2features('a', vector=True)\n[True, True, False, False, False, False, True, True, True, True, False, False, True, False, None, True, False, None, True, None, None, None, None, False, True, False, False, True, True, True]\n```\n\nThe operationally inverse method `.features2graphemes()` returns a list of all\ngraphemes that satisfy a set of features and their values (which can be\nprovided both as truth values or as their strings). It is possible to drop\nundefined values by means of the `drop_na` argument.\n\n```python\n>>> df.features2graphemes({\"consonantal\": \"-\", \"anterior\": \"+\", \"high\": \"-\"})\n['a', 'aː', 'ã', 'ãː', 'ă', 'ḁ', 'a̯', 'e', 'eː', 'ẽ', 'ẽː', 'ĕ', 'e̤', 'e̥', 'e̯', 'æ', 'æː', 'æ̃', 'æ̃ː', 'ø', 'øː', 'ø̃', 'ø̃ː', 'œ', 'œː', 'œ̃', 'œ̃ː', 'ɶ', 'ɶː', 'ɶ̃', 'ɶ̃ː']\n```\n\nA minimal matrix of features needed to distinguish a set of graphemes can be\nobtained with the `.minimal_matrix()` method, which also allows to use\nstrings for truth values and to drip undefined values. Like in the\ncase of `.grapheme2features()`, a `vector` argument can be passed in order\nto obtain a list of values. As expected, the\nlarger and more heterogeneous the set of graphemes, the larger the\nnumber of features needed. The snippet below also used the auxiliary\n`tabulate_matrix()` function, a wrapper to the `tabulate` library.\n\n```python\n>>> distfeat.tabulate_matrix(df.minimal_matrix([\"t\", \"d\"]))\n    constricted    laryngeal    spread    voice\n--  -------------  -----------  --------  -------\nd   False          True         False     True\nt                  False\n\n>>> distfeat.tabulate_matrix(df.minimal_matrix([\"t\", \"d\", \"s\"]))\n    constricted    continuant    laryngeal    sibilant    spread    strident    voice\n--  -------------  ------------  -----------  ----------  --------  ----------  -------\nd   False          False         True         False       False     False       True\ns                  True          False        True                  True\nt                  False         False        False                 False\n\n>>> df.minimal_matrix([\"t\", \"d\"], vector=True)\n{'d': [False, True, False, True], 't': [None, False, None, None]}\n```\n\nThe operationally inverse method to the one above is `.class_features()`,\nwhich provides a dictionary of features and values to constitute a class of\nsounds from a set of graphemes. Note that, while possible, this method\ndoes not drop undefined values by default. As expected, the larger and more\nheterogeneous the set graphemes, the fewer the number of feature/value\npairs in common.\n\n```python\n>>> df.class_features([\"t\", \"d\"])\n{'anterior': True, 'approximant': False, 'click': False, 'consonantal': True, 'continuant': False, 'coronal': True, 'distributed': False, 'dorsal': False, 'labial': False, 'lateral': False, 'nasal': False, 'place': True, 'sibilant': False, 'sonorant': False, 'strident': False, 'syllabic': False, 'tense': False}\n\n>>> df.class_features([\"t\", \"d\", \"s\"])\n{'anterior': True, 'approximant': False, 'click': False, 'consonantal': True, 'coronal': True, 'distributed': False, 'dorsal': False, 'labial': False, 'lateral': False, 'nasal': False, 'place': True, 'sonorant': False, 'syllabic': False, 'tense': False}\n```\n\nA simple command-line tool for querying the database is also provided.\n\nExperimental support for segment distance is available as well, as\ndemonstrated below. It requires the `sklearn` library, which is\n*not* listed as a requirement and, as such, is not installed by default.\nAs models and regressors are not cached, the training\nphase might take longer than expected.\n\n```python\n>>> df.distance(\"a\", \"e\")\n5.501464265353438\n>>> df.distance(\"a\", \"u\")\n6.773080283814581\n>>> df.distance(\"w\", \"u\")\n0.9799320477423237\n>>> df.distance(\"s\", \"ʒ\")\n10.139607771554383\n```\n\n## Changelog\n\nVersion 0.2:\n  - Added initial support for segment distance\n\nVersion 0.1.1:\n  - Added unround open-mid front vowels which were missing from the\n    default model\n  - Added a model derived from Phoible\n\nVersion 0.1:\n  - First public release\n\n## TODO\n\n- Allow to specify, check, and derive geometries\n- Decide whether to have `.features2graphemes()` defaulting to boolean\n  values (i.e., `t_values=True`)\n- Decide on how to specify undefined when using truth values, such as in\n  `.features2graphemes()` (considering that `None` cannot be passed as a\n  value)\n- Extend the command-line tool to call most if not all functions\n\n## Community guidelines\n\nWhile the author can be contacted directly for support, it is recommended\nthat third parties use GitHub standard features, such as issues and\npull requests, to contribute, report problems, or seek support.\n\nContributing guidelines, including a code of conduct, can be found in\nthe `CONTRIBUTING.md` file.\n\n## Author and citation\n\nThe library is developed by Tiago Tresoldi (tresoldi@shh.mpg.de).\n\nThe author has received funding from the European Research Council (ERC)\nunder the European Union’s Horizon 2020 research and innovation\nprogramme (grant agreement\nNo. [ERC Grant #715618](https://cordis.europa.eu/project/rcn/206320/factsheet/en),\n[Computer-Assisted Language Comparison](https://digling.org/calc/).\n\nIf you use `distfeat` or the standard feature model distributed with it,\nplease cite it as:\n\n> Tresoldi, Tiago (2020). DistFeat, a Python library for manipulating segmental and distinctive features. Version 0.1.1. Jena. DOI: 10.5281/zenodo.3902005\n\nIn BibTeX:\n\n```bibtex\n@misc{Tresoldi2020distfeat,\n  author = {Tresoldi, Tiago},\n  title = {DistFeat,  a Python library for manipulating segmental and distinctive features. Version 0.1.},\n  howpublished = {\\url{https://github.com/tresoldi/distfeat}},\n  address = {Jena},\n  year = {2020},\n  doi = {10.5281/zenodo.3902005}\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tresoldi/distfeat",
    "keywords": "distinctive features,segmental features,phonology,phonetics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "distfeat",
    "package_url": "https://pypi.org/project/distfeat/",
    "platform": "",
    "project_url": "https://pypi.org/project/distfeat/",
    "project_urls": {
      "Homepage": "https://github.com/tresoldi/distfeat"
    },
    "release_url": "https://pypi.org/project/distfeat/0.2/",
    "requires_dist": [
      "pyclts",
      "tabulate"
    ],
    "requires_python": "",
    "summary": "Library for manipulation of phonological distinctive features",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7540534,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fe8f477a4627af4c84c10758844885e61885e8c5430132272bcdd6707127ba5",
          "md5": "cf43b679c71034fb6a5f5e2c7593134d",
          "sha256": "9334540ca150053d965c2ce55152a718f3986b91c1c0f36c86dfec255e3e921d"
        },
        "downloads": -1,
        "filename": "distfeat-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf43b679c71034fb6a5f5e2c7593134d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15859,
        "upload_time": "2020-06-14T12:04:07",
        "upload_time_iso_8601": "2020-06-14T12:04:07.001437Z",
        "url": "https://files.pythonhosted.org/packages/4f/e8/f477a4627af4c84c10758844885e61885e8c5430132272bcdd6707127ba5/distfeat-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ba9b19e571b50199963da6a9770e3e8537c9083ba69b9801ed2f2a6c40886bf",
          "md5": "ec7004bbbe5ccc211d02a1e3ef35756b",
          "sha256": "b54570eadb35db84f9bec7da69e1baa702145c481eeb5a588137068b56855e6e"
        },
        "downloads": -1,
        "filename": "distfeat-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ec7004bbbe5ccc211d02a1e3ef35756b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18398,
        "upload_time": "2020-06-14T12:04:09",
        "upload_time_iso_8601": "2020-06-14T12:04:09.328419Z",
        "url": "https://files.pythonhosted.org/packages/3b/a9/b19e571b50199963da6a9770e3e8537c9083ba69b9801ed2f2a6c40886bf/distfeat-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74cd7b32155d201d526571d522bb44aa9d0ed4fc78091d78df102e787e771171",
          "md5": "1f56293faa1a5738c962381ca5e466b4",
          "sha256": "5bce0f4bc92c728817ed005f5b83d5be093bbdaf73dafde721cd9919b2efc6f9"
        },
        "downloads": -1,
        "filename": "distfeat-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f56293faa1a5738c962381ca5e466b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 40804,
        "upload_time": "2020-06-19T09:42:28",
        "upload_time_iso_8601": "2020-06-19T09:42:28.744420Z",
        "url": "https://files.pythonhosted.org/packages/74/cd/7b32155d201d526571d522bb44aa9d0ed4fc78091d78df102e787e771171/distfeat-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fa34436a446a29194ae1449664a41048e23b735835a51d502afbad19661dc0a",
          "md5": "b4beb6c07c7ae0e4d8faf2a2a9aa39b5",
          "sha256": "d53aa9c4582245459059f657b60f426789402ec30a400561383848cbe21df0fc"
        },
        "downloads": -1,
        "filename": "distfeat-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b4beb6c07c7ae0e4d8faf2a2a9aa39b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42359,
        "upload_time": "2020-06-19T09:42:31",
        "upload_time_iso_8601": "2020-06-19T09:42:31.042790Z",
        "url": "https://files.pythonhosted.org/packages/2f/a3/4436a446a29194ae1449664a41048e23b735835a51d502afbad19661dc0a/distfeat-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b649c3be0127bb2f77e39b57b4422461a1c4609c9fc43c651d0cb6b100c48c5f",
          "md5": "69b75d6728998928d98317259b26bd13",
          "sha256": "e1eea4f5ad42bd13061b04a31b471e26c265871ee3e5f59f3745a00980abd05a"
        },
        "downloads": -1,
        "filename": "distfeat-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69b75d6728998928d98317259b26bd13",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 140903,
        "upload_time": "2020-06-23T07:34:07",
        "upload_time_iso_8601": "2020-06-23T07:34:07.101425Z",
        "url": "https://files.pythonhosted.org/packages/b6/49/c3be0127bb2f77e39b57b4422461a1c4609c9fc43c651d0cb6b100c48c5f/distfeat-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ba35a0dd1f9bd683cafa0567e26a8f86651bc079a65b22acd3a7194172e979d",
          "md5": "716a18e01d7d4a4e457c8a67d88c9f80",
          "sha256": "e88b880be2bc8f1eec8df821a28c139121a675b104b9afa968056178c659e000"
        },
        "downloads": -1,
        "filename": "distfeat-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "716a18e01d7d4a4e457c8a67d88c9f80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 112601,
        "upload_time": "2020-06-23T07:34:11",
        "upload_time_iso_8601": "2020-06-23T07:34:11.483325Z",
        "url": "https://files.pythonhosted.org/packages/9b/a3/5a0dd1f9bd683cafa0567e26a8f86651bc079a65b22acd3a7194172e979d/distfeat-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b649c3be0127bb2f77e39b57b4422461a1c4609c9fc43c651d0cb6b100c48c5f",
        "md5": "69b75d6728998928d98317259b26bd13",
        "sha256": "e1eea4f5ad42bd13061b04a31b471e26c265871ee3e5f59f3745a00980abd05a"
      },
      "downloads": -1,
      "filename": "distfeat-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "69b75d6728998928d98317259b26bd13",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 140903,
      "upload_time": "2020-06-23T07:34:07",
      "upload_time_iso_8601": "2020-06-23T07:34:07.101425Z",
      "url": "https://files.pythonhosted.org/packages/b6/49/c3be0127bb2f77e39b57b4422461a1c4609c9fc43c651d0cb6b100c48c5f/distfeat-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ba35a0dd1f9bd683cafa0567e26a8f86651bc079a65b22acd3a7194172e979d",
        "md5": "716a18e01d7d4a4e457c8a67d88c9f80",
        "sha256": "e88b880be2bc8f1eec8df821a28c139121a675b104b9afa968056178c659e000"
      },
      "downloads": -1,
      "filename": "distfeat-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "716a18e01d7d4a4e457c8a67d88c9f80",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 112601,
      "upload_time": "2020-06-23T07:34:11",
      "upload_time_iso_8601": "2020-06-23T07:34:11.483325Z",
      "url": "https://files.pythonhosted.org/packages/9b/a3/5a0dd1f9bd683cafa0567e26a8f86651bc079a65b22acd3a7194172e979d/distfeat-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}