{
  "info": {
    "author": "max13fr",
    "author_email": "max13fr@yozo.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Airzone Cloud\n\n- [Airzone Cloud](#airzone-cloud)\n  - [Presentation](#presentation)\n    - [Abstract](#abstract)\n    - [Module classes](#module-classes)\n  - [Usage](#usage)\n    - [Install](#install)\n    - [Start API](#start-api)\n    - [Get installations](#get-installations)\n    - [Get installations](#get-installations-1)\n    - [Get groups for each installation](#get-groups-for-each-installation)\n    - [Get devices for each grou of each installation](#get-devices-for-each-grou-of-each-installation)\n    - [Get all devices from all installations shortcut](#get-all-devices-from-all-installations-shortcut)\n    - [Control a device](#control-a-device)\n    - [HVAC mode](#hvac-mode)\n      - [Available modes](#available-modes)\n      - [List supported modes for each devices](#list-supported-modes-for-each-devices)\n      - [Set HVAC mode on a master thermostat device (and all linked thermostats)](#set-hvac-mode-on-a-master-thermostat-device-and-all-linked-thermostats)\n  - [API documentation](#api-documentation)\n  - [Tests](#tests)\n    - [Update configuration in config_test.json](#update-configuration-in-config_testjson)\n    - [Run test script](#run-test-script)\n\n## Presentation\n\n### Abstract\n\nAllow to communicate easily with Airzone Cloud to retrieve information or to send commands (on/off, temperature, HVAC mode, ...)\n\nThis library manage the main Airzone Cloud API (try to connect to [www.airzonecloud.com](https://www.airzonecloud.com) to be sure).\n\nOfficial API documentation is available here : https://developers.airzonecloud.com/docs/web-api/\n\n### Module classes\n\n- **AirzoneCloud** : represent your AirzoneCloud account. Contains a list of your **installations** :\n  - **Installation**: represent one of your installation (like your home, an office, ...). Contains a list of its **groups** :\n    - **Group** : represent a group of **devices** in the installation\n      - **Device** : represent your thermostat to control\n\n![Airzonecloud tree elements](airzonecloud_tree_elements.png)\n\n## Usage\n\n### Install\n\n```bash\npip3 install AirzoneCloud\n```\n\n### Start API\n\n```python\nfrom AirzoneCloud import AirzoneCloud\napi = AirzoneCloud(\"email@domain.com\", \"password\")\n```\n\n### Get installations\n\n```python\nfor installation in api.installations:\n    print(\n        \"Installation(name={}, access_type={}, ws_ids=[{}], id={})\".format(\n            installation.name, installation.access_type, \", \".join(installation.ws_ids), installation.id\n        )\n    )\n```\n\nOutput :\n\n<pre>\nInstallation(name=Home, access_type=admin, ws_ids=[AA:BB:CC:DD:EE:FF], id=60f5cb990123456789abdcef)\n</pre>\n\n### Get installations\n\n```python\nfor installation in api.installations:\n    print(\n        \"Installation(name={}, access_type={}, ws_ids=[{}], id={})\".format(\n            installation.name, installation.access_type, \", \".join(installation.ws_ids), installation.id\n        )\n    )\n```\n\nOutput :\n\n<pre>\nInstallation(name=Home, access_type=admin, ws_ids=[AA:BB:CC:DD:EE:FF], id=60f5cb990123456789abdcef)\n</pre>\n\n### Get groups for each installation\n\n```python\nfor installation in api.installations:\n    print(installation)\n    for group in installation.groups:\n        print(\n            \"  Group(name={}, installation={}, id={})\".format(\n                group.name, group.installation.name, group.id\n            )\n        )\n```\n\nOutput :\n\n<pre>\nInstallation(name=Home)\n  Group(name=System 1, installation=Home, id=60f5cb990123456789abdce0)\n</pre>\n\n### Get devices for each grou of each installation\n\n```python\nfor installation in api.installations:\n    print(installation)\n    for group in installation.groups:\n        print(\"  \" + str(group))\n        for device in group.devices:\n            print(\n                \"    Device(name={}, is_connected={}, is_on={}, mode={}, current_temp={}, target_temp={}, id={}, ws_id={})\".format(\n                    device.name,\n                    device.is_connected,\n                    device.is_on,\n                    device.mode,\n                    device.current_temperature,\n                    device.target_temperature,\n                    device.id,\n                    device.ws_id,\n                )\n            )\n```\n\nOutput :\n\n<pre>\nInstallation(name=Home)\n  Group(name=System 1, installation=Home)\n    Device(name=Salon, is_connected=True, is_on=True, mode=heating, current_temp=20.9, target_temp=20.0, id=60f5cb990123456789abdce1, ws_id=AA:BB:CC:DD:EE:FF)\n    Device(name=Ch parents, is_connected=True, is_on=False, mode=heating, current_temp=17.2, target_temp=18.0, id=60f5cb990123456789abdce2, ws_id=AA:BB:CC:DD:EE:FF)\n    Device(name=Ch bebe, is_connected=True, is_on=False, mode=heating, current_temp=18.6, target_temp=19.5, id=60f5cb990123456789abdce3, ws_id=AA:BB:CC:DD:EE:FF)\n</pre>\n\n### Get all devices from all installations shortcut\n\n```python\nfor device in api.all_devices:\n    print(\n        \"Device(name={}, is_on={}, mode={}, current_temp={}, target_temp={}, id={})\".format(\n            device.name,\n            device.is_on,\n            device.mode,\n            device.current_temperature,\n            device.target_temperature,\n            device.id,\n        )\n    )\n```\n\nOutput :\n\n<pre>\nDevice(name=Salon, is_connected=True, is_on=True, mode=heating, current_temp=20.9, target_temp=20.0, id=60f5cb990123456789abdce1, ws_id=AA:BB:CC:DD:EE:FF)\nDevice(name=Ch parents, is_connected=True, is_on=False, mode=heating, current_temp=17.2, target_temp=18.0, id=60f5cb990123456789abdce2, ws_id=AA:BB:CC:DD:EE:FF)\nDevice(name=Ch bebe, is_connected=True, is_on=False, mode=heating, current_temp=18.6, target_temp=19.5, id=60f5cb990123456789abdce3, ws_id=AA:BB:CC:DD:EE:FF)\n</pre>\n\n### Control a device\n\nAll actions by default are waiting 1 second then refresh the device.\nYou can disable this behavior by adding auto_refresh=False.\n\n```python\n# get first device\ndevice = api.all_devices[0]\nprint(device)\n\n# start device & set temperature\ndevice.turn_on(auto_refresh=False).set_temperature(22)\nprint(device)\n\n# stopping device\ndevice.turn_off()\nprint(device)\n```\n\nOutput :\n\n<pre>\nDevice(name=Salon, is_connected=True, is_on=False, mode=heating, current_temp=20.8, target_temp=20.0)\nDevice(name=Salon, is_connected=True, is_on=True, mode=heating, current_temp=20.8, target_temp=22.0)\nDevice(name=Salon, is_connected=True, is_on=False, mode=heating, current_temp=20.8, target_temp=22.0)\n</pre>\n\n### HVAC mode\n\n#### Available modes\n\n- **stop** : Stop mode\n- **auto** : Automatic mode\n- **cooling** : Cooling mode\n- **heating** : Heating mode\n- **ventilation** : Ventilation mode\n- **dehumidify** : Dehumidifier / Dry mode\n- **emergency-heating** : Emergency heat mode\n- **air-heating** : Heat air mode (only compatible systems)\n- **radiant-heating** : Heat radiant mode (only compatible systems)\n- **combined-heating** : Heat combined mode (only compatible systems)\n- **air-cooling** : Cooling air mode (only compatible systems)\n- **radiant-cooling** : Cooling radiant mode (only compatible systems)\n- **combined-cooling** : Cooling combined mode (only compatible systems)\n\nOnly master thermostat device can update the mode.\n\n#### List supported modes for each devices\n\n```python\nfor device in api.all_devices:\n    print(\n        \"Device(name={}, mode={}, modes_availables={})\".format(\n            device.name,\n            device.mode,\n            device.modes_availables,\n        )\n    )\n```\n\nOutput :\n\n<pre>\nDevice(name=Salon, mode=heating, modes_availables=['cooling', 'heating', 'ventilation', 'dehumidify', 'stop'])\nDevice(name=Ch parents, mode=heating, modes_availables=[])\nDevice(name=Ch bebe, mode=heating, modes_availables=[])\n</pre>\n\nIf modes_availables is an empty list, your device is not the master thermostat.\n\n#### Set HVAC mode on a master thermostat device (and all linked thermostats)\n\n```python\ndevice = api.all_devices[0]\nprint(device)\n\n# set mode to cooling\ndevice.set_mode(\"cooling\")\nprint(device)\n```\n\nOutput :\n\n<pre>\nDevice(name=Salon, is_connected=True, is_on=True, mode=heating, current_temp=20.8, target_temp=20.0)\nDevice(name=Salon, is_connected=True, is_on=True, mode=cooling, current_temp=20.8, target_temp=20.0)\n</pre>\n\n## API documentation\n\n[API full doc](API.md)\n\n## Tests\n\n### Update configuration in config_test.json\n\n- **email** : used to log-in to you AirzoneCloud account (default to *changeme@example.com*)\n- **password** : used to log-in to you AirzoneCloud account (default to *changeme*)\n- **log_level** : minimum level of log to display : DEBUG | INFO | WARNING | ERROR | CRITICIAL (default to *INFO*)\n- **display_group_properties** : display all properties for each group (default to *true*).\n- **display_device_properties** : display all properties for each device (default to *true*).\n- **display_api_token** : ask to display token used to connect to the AirzoneCloud API (default to *false*). Useful for https://developers.airzonecloud.com/docs/web-api/\n- **refresh_before_display** : ask to call all refresh functions before displaying for test purpose (default to *false*).\n\n### Run test script\n\n```bash\n./test.py\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/max13fr/AirzoneCloud",
    "keywords": "airzone,airzonecloud,api",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AirzoneCloud",
    "package_url": "https://pypi.org/project/AirzoneCloud/",
    "platform": "",
    "project_url": "https://pypi.org/project/AirzoneCloud/",
    "project_urls": {
      "Homepage": "https://github.com/max13fr/AirzoneCloud"
    },
    "release_url": "https://pypi.org/project/AirzoneCloud/1.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Python3 library for Airzone Cloud API",
    "version": "1.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12754954,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dab26fa2fbf436f7264396e7d58254ce945e4ac809ce141f850fa4833c8796a0",
          "md5": "29dac5284c8d182b9563e68bc3267f0b",
          "sha256": "a8481b3eb18bec60ed639b3413ce34a0e07cee89a8b0c670c65dd824d489f29c"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "29dac5284c8d182b9563e68bc3267f0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 6267,
        "upload_time": "2020-04-18T17:26:35",
        "upload_time_iso_8601": "2020-04-18T17:26:35.151193Z",
        "url": "https://files.pythonhosted.org/packages/da/b2/6fa2fbf436f7264396e7d58254ce945e4ac809ce141f850fa4833c8796a0/AirzoneCloud-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09a3bfbdc0332cbc365b5c0e25f845ff9e1b3ccb45f77cca88b7e33e1ed86637",
          "md5": "abc4cbcaeeaf9fe923190345bc67543d",
          "sha256": "710752cab25bb17fa7657c2bb4920434591213ffe7080670bd3ca38340b560ca"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "abc4cbcaeeaf9fe923190345bc67543d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 12524,
        "upload_time": "2020-04-19T15:53:11",
        "upload_time_iso_8601": "2020-04-19T15:53:11.244126Z",
        "url": "https://files.pythonhosted.org/packages/09/a3/bfbdc0332cbc365b5c0e25f845ff9e1b3ccb45f77cca88b7e33e1ed86637/AirzoneCloud-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c16e5eb078e50171d20513a6f97075cbfe1268819e598e172db075211bd7a820",
          "md5": "46be701c71b2aa3f561c0939d8a552c9",
          "sha256": "b712498d0cad6c4cdcb06d986a8a739e76851d8e26363c6eb2bd8162c963aadd"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46be701c71b2aa3f561c0939d8a552c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11048,
        "upload_time": "2020-04-30T11:38:29",
        "upload_time_iso_8601": "2020-04-30T11:38:29.956387Z",
        "url": "https://files.pythonhosted.org/packages/c1/6e/5eb078e50171d20513a6f97075cbfe1268819e598e172db075211bd7a820/AirzoneCloud-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "176b40576cd99987aaeb57eaaaf8ae9f982cdddd72349734e9cc24c04a89ba4b",
          "md5": "b86929bde2a345f1379155b220e4ea53",
          "sha256": "34f5c6b99dfaf6503d9f7cc4243d26000427ecf9073491c16f8a7af1e089a234"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b86929bde2a345f1379155b220e4ea53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11225,
        "upload_time": "2020-05-22T06:46:03",
        "upload_time_iso_8601": "2020-05-22T06:46:03.694787Z",
        "url": "https://files.pythonhosted.org/packages/17/6b/40576cd99987aaeb57eaaaf8ae9f982cdddd72349734e9cc24c04a89ba4b/AirzoneCloud-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44474121eecdc3ba33d1357e49da4c5d81f541b39a91da2def2984e84ea56347",
          "md5": "0dda3cc157e8a00229f159eb11bb965f",
          "sha256": "b0987f35cdead6f7233c2d8dba7e0c6b8d0419702edf7edae4a01cd23e8d676d"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0dda3cc157e8a00229f159eb11bb965f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10124,
        "upload_time": "2020-10-31T08:18:04",
        "upload_time_iso_8601": "2020-10-31T08:18:04.639296Z",
        "url": "https://files.pythonhosted.org/packages/44/47/4121eecdc3ba33d1357e49da4c5d81f541b39a91da2def2984e84ea56347/AirzoneCloud-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4d10b88226f39cfec8f7f05f0e7d1b2089146293791fd95f863bcc1486c4fe4",
          "md5": "df7525c1ebf7d1a0d5350d9e461c946c",
          "sha256": "c185d1bc8d9ae82d120155239c55ca6c581a1813eea845cac573a22cd973ab93"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "df7525c1ebf7d1a0d5350d9e461c946c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10188,
        "upload_time": "2021-01-16T09:49:36",
        "upload_time_iso_8601": "2021-01-16T09:49:36.826073Z",
        "url": "https://files.pythonhosted.org/packages/d4/d1/0b88226f39cfec8f7f05f0e7d1b2089146293791fd95f863bcc1486c4fe4/AirzoneCloud-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c5518518a40754da444426852b1295d6d4fe6eb5a39a9d2887f77986aecba0d",
          "md5": "af7bf8d8ac6deb39f9526e8424fa48ee",
          "sha256": "92bcd5221ad980053c872720b51732f6e56b2e14a3528a6a1823ca83774d3093"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "af7bf8d8ac6deb39f9526e8424fa48ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9748,
        "upload_time": "2021-11-28T21:15:05",
        "upload_time_iso_8601": "2021-11-28T21:15:05.368287Z",
        "url": "https://files.pythonhosted.org/packages/6c/55/18518a40754da444426852b1295d6d4fe6eb5a39a9d2887f77986aecba0d/AirzoneCloud-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "312b4c1cfdecf7d3913554d67d76a90298a5b84027c6df6484a583448e3fff4d",
          "md5": "df0ac0587c2daee022c211036ab4abd6",
          "sha256": "193515d0030ef188ad836a8a3101846d5d51337fbdd6438c54e79ea2e82726c6"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "df0ac0587c2daee022c211036ab4abd6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10215,
        "upload_time": "2021-11-28T22:09:55",
        "upload_time_iso_8601": "2021-11-28T22:09:55.648551Z",
        "url": "https://files.pythonhosted.org/packages/31/2b/4c1cfdecf7d3913554d67d76a90298a5b84027c6df6484a583448e3fff4d/AirzoneCloud-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48956ff37c946becb203bb7016c43815ca7724aedcc7c8c98be893b680283780",
          "md5": "a05cbc4819dbb284a228f053c6630d71",
          "sha256": "6c0c50c0663c29a0de9fb8050d35af72ca290927cdd065ab8930c65633e26bd7"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a05cbc4819dbb284a228f053c6630d71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10170,
        "upload_time": "2021-11-28T22:11:17",
        "upload_time_iso_8601": "2021-11-28T22:11:17.416443Z",
        "url": "https://files.pythonhosted.org/packages/48/95/6ff37c946becb203bb7016c43815ca7724aedcc7c8c98be893b680283780/AirzoneCloud-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "330574e36508c51b7305c9b82c6cde91fae3ecf71e1661fa13270694212c2b07",
          "md5": "fb1b2f0f880187c2c21ec31e5caf9c0e",
          "sha256": "2d5d9202a9f2ecdac16c0b5619a05c2093a7d80abb85a7d7c4073841e4aa52fd"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb1b2f0f880187c2c21ec31e5caf9c0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10878,
        "upload_time": "2021-12-18T14:24:37",
        "upload_time_iso_8601": "2021-12-18T14:24:37.070226Z",
        "url": "https://files.pythonhosted.org/packages/33/05/74e36508c51b7305c9b82c6cde91fae3ecf71e1661fa13270694212c2b07/AirzoneCloud-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4300ed2716da5897b55e458332cc3f44f962c585d6d1eff02878ed8b91f0623b",
          "md5": "d3aa0f047dbbf0606fc93563a17c3ece",
          "sha256": "409d37cb4c07540e225a16bd2add8b25f3b6a050ae0ba958bff1d5034dbfb71d"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3aa0f047dbbf0606fc93563a17c3ece",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10893,
        "upload_time": "2021-12-19T13:39:29",
        "upload_time_iso_8601": "2021-12-19T13:39:29.247211Z",
        "url": "https://files.pythonhosted.org/packages/43/00/ed2716da5897b55e458332cc3f44f962c585d6d1eff02878ed8b91f0623b/AirzoneCloud-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e938d56b9ba00b791b75699d2b619dda88e660f751dffbf7540345f76670d6d2",
          "md5": "a749a6ba3a09d575fd97fc3986976aea",
          "sha256": "d63365ba14c32a34ab5c3fa5c5caa573816396d509cb87be849df11b9eb55d9c"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a749a6ba3a09d575fd97fc3986976aea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10903,
        "upload_time": "2021-12-21T19:31:26",
        "upload_time_iso_8601": "2021-12-21T19:31:26.666574Z",
        "url": "https://files.pythonhosted.org/packages/e9/38/d56b9ba00b791b75699d2b619dda88e660f751dffbf7540345f76670d6d2/AirzoneCloud-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d3e757411bfc01fdf5f9c39abbab3f27d705471df053e908d7f69b55f90f65b",
          "md5": "0b0d7302b82b42bcfa7769329845b14b",
          "sha256": "4684943218e196bb1426470e034a46c19d1352742a5793ea8bb851c93cf78362"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b0d7302b82b42bcfa7769329845b14b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11152,
        "upload_time": "2022-01-01T13:49:39",
        "upload_time_iso_8601": "2022-01-01T13:49:39.720181Z",
        "url": "https://files.pythonhosted.org/packages/2d/3e/757411bfc01fdf5f9c39abbab3f27d705471df053e908d7f69b55f90f65b/AirzoneCloud-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "198c01b55c1a674cd20562eaa639d2874c0078ea3fd2239a2804ac39b298c32b",
          "md5": "542f850edfa36bca7263344263c24a46",
          "sha256": "3a2aad5069c5731b5207dd72bdb3e3c2c0299fdb574f1faedb6468438a2e1f49"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "542f850edfa36bca7263344263c24a46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11135,
        "upload_time": "2022-01-01T14:23:45",
        "upload_time_iso_8601": "2022-01-01T14:23:45.604683Z",
        "url": "https://files.pythonhosted.org/packages/19/8c/01b55c1a674cd20562eaa639d2874c0078ea3fd2239a2804ac39b298c32b/AirzoneCloud-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e06b7d41c51c0fc3c683840b084ca87c792554fc1eacbbb7d5e083375ca27bc0",
          "md5": "0eae768eb7e0616af6e0f287bcdb8d9c",
          "sha256": "9cd04626495819df3709b65b72bed8381a4c946487a289e8c34d140e489b9f53"
        },
        "downloads": -1,
        "filename": "AirzoneCloud-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0eae768eb7e0616af6e0f287bcdb8d9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11157,
        "upload_time": "2022-02-01T13:31:18",
        "upload_time_iso_8601": "2022-02-01T13:31:18.097410Z",
        "url": "https://files.pythonhosted.org/packages/e0/6b/7d41c51c0fc3c683840b084ca87c792554fc1eacbbb7d5e083375ca27bc0/AirzoneCloud-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e06b7d41c51c0fc3c683840b084ca87c792554fc1eacbbb7d5e083375ca27bc0",
        "md5": "0eae768eb7e0616af6e0f287bcdb8d9c",
        "sha256": "9cd04626495819df3709b65b72bed8381a4c946487a289e8c34d140e489b9f53"
      },
      "downloads": -1,
      "filename": "AirzoneCloud-1.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0eae768eb7e0616af6e0f287bcdb8d9c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 11157,
      "upload_time": "2022-02-01T13:31:18",
      "upload_time_iso_8601": "2022-02-01T13:31:18.097410Z",
      "url": "https://files.pythonhosted.org/packages/e0/6b/7d41c51c0fc3c683840b084ca87c792554fc1eacbbb7d5e083375ca27bc0/AirzoneCloud-1.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}