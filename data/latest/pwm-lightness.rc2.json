{
  "info": {
    "author": "Gregory P. Smith",
    "author_email": "greg@krypto.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: MicroPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# pwm\\_lightness module\n\nGenerates lightness correction tables for eyeball pleasing LED brightness.\n\n![Antialiased question mark in portrait mode on a CharlieWing](images/questionmark.jpg)\n\nWant a smooth fade on your pulsing LEDs? Want antialiasing on LED matrix fonts?\nUse this library to correct your raw linear brightness values for human eyeball\npersistence of vision perception sensitivity.\n\nThe adjustment is otherwise known as the [CIE 1931 Lightness\ncurve](https://www.photonstophotos.net/GeneralTopics/Exposure/Psychometric_Lightness_and_Gamma.htm).\nIt is also [covered in many\nbooks](https://www.google.com/search?q=903.3+116+formula&tbm=bks).  The\nresearch was done in the 1920s, winding up as one part of the International\nCommission on Illumination (CIE) 1931 standard.\n\nThis module does work on CircuitPython (and MicroPython if you build with\nfloating point enabled).  In microcontroller environments recomputing a table\non device is often overkill.  Precompute the table(s) you need using this\nlibrary and store them as data to save precious RAM.\n\n## Smoothly fade an LED\n\n_This example assumes [CircuitPython](https://circuitpython.org/) or\n[adafruit-blinka](https://pypi.org/project/Adafruit-Blinka/)._\n\n```python\nimport time, board, pulseio, pwm_lightness\nPWM = pwm_lightness.get_pwm_table(0xffff, max_input=100)\noutput_pin = pulseio.PWMOut(board.D13)\nwhile True:\n    for v in range(100, -1, -1):\n        output_pin.duty_cycle = PWM[v]\n        time.sleep(0.02)\n    for v in range(1, 100):\n        output_pin.duty_cycle = PWM[v]\n        time.sleep(0.02)\n```\n\nIt is similarly useful with the RGB values you send to programmable LED strips.\n\n## Improve antialiased fonts or other 8-bit images\n\nShown here using [Pillow](https://pypi.org/project/Pillow/) to make an\nantialiased font shine rather than appearing as a bold blur:  \n_This example assumes a RPi connected to an [I2C Adafruit charlieplexed\nLED matrix](https://www.adafruit.com/?q=IS31FL3731)._\n\n```python\nimport pwm_lightness\nPWM = pwm_lightness.get_pwm_table(60)  # 0..255 is our max LED PWM value.\nimport board, busio, adafruit_is31fl3731, PIL\ni2c = busio.I2C(board.SCL, board.SDA)\nled_matrix = adafruit_is31fl3731.CharlieBonnet(i2c)\nfont = PIL.ImageFont.truetype('fonts/RobotoCondensed-Regular.ttf', 16)\nimage = PIL.Image.new('L', (led_matrix.height, led_matrix.width), 0)\ndraw = PIL.ImageDraw.Draw(image)\n# fill=255 gives us the most antialiasing detail to work with.  Control\n# brightness using the max_output value passed to get_pwm_table() above.\ndraw.text((0,-1), '?', fill=255, font=font)\nimage = image.point(PWM)  # Corrects linear 0..255 values for PWM lightness.\nimage = image.transpose(PIL.Image.ROTATE_90)  # Match the matrix orientation.\nled_matrix.image(image)  # Send pixels to our LED display.\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gpshead/pwm_lightness",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pwm-lightness",
    "package_url": "https://pypi.org/project/pwm-lightness/",
    "platform": "",
    "project_url": "https://pypi.org/project/pwm-lightness/",
    "project_urls": {
      "Homepage": "https://github.com/gpshead/pwm_lightness"
    },
    "release_url": "https://pypi.org/project/pwm-lightness/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A tiny library to calculate CIE 1931 lightness tables for eyeball friendly PWM LED brightness.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7617974,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cbbc281993fc4601f41f1defe3785144e2d7f7df9d84ff47aaa9519b50ab1a8",
          "md5": "214f6ba827d6c548c767dd4319153c56",
          "sha256": "4e334e93715bc8919d70f84897231acae846946802767964a411dad2cf0d69fa"
        },
        "downloads": -1,
        "filename": "pwm_lightness-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "214f6ba827d6c548c767dd4319153c56",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 7894,
        "upload_time": "2020-07-01T22:18:45",
        "upload_time_iso_8601": "2020-07-01T22:18:45.363198Z",
        "url": "https://files.pythonhosted.org/packages/8c/bb/c281993fc4601f41f1defe3785144e2d7f7df9d84ff47aaa9519b50ab1a8/pwm_lightness-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "878df35379342499580891ea5bef322b7eef2de4e16eb15414d60f9a5e084bb9",
          "md5": "0929f1ef5b5d8db51405121a908d218f",
          "sha256": "9e4a6656038498d1e8dc921fc4262c2ea8de2afe4fb35b4f0917fe625b90150f"
        },
        "downloads": -1,
        "filename": "pwm_lightness-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0929f1ef5b5d8db51405121a908d218f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 7883,
        "upload_time": "2020-07-02T19:26:59",
        "upload_time_iso_8601": "2020-07-02T19:26:59.557321Z",
        "url": "https://files.pythonhosted.org/packages/87/8d/f35379342499580891ea5bef322b7eef2de4e16eb15414d60f9a5e084bb9/pwm_lightness-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "878df35379342499580891ea5bef322b7eef2de4e16eb15414d60f9a5e084bb9",
        "md5": "0929f1ef5b5d8db51405121a908d218f",
        "sha256": "9e4a6656038498d1e8dc921fc4262c2ea8de2afe4fb35b4f0917fe625b90150f"
      },
      "downloads": -1,
      "filename": "pwm_lightness-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0929f1ef5b5d8db51405121a908d218f",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 7883,
      "upload_time": "2020-07-02T19:26:59",
      "upload_time_iso_8601": "2020-07-02T19:26:59.557321Z",
      "url": "https://files.pythonhosted.org/packages/87/8d/f35379342499580891ea5bef322b7eef2de4e16eb15414d60f9a5e084bb9/pwm_lightness-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}