{
  "info": {
    "author": "",
    "author_email": "Jernej Kladnik <jernej.kladnik@adacta-fintech.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "# Environment parser\n\n## Requirements\n\n* Python - Minimum required version is 3.8\n\n## Using the environment parser\n\nEnvironmentParser class parses all environment variables with certain prefix and\ncreates a Python dictionary based on the structure of these variables. The values\nare converted to booleans and integers when detected as such by default.\n\nGeneral variable structure rules:\n\n* variable name after prefix should not be empty\n* first character of variable name after prefix should not be \"_\"\n* different levels of depth within environment variables are specified by using\n  \"__\" string.\n* arrays can be specified by using numeric index as a key within particular level\n* array numeric indices should be defined in order, variables with invalid index\n  will be discarded\n\nValue conversion rules:\n\n* value will be converted to boolean if it matches `true` or `false` when lower\n  cased\n* value will be converted to integer if it contains digits only\n\n### Using the EnvironmentParser class\n\nExample of instantiating of EnvironmentParser object using `MYPREFIX` as a prefix\nfor environment variables. Upon instantiation, the object will automatically parse\nthe current environment variables and store them in its `configuration` property.\n\n```python\nimport json\nfrom adi_env_parser import EnvironmentParser\n\nparser = EnvironmentParser(prefix=\"MYPREFIX\")\nprint(json.dump(json.dumps(parser.configuration, indent=4)))\n```\n\nIt is possible to provide existing JSON formatted file as a configuration base.\n\n```python\nimport json\nfrom adi_env_parser import EnvironmentParser\n\nparser = EnvironmentParser(prefix=\"MYPREFIX\", config_file=\"configuration.json\")\nprint(json.dump(json.dumps(parser.configuration, indent=4)))\n```\n\nIt is possible to disable value conversion by setting `convert_values` parameter\nwhen instantiating `EnvironmentParser` object.\n\n```python\nfrom adi_env_parser import EnvironmentParser\n\nparser = EnvironmentParser(prefix=\"MYPREFIX\", convert_values=False)\n```\n\n### Examples\n\nExamples use PYENV as environment variable prefix. This is default prefix used\nwhen not specifying one explicitly when instatiating EnvironmentParser.\n\n#### Creating dictionary\n\nEnvironment variables:\n\n```sh\nPYENV_hotel_name=\"Blue Falcon\"\nPYENV_rooms__room_1=\"James Holden\"\nPYENV_rooms__room_2=\"Amos Burton\"\nPYENV_rooms__room_3=\"Naomi Nagata\"\nPYENV_rooms__room_4=\"Alex Kamal\"\n```\n\nResulting object:\n\n```json\n{\n    \"hotel_name\": \"Blue Falcon\",\n    \"rooms\": {\n        \"room_1\": \"James Holden\",\n        \"room_2\": \"Amos Burton\",\n        \"room_3\": \"Naomi Nagata\",\n        \"room_4\": \"Alex Kamal\"\n    }\n}\n```\n\n#### Creating array\n\nEnvironment variables:\n\n```sh\nPYENV_hotel_name=\"Blue Falcon\"\nPYENV_room_1__inventory__0=\"Wardrobe\"\nPYENV_room_1__inventory__1=\"Table\"\nPYENV_room_1__inventory__2=\"Lamp\"\n```\n\nResulting object:\n\n```json\n{\n    \"hotel_name\": \"Blue Falcon\",\n    \"room_1\": {\n        \"inventory\": [\n            \"Wardrobe\",\n            \"Table\",\n            \"Lamp\"\n        ]\n    }\n}\n```\n\n#### Dictionaries within list\n\nEnvironment variables:\n\n```sh\nPYENV_hotel_name=\"Blue Falcon\"\nPYENV_rooms__0__name=\"Room 1\"\nPYENV_rooms__0__capacity=\"2\"\nPYENV_rooms__2__name=\"Room 2\"\nPYENV_rooms__2__capacity=\"2\"\n```\n\nResulting object:\n\n```json\n{\n    \"hotel_name\": \"Blue Falcon\",\n    \"rooms\": [\n        {\n            \"name\": \"Room 1\",\n            \"capacity\": \"2\"\n        },\n        {\n            \"name\": \"Room 2\",\n            \"capacity\": \"2\"\n        }\n    ]\n}\n```\n\n### Console utility\n\nModule provides console utility which can be used for parsing of environment\nvariables. It also supports reading of existing JSON formatted file and setting\nindentation for output of created configuration JSON object.\n\n```sh\nâžœ adi-env-parser --help\nusage: adi-env-parser -p <prefix> -j <base_json_file>\n\nParses environment variables with defined prefix and creates JSON output from the parsed structure.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --prefix [PREFIX], -p [PREFIX]\n                        Environment variable prefix. Default: PYENV\n  --json [JSON], -j [JSON]\n                        JSON formatted file to read as base configuration\n  --indent [INDENT], -i [INDENT]\n                        Number of spaces to use for indentation of output JSON string\n```\n\n## Development\n\n### Install development packages\n\n```sh\npip install -e \".[dev]\"\npip install -e \".[test]\"\n# Install build-local package group if you want to build packages locally\npip install -e \".[build-local]\"\n```\n\n### Install pre-commit\n\n```sh\npre-commit install\n```\n\n### Building and publishing new version\n\nNew version is built and published on tag in GitHub repository. The package version is infered from commit name.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License Copyright (c) 2022 ADACTA d.o.o. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "adi-env-parser",
    "package_url": "https://pypi.org/project/adi-env-parser/",
    "platform": null,
    "project_url": "https://pypi.org/project/adi-env-parser/",
    "project_urls": {
      "documentation": "https://github.com/adactafintech/environment-parser",
      "homepage": "https://github.com/adactafintech/environment-parser",
      "repository": "https://github.com/adactafintech/environment-parser"
    },
    "release_url": "https://pypi.org/project/adi-env-parser/1.0.2/",
    "requires_dist": [
      "setuptools (>=45) ; extra == 'build-local'",
      "setuptools-scm[toml] (>=6.2) ; extra == 'build-local'",
      "build ; extra == 'build-local'",
      "pre-commit ; extra == 'dev'",
      "autopep8 ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": "<4,>=3.8",
    "summary": "Adinsure Environment parser",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15301959,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "211246b1ae9c2b80f326070fbdd4318dde494b38541bba0e884382149a787ea3",
          "md5": "c86ab9a5d0c3cd8c72f3c501f19c6ba2",
          "sha256": "4939f5a01e3a64da358c1c76c944fa70881fff3139791144f214b43d8119ce22"
        },
        "downloads": -1,
        "filename": "adi_env_parser-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c86ab9a5d0c3cd8c72f3c501f19c6ba2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4,>=3.8",
        "size": 9006,
        "upload_time": "2022-10-03T08:17:34",
        "upload_time_iso_8601": "2022-10-03T08:17:34.100222Z",
        "url": "https://files.pythonhosted.org/packages/21/12/46b1ae9c2b80f326070fbdd4318dde494b38541bba0e884382149a787ea3/adi_env_parser-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "047765680f068163a3f59fcaccbdcb90a780c1a9a638317ae49fee847d774dfd",
          "md5": "c64f706d580b472cd18850686186330c",
          "sha256": "3594f48ffb2cd54907457d5bd22ccd673cf3c2c3b2aef09bba6a5a21eedc526b"
        },
        "downloads": -1,
        "filename": "adi_env_parser-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c64f706d580b472cd18850686186330c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4,>=3.8",
        "size": 9023,
        "upload_time": "2022-10-03T09:33:03",
        "upload_time_iso_8601": "2022-10-03T09:33:03.211087Z",
        "url": "https://files.pythonhosted.org/packages/04/77/65680f068163a3f59fcaccbdcb90a780c1a9a638317ae49fee847d774dfd/adi_env_parser-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b86b92378b3f0bfacb0cbb4d6f29aa0826556a3e2e2dbdcc6c93cba97ee5ffd",
          "md5": "f23e9595dda141662ec738efef5396b5",
          "sha256": "5b61202b819a3f38a45e97a12699da269f9c7b545c8e45f3b497c6aabf743bfa"
        },
        "downloads": -1,
        "filename": "adi_env_parser-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f23e9595dda141662ec738efef5396b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4,>=3.8",
        "size": 9475,
        "upload_time": "2022-10-04T12:32:02",
        "upload_time_iso_8601": "2022-10-04T12:32:02.848777Z",
        "url": "https://files.pythonhosted.org/packages/0b/86/b92378b3f0bfacb0cbb4d6f29aa0826556a3e2e2dbdcc6c93cba97ee5ffd/adi_env_parser-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b86b92378b3f0bfacb0cbb4d6f29aa0826556a3e2e2dbdcc6c93cba97ee5ffd",
        "md5": "f23e9595dda141662ec738efef5396b5",
        "sha256": "5b61202b819a3f38a45e97a12699da269f9c7b545c8e45f3b497c6aabf743bfa"
      },
      "downloads": -1,
      "filename": "adi_env_parser-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f23e9595dda141662ec738efef5396b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<4,>=3.8",
      "size": 9475,
      "upload_time": "2022-10-04T12:32:02",
      "upload_time_iso_8601": "2022-10-04T12:32:02.848777Z",
      "url": "https://files.pythonhosted.org/packages/0b/86/b92378b3f0bfacb0cbb4d6f29aa0826556a3e2e2dbdcc6c93cba97ee5ffd/adi_env_parser-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}