{
  "info": {
    "author": "Aaron McMillin",
    "author_email": "AMcMillin@jbssolutions.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Logging"
    ],
    "description": "# Boston Logger\n\nSmaht logging solutions for Django applications.\n\n## Basic Usage\n\nAdd the `RequestResponseLoggerMiddleware` middleware in your Django project's\nsettings file to log all request/responses that Django handles.\n\nImport `boston_logger.requests_monkey_patch` (or set the `ENABLE_REQUESTS_LOGGING` flag to\n`True`) to log all requests made through the `requests` library.\n\n## For Django settings file\n\nIf you want to configure in settings.py start with this:\n\n```\nBOSTON_LOGGER = {\n    \"ENABLE_OUTBOUND_REQUEST_LOGGING\": True,\n    \"ENABLE_LOGGING_MIDDLEWARE\": True,\n    \"ENABLE_SENSITIVE_PATHS_PROCESSOR\": False,\n    \"ENABLE_REQUESTS_LOGGING\": True,  # Enable the requests monkey patch\n    \"MAX_VERBOSE_OUTPUT_LENGTH\": 500,\n    \"MAX_JSON_DATA_TO_LOG\": 0,  # Do not limit json output size, by default\n    \"MIDDLEWARE_BLOCKLIST\": [\"admin:index\", \"swagger-docs\"],\n    \"LOGGER_NAME\": \"boston_logger\",\n    \"LOG_RESPONSE_CONTENT\": False,\n    \"PREFER_TEXT_FALLBACK_MASKING\": False,\n    \"SHOW_NESTED_KEYS_IN_SENSITIVE_PATHS\": False,\n}\n```\n\n```\nLOGGING = {\n    'disable_existing_loggers': True,\n    'version': 1,\n    'formatters': {\n        'json_formatter': {\n            '()': 'boston_logger.logger.JsonFormatter',\n            'default_extra': {\n                '_logging_metadata': {\n                    'category': '/app/environment',\n                },\n            },\n        },\n        'smart_formatter': {\n            '()': 'boston_logger.logger.SmartFormatter',\n        },\n    },\n    'filters': {\n        'request_edge': {\n            '()': 'boston_logger.logger.RequestEdgeEndFilter',\n        },\n    },\n    'handlers': {\n        'console': {\n            'class': 'logging.StreamHandler',\n            'level': 'DEBUG',\n            'formatter': 'smart_formatter',\n            'filters': ['request_edge'],\n        },\n        'json': {\n            'class': 'logging.StreamHandler',\n            'level': 'DEBUG',\n            'formatter': 'json_formatter',\n            'filters': ['request_edge'],\n        },\n    },\n    'loggers': {\n        '': {\n            'handlers': ['console'],\n            'level': os.environ.get('DJANGO_LOG_LEVEL', 'INFO'),\n        },\n        'boston_logger': {\n            'handlers': ['json'],\n            'level': os.environ.get('DJANGO_LOG_LEVEL', 'DEBUG'),\n            'propagate': False,\n        },\n    },\n}\n```\n\n## All config options, with defaults\n\n- `ENABLE_OUTBOUND_REQUEST_LOGGING`: True - Requests lib requests will be\n  captured (Only if requests has been patched by the monkey patch, or\n  `ENABLE_REQUESTS_LOGGING` settings).\n- `ENABLE_LOGGING_MIDDLEWARE`: True - The django middleware will log START/END\n  events for incoming requests.\n- `ENABLE_SENSITIVE_PATHS_PROCESSOR`: False - `sensitive_paths.SensitivePaths`\n  objects will mask data\n- `ENABLE_REQUESTS_LOGGING`: False - Monkey patches requests lib at startup\n- `MAX_VERBOSE_OUTPUT_LENGTH`: 500 - Character length for request, header, and\n  response data in SmartFormatter (console logs).\n- `MAX_JSON_DATA_TO_LOG`: 0 - If greater than zero, truncate json payloads to\n  this size\n- `MIDDLEWARE_BLOCKLIST`: [`admin:index`, `swagger-docs`] - Middleware will not\n  log requests that match these named URLs, must be a list.\n- `LOGGER_NAME`: `boston_logger` - Default name of the logger that all request logs\n  will be sent to.\n- `LOG_RESPONSE_CONTENT`: False - Log the json responses the site is sending.\n- `PREFER_TEXT_FALLBACK_MASKING`: False - If parsing text data to sanitize as a\n  query string fails, mask the whole value.\n- `SHOW_NESTED_KEYS_IN_SENSITIVE_PATHS`: False - When True, the objects in a\n  sensitve path will show keys, but all values will be masked. When False, the\n  entire object will be replaced with the masked string.\n\n## Filtering Sensitive Data\n\n`ENABLE_SENSITIVE_PATHS_PROCESSOR` is set to `False` by default. If enabled, you\nmust define filtering rules and activate them.\n\nExample:\n\n```python\nimport requests\nfrom django.http import JsonResponse\n\nfrom boston_logger.context_managers import  SensitivePathContext\nfrom boston_logger.sensitive_paths import SensitivePaths, add_mask_processor\n\n# Global processors are applied to all log messages\n# A SensitivePaths instance is the only implemented processor at this time.\n# It will mask json and querystring data that matches the given paths.\nadd_mask_processor(\n    \"GlobalRuleName\", SensitivePaths(\"obj1/key1\", \"list1\"), is_global=True\n)\n\n# Non Global rules must be activated per log message\nadd_mask_processor(\n    \"SpecialRule\", SensitivePaths(\"specific_obj1/key1\"), is_global=False\n)\n\nwith SensitivePathContext(\"SpecialRule\"):\n    # SpecialRule will apply to logging triggered for this request\n    requests.get(\"https://example.com\")\n# But not this one\nrequests.get(\"https://example.com\")\n\ndef django_view(request):\n    response = JsonResponse({})\n    # SpecialRule will apply to logging triggered for this response\n    response._apply_mask_processors = [\"SpecialRule\"]\n    return response\n\n# \"ALL\" is a built-in rule which masks the entire payload\nwith SensitivePathContext(\"ALL\"):\n    # All request data, response data, and headers will be masked.\n    requests.get(\"https://example.com\")\n```\n\n\n## Reducing Log Size\n\n`MAX_JSON_DATA_TO_LOG` tries to ensure that json log messages don't get beyond\na certain size. If it is set to a non-zero value, we use it as a message\nlength limit. If the message is too long, we truncate the response data.\n\n\n## Middleware\n\nIf you're using the `RequestResponseMiddleware` in your Django application, you\ncan override `BOSTON_LOGGER.MIDDLEWARE_BLOCKLIST` in your settings.py if you\ndon't want to generate logs for given URLs. The argument expected is a list of\nURLs names. By default it won't log admin and swagger requests.\n\n\n## Log JSONResponses\n\n`LOG_RESPONSE_CONTENT` is set to `False` by default. Setting it to `True` will\nadd JSON data to the log responses of `django.JsonResponse`.\n\n\n## Adding Notes\n\nBoston Logger allows you to add custom notes data to log messages.  This can be\nany type of data that is JSON serializable (recommended to be a string or simple\ndictionary).\n\nTo add notes to an `INCOMING` request (i.e. one handled by the middleware),\nsimply add an attribute to the WSGI request object called `_request_notes`; the\n`JsonFormatter` will include it in the JSON log output.\n\n**Note** that if you are using Django REST Framework, the incoming `request`\nobject in your `ViewSet` or view method(s) will be an abstraction of the\noriginal WSGI request.  You'll need to set the attribute on `request._request`,\ne.g.:\n\n```python\nsetattr(request._request, '_request_notes', 'Some extra log data here.')\n```\n\nTo add notes to `OUTGOING` requests (i.e. you're using the `requests` library to\nsend an external request to another service/system), it's recommend you leverage\nthe `requests_monkey_patch` functionality described above.  This will allow you\nto specify a `notes` keyword argument which will attach your notes metadata onto\nthe `OUTGOING` log message emitted by the `JsonFormatter`:\n\n```python\nrequests.post(url, data, notes='Some extra log data here.')\n```\n\nAlso, remember that you can always use the `RequestLogContext` and attach your\nnotes that way:\n\n```python\nwith RequestLogContext(method='post', notes='Some extra log data here.') as log_context:\n    response = requests.post(url, data)\n    request = response.request\n\n    log_context.request = request\n    log_context.response = response\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "boston-logger",
    "package_url": "https://pypi.org/project/boston-logger/",
    "platform": null,
    "project_url": "https://pypi.org/project/boston-logger/",
    "project_urls": {
      "Source": "https://github.com/JBSinc/boston-logger"
    },
    "release_url": "https://pypi.org/project/boston-logger/1.3.0/",
    "requires_dist": [
      "requests (>=2.18.0)",
      "configular (>=1.1.0)",
      "Django (>=1.10) ; extra == 'django'",
      "pytest ; extra == 'test'",
      "pytest-coverage ; extra == 'test'",
      "pytest-mock ; extra == 'test'",
      "python-dateutil ; extra == 'test'",
      "Django (<5,>=2.2) ; extra == 'test'"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16012626,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8e7adfe4358a694a4d8d5cf432fc1a1ac7c2d02af0c167cfd55b8e3b95c21d8",
          "md5": "2abcd937cb05c7b3a18c7c665ab15f57",
          "sha256": "e2798719b128caa23ed6790cbcaf4b770d962d26f30c1852dcbe81869e93812c"
        },
        "downloads": -1,
        "filename": "boston_logger-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2abcd937cb05c7b3a18c7c665ab15f57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 13933,
        "upload_time": "2022-11-08T16:53:42",
        "upload_time_iso_8601": "2022-11-08T16:53:42.850893Z",
        "url": "https://files.pythonhosted.org/packages/a8/e7/adfe4358a694a4d8d5cf432fc1a1ac7c2d02af0c167cfd55b8e3b95c21d8/boston_logger-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a651c343d8c40188d2f7f9ae69dcb1995ca8eb8cdb66b9cd598ee7ff576a4b81",
          "md5": "d6290b0a41096ebc370b79dcbc4a4b35",
          "sha256": "5356066c6cc8cd440e349580b61f722c0fa29e4e24ca4decd19fca3a7b7fdef8"
        },
        "downloads": -1,
        "filename": "boston-logger-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d6290b0a41096ebc370b79dcbc4a4b35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 21927,
        "upload_time": "2022-11-08T16:53:44",
        "upload_time_iso_8601": "2022-11-08T16:53:44.957634Z",
        "url": "https://files.pythonhosted.org/packages/a6/51/c343d8c40188d2f7f9ae69dcb1995ca8eb8cdb66b9cd598ee7ff576a4b81/boston-logger-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "531e8444365655b67c34f7567020f96899c6057f4c9b2812d99cad18ec0f1b20",
          "md5": "c77c2c47d436bdbfdef1b4f126734cd3",
          "sha256": "caab644e63a05ce4b755ea6a112b9afec8c3a4f5a67939df1ae11225c0630057"
        },
        "downloads": -1,
        "filename": "boston_logger-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c77c2c47d436bdbfdef1b4f126734cd3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 14048,
        "upload_time": "2022-11-10T15:49:41",
        "upload_time_iso_8601": "2022-11-10T15:49:41.537308Z",
        "url": "https://files.pythonhosted.org/packages/53/1e/8444365655b67c34f7567020f96899c6057f4c9b2812d99cad18ec0f1b20/boston_logger-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df130e0e5b0bb0a6855feb825554ad2bd9e88797924d2dbf75db3816fe385445",
          "md5": "e3c154787f6395226fa90ea9d646983f",
          "sha256": "d8366a9f931cccd551721ab3230d9cb0d1a0761df88abc1039be755ae921089f"
        },
        "downloads": -1,
        "filename": "boston-logger-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3c154787f6395226fa90ea9d646983f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 22080,
        "upload_time": "2022-11-10T15:49:43",
        "upload_time_iso_8601": "2022-11-10T15:49:43.379776Z",
        "url": "https://files.pythonhosted.org/packages/df/13/0e0e5b0bb0a6855feb825554ad2bd9e88797924d2dbf75db3816fe385445/boston-logger-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac017253be21c039bb09f9d27650d6777276a46fb58536af659def5feb8aa60c",
          "md5": "c12f683a0546d8cd359ada10849aa9ba",
          "sha256": "6fb2348c0b9beb298fd3e23e9d46d1d1b1b77d1e2005f73bff7910a80a53a20d"
        },
        "downloads": -1,
        "filename": "boston_logger-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c12f683a0546d8cd359ada10849aa9ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 14034,
        "upload_time": "2022-11-11T05:52:23",
        "upload_time_iso_8601": "2022-11-11T05:52:23.519480Z",
        "url": "https://files.pythonhosted.org/packages/ac/01/7253be21c039bb09f9d27650d6777276a46fb58536af659def5feb8aa60c/boston_logger-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e84617171cb723e25484aa262f4ffee0c762dbffc51f86663ea8fb30c1012a35",
          "md5": "6cb2d426d33930076b4d415b4c1bdef7",
          "sha256": "104b445d3d09c270454ca7abbbaa53f710fd035449055c64016f9b4d99d91512"
        },
        "downloads": -1,
        "filename": "boston-logger-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6cb2d426d33930076b4d415b4c1bdef7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 22046,
        "upload_time": "2022-11-11T05:52:25",
        "upload_time_iso_8601": "2022-11-11T05:52:25.167052Z",
        "url": "https://files.pythonhosted.org/packages/e8/46/17171cb723e25484aa262f4ffee0c762dbffc51f86663ea8fb30c1012a35/boston-logger-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89de3c6e0bf215483cf6d115e16dc63248375e38c1a311f70dc20807ad8b49ad",
          "md5": "2c4c6718220e6a284695469ec915c21a",
          "sha256": "05200acfde7a8374eeda1245f9bd50dc9d92eda02fd43623d22224f4fcbb9afa"
        },
        "downloads": -1,
        "filename": "boston_logger-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c4c6718220e6a284695469ec915c21a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 14056,
        "upload_time": "2022-11-18T15:41:20",
        "upload_time_iso_8601": "2022-11-18T15:41:20.104268Z",
        "url": "https://files.pythonhosted.org/packages/89/de/3c6e0bf215483cf6d115e16dc63248375e38c1a311f70dc20807ad8b49ad/boston_logger-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4236c539a07b0b78362dec947ebf16e33396b379ff3eb8846753d5f52dcfd06e",
          "md5": "0ec43577dffb54676889add9074f79a6",
          "sha256": "f6e42a7657f190ee20fbafb191d89b7d21ad324d8c875ce8b68f641e4647903a"
        },
        "downloads": -1,
        "filename": "boston-logger-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ec43577dffb54676889add9074f79a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 22091,
        "upload_time": "2022-11-18T15:41:21",
        "upload_time_iso_8601": "2022-11-18T15:41:21.361141Z",
        "url": "https://files.pythonhosted.org/packages/42/36/c539a07b0b78362dec947ebf16e33396b379ff3eb8846753d5f52dcfd06e/boston-logger-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4265f8c5ab4b49fc1c679e780891facb5cebdd0d5b48b8feb5be0be0ee4307d4",
          "md5": "6ee978fad06f7c14c5cba11f000a3bc4",
          "sha256": "a1992314d0054a0e41296055d71aaca14f0e5232e2aec9425432fafb7c662806"
        },
        "downloads": -1,
        "filename": "boston_logger-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ee978fad06f7c14c5cba11f000a3bc4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 14007,
        "upload_time": "2022-12-06T21:15:56",
        "upload_time_iso_8601": "2022-12-06T21:15:56.581410Z",
        "url": "https://files.pythonhosted.org/packages/42/65/f8c5ab4b49fc1c679e780891facb5cebdd0d5b48b8feb5be0be0ee4307d4/boston_logger-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d376f2d82236c312ada7ebac2e5a7e173a44f14461f9041f77d1807fbef8f60",
          "md5": "4ff50ce5682ebeeafecda6319bc444f9",
          "sha256": "84d983c18e6f30ee2837824c27cf62530e0961fc65e60203695ddb858811112a"
        },
        "downloads": -1,
        "filename": "boston-logger-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ff50ce5682ebeeafecda6319bc444f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 23989,
        "upload_time": "2022-12-06T21:15:58",
        "upload_time_iso_8601": "2022-12-06T21:15:58.011201Z",
        "url": "https://files.pythonhosted.org/packages/4d/37/6f2d82236c312ada7ebac2e5a7e173a44f14461f9041f77d1807fbef8f60/boston-logger-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4265f8c5ab4b49fc1c679e780891facb5cebdd0d5b48b8feb5be0be0ee4307d4",
        "md5": "6ee978fad06f7c14c5cba11f000a3bc4",
        "sha256": "a1992314d0054a0e41296055d71aaca14f0e5232e2aec9425432fafb7c662806"
      },
      "downloads": -1,
      "filename": "boston_logger-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6ee978fad06f7c14c5cba11f000a3bc4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 14007,
      "upload_time": "2022-12-06T21:15:56",
      "upload_time_iso_8601": "2022-12-06T21:15:56.581410Z",
      "url": "https://files.pythonhosted.org/packages/42/65/f8c5ab4b49fc1c679e780891facb5cebdd0d5b48b8feb5be0be0ee4307d4/boston_logger-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d376f2d82236c312ada7ebac2e5a7e173a44f14461f9041f77d1807fbef8f60",
        "md5": "4ff50ce5682ebeeafecda6319bc444f9",
        "sha256": "84d983c18e6f30ee2837824c27cf62530e0961fc65e60203695ddb858811112a"
      },
      "downloads": -1,
      "filename": "boston-logger-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4ff50ce5682ebeeafecda6319bc444f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 23989,
      "upload_time": "2022-12-06T21:15:58",
      "upload_time_iso_8601": "2022-12-06T21:15:58.011201Z",
      "url": "https://files.pythonhosted.org/packages/4d/37/6f2d82236c312ada7ebac2e5a7e173a44f14461f9041f77d1807fbef8f60/boston-logger-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}