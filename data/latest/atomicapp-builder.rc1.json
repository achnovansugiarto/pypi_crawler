{
  "info": {
    "author": "Slavek Kabrda",
    "author_email": "slavek@redhat.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python"
    ],
    "description": "Atomicapp Builder\n=================\n\nAn application to build application images from [Nulecule](https://github.com/projectatomic/nulecule).\n\nUsage:\n\n```\natomicapp-builder build [-h] [--cccp-index CCCP_INDEX]\n                             [--build-image BUILD_IMAGE]\n                             [--docker-registry DOCKER_REGISTRY]\n                             [--registry-insecure] [-q | -v]\n                             PATH | cccp:<app-id>\n\npositional arguments:\n  PATH | cccp:<app-id>  Path to directory with Nulecule file to build or app id prefixed by \"cccp:\"\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --cccp-index CCCP_INDEX\n                        URI of raw cccp index file (can be file:// for local file), defaults to\n                        https://raw.githubusercontent.com/kbsingh/cccp-index/master/index.yml\n  --build-image BUILD_IMAGE\n                        Name of image that Dock should use to build images (defaults to \"buildroot\")\n  --docker-registry DOCKER_REGISTRY\n                        URL of Docker registry to poll for existing images and\n                        push built images to. Must be without http/https\n                        scheme.\n  --registry-insecure   If used, plain http will be used to connect to\n                        registry instead of https\n  -q, --quiet           Only output names of built images after build is done\n  -v, --verbose         Print lots of debugging information\n```\n\nRequires `anymarkup`, `requests` and `dock`. You can get the first two just by typing\n`pip install --user -r requirements.txt` and you can get `dock` from\nhttps://github.com/DBuildService/dock. This also requires `dock`'s build image. You\ncan either get one by `docker pull slavek/buildroot` or build one yourself.\n\nYou can get stable versions from PyPI by using\n\n```\npip install --user --process-dependency-links atomicapp-builder\n```\n\nNote: you *must* use `--process-dependency-links` so that pip installs the correct `dock` package.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "UNKNOWN",
    "keywords": "atomic,atomicapp,docker,nulecule",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "atomicapp-builder",
    "package_url": "https://pypi.org/project/atomicapp-builder/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/atomicapp-builder/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "UNKNOWN"
    },
    "release_url": "https://pypi.org/project/atomicapp-builder/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Application for building Atomicapps",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1592372,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f26d94c7719fcde7bd8933784d3e308694f5931623279d749655f22fcb7922c",
          "md5": "4ebbbc0349573bfafd4896bb346d4aa3",
          "sha256": "0230f713322c13e461b74f38f24206cd75022faa7e9bc7d6b0de9e3cbffc16c6"
        },
        "downloads": -1,
        "filename": "atomicapp-builder-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ebbbc0349573bfafd4896bb346d4aa3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8480,
        "upload_time": "2015-06-15T10:32:44",
        "upload_time_iso_8601": "2015-06-15T10:32:44.683464Z",
        "url": "https://files.pythonhosted.org/packages/0f/26/d94c7719fcde7bd8933784d3e308694f5931623279d749655f22fcb7922c/atomicapp-builder-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0f26d94c7719fcde7bd8933784d3e308694f5931623279d749655f22fcb7922c",
        "md5": "4ebbbc0349573bfafd4896bb346d4aa3",
        "sha256": "0230f713322c13e461b74f38f24206cd75022faa7e9bc7d6b0de9e3cbffc16c6"
      },
      "downloads": -1,
      "filename": "atomicapp-builder-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4ebbbc0349573bfafd4896bb346d4aa3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8480,
      "upload_time": "2015-06-15T10:32:44",
      "upload_time_iso_8601": "2015-06-15T10:32:44.683464Z",
      "url": "https://files.pythonhosted.org/packages/0f/26/d94c7719fcde7bd8933784d3e308694f5931623279d749655f22fcb7922c/atomicapp-builder-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}