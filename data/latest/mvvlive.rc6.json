{
  "info": {
    "author": "Dario Schmid",
    "author_email": "darioschmid99@outlook.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "MVVLive\n=======\n\nThis Python library is designed to fetch data about public transportation in Munich, Germany.\nAvailable data consists of departure and serving line information for every stop in the MVV region, and also punctuality information for S-Bahn lines (S-Bahn München, DB).\nThe former departure and serving line information is retrieved from MVV's API endpoint at https://www.mvg.de/api/fahrinfo/departure, whereas punctuality information is scraped from this website usind the beautifulsoup package: http://s-bahn-muenchen.hafas.de/bin/540/query.exe/dn?&statusWidget.\n\n\nNote that this package only provides **live** data. For information on planned trips and departure information in the middle and distant future, please refer to https://www.mvv-muenchen.de/fahrplanauskunft/fuer-entwickler/opendata/index.html.\n\n\nIf you have any idea or further information about how to retrieve S-Bahn punctuality information that does **not** rely on website scraping like it does now (maybe some API), please contact me or contribute to this project.\n\n\n**Disclaimer**: This project is **not** associated with neither MVV, nor MVG, nor Deutsche Bahn.\n\n\nInstallation\n============\n\n```\npip install MVVLive\n```\n\nUsage\n=====\n\nSee [demo.py](demo.py) for a demo, or see the following documentation.\n\n## `MVVLive.punctuality`\n\nGet punctuality information about a certain S-Bahn line. See [below](#example-output-of-mvvlivepunctuality) for example output.\nUpdate this information by executing `MVVLive.update_punctuality()`.\n\n```python\nimport MVVLive\n\n# Initialize MVVLive object with line\nline = \"S3\"\nlive = MVVLive.MVVLive(line=line)\n\n# Print punctuality\nprint(live.punctuality)\n```\n\n## `MVVLive.serving_lines`\n\nGet information about all the lines served at a certain public transport stop. See [below](#example-output-of-mvvliveserving_lines) for example output.\nUpdate this information by executing `MVVLive.update_serving_lines()`.\n\n```python\nimport MVVLive\nimport json\n\n# Initialize MVVLive object with stop ID\nstop_id = \"de:09184:460\"  # stop ID of \"Garching Forschungszentrum\"\nlive = MVVLive.MVVLive(stop_id=stop_id)\n\nserving_lines = live.serving_lines\n\n# Print serving lines in a nicely formatted way.\nprint(json.dumps(serving_lines, indent=4, ensure_ascii=False))\n```\n\nBoth blacklist and whitelist can be provided. The must be a dict in the same format as an element from the `serving_lines` list, except the value must be a list of values (e.g., `\"product\": [\"REGIONAL_BUS\"]` instead of `\"product\": \"REGIONAL_BUS\"`).\nYou can either provide a `stop_name` or a `stop_id`, where the latter is better as you can ensure the right stop is \ndetermined. Look it up at https://www.mvg.de/api/fahrinfo/location/queryWeb?q=YOUR_STOP_NAME.\n\n## `MVVLive.departures`\n\nGet information about all departures at a certain public transport stop. See [below](#example-output-of-mvvlivedepartures) for example output.\nUpdate this information by executing `MVVLive.update_departures()`.\n\n```python\nimport MVVLive\nimport json\n\n# Initialize MVVLive object with stop name\nstop_name = \"Unterhaching\"\nlive = MVVLive.MVVLive(stop_name=stop_name)\n\ndepartures = live.departures\n\n# Print serving lines in a nicely formatted way.\nprint(json.dumps(departures, indent=4, ensure_ascii=False))\n```\n\nBoth blacklist and whitelist can be provided. The must be a dict in the same format as an element from the `departures` list, except the value must be a list of values (e.g., `\"destination\": [\"Deisenhofen\", \"Holzkirchen\"]` instead of `\"destination\": \"Deisenhofen\"`).\nYou can either provide a `stop_name` or a `stop_id`, where the latter is better as you can ensure the right stop is \ndetermined. Look it up at https://www.mvg.de/api/fahrinfo/location/queryWeb?q=YOUR_STOP_NAME.\n\n##  `MVVlive.filter()`\n\nFilters data (servingLines or departures) according to a whitelist or blacklist.\n\n```python\nimport MVVLive\nimport json\n\n# Initialize MVVLive object with stop name\nstop_name = \"Unterhaching\"\nlive = MVVLive.MVVLive(stop_name=stop_name)\n\n# Filter departures\nin_30_min = round((time()+30*60)*1000)\nblacklist_departures = {\n    \"destination\": [\"Deisenhofen\", \"Holzkirchen\"],\n}\nwhitelist_departures = {\n    \"label\": [\"S3\"],\n    \"departureTime\": range(in_30_min),\n}\ndepartures = live.filter(live.departures, whitelist=whitelist_departures, blacklist=blacklist_departures)\n\n# Print serving lines in a nicely formatted way.\nprint(json.dumps(departures, indent=4, ensure_ascii=False))\n```\n\n## `MVVLive.update_punctuality()`\n\nUpdates the punctuality information.\n\n## `MVVLive.update_serving_lines()`\n\nUpdates the serving lines information.\n\n## `MVVLive.update_departures()`\n\nUpdates the departures information.\n\n## Example Output\n\n### Example Output of `MVVLive.punctuality`\n\n```python\n100\n```\n\n### Example Output of `MVVLive.serving_lines`\n\n```python\n[\n    {\n        \"destination\": \"Deisenhofen\",\n        \"sev\": False,\n        \"network\": \"ddb\",\n        \"product\": \"SBAHN\",\n        \"lineNumber\": \"S3\",\n        \"divaId\": \"92M03\"\n    },\n    {\n        \"destination\": \"Messestadt Ost\",\n        \"sev\": False,\n        \"network\": \"swm\",\n        \"product\": \"UBAHN\",\n        \"lineNumber\": \"U2\",\n        \"divaId\": \"010U2\"\n    },\n    {\n        \"destination\": \"Sendlinger Tor U\",\n        \"sev\": False,\n        \"network\": \"swm\",\n        \"product\": \"TRAM\",\n        \"lineNumber\": \"17\",\n        \"divaId\": \"02017\"\n    },\n    {\n        \"destination\": \"Ackermannbogen via Münchner Freiheit U\",\n        \"sev\": False,\n        \"network\": \"swm\",\n        \"product\": \"BUS\",\n        \"lineNumber\": \"59\",\n        \"divaId\": \"03059\"\n    },\n    {\n        \"destination\": \"Winning, Riegerweg/Altersheim\",\n        \"sev\": False,\n        \"network\": \"mvv\",\n        \"product\": \"REGIONAL_BUS\",\n        \"lineNumber\": \"220\",\n        \"divaId\": \"19220\"\n    }\n]\n```\n\n### Example Output of `MVVLive.departures`\n\n```python\n[\n    {\n        \"departureTime\": 1672060500000,\n        \"product\": \"TRAM\",\n        \"label\": \"17\",\n        \"destination\": \"Sendlinger Tor U\",\n        \"live\": False,\n        \"delay\": 0,\n        \"cancelled\": False,\n        \"lineBackgroundColor\": \"#ea4029\",\n        \"departureId\": \"07e4533ca5585437c959fdeb9980e3d1#1672060500000#de:09162:6\",\n        \"sev\": False,\n        \"platform\": \"\",\n        \"stopPositionNumber\": 0,\n        \"infoMessages\": []\n    },\n    {\n        \"departureTime\": 1672060920000,\n        \"product\": \"UBAHN\",\n        \"label\": \"U2\",\n        \"destination\": \"Messestadt Ost\",\n        \"live\": False,\n        \"delay\": 0,\n        \"cancelled\": False,\n        \"lineBackgroundColor\": \"#dd3d4d\",\n        \"departureId\": \"5c89169b4eac9e688234efa99532f10c#1672060920000#de:09162:6\",\n        \"sev\": False,\n        \"platform\": \"U2/8 Gleis 2\",\n        \"stopPositionNumber\": 0,\n        \"infoMessages\": []\n    },\n    {\n        \"departureTime\": 1672060980000,\n        \"product\": \"SBAHN\",\n        \"label\": \"S3\",\n        \"destination\": \"Deisenhofen\",\n        \"live\": False,\n        \"delay\": 1,\n        \"cancelled\": False,\n        \"lineBackgroundColor\": \"#942d8d\",\n        \"departureId\": \"0a78778e46079d11830c36fca7566b36#1672060980000#de:09162:6\",\n        \"sev\": False,\n        \"platform\": \"1\",\n        \"stopPositionNumber\": 0,\n        \"infoMessages\": [\n            \"Linie S3: Maskenpflicht nach gesetzl. Regelung; wir empfehlen eine FFP2-Maske Linie S3: Fahrradmitnahme begrenzt möglich Linie S3: Bei Fahrradmitnahme Sperrzeiten beachten Linie S3: nur 2. Kl.\"\n        ]\n    },\n    {\n        \"departureTime\": 1672060680000,\n        \"product\": \"BUS\",\n        \"label\": \"59\",\n        \"destination\": \"Ackermannbogen via Münchner Freiheit U\",\n        \"live\": False,\n        \"delay\": 0,\n        \"cancelled\": False,\n        \"lineBackgroundColor\": \"#0d5c70\",\n        \"departureId\": \"0b10f46a89dc6a150f5db24e7ca26f14#1672060680000#de:09162:1110\",\n        \"sev\": False,\n        \"platform\": \"Pos. 7\",\n        \"stopPositionNumber\": 7,\n        \"infoMessages\": []\n    },\n    {\n        \"departureTime\": 1672061100000,\n        \"product\": \"REGIONAL_BUS\",\n        \"label\": \"220\",\n        \"destination\": \"Winning, Riegerweg/Altersheim\",\n        \"live\": False,\n        \"delay\": 0,\n        \"cancelled\": False,\n        \"lineBackgroundColor\": \"#0d5c70\",\n        \"departureId\": \"14d5f38f4e1169b03e25752dd25259f5#1672061100000#de:09162:1110\",\n        \"sev\": False,\n        \"platform\": \"Pos. 10\",\n        \"stopPositionNumber\": 10,\n        \"infoMessages\": []\n    }\n]\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/darioschmid/PyMVVLive",
    "keywords": "",
    "license": "?",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MVVLive",
    "package_url": "https://pypi.org/project/MVVLive/",
    "platform": null,
    "project_url": "https://pypi.org/project/MVVLive/",
    "project_urls": {
      "Homepage": "https://github.com/darioschmid/PyMVVLive"
    },
    "release_url": "https://pypi.org/project/MVVLive/0.1.0/",
    "requires_dist": [
      "beautifulsoup4 (==4.11.1)",
      "pathlib",
      "requests",
      "soupsieve (==2.3.2.post1)"
    ],
    "requires_python": "",
    "summary": "Live public transportation data for Munich public transport",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16295842,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aacd50f92535b2366a25404c68fff3c4e07e63c38c82418bdef575f409408e96",
          "md5": "4339669c435cace53b5967cfc312153a",
          "sha256": "a9bd81b6471a9b0aed29e6525a3e13a9e151a33e8bc6267704b8a72682e6dce5"
        },
        "downloads": -1,
        "filename": "MVVLive-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4339669c435cace53b5967cfc312153a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3217,
        "upload_time": "2022-12-26T15:19:12",
        "upload_time_iso_8601": "2022-12-26T15:19:12.842628Z",
        "url": "https://files.pythonhosted.org/packages/aa/cd/50f92535b2366a25404c68fff3c4e07e63c38c82418bdef575f409408e96/MVVLive-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8be77535a30447dd7260ce22673bd5602ef2aa8d8dba2d77812b40e7d726643d",
          "md5": "533d4a328c962ae7b5863699ad866337",
          "sha256": "86e416784463869dde0ff2ef0f0b3057b4b3445bf6ae2e63c1e0fc782acb678f"
        },
        "downloads": -1,
        "filename": "MVVLive-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "533d4a328c962ae7b5863699ad866337",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4088,
        "upload_time": "2022-12-26T15:19:14",
        "upload_time_iso_8601": "2022-12-26T15:19:14.758983Z",
        "url": "https://files.pythonhosted.org/packages/8b/e7/7535a30447dd7260ce22673bd5602ef2aa8d8dba2d77812b40e7d726643d/MVVLive-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2a0431e469abd144af5203816a67d9c0720baeb6f99798aab12bef9fc9daa33",
          "md5": "f1c30e123acd350429f563e6302b9953",
          "sha256": "0b0418d32e7339e610a634c849472d7bd3b6f5ced776d891bc84dfc01b36a59a"
        },
        "downloads": -1,
        "filename": "MVVLive-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1c30e123acd350429f563e6302b9953",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3218,
        "upload_time": "2022-12-26T15:31:39",
        "upload_time_iso_8601": "2022-12-26T15:31:39.113956Z",
        "url": "https://files.pythonhosted.org/packages/e2/a0/431e469abd144af5203816a67d9c0720baeb6f99798aab12bef9fc9daa33/MVVLive-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28b3eaaf92e1347a85c26a07a004347edd348493f94ebe243de8596c49c2ff15",
          "md5": "75ea549f2e68620c63cb52d07a9ca159",
          "sha256": "cd6e61c78e6c06a746b005f8371cd4b71309c33799e611dcf456c64454fd48ba"
        },
        "downloads": -1,
        "filename": "MVVLive-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "75ea549f2e68620c63cb52d07a9ca159",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4089,
        "upload_time": "2022-12-26T15:31:41",
        "upload_time_iso_8601": "2022-12-26T15:31:41.010539Z",
        "url": "https://files.pythonhosted.org/packages/28/b3/eaaf92e1347a85c26a07a004347edd348493f94ebe243de8596c49c2ff15/MVVLive-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37b9bb36d0284cf667d85411e836dd012c1180bc3a0fe0a8cf2b305aa91d4f8e",
          "md5": "064aa4808f84a5d31260b8c07a208af5",
          "sha256": "f5ec65c474e067c37e36b39a3938633002d50a66e4876a32f0ac84e28695f876"
        },
        "downloads": -1,
        "filename": "MVVLive-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "064aa4808f84a5d31260b8c07a208af5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5730,
        "upload_time": "2022-12-26T19:52:03",
        "upload_time_iso_8601": "2022-12-26T19:52:03.692022Z",
        "url": "https://files.pythonhosted.org/packages/37/b9/bb36d0284cf667d85411e836dd012c1180bc3a0fe0a8cf2b305aa91d4f8e/MVVLive-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "841e9914af02d892e1b51a29f9eb48dffd8e00166e7abd98812eaca24b8859f1",
          "md5": "08e3c881a794809b8b9c9b8ef3101298",
          "sha256": "5bb12a1cbcce533e3925c44d617e44125b08de4ee9f701c2380d6ebb45f47f84"
        },
        "downloads": -1,
        "filename": "MVVLive-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "08e3c881a794809b8b9c9b8ef3101298",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6343,
        "upload_time": "2022-12-26T19:52:05",
        "upload_time_iso_8601": "2022-12-26T19:52:05.633416Z",
        "url": "https://files.pythonhosted.org/packages/84/1e/9914af02d892e1b51a29f9eb48dffd8e00166e7abd98812eaca24b8859f1/MVVLive-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b245f73e31880e4880e008ba7a288e793876a358378bbeeb4358c9a6e726c049",
          "md5": "0dcafe27e3e3bd10ab25e2ddf221a685",
          "sha256": "39262392bd767c2f72dd1a773a4588a59bb80f7ebb5f9474ef3b3a0984c19891"
        },
        "downloads": -1,
        "filename": "MVVLive-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dcafe27e3e3bd10ab25e2ddf221a685",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5256,
        "upload_time": "2022-12-26T19:54:09",
        "upload_time_iso_8601": "2022-12-26T19:54:09.441027Z",
        "url": "https://files.pythonhosted.org/packages/b2/45/f73e31880e4880e008ba7a288e793876a358378bbeeb4358c9a6e726c049/MVVLive-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5461aa6c89836ad7571f075b48471667c58c6d95c5b23cdb34d36e43eafb8fba",
          "md5": "daf6a12246fea0955499d1fe06fc7f5b",
          "sha256": "bec80837049286fff3bd860624ffd75484880a7c410012dbb0834ec35254ec39"
        },
        "downloads": -1,
        "filename": "MVVLive-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "daf6a12246fea0955499d1fe06fc7f5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5487,
        "upload_time": "2022-12-26T19:54:11",
        "upload_time_iso_8601": "2022-12-26T19:54:11.269771Z",
        "url": "https://files.pythonhosted.org/packages/54/61/aa6c89836ad7571f075b48471667c58c6d95c5b23cdb34d36e43eafb8fba/MVVLive-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7897c52dcb58f369921283630d9136b6f21deda12fe08d79d9fd3d915e750cc6",
          "md5": "74d5b567aa3490447895ac3527142367",
          "sha256": "b7e4f740d8361161d1375fdde55dac98983c25116aeb582e57aecec521b397f0"
        },
        "downloads": -1,
        "filename": "MVVLive-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74d5b567aa3490447895ac3527142367",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5239,
        "upload_time": "2022-12-27T16:06:48",
        "upload_time_iso_8601": "2022-12-27T16:06:48.939056Z",
        "url": "https://files.pythonhosted.org/packages/78/97/c52dcb58f369921283630d9136b6f21deda12fe08d79d9fd3d915e750cc6/MVVLive-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb59e288a22d2e2253024559fcc09e779db4860767a259437bb483754e7f35f3",
          "md5": "a5c871814557c2312d90ee37f014c224",
          "sha256": "6809017bc38be6d17f93efac232cb8a0b0e7c68cab6e64fa769b1ec4de0ec4a6"
        },
        "downloads": -1,
        "filename": "MVVLive-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a5c871814557c2312d90ee37f014c224",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5471,
        "upload_time": "2022-12-27T16:06:50",
        "upload_time_iso_8601": "2022-12-27T16:06:50.871594Z",
        "url": "https://files.pythonhosted.org/packages/fb/59/e288a22d2e2253024559fcc09e779db4860767a259437bb483754e7f35f3/MVVLive-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ea4be877c4f37e74bda1edf074c41b8dffcecdaf2b8a7de40efed94b16a9d2e",
          "md5": "a60c817d28aa44ed6401c86b46365be5",
          "sha256": "45c455f20001a0c859b24162a150630f4468b386d1dd0dfe65b7da0dfbbfa6bc"
        },
        "downloads": -1,
        "filename": "MVVLive-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a60c817d28aa44ed6401c86b46365be5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5550,
        "upload_time": "2023-01-03T23:01:36",
        "upload_time_iso_8601": "2023-01-03T23:01:36.174911Z",
        "url": "https://files.pythonhosted.org/packages/1e/a4/be877c4f37e74bda1edf074c41b8dffcecdaf2b8a7de40efed94b16a9d2e/MVVLive-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d609cf82b1b08c60bbd3d6e638adba7d0e51eeea02a88800385e3f94328b394b",
          "md5": "6012b2ff16bcf275540e90b3e5be0bb7",
          "sha256": "8cf8f8aa02e183d5e1c98797ce9c28e194ce2a432b9a1e4e0a2b6a265de29831"
        },
        "downloads": -1,
        "filename": "MVVLive-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6012b2ff16bcf275540e90b3e5be0bb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5909,
        "upload_time": "2023-01-03T23:01:38",
        "upload_time_iso_8601": "2023-01-03T23:01:38.391173Z",
        "url": "https://files.pythonhosted.org/packages/d6/09/cf82b1b08c60bbd3d6e638adba7d0e51eeea02a88800385e3f94328b394b/MVVLive-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1ea4be877c4f37e74bda1edf074c41b8dffcecdaf2b8a7de40efed94b16a9d2e",
        "md5": "a60c817d28aa44ed6401c86b46365be5",
        "sha256": "45c455f20001a0c859b24162a150630f4468b386d1dd0dfe65b7da0dfbbfa6bc"
      },
      "downloads": -1,
      "filename": "MVVLive-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a60c817d28aa44ed6401c86b46365be5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5550,
      "upload_time": "2023-01-03T23:01:36",
      "upload_time_iso_8601": "2023-01-03T23:01:36.174911Z",
      "url": "https://files.pythonhosted.org/packages/1e/a4/be877c4f37e74bda1edf074c41b8dffcecdaf2b8a7de40efed94b16a9d2e/MVVLive-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d609cf82b1b08c60bbd3d6e638adba7d0e51eeea02a88800385e3f94328b394b",
        "md5": "6012b2ff16bcf275540e90b3e5be0bb7",
        "sha256": "8cf8f8aa02e183d5e1c98797ce9c28e194ce2a432b9a1e4e0a2b6a265de29831"
      },
      "downloads": -1,
      "filename": "MVVLive-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6012b2ff16bcf275540e90b3e5be0bb7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5909,
      "upload_time": "2023-01-03T23:01:38",
      "upload_time_iso_8601": "2023-01-03T23:01:38.391173Z",
      "url": "https://files.pythonhosted.org/packages/d6/09/cf82b1b08c60bbd3d6e638adba7d0e51eeea02a88800385e3f94328b394b/MVVLive-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}