{
  "info": {
    "author": "",
    "author_email": "Letu Ren <fantasquex@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "# Pyvmess\n\n[![PyPI - Version](https://img.shields.io/pypi/v/pyvmess.svg)](https://pypi.org/project/pyvmess)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pyvmess.svg)](https://pypi.org/project/pyvmess)\n[![code style - black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![imports - isort](https://img.shields.io/badge/imports-isort-ef8336.svg)](https://github.com/pycqa/isort)\n[![License - MIT](https://img.shields.io/badge/license-MIT-9400d3.svg)](https://spdx.org/licenses/)\n-----\n\nPyvmess is a naive implementation to parse raw [vmess](https://www.v2fly.org/developer/protocols/vmess.html) package in Python. Note: As vmess is such a complicated protocol, it's quite hard to implement full feature decoder. There are quite a lot of cases which are covered by Pyvmess.\n\nAs this package is likely to be outdated, you can refer to vmess source code [server code](https://github.com/v2fly/v2ray-core/blob/master/proxy/vmess/encoding/server.go) and [client code](https://github.com/v2fly/v2ray-core/blob/master/proxy/vmess/encoding/client.go) if needed. \n\n**Table of Contents**\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Build](#build)\n- [Tests](#tests)\n- [License](#license)\n\n## Installation\n\n```console\npip install pyvmess\n```\n\n## Usage\n\nLet's take one challenge dieyingchongchong from qwb2022 as an example. Pyvmess can parse meta data from header and decode data from body. The following example can be found in test cases.\n\n```python\nfrom uuid import UUID\n\nimport pyvmess\n\n\nclient_uuid = UUID(\"b831381d-6324-4d53-ad4f-8cda48b30811\")\nwith open(\"data/client.bin\", \"rb\") as f:\n    client_data = f.read()\n\nclient_package = pyvmess.ClientVmessPackage(client_uuid, client_data)\n\ntimestamp = client_package.auth(1615528982 + 100)\n\nclient_package.decode_header()\n\nclient_package.decode_body()\n\nprint(b\"\".join(client_package.body_data).decode())\n\nwith open(\"tests/data/server.bin\", \"rb\") as f:\n    server_data = f.read()\n\nserver_package = pyvmess.ServerVmessPackage(\n    client_package.response_header,\n    client_package.body_iv,\n    client_package.body_key,\n    client_package.option,\n    client_package.security,\n    server_data,\n)\n\nserver_package.decode_header()\n\nserver_package.decode_body()\n\nprint(b\"\".join(server_package.body_data).decode())\n```\n\n## Build\n\nPyvmess uses hatch as the project manager. You can use hatch or any other build tools compliant with PEP517 such as [build](https://packaging.python.org/en/latest/key_projects/#build).\n\n```shell\n# hatch\nhatch build\n```\n\n```shell\n# build\npython -m build\n```\n\n# Tests\n\nPyvmess uses pytest for testing. You can run tests as follows.\n\n```shell\nhatch run test\n```\n\n## License\n\n`pyvmess` is distributed under the terms of the [MIT](https://spdx.org/licenses/MIT.html) license.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "vmess",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyvmess",
    "package_url": "https://pypi.org/project/pyvmess/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyvmess/",
    "project_urls": {
      "Documentation": "https://github.com/fantasquex/pyvmess#readme",
      "Issues": "https://github.com/fantasquex/pyvmess/issues",
      "Source": "https://github.com/fantasquex/pyvmess"
    },
    "release_url": "https://pypi.org/project/pyvmess/0.0.1/",
    "requires_dist": [
      "fnvhash",
      "pycryptodome"
    ],
    "requires_python": ">=3.10",
    "summary": "a naive implementation to parse raw vmess package",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14621698,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8818a66b1183bbd6b575d2d0e60c71ad00fdc55ef3a80b1ef664f857cb36da26",
          "md5": "a32ac5e5f7417cdcb010ec7f70650509",
          "sha256": "6717145b29353529f85814a1daa84f8ea1e62b8f7eeadabbd3bbb89652bdb67f"
        },
        "downloads": -1,
        "filename": "pyvmess-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a32ac5e5f7417cdcb010ec7f70650509",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 6063,
        "upload_time": "2022-08-02T05:50:12",
        "upload_time_iso_8601": "2022-08-02T05:50:12.460143Z",
        "url": "https://files.pythonhosted.org/packages/88/18/a66b1183bbd6b575d2d0e60c71ad00fdc55ef3a80b1ef664f857cb36da26/pyvmess-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "914098e1bf3f091acc861c3c9cb65c42fb15ef22985e7afeb941427619b28181",
          "md5": "6c7d6d290c0927898592872da251050d",
          "sha256": "38fbdeb12885d67e0ed857aa7feab097af58a76ea7501ca3176f55b69c644b5a"
        },
        "downloads": -1,
        "filename": "pyvmess-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6c7d6d290c0927898592872da251050d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1700036,
        "upload_time": "2022-08-02T05:50:14",
        "upload_time_iso_8601": "2022-08-02T05:50:14.103165Z",
        "url": "https://files.pythonhosted.org/packages/91/40/98e1bf3f091acc861c3c9cb65c42fb15ef22985e7afeb941427619b28181/pyvmess-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8818a66b1183bbd6b575d2d0e60c71ad00fdc55ef3a80b1ef664f857cb36da26",
        "md5": "a32ac5e5f7417cdcb010ec7f70650509",
        "sha256": "6717145b29353529f85814a1daa84f8ea1e62b8f7eeadabbd3bbb89652bdb67f"
      },
      "downloads": -1,
      "filename": "pyvmess-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a32ac5e5f7417cdcb010ec7f70650509",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 6063,
      "upload_time": "2022-08-02T05:50:12",
      "upload_time_iso_8601": "2022-08-02T05:50:12.460143Z",
      "url": "https://files.pythonhosted.org/packages/88/18/a66b1183bbd6b575d2d0e60c71ad00fdc55ef3a80b1ef664f857cb36da26/pyvmess-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "914098e1bf3f091acc861c3c9cb65c42fb15ef22985e7afeb941427619b28181",
        "md5": "6c7d6d290c0927898592872da251050d",
        "sha256": "38fbdeb12885d67e0ed857aa7feab097af58a76ea7501ca3176f55b69c644b5a"
      },
      "downloads": -1,
      "filename": "pyvmess-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6c7d6d290c0927898592872da251050d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 1700036,
      "upload_time": "2022-08-02T05:50:14",
      "upload_time_iso_8601": "2022-08-02T05:50:14.103165Z",
      "url": "https://files.pythonhosted.org/packages/91/40/98e1bf3f091acc861c3c9cb65c42fb15ef22985e7afeb941427619b28181/pyvmess-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}