{
  "info": {
    "author": "CauchyComplete",
    "author_email": "corundum240@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# EasyPyXL\r\n This python package is a wrapper of OpenPyXL for easy usage.\r\n\r\nYou can easily write your data on an Excel(.xlsx) file.\r\n\r\nIt is especially helpful when used in loops.\r\n\r\nStop wasting your energy by printing your experiment results to a text file and copy-pasting them to an Excel file one by one. Instead, use this package.\r\n\r\nI tried to handle possible errors, but if you face one, please report it to Github Issues.\r\n\r\n## Install\r\nInstall this package:\r\n\r\n```pip install easypyxl```\r\n\r\nIf it does not work, try:\r\n\r\n```pip install git+https://github.com/CauchyComplete/EasyPyXL```\r\n\r\n## Example 1 : Basics\r\n```angular2html\r\nimport easypyxl\r\nworkbook = easypyxl.Workbook(\"my_excel.xlsx\")  # Excel file to write on. If the file does not exist, it will be created.\r\ncursor = workbook.new_cursor(\"MySheet\", \"A2\", 5)  # New cursor at sheet \"MySheet\", starting from \"A2\", new line every 5 writes.\r\nfor i in range(25):\r\n    cursor.write_cell(i)\r\n```\r\n![ex1](https://github.com/CauchyComplete/EasyPyXL/blob/main/images/ex1.png?raw=true)\r\n\r\n## Example 2 : write_cell(list)\r\n```angular2html\r\nimport easypyxl\r\nworkbook = easypyxl.Workbook(\"my_excel.xlsx\", verbose=False)  # Use verbose=False if you want this package to print only important messages. \r\ncursor = workbook.new_cursor(\"MySheet\", (2, 4), 4)  # You can use (2, 4) in place of \"D2\".\r\ncursor.write_cell([\"Method\", \"metric1\", \"metric2\", \"metric3\"]) # You can pass list or tuple for multiple writes.\r\ncount = 0\r\nfor method in ['A', 'B', 'C', 'D', 'E', 'F']:\r\n    cursor.write_cell(method)\r\n    # Run your code\r\n    for i in range(3):\r\n        cursor.write_cell(count)\r\n        count += 1\r\n```\r\n![ex2](https://github.com/CauchyComplete/EasyPyXL/blob/main/images/ex2.png?raw=true)\r\n\r\n## Example 3 : move_vertical\r\n```angular2html\r\nimport easypyxl\r\nworkbook = easypyxl.Workbook(\"my_excel.xlsx\")\r\ncursor = workbook.new_cursor(\"MySheet\", \"B1\", 5, move_vertical=True)  # move_vertical: Write top to bottom, then move to the next column.\r\nfor i in range(25):\r\n    cursor.write_cell(i)\r\n```\r\n![ex3](https://github.com/CauchyComplete/EasyPyXL/blob/main/images/ex3.png?raw=true)\r\n\r\n## Example 4 : Multiple cursors, skip_cell()\r\n```angular2html\r\nimport easypyxl\r\nworkbook = easypyxl.Workbook(\"my_excel.xlsx\")\r\ncursor1 = workbook.new_cursor(\"Sheet2\", \"B2\", 4)\r\ncursor2 = workbook.new_cursor(\"Sheet2\", \"H2\", 4, move_vertical=True)\r\nfor i in range(100):\r\n    cursor1.write_cell(i)\r\n    cursor2.write_cell(i * 10)\r\n    if i % 5 == 0:\r\n        cursor1.skip_cell(2)  # Skip two cells\r\n```\r\n![ex4](https://github.com/CauchyComplete/EasyPyXL/blob/main/images/ex4.png?raw=true)\r\n\r\n## Example 5 : read_cell(), read_line()\r\n```angular2html\r\nimport easypyxl\r\nworkbook = easypyxl.Workbook(\"my_excel.xlsx\", backup=False)\r\ncursor = workbook.new_cursor(\"Sheet2\", \"B3\", 4, reader=True)  # Use reader=True when you want to read instead of write. \r\n# cursor = workbook.new_cursor(None, \"B3\", 4, reader=True)  # Note that you can use sheetname=None to use the active sheet.\r\nprint(cursor.read_cell(4))\r\nprint(cursor.read_line())\r\nprint(cursor.read_line(2))\r\ncursor.skip_line(2)\r\nprint(cursor.read_cell())\r\n```\r\noutputs:\r\n```angular2html\r\n[2, 3, 4, 5]\r\n[None, None, 6, 7]\r\n[[8, 9, 10, None], [None, 11, 12, 13]]\r\n20\r\n```\r\n\r\n## Example 6: auto_save=False (manual saving for reducing IO calls)\r\nBy default, EasyPyXL save the Excel file at every write. If you don't want this behavior, you can disable it by setting auto_save=False.\r\n```angular2html\r\nimport easypyxl\r\nworkbook = easypyxl.Workbook(\"my_excel.xlsx\")\r\ncursor = workbook.new_cursor(\"MySheet\", \"C2\", 4, auto_save=False)  # Use auto_save=False when you don't want to save the Excel at every write.\r\ncursor.write_cell([\"Method\", \"metric1\", \"metric2\", \"metric3\"])\r\nworkbook.save_excel()  # You should manually save the workbook by calling save_excel().\r\n```\r\n\r\nAnother option is to use auto_save_time. \r\n```angular2html\r\nimport easypyxl\r\nworkbook = easypyxl.Workbook(\"my_excel.xlsx\")  \r\ncursor = workbook.new_cursor(\"MySheet\", \"C2\", 4, auto_save=True, auto_save_time=10)  # Save at every write if the time has elapsed more than 10 seconds since the previous write.\r\n# run your code\r\nworkbook.save_excel()\r\n```\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CauchyComplete/EasyPyXL",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easypyxl",
    "package_url": "https://pypi.org/project/easypyxl/",
    "platform": null,
    "project_url": "https://pypi.org/project/easypyxl/",
    "project_urls": {
      "Homepage": "https://github.com/CauchyComplete/EasyPyXL"
    },
    "release_url": "https://pypi.org/project/easypyxl/0.7.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14114331,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dd18ae650835b706e046602ef5c1144271eed0f01b3e1535baeef02f65ba523",
          "md5": "a0558fe36db1fa7e69d5b0c36785d773",
          "sha256": "6bf412e31192533378bdc2c2679b188654da924f613f3aff9dbc5a424b0c0106"
        },
        "downloads": -1,
        "filename": "easypyxl-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a0558fe36db1fa7e69d5b0c36785d773",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3403,
        "upload_time": "2021-09-26T11:59:42",
        "upload_time_iso_8601": "2021-09-26T11:59:42.482780Z",
        "url": "https://files.pythonhosted.org/packages/3d/d1/8ae650835b706e046602ef5c1144271eed0f01b3e1535baeef02f65ba523/easypyxl-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b96907dd824f048568fda9fe873def80669e8d1aea7cc1b3f980a3427692260b",
          "md5": "0333105f7d0c1a381389be4b4d7961aa",
          "sha256": "9fe8b5320b15251fc9234e11ef0291567f0ddf9088bbba9cc9caceb1b27a2533"
        },
        "downloads": -1,
        "filename": "easypyxl-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0333105f7d0c1a381389be4b4d7961aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3943,
        "upload_time": "2021-09-27T01:08:08",
        "upload_time_iso_8601": "2021-09-27T01:08:08.361477Z",
        "url": "https://files.pythonhosted.org/packages/b9/69/07dd824f048568fda9fe873def80669e8d1aea7cc1b3f980a3427692260b/easypyxl-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8f69237c971d73bbdf411f2b6de25cda28c65f0c09fd13741e9e259cb4e9499",
          "md5": "1cf56096c4b50088933d151a26b0e1e4",
          "sha256": "670bd5cb8a97bd0df920c46925e10cf1d30a4a1d04954f15de247851d269f09a"
        },
        "downloads": -1,
        "filename": "easypyxl-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1cf56096c4b50088933d151a26b0e1e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4396,
        "upload_time": "2021-10-01T08:09:12",
        "upload_time_iso_8601": "2021-10-01T08:09:12.161329Z",
        "url": "https://files.pythonhosted.org/packages/a8/f6/9237c971d73bbdf411f2b6de25cda28c65f0c09fd13741e9e259cb4e9499/easypyxl-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d21a1c4f828cd44eedf03be79440469ebb48fecf11e3acb1cacfe243dbc05202",
          "md5": "85d4b1bd500f929ce6c978b0bfc6a140",
          "sha256": "12ff934f435a93ae7d0e78c35ba240a89db06c27fa3732ae10deb10a5ccdfc7c"
        },
        "downloads": -1,
        "filename": "easypyxl-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "85d4b1bd500f929ce6c978b0bfc6a140",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4408,
        "upload_time": "2021-10-15T23:58:29",
        "upload_time_iso_8601": "2021-10-15T23:58:29.008887Z",
        "url": "https://files.pythonhosted.org/packages/d2/1a/1c4f828cd44eedf03be79440469ebb48fecf11e3acb1cacfe243dbc05202/easypyxl-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ae7b6ef7751d4f3d63682f236a4fe8a2c8ada88951d31d73af3dd6338f07ee0",
          "md5": "e99fa1a745d67e3a6f3470cccaa3bc46",
          "sha256": "1a35b3884b73e08132a26deece4b15a95a9585b893b98bf245cf5d4b9218e636"
        },
        "downloads": -1,
        "filename": "easypyxl-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e99fa1a745d67e3a6f3470cccaa3bc46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4809,
        "upload_time": "2022-06-09T11:17:00",
        "upload_time_iso_8601": "2022-06-09T11:17:00.661980Z",
        "url": "https://files.pythonhosted.org/packages/2a/e7/b6ef7751d4f3d63682f236a4fe8a2c8ada88951d31d73af3dd6338f07ee0/easypyxl-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a9ca20790dbd895edf74e3eea816ac112042e3593e5e0e973d8f7215c16c1ba",
          "md5": "7ae1fd53cc2c0f1665de6156e70ddf05",
          "sha256": "09462862cf3cc51de297abd997d3d09847d14230f8fc7ef8407c8eb02c6054ed"
        },
        "downloads": -1,
        "filename": "easypyxl-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7ae1fd53cc2c0f1665de6156e70ddf05",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4873,
        "upload_time": "2022-06-10T00:34:54",
        "upload_time_iso_8601": "2022-06-10T00:34:54.944903Z",
        "url": "https://files.pythonhosted.org/packages/1a/9c/a20790dbd895edf74e3eea816ac112042e3593e5e0e973d8f7215c16c1ba/easypyxl-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e6d5444f5b3eef5c7ff49b3f146a367f4812d704794f64d3ce295f72a03ae1f",
          "md5": "23c7904bb8c0bd26e4d99f8b20939cc8",
          "sha256": "24425219c1a3cc91cb91678a1c682e8575910476efde29ce178cbd78412dce8a"
        },
        "downloads": -1,
        "filename": "easypyxl-0.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "23c7904bb8c0bd26e4d99f8b20939cc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4853,
        "upload_time": "2022-06-13T11:04:53",
        "upload_time_iso_8601": "2022-06-13T11:04:53.775420Z",
        "url": "https://files.pythonhosted.org/packages/4e/6d/5444f5b3eef5c7ff49b3f146a367f4812d704794f64d3ce295f72a03ae1f/easypyxl-0.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0cf3614a68356222eb4e172927f2743dde4dfbd30aebcf7d9f04a24b7306646",
          "md5": "c576ecff70de817545e4d64f82c31209",
          "sha256": "5ef112fcfdfa67b0e97de4d63b1cdded4dcaa9e146351472741a5ecc49d359a7"
        },
        "downloads": -1,
        "filename": "easypyxl-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c576ecff70de817545e4d64f82c31209",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4939,
        "upload_time": "2022-06-13T11:14:36",
        "upload_time_iso_8601": "2022-06-13T11:14:36.835764Z",
        "url": "https://files.pythonhosted.org/packages/b0/cf/3614a68356222eb4e172927f2743dde4dfbd30aebcf7d9f04a24b7306646/easypyxl-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0cf3614a68356222eb4e172927f2743dde4dfbd30aebcf7d9f04a24b7306646",
        "md5": "c576ecff70de817545e4d64f82c31209",
        "sha256": "5ef112fcfdfa67b0e97de4d63b1cdded4dcaa9e146351472741a5ecc49d359a7"
      },
      "downloads": -1,
      "filename": "easypyxl-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c576ecff70de817545e4d64f82c31209",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4939,
      "upload_time": "2022-06-13T11:14:36",
      "upload_time_iso_8601": "2022-06-13T11:14:36.835764Z",
      "url": "https://files.pythonhosted.org/packages/b0/cf/3614a68356222eb4e172927f2743dde4dfbd30aebcf7d9f04a24b7306646/easypyxl-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}