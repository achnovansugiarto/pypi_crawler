{
  "info": {
    "author": "Ben Spiller",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "License :: Public Domain",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Education :: Testing",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing",
      "Topic :: Software Development :: Testing :: Unit"
    ],
    "description": "PySys Java Plugins\n==================\nThis project provides some plugins for the PySys System Test Framework that will be useful if your application \nis written in Java(R). Features include:\n\n\t- compiling Java test tools from your tests; \n\t- easily starting Java processes, with convenient mechanisms to specify the classname/.jar, classpath and JVM \n\t  arguments; \n\t- executing JUnit test classes just like other PySys tests (providing a unified approach between your system and \n\t  unit testing); \n\t- generating Java code coverage reports. \n\nInstallation\n------------\nTo use these plugins, you will need:\n\n\t- Python 3.6+\n\t- PySys 1.6.1+\n\t- Java 8+ (currently tested with Java 8 and Java 14)\n\t- Optionally: JUnit 5, if you want to run JUnit tests (JUnit 4 is supported via the JUnit 5 vintage engine)\n\t- Optionally: JaCoCo, if you want to generate Java code coverage reports (currently tested with JaCoCo 0.8.6)\n\nTo install, just use the standard ``pip3`` executable (or ``pip.exe`` on Windows):: \n\n\tpip3 install PySys-Java\n\nTest Plugin for Java\n--------------------\nSee `pysysjava.javaplugin` for information about the PySys test (and runner) plugin. \n\nOnce configured in your PySys project, this plugin makes it easy to run Java classes and jars from your PySys \n``run.py`` tests, and also to compile small testing tools needed by individual test cases. \n\nFor example::\n\n\tmyserver = self.java.startJava(self.project.appHome+'/my_server*.jar', ['127.0.0.1', self.getNextAvailableTCPPort()], \n\t\tstdouterr='my_server', background=True)\n\n\tself.java.defaultClasspath = [self.project.appHome+'/mydeps.jar']\n\tself.java.compile(self.input, output=self.output+'/javaclasses', args=['--Werror'])\n\tself.java.startJava('myorg.MyHttpTestClient', ['127.0.0.1', port], stdouterr='httpclient', \n\t\tclasspath=self.java.defaultClasspath+[self.output+'/javaclasses'], timeout=60)\n\nJUnit Execution from PySys\n--------------------------\nSee `pysysjava.junittest` for information about running JUnit tests from PySys. \n\nYou can either have a single PySys test for a whole directory tree of JUnit tests, or for larger projects and \nincreased control, use the JUnit descriptor loader that creates separate PySys tests (in-memory) for each JUnit test\nclass, allowing them to be executed individually (and in separate JVM processes)::\n\n\tpysys run --threads=10 MyJUnitTests_org.myorg.TestSuiteFoo MyJUnitTests_org.myorg.TestSuiteBar\n\nClasspath, JVM arguments, timeout and more can be customized on a per-test or per-directory basis using ``<user-data>`` \nproperties in the ``pysystest.xml`` or ``pysysdirconfig.xml`` file, for example::\n\n\t<pysysdirconfig>\n\n\t\t<id-prefix>MyJUnitTests_</id-prefix>\n\n\t\t<data>\n\t\t\t<user-data name=\"junitTestDescriptorForEach\" value=\"class\"/>\n\n\t\t\t<user-data name=\"junitStripPrefixes\" value=\"myorg.mytest1, myorg\"/>\n\n\t\t\t<user-data name=\"javaClasspath\" value=\"${appHome}/target/logging-jars/*.jar\"/>\n\t\t\t<user-data name=\"jvmArgs\" value=\"-Xmx256M\"/>\n\n\t\t\t<user-data name=\"junitTimeoutSecs\" value=\"600\"/>\n\t\t\t<user-data name=\"junitConfigArgs\" value=\"\"/>\n\t\t</data>\n\t</pysysdirconfig>\n\nThere is also a simple parser for Ant-style JUnit XML reports (used to implement the above) in `pysysjava.junitxml`, \nwhich could also be useful for getting data from other (non-JUnit) testing engines that use the same reporting file \nformat. \n\nJava Code Coverage Reporting\n----------------------------\nSee `pysysjava.coverage` for information about generating Java code coverage reports from any Java process \nlaunched by PySys (including JUnit tests and integration tests). \n\nThe writer can merge together all the individual coverage files into a single combined one, and generate both an \nXML report (suitable for uploading to an online coverage reporting service) and an HTML report (for human consumption). \nFor the reporting to run it is necessary to specify the classpath and if possible the directories under which the \nsource .java files can be found. An example configuration is::\n\n\t\t<writer classname=\"pysysjava.coverage.JavaCoverageWriter\" alias=\"javaCoverageWriter\">\n\t\t\t<property name=\"jacocoDir\" value=\"${testRootDir}/../jacoco\"/>\n\n\t\t\t<property name=\"destDir\" value=\"__coverage_java.${outDirName}\"/>\n\t\t\t<property name=\"destArchive\" value=\"JavaCoverage.zip\"/>\n\n\t\t\t<property name=\"agentArgs\" value='includes=myorg*'/>\n\n\t\t\t<property name=\"classpath\" value=\"${appHome}/*.jar\"/>\n\t\t\t<property name=\"sourceDirs\" value=\"${testRootDir}/../src\"/>\n\t\t\t<property name=\"reportArgs\" value='--name \"My amazing report\"'/>\n\t\t</writer>\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ben-spiller/pysysjava",
    "keywords": "pysys,java,junit",
    "license": "Public Domain",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PySys-Java",
    "package_url": "https://pypi.org/project/PySys-Java/",
    "platform": "Operating System :: OS Independent",
    "project_url": "https://pypi.org/project/PySys-Java/",
    "project_urls": {
      "Documentation": "https://ben-spiller.github.io/pysysjava/",
      "Homepage": "https://github.com/ben-spiller/pysysjava",
      "Repository": "https://github.com/ben-spiller/pysysjava",
      "Sample": "https://github.com/ben-spiller/pysysjava/tree/main/sample"
    },
    "release_url": "https://pypi.org/project/PySys-Java/0.1/",
    "requires_dist": [
      "PySys (>=1.6.1)"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Java plugins for the PySys System Test Framework",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8266253,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c733b2b9c8d84d277597a4e3611f59d4cd55814643fff3b6b4ced77e6a490d88",
          "md5": "3615c3be094cf8592b7bc17e202d7d78",
          "sha256": "9f61afb4ca4bb2671c886b7fe94bf9a64fea9ba141dee0da4d24616f4dcb8ee3"
        },
        "downloads": -1,
        "filename": "PySys_Java-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3615c3be094cf8592b7bc17e202d7d78",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6, <4",
        "size": 28417,
        "upload_time": "2020-09-24T21:39:57",
        "upload_time_iso_8601": "2020-09-24T21:39:57.347993Z",
        "url": "https://files.pythonhosted.org/packages/c7/33/b2b9c8d84d277597a4e3611f59d4cd55814643fff3b6b4ced77e6a490d88/PySys_Java-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c733b2b9c8d84d277597a4e3611f59d4cd55814643fff3b6b4ced77e6a490d88",
        "md5": "3615c3be094cf8592b7bc17e202d7d78",
        "sha256": "9f61afb4ca4bb2671c886b7fe94bf9a64fea9ba141dee0da4d24616f4dcb8ee3"
      },
      "downloads": -1,
      "filename": "PySys_Java-0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3615c3be094cf8592b7bc17e202d7d78",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6, <4",
      "size": 28417,
      "upload_time": "2020-09-24T21:39:57",
      "upload_time_iso_8601": "2020-09-24T21:39:57.347993Z",
      "url": "https://files.pythonhosted.org/packages/c7/33/b2b9c8d84d277597a4e3611f59d4cd55814643fff3b6b4ced77e6a490d88/PySys_Java-0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}