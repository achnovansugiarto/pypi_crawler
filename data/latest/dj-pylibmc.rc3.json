{
  "info": {
    "author": "Jeff Balogh",
    "author_email": "entwicklung@regiohelden.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Environment :: Web Environment :: Mozilla",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\n==========\ndj-pylibmc\n==========\n\n\nThis package provides a memcached cache backend for Django using\n`pylibmc <http://github.com/lericson/pylibmc>`_.  You want to use pylibmc because\nit's fast.\n\nThis is a fork of the `django-pylibmc <https://github.com/jbalogh/django-pylibmc>`_\npackage.\n\nDo you need dj-pylibmc?\n---------------------------\n\nDjango now has a built-in pylibmc backend, and as of Django 1.11 also supports\nthe ``binary``, ``username`` and ``password`` options natively. As such, in most\ncases the built-in backend should be used instead of dj-pylibmc, since it\nwill be more actively maintained.\n\nTo use Django's own backend, configure ``CACHES`` like so::\n\n    CACHES = {\n        'default': {\n            'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache',\n            'LOCATION': '127.0.0.1:11211',\n        }\n    }\n\nSee the\n`Django documentation <https://docs.djangoproject.com/en/1.11/topics/cache/#memcached>`_\nfor details about using this cache backend.\n\nReasons to use dj-pylibmc instead, are:\n\n- You would like to use pylibmc's compression feature\n- You would rather pylibmc connection/server exceptions be caught/logged and not raised\n  (though this may be `added upstream <https://code.djangoproject.com/ticket/28342>`_ soon).\n\nRequirements\n------------\n\ndj-pylibmc requires pylibmc 1.4.1 or above. It supports Django 2.2 through\n3.1, and Python versions >=3.6, <3.9\n\nInstallation\n------------\n\nGet it from `pypi <http://pypi.python.org/pypi/dj-pylibmc>`_::\n\n    pip install dj-pylibmc\n\nor `github <http://github.com/RegioHelden/dj-pylibmc>`_::\n\n    pip install -e git://github.com/RegioHelden/dj-pylibmc.git#egg=dj-pylibmc\n\n\nUsage\n-----\n\nYour cache backend should look something like this::\n\n    CACHES = {\n        'default': {\n            'BACKEND': 'dj_pylibmc.memcached.PyLibMCCache',\n            'LOCATION': 'localhost:11211',\n            'TIMEOUT': 500,\n            'BINARY': True,\n            'OPTIONS': {  # Maps to pylibmc \"behaviors\"\n                'tcp_nodelay': True,\n                'ketama': True\n            }\n        }\n    }\n\nTo use a `memcached local socket connection\n<https://code.google.com/p/memcached/wiki/NewConfiguringServer#Unix_Sockets>`_,\nset ``LOCATION`` to the path to the file, i.e. ``'/var/run/memcached/memcached.sock'``.\n\nIf you want to use the memcached binary protocol, set the ``BINARY`` key's\nvalue to ``True`` as shown above.  ``BINARY`` is ``False`` by default.\n\nIf you want to control `pylibmc behaviors\n<http://sendapatch.se/projects/pylibmc/behaviors.html>`_, use the\n``OPTIONS``.  ``OPTIONS`` is an empty dict by default.\n\nPylibmc supports `compression\n<http://sendapatch.se/projects/pylibmc/misc.html#compression>`_ and the\nminimum size (in bytes) of values to compress can be set via the Django\nsetting ``PYLIBMC_MIN_COMPRESS_LEN``.  The default is ``0``, which is disabled.\n\nPylibmc 1.3.0 and above allows to configure compression level, which can\nbe set via the Django setting ``PYLIBMC_COMPRESS_LEVEL``. It accepts the\nsame values as the Python `zlib <https://docs.python.org/2/library/zlib.html>`_\nmodule. Please note that pylibmc changed the default from ``1`` (``Z_BEST_SPEED``)\nto ``-1`` (``Z_DEFAULT_COMPRESSION``) in 1.3.0.\n\nSince 0.6.2 connections are long-living and not closed after each request. It could cause unwanted ``ConnectionErrors``\nbeing raised by libmemcached when connection is broken. dj-pylibmc will make one more attempt\nwhen a request to memcached fails with ConnectionError. If this behavior doesn't fit your needs, it can be disabled\nby setting ``DJPYLIBMC_RETRY_ON_BROKEN_CONNECTION`` Django setting to False.\n\n\nConfiguration with Environment Variables\n----------------------------------------\n\nOptionally, the memcached connection can be configured with environment\nvariables (on platforms like Heroku). To do so, declare the following\nvariables:\n\n* ``MEMCACHE_SERVERS``\n* ``MEMCACHE_USERNAME``\n* ``MEMCACHE_PASSWORD``\n\n\nCaching Timouts\n---------------\nWhen setting a cache value, memcache allows you to set an expiration for the\nvalue. Commonly, the value is set to a timeout in seconds. However, other\nvalues are allowed including Unix timestamps and 0 for \"never expire\". The\nhighest number of seconds is 30 days - more than that, and the value is\ntreated like a timestamp.\n\nDjango instead tries to work with cache timeouts in seconds after the current\ntime. 0 is treated as 0 seconds, meaning the item should expire immediately.\nA timeout of None signals that the item should not expire. There is some\nsupport for memcache-style Unix timestamps as well.\n\nIn the distant past (Django 1.3?), a timeout of 0 was converted to the default\ntimeout.\n\nThe current dj-pylibmc behaviour is to pass 0 to the backend, which should\nbe interpreted as \"never expire\". Omiting the timeout will get the Django\ndefault.\n\nIn the future, dj-pylibmc will adopt the latest Django behaviour.\nThe safest solution for your own code is to omit the timeout parameter (and\nget the default timeout), or set it to a timeout in seconds (less than 30\ndays). This way, your code will work when the Django behaviour is adopted.\nAvoid using a timeout of 0, None, or a negative number.\n\nTesting\n-------\n\nInstall `tox <http://tox.testrun.org/>`_::\n\n    pip install tox\n\nRun the tests like this::\n\n    tox\n\n\nChangelog\n=========\n\n0.6.4 - 2020-11-30\n------------------\n- Correctly handles MemcachedError with no retcode attribute\n- Adds black formatiing\n- Supports Python 3.6 through 3.8\n\n0.6.3 - 2020-10-21\n------------------\n- Makes retry on ConnectionError\n- Drops support of old Python and Django version\n- Supports Django 2.2 through 3.1\n- Supports Python 3.5 through 3.8\n\n0.6.2 - 2020-10-16\n------------------\n- Supports Django 1.7 through 3.1\n- Supports Python 2.7 through 3.8\n\n0.6.1 - 2015-12-28\n------------------\n- Supports Django 1.7 through 1.11\n- Supports Python 2.7, 3.4, and 3.5\n\n0.6.0 - 2015-04-01\n------------------\n- Requires pylibmc 1.4.1 or greater\n- Supports Django 1.4 through 1.8.\n- Supports Python 2.5 through 2.7, and Python 3.3 through 3.4\n- In Django 1.6 and higher, when the timeout is omitted, the default\n  timeout is used, rather than set to \"never expire\".\n\n\n\n_(Older changes can be found in the full documentation)._\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RegioHelden/dj-pylibmc",
    "keywords": "django cache pylibmc memcached",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dj-pylibmc",
    "package_url": "https://pypi.org/project/dj-pylibmc/",
    "platform": "",
    "project_url": "https://pypi.org/project/dj-pylibmc/",
    "project_urls": {
      "Homepage": "https://github.com/RegioHelden/dj-pylibmc"
    },
    "release_url": "https://pypi.org/project/dj-pylibmc/0.6.4/",
    "requires_dist": [
      "pylibmc (>=1.4.1)"
    ],
    "requires_python": "",
    "summary": "Django cache backend using pylibmc",
    "version": "0.6.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8778347,
  "releases": {
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e13eff1d0c847ebfa2eff37567c38f2b53732c3098f75dff64ff82169105ca22",
          "md5": "413eaba93eb8726613c24c7abbc1059a",
          "sha256": "0f5bb3e1696fdaca7d548b837c236b12e62fee77e67d040012fc7fd69ab81e32"
        },
        "downloads": -1,
        "filename": "dj_pylibmc-0.6.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "413eaba93eb8726613c24c7abbc1059a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6867,
        "upload_time": "2020-10-16T15:49:27",
        "upload_time_iso_8601": "2020-10-16T15:49:27.826829Z",
        "url": "https://files.pythonhosted.org/packages/e1/3e/ff1d0c847ebfa2eff37567c38f2b53732c3098f75dff64ff82169105ca22/dj_pylibmc-0.6.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0f974913a8e9d7a0622333e46b4fe95a71f5c3e96232a911cf6162c3e031c48",
          "md5": "b67553cc95341c9b8e73dffea5399686",
          "sha256": "e3347b33bb3be479a4981dbdf4f523e3c43b67b8c9493ec976aab5a51af1df25"
        },
        "downloads": -1,
        "filename": "dj-pylibmc-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b67553cc95341c9b8e73dffea5399686",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15245,
        "upload_time": "2020-10-16T15:49:30",
        "upload_time_iso_8601": "2020-10-16T15:49:30.676979Z",
        "url": "https://files.pythonhosted.org/packages/b0/f9/74913a8e9d7a0622333e46b4fe95a71f5c3e96232a911cf6162c3e031c48/dj-pylibmc-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daf214bd640d51d2f329be1df688d3d0a2bb3633c16ea25e38e3dd7c87719505",
          "md5": "a287a5ef04ef2f58970b8f561af719b6",
          "sha256": "a54816918a9f5002497a758cf6be114c4d6cd4b7e7b3373d8aa2c6ea7db40008"
        },
        "downloads": -1,
        "filename": "dj_pylibmc-0.6.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a287a5ef04ef2f58970b8f561af719b6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7357,
        "upload_time": "2020-10-21T10:36:21",
        "upload_time_iso_8601": "2020-10-21T10:36:21.476043Z",
        "url": "https://files.pythonhosted.org/packages/da/f2/14bd640d51d2f329be1df688d3d0a2bb3633c16ea25e38e3dd7c87719505/dj_pylibmc-0.6.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08b14ca9274ea938f88b0c50ed47c38bbc4cb914b818577d0715c89db3346101",
          "md5": "f419f6d0bbd45f2b00422534a35a593f",
          "sha256": "4baea8ebc3ab9b750639089e4b686b7411a0121af73164aff787a0b010b8701a"
        },
        "downloads": -1,
        "filename": "dj-pylibmc-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f419f6d0bbd45f2b00422534a35a593f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15588,
        "upload_time": "2020-10-21T10:36:23",
        "upload_time_iso_8601": "2020-10-21T10:36:23.008292Z",
        "url": "https://files.pythonhosted.org/packages/08/b1/4ca9274ea938f88b0c50ed47c38bbc4cb914b818577d0715c89db3346101/dj-pylibmc-0.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a402ae644aef843cd3e342844467da1fd4f1336a7396ccc98bd195353128fad4",
          "md5": "ea9e8d94640440e70834e59842417860",
          "sha256": "881e083863f4a0c4cd480135c45292c0de1e572af667a3b475dc19e99b83116e"
        },
        "downloads": -1,
        "filename": "dj_pylibmc-0.6.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea9e8d94640440e70834e59842417860",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7398,
        "upload_time": "2020-11-30T09:23:07",
        "upload_time_iso_8601": "2020-11-30T09:23:07.560451Z",
        "url": "https://files.pythonhosted.org/packages/a4/02/ae644aef843cd3e342844467da1fd4f1336a7396ccc98bd195353128fad4/dj_pylibmc-0.6.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a3462b01a7b364debca448118ffb50698e57aff60da4e63724d9b88c02bc54c",
          "md5": "0f7cd4840bb225397af10ab0813dafac",
          "sha256": "a546424e2a99ee68f158eba630d35d13e5917ae56969650a14a04c7310084c95"
        },
        "downloads": -1,
        "filename": "dj-pylibmc-0.6.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0f7cd4840bb225397af10ab0813dafac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16803,
        "upload_time": "2020-11-30T09:23:08",
        "upload_time_iso_8601": "2020-11-30T09:23:08.887526Z",
        "url": "https://files.pythonhosted.org/packages/1a/34/62b01a7b364debca448118ffb50698e57aff60da4e63724d9b88c02bc54c/dj-pylibmc-0.6.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a402ae644aef843cd3e342844467da1fd4f1336a7396ccc98bd195353128fad4",
        "md5": "ea9e8d94640440e70834e59842417860",
        "sha256": "881e083863f4a0c4cd480135c45292c0de1e572af667a3b475dc19e99b83116e"
      },
      "downloads": -1,
      "filename": "dj_pylibmc-0.6.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea9e8d94640440e70834e59842417860",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7398,
      "upload_time": "2020-11-30T09:23:07",
      "upload_time_iso_8601": "2020-11-30T09:23:07.560451Z",
      "url": "https://files.pythonhosted.org/packages/a4/02/ae644aef843cd3e342844467da1fd4f1336a7396ccc98bd195353128fad4/dj_pylibmc-0.6.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a3462b01a7b364debca448118ffb50698e57aff60da4e63724d9b88c02bc54c",
        "md5": "0f7cd4840bb225397af10ab0813dafac",
        "sha256": "a546424e2a99ee68f158eba630d35d13e5917ae56969650a14a04c7310084c95"
      },
      "downloads": -1,
      "filename": "dj-pylibmc-0.6.4.tar.gz",
      "has_sig": false,
      "md5_digest": "0f7cd4840bb225397af10ab0813dafac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16803,
      "upload_time": "2020-11-30T09:23:08",
      "upload_time_iso_8601": "2020-11-30T09:23:08.887526Z",
      "url": "https://files.pythonhosted.org/packages/1a/34/62b01a7b364debca448118ffb50698e57aff60da4e63724d9b88c02bc54c/dj-pylibmc-0.6.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}