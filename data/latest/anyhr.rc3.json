{
  "info": {
    "author": "Felix Gigler, Dejan Nickovic, Cristinel Mateis, Nicolas Basset, Thao Dang",
    "author_email": "felix.gigler.fl@ait.ac.at, dejan.nickovic@ait.ac.at",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# anyHR\r\r\nA collection of *hit-and-run Markov Chain Monte Carlo* algorithms for sampling of n-dimensional sets defined by arbitrary inequality constraints.\r\r\n\r\r\n\r\r\n## Introduction\r\r\nThis tool implements some variants of the *hit and run* or *mixing* algorithms. \r\r\n\r\r\nLet **S** be an open bounded set in n dimensions defined by inequality constraints of the form \r\r\nf(x<sub>1</sub>,..., x<sub>n</sub>) < g(x<sub>1</sub>,..., x<sub>n</sub>), where f and g are arbitrary functions.\r\r\nLet all parameters also have parameter ranges defined as intervals, so **S** is a subset of a hyperrectangle.\r\r\n\r\r\n(As an example, one could impose ``x + y < 1`` in the two dimensional plane, with x in (0,1) and y in (0,1)).\r\r\n\r\r\nHit-and-run algorithms can be used to get a sample uniformly at random inside of this set **S**.\r\r\n\r\r\n**anyHR** parses the parameters and their respective constraints and returns a number of samples that satisfy this spec, \r\r\nwhile being distributed uniformly on the set of allowed values. \r\r\nFor more information on mixing algorithms see\r\r\n\r\r\n## Installation\r\r\nIt is necessary to have a working installation of Python 3,\r\r\n[pip](https://pip.pypa.io/en/stable/installing/) and [git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)  for the following installation process.\r\r\nOpen the target installation directory in a terminal and type\r\r\n```bash\r\r\npip install anyHR\r\r\n```\r\r\n\r\r\n## Use\r\r\nA minimal running example for the above specification can be sampled with the following code:\r\r\n\r\r\n````python\r\r\n# Import modules\r\r\nimport numpy as np\r\r\nimport matplotlib.pyplot as plt\r\r\nfrom anyHR.constraint.Constraint import Constraints\r\r\nfrom anyHR.hit_and_run.hit_and_run import HitAndRun\r\r\n\r\r\n\r\r\n# Define variables to use\r\r\nvar_names = ['x', 'y']\r\r\n\r\r\n# Define the set of constraint\r\r\nc = Constraints(var_names)\r\r\nc.add_constraint('x+y < 1')\r\r\n\r\r\n# Define the bounding hyperrectangle\r\r\nx_bound = [0, 1]\r\r\ny_bound = [0, 1]\r\r\nbounds = [x_bound, y_bound]\r\r\n\r\r\n# build hr object\r\r\nhr = HitAndRun(constraint=c, bounding_box=bounds)\r\r\n\r\r\n# generate samples\r\r\nsamples = []\r\r\ntotal_rejections = 0\r\r\nnb_samples = 100\r\r\nmixing = 10\r\r\nfor i in range(nb_samples * mixing):\r\r\n    sample, rejections = hr.next_sample()\r\r\n\r\r\n    # do some mixing in between samples\r\r\n    if i % mixing == 0:\r\r\n        samples.append(sample)\r\r\n\r\r\nxs = [sample[0] for sample in samples]\r\r\nys = [sample[1] for sample in samples]\r\r\n\r\r\nplt.scatter(xs,ys)\r\r\nplt.show()\r\r\n````\r\r\n\r\r\n## References\r\r\nFor more information about mixing algorithms, see:\r\r\n\r\r\n- Smith, R. L. (1984). Efficient Monte Carlo procedures for generating points uniformly distributed over bounded regions. Operations Research, 32(6), 1296-1308.\r\r\n\r\r\n- Kiatsupaibul, S., Smith, R. L., & Zabinsky, Z. B. (2011). An analysis of a variation of hit-and-run for uniform sampling from general regions. ACM Transactions on Modeling and Computer Simulation (TOMACS), 21(3), 1-11.\r\r\n\r\r\n- Neal, R. M. (2003). Slice sampling. The annals of statistics, 31(3), 705-767.\r\r\n\r\r\n\r\r\nWe also thank Abraham Lee for his implementation of the PSO algorithms which is used here.\r\r\nSee https://github.com/tisimst/pyswarm for more information.\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/figlerg/anyHR",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "anyHR",
    "package_url": "https://pypi.org/project/anyHR/",
    "platform": null,
    "project_url": "https://pypi.org/project/anyHR/",
    "project_urls": {
      "Homepage": "https://github.com/figlerg/anyHR"
    },
    "release_url": "https://pypi.org/project/anyHR/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Library implementing hit-and-run methods for sampling open bounded sets.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13489533,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba69c8638c75e4fd7526089ae1ac6806a9d0ec7fca9b40117f80781919f25460",
          "md5": "1d84da50c7f226e472d62cacb988ec8d",
          "sha256": "4be3339906a9fcc7d4814f9c6259eb2743f8249cbe0559c829ae24e949599dba"
        },
        "downloads": -1,
        "filename": "AnyHR-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d84da50c7f226e472d62cacb988ec8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 29357,
        "upload_time": "2021-07-26T10:54:07",
        "upload_time_iso_8601": "2021-07-26T10:54:07.916563Z",
        "url": "https://files.pythonhosted.org/packages/ba/69/c8638c75e4fd7526089ae1ac6806a9d0ec7fca9b40117f80781919f25460/AnyHR-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69ede9edf77658ecbf434bc7cc090fb98c3767f400c2b978e6fff5597344cfa7",
          "md5": "01916b1d63ab0ad244e279019af13dce",
          "sha256": "9aa48fe1c37e0979b5af0dcf2c2c0618b6cb5665a5fedf8927c78a2c8d6d1008"
        },
        "downloads": -1,
        "filename": "anyHR-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01916b1d63ab0ad244e279019af13dce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 29361,
        "upload_time": "2021-07-26T11:20:39",
        "upload_time_iso_8601": "2021-07-26T11:20:39.513406Z",
        "url": "https://files.pythonhosted.org/packages/69/ed/e9edf77658ecbf434bc7cc090fb98c3767f400c2b978e6fff5597344cfa7/anyHR-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd79bc8f86edd9a66f18c7eac99a0107d46bef924661fe33e8bb14a738ede847",
          "md5": "e93c20fa2185cfe1e461589ef3be8424",
          "sha256": "446d31cbb38426116b2712d93d4f9d2052ba0a7b3c0975644d41b42188c14b34"
        },
        "downloads": -1,
        "filename": "anyHR-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e93c20fa2185cfe1e461589ef3be8424",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 25033,
        "upload_time": "2022-04-12T12:47:45",
        "upload_time_iso_8601": "2022-04-12T12:47:45.996612Z",
        "url": "https://files.pythonhosted.org/packages/fd/79/bc8f86edd9a66f18c7eac99a0107d46bef924661fe33e8bb14a738ede847/anyHR-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd79bc8f86edd9a66f18c7eac99a0107d46bef924661fe33e8bb14a738ede847",
        "md5": "e93c20fa2185cfe1e461589ef3be8424",
        "sha256": "446d31cbb38426116b2712d93d4f9d2052ba0a7b3c0975644d41b42188c14b34"
      },
      "downloads": -1,
      "filename": "anyHR-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e93c20fa2185cfe1e461589ef3be8424",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 25033,
      "upload_time": "2022-04-12T12:47:45",
      "upload_time_iso_8601": "2022-04-12T12:47:45.996612Z",
      "url": "https://files.pythonhosted.org/packages/fd/79/bc8f86edd9a66f18c7eac99a0107d46bef924661fe33e8bb14a738ede847/anyHR-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}