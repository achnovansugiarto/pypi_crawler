{
  "info": {
    "author": "Tiago Tresoldi",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# ASymCat\r\n\r\nASymCat is a powerful Python library designed to analyze co-occurrence association between categorical\r\nvariables using various symmetric and asymmetric measures of association. Whether you are working with\r\nlinguistic data, or any other kind of categorical data, ASymCat can help you explore and describe your\r\ndata in new and meaningful ways.\r\n\r\nUsing ASymCat, you can input co-occurrence observations such as records, alignments, and matrices of\r\npresence-absence, and generate dictionaries that provide association scores between categories. You can also\r\nfocus on the strength or direction of association, or both, depending on your research questions.\r\n\r\nIn addition to the main methods for numeric computation of measures of association, ASymCat includes auxiliary\r\nmethods that can help you deal with relational data, n-grams from sequences, alignments, and binary\r\nmatrices of presence/absence.\r\n\r\nASymCat is a versatile library that can be used by researchers in various fields, and it can help you gain\r\nnew insights into your data.\r\n\r\n## Background\r\n\r\nMeasures of association play a crucial role in statistical analysis as they help to quantify the relationship\r\nbetween variables. While a variety of measures exist, correlation coefficients are widely used to determine\r\nthe strength and direction of the relationship between two variables. Pearson's **rho**, for example,\r\nis frequently used to assess the strength of the linear relationship between continuous variables, whereas\r\nSpearman's **rho** is employed to evaluate the strength of the monotonic relationship between ordinal or\r\nranked variables. The Chi-square measure, on the other hand, is a useful tool for measuring the\r\nassociation between categorical variables.\r\n\r\nIt is important to note that most measures of association are symmetric, indicating that the association\r\nbetween any `x` and `y` value is equal to that between `y` and `x`. In general, these measures are\r\nused to investigate either the strength or significance of the association.\r\n\r\nFor researchers in various fields, an understanding of measures of association is essential for\r\nconducting meaningful statistical analyses. By using appropriate measures of association, researchers can\r\ngain valuable insights into the relationships between variables, draw conclusions, and make informed decisions.\r\n\r\nWhile symmetric measures are commonly used to measure the relationship between numeric variables, studies\r\nand applications involving categorical variables would typically benefit from the use of asymmetric measures.\r\nAsymmetric measures are useful in determining the fraction of variability in `x` that can be explained\r\nby variations in `y` (Pearson, 2016). This property is easily demonstrated through a modification\r\nof the example provided by Zychlinski (2018), with the introduction of the `dython` library:\r\n\r\n  |               | X | Y |\r\n  |---------------|---|---|\r\n  | Observation 1 | A | c |\r\n  | Observation 2 | A | d |\r\n  | Observation 3 | A | c |\r\n  | Observation 4 | B | g |\r\n  | Observation 5 | B | g |\r\n  | Observation 6 | B | f |\r\n\r\nIn the given example, it is not possible to determine the categorical value of `y` with complete certainty\r\nbased on `x`. However, it is possible to determine `x` with certainty based on `y`. The symmetric version\r\nof Maximum-Likelihood estimation (MLE), which simply divides the number of cases by the total number\r\nof observations (i.e., Cxy/Cx and Cxy/Cy, where C represents the overall count), produces tables that\r\nare transposed versions of each other for XY and YX.\r\n\r\n  | X given Y | `A`  | `B`  |\r\n  |-----------|------|------|\r\n  | **`c`**   | 0.75 | 0.75 |\r\n  | **`d`**   | 0.00 | 0.00 |\r\n  | **`f`**   | 0.00 | 0.00 |\r\n  | **`g`**   | 0.75 | 0.75 |\r\n\r\n  | Y given X | `c`  | `d`  | `f`  | `g`  |\r\n  |-----------|------|------|------|------|\r\n  | **`A`**   | 0.75 | 0.00 | 0.00 | 0.75 |\r\n  | **`B`**   | 0.75 | 0.00 | 0.00 | 0.75 |\r\n\r\nIn contrast to symmetric tables, asymmetric tables can capture the difference in information between variables,\r\nindicating that if `y` is known in a dataset, `x` can be predicted with certainty. Using the\r\nMaximum-Likelihood estimation scorer, we can see that the asymmetric tables more accurately reflect\r\nthis relationship:\r\n\r\n  | X given Y  | `A`  | `B`  |\r\n  |------------|------|------|\r\n  | **`c`**    | 1.00 | 0.00 |\r\n  | **`d`**    | 1.00 | 0.00 |\r\n  | **`f`**    | 0.00 | 1.00 |\r\n  | **`g`**    | 0.00 | 1.00 |\r\n\r\n  | Y given X | `c`  | `d`  | `f`  | `g`  |\r\n  |-----------|------|------|------|------|\r\n  | **`A`**   | 0.67 | 0.33 | 0.00 | 0.00 |\r\n  | **`B`**   | 0.00 | 0.00 | 0.33 | 0.67 |\r\n\r\nThe assessment of categorical association typically involves the use of measures such as Chi-square\r\nand Cramer's V, which are symmetric in nature. However, there are some widely-used asymmetric\r\nmeasures that include Theil's U and Goodman and Kruskal's tau. The Theil's U measure is\r\nwell-suited for fields in the humanities, including linguistic research, as it considers the conditional\r\nentropy between `x` and `y`, which reflects the number of possible states of `y` given `x` and\r\ntheir frequency of occurrence.\r\n\r\nIn the ASymCat library, various scoring methods are available to measure asymmetric associations,\r\nincluding Maximum-Likelihood Estimation, Pointwise Mutual Information, Normalized Pointwise Mutual\r\nInformation, Chi-square (over both 2x2 and 3x2 contingency tables), CramÃ©r's V (over both 2x2\r\nand 3x2 contingency tables), Fisher Exact Odds Ratio (over unconditional MLE), Theil's U\r\n(\"uncertainty score\"), Conditional Entropy, and a new scorer `tresoldi` that combines information\r\nfrom MLE and PMI, tailored for studies in computational historical linguistics.\r\n\r\n\r\nThe most popular methods for measure of categorical association are the\r\naforementioned Chi-square and Cramer's V, defined as the square root of a\r\nnormalized chi-square value. Both are symmetric values. Among the best\r\nknown asymmetric measures are Theil's U and Goodman and Kruskal's tau.\r\nThe former is particularly useful for domains of the humanities such as\r\nlingustic research, as it is ultimately based on the conditional entropy\r\nbetween `x` and `y`, that is, how many possible states of `y` are observed\r\ngiven `x` and how often they occur.\r\n\r\nIn addition to the various categorical association scorers, the ASymCat library provides several\r\nuseful features. Users can scale the scores with their desired ranges using methods such as\r\n`minmax`, `mean`, and `stdev`. The library also includes functions for generating heatmaps of the\r\nscorers. Moreover, it provides a range of smoothing methods for frequency counts, including Laplace\r\nsmoothing and more sophisticated approaches like the Certainty Degree scorer, which was specifically\r\ndesigned for use with this library.\r\n\r\n## Installation and usage\r\n\r\nThe library can be installed as any standard Python library with `pip`:\r\n\r\n```bash\r\npip install asymcat\r\n```\r\n\r\nDetailed instructions on how to use the library can be found in\r\nthe [official documentation]().\r\n\r\nA show-case example with a subset of the `mushroom` dataset is shown here:\r\n\r\n```python\r\nimport tabulate\r\nimport asymcat\r\nfrom catcoocc.scorer import CatScorer\r\n\r\nmushroom_data = asymcat.read_sequences(\"resources/mushroom-small.tsv\")\r\nmushroom_cooccs = asymcat.collect_cooccs(mushroom_data)\r\nscorer = asymcat.scorer.CatScorer(mushroom_cooccs)\r\n\r\nmle = scorer.mle()\r\npmi = scorer.pmi()\r\nnpmi = scorer.pmi(True)\r\nchi2 = scorer.chi2()\r\nchi2_ns = scorer.chi2(False)\r\ncramersv = scorer.cramers_v()\r\ncramersv_ns = scorer.cramers_v(False)\r\nfisher = scorer.fisher()\r\ntheil_u = scorer.theil_u()\r\ncond_entropy = scorer.cond_entropy()\r\ntresoldi = scorer.tresoldi()\r\n\r\nheaders = [\r\n  'pair',\r\n  'mle_xy', 'mle_yx',\r\n  'pmi_xy', 'pmi_yx',\r\n  'npmi_xy', 'npmi_yx',\r\n  'chi2_xy', 'chi2_yx',\r\n  'chi2ns_xy', 'chi2ns_yx',\r\n  'cremersv_xy', 'cremersv_yx',\r\n  'cremersvns_xy', 'cremersvns_yx',\r\n  'fisher_xy', 'fisher_yx',\r\n  'theilu_xy', 'theilu_yx',\r\n  'cond_entropy_xy', 'cond_entropy_yx',\r\n  'tresoldi_xy', 'tresoldi_yx'\r\n]\r\n\r\ntable = []\r\nfor pair in sorted(scorer.obs):\r\n  buf = [\r\n    pair,\r\n    \"%0.4f\" % mle[pair][0], \"%0.4f\" % mle[pair][1],\r\n    \"%0.4f\" % pmi[pair][0], \"%0.4f\" % pmi[pair][1],\r\n    \"%0.4f\" % npmi[pair][0], \"%0.4f\" % npmi[pair][1],\r\n    \"%0.4f\" % chi2[pair][0], \"%0.4f\" % chi2[pair][1],\r\n    \"%0.4f\" % chi2_ns[pair][0], \"%0.4f\" % chi2_ns[pair][1],\r\n    \"%0.4f\" % cramersv[pair][0], \"%0.4f\" % cramersv[pair][1],\r\n    \"%0.4f\" % cramersv_ns[pair][0], \"%0.4f\" % cramersv_ns[pair][1],\r\n    \"%0.4f\" % fisher[pair][0], \"%0.4f\" % fisher[pair][1],\r\n    \"%0.4f\" % theil_u[pair][0], \"%0.4f\" % theil_u[pair][1],\r\n    \"%0.4f\" % cond_entropy[pair][0], \"%0.4f\" % cond_entropy[pair][1],\r\n    \"%0.4f\" % tresoldi[pair][0], \"%0.4f\" % tresoldi[pair][1],\r\n  ]\r\n  table.append(buf)\r\n\r\nprint(tabulate.tabulate(table, headers=headers, tablefmt='markdown'))\r\n```\r\n\r\nWhich will output:\r\n\r\n| pair                    |   mle_xy |   mle_yx |   pmi_xy |   pmi_yx |   npmi_xy |   npmi_yx |   chi2_xy |   chi2_yx |   chi2ns_xy |   chi2ns_yx |   cremersv_xy |   cremersv_yx |   cremersvns_xy |   cremersvns_yx |   fisher_xy |   fisher_yx |   theilu_xy |   theilu_yx |   cond_entropy_xy |   cond_entropy_yx |   tresoldi_xy |   tresoldi_yx |\r\n|-------------------------|----------|----------|----------|----------|-----------|-----------|-----------|-----------|-------------|-------------|---------------|---------------|-----------------|-----------------|-------------|-------------|-------------|-------------|-------------------|-------------------|---------------|---------------|\r\n| ('edible', 'bell')      |   0.3846 |   1      |   0.4308 |   0.4308 |    0.3107 |    0.3107 |    1.8315 |    1.8315 |      3.5897 |      3.5897 |        0.2027 |        0.2027 |          0.1987 |          0.1987 |         inf |         inf |      0      |      1      |            1.119  |            0      |        0.5956 |        1      |\r\n| ('edible', 'convex')    |   0.4615 |   0.4615 |  -0.3424 |  -0.3424 |   -0.2844 |   -0.2844 |    3.6735 |    3.6735 |      5.7988 |      5.7988 |        0.3719 |        0.3719 |          0.3101 |          0.3101 |           0 |           0 |      0.2147 |      0.3071 |            0.7273 |            0.4486 |       -0.5615 |       -0.5615 |\r\n| ('edible', 'flat')      |   0.0769 |   1      |   0.4308 |   0.4308 |    0.1438 |    0.1438 |    0.1041 |    0.1041 |      0.5668 |      0.5668 |        0      |        0      |          0      |          0      |         inf |         inf |      0      |      1      |            1.119  |            0      |        0.4596 |        1      |\r\n| ('edible', 'sunken')    |   0.0769 |   1      |   0.4308 |   0.4308 |    0.1438 |    0.1438 |    0.1041 |    0.1041 |      0.5668 |      0.5668 |        0      |        0      |          0      |          0      |         inf |         inf |      0      |      1      |            1.119  |            0      |        0.4596 |        1      |\r\n| ('poisonous', 'bell')   |   0      |   0      |  -3.5553 |  -3.5553 |   -0.5934 |   -0.5934 |    1.8315 |    1.8315 |      3.5897 |      3.5897 |        0.2027 |        0.2027 |          0.1987 |          0.1987 |           0 |           0 |      1      |      1      |            0      |            0      |       -3.5553 |       -3.5553 |\r\n| ('poisonous', 'convex') |   1      |   0.5385 |   0.4308 |   0.4308 |    0.4103 |    0.4103 |    3.6735 |    3.6735 |      5.7988 |      5.7988 |        0.3719 |        0.3719 |          0.3101 |          0.3101 |         inf |         inf |      1      |      0      |            0      |            0.6902 |        1      |        0.6779 |\r\n| ('poisonous', 'flat')   |   0      |   0      |  -1.9459 |  -1.9459 |   -0.3248 |   -0.3248 |    0.1041 |    0.1041 |      0.5668 |      0.5668 |        0      |        0      |          0      |          0      |           0 |           0 |      1      |      1      |            0      |            0      |       -1.9459 |       -1.9459 |\r\n| ('poisonous', 'sunken') |   0      |   0      |  -1.9459 |  -1.9459 |   -0.3248 |   -0.3248 |    0.1041 |    0.1041 |      0.5668 |      0.5668 |        0      |        0      |          0      |          0      |           0 |           0 |      1      |      1      |            0      |            0      |       -1.9459 |       -1.9459 |\r\n\r\n## Similar Projects\r\n\r\nhttps://github.com/pafoster/pyitlib\r\n\r\nGriffith, Daniel M.; Veech, Joseph A.; and Marsh, Charles J. (2016)\r\n*cooccur: Probabilistic Species Co-Occurrence Analysis in R*. Journal\r\nof Statistical Software (69). doi: 10.18627/jss.v069.c02\r\n\r\nhttps://cran.r-project.org/web/packages/GoodmanKruskal/vignettes/GoodmanKruskal.html\r\n\r\n## Community guidelines\r\n\r\nWhile the author can be contacted directly for support, it is recommended\r\nthat third parties use GitHub standard features, such as issues and\r\npull requests, to contribute, report problems, or seek support.\r\n\r\n## Author and citation\r\n\r\n\r\nThe library is developed by Tiago Tresoldi (tiago.tresoldi@lingfil.uu.se). The library is developed in the context of\r\nthe [Cultural Evolution of Texts](https://github.com/evotext/) project, with funding from the\r\n[Riksbankens Jubileumsfond](https://www.rj.se/) (grant agreement ID:\r\n[MXM19-1087:1](https://www.rj.se/en/anslag/2019/cultural-evolution-of-texts/)).\r\n\r\nDuring the first stages of development, the author received funding from the\r\n[European Research Council](https://erc.europa.eu/) (ERC) under the European Unionâ€™s Horizon 2020\r\nresearch and innovation programme (grant agreement\r\nNo. [ERC Grant #715618](https://cordis.europa.eu/project/rcn/206320/factsheet/en),\r\n[Computer-Assisted Language Comparison](https://digling.org/calc/)).\r\n\r\nIf you use `asymcat`, please cite it as:\r\n\r\n> Tresoldi, Tiago (2023). `asymcat`, a library for symmetric and asymmetric\r\nanalysis of categorical co-occurrences. Version 0.3. Uppsala. Available at:\r\n> <https://github.com/tresoldi/asymcat>\r\n\r\nIn BibTeX:\r\n\r\n```bibtex\r\n@misc{Tresoldi2023asymcat,\r\n  author = {Tresoldi, Tiago},\r\n  title = {asymcat, a library for symmetric and asymmetric analysis of categorical co-occurrences. Version 0.3.},\r\n  howpublished = {\\url{https://github.com/tresoldi/asymcat}},\r\n  address = {Uppsala},\r\n  year = {2023},\r\n}\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/tresoldi/asymcat",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asymcat",
    "package_url": "https://pypi.org/project/asymcat/",
    "platform": null,
    "project_url": "https://pypi.org/project/asymcat/",
    "project_urls": {
      "Homepage": "http://github.com/tresoldi/asymcat"
    },
    "release_url": "https://pypi.org/project/asymcat/0.3.0/",
    "requires_dist": [
      "freqprob",
      "matplotlib",
      "numpy",
      "pandas",
      "scipy",
      "seaborn",
      "tabulate",
      "black (==22.*) ; extra == 'dev'",
      "build (==0.7.*) ; extra == 'dev'",
      "flake8 (==4.*) ; extra == 'dev'",
      "isort (==5.*) ; extra == 'dev'",
      "mypy (>=0.981) ; extra == 'dev'",
      "pytest (==7.*) ; extra == 'dev'",
      "pytest-cov (==4.*) ; extra == 'dev'",
      "twine (==4.*) ; extra == 'dev'"
    ],
    "requires_python": ">=3.8, <4",
    "summary": "A Python library for obtaining asymmetric measures of association between categorical variables in data exploration and description",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16931177,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54107b7b6ba5d2b4d740ca859b74801a62943aac2eee59cd5c8f90a716724c88",
          "md5": "9c9087d0d23be57dceaca5d29a66ebf5",
          "sha256": "a996f58fd7a2f7e229ca3adddd7a47425d0a5d938912208b266f28337bae681c"
        },
        "downloads": -1,
        "filename": "asymcat-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c9087d0d23be57dceaca5d29a66ebf5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8, <4",
        "size": 18397,
        "upload_time": "2023-02-19T17:23:39",
        "upload_time_iso_8601": "2023-02-19T17:23:39.673235Z",
        "url": "https://files.pythonhosted.org/packages/54/10/7b7b6ba5d2b4d740ca859b74801a62943aac2eee59cd5c8f90a716724c88/asymcat-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b20c7f2604ee3255e9d71c5e194f3b8e63d63fb0dc96cd64c52166b56452f30b",
          "md5": "adaa5ea2911f6d36e127972fa27a7ab6",
          "sha256": "49e277d56022353b6ff4b354e7b165a0b8b926c4f40dd7605ae695c13ff053aa"
        },
        "downloads": -1,
        "filename": "asymcat-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "adaa5ea2911f6d36e127972fa27a7ab6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8, <4",
        "size": 4637341,
        "upload_time": "2023-02-19T17:23:43",
        "upload_time_iso_8601": "2023-02-19T17:23:43.884325Z",
        "url": "https://files.pythonhosted.org/packages/b2/0c/7f2604ee3255e9d71c5e194f3b8e63d63fb0dc96cd64c52166b56452f30b/asymcat-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54107b7b6ba5d2b4d740ca859b74801a62943aac2eee59cd5c8f90a716724c88",
        "md5": "9c9087d0d23be57dceaca5d29a66ebf5",
        "sha256": "a996f58fd7a2f7e229ca3adddd7a47425d0a5d938912208b266f28337bae681c"
      },
      "downloads": -1,
      "filename": "asymcat-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9c9087d0d23be57dceaca5d29a66ebf5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8, <4",
      "size": 18397,
      "upload_time": "2023-02-19T17:23:39",
      "upload_time_iso_8601": "2023-02-19T17:23:39.673235Z",
      "url": "https://files.pythonhosted.org/packages/54/10/7b7b6ba5d2b4d740ca859b74801a62943aac2eee59cd5c8f90a716724c88/asymcat-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b20c7f2604ee3255e9d71c5e194f3b8e63d63fb0dc96cd64c52166b56452f30b",
        "md5": "adaa5ea2911f6d36e127972fa27a7ab6",
        "sha256": "49e277d56022353b6ff4b354e7b165a0b8b926c4f40dd7605ae695c13ff053aa"
      },
      "downloads": -1,
      "filename": "asymcat-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "adaa5ea2911f6d36e127972fa27a7ab6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8, <4",
      "size": 4637341,
      "upload_time": "2023-02-19T17:23:43",
      "upload_time_iso_8601": "2023-02-19T17:23:43.884325Z",
      "url": "https://files.pythonhosted.org/packages/b2/0c/7f2604ee3255e9d71c5e194f3b8e63d63fb0dc96cd64c52166b56452f30b/asymcat-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}