{
  "info": {
    "author": "Federico A. Galatolo",
    "author_email": "federico.galatolo@ing.unipi.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# easyopt\n\n`easyopt` is a **super simple** yet **super powerful** [optuna](https://optuna.org/)-based Hyperparameters Optimization Framework that requires **no coding**.\n\n## Features\n\n* YAML Configuration\n* Distributed Parallel Optimization\n* Experiments Monitoring and Crash Recovering\n* Experiments Replicas\n* Real Time Pruning\n* A wide variety of sampling strategies\n    * Tree-structured Parzen Estimator \n    * CMA-ES\n    * Grid Search\n    * Random Search\n* A wide variety of pruning strategies\n    * Asynchronous Successive Halving Pruning\n    * Hyperband Pruning\n    * Median Pruning\n    * Threshold Pruning\n* A wide variety of DBMSs\n    * Redis\n    * SQLite\n    * PostgreSQL\n    * MySQL\n    * Oracle\n    * And many [more](https://docs.sqlalchemy.org/en/14/core/engines.html#sqlalchemy.create_engine)\n  \n\n## Installation\n\nTo install `easyopt` just type:\n\n```\npip install easyopt\n```\n\n## Example\n\n`easyopt` expects that hyperparameters are passed using the command line arguments. \n\nFor example this problem has two hyperparameters `x` and `y`\n\n```python\nimport argparse\n\nparser = argparse.ArgumentParser()\n\nparser.add_argument(\"--x\", type=float, required=True)\nparser.add_argument(\"--y\", type=float, required=True)\n\nargs = parser.parse_args()\n\ndef objective(x, y):\n    return x**2 + y**2\n\nF = objective(args.x ,args.y)\n```\n\nTo integrate `easyopt` you just have to\n* `import easyopt`\n* Add `easyopt.objective(...)` to report the experiment objective function value\n\nThe above code becomes:\n\n```python\nimport argparse\nimport easyopt\n\nparser = argparse.ArgumentParser()\n\nparser.add_argument(\"--x\", type=float, required=True)\nparser.add_argument(\"--y\", type=float, required=True)\n\nargs = parser.parse_args()\n\ndef objective(x, y):\n    return x**2 + y**2\n\nF = objective(args.x ,args.y)\neasyopt.objective(F)\n```\n\nNext you have to create the `easyopt.yml` to define the problem search space, sampler, pruner, storage, etc.\n\n```yaml\ncommand: python problem.py {args}\nstorage: sqlite:////tmp/easyopt-toy-problem.db\nsampler: TPESampler\nparameters:\n  x:\n    distribution: uniform\n    low: -10\n    high: 10\n  y:\n    distribution: uniform\n    low: -10\n    high: 10\n```\n\nYou can find the compete list of distributions [here](https://optuna.readthedocs.io/en/v1.4.0/reference/trial.html) (all the `suggest_*` functions)\n\nFinally you have to create a study\n\n```\neasyopt create test-study\n```\n\nAnd run as many agents as you want\n\n```\neasyopt agent test-study\n```\n\nAfter a while the hyperparameter optimization will finish\n\n```\nTrial 0 finished with value: 90.0401543850028 and parameters: {'x': 5.552902529323713, 'y': 7.694506344453366}. Best is trial 0 with value: 90.0401543850028.\nTrial 1 finished with value: 53.38635524683359 and parameters: {'x': 0.26609756303111, 'y': 7.301749607716118}. Best is trial 1 with value: 53.38635524683359.\nTrial 2 finished with value: 64.41207387363161 and parameters: {'x': 7.706366704967074, 'y': 2.2414250115064167}. Best is trial 1 with value: 53.38635524683359.\n...\n...\nTrial 53 finished with value: 0.5326245807950265 and parameters: {'x': -0.26584110075742917, 'y': 0.6796713102251005}. Best is trial 35 with value: 0.11134607529340049.\nTrial 54 finished with value: 8.570230212116037 and parameters: {'x': 2.8425893061307295, 'y': 0.6999401751487438}. Best is trial 35 with value: 0.11134607529340049.\nTrial 55 finished with value: 96.69479467451664 and parameters: {'x': -0.3606041968175481, 'y': -9.826736960342137}. Best is trial 35 with value: 0.11134607529340049.\n```\n\n## YAML Structure\n\nThe `YAML` configuration file is structured as follows\n\n```yaml\ncommand: <command>\nstorage: <storage>\nsampler: <sampler>\npruner: <pruner>\ndirection: <direction>\nreplicas: <replicas>\nparameters:\n  parameter-1:\n    distribution: <distribution>\n    <arg1>: <value1>\n    <arg2>: <value2>\n    ...\n  ...\n```\n\n* `command`: the command to execute to run the experiment.\n  * `{args}` will be expanded to `--parameter-1=value-1 --parameter-2=value-2`\n  * `{name}` will be expanded to the study name\n* `storage`: the storage to use for the study. A full list of storages is available [here](https://docs.sqlalchemy.org/en/14/core/engines.html#sqlalchemy.create_engine)\n* `sampler`: the sampler to use. The full list of samplers is available [here](https://optuna.readthedocs.io/en/stable/reference/samplers.html)\n* `pruner`: the pruner to use. The full list of pruners is available [here](https://optuna.readthedocs.io/en/stable/reference/pruners.html)\n* `direction`: can be `minimize` or `maximize` (default: `minimize`)\n* `replicas`: the number of replicas to run for the same experiment (the experiment result is the average). (default: `1`)\n* `parameters`: the parameters to optimize\n  * for each parameter have to specify\n    * `distribution` the distribution to use. The full list of distributions is available [here](https://optuna.readthedocs.io/en/v1.4.0/reference/trial.html) (all the `suggest_*` functions)\n    * `arg`: `value`\n      * Arguments of the distribution. The arguments documentation is available [here](https://optuna.readthedocs.io/en/v1.4.0/reference/trial.html)\n\n## CLI Interface\n\n`easyopt` offer two CLI commands:\n\n* `create` to create a study using the `easyopt.yml` file or the one specified with `--config`\n* `agent <study_name>` to run the agent for `<study_name>`\n\n## LIB Interface\n\nWhen importing `easyopt` you can use three functions:\n\n* `easyopt.objective(value)` to report the **final** objective function value of the experiment\n* `easyopt.report(value)` to report the **current**  objective function value of the experiment (used by the pruner)\n* `easyopt.should_prune()` it returns `True` if the pruner thinks that the run should be pruned\n\n## Examples\n\nYou can find some examples [here](https://github.com/galatolofederico/easyopt/tree/main/examples)\n\n## Contributions and license\n\nThe code is released as Free Software under the [GNU/GPLv3](https://choosealicense.com/licenses/gpl-3.0/) license. Copying, adapting and republishing it is not only allowed but also encouraged. \n\nFor any further question feel free to reach me at  [federico.galatolo@ing.unipi.it](mailto:federico.galatolo@ing.unipi.it) or on Telegram  [@galatolo](https://t.me/galatolo)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easyopt",
    "package_url": "https://pypi.org/project/easyopt/",
    "platform": "",
    "project_url": "https://pypi.org/project/easyopt/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/easyopt/0.2/",
    "requires_dist": [
      "optuna (==2.9.1)",
      "PyYAML (==5.4.1)",
      "colorama (==0.4.4)"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11469083,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7845953920c9550af4ea3d1218e7ef3a849d6abdcf53d575d4c42f8870a6488",
          "md5": "e5fe62bafad56e949e9d103ed5f17e0e",
          "sha256": "abe6e74619952d006e5df4714a5d0ac3816b16bcb557bca23a6de30b16867360"
        },
        "downloads": -1,
        "filename": "easyopt-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5fe62bafad56e949e9d103ed5f17e0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21789,
        "upload_time": "2021-09-16T12:30:44",
        "upload_time_iso_8601": "2021-09-16T12:30:44.679849Z",
        "url": "https://files.pythonhosted.org/packages/d7/84/5953920c9550af4ea3d1218e7ef3a849d6abdcf53d575d4c42f8870a6488/easyopt-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "043b72764e93944b0123559dfa13e9d4e73b6041530c2dd8d440fdcb68bf8537",
          "md5": "774274cdd7101725443579cc9d8e4473",
          "sha256": "e235216c286b12030d428b0c856a9399f7334a749aee0d49b718b1a1dfb67cde"
        },
        "downloads": -1,
        "filename": "easyopt-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "774274cdd7101725443579cc9d8e4473",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19550,
        "upload_time": "2021-09-16T12:30:45",
        "upload_time_iso_8601": "2021-09-16T12:30:45.713166Z",
        "url": "https://files.pythonhosted.org/packages/04/3b/72764e93944b0123559dfa13e9d4e73b6041530c2dd8d440fdcb68bf8537/easyopt-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4550b4e86dde6cce0177bc41099e8177b18967b97830280836c2dad864142700",
          "md5": "04dfc95a31a9d80278637bbf135e4d84",
          "sha256": "c4c4bd28a0ed558e4860e032dc2a946ffaa2153a4fba680610475bb3de534009"
        },
        "downloads": -1,
        "filename": "easyopt-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04dfc95a31a9d80278637bbf135e4d84",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21806,
        "upload_time": "2021-09-16T15:20:39",
        "upload_time_iso_8601": "2021-09-16T15:20:39.749347Z",
        "url": "https://files.pythonhosted.org/packages/45/50/b4e86dde6cce0177bc41099e8177b18967b97830280836c2dad864142700/easyopt-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "000e636ad095abf68f3ce77de64e54156e5a13b9e00335486115f8521cf5b3a5",
          "md5": "69a9aa3fe5358e9a0fce835b074ee92f",
          "sha256": "a58158761aeb165f049a5b5bef0bbbdfcc5610e20b039dfe8814893523e687a8"
        },
        "downloads": -1,
        "filename": "easyopt-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "69a9aa3fe5358e9a0fce835b074ee92f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19575,
        "upload_time": "2021-09-16T15:20:40",
        "upload_time_iso_8601": "2021-09-16T15:20:40.756106Z",
        "url": "https://files.pythonhosted.org/packages/00/0e/636ad095abf68f3ce77de64e54156e5a13b9e00335486115f8521cf5b3a5/easyopt-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4550b4e86dde6cce0177bc41099e8177b18967b97830280836c2dad864142700",
        "md5": "04dfc95a31a9d80278637bbf135e4d84",
        "sha256": "c4c4bd28a0ed558e4860e032dc2a946ffaa2153a4fba680610475bb3de534009"
      },
      "downloads": -1,
      "filename": "easyopt-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04dfc95a31a9d80278637bbf135e4d84",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21806,
      "upload_time": "2021-09-16T15:20:39",
      "upload_time_iso_8601": "2021-09-16T15:20:39.749347Z",
      "url": "https://files.pythonhosted.org/packages/45/50/b4e86dde6cce0177bc41099e8177b18967b97830280836c2dad864142700/easyopt-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "000e636ad095abf68f3ce77de64e54156e5a13b9e00335486115f8521cf5b3a5",
        "md5": "69a9aa3fe5358e9a0fce835b074ee92f",
        "sha256": "a58158761aeb165f049a5b5bef0bbbdfcc5610e20b039dfe8814893523e687a8"
      },
      "downloads": -1,
      "filename": "easyopt-0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "69a9aa3fe5358e9a0fce835b074ee92f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19575,
      "upload_time": "2021-09-16T15:20:40",
      "upload_time_iso_8601": "2021-09-16T15:20:40.756106Z",
      "url": "https://files.pythonhosted.org/packages/00/0e/636ad095abf68f3ce77de64e54156e5a13b9e00335486115f8521cf5b3a5/easyopt-0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}