{
  "info": {
    "author": "Sigmath Bits",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Dataclass As Data\r\nThis is a simple package for configurable conversion of dataclasses to a data representation, typically a dict or a tuple.\r\nThe behaviour for how a dataclass is converted to and from data can be configured to differ from the default per dataclass if desired.\r\n\r\nThis package only supports simple primitive types, other dataclasses, and the primitive generics\r\n`dict[...]`, `list[...]`, `tuple[...]`, `Union[...]`, and `Optional[...]` as type annotations by default. \r\nThe conversion of other types can be configured using the `converters` keyword-only argument.\r\n\r\n## Install\r\n\r\nThis package supports **Python 3.9** and above.\r\n\r\n```bash\r\npip install dataclass-as-data\r\n```\r\n\r\n## Quick Start\r\n\r\n```python\r\nimport dataclasses\r\nfrom dataclass_as_data import as_data, from_data\r\n\r\n\r\n# Create a dataclass\r\n@dataclasses.dataclass\r\nclass Person:\r\n    name: str\r\n    age: int\r\n\r\n    \r\n# Create a dataclass object\r\nperson = Person(\"Simon\", 21)\r\n\r\n>>> person\r\nPerson(name='Simon', age=21)\r\n\r\n# Call as_data with the dataclass object to convert it to a dictionary\r\ndata = as_data(person)\r\n\r\n>>> data\r\n{'name': 'Simon', 'age': 21}\r\n\r\n# Call from_data with the dataclass and the data to get the object instance back\r\n>>> from_data(Person, data)\r\nPerson(name='Simon', age=21)\r\n```\r\n\r\nDataclasses can be nested within dataclasses, which are recursively converted to their data representation.\r\n\r\n```python\r\n@dataclasses.dataclass\r\nclass Friends:\r\n    people: list[Person]\r\n\r\n\r\n# All dataclasses are converted recursively\r\n>>> as_data(Friends([Person(\"Sunset\", 22), Person(\"Starlight\", 20)]))\r\n{'people': [{'name': 'Sunset', 'age': 22}, {'name': 'Starlight', 'age': 20}]}\r\n\r\n>>> from_data(Friends, {'people': [{'name': 'Sunset', 'age': 22}, {'name': 'Starlight', 'age': 20}]})\r\nFriends(people=[Person(name='Sunset', age=22), Person(name='Starlight', age=20)])\r\n```\r\n\r\n## Configuring as_data and from_data\r\nTo change what data is constructed when using `as_data` and `from_data`, override the `as_data` method and `from_data` class methods in your dataclass.\r\nIt is good practice to forward on the `converters` keyword argument on when doing this if you would like [type converters](#type-conversion) to still apply,\r\nbut this is optional.\r\n\r\n**Note:** you must use one of `as_dict`, `as_tuple`, `from_dict`, or `from_tuple` (**not** `as_data` or `from_data`)\r\nif you wish to use the default behaviour and modify it.\r\n\r\n```python\r\nfrom dataclass_as_data import as_data, as_dict, from_data, from_dict\r\n\r\n\r\n@dataclasses.dataclass\r\nclass Config:\r\n    VERSION = (1, 0)\r\n    version: tuple[int, int] = VERSION\r\n\r\n    def as_data(self, *, converters) -> dict:\r\n        # Ensure correct version when converting to data\r\n        assert self.version == self.VERSION, \"Incorrect version!\"\r\n\r\n        return as_dict(self, converters=converters)  # use as_dict to otherwise use default behaviour\r\n\r\n    @classmethod\r\n    def from_data(cls, data: dict, *, converters):\r\n        # Update version on data load\r\n        if data['version'] < cls.VERSION:\r\n            data['version'] = cls.VERSION\r\n\r\n        return from_dict(cls, data, converters=converters)  # use from_dict to otherwise use default behaviour\r\n\r\n    \r\n# Now these methods are called instead\r\n>> > as_data(Config((0, 1)))\r\nAssertionError: Incorrect version!\r\n\r\n>> from_data(Config, {'version': (0, 1)})\r\nConfig(version=(1, 0))\r\n```\r\n\r\n### DataAsTuple\r\nIf you'd simply like a dataclass to be represented as a tuple instead of a dict when calling `as_data`, \r\ninherent from the `DataAsTuple` abstract base class.\r\n\r\n```python\r\nfrom dataclass_as_data import as_data, DataAsTuple\r\n\r\n\r\n# Create a dataclass inheriting from DataAsTuple\r\n@dataclasses.dataclass\r\nclass Person(DataAsTuple):\r\n    name: str\r\n    age: int\r\n\r\n    \r\n# Calling as_data now returns a tuple\r\n>>> as_data(Person(\"Summer\", 24))\r\n(\"Summer\", 24)\r\n```\r\n\r\nThis merely overrides `as_data` and `from_data` to use `as_tuple` and `from_tuple` for you respectively.\r\n\r\n```python\r\nfrom dataclass_as_data import as_tuple, from_tuple\r\n\r\n\r\n# Same as inheriting from DataAsTuple\r\n@dataclasses.dataclass\r\nclass Person:\r\n    name: str\r\n    age: int\r\n    \r\n    def as_data(self, *, converters):\r\n        return as_tuple(self, converters=converters)\r\n\r\n    @classmethod\r\n    def from_data(cls, data: tuple, *, converters):\r\n        return from_tuple(cls, data, converters=converters)\r\n```\r\n\r\n## Custom converters\r\n`dataclass_as_data` also provides multiple ways to customise how non-dataclass types are converted.\r\n\r\nBy default, no conversion is performed for other class types.\r\nThe only exception is when the class type and the data type passed to `from_data` don't match, in which case it will convert the \r\ndata back to the class type by passing it as a single argument to its constructor.\r\n\r\n### Simple property transformation\r\n`from_data` supports very basic custom property converters in the form of single-input functions.\r\nThese converters are called on the relevant properties when `from_data` is called.\r\nNote that all regular types, such as `int`, are also technically treated this way by default.\r\n\r\n```python\r\nfrom dataclass_as_data import from_data\r\n\r\n\r\ndef lower_str(value) -> str:\r\n    \"\"\"Convert to lowercase str\"\"\"\r\n    return str(value).lower()\r\n\r\n    \r\n@dataclasses.dataclass\r\nclass Employee:\r\n    id: int\r\n    name: lower_str\r\n\r\n\r\n# The `lower_str` converter is called on the value of the `name` parameter\r\n>>> from_data(Employee, {'id': 123, 'name': \"Sylvester\"})\r\nEmployee(id=123, name='sylvester')\r\n\r\n# The string value of `id` is coerced into an int\r\n>>> from_data(Employee, {'id': \"456\", 'name': \"Sunny\"})\r\nEmployee(id=456, name='sunny')\r\n```\r\n\r\n### Class conversion\r\nIf you have your own classes that you'd like to use in type hints,\r\nyou can also configure regular classes to be converted to and from data in a certain way by defining an\r\n`as_data` method and `from_data` class method.\r\n\r\n**Note:** these cannot use the `as_dict`, `from_dict`, `as_tuple`, or `from_tuple` functions as they only take a dataclass.\r\n\r\n```python\r\nfrom dataclass_as_data import as_data, from_data\r\n\r\n\r\nclass Name:\r\n    def __init__(self, full_name):\r\n        self.first, self.last = full_name.split(\" \")\r\n        \r\n    def as_data(self):\r\n        return f\"{self.last}, {self.first}\"\r\n    \r\n    @classmethod\r\n    def from_data(cls, data):\r\n        last, first = data.split(\", \")\r\n        return cls(f\"{first} {last}\")\r\n    \r\n    def __repr__(self):\r\n        return f\"{type(self).__name__}('{self.first} {self.last}')\"\r\n\r\n    \r\n@dataclasses.dataclass\r\nclass Student:\r\n    name: Name\r\n\r\n\r\n# Data for the class is now represented and converted as desired\r\n>>> as_data(Student(Name(\"Silver Spoon\")))\r\n{'name': 'Spoon, Silver'}\r\n\r\n>>> from_data(Student, {'name': 'Spoon, Silver'})\r\nStudent(name=Name('Silver Spoon'))\r\n```\r\n\r\n### Type conversion\r\nHow any type is converted can be defined by passing a dictionary of types to their converters to\r\nthe `converters` argument supported by `as_data` and `from_data`. \r\nThis takes a dictionary of types to single-input converter functions to be used during conversion for that type.\r\n\r\n```python\r\nfrom dataclass_as_data import as_data, from_data\r\n\r\n\r\n@dataclasses.dataclass\r\nclass RandomNumberGenerator:\r\n    seed: bytes\r\n\r\n\r\ndef bytes_to_str(_bytes: bytes) -> str:\r\n    return _bytes.decode('utf-8')\r\n\r\n\r\ndef str_to_bytes(string: str) -> bytes:\r\n    return bytes(string, 'utf-8')\r\n\r\n\r\n# `bytes` objects are now represented as `str`s\r\n>>> as_data(RandomNumberGenerator(b'Sigmath Bytes'), converters={bytes: bytes_to_str})\r\n{'seed': 'Sigmath Bytes'}\r\n\r\n>>> from_data(RandomNumberGenerator, {'seed': 'Sigmath Bytes'}, converters={bytes: str_to_bytes})\r\nRandomNumberGenerator(seed=b'Sigmath Bytes')\r\n```\r\n\r\nThese converters also accept an optional keyword-only argument. If this argument is specified, the converter will also be\r\napplied to all subclasses. Which subclass is being converted will be passed through this argument. \r\n\r\nThis argument does not need to be used to enable subclass-matching for converters.\r\n\r\n```python\r\nfrom dataclass_as_data import as_data, from_data\r\n\r\n\r\nclass ID(int):\r\n    def __repr__(self):\r\n        return f\"{type(self).__name__}({super().__repr__()})\"\r\n\r\n\r\n@dataclasses.dataclass\r\nclass User:\r\n    name: str\r\n    id: ID\r\n    \r\n    \r\ndef int_to_bytes(value: int, *, _cls) -> bytes:\r\n    return value.to_bytes(1, 'little')\r\n    \r\n    \r\ndef bytes_to_int(_bytes: bytes, *, cls) -> int:\r\n    return cls.from_bytes(_bytes, 'little')\r\n\r\n\r\n# `int` objects and their subclasses are now represented as `bytes`\r\n>>> as_data(User(\"Siggy\", ID(123)), converters={int: int_to_bytes})\r\n{'name': 'Siggy', 'id': b'{'}\r\n\r\n>>> from_data(User, {'name': 'Siggy', 'id': b'{'}, converters={int: bytes_to_int})\r\nUser(name='Siggy', id=ID(123))\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/sigmath_bits/dataclass-as-data",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dataclass-as-data",
    "package_url": "https://pypi.org/project/dataclass-as-data/",
    "platform": null,
    "project_url": "https://pypi.org/project/dataclass-as-data/",
    "project_urls": {
      "Homepage": "https://gitlab.com/sigmath_bits/dataclass-as-data"
    },
    "release_url": "https://pypi.org/project/dataclass-as-data/0.2.0/",
    "requires_dist": [
      "tox (==4.0.5) ; extra == 'dev'",
      "mypy (==0.991) ; extra == 'dev'",
      "build (==0.7.0) ; extra == 'dev'",
      "twine (==4.0.0) ; extra == 'dev'",
      "typing-extensions (==4.4.0) ; extra == 'dev'",
      "tox (==3.25.0) ; extra == 'test'",
      "mypy (==0.991) ; extra == 'test'",
      "typing-extensions (==4.4.0) ; extra == 'test'"
    ],
    "requires_python": ">=3.9",
    "summary": "Simple configurable conversion of dataclasses to raw data",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16084000,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec369e1e54b897ecb6dc9dfc8914abd7c349357d47cb3e1e801b87730fd43627",
          "md5": "34c8a1665ea54a135206fc170352283c",
          "sha256": "792196ece245c6b3a2dc7df8ac1981bac63e5425b1c168e54a842cb5665e18c3"
        },
        "downloads": -1,
        "filename": "dataclass_as_data-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34c8a1665ea54a135206fc170352283c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 17504,
        "upload_time": "2022-05-12T01:44:16",
        "upload_time_iso_8601": "2022-05-12T01:44:16.126853Z",
        "url": "https://files.pythonhosted.org/packages/ec/36/9e1e54b897ecb6dc9dfc8914abd7c349357d47cb3e1e801b87730fd43627/dataclass_as_data-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebaac06d108b3866c599ce8ea400b5cf368efe01854c1d8f5f4ad76cf2a766e9",
          "md5": "f73987a5990691ae5e7bc1b98fb1b540",
          "sha256": "f3beb9fbe8b7c8bc8509b26be86903f80d37d004a0ef5e93245637551d3043fd"
        },
        "downloads": -1,
        "filename": "dataclass_as_data-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f73987a5990691ae5e7bc1b98fb1b540",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 16732,
        "upload_time": "2022-05-12T01:44:18",
        "upload_time_iso_8601": "2022-05-12T01:44:18.543306Z",
        "url": "https://files.pythonhosted.org/packages/eb/aa/c06d108b3866c599ce8ea400b5cf368efe01854c1d8f5f4ad76cf2a766e9/dataclass_as_data-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06b2c72004f9edd747b74fead66f7ed569926dce126d07eef9c3a03ed47606e1",
          "md5": "76f09c163cb50cbb26f7387503279510",
          "sha256": "1962c5daf552269abf5f20bb756d0247c769b88d7ecf56458dc77d49f3dc51a1"
        },
        "downloads": -1,
        "filename": "dataclass_as_data-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76f09c163cb50cbb26f7387503279510",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 22218,
        "upload_time": "2022-05-15T07:51:20",
        "upload_time_iso_8601": "2022-05-15T07:51:20.096209Z",
        "url": "https://files.pythonhosted.org/packages/06/b2/c72004f9edd747b74fead66f7ed569926dce126d07eef9c3a03ed47606e1/dataclass_as_data-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d4c9067c0059213cdbc2ee184f86cd74d9c7a8c68076504befa00dedaff0c2f",
          "md5": "f9ee087e60207cb5c35f8d7f1bb82043",
          "sha256": "5ab5713b4e49f7bcb16a039e5231ff4db0163f69aba0dfb511bbb4d9c17f2422"
        },
        "downloads": -1,
        "filename": "dataclass_as_data-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9ee087e60207cb5c35f8d7f1bb82043",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 21600,
        "upload_time": "2022-05-15T07:51:23",
        "upload_time_iso_8601": "2022-05-15T07:51:23.353630Z",
        "url": "https://files.pythonhosted.org/packages/8d/4c/9067c0059213cdbc2ee184f86cd74d9c7a8c68076504befa00dedaff0c2f/dataclass_as_data-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80dd1d887bf970ff2024be08f425aef69de8add2940d9db5bfe0fb68a8d29614",
          "md5": "73bbeaa40e4d847e4290869ecbec4155",
          "sha256": "93020809ab42fb770b9cf78040250b0d84353e2d4fa82c5cd9ac02d3f84074c6"
        },
        "downloads": -1,
        "filename": "dataclass_as_data-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73bbeaa40e4d847e4290869ecbec4155",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 22785,
        "upload_time": "2022-05-16T09:31:36",
        "upload_time_iso_8601": "2022-05-16T09:31:36.450028Z",
        "url": "https://files.pythonhosted.org/packages/80/dd/1d887bf970ff2024be08f425aef69de8add2940d9db5bfe0fb68a8d29614/dataclass_as_data-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9df5041f4877454a9c10d2d869b145460afb39b7a81d46604c847a2aa05e0b40",
          "md5": "083e38ddd13417026352484685d24a11",
          "sha256": "e021481dd345a622f7ddaf1c53747d9f35f49f9927d88e1dc7a017a435b10a48"
        },
        "downloads": -1,
        "filename": "dataclass_as_data-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "083e38ddd13417026352484685d24a11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 22123,
        "upload_time": "2022-05-16T09:44:10",
        "upload_time_iso_8601": "2022-05-16T09:44:10.599474Z",
        "url": "https://files.pythonhosted.org/packages/9d/f5/041f4877454a9c10d2d869b145460afb39b7a81d46604c847a2aa05e0b40/dataclass_as_data-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69a5658fa7ee8f825b8d5e9d26b567b4f0d912c2c35b033953c9012da98bfda2",
          "md5": "b9a0c154d4d71337355c3ca3c6247279",
          "sha256": "e47c42ea70ee48f231e996a3560418f4ad934cc45b28fa677cb3f79e29b43931"
        },
        "downloads": -1,
        "filename": "dataclass_as_data-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9a0c154d4d71337355c3ca3c6247279",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 30270,
        "upload_time": "2022-12-13T09:18:52",
        "upload_time_iso_8601": "2022-12-13T09:18:52.115586Z",
        "url": "https://files.pythonhosted.org/packages/69/a5/658fa7ee8f825b8d5e9d26b567b4f0d912c2c35b033953c9012da98bfda2/dataclass_as_data-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92acd1a9720c31a9a2b8c076d3790d971e278977a1ef67c94cbe1c085db2afb7",
          "md5": "09d2b3c0b5f5366c3da386376b15e753",
          "sha256": "761fe3887cdca6df62e901d491573c024a99b769606c70bd5a1c53581d4ff6e6"
        },
        "downloads": -1,
        "filename": "dataclass_as_data-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "09d2b3c0b5f5366c3da386376b15e753",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 31612,
        "upload_time": "2022-12-13T09:18:54",
        "upload_time_iso_8601": "2022-12-13T09:18:54.541573Z",
        "url": "https://files.pythonhosted.org/packages/92/ac/d1a9720c31a9a2b8c076d3790d971e278977a1ef67c94cbe1c085db2afb7/dataclass_as_data-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69a5658fa7ee8f825b8d5e9d26b567b4f0d912c2c35b033953c9012da98bfda2",
        "md5": "b9a0c154d4d71337355c3ca3c6247279",
        "sha256": "e47c42ea70ee48f231e996a3560418f4ad934cc45b28fa677cb3f79e29b43931"
      },
      "downloads": -1,
      "filename": "dataclass_as_data-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b9a0c154d4d71337355c3ca3c6247279",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 30270,
      "upload_time": "2022-12-13T09:18:52",
      "upload_time_iso_8601": "2022-12-13T09:18:52.115586Z",
      "url": "https://files.pythonhosted.org/packages/69/a5/658fa7ee8f825b8d5e9d26b567b4f0d912c2c35b033953c9012da98bfda2/dataclass_as_data-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92acd1a9720c31a9a2b8c076d3790d971e278977a1ef67c94cbe1c085db2afb7",
        "md5": "09d2b3c0b5f5366c3da386376b15e753",
        "sha256": "761fe3887cdca6df62e901d491573c024a99b769606c70bd5a1c53581d4ff6e6"
      },
      "downloads": -1,
      "filename": "dataclass_as_data-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "09d2b3c0b5f5366c3da386376b15e753",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 31612,
      "upload_time": "2022-12-13T09:18:54",
      "upload_time_iso_8601": "2022-12-13T09:18:54.541573Z",
      "url": "https://files.pythonhosted.org/packages/92/ac/d1a9720c31a9a2b8c076d3790d971e278977a1ef67c94cbe1c085db2afb7/dataclass_as_data-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}