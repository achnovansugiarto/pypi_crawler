{
  "info": {
    "author": "Lukáš Dršman",
    "author_email": "lukaskodr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Public Domain",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pytermcanvas\n\n## Requirements\n* terminal emulator (with [true color support](https://gist.github.com/sindresorhus/bed863fb8bedf023b833c88c322e44f9))\n* python3\n  * pip\n  * [PIL](https://pypi.org/project/Pillow/)\n  * [cursor](https://pypi.org/project/cursor/)\n\n## Install\n```sh\npip install pytermcanvas\n```\n## Usage\n### *class* TerminalCanvas(*x_size, y_size, auto_render, empty_char*)\n##### Parameters:\n* **x_size** (Int) - number of columns to use, stored in *self.cols*\n* **y_size** (Int) - number of rows to use, stored in *self.rows*\n* **auto_render** (Bool) [default: `True`]\n  * `True` - enable automatic canvas rendering\n  * `False` - disable automatic canvas rendering\n* **empty_char** (Char) [default: `SPACE`] - character used to fill the canvas on creation\n\n\n##### Methods:\n####  render()\n*Renders canvas*\n****\n####  clear()\n*Clears canvas*\n****\n#### resize(*x_size, y_size*)\n* **x_size** (Int) - number of columns to use, stored in *self.cols*\n* **y_size** (Int) - number of rows to use, stored in *self.rows*\n****\n#### drawImage(*path, **\\*kwargs)\n*Draws image on canvas*\n* **path** (Str) - path to image<br><br>\n* **mode** (Str) [default: `bg`] - mode to use for rendering\n  * `bg` - change color behind character\n  * `fg` - change color of specified character\n* **size** (List or Tuple) [default: canvas size] - desired size of image\n  * **size**[0] (Int) - number of columns to use\n  * **size**[1] (Int) - number of rows to use\n* **char** (Char) [defualt: `SPACE`] - character to print, mainly used for `fg` rendering\n****\n#### drawRect(*col, row, width, height, **\\*kwargs)\n*Draws rectangle on canvas*\n* **col** (Int) - position of top left corner in column\n* **row** (Int) - position of top left corner in row\n* **width** (Int) - width of rectangle\n* **height** (Int) - height of rectangle<br><br>\n* **mode** (Str) [default: `bg`] - mode to use for rendering\n  * `bg` - change color behind character\n  * `fg` - change color of specified character\n* **color** (List or Tuple) [default: `(255, 255, 255)`] - RGB color of rectangle\n  * **color**[0] (Int) - Red, `0 - 255`\n  * **color**[1] (Int) - Green, `0 - 255`\n  * **color**[2] (Int) - Blue, `0 - 255`\n* **char** (Char) [defualt: `SPACE`] - character to print, mainly used for `fg` rendering\n****\n#### insertRow(*row, data, offset*)\n*Inserts set of characters to specified row*\n* **row** (Int) - row to insert data to\n* **data** (Str, List or Tuple) - data inserted into desired row\n  * (Str) - standard string\n  * (List or Tuple) - sequence of characters\n* **offset** (Int) [default: `0`] - defines the starting column\n****\n#### insertCol(*col, data, offset*)\n*Inserts set of characters to specified column*\n* **col** (Int) - column to insert data to\n* **data** (Str, List or Tuple) - data inserted into desired column\n  * (Str) - standard string\n  * (List or Tuple) - sequence of characters\n* **offset** (Int) [default: `0`] - defines the starting row\n****\n#### getRow(*row*)\n*Returns list of characters from specified row*\n* **row** (Int) - row to fetch data from\n****\n#### getCol(*col*)\n*Returns list of characters from specified column*\n* **col** (Int) - column to fetch data from\n****\n#### setChar(*col, row, char*)\n*Changes character on specified location*\n* **col** (Int) - column of character\n* **row** (Int) - row of character\n* **char** (Char) - replacement character\n****\n#### getChar(*col, row*)\n*Returns character from specified location*\n* **col** (Int) - column of character\n* **row** (Int) - row of character\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LukasDrsman/pytermcanvas",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytermcanvas",
    "package_url": "https://pypi.org/project/pytermcanvas/",
    "platform": "",
    "project_url": "https://pypi.org/project/pytermcanvas/",
    "project_urls": {
      "Homepage": "https://github.com/LukasDrsman/pytermcanvas"
    },
    "release_url": "https://pypi.org/project/pytermcanvas/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Minimal terminal canvas",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7898055,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "941c5c0026df8d3ee3fb8ef8f338a6fd15548afc4e1cde84df3c61018aa68b37",
          "md5": "6aba4118bf8cfaa4fb8c7c5af77dcd14",
          "sha256": "785ffadbb45d8329aec08df6bdbb11b65ff99ee4e8694a5e9b50e2d66ae64f9a"
        },
        "downloads": -1,
        "filename": "pytermcanvas-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6aba4118bf8cfaa4fb8c7c5af77dcd14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2195,
        "upload_time": "2020-05-30T14:09:23",
        "upload_time_iso_8601": "2020-05-30T14:09:23.711459Z",
        "url": "https://files.pythonhosted.org/packages/94/1c/5c0026df8d3ee3fb8ef8f338a6fd15548afc4e1cde84df3c61018aa68b37/pytermcanvas-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9de2376d77cf83fb6b65cf67fa09807b6c4397535d980caaa249f79d45ae5399",
          "md5": "ca807edc124b20b971b3b9b53b886206",
          "sha256": "44f6f444f2ed87438daedadd57c924c6a9cbea7c59676269ff932e849a0a5ea6"
        },
        "downloads": -1,
        "filename": "pytermcanvas-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ca807edc124b20b971b3b9b53b886206",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2331,
        "upload_time": "2020-06-21T14:53:21",
        "upload_time_iso_8601": "2020-06-21T14:53:21.906361Z",
        "url": "https://files.pythonhosted.org/packages/9d/e2/376d77cf83fb6b65cf67fa09807b6c4397535d980caaa249f79d45ae5399/pytermcanvas-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b43967c3273575553018d11596187130273f44bc39615ab92180db2a179bfb27",
          "md5": "4e2aac27d016d30aaa0997c037c927eb",
          "sha256": "acf6e91209d459689988b781190a3910bbad3edc612d024ba8f366cb85a14fa5"
        },
        "downloads": -1,
        "filename": "pytermcanvas-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e2aac27d016d30aaa0997c037c927eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4633,
        "upload_time": "2020-08-06T12:27:59",
        "upload_time_iso_8601": "2020-08-06T12:27:59.161878Z",
        "url": "https://files.pythonhosted.org/packages/b4/39/67c3273575553018d11596187130273f44bc39615ab92180db2a179bfb27/pytermcanvas-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e01c595629a950dcb808565c87d3ad33eec4f3a5858f4eb59ed15ef161d36c1f",
          "md5": "f9ddbd7a8d78b54b09426ba99bc2d317",
          "sha256": "9a7674ba0ac48643d2d54c849b937b26b8275eae7bc73c099ef5c028ba89fd8c"
        },
        "downloads": -1,
        "filename": "pytermcanvas-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9ddbd7a8d78b54b09426ba99bc2d317",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3718,
        "upload_time": "2020-08-06T12:28:00",
        "upload_time_iso_8601": "2020-08-06T12:28:00.936009Z",
        "url": "https://files.pythonhosted.org/packages/e0/1c/595629a950dcb808565c87d3ad33eec4f3a5858f4eb59ed15ef161d36c1f/pytermcanvas-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b43967c3273575553018d11596187130273f44bc39615ab92180db2a179bfb27",
        "md5": "4e2aac27d016d30aaa0997c037c927eb",
        "sha256": "acf6e91209d459689988b781190a3910bbad3edc612d024ba8f366cb85a14fa5"
      },
      "downloads": -1,
      "filename": "pytermcanvas-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4e2aac27d016d30aaa0997c037c927eb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4633,
      "upload_time": "2020-08-06T12:27:59",
      "upload_time_iso_8601": "2020-08-06T12:27:59.161878Z",
      "url": "https://files.pythonhosted.org/packages/b4/39/67c3273575553018d11596187130273f44bc39615ab92180db2a179bfb27/pytermcanvas-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e01c595629a950dcb808565c87d3ad33eec4f3a5858f4eb59ed15ef161d36c1f",
        "md5": "f9ddbd7a8d78b54b09426ba99bc2d317",
        "sha256": "9a7674ba0ac48643d2d54c849b937b26b8275eae7bc73c099ef5c028ba89fd8c"
      },
      "downloads": -1,
      "filename": "pytermcanvas-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f9ddbd7a8d78b54b09426ba99bc2d317",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 3718,
      "upload_time": "2020-08-06T12:28:00",
      "upload_time_iso_8601": "2020-08-06T12:28:00.936009Z",
      "url": "https://files.pythonhosted.org/packages/e0/1c/595629a950dcb808565c87d3ad33eec4f3a5858f4eb59ed15ef161d36c1f/pytermcanvas-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}