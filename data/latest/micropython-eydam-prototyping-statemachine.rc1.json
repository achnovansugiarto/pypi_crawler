{
  "info": {
    "author": "Tobias Eydam",
    "author_email": "eydam-prototyping@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: Implementation :: MicroPython"
    ],
    "description": "# Eydam-Prototyping: ep_statemachine\n\nPython-Modul to implement a simple statemachine.\n\nExample:\n\n```python\nimport ep_statemachine\ni = 0\n        \ndef inc():\n    nonlocal i\n    i = i + 1\n\nworkflow = [\n    \"press coffee button\",\n    \"press coffee button\",\n    \"press espresso button\",\n    \"press espresso button\",\n    \"press off button\",\n    \"press off button\",\n]\n\n# define states\ns_sleep = es.state(\"sleep\", initial=True, entry_action=inc)\ns_select_input = es.state(\"select_input\", entry_action=inc)\ns_make_coffee = es.state(\"make coffee\")\ns_make_espresso = es.state(\"make espresso\")\ns_done = es.state(\"done\")\ns_off = es.state(\"off\")\n\n# define transitions\nt_wake_up = es.transition(s_select_input, identifier=\"wake up\", condition=lambda: re.match(\"press (coffee|espresso|off) button\", workflow[i]) is not None)\ns_sleep.add_transition(t_wake_up)\n\nt_coffee = es.transition(s_make_coffee, identifier=\"coffee\", condition=lambda: workflow[i] == \"press coffee button\")\ns_select_input.add_transition(t_coffee)\n\nt_espresso = es.transition(s_make_espresso, identifier=\"espresso\", condition=lambda: workflow[i] == \"press espresso button\")\ns_select_input.add_transition(t_espresso)\n\nt_finished = es.transition(s_done, identifier=\"finished\", condition=lambda: True)\ns_make_coffee.add_transition(t_finished)\ns_make_espresso.add_transition(t_finished)\n\nt_back_to_sleep = es.transition(s_sleep, identifier=\"back to sleep\", condition=lambda: True)\ns_done.add_transition(t_back_to_sleep)\n\nt_turn_off = es.transition(s_off, identifier=\"turn off\", condition=lambda:workflow[i] == \"press off button\")\ns_select_input.add_transition(t_turn_off)\n\nsm = es.statemachine([s_sleep, s_select_input, s_make_coffee, s_make_espresso, s_done, s_off])\nsm.init()\n\n# do one step after another\nsm.step()\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eydam-prototyping/tutorials_de/blob/master/micropython/packages/ep_statemachine",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "micropython-eydam-prototyping-statemachine",
    "package_url": "https://pypi.org/project/micropython-eydam-prototyping-statemachine/",
    "platform": "",
    "project_url": "https://pypi.org/project/micropython-eydam-prototyping-statemachine/",
    "project_urls": {
      "Homepage": "https://github.com/eydam-prototyping/tutorials_de/blob/master/micropython/packages/ep_statemachine"
    },
    "release_url": "https://pypi.org/project/micropython-eydam-prototyping-statemachine/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Some statemachine functions for MicroPython",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9407338,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "810d856150a6b312c8982c65223c76040f5ca70e631fc58604e6c292ebc97baf",
          "md5": "1bf73bb2c0ddab23f7c5c4e70be7a64c",
          "sha256": "fab0ae2737204ed3c7262ce9a110aec640b0a5edfa8f84120f539134c2c03a76"
        },
        "downloads": -1,
        "filename": "micropython_eydam-prototyping_statemachine-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1bf73bb2c0ddab23f7c5c4e70be7a64c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3674,
        "upload_time": "2021-02-13T11:43:05",
        "upload_time_iso_8601": "2021-02-13T11:43:05.488275Z",
        "url": "https://files.pythonhosted.org/packages/81/0d/856150a6b312c8982c65223c76040f5ca70e631fc58604e6c292ebc97baf/micropython_eydam-prototyping_statemachine-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "810d856150a6b312c8982c65223c76040f5ca70e631fc58604e6c292ebc97baf",
        "md5": "1bf73bb2c0ddab23f7c5c4e70be7a64c",
        "sha256": "fab0ae2737204ed3c7262ce9a110aec640b0a5edfa8f84120f539134c2c03a76"
      },
      "downloads": -1,
      "filename": "micropython_eydam-prototyping_statemachine-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1bf73bb2c0ddab23f7c5c4e70be7a64c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3674,
      "upload_time": "2021-02-13T11:43:05",
      "upload_time_iso_8601": "2021-02-13T11:43:05.488275Z",
      "url": "https://files.pythonhosted.org/packages/81/0d/856150a6b312c8982c65223c76040f5ca70e631fc58604e6c292ebc97baf/micropython_eydam-prototyping_statemachine-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}