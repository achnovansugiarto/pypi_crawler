{
  "info": {
    "author": "Cristian Gabellini",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# GPGO - Gaussian Process GO\nMy own implementation of a Bayesian Black box Optimization with Gaussian Process as a surrogate model.\nIt is still in development but it was successfully used to achieve a bottom up optimization of the Dissipative\nParticle Dynamics force field for a complex system of polymers chains functionalized gold nanoparticles in a water solvent. \n\n# Hyperparameters\nThe Hyperparameters of the GP are optimized by the common technique of maximizing the Log Marginal Likelihood. In this repository this is achieved by using a search grid (although not in an efficient way) or by using the scipy optimizer module (L-BFGS-B, TNC, SLSCP).\nThe analytical gradient is implemented for the Radial Basis Function kernel and it is possible to use the derivate of the Log Marginal Likelihood to optimize the hyperparameters.\n\n<a href=\"https://ibb.co/D8yvW3x\"><img src=\"https://i.ibb.co/pR8MwCt/Figure-6.png\" alt=\"Figure-6\" border=\"0\"></a>\n\n# Acquisition function\nAs it is there are two different acquisition function implemented right now:\n\n-Expected Improvement (EI)\n\n-UCB (Upper Confidence Bound)\n\n# Maximizing the Acquisition function \nIn this little package right now there are 3 ways to run an optimization task with Gaussian Processes:\n\n-NAIVE : AkA sampling the acquisition function with a grid of some kind or a quasi random methods as LHS (require smt package)\n\n-BFGS : optimize the Acquisition function by using the L-BFGS-B optimizer\n\n-DIRECT : optimize the Acquisition function by using the DIRECT optimizer (require DIRECT python package)\n\n-PSO : optimize the Acquisition function by a Particle Swarm Optimization genetic algorithm\n\n<a href=\"https://ibb.co/GPSM0cm\"><img src=\"https://i.ibb.co/f0wN24J/Figure-7.png\" alt=\"Figure-7\" border=\"0\"></a>\n\n# Made for experiments\nEasy to use it with a shell procedure!\nLoad the data and just .suggest_location() to get the next points of your experiment! \n\n# Multi Objective\nRight now the package contains an implementation of the NSGAII genetic solver that allows to solve multi objective \nproblems. It has also an early version of a Multi Objective Bayesian optimization that uses the NSGAII and optimize \nthe Acquisition function EI or the mean function of the GP. It will follow a more precise implementation of the\nHypervolume improvement.\n\n<a href=\"https://ibb.co/MhC92Yc\"><img src=\"https://i.ibb.co/7z1bYwn/pareto.png\" alt=\"pareto\" border=\"0\"></a>\n\n# TODO\n-Load data routines\n\n-Good code practice maybe \n\n-Easy routines for LAMMPS (at least DPD and BD)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/FNTwin/BayGPGO/archive/refs/tags/0.3.2.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FNTwin/GPGO",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BayGPGO",
    "package_url": "https://pypi.org/project/BayGPGO/",
    "platform": "",
    "project_url": "https://pypi.org/project/BayGPGO/",
    "project_urls": {
      "Download": "https://github.com/FNTwin/BayGPGO/archive/refs/tags/0.3.2.tar.gz",
      "Homepage": "https://github.com/FNTwin/GPGO"
    },
    "release_url": "https://pypi.org/project/BayGPGO/0.3.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Bayesian Optimization with Gaussian Process as surrogate model",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10402204,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2efe7ce0eb0623a67862d0e9d6626d7445469b6ef44cf0a87ccd19016bc04eb6",
          "md5": "aae14f490e5c0b4449ea6228f88928c1",
          "sha256": "d4a22adad1abb744d72488d07713fdcddf524445103afd4795911ed15cc6c868"
        },
        "downloads": -1,
        "filename": "BayGPGO-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "aae14f490e5c0b4449ea6228f88928c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30806,
        "upload_time": "2021-05-19T08:02:28",
        "upload_time_iso_8601": "2021-05-19T08:02:28.535689Z",
        "url": "https://files.pythonhosted.org/packages/2e/fe/7ce0eb0623a67862d0e9d6626d7445469b6ef44cf0a87ccd19016bc04eb6/BayGPGO-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00b863a4fa07aa8db0099d18fac558dbcdd94a052afd66b8b3f8fee42c920fa7",
          "md5": "ff3f305d2d42e1139dccb7509204d8b9",
          "sha256": "d1bea558896482f6770ae0bb6293e3f36b371e13e5e0eed57454c5c3422b7d0f"
        },
        "downloads": -1,
        "filename": "BayGPGO-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ff3f305d2d42e1139dccb7509204d8b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30939,
        "upload_time": "2021-05-19T08:47:28",
        "upload_time_iso_8601": "2021-05-19T08:47:28.741293Z",
        "url": "https://files.pythonhosted.org/packages/00/b8/63a4fa07aa8db0099d18fac558dbcdd94a052afd66b8b3f8fee42c920fa7/BayGPGO-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00b863a4fa07aa8db0099d18fac558dbcdd94a052afd66b8b3f8fee42c920fa7",
        "md5": "ff3f305d2d42e1139dccb7509204d8b9",
        "sha256": "d1bea558896482f6770ae0bb6293e3f36b371e13e5e0eed57454c5c3422b7d0f"
      },
      "downloads": -1,
      "filename": "BayGPGO-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ff3f305d2d42e1139dccb7509204d8b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 30939,
      "upload_time": "2021-05-19T08:47:28",
      "upload_time_iso_8601": "2021-05-19T08:47:28.741293Z",
      "url": "https://files.pythonhosted.org/packages/00/b8/63a4fa07aa8db0099d18fac558dbcdd94a052afd66b8b3f8fee42c920fa7/BayGPGO-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}