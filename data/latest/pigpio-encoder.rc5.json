{
  "info": {
    "author": "volker Jaenisch",
    "author_email": "volker.jaenisch@inqbus.de",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Pigpio Encoder\n\nVersion: 0.2.4\n### Requires Python 3\n\n#### Python module for the KY040 rotary encoder.\nThis module has been developed for quickly interface a rotary encoder with Raspberry Pi.\nIt's based on the [pigpio library](http://abyz.me.uk/rpi/pigpio/python.html) (cause it proved to be faster than rpi.GPIO or gpiozero libraries) so you need to install pigpio library and run pigpio daemon before starting your script.\n\n## Features\n- Easy to setup callback functions for the Rotary Encoder and the Switch.\n- The Rotary Encoder has customizable min and max values (default 0-100).\n- The Rotary Encoder increase/decrease value is customizable (default 1).\n- The Switch can be activated or not.\n- The Switch can have two different functions for short press or long press.\n- Both Rotary and Switch have a customizable debounce value (default 300ms)\n\n## Installation\n- Install the pigpio library *(check [pigpio documentation](http://abyz.me.uk/rpi/pigpio/download.html) for alternative installation method)*\n - `sudo apt-get update`\n - `sudo apt-get install pigpio python-pigpio python3-pigpio`\n- Install the pigpio_encoder library\n - `python3 -mpip install pigpio_encoder` (consider add --user option)\n- start pigpio daemon\n - `sudo pigpiod`\n\n## How to use\n- import the module\n    ```python\n    from pigpio_encoder.rotary import Rotary\n    ```\n- create a callback function for the Rotary Encoder counter.\n    > You must pass a positional argument to retrieve the counter value.\n\n    ```python\n    def rotary_callback(counter):\n        # some action with counter...\n    ```\n\n- create a callback function for Up-Rotation events.\n\n    ```python\n    def up_callback():\n        # some action if rotated upward\n    ```\n\n- create a callback function for Down-Rotation events.\n\n    ```python\n    def down_callback():\n        # some action if rotated downward\n    ```\n\n- create callbacks functions for the Switch\n    > If you intend to use the switch you must create at least the \"short press\" callback. The \"long press\" callback is necessary if you want to use that feature.\n\n    ```python\n    def sw_short_callback():\n        # some action...\n    ```\n    ```python\n    def sw_long_callback():\n        # some action...\n      ```\n- create the rotary object\n    > here you setup the gpio id as keyword argument. If you don't pass the switch parameter the switch won't be activated.\n\n    ```python\n    my_rotary = Rotary(\n            clk_gpio=<gpio_id of clk signal>,\n            dt_gpio=<gpio_id of dt signal>,\n            sw_gpio=<gpio_id of switch signal>\n            )\n    ```\n- setup the rotary encoder for counting\n    > here you can setup min and max values for the encoder, the increase/decrease value, a debounce value (default 300ms) and the callback function.\n\n    ```python\n    my_rotary.setup_rotary(\n            min=<min_value>,\n            max=<max_value>,\n            scale=<scale_value>,\n            debounce=<debounce_value>,\n            rotary_callback=<rotary_callback>\n            )\n    ```\n\n- Optional setup for up and down rotation events\n    > here you can setup min and max values for the encoder, the increase/decrease value, a debounce value (default 300ms) and the callback functions.\n\n    ```python\n    my_rotary.setup_rotary(\n            min=<min_value>,\n            max=<max_value>,\n            scale=<scale_value>,\n            debounce=<debounce_value>,\n            up_callback=<up_callback>\n            down_callback=<down_callback>\n            )\n    ```\n\n\n- setup the switch\n    > if you have specified the switch pin when creating the encoder object, here you can setup the debounce value, the long press option and the callbacks.\n\n    ```python\n    my_rotary.setup_switch(\n            debounce=<debounce_value>,\n            long_press=<True>,\n            sw_short_callback=<sw_short_callback>,\n            sw_long_callback=<sw_long_callback>\n            )\n    ```\n\n- start the listener\n    ```python\n    my_rotary.watch()\n    ```\n  Please note that calling .watch() this is only for demostration purposes. It is not neccessary for the encoder to operate it can even cause problems.\n\n\n___\n#### Basic example using default values\n\n```python\nfrom pigpio_encoder.rotary import Rotary\n\n\ndef rotary_callback(counter):\n  print(\"Counter value: \", counter)\n\n\ndef sw_short():\n  print(\"Switch pressed\")\n\n\ndef up_callback():\n  print(\"Up rotation\")\n\n\ndef down_callback():\n  print(\"Down rotation\")\n\n\nmy_rotary = Rotary(clk_gpio=27, dt_gpio=22, sw_gpio=17)\nmy_rotary.setup_rotary(\n  rotary_callback=rotary_callback,\n  up_callback=up_callback,\n  down_callback=down_callback,\n)\nmy_rotary.setup_switch(sw_short_callback=sw_short)\n\nmy_rotary.watch()\n```\n  Please note that calling .watch() this is only for demostration purposes. It is not neccessary for the encoder to operate it can even cause problems.\n\n\n___\n\n#### Example using all the Features\n\n```python\nfrom pigpio_encoder.rotary import Rotary\n\n\ndef rotary_callback(counter):\n  print(\"Counter value: \", counter)\n\n\ndef sw_short():\n  print(\"Switch short press\")\n\n\ndef sw_long():\n  print(\"Switch long press\")\n\n\nmy_rotary = Rotary(\n  clk_gpio=27,\n  dt_gpio=22,\n  sw_gpio=17\n)\nmy_rotary.setup_rotary(\n  min=10,\n  max=300,\n  scale=5,\n  debounce=200,\n  rotary_callback=rotary_callback\n)\nmy_rotary.setup_switch(\n  debounce=200,\n  long_press=True,\n  sw_short_callback=sw_short,\n  sw_long_callback=sw_long\n)\n\nmy_rotary.watch()\n\n```\n  Please note that calling .watch() this is only for demostration purposes. It is not neccessary for the encoder to operate it can even cause problems.\n\n___\n\n## Thanks to...\n- [joan2937](https://github.com/joan2937) for the awesome [pigpio library](https://github.com/joan2937/pigpio)\n- [Raphael Yancey](https://github.com/raphaelyancey) for inspiring me this library with his [similar project](https://github.com/raphaelyancey/pyKY040)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vash3d/pigpio_encoder",
    "keywords": "encoder,rotary,raspberryPi,Micropython,ESP32",
    "license": "GNU GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pigpio-encoder",
    "package_url": "https://pypi.org/project/pigpio-encoder/",
    "platform": "",
    "project_url": "https://pypi.org/project/pigpio-encoder/",
    "project_urls": {
      "Homepage": "https://github.com/vash3d/pigpio_encoder",
      "Repository": "https://github.com/vash3d/pigpio_encoder"
    },
    "release_url": "https://pypi.org/project/pigpio-encoder/0.2.4/",
    "requires_dist": [
      "pigpio"
    ],
    "requires_python": "",
    "summary": "Python module for quickly interface a KY040 rotary encoder with Raspberry Pi and Micropython on ESP32.",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10637503,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d378aea4be0e90c06abc1a1472f2eb627a75e842e9151bd9090378e88aabd8e",
          "md5": "f5e53afd3120e436edb457353c11b2c6",
          "sha256": "ceab25a5f7dbbf6f00466d312cabb2fd506e3622c2e903c007583b448277a9b9"
        },
        "downloads": -1,
        "filename": "pigpio_encoder-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5e53afd3120e436edb457353c11b2c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16157,
        "upload_time": "2019-01-04T14:41:45",
        "upload_time_iso_8601": "2019-01-04T14:41:45.708245Z",
        "url": "https://files.pythonhosted.org/packages/1d/37/8aea4be0e90c06abc1a1472f2eb627a75e842e9151bd9090378e88aabd8e/pigpio_encoder-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92b6e472b8c1db26d952fe64e69f2a59224eb7c300bc0a65a1590966eea45660",
          "md5": "54f7a81468bbf0fca32902cd859cc5cf",
          "sha256": "4e32878232e33f91a3c8369ad1d8911f8e998f9f42987ffe782f4589d9542016"
        },
        "downloads": -1,
        "filename": "pigpio_encoder-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "54f7a81468bbf0fca32902cd859cc5cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3919,
        "upload_time": "2019-01-04T14:41:47",
        "upload_time_iso_8601": "2019-01-04T14:41:47.897951Z",
        "url": "https://files.pythonhosted.org/packages/92/b6/e472b8c1db26d952fe64e69f2a59224eb7c300bc0a65a1590966eea45660/pigpio_encoder-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a1a894ed0243715e27e2a818f3f797ee6257f5bf58e8b963e5cc551d1b6597a",
          "md5": "d532d40eb8c47c4375e369f338bbc384",
          "sha256": "b70532ee6f89bb88038bce5a5c8a3c04e256aa1a20f0cf824bec4d0d64e2bd2b"
        },
        "downloads": -1,
        "filename": "pigpio_encoder-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d532d40eb8c47c4375e369f338bbc384",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16259,
        "upload_time": "2019-01-31T00:19:12",
        "upload_time_iso_8601": "2019-01-31T00:19:12.819329Z",
        "url": "https://files.pythonhosted.org/packages/9a/1a/894ed0243715e27e2a818f3f797ee6257f5bf58e8b963e5cc551d1b6597a/pigpio_encoder-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bafeb7b9566c18137972b8f3625a709a49bc71b79eded1b17ed2c7c8f1d1737",
          "md5": "e8d45d7373d93f33f362b3e74654836f",
          "sha256": "ac161ad192bd9931b23d3a20a530bc5b3a7272df8c3a5a8ded8c12d3e11181f0"
        },
        "downloads": -1,
        "filename": "pigpio_encoder-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8d45d7373d93f33f362b3e74654836f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4003,
        "upload_time": "2019-01-31T00:19:14",
        "upload_time_iso_8601": "2019-01-31T00:19:14.075326Z",
        "url": "https://files.pythonhosted.org/packages/8b/af/eb7b9566c18137972b8f3625a709a49bc71b79eded1b17ed2c7c8f1d1737/pigpio_encoder-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81a5fd126e9ae6ad9c179810f37e0d587096dadfc8b4e8f8300835ebab85685d",
          "md5": "0e637654016391ecd7321eea3d48a4d4",
          "sha256": "74208e7ee111f6fcc2fe0b6963024d40f1862ebfdeb236b548b1e70722077c24"
        },
        "downloads": -1,
        "filename": "pigpio_encoder-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e637654016391ecd7321eea3d48a4d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16253,
        "upload_time": "2019-02-05T01:56:32",
        "upload_time_iso_8601": "2019-02-05T01:56:32.107842Z",
        "url": "https://files.pythonhosted.org/packages/81/a5/fd126e9ae6ad9c179810f37e0d587096dadfc8b4e8f8300835ebab85685d/pigpio_encoder-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b23ec2388c1967296df703ecbbc9805a3a620ec72ad2f88f1c545aef5c00cd04",
          "md5": "cea9382690ece47fde8b1d7ab48c96cb",
          "sha256": "f5c50cc98146fa57bdab5a0b756833d6c9db2bcea8123b916b0c2baadfdc6f12"
        },
        "downloads": -1,
        "filename": "pigpio_encoder-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cea9382690ece47fde8b1d7ab48c96cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3989,
        "upload_time": "2019-02-05T01:56:33",
        "upload_time_iso_8601": "2019-02-05T01:56:33.714605Z",
        "url": "https://files.pythonhosted.org/packages/b2/3e/c2388c1967296df703ecbbc9805a3a620ec72ad2f88f1c545aef5c00cd04/pigpio_encoder-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df9298ee547d2438148fe9905d9bef06d528ec31156c332b40c7b0c5be45b3fb",
          "md5": "49684982e509ad64bd051811de8ff0f6",
          "sha256": "fe5ff74fddca4299d28e6edcd5bf81023d45745a91c62ce315184386d8d8d546"
        },
        "downloads": -1,
        "filename": "pigpio_encoder-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "49684982e509ad64bd051811de8ff0f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4031,
        "upload_time": "2020-02-02T00:44:32",
        "upload_time_iso_8601": "2020-02-02T00:44:32.270847Z",
        "url": "https://files.pythonhosted.org/packages/df/92/98ee547d2438148fe9905d9bef06d528ec31156c332b40c7b0c5be45b3fb/pigpio_encoder-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2208c04bdb75f07afa3927a05acf991e4437324616ec66c241b534114271d06a",
          "md5": "21241b180ee7ff7be6282dff06e4c008",
          "sha256": "00a41c22ebe64bca449f2317a03e2e28e2893381b12c0bc44e66bb4c3ae172dd"
        },
        "downloads": -1,
        "filename": "pigpio_encoder-0.2.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21241b180ee7ff7be6282dff06e4c008",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7286,
        "upload_time": "2021-06-13T20:36:17",
        "upload_time_iso_8601": "2021-06-13T20:36:17.418022Z",
        "url": "https://files.pythonhosted.org/packages/22/08/c04bdb75f07afa3927a05acf991e4437324616ec66c241b534114271d06a/pigpio_encoder-0.2.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c5462d40dcc1052ca899bfff87fb735146037e7ab2aec9eff4fa1841fa61620",
          "md5": "72d5b37d190611a63bf8e686a348ca38",
          "sha256": "6efbcc0e7353b42fab6708e2cc076189fafac611f89ac9a18826e17607950f10"
        },
        "downloads": -1,
        "filename": "pigpio_encoder-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "72d5b37d190611a63bf8e686a348ca38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7279,
        "upload_time": "2021-06-13T20:36:18",
        "upload_time_iso_8601": "2021-06-13T20:36:18.735234Z",
        "url": "https://files.pythonhosted.org/packages/4c/54/62d40dcc1052ca899bfff87fb735146037e7ab2aec9eff4fa1841fa61620/pigpio_encoder-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2208c04bdb75f07afa3927a05acf991e4437324616ec66c241b534114271d06a",
        "md5": "21241b180ee7ff7be6282dff06e4c008",
        "sha256": "00a41c22ebe64bca449f2317a03e2e28e2893381b12c0bc44e66bb4c3ae172dd"
      },
      "downloads": -1,
      "filename": "pigpio_encoder-0.2.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "21241b180ee7ff7be6282dff06e4c008",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7286,
      "upload_time": "2021-06-13T20:36:17",
      "upload_time_iso_8601": "2021-06-13T20:36:17.418022Z",
      "url": "https://files.pythonhosted.org/packages/22/08/c04bdb75f07afa3927a05acf991e4437324616ec66c241b534114271d06a/pigpio_encoder-0.2.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4c5462d40dcc1052ca899bfff87fb735146037e7ab2aec9eff4fa1841fa61620",
        "md5": "72d5b37d190611a63bf8e686a348ca38",
        "sha256": "6efbcc0e7353b42fab6708e2cc076189fafac611f89ac9a18826e17607950f10"
      },
      "downloads": -1,
      "filename": "pigpio_encoder-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "72d5b37d190611a63bf8e686a348ca38",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7279,
      "upload_time": "2021-06-13T20:36:18",
      "upload_time_iso_8601": "2021-06-13T20:36:18.735234Z",
      "url": "https://files.pythonhosted.org/packages/4c/54/62d40dcc1052ca899bfff87fb735146037e7ab2aec9eff4fa1841fa61620/pigpio_encoder-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}