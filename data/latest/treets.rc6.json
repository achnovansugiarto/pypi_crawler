{
  "info": {
    "author": "Qiwen Zhang, Jason Fleischer",
    "author_email": "owenzhang1999@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# TREETS\n> Time Restricted Eating ExperimenTS.\n\n\n## Install\n\n`pip install treets`\n\n## Example for a quick data analysis on phased studies.\n\n```python\nimport treets.core as treets\nimport pandas as pd\n```\n\nTake a brief look on the food logging dataset and the reference information sheet\n\n```python\ntreets.file_loader('data/col_test_data/yrt*').head(2)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>original_logtime</th>\n      <th>desc_text</th>\n      <th>food_type</th>\n      <th>PID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>2021-05-12 02:30:00 +0000</td>\n      <td>Milk</td>\n      <td>b</td>\n      <td>yrt1999</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2021-05-12 02:45:00 +0000</td>\n      <td>Some Medication</td>\n      <td>m</td>\n      <td>yrt1999</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n```python\npd.read_excel('data/col_test_data/toy_data_17May2021.xlsx').head(2)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mCC_ID</th>\n      <th>Participant_Study_ID</th>\n      <th>Study Phase</th>\n      <th>Intervention group (TRE or HABIT)</th>\n      <th>Start_Day</th>\n      <th>End_day</th>\n      <th>Eating_Window_Start</th>\n      <th>Eating_Window_End</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>yrt1999</td>\n      <td>2</td>\n      <td>S-REM</td>\n      <td>TRE</td>\n      <td>2021-05-12</td>\n      <td>2021-05-14</td>\n      <td>00:00:00</td>\n      <td>23:59:00</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>yrt1999</td>\n      <td>2</td>\n      <td>T3-INT</td>\n      <td>TRE</td>\n      <td>2021-05-15</td>\n      <td>2021-05-18</td>\n      <td>08:00:00</td>\n      <td>18:00:00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\nCall summarize_data_with_experiment_phases() function to make the table that contains analytic information that we want.\n\n```python\ndf = treets.summarize_data_with_experiment_phases(treets.file_loader('data/col_test_data/yrt*')\\\n                      , pd.read_excel('data/col_test_data/toy_data_17May2021.xlsx'))\n```\n\n    Participant yrt1999 didn't log any food items in the following day(s):\n    2021-05-18\n    Participant yrt2000 didn't log any food items in the following day(s):\n    2021-05-12\n    2021-05-13\n    2021-05-14\n    2021-05-15\n    2021-05-16\n    2021-05-17\n    2021-05-18\n    Participant yrt1999 have bad logging day(s) in the following day(s):\n    2021-05-12\n    2021-05-15\n    Participant yrt1999 have bad window day(s) in the following day(s):\n    2021-05-15\n    2021-05-17\n    Participant yrt1999 have non adherent day(s) in the following day(s):\n    2021-05-12\n    2021-05-15\n    2021-05-17\n\n\n```python\ndf\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mCC_ID</th>\n      <th>Participant_Study_ID</th>\n      <th>Study Phase</th>\n      <th>Intervention group (TRE or HABIT)</th>\n      <th>Start_Day</th>\n      <th>End_day</th>\n      <th>Eating_Window_Start</th>\n      <th>Eating_Window_End</th>\n      <th>phase_duration</th>\n      <th>caloric_entries_num</th>\n      <th>...</th>\n      <th>logging_day_counts</th>\n      <th>%_logging_day_counts</th>\n      <th>good_logging_days</th>\n      <th>%_good_logging_days</th>\n      <th>good_window_days</th>\n      <th>%_good_window_days</th>\n      <th>outside_window_days</th>\n      <th>%_outside_window_days</th>\n      <th>adherent_days</th>\n      <th>%_adherent_days</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>yrt1999</td>\n      <td>2</td>\n      <td>S-REM</td>\n      <td>TRE</td>\n      <td>2021-05-12</td>\n      <td>2021-05-14</td>\n      <td>00:00:00</td>\n      <td>23:59:00</td>\n      <td>3 days</td>\n      <td>7</td>\n      <td>...</td>\n      <td>3</td>\n      <td>100.0%</td>\n      <td>2.0</td>\n      <td>66.67%</td>\n      <td>3.0</td>\n      <td>100.0%</td>\n      <td>0.0</td>\n      <td>0.0%</td>\n      <td>2.0</td>\n      <td>66.67%</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>yrt1999</td>\n      <td>2</td>\n      <td>T3-INT</td>\n      <td>TRE</td>\n      <td>2021-05-15</td>\n      <td>2021-05-18</td>\n      <td>08:00:00</td>\n      <td>18:00:00</td>\n      <td>4 days</td>\n      <td>8</td>\n      <td>...</td>\n      <td>3</td>\n      <td>75.0%</td>\n      <td>2.0</td>\n      <td>50.0%</td>\n      <td>1.0</td>\n      <td>25.0%</td>\n      <td>2.0</td>\n      <td>50.0%</td>\n      <td>1.0</td>\n      <td>25.0%</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>yrt2000</td>\n      <td>3</td>\n      <td>T3-INT</td>\n      <td>TRE</td>\n      <td>2021-05-12</td>\n      <td>2021-05-14</td>\n      <td>08:00:00</td>\n      <td>16:00:00</td>\n      <td>3 days</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0%</td>\n      <td>0.0</td>\n      <td>0.0%</td>\n      <td>0.0</td>\n      <td>0.0%</td>\n      <td>0.0</td>\n      <td>0.0%</td>\n      <td>0.0</td>\n      <td>0.0%</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>yrt2000</td>\n      <td>3</td>\n      <td>T3-INT</td>\n      <td>TRE</td>\n      <td>2021-05-15</td>\n      <td>2021-05-18</td>\n      <td>08:00:00</td>\n      <td>16:00:00</td>\n      <td>4 days</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0.0%</td>\n      <td>0.0</td>\n      <td>0.0%</td>\n      <td>0.0</td>\n      <td>0.0%</td>\n      <td>0.0</td>\n      <td>0.0%</td>\n      <td>0.0</td>\n      <td>0.0%</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>yrt2001</td>\n      <td>4</td>\n      <td>T12-A</td>\n      <td>TRE</td>\n      <td>NaT</td>\n      <td>NaT</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaT</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>nan%</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 32 columns</p>\n</div>\n\n\n\nLook at resulting statistical information for the first row in the resulting dataset.\n\n```python\ndf.iloc[0]\n```\n\n\n\n\n    mCC_ID                                           yrt1999\n    Participant_Study_ID                                   2\n    Study Phase                                        S-REM\n    Intervention group (TRE or HABIT)                    TRE\n    Start_Day                            2021-05-12 00:00:00\n    End_day                              2021-05-14 00:00:00\n    Eating_Window_Start                             00:00:00\n    Eating_Window_End                               23:59:00\n    phase_duration                           3 days 00:00:00\n    caloric_entries_num                                    7\n    medication_num                                         0\n    water_num                                              0\n    first_cal_avg                                   5.916667\n    first_cal_std                                   2.240722\n    last_cal_avg                                   19.666667\n    last_cal_std                                   12.933323\n    mean_daily_eating_window                           13.75\n    std_daily_eating_window                        11.986972\n    earliest_entry                                       4.5\n    2.5%                                              4.5375\n    97.5%                                            27.5625\n    duration mid 95%                                  23.025\n    logging_day_counts                                     3\n    %_logging_day_counts                              100.0%\n    good_logging_days                                    2.0\n    %_good_logging_days                               66.67%\n    good_window_days                                     3.0\n    %_good_window_days                                100.0%\n    outside_window_days                                  0.0\n    %_outside_window_days                               0.0%\n    adherent_days                                        2.0\n    %_adherent_days                                   66.67%\n    Name: 0, dtype: object\n\n\n\n## Example for a quick data analysis on non-phased studies.\n\ntake a look at the original dataset\n\n```python\ndf = treets.file_loader('data/test_food_details.csv')\ndf.head(2)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>ID</th>\n      <th>unique_code</th>\n      <th>research_info_id</th>\n      <th>desc_text</th>\n      <th>food_type</th>\n      <th>original_logtime</th>\n      <th>foodimage_file_name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1340147</td>\n      <td>7572733</td>\n      <td>alqt14018795225</td>\n      <td>150</td>\n      <td>Water</td>\n      <td>w</td>\n      <td>2017-12-08 17:30:00+00:00</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1340148</td>\n      <td>411111</td>\n      <td>alqt14018795225</td>\n      <td>150</td>\n      <td>Coffee White</td>\n      <td>b</td>\n      <td>2017-12-09 00:01:00+00:00</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\npreprocess the data to create features we might need in the furthur analysis such as float time, week count since the first week, etc.\n\n```python\ndf = treets.load_food_data(df,'unique_code', 'original_logtime',4)\ndf.head(2)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>ID</th>\n      <th>unique_code</th>\n      <th>research_info_id</th>\n      <th>desc_text</th>\n      <th>food_type</th>\n      <th>original_logtime</th>\n      <th>date</th>\n      <th>float_time</th>\n      <th>time</th>\n      <th>week_from_start</th>\n      <th>year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1340147</td>\n      <td>7572733</td>\n      <td>alqt14018795225</td>\n      <td>150</td>\n      <td>Water</td>\n      <td>w</td>\n      <td>2017-12-08 17:30:00+00:00</td>\n      <td>2017-12-08</td>\n      <td>17.500000</td>\n      <td>17:30:00</td>\n      <td>1</td>\n      <td>2017</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1340148</td>\n      <td>411111</td>\n      <td>alqt14018795225</td>\n      <td>150</td>\n      <td>Coffee White</td>\n      <td>b</td>\n      <td>2017-12-09 00:01:00+00:00</td>\n      <td>2017-12-08</td>\n      <td>24.016667</td>\n      <td>00:01:00</td>\n      <td>1</td>\n      <td>2017</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\nCall summarize_data() function to make the table that contains analytic information that we want.Â¶\n\n```python\ndf = treets.summarize_data(df, 'unique_code', 'float_time', 'date')\ndf.head(2)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique_code</th>\n      <th>num_days</th>\n      <th>num_total_items</th>\n      <th>num_f_n_b</th>\n      <th>num_medications</th>\n      <th>num_water</th>\n      <th>first_cal_avg</th>\n      <th>first_cal_std</th>\n      <th>last_cal_avg</th>\n      <th>last_cal_std</th>\n      <th>eating_win_avg</th>\n      <th>eating_win_std</th>\n      <th>good_logging_count</th>\n      <th>first_cal variation (90%-10%)</th>\n      <th>last_cal variation (90%-10%)</th>\n      <th>2.5%</th>\n      <th>95%</th>\n      <th>duration mid 95%</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>alqt1148284857</td>\n      <td>13</td>\n      <td>149</td>\n      <td>96</td>\n      <td>19</td>\n      <td>34</td>\n      <td>7.821795</td>\n      <td>6.710717</td>\n      <td>23.485897</td>\n      <td>4.869082</td>\n      <td>15.664103</td>\n      <td>8.231201</td>\n      <td>146</td>\n      <td>2.966667</td>\n      <td>9.666667</td>\n      <td>4.535000</td>\n      <td>26.813333</td>\n      <td>22.636667</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>alqt14018795225</td>\n      <td>64</td>\n      <td>488</td>\n      <td>484</td>\n      <td>3</td>\n      <td>1</td>\n      <td>7.525781</td>\n      <td>5.434563</td>\n      <td>25.858594</td>\n      <td>3.374839</td>\n      <td>18.332813</td>\n      <td>6.603913</td>\n      <td>484</td>\n      <td>13.450000</td>\n      <td>3.100000</td>\n      <td>4.183333</td>\n      <td>27.438333</td>\n      <td>23.416667</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\nLook at resulting statistical information for the first row in the resulting dataset.\n\n```python\ndf.iloc[0]\n```\n\n\n\n\n    unique_code                      alqt1148284857\n    num_days                                     13\n    num_total_items                             149\n    num_f_n_b                                    96\n    num_medications                              19\n    num_water                                    34\n    first_cal_avg                          7.821795\n    first_cal_std                          6.710717\n    last_cal_avg                          23.485897\n    last_cal_std                           4.869082\n    eating_win_avg                        15.664103\n    eating_win_std                         8.231201\n    good_logging_count                          146\n    first_cal variation (90%-10%)          2.966667\n    last_cal variation (90%-10%)           9.666667\n    2.5%                                      4.535\n    95%                                   26.813333\n    duration mid 95%                      22.636667\n    Name: 0, dtype: object\n\n\n\n## Clean text in food loggings\n\n```python\n# import the dataset\ndf = treets.file_loader('data/col_test_data/yrt*')\ndf.head(3)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>original_logtime</th>\n      <th>desc_text</th>\n      <th>food_type</th>\n      <th>PID</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>2021-05-12 02:30:00 +0000</td>\n      <td>Milk</td>\n      <td>b</td>\n      <td>yrt1999</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2021-05-12 02:45:00 +0000</td>\n      <td>Some Medication</td>\n      <td>m</td>\n      <td>yrt1999</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>2021-05-12 04:45:00 +0000</td>\n      <td>bacon egg</td>\n      <td>f</td>\n      <td>yrt1999</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n```python\ntreets.clean_loggings(df, 'desc_text', 'PID').head(3)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PID</th>\n      <th>desc_text</th>\n      <th>cleaned</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>yrt1999</td>\n      <td>Milk</td>\n      <td>[milk]</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>yrt1999</td>\n      <td>Some Medication</td>\n      <td>[medication]</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>yrt1999</td>\n      <td>bacon egg</td>\n      <td>[bacon, egg]</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\nWe can see that words are lower cased, modifiers are removed(2nd row) and items are split into individual items(third row).\n\n## Visualizations\n\n```python\n# import the dataset\ndf = treets.file_loader('data/test_food_details.csv')\ndf.head(2)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>ID</th>\n      <th>unique_code</th>\n      <th>research_info_id</th>\n      <th>desc_text</th>\n      <th>food_type</th>\n      <th>original_logtime</th>\n      <th>foodimage_file_name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1340147</td>\n      <td>7572733</td>\n      <td>alqt14018795225</td>\n      <td>150</td>\n      <td>Water</td>\n      <td>w</td>\n      <td>2017-12-08 17:30:00+00:00</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1340148</td>\n      <td>411111</td>\n      <td>alqt14018795225</td>\n      <td>150</td>\n      <td>Coffee White</td>\n      <td>b</td>\n      <td>2017-12-09 00:01:00+00:00</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\nmake a scatter plot for people's breakfast time\n\n```python\n# create required features for function first_cal_mean_with_error_bar()\ndf['original_logtime'] = pd.to_datetime(df['original_logtime'])\ndf['local_time'] = treets.find_float_time(df, 'original_logtime')\ndf['date'] = treets.find_date(df, 'original_logtime')\n\n# call the function\ntreets.first_cal_mean_with_error_bar(df,'unique_code', 'date', 'local_time')\n```\n\n\n![png](https://raw.githubusercontent.com/FleischerResearchLab/treets/master/docs/images/output_28_0.png)\n\n\nUse swarmplot to visualize each person's eating time distribution.\n\n```python\ntreets.swarmplot(df, 50, 'unique_code', 'date', 'local_time')\n```\n\n\n![png](https://raw.githubusercontent.com/FleischerResearchLab/treets/master/docs/images/output_30_0.png)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FleischerResearchLab/treets/tree/master/",
    "keywords": "circadian ryhthm",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "treets",
    "package_url": "https://pypi.org/project/treets/",
    "platform": null,
    "project_url": "https://pypi.org/project/treets/",
    "project_urls": {
      "Homepage": "https://github.com/FleischerResearchLab/treets/tree/master/"
    },
    "release_url": "https://pypi.org/project/treets/1.0.4/",
    "requires_dist": [
      "pip",
      "packaging",
      "pandas",
      "numpy",
      "scipy",
      "seaborn",
      "matplotlib",
      "datetime",
      "nltk",
      "xlrd"
    ],
    "requires_python": ">=3.6",
    "summary": "This library provides functions to analyzes food logging data.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17295297,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d20473a34ccf75b7b766284bb9f076cbc7cd7f9d52c8f84b464b4a6b904e73d0",
          "md5": "5b4be072b8772d3d87345978dbfdd232",
          "sha256": "c733e5731f56bea1b57ca77af1fc82b8a65967d05cdec4a21101d8465d27e15f"
        },
        "downloads": -1,
        "filename": "treets-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b4be072b8772d3d87345978dbfdd232",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 147789,
        "upload_time": "2022-07-28T09:17:22",
        "upload_time_iso_8601": "2022-07-28T09:17:22.785397Z",
        "url": "https://files.pythonhosted.org/packages/d2/04/73a34ccf75b7b766284bb9f076cbc7cd7f9d52c8f84b464b4a6b904e73d0/treets-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de5ea04de93857115872645f9494306224b7f31aacd0756a22c3bf3dea350620",
          "md5": "fefa7b53bc876227c95851385d48a59c",
          "sha256": "e92d8a9dc5ee7a0a8384f2fc950ce470375e8c1fc941498f6d817fb410a67135"
        },
        "downloads": -1,
        "filename": "treets-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fefa7b53bc876227c95851385d48a59c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34460,
        "upload_time": "2022-07-28T09:17:25",
        "upload_time_iso_8601": "2022-07-28T09:17:25.055630Z",
        "url": "https://files.pythonhosted.org/packages/de/5e/a04de93857115872645f9494306224b7f31aacd0756a22c3bf3dea350620/treets-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d9c74634338e33c003736395e9dacaa08705a544acd8abd3eb2583f13c1f175",
          "md5": "66571aaa751044a41a30c21cfe8569ae",
          "sha256": "8743a3010a54dc7e01aa7bf35d56d791a8db48c3287c6d762d953a09f37520cd"
        },
        "downloads": -1,
        "filename": "treets-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66571aaa751044a41a30c21cfe8569ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 148349,
        "upload_time": "2022-08-10T09:14:12",
        "upload_time_iso_8601": "2022-08-10T09:14:12.009604Z",
        "url": "https://files.pythonhosted.org/packages/3d/9c/74634338e33c003736395e9dacaa08705a544acd8abd3eb2583f13c1f175/treets-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f64db7f7b77e2b77555f92547523e767b480519b6d4425587fea44e4a0a3012d",
          "md5": "91ca3400205fa51795a69f98279ea87c",
          "sha256": "b547f8c25a72e7ca49922ad3ce2641f9e699c00f4ef69e76fdb697d3f10863b9"
        },
        "downloads": -1,
        "filename": "treets-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "91ca3400205fa51795a69f98279ea87c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35014,
        "upload_time": "2022-08-10T09:14:13",
        "upload_time_iso_8601": "2022-08-10T09:14:13.804278Z",
        "url": "https://files.pythonhosted.org/packages/f6/4d/b7f7b77e2b77555f92547523e767b480519b6d4425587fea44e4a0a3012d/treets-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec609185afa870f98eec035d7c48059b34caae3814d92c23a32d770f23417015",
          "md5": "a0b7e75d4e8e39c11c54387cedfdbf6e",
          "sha256": "f8868ebccf17c68bf34ec1c39d60cce474862848bef08bb744969522c401ee47"
        },
        "downloads": -1,
        "filename": "treets-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0b7e75d4e8e39c11c54387cedfdbf6e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 148344,
        "upload_time": "2022-08-16T05:18:53",
        "upload_time_iso_8601": "2022-08-16T05:18:53.744063Z",
        "url": "https://files.pythonhosted.org/packages/ec/60/9185afa870f98eec035d7c48059b34caae3814d92c23a32d770f23417015/treets-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c0f1f0b3166c4a0e39ed7e630f4b916569070d8fc867e5c142df195922991f1",
          "md5": "1a7d7c3b423c4ee5f3cfe1853b088205",
          "sha256": "def73f5e8cf65aee13877d4ccc62eeadbb125c32b09aa5605be73df1d5490bf0"
        },
        "downloads": -1,
        "filename": "treets-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1a7d7c3b423c4ee5f3cfe1853b088205",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31690,
        "upload_time": "2022-08-16T05:18:56",
        "upload_time_iso_8601": "2022-08-16T05:18:56.156986Z",
        "url": "https://files.pythonhosted.org/packages/5c/0f/1f0b3166c4a0e39ed7e630f4b916569070d8fc867e5c142df195922991f1/treets-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "258478d8bbb7c2cd612dff9533a2fbf84ce9d05e49d9c6ac051e18c3d5c84122",
          "md5": "a1cdd3f640fddc6bdd5b84e32444b6cf",
          "sha256": "05e097e4da086627f7622b98d7b961f49684fd492f91757db7452867794d14be"
        },
        "downloads": -1,
        "filename": "treets-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1cdd3f640fddc6bdd5b84e32444b6cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 148310,
        "upload_time": "2022-08-24T23:08:52",
        "upload_time_iso_8601": "2022-08-24T23:08:52.751161Z",
        "url": "https://files.pythonhosted.org/packages/25/84/78d8bbb7c2cd612dff9533a2fbf84ce9d05e49d9c6ac051e18c3d5c84122/treets-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1014c41423993b3b736e003019e33c2ac41454f02f18a8e165c403baeb6bfa91",
          "md5": "04f3cd941a45a883d9e3e381315c5741",
          "sha256": "6020da95999beb09c35533fbb87dd1acc18181bfe8c433250bc6b1b92c52a020"
        },
        "downloads": -1,
        "filename": "treets-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "04f3cd941a45a883d9e3e381315c5741",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31940,
        "upload_time": "2022-08-24T23:08:54",
        "upload_time_iso_8601": "2022-08-24T23:08:54.835634Z",
        "url": "https://files.pythonhosted.org/packages/10/14/c41423993b3b736e003019e33c2ac41454f02f18a8e165c403baeb6bfa91/treets-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a86ac29de1ee9b05eaf9f001f0c7d023d8df2f522e0375f550ea52776399f0e",
          "md5": "697dddc5c959f3d4f69dfa2807aa762f",
          "sha256": "aff6fc2a71fb840cbcd40c9dff20f8cb7f6cac6744c8955b8d5748d330572298"
        },
        "downloads": -1,
        "filename": "treets-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "697dddc5c959f3d4f69dfa2807aa762f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 148617,
        "upload_time": "2023-03-14T22:23:11",
        "upload_time_iso_8601": "2023-03-14T22:23:11.296092Z",
        "url": "https://files.pythonhosted.org/packages/8a/86/ac29de1ee9b05eaf9f001f0c7d023d8df2f522e0375f550ea52776399f0e/treets-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2ce53d5399115f7c890f6734cc6a40a6608627c162f7685fee12734b3ac2dcc",
          "md5": "5803b94ea78f773c6adf2a362b4dc47e",
          "sha256": "298ec599f98042ed213f9ff7b0331db2ba83907a70201416123007126544dee6"
        },
        "downloads": -1,
        "filename": "treets-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5803b94ea78f773c6adf2a362b4dc47e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32086,
        "upload_time": "2023-03-14T22:23:13",
        "upload_time_iso_8601": "2023-03-14T22:23:13.443472Z",
        "url": "https://files.pythonhosted.org/packages/a2/ce/53d5399115f7c890f6734cc6a40a6608627c162f7685fee12734b3ac2dcc/treets-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a11bf98cec133a154548f96f8b43d11940da5023ba08e968a366d0f8d8ca3e85",
          "md5": "61c0edc5992ca2f4ad1f987806f0809f",
          "sha256": "6598b3df5ed56ae9430b3f6339f6e0591b847ce1607aaa575b5b755853285df6"
        },
        "downloads": -1,
        "filename": "treets-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "61c0edc5992ca2f4ad1f987806f0809f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26095,
        "upload_time": "2023-03-14T22:46:44",
        "upload_time_iso_8601": "2023-03-14T22:46:44.210976Z",
        "url": "https://files.pythonhosted.org/packages/a1/1b/f98cec133a154548f96f8b43d11940da5023ba08e968a366d0f8d8ca3e85/treets-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3f9e32d6b0f18c5f96af95bf15376c43dc4aa782f192223812daf587fbf0f48",
          "md5": "afd883609d4baa155c7f01be34c1c324",
          "sha256": "56387a4749272b7bff56a8526b4a1cb99f6d9ae6a328fcfdde0c4cbd808e35ce"
        },
        "downloads": -1,
        "filename": "treets-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "afd883609d4baa155c7f01be34c1c324",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32088,
        "upload_time": "2023-03-14T22:46:46",
        "upload_time_iso_8601": "2023-03-14T22:46:46.467461Z",
        "url": "https://files.pythonhosted.org/packages/e3/f9/e32d6b0f18c5f96af95bf15376c43dc4aa782f192223812daf587fbf0f48/treets-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a11bf98cec133a154548f96f8b43d11940da5023ba08e968a366d0f8d8ca3e85",
        "md5": "61c0edc5992ca2f4ad1f987806f0809f",
        "sha256": "6598b3df5ed56ae9430b3f6339f6e0591b847ce1607aaa575b5b755853285df6"
      },
      "downloads": -1,
      "filename": "treets-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "61c0edc5992ca2f4ad1f987806f0809f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 26095,
      "upload_time": "2023-03-14T22:46:44",
      "upload_time_iso_8601": "2023-03-14T22:46:44.210976Z",
      "url": "https://files.pythonhosted.org/packages/a1/1b/f98cec133a154548f96f8b43d11940da5023ba08e968a366d0f8d8ca3e85/treets-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3f9e32d6b0f18c5f96af95bf15376c43dc4aa782f192223812daf587fbf0f48",
        "md5": "afd883609d4baa155c7f01be34c1c324",
        "sha256": "56387a4749272b7bff56a8526b4a1cb99f6d9ae6a328fcfdde0c4cbd808e35ce"
      },
      "downloads": -1,
      "filename": "treets-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "afd883609d4baa155c7f01be34c1c324",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 32088,
      "upload_time": "2023-03-14T22:46:46",
      "upload_time_iso_8601": "2023-03-14T22:46:46.467461Z",
      "url": "https://files.pythonhosted.org/packages/e3/f9/e32d6b0f18c5f96af95bf15376c43dc4aa782f192223812daf587fbf0f48/treets-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}