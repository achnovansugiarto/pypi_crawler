{
  "info": {
    "author": "",
    "author_email": "Sunny Dial <dialsunny91@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# EnsemblesOpt \n<br/>\n\n\n\n<p align=\"middle\">\n  \n  <img src=\"https://user-images.githubusercontent.com/62545181/193424526-7e097194-c097-4cc5-9231-97cdf46d6147.gif\" width=\"400\" />\n  <img src=\"https://user-images.githubusercontent.com/62545181/193418034-4cdb4aab-0d6d-410b-a648-841999caf560.gif\" width=\"400\" /> \n</p>\n\nBuilding modeling ensembles can be a very slow process in case you want to find out which combination of base learner is the best performing, plus the training time increases as the ensemble size increases. The problem can be thought of as: given N base models find the best set of base learner of dimension K with K<N, and the search can be optimized according to a Bayesian Optimization approach.\n\nThis repository contains the project for a package for speeding up the process of finding best base learners for building ensemble models trough Bayesian Optimization using Gaussian Processes as surrogate function and Expected Improvement (EI), Probability of Improvement (PI) or Upper Confidence Bound (UCB) as acquisition functions, along optimization routines developed using Optuna library.<br/>\nThe black-box function is defined as the n cross-validation score of the chosen evaluation metric for the ensemble considered during the iteration. Each base model is mapped to an integer value and their combination is passed to the objective function for evaluation.\n\nInstall by running:\n\n```\n!pip install EnsemblesOpt==0.0.8\n```\n# Code Snippets\nFirst import the base models from where to search for the best ensemble of a given size\n```\n\nfrom sklearn.tree import ExtraTreeClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.neural_network import MLPClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.linear_model import SGDClassifier\n```\n\n## Bayesian optimization search:\n```\n#initialize the Bayesian_Voting_Ensemble\nfrom EnsemblesOpt import Bayesian_Voting_Ensemble\n\n\nBS=Bayesian_Voting_Ensemble(ensemble_size=2,\n                            models_list=[ExtraTreeClassifier(),\n                                             DecisionTreeClassifier(),\n                                             MLPClassifier(),\n                                             SGDClassifier(),\n                                             KNeighborsClassifier()],\n                           xi=0.05,\n                           random_init_points=7,\n                           maximize_obj=True,\n                           scoring='roc_auc',\n                           task='classification',\n                           acquisition_func='EI')\n                           \n#fit the Bayesian_Voting_Ensemble                         \nBest_model = BS.fit(X,y,\n       Nfold=5,\n       n_iters=9,\n       stratify=True)\n``` \n```\nOutput:\nCollecting initial random points...\nSearching best ensemble...\n-trial  0 |Score value: 0.8626962395405989\n-trial  1 |Score value: 0.8755565498352099\n-trial  2 |Score value: 0.8742921444887171\n-trial  3 |Score value: 0.8868338004352088\n-trial  4 |Score value: 0.8562297244914867\n-trial  5 |Score value: 0.8629782101656331\n-trial  6 |Score value: 0.865559835850203\n-trial  7 |Score value: 0.887221833391049\n-trial  8 |Score value: 0.8534670721947504\n-trial  9 |Score value: 0.8283346726135243\nBest Ensemble:\n [LGBMClassifier(bagging_fraction=0.9861531786655775, bagging_freq=3,\n               feature_fraction=0.14219334035549125,\n               lambda_l1=7.009080384469092e-07, lambda_l2=5.029465681170278e-06,\n               learning_rate=0.08695762873585877, max_bin=1255,\n               min_child_samples=93, n_estimators =316, num_leaves=38,\n               silent='warn'), GradientBoostingClassifier()] \nbest score 0.887221833391049\n```\n\nCommon parameters for the Bayesian_Voting_Ensemble class:<br/>\n\n| Parameter  | Usage|\n| ------------- | ------------- |\n| **\"ensemble_size\"**  | Number of base estimators to build the ensemble, the bigger the ensemble the more time consuming and complex the final model will be.<br/>  |\n| **\"ensemble_size\"**  | Number of base estimators to build the ensemble, the bigger the ensemble the more time consuming and complex the final model will be.<br/>  |\n| **\"models_list\"**  | List of base models. If value provided is \"None\" preloaded list of models will be used.<br/> |\n| **\"xi\"**  | Exploration parameter, higher values lead to more explorative behaviour and viceversa for lower value (default xi=0.01) .<br/>  |\n| **\"random_init_points\"**  | Number of initial points to take from the objective function.<br/>  |\n| **\"maximize_obj\"**  | Whether to maximize or minimize the objective function [True or False].<br/>  |\n| **\"scoring\"**  | Metric to optimize.<br/>  |\n| **\"task\"**  | Equals \"classification\" or \"regression\".<br/>  |\n| **\"type_p\"**  | Only in case of classification problem select 'soft' or 'hard'.<br/>  |\n| **\"acquisition_func\"**  | Acquisition function choose between \"PI\" (probability of improvement), \"EI\" (expected improvement) or \"UCB\" (upper confidence bound)<br/>  \n\n\nCommon parameters for the fit method:<br/>\n| Parameter  | Usage|\n| ------------- | ------------- |\n| **\"X\"** | Training dataset without target variable.<br/>  |\n| **\"y\"** | Target variable.<br/>  |\n| **\"n_iters\"** | Number of trials to execute optimization.<br/>  |\n| **\"N_folds\"** | Number of folds for cross validation.<br/> |\n| **\"stratify\"** | Stratify cv splits based on target distribuition [True or False]<br/>  |\n\nThe **'scoring'** parameter takes the same values from sklearn API (link of available list: https://scikit-learn.org/stable/modules/model_evaluation.html)\n\n## Optuna best stacking ensemble search:\n``` \nfrom EnsemblesOpt import Optuna_StackEnsemble_Search\n\nOpt=Optuna_StackEnsemble_Search(scoring_metric=\"roc_auc\",\n                                direction=\"maximize\",\n                                problem_type='classification',\n                                size_stack=2,\n                                models_list=[ExtraTreeClassifier(),\n                                             DecisionTreeClassifier(),\n                                             MLPClassifier(),\n                                             SGDClassifier(),\n                                             KNeighborsClassifier()],\n                                             meta_learner=LogisticRegression())\n\nBest_model, study = Opt.fit(X,y,n_trials=50,N_folds=3,stratify=True)\n```\nCommon parameters for the Optuna_StackEnsemble_Search class:<br/>\n\n| Parameter  | Usage|\n| ------------- | ------------- |\n| **\"size_stack\"**  | Number of base estimators to build the ensemble, the bigger the ensemble the more time consuming and complex the final model will be.<br/>  |\n| **\"models_list\"**  | List of base models.<br/> |\n| **\"scoring_metric\"**  | Metric to optimize.<br/>  |\n| **\"problem_type\"**  | Equals \"classification\" or \"regression\".<br/>  |\n| **\"direction\"**  | Equals \"maximize\" or \"minimize\".<br/>  |\n| **\"meta_learner\"**  | Meta learner for the stack ensemble, if not provided Optuna will search for one from the base models.<br/>  |\n\n\nCommon parameters for the fit method:<br/>\n| Parameter  | Usage|\n| ------------- | ------------- |\n| **\"X\"** | Training dataset without target variable.<br/>  |\n| **\"y\"** | target variable.<br/>  |\n| **\"n_iters\"** | Number of trials to execute optimization.<br/>  |\n| **\"N_folds\"** | Number of folds for cross validation.<br/> |\n| **\"stratify\"** | Stratify cv splits based on target distribuition [True or False]<br/>  |\n\n## Optuna best voting ensemble search:\n\n``` \nfrom EnsemblesOpt import Optuna_VotingEnsemble_Search\n\nOpt=Optuna_VotingEnsemble_Search(scoring_metric=\"roc_auc\",direction=\"maximize\",\n                                problem_type='classification',\n                                ensemble_size=2,\n                                models_list=[ExtraTreeClassifier(),\n                                             DecisionTreeClassifier(),\n                                             MLPClassifier(),\n                                             SGDClassifier(),\n                                             KNeighborsClassifier()],\n                                voting_type='soft'\n                               )\nBest_model, study = Opt.fit(X,y,n_trials=10,\n            N_folds=3,\n            stratify=True)\n```\nCommon parameters for the Optuna_StackEnsemble_Search class:<br/>\nscoring_metric,direction,problem_type,size_stack=3,models_list=[]\n| Parameter  | Usage|\n| ------------- | ------------- |\n| **\"ensemble_size\"**  | Number of base estimators to build the ensemble, the bigger the ensemble the more time consuming and complex the final model will be.<br/>  |\n| **\"models_list\"**  | List of base models.<br/> |\n| **\"scoring_metric\"**  | Metric to optimize.<br/>  |\n| **\"problem_type\"**  | Equals \"classification\" or \"regression\".<br/>  |\n| **\"direction\"**  | Equals \"maximize\" or \"minimize\".<br/>  |\n| **\"voting_type\"**  | Voting type 'soft' or 'hard'.<br/>  |\n\n\nCommon parameters for the fit method:<br/>\n| Parameter  | Usage|\n| ------------- | ------------- |\n| **\"X\"** | Training dataset without target variable.<br/>  |\n| **\"y\"** | target variable.<br/>  |\n| **\"n_iters\"** | Number of trials to execute optimization.<br/>  |\n| **\"N_folds\"** | Number of folds for cross validation.<br/> |\n| **\"stratify\"** | Stratify cv splits based on target distribuition [True or False]<br/>  |\n\n## Optuna search best weights for voting ensemble:\n\n``` \nfrom EnsemblesOpt import Optuna_Voting_weights_tuner\n\nOpt=Optuna_Voting_weights_tuner(scoring_metric=\"roc_auc\",\n                                direction=\"maximize\",\n                                problem_type='classification',\n                                models_list=[ExtraTreeClassifier(),\n                                             DecisionTreeClassifier(),\n                                             MLPClassifier(),\n                                             SGDClassifier(),\n                                             KNeighborsClassifier()],\n                                voting_type='soft',\n                                weights_list=[1,2,3]\n                               )\nBest_model, study = Opt.fit(X,y,n_trials=10,\n        N_folds=3,\n        stratify=True)\n```\nCommon parameters for the Optuna_StackEnsemble_Search class:<br/>\n\n| Parameter  | Usage|\n| ------------- | ------------- |\n| **\"models_list\"**  | List of base models.<br/> |\n| **\"scoring_metric\"**  | Metric to optimize.<br/>  |\n| **\"problem_type\"**  | Equals \"classification\" or \"regression\".<br/>  |\n| **\"direction\"**  | Equals \"maximize\" or \"minimize\".<br/>  |\n| **\"voting_type\"**  | Voting type 'soft' or 'hard'.<br/>  |\n| **\"weights_list\"**  | Weights to test out type list of integers or floats ex. [0,1,2,3,...] .<br/>  |\n\n\nCommon parameters for the fit method:<br/>\n| Parameter  | Usage|\n| ------------- | ------------- |\n| **\"X\"** | Training dataset without target variable.<br/>  |\n| **\"y\"** | target variable.<br/>  |\n| **\"n_iters\"** | Number of trials to execute optimization.<br/>  |\n| **\"N_folds\"** | Number of folds for cross validation.<br/> |\n| **\"stratify\"** | Stratify cv splits based on target distribuition [True or False]<br/>  |\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "EnsemblesOpt",
    "package_url": "https://pypi.org/project/EnsemblesOpt/",
    "platform": null,
    "project_url": "https://pypi.org/project/EnsemblesOpt/",
    "project_urls": {
      "Bug Tracker": "https://github.com/DSun91/EnsemblesOpt/issues",
      "Homepage": "https://github.com/DSun91/EnsemblesOpt"
    },
    "release_url": "https://pypi.org/project/EnsemblesOpt/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Ensemble models creation trough Bayesian Optimization",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15388972,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c4a2ce6e2659d93209b286959cf076a01f56db50520b5522c9817854a55f646",
          "md5": "257d7a7d7a126406c07622a51b1c57e0",
          "sha256": "15c153c66d689ecded61098df2616b756ad3091fc1ced66759dac48d8bf4452a"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "257d7a7d7a126406c07622a51b1c57e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 4392,
        "upload_time": "2022-10-01T12:00:38",
        "upload_time_iso_8601": "2022-10-01T12:00:38.779664Z",
        "url": "https://files.pythonhosted.org/packages/4c/4a/2ce6e2659d93209b286959cf076a01f56db50520b5522c9817854a55f646/EnsemblesOpt-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e200d6a3c943c31ebb83202f13c20de94b10437c195d1dc65eb8063e6ca2188",
          "md5": "a991e61d7f1c858cff1c7ec79de9c4f8",
          "sha256": "9d65ec98977b6dd6ae0232c004521cf3908223182d97c96ccd8e9f1e8da27b13"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a991e61d7f1c858cff1c7ec79de9c4f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3960,
        "upload_time": "2022-10-01T12:00:40",
        "upload_time_iso_8601": "2022-10-01T12:00:40.721996Z",
        "url": "https://files.pythonhosted.org/packages/7e/20/0d6a3c943c31ebb83202f13c20de94b10437c195d1dc65eb8063e6ca2188/EnsemblesOpt-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b58f4f0cbc7211cc1d901ce213fd793ea27940512f357e44cf26188e552a439b",
          "md5": "d22c24963cbd87e2ba807ce96642bd1c",
          "sha256": "ebe41da962601a517e87b214285d7ec5fb69017afb53b554c8e493a533e59ae4"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d22c24963cbd87e2ba807ce96642bd1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8385,
        "upload_time": "2022-10-01T19:14:29",
        "upload_time_iso_8601": "2022-10-01T19:14:29.906001Z",
        "url": "https://files.pythonhosted.org/packages/b5/8f/4f0cbc7211cc1d901ce213fd793ea27940512f357e44cf26188e552a439b/EnsemblesOpt-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6832a9a9fbdb5363237465052137d9dca9874eb50a59e12418e46d9fc3ee1f98",
          "md5": "2b557bf1b90f56fdd7a66ed01ccd8b65",
          "sha256": "05d7ef3b3626944cc6a99c13754029c4f99849252622804dd4e81878d106c223"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2b557bf1b90f56fdd7a66ed01ccd8b65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9235,
        "upload_time": "2022-10-01T19:14:33",
        "upload_time_iso_8601": "2022-10-01T19:14:33.425151Z",
        "url": "https://files.pythonhosted.org/packages/68/32/a9a9fbdb5363237465052137d9dca9874eb50a59e12418e46d9fc3ee1f98/EnsemblesOpt-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f1cc98f55963c40fcbfd214453348fb5e9d9a49afd35677c9efa74396f41a10",
          "md5": "c468e14494acf47fec329d84e9b369d7",
          "sha256": "ca1f2d2906f4684940498d30ff9f69054ef86f35656aa2a68c9ac008f43a0942"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c468e14494acf47fec329d84e9b369d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9508,
        "upload_time": "2022-10-01T20:58:50",
        "upload_time_iso_8601": "2022-10-01T20:58:50.556070Z",
        "url": "https://files.pythonhosted.org/packages/4f/1c/c98f55963c40fcbfd214453348fb5e9d9a49afd35677c9efa74396f41a10/EnsemblesOpt-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca45dedcd9a53f2f59bdf73ee7b21f1b3d6d5f24cd5fdc7689e46362c50ca523",
          "md5": "cec26c1069221dc1fc7c1f1118899ee4",
          "sha256": "dc6bb43143ae98cd26b6dc1f7c9772a8079639f7af698f11087567947560dfc7"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cec26c1069221dc1fc7c1f1118899ee4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10324,
        "upload_time": "2022-10-01T20:58:55",
        "upload_time_iso_8601": "2022-10-01T20:58:55.038326Z",
        "url": "https://files.pythonhosted.org/packages/ca/45/dedcd9a53f2f59bdf73ee7b21f1b3d6d5f24cd5fdc7689e46362c50ca523/EnsemblesOpt-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f61545c94d45fac261d0615fcecef28ee9a632f9cac8487c016aca0c08b21cc",
          "md5": "b39114001111b151c0407288c89863b7",
          "sha256": "8f56e17b4975b4c181a88780dad76646a693195559d58fcdae3634a3a90e9e1e"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b39114001111b151c0407288c89863b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9801,
        "upload_time": "2022-10-03T09:01:26",
        "upload_time_iso_8601": "2022-10-03T09:01:26.554914Z",
        "url": "https://files.pythonhosted.org/packages/5f/61/545c94d45fac261d0615fcecef28ee9a632f9cac8487c016aca0c08b21cc/EnsemblesOpt-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c77fd9480c8414e76b11717b9afcd5bb0bd0822b851a1e43ee094dd5975edaf",
          "md5": "a6bbd675aae4b4bc0f1ead8cdaceb288",
          "sha256": "30c817773a78e10bb52e4c3c60228ea618a9d12b599a96b9cc37c112e824380e"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a6bbd675aae4b4bc0f1ead8cdaceb288",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10735,
        "upload_time": "2022-10-03T09:01:33",
        "upload_time_iso_8601": "2022-10-03T09:01:33.439450Z",
        "url": "https://files.pythonhosted.org/packages/9c/77/fd9480c8414e76b11717b9afcd5bb0bd0822b851a1e43ee094dd5975edaf/EnsemblesOpt-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bc821646601b26f9d5ecacd0c333bb641e4e0f3f58cb0d65d3457aa15605c09",
          "md5": "a7e812ff260280308030755f6d9670a4",
          "sha256": "12b5f7203dcb6da58f88efac30043d3e79689b968b0e6415c1b42955d2defdfc"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7e812ff260280308030755f6d9670a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9801,
        "upload_time": "2022-10-04T09:20:01",
        "upload_time_iso_8601": "2022-10-04T09:20:01.112310Z",
        "url": "https://files.pythonhosted.org/packages/5b/c8/21646601b26f9d5ecacd0c333bb641e4e0f3f58cb0d65d3457aa15605c09/EnsemblesOpt-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55f5de776d001a5b7480068fe2fab358cd2be46527cce83221e40f068ee32f24",
          "md5": "f200d8b7d859f8ef354da0ad890958cb",
          "sha256": "fc3bd4823807f0c39ddec256f54e2be7523c12c05895b29df33c11ee15aafeca"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f200d8b7d859f8ef354da0ad890958cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10746,
        "upload_time": "2022-10-04T09:20:09",
        "upload_time_iso_8601": "2022-10-04T09:20:09.582058Z",
        "url": "https://files.pythonhosted.org/packages/55/f5/de776d001a5b7480068fe2fab358cd2be46527cce83221e40f068ee32f24/EnsemblesOpt-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f0543a853407b80ae32b4f3667088023e108413968b1fcdc1e02c07e70f82d9",
          "md5": "04a4a21111d572dc4387a9c3f4bc4dcb",
          "sha256": "ccdd05317b674757b5ea509b1d591de66bc1f586cdedee9f19f0465f2697907b"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04a4a21111d572dc4387a9c3f4bc4dcb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9799,
        "upload_time": "2022-10-04T09:40:36",
        "upload_time_iso_8601": "2022-10-04T09:40:36.463558Z",
        "url": "https://files.pythonhosted.org/packages/8f/05/43a853407b80ae32b4f3667088023e108413968b1fcdc1e02c07e70f82d9/EnsemblesOpt-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "575b4da6828f20cd8f62737603a6e8c27f2b9a598e2f9ff7ef5ad9361389f3e9",
          "md5": "67eeef8a3b31b87b2d40d563de5ff047",
          "sha256": "3164afce03023ff3d7e0161812f7b4b62379bc394f352f61bc46d5d7baf4a9a6"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "67eeef8a3b31b87b2d40d563de5ff047",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10751,
        "upload_time": "2022-10-04T09:40:44",
        "upload_time_iso_8601": "2022-10-04T09:40:44.153751Z",
        "url": "https://files.pythonhosted.org/packages/57/5b/4da6828f20cd8f62737603a6e8c27f2b9a598e2f9ff7ef5ad9361389f3e9/EnsemblesOpt-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "098ae0d4011d7b0905b4b17338304c06b5ce82e775850dd625e271d6d1ae23c3",
          "md5": "a23fe4d675cf2720f0308b850f290902",
          "sha256": "d1c7839c749688cdccc7e2b4ff172ff43764aa8ed8446b56b4aa3d47aeac9a04"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a23fe4d675cf2720f0308b850f290902",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9806,
        "upload_time": "2022-10-04T10:00:43",
        "upload_time_iso_8601": "2022-10-04T10:00:43.185969Z",
        "url": "https://files.pythonhosted.org/packages/09/8a/e0d4011d7b0905b4b17338304c06b5ce82e775850dd625e271d6d1ae23c3/EnsemblesOpt-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abad91edb541e9643b150fa85887c3e4c71e04d0d042c4306a4af262595c9c93",
          "md5": "21154c2e0397ed49203820a902abb520",
          "sha256": "c95fa08944e86fa5b95d8a9435bcb06397b43a778c6e9627fabc3c031feab494"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "21154c2e0397ed49203820a902abb520",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10736,
        "upload_time": "2022-10-04T10:00:46",
        "upload_time_iso_8601": "2022-10-04T10:00:46.935670Z",
        "url": "https://files.pythonhosted.org/packages/ab/ad/91edb541e9643b150fa85887c3e4c71e04d0d042c4306a4af262595c9c93/EnsemblesOpt-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5196ef52f29434ee2cbfba31e7ca517a1d64b90ed2d4e190e6efb47f0ed0e403",
          "md5": "0f3e0c28e509e798e84681bfe9698671",
          "sha256": "804b47cfc9fd826604359ef94ac6ccc3faea039c04d28e43759f55b492d8e1ef"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f3e0c28e509e798e84681bfe9698671",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9876,
        "upload_time": "2022-10-10T19:42:52",
        "upload_time_iso_8601": "2022-10-10T19:42:52.042239Z",
        "url": "https://files.pythonhosted.org/packages/51/96/ef52f29434ee2cbfba31e7ca517a1d64b90ed2d4e190e6efb47f0ed0e403/EnsemblesOpt-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a730644eba6379b23ea8a145c7a579231588c54135ae49aaca9f80668dc0e9fa",
          "md5": "1ea9ce474f93143b35dfa75236168c3c",
          "sha256": "7f7bf795e23ba1bfa227fd681a0a1b04777ec6f86989e5180408ec957aca6c0b"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "1ea9ce474f93143b35dfa75236168c3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10809,
        "upload_time": "2022-10-10T19:42:53",
        "upload_time_iso_8601": "2022-10-10T19:42:53.730242Z",
        "url": "https://files.pythonhosted.org/packages/a7/30/644eba6379b23ea8a145c7a579231588c54135ae49aaca9f80668dc0e9fa/EnsemblesOpt-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9e5653ec6547a487218e2f1b624911b370b81aea97f91820966d93a661abdc8",
          "md5": "7ccbfe0ba97d2b760ef7299bb36bc1d0",
          "sha256": "03620c619b5b9cd6536bd9772f88477596b3982cf27c1b7560439f92f76cc840"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ccbfe0ba97d2b760ef7299bb36bc1d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9961,
        "upload_time": "2022-10-10T22:11:42",
        "upload_time_iso_8601": "2022-10-10T22:11:42.087192Z",
        "url": "https://files.pythonhosted.org/packages/f9/e5/653ec6547a487218e2f1b624911b370b81aea97f91820966d93a661abdc8/EnsemblesOpt-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "222a557a49ed7b7ef4efad91ed943f1eb493b7d0c42ff3fca872e48eb31191f8",
          "md5": "0ecefdfc7b2d87322bfead33b9e6cacb",
          "sha256": "c7e08dc235a4061c7d2bf4871964f17d9a42428bc264afc87118ce09f0021ec4"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "0ecefdfc7b2d87322bfead33b9e6cacb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10913,
        "upload_time": "2022-10-10T22:11:43",
        "upload_time_iso_8601": "2022-10-10T22:11:43.902889Z",
        "url": "https://files.pythonhosted.org/packages/22/2a/557a49ed7b7ef4efad91ed943f1eb493b7d0c42ff3fca872e48eb31191f8/EnsemblesOpt-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3b268e87a4d626260f41d417724eebc4a3891474ceee163919086e80cead500",
          "md5": "1aff703b9f5c864df9b931ee26c9f176",
          "sha256": "3208cf2ceab21a9769e1157574f6c2eed0185063c93b6f028b1b58021d6e6219"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1aff703b9f5c864df9b931ee26c9f176",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9956,
        "upload_time": "2022-10-10T22:23:45",
        "upload_time_iso_8601": "2022-10-10T22:23:45.607484Z",
        "url": "https://files.pythonhosted.org/packages/b3/b2/68e87a4d626260f41d417724eebc4a3891474ceee163919086e80cead500/EnsemblesOpt-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d06c27971d334465aea7741fdfc20607354b6ff44c53921eb876f1c97745609",
          "md5": "834923779980559f62d08e1790ce1075",
          "sha256": "e564b9ab16be7ec6cc17ddb7a381e90f65cc340a2b7e001f1277e61f0068dd26"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "834923779980559f62d08e1790ce1075",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10904,
        "upload_time": "2022-10-10T22:23:47",
        "upload_time_iso_8601": "2022-10-10T22:23:47.432569Z",
        "url": "https://files.pythonhosted.org/packages/3d/06/c27971d334465aea7741fdfc20607354b6ff44c53921eb876f1c97745609/EnsemblesOpt-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e4f74ab21e81a30de96d8511400588afba32a9e7299bab40b9f91affef4fa07",
          "md5": "7a2b24c20d3e68959d2b66b188246248",
          "sha256": "bbc454e201cd9fcdafd9184cfab6693f9b2b9d660829a3af885ebb001a5c604c"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a2b24c20d3e68959d2b66b188246248",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10066,
        "upload_time": "2022-10-11T08:51:23",
        "upload_time_iso_8601": "2022-10-11T08:51:23.553190Z",
        "url": "https://files.pythonhosted.org/packages/2e/4f/74ab21e81a30de96d8511400588afba32a9e7299bab40b9f91affef4fa07/EnsemblesOpt-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b443b1a680d895317070c4db93b4394c1d5565c7c451e40de21833fc7a0ad083",
          "md5": "b0b537f3ba69f79fda83e068e7fbc7a9",
          "sha256": "9e80bbf87a4d30ecb3b96124d4554b612ee76087711b814a528bb4312a1a7e3e"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b0b537f3ba69f79fda83e068e7fbc7a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11051,
        "upload_time": "2022-10-11T08:51:26",
        "upload_time_iso_8601": "2022-10-11T08:51:26.117654Z",
        "url": "https://files.pythonhosted.org/packages/b4/43/b1a680d895317070c4db93b4394c1d5565c7c451e40de21833fc7a0ad083/EnsemblesOpt-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "026be15118036f875f054577ffd1c2df3e4c81633b977eb50ac68c8d4b9e1752",
          "md5": "41a9be72e22b446671fa68d15d97da4b",
          "sha256": "585ca3af9f5dd622fe051683f71c804e108146c6a023e8fb40e1aed81606cb18"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41a9be72e22b446671fa68d15d97da4b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10227,
        "upload_time": "2022-10-12T16:41:59",
        "upload_time_iso_8601": "2022-10-12T16:41:59.922133Z",
        "url": "https://files.pythonhosted.org/packages/02/6b/e15118036f875f054577ffd1c2df3e4c81633b977eb50ac68c8d4b9e1752/EnsemblesOpt-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18fccd44cacde297925b8072a49d228350efbc2f54e0a4113e7466cf53f13981",
          "md5": "5e2499c32ee27787ed6bd22bc3298813",
          "sha256": "bba33678d39a086bff3a8e5d94c8ad99cf6a24e0c0fe442168078298c1652ee4"
        },
        "downloads": -1,
        "filename": "EnsemblesOpt-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5e2499c32ee27787ed6bd22bc3298813",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11387,
        "upload_time": "2022-10-12T16:42:02",
        "upload_time_iso_8601": "2022-10-12T16:42:02.582790Z",
        "url": "https://files.pythonhosted.org/packages/18/fc/cd44cacde297925b8072a49d228350efbc2f54e0a4113e7466cf53f13981/EnsemblesOpt-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "026be15118036f875f054577ffd1c2df3e4c81633b977eb50ac68c8d4b9e1752",
        "md5": "41a9be72e22b446671fa68d15d97da4b",
        "sha256": "585ca3af9f5dd622fe051683f71c804e108146c6a023e8fb40e1aed81606cb18"
      },
      "downloads": -1,
      "filename": "EnsemblesOpt-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "41a9be72e22b446671fa68d15d97da4b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 10227,
      "upload_time": "2022-10-12T16:41:59",
      "upload_time_iso_8601": "2022-10-12T16:41:59.922133Z",
      "url": "https://files.pythonhosted.org/packages/02/6b/e15118036f875f054577ffd1c2df3e4c81633b977eb50ac68c8d4b9e1752/EnsemblesOpt-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18fccd44cacde297925b8072a49d228350efbc2f54e0a4113e7466cf53f13981",
        "md5": "5e2499c32ee27787ed6bd22bc3298813",
        "sha256": "bba33678d39a086bff3a8e5d94c8ad99cf6a24e0c0fe442168078298c1652ee4"
      },
      "downloads": -1,
      "filename": "EnsemblesOpt-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5e2499c32ee27787ed6bd22bc3298813",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 11387,
      "upload_time": "2022-10-12T16:42:02",
      "upload_time_iso_8601": "2022-10-12T16:42:02.582790Z",
      "url": "https://files.pythonhosted.org/packages/18/fc/cd44cacde297925b8072a49d228350efbc2f54e0a4113e7466cf53f13981/EnsemblesOpt-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}