{
  "info": {
    "author": "YoungTrep, Ghoul",
    "author_email": "youngtrep.business@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<!--\n Copyright (C) 2021 YoungTrep\n \n This file is part of pycord18n.\n \n pycord18n is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n \n pycord18n is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n \n You should have received a copy of the GNU General Public License\n along with pycord18n.  If not, see <http://www.gnu.org/licenses/>.\n-->\n\n# Pycord18n\n\n### Ported by [YoungTrep](https://github.com/YoungTrep) for the new [Discord.py](https://github.com/Rapptz/discord.py) fork - [Pycord](https://pypi.org/project/py-cord/)\n\nThis is a open sourced version of the internal internationalization engine used for [Kolumbao](https://kolumbao.com/).\n\n[![](https://img.shields.io/pypi/v/pycord18n.svg)](https://pypi.org/project/Pycord18n/)\n[![](https://img.shields.io/pypi/implementation/pycord18n.svg)](https://pypi.org/project/Pycord18n/)\n\n\n## Installation\nTo install the Pycord18n, you can just run the following command:\n\n```bash\n# Windows\npy -m pip install pycord18n\n\n# Linux/MacOS\npython3 -m pip install pycord18n\n```\n\nYou can now use the library!\n\n## Usage\n\n### Setting up languages\nA language can be initialized like this:\n```python\nfrench = Language(\"French\", \"fr\", {\n    \"hello\": \"Bonjour\",\n    \"goodbye\": \"Au revoir\",\n    \"francais\": \"Français\"\n})\n```\n\nBut you may want to store languages seperately and create them as follows:\n```python\nimport json\nfrench = Language(\"French\", \"fr\", json.load(open(\"fr.json\")))\n```\n\n### Base I18n class\nWhen setting up the i18n class, we need to setup our languages and declare a fallback language:\n```python\ni18n = I18n([\n    Language(\"English\", \"en\", {\n        \"hello\": \"Hello\",\n        \"goodbye\": \"Goodbye\",\n        \"english\": \"English\"\n    }),\n    Language(\"French\", \"fr\", {\n        \"hello\": \"Bonjour\",\n        \"goodbye\": \"Au revoir\",\n        \"francais\": \"Français\"\n    }),\n], fallback=\"en\")\n```\n\n`i18n` will now fallback to english if it can't find a translation for other languages.\n```python\n>>> i18n.get_text(\"hello\", \"en\")\n'Hello'\n>>> i18n.get_text(\"hello\", \"fr\")\n'Bonjour'\n>>> # \"english\" is not a listed translation in the French locale, so we revert to english\n>>> i18n.get_text(\"english\", \"fr\")\n'English'\n>>> # However we can make it not fallback, but this will throw an error if the translation isn't found\n>>> i18n.get_text(\"english\", \"fr\", should_fallback=False) \nTraceback (most recent call last):\n  ...      \npy18n.i18n.InvalidTranslationKeyError: 'Translation foo not found for en!'\n```\n\n### Discord\nFor Pycord, we can use the extension `py18n.extension.I18nExtension`. Setup your bot as you would usually, and then run `i18n.init_bot` as follows.\n\n```python\nfrom discord.ext import commands\nfrom py18n.extension import I18nExtension\n\n# Make our bot\nbot = commands.Bot(\"prefix\")\n\n# Setup similarly to the usual class\ni18n = I18nExtension([\n    Language(\"English\", \"en\", {\n        \"hello\": \"Hello\",\n        \"goodbye\": \"Goodbye\",\n        \"english\": \"English\"\n    }),\n    Language(\"French\", \"fr\", {\n        \"hello\": \"Bonjour\",\n        \"goodbye\": \"Au revoir\",\n        \"francais\": \"Français\"\n    }),\n], fallback=\"en\")\n\n# Setup the bot by giving it a function to get the user's locale.\n# This could potentially refer to a database or other file.\n# Anything you want!\n# Otherwise, it will always be the fallback locale.\ndef get_locale(ctx: commands.Context):\n    preferences = {\n       301736945610915852: \"en\"\n    }\n    return preferences[ctx.author.id]\n\n# Set it up!\ni18n.init_bot(bot, get_locale)\n\n@bot.command(pass_context=True)\nasync def hello(ctx):\n    await ctx.send(i18n.contextual_get_text(\"hello\"))\n```\n\nThis is all good, but because of our line `i18n.init_bot(bot, get_locale)`, we can shorten things.\n\nThis function adds a pre-invoke hook that sets the language based on the result of `get_locale`. The `contextually_get_text` function is also exposed as `py18n.extension._`, and it is a `classmethod`.\n\nWe can change it by adding the following import and change our function:\n```python\nfrom py18n.extension import I18nExtension, _\n\n# ...\n\n@bot.command(pass_context=True)\nasync def hello(ctx):\n    await ctx.send(_(\"hello\"))\n```\n\nThere, much tidier!\n- The `_` function considers the current context and uses the correct locale by default.\n- When initializing any `I18nExtension`, as we did earlier, it becomes the default i18n instance. The default instance is used by `_` and `contextually_get_text`.\n\n## Issues\nIf you encounter any problems, check out [current issues](https://github.com/YoungTrep/pycord18n/issues) or [make a new issue](https://github.com/YoungTrep/pycord18n/issues/new).\n\n## Notes\n- Feel free to contribute! This is released under the GLP-3 license. (If you suggest another license, make an issue suggesting).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/YoungTrep/pycord18n",
    "keywords": "",
    "license": "GNU",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pycord18n",
    "package_url": "https://pypi.org/project/pycord18n/",
    "platform": "",
    "project_url": "https://pypi.org/project/pycord18n/",
    "project_urls": {
      "Homepage": "https://github.com/YoungTrep/pycord18n",
      "Issue Tracker": "https://github.com/YoungTrep/pycord18n/issues"
    },
    "release_url": "https://pypi.org/project/pycord18n/1.0.3/",
    "requires_dist": [
      "py-cord (==2.0.0a3861+g2d747f8f)"
    ],
    "requires_python": ">=3.6",
    "summary": "Localization for the discord.py fork, pycord",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11576384,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ceaf417a709155b81dcbc102d599d41082cc7bf9101d7ed75ca6e9d71698a21",
          "md5": "3d9703f06aaecca0e53bedf18d5981ea",
          "sha256": "f0ef26ecc963893826113b63b6969a99f90b36e4e7f2cac22f876fe1991b5ec3"
        },
        "downloads": -1,
        "filename": "Pycord18n-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d9703f06aaecca0e53bedf18d5981ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21796,
        "upload_time": "2021-09-08T23:07:34",
        "upload_time_iso_8601": "2021-09-08T23:07:34.609421Z",
        "url": "https://files.pythonhosted.org/packages/2c/ea/f417a709155b81dcbc102d599d41082cc7bf9101d7ed75ca6e9d71698a21/Pycord18n-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8e2a5b2d73d98800066b8e51dc3c7b4bb9651c161a114f2544185fdd6ee5a68",
          "md5": "520410a117179fd34ca9c3fe2f4d22a8",
          "sha256": "c0368deef372dec356f9c96ff98d08777c3e7014f91caf87034bada8c6808335"
        },
        "downloads": -1,
        "filename": "Pycord18n-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "520410a117179fd34ca9c3fe2f4d22a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7257,
        "upload_time": "2021-09-08T23:07:35",
        "upload_time_iso_8601": "2021-09-08T23:07:35.937923Z",
        "url": "https://files.pythonhosted.org/packages/b8/e2/a5b2d73d98800066b8e51dc3c7b4bb9651c161a114f2544185fdd6ee5a68/Pycord18n-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50462ca35a48b11b1cd75727ac772678cca599a306a91a9e6007444a52452335",
          "md5": "d4015d82b9fd1852307fa4750ac97c58",
          "sha256": "3e2f7a18f101bac7560266aa877737547b24c9b75c032cd74fb5eb3b3a87c7c9"
        },
        "downloads": -1,
        "filename": "Pycord18n-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4015d82b9fd1852307fa4750ac97c58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21836,
        "upload_time": "2021-09-22T23:05:44",
        "upload_time_iso_8601": "2021-09-22T23:05:44.381639Z",
        "url": "https://files.pythonhosted.org/packages/50/46/2ca35a48b11b1cd75727ac772678cca599a306a91a9e6007444a52452335/Pycord18n-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71db1005dfb4c210353bf70948ac86eacf58da771c5a7e5097759454807f9699",
          "md5": "ae468ab0f71d174f9c952acbb9489975",
          "sha256": "a86c44b300f3b7e308f96f766a483e9f007dbe4fc69f89e9d21fc9f0bd5f1ecd"
        },
        "downloads": -1,
        "filename": "Pycord18n-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae468ab0f71d174f9c952acbb9489975",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7339,
        "upload_time": "2021-09-22T23:05:46",
        "upload_time_iso_8601": "2021-09-22T23:05:46.149686Z",
        "url": "https://files.pythonhosted.org/packages/71/db/1005dfb4c210353bf70948ac86eacf58da771c5a7e5097759454807f9699/Pycord18n-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0db05fa9dbafb793a6097428e6dc90a3246b54185a3abd22815de23560cdf570",
          "md5": "b23e4639569eff084fbc2ee8a91822eb",
          "sha256": "2e180b158933c8cd7fb6fffe58c4f4ec86ded36246cfd753cd287377719a7871"
        },
        "downloads": -1,
        "filename": "pycord18n-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b23e4639569eff084fbc2ee8a91822eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22017,
        "upload_time": "2021-09-28T22:19:29",
        "upload_time_iso_8601": "2021-09-28T22:19:29.764921Z",
        "url": "https://files.pythonhosted.org/packages/0d/b0/5fa9dbafb793a6097428e6dc90a3246b54185a3abd22815de23560cdf570/pycord18n-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c3bef57832f6657ed949ded1669ae8d8f2d389e0dc9823ca4695f96f20c5b67",
          "md5": "736df874e3a5c63079547294fd761153",
          "sha256": "41f9aae38b4a39b7e43ae289883570c275ffbfd884217580d237772b39d8eeae"
        },
        "downloads": -1,
        "filename": "pycord18n-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "736df874e3a5c63079547294fd761153",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19073,
        "upload_time": "2021-09-28T22:19:31",
        "upload_time_iso_8601": "2021-09-28T22:19:31.464769Z",
        "url": "https://files.pythonhosted.org/packages/7c/3b/ef57832f6657ed949ded1669ae8d8f2d389e0dc9823ca4695f96f20c5b67/pycord18n-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0db05fa9dbafb793a6097428e6dc90a3246b54185a3abd22815de23560cdf570",
        "md5": "b23e4639569eff084fbc2ee8a91822eb",
        "sha256": "2e180b158933c8cd7fb6fffe58c4f4ec86ded36246cfd753cd287377719a7871"
      },
      "downloads": -1,
      "filename": "pycord18n-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b23e4639569eff084fbc2ee8a91822eb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 22017,
      "upload_time": "2021-09-28T22:19:29",
      "upload_time_iso_8601": "2021-09-28T22:19:29.764921Z",
      "url": "https://files.pythonhosted.org/packages/0d/b0/5fa9dbafb793a6097428e6dc90a3246b54185a3abd22815de23560cdf570/pycord18n-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c3bef57832f6657ed949ded1669ae8d8f2d389e0dc9823ca4695f96f20c5b67",
        "md5": "736df874e3a5c63079547294fd761153",
        "sha256": "41f9aae38b4a39b7e43ae289883570c275ffbfd884217580d237772b39d8eeae"
      },
      "downloads": -1,
      "filename": "pycord18n-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "736df874e3a5c63079547294fd761153",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19073,
      "upload_time": "2021-09-28T22:19:31",
      "upload_time_iso_8601": "2021-09-28T22:19:31.464769Z",
      "url": "https://files.pythonhosted.org/packages/7c/3b/ef57832f6657ed949ded1669ae8d8f2d389e0dc9823ca4695f96f20c5b67/pycord18n-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}