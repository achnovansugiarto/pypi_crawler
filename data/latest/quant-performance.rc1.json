{
  "info": {
    "author": "Amir najafi",
    "author_email": "contact@amirnajafi.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Office/Business :: Financial",
      "Topic :: Office/Business :: Financial :: Investment",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\nQuantPerf: Portfolio analytics and performance calculation for financial data\n==========================================\n\n**QuantPerf** Python library that performs portfolio profiling, allowing quants and portfolio managers to understand their performance better by providing them with in-depth analytics and risk metrics.\n\n\n\n1. ``quant_performance.report.perf`` - for calculating various performance metrics, like Sharpe ratio, Win rate, Volatility, etc.\n\n2. ``quant_performance.report.total_return_chart`` - for calculating total_return of DataSeries\n\nHere's an example of a simple tear sheet analyzing a strategy:\n\nQuick Start\n===========\n\n.. code:: python\n\n    from quant_performance.report import perf\n\n    # fetch the daily returns for a stock\n     df = pd.read_csv(\"./test_data/test_data.csv\",parse_dates=['Date'] , index_col='Date')\n    metrics , dataframe = perf(df['Close'])\n\t# metrics is metrics data that calculate and return as json \n\t# dataframe is whole calculations for metrics for every row and date\n\t\n\nOutput:\n\n.. code:: text\n\n    # metrics should return you json data like this :\n\t{'annualized_downside_volatility': 3.13,\n\t 'anualreturn_1y': 21.01,\n\t 'anualreturn_3y': 21.95,\n\t 'anualreturn_5y': 17.02,\n\t 'anualreturn_si': 0.63,\n\t 'anuualized_gain_volatility': 2.79,\n\t 'anuualized_loss_volatility': 3.41,\n\t 'anuualized_volatility': 3.92,\n\t 'average_monthly_gain': 0.69,\n\t 'average_monthly_loss': -0.72,\n\t 'best_month': 9.39,\n\t 'best_month_date': '2020-03-24 ',\n\t 'burke_ratio': -0.0,\n\t 'calmar_ratio': 0.02,\n\t 'compounded_return': 0.09,\n\t 'gain_loss_ratio': 1.18,\n\t 'kurtosis': 19.43,\n\t 'maximum_drawdown': -33.79,\n\t 'maximum_drawdown_date': '2020-03-23 ',\n\t 'negative_months_fraction': 44.87,\n\t 'omega_ratio': 0.93,\n\t 'plm': -0.97,\n\t 'positive_months_fraction': 55.02,\n\t 'psi': 152.16,\n\t 'sharp_ratio': -0.08,\n\t 'skewness': -0.67,\n\t 'sortino_ratio': -0.03,\n\t 'sterling_ratio': -0.33,\n\t 'ulcer_index': 1.78,\n\t 'worse_month': -11.98,\n\t 'worse_month_date': '2020-03-16 ',\n\t 'yearly_return': {'2015': 1.4,\n\t\t\t\t\t   '2016': 11.96,\n\t\t\t\t\t   '2017': 21.83,\n\t\t\t\t\t   '2018': -4.38,\n\t\t\t\t\t   '2019': 31.49,\n\t\t\t\t\t   '2020': 18.4,\n\t\t\t\t\t   '2021': 28.71,\n\t\t\t\t\t   '2022': -4.84\n\t\t\t}}\n\n\n**\\*\\*\\* Full documenttion coming soon \\*\\*\\***\n\nIn the meantime, you can get insights as to optional parameters for each method, by using Python's ``help`` method:\n\n.. code:: python\n\n    help(qs.stats.conditional_value_at_risk)\n\n.. code:: text\n\n\tHelp on function conditional_value_at_risk in module quantstats.stats:\n\n\tconditional_value_at_risk(returns, sigma=1, confidence=0.99)\n\t    calculats the conditional daily value-at-risk (aka expected shortfall)\n\t    quantifies the amount of tail risk an investment\n\n\nInstallation\n------------\n\nInstall using ``pip``:\n\n.. code:: bash\n\n    $ pip install quant_performance --upgrade --no-cache-dir\n\n\nRequirements\n------------\n\n* `Python <https://www.python.org>`_ >= 3.5+\n* `pandas <https://github.com/pydata/pandas>`_ (tested to work with >=0.24.0)\n* `numpy <http://www.numpy.org>`_ >= 1.15.0\n\n\nP.S.\n------------\nPlease drop me a note with any feedback you have.\n\n**Amir najafi**\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/amirnajafi/quantperf",
    "keywords": "quant algotrading algorithmic-trading quantitative-trading quantitative-analysis algo-trading visualization plotting",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quant-performance",
    "package_url": "https://pypi.org/project/quant-performance/",
    "platform": "any",
    "project_url": "https://pypi.org/project/quant-performance/",
    "project_urls": {
      "Homepage": "https://github.com/amirnajafi/quantperf"
    },
    "release_url": "https://pypi.org/project/quant-performance/0.0.1/",
    "requires_dist": [
      "numpy (==1.22.2)",
      "pandas (==1.4.1)"
    ],
    "requires_python": "",
    "summary": "This is a package for calculating performance metrics for quantitative finance",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12997605,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6b0c4d5ca404edd0c6ffb290d5be8236890e3da3858d635c457ef8913199b65",
          "md5": "23ecef78a9eb969b596a61577bfc6728",
          "sha256": "156579f0c0a28da558b4a1587efcde8b4a84b25374178bd3dfb8aef178224162"
        },
        "downloads": -1,
        "filename": "quant_performance-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23ecef78a9eb969b596a61577bfc6728",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6474,
        "upload_time": "2022-02-24T15:43:01",
        "upload_time_iso_8601": "2022-02-24T15:43:01.423076Z",
        "url": "https://files.pythonhosted.org/packages/e6/b0/c4d5ca404edd0c6ffb290d5be8236890e3da3858d635c457ef8913199b65/quant_performance-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03de9fe241fe17bd4b5f76b113696bf12c4958eb5254e4f9d3f581077aa870f6",
          "md5": "b98137e53061e535749e33f891d6967d",
          "sha256": "25b9d3542da86908ff6472af71334c47c35eb149ffb61771796cfab95219d8b4"
        },
        "downloads": -1,
        "filename": "quant_performance-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b98137e53061e535749e33f891d6967d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5975,
        "upload_time": "2022-02-24T15:43:03",
        "upload_time_iso_8601": "2022-02-24T15:43:03.527801Z",
        "url": "https://files.pythonhosted.org/packages/03/de/9fe241fe17bd4b5f76b113696bf12c4958eb5254e4f9d3f581077aa870f6/quant_performance-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6b0c4d5ca404edd0c6ffb290d5be8236890e3da3858d635c457ef8913199b65",
        "md5": "23ecef78a9eb969b596a61577bfc6728",
        "sha256": "156579f0c0a28da558b4a1587efcde8b4a84b25374178bd3dfb8aef178224162"
      },
      "downloads": -1,
      "filename": "quant_performance-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "23ecef78a9eb969b596a61577bfc6728",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 6474,
      "upload_time": "2022-02-24T15:43:01",
      "upload_time_iso_8601": "2022-02-24T15:43:01.423076Z",
      "url": "https://files.pythonhosted.org/packages/e6/b0/c4d5ca404edd0c6ffb290d5be8236890e3da3858d635c457ef8913199b65/quant_performance-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "03de9fe241fe17bd4b5f76b113696bf12c4958eb5254e4f9d3f581077aa870f6",
        "md5": "b98137e53061e535749e33f891d6967d",
        "sha256": "25b9d3542da86908ff6472af71334c47c35eb149ffb61771796cfab95219d8b4"
      },
      "downloads": -1,
      "filename": "quant_performance-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b98137e53061e535749e33f891d6967d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5975,
      "upload_time": "2022-02-24T15:43:03",
      "upload_time_iso_8601": "2022-02-24T15:43:03.527801Z",
      "url": "https://files.pythonhosted.org/packages/03/de/9fe241fe17bd4b5f76b113696bf12c4958eb5254e4f9d3f581077aa870f6/quant_performance-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}