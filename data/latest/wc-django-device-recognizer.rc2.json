{
  "info": {
    "author": "WebCase",
    "author_email": "info@webcase.studio",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Utilities"
    ],
    "description": "# WebCase device recognizing utility\n\n## Installation\n\n```sh\npip install wc-django-device-recognizer\n```\n\nIt depends on `django-user-agents`, so check out [it's documentation](https://pypi.org/project/django-user-agents/) about additional installation instructions.\n\nIn `settings.py`:\n\n```python\nINSTALLED_APPS += [\n  'wcd_device_recognizer',\n]\n```\n\n## Usage\n\nTo get all possible information from request:\n\n```python\nfrom wcd_device_recognizer.services import request_resolver\n\ninterlocutor = request_resolver.resolve(request)\n\nassert interlocutor.device.bitness == '64'\nassert interlocutor.os.family == 'Linux'\nassert interlocutor.os.arch == 'x86'\nassert interlocutor.app.family == 'Chrome'\nassert interlocutor.app.version == (101, 0, 0)\nassert interlocutor.device.dpr == 1\n```\n\nAnd then you may save interlocutor's data to database:\n\n```python\nfrom wcd_device_recognizer.services import registry\n\n# You may pass any amount of interlocutors to register here.\nregistry.register_interlocutors((interlocutor,))\n```\n\n## Coverage\n\nTo collect interlocutor's data package uses User-Agent info and standart HTTP headers:\n\n- `Sec-CH-UA`\n- `Sec-CH-UA-Arch`\n- `Sec-CH-UA-Bitness`\n- `Sec-CH-UA-Full-Version`\n- `Sec-CH-UA-Full-Version-List`\n- `Sec-CH-UA-Mobileser experience.`\n- `Sec-CH-UA-Model`\n- `Sec-CH-UA-Platform`\n- `Sec-CH-UA-Platform-Version`\n- `Content-DPR`\n- `Device-Memory`\n- `DPR`\n- `Viewport-Width`\n- `Width`\n\nFor details look here: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers#user_agent_client_hints\n\nAlso any `Sec-CH-UA-{key-name}` will be saved.\n\nTo provide some unique device identifier use: **`Sec-CH-UA-ID`** header.\n# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n## [0.1.4]\n### Added\n- Translation strings.\n\n## [0.1.1]\nInitial version.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wc-django-device-recognizer",
    "package_url": "https://pypi.org/project/wc-django-device-recognizer/",
    "platform": null,
    "project_url": "https://pypi.org/project/wc-django-device-recognizer/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/wc-django-device-recognizer/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Django device recognizing utility.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14514471,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c14596411ff968b30c96c6151f2f7831839da405c4e3fc7c9b9e3a7ec552a66",
          "md5": "1de0102434f3a19a99c7c2a7809993bf",
          "sha256": "c770c152ec0f4cb61975f91a53967b9cf98086cfd4d33a53937951c0ed04ec17"
        },
        "downloads": -1,
        "filename": "wc-django-device-recognizer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1de0102434f3a19a99c7c2a7809993bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10169,
        "upload_time": "2022-07-20T07:49:40",
        "upload_time_iso_8601": "2022-07-20T07:49:40.455494Z",
        "url": "https://files.pythonhosted.org/packages/0c/14/596411ff968b30c96c6151f2f7831839da405c4e3fc7c9b9e3a7ec552a66/wc-django-device-recognizer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "649c9f16aaaa4b63405470200a7dd8e599ad4c352dff966694a6c7ca1c58f623",
          "md5": "4369f6e47b2e59fd64fad2b6cedcd7b9",
          "sha256": "e950c7c02b24c88697a97923e75880be55ab2bd71c84d91389588d08872e6e69"
        },
        "downloads": -1,
        "filename": "wc-django-device-recognizer-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4369f6e47b2e59fd64fad2b6cedcd7b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10450,
        "upload_time": "2022-07-22T09:54:44",
        "upload_time_iso_8601": "2022-07-22T09:54:44.373092Z",
        "url": "https://files.pythonhosted.org/packages/64/9c/9f16aaaa4b63405470200a7dd8e599ad4c352dff966694a6c7ca1c58f623/wc-django-device-recognizer-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "649c9f16aaaa4b63405470200a7dd8e599ad4c352dff966694a6c7ca1c58f623",
        "md5": "4369f6e47b2e59fd64fad2b6cedcd7b9",
        "sha256": "e950c7c02b24c88697a97923e75880be55ab2bd71c84d91389588d08872e6e69"
      },
      "downloads": -1,
      "filename": "wc-django-device-recognizer-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4369f6e47b2e59fd64fad2b6cedcd7b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10450,
      "upload_time": "2022-07-22T09:54:44",
      "upload_time_iso_8601": "2022-07-22T09:54:44.373092Z",
      "url": "https://files.pythonhosted.org/packages/64/9c/9f16aaaa4b63405470200a7dd8e599ad4c352dff966694a6c7ca1c58f623/wc-django-device-recognizer-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}