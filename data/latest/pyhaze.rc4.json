{
  "info": {
    "author": "Tim Schaefer",
    "author_email": "Tim Schaefer <ts+code@rcmd.org>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# pyhaze\nFast smoothing of per-vertex data on triangular meshes for Python.\n\n[![PyPI version](https://badge.fury.io/py/pyhaze.svg)](https://badge.fury.io/py/pyhaze)\n[![Anaconda-Server Badge](https://anaconda.org/dfspspirit/pyhaze/badges/version.svg)](https://anaconda.org/dfspspirit/pyhaze)\n\n\n## About\n\nThis package package performs smoothing of per-vertex data on [triangular meshes](https://en.wikipedia.org/wiki/Triangle_mesh). Such smoothing is typically used to reduce high-frequency noise and improve signal-to-noise ration (SNR). The algorithm for iterative nearest-neighbor smoothing is trivial, but involves nested tight loops, which are very slow in Python, so this package calls into C++ via [pybind11](https://github.com/pybind/pybind11) to achieve high performance.\n\n![Figure 1, Showing a brain mesh with an overlay, before and after smoothing.](./web/pyhaze.png?raw=true \"Per-vertex data on a brain mesh before (left) and after (right) smoothing.\")\n\n**Fig.1**: *Noisy per-vertex data on a brain mesh (left), and the same data after smoothing (right). White represents NA values.*\n\nThis is a Python implementation of the [haze package for R](https://github.com/dfsp-spirit/haze). The haze website offers a more detailed explanation of the motivation and use cases.\n\n\n## Installation\n\nVia pip:\n\n```shell\npip install pyhaze\n```\n\nAlternatively, if you want to use `conda`:\n\n```shell\nconda install -c dfspspirit pyhaze\n```\n\n## Usage\n\n### Example 1: Smooth data on a mesh given as a vertex index list\n\nHere is a simple example using the `pyhaze.smooth_pvd` function.\n\n```python\nimport pyhaze\nimport numpy as np\n\nvertices, faces = pyhaze.construct_cube()\n\npvd_data = np.arange(len(vertices), dtype=float)\nsmoothed_data = pyhaze.smooth_pvd(vertices, faces, pvd_data.tolist(), num_iter=5)\n```\n\nA note on the mesh representation used, so you can replace the `vertices` and `faces` with your own triangular mesh:\n\n* `vertices` is a list of lists of `float`, with dimension `N, 3` for `N` vertices. So the outer list has length `N`. The 3 columns (length of all inner lists) are the x,y,z coordinates for each vertex.\n* `faces` is a list of lists of `int`, with dimension `M, 3` for `M` faces. So the outer list has length `M`. The 3 columns (length of all inner lists) are the 3 vertices (given as indices into `vertices`) making up the respective triangular face.\n\n\n### Example 2: Smooth data on a mesh given as an adjacency list\n\nFor very large meshes, it pays off to pre-compute the adjacency list of the mesh with a fast method, such as with the `igl` Python package, which provides Python bindings for libigl, and use the `pyhaze.smooth_pvd_adj` function.\n\n```python\nimport pyhaze\nimport numpy as np\nimport igl\n\nvertices, faces = pyhaze.construct_cube()\n\npvd_data = np.arange(len(vertices), dtype=float)\nfaces_igl = np.array(faces).reshape(-1, 3).astype(np.int64)\nmesh_adj = igl.adjacency_list(faces_igl)  # Compute adjacency list with igl.\nres = pyhaze.smooth_pvd_adj(mesh_adj, pvd_data.tolist(), num_iter=5)\n```\n\nSee the [unit tests](./python/tests/test_pyhaze.py) for more examples.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dfsp-spirit/pyhaze",
    "keywords": "mesh,triangular-mesh,smoothing,overlay,per-vertex data,mesh descriptor,haze,neuroimaging,MRI,brain",
    "license": "MIT License  Copyright (c) 2018 Tim Sch√§fer  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyhaze",
    "package_url": "https://pypi.org/project/pyhaze/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyhaze/",
    "project_urls": {
      "Homepage": "https://github.com/dfsp-spirit/pyhaze",
      "documentation": "https://github.com/dfsp-spirit/pyhaze",
      "repository": "https://github.com/dfsp-spirit/pyhaze"
    },
    "release_url": "https://pypi.org/project/pyhaze/0.1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Fast smoothing of per-vertex data on triangular meshes.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16060305,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9268b918fb63c2da06c8fef0b58bfde3ca692dc7578dc745425eb7577de244e8",
          "md5": "15c496e6feecbbb229ef61e27487586f",
          "sha256": "0e84a269a97fae7297e2a10a8ff70bd03c5da493615b15c63a96a5ff117eebc2"
        },
        "downloads": -1,
        "filename": "pyhaze-0.1.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "15c496e6feecbbb229ef61e27487586f",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 80821,
        "upload_time": "2022-11-18T17:33:16",
        "upload_time_iso_8601": "2022-11-18T17:33:16.644537Z",
        "url": "https://files.pythonhosted.org/packages/92/68/b918fb63c2da06c8fef0b58bfde3ca692dc7578dc745425eb7577de244e8/pyhaze-0.1.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f7df1049669780a5eb73cf56821c88514e814788233c6104d72f8462ddabd88",
          "md5": "9021a8c05eb959efc22e49be10eb82b2",
          "sha256": "45bf66384607cf981c3cd145c53eb2da2b212d3a1a2ec4158625f14cc2c1e9a3"
        },
        "downloads": -1,
        "filename": "pyhaze-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9021a8c05eb959efc22e49be10eb82b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 942154,
        "upload_time": "2022-11-17T11:30:09",
        "upload_time_iso_8601": "2022-11-17T11:30:09.219861Z",
        "url": "https://files.pythonhosted.org/packages/7f/7d/f1049669780a5eb73cf56821c88514e814788233c6104d72f8462ddabd88/pyhaze-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62156de8ee233d987eec77ca57c166987b2ddbebc1a0dca6d4f29688a2f8bcf0",
          "md5": "9821b52637aea819e7ebb0da406e99f7",
          "sha256": "a431b09fa25683e75913c65a902f31b55bfc7ece6ba7204486b552d4cf7348ef"
        },
        "downloads": -1,
        "filename": "pyhaze-0.1.1-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "9821b52637aea819e7ebb0da406e99f7",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 80818,
        "upload_time": "2022-11-18T17:35:14",
        "upload_time_iso_8601": "2022-11-18T17:35:14.706527Z",
        "url": "https://files.pythonhosted.org/packages/62/15/6de8ee233d987eec77ca57c166987b2ddbebc1a0dca6d4f29688a2f8bcf0/pyhaze-0.1.1-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4721e5bba42cb9a7119a0887e4c0f526c980e800121331f5df325b6a331d6d71",
          "md5": "01588d683b889e316a784aedf1b8c4b4",
          "sha256": "b1879a024429b81ccfc898b073e6633b96548ca1da0eeafda75b1655abb118c0"
        },
        "downloads": -1,
        "filename": "pyhaze-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "01588d683b889e316a784aedf1b8c4b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6429,
        "upload_time": "2022-11-18T17:34:44",
        "upload_time_iso_8601": "2022-11-18T17:34:44.039281Z",
        "url": "https://files.pythonhosted.org/packages/47/21/e5bba42cb9a7119a0887e4c0f526c980e800121331f5df325b6a331d6d71/pyhaze-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d551d0c9717ea242c31d419adc9345f7b1af4426fbdf4361f6d4c76b0d973994",
          "md5": "6cd37ab4e5a3acb943760cae726f6665",
          "sha256": "b63ae6a795a283a9d0bc7fd6c0b0b5e134400875ab4fdfbd8afa7ff08bcbac5d"
        },
        "downloads": -1,
        "filename": "pyhaze-0.1.2-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "6cd37ab4e5a3acb943760cae726f6665",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 80821,
        "upload_time": "2022-11-19T19:48:45",
        "upload_time_iso_8601": "2022-11-19T19:48:45.149950Z",
        "url": "https://files.pythonhosted.org/packages/d5/51/d0c9717ea242c31d419adc9345f7b1af4426fbdf4361f6d4c76b0d973994/pyhaze-0.1.2-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68a08cecf54156ebd07100367138c65254dbf4ebf0d2703767f7240b648fba54",
          "md5": "9ffcb401633dbd627c4cb564454afbf7",
          "sha256": "0186f5126a54b0f34f47704ac9b179340ad7d7a4a06ef23f03898b2133dfb579"
        },
        "downloads": -1,
        "filename": "pyhaze-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9ffcb401633dbd627c4cb564454afbf7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1483467,
        "upload_time": "2022-11-19T19:20:22",
        "upload_time_iso_8601": "2022-11-19T19:20:22.863876Z",
        "url": "https://files.pythonhosted.org/packages/68/a0/8cecf54156ebd07100367138c65254dbf4ebf0d2703767f7240b648fba54/pyhaze-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d290d6c80deffec81f62da5166c4633a7aecebd1c9592eccabeb7051158389b0",
          "md5": "bbf0b3b8647c6d818611c39edecc5220",
          "sha256": "a4dc565f890ea6f1d03661210ad4197d87c95603a6fec4077d8c86891ca4265f"
        },
        "downloads": -1,
        "filename": "pyhaze-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bbf0b3b8647c6d818611c39edecc5220",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1587494,
        "upload_time": "2022-12-10T20:49:59",
        "upload_time_iso_8601": "2022-12-10T20:49:59.540756Z",
        "url": "https://files.pythonhosted.org/packages/d2/90/d6c80deffec81f62da5166c4633a7aecebd1c9592eccabeb7051158389b0/pyhaze-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d290d6c80deffec81f62da5166c4633a7aecebd1c9592eccabeb7051158389b0",
        "md5": "bbf0b3b8647c6d818611c39edecc5220",
        "sha256": "a4dc565f890ea6f1d03661210ad4197d87c95603a6fec4077d8c86891ca4265f"
      },
      "downloads": -1,
      "filename": "pyhaze-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "bbf0b3b8647c6d818611c39edecc5220",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1587494,
      "upload_time": "2022-12-10T20:49:59",
      "upload_time_iso_8601": "2022-12-10T20:49:59.540756Z",
      "url": "https://files.pythonhosted.org/packages/d2/90/d6c80deffec81f62da5166c4633a7aecebd1c9592eccabeb7051158389b0/pyhaze-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}