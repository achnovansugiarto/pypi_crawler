{
  "info": {
    "author": "origamizyt",
    "author_email": "zhaoyitong18@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Blowcurve Encryption Library\n\nRepository: https://www.github.com/origamizyt/blowcurve\n\nSimple library for Blowfish / ECC encryption and digital signatures.\n\n## Installation\nThis library is available on PyPI.\n```\npip install blowcurve\n```\n\nOr you could also install from source code.\n```\npython setup.py install\n```\n\n## Usage\nThe `Blowcurve` class in package root provides all usage.\nYou can initialize it without any parameters to generate random keys: (In fact, this is the only way to create instances.)\n```py\n>>> from blowcurve import Blowcurve\n>>> bc1 = Blowcurve()\n>>> bc2 = Blowcurve()\n```\n\nThe `export` method allows you to export the key as DER hex string:\n```py\n>>> bc1.export()\n'3059301306072a8648ce3d020106082a8648ce3d030107034200041c873634bf4b14d555800e33482971ca55e5780e8c109c817adf185919060e414857851ee2bdff18cd76510b80c79f3b11380810e2be9a876765722ed9c7f465'\n```\n\nThe `load` method performs ecdh key exchange with remote services:\n```py\n>>> bc1.load(bc2.export())\n>>> bc2.load(bc1.export())\n```\n\nNo error means key exchange was successful.\n\nAfter key exchange, the `sign` and `encrypt` methods are enabled:\n```py\n>>> signature = bc1.sign(b'data')\n>>> bc2.verify(b'data', signature)\nTrue\n>>> data = b'mymessage'\n>>> bc2.decrypt(bc1.encrypt(data))\nb'message'\n```\n\nIf no remote key was provided, a `MissingRemoteKey` exception will be raised:\n```py\n>>> Blowcurve().encrypt(b'')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"__init__.py\", line 41, in encrypt\n    ephemeral, key = self._pair.ephemeral()\n  File \"keys.py\", line 94, in ephemeral\n    raise MissingRemoteKey\nblowcurve.keys.MissingRemoteKey: remote key not loaded yet.\n>>> Blowcurve().verify(b'', b'')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"__init__.py\", line 38, in verify\n    return self._pair.verify(data, signature)\n  File \"keys.py\", line 109, in verify\n    raise MissingRemoteKey\nblowcurve.keys.MissingRemoteKey: remote key not loaded yet.\n```\n\nThe `keys` module has API for basic signing and ecdh.\n```py\n>>> from blowcurve.keys import ECKeys\n>>> k1 = ECKeys()\n>>> k2 = ECKeys()\n>>> k1.load(k2.export())\n>>> k2.load(k1.export())\n>>> k1.secret() == k2.secret()\nTrue\n>>> k2.verify(b'data', k1.sign(b'data'))\nTrue\n```\n\nThe `crypt` module has API for encryption and padding.\n```py\n>>> from blowcurve import crypt\n>>> crypt.pkcs5_pad(b'data', 8)\nb'data\\x04\\x04\\x04\\x04'\n>>> crypt.pkcs5_pad(b'mymessage', 16)\nb'mymessage\\x07\\x07\\x07\\x07\\x07\\x07\\x07'\n>>> crypt.pkcs5_unpad(b'data\\x04\\x04\\x04\\x04')\nb'data'\n>>> crypt.pkcs5_unpad(b'incorrect\\x01\\x02\\x03')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"crypt.py\", line 41, in pkcs5_unpad\n    raise IncorrectPadding\nblowcurve.crypt.IncorrectPadding: incorrect padding\n>>> data = crypt.encrypt(b'mykey', b'hello, world!')\n>>> crypt.decrypt(b'mykey', data)\nb'hello, world!'\n>>> crypt.decrypt(b'other', data)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"crypt.py\", line 71, in decrypt\n    return pkcs5_unpad(cipher.decrypt(data))\n  File \"crypt.py\", line 41, in pkcs5_unpad\n    raise IncorrectPadding\nblowcurve.crypt.IncorrectPadding: incorrect padding\n```\n\nThe cause of the exception above is because the incorrect key results in incorrect decrypted data, therefore causing an incorrect padding. (There is chance that this exception won't occur, but the result will still be malformed.)\n\n## Testing\n\nThe `test.py` file contains unittest test cases:\n```\n$ python -m unittest --verbose blowcurve.test\ntestEncrypt (blowcurve.test.BlowcurveTestCase) ... ok\ntestSign (blowcurve.test.BlowcurveTestCase) ... ok\ntestEncrypt (blowcurve.test.CryptTestCase) ... ok\ntestPad (blowcurve.test.CryptTestCase) ... ok\ntestNoRemoteKey (blowcurve.test.KeysTestCase) ... ok\ntestSecret (blowcurve.test.KeysTestCase) ... ok\ntestSign (blowcurve.test.KeysTestCase) ... ok\n\n----------------------------------------------------------------------\nRan 7 tests in 0.179s\n\nOK\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/origamizyt/blowcurve",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "blowcurve",
    "package_url": "https://pypi.org/project/blowcurve/",
    "platform": "",
    "project_url": "https://pypi.org/project/blowcurve/",
    "project_urls": {
      "Homepage": "https://github.com/origamizyt/blowcurve"
    },
    "release_url": "https://pypi.org/project/blowcurve/1.0.0/",
    "requires_dist": [
      "PyCryptodome",
      "ecdsa"
    ],
    "requires_python": ">=3",
    "summary": "Simple library for Blowfish / ECC encryption and digital signatures.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9276554,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe901bc7df2b4c0446619b485b590d5a9af4764f5e6875948661bf085491b9b0",
          "md5": "8da49dabc20b41fffc925e484e2b3e08",
          "sha256": "299dc80155f2fa1222aa0c2f3fdd06db77d5e252245aa0b8edd73a53af75b00a"
        },
        "downloads": -1,
        "filename": "blowcurve-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8da49dabc20b41fffc925e484e2b3e08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 7306,
        "upload_time": "2021-01-31T05:29:52",
        "upload_time_iso_8601": "2021-01-31T05:29:52.726775Z",
        "url": "https://files.pythonhosted.org/packages/fe/90/1bc7df2b4c0446619b485b590d5a9af4764f5e6875948661bf085491b9b0/blowcurve-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "886a4997ec317676e6b89d8aada7dd7cf35ae3b34d4588aa2f90793467c58d87",
          "md5": "1c55595e76d7b07a03b5ed52f78efe7f",
          "sha256": "51c74ed61ab14d2fd2bcf3079cdb6f2932d6f8ff08540ed32211b228d6c6b4f6"
        },
        "downloads": -1,
        "filename": "blowcurve-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1c55595e76d7b07a03b5ed52f78efe7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6360,
        "upload_time": "2021-01-31T05:29:54",
        "upload_time_iso_8601": "2021-01-31T05:29:54.314386Z",
        "url": "https://files.pythonhosted.org/packages/88/6a/4997ec317676e6b89d8aada7dd7cf35ae3b34d4588aa2f90793467c58d87/blowcurve-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe901bc7df2b4c0446619b485b590d5a9af4764f5e6875948661bf085491b9b0",
        "md5": "8da49dabc20b41fffc925e484e2b3e08",
        "sha256": "299dc80155f2fa1222aa0c2f3fdd06db77d5e252245aa0b8edd73a53af75b00a"
      },
      "downloads": -1,
      "filename": "blowcurve-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8da49dabc20b41fffc925e484e2b3e08",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 7306,
      "upload_time": "2021-01-31T05:29:52",
      "upload_time_iso_8601": "2021-01-31T05:29:52.726775Z",
      "url": "https://files.pythonhosted.org/packages/fe/90/1bc7df2b4c0446619b485b590d5a9af4764f5e6875948661bf085491b9b0/blowcurve-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "886a4997ec317676e6b89d8aada7dd7cf35ae3b34d4588aa2f90793467c58d87",
        "md5": "1c55595e76d7b07a03b5ed52f78efe7f",
        "sha256": "51c74ed61ab14d2fd2bcf3079cdb6f2932d6f8ff08540ed32211b228d6c6b4f6"
      },
      "downloads": -1,
      "filename": "blowcurve-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1c55595e76d7b07a03b5ed52f78efe7f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 6360,
      "upload_time": "2021-01-31T05:29:54",
      "upload_time_iso_8601": "2021-01-31T05:29:54.314386Z",
      "url": "https://files.pythonhosted.org/packages/88/6a/4997ec317676e6b89d8aada7dd7cf35ae3b34d4588aa2f90793467c58d87/blowcurve-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}