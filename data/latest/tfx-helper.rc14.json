{
  "info": {
    "author": "Tomasz MaÄ‡kowiak",
    "author_email": "tomasz.mackowiak@dlabs.ai",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# tfx-helper\n\nA helper library for TFX\n\n## Why?\n\nThis package contains small utilities that help in creation of [TFX](https://github.com/tensorflow/tfx) pipelines:\n\n* supports running pipeline locally or on *Vertex AI Pipelines* (with all training, tuning and serving also happening inside *Vertex AI*),\n* abstracts local vs cloud execution environment outside of the pipeline definition (no need for `if use_gcp:` conditions inside your pipeline code - write a uniform pipeline creation code and run it on both local and cloud),\n* construct complex `custom_config` for *TFX* extension components for you (configuration of extension components is complex and not well documented - we did the research for you and are exposing a simple API),\n* enable GPU in training/tuning/serving with a single argument,\n* enable declaring per-component resource requirements (you can now run `Evaluator` component on a beefier machine if you have a large model),\n* use generator function syntax in pipeline definition to avoid boilerplate,\n* avoid passing a hundred parameters into your pipeline definition (cloud configuration, like `service_account` is now only part of cloud-targeted runner)\n\nIn addition we provide a set of helper functions for visualization of TFX pipeline artifacts.\n\n## How?\n\n### Install\n\n```sh\npip install tfx-helper\n```\n\n### Pipeline definition\n\n1. Use our helper component interface in you pipeline definition.\n1. Return a collection of components.\n1. For multi-version components (`Trainer`, `Tuner`, `Pusher`) construction use the helper.\n\n```python\nfrom tfx_helper.interface import PipelineHelperInterface\n\ndef create_pipeline(\n    pipeline_helper: PipelineHelperInterface, # pass in the helper as interface\n    *,\n    # all your pipeline parameters\n    train_epochs: int,  # maximum number of training epochs in trainer\n    ... # other parameters\n) -> Iterable[BaseComponent]: # return a collection of components\n    ...\n    # create `Transform` in the usual way\n    transform = tfx.components.Transform(\n        examples=example_gen.outputs[\"examples\"],\n        schema=schema_gen.outputs[\"schema\"],\n        preprocessing_fn=\"models.preprocessing.preprocessing_fn\",\n        splits_config=tfx.proto.SplitsConfig(\n            analyze=[\"train\", \"valid\"],\n            transform=[\"train\", \"valid\", \"eval\"],\n        ),\n    )\n    yield transform\n    ...\n    # use the helper to create a `Trainer` in a uniform way\n    trainer = pipeline_helper.construct_trainer(\n        run_fn=\"models.model.run_fn\",\n        examples=transform.outputs[\"transformed_examples\"],\n        transform_graph=transform.outputs[\"transform_graph\"],\n        schema=schema_gen.outputs[\"schema\"],\n        hyperparameters=hparams,\n        train_args=tfx.proto.TrainArgs(splits=[\"train\"]),\n        eval_args=tfx.proto.EvalArgs(splits=[\"valid\"]),\n        # custom parameters to the training callback\n        custom_config={\"epochs\": train_epochs, \"patience\": train_patience},\n    )\n    yield trainer\n    ...\n```\n\n### Pipeline local runner\n\nCreate a pipeline runner that will take your uniform pipeline definition and materialize\nit for running locally (through `DirectRunner`):\n\n```python\nfrom tfx_helper.local import LocalPipelineHelper\n\n\ndef run() -> None:\n    \"\"\"Create and run a pipeline locally.\"\"\"\n    input_dir = ...\n    output_dir = ...\n    serving_model_dir = ...\n    # Create pipeline helper instance of local flavour.\n    pipeline_helper = LocalPipelineHelper(\n        pipeline_name=\"sentimentanalysis\",\n        output_dir=output_dir,\n        # Where should the model be pushed to\n        model_push_destination=tfx.proto.PushDestination(\n            filesystem=tfx.proto.PushDestination.Filesystem(\n                base_directory=serving_model_dir\n            )\n        ),\n    )\n\n    components = create_pipeline(\n        # Pass our pipeline helper instance\n        pipeline_helper,\n        # The rest of the parameters are pipeline-specific.\n        data_path=input_dir,\n        ... # other arguments\n    )\n    # Run the pipeline\n    pipeline_helper.create_and_run_pipeline(components)\n```\n\nNotice that no cloud-specific configuration was needed neither in the runner nor in the\npipeline definition.\n\n### Pipeline cloud runner\n\nCreate a pipline runner that will take you uniform pipeline definition and materialize\nit for running in the cloud (on *Vertex AI Pipelines* through `KubeflowV2DagRunner`):\n\n```python\nfrom tfx_helper.interface import Resources\nfrom tfx_helper.vertex_ai import VertexAIPipelineHelper\n\ndef run() -> None:\n    output_dir = \"gs://...\"\n    # minimal (less than the standard `e2-standard-4`) resource for components\n    # that won't execute computations\n    minimal_resources = Resources(cpu=1, memory=4)\n    # create a helper instance of cloud flavour\n    pipeline_helper = VertexAIPipelineHelper(\n        pipeline_name=\"...\",\n        output_dir=output_dir,\n        google_cloud_project=\"...\",\n        google_cloud_region=\"europe-west4\",\n        # all the components will use our custom image for running\n        docker_image=\"europe-west4-docker.pkg.dev/.../...-repo/...-image:latest\",\n        service_account=\"...@....iam.gserviceaccount.com\",\n        # name of the Vertex AI Endpoint\n        serving_endpoint_name=\"...\",\n        # Number of parallel hyperparameter tuning trails\n        num_parallel_trials=2,\n        # GPU for Trainer and Tuner components\n        trainer_accelerator_type=\"NVIDIA_TESLA_T4\",\n        # Machine type for Trainer and Tuner components\n        trainer_machine_type=\"n1-standard-4\",\n        # GPU for serving endpoint\n        serving_accelerator_type=\"NVIDIA_TESLA_T4\",\n        # Machine type for serving endpoint\n        serving_machine_type=\"n1-standard-4\",\n        # Override resource requirements of components. The dictionary key is the ID\n        # of the component (usually class name, unless changed with `with_id` method).\n        resource_overrides={\n            # evaluator needs more RAM than standard machine can provide\n            \"Evaluator\": Resources(cpu=16, memory=32),\n            # training is done as Vertex job on a separate machine\n            \"Trainer\": minimal_resources,\n            # tuning is done as Vertex job on a separate set of machines\n            \"Tuner\": minimal_resources,\n            # pusher is just submitting a job\n            \"Pusher\": minimal_resources,\n        },\n    )\n    # Run the pipeline\n    components = create_pipeline(\n        pipeline_helper,\n        # Input data in Cloud Storage\n        data_path=\"gs://...\",\n        ... # other arguments\n    )\n    # Run the pipeline\n    pipeline_helper.create_and_run_pipeline(components, enable_cache=True)\n```\n\n### Viewing pipeline artifacts\n\nThe TFX pipeline artifacts can be visualized inside Jupyter Notebook cells using\n(mostly) custom interactive widgets. In order to be able to display those widgets,\nthe following prerequisites need to be fulfilled:\n\n* widget extensions need to be installed,\n\n    ```sh\n    jupyter nbextension enable --py widgetsnbextension --sys-prefix\n    jupyter nbextension install --py --symlink tensorflow_model_analysis --sys-prefix\n    jupyter nbextension enable --py tensorflow_model_analysis --sys-prefix\n    ```\n\n* notebook needs to be trusted.\n\n#### Getting recent artifact directory\n\nEach TFX artifact is stored in the TFX pipeline's output location.\nDepending on whether you run your pipeline locally or on VertexAI the structure\nof the directories is different. We provide helpers that can assist you in retrieving\nthe newest artifact locations. In local environment the helper uses directory traversal\nto find the correct path. With VertexAI the helper communicates with VertexAI ML Metadata\nService.\n\nFor local pipeline runs:\n\n```python\nfrom tfx_helper.artifact_finder.local import NewestLocalPathGetter\nfrom tfx_helper.artifact_finder.interface import ArtifactPathGetterInterface\n\npath_getter: ArtifactPathGetterInterface = NewestLocalPathGetter(\n    artifact_dir=pipeline_output, pipeline_name=pipeline_name\n)\n\nbest_hparams_path = path_getter('Tuner', 'best_hyperparameters')\nevaluation_path = path_getter('Evaluator', 'evaluation')\n```\n\nFor VertexAI pipeline runs:\n\n```python\nfrom tfx_helper.artifact_finder.interface import ArtifactPathGetterInterface\nfrom tfx_helper.artifact_finder.vertex_ai import NewsetRunVertexAIPathGetter\n\npath_getter: ArtifactPathGetterInterface = NewsetRunVertexAIPathGetter(\n    pipeline_name=pipeline_name, region=gcp_region, project=gcp_project\n)\n\nbest_hparams_path = path_getter('Tuner', 'best_hyperparameters')\nevaluation_path = path_getter('Evaluator', 'evaluation')\n```\n\nThe obtained directory can be used with our set of helper functions that help you\npreview the artifacts in an easy manner.\n\nPlease note that the name of a pipeline component can be customized. If you define\nin your pipeline:\n\n```python\nstats_gen = tfx.components.StatisticsGen(...)\n```\n\nthen you should use:\n\n```python\nevaluation_path = path_getter('StatisticsGen', 'statistics')\n```\n\nbut if you customize the name:\n\n```\nstats_gen = tfx.components.StatisticsGen(...).with_id(\"raw_stats_gen\")\n```\n\nthen you should use:\n\n```python\nevaluation_path = path_getter('raw_stats_gen', 'statistics')\n```\n\n#### Viewing dataset statistics\n\nUse the `display_stats` helper to compare statistics of two splits of the same dataset:\n\n\n```python\nfrom tfx_helper.visualization.display_stats import display_stats\n\ndisplay_stats(path_getter('raw_stats_gen', 'statistics'))\n```\n\nUse the `compare_stats` helper to compare statistics between two datasets.\n\n```python\nfrom tfx_helper.visualization.display_stats import compare_stats\n\ncompare_stats(\n    left_dir=path_getter('raw_stats_gen', 'statistics'),\n    right_dir=path_getter('inference_stats_gen', 'statistics')\n)\n```\n\n#### Viewing dataset schema\n\nUse the `display_schema` helper to preview dataset schema:\n\n```python\nfrom tfx_helper.visualization.display_schema import display_schema\n\ndisplay_schema(path_getter('SchemaGen', 'schema'))\n```\n\n#### Viewing dataset anomalies\n\nIf you use `ExampleValidator` component, you can preview its anomalies detection report\nusing `display_anomalies` helper:\n\n```python\nfrom tfx_helper.visualization.display_anomalies import display_anomalies\n\ndisplay_anomalies(path_getter('ExampleValidator', 'anomalies'), split_name='all')\n```\n\n#### Viewing best hyper parameters\n\nTo view the values of best hyperparameters chosen by the `Tuner` component, you can use\nthe `display_hyperparams` helper:\n\n```python\nfrom tfx_helper.visualization.display_hyperparams import display_hyperparams\n\ndisplay_hyperparams(path_getter('Tuner', 'best_hyperparameters'))\n```\n\n#### Viewing model evaluation results\n\nIf you use `slicing_specs` in `EvalConfig` to your `Evaluator` component, then you might\nbe willing to view what kind of slices were produced during evaluation:\n\n```python\nfrom tfx_helper.visualization.display_metrics import get_slice_names\n\nget_slice_names(path_getter('Evaluator', 'evaluation'))\n```\n\nTo view the overall metrics for your model use `display_metrics`:\n\n```python\nfrom tfx_helper.visualization.display_metrics import display_metrics\n\ndisplay_metrics(path_getter('Evaluator', 'evaluation'))\n```\n\nTo view metrics by slice use:\n\n```python\ndisplay_metrics(path_getter('Evaluator', 'evaluation'), column='HomePlanet')\n```\n\nTo view the overall plots for your model use `display_plots`:\n\n```python\nfrom tfx_helper.visualization.display_metrics import display_plots\n\ndisplay_plots(path_getter('Evaluator', 'evaluation'))\n```\n\nTo view plots for a specific slice use:\n\n```python\ndisplay_plots(path_getter('Evaluator', 'evaluation'), slice_key={'HomePlanet': 'Earth'})\n```\n\nTo check whether the candidate model passed validation (when you have thresholds configured in `EvalConfig`)\nuse `passed_validation`:\n\n```python\n\nfrom tfx_helper.visualization.display_metrics import passed_validation\n\npassed_validation(path_getter('Evaluator', 'evaluation'))\n```\n\n#### Viewing binary classification confusion matrices\n\nTo view a binary classification confusion matrix constructed from the evaluation result\nof your model (data availability determined by presence of `ConfusionMatrixPlot`\nin `EvalConfig` to your `Evaluator` component):\n\n```python\nfrom tfx_helper.visualization.confusion_matrix import plot_binary_classification_confusion_matrix\n\nplot_binary_classification_confusion_matrix(path_getter('Evaluator', 'evaluation'))\n```\n\nWe provide a pipeline component for finding the best (by geometric mean) threshold\nto use from the thresholds gathered during evaluation:\n\n```python\nfrom tfx_helper.components.threshold_optimizer.component import (\n    BinaryClassificationThresholdOptimizer,\n)\n\nthreshold_optimizer = BinaryClassificationThresholdOptimizer(\n    model_evaluation=evaluator.outputs[\"evaluation\"]\n)\n```\n\nTo view the confusion plot with the optimized threshold use:\n\n```python\nfrom tfx_helper.visualization.threshold_optimization import load_best_threshold\n\nbest_threshold = load_best_threshold(\n    path_getter('ThresholdOptimizer', 'best_threshold')\n)\nplot_binary_classification_confusion_matrix(\n    path_getter('Evaluator', 'evaluation'), threshold=best_threshold\n)\n```\n\n## More info\n\nLink to article describing creation of *TFX* pipeline for sentiment analysis using\nthis helper library: [https://dlabs.ai/resources/courses/bert-sentiment-analysis-on-vertex-ai-using-tfx/](https://dlabs.ai/resources/courses/bert-sentiment-analysis-on-vertex-ai-using-tfx/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dlabsai/tfx-helper",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tfx-helper",
    "package_url": "https://pypi.org/project/tfx-helper/",
    "platform": null,
    "project_url": "https://pypi.org/project/tfx-helper/",
    "project_urls": {
      "Bug Tracker": "https://github.com/dlabsai/tfx-helper/issues",
      "Homepage": "https://github.com/dlabsai/tfx-helper"
    },
    "release_url": "https://pypi.org/project/tfx-helper/0.2.4/",
    "requires_dist": [
      "tfx[kfp] (<2,>=1.6.1)",
      "google-cloud-aiplatform",
      "pydantic",
      "typing-extensions",
      "absl-py",
      "numpy",
      "matplotlib"
    ],
    "requires_python": ">=3.7",
    "summary": "A helper library for TFX",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14621732,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5490400e51510778d699c4fe6195ed6e76dcecdf53f9452fef507b06531b5b76",
          "md5": "8ba52c076e9d9983abf4feb4495b3aff",
          "sha256": "ad97292d49dee35d38ecafd7a5814251093fe3e8bc95b6fecf54c34c9f67ec5b"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ba52c076e9d9983abf4feb4495b3aff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10118,
        "upload_time": "2022-02-21T12:59:01",
        "upload_time_iso_8601": "2022-02-21T12:59:01.327702Z",
        "url": "https://files.pythonhosted.org/packages/54/90/400e51510778d699c4fe6195ed6e76dcecdf53f9452fef507b06531b5b76/tfx_helper-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0614e49cca13d34ac8747015be71bb03324aa23ec92734aa936309aa1b57c16",
          "md5": "13489eb76ff59e2826fa5c16a19f3671",
          "sha256": "f776ece8badd28cfd0de5f2a01804437d387b6f1006c09bc078c42b63874fff0"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "13489eb76ff59e2826fa5c16a19f3671",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9847,
        "upload_time": "2022-02-21T12:59:03",
        "upload_time_iso_8601": "2022-02-21T12:59:03.634039Z",
        "url": "https://files.pythonhosted.org/packages/b0/61/4e49cca13d34ac8747015be71bb03324aa23ec92734aa936309aa1b57c16/tfx-helper-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2a4c4cbc234220253d15c03f29c25370fb80dea788f1bb01dab40800ed77305",
          "md5": "31744cacffc18b756235493f0c1905e9",
          "sha256": "ce4d8090510aaf3903896006aa85b80e2af42c2dcddf87dd39c776cd4631c0a1"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31744cacffc18b756235493f0c1905e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10279,
        "upload_time": "2022-02-23T10:09:18",
        "upload_time_iso_8601": "2022-02-23T10:09:18.975978Z",
        "url": "https://files.pythonhosted.org/packages/f2/a4/c4cbc234220253d15c03f29c25370fb80dea788f1bb01dab40800ed77305/tfx_helper-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d19a84eb31c95095a8a65311a6e57ebda6b76647f7e9ed6444f3c4734ed4ec12",
          "md5": "75851bdcca47c5d664bb44e6268f3cb4",
          "sha256": "62d3a149be75c6a203120b449e9c0e585c953aaf29395d3fc52270a07a285a59"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "75851bdcca47c5d664bb44e6268f3cb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9994,
        "upload_time": "2022-02-23T10:09:20",
        "upload_time_iso_8601": "2022-02-23T10:09:20.680892Z",
        "url": "https://files.pythonhosted.org/packages/d1/9a/84eb31c95095a8a65311a6e57ebda6b76647f7e9ed6444f3c4734ed4ec12/tfx-helper-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "500f8338f44c3fb3acbb1311af9859e430bbea687e6e5c24d2775416b12a2824",
          "md5": "4e3b48712f1534b57945b09c5a436e1f",
          "sha256": "359fe82fb02735269f05c5cde7c1718679c910296390ff2ef855def6cecc4cc6"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e3b48712f1534b57945b09c5a436e1f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10324,
        "upload_time": "2022-03-25T09:14:05",
        "upload_time_iso_8601": "2022-03-25T09:14:05.838234Z",
        "url": "https://files.pythonhosted.org/packages/50/0f/8338f44c3fb3acbb1311af9859e430bbea687e6e5c24d2775416b12a2824/tfx_helper-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dc28ab71f39b9445224140784735d162cae6c93ca9f1a1a8a398e111a163ec7",
          "md5": "f449b9c45d86e58b14ec5e5c88314105",
          "sha256": "326636a15d99afc007de6b3616986698a950f9f8794fc4be22dff776870040eb"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f449b9c45d86e58b14ec5e5c88314105",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10046,
        "upload_time": "2022-03-25T09:14:07",
        "upload_time_iso_8601": "2022-03-25T09:14:07.656186Z",
        "url": "https://files.pythonhosted.org/packages/4d/c2/8ab71f39b9445224140784735d162cae6c93ca9f1a1a8a398e111a163ec7/tfx-helper-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a3078d234d007c2e99c67b4f52b83742e2fa3971e8eecf43d68b672909ba701",
          "md5": "4257209fde1b10a2be6c687940c264e2",
          "sha256": "df14a8a89ce60cb94a78356eb34ac6e818ef7f14c061ea7d23d43f41126156dd"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4257209fde1b10a2be6c687940c264e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10343,
        "upload_time": "2022-05-01T15:59:15",
        "upload_time_iso_8601": "2022-05-01T15:59:15.952711Z",
        "url": "https://files.pythonhosted.org/packages/5a/30/78d234d007c2e99c67b4f52b83742e2fa3971e8eecf43d68b672909ba701/tfx_helper-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63503a5c8915e43e1a72b6d73f3e1ee26a0068031ba79f86cdea4c1856dccf33",
          "md5": "420ab87815c27aa6485c67884612d814",
          "sha256": "6387becd3f15d12cb16e5d9f5522f6292f77eac1216d1543139cb4f54e3f2778"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "420ab87815c27aa6485c67884612d814",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10047,
        "upload_time": "2022-05-01T15:59:17",
        "upload_time_iso_8601": "2022-05-01T15:59:17.869526Z",
        "url": "https://files.pythonhosted.org/packages/63/50/3a5c8915e43e1a72b6d73f3e1ee26a0068031ba79f86cdea4c1856dccf33/tfx-helper-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "369fa1206297ea96ba4b6b033359300514c7c9cccbae2a05af90d6941c7967be",
          "md5": "497d6ba0b46b4578403e89b639343831",
          "sha256": "3c6c1f57b6aef5097ef9c3fee9dce5f5a6412b8b9d4a76ca5e2f7a5859feadcf"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "497d6ba0b46b4578403e89b639343831",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19948,
        "upload_time": "2022-07-15T08:20:37",
        "upload_time_iso_8601": "2022-07-15T08:20:37.308012Z",
        "url": "https://files.pythonhosted.org/packages/36/9f/a1206297ea96ba4b6b033359300514c7c9cccbae2a05af90d6941c7967be/tfx_helper-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d596275fd2679aecbb4c26a395e27577cd2a9ac76af46aba2e69d030768d30df",
          "md5": "40c45e5abdb38351f45e05531b0ce4cf",
          "sha256": "b0b5aa35bf8da5b77c045f8597b02c7c5178564d3b4c971462b34da40e344ed3"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "40c45e5abdb38351f45e05531b0ce4cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17269,
        "upload_time": "2022-07-15T08:20:38",
        "upload_time_iso_8601": "2022-07-15T08:20:38.744354Z",
        "url": "https://files.pythonhosted.org/packages/d5/96/275fd2679aecbb4c26a395e27577cd2a9ac76af46aba2e69d030768d30df/tfx-helper-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e72177b2b9371798120b2b31d032b8dd72a02876c27037fd6fbd64933f74c813",
          "md5": "517888b89c9a2634c172b2cc21761bd3",
          "sha256": "a22f46c40118e630f559621e5049f9f36b5456bdced7c1cdbec8a1cbcad21449"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "517888b89c9a2634c172b2cc21761bd3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20390,
        "upload_time": "2022-07-21T11:57:09",
        "upload_time_iso_8601": "2022-07-21T11:57:09.146177Z",
        "url": "https://files.pythonhosted.org/packages/e7/21/77b2b9371798120b2b31d032b8dd72a02876c27037fd6fbd64933f74c813/tfx_helper-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b2e0d0a2a114e6b1b0b8d32bfeff2c294df301da98966df67aac928b2ee335f",
          "md5": "b3c16f29beac3db902984094be0dfae0",
          "sha256": "749119f324348d693ea69ae91f4c3ed325da7af12fca21bf91714ab161597358"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b3c16f29beac3db902984094be0dfae0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17803,
        "upload_time": "2022-07-21T11:57:12",
        "upload_time_iso_8601": "2022-07-21T11:57:12.722028Z",
        "url": "https://files.pythonhosted.org/packages/1b/2e/0d0a2a114e6b1b0b8d32bfeff2c294df301da98966df67aac928b2ee335f/tfx-helper-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a36d6bcf6f7f206c849662fc5560bf8269c252828acb123fac1d89b79cd3865f",
          "md5": "af06d02cde6d933d56c5850ef06c9b40",
          "sha256": "553b0ef9c8799a2a435828b824e56be1b90b4ca40559b753c47bbd208fa17661"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af06d02cde6d933d56c5850ef06c9b40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20407,
        "upload_time": "2022-07-21T12:09:05",
        "upload_time_iso_8601": "2022-07-21T12:09:05.291479Z",
        "url": "https://files.pythonhosted.org/packages/a3/6d/6bcf6f7f206c849662fc5560bf8269c252828acb123fac1d89b79cd3865f/tfx_helper-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cec4194d738d90e97ad6672d434b25625de3bbfac667f7f72f84c85c921ad248",
          "md5": "4952a7e122b42b9c7f700d2f7e8fde0b",
          "sha256": "8aacd905ced40ff574594e24b45ef81d531fa742d1ce81d7d40a4f1493a342aa"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4952a7e122b42b9c7f700d2f7e8fde0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17794,
        "upload_time": "2022-07-21T12:09:08",
        "upload_time_iso_8601": "2022-07-21T12:09:08.940522Z",
        "url": "https://files.pythonhosted.org/packages/ce/c4/194d738d90e97ad6672d434b25625de3bbfac667f7f72f84c85c921ad248/tfx-helper-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29685378a1c75308dfed4f7df55b249fa00e57ac018f9f60f3165706117d1b14",
          "md5": "98c4c6af070613fbdcec794f08042c16",
          "sha256": "f2f54a2770288341ed1e904b4dcf6898b3cdc987fef5a9e87ca7e2010baad5a7"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98c4c6af070613fbdcec794f08042c16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20544,
        "upload_time": "2022-07-22T05:56:50",
        "upload_time_iso_8601": "2022-07-22T05:56:50.320089Z",
        "url": "https://files.pythonhosted.org/packages/29/68/5378a1c75308dfed4f7df55b249fa00e57ac018f9f60f3165706117d1b14/tfx_helper-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c3ae13727f37cf576c77f81b9eee4725043ef087507920194aca3c0a73bf135",
          "md5": "5ba03fde23d27462078b000128600cc3",
          "sha256": "e1fba39fa3a0c787c962345f1c451fda66867f544b888148719c4ee15e30158f"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5ba03fde23d27462078b000128600cc3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17929,
        "upload_time": "2022-07-22T05:56:55",
        "upload_time_iso_8601": "2022-07-22T05:56:55.369088Z",
        "url": "https://files.pythonhosted.org/packages/9c/3a/e13727f37cf576c77f81b9eee4725043ef087507920194aca3c0a73bf135/tfx-helper-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c09eaf94d1248110c1f89186cac97d63262d05e60011bc7fc48a4417c84fda6",
          "md5": "d305ea6803b64fa5b70cd5c74c8acc97",
          "sha256": "188998cb192d8c11fb8d542f33bf3208078993300bf9f2085be9b2f829f1dd63"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d305ea6803b64fa5b70cd5c74c8acc97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20572,
        "upload_time": "2022-07-22T12:05:50",
        "upload_time_iso_8601": "2022-07-22T12:05:50.514880Z",
        "url": "https://files.pythonhosted.org/packages/1c/09/eaf94d1248110c1f89186cac97d63262d05e60011bc7fc48a4417c84fda6/tfx_helper-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "632e7e46cf01ee8b4c12fcb393aeb56aa4951bbe153211c75a1a4d921fffb5ce",
          "md5": "165198264134a38cc87b31cc5050c797",
          "sha256": "e64b710fd15e2ceb6fa97c0b408f43dc5aa82626313a3b8dd93c173863849472"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "165198264134a38cc87b31cc5050c797",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17938,
        "upload_time": "2022-07-22T12:05:56",
        "upload_time_iso_8601": "2022-07-22T12:05:56.550983Z",
        "url": "https://files.pythonhosted.org/packages/63/2e/7e46cf01ee8b4c12fcb393aeb56aa4951bbe153211c75a1a4d921fffb5ce/tfx-helper-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03769035e288fbf54bec0a1b7013ea99506143d0a23fe8e9be7d2df121442ffa",
          "md5": "7e36c73ed6aadaad9303ede2234c131c",
          "sha256": "faa2c4835451f8fb5269c430a2138e722be171e8488c0fb31013f5c5d99150be"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e36c73ed6aadaad9303ede2234c131c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23157,
        "upload_time": "2022-07-27T05:58:57",
        "upload_time_iso_8601": "2022-07-27T05:58:57.881277Z",
        "url": "https://files.pythonhosted.org/packages/03/76/9035e288fbf54bec0a1b7013ea99506143d0a23fe8e9be7d2df121442ffa/tfx_helper-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89433721dff47d18d53e09e876ca9ad85f8a5d594c715f6d7b35813a763c336e",
          "md5": "e47cc10d152bff678576739e5420e53c",
          "sha256": "d8b823d76e0f7a032204e5b64f13648a630b505943d872ac79c55f3a601f6514"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e47cc10d152bff678576739e5420e53c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19366,
        "upload_time": "2022-07-27T05:59:05",
        "upload_time_iso_8601": "2022-07-27T05:59:05.821706Z",
        "url": "https://files.pythonhosted.org/packages/89/43/3721dff47d18d53e09e876ca9ad85f8a5d594c715f6d7b35813a763c336e/tfx-helper-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3606e7cb3287dc872aed891cef8a196caa76641b90cb5753d7fce6abd1e0ac9f",
          "md5": "f1e62ef83f7b287a9d9519f210bc5cce",
          "sha256": "288289d6283dcda7a87b4a84052261b2418e3bea6ac8f2ea2d4ad9cadecd0774"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1e62ef83f7b287a9d9519f210bc5cce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23619,
        "upload_time": "2022-07-27T06:53:32",
        "upload_time_iso_8601": "2022-07-27T06:53:32.969670Z",
        "url": "https://files.pythonhosted.org/packages/36/06/e7cb3287dc872aed891cef8a196caa76641b90cb5753d7fce6abd1e0ac9f/tfx_helper-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "046a415ee6466f08238ce0380253deba921c5f099e2a1303968f8d6fbe8aff93",
          "md5": "e1fd660309eca2e551948ae5f3131f91",
          "sha256": "4e098beb76ebf402b5908bfdd230428875022540379f4c608542c57684033c09"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e1fd660309eca2e551948ae5f3131f91",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19533,
        "upload_time": "2022-07-27T06:53:40",
        "upload_time_iso_8601": "2022-07-27T06:53:40.063583Z",
        "url": "https://files.pythonhosted.org/packages/04/6a/415ee6466f08238ce0380253deba921c5f099e2a1303968f8d6fbe8aff93/tfx-helper-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ce5fb38541fa4ed19440e3136112940411629d5f4072a5cc9f7671224ddd4fc",
          "md5": "770e9ee01a6e51afd59e3a9c70946f66",
          "sha256": "72e998010e210cf61836cdb30bb3de866fe6f081d775cfd097d8da825cd25e98"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "770e9ee01a6e51afd59e3a9c70946f66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23496,
        "upload_time": "2022-07-27T07:43:03",
        "upload_time_iso_8601": "2022-07-27T07:43:03.800884Z",
        "url": "https://files.pythonhosted.org/packages/0c/e5/fb38541fa4ed19440e3136112940411629d5f4072a5cc9f7671224ddd4fc/tfx_helper-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd805b8f570092d3882bfce2d4233fdfef4a3629639a98b68001775777c8fe58",
          "md5": "6ac260572590265a798b67c10e295116",
          "sha256": "a65e4fa79f59b4b6a52b2d108ef37a5dd550b9253c5ab195f35acf3b7750c3d4"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6ac260572590265a798b67c10e295116",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19425,
        "upload_time": "2022-07-27T07:43:12",
        "upload_time_iso_8601": "2022-07-27T07:43:12.286174Z",
        "url": "https://files.pythonhosted.org/packages/bd/80/5b8f570092d3882bfce2d4233fdfef4a3629639a98b68001775777c8fe58/tfx-helper-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16f6748f03d767654b196a39e90c1da48da7e930f7cb5f56dcb2d116653bc02c",
          "md5": "b7c124898f0ed8a24585c7295731a085",
          "sha256": "4dfa6ad180a76215c0b022d4b59a3269c394403c99fdf8f77949f482c006ea72"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7c124898f0ed8a24585c7295731a085",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23649,
        "upload_time": "2022-08-01T12:06:32",
        "upload_time_iso_8601": "2022-08-01T12:06:32.902506Z",
        "url": "https://files.pythonhosted.org/packages/16/f6/748f03d767654b196a39e90c1da48da7e930f7cb5f56dcb2d116653bc02c/tfx_helper-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37278b118a6a7807a57787e4f121ce57ec78803b161feedb21be3290baa595c7",
          "md5": "025548f9f404a3cb8de053456ab94fa8",
          "sha256": "b8a5f62c1e99d9f987940ebb502d2d4254aea9dc0314d2ea1d65f6a5dcc3e122"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "025548f9f404a3cb8de053456ab94fa8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19606,
        "upload_time": "2022-08-01T12:06:41",
        "upload_time_iso_8601": "2022-08-01T12:06:41.608951Z",
        "url": "https://files.pythonhosted.org/packages/37/27/8b118a6a7807a57787e4f121ce57ec78803b161feedb21be3290baa595c7/tfx-helper-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cd7871d2f204fe533121c677fcac1c81f265dd5bbd360bbd17d28d0f5a420b8",
          "md5": "5e70865127b31692d02f95a3a39ae543",
          "sha256": "637f56ffb2bfb86cd72f81cf743858e4492f11eadbfc8d3b450a07aa0bc4181c"
        },
        "downloads": -1,
        "filename": "tfx_helper-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e70865127b31692d02f95a3a39ae543",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23796,
        "upload_time": "2022-08-02T05:55:30",
        "upload_time_iso_8601": "2022-08-02T05:55:30.526124Z",
        "url": "https://files.pythonhosted.org/packages/1c/d7/871d2f204fe533121c677fcac1c81f265dd5bbd360bbd17d28d0f5a420b8/tfx_helper-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cef47f7c4a9a5b3045f775de9f768914d4539e29b4b5cf9b20fd25d831bb6419",
          "md5": "b103961b5f592c9d24b8b69c91a214bb",
          "sha256": "d338a15b2ca9e8f6a57d953120098f87e169c639762b73ea6db01d8fa4fcf1ed"
        },
        "downloads": -1,
        "filename": "tfx-helper-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b103961b5f592c9d24b8b69c91a214bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19878,
        "upload_time": "2022-08-02T05:55:41",
        "upload_time_iso_8601": "2022-08-02T05:55:41.574081Z",
        "url": "https://files.pythonhosted.org/packages/ce/f4/7f7c4a9a5b3045f775de9f768914d4539e29b4b5cf9b20fd25d831bb6419/tfx-helper-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1cd7871d2f204fe533121c677fcac1c81f265dd5bbd360bbd17d28d0f5a420b8",
        "md5": "5e70865127b31692d02f95a3a39ae543",
        "sha256": "637f56ffb2bfb86cd72f81cf743858e4492f11eadbfc8d3b450a07aa0bc4181c"
      },
      "downloads": -1,
      "filename": "tfx_helper-0.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5e70865127b31692d02f95a3a39ae543",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23796,
      "upload_time": "2022-08-02T05:55:30",
      "upload_time_iso_8601": "2022-08-02T05:55:30.526124Z",
      "url": "https://files.pythonhosted.org/packages/1c/d7/871d2f204fe533121c677fcac1c81f265dd5bbd360bbd17d28d0f5a420b8/tfx_helper-0.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cef47f7c4a9a5b3045f775de9f768914d4539e29b4b5cf9b20fd25d831bb6419",
        "md5": "b103961b5f592c9d24b8b69c91a214bb",
        "sha256": "d338a15b2ca9e8f6a57d953120098f87e169c639762b73ea6db01d8fa4fcf1ed"
      },
      "downloads": -1,
      "filename": "tfx-helper-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "b103961b5f592c9d24b8b69c91a214bb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 19878,
      "upload_time": "2022-08-02T05:55:41",
      "upload_time_iso_8601": "2022-08-02T05:55:41.574081Z",
      "url": "https://files.pythonhosted.org/packages/ce/f4/7f7c4a9a5b3045f775de9f768914d4539e29b4b5cf9b20fd25d831bb6419/tfx-helper-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}