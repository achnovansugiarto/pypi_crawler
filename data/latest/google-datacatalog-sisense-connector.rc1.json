{
  "info": {
    "author": "Google LLC",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# google-datacatalog-sisense-connector\n\nPackage for ingesting [Sisense](https://www.sisense.com) metadata into Google\nCloud Data Catalog, currently supporting the below assets:\n- Folder\n- Dashboard\n- Widget\n\nThis sample connector creates Data Catalog tags to enable a data lineage\nmechanism that allows users to search the catalog to find where/which\nElastiCube Table fields are used in Widgets or Dashboards. To do so, it\ncurrently processes JAQL query metadata from:\n- Dashboard filters\n- Widgets fields and filters\n- Nested [formulas](https://sisense.dev/reference/jaql/#formulas)\n- Nested `filter.by` properties, used by [top/bottom filters](https://sisense.dev/reference/jaql/#top-bottom-filters)\n\n**Disclaimer: This is not an officially supported Google product.**\n\n> This connector is a work in progress!\n\n<!--\n  ⚠️ DO NOT UPDATE THE TABLE OF CONTENTS MANUALLY ️️⚠️\n  run `npx markdown-toc -i README.md`.\n\n  Please stick to 80-character line wraps as much as you can.\n-->\n\n## Table of Contents\n\n<!-- toc -->\n\n- [1. Installation](#1-installation)\n  * [1.1. Mac/Linux](#11-maclinux)\n  * [1.2. Windows](#12-windows)\n  * [1.3. Install from source](#13-install-from-source)\n    + [1.3.1. Get the code](#131-get-the-code)\n    + [1.3.2. Create and activate a *virtualenv*](#132-create-and-activate-a-virtualenv)\n    + [1.3.3. Install the library](#133-install-the-library)\n- [2. Environment setup](#2-environment-setup)\n  * [2.1. Auth credentials](#21-auth-credentials)\n    + [2.1.1. Create a GCP Service Account and grant it below roles](#211-create-a-gcp-service-account-and-grant-it-below-roles)\n    + [2.1.2. Download a JSON key and save it as](#212-download-a-json-key-and-save-it-as)\n  * [2.2. Set environment variables](#22-set-environment-variables)\n- [3. Running the connector](#3-running-the-connector)\n  * [3.1. sync-catalog](#31-sync-catalog)\n    + [3.1.1. Python entry point](#311-python-entry-point)\n    + [3.1.2. Docker entry point](#312-docker-entry-point)\n  * [3.2. find-elasticube-deps](#32-find-elasticube-deps)\n    + [3.2.1. Python entry point](#321-python-entry-point)\n    + [3.2.2. Docker entry point](#322-docker-entry-point)\n  * [3.3. list-elasticube-deps](#33-list-elasticube-deps)\n    + [3.3.1. Python entry point](#331-python-entry-point)\n    + [3.3.2. Docker entry point](#332-docker-entry-point)\n- [4. Developer environment](#4-developer-environment)\n  * [4.1. Install and run the YAPF formatter](#41-install-and-run-the-yapf-formatter)\n  * [4.2. Install and run the Flake8 linter](#42-install-and-run-the-flake8-linter)\n  * [4.3. Run Tests](#43-run-tests)\n  * [4.4. Additional resources](#44-additional-resources)\n- [5. Templates, Tags, and Data Lineage](#5-templates-tags-and-data-lineage)\n- [6. Troubleshooting](#6-troubleshooting)\n  * [6.1. Sisense APIs compatibility](#61-sisense-apis-compatibility)\n  * [6.2. Data Catalog quota](#62-data-catalog-quota)\n\n<!-- tocstop -->\n\n---\n\n## 1. Installation\n\nInstall this library in a [virtualenv][1] using pip. [Virtualenv][1] is a tool\nto create isolated Python environments. The basic problem it addresses is one\nof dependencies and versions, and indirectly permissions.\n\nWith [virtualenv][1], it's possible to install this library without needing\nsystem install permissions, and without clashing with the installed system\ndependencies. Make sure you use Python 3.6+.\n\n### 1.1. Mac/Linux\n\n```shell script\npip3 install virtualenv\nvirtualenv --python python3.6 <your-env>\nsource <your-env>/bin/activate\n<your-env>/bin/pip install google-datacatalog-sisense-connector\n```\n\n### 1.2. Windows\n\n```shell script\npip3 install virtualenv\nvirtualenv --python python3.6 <your-env>\n<your-env>\\Scripts\\activate\n<your-env>\\Scripts\\pip.exe install google-datacatalog-sisense-connector\n```\n\n### 1.3. Install from source\n\n#### 1.3.1. Get the code\n\n````shell script\ngit clone https://github.com/GoogleCloudPlatform/datacatalog-connectors-bi/\ncd datacatalog-connectors-bi/google-datacatalog-sisense-connector\n````\n\n#### 1.3.2. Create and activate a *virtualenv*\n\n```shell script\npip3 install virtualenv\nvirtualenv --python python3.6 <your-env>\nsource <your-env>/bin/activate\n```\n\n#### 1.3.3. Install the library\n\n```shell script\npip install .\n```\n\n## 2. Environment setup\n\n### 2.1. Auth credentials\n\n#### 2.1.1. Create a GCP Service Account and grant it below roles\n\n- Data Catalog Admin\n\n#### 2.1.2. Download a JSON key and save it as\n- `<YOUR-CREDENTIALS_FILES_FOLDER>/sisense2dc-datacatalog-credentials.json`\n\n> Please notice this folder and file will be required in next steps.\n\n### 2.2. Set environment variables\n\nReplace below values according to your environment:\n\n```shell script\nexport GOOGLE_APPLICATION_CREDENTIALS=datacatalog_credentials_file\n\nexport SISENSE2DC_SISENSE_SERVER=sisense_server\nexport SISENSE2DC_SISENSE_USERNAME=sisense_username\nexport SISENSE2DC_SISENSE_PASSWORD=sisense_password\nexport SISENSE2DC_DATACATALOG_PROJECT_ID=google_cloud_project_id\nexport SISENSE2DC_DATACATALOG_LOCATION_ID=google_cloud_location_id\n```\n\n> Replace above values according to your environment. The Data Catalog\n> credentials file was saved in [step\n> 2.1.2](#212-download-a-json-key-and-save-it-as).\n\n## 3. Running the connector\n\n### 3.1. sync-catalog\n\nSynchronizes Google Data Catalog with a given Sisense server.\n\n- The `--datacatalog-location-id` argument is optional and defaults to `us`.\n\n#### 3.1.1. Python entry point\n\n- Virtualenv\n\n```shell script\ngoogle-datacatalog-sisense-connector sync-catalog \\\n  --sisense-server $SISENSE2DC_SISENSE_SERVER \\\n  --sisense-username $SISENSE2DC_SISENSE_USERNAME \\\n  --sisense-password $SISENSE2DC_SISENSE_PASSWORD \\\n  --datacatalog-project-id $SISENSE2DC_DATACATALOG_PROJECT_ID \\\n  [--datacatalog-location-id $SISENSE2DC_DATACATALOG_LOCATION_ID]\n```\n\n#### 3.1.2. Docker entry point\n\n```shell script\ndocker build --rm --tag sisense2datacatalog .\ndocker run --rm --tty -v YOUR-CREDENTIALS_FILES_FOLDER:/data \\\n  sisense2datacatalog sync-catalog \\\n  --sisense-server $SISENSE2DC_SISENSE_SERVER \\\n  --sisense-username $SISENSE2DC_SISENSE_USERNAME \\\n  --sisense-password $SISENSE2DC_SISENSE_PASSWORD \\\n  --datacatalog-project-id $SISENSE2DC_DATACATALOG_PROJECT_ID \\\n  [--datacatalog-location-id $SISENSE2DC_DATACATALOG_LOCATION_ID]\n```\n\n### 3.2. find-elasticube-deps\n\nFinds ElastiCube dependencies through catalog search and prints them in the\nconsole.\n\n#### 3.2.1. Python entry point\n\n- Virtualenv\n\n```shell script\ngoogle-datacatalog-sisense-connector find-elasticube-deps \\\n  --datasource <datasource> \\\n  --table <table> \\\n  --column <column> \\\n  --datacatalog-project-id $SISENSE2DC_DATACATALOG_PROJECT_ID\n```\n\n#### 3.2.2. Docker entry point\n\n```shell script\ndocker build --rm --tag sisense2datacatalog .\ndocker run --rm --tty -v YOUR-CREDENTIALS_FILES_FOLDER:/data \\\n  sisense2datacatalog find-elasticube-deps \\\n  --datasource <datasource> \\\n  --table <table> \\\n  --column <column> \\\n  --datacatalog-project-id $SISENSE2DC_DATACATALOG_PROJECT_ID\n```\n\n### 3.3. list-elasticube-deps\n\nLists ElastiCube dependencies for a given Sisense Dashboard or Widget and\nprints them in the console.\n\n#### 3.3.1. Python entry point\n\n- Virtualenv\n\n```shell script\ngoogle-datacatalog-sisense-connector list-elasticube-deps \\\n  --asset-url <asset-url> \\\n  --datacatalog-project-id $SISENSE2DC_DATACATALOG_PROJECT_ID\n```\n\n#### 3.3.2. Docker entry point\n\n```shell script\ndocker build --rm --tag sisense2datacatalog .\ndocker run --rm --tty -v YOUR-CREDENTIALS_FILES_FOLDER:/data \\\n  sisense2datacatalog list-elasticube-deps \\\n  --asset-url <asset-url> \\\n  --datacatalog-project-id $SISENSE2DC_DATACATALOG_PROJECT_ID\n```\n\n## 4. Developer environment\n\n### 4.1. Install and run the YAPF formatter\n\n```shell script\npip install --upgrade yapf\n\n# Auto update files\nyapf --in-place --recursive src tests\n\n# Show diff\nyapf --diff --recursive src tests\n\n# Set up pre-commit hook\n# From the root of your git project.\ncurl -o pre-commit.sh https://raw.githubusercontent.com/google/yapf/master/plugins/pre-commit.sh\nchmod a+x pre-commit.sh\nmv pre-commit.sh .git/hooks/pre-commit\n```\n\n### 4.2. Install and run the Flake8 linter\n\n```shell script\npip install --upgrade flake8\nflake8 src tests\n```\n\n### 4.3. Run Tests\n\n```shell script\npython setup.py test\n```\n\n### 4.4. Additional resources\n\nPlease refer to the [Developer Resources\ndocumentation](docs/developer-resources).\n\n## 5. Templates, Tags, and Data Lineage\n\nThe Data Catalog Tag Templates created by this connector and their usage\nscenarios are described below:\n\n| TAG TEMPLATE                                      | FIELDS                                                                                                                                                                                                                                                                        | USAGE                                                                                                        |\n| ------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------ |\n| Folder Metadata (`sisense_folder_metadata`)       | <ul><li>Id</li><li>Owner username</li><li>Owner name</li><li>Id of Parent</li><li>Parent Folder</li><li>Data Catalog Entry for the parent Folder</li><li>Has children</li><li>Child count</li><li>Has dashboards</li><li>Dashboard count</li><li>Sisense Server Url</li></ul> | Store additional metadata for Folder-related Entries.                                                        |\n| Dashboard Metadata (`sisense_dashboard_metadata`) | <ul><li>Id</li><li>Owner username</li><li>Owner name</li><li>Folder Id</li><li>Folder Name</li><li>Data Catalog Entry for the Folder</li><li>Data Source</li><li>Time it was last published</li><li>Time it was last opened</li><li>Sisense Server Url</li></ul>              | Store additional metadata for Dashboard-related Entries.                                                     |\n| Widget Metadata (`sisense_widget_metadata`)       | <ul><li>Id</li><li>Type</li><li>Subtype</li><li>Owner username</li><li>Owner name</li><li>Dashboard Id</li><li>Dashboard Title</li><li>Data Catalog Entry for the Dashboard</li><li>Data Source</li><li>Sisense Server Url</li></ul>                                          | Store additional metadata for Widget-related Entries.                                                        |\n| JAQL Metadata (`sisense_jaql_metadata`)           | <ul><li>Table</li><li>Column</li><li>Dimension</li><li>Formula</li><li>Aggregation</li><li>Sisense Server Url</li></ul>                                                                                                                                                       | Store JAQL metadata for ElasticCube-dependent entities such as Dashboard filters, Widget fields and filters. |\n\nPlease notice the connector creates Data Catalog Tags for most of the Dashboard\nand Widget properties that depend on JAQL queries, e.g., fields, filters,\nnested formulas, and top/bottom filters. Such tags, created from the **JAQL\nMetadata** template, are quite simple: ~4 fields each. The connector uses lots\nof them to enable column-level lineage tracking for a given Sisense server.\n\n## 6. Troubleshooting\n\n### 6.1. Sisense APIs compatibility\n\nThe connector may fail during the scrape stage if the Sisense API do not return\nmetadata in the expected format. As a reference, the below versions were\nalready validated:\n\n- Sisense REST API v1.0\n\n| VERSION       | RESULT  |\n| ------------- | :-----: |\n| Windows 8.2.5 | SUCCESS |\n\n### 6.2. Data Catalog quota\n\nIn case a connector execution hits Data Catalog quota limit, an error will be\nraised and logged with the following details, depending on the performed\noperation (READ/WRITE/SEARCH): \n\n```\nstatus = StatusCode.RESOURCE_EXHAUSTED\ndetails = \"Quota exceeded for quota metric 'Read requests' and limit 'Read requests per minute' of service 'datacatalog.googleapis.com' for consumer 'project_number:1111111111111'.\"\ndebug_error_string = \n\"{\"created\":\"@1587396969.506556000\", \"description\":\"Error received from peer ipv4:172.217.29.42:443\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1056,\"grpc_message\":\"Quota exceeded for quota metric 'Read requests' and limit 'Read requests per minute' of service 'datacatalog.googleapis.com' for consumer 'project_number:1111111111111'.\",\"grpc_status\":8}\"\n```\n\nFor more information on Data Catalog quota, please refer to the [product\ndocumentation][2].\n\n[1]: https://virtualenv.pypa.io/en/latest/\n[2]: https://cloud.google.com/data-catalog/docs/resources/quotas\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "google-datacatalog-sisense-connector",
    "package_url": "https://pypi.org/project/google-datacatalog-sisense-connector/",
    "platform": "Posix; MacOS X; Windows",
    "project_url": "https://pypi.org/project/google-datacatalog-sisense-connector/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/google-datacatalog-sisense-connector/0.1.0/",
    "requires_dist": [
      "google-datacatalog-connectors-commons (~=0.6.9)",
      "tabulate (~=0.8.9)"
    ],
    "requires_python": "",
    "summary": "Package for ingesting Sisense metadata into Google Cloud Data Catalog",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12095017,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91ec0969b16b56095f6ee371478bf215338863f2d2e1d034925cb2a041f37ed0",
          "md5": "69d4ff56cf62f2e02472512973d32284",
          "sha256": "ae601a764e9c91f3a342ff3dd8a7628c3d372b147babf642c5ed499e9a0bdfea"
        },
        "downloads": -1,
        "filename": "google_datacatalog_sisense_connector-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "69d4ff56cf62f2e02472512973d32284",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 44277,
        "upload_time": "2021-11-22T19:36:41",
        "upload_time_iso_8601": "2021-11-22T19:36:41.145194Z",
        "url": "https://files.pythonhosted.org/packages/91/ec/0969b16b56095f6ee371478bf215338863f2d2e1d034925cb2a041f37ed0/google_datacatalog_sisense_connector-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "646e6a21f1c95de7df2f71154de2a7b3cbc07ce30a14faa79d75b01955e55385",
          "md5": "5babcdccd2b26c68f9410df7d7f7bf06",
          "sha256": "2c47055446de74525bcee5bfbef141dbc0a7d38e65326751e10a3d4a0295bef9"
        },
        "downloads": -1,
        "filename": "google-datacatalog-sisense-connector-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5babcdccd2b26c68f9410df7d7f7bf06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27430,
        "upload_time": "2021-11-22T19:36:42",
        "upload_time_iso_8601": "2021-11-22T19:36:42.966606Z",
        "url": "https://files.pythonhosted.org/packages/64/6e/6a21f1c95de7df2f71154de2a7b3cbc07ce30a14faa79d75b01955e55385/google-datacatalog-sisense-connector-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91ec0969b16b56095f6ee371478bf215338863f2d2e1d034925cb2a041f37ed0",
        "md5": "69d4ff56cf62f2e02472512973d32284",
        "sha256": "ae601a764e9c91f3a342ff3dd8a7628c3d372b147babf642c5ed499e9a0bdfea"
      },
      "downloads": -1,
      "filename": "google_datacatalog_sisense_connector-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "69d4ff56cf62f2e02472512973d32284",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 44277,
      "upload_time": "2021-11-22T19:36:41",
      "upload_time_iso_8601": "2021-11-22T19:36:41.145194Z",
      "url": "https://files.pythonhosted.org/packages/91/ec/0969b16b56095f6ee371478bf215338863f2d2e1d034925cb2a041f37ed0/google_datacatalog_sisense_connector-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "646e6a21f1c95de7df2f71154de2a7b3cbc07ce30a14faa79d75b01955e55385",
        "md5": "5babcdccd2b26c68f9410df7d7f7bf06",
        "sha256": "2c47055446de74525bcee5bfbef141dbc0a7d38e65326751e10a3d4a0295bef9"
      },
      "downloads": -1,
      "filename": "google-datacatalog-sisense-connector-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5babcdccd2b26c68f9410df7d7f7bf06",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27430,
      "upload_time": "2021-11-22T19:36:42",
      "upload_time_iso_8601": "2021-11-22T19:36:42.966606Z",
      "url": "https://files.pythonhosted.org/packages/64/6e/6a21f1c95de7df2f71154de2a7b3cbc07ce30a14faa79d75b01955e55385/google-datacatalog-sisense-connector-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}