{
  "info": {
    "author": "Digital Delivery",
    "author_email": "digital-delivery@arm.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Entitlements and Download Manager\n\nThis package installs a CLI that allows users to see their entitlements,\nreleased products for those entitlements and to download those products.\n\n\n## Installation\n\n### Basic Installation\n```bash\n$ python -m pip install edmgr\n```\nPython 3.7+ supported. Recommended Python 3.9+.\n\n**Note:** Support for Python 3.7 will end on 2023-06-27 as it will have reached\nits End-of-Life. (See [Status of Python Versions](https://devguide.python.org/versions/)\nfor more information)\n\n\n### IBM Aspera FASP Downloads\nIn order to enable IBM Aspera FASP protocol for downloading artifacts, IBM\naspera-cli and its FASP protocol extension are required.\n\nPlease install it by following the instructions at\n - [IBM Aspera CLI Installation](https://github.com/IBM/aspera-cli#installation)\n - [IBM Aspera CLI FASP protocol](https://github.com/IBM/aspera-cli#fasp-protocol)\n\nPlease make sure that `ascli` executable is on your `$PATH` when running edmgr CLI.\n\n\n## Usage - API Wrapper\n\n```python\nfrom edmgr import Client\nimport os\n\n# Instanciate a Client using a JWT\nclient = Client(token=os.getenv('access_token'))\n\n# NOTE: Client will look for EDM_ACCESS_TOKEN environment variable, if set it\n# will use its value as a token thus a Client instance could be created\n# without passing any argument.\n\nclient = Client()\n\n# NOTE: Creating a Client instance with token keyword takes precedence over\n# EDM_ACCESS_TOKEN environment variable.\n\n# Instanciate a Client using username and password\nclient = Client(username=os.getenv('username'), password=os.getenv('password'))\n\n# NOTE: When creating a Client instance with username and password, the\n# client will obtain an access token and automatically refresh it once\n# expired.\n\n# NOTE: When EDM_ACCESS_TOKEN environment variable is set, its value will take\n# precendence over username and password login method and won't be refreshed once expired.\n\n# Get a list of entitlements\nresponse: list = client.get_entitlements()\n\n# Get a paginated list of entitlements\nresponse: list = client.get_entitlements(params={'offset': 1, 'limit': 10})\n\n# Get a list with a single entitlement\nresponse: list = client.get_entitlements(entitlement_id=\"388295\")\n\n# Get a list of entitlements by performing a search query\n# Note: not all the keys are searchable\nresponse: list = client.find_entitlements({\"product.id\": \"DS000\"})\n\n# Get a list of releases\nresponse: list = client.get_releases(entitlement_id=\"388295\")\n\n# Get a list with a single release\nresponse: list = client.get_releases(\n  entitlement_id=\"388295\", release_id=\"9456330a-54c6-48b9-a92d-990f9c302b42\"\n)\n\n# Get a list of artifacts\nresponse: list = client.get_artifacts(\n  entitlement_id=\"388295\", release_id=\"9456330a-54c6-48b9-a92d-990f9c302b42\"\n)\n\n# Get a list with a single artifact\nresponse: list = client.get_artifacts(\n  entitlement_id=\"388295\", release_id=\"9456330a-54c6-48b9-a92d-990f9c302b42\",\n  artifact_id=\"942b3b7d-d6fc-4fb6-ac6f-5afbf898514c\"\n)\n\n# Get artifact's download url\nresponse: dict = client.get_artifact_download_url(\n  entitlement_id=\"388295\", release_id=\"9456330a-54c6-48b9-a92d-990f9c302b42\",\n  artifact_id=\"942b3b7d-d6fc-4fb6-ac6f-5afbf898514c\"\n)\n\n# Download all artifacts for a release (in the current directory)\nartifacts: list = client.get_artifacts(\n  entitlement_id=\"388295\", release_id=\"9456330a-54c6-48b9-a92d-990f9c302b42\",\n)\nfor file_name, artifact_id in map(lambda x: (x['fileName'], x['id']), artifacts):\n    with open(file_name, \"wb\") as file:\n        client.download_artifact(\n          file,\n          entitlement_id=\"388295\",\n          release_id=\"9456330a-54c6-48b9-a92d-990f9c302b42\",\n          artifact_id=artifact_id\n        )\n```\n\n\n## Usage - CLI\n\n### Help\n\n```\n $ edmgr --help\nUsage: edmgr [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  -k, --environment [prod|sandbox|qa]\n                                  Configuration environment  [default: prod]\n  -v, --verbose\n  --help                          Show this message and exit.\n\nCommands:\n  artifacts           Print a list of artifacts for a particular release.\n  download-artifacts  Download all artifacts for a particular release or...\n  entitlement         Print single entitlement details\n  entitlements        Print a list of available entitlements.\n  login               Login using credentials/token\n  logout              Logout by deleting cached token\n  releases            Print a list of releases for a particular entitlement.\n  show-config         Print configuration\n  version             Print edmgr version\n```\n\n\n### Login\n\nThere are three ways to authenticate on EDM.\n\n1. Using a JWT token from the command line: Use `edmgr login token TOKEN`. The\n   token will be persisted on disk and used until its expiration. Once the token\n   has expired, a new one must be obtained by the user.\n2. Using username and password (credentials): Use `edmgr login credentials`\n   and press enter. You will be prompted for username and password, or use\n   `edmgr login credentials --username USERNAME` and only the password will\n   be prompted. An access token will be persisted on disk and refreshed\n   automatically when expired.\n3. Using a JWT token in an environment variable: Set `EDM_ACCESS_TOKEN=\"<JWT string>\"`.\n   The token will **not** be persisted on disk. Once the token has expired, a new\n   one must be obtained by the user.\n\nIn case more than one authentication method is set, the above order also\ndetermine the precedence of the method used by edmgr.\n\n```\n$ edmgr login --help\nUsage: edmgr login [OPTIONS] COMMAND [ARGS]...\n\n  Login using credentials/token\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  credentials  Login using username and password\n  show-token   Print Access Token as JWT string with some extra information.\n  token        Login using JWT string\n```\n\n### Version\n\n```\n$ edmgr version --help\nUsage: edmgr version [OPTIONS]\n\n  Print edmgr version\n\nOptions:\n  --help  Show this message and exit.\n```\n\n### Entitlements\n\n```\n$ edmgr entitlements --help\nUsage: edmgr entitlements [OPTIONS]\n\n  Print a list of available entitlements.\n\nOptions:\n  -e, --entitlement-id TEXT       Entitlement ID to retrieve one\n  -p, --product-code TEXT         Filter by product code\n  -o, --offset INTEGER RANGE      Page number to paginate output  [x>=1]\n  -l, --limit INTEGER RANGE       Number of records per page to be displayed.\n                                  By default it shows 10 records per page.\n                                  This option is ignored if no offset was\n                                  given.  [x>=1]\n  -f, --format [table|json|jsonpp]\n                                  Output format -> tabular, json or json\n                                  prettify  [default: table]\n  --help                          Show this message and exit.\n```\n\n```\n$ edmgr entitlement --help\nUsage: edmgr entitlement [OPTIONS] ENTITLEMENT_ID\n\n  Print single entitlement details\n\nOptions:\n  -p, --product-code TEXT         Filter grouped entitlements by Product Code\n  -o, --offset INTEGER RANGE      Page number to paginate output  [x>=1]\n  -l, --limit INTEGER RANGE       Number of records per page to be displayed.\n                                  By default it shows 10 records per page.\n                                  This option is ignored if no offset was\n                                  given.  [x>=1]\n  -f, --format [table|json|jsonpp]\n                                  Output format -> tabular, json or json\n                                  prettify  [default: table]\n  --help                          Show this message and exit.\n```\n\n\n### Releases\n\n```\n$ edmgr releases --help\nUsage: edmgr releases [OPTIONS]\n\n  Print a list of releases for a particular entitlement.\n\nOptions:\n  -e, --entitlement-id TEXT       Entitlement ID  [required]\n  -r, --release-id TEXT           Release ID to retrieve one\n  -f, --format [table|json|jsonpp]\n                                  Output format -> tabular, json or json\n                                  prettify  [default: table]\n  --help                          Show this message and exit.\n```\n\n\n### Artifacts\n\n```\n$ edmgr artifacts --help\nUsage: edmgr artifacts [OPTIONS]\n\n  Print a list of artifacts for a particular release.\n\nOptions:\n  -e, --entitlement-id TEXT       Entitlement ID  [required]\n  -r, --release-id TEXT           Release ID  [required]\n  -a, --artifact-id TEXT          Artifact ID to retrieve one\n  -f, --format [table|json|jsonpp]\n                                  Output format -> tabular, json or json\n                                  prettify  [default: table]\n  --help                          Show this message and exit.\n```\n\n\n### Download Artifacts\n\n```\n$ edmgr download-artifacts --help\nUsage: edmgr download-artifacts [OPTIONS]\n\n  Download all artifacts for a particular release or only a specific one.\n\nOptions:\n  -e, --entitlement-id TEXT  Entitlement ID  [required]\n  -r, --release-id TEXT      Release ID  [required]\n  -a, --artifact-id TEXT     Artifact ID\n  -d, --download-dir TEXT    Directory in which artifacts are downloaded.\n                             Default: $HOME/Artifacts\n  -m, --mode [http|fasp]     The protocol used to download the files. Default:\n                             http\n  --help                     Show this message and exit.\n```\n\n### Shell Completions\n\nTab completions for Bash (version 4.4 and up), Zsh, and Fish can be enabled by\nrunning the following command in your shell:\n\n```bash\neval \"$(_EDMGR_COMPLETE=<shell>_source edmgr)\"\n```\nWhere `<shell>` is either `bash`, `zsh` or `fish`\n\n\n## Environment Variables\n\nThe following environment variables can be used to configure both API Wrapper and CLI.\n\n- `EDM_ACCESS_TOKEN`: API authentication JWT, please refer to the above sections for more information\n- `EDM_ROOT`: Directory in which EDM will store cached files. If not set, the default is `$HOME/.edm`\n- `EDM_DOWNLOADS`: Directory in which EDM will save downloaded artifacts. If not set, the default is `$HOME/Artifacts`\n- `EDM_LOG_LEVEL`: EDM log level. Options: critical, error, warning, info, debug. If not set, the default is `info`\n- `EDM_ENV`: The name of the configuration environment used. Options: prod, sandbox, qa. If not set, the default is `prod`\n\n\n## Known Bugs\n\n- `ImportError: symbol not found in flat namespace (_ffi_prep_closure)`\nis thrown by `edmgr.auth.decode_jwt_token()` with `check_signature` argument\n`True` when running Python 3.7 on Apple M1. This is due to cffi 1.15.0 module's\nlib `_cffi_backend.cpython-37m-darwin.so` trying to load `_ffi_prep_closure`\nsymbol. This bug affects CLI `edmgr login token` command\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Arm Ltd.",
    "maintainer_email": "",
    "name": "edmgr",
    "package_url": "https://pypi.org/project/edmgr/",
    "platform": null,
    "project_url": "https://pypi.org/project/edmgr/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/edmgr/1.1.0/",
    "requires_dist": [
      "click (~=8.1)",
      "msal (~=1.18)",
      "pyjwt (~=2.4)",
      "requests (~=2.28)",
      "tabulate (~=0.8)",
      "tqdm (~=4.64)"
    ],
    "requires_python": ">=3.7",
    "summary": "Entitlements and Download Manager",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16076066,
  "releases": {
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b81fed6cdd29d6f54eac64883637a1c5de4f5c805339c95cfbdd76f2cb31570",
          "md5": "bcd8229142cd37ea4319901a64ec41ab",
          "sha256": "59dfd3a41aa1ae6a9a0e862682d11eedecbc3d42c2ec51c763a3682a8b9d0e37"
        },
        "downloads": -1,
        "filename": "edmgr-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bcd8229142cd37ea4319901a64ec41ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16289,
        "upload_time": "2022-08-16T14:36:33",
        "upload_time_iso_8601": "2022-08-16T14:36:33.909728Z",
        "url": "https://files.pythonhosted.org/packages/1b/81/fed6cdd29d6f54eac64883637a1c5de4f5c805339c95cfbdd76f2cb31570/edmgr-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9ae864974b78cdfc52fca96e8426ce3896ce0bc3906c025db1e737ee9253ba6",
          "md5": "0ba964c42280befe6c9e64756983cf0d",
          "sha256": "a0506db41f169a79d083e61cf9cba9eef4073d4be39058b91f1010ac3a4156fa"
        },
        "downloads": -1,
        "filename": "edmgr-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ba964c42280befe6c9e64756983cf0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16611,
        "upload_time": "2022-08-25T18:52:56",
        "upload_time_iso_8601": "2022-08-25T18:52:56.420212Z",
        "url": "https://files.pythonhosted.org/packages/f9/ae/864974b78cdfc52fca96e8426ce3896ce0bc3906c025db1e737ee9253ba6/edmgr-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a75db3e554169310208be06057bcbe1dc416299eb89be330b96e24c66852fe0f",
          "md5": "fcbcd7e567c8e604af495391327a65b3",
          "sha256": "e06be709ca9ee223897610e330adacdeb53ec74a7dbd52ec5e336c994dae6ac1"
        },
        "downloads": -1,
        "filename": "edmgr-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcbcd7e567c8e604af495391327a65b3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16607,
        "upload_time": "2022-08-30T11:21:06",
        "upload_time_iso_8601": "2022-08-30T11:21:06.349252Z",
        "url": "https://files.pythonhosted.org/packages/a7/5d/b3e554169310208be06057bcbe1dc416299eb89be330b96e24c66852fe0f/edmgr-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a41b3d4cce134e2b1785ff3760cff845eb681deff0643ba7baadae4efd5879f5",
          "md5": "1cc5d561c6b5ce309f0a735d95f1cb41",
          "sha256": "406e85a58af04ae0c99d2d4d0014763a1842a70c4611e770e054aaeaf59833e3"
        },
        "downloads": -1,
        "filename": "edmgr-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cc5d561c6b5ce309f0a735d95f1cb41",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18068,
        "upload_time": "2022-09-21T08:49:21",
        "upload_time_iso_8601": "2022-09-21T08:49:21.357917Z",
        "url": "https://files.pythonhosted.org/packages/a4/1b/3d4cce134e2b1785ff3760cff845eb681deff0643ba7baadae4efd5879f5/edmgr-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11910e801cc093f4155be7fbeca28bd30b7b9525991b571589d5d7e1862844a7",
          "md5": "7fc532e3c1d96873d586d762ad8c491f",
          "sha256": "d3965e95297a2bb0a78bcd98f4d663c5f71d41c8f480ca694b8e11eb4343ad59"
        },
        "downloads": -1,
        "filename": "edmgr-0.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7fc532e3c1d96873d586d762ad8c491f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18972,
        "upload_time": "2022-09-29T14:39:14",
        "upload_time_iso_8601": "2022-09-29T14:39:14.008274Z",
        "url": "https://files.pythonhosted.org/packages/11/91/0e801cc093f4155be7fbeca28bd30b7b9525991b571589d5d7e1862844a7/edmgr-0.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "173dd2a366fa6be9a7e71d03b4101b12b14c0a75934107dc9df3027af31278e7",
          "md5": "3651fe3bdd4cc6f7f85807d343242d51",
          "sha256": "c289b1859da1be8e7f682b7a0fae7055833ad97c7ee5d6115339adc15c894804"
        },
        "downloads": -1,
        "filename": "edmgr-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3651fe3bdd4cc6f7f85807d343242d51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 21136,
        "upload_time": "2022-10-14T12:55:06",
        "upload_time_iso_8601": "2022-10-14T12:55:06.224157Z",
        "url": "https://files.pythonhosted.org/packages/17/3d/d2a366fa6be9a7e71d03b4101b12b14c0a75934107dc9df3027af31278e7/edmgr-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "825eda24e9bfee7f8ac09559e4489765eca189e32e1736f417acf3a4b2517f88",
          "md5": "e5348e7c5b60476f77871d23e4451c8c",
          "sha256": "c991f15f1a5e9af5acffc8780338fe72b14744257e0bda6c04369ab9a01607c6"
        },
        "downloads": -1,
        "filename": "edmgr-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5348e7c5b60476f77871d23e4451c8c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 21453,
        "upload_time": "2022-10-19T18:08:25",
        "upload_time_iso_8601": "2022-10-19T18:08:25.863064Z",
        "url": "https://files.pythonhosted.org/packages/82/5e/da24e9bfee7f8ac09559e4489765eca189e32e1736f417acf3a4b2517f88/edmgr-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f759f7c39b1321ac64e73c784bc850cd9b48ef9fc66b084203e57a59e205df1",
          "md5": "3467fa833b6d4389b9a3f7fee99cd047",
          "sha256": "bbbc65f4b859dd3d385981891a649ce575244d4a6e4a3cb74135dc21f23f7b37"
        },
        "downloads": -1,
        "filename": "edmgr-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3467fa833b6d4389b9a3f7fee99cd047",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 22615,
        "upload_time": "2022-12-12T16:09:15",
        "upload_time_iso_8601": "2022-12-12T16:09:15.790651Z",
        "url": "https://files.pythonhosted.org/packages/8f/75/9f7c39b1321ac64e73c784bc850cd9b48ef9fc66b084203e57a59e205df1/edmgr-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f759f7c39b1321ac64e73c784bc850cd9b48ef9fc66b084203e57a59e205df1",
        "md5": "3467fa833b6d4389b9a3f7fee99cd047",
        "sha256": "bbbc65f4b859dd3d385981891a649ce575244d4a6e4a3cb74135dc21f23f7b37"
      },
      "downloads": -1,
      "filename": "edmgr-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3467fa833b6d4389b9a3f7fee99cd047",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 22615,
      "upload_time": "2022-12-12T16:09:15",
      "upload_time_iso_8601": "2022-12-12T16:09:15.790651Z",
      "url": "https://files.pythonhosted.org/packages/8f/75/9f7c39b1321ac64e73c784bc850cd9b48ef9fc66b084203e57a59e205df1/edmgr-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}