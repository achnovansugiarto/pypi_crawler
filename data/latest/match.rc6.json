{
  "info": {
    "author": "Diane Napolitano",
    "author_email": "dmnapolitano@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Text Processing"
    ],
    "description": "match\n=====\n\n|Build Status|\n\n|Latest Conda Version|\\ |Latest PyPI Version|\\ |Python Versions|\n\nThe purpose of the module ``Match`` is to get the offsets (as well as\nthe string between those offsets, for debugging) of a cleaned-up,\ntokenized string from its original, untokenized source. “Big deal,” you\nmight say, but this is actually a pretty difficult task if the original\ntext is sufficiently messy, not to mention rife with Unicode characters.\n\nConsider some text, stored in a variable ``original_text``, like:\n\n::\n\n   I   am writing a letter !  Sometimes,I forget to put spaces (and do weird stuff with punctuation)  ?  J'aurai une pomme, s'il vous plâit !\n\nThis will/should/might be properly tokenized as:\n\n.. code:: python\n\n   [['I', 'am', 'writing', 'a', 'letter', '!'],\n    ['Sometimes', ',', 'I', 'forget', 'to', 'put', 'spaces', '-LRB-', 'and', 'do', 'weird', 'stuff', 'with', 'punctuation', '-RRB-', '?'],\n    [\"J'aurai\", 'une', 'pomme', ',', \"s'il\", 'vous', 'plâit', '!']]\n\nNow:\n\n.. code:: python\n\n   In [2]: import match\n\n   In [3]: match.match(original_text, ['-LRB-', 'and', 'do', 'weird', 'stuff', 'with', 'punctuation', '-RRB-'])\n   Out[3]: [(60, 97, '(and do weird stuff with punctuation)')]\n\n   In [4]: match.match(original_text, ['I', 'am', 'writing', 'a', 'letter', '!'])\n   Out[4]: [(0, 25, 'I   am writing a letter !')]\n\n   In [5]: match.match(original_text, [\"s'il\", 'vous', 'plâit', '!'])\n   Out[5]: [(121, 138, \"s'il vous plâit !\")]\n\nThe return type from ``match()`` is a ``list`` because it will return\n*all* occurrences of the argument, be it a ``list`` of tokens or a\nsingle ``string`` (word):\n\n.. code:: python\n\n   In [6]: match.match(original_text, \"I\")\n   Out[6]: [(0, 1, 'I'), (37, 38, 'I')]\n\nWhen passing in a single ``string``, ``match()`` is expecting that\n``string`` to be a single word or token. Thus:\n\n.. code:: python\n\n   In [7]: match.match(\"****because,the****\", \"because , the\")\n   Out[7]: []\n\nTry passing in ``\"because , the\".split(' ')`` instead, or better yet,\nthe output from a proper tokenizer.\n\nFor convenience, a function called ``match_lines()`` is provided:\n\n.. code:: python\n\n   In [8]: match.match_lines(original_text, [\n      ...: ['-LRB-', 'and', 'do', 'weird', 'stuff', 'with', 'punctuation', '-RRB-'],\n      ...: ['I', 'am', 'writing', 'a', 'letter', '!'],\n      ...: \"I\"\n      ...: ])\n   Out[8]:\n   [(0, 1, 'I'),\n    (0, 25, 'I   am writing a letter !'),\n    (37, 38, 'I'),\n    (60, 97, '(and do weird stuff with punctuation)')]\n\nThe values returned will always be sorted by their offsets.\n\nInstallation\n------------\n\n``pip install match`` or ``conda install -c ets match``\n\nRequirements\n------------\n\n-  Python >= 3.8\n-  `nltk <http://www.nltk.org>`__\n-  `regex <https://pypi.python.org/pypi/regex>`__\n\nDocumentation\n-------------\n\n`Here! <match>`__.\n\n.. |Build Status| image:: https://github.com/EducationalTestingService/match/actions/workflows/python-test.yml/badge.svg\n   :target: https://github.com/EducationalTestingService/match/actions/workflows/python-test.yml/\n.. |Latest Conda Version| image:: https://img.shields.io/conda/v/ets/match\n   :target: https://anaconda.org/ets/match\n.. |Latest PyPI Version| image:: https://img.shields.io/pypi/v/match\n   :target: https://pypi.org/project/match/\n.. |Python Versions| image:: https://img.shields.io/pypi/pyversions/match\n   :target: https://pypi.python.org/pypi/match/\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/EducationalTestingService/match",
    "keywords": "tokenization",
    "license": "",
    "maintainer": "Tamar Lavee",
    "maintainer_email": "tlavee@ets.org",
    "name": "match",
    "package_url": "https://pypi.org/project/match/",
    "platform": null,
    "project_url": "https://pypi.org/project/match/",
    "project_urls": {
      "Homepage": "https://github.com/EducationalTestingService/match"
    },
    "release_url": "https://pypi.org/project/match/0.3.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Match tokenized words and phrases within the original, untokenized, often messy, text.",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15290800,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7857c8ff77083b1cd22fb26a3939789cdbc973086952cddb601ae247eec23a77",
          "md5": "629a697dab4ee59b0a4fda3f73eec268",
          "sha256": "63384f638e15070d57f1cbefabac7b08a4bab0184f166f31a7df0693d6e0a072"
        },
        "downloads": -1,
        "filename": "match-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "629a697dab4ee59b0a4fda3f73eec268",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5784,
        "upload_time": "2014-11-23T17:13:51",
        "upload_time_iso_8601": "2014-11-23T17:13:51.647074Z",
        "url": "https://files.pythonhosted.org/packages/78/57/c8ff77083b1cd22fb26a3939789cdbc973086952cddb601ae247eec23a77/match-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "909eeaa7c8814a3ff7f95c84b385cf888ed14768a5745729933c85782627940a",
          "md5": "44d267c2e2e2a05a073224812fc1ca16",
          "sha256": "7e326974e16226daa8cdcec83168dd9e443e2d3844de472ebd0b750bd37e991e"
        },
        "downloads": -1,
        "filename": "match-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "44d267c2e2e2a05a073224812fc1ca16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5826,
        "upload_time": "2015-05-20T14:42:15",
        "upload_time_iso_8601": "2015-05-20T14:42:15.591106Z",
        "url": "https://files.pythonhosted.org/packages/90/9e/eaa7c8814a3ff7f95c84b385cf888ed14768a5745729933c85782627940a/match-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56a27bacc7bdcffabff610c50862aeb33921a25a00f912003f29e9d0a71bb5ba",
          "md5": "cc66e80944ea8c3b0df8ae3f0be293c3",
          "sha256": "52f61683fb76343a6e2a61fc402cad50ba056a9ca1fd6a0792a19d4b339cfc44"
        },
        "downloads": -1,
        "filename": "match-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cc66e80944ea8c3b0df8ae3f0be293c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5914,
        "upload_time": "2015-10-15T20:47:22",
        "upload_time_iso_8601": "2015-10-15T20:47:22.946651Z",
        "url": "https://files.pythonhosted.org/packages/56/a2/7bacc7bdcffabff610c50862aeb33921a25a00f912003f29e9d0a71bb5ba/match-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1183e158b8694e9589e1587815175e5c2a0e78eb86b9462f702d797a93d7f7e",
          "md5": "f33325207ec4725b3c048346334b1c73",
          "sha256": "d4d4c773091cfda63706fab4d9466464a6e6a241c20b2376ab2ea0bedb596964"
        },
        "downloads": -1,
        "filename": "match-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f33325207ec4725b3c048346334b1c73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4950,
        "upload_time": "2019-12-27T17:37:03",
        "upload_time_iso_8601": "2019-12-27T17:37:03.866082Z",
        "url": "https://files.pythonhosted.org/packages/b1/18/3e158b8694e9589e1587815175e5c2a0e78eb86b9462f702d797a93d7f7e/match-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52224613efa2225534d6147687369fdd4cb685680a144cc590f1790eb1927ede",
          "md5": "e44dfaf51429b240b1f4fbb06589fc7c",
          "sha256": "19fc41e5e149ea6133b8160e63039388ca8ca1a079bf87e98ccefe2372e5f115"
        },
        "downloads": -1,
        "filename": "match-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e44dfaf51429b240b1f4fbb06589fc7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8726,
        "upload_time": "2022-08-02T18:16:20",
        "upload_time_iso_8601": "2022-08-02T18:16:20.348705Z",
        "url": "https://files.pythonhosted.org/packages/52/22/4613efa2225534d6147687369fdd4cb685680a144cc590f1790eb1927ede/match-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15bafd1ef510717bd032a48a6818f64cd96adef1155ac8c1db159bb572acce79",
          "md5": "2f260a5feb197aa50e2864e0fe9654aa",
          "sha256": "9ff437183587c604ffe19ed7a0d3b5cd4c5c78cb6d5e4e22b1f0e9b97befebd7"
        },
        "downloads": -1,
        "filename": "match-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2f260a5feb197aa50e2864e0fe9654aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8946,
        "upload_time": "2022-10-03T14:51:57",
        "upload_time_iso_8601": "2022-10-03T14:51:57.083646Z",
        "url": "https://files.pythonhosted.org/packages/15/ba/fd1ef510717bd032a48a6818f64cd96adef1155ac8c1db159bb572acce79/match-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15bafd1ef510717bd032a48a6818f64cd96adef1155ac8c1db159bb572acce79",
        "md5": "2f260a5feb197aa50e2864e0fe9654aa",
        "sha256": "9ff437183587c604ffe19ed7a0d3b5cd4c5c78cb6d5e4e22b1f0e9b97befebd7"
      },
      "downloads": -1,
      "filename": "match-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2f260a5feb197aa50e2864e0fe9654aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8946,
      "upload_time": "2022-10-03T14:51:57",
      "upload_time_iso_8601": "2022-10-03T14:51:57.083646Z",
      "url": "https://files.pythonhosted.org/packages/15/ba/fd1ef510717bd032a48a6818f64cd96adef1155ac8c1db159bb572acce79/match-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}