{
  "info": {
    "author": "Paul Arnaud",
    "author_email": "paularnaud2pro@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ParTools\n \nThis package contains a bunch of Python tools I have developed and used as an IT Test / Support / Automation Engineer.  \nYou can mainly use them for:\n \n- Performing multi threaded SQL queries on an Oracle DB (__sql__)\n- Performing multi threaded SQL queries on a given perimeter on an Oracle DB (__rl__)\n- Comparing and sorting potentially big files (__dq__)\n- Reading and searching potentially big files (__tools.bf__)\n- Parsing potentially big XML files (__tools.xml__)\n- Searching and removing duplicates (__tools.dup__)\n- Filtering potentially big files with flexible conditions (__tools.filter__)\n- Splitting potentially big files (__tools.split__)\n- Extracting doc string from Python code (__tools.extract_doc__)\n- Sending mails with gmail, outlook or without authentication (__mail__)\n- Simple logging or logging in loops (``log`` and ``step_log``), manipulating files and strings, running shell commands, generating threaded message boxes and many others (__utils__)\n \n## Quickstart\n  \n    pip install partools\n \nCreate a python file containing:\n\n    import partools.utils as u\n\n    u.init_log('TEST', True)\n    u.log('Hello World')\n\nAnd run it. You should then see something like this in the console:\n \n    ...\n    Checkout the README.md on GitHub: https://github.com/paularnaud2/ParTools\n    Get started here c:\\Git\\Test\\venv\\lib\\site-packages\\partools\\quickstart\n    Set up your conf here: c:\\Git\\Test\\venv\\lib\\site-packages\\partools\\conf.py\n    Happy scripting!\n    ...\n    07:51:26 - Hello World\n \nThis gives you the links to the __quickstart__ folder where you'll find examples of use and descriptions of the different available packages and functions. You'll also find here the link to the __conf.py__ file (see below).\n \nIf you want to use the __cx_Oracle__ dependant packages (__sql__ and __rl__), you'll need an [Oracle instant client](https://www.oracle.com/uk/database/technologies/instant-client/downloads.html) whose directory you can set in the __conf.py__ file.\n \n### The conf.py file\n \nThe __partools/conf.py__ file contains the __main user settings__ for the __partools__ package such as the path to the Oracle instant client (``ORACLE_CLIENT``). If needed, you can create a __PTconf.py__ file at the root whose attributes will overwrite default (found in __partools/conf.py__). Similarly, you can also create a __PTconf_perso.py__ file that will take over PTconf.py. This can be useful if you __work on a shared repository__ but still want/need to have your own local configurations.\n \n### The global variable files gl.py and main functions inputs\n \nEach package has a __gl.py__ file which sets its __global variables and constants__. Each of these variables can be passed to the main package function (e.g. rl.reqlist for the rl package) and if so, overwrites the value defined in the __gl.py__ file. In that respect, __constants defined in the gl.py file can be seen as default input values__.\n\n## The utils package\n \nThe __partools__ package includes a __utils__ package which provides generic functions used by the other packages. As you may want to use some of them for your own code, I recommend you to check out the list of those functions in __partools/utils/\\_\\_init\\_\\_.py__. Here are a few examples:\n \n- `save_list`: saves a list into a text file\n- `load_txt`: loads a text file into a string or a list\n- `list_files`: returns the list of the files in a folder\n- `like`: behaves as the LIKE of Oracle SQL (you can match strings with wildcard character '\\*'). It returns a re.match object giving you access to the matched wildcards.  \nExample: ``m = like('Hello World', 'He\\*o w\\*d')``, m.group(1) => 'll'\n- `big_number`: converts a potentially big number into a lisible string. For example big_number(10000000) returns '10 000 000'.\n- `get_duration_string`: outputs a string representing the time elapsed since the input ``start_time``. For example ``get_duration_string(0, end_time=200)`` returns '3 minutes and 20 seconds'.\n- ``run_cmd``: runs a Windows shell command (__sTools__)\n- ``run_sqlplus``: connects to sqlplus as sysdba and runs a sql script (__sTools__)\n- ``msg_box``: opens a threaded message box containing the 'msg' input string. This can be used as a end-process notification (__sTools__)\n \n### Logging with the utils package\n \nIf you want the `log` function to actually fill a log file, you have to run `init_log()` before using it, otherwise it will just print out the log info in the console.  \nYou can specify a ``log_format`` for the log timestamp which by default is ``'%H:%M:%S -'`` (conf.LOG_FORMAT setting). Here is what a default log line looks like:\n \n    19:45:04 - This line has been generated by the partools.utils.log function\n \nThe `step_log` function allows you to log some information only when the input ``counter`` is a multiple of the input ``step``. Thus, `step_log` is to be used in loops to __track the progress of long processes__ such as reading or writing millions of lines in a file. The ``what`` input expects a description of what is being counted. It's default value is  ``'lines written'``.  \nIn order to correctly measure the elapsed time for the first log line, the ``step_log`` function has to be initialised by running ``init_sl_time()``.  \nSo for example, if you input ``step=500`` and don't input any ``what`` value, you should get something like this:\n \n    19:45:04 - 500 lines written in 3 ms. 500 lines written in total.\n    19:45:04 - 500 lines written in 2 ms. 1 000 lines written in total.\n    19:45:04 - 500 lines written in 2 ms. 1 500 lines written in total.\n \nCheckout the __utils_log.py__ file in __partools/quickstart__ for a simple example of use.\n \n### The PT folder\n \nWhen first used, the __utils__ package gets initialised by creating a __PT__ directory (which you can set in __conf.py__). It is intended to contain the __log files and the temporary files__ generated by the different ParTools's scripts. It also has __in__ and __out__ directories used by the __test__ package (and of course that you can also use for your own scripts using ParTools).\n \n## The sql package\n \nThe __sql__ package provides you with three main functions:\n- ``download``: executes multithreaded SELECT or COUNT queries (see partools/quickstart/sql_download.py)\n- ``upload``: executes mass insert queries (see partools/quickstart/sql_upload.py)\n- ``execute``: executes PL/SQL procedures or SQL scripts (see partools/quickstart/sql_execute.py)\n \nThe ``download`` function has three main cases of use:\n- Writing the result of a simple SELECT/COUNT query in a csv file\n- Processing a list of SELECT/COUNT queries in parallel\n- Processing a range query ie. a variabilized query which is executed in parallel for a specified range of KEYs/IDs\n\nEach of these cases is detailed in __partools/quickstart/sql_download.py__\n \n## The rl package\n \nThe __rl__ package has two main functions:\n- ``reqlist``: executes a multithreaded SELECT query on a perimeter given by a csv file. The SQL output can be joint to the input file (see partools/quickstart/reqlist.py)\n- ``left_join_files``: performs a joint between two csv files. This function is used by reqlist to joint the SQL result to the input file.\n\n## Sending emails\n \nParTools is provided with a __mail__ package allowing you to easily send HTML emails with Python. Three functions are available corresponding to different infrastructure/environment usages:\n \n- ``gmail``: for personal computer/network use\n- ``no_auth``: for business computer/network use (if an internal no authentication smtp server is available)\n- ``outlook``: for business computer/network use (uses your Outlook application)\n \nIn order for the mail package to be working, you have to initialise a mail folder by running the 'init_mail' function. This will create a folder in the MAIL_DIR defined in 'conf.py' ('mails/' by default).\n \nIf you want to use the gmail or no_auth functions, you have to set a confidential.txt file. This file must be saved at the CFI_PATH defined in the partools/conf.py file (root by default) using the example provided in the initialised folder. \n \nThe initialised folder contains the mail folders corresponding to the mail_name passed in the mail function. As you'll notice, it initially contains a 'test' folder, allowing you to quickly test the function and to provide you with an example of what a 'mail_name' folder is expected to contain. USER_GMAIL and PWD_GMAIL are only to be set if you use the ``gmail`` function.\n \nSo you'll see two files in the mails/test folder:\n- template.html: the HTML template for the body of your mail. It can contain variables delimited by @@ (in the example @@NAME@@ and @@DATE@@) which are replaced using the ``var_dict`` passed in input.\n- recipients.txt: the list of recipients here containing three fictitious recipients. For your test, it is advised to just let one line with your address.\n \nYou can also directly input a recipients list and a HTMLbody. In that case, setting the template.html and recipients.html is not needed. If you input a ``HTMLbody`` and a ``var_dict``, your ``HTMLbody`` input will be seen as a template whose variables will be replaced using the ``var_dict``.\n \nFor the no_auth function, you'll need to set the host in the conf file (``HOST_NO_AUTH``).\n \n \n## Recover functionalities\n \n``sql.download``, ``rl.reqlist`` and ``sql.execute`` have a __recovery functionality__. This means that if the process is unexpectedly stopped (e.g. because of network issues), then when relaunched, the script __automatically restarts from where it stopped__. When you run long processes (e.g. extracting millions of lines from a database), this can save you a significant amount of time if something goes wrong (especially when close to the end!).  \nThe reliability of these recovery mechanisms is ensured by automated tests using the ``multiprocessing`` library to simulate the unexpected process interruption.\n \nHappy scripting!\n \n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/paularnaud2/ParTools",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ParTools",
    "package_url": "https://pypi.org/project/ParTools/",
    "platform": "",
    "project_url": "https://pypi.org/project/ParTools/",
    "project_urls": {
      "Bug Tracker": "https://github.com/paularnaud2/ParTools/issues",
      "Homepage": "https://github.com/paularnaud2/ParTools"
    },
    "release_url": "https://pypi.org/project/ParTools/2.0.3/",
    "requires_dist": [
      "wheel",
      "twine",
      "pytest",
      "cx-Oracle",
      "pandas",
      "pywin32",
      "cryptography"
    ],
    "requires_python": ">=3.6",
    "summary": "This package contains a bunch of Python tools developed for Support, Test and Automation IT Engineers",
    "version": "2.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12462936,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d052f7b894131ae4f29f82f2bbd423f8932c9bbd67e42bf5fd8c3ba06d52282",
          "md5": "81cf37b2f75b961e0d4f5cc881246636",
          "sha256": "42e1317662d1c700fab8c70d94c843bdfb8f085323b7c678c39deb6ebef30fe2"
        },
        "downloads": -1,
        "filename": "ParTools-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81cf37b2f75b961e0d4f5cc881246636",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 120775,
        "upload_time": "2021-05-15T18:43:18",
        "upload_time_iso_8601": "2021-05-15T18:43:18.775881Z",
        "url": "https://files.pythonhosted.org/packages/7d/05/2f7b894131ae4f29f82f2bbd423f8932c9bbd67e42bf5fd8c3ba06d52282/ParTools-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee1da7bf010de1a407a9df1aa4e4ff8dccf4f7d15561e05552505c1a5ea79164",
          "md5": "320645c3cea82fc2d8359bca32c66332",
          "sha256": "fdd26c2db42613f843603fecf3ac3327d39e6971737a5e7d72c9ca02048e2129"
        },
        "downloads": -1,
        "filename": "ParTools-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "320645c3cea82fc2d8359bca32c66332",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 122760,
        "upload_time": "2021-05-16T08:34:48",
        "upload_time_iso_8601": "2021-05-16T08:34:48.361578Z",
        "url": "https://files.pythonhosted.org/packages/ee/1d/a7bf010de1a407a9df1aa4e4ff8dccf4f7d15561e05552505c1a5ea79164/ParTools-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cee66da803b54f370b657af6063593abf65fbbe811e7df6341296c225dcc39b2",
          "md5": "8a5bc6fc18fbf14ec9f0240fab791694",
          "sha256": "0330768535c197a92be612087997048f84e52482d179491eb5018dbb0e64ec31"
        },
        "downloads": -1,
        "filename": "ParTools-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a5bc6fc18fbf14ec9f0240fab791694",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 122848,
        "upload_time": "2021-05-16T13:39:18",
        "upload_time_iso_8601": "2021-05-16T13:39:18.008134Z",
        "url": "https://files.pythonhosted.org/packages/ce/e6/6da803b54f370b657af6063593abf65fbbe811e7df6341296c225dcc39b2/ParTools-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b02b8ee0587681d1da5f1a5879fa8618372115bd2ca07021fa4129925bd9d6ad",
          "md5": "57eb200bb3ca23c646a63ee2032720e0",
          "sha256": "8132c131252102d6bdeef744ac45a79c210c4a2e1dd92c6285bb6e600f607947"
        },
        "downloads": -1,
        "filename": "ParTools-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57eb200bb3ca23c646a63ee2032720e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 130957,
        "upload_time": "2021-05-25T14:38:56",
        "upload_time_iso_8601": "2021-05-25T14:38:56.356684Z",
        "url": "https://files.pythonhosted.org/packages/b0/2b/8ee0587681d1da5f1a5879fa8618372115bd2ca07021fa4129925bd9d6ad/ParTools-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d743ed9eb7209f3c474037573df9e59e0ba939eaee54ff8be1fa039d0e66ecf",
          "md5": "81528cf9054461688fc12ccf3a54dbca",
          "sha256": "525632714bb0c9830ac416bdf95b1b1ce504cabe2efb6de2491096a0bfed2c52"
        },
        "downloads": -1,
        "filename": "ParTools-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "81528cf9054461688fc12ccf3a54dbca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 131265,
        "upload_time": "2021-06-07T09:04:19",
        "upload_time_iso_8601": "2021-06-07T09:04:19.253838Z",
        "url": "https://files.pythonhosted.org/packages/9d/74/3ed9eb7209f3c474037573df9e59e0ba939eaee54ff8be1fa039d0e66ecf/ParTools-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44244ffe83feb8da548e4a6b84aeccd838380f65f62194d76b241e4394f55ed8",
          "md5": "5a6f20424b7b81b9f127b66b2269dc90",
          "sha256": "03fc848041b4f7d3319c99e0678e9aede6a8a78a8f9b9d6e41c3cd41e5cdcaeb"
        },
        "downloads": -1,
        "filename": "ParTools-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a6f20424b7b81b9f127b66b2269dc90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 131495,
        "upload_time": "2021-06-18T12:14:09",
        "upload_time_iso_8601": "2021-06-18T12:14:09.334770Z",
        "url": "https://files.pythonhosted.org/packages/44/24/4ffe83feb8da548e4a6b84aeccd838380f65f62194d76b241e4394f55ed8/ParTools-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ab97383674330aa26afda7d1be2db6501396d842957646cd053036e7a42aa28",
          "md5": "e445ff2e05e5f773af3a22a34993f097",
          "sha256": "808a3b4b3736a387b6113b267130ca6c283e3736263dbc2d30ea5d75698980cd"
        },
        "downloads": -1,
        "filename": "ParTools-1.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e445ff2e05e5f773af3a22a34993f097",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 131906,
        "upload_time": "2021-07-12T09:08:38",
        "upload_time_iso_8601": "2021-07-12T09:08:38.800928Z",
        "url": "https://files.pythonhosted.org/packages/5a/b9/7383674330aa26afda7d1be2db6501396d842957646cd053036e7a42aa28/ParTools-1.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b357c5a5d1bf90e5de28f6f4ec34ae2796abbcb7288510308635b685b3431a53",
          "md5": "0fa431f091d38f03eba9546462e33323",
          "sha256": "24c4a6cfb747f033a72acab10b37398c2b8a83fbdfff1094a0aec57a5925e7ae"
        },
        "downloads": -1,
        "filename": "ParTools-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0fa431f091d38f03eba9546462e33323",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 139917,
        "upload_time": "2021-09-18T07:44:41",
        "upload_time_iso_8601": "2021-09-18T07:44:41.357314Z",
        "url": "https://files.pythonhosted.org/packages/b3/57/c5a5d1bf90e5de28f6f4ec34ae2796abbcb7288510308635b685b3431a53/ParTools-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "751de45c3c181a4de9444f6752caf519e92c6bb9439d27a45d969cbc9f973f3b",
          "md5": "8f112caa9b44ec6ee0d5e5e031c7c18d",
          "sha256": "7fd0c7326d79c10a5bce00e0317006b281d88ee079b8cf24143e56d6563ec379"
        },
        "downloads": -1,
        "filename": "ParTools-1.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f112caa9b44ec6ee0d5e5e031c7c18d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 147695,
        "upload_time": "2021-11-12T07:50:23",
        "upload_time_iso_8601": "2021-11-12T07:50:23.488524Z",
        "url": "https://files.pythonhosted.org/packages/75/1d/e45c3c181a4de9444f6752caf519e92c6bb9439d27a45d969cbc9f973f3b/ParTools-1.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cccd1f920098c09a2dc4fc8aeb3e924f9f170449f93adfe5e9744fc76c163120",
          "md5": "edcd2e893a947f2fb89565c5d0320ced",
          "sha256": "f3ecfb61a3aab71f262c357f6a95b0e082d28c1d431c8a562ba85ce8ef87da26"
        },
        "downloads": -1,
        "filename": "ParTools-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edcd2e893a947f2fb89565c5d0320ced",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 148232,
        "upload_time": "2021-12-31T07:57:28",
        "upload_time_iso_8601": "2021-12-31T07:57:28.600532Z",
        "url": "https://files.pythonhosted.org/packages/cc/cd/1f920098c09a2dc4fc8aeb3e924f9f170449f93adfe5e9744fc76c163120/ParTools-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b6355a80902dee13a39e057bf2d09c8d140e6e8509a377df7d3b3f0da12ca0b",
          "md5": "d3a00ca1854764c754e85f813b950644",
          "sha256": "0e85bf5b95d8d140de549e714048a55ad230191bd777661d6e932857b600c831"
        },
        "downloads": -1,
        "filename": "ParTools-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3a00ca1854764c754e85f813b950644",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 133002,
        "upload_time": "2021-12-31T09:15:37",
        "upload_time_iso_8601": "2021-12-31T09:15:37.237249Z",
        "url": "https://files.pythonhosted.org/packages/6b/63/55a80902dee13a39e057bf2d09c8d140e6e8509a377df7d3b3f0da12ca0b/ParTools-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "725507813d636da1456d1a5d5bc9f3d6a67e46fc40010d75a8a912600e08b5cf",
          "md5": "18de0c956f96a7ccce541084a3bc7887",
          "sha256": "8f4bc7563b4b4570f84c16fc9349c70395e0984cef1a6366fc67f45baac9d291"
        },
        "downloads": -1,
        "filename": "ParTools-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18de0c956f96a7ccce541084a3bc7887",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 133438,
        "upload_time": "2022-01-02T08:46:52",
        "upload_time_iso_8601": "2022-01-02T08:46:52.304763Z",
        "url": "https://files.pythonhosted.org/packages/72/55/07813d636da1456d1a5d5bc9f3d6a67e46fc40010d75a8a912600e08b5cf/ParTools-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91a0d24ffc228420ae7d8457313544a20bd71a66e3208251645d85ea3d18e92c",
          "md5": "6f7c6dff7671786cec227dba4a6e8518",
          "sha256": "8575d1ab91a93b816fd6e81da9d87b920185a33901986949a3ed48106ad4da9b"
        },
        "downloads": -1,
        "filename": "ParTools-2.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f7c6dff7671786cec227dba4a6e8518",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 133584,
        "upload_time": "2022-01-03T09:14:07",
        "upload_time_iso_8601": "2022-01-03T09:14:07.873967Z",
        "url": "https://files.pythonhosted.org/packages/91/a0/d24ffc228420ae7d8457313544a20bd71a66e3208251645d85ea3d18e92c/ParTools-2.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91a0d24ffc228420ae7d8457313544a20bd71a66e3208251645d85ea3d18e92c",
        "md5": "6f7c6dff7671786cec227dba4a6e8518",
        "sha256": "8575d1ab91a93b816fd6e81da9d87b920185a33901986949a3ed48106ad4da9b"
      },
      "downloads": -1,
      "filename": "ParTools-2.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6f7c6dff7671786cec227dba4a6e8518",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 133584,
      "upload_time": "2022-01-03T09:14:07",
      "upload_time_iso_8601": "2022-01-03T09:14:07.873967Z",
      "url": "https://files.pythonhosted.org/packages/91/a0/d24ffc228420ae7d8457313544a20bd71a66e3208251645d85ea3d18e92c/ParTools-2.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}