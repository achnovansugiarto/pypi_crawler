{
  "info": {
    "author": "Alan Yorinks",
    "author_email": "MisterYsLab@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "\n# Telemetrix For The ESP32\n\nWould you like to remotely control and monitor an ESP32 device from your PC using either \na  WI-FI or Bluetooth Low Energy (BLE) transport? This package provides everything you \nneed to \ndo so.\n\nIt consists of Python client APIs to construct your application and firmware \ninstalled on the ESP32 device.\n\nThe firmware uploaded to the ESP32 device \ntakes advantage of the [Arduino Core For The ESP32.](https://github.com/espressif/arduino-esp32)\nAs a result, the [Arduino IDE](https://www.arduino.cc/en/software)\nis used to compile and upload the firmware to the device.\n\nIt is compatible with Windows, Linux, and macOS. It requires the use of Python 3.7 or \ngreater.\n\n**NOTE: The threaded BLE version is not Windows compatible, however the asyncio version \nis compatible.**\n\nThe following features are supported:\n\n* Analog Input           \n* Analog Output (PWM)  \n* Analog Output (DAC)  \n* Digital Input          \n* Digital Output         \n* ESP32 Touch Pin Input  \n* i2c Primitives   \n* OneWire Primitives   \n* SPI Primitives     \n* DHT Temperature/Humidity Sensor Support  \n* HC-SR04 Sonar Distance Sensor Support   \n* Servo Motor Control   \n* Stepper Motor Control (AccelStepper) \n* Both WI-FI and BLE Transports Supported\n* Available Online Client APIs:\n  * [WI-FI And BLE Threaded Model](https://htmlpreview.github.io/?https://github.com/MrYsLab/telemetrix-esp32/blob/master/html/telemetrix_esp32/index.html)\n  * [WI-FI And BLE Asyncio Model](https://htmlpreview.github.io/?https://github.com/MrYsLab/telemetrix-esp32/blob/master/html/telemetrix_aio_esp32/index.html)\n* Callbacks provide immediate notifications for fast and efficient input \ndata change notifications.\n* The Code Is Designed To Be User Extensible\n* Integrated Client/Server Debugging Aids Are Included\n\nA [User's Guide](https://mryslab.github.io/telemetrix-esp32/) explaining \n[installation](https://mryslab.github.io/telemetrix-esp32/install_telemetrix/) and use is available online.\n\n\nA complete set of examples is included. \nUse the horizontal scroll bar at the bottom of the features' table to view all the links.\n\n| Feature                           | Feature Type              | WI-FI Examples                                                                                                                               | WI-FI Asyncio Examples                                                                                                                                   | BLE Examples                                                                                                                              | BLE Asyncio Examples                                                                                                                                  |\n|-----------------------------------|---------------------------|----------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Analog Input                      | GPIO                      | [analog_input_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/analog_input_wifi.py)                           | [analog_input_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/analog_input_wifi_aio.py)                           | [analog_input_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/analog_input_ble.py)                           | [analog_input_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/analog_input_ble_aio.py)                           |\n| Analog Output (PWM)               | GPIO                      | [fade_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/fade_wifi.py)                                           | [fade_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/fade_wifi_aio.py)                                           | [fade_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/fade_ble.py)                                           | [fade_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/fade_ble_aio.py)                                           |\n| Analog Output (DAC)               | GPIO                      | [dac_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/dac_wifi.py)                                             | [dac_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/dac_wifi_aio.py)                                             | [dac_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/dac_ble.py)                                             | [dac_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/dac_ble_aio.py)                                             |\n| Digital Input                     | GPIO                      | [digital_input_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/digital_input_wifi.py)                         | [digital_input_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/digital_input_wifi_aio.py)                         | [digital_input_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/digital_input_ble.py)                         | [digital_input_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/digital_input_ble_aio.py)                         |\n| Digital Input Pull Down           | GPIO                      | [digital_input_pulldown_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/digital_input_pulldown_wifi.py)       | [digital_input_pulldown_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/digital_input_pulldown_wifi_aio.py)       | [digital_input_pulldown_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/digital_input_pulldown_ble.py)       | [digital_input_pulldown_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/digital_input_pulldown_ble_aio.py)       |\n| Digital Input Pull Up             | GPIO                      | [digital_input_pullup_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/digital_input_pullup_wifi.py)           | [digital_input_pullup_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/digital_input_pullup_wifi_aio.py)           | [digital_input_pullup_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/digital_input_pullup_ble.py)           | [digital_input_pullup_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/digital_input_pullup_ble_aio.py)           |\n| Digital Output                    | GPIO                      | [blink_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/blink_wifi.py)                                         | [blink_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/blink_wifi_aio.py)                                         | [blink_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/blink_ble.py)                                         | [blink_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/blink_ble_aio.py)                                         |\n| Touch Pin Input                   | GPIO                      | [touch_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/touch_input_wifi.py)                                   | [touch_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/touch_input_wifi_aio.py)                                   | [touch_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/touch_input_ble.py)                                   | [touch_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/touch_input_ble_aio.py)                                   |\n| i2c (ADXL345 Accelerometer)       | Device Communications Bus | [i2c_adxl345_accelerometer_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/i2c_adxl345_accelerometer_wifi.py) | [i2c_adxl345_accelerometer_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/i2c_adxl345_accelerometer_wifi_aio.py) | [i2c_adxl345_accelerometer_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/i2c_adxl345_accelerometer_ble.py) | [i2c_adxl345_accelerometer_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/i2c_adxl345_accelerometer_ble_aio.py) |\n| OneWire (DS18x20 Thermometer)     | Device Communications Bus | [onewire_ds18x20_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/onewire_ds18x20_wifi.py)                     | [onewire_ds18x20_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/onewire_ds18x20_wifi_aio.py)                     | [onewire_ds18x20_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/onewire_ds18x20_ble.py)                     | [onewire_ds18x20_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/onewire_ds18x20_ble_aio.py)                     |\n| SPI (MPU9250 Accelerometer)       | Device Communications Bus | [spi_mpu9250_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/spi_mpu9250_wifi.py)                             | [spi_mpu9250_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/spi_mpu9250_wifi_aio.py)                             | [spi_mpu9250_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/spi_mpu9250_ble.py)                             | [spi_mpu9250_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/spi_mpu9250_ble_aio.py)                             |\n| DHT Temperature/Humidity Sensor   | Sensor Device Support     | [dht_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/dht_wifi.py)                                             | [dht_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/dht_wifi_aio.py)                                             | [dht_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/dht_ble.py)                                             | [dht_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/dht_ble_aio.py)                                             |\n| HC-SR04 Sonar Distance Sensor     | Sensor Device Support     | [hc-sr04_distance_sensor_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/hc-sr04_distance_sensor_wifi.py)     | [hc-sr04_distance_sensor_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/hc-sr04_distance_sensor_wifi_aio.py)     | [hc-sr04_distance_sensor_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/hc-sr04_distance_sensor_ble.py)     | [hc-sr04_distance_sensor_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/hc-sr04_distance_sensor_ble_aio.py)     |\n| Servo Motor                       | Motor Control             | [servo_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/servo_wifi.py)                                         | [servo_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/servo_wifi_aio.py)                                         | [servo_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/servo_ble.py)                                         | [servo_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/servo_ble_aio.py)                                         |\n| Stepper Motor (Absolute Position) | Motor Control             | [stepper_absolute_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/stepper_absolute_wifi.py)                   | [stepper_absolute_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/stepper_absolute_wifi_aio.py)                   | [stepper_absolute_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/stepper_absolute_ble.py)                   | [stepper_absolute_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/stepper_absolute_ble_aio.py)                   |\n| Stepper Motor (Continuous Motion) | Motor Control             | [stepper_continuous_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/stepper_continuous_wifi.py)               | [stepper_continuous_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/stepper_continuous_wifi_aio.py)               | [stepper_continuous_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/stepper_continuous_ble.py)               | [stepper_continuous_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/stepper_continuous_ble_aio.py)               |\n| Stepper Motor (Relative Position) | Motor Control             | [stepper_relative_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/stepper_relative_wifi.py)                   | [stepper_relative_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/stepper_relative_wifi_aio.py)                   | [stepper_relative_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/stepper_relative_ble.py)                   | [stepper_relative_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/stepper_relative_ble_aio.py)                   |\n| Transport Loopback Diagnostic     | System Diagnostic         | [loop_back_wifi.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi/loop_back_wifi.py)                                 | [loop_back_wifi_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/wifi-aio/loop_back_wifi_aio.py)                                 | [loop_back_ble.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble/loop_back_ble.py)                                 | [loop_back_ble_aio.py](https://github.com/MrYsLab/telemetrix-esp32/blob/master/examples/ble-aio/loop_back_ble_aio.py)                                 |\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/MrYsLab/telemetrix-esp32",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MrYsLab/telemetrix-esp32",
    "keywords": "telemetrix,ESP32,Protocol,Python",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "telemetrix-esp32",
    "package_url": "https://pypi.org/project/telemetrix-esp32/",
    "platform": null,
    "project_url": "https://pypi.org/project/telemetrix-esp32/",
    "project_urls": {
      "Download": "https://github.com/MrYsLab/telemetrix-esp32",
      "Homepage": "https://github.com/MrYsLab/telemetrix-esp32"
    },
    "release_url": "https://pypi.org/project/telemetrix-esp32/1.3/",
    "requires_dist": [
      "adafruit-blinka-bleio",
      "adafruit-circuitpython-ble",
      "bleak (>=0.14.2)"
    ],
    "requires_python": "",
    "summary": "Remotely Control And Monitor ESP32 Devices",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14031532,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c78969430f30382cc85ac2f9e14c99ddeecf4bc839ae2adb837b339047d47b34",
          "md5": "dd47a325527dfbf39bbc228eff973303",
          "sha256": "8b00e0e33867d7be69ecd861b147482ff85f79f4a31e3ed8ed1d1c0d57c2d07b"
        },
        "downloads": -1,
        "filename": "telemetrix_esp32-1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd47a325527dfbf39bbc228eff973303",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 41724,
        "upload_time": "2022-02-10T16:25:45",
        "upload_time_iso_8601": "2022-02-10T16:25:45.648463Z",
        "url": "https://files.pythonhosted.org/packages/c7/89/69430f30382cc85ac2f9e14c99ddeecf4bc839ae2adb837b339047d47b34/telemetrix_esp32-1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a10bd63045c3b64527b71c9b61f90143f04d6f47f9ff840419eb2c4f9308a64",
          "md5": "b67ae655d37f475442d2ca314bc1d4ae",
          "sha256": "be63809d0ff749f832d7fbc016c0e659481080443546af1265ece3a14c31e5e9"
        },
        "downloads": -1,
        "filename": "telemetrix-esp32-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b67ae655d37f475442d2ca314bc1d4ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41453,
        "upload_time": "2022-02-10T16:25:46",
        "upload_time_iso_8601": "2022-02-10T16:25:46.885885Z",
        "url": "https://files.pythonhosted.org/packages/4a/10/bd63045c3b64527b71c9b61f90143f04d6f47f9ff840419eb2c4f9308a64/telemetrix-esp32-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a1e348a6f40157513a1a164364590304d224eb85ba607f50ba442705c261688",
          "md5": "569ebf922765eb687986ce9e8bfeac61",
          "sha256": "74f420bfadbb2198b0902bc3440e962d8a0d448849108264b6438136676666b7"
        },
        "downloads": -1,
        "filename": "telemetrix_esp32-1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "569ebf922765eb687986ce9e8bfeac61",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 41703,
        "upload_time": "2022-02-10T16:31:26",
        "upload_time_iso_8601": "2022-02-10T16:31:26.749776Z",
        "url": "https://files.pythonhosted.org/packages/8a/1e/348a6f40157513a1a164364590304d224eb85ba607f50ba442705c261688/telemetrix_esp32-1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab83199dc6538b5f6afd7b2d37920b376236bc131699ccebd80db2872950a4ab",
          "md5": "7faaea37f7151eb1292799764721b1d1",
          "sha256": "b14aa47ea34db63906a667a36ba24a30234984bd8cf19f57ffe0a1cc4f27b269"
        },
        "downloads": -1,
        "filename": "telemetrix-esp32-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7faaea37f7151eb1292799764721b1d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41412,
        "upload_time": "2022-02-10T16:31:29",
        "upload_time_iso_8601": "2022-02-10T16:31:29.068207Z",
        "url": "https://files.pythonhosted.org/packages/ab/83/199dc6538b5f6afd7b2d37920b376236bc131699ccebd80db2872950a4ab/telemetrix-esp32-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80925ac386582e98bf498fa788aaa4c69b7da90c4d234fc45d084c8b770da62e",
          "md5": "3f8c0a32b5b2df49e93f3a3aee54e8f0",
          "sha256": "1a041498dde7dc3d07ade3d398b0e8903851d3375cf0fa87cb259831d7585976"
        },
        "downloads": -1,
        "filename": "telemetrix_esp32-1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f8c0a32b5b2df49e93f3a3aee54e8f0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 42775,
        "upload_time": "2022-04-07T21:00:06",
        "upload_time_iso_8601": "2022-04-07T21:00:06.492023Z",
        "url": "https://files.pythonhosted.org/packages/80/92/5ac386582e98bf498fa788aaa4c69b7da90c4d234fc45d084c8b770da62e/telemetrix_esp32-1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5036f102ebea562190db17e88cd3cfc77fd699ac0644b23832d88128055baf4e",
          "md5": "697f9027500c9ecd762e952cee856f10",
          "sha256": "5cf052f7a6f82722432455f09981f4a2845b138f5ce21f957ed8ea80bead5b06"
        },
        "downloads": -1,
        "filename": "telemetrix-esp32-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "697f9027500c9ecd762e952cee856f10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42624,
        "upload_time": "2022-04-07T21:00:10",
        "upload_time_iso_8601": "2022-04-07T21:00:10.378133Z",
        "url": "https://files.pythonhosted.org/packages/50/36/f102ebea562190db17e88cd3cfc77fd699ac0644b23832d88128055baf4e/telemetrix-esp32-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "617248be472a47f2d72930ab09701c18dddd55b4d0a535936979028c20505591",
          "md5": "1decae2a0c799d85a69b86782984a2f6",
          "sha256": "0d9936088e76a795eb0dd05b777793af223fa85e0a0ff0e2c91d07ef22d42572"
        },
        "downloads": -1,
        "filename": "telemetrix_esp32-1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1decae2a0c799d85a69b86782984a2f6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 42797,
        "upload_time": "2022-06-04T12:33:11",
        "upload_time_iso_8601": "2022-06-04T12:33:11.532888Z",
        "url": "https://files.pythonhosted.org/packages/61/72/48be472a47f2d72930ab09701c18dddd55b4d0a535936979028c20505591/telemetrix_esp32-1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e99d4065c9a6714924e4a1a403dac5fb9aeda456d892a6b9138905c2b5aeee50",
          "md5": "2e4edb47fd31e08f7a031cf7de54c694",
          "sha256": "fef6e1161ee5bad8eaef60f52d242d159157e8232029eb66c2812a0f39a7ae6c"
        },
        "downloads": -1,
        "filename": "telemetrix-esp32-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2e4edb47fd31e08f7a031cf7de54c694",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42756,
        "upload_time": "2022-06-04T12:33:15",
        "upload_time_iso_8601": "2022-06-04T12:33:15.632963Z",
        "url": "https://files.pythonhosted.org/packages/e9/9d/4065c9a6714924e4a1a403dac5fb9aeda456d892a6b9138905c2b5aeee50/telemetrix-esp32-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "617248be472a47f2d72930ab09701c18dddd55b4d0a535936979028c20505591",
        "md5": "1decae2a0c799d85a69b86782984a2f6",
        "sha256": "0d9936088e76a795eb0dd05b777793af223fa85e0a0ff0e2c91d07ef22d42572"
      },
      "downloads": -1,
      "filename": "telemetrix_esp32-1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1decae2a0c799d85a69b86782984a2f6",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 42797,
      "upload_time": "2022-06-04T12:33:11",
      "upload_time_iso_8601": "2022-06-04T12:33:11.532888Z",
      "url": "https://files.pythonhosted.org/packages/61/72/48be472a47f2d72930ab09701c18dddd55b4d0a535936979028c20505591/telemetrix_esp32-1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e99d4065c9a6714924e4a1a403dac5fb9aeda456d892a6b9138905c2b5aeee50",
        "md5": "2e4edb47fd31e08f7a031cf7de54c694",
        "sha256": "fef6e1161ee5bad8eaef60f52d242d159157e8232029eb66c2812a0f39a7ae6c"
      },
      "downloads": -1,
      "filename": "telemetrix-esp32-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "2e4edb47fd31e08f7a031cf7de54c694",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 42756,
      "upload_time": "2022-06-04T12:33:15",
      "upload_time_iso_8601": "2022-06-04T12:33:15.632963Z",
      "url": "https://files.pythonhosted.org/packages/e9/9d/4065c9a6714924e4a1a403dac5fb9aeda456d892a6b9138905c2b5aeee50/telemetrix-esp32-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}