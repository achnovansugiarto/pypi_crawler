{
  "info": {
    "author": "Vojtech Mrazek, Zdenek Vasicek",
    "author_email": "mrazek@fit.vutbr.cz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: C",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# Archive of non-dominated points\n[![PyPI version fury.io](https://badge.fury.io/py/py-paretoarchive.svg)](https://pypi.python.org/pypi/py-paretoarchive/)\n[![PyPI license](https://img.shields.io/pypi/l/py-paretoarchive.svg)](https://pypi.python.org/pypi/py-paretoarchive/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/py-paretoarchive.svg)](https://pypi.python.org/pypi/py-paretoarchive/)\n\n\n\nCreating an archive of all non-dominated points using Fast Incremental BSP Tree. This package provides a Python wrapper for code provided as [a fast incremental BSP archive](https://www.ini.rub.de/PEOPLE/glasmtbl/code/ParetoArchive/index.html).\n\n### COMPILATION\n\n```bash\npython3 -m pip install --user py-paretoarchive\n```\n\nThe package requires Cython module for its run. On Windows, you will need to have [Microsoft Build Tools](https://wiki.python.org/moin/WindowsCompilers). Note that PyPi suggest you a link to the proper tool after this command.\n\n#### Instalation from sources\n```bash\npip3 install pytest Cython\nmake install-from-source\npytest\n```\n\nThe package requires Cython module for its run. When Cython is correctly installed, the package should be platform independent.\n\n### USAGE\n\n```python\nPyBspTreeArchive(objectives=3, minimizeObjective1=True, minimizeObjective2=True, minimizeObjective3=True, minimizeObjective4=True)\n```\n\n```python\nfrom paretoarchive import PyBspTreeArchive\n\na = PyBspTreeArchive(3, minimizeObjective1=False, minimizeObjective2=False, minimizeObjective3=True)\na.process([1,2,3]) \n# True (is non-dominated)\na.process([1,2,3])\n# True (is non-dominated)\na.process([1,3,3])\n# True (is non-dominated)\na.process([1,1,2])\n# True (is non-dominated)\nprint(a.size()) # get the number of  non-dominates solutions\n# 2\nprint(a.points())  # get the non-dominated solutions\n# [[1.0, 3.0, 3.0], [1.0, 1.0, 2.0]]\n```\n\nSingle-line example:\n```python\nprint(PyBspTreeArchive(2, minimizeObjective1=True, minimizeObjective2=False).filter( \n    [[2,4], [3,1], [2,1], [1,1]], sortKey=lambda itm: itm[0]\n    ) #process the array and sort the result by first objective (useful for plotting)\n# [[1.0, 1.0], [2.0, 4.0]]\n```\n\n\nReturn indexes of the elements:\n\n```python\na = PyBspTreeArchive(3, minimizeObjective1=True, minimizeObjective2=False)\nprint(a.process([1,3,3], returnId=True))\n# (True, 0) (is non-dominated, received ID 0)\nprint(a.process([1,2,3], returnId=True))\n# (False, 1) (is dominated, received ID 1)\nprint(a.process([1,1,2], returnId=True))\n# (True, 2) (is non-dominated, received ID 2)\nprint(a.points(returnIds=True))\n# [0,2] (item with ID 0 and 2 are non-dominated)\nprint(a.points())\n# [[1.0, 3.0, 3.0], [1.0, 1.0, 2.0]]\n```\n\nCustom IDs:\n\n```python\na = PyBspTreeArchive(3, minimizeObjective1=True, minimizeObjective2=False)\nprint(a.process([1,2,3], customId=10))\n# True\nprint(a.process([1,3,3], customId=20))\n# True\nprint(a.process([1,1,2], customId=30))\n# True\nprint(a.points(returnIds=True))\n# [20,30]\n```\n\nPruning of the set of non-dominated solutions specifying data resolution:\n\n```python\ndef resample(val, resolution=0.01):\n    return round(val / resolution)*resolution\n\n\npf = PyBspTreeArchive(4)\nfor i, x in enumerate(dataset):\n   pf.process( ( resample(math.log10(x['wce']),0.001),  #resolution is 0.001\n                 resample(x['area'],10), #values can be only multiples of 10\n                 resample(x['pwr'],0.1), #resolution is 0.1\n                 resample(x['time'],0.1) #resolution is 0.1\n               ), customId=i) #customId may be omitted, there is an internal counter initialized to 0\nindexes = pf.points(returnIds=True)\n\nprint([dataset[i]['wce'] for i in indexes])\n```\n\n## Using in Pandas\nYou can easily use the library to filter a Pandas DataFrame. Note that the selected columns cannot have a \"NaN\" values (you should use `df.dropna(subset=[\"c1\", \"c2\"])` function.\n\n```python\nfrom paretoarchive.pandas import pareto\npar_df = pareto(df, [\"area\", \"energy\", \"weight\"], minimizeObjective2 = False)\n```\n\nor\n\n\n```python\nfrom paretoarchive import PyBspTreeArchive\ndef pandas_pareto(data : pd.DataFrame, columns : list, **kwargs) -> pd.DataFrame:\n    filt = list(zip(*[data[c] for c in columns]))\n    ids = data.index.tolist()\n\n    sel = [ids[i] for i in PyBspTreeArchive(len(columns), **kwargs).filter(filt, returnIds=True)]\n    filt = [i in sel for i in ids]\n    return data[filt]\n    \n# example usage    \npar_df = pandas_pareto(df, [\"area\", \"energy\", \"weight\"], minimizeObjective2 = False)\n```\n\n### Notes\n* The values are internally repesented as `double` numbers. For very large integers you may lose the precision. \n* Up to 15 objectives can be handled.\n\n### SOURCE\n\n* Tobias Glasmachers: **A Fast Incremental BSP Tree Archive for Non-dominated Points**\n  * https://link.springer.com/chapter/10.1007/978-3-319-54157-0_18\n  * https://www.ini.rub.de/PEOPLE/glasmtbl/code/ParetoArchive/index.html\n* Similar problem (SKYLINE)\n  https://github.com/sean-chester/SkyBench",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ehw-fit/py-paretoarchive",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-paretoarchive",
    "package_url": "https://pypi.org/project/py-paretoarchive/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-paretoarchive/",
    "project_urls": {
      "Code": "https://github.com/ehw-fit/py-paretoarchive",
      "Homepage": "https://github.com/ehw-fit/py-paretoarchive",
      "Issue tracker": "https://github.com/ehw-fit/py-paretoarchive/issues"
    },
    "release_url": "https://pypi.org/project/py-paretoarchive/0.19/",
    "requires_dist": null,
    "requires_python": ">=3.4",
    "summary": "Efficient incremental Pareto archive based on BSP",
    "version": "0.19",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13687116,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "224e6c5976e26a4e5f80ee31c81a2438954fd8dd2a24cc4f736cab4630a0ea07",
          "md5": "9c4f9aae36175ac085acb8b7a2e0e974",
          "sha256": "7fe2e315ead3d96f017a33e2ad0d5a6f8d6aaa16073a3497cc56827157ad0e43"
        },
        "downloads": -1,
        "filename": "py-paretoarchive-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9c4f9aae36175ac085acb8b7a2e0e974",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 113801,
        "upload_time": "2021-06-16T13:22:31",
        "upload_time_iso_8601": "2021-06-16T13:22:31.166975Z",
        "url": "https://files.pythonhosted.org/packages/22/4e/6c5976e26a4e5f80ee31c81a2438954fd8dd2a24cc4f736cab4630a0ea07/py-paretoarchive-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0110f9ccffeaf15b9a339c7097dd290db1899625e2e6eb799178840a6e2a9567",
          "md5": "aaae535c510cef3a799ceb4e6c924fb2",
          "sha256": "ef67a2069b17da7cf1e05bfe7ff833eee2c9bd9db6ed1d9d73eea5fefeb788b3"
        },
        "downloads": -1,
        "filename": "py-paretoarchive-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "aaae535c510cef3a799ceb4e6c924fb2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 121147,
        "upload_time": "2021-06-17T05:54:12",
        "upload_time_iso_8601": "2021-06-17T05:54:12.226821Z",
        "url": "https://files.pythonhosted.org/packages/01/10/f9ccffeaf15b9a339c7097dd290db1899625e2e6eb799178840a6e2a9567/py-paretoarchive-0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4da9980c0012f8ba8db3462b0ca7907251098cfa8243ecf0901737301246dc95",
          "md5": "9e4144a68130fb3302baf2245b776dfc",
          "sha256": "3c21297c284f910adcff5ec3ce0d08992393cadad05e491cf4aa96f2ee20c510"
        },
        "downloads": -1,
        "filename": "py-paretoarchive-0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "9e4144a68130fb3302baf2245b776dfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 124237,
        "upload_time": "2021-06-17T06:18:15",
        "upload_time_iso_8601": "2021-06-17T06:18:15.317965Z",
        "url": "https://files.pythonhosted.org/packages/4d/a9/980c0012f8ba8db3462b0ca7907251098cfa8243ecf0901737301246dc95/py-paretoarchive-0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d136eb5345eec7eaf0685bc48d4ced07dbce7416338dee4995fc9a45ba2e54ab",
          "md5": "346335e41bc23468c158f803303e7bd4",
          "sha256": "7fd7aa1cf7fe1bfffe3c2113c084a68f954929f9e89d5ec76a347d3cb35e455e"
        },
        "downloads": -1,
        "filename": "py-paretoarchive-0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "346335e41bc23468c158f803303e7bd4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 122382,
        "upload_time": "2021-06-21T08:42:05",
        "upload_time_iso_8601": "2021-06-21T08:42:05.147625Z",
        "url": "https://files.pythonhosted.org/packages/d1/36/eb5345eec7eaf0685bc48d4ced07dbce7416338dee4995fc9a45ba2e54ab/py-paretoarchive-0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed81e13b7867751dc5f21ac6227c3deaf4286c67539071021e7f74eafd0ed00e",
          "md5": "69fc8e3dc2d33cfc8a1232e5964f7486",
          "sha256": "96000b965e7663b90377093caee84e619a6a578f065c40c64874aacf07b7befb"
        },
        "downloads": -1,
        "filename": "py-paretoarchive-0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "69fc8e3dc2d33cfc8a1232e5964f7486",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 122935,
        "upload_time": "2021-06-21T09:22:49",
        "upload_time_iso_8601": "2021-06-21T09:22:49.215552Z",
        "url": "https://files.pythonhosted.org/packages/ed/81/e13b7867751dc5f21ac6227c3deaf4286c67539071021e7f74eafd0ed00e/py-paretoarchive-0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a8f98556a6dfea99ef90915cfa8c6c5aa64c96f5347b8ae0822dd448e08e0ab",
          "md5": "6afcc1bc8b5d72dfe5485d937c2bba69",
          "sha256": "2250a305989a6d7bdfa60d4f9eb88bded5f338bfa536672f10122b46d38c0656"
        },
        "downloads": -1,
        "filename": "py-paretoarchive-0.19.tar.gz",
        "has_sig": false,
        "md5_digest": "6afcc1bc8b5d72dfe5485d937c2bba69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 123101,
        "upload_time": "2022-05-02T11:38:48",
        "upload_time_iso_8601": "2022-05-02T11:38:48.590075Z",
        "url": "https://files.pythonhosted.org/packages/8a/8f/98556a6dfea99ef90915cfa8c6c5aa64c96f5347b8ae0822dd448e08e0ab/py-paretoarchive-0.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a8f98556a6dfea99ef90915cfa8c6c5aa64c96f5347b8ae0822dd448e08e0ab",
        "md5": "6afcc1bc8b5d72dfe5485d937c2bba69",
        "sha256": "2250a305989a6d7bdfa60d4f9eb88bded5f338bfa536672f10122b46d38c0656"
      },
      "downloads": -1,
      "filename": "py-paretoarchive-0.19.tar.gz",
      "has_sig": false,
      "md5_digest": "6afcc1bc8b5d72dfe5485d937c2bba69",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 123101,
      "upload_time": "2022-05-02T11:38:48",
      "upload_time_iso_8601": "2022-05-02T11:38:48.590075Z",
      "url": "https://files.pythonhosted.org/packages/8a/8f/98556a6dfea99ef90915cfa8c6c5aa64c96f5347b8ae0822dd448e08e0ab/py-paretoarchive-0.19.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}