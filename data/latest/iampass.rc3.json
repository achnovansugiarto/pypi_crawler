{
  "info": {
    "author": "IAMPASS",
    "author_email": "support@iampass.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# IAMPASS\n\n[IAMPASS](https://main.iampass.com) provides multifactor identity and presence verification.\n\n\nThis library provides a Python wrapper for the IAMPASS API.\n\n## Getting Started\n### Create an IAMPASS Account\nTo begin visit [IAMPASS Developer Portal](https://main.iam-api.com/register) to register.\n### Create an IAMPASS Application\nOnce you have registered [create a new IAMPASS application](https://main.iam-api.com/create_application).\nSave the Application ID and Application Secret in a safe place as you will need this to authenticate calls to the IAMPASS API.\n### Register Users\nIAMPASS identifies application users using a token supplied by the application developer.\nYou can use your existing user IDs or create a lookup table that maps your user ID to a value you provide to IAMPASS.\n\nUsers are registered using the IAMPASS ManagementAPI.\nCreate an instance of IAMPASS.ManagementAPI using your application ID and secret.\n\n```python\nfrom IAMPASS.management_api import ManagementAPI\nfrom IAMPASS.management_api import ManagementAPIResult\n\napplication_id = \"MY APPLICATION ID\"\napplication_secret = \"MY APPLICATION SECRET\"\n\nmanager = ManagementAPI(application_id=\"MY APPLICATION ID\", application_secret=\"MY APPLICATION SECRET\")\n```\nTo add a single user call ManagementAPI.add_user\n```python\nadd_user_result = manager.add_user(\"MY USER\")\n\nif add_user_result == ManagementAPIResult.success:\n    # User added\n    print(\"user added\")\nelif add_user_result == ManagementAPIResult.user_exists:\n    # User already exists\n    print(\"user already exists\")\nelse:\n    # User failed\n    print(\"add user failed\")\n```\nTo add multiple users call ManagementAPI.add_users.\n```python\nusers = [\"MY USER 1\", \"MY USER 2\", \"MY USER 3\"]\ncreated, existing = manager.add_users(users)\nif created is not None:\n    print(\"Users created: {}\".format(created))\nif existing is not None:\n    print(\"Existing users: {}\".format(existing))\n``` \n### Registering a Mobile Device\nIAMPASS uses a mobile device to collect authentication data.\nMobile devices are registered using a registration link generated by IAMPASS.\nThe IAMPASS mobile application is registered to open these links and register the device.\nTo obtain a registration link use ManagementAPI.get_registration_link.\nThe display_name query parameter is optional and is used by the IAMPASS mobile app to provide a description of the user.\n```python\nregistration_link = manager.get_registration_link(user_id=\"MY USER 1\", display_name=\"MY USER 1@myapp\")\n```\nManagementAPI also provides a helper method to send a registration link to a mobile device using SMS.\n```python\nmanager.send_registration_sms(  user_id=\"MY USER 1\",\n                                display_name=\"MY USER1@myapp\",\n                                phone_number=\"+1XXXYYYY\",\n                                message=None)\n```\nYou can specify a message for the SMS body\n```python\nmanager.send_registration_sms(  user_id=\"MY USER 1\",\n                                display_name=\"MY USER1@myapp\",\n                                phone_number=\"+1XXXYYYY\",\n                                message=\"REGISTER FOR MY APP\")\n```\n### Registering a Mobile Device\nBefore a user can authenticate using IAMPASS they must register a mobile device.\nTo check if a user has registered a mobile device use ManagementAPI.has_registered_mobile_device\n```python\nhas_device = manager.has_registered_mobile_device(\"MY USER 1\")\n\nif has_device is ManagementAPIResult.has_mobile_device:\n    print(\"User has mobile device.\")\nelif has_device is ManagementAPIResult.no_mobile_device:\n    print(\"User has no mobile device.\")\nelse:\n    print(\"has_registered_mobile_device failed.\")\n```\n### Removing Users\nTo remove a single user use ManagementAPI.delete_user\n```python\nmanager.delete_use(\"MY USER 1\")\n```\nTo remove multiple users use ManagementAPI.delete_users\n```python\nusers=[\"MY USER 1\", \"MY USER 2\",...]\nmanager.delete_users(users)\n```\n\n### Authenticating Users\nIAMPASS authentication is a multi step process:\n* Initiate the authentication process using the Authentication API.\n* If the process is initiated the mobile device will collect authentication data and send it to IAMPASS\n* IAMPASS processes the collected data and determines whether the user is authenticated.\nCreate an instance of IAMPASS.AuthenticationAPI using the application ID and application secret created above.\n\n```python\nfrom IAMPASS.authentication_api import AuthenticationAPI, AuthenticationMethod\n\nauthenticator = AuthenticationAPI(application_id=\"MY APPLICATION ID\",\n                                  application_secret=\"MY APPLICATION SECRET\")\n\n# Initiate the authentication process.\nsession = authenticator.authenticate_user(\"MY USER 1\")\n\n# Check if authentication started.\nif session.failed:\n    # Authentication failed - check the failure reason.\n    # If the user has not registered a mobile device, the failure_reason will be NO_MOBILE_DEVICE\n    print(\"Authentication failed {}\".format(session.failure_reason))\nelif session.in_progress:\n    # Authentication is in progress\n    print(\"Authentication in progress\")\nelse:\n    print(\"Session status is {}\".format(session.session_status.name))\n```\nOnce the authentication process is initiated periodically check the status of the session using IAMPASS.Session.getStatus.\n```python\n# Wait for the user to approve the request.\nwhile session.in_progress:\n    # Get the status of the session\n    session_status = session.get_status()\n    \n    # Wait a while and try again\n    time.sleep(5)\n\nif session.active:\n    print(\"authenticated\")\n    # Now end the session\n    session.destroy()\nelse:\n    print(\"Authentication failed {}\".format(session.session_status.name))\n```\n### Ending a Session\nTo end an IAMPASS session call IAMPASS.Session.destroy.\n```python\nsession.destroy()\n```\n### Session Serialization\nIt may be necessary to save session information in cookies or pass session information with URLS.\nIAMPASS.Session is derived from [marshmallow dataclass](https://pypi.org/project/marshmallow-dataclass/) and can be serialized as JSON.\n```python\n# Save a session as JSON\nsession_json=Session.Schema().dumps(session)\n\n# Load a session from JSON\nnew_session=Session.Schema().loads(session_json)\n```\nIt is recommeded that the generated JSON in encrypted before storing.\nOne way to do this is to use [the itsdangerous package](https://pypi.org/project/itsdangerous/).\n```python\nfrom itsdangerous.url_safe import URLSafeSerializer\n\n# Convert the session to JSON.\nsession_json=Session.Schema().dumps(session)\n\n# Encode/encrypt the session JSON\ns = URLSafeSerializer(\"secret-key\")\nsession_token = s.dumps(session_json)\n\n# Store the session_token...\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "IAMPASS",
    "package_url": "https://pypi.org/project/IAMPASS/",
    "platform": null,
    "project_url": "https://pypi.org/project/IAMPASS/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/IAMPASS/0.0.31/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python package to access IAMPASS API",
    "version": "0.0.31",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15599938,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e78ed66eea0bf17d2f06438513ee6c4ea53a306ab537c74ee85bb331e7454333",
          "md5": "e899a3974511374c0da1853f00c3ceb0",
          "sha256": "3e041dd84287a3b4ea05f9e0c2657c7f6229125b1a26edb41c889f32eed06fcc"
        },
        "downloads": -1,
        "filename": "IAMPASS-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e899a3974511374c0da1853f00c3ceb0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11161,
        "upload_time": "2022-02-19T00:06:22",
        "upload_time_iso_8601": "2022-02-19T00:06:22.286154Z",
        "url": "https://files.pythonhosted.org/packages/e7/8e/d66eea0bf17d2f06438513ee6c4ea53a306ab537c74ee85bb331e7454333/IAMPASS-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf96cd646478b56fc6afe657cc6ef886081069afc9adbab5474f6b1d2285cdf5",
          "md5": "546eb0819a0a970438c4ef1c866faea8",
          "sha256": "0e2d2c7b80901cfe645f83dc0ab5219f53863b9318ea035c066bc47d6b2e38ed"
        },
        "downloads": -1,
        "filename": "IAMPASS-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "546eb0819a0a970438c4ef1c866faea8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8487,
        "upload_time": "2022-02-19T00:06:24",
        "upload_time_iso_8601": "2022-02-19T00:06:24.130754Z",
        "url": "https://files.pythonhosted.org/packages/bf/96/cd646478b56fc6afe657cc6ef886081069afc9adbab5474f6b1d2285cdf5/IAMPASS-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6494b6e943b71207e0b046e790e1801f7190120d800e6d803fb9332b25f9cae",
          "md5": "ee800fb0c68ae18e66179af3ea3aad90",
          "sha256": "99a9ed9a0b4e91bc33e1658fd0cdc9fde59dc41d7202e1930283a357d3ed9d70"
        },
        "downloads": -1,
        "filename": "IAMPASS-0.0.20.tar.gz",
        "has_sig": false,
        "md5_digest": "ee800fb0c68ae18e66179af3ea3aad90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8193,
        "upload_time": "2022-07-07T00:42:27",
        "upload_time_iso_8601": "2022-07-07T00:42:27.535872Z",
        "url": "https://files.pythonhosted.org/packages/e6/49/4b6e943b71207e0b046e790e1801f7190120d800e6d803fb9332b25f9cae/IAMPASS-0.0.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.31": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81eb67c05ca6fdbd0a3d0e68edc21f58cbdf8aa4e220dd13265cc2882c8ae9bd",
          "md5": "2736785a83aa50da8d5bb74fbf16ac78",
          "sha256": "5465266d8349d6676c535508ba4967138e627d59ce9b64a03100a898d5ca8cdd"
        },
        "downloads": -1,
        "filename": "IAMPASS-0.0.31.tar.gz",
        "has_sig": false,
        "md5_digest": "2736785a83aa50da8d5bb74fbf16ac78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8379,
        "upload_time": "2022-10-31T17:39:40",
        "upload_time_iso_8601": "2022-10-31T17:39:40.192491Z",
        "url": "https://files.pythonhosted.org/packages/81/eb/67c05ca6fdbd0a3d0e68edc21f58cbdf8aa4e220dd13265cc2882c8ae9bd/IAMPASS-0.0.31.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81eb67c05ca6fdbd0a3d0e68edc21f58cbdf8aa4e220dd13265cc2882c8ae9bd",
        "md5": "2736785a83aa50da8d5bb74fbf16ac78",
        "sha256": "5465266d8349d6676c535508ba4967138e627d59ce9b64a03100a898d5ca8cdd"
      },
      "downloads": -1,
      "filename": "IAMPASS-0.0.31.tar.gz",
      "has_sig": false,
      "md5_digest": "2736785a83aa50da8d5bb74fbf16ac78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8379,
      "upload_time": "2022-10-31T17:39:40",
      "upload_time_iso_8601": "2022-10-31T17:39:40.192491Z",
      "url": "https://files.pythonhosted.org/packages/81/eb/67c05ca6fdbd0a3d0e68edc21f58cbdf8aa4e220dd13265cc2882c8ae9bd/IAMPASS-0.0.31.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}