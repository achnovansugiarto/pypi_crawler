{
  "info": {
    "author": "Samy Younsi (Naqwada)",
    "author_email": "naqwada@pm.me",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# TapoPlugAPI\n\nTapo Plug Api is a python warper that can be easily integrated in any project to control the TP-Link Tapo P100 and P105 plugs.\n\nAll endpoints integrated in this package were discovered after a reverse engineering of the firmware Tapo P105, 1.3.2 Build 20210122 Rel.\nHowever, due to a lack of information about which parameters to use for each request, other endpoints not exploited yet still need to be added in this package. If you are interested, the full endpoints list are listed below after the examples.\n\nAlso, If you want to have fun with the firmware, the link is also below after the examples.\n\n[![PyPI Version](https://badge.fury.io/py/netsparker-api.svg)](https://pypi.python.org/pypi/tapo_plug)\n### Dependencies:\n* Python 3.3+\n* requests module (install via pip)\n* The dependencies can be satisfied via `pip install -r requirements.txt`\n\n### Quick Install\n```\npip install tapo-plug\n```\n\n### Endpoints:\n\n* Get device information\n\n```python \nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.getDeviceInfo(device)\nprint(response)\n```\n\n* Get device running information\n\n```python \nfrom tapo import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.getDeviceRunningInfo(device)\nprint(response)\n```\n\n* Turn ON the plug.\n\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.plugOn(device)\nprint(response)\n```\n* Turn OFF the plug.\n\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.plugOff(device)\nprint(response)\n```\n\n* Get plug time usage.\n\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.getPlugUsage(device)\nprint(response)\n```\n\n* Change plug alias.\n\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\",\n    \"nickname\": \"My Awesome Plug!\",\n}\n  \nresponse = tapoPlugApi.setNickname(device)\nprint(response)\n```\n\n* Turn OFF the LED.\n\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.ledOff(device)\nprint(response)\n```\n\n* Turn ON the LED.\n\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.ledOn(device)\nprint(response)\n```\n* Get LED status (ON/OFF).\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.getLedInfo(device)\nprint(response)\n```\n\n* Automatically turns OFF the device when the provided delay is expired.\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\",\n    \"delay\":60 #seconds\n}\n  \nresponse = tapoPlugApi.plugOffCountdown(device)\nprint(response)\n```\n\n* Automatically turns ON the device when the provided delay is expired.\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\",\n    \"delay\":60 #seconds\n}\n  \nresponse = tapoPlugApi.plugOnCountdown(device)\nprint(response)\n```\n\n* Get some diagnostic information's.\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.getDiagnoseStatus(device)\nprint(response)\n```\n\n* Should get device log, but always empty for me, I leave it here just in case...\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.getPlugLog(device)\nprint(response)\n```\n\n* Can't really tell for what this id used for now.\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.qsComponentNego(device)\nprint(response)\n```\n\n* Get wireless access points information around the plug..\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\"\n}\n  \nresponse = tapoPlugApi.getWirelessScanInfo(device)\nprint(response)\n```\n\n* Update plug WiFi settings.\n```python\nfrom tapo_plug import tapoPlugApi\n  \ndevice = {\n    \"tapoIp\": \"DEVICE IP\",\n    \"tapoEmail\": \"ENTER YOUR TP-LINK EMAIL\",\n    \"tapoPassword\": \"ENTER YOUR TP-LINK PWD\",\n    \"ssid\": \"AP SSID\",\n    \"password\": \"AP PASSWORD\",\n    \"key_type\":\"AP ENC\", #wpa2_psk...\n    \"region\": \"Asia/Tokyo\", #Meaningless, but seems required\n}\n  \nresponse = tapoPlugApi.setWirelessInfo(device)\nprint(response)\n```\n*Don't forget to change your tapo IP in the dict once this request completed :)\n\n### Full endpoints list:\n\nHere are all enpoints used by Tapo P105 found in the firmware.\n\nEndpoints List         | Endpoints List         |\n-------------| -----------|\nget_device_info | remove_antitheft_rules |\nget_device_running_info |  set_antitheft_all_enable |\nset_device_info |     unbindDevice  |   \ndevice_reset |  setAlias | \ndevice_reboot |   passthrough |\nget_latest_fw |  multipleRequest |\nfw_download |  getWifiBasic |\nget_fw_download_state |   getFwCurrentVer |\ncomponent_nego |  getFwDownloadProgress |\nqs_component_nego |  module.negotiate |\nset_qs_info |  module.query |\nset_qs_extra_info |  module.execute |\nget_device_time |  module.config |\nset_device_time |  get_factory_info |\nget_wireless_scan_info |  get_diagnose_status |\nset_wireless_info |  account_sync |\nget_schedule_rules |  sync_env |\nadd_schedule_rule |  set_device_log | \nedit_schedule_rule |  get_device_log |\nremove_schedule_rules |  set_flash_log |\nset_schedule_all_enable |  get_flash_log |\nget_next_event |  get_led_info |\nget_schedule_day_runtime |  set_led_info |\nget_schedule_month_runtime |  connect_cloud |\nremove_all_schedule_runtime |  get_connect_cloud_state |\nget_countdown_rules |  get_ffs_info |\nadd_countdown_rule |  close_device_ble |\nedit_countdown_rule |  heart_beat |\nremove_countdown_rules |  get_device_usage |\nget_antitheft_rules |  close_device_ble |\nadd_antitheft_rule |  set_inherit_info |\nedit_antitheft_rule |  get_inherit_info|\nexec_atcmd |  I think the function exec_atcmd is one of the most interesting because the function name mean it is possible to send AT commands directly to the device, in theory. I've tried everything but nothing worked... In any case all the compatible AT commands are also listed in the firmware, if someone can find how to use it... PLEASE ping me!|\n\n### Tapo firmware:\n\nTapo P105 1.3.2 firmware:\nhttp://download.tplinkcloud.com/firmware/P105_1.3.2_20210122_r57063_up_signed_1615802824400.bin\n\n### Building modules:\n\n* To build a package to install via `pip` or `easy_install`, execute:\n    * `python setup.py sdist`\n* The resulting build will be in `$PWD/dist/tapo_plug-<version>.tar.gz`",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/Naqwada/TapoPlug-Rest-API",
    "keywords": "TP_LINK,tapo,smart plug,iot,p100,p105",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tapo-plug",
    "package_url": "https://pypi.org/project/tapo-plug/",
    "platform": "",
    "project_url": "https://pypi.org/project/tapo-plug/",
    "project_urls": {
      "Homepage": "https://gitlab.com/Naqwada/TapoPlug-Rest-API"
    },
    "release_url": "https://pypi.org/project/tapo-plug/0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A REST API warper for TP-Link Tapo P100/P105.",
    "version": "0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11381069,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1a18cf289731166153babdc93042711f55ae56a8155e0793e001aed79a956b1",
          "md5": "cb4d55755c2d18116a0380a00c6177e4",
          "sha256": "84e83c78fc5bc95b0064dc382cbb29dd46458a1c37c22a968bab19296a2c0da6"
        },
        "downloads": -1,
        "filename": "tapo_plug-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cb4d55755c2d18116a0380a00c6177e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6093,
        "upload_time": "2021-09-01T04:48:31",
        "upload_time_iso_8601": "2021-09-01T04:48:31.298782Z",
        "url": "https://files.pythonhosted.org/packages/a1/a1/8cf289731166153babdc93042711f55ae56a8155e0793e001aed79a956b1/tapo_plug-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e7dd64ecd9b57911fd42051aa2ffcb17eb9ca44d55aedee1a9d3dc83ce4ef57",
          "md5": "2f874378677b7965dfd63abe2c59c573",
          "sha256": "34c2d55dbbe1496b8da0b865b0322601db1985782a03a9e4e2b0c6e12d08b122"
        },
        "downloads": -1,
        "filename": "tapo_plug-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2f874378677b7965dfd63abe2c59c573",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7600,
        "upload_time": "2021-09-01T04:58:49",
        "upload_time_iso_8601": "2021-09-01T04:58:49.723661Z",
        "url": "https://files.pythonhosted.org/packages/8e/7d/d64ecd9b57911fd42051aa2ffcb17eb9ca44d55aedee1a9d3dc83ce4ef57/tapo_plug-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "448b3231821bf510ef733220fc7b8fbbab3be424bdc31133017712b0055f60c7",
          "md5": "23b40b0235788d6a153400a1e864285b",
          "sha256": "881940bc0ddd6ce870e0df327d6b051671612805a9546a3c0b7c61694839af6f"
        },
        "downloads": -1,
        "filename": "tapo_plug-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "23b40b0235788d6a153400a1e864285b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7676,
        "upload_time": "2021-09-01T05:35:38",
        "upload_time_iso_8601": "2021-09-01T05:35:38.089270Z",
        "url": "https://files.pythonhosted.org/packages/44/8b/3231821bf510ef733220fc7b8fbbab3be424bdc31133017712b0055f60c7/tapo_plug-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a96439deaac906b966232f25a5377f760af2ec8d6e7992021e2b277a9f0c80de",
          "md5": "576170b42a180dfd5aa60b572907cf1e",
          "sha256": "d2a02abda2df8462526ce8a5bc27f486189949467a2f7a725fa7685c7919ca2f"
        },
        "downloads": -1,
        "filename": "tapo_plug-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "576170b42a180dfd5aa60b572907cf1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7674,
        "upload_time": "2021-09-01T05:35:39",
        "upload_time_iso_8601": "2021-09-01T05:35:39.756351Z",
        "url": "https://files.pythonhosted.org/packages/a9/64/39deaac906b966232f25a5377f760af2ec8d6e7992021e2b277a9f0c80de/tapo_plug-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dabd45fbf83d4841b9317e872f9949417bf2603a4ba073dacb0ccee8410a8bf7",
          "md5": "1f16950f03daaf183b88b91db6c4932a",
          "sha256": "ab8efc9444b801d01a7075981e502d71ec9841d260d79dcfeff1dc82ae1e8f7c"
        },
        "downloads": -1,
        "filename": "tapo_plug-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1f16950f03daaf183b88b91db6c4932a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7671,
        "upload_time": "2021-09-01T05:35:41",
        "upload_time_iso_8601": "2021-09-01T05:35:41.066480Z",
        "url": "https://files.pythonhosted.org/packages/da/bd/45fbf83d4841b9317e872f9949417bf2603a4ba073dacb0ccee8410a8bf7/tapo_plug-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50c42beb85d1880074349ca9eaca470e0fab685f6ed8a2579edc84e5c58100bc",
          "md5": "0761c625b9e3952c86ef69707f845c16",
          "sha256": "e06dacfee39f32f9113dc1816ef918cd162e07eef6139902928e8f6091aa764c"
        },
        "downloads": -1,
        "filename": "tapo_plug-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0761c625b9e3952c86ef69707f845c16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7679,
        "upload_time": "2021-09-01T09:43:20",
        "upload_time_iso_8601": "2021-09-01T09:43:20.618986Z",
        "url": "https://files.pythonhosted.org/packages/50/c4/2beb85d1880074349ca9eaca470e0fab685f6ed8a2579edc84e5c58100bc/tapo_plug-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fe430d923f1bd20fc6117881443b6a7f443d5cafc035201febdb98791dd79b0",
          "md5": "0beb164c112a824ca84399a838af63eb",
          "sha256": "867297e28e91d256b470e1eb90f4218b3f8cb4d6e852ad35d58049ec8619cb99"
        },
        "downloads": -1,
        "filename": "tapo_plug-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "0beb164c112a824ca84399a838af63eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8361,
        "upload_time": "2021-09-07T00:44:55",
        "upload_time_iso_8601": "2021-09-07T00:44:55.701201Z",
        "url": "https://files.pythonhosted.org/packages/2f/e4/30d923f1bd20fc6117881443b6a7f443d5cafc035201febdb98791dd79b0/tapo_plug-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2fe430d923f1bd20fc6117881443b6a7f443d5cafc035201febdb98791dd79b0",
        "md5": "0beb164c112a824ca84399a838af63eb",
        "sha256": "867297e28e91d256b470e1eb90f4218b3f8cb4d6e852ad35d58049ec8619cb99"
      },
      "downloads": -1,
      "filename": "tapo_plug-0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "0beb164c112a824ca84399a838af63eb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8361,
      "upload_time": "2021-09-07T00:44:55",
      "upload_time_iso_8601": "2021-09-07T00:44:55.701201Z",
      "url": "https://files.pythonhosted.org/packages/2f/e4/30d923f1bd20fc6117881443b6a7f443d5cafc035201febdb98791dd79b0/tapo_plug-0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}