{
  "info": {
    "author": "Martin Dou≈°a",
    "author_email": "martindousa186@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Topic :: Multimedia",
      "Topic :: Utilities"
    ],
    "description": "# Elementarise image\n\n## Description\nLibrary for generating images from basic shapes.\n\n### Example\n![o1](https://github.com/Matesxs/elementarise/blob/master/media/cat.jpg?raw=true \"Original\")\n![g1](https://github.com/Matesxs/elementarise/blob/master/media/cat_result.png?raw=true \"Generated\")  \n![o2](https://github.com/Matesxs/elementarise/blob/master/media/eevee.png?raw=true \"Original\")\n![g2](https://github.com/Matesxs/elementarise/blob/master/media/eevee_result.png?raw=true \"Generated\")  \n![o3](https://github.com/Matesxs/elementarise/blob/master/media/portal.png?raw=true \"Original\")\n![g3](https://github.com/Matesxs/elementarise/blob/master/media/portal_result.png?raw=true \"Generated\")\n\n\n## How it works\nThe library is guessing parameters of selected element and placing it on process image with intension of matching the reference image as good as possible.\n\n\n## Setup\n### Instalation\n```\npip install elementarise\n```\n\n### Development\n```\npython setup.py develop\n```\n\n\n## Usage\n### Programatic use\n#### Parameter list\n```python\nElementariser(\n  reference_image:np.ndarray, \n  checkpoint_image:typing.Optional[np.ndarray]=None,\n  process_scale_factor:float=1.0, \n  output_scale_factor:float=1.0,\n  num_of_elements:int=2000,\n  batch_size:int=200,\n  num_of_retries:int=20,\n  width_divs:int=1, \n  height_divs:int=1,\n  min_alpha:int=1,\n  max_alpha:int=255,\n  max_size_start_coef:float=0.4,\n  max_size_end_coef:float=0.1,\n  max_size_decay_coef:float=1.0,\n  min_size:int=2,\n  element_type:typing.Union[ElementType, str]=ElementType.LINE,\n  tile_select_mode:typing.Union[TileSelectMode, str]=TileSelectMode.RANDOM,\n  tile_target:typing.Optional[typing.Tuple[int, int]]=None,\n  workers:int=1,\n  save_progress:bool=False,\n  progress_save_path:str=\"tmp\",\n  progress_callback:typing.Optional[typing.Callable[[np.ndarray, float], None]]=None,\n  custom_process_metrics:typing.Optional[typing.Tuple[typing.Callable[[np.ndarray, np.ndarray], float], typing.Union[MetricsMode, str]]]=None,\n  custom_evaluation_metrics:typing.Optional[typing.Tuple[typing.Callable[[np.ndarray, np.ndarray], float], typing.Union[MetricsMode, str]]]=None,\n  min_improvement: int=2000,\n  debug_on_progress_image:bool=False,\n  debug:bool=False,\n  use_tqdm:bool=False,\n  visualise_progress:bool=False\n)\n```\n\n#### Example use\n\n```python\nfrom elementarise import Elementariser, ElementType\nfrom PIL import Image\nimport numpy as np\n\nreference_image = np.array(Image.open(\"reference_image.png\", mode=\"RGB\"))\n\nelementariser = Elementariser(\n  reference_image,\n  process_scale_factor=0.5,\n  output_scale_factor=2.0,\n  num_of_elements=5000,\n  batch_size=200,\n  num_of_retries=50,\n  width_divs=2,\n  height_divs=2,\n  element_type=ElementType.CIRCLE,\n  workers=4,\n  use_tqdm=True\n)\n\noutput_image = elementariser.run()\nImage.fromarray(reference_image, mode=\"RGB\").save(\"result.png\")\n```\n\n### Script\n```\npython -m elementarise --help\n\nusage: __main__.py [-h] --input INPUT --output OUTPUT [--checkpoint CHECKPOINT] [--elements ELEMENTS] [--batch_size BATCH_SIZE] [--tries TRIES]\n                   [--element_type ELEMENT_TYPE] [--min_alpha MIN_ALPHA] [--max_alpha MAX_ALPHA] [--max_size_start_coef MAX_SIZE_START_COEF]\n                   [--max_size_end_coef MAX_SIZE_END_COEF] [--max_size_decay_coef MAX_SIZE_DECAY_COEF] [--min_size MIN_SIZE]\n                   [--tile_select_mode TILE_SELECT_MODE] [--target_tile TARGET_TILE] [--process_scale_factor PROCESS_SCALE_FACTOR]\n                   [--output_scale_factor OUTPUT_SCALE_FACTOR] [--width_splits WIDTH_SPLITS] [--height_splits HEIGHT_SPLITS] [--workers WORKERS]\n                   [--disable_visuals] [--save_progress] [--progress_folder PROGRESS_FOLDER]\n\noptions:\n  -h, --help            show this help message and exit\n  --input INPUT, -i INPUT\n                        Path to input image\n  --output OUTPUT, -o OUTPUT\n                        Path to output image\n  --checkpoint CHECKPOINT, -ch CHECKPOINT\n                        Path to checkpoint image\n  --elements ELEMENTS, -e ELEMENTS\n                        Number of elements to draw (default: 2000)\n  --batch_size BATCH_SIZE, -b BATCH_SIZE\n                        Number of elements generated to test (default: 200)\n  --tries TRIES, -t TRIES\n                        Limit number of repeats per element (default: 20)\n  --element_type ELEMENT_TYPE, -et ELEMENT_TYPE\n                        Element used for recreating reference image (default: line), line, circle, triangle, square, pentagon, hexagon, octagon, random\n  --min_alpha MIN_ALPHA\n                        Minimal alpha value (default: 1)\n  --max_alpha MAX_ALPHA\n                        Maximal alpha value (default: 255)\n  --max_size_start_coef MAX_SIZE_START_COEF\n                        Maximum size start coef (default: 0.4)\n  --max_size_end_coef MAX_SIZE_END_COEF\n                        Maximum size final coef (default: 0.1)\n  --max_size_decay_coef MAX_SIZE_DECAY_COEF\n                        Maximum size decay coef (multiplier for size translation) (default: 1)\n  --min_size MIN_SIZE   Minimum size (default: 2)\n  --tile_select_mode TILE_SELECT_MODE, -tsm TILE_SELECT_MODE\n                        Tile select mode changes behaviour of tile selection when multiple of them are present (default: random), random - tiles are\n                        selected randomly, round_robin - tiles are selected one after another, priority - tiles with worst metrics will get processed first,\n                        one_by_one - tiles will be completed one after another (not good for generating from start), target - target specific tile for\n                        processing\n  --target_tile TARGET_TILE\n                        Tile indexes for target tile select mode\n  --process_scale_factor PROCESS_SCALE_FACTOR, -psf PROCESS_SCALE_FACTOR\n                        Scale down factor for generating image (example: 2 will scale image size in both axis by factor of 2)\n  --output_scale_factor OUTPUT_SCALE_FACTOR, -osf OUTPUT_SCALE_FACTOR\n                        Scale factor for output image (same behaviour as process_scale_factor)\n  --width_splits WIDTH_SPLITS, -ws WIDTH_SPLITS\n                        Number of width splits for generating elements in smaller more specific areas (1 = no splits - default)\n  --height_splits HEIGHT_SPLITS, -hs HEIGHT_SPLITS\n                        Same as width splits only for height\n  --workers WORKERS, -w WORKERS\n                        Number of workers\n  --disable_visuals     Disable progress image output\n  --save_progress       Store progress of generation\n  --progress_folder PROGRESS_FOLDER\n                        Path to folder where progress imagis will be saved (default: tmp)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Matesxs/elementarise",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "elementarise",
    "package_url": "https://pypi.org/project/elementarise/",
    "platform": null,
    "project_url": "https://pypi.org/project/elementarise/",
    "project_urls": {
      "Homepage": "https://github.com/Matesxs/elementarise"
    },
    "release_url": "https://pypi.org/project/elementarise/0.1.4/",
    "requires_dist": [
      "numpy (~=1.22.4)",
      "opencv-python (~=4.6.0.66)",
      "Pillow (~=9.2.0)",
      "numba (==0.56.2)",
      "tqdm (==4.64.1)"
    ],
    "requires_python": "",
    "summary": "Generate elementarised image",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15059760,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7858df90eebfc796ec17834c8e30f93526a3201098eb064c99141b469850ae20",
          "md5": "593dc613ea6e943ae3bc403c9231e007",
          "sha256": "b9e762b2b3bfbc5f29aeb966d31ae5d4be4b28e81dc14e481be996d813f146a8"
        },
        "downloads": -1,
        "filename": "elementarise-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "593dc613ea6e943ae3bc403c9231e007",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15347,
        "upload_time": "2022-09-10T20:21:14",
        "upload_time_iso_8601": "2022-09-10T20:21:14.746729Z",
        "url": "https://files.pythonhosted.org/packages/78/58/df90eebfc796ec17834c8e30f93526a3201098eb064c99141b469850ae20/elementarise-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c00187be173d237e001f41c36807d5a0e3fcf551c475d2d54ecdf857757686c",
          "md5": "bd8b790ce87a0f3d5cecc8d06b755cc8",
          "sha256": "abcb87e0f9016a90ce8aa8ffb7ca8a66a3ab8806e1a0624ba66320c8a507d998"
        },
        "downloads": -1,
        "filename": "elementarise-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bd8b790ce87a0f3d5cecc8d06b755cc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14200,
        "upload_time": "2022-09-10T20:21:16",
        "upload_time_iso_8601": "2022-09-10T20:21:16.543661Z",
        "url": "https://files.pythonhosted.org/packages/0c/00/187be173d237e001f41c36807d5a0e3fcf551c475d2d54ecdf857757686c/elementarise-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "940fbbc0eec6cd8d990d0d79c6e606ea7b547e806bd1b177422c66922f1906d8",
          "md5": "c50b07c7a475d346a3af39ad4c4d7de9",
          "sha256": "5384d3675840df21eebf31ce0857a907a507fcbf822922f22a602d6af1c50669"
        },
        "downloads": -1,
        "filename": "elementarise-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c50b07c7a475d346a3af39ad4c4d7de9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15245,
        "upload_time": "2022-09-10T20:24:58",
        "upload_time_iso_8601": "2022-09-10T20:24:58.440866Z",
        "url": "https://files.pythonhosted.org/packages/94/0f/bbc0eec6cd8d990d0d79c6e606ea7b547e806bd1b177422c66922f1906d8/elementarise-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6de3051a9f56bcf410b14fa673b04e0632b624bda07c3c5de02e902d3c5e624a",
          "md5": "0237009a1bbb8e2bdc8ee02759016ab0",
          "sha256": "607c45747dd4805628e6ab797aed29e0ed6814c1e6431d0908c7a6ea8fd3cb92"
        },
        "downloads": -1,
        "filename": "elementarise-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0237009a1bbb8e2bdc8ee02759016ab0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13981,
        "upload_time": "2022-09-10T20:25:00",
        "upload_time_iso_8601": "2022-09-10T20:25:00.023451Z",
        "url": "https://files.pythonhosted.org/packages/6d/e3/051a9f56bcf410b14fa673b04e0632b624bda07c3c5de02e902d3c5e624a/elementarise-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "839aa8f23ad84469bfe0d86844880d8e10cfddd2f0881a0996dfdabd382476ad",
          "md5": "4e5eb5501da8b260d174ce93899c58e4",
          "sha256": "4ff3458148cd3b6f591d273e656f763c527ccb6fb6d0971839fd367b75f8bc61"
        },
        "downloads": -1,
        "filename": "elementarise-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e5eb5501da8b260d174ce93899c58e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16313,
        "upload_time": "2022-09-11T18:31:57",
        "upload_time_iso_8601": "2022-09-11T18:31:57.787649Z",
        "url": "https://files.pythonhosted.org/packages/83/9a/a8f23ad84469bfe0d86844880d8e10cfddd2f0881a0996dfdabd382476ad/elementarise-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70f5553a9506b6299aa14eda04842e97c7f7cb2a25a187dc740fb496021ae424",
          "md5": "dd42b0b52fd7135afc705fb1d0c52aff",
          "sha256": "d868bf02f08976979faea8a3609b6f14ad6bbc62aa70e71f63a019cff398322f"
        },
        "downloads": -1,
        "filename": "elementarise-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "dd42b0b52fd7135afc705fb1d0c52aff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15086,
        "upload_time": "2022-09-11T18:31:59",
        "upload_time_iso_8601": "2022-09-11T18:31:59.769168Z",
        "url": "https://files.pythonhosted.org/packages/70/f5/553a9506b6299aa14eda04842e97c7f7cb2a25a187dc740fb496021ae424/elementarise-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "839aa8f23ad84469bfe0d86844880d8e10cfddd2f0881a0996dfdabd382476ad",
        "md5": "4e5eb5501da8b260d174ce93899c58e4",
        "sha256": "4ff3458148cd3b6f591d273e656f763c527ccb6fb6d0971839fd367b75f8bc61"
      },
      "downloads": -1,
      "filename": "elementarise-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4e5eb5501da8b260d174ce93899c58e4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16313,
      "upload_time": "2022-09-11T18:31:57",
      "upload_time_iso_8601": "2022-09-11T18:31:57.787649Z",
      "url": "https://files.pythonhosted.org/packages/83/9a/a8f23ad84469bfe0d86844880d8e10cfddd2f0881a0996dfdabd382476ad/elementarise-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70f5553a9506b6299aa14eda04842e97c7f7cb2a25a187dc740fb496021ae424",
        "md5": "dd42b0b52fd7135afc705fb1d0c52aff",
        "sha256": "d868bf02f08976979faea8a3609b6f14ad6bbc62aa70e71f63a019cff398322f"
      },
      "downloads": -1,
      "filename": "elementarise-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "dd42b0b52fd7135afc705fb1d0c52aff",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15086,
      "upload_time": "2022-09-11T18:31:59",
      "upload_time_iso_8601": "2022-09-11T18:31:59.769168Z",
      "url": "https://files.pythonhosted.org/packages/70/f5/553a9506b6299aa14eda04842e97c7f7cb2a25a187dc740fb496021ae424/elementarise-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}