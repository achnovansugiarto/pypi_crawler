{
  "info": {
    "author": "Florian Berger",
    "author_email": "fberger@florian-berger.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "About\n-----\n\nbikesrv is a server to measure the output of an exercising bike and make\nit available via a web API.\n\nWait, what?\n-----------\n\nOk, you know exercising bikes. That thing that looks like a bike, but\ndoesn't move. You use it when you want to get in shape.\n\nSome of these bikes have an output signal that is fed to a small\ncomputer with a large display across a cable and a mini-jack. The\ndisplay then shows your speed, virtual distance etc.\n\nTurns out that this mini-jack just fits into the audio in of a stock\ncomputer. This is where bikesrv comes into play. It analyses the signal\nfrom the bike and computes the bike's speed.\n\nThe final step is a built-in web server in bikesrv. It makes the current\nspeed is available through a simple HTTP API.\n\nOk, but why?\n------------\n\nYou could do all sorts of analysing and feedback that an ordinary bike\ncomputer does.\n\nBut it is much more fun to turn the exercising bike into a game\ncontroller.\n\nWhat is the HTTP API?\n---------------------\n\nThe server will listen on port 1805. If you call\n\n::\n\n    http://HOST:1805/bikefreq\n\nyou will receive a ``text/plain`` response that contains the current\nnumber of revolutions per second.\n\nPrerequisites\n-------------\n\nPython 2.x http://www.python.org\n\npyo https://code.google.com/p/pyo/issues/list\n\nInstallation\n------------\n\nUnzip the file, then at the command line run\n\n::\n\n    python setup.py install\n\nUsage\n-----\n\nOn the command line, run\n\npython2 bikesrv.py [options]\n\nOptions:\n\n::\n\n    --version             show program's version number and exit\n\n    -h, --help            show this help message and exit\n\n    -v, --verbose         Display debugging information while analysing.\n\n    -r RATE, --rate=RATE  The number of measurements per second. Default: 500\n\n    -d DROPOUTS, --dropouts=DROPOUTS\n                          The number of signal breaks per full wheel turn.\n                          Default: 3\n\nDocumentation\n-------------\n\nTo read the API documentation, open a shell / DOS window, navigate to\nthe bikesrv directory, and run\n\n::\n\n    pydoc bikesrv\n\nYou can create a HTML version using\n\n::\n\n    pydoc -w bikesrv\n\nLicense\n-------\n\nbikesrv is licensed under the GPL. See the file COPYING for details.\n\nAuthor\n------\n\nFlorian Berger",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://florian-berger.de/en/software/bikesrv/",
    "keywords": null,
    "license": "GPL",
    "maintainer": null,
    "maintainer_email": null,
    "name": "bikesrv",
    "package_url": "https://pypi.org/project/bikesrv/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/bikesrv/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://florian-berger.de/en/software/bikesrv/"
    },
    "release_url": "https://pypi.org/project/bikesrv/0.2.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "bikesrv - A server to measure the output of an exercising bike and make it available via an API.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 422183,
  "releases": {
    "0.1.0": [],
    "0.2.0": []
  },
  "urls": [],
  "vulnerabilities": []
}