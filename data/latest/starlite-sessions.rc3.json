{
  "info": {
    "author": "Na'aman Hirschfeld",
    "author_email": "nhirschfeld@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Typing :: Typed"
    ],
    "description": "# Starlite Sessions\n\n<!-- markdownlint-disable -->\n<img alt=\"Starlite logo\" src=\"./starlite-banner.svg\" width=\"100%\" height=\"auto\">\n<!-- markdownlint-restore -->\n\n<div align=\"center\">\n\n![PyPI - License](https://img.shields.io/pypi/l/starlite-sessions?color=blue)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/starlite-sessions)\n\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=starlite-api_starlite-sessions&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=starlite-api_starlite-sessions)\n[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=starlite-api_starlite-sessions&metric=coverage)](https://sonarcloud.io/summary/new_code?id=starlite-api_starlite-sessions)\n\n[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=starlite-api_starlite-sessions&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=starlite-api_starlite-sessions)\n[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=starlite-api_starlite-sessions&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=starlite-api_starlite-sessions)\n[![Reliability Rating](https://sonarcloud.io/api/project_badges/measure?project=starlite-api_starlite-sessions&metric=reliability_rating)](https://sonarcloud.io/summary/new_code?id=starlite-api_starlite-sessions)\n[![Code Smells](https://sonarcloud.io/api/project_badges/measure?project=starlite-api_starlite-sessions&metric=code_smells)](https://sonarcloud.io/summary/new_code?id=starlite-api_starlite-sessions)\n\n[![Discord](https://img.shields.io/discord/919193495116337154?color=blue&label=chat%20on%20discord&logo=discord)](https://discord.gg/X3FJqy8d2j)\n[![Matrix](https://img.shields.io/badge/%5Bm%5D%20chat%20on%20Matrix-bridged-blue)](https://matrix.to/#/#starlitespace:matrix.org)\n\n</div>\n\nThis library offers simple session based authentication for [Starlite](https://github.com/starlite-api/starlite).\n\nCheckout [the docsðŸ“š](https://starlite-api.github.io/starlite-sessions/).\n\n## Installation\n\n```shell\npip install starlite-sessions\n```\n\n## Example\n\n```python\nimport os\nfrom typing import Any, Optional, Literal\n\nfrom pydantic import BaseModel, EmailStr, SecretStr\nfrom starlite import OpenAPIConfig, Request, Starlite, get, post\n\nfrom starlite_sessions import SessionAuth\n\n\n# Let's assume we have a User model that is a pydantic model.\n# This though is not required - we need some sort of user class -\n# but it can be any arbitrary value, e.g. an SQLAlchemy model,\n# a representation of a MongoDB  etc.\nclass User(BaseModel):\n    id: str\n    name: str\n    email: EmailStr\n\n\n# we also have pydantic types for two different\n# kinds of POST request bodies: one for creating\n# a user, e.g. \"sign-up\", and the other for logging\n# an existing user in.\nclass UserCreatePayload(BaseModel):\n    name: str\n    email: EmailStr\n    password: SecretStr\n\n\nclass UserLoginPayload(BaseModel):\n    email: EmailStr\n    password: SecretStr\n\n\n# The SessionAuth class requires a handler callable\n# that takes the session dictionary, and returns the\n# 'User' instance correlating to it.\n#\n# The session dictionary itself is a value the user decides\n# upon. So for example, it might be a simple dictionary\n# that holds a user id, for example: { \"user_id\": \"abcd123\" }\n#\n# Note: The callable can be either sync or async - both will work.\nasync def retrieve_user_handler(session: dict[str, Any]) -> Optional[User]:\n    # insert logic here to retrieve the user instance based on the session data.\n    ...\n\n\n# The minimal configuration required by the library is the\n# callable for the 'retrieve_user_handler', and a bytes value for\n# the secret used to encrypt the session cookie.\n#\n# Important: secrets should never be hardcoded, and its considered\n# best practice to inject secrets via env.\n#\n# Important: the secret should be a 16, 24 or 32\n# characters long byte string (128/192/256 bit).\n#\n# Tip: It's also a good idea to use the pydantic settings\n# management functionality.\nsession_auth = SessionAuth(\n    retrieve_user_handler=retrieve_user_handler,\n    secret=os.environ.get(\"JWT_SECRET\", os.urandom(16)),\n    # exclude any URLs that should not have authentication.\n    # We exclude the documentation URLs, signup and login.\n    exclude=[\"/login\", \"/signup\", \"/schema\"],\n)\n\n\n@post(\"/login\")\nasync def login(data: UserLoginPayload, request: Request) -> User:\n    # we received log-in data via post.\n    # out login handler should retrieve from persistence (a db etc.)\n    # the user data and verify that the login details\n    # are correct. If we are using passwords, we should check that\n    # the password hashes match etc. We will simply assume that we\n    # have done all of that we now have a user value:\n    user: User = ...\n\n    # once verified we can create a session.\n    # to do this we simply need to call the Starlite\n    # 'Request.set_session' method, which accepts either dictionaries\n    # or pydantic models. In our case, we can simply record a\n    # simple dictionary with the user ID value:\n    request.set_session({\"user_id\": user.id})\n\n    # you can do whatever we want here. In this case, we will simply return the user data:\n    return user\n\n\n@post(\"/signup\")\nasync def signup(data: UserCreatePayload, request: Request) -> User:\n    # this is similar to the login handler, except here we should\n    # insert into persistence - after doing whatever extra\n    # validation we might require. We will assume that this is done,\n    # and we now have a user instance with an assigned ID value:\n    user: User = ...\n\n    # we are creating a session the same as we do in the\n    # 'login_handler' above:\n    request.set_session({\"user_id\": user.id})\n\n    # and again, you can add whatever logic is required here, we\n    # will simply return the user:\n    return user\n\n\n# the endpoint below requires the user to be already authenticated\n# to be able to access it.\n@get(\"/user\")\ndef get_user(request: Request[User, dict[Literal[\"user_id\"], str]]) -> Any:\n    # because this route requires authentication, we can access\n    # `request.user`, which is the authenticated user returned\n    # by the 'retrieve_user_handler' function we passed to SessionAuth.\n    return request.user\n\n\n# We add the session security schema to the OpenAPI config.\nopenapi_config = OpenAPIConfig(\n    title=\"My API\",\n    version=\"1.0.0\",\n    components=[session_auth.openapi_components],\n    security=[session_auth.security_requirement],\n)\n\n# We initialize the app instance, passing to it the\n# 'jwt_auth.middleware' and the 'openapi_config'.\napp = Starlite(\n    route_handlers=[login, signup, get_user],\n    middleware=[session_auth.middleware],\n    openapi_config=openapi_config,\n)\n```\n\n## Contributing\n\nStarlite and all its official libraries are open to contributions big and small.\n\nYou can always [join our discord](https://discord.gg/X3FJqy8d2j) server\nor [join our Matrix](https://matrix.to/#/#starlitespace:matrix.org) space to discuss contributions and project\nmaintenance. For guidelines on how to contribute to this library, please see `CONTRIBUTING.md` in the repository's root.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/starlite-api/starlite-sessions",
    "keywords": "starlite,auth,authentication,session,cookie",
    "license": "MIT",
    "maintainer": "Na'aman Hirschfeld",
    "maintainer_email": "nhirschfeld@gmail.com",
    "name": "starlite-sessions",
    "package_url": "https://pypi.org/project/starlite-sessions/",
    "platform": null,
    "project_url": "https://pypi.org/project/starlite-sessions/",
    "project_urls": {
      "Documentation": "https://starlite-api.github.io/starlite-sessions",
      "Homepage": "https://github.com/starlite-api/starlite-sessions",
      "Repository": "https://github.com/starlite-api/starlite-sessions"
    },
    "release_url": "https://pypi.org/project/starlite-sessions/1.2.0/",
    "requires_dist": [
      "starlite (>=1.24.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Starlite Sessions Toolkit",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15305186,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d708eefcfae5adc1b98a53888656e4998e55df56ce458536dc02648d1c45e24",
          "md5": "837cab236d4eedf6919a50f185b08237",
          "sha256": "cda023cfe7b295130a658f8ea1813927c5f4eb2e6f639d339f8ed782716b8a64"
        },
        "downloads": -1,
        "filename": "starlite_sessions-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "837cab236d4eedf6919a50f185b08237",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 7449,
        "upload_time": "2022-09-10T12:28:00",
        "upload_time_iso_8601": "2022-09-10T12:28:00.655720Z",
        "url": "https://files.pythonhosted.org/packages/5d/70/8eefcfae5adc1b98a53888656e4998e55df56ce458536dc02648d1c45e24/starlite_sessions-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7554ad7b6a55d46f031bab4bb25087c35ff784aa86516dcb5591918fbda6ff0c",
          "md5": "224e590babd40f41df4eb69967363ca0",
          "sha256": "8881dc2351b6f6b92f0b64db8a69ea9d871def2598d11119e356202b1393c862"
        },
        "downloads": -1,
        "filename": "starlite-sessions-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "224e590babd40f41df4eb69967363ca0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 8592,
        "upload_time": "2022-09-10T12:27:58",
        "upload_time_iso_8601": "2022-09-10T12:27:58.230332Z",
        "url": "https://files.pythonhosted.org/packages/75/54/ad7b6a55d46f031bab4bb25087c35ff784aa86516dcb5591918fbda6ff0c/starlite-sessions-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f21d1a558c50a5566bf2ad80aa253fd1e7190e4a4acf489398b511463f457921",
          "md5": "ccb36a4206d9d8de70877b4269780841",
          "sha256": "f227df03a904c148e2fedf3f493450ba939e744fdc64d71a473a75a42f354d1c"
        },
        "downloads": -1,
        "filename": "starlite_sessions-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ccb36a4206d9d8de70877b4269780841",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 7833,
        "upload_time": "2022-09-11T09:05:11",
        "upload_time_iso_8601": "2022-09-11T09:05:11.249791Z",
        "url": "https://files.pythonhosted.org/packages/f2/1d/1a558c50a5566bf2ad80aa253fd1e7190e4a4acf489398b511463f457921/starlite_sessions-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbf7d0d700009e0c5a3d34d3f278f21e5bcf7afa202bc38f5aee61f4a52510d7",
          "md5": "67d6a5b57b2554544e6c446359fb357d",
          "sha256": "86e132ffdc870392c29522c454360f9770e15c6db87ac967e20135a62b373780"
        },
        "downloads": -1,
        "filename": "starlite-sessions-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "67d6a5b57b2554544e6c446359fb357d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 8707,
        "upload_time": "2022-09-11T09:05:10",
        "upload_time_iso_8601": "2022-09-11T09:05:10.103236Z",
        "url": "https://files.pythonhosted.org/packages/fb/f7/d0d700009e0c5a3d34d3f278f21e5bcf7afa202bc38f5aee61f4a52510d7/starlite-sessions-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0974ff3dccc4d722e0b10cc7ebf2b826bbe5f8c1530a595e25cba373e92de279",
          "md5": "004487ce4f3a479809adfd4d8fb75f07",
          "sha256": "31143fcacb73055abecf68595db31136acd999c2f4d014a2cd19f297d1c83287"
        },
        "downloads": -1,
        "filename": "starlite_sessions-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "004487ce4f3a479809adfd4d8fb75f07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 7910,
        "upload_time": "2022-10-04T18:14:32",
        "upload_time_iso_8601": "2022-10-04T18:14:32.218738Z",
        "url": "https://files.pythonhosted.org/packages/09/74/ff3dccc4d722e0b10cc7ebf2b826bbe5f8c1530a595e25cba373e92de279/starlite_sessions-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0968a1b4f13f4a199d4ddcf9ed20fd1f7a1dfe146bcb0100d0c712989734b06a",
          "md5": "f652bc2ed11310c3cb4d770ab31e2fb9",
          "sha256": "9f309a2f9da82e78dbc5142ae56084d7df44aab6d0de4cea1aceef411df806d7"
        },
        "downloads": -1,
        "filename": "starlite-sessions-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f652bc2ed11310c3cb4d770ab31e2fb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 8778,
        "upload_time": "2022-10-04T18:14:30",
        "upload_time_iso_8601": "2022-10-04T18:14:30.931308Z",
        "url": "https://files.pythonhosted.org/packages/09/68/a1b4f13f4a199d4ddcf9ed20fd1f7a1dfe146bcb0100d0c712989734b06a/starlite-sessions-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0974ff3dccc4d722e0b10cc7ebf2b826bbe5f8c1530a595e25cba373e92de279",
        "md5": "004487ce4f3a479809adfd4d8fb75f07",
        "sha256": "31143fcacb73055abecf68595db31136acd999c2f4d014a2cd19f297d1c83287"
      },
      "downloads": -1,
      "filename": "starlite_sessions-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "004487ce4f3a479809adfd4d8fb75f07",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 7910,
      "upload_time": "2022-10-04T18:14:32",
      "upload_time_iso_8601": "2022-10-04T18:14:32.218738Z",
      "url": "https://files.pythonhosted.org/packages/09/74/ff3dccc4d722e0b10cc7ebf2b826bbe5f8c1530a595e25cba373e92de279/starlite_sessions-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0968a1b4f13f4a199d4ddcf9ed20fd1f7a1dfe146bcb0100d0c712989734b06a",
        "md5": "f652bc2ed11310c3cb4d770ab31e2fb9",
        "sha256": "9f309a2f9da82e78dbc5142ae56084d7df44aab6d0de4cea1aceef411df806d7"
      },
      "downloads": -1,
      "filename": "starlite-sessions-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f652bc2ed11310c3cb4d770ab31e2fb9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 8778,
      "upload_time": "2022-10-04T18:14:30",
      "upload_time_iso_8601": "2022-10-04T18:14:30.931308Z",
      "url": "https://files.pythonhosted.org/packages/09/68/a1b4f13f4a199d4ddcf9ed20fd1f7a1dfe146bcb0100d0c712989734b06a/starlite-sessions-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}