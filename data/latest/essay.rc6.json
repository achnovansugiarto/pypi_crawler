{
  "info": {
    "author": "SohuTech",
    "author_email": "thefivefire@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# 介绍： \n\n------------------------------------\n\nessay是我们团队在过去两年Python项目持续部署上经验的总结，核心功能是打包和多Server部署。这个工具的主要功能是简化从开发到部署的流程，方便服务器的扩展。除了打包和部署功能之外，essay还提供了其他的工具，在后面的接口描述中有详细介绍。\n\nessay是基于Fabric开发，在使用上依赖于pypi Server和github/Gitlab。\n\n\n\n# 快速开始\n\n------------------------------------\n\n*这里使用自己搭建的pypiserver作为pypi server，github作为代码仓库。*\n\n1. 安装essay： ``pip install essay``\n2. github上创建项目：essay_demo_webpy\n3. **创建项目**。终端上执行： ``es create essay_demo_webpy`` ，根据提示输入你新创建的git仓库地址，回车完毕你会发现你的github上已经有了初始化好的一个项目结构\n\n\n        .\n        └── essay_demo_webpy\n            ├── MANIFEST.in\n            ├── README.md\n            ├── conf\n            │   └── supervisord.conf\n            ├── essay_demo\n            │   ├── __init__.py\n            │   ├── log.py\n            │   ├── main.py\n            │   └── settings.py\n            ├── fabfile\n            │   └── __init__.py\n            └── setup.py\n\n        4 directories, 9 files\n\n4. **打包项目**。此时你可以在本地的essay_demo_webpy目录下执行： ``fab -l`` 命令查看哪些命令可用。然后执行 ``fab build.build`` 命令，会帮你打包成tar的源码包，并添加版本后缀，如：essay_demo_webpy-3.11.20.1.tar.gz，之后会被上传到上面说到得pypiserver上。\n\n    关于build.build有四个可选参数,fab build.build:name=fixbug,version=0.1,commit=451a9a2784f,branch=master,也可以使用位置参数: ``fab build.build:fixbug,0.1,451a9a2784f,master`` 。其中commit和branch不能同时设置,commit优先于branch起作用。\n\n    各参数详解：\n\n        name, 版本的后缀，如上例的结果是: essay_demo_webpy-0.1-fixbug.tar.gz\n        varsion, 版本号，如果为空则会产生：essay_demo_webpy-3.11.20.1-fixbug.tar.gz。规则是：年.月.日.次\n        commit, 是要打包的commit节点\n        branch, 要打包的分支，默认为fabfile下__init__.py中的配置\n\n5. **部署项目**。这时在pypiserver上已经有了打好的包，假设为: essay_demo_webpy-3.11.20.1.tar.gz 。然后开始安装，执行： ``fab -R dev deploy:3.11.20.1,a,test`` 把项目安装到fabfile里设置的dev这个role的服务器上，可以是一个或者多个server。\n    \n    *deploy参数解释：*\n        \n        deploy后面有三个参数，分别表示：版本号，虚拟环境目录名，profile（会传递到supervisord.conf中）\n        版本号在上面已经提到，不赘述。\n        虚拟环境目录名：依赖于fabfile中设置的 env.VIRTUALENV_PREFIX='~/essay_demo_webpy' ，这里参数为a，表示将在服务器家目录下得essay_demo_webpy目录下创建一个目录为 a 的virtualenv环境。\n        profile：用来控制程序处于什么状态，比如可以传递debug进去，需要程序自己处理。参数会被传递到supervisord.conf中。\n\n> 0.0.7 新增：\n> 可以在fabfile中增加:\n\n    def pre_deploy(version, venv, profile):\n        do_something()\n    env.DEPLOY_PRE_DEPLOY = pre_deploy\n\n    def post_deploy(version, venv, profile):\n        do_something()\n    env.DEPLOY_POST_DEPLOY = post_deploy\n\n> 来处理部署前后的操作，两个hook均会在虚拟环境激活状态下执行\n\n    deploy的内部的过程是：登录-R指定的服务器，在配置的VIRTUALENV_PREFIX目录下创建a虚拟环境，之后在此环境中通过pip安装已打包好的项目，最后通过supervisord来启动程序进程。\n\n6. **快速部署** 针对需要直接部署某个分支或者commit的需求，该功能是基于上面的两个功能： ``build`` 和 ``deploy``。\n\n    *使用方法:*\n    fab -R <role> deploy.quickdeploy:venv_dir,profile,branch\n\n    参数解释::\n        venv_dir: 虚拟环境名称\n        profile： 运行环境配置，同上面\n        branch： 要部署的分支\n\n*可以参考Demo：https://github.com/SohuTech/essay_demo_webpy 中的一些配置*\n\n\n# 配置文件详解\n\n------------------------------------\n\n介绍主要的两个配置文件fabfile和supervisord\n\n### fabfile配置\n\n** myproject/fabfile/__init__.py **\n\n所有env配置项，可根据自身业务删除/添加\n\n\n\t\t1. git服务器\n\n\t\t\tenv.GIT_SERVER = 'https://github.com/' # ssh地址只需要填：github.com\n\n\t\t2. 项目名（与git上项目名保持一致） \n\t\t\n\t\t\tenv.PROJECT = 'project_name'\n\t\t\n\t\t3. 项目在打包服务器上的路径，会在此目录下执行打包操作\n\t\t\n\t\t\tenv.BUILD_PATH = '/opt/deploy/'\n\t\t\n\t\t4. 项目所有者（与git保持一致）\n\t\t\n\t\t\tenv.PROJECT_OWNER = 'EssayTech'\n\t\t\n\t\t5. git默认分支\n\t\t\n\t\t\tenv.DEFAULT_BRANCH = 'master'\n\t\t\n\t\t6. pypi-server地址\n\t\t\n\t\t\tenv.PYPI_INDEX = 'http://pypi.python.org/simple/'\n\t\t\t\n\t\t部署相关：\n\t\t\n\t\t7. 部署启动进程数目\n\t\t\n\t\t\tenv.PROCESS_COUNT = 2 #部署时启动的进程数目, 会传递到supervisord.conf中\n\t\t\n\t\t8. 服务器角色, 打包或部署时通过 ``-R`` 参数指定服务器角色, 每个角色可以定义多组服务器\n\t\t\t\n\t\t\tenv.roledefs = {\n\t\t\t'build': ['username@buildserverip:port'], # 打包服务器配置\n\t\t\t'dev': ['eassay@127.0.0.1:2202'],\t#部署服务器配置\n\t\t\t}\n\n\t\t9. 虚拟环境目录, 部署时会在服务器上此目录下创建虚拟环境\n\t\t\t\n\t\t\tenv.VIRTUALENV_PREFIX = '/home/SohuTech/project_name'\n\t\t\n\t\t12. supervisor配置文件地址, PROJECT_ROOT为项目根目录\n\t\t\n\t\t\tenv.SUPERVISOR_CONF_TEMPLATE = os.path.join(PROJECT_ROOT, 'conf', 'supervisord.conf')\n\t\t\t\n\t\t13. 根据工程确定项目编号, 不同虚拟环境监听不同的端口，用来配置一个同一机器多个虚拟环境。通过port参数传到supervisord.conf中。\n\t\t\t\t\n\t\t\tPROJECT_NUM = 88\n\t\t\tenv.VENV_PORT_PREFIX_MAP = {\n\t\t\t'a': '%d0' % PROJECT_NUM,\n\t\t\t'b': '%d1' % PROJECT_NUM,\n\t\t\t'c': '%d2' % PROJECT_NUM,\n\t\t\t'd': '%d3' % PROJECT_NUM,\n\t\t\t'e': '%d4' % PROJECT_NUM,\n\t\t\t'f': '%d5' % PROJECT_NUM,\n\t\t\t'g': '%d6' % PROJECT_NUM,\n\t\t\t'h': '%d7' % PROJECT_NUM,\n\t\t\t'i': '%d8' % PROJECT_NUM,\n\t\t\t}\n\n\n        nginx配置用于启动、停止、重启、修改配置文件:\n\n\t\t14. nginx执行文件地址\n\t\t\t\n\t\t\tenv.NGINX_BIN = '/usr/local/nginx/bin/nginx'\n\t\t\t\n\t\t15. nginx配置文件地址\n\t\t\n\t\t\tenv.NGINX_CONF = '/usr/local/nginx/conf/nginx.conf'\n\t\t\t\n\t\t16. 切换nginx环境(关于此项，请看下方essay高级功能用法)\n\n\t\t\tenv.NGINX_SWITCH_CONF = '/etc/nginx/nginx.conf'\n\n### supervisord配置\n\n** myproject/conf/supervisor.conf **\n\n**几个被替换的字段**\n\n\t\t以下参数在fab deploy的时候会替换为fabfile里配置的字段\n\t\t\n\t\t1. {{ run_root }}  虚拟环境地址,对应于fabfile/__init__.py里的env.VIRTUALENV_PREFIX\n\t\t\n\t\t2. {{ username }}\tessay.task.util自动生成用户名\n\t\t\n\t\t3. {{ password }}\tessay.task.util自动生成密码\n\t\t\n\t\t4. {{ project }}\t项目名,对应于fabfile/__init__.py里的env.PROJECT\n\t\t\n\t\t5. {{ port }}  取env.VENV_PORT_PREFIX_MAP对应虚拟环境的端口号\n\t\t\n\t\t6. {{ process_count }}  对应于fabfile配置中的PROCESS_COUNT\n\t\t\n\t\t\n**具体配置**\n\t\t\n\t\t#项目名（被自动替换）\n\t\t[program:{{ project }}]\t\t\n\t\t\n\t\t#运行命令\n\t\tcommand={{ venv_dir}}/bin/{{ project }} --profile={{ profile }} \t\n\t\t\n\t\t#进程名，示例：test_2\n\t\tprocess_name=%(program_name)s_%(process_num)d\t\n\t\t\n\t\t#设置进程umask，即权限为755\n\t\tumask=022\t\n\t\t\n\t\t#启动后10秒内没有异常则认为启动成功\n\t\tstartsecs=10\t\t\n\t\t\n\t\t#等待0秒退出\n\t\tstopwaitsecs=0\t\n\t\t\n\t\t#重定向日志输出地址\n\t\tredirect_stderr=true\t\n\t\t\n\t\t\n\t\t#日志输出地址\n\t\tstdout_logfile={{ run_root }}/logs/process_%(process_num)02d.log\n\t\t\n\t\t\t\n\t\t#启动进程数\n\t\tnumprocs={{ process_count }}\t\n\t\t\n\t\t#如果开启进程数大于1，则指定从序号为0的进程开始\n\t\tnumprocs_start=0\t\n\n\n\n# 可用命令清单及详解\n\n------------------------------------\n\n**1. 创建本地工程,然后同步到git服务器(需要git仓库地址)**\n\n\t\t用默认模板创建\n\t\t\n\t\t1. 先在gitlab/github上创建库：myprojecti，拿到git地址\n\t\t\n\t\t2. es create myproject (后边不加-t参数会使用默认模板创建项目)\n\t\t\n\t\t3. 输入项目git地址\n\t\t\n\t\t用django模板创建\n\t\t\n\t\tes create myproject -t django\n\n**2. 创建本地工程,创建时不需要连接git服务器,后期需要自己git init**\n\n\t#####用法一：\n\t\t\n\t\t生成全新项目\n\t\t\n\t\t1. es init myproject\n\t\t\n\t\t2. cd myproject\n\t\t\n\t\t3. git init\n\t\t\n\t\t4. git remote add origin [git库地址]\n\t\t\n\t\t5. 然后就可以commit和push了\t\n\n\t#####用法二：\n\n\t\t在已存在项目下\n\t\t\n\t\t1. cd myproject\n\t\t\n\t\t2. es init\n\t\t\n\t\t会为项目生成fabfile, conf, setup.py, MANIFEST.in, README.md\n\n**3. 打包**\n\n\t\t1. fab build.build\n\n**4. 获取项目最新版本号**\n\n\t\t1. cd myproject\n\n\t\t2. fab build.get_latest_version\n\n**5. 计算项目下一版本号**\n\n\t\t1. cd myproject\n\n\t\t2. fab build.get_next_version\n\n**6. 部署(参数: 项目版本号, 虚拟环境名, profile)**\n\t\n\t\t1. cd myproject\n\t\n\t\t2. fab deploy:3.11.18.2,virtualenv_name,test \n\n**7. 重启指定虚拟环境的supervisor(参数: 虚拟环境名)**\n\n\t\t1.cd myproject\n\n\t\t2.fab supervisor.reload:virtualenv_name\n\n\n**8. 重启虚拟环境的项目的特定进程(参数: 进程名, 虚拟环境名)**\n\n\t\t1. cd myproject\n\t\t\n\t\t2. fab supervisor.restart_process:process_name,virtualenv_name\n\n**9. 启动虚拟环境的项目的特定进程(参数: 进程名, 虚拟环境名)**\n\n\t\t1. cd myproject\n\n\t\t2. fab supervisor.start_process:process_name,virtualenv_name\n\n**10. 关闭虚拟环境的项目的特定进程(参数: 进程名, 虚拟环境名)**\n\n\t\t1. cd myproject\n\n\t\t2. fab supervisor.stop_process:process_name,virtualenv_name\n\n\n**11. 启动nginx(参数: nginx执行命令地址, nginx配置文件地址)**\n\n\t\t\n\t\t注意: nginx_bin, nginx_conf 可在myproject/fabfile/__init__.py中配置\n\t\t例如: env.NGINX_BIN = '/usr/local/nginx/sbin/nginx'\n\t\t\t  env.NGINX_CONF = '/usr/local/nginx/conf/nginx.conf'\n\n\t\t1. cd myproject\n\n\t\t2. fab nginx.start\n\t\t\n\t\t如果不配置__init__.py\n\t\t\n\t\tfab nginx.start:nginx_bin,nginx_conf\n\n**12. 重启nginx(参数: nginx执行命令地址, nginx配置文件地址)**\n\n\t\t1. cd myproject\n\n\t\t2. fab nginx.reload:nginx_bin,nginx_conf\n\n**13. 关闭nginx(参数: nginx执行命令地址, nginx配置文件地址)**\n\n\t\t1. cd myproject\n\n\t\t2. fab nginx.stop:nginx_bin,nginx_conf\n \n\n**14. 修改nginx配置文件并重启(参数: 源文本, 目标文本, nginx执行命令令, nginx配置文件地址)**\n\n\n\t\t1. cd myproject\n\n\t\t2. fab nginx.switch:src_pattern,dst_pattern,nginx_bin,nginx_conf\n\n\n**15. 获取帮助**\n\n\t\tes -h\n\t\t\n**16. 从内部pypi安装包,pypi服务器地址在project/__init__.py中可设置**\n\n\t\tes pinstall xxx\n\t\t\n**17. 从官方pypi安装包(支持pip其他命令)**\n\n\t\tes install xxx\n\t\t\n\n\n# 高级功能介绍\n\n------------------------------------\n\n介绍nginx服务器配置以及a，b环境切换的处理\n\n**功能：**\n\n    1. 保证新代码上线时，重启某一虚拟环境中的web服务，不会对用户访问造成中断。\n    2. 新上线代码出现bug时，及时回滚到上一次的版本。\n    \n**场景介绍**\n    \n    假设目前有server1和server2两台服务器，ip分别为ip1、ip2。两台服务器均部署了两个虚拟环境a和b。a环境运行的项目监听在端口8801，b环境运行的项目监听在端口8811。\n\n下面是简单的nginx示例：\n\n*nginx.conf*\n\n\t\tuser nginx;\n\t\tworker_processes 1;\n\t\t \n\t\t#error_log /var/log/nginx/error.log warn;\n\t\tpid /var/run/nginx.pid;\n\t\t \n\t\tevents {\n            worker_connections 1024;\n\t\t}\n\t\t \n\t\thttp {\n            include /etc/nginx/mime.types;\n            default_type application/octet-stream;\n            \n            log_format main '$remote_addr - $remote_user [$time_local] \"$request\" '\n            '$status $body_bytes_sent \"$http_referer\" '\n            '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n            \n            #access_log /var/log/nginx/access.log main;\n            \n            sendfile on;\n            #tcp_nopush on;\n            \n            keepalive_timeout 65;\n            \n            #gzip on;\n            \n            \n            include extra/essay_demo.conf;\n            include extra/upstreamA.conf;\n\t\t}\n\t\t\n*extra/essay_demo.conf*\n\t\t\n\t\tserver {\n\t\t\tlisten 80;\n\t\t\tserver_name localhost;\n\t\t\taccess_log /var/log/nginx/essay.access.log main;\n\t\t\tlocation / {\n\t\t\t\tproxy_pass http://essay_demo;\n\t\t\t\tproxy_intercept_errors on;\n\t\t\t\tproxy_redirect off;\n\t\t\t\tproxy_connect_timeout 60;\n\t\t\t\tproxy_set_header Host $host;\n\t\t\t\tproxy_set_header X-Real-IP $remote_addr;\n\t\t\t\tset $cookiesize '0';\n\t\t\t\tif ($http_cookie ~ \"_\"){\n\t\t\t\t\tset $cookiesize 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n*extra/upstreamA.conf*\n\n\t\tupstream essay_demo {\n\t\t\tserver ip1:8801;\n\t\t\tserver ip2:8801;\n\t\t}\n\n*extra/upstreamB.conf*\n\n\t\tupstream essay_demo {\n\t\t\tserver ip1:8811;\n\t\t\tserver ip2:8811;\n\t\t}\n\t\t\n目前nginx中配置的是upstreamA.conf，此时用户的访问会被反向代理到ip1和ip2的8801端口上。现在发布新版本上线，使用命令： ``fab -R dev deploy:<版本号>,b,test`` ,发布到b环境。\n\n之后通过命令： ``fab -R nginx nginx.switch:upstreamA,upstreamB`` 把nginx中的upstreamA替换为upstreamB，并reload nginx，这样用户的访问就会被反向代理到ip1和ip2的8811端口上，也就是刚才发布到b环境中的新部署的项目。\n\n**switch完整命令**\nfab -R nginx nginx.switch:src_pattern,dst_pattern,root,nginx_bin,nginx_conf\n\n*switch参数解释：*\n\t\n\t\tsrc_pattern: 原文本 (必填)\n\t\t\n\t\tdst_pattern: 目标文本 (必填)\n\t\t\n\t\troot: 是否使用root用户,  是：root 否：None (可选项，默认为None)\n\t\t\n\t\tnginx_bin: nginx执行命令路径，可以在fabfile/__init__.py下设定 (可选项)\n\t\t\n\t\tnginx_conf: nginx配置文件路径，可以在fabfile/__init__.py下设定 (可选项)\n\t\t\n\n**图示**\n\n\n![essay](data/1.png)\n\n### fab -R dev nginx.switch: upstreamA.conf, upstreamB.conf\n\n![essay](data/2.png)\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/SohuTech/essay",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "essay",
    "package_url": "https://pypi.org/project/essay/",
    "platform": "",
    "project_url": "https://pypi.org/project/essay/",
    "project_urls": {
      "Homepage": "http://github.com/SohuTech/essay"
    },
    "release_url": "https://pypi.org/project/essay/0.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "持续部署工具",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3871004,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59038ce2d8115913692b636e419c9e126410083aeae759d36b3756b1d9bffa8a",
          "md5": "a70770926ed4e0a054456dd8d3ea8de5",
          "sha256": "c3f5433080a8a9001607bfeb34e471b6f6c4c66a39451be0b11ace53c035542e"
        },
        "downloads": -1,
        "filename": "essay-0.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "a70770926ed4e0a054456dd8d3ea8de5",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 32458,
        "upload_time": "2017-05-27T02:28:15",
        "upload_time_iso_8601": "2017-05-27T02:28:15.973468Z",
        "url": "https://files.pythonhosted.org/packages/59/03/8ce2d8115913692b636e419c9e126410083aeae759d36b3756b1d9bffa8a/essay-0.0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69483842d309e9bd139a2ada46f29259d925f7f91983c9881d98f2688f7b66de",
          "md5": "27ba63c88fd2cef3a1950af08febc045",
          "sha256": "be5531c19109f727fd077758b71222010725a1ec5275a3c0c6d7e8c8f5fdafda"
        },
        "downloads": -1,
        "filename": "essay-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "27ba63c88fd2cef3a1950af08febc045",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15452,
        "upload_time": "2017-05-27T02:28:18",
        "upload_time_iso_8601": "2017-05-27T02:28:18.160376Z",
        "url": "https://files.pythonhosted.org/packages/69/48/3842d309e9bd139a2ada46f29259d925f7f91983c9881d98f2688f7b66de/essay-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96650462c5504d6abde7ba36e6b8a28e3213b7eeedfee70212fe7b105f5c8ef6",
          "md5": "042d7f519089df131645297a0bd3ab16",
          "sha256": "a9ebe12605c882016971646b22fcfea94b2360679d883fe8fef23c365c73a837"
        },
        "downloads": -1,
        "filename": "essay-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "042d7f519089df131645297a0bd3ab16",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 33034,
        "upload_time": "2017-06-13T10:40:51",
        "upload_time_iso_8601": "2017-06-13T10:40:51.407351Z",
        "url": "https://files.pythonhosted.org/packages/96/65/0462c5504d6abde7ba36e6b8a28e3213b7eeedfee70212fe7b105f5c8ef6/essay-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89c28641f6935d8e0d172fda36706bfd6361c21ce60746e9d125a92b0b4500fa",
          "md5": "a3031aaf064c61cc12bfd4895f6bc708",
          "sha256": "d520c6b4a842658bf1d75b35db59cf85cd3bd9275ce9b947c2830abd066f92c5"
        },
        "downloads": -1,
        "filename": "essay-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a3031aaf064c61cc12bfd4895f6bc708",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15913,
        "upload_time": "2017-06-13T10:40:53",
        "upload_time_iso_8601": "2017-06-13T10:40:53.176746Z",
        "url": "https://files.pythonhosted.org/packages/89/c2/8641f6935d8e0d172fda36706bfd6361c21ce60746e9d125a92b0b4500fa/essay-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58a704523829ec3332dba8a995b0cdc97b89179222c587f9ee59a563fc7603b2",
          "md5": "0b94d17567fc2ba7cfc50e7079b52022",
          "sha256": "da8ae2e73361de1f32471c776cc1199baf32b697a1164734071edcdae03d08f5"
        },
        "downloads": -1,
        "filename": "essay-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b94d17567fc2ba7cfc50e7079b52022",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 33278,
        "upload_time": "2017-12-14T08:13:44",
        "upload_time_iso_8601": "2017-12-14T08:13:44.544463Z",
        "url": "https://files.pythonhosted.org/packages/58/a7/04523829ec3332dba8a995b0cdc97b89179222c587f9ee59a563fc7603b2/essay-0.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52f2d1eefb010a7585eaeeaab8aae4da713a8092c2ac49a44a17247487d4dced",
          "md5": "e39b88933d54914060e52fe221a72cbf",
          "sha256": "464152ceaa8a56756ea953fbf17d62bb3558cc46d2c824da0a542c30f345565b"
        },
        "downloads": -1,
        "filename": "essay-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e39b88933d54914060e52fe221a72cbf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 33321,
        "upload_time": "2018-05-10T11:49:28",
        "upload_time_iso_8601": "2018-05-10T11:49:28.517307Z",
        "url": "https://files.pythonhosted.org/packages/52/f2/d1eefb010a7585eaeeaab8aae4da713a8092c2ac49a44a17247487d4dced/essay-0.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aadf6df4722806b4a0906affd14389376b9b643c72c66eaccabaab0bef39a3c5",
          "md5": "9ebc6e8bf9040ce5cccfff8765dcfc5d",
          "sha256": "a4e8ae9762668bd284800ad967bd62cb6b379600a72a23fc63b08cacf6624964"
        },
        "downloads": -1,
        "filename": "essay-0.0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ebc6e8bf9040ce5cccfff8765dcfc5d",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 32085,
        "upload_time": "2018-05-14T11:36:50",
        "upload_time_iso_8601": "2018-05-14T11:36:50.246807Z",
        "url": "https://files.pythonhosted.org/packages/aa/df/6df4722806b4a0906affd14389376b9b643c72c66eaccabaab0bef39a3c5/essay-0.0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e1ce19c1434d13925f47ceddaf82466645efd4a9dd697bf83570b16e2f8371e",
          "md5": "b664b26389c295c4118522e2012409df",
          "sha256": "633f80d49a5d3737b5d608734a9c43cbb59cc088d786b914a2c280da7e5088e7"
        },
        "downloads": -1,
        "filename": "essay-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b664b26389c295c4118522e2012409df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21582,
        "upload_time": "2018-05-14T11:36:47",
        "upload_time_iso_8601": "2018-05-14T11:36:47.095060Z",
        "url": "https://files.pythonhosted.org/packages/5e/1c/e19c1434d13925f47ceddaf82466645efd4a9dd697bf83570b16e2f8371e/essay-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d3ba805857cb6b7ab9965e7709a0d84de125ac3c6e2a64a1b37f06814ce71be",
          "md5": "2d8442090948839c1c752d5be1ca01bd",
          "sha256": "a6e2546a1193d9ccd7ff74fb6fec5bdb8a784dc6a8f8de4aee41595796856c19"
        },
        "downloads": -1,
        "filename": "essay-0.0.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d8442090948839c1c752d5be1ca01bd",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 37719,
        "upload_time": "2018-05-17T04:46:24",
        "upload_time_iso_8601": "2018-05-17T04:46:24.048098Z",
        "url": "https://files.pythonhosted.org/packages/5d/3b/a805857cb6b7ab9965e7709a0d84de125ac3c6e2a64a1b37f06814ce71be/essay-0.0.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d2167cd579902f6a3b8c67f888a58f159c05c3b3ab091224540f73e10417056",
          "md5": "e016f8f140b6c98e0555eac907f5f170",
          "sha256": "626b726ace3f4d46f290f86296e097468412c8aaadbf725daf6dbf5330985e0b"
        },
        "downloads": -1,
        "filename": "essay-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e016f8f140b6c98e0555eac907f5f170",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24534,
        "upload_time": "2018-05-17T04:46:20",
        "upload_time_iso_8601": "2018-05-17T04:46:20.419087Z",
        "url": "https://files.pythonhosted.org/packages/3d/21/67cd579902f6a3b8c67f888a58f159c05c3b3ab091224540f73e10417056/essay-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d3ba805857cb6b7ab9965e7709a0d84de125ac3c6e2a64a1b37f06814ce71be",
        "md5": "2d8442090948839c1c752d5be1ca01bd",
        "sha256": "a6e2546a1193d9ccd7ff74fb6fec5bdb8a784dc6a8f8de4aee41595796856c19"
      },
      "downloads": -1,
      "filename": "essay-0.0.8-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2d8442090948839c1c752d5be1ca01bd",
      "packagetype": "bdist_wheel",
      "python_version": "3.6",
      "requires_python": null,
      "size": 37719,
      "upload_time": "2018-05-17T04:46:24",
      "upload_time_iso_8601": "2018-05-17T04:46:24.048098Z",
      "url": "https://files.pythonhosted.org/packages/5d/3b/a805857cb6b7ab9965e7709a0d84de125ac3c6e2a64a1b37f06814ce71be/essay-0.0.8-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d2167cd579902f6a3b8c67f888a58f159c05c3b3ab091224540f73e10417056",
        "md5": "e016f8f140b6c98e0555eac907f5f170",
        "sha256": "626b726ace3f4d46f290f86296e097468412c8aaadbf725daf6dbf5330985e0b"
      },
      "downloads": -1,
      "filename": "essay-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "e016f8f140b6c98e0555eac907f5f170",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24534,
      "upload_time": "2018-05-17T04:46:20",
      "upload_time_iso_8601": "2018-05-17T04:46:20.419087Z",
      "url": "https://files.pythonhosted.org/packages/3d/21/67cd579902f6a3b8c67f888a58f159c05c3b3ab091224540f73e10417056/essay-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}