{
  "info": {
    "author": "Prabhu Ramachandran",
    "author_email": "prabhu@aero.iitb.ac.in",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Software Development :: Compilers",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "Compyle: execute a subset of Python on HPC platforms\n======================================================\n\n|CI Status| |Coverage Status| |Documentation Status|\n\n\n.. |CI Status| image:: https://github.com/pypr/compyle/actions/workflows/tests.yml/badge.svg\n    :target: https://github.com/pypr/compyle/actions/workflows/tests.yml\n.. |Documentation Status| image:: https://readthedocs.org/projects/compyle/badge/?version=latest\n    :target: https://compyle.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. |Coverage Status| image:: https://codecov.io/gh/pypr/compyle/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/pypr/compyle\n\nCompyle allows users to execute a restricted subset of Python (almost similar\nto C) on a variety of HPC platforms. Currently we support multi-core CPU\nexecution using Cython, and for GPU devices we use OpenCL or CUDA.\n\nUsers start with code implemented in a very restricted Python syntax, this code\nis then automatically transpiled, compiled and executed to run on either one CPU\ncore, or multiple CPU cores (via OpenMP_) or on a GPU. Compyle offers\nsource-to-source transpilation, making it a very convenient tool for writing HPC\nlibraries.\n\nSome simple yet powerful parallel utilities are provided which can allow you\nto solve a remarkably large number of interesting HPC problems. Compyle also\nfeatures JIT transpilation making it easy to use.\n\nDocumentation and learning material is also available in the form of:\n\n- Documentation at: https://compyle.readthedocs.io\n\n- An introduction to compyle in the context of writing a parallel molecular\n  dynamics simulator is in our `SciPy 2020 paper\n  <http://conference.scipy.org/proceedings/scipy2020/compyle_pr_ab.html>`_.\n\n- `Compyle poster presentation <https://docs.google.com/presentation/d/1LS9XO5pQXz8G5d27RP5oWLFxUA-Fr5OvfVUGsgg86TQ/edit#slide=id.p>`_\n\n- You may also try Compyle online for free on a `Google Colab notebook`_.\n\nWhile Compyle seems simple it is not a toy and is used heavily by the PySPH_\nproject where Compyle has its origins.\n\n.. _PySPH: https://github.com/pypr/pysph\n.. _Google Colab notebook: https://colab.research.google.com/drive/1SGRiArYXV1LEkZtUeg9j0qQ21MDqQR2U?usp=sharing\n\n\nInstallation\n-------------\n\nCompyle is itself largely pure Python but depends on numpy_ and requires\neither Cython_ or PyOpenCL_ or PyCUDA_ along with the respective backends of a\nC/C++ compiler, OpenCL and CUDA. If you are only going to execute code on a\nCPU then all you need is Cython.\n\nYou should be able to install Compyle by doing::\n\n  $ pip install compyle\n\n\n.. _PyOpenCL: https://documen.tician.de/pyopencl/\n.. _OpenCL: https://www.khronos.org/opencl/\n.. _Cython: http://www.cython.org\n.. _numpy: http://www.numpy.org\n.. _OpenMP: http://openmp.org/\n.. _PyCUDA: https://documen.tician.de/pycuda/\n\nA simple example\n----------------\n\nHere is a very simple example::\n\n   from compyle.api import Elementwise, annotate, wrap, get_config\n   import numpy as np\n\n   @annotate\n   def axpb(i, x, y, a, b):\n       y[i] = a*sin(x[i]) + b\n\n   x = np.linspace(0, 1, 10000)\n   y = np.zeros_like(x)\n   a, b = 2.0, 3.0\n\n   backend = 'cython'\n   get_config().use_openmp = True\n   x, y = wrap(x, y, backend=backend)\n   e = Elementwise(axpb, backend=backend)\n   e(x, y, a, b)\n\nThis will execute the elementwise operation in parallel using OpenMP with\nCython. The code is auto-generated, compiled and called for you transparently.\nThe first time this runs, it will take a bit of time to compile everything but\nthe next time, this is cached and will run much faster.\n\nIf you just change the ``backend = 'opencl'``, the same exact code will be\nexecuted using PyOpenCL_ and if you change the backend to ``'cuda'``, it will\nexecute via CUDA without any other changes to your code. This is obviously a\nvery trivial example, there are more complex examples available as well.\n\n\nExamples\n---------\n\nSome simple examples and benchmarks are available in the `examples\n<https://github.com/pypr/compyle/tree/master/examples>`_ directory.\n\nYou may also run these examples on the `Google Colab notebook`_",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pypr/compyle",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "compyle",
    "package_url": "https://pypi.org/project/compyle/",
    "platform": "",
    "project_url": "https://pypi.org/project/compyle/",
    "project_urls": {
      "Homepage": "https://github.com/pypr/compyle"
    },
    "release_url": "https://pypi.org/project/compyle/0.8.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Execute a subset of Python on HPC platforms",
    "version": "0.8.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11951055,
  "releases": {
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fca84560a11c0d1a33e02022fb63bb363c943f133c5cf13eb9c2e2ea5903a06b",
          "md5": "289c624e657e75975c1d31fafaeabc95",
          "sha256": "8fa33611c956a3189f054c72a41c5c6e6ba00bc4d1f166798c6849c12c499e57"
        },
        "downloads": -1,
        "filename": "compyle-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "289c624e657e75975c1d31fafaeabc95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 86167,
        "upload_time": "2018-12-02T20:46:45",
        "upload_time_iso_8601": "2018-12-02T20:46:45.240434Z",
        "url": "https://files.pythonhosted.org/packages/fc/a8/4560a11c0d1a33e02022fb63bb363c943f133c5cf13eb9c2e2ea5903a06b/compyle-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "396fbc0df3d936c0e2913cbe80143423cab8e21ba6606abdd33c69153e70be38",
          "md5": "964d8a4e3de5383aeed6fc9e7d5b735f",
          "sha256": "3d068db0bb1daabb07dbc106a23185c155c86ee791aabed96daf43f74a6ec82b"
        },
        "downloads": -1,
        "filename": "compyle-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "964d8a4e3de5383aeed6fc9e7d5b735f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 687538,
        "upload_time": "2020-06-14T18:59:00",
        "upload_time_iso_8601": "2020-06-14T18:59:00.734614Z",
        "url": "https://files.pythonhosted.org/packages/39/6f/bc0df3d936c0e2913cbe80143423cab8e21ba6606abdd33c69153e70be38/compyle-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9489c863311a0358c13e5ddc393c1bca69cd092ef11b466474ec61f10c4f5217",
          "md5": "ee4d29fc92b7786d17107c4ad1c9da4c",
          "sha256": "0e01cf88fce768d37769bf05dc0c7705c2b3ddc123f0c61ab3433c5df8405268"
        },
        "downloads": -1,
        "filename": "compyle-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ee4d29fc92b7786d17107c4ad1c9da4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 118993,
        "upload_time": "2020-09-30T19:31:34",
        "upload_time_iso_8601": "2020-09-30T19:31:34.138784Z",
        "url": "https://files.pythonhosted.org/packages/94/89/c863311a0358c13e5ddc393c1bca69cd092ef11b466474ec61f10c4f5217/compyle-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adb6effd9deab7ff08260b5c7aa428b5ec3ff4ace2a1d0cdd0bd51e60d9c4298",
          "md5": "e39c05b93d8d7fa7a00d83e85c7ffe5a",
          "sha256": "b3441a8fadddaa2b7c77880943137ca9bb85455b44816e084962a62f9c45cd75"
        },
        "downloads": -1,
        "filename": "compyle-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e39c05b93d8d7fa7a00d83e85c7ffe5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4614209,
        "upload_time": "2021-11-07T11:49:00",
        "upload_time_iso_8601": "2021-11-07T11:49:00.786027Z",
        "url": "https://files.pythonhosted.org/packages/ad/b6/effd9deab7ff08260b5c7aa428b5ec3ff4ace2a1d0cdd0bd51e60d9c4298/compyle-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e42692f7efada4ca4356afd4b925f6a2192f44dd5e999b62825c0f76e4136b25",
          "md5": "4de9b58006772a3d9bd351771d0d90f4",
          "sha256": "d4c3e3dc2c652ab5f0a37d52005cbd84eb75a31d71a2e47e71f7092010db64b9"
        },
        "downloads": -1,
        "filename": "compyle-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4de9b58006772a3d9bd351771d0d90f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 125499,
        "upload_time": "2021-11-07T11:53:24",
        "upload_time_iso_8601": "2021-11-07T11:53:24.258750Z",
        "url": "https://files.pythonhosted.org/packages/e4/26/92f7efada4ca4356afd4b925f6a2192f44dd5e999b62825c0f76e4136b25/compyle-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e42692f7efada4ca4356afd4b925f6a2192f44dd5e999b62825c0f76e4136b25",
        "md5": "4de9b58006772a3d9bd351771d0d90f4",
        "sha256": "d4c3e3dc2c652ab5f0a37d52005cbd84eb75a31d71a2e47e71f7092010db64b9"
      },
      "downloads": -1,
      "filename": "compyle-0.8.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4de9b58006772a3d9bd351771d0d90f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 125499,
      "upload_time": "2021-11-07T11:53:24",
      "upload_time_iso_8601": "2021-11-07T11:53:24.258750Z",
      "url": "https://files.pythonhosted.org/packages/e4/26/92f7efada4ca4356afd4b925f6a2192f44dd5e999b62825c0f76e4136b25/compyle-0.8.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}