{
  "info": {
    "author": "Daniel Minukhin",
    "author_email": "ddddsa@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Documentation",
      "Topic :: Text Processing :: Markup",
      "Topic :: Utilities"
    ],
    "description": "[![](https://img.shields.io/pypi/v/pynuclino.svg)](https://pypi.org/project/pynuclino/) [![](https://img.shields.io/pypi/dm/pynuclino.svg)](https://pypi.org/project/pynuclino/)  [![](https://img.shields.io/github/v/tag/Vanderhoof/pynuclino.svg?label=GitHub)](https://github.com/Vanderhoof/PyNuclino)\n\n# PyNuclino\n\nPyNuclino is a Python client for [Nuclino API](https://help.nuclino.com/d3a29686-api).\n\n## Installation\n\n```bash\npip3 install pynuclino\n```\n\n## Usage\n\nInitialize the `Nuclino` object with your API key ([getting API key](https://help.nuclino.com/04598850-manage-api-keys)):\n\n```python\n>>> from nuclino import Nuclino\n>>> client = Nuclino('your-api-key')\n```\n\nGet some data:\n\n```python\n>>> client.get_workspaces()\n[<Workspace \"Support\">, <Workspace \"Projects\">, ...]\n>>> client.get_teams()\n[<Team \"MyTeam\">, <Team \"TheirTeam\">]\n>>> client.get_items(team_id='your_team_id')\n[<Item \"Home office allowance\">, <Collection \"Leave\">, <Item \"Welcome!\">, ...]\n```\n\nObjects have attributes:\n\n```python\n>>> item = client.get_item('item_id')\n>>> i1.title\n'Home office allowance'\n>>> i1.created_at\n'2022-01-26T16:32:41.981Z'\n```\n\nAttribute names correspond to the JSON field names, but in Python variable format: `createdAt` -> `created_at`.\n\nObjects also have convenience methods:\n\n```python\n>>> team.get_workspaces()\n[<Workspace \"Support\">, <Workspace \"Projects\">, ...]\n>>> workspace.get_children()\n[<Collection \"Product FAQ\">, <Collection \"Canned responses\">, ...]\n>>> item.get_files()\n[<file \"6e54474a.png\">, <file \"c414f936.png\">, ...]\n```\n\nYou can update or delete items using Item object methods:\n\n```python\n>>> item = client.get_item('item_id')\n>>> item.update(title='New Title', content='# New content\\n')\n<Item \"New Title\">\n>>> item.delete()\n{'id': 'fe94a28d-6c5c-4969-9ee7-7d6433f74adf'}\n```\n\nFull reference of methods and attributes is below.\n\n## Rate limiting\n\nNuclino API usage is currently [rate limited](https://help.nuclino.com/b147124e-rate-limiting) to 150 requests per minute. PyNuclino uses [ratelimit](https://github.com/tomasbasham/ratelimit) library to handle rate limiting.\n\nDefault request limit is set to 140 req/min. To change it, set the `requests_per_minute` init parameter:\n\n```python\n>>> client = Nuclino('your-api-key', requests_per_minute=100)\n```\n\n## Reference\n\n### Nuclino\n\n`Nuclino(api_key, base_url, requests_per_minute)`\n\n\nNuclino is the main object that connects you to Nuclino API.\n\nInitialization parameters:\n\n* `api_key` (string, required) — your personal API key ([how to get an API key](https://help.nuclino.com/04598850-manage-api-keys)).\n* `base_url` (string, optional) — base url for Nuclino API calls. Default: `https://api.nuclino.com/v0`.\n* `requests_per_minute` (int, optional) — number of requests the client will allow sending per minute. If this limit is exceeded, the client will wait for some time before sending the next request. Default: `140`.\n\n**Methods**\n\n`get_teams(limit=None, after=None)`\n\nList teams that you have access to. Returns list of Team objects.\n\n`get_team(team_id)`\n\nGet a team by ID. Returns a single Team object.\n\n`get_workspaces(limit=None, after=None)`\n\nList workspaces that you have access to. Returns list of Workspace objects.\n\n`get_workspace(team_id)`\n\nGet a workspace by ID. Returns a single Workspace object.\n\n`get_items(team_id=None, workspace_id=None, limit=None, after=None, search=None)`\n\nGet list of items in team or workspace. You must supply either `team_id` or `workspace_id`. Add search query in `search` parameter to search items. Returns list of Item and Collection objects.\n\n`get_item(item_id)`\n\nGet item or collection by ID. Returns a single Item or Collection object.\n\n`get_collection(collection_id)`\n\nAlias for `get_item` method, works the same.\n\n`create_item(workspace_id=None, parent_id=None, object='item', title=None, content=None, index=None)`\n\nCreate a new item or collection (depending on the `object` param value). You must supply either `workspace_id` or `parent_id`.\n\n`create_collection(workspace_id=None, parent_id=None, title=None, index=None)`\n\nCreate a new collection. You must supply either `workspace_id` or `parent_id`.\n\n`update_item(item_id, title=None, content=None)`\n\nUpdate item or collection. If `title` or `content` is none, it won't be changed.\n\n`update_collection(collection_id, title=None)`\n\nUpdate collection title.\n\n`delete_title(item_id)`\n\nDelete item or collection.\n\n`delete_collection(collection_id)`\n\nAlias for `delete_item` method, works the same.\n\n`get_file(file_id)`\n\nGet a file by ID. Returns a single File instance.\n\n### Team\n\n**Attributes**\n\n* `id` (str) — team ID,\n* `url` (str) — team url,\n* `name` (str) — team name,\n* `created_at` (str) — date created in ISO 8601 format,\n* `created_user_id` (str) — ID of the user who created this team.\n\n**Methods**\n\n`get_workspaces()`\n\nMake an API call to get list of workspaces this team has.\n\n### Workspace\n\n**Attrubutes**\n\n* `id` (str) — workspace ID,\n* `team_id` (str) — ID of the team this workspace belongs to,\n* `name` (str) — workspace name,\n* `created_at` (str) — date created in ISO 8601 format,\n* `created_user_id` (str) — ID of the user who created this workspace,\n* `child_ids` (list) — list of IDs of top level items and collections from this workspace.\n\n**Methods**\n\n`get_team()`\n\nMake an API call to get the team this workspace belongs to.\n\n`get_children()`\n\nMake API calls to get a list of top level items and collections from this workspace. Returns list of Item and Collection objects.\n\n`create_item(object='item', title=None, content=None, index=None)`\n\nCreate an item or a collection (depending on the `object` param) in this workspace.\n\n`create_collection(title=None, index=None)`\n\nCreate a collection in this workspace.\n\n### Collection\n\n**Attributes**\n\n* `id` (str) — collection ID,\n* `child_ids` (list) — list of IDs of items or collections that belong to this collection (only top level),\n* `created_at` (str) — date created in ISO 8601 format,\n* `created_user_id` (str) — ID of the user who created the collection,\n* `last_updated_at` (str) — date last update in ISO 8601 format,\n* `last_updated_user_id` (str) — ID of the user who last updated the collection,\n* `title` (str) — collection title,\n* `url` (str) — collection url,\n* `workspace_id` (str) — ID of the workspace this collection belongs to.\n\n**Methods**\n\n`get_children()`\n\nMake API calls to get list of items and collections that belong to this collection (only top level). Returns list of Item and Collection objects.\n\n`get_workspace()`\n\nMake an API call to get the workspace this collection belongs to.\n\n`create_item(object='item', title=None, content=None, index=None)`\n\nCreate an item or a collection (depending on the `object` param) under this collection.\n\n`create_collection(title=None, index=None)`\n\nCreate a collection under this collection.\n\n`delete()`\n\nDelete this collection.\n\n`update(title)`\n\nUpdate this collection title.\n\n### Item\n\n* `id` (str) — item ID,\n* `content_meta` (dict) — item meta dictionary,\n* `created_at` (str) — date created in ISO 8601 format,\n* `created_user_id` (str) — ID of the user who created the item,\n* `last_updated_at` (str) — date updated in ISO 8601 format,\n* `last_updated_user_id` (str) — ID of the user who last updated the item,\n* `title` (str) — item title,\n* `url` (str) — item url,\n* `workspace_id` (str) — ID of the workspace this item belongs to,\n* `content` (str) — item content in Markdown (to get content use `get_item`, not `get_items`).\n\n**Methods**\n\n`get_workspace()`\n\nMake an API call to get the workspace this item belongs to.\n\n`get_items()`\n\nMake API calls to get list of items that are referenced inside this item. Returns list of Item objects.\n\n`get_files()`\n\nMake API calls to get list of files that are attached to this item. Returns list of File objects.\n\n`delete()`\n\nDelete this item.\n\n`update(title: None, content: None)`\n\nUpdate this item. Title or content won't be changed if the corresponding param is empty.\n\n### File\n\n**Attributes**\n\n* `id` (str) — file ID,\n* `item_id` (str) — ID of the item this file is attached to,\n* `file_name` (str) — file name,\n* `created_at` (str) — date created in ISO 8601 format,\n* `created_user_id` (str) — ID of the user who created the file,\n* `download` (dict) — dictionary with download link and expiry date.\n\n**Methods**\n\n`get_item()`\n\nMake an API call to get the item this file is attached to.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Vanderhoof/PyNuclino",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyNuclino",
    "package_url": "https://pypi.org/project/PyNuclino/",
    "platform": "any",
    "project_url": "https://pypi.org/project/PyNuclino/",
    "project_urls": {
      "Homepage": "https://github.com/Vanderhoof/PyNuclino"
    },
    "release_url": "https://pypi.org/project/PyNuclino/0.2.0/",
    "requires_dist": [
      "ratelimit",
      "requests"
    ],
    "requires_python": ">=3.7",
    "summary": "Nuclino API wrapper",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16332726,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d80020ceb1fc3d9c6e17e291304d8141bd7be59482329d712d107e8f375e5b5",
          "md5": "7ff03ef4070c66952fc1827f5dfacfcc",
          "sha256": "c5e5c43b31695f3730f7da903013366ebeda3e0cc0fa51fb9fd681e821147120"
        },
        "downloads": -1,
        "filename": "PyNuclino-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ff03ef4070c66952fc1827f5dfacfcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7823,
        "upload_time": "2022-01-27T19:08:59",
        "upload_time_iso_8601": "2022-01-27T19:08:59.522552Z",
        "url": "https://files.pythonhosted.org/packages/5d/80/020ceb1fc3d9c6e17e291304d8141bd7be59482329d712d107e8f375e5b5/PyNuclino-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f0dbfef575e0086e2ec4990419f916d8522caeead0d347c7aa5a4901e39bf6e",
          "md5": "9278f9e43728d67e508ccc76e006e6b9",
          "sha256": "a97c3ab9f15dde719b097447abe9dbddb93815eff8e0b37ca7c09ce4b7fed096"
        },
        "downloads": -1,
        "filename": "PyNuclino-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9278f9e43728d67e508ccc76e006e6b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8775,
        "upload_time": "2022-01-27T19:09:01",
        "upload_time_iso_8601": "2022-01-27T19:09:01.982690Z",
        "url": "https://files.pythonhosted.org/packages/5f/0d/bfef575e0086e2ec4990419f916d8522caeead0d347c7aa5a4901e39bf6e/PyNuclino-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd0775c76cb1e05e68155cea279c602d3c0562237eab050c1bc42ddeeec652e2",
          "md5": "daa141a0ececf627faddc99d780802e6",
          "sha256": "be74e719d888386a511545ab709dbcaf3c27308688d852799c8933cd8b75b7c0"
        },
        "downloads": -1,
        "filename": "PyNuclino-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "daa141a0ececf627faddc99d780802e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9485,
        "upload_time": "2022-01-28T08:38:18",
        "upload_time_iso_8601": "2022-01-28T08:38:18.323191Z",
        "url": "https://files.pythonhosted.org/packages/cd/07/75c76cb1e05e68155cea279c602d3c0562237eab050c1bc42ddeeec652e2/PyNuclino-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee837d956c85bb692dd7f7f16d59e824c0b576a4d8130c5127143dd0fab831f1",
          "md5": "20d95f6742b52afb8448a017080012f5",
          "sha256": "28595c85a8ca37438f18de5ac5ed91a68cdbde3afbac44f5c5a08195bab4f0d9"
        },
        "downloads": -1,
        "filename": "PyNuclino-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "20d95f6742b52afb8448a017080012f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 10200,
        "upload_time": "2022-01-28T08:38:20",
        "upload_time_iso_8601": "2022-01-28T08:38:20.822277Z",
        "url": "https://files.pythonhosted.org/packages/ee/83/7d956c85bb692dd7f7f16d59e824c0b576a4d8130c5127143dd0fab831f1/PyNuclino-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8376b5c58f3a1cd7b801187b0d99861610388275bf2f34d27884f565228366e0",
          "md5": "87b91cc452a95f9c186ba269729fddf9",
          "sha256": "3a4129121e650f6ed5cfae4d9685a88a7cca40ecb1f6be9890951793952cc7fe"
        },
        "downloads": -1,
        "filename": "PyNuclino-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87b91cc452a95f9c186ba269729fddf9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9516,
        "upload_time": "2023-01-06T16:36:27",
        "upload_time_iso_8601": "2023-01-06T16:36:27.651618Z",
        "url": "https://files.pythonhosted.org/packages/83/76/b5c58f3a1cd7b801187b0d99861610388275bf2f34d27884f565228366e0/PyNuclino-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "faab8939d943209b566b0423ff23b7d289fe1f8420ca422efb6b672ab6b519bf",
          "md5": "08302f3dca333a261a3dc79af130ee2e",
          "sha256": "123263e804dd19ff914ad3baa1236ac5eadf67c3eaae90c06186586a3e1db863"
        },
        "downloads": -1,
        "filename": "PyNuclino-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "08302f3dca333a261a3dc79af130ee2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10365,
        "upload_time": "2023-01-06T16:36:29",
        "upload_time_iso_8601": "2023-01-06T16:36:29.441213Z",
        "url": "https://files.pythonhosted.org/packages/fa/ab/8939d943209b566b0423ff23b7d289fe1f8420ca422efb6b672ab6b519bf/PyNuclino-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8376b5c58f3a1cd7b801187b0d99861610388275bf2f34d27884f565228366e0",
        "md5": "87b91cc452a95f9c186ba269729fddf9",
        "sha256": "3a4129121e650f6ed5cfae4d9685a88a7cca40ecb1f6be9890951793952cc7fe"
      },
      "downloads": -1,
      "filename": "PyNuclino-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "87b91cc452a95f9c186ba269729fddf9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9516,
      "upload_time": "2023-01-06T16:36:27",
      "upload_time_iso_8601": "2023-01-06T16:36:27.651618Z",
      "url": "https://files.pythonhosted.org/packages/83/76/b5c58f3a1cd7b801187b0d99861610388275bf2f34d27884f565228366e0/PyNuclino-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "faab8939d943209b566b0423ff23b7d289fe1f8420ca422efb6b672ab6b519bf",
        "md5": "08302f3dca333a261a3dc79af130ee2e",
        "sha256": "123263e804dd19ff914ad3baa1236ac5eadf67c3eaae90c06186586a3e1db863"
      },
      "downloads": -1,
      "filename": "PyNuclino-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "08302f3dca333a261a3dc79af130ee2e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 10365,
      "upload_time": "2023-01-06T16:36:29",
      "upload_time_iso_8601": "2023-01-06T16:36:29.441213Z",
      "url": "https://files.pythonhosted.org/packages/fa/ab/8939d943209b566b0423ff23b7d289fe1f8420ca422efb6b672ab6b519bf/PyNuclino-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}