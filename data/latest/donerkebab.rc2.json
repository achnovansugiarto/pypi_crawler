{
  "info": {
    "author": "ytkimirti",
    "author_email": "yusuftaha9@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "<h1 align='center'>ðŸ¥™ donerkebab ðŸ¥™</h1>\n> A super easy to use, beginner friendly [selenium](https://pypi.org/project/selenium/) wrapper\n\n\n```shell\n$ pip install donerkebab\n```\n\n## Usage\n\n### 1. Download the driver for your browser\n[Chrome](https://chromedriver.chromium.org/downloads)\n[Edge](https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/)\n[Firefox](https://github.com/mozilla/geckodriver/releases)\n[Safari](https://webkit.org/blog/6900/webdriver-support-in-safari-10/)\n\n### 2. Place it in a PATH directory\nThis might be /usr/bin or the directory as your python script\n\n```py\n# Also available for Firefox, Edge, Safari and Opera\nfrom donerkebab import ChromeDriver\n\n# Get an instance of the browser window\n# You can easily start it in headless mode too\ndriver = ChromeDriver(headless=False)\n\ndriver.open('https://duckduckgo.com/')\n\n# Browser will wait at max 10 seconds until element is found\ndriver.set_timeout(10)\n\n# You can find elements by their CSS selectors\ninput_box = driver.get_element('input#search_form_input_homepage')\n\n# Uses classic selenium element functions\ninput_box.send_keys('Do pigs fly?')\n\ndriver.sleep(2)\n\nsubmit_button = driver.get_element('input#search_button_homepage')\n\n# Perform the search\nsubmit_button.click()\n\n# Get the container of all the result links\nresults_container = driver.get_element('div.results--main')\n\n# Get all the links inside the container with a class of 'results__a'\nresults = driver.get_elements_in_parent(results_container, 'a.result__a')\n\n# Print all the links\nprint(\"ðŸ”Ž Results for 'Do pigs fly?' ðŸ”Ž\")\nfor result in results:\n    # get title and href attribute (the link adress) for every result\n    print(result.text + ' -> ' + result.get_attribute('href'))\n\ndriver.quit()\n```\n\n# API\n\n## Driver init options\n\n```py\ndriver = FirefoxDriver(log=True, executable_path=None,headless=False, page_load_strategy='normal'):\n```\n```\nheadless -> Hides the window and runs the browser in the background. Really usefull\nlog -> Enable or disable logging\nexecutable_path -> The full path to executable driver. If left null the it will look at the PATH variable to find the driver.\npage_load_strategy -> Take a look at the [official docs](https://www.selenium.dev/documentation/webdriver/capabilities/shared/#pageloadstrategy)\n```\n\n## Locating elements\n\n### Css selectors\n\ndonerkebab always uses css selectors for locating elements. Some examples:\n\n- `input` element with type input\n- `div > input` element that is the direct child of input\n- `input.search` element with a class of 'search'\n- `input#main_button` element with an id of 'main_button'\n- `a[href='https://google.com']` link element with a href attribute\n\nDefinately check out more [advanced css selectors](https://saucelabs.com/resources/articles/selenium-tips-css-selectors). They come in really handy\n\n### Locator methods\n\n```py\ndriver.get_element(css_selector)\ndriver.get_elements(css_selector)\ndriver.get_element_in_parent(parent_element, css_selector)\ndriver.get_elements_in_parent(parent_element, css_selector)\ndriver.get_element_by_xpath(xpath)\n\ndriver.is_element_present(css_selector) # Searches for element without any timeout\n\n# Tries the first selector, if none element is found, tries the alternate selector\n# Great for having backup selectors for elements that might change\ndriver.get_element_multiple_attempts(selector1, selector2, selector3...)\n\n# Returns the active element\ndriver.active_element\n\n# Scrolls that element into view\ndriver.scroll_to_element(element)\n\n# Waits until an alert is present, and returns that alert\ndriver.get_alert()\n```\n\n### Driver methods\n\n#### open(url)\n\nOpens the url and waits until the page loads. Url must start with https:// or http://\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ytkimirti/donerkebab",
    "keywords": "selenium,wrapper,chrome,firefox,easy,beginner,use,doner,kebab,chromium,headless",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "donerkebab",
    "package_url": "https://pypi.org/project/donerkebab/",
    "platform": "",
    "project_url": "https://pypi.org/project/donerkebab/",
    "project_urls": {
      "Homepage": "https://github.com/ytkimirti/donerkebab"
    },
    "release_url": "https://pypi.org/project/donerkebab/0.0.2/",
    "requires_dist": [
      "selenium (>=4.1.0)",
      "halo (>=0.0.31)"
    ],
    "requires_python": ">=3.6",
    "summary": "Super easy to use selenium wrapper",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12282970,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a40782798943fa02ebeaf80ee335db7184aa7b5b4092c31b9d9f5e5e72df9558",
          "md5": "e3790bd21540093cd6be2e0324d3ad5c",
          "sha256": "a96effce548c3e191e478d1e14ec20fbb1b08735e926aaf069f1ae3aae08c2b6"
        },
        "downloads": -1,
        "filename": "donerkebab-0.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3790bd21540093cd6be2e0324d3ad5c",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=3.6",
        "size": 7278,
        "upload_time": "2021-12-12T15:42:04",
        "upload_time_iso_8601": "2021-12-12T15:42:04.887319Z",
        "url": "https://files.pythonhosted.org/packages/a4/07/82798943fa02ebeaf80ee335db7184aa7b5b4092c31b9d9f5e5e72df9558/donerkebab-0.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d13987fbe6429ce825bbcb7069da03d836230b7962608355fccbe5c920b5f5a5",
          "md5": "def90f97c51278e754307e04e451074d",
          "sha256": "f3886a5224a29e69fbd8632932f43ee9d7910ad1aea9ea2e3cc2f810a878e004"
        },
        "downloads": -1,
        "filename": "donerkebab-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "def90f97c51278e754307e04e451074d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6258,
        "upload_time": "2021-12-12T15:42:06",
        "upload_time_iso_8601": "2021-12-12T15:42:06.121318Z",
        "url": "https://files.pythonhosted.org/packages/d1/39/87fbe6429ce825bbcb7069da03d836230b7962608355fccbe5c920b5f5a5/donerkebab-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcfc4d5622baf3e44e74da3b440ea0934eca5af65e8412d71ccdd38e63327146",
          "md5": "4b98699a966f98f3b1615978d1f95dff",
          "sha256": "f3a0574fa247f316d14fce1872debdf30f3361d6e61fd31a4567b62fa08dfbd5"
        },
        "downloads": -1,
        "filename": "donerkebab-0.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b98699a966f98f3b1615978d1f95dff",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=3.6",
        "size": 8744,
        "upload_time": "2021-12-12T19:04:06",
        "upload_time_iso_8601": "2021-12-12T19:04:06.268707Z",
        "url": "https://files.pythonhosted.org/packages/bc/fc/4d5622baf3e44e74da3b440ea0934eca5af65e8412d71ccdd38e63327146/donerkebab-0.0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2136430e243260d8787509898f8f38edaab90b1d6ebd6e21e4f1a4ccf465bd53",
          "md5": "c27697f25ed8c6069fd0f8dc144d6588",
          "sha256": "b083d157719c773585a98de593553d5fcd05cf6b8041e31b6cdb614069f03361"
        },
        "downloads": -1,
        "filename": "donerkebab-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c27697f25ed8c6069fd0f8dc144d6588",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7878,
        "upload_time": "2021-12-12T19:04:08",
        "upload_time_iso_8601": "2021-12-12T19:04:08.036888Z",
        "url": "https://files.pythonhosted.org/packages/21/36/430e243260d8787509898f8f38edaab90b1d6ebd6e21e4f1a4ccf465bd53/donerkebab-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcfc4d5622baf3e44e74da3b440ea0934eca5af65e8412d71ccdd38e63327146",
        "md5": "4b98699a966f98f3b1615978d1f95dff",
        "sha256": "f3a0574fa247f316d14fce1872debdf30f3361d6e61fd31a4567b62fa08dfbd5"
      },
      "downloads": -1,
      "filename": "donerkebab-0.0.2-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "4b98699a966f98f3b1615978d1f95dff",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=3.6",
      "size": 8744,
      "upload_time": "2021-12-12T19:04:06",
      "upload_time_iso_8601": "2021-12-12T19:04:06.268707Z",
      "url": "https://files.pythonhosted.org/packages/bc/fc/4d5622baf3e44e74da3b440ea0934eca5af65e8412d71ccdd38e63327146/donerkebab-0.0.2-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2136430e243260d8787509898f8f38edaab90b1d6ebd6e21e4f1a4ccf465bd53",
        "md5": "c27697f25ed8c6069fd0f8dc144d6588",
        "sha256": "b083d157719c773585a98de593553d5fcd05cf6b8041e31b6cdb614069f03361"
      },
      "downloads": -1,
      "filename": "donerkebab-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c27697f25ed8c6069fd0f8dc144d6588",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7878,
      "upload_time": "2021-12-12T19:04:08",
      "upload_time_iso_8601": "2021-12-12T19:04:08.036888Z",
      "url": "https://files.pythonhosted.org/packages/21/36/430e243260d8787509898f8f38edaab90b1d6ebd6e21e4f1a4ccf465bd53/donerkebab-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}