{
  "info": {
    "author": "",
    "author_email": "rem.game.on@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# kopeechka\r\n\r\n**kopeechka** - This module is a representation of the kopeechka.store API in Python\r\n\r\n**API documentation RUS** [ https://link.kopeechka.store/CzXxp6?lang=ru&k=API]( https://link.kopeechka.store/CzXxp6?lang=ru&k=API)\r\n\r\n**API documentation ENG** [https://link.kopeechka.store/CzXxp6?lang=en&k=API](https://link.kopeechka.store/CzXxp6?lang=en&k=API)\r\n\r\n# Installation\r\n\r\nInstall the current version with PyPI:\r\n\r\n```python\r\npip install kopeechka\r\n```\r\n\r\n## Usage\r\n\r\nYou can get a token in your personal account on the kopeechka.store website\r\n\r\n```python\r\nfrom kopeechka import MailActivations\r\n\r\nbody = MailActivations(token=\"TOKEN\")\r\n```\r\n\r\n## Exception handling\r\n\r\nYou can import all exceptions from kopeechka.errors\r\n\r\nList of all exceptions with description:\r\n\r\n\tACTIVATION_CANCELED - The mail was canceled.\r\n\tACTIVATION_NOT_FOUND - First letter has not been received, reorder isn't possible.\r\n\tBAD_BALANCE - There are not enough funds to perform the operation.\r\n\tBAD_COMMENT - Activattion not found (It's not your activation).\r\n\tBAD_DOMAIN - We do not have such a domain/domain zone.\r\n\tBAD_EMAIL - Mail was banned.\r\n\tBAD_SITE - You specified the site incorrectly.\r\n\tBAD_TOKEN - Invalid token.\r\n\tNO_ACTIVATION - Invalid TASK_ID activation.\r\n\tOUT_OF_STOCK - There is no mail with such settings. Try changing MAIL_TYPE or write to support - we'll try to add mailboxes.\r\n\tSYSTEM_ERROR - Unknown, system error. Contact support - we will help!\r\n\tTIME_LIMIT_EXCEED - The limit of mail orders per second has been reached (applies to special tariffs), it is necessary to expand the tariff.\r\n\tWAIT_LINK - The letter hasn't arrived yet.\r\n    UNKNOWN_ERROR - Unknown error (the text of the exception may be different in different situations.)\r\n\r\n## Types\r\n\r\nYou can import all types from kopeechka.types_kopeechka\r\n\r\n## Sync methods\r\n\r\nYou can import all methods from kopeechka.methods\r\n\r\n## Sync example\r\n\r\n```python\r\nfrom kopeechka import MailActivations\r\nfrom kopeechka.errors import BAD_TOKEN\r\n\r\nbody = MailActivations(token=\"TOKEN\")\r\n\r\n#balance request\r\ntry:\r\n    data = body.user_balance()\r\n    print(data.data) # returns a dictionary with data from json\r\n    print(data.balance) # returns a user balance\r\n    print(data.status) # returns a response status\r\nexcept BAD_TOKEN as e:\r\n    print(e) # returns a string with an error\r\n    print(e.data) # returns the data received by api Kopeechka\r\n\r\n#mail request\r\ntry:\r\n    data = body.mailbox_get_email(site=\"site\", mail_type=\"mail_type\", sender=\"sender\", regex=\"regex\", soft_id=0, investor=0, subject=\"subject\")\r\n    print(data.data) # returns a dictionary with data from json\r\n    print(data.status) # returns a response status\r\n    print(data.id) # returns a task_id this mail\r\n    print(data.mail) #returns a email address\r\nexcept BAD_TOKEN as e:\r\n    print(e)  # returns a string with an error\r\n    print(e.data)  # returns the data received by api Kopeechka\r\n\r\n#letter request\r\ntry:\r\n    data = body.mailbox_get_message(full=0, id=123)\r\n    print(data.data)  # returns a dictionary with data from json\r\n    print(data.status)  # returns a response status\r\n    print(data.value) # returns a url\r\n    print(data.fullmessage) # returns a full message from email\r\nexcept BAD_TOKEN as e:\r\n    print(e)  # returns a string with an error\r\n    print(e.data)  # returns the data received by api Kopeechka\r\n\r\n#cancel mail\r\ntry:\r\n    data = body.mailbox_cancel(id=123)\r\n    print(data.data)  # returns a dictionary with data from json\r\n    print(data.status)  # returns a response status\r\nexcept BAD_TOKEN as e:\r\n    print(e)  # returns a string with an error\r\n    print(e.data)  # returns the data received by api Kopeechka\r\n\r\n#reorder mail\r\ntry:\r\n    data = body.mailbox_reorder(site=\"site\", email=\"email\", regex=\"regex\", subject=\"subject\")\r\n    print(data.data)  # returns a dictionary with data from json\r\n    print(data.status)  # returns a response status\r\n    print(data.id)  # returns a task_id this mail\r\n    print(data.mail)  # returns a email address\r\nexcept BAD_TOKEN as e:\r\n    print(e)  # returns a string with an error\r\n    print(e.data)  # returns the data received by api Kopeechka\r\n\r\n#find ID activation of email\r\ntry:\r\n    data = body.mailbox_get_fresh_id(site=\"site\", email=\"email\")\r\n    print(data.data)  # returns a dictionary with data from json\r\n    print(data.status)  # returns a response status\r\n    print(data.id)  # returns a task_id this mail\r\nexcept BAD_TOKEN as e:\r\n    print(e)  # returns a string with an error\r\n    print(e.data)  # returns the data received by api Kopeechka\r\n\r\n#set a comment to the ordered mail\r\ntry:\r\n    data = body.mailbox_set_comment(id=123, comment=\"comment\")\r\n    print(data.data)  # returns a dictionary with data from json\r\n    print(data.status)  # returns a response status\r\nexcept BAD_TOKEN as e:\r\n    print(e)  # returns a string with an error\r\n    print(e.data)  # returns the data received by api Kopeechka\r\n\r\n#mail search by parameters\r\ntry:\r\n    data = body.mailbox_get_bulk(count=1, comment=\"comment\", email=\"email\", site=\"site\")\r\n    print(data.data)  # returns a dictionary with data from json\r\n    print(data.status)  # returns a response status\r\n    print(data.count) # returns a count of items\r\n    print(data.items) # returns a list with found data\r\n    for item in data.items:\r\n        print(item.data) # returns a dictionary with data from json\r\n        print(item.id) # returns a task_id\r\n        print(item.service) # returns a service\r\n        print(item.email) # returns a email\r\n        print(item.date) # returns a date\r\n        print(item.status) # returns a status\r\n        print(item.value) # returns a link\r\n        print(item.comment) # returns a comment\r\nexcept BAD_TOKEN as e:\r\n    print(e)  # returns a string with an error\r\n    print(e.data)  # returns the data received by api Kopeechka\r\n\r\n#list of all service domains\r\ntry:\r\n    data = body.mailbox_get_domains(site=\"site\")\r\n    print(data.data)  # returns a dictionary with data from json\r\n    print(data.status)  # returns a response status\r\n    print(data.count) # returns a count of items\r\n    print(data.domains) # returns a list with domains\r\nexcept BAD_TOKEN as e:\r\n    print(e)  # returns a string with an error\r\n    print(e.data)  # returns the data received by api Kopeechka\r\n\r\n#get prices and zones\r\ndata = body.mailbox_zones(popular=1, zones=1)\r\nprint(data.data)  # returns a dictionary with data from json\r\nprint(data.status)  # returns a response status\r\nprint(data.popular) # returns a list with populars\r\nfor item in data.popular:\r\n    print(item.data) # returns a dictionary with data from json\r\n    print(item.name) # returns a name\r\n    print(item.count) # returns a count\r\n    print(item.cost) # returns a cost\r\nprint(data.zones) # returns a list with zones\r\nfor item in data.zones:\r\n    print(item.data) # returns a dictionary with data from json\r\n    print(item.name) # returns a name\r\n    print(item.cost) # returns a cost\r\n```\r\n\r\n## Async methods\r\n\r\nYou can import all async methods from kopeechka.async_methods\r\n\r\n## Async example\r\n\r\n```python\r\nfrom kopeechka import AsyncMailActivations\r\nfrom kopeechka.errors import BAD_TOKEN\r\nimport asyncio\r\n\r\nasync def main():\r\n\r\n    body = AsyncMailActivations('TOKEN')\r\n\r\n    # balance request\r\n    try:\r\n        data = await body.user_balance()\r\n        print(data.data)  # returns a dictionary with data from json\r\n        print(data.balance)  # returns a user balance\r\n        print(data.status)  # returns a response status\r\n    except BAD_TOKEN as e:\r\n        print(e)  # returns a string with an error\r\n        print(e.data)  # returns the data received by api Kopeechka\r\n\r\n    # mail request\r\n    try:\r\n        data = await body.mailbox_get_email(site=\"site\", mail_type=\"mail_type\", sender=\"sender\", regex=\"regex\", soft_id=0,\r\n                                      investor=0, subject=\"subject\")\r\n        print(data.data)  # returns a dictionary with data from json\r\n        print(data.status)  # returns a response status\r\n        print(data.id)  # returns a task_id this mail\r\n        print(data.mail)  # returns a email address\r\n    except BAD_TOKEN as e:\r\n        print(e)  # returns a string with an error\r\n        print(e.data)  # returns the data received by api Kopeechka\r\n\r\n    # letter request\r\n    try:\r\n        data = await body.mailbox_get_message(full=0, id=123)\r\n        print(data.data)  # returns a dictionary with data from json\r\n        print(data.status)  # returns a response status\r\n        print(data.value)  # returns a url\r\n        print(data.fullmessage)  # returns a full message from email\r\n    except BAD_TOKEN as e:\r\n        print(e)  # returns a string with an error\r\n        print(e.data)  # returns the data received by api Kopeechka\r\n\r\n    # cancel mail\r\n    try:\r\n        data = await body.mailbox_cancel(id=123)\r\n        print(data.data)  # returns a dictionary with data from json\r\n        print(data.status)  # returns a response status\r\n    except BAD_TOKEN as e:\r\n        print(e)  # returns a string with an error\r\n        print(e.data)  # returns the data received by api Kopeechka\r\n\r\n    # reorder mail\r\n    try:\r\n        data = await body.mailbox_reorder(site=\"site\", email=\"email\", regex=\"regex\", subject=\"subject\")\r\n        print(data.data)  # returns a dictionary with data from json\r\n        print(data.status)  # returns a response status\r\n        print(data.id)  # returns a task_id this mail\r\n        print(data.mail)  # returns a email address\r\n    except BAD_TOKEN as e:\r\n        print(e)  # returns a string with an error\r\n        print(e.data)  # returns the data received by api Kopeechka\r\n\r\n    # find ID activation of email\r\n    try:\r\n        data = await body.mailbox_get_fresh_id(site=\"site\", email=\"email\")\r\n        print(data.data)  # returns a dictionary with data from json\r\n        print(data.status)  # returns a response status\r\n        print(data.id)  # returns a task_id this mail\r\n    except BAD_TOKEN as e:\r\n        print(e)  # returns a string with an error\r\n        print(e.data)  # returns the data received by api Kopeechka\r\n\r\n    # set a comment to the ordered mail\r\n    try:\r\n        data = await body.mailbox_set_comment(id=123, comment=\"comment\")\r\n        print(data.data)  # returns a dictionary with data from json\r\n        print(data.status)  # returns a response status\r\n    except BAD_TOKEN as e:\r\n        print(e)  # returns a string with an error\r\n        print(e.data)  # returns the data received by api Kopeechka\r\n\r\n    # mail search by parameters\r\n    try:\r\n        data = await body.mailbox_get_bulk(count=1, comment=\"comment\", email=\"email\", site=\"site\")\r\n        print(data.data)  # returns a dictionary with data from json\r\n        print(data.status)  # returns a response status\r\n        print(data.count)  # returns a count of items\r\n        print(data.items)  # returns a list with found data\r\n        for item in data.items:\r\n            print(item.data)  # returns a dictionary with data from json\r\n            print(item.id)  # returns a task_id\r\n            print(item.service)  # returns a service\r\n            print(item.email)  # returns a email\r\n            print(item.date)  # returns a date\r\n            print(item.status)  # returns a status\r\n            print(item.value)  # returns a link\r\n            print(item.comment)  # returns a comment\r\n    except BAD_TOKEN as e:\r\n        print(e)  # returns a string with an error\r\n        print(e.data)  # returns the data received by api Kopeechka\r\n\r\n    # list of all service domains\r\n    try:\r\n        data = await body.mailbox_get_domains(site=\"site\")\r\n        print(data.data)  # returns a dictionary with data from json\r\n        print(data.status)  # returns a response status\r\n        print(data.count)  # returns a count of items\r\n        print(data.domains)  # returns a list with domains\r\n    except BAD_TOKEN as e:\r\n        print(e)  # returns a string with an error\r\n        print(e.data)  # returns the data received by api Kopeechka\r\n\r\n    # get prices and zones\r\n    data = await body.mailbox_zones(popular=1, zones=1)\r\n    print(data.data)  # returns a dictionary with data from json\r\n    print(data.status)  # returns a response status\r\n    print(data.popular)  # returns a list with populars\r\n    for item in data.popular:\r\n        print(item.data)  # returns a dictionary with data from json\r\n        print(item.name)  # returns a name\r\n        print(item.count)  # returns a count\r\n        print(item.cost)  # returns a cost\r\n    print(data.zones)  # returns a list with zones\r\n    for item in data.zones:\r\n        print(item.data)  # returns a dictionary with data from json\r\n        print(item.name)  # returns a name\r\n        print(item.cost)  # returns a cost\r\n\r\nloop = asyncio.new_event_loop()\r\nloop.run_until_complete(main())\r\n```\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kopeechka",
    "package_url": "https://pypi.org/project/kopeechka/",
    "platform": null,
    "project_url": "https://pypi.org/project/kopeechka/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/kopeechka/5.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This code is a representation of the kopeechka.store API in Python",
    "version": "5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16565743,
  "releases": {
    "3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "438e1d7b8ac2e46b0417561e0b2dd5218cd77843eef1c3cf14a504c926ede6d7",
          "md5": "1d5ea16a39f714eefef9e6d25db18c18",
          "sha256": "8408632c9b0111eae5afd7f75ed5e5ae262490c4f2eaa96cd7c2c959e2b90bee"
        },
        "downloads": -1,
        "filename": "kopeechka-3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1d5ea16a39f714eefef9e6d25db18c18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2722,
        "upload_time": "2022-06-26T19:00:50",
        "upload_time_iso_8601": "2022-06-26T19:00:50.096904Z",
        "url": "https://files.pythonhosted.org/packages/43/8e/1d7b8ac2e46b0417561e0b2dd5218cd77843eef1c3cf14a504c926ede6d7/kopeechka-3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "baa34a50a46f370e7c9d4cdcaedf212d62d7f86cd8e7ee303a2c7fcf5182e12e",
          "md5": "2910a28494da39be67244fc412ac6da8",
          "sha256": "0b43641b4d7753053ec9ce0e3e194546cf5acb69d39ebef6cc882bb7e1f71aa3"
        },
        "downloads": -1,
        "filename": "kopeechka-4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2910a28494da39be67244fc412ac6da8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3334,
        "upload_time": "2023-01-10T16:54:16",
        "upload_time_iso_8601": "2023-01-10T16:54:16.814090Z",
        "url": "https://files.pythonhosted.org/packages/ba/a3/4a50a46f370e7c9d4cdcaedf212d62d7f86cd8e7ee303a2c7fcf5182e12e/kopeechka-4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe2f934d06ab94f7d73ee546d862a9ee0a99652c716c3339e23b04bb09e42ecb",
          "md5": "b57a611ecf14d3b618be9a858cf020f8",
          "sha256": "f3a11a15966b9b7a0334aba7defdc1981e9f9a7d900cbff55b330ed7ac63147a"
        },
        "downloads": -1,
        "filename": "kopeechka-4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b57a611ecf14d3b618be9a858cf020f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3352,
        "upload_time": "2023-01-10T16:58:36",
        "upload_time_iso_8601": "2023-01-10T16:58:36.713868Z",
        "url": "https://files.pythonhosted.org/packages/fe/2f/934d06ab94f7d73ee546d862a9ee0a99652c716c3339e23b04bb09e42ecb/kopeechka-4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90dd86b31f286145ce6bb4bb50d3c9bc0e6b24589eb4c82a26c031da6c11e079",
          "md5": "60aa74c99c74e7f4c1b81a06acf92fc9",
          "sha256": "561d2d3d040051a4ccaf682679ee4bb2b2b13ede67ca7ea11bd14da869d7ff66"
        },
        "downloads": -1,
        "filename": "kopeechka-4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "60aa74c99c74e7f4c1b81a06acf92fc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3348,
        "upload_time": "2023-01-10T17:01:14",
        "upload_time_iso_8601": "2023-01-10T17:01:14.807094Z",
        "url": "https://files.pythonhosted.org/packages/90/dd/86b31f286145ce6bb4bb50d3c9bc0e6b24589eb4c82a26c031da6c11e079/kopeechka-4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e17da113025218dea0a51c1e7de33e0dac547aab30d737ef37168710382bcbe",
          "md5": "712d57e7e5a0ade6b6ac37f07376697d",
          "sha256": "36010d9bd52f8663bfced94994f6911ff1e60a973ee92b703358b22c57c16fec"
        },
        "downloads": -1,
        "filename": "kopeechka-4.21.tar.gz",
        "has_sig": false,
        "md5_digest": "712d57e7e5a0ade6b6ac37f07376697d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3357,
        "upload_time": "2023-01-10T17:05:11",
        "upload_time_iso_8601": "2023-01-10T17:05:11.039469Z",
        "url": "https://files.pythonhosted.org/packages/9e/17/da113025218dea0a51c1e7de33e0dac547aab30d737ef37168710382bcbe/kopeechka-4.21.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e59eb0502c0842b19c861fdfaa8f294b5c8ab394980cf29d05f16c89d0b29d9f",
          "md5": "757bbb894fcdb6239528bf74e5faa7bd",
          "sha256": "b59ddc2b815f00225bb5c14be60406841dfe13862de95b87c6bd08089bfebb49"
        },
        "downloads": -1,
        "filename": "kopeechka-5.tar.gz",
        "has_sig": false,
        "md5_digest": "757bbb894fcdb6239528bf74e5faa7bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4318,
        "upload_time": "2023-01-10T20:50:52",
        "upload_time_iso_8601": "2023-01-10T20:50:52.190030Z",
        "url": "https://files.pythonhosted.org/packages/e5/9e/b0502c0842b19c861fdfaa8f294b5c8ab394980cf29d05f16c89d0b29d9f/kopeechka-5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd28af41e443e6c9ac8d856eb322b67174b576e108b0559dc9c978a84657e1af",
          "md5": "7e75ba288b105a96c791c73278204b89",
          "sha256": "47461182541f394cf011c3f209c659e0cbbae7f3a6ff728a8678ad5cb36a635c"
        },
        "downloads": -1,
        "filename": "kopeechka-5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7e75ba288b105a96c791c73278204b89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4313,
        "upload_time": "2023-01-10T20:52:50",
        "upload_time_iso_8601": "2023-01-10T20:52:50.817923Z",
        "url": "https://files.pythonhosted.org/packages/fd/28/af41e443e6c9ac8d856eb322b67174b576e108b0559dc9c978a84657e1af/kopeechka-5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e6a06a87570d5d1616aca2bfd0f053c70d3228ea0f3627955a2f5a827b47e7b",
          "md5": "f29e2345583475f19d93ad387febbbc7",
          "sha256": "d6c1148474b1d181e00010d548f5477f98b63652dc932db3b27fe015192bb8f0"
        },
        "downloads": -1,
        "filename": "kopeechka-5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f29e2345583475f19d93ad387febbbc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11877,
        "upload_time": "2023-01-25T19:03:02",
        "upload_time_iso_8601": "2023-01-25T19:03:02.243782Z",
        "url": "https://files.pythonhosted.org/packages/1e/6a/06a87570d5d1616aca2bfd0f053c70d3228ea0f3627955a2f5a827b47e7b/kopeechka-5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e6a06a87570d5d1616aca2bfd0f053c70d3228ea0f3627955a2f5a827b47e7b",
        "md5": "f29e2345583475f19d93ad387febbbc7",
        "sha256": "d6c1148474b1d181e00010d548f5477f98b63652dc932db3b27fe015192bb8f0"
      },
      "downloads": -1,
      "filename": "kopeechka-5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f29e2345583475f19d93ad387febbbc7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11877,
      "upload_time": "2023-01-25T19:03:02",
      "upload_time_iso_8601": "2023-01-25T19:03:02.243782Z",
      "url": "https://files.pythonhosted.org/packages/1e/6a/06a87570d5d1616aca2bfd0f053c70d3228ea0f3627955a2f5a827b47e7b/kopeechka-5.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}