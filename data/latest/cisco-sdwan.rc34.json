{
  "info": {
    "author": "",
    "author_email": "Marcelo Reis <sastre-support@cisco.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Networking",
      "Typing :: Typed"
    ],
    "description": "[![published](https://static.production.devnetcloud.com/codeexchange/assets/images/devnet-published.svg)](https://developer.cisco.com/codeexchange/github/repo/reismarcelo/sastre)\n\n# Sastre - Cisco-SDWAN Automation Toolset\n\nSastre provides functions to assist with managing configuration elements and visualize information from Cisco SD-WAN deployments. \n\nSome use-cases include:\n- Transfer configuration from one vManage to another. Lab or proof-of-concept environment to production, on-prem to cloud environments as examples.\n- Backup, restore and delete configuration items. Tags and regular expressions can be used to select all or a subset of items.\n- Visualize operational data across multiple devices. For instance, display status of control connections from multiple devices in a single table.\n\nSastre can also be used as an SDK to other applications, further information is available on [DevNet Sastre SDK](https://developer.cisco.com/docs/sdwan/#!sastre-sdk-overview).\n\nSupport enquires can be sent to sastre-support@cisco.com.\n\nNote on vManage release support:\n- Sastre 1.21 officially supports up to vManage 20.10. Newer vManage releases normally work without problems, just lacking support to the newer features added to that particular vManage release.\n\n## Sastre and Sastre-Pro\n\nSastre is available in two flavors:\n- Sastre: Public open-source under MIT license available on [Cisco DevNet repository](https://github.com/CiscoDevNet/sastre). Supports a limited set of tasks.\n- Sastre-Pro: Cisco licensed version, supporting the full feature-set. Sastre-Pro is available for customers with a CX BCS subscription and Cisco internal at [Cisco eStore](https://cxtools.cisco.com/cxestore/#/toolDetail/46810).\n\nBoth flavors follow the same release numbering. For instance, if support for certain new vManage release is added to Sastre-Pro 1.x, Sastre 1.x will also have the same support (across its supported tasks).\n\nThe command \"sdwan --version\" will indicate the flavor that is installed.\n\nSastre:\n```\n% sdwan --version\nSastre Version 1.20. Catalog: 84 configuration items, 33 operational items.\n```\n\nSastre-Pro:\n```\n% sdwan --version\nSastre-Pro Version 1.20. Catalog: 84 configuration items, 33 operational items.\n```\n\nTasks only available on Sastre-Pro are labeled as such in the [Introduction](#introduction) section below.\n\n## Introduction\n\nSastre can be installed via pip, as a container or cloned from the git repository. Please refer to the [Installing](#installing) section for details.\n\nThe command line is structured as a set of base parameters, the task specification followed by task-specific parameters:\n```\nsdwan <base parameters> <task> <task-specific parameters>\n```\n\nBase parameters define global options such as verbosity level, vManage credentials, etc.\n\nTask indicates the operation to be performed. The following tasks are currently available: \n- Backup: Save vManage configuration items to a local backup.\n- Restore: Restore configuration items from a local backup to vManage.\n- Delete: Delete configuration items on vManage.\n- Migrate: Migrate configuration items from a vManage release to another. Currently, only 18.4, 19.2 or 19.3 to 20.1 is supported. Minor revision numbers (e.g. 20.1.1) are not relevant for the template migration.\n- Transform: Modify configuration items. Currently, copy and rename operations are supported. \n- Attach: Attach WAN Edges/vSmarts to templates. Allows further customization on top of the functionality available via \"restore --attach\".\n- Detach: Detach WAN Edges/vSmarts from templates. Allows further customization on top of the functionality available via \"delete --detach\".\n- Certificate (Sastre-Pro): Restore device certificate validity status from a backup or set to a desired value (i.e. valid, invalid or staging).\n- List (Sastre-Pro): List configuration items or device certificate information from vManage or a local backup.\n- Show-template (Sastre-Pro): Show details about device templates on vManage or from a local backup.\n- Report (Sastre-Pro): Generate a customizable report file containing the output of multiple commands. Also provide option to generate a diff between reports.\n- Show (Sastre-Pro): Run vManage real-time, state or statistics commands; collecting data from one or more devices. Query vManage alarms and events.\n\nTask-specific parameters are provided after the task argument, customizing the task behavior. For instance, whether to execute a restore task in dry-run mode or the destination directory for a backup task. \n\nNotes:\n- Either 'sdwan' or 'sastre' can be used as the main command.\n- The command line described above, and in all examples that follow, assume Sastre was installed via PIP. \n- If Sastre was cloned from the git repository, then 'sdwan.py' or 'sastre.py' should be used instead. Please check the [Installing](#installing) section for more details.\n\n### Base parameters\n\n```\n% sdwan --help\nusage: sdwan [-h] [-a <vmanage-ip>] [-u <user>] [-p <password>] [--tenant <tenant>] [--pid <pid>] [--port <port>] [--timeout <timeout>] [--verbose] [--version] <task> ...\n\nSastre-Pro - Cisco-SDWAN Automation Toolset\n\npositional arguments:\n  <task>                task to be performed (backup, restore, delete, migrate, attach, detach, certificate, transform, list, show-template, show, report)\n  <arguments>           task parameters, if any\n\noptions:\n  -h, --help            show this help message and exit\n  -a <vmanage-ip>, --address <vmanage-ip>\n                        vManage IP address, can also be defined via VMANAGE_IP environment variable. If neither is provided user is prompted for the address.\n  -u <user>, --user <user>\n                        username, can also be defined via VMANAGE_USER environment variable. If neither is provided user is prompted for username.\n  -p <password>, --password <password>\n                        password, can also be defined via VMANAGE_PASSWORD environment variable. If neither is provided user is prompted for password.\n  --tenant <tenant>     tenant name, when using provider accounts in multi-tenant deployments.\n  --pid <pid>           CX project id, can also be defined via CX_PID environment variable. This is collected for AIDE reporting purposes. Use 0 if not applicable.\n  --port <port>         vManage port number, can also be defined via VMANAGE_PORT environment variable (default: 443)\n  --timeout <timeout>   REST API timeout (default: 300)\n  --verbose             increase output verbosity\n  --version             show program's version number and exit\n```\n\nvManage address (-a/--address), username (-u/--user), password (-p/--password), port (--port) and CX project ID (--pid) can also be provided via environment variables:\n- VMANAGE_IP\n- VMANAGE_USER\n- VMANAGE_PASSWORD\n- VMANAGE_PORT\n- CX_PID\n\nA good approach to reduce the number of parameters that need to be provided at execution time is to create rc text files exporting those environment variables for a particular vManage. This is demonstrated in the [Getting Started](#getting-started) section below.\n\nFor any of these arguments, vManage address, user, password and CX pid; user is prompted for a value if they are not provided via the environment variables or command line arguments.\n\nCX project ID is only applicable to Sastre-Pro. CX_PID and --pid option are not available in Sastre (std). If CX project ID is not applicable, simply use value 0.\n\n### Task-specific parameters\n\nTask-specific parameters and options are defined after the task is provided. Each task has its own set of parameters.\n```\n% sdwan backup -h\nusage: sdwan backup [-h] [--archive <filename> | --workdir <directory>] [--no-rollover] [--save-running]\n                         [--regex <regex> | --not-regex <regex>]\n                         <tag> [<tag> ...]\n\nSastre-Pro - Cisco-SDWAN Automation Toolset\n\nBackup task:\n\npositional arguments:\n  <tag>                 one or more tags for selecting items to be backed up. Multiple tags should be separated by space. Available\n                        tags: all, config_group, feature_profile, policy_customapp, policy_definition, policy_list,\n                        policy_security, policy_vedge, policy_voice, policy_vsmart, template_device, template_feature. Special tag\n                        \"all\" selects all items, including WAN edge certificates and device configurations.\n\noptions:\n  -h, --help            show this help message and exit\n  --archive <filename>  backup to zip archive\n  --workdir <directory>\n                        backup to directory (default: backup_198.18.1.10_20220915)\n  --no-rollover         by default, if workdir already exists (before a new backup is saved) the old workdir is renamed using a\n                        rolling naming scheme. This option disables this automatic rollover.\n  --save-running        include the running config from each node to the backup. This is useful for reference or documentation\n                        purposes. It is not needed by the restore task.\n  --regex <regex>       regular expression matching item names to backup, within selected tags.\n  --not-regex <regex>   regular expression matching item names NOT to backup, within selected tags.\n```\n\n#### Important concepts:\n- vManage URL: Constructed from the provided vManage IP address and TCP port (default 443). All operations target this vManage.\n- Workdir: Defines the location (in the local machine) where vManage data files are located. By default, it follows the format \"backup_\\<vmanage-ip\\>_\\<yyyymmdd\\>\". The --workdir parameter can be used to specify a different location.  Workdir is under a 'data' directory. This 'data' directory is relative to the directory where Sastre is run.\n- Tag: vManage configuration items are grouped by tags, such as policy_apply, policy_definition, policy_list, template_device, etc. The special tag 'all' is used to refer to all configuration elements. Depending on the task, one or more tags can be specified in order to select groups of configuration elements.\n\n#### Common behavior of \"table\" tasks:\n\nA number of Sastre tasks provide output in the form of one or more tables. For instance, list, show-template and show tasks. There is a common set of options shared by all such tasks:\n\n**Table export options:**\n- --save-csv: Export as CSV file(s).\n- --save-json: Export as JSON file(s).\n\n**Table filtering options:**\n- --include: Include rows matching the provided regular expression, exclude all other rows.\n- --exclude: Exclude rows matching the provided regular expression.\n\nInclude/exclude regular expressions match on any cell value of the particular row. In other words, any cell value matching the regular expression will cause a row match.\n\nBoth --include and --exclude can be provided at simultaneously. In this case, exclude match is performed first then include.\n\n## Getting Started\n\nCreate a directory to serve as root for backup files, log files and rc files:\n```\n% mkdir sastre\n% cd sastre\n```\n    \nWhen Sastre is executed, data/ and logs/ directories are created as needed to store backup files and application logs. These are created under the directory where Sastre is run.\n\nCreate a rc-example.sh file to include vManage details and source that file:\n```\n% cat <<EOF > rc-example.sh\nexport VMANAGE_IP='198.18.1.10'\nexport VMANAGE_USER='admin'\nEOF\n% source rc-example.sh\n```\n\nNote that in this example the password was not defined, the user will be prompted for a password.\n\nTest vManage credentials by running a simple query listing configured device templates:\n```\n% sdwan list configuration template_device\nvManage password: \n+============================================================================================+\n| Name            | ID                                   | Tag             | Type            |\n+============================================================================================+\n| DC_ADVANCED     | bf322748-8dfd-4cb0-a9e4-5d758be239a0 | template_device | device template |\n| DC_BASIC        | 09c02518-9557-4ae2-9031-7e6b3e7323fc | template_device | device template |\n| VSMART_v1       | 15c1962f-740e-4b89-a269-69f2cbfba296 | template_device | device template |\n| BRANCH_ADVANCED | ad449106-7ed6-442f-9ba8-820612b85981 | template_device | device template |\n| BRANCH_BASIC    | cc2f7a24-4c93-49ed-8e6b-1c107797ba95 | template_device | device template |\n+-----------------+--------------------------------------+-----------------+-----------------+\n```\n\nAny of those vManage parameters can be provided via command line as well:\n```\n% sdwan -p admin list configuration template_device\n```\n\nPerform a backup:\n```\n% sdwan --verbose backup all\nINFO: Starting backup: vManage URL: \"https://198.18.1.10\" -> Local workdir: \"backup_198.18.1.10_20210927\"\nINFO: Saved vManage server information\nINFO: Saved WAN edge certificates\nINFO: Saved device template index\n<snip>\nINFO: Saved prefix list index\nINFO: Done prefix list DefaultRoute\nINFO: Done prefix list InfrastructureRoutes\nINFO: Saved local-domain list index\nINFO: Done local-domain list DCLOUD\nINFO: Task completed successfully\n```\n\nNote that '--verbose' was specified so that progress information is displayed. Without this option, only warning-level messages and above are displayed.\n\nThe backup is saved under data/backup_10.85.136.253_20191206:\n```\n% ls\ndata\t\tlogs\t\trc-example.sh\n% ls data\nbackup_198.18.1.10_20210927\n```\n\n## Additional Examples\n\n### Customizing backup destination:\n\n```\n% sdwan --verbose backup all --workdir my_custom_directory\nINFO: Starting backup: vManage URL: \"https://198.18.1.10\" -> Local workdir: \"my_custom_directory\"\nINFO: Saved vManage server information\nINFO: Saved WAN edge certificates\nINFO: Saved device template index\n<snip>\nINFO: Saved prefix list index\nINFO: Done prefix list DefaultRoute\nINFO: Done prefix list InfrastructureRoutes\nINFO: Saved local-domain list index\nINFO: Done local-domain list DCLOUD\nINFO: Task completed successfully\n```\n\n### Backup saved as a zip file:\n\n```\n% sdwan --verbose backup all --archive my_backup_file.zip\nINFO: Backup task: vManage URL: \"https://198.18.1.10\" -> Local archive file: \"my_backup_file.zip\"\nINFO: Saved vManage server information\nINFO: Saved WAN edge certificates\nINFO: Saved device template index\n<snip>\nINFO: Saved local-domain list index\nINFO: Done local-domain list DCLOUD\nINFO: Created archive file \"my_backup_file.zip\"\nINFO: Task completed successfully\n```\n\nNote that the zip archive is created by default in the same directory where Sastre is executed (and not under a 'data' directory, as is the case for workdir):\n\n```\n% ls *.zip\nmy_backup_file.zip\n```\n\n### Restoring from backup:\n\n```\n% sdwan --verbose restore all        \nINFO: Starting restore: Local workdir: \"backup_10.85.136.253_20200617\" -> vManage URL: \"https://10.85.136.253\"\nINFO: Loading existing items from target vManage\nINFO: Identifying items to be pushed\nINFO: Inspecting template_device items\nINFO: Inspecting template_feature items\nINFO: Inspecting policy_vsmart items\nINFO: Inspecting policy_vedge items\nINFO: Inspecting policy_security items\nINFO: Inspecting policy_voice items\nINFO: Inspecting policy_customapp items\nINFO: Inspecting policy_definition items\nINFO: Inspecting policy_profile items\nINFO: Inspecting policy_list items\nINFO: Pushing items to vManage\nINFO: Done: Create data-ipv6-prefix list mgmt_prefixes_ipv6\nINFO: Done: Create SLA-class list Realtime_Full_Mesh\nINFO: Done: Create SLA-class list Best_Effort\nINFO: Done: Create data-prefix list mgmt_prefixes\n<snip>\nINFO: Done: Create device template BRANCH_ADVANCED\nINFO: Done: Create device template BRANCH_BASIC\nINFO: Task completed successfully\n```\n    \n#### Restoring from a backup in a different directory than the default:\n\n```\n% sdwan --verbose restore all --workdir my_custom_directory\nINFO: Starting restore: Local workdir: \"my_custom_directory\" -> vManage URL: \"https://10.85.136.253\"\nINFO: Loading existing items from target vManage\nINFO: Identifying items to be pushed\nINFO: Inspecting template_device items\nINFO: Inspecting template_feature items\n<snip>\nINFO: Task completed successfully\n```\n\n#### Restoring from a zip archive backup:\n\n```\n% sdwan --verbose restore all --archive my_backup_file.zip \nINFO: Restore task: Local archive file: \"my_backup_file.zip\" -> vManage URL: \"https://198.18.1.10\"\nINFO: Loaded archive file \"my_backup_file.zip\"\nINFO: Loading existing items from target vManage\nINFO: Identifying items to be pushed\nINFO: Inspecting config_group items\nINFO: Inspecting feature_profile items\nINFO: Inspecting template_device items\n<snip>\nINFO: Task completed successfully\n```\n\n#### Restoring with template attachments and policy activation:\n    \n```\n% sdwan --verbose restore all --attach\nINFO: Starting restore: Local workdir: \"backup_10.85.136.253_20200617\" -> vManage URL: \"https://10.85.136.253\"\nINFO: Loading existing items from target vManage\n<snip>\nINFO: Attaching WAN Edge templates\nINFO: Waiting...\nINFO: Waiting...\nINFO: Waiting...\nINFO: Waiting...\nINFO: Completed DC_BASIC,BRANCH_BASIC\nINFO: Completed attaching WAN Edge templates\nINFO: Attaching vSmart template\nINFO: Waiting...\nINFO: Waiting...\nINFO: Completed VSMART_v1\nINFO: Completed attaching vSmart template\nINFO: Activating vSmart policy\nINFO: Waiting...\nINFO: Waiting...\nINFO: Completed Central_policy_v1\nINFO: Completed activating vSmart policy\nINFO: Task completed successfully\n```\n\n#### Overwriting items with the --update option:\n- By default, when an item from the backup has the same name as an existing item on vManage it will be skipped by restore.\n- For instance, if a device template is modified on vManage, restoring from a backup taken before the modification will skip that item.\n- With the --update option, items with the same name are updated with the info found in the backup.\n- Sastre only update items when there are differences between the backup and vManage content.\n- If the item is associated with attached templates or activated policies, all necessary re-attach/re-activate actions are automatically performed.\n- Currently, the --update option does not inspect changes to template values. \n\nExample:\n```\n% sdwan --verbose restore all --workdir state_b --update\nINFO: Starting restore: Local workdir: \"state_b\" -> vManage URL: \"https://10.85.136.253\"\nINFO: Loading existing items from target vManage\nINFO: Identifying items to be pushed\nINFO: Inspecting template_device items\nINFO: Inspecting template_feature items\nINFO: Inspecting policy_vsmart items\nINFO: Inspecting policy_vedge items\nINFO: Inspecting policy_security items\nINFO: Inspecting policy_definition items\nINFO: Inspecting policy_list items\nINFO: Pushing items to vManage\nINFO: Done: Create community list LOCAL_DC_PREFIXES\nINFO: Done: Create community list REMAINING_PREFIXES\nINFO: Updating SLA-class list Best_Effort requires reattach of affected templates\nINFO: Reattaching templates\nINFO: Waiting...\nINFO: Waiting...\nINFO: Completed VSMART_v1\nINFO: Completed reattaching templates\nINFO: Done: Update SLA-class list Best_Effort\n<snip>\nINFO: Done: Update device template DC_BASIC\nINFO: Task completed successfully\n```\n\n### Deleting vManage items:\n\nDry-run, just list without deleting items matching the specified tag and regular expression:\n```\n% sdwan --verbose delete all --regex '^DC' --dryrun\nINFO: Starting delete, DRY-RUN mode: vManage URL: \"https://10.85.136.253\"\nINFO: Inspecting template_device items\nINFO: DRY-RUN: Delete device template DC_BASIC\nINFO: DRY-RUN: Delete device template DC_ADVANCED\nINFO: Inspecting template_feature items\nINFO: Inspecting policy_vsmart items\nINFO: Inspecting policy_vedge items\nINFO: Inspecting policy_security items\nINFO: Inspecting policy_definition items\nINFO: Inspecting policy_list items\nINFO: Task completed successfully\n```\n\nDeleting items:\n```\n% sdwan --verbose delete all --regex '^DC'\nINFO: Starting delete: vManage URL: \"https://10.85.136.253\"\nINFO: Inspecting template_device items\nINFO: Done: Delete device template DC_BASIC\nINFO: Done: Delete device template DC_ADVANCED\nINFO: Inspecting template_feature items\nINFO: Inspecting policy_vsmart items\nINFO: Inspecting policy_vedge items\nINFO: Inspecting policy_security items\nINFO: Inspecting policy_definition items\nINFO: Inspecting policy_list items\nINFO: Task completed successfully\n```\n\n#### Deleting with detach:\nWhen vSmart policies are activated and device templates are attached the associated items cannot be deleted. \nThe --detach option performs the necessary template detach and vSmart policy deactivate before proceeding with delete.\n\n```\n% sdwan --verbose delete all --detach\nINFO: Starting delete: vManage URL: \"https://10.85.136.253\"\nINFO: Detaching WAN Edge templates\nINFO: Waiting...\nINFO: Completed BRANCH_BASIC\nINFO: Completed DC_BASIC\nINFO: Completed detaching WAN Edge templates\nINFO: Deactivating vSmart policy\nINFO: Waiting...\nINFO: Completed Central_policy_v1\nINFO: Completed deactivating vSmart policy\nINFO: Detaching vSmart template\nINFO: Waiting...\nINFO: Completed VSMART_v1\nINFO: Completed detaching vSmart template\nINFO: Inspecting template_device items\nINFO: Done: Delete device template vManage_template\n<snip>\nINFO: Task completed successfully\n```\n\n### Listing items from vManage or from a backup:\n\nThe list task can be used to show items from a target vManage, or a backup directory. Matching criteria can contain item tag(s) and regular expression.\n\nList device templates and feature templates from target vManage:\n```\n% sdwan --verbose list configuration template_device template_feature\nINFO: Starting list configuration: vManage URL: \"https://198.18.1.10\"\nINFO: List criteria matched 45 items\n+========================================================================================================+\n| Name                      | ID                                   | Tag              | Type             |\n+========================================================================================================+\n| BRANCH_ADVANCED           | 6ece1f27-fbfa-4730-9a8f-b61bfd380047 | template_device  | device template  |\n| VSMART_v1                 | ba623cf6-5d2c-4676-a763-11b9cf866074 | template_device  | device template  |\n| BRANCH_BASIC              | 5e362c85-8251-428a-b650-d364f8e15a22 | template_device  | device template  |\n<snip>\n| vSmart_VPN0_Interface_v1  | be09349e-308e-4ca5-a306-fb7bcd5bcb28 | template_feature | feature template |\n+---------------------------+--------------------------------------+------------------+------------------+\nINFO: Task completed successfully\n```\n \nList all items from target vManage with name starting with 'DC':\n```\n% sdwan --verbose list configuration all --include '^DC'                                  \nINFO: List configuration task: vManage URL: \"https://198.18.1.10\"\nINFO: Selection matched 9 items\n+============================================================================================================+\n| Name                         | ID                                   | Tag              | Type              |\n+============================================================================================================+\n| DC-vEdges                    | 87f79b8f-c295-4ba9-8279-a7866055281b | template_device  | device template   |\n| DC-VPN-0                     | c684bdcd-8397-4e93-b185-0474afc6a711 | template_feature | feature template  |\n| DC-VPN10                     | 9c0011b9-b2eb-48ba-a262-bf6a64bcba4d | template_feature | feature template  |\n| DC-VPN20                     | d8bcbe02-21db-4297-856d-03ec8de53b44 | template_feature | feature template  |\n| DC1-VPN10-Interface-Template | 72b0a69a-6ce7-445d-871e-39fb7122115b | template_feature | feature template  |\n| DC1-VPN20-Interface-Template | ea3e73e3-2b31-498d-8663-b0a1240e9a3c | template_feature | feature template  |\n| DC1                          | 8aefe416-4f02-40bc-a141-57fb605efe72 | policy_list      | site list         |\n| DC-TLOCS                     | cc13e69d-3f3a-4af0-ad28-70915d297acc | policy_list      | TLOC list         |\n| DCLOUD                       | bb90f933-37d2-4639-812b-e2fb73bbb95e | policy_list      | local-domain list |\n+------------------------------+--------------------------------------+------------------+-------------------+\nINFO: Task completed successfully\n```\n\nList all items from backup directory with name starting with 'DC':\n```\n% sdwan --verbose list configuration all --include '^DC' --workdir backup_10.85.136.253_20191206\nINFO: Starting list configuration: Local workdir: \"backup_10.85.136.253_20191206\"\nINFO: Selection matched 2 items\n+========================================================================================+\n| Name        | ID                                   | Tag             | Type            |\n+========================================================================================+\n| DC_ADVANCED | bf322748-8dfd-4cb0-a9e4-5d758be239a0 | template_device | device template |\n| DC_BASIC    | 09c02518-9557-4ae2-9031-7e6b3e7323fc | template_device | device template |\n+-------------+--------------------------------------+-----------------+-----------------+\nINFO: Task completed successfully\n```\n    \nList also allows displaying device certificate information:\n```\n% sdwan --verbose list certificate                     \nINFO: List certificate task: vManage URL: \"https://198.18.1.10\"\nINFO: Selection matched 5 items\n+================================================================================================================================+\n| Hostname   | Chassis                                  | Serial                           | State                      | Status |\n+================================================================================================================================+\n| -          | 52c7911f-c5b0-45df-b826-3155809a2a1a     | 24801375888299141d620fbdb02de2d4 | bootstrap config generated | valid  |\n| BR1-CEDGE1 | CSR-940ad679-a16a-48ea-9920-16278597d98e | 487D703A                         | certificate installed      | valid  |\n| BR1-CEDGE2 | CSR-04ed104b-86bb-4cb3-bd2b-a0d0991f6872 | AAC6C8F0                         | certificate installed      | valid  |\n| DC1-VEDGE1 | ebdc8bd9-17e5-4eb3-a5e0-f438403a83de     | ee08f743                         | certificate installed      | valid  |\n| DC1-VEDGE2 | f21dbb35-30b3-47f4-93bb-d2b2fe092d35     | b02445f6                         | certificate installed      | valid  |\n+------------+------------------------------------------+----------------------------------+----------------------------+--------+\nINFO: Task completed successfully\n```\n\nSimilar to the list task, show-template tasks can be used to display items from a target vManage or backup. With show-template values, additional details about the selected items are displayed. A regular expression can be used to select which device templates to inspect. If the inspected templates have devices attached their values are displayed.\n```\n% sdwan --verbose show-template values --templates '^DC'\nINFO: Show-template values task: vManage URL: \"https://198.18.1.10\"\nINFO: Inspecting device template DC-vEdges values\n*** Template DC-vEdges, device DC1-VEDGE1 ***\n+====================================================================================================================================================+\n| Name                                 | Value                                | Variable                                                             |\n+====================================================================================================================================================+\n| Latitude(system_latitude)            | 37.33                                | //system/gps-location/latitude                                       |\n| Longitude(system_longitude)          | -121.88                              | //system/gps-location/longitude                                      |\n| Hostname(system_host_name)           | DC1-VEDGE1                           | //system/host-name                                                   |\n| Site ID(system_site_id)              | 100                                  | //system/site-id                                                     |\n| System IP(system_system_ip)          | 10.1.0.1                             | //system/system-ip                                                   |\n| IPv4 Address(MPLS-Interface-IP)      | 100.64.0.2/30                        | /0/ge0/1/interface/ip/address                                        |\n| IPv4 Address(InternetTLOCIP)         | 100.64.2.26/30                       | /0/ge0/2/interface/ip/address                                        |\n| Address(Internet-GW)                 | 100.64.2.25                          | /0/vpn-instance/ip/route/0.0.0.0/0/next-hop/Internet-GW/address      |\n| Address(MPLS-GW)                     | 100.64.0.1                           | /0/vpn-instance/ip/route/0.0.0.0/0/next-hop/MPLS-GW/address          |\n| Router ID(ospf_router_id)            | 10.1.0.1                             | /10//router/ospf/router-id                                           |\n| IPv4 Address(VPN10-Interface-IP)     | 10.1.10.150/24                       | /10/ge0/0/interface/ip/address                                       |\n| Address(VPN10_DEF_GW_DC)             | 10.1.10.1                            | /10/vpn-instance/ip/route/0.0.0.0/0/next-hop/VPN10_DEF_GW_DC/address |\n| IPv4 address(fw_svc_ip)              | 10.1.10.200                          | /10/vpn-instance/service/FW/address                                  |\n| Interface Name(OSPF_VPN20_IF)        | ge0/3                                | /20//router/ospf/area/0/interface/OSPF_VPN20_IF/name                 |\n| Router ID(ospf_router_id)            | 10.1.0.1                             | /20//router/ospf/router-id                                           |\n| Address(VPN20_DEF_GW_DC)             | 10.1.20.1                            | /20/vpn-instance/ip/route/0.0.0.0/0/next-hop/VPN20_DEF_GW_DC/address |\n| Interface Name(vpn20-interface-name) | ge0/3                                | /20/vpn20-interface-name/interface/if-name                           |\n| IPv4 Address(VPN20-IP-Address)       | 10.1.20.150/24                       | /20/vpn20-interface-name/interface/ip/address                        |\n| Interface Name(VPN512_INTERFACE)     | eth0                                 | /512/VPN512_INTERFACE/interface/if-name                              |\n| IPv4 Address(VPN512_IP_ADDR)         | 198.18.3.100/24                      | /512/VPN512_INTERFACE/interface/ip/address                           |\n| Address(VPN512_GW)                   | 198.18.3.1                           | /512/vpn-instance/ip/route/0.0.0.0/0/next-hop/VPN512_GW/address      |\n| System IP                            | 10.1.0.1                             | csv-deviceIP                                                         |\n| Chassis Number                       | ebdc8bd9-17e5-4eb3-a5e0-f438403a83de | csv-deviceId                                                         |\n| Hostname                             | DC1-VEDGE1                           | csv-host-name                                                        |\n| Status                               | complete                             | csv-status                                                           |\n+--------------------------------------+--------------------------------------+----------------------------------------------------------------------+\n\n*** Template DC-vEdges, device DC1-VEDGE2 ***\n+====================================================================================================================================================+\n| Name                                 | Value                                | Variable                                                             |\n+====================================================================================================================================================+\n| Latitude(system_latitude)            | 37.33                                | //system/gps-location/latitude                                       |\n| Longitude(system_longitude)          | -121.88                              | //system/gps-location/longitude                                      |\n| Hostname(system_host_name)           | DC1-VEDGE2                           | //system/host-name                                                   |\n| Site ID(system_site_id)              | 100                                  | //system/site-id                                                     |\n| System IP(system_system_ip)          | 10.1.0.2                             | //system/system-ip                                                   |\n| IPv4 Address(MPLS-Interface-IP)      | 100.64.0.6/30                        | /0/ge0/1/interface/ip/address                                        |\n| IPv4 Address(InternetTLOCIP)         | 100.64.2.30/30                       | /0/ge0/2/interface/ip/address                                        |\n| Address(Internet-GW)                 | 100.64.2.29                          | /0/vpn-instance/ip/route/0.0.0.0/0/next-hop/Internet-GW/address      |\n| Address(MPLS-GW)                     | 100.64.0.5                           | /0/vpn-instance/ip/route/0.0.0.0/0/next-hop/MPLS-GW/address          |\n| Router ID(ospf_router_id)            | 10.1.0.2                             | /10//router/ospf/router-id                                           |\n| IPv4 Address(VPN10-Interface-IP)     | 10.1.10.250/24                       | /10/ge0/0/interface/ip/address                                       |\n| Address(VPN10_DEF_GW_DC)             | 10.1.10.1                            | /10/vpn-instance/ip/route/0.0.0.0/0/next-hop/VPN10_DEF_GW_DC/address |\n| IPv4 address(fw_svc_ip)              | 10.1.10.200                          | /10/vpn-instance/service/FW/address                                  |\n| Interface Name(OSPF_VPN20_IF)        | ge0/3                                | /20//router/ospf/area/0/interface/OSPF_VPN20_IF/name                 |\n| Router ID(ospf_router_id)            | 10.1.0.2                             | /20//router/ospf/router-id                                           |\n| Address(VPN20_DEF_GW_DC)             | 10.1.20.1                            | /20/vpn-instance/ip/route/0.0.0.0/0/next-hop/VPN20_DEF_GW_DC/address |\n| Interface Name(vpn20-interface-name) | ge0/3                                | /20/vpn20-interface-name/interface/if-name                           |\n| IPv4 Address(VPN20-IP-Address)       | 10.1.20.250/24                       | /20/vpn20-interface-name/interface/ip/address                        |\n| Interface Name(VPN512_INTERFACE)     | eth0                                 | /512/VPN512_INTERFACE/interface/if-name                              |\n| IPv4 Address(VPN512_IP_ADDR)         | 198.18.3.101/24                      | /512/VPN512_INTERFACE/interface/ip/address                           |\n| Address(VPN512_GW)                   | 198.18.3.1                           | /512/vpn-instance/ip/route/0.0.0.0/0/next-hop/VPN512_GW/address      |\n| System IP                            | 10.1.0.2                             | csv-deviceIP                                                         |\n| Chassis Number                       | f21dbb35-30b3-47f4-93bb-d2b2fe092d35 | csv-deviceId                                                         |\n| Hostname                             | DC1-VEDGE2                           | csv-host-name                                                        |\n| Status                               | complete                             | csv-status                                                           |\n+--------------------------------------+--------------------------------------+----------------------------------------------------------------------+\nINFO: Task completed successfully\n```\n\n### Modifying device certificate validity status:\n\nRestore certificate validity status from a backup:\n```\n% sdwan --verbose certificate restore --workdir test\nINFO: Starting certificate: Restore status workdir: \"test\" > vManage URL: \"https://198.18.1.10\"\nINFO: Loading WAN edge certificate list from target vManage\nINFO: Identifying items to be pushed\nINFO: Will update DC1-VEDGE1 status: valid -> staging\nINFO: Will update 52c7911f-c5b0-45df-b826-3155809a2a1a status: valid -> invalid\nINFO: Will update DC1-VEDGE2 status: valid -> staging\nINFO: Will update BR1-CEDGE2 status: valid -> staging\nINFO: Will update BR1-CEDGE1 status: valid -> staging\nINFO: Pushing certificate status changes to vManage\nINFO: Certificate sync with controllers\nINFO: Waiting...\nINFO: Completed certificate sync with controllers\nINFO: Task completed successfully\n```\n\nSet certificate validity status to a desired value:\n```\n% sdwan --verbose certificate set valid             \nINFO: Starting certificate: Set status to \"valid\" > vManage URL: \"https://198.18.1.10\"\nINFO: Loading WAN edge certificate list from target vManage\nINFO: Identifying items to be pushed\nINFO: Will update DC1-VEDGE1 status: staging -> valid\nINFO: Will update 52c7911f-c5b0-45df-b826-3155809a2a1a status: invalid -> valid\nINFO: Will update DC1-VEDGE2 status: staging -> valid\nINFO: Will update BR1-CEDGE2 status: staging -> valid\nINFO: Will update BR1-CEDGE1 status: staging -> valid\nINFO: Pushing certificate status changes to vManage\nINFO: Certificate sync with controllers\nINFO: Waiting...\nINFO: Completed certificate sync with controllers\nINFO: Task completed successfully\n```\n\n### Migrating templates from pre-20.1 to post-20.1\n- Template migration from pre-20.1 to post-20.1 format is supported. Maintenance numbers are not relevant to the migration. That is, 20.1 and 20.1.1 can be specified without any difference in terms of template migration.\n- The source of templates can be a live vManage or a backup. The destination is always a local directory. A restore task is then used to push migrated items to the target vManage.\n- Device attachments and template values are currently not handled by the migrate task. For instance, devices attached to a device template are left on that same template even when a new migrated template is created. \n\nMigrating off a live vManage:\n```\n% sdwan --verbose migrate all dcloud_migrated    \nINFO: Starting migrate: vManage URL: \"https://198.18.1.10\" 18.4 -> 20.1 Local output dir: \"dcloud_migrated\"\nINFO: Loaded template migration recipes\nINFO: Inspecting policy_list items\nINFO: Saved VPN list index\nINFO: Saved VPN list myvpns\nINFO: Saved VPN list corpVPN\nINFO: Saved VPN list pciVPN\nINFO: Saved VPN list guestVPN\nINFO: Saved VPN list ALLVPNs\nINFO: Saved URL-whitelist list index\nINFO: Saved URL-whitelist list Cisco\n<snip>\nINFO: Inspecting template_device items\nINFO: Saved device template index\nINFO: Saved device template vSmartConfigurationTemplate\nINFO: Saved device template VSMART-device-template\nINFO: Saved device template BranchType2Template-vEdge\nINFO: Saved device template DC-vEdges\nINFO: Saved device template migrated_BranchType1Template-CSR\nINFO: Task completed successfully\n```\n\nMigrating from a local workdir:\n```\n% sdwan --verbose migrate all --workdir sastre_cx_golden_repo sastre_cx_golden_repo_201\nINFO: Starting migrate: Local workdir: \"sastre_cx_golden_repo\" 18.4 -> 20.1 Local output dir: \"sastre_cx_golden_repo_201\"\nINFO: Loaded template migration recipes\nINFO: Inspecting policy_list items\nINFO: Saved VPN list index\nINFO: Saved VPN list ALL_VPNS\nINFO: Saved VPN list G_All_SLAN_VPN_List\nINFO: Saved URL-blacklist list index\nINFO: Saved URL-blacklist list G_URL_BL_Example_List\nINFO: Saved class list index\nINFO: Saved class list G_Voice_Class_D46_C5_V01\n<snip>\nINFO: Saved device template migrated_G_Branch_184_Single_cE4451-X_2xWAN_DHCP_L2_v01\nINFO: Task completed successfully\n```\n    \nBasic customization of migrated template names:\n- Using the --name option to specify the format for building migrated template names. Default is \"migrated_{name}\", where {name} is replaced with the original template name.\n\nExample:\n```\n% sdwan --verbose migrate all dcloud_migrated --workdir dcloud_192 --name \"201_{name}\"\nINFO: Starting migrate: Local workdir: \"dcloud_192\" 18.4 -> 20.1 Local output dir: \"dcloud_migrated\"\nINFO: Previous migration under \"dcloud_migrated\" was saved as \"dcloud_migrated_1\"\nINFO: Loaded template migration recipes\nINFO: Inspecting policy_list items\nINFO: Saved VPN list index\nINFO: Saved VPN list myvpns\nINFO: Saved VPN list corpVPN\nINFO: Saved VPN list pciVPN\nINFO: Saved VPN list guestVPN\nINFO: Saved VPN list ALLVPNs\nINFO: Saved URL-whitelist list index\nINFO: Saved URL-whitelist list Cisco\n<snip>\nINFO: Inspecting template_device items\nINFO: Saved device template index\nINFO: Saved device template vSmartConfigurationTemplate\nINFO: Saved device template VSMART-device-template\nINFO: Saved device template BranchType2Template-vEdge\nINFO: Saved device template DC-vEdges\nINFO: Saved device template 201_BranchType1Template-CSR\nINFO: Task completed successfully\n```\n\nRegex-based customization of migrated template names:\n- This example shows a more complex --name option, containing multiple {name} entries with regular expressions.\n- Additional details about the name regex syntax are provided in the [Template name manipulation via name-regex](#template-name-manipulation-via-name-regex) section.\n\nExample:\n```\n% sdwan --verbose migrate all sastre_cx_golden_repo_201 --workdir sastre_cx_golden_repo --name '{name (G_.+)_184_.+}{name (G_VPN.+)}_201{name G.+_184(_.+)}'\nINFO: Starting migrate: Local workdir: \"sastre_cx_golden_repo\" 18.4 -> 20.1 Local output dir: \"sastre_cx_golden_repo_201\"\nINFO: Loaded template migration recipes\nINFO: Inspecting policy_list items\n<snip>\nINFO: Inspecting template_feature items\nINFO: Saved feature template index\nINFO: Saved feature template G_vEdge_201_Banner_Template_v01\nINFO: Saved feature template G_vEdge_184_Banner_Template_v01\nINFO: Saved feature template G_vEdge_184_SLAN_INT3_v01\nINFO: Saved feature template G_vEdge_184_VPN0_Transport5_TLOC_EXT_v01\nINFO: Saved feature template G_cEdge_201_Loopback0_Template_v01\nINFO: Saved feature template G_cEdge_184_Loopback0_Template_v01\n<snip>\nINFO: Saved device template G_Branch_201_Dual_cE4321_2xWAN_TLOC_L2_v01\nINFO: Saved device template G_Branch_201_Single_cE4451-X_2xWAN_DHCP_L2_v01\nINFO: Task completed successfully\n```\n\n### Selectively attach/detach devices to/from templates\n\nThe attach and detach tasks expose a number of knobs to select templates and devices to be included:\n- Templates regular expression, selecting templates to attach. Match on template name.\n- Devices regular expression, selecting devices to attach. Match on device name.\n- Reachability state\n- Site-ID\n- System-IP\n\nWhen multiple filters are defined, the result is an AND of all filters. Dry-run can be used to validate the expected outcome.\n\nThe number of devices to include per attach/detach request (to vManage) can be defined with the --batch option.\n\nUsing dry-run mode to validate what templates and devices would be included with the attach task:\n```\n% sdwan --verbose attach edge --workdir dcloud_base --dryrun\nINFO: Starting attach templates, DRY-RUN mode: Local workdir: \"dcloud_base\" -> vManage URL: \"https://198.18.1.10\"\nINFO: DRY-RUN: Template attach: DC-vEdges (DC1-VEDGE1, DC1-VEDGE2), migrated_CSR_BranchType1Template-CSR (BR1-CEDGE2, BR1-CEDGE1)\nINFO: Task completed successfully\n```\n\nSelecting devices to include in the attach task:\n```\n% sdwan --verbose attach edge --workdir dcloud_base --templates 'DC' --devices 'VEDGE2'       \nINFO: Starting attach templates: Local workdir: \"dcloud_base\" -> vManage URL: \"https://198.18.1.10\"\nINFO: Template attach: DC-vEdges (DC1-VEDGE2)\nINFO: Attaching WAN Edges\nINFO: Waiting...\nINFO: Waiting...\nINFO: Waiting...\nINFO: Completed DC-vEdges\nINFO: Completed attaching WAN Edges\nINFO: Task completed successfully\n```\n\n### Verifying device operational data\n\nThe show task provides commands to display operational data from devices, and vManage alarms and events.\n\nShow devices, realtime, state and statistics share the same set of options to filter devices to display:\n  - --regex <regex> - Regular expression matching device name, type or model to display\n  - --not-regex <regex> - Regular expression matching device name, type or model NOT to display.\n  - --reachable - Display only reachable devices\n  - --site <id> - Filter by site ID\n  - --system-ip <ipv4> - Filter by system IP\n\nVerifying inventory of devices that are reachable and name starting with \"pEdge3\" or \"pEdge4\":\n```\n% sdwan show devices --reachable --regex 'pEdge[3-4]'\n+==================================================================================+\n| Name             | System IP   | Site ID | Reachability | Type  | Model          |\n+==================================================================================+\n| pEdge3-ISR4331-1 | 100.1.140.1 | 140     | reachable    | vedge | vedge-ISR-4331 |\n| pEdge4-ISR4331-2 | 100.1.140.2 | 140     | reachable    | vedge | vedge-ISR-4331 |\n+------------------+-------------+---------+--------------+-------+----------------+\n```\n\nListing the advertised routes from those two devices:\n```\n% sdwan show realtime omp adv-routes --reachable --regex 'pEdge[3-4]'\n*** OMP advertised routes ***\n+=====================================================================================================================================+\n| Device           | VPN ID | Prefix           | To Peer     | Tloc color   | Tloc IP     | Protocol        | Metric | OMP Preference |\n+=====================================================================================================================================+\n| pEdge3-ISR4331-1 | 1      | 10.5.113.0/24    | 100.1.9.104 | mpls         | 100.1.140.1 | OSPF-external-2 | 20     |                |\n| pEdge3-ISR4331-1 | 1      | 10.5.113.0/24    | 100.1.9.104 | biz-internet | 100.1.140.1 | OSPF-external-2 | 20     |                |\n<snip>\n| pEdge3-ISR4331-1 | 1      | 172.18.31.0/24   | 100.1.9.105 | biz-internet | 100.1.140.1 | OSPF-intra-area | 2      |                |\n+------------------+--------+------------------+-------------+--------------+-------------+-----------------+--------+----------------+\n| pEdge4-ISR4331-2 | 1      | 10.5.113.0/24    | 100.1.9.104 | mpls         | 100.1.140.2 | OSPF-external-2 | 20     |                |\n| pEdge4-ISR4331-2 | 1      | 10.5.113.0/24    | 100.1.9.104 | biz-internet | 100.1.140.2 | OSPF-external-2 | 20     |                |\n<snip>\n| pEdge4-ISR4331-2 | 1      | 172.18.31.0/24   | 100.1.9.105 | biz-internet | 100.1.140.2 | OSPF-intra-area | 2      |                |\n+------------------+--------+------------------+-------------+--------------+-------------+-----------------+--------+----------------+\n```\n\nChecking control connections and local-properties:\n```\n% sdwan show state control --reachable --regex 'pEdge[3-4]'\n*** Control connections ***\n+===============================================================================================+\n| Device           | Peer System IP | Site ID | Peer Type | Local Color  | Remote Color | State |\n+===============================================================================================+\n| pEdge3-ISR4331-1 | 100.1.9.105    | 9       | vsmart    | biz-internet | default      | up    |\n| pEdge3-ISR4331-1 | 100.1.9.104    | 9       | vsmart    | biz-internet | default      | up    |\n| pEdge3-ISR4331-1 | 100.1.9.104    | 9       | vsmart    | mpls         | default      | up    |\n| pEdge3-ISR4331-1 | 100.1.9.103    | 9       | vmanage   | biz-internet | default      | up    |\n| pEdge3-ISR4331-1 | 100.1.9.105    | 9       | vsmart    | mpls         | default      | up    |\n+------------------+----------------+---------+-----------+--------------+--------------+-------+\n| pEdge4-ISR4331-2 | 100.1.9.105    | 9       | vsmart    | biz-internet | default      | up    |\n| pEdge4-ISR4331-2 | 100.1.9.104    | 9       | vsmart    | biz-internet | default      | up    |\n| pEdge4-ISR4331-2 | 100.1.9.101    | 9       | vmanage   | mpls         | default      | up    |\n| pEdge4-ISR4331-2 | 100.1.9.104    | 9       | vsmart    | mpls         | default      | up    |\n| pEdge4-ISR4331-2 | 100.1.9.105    | 9       | vsmart    | mpls         | default      | up    |\n+------------------+----------------+---------+-----------+--------------+--------------+-------+\n\n*** Control local-properties ***\n+======================================================================================================+\n| Device           | System IP   | Site ID | Device Type | Organization Name | Domain ID | Port Hopped |\n+======================================================================================================+\n| pEdge3-ISR4331-1 | 100.1.140.1 | 140     | vedge       | AS_RTP_SDA_SDWAN  | 1         | TRUE        |\n+------------------+-------------+---------+-------------+-------------------+-----------+-------------+\n| pEdge4-ISR4331-2 | 100.1.140.2 | 140     | vedge       | AS_RTP_SDA_SDWAN  | 1         | TRUE        |\n+------------------+-------------+---------+-------------+-------------------+-----------+-------------+\n```\n\nVerifying app-route data:\n```\n% sdwan show statistics app-route --reachable --regex 'pEdge[3-4]'\n*** Application-aware route statistics ***\n+===========================================================================================================================================================================+\n| Device           | Local System Ip | Remote System Ip | Local Color  | Remote Color | Total | Loss | Latency | Jitter | Name                                              |\n+===========================================================================================================================================================================+\n| pEdge3-ISR4331-1 | 100.1.140.1     | 100.1.150.2      | mpls         | mpls         | 132   | 0    | 30      | 3      | 100.1.140.1:mpls-100.1.150.2:mpls                 |\n| pEdge3-ISR4331-1 | 100.1.140.1     | 100.1.150.1      | mpls         | mpls         | 133   | 0    | 30      | 3      | 100.1.140.1:mpls-100.1.150.1:mpls                 |\n| pEdge3-ISR4331-1 | 100.1.140.1     | 100.1.111.1      | biz-internet | biz-internet | 133   | 0    | 146     | 64     | 100.1.140.1:biz-internet-100.1.111.1:biz-internet |\n| pEdge3-ISR4331-1 | 100.1.140.1     | 100.1.150.1      | biz-internet | biz-internet | 133   | 0    | 145     | 62     | 100.1.140.1:biz-internet-100.1.150.1:biz-internet |\n| pEdge3-ISR4331-1 | 100.1.140.1     | 100.1.150.2      | biz-internet | biz-internet | 133   | 0    | 144     | 65     | 100.1.140.1:biz-internet-100.1.150.2:biz-internet |\n+------------------+-----------------+------------------+--------------+--------------+-------+------+---------+--------+---------------------------------------------------+\n| pEdge4-ISR4331-2 | 100.1.140.2     | 100.1.150.1      | biz-internet | biz-internet | 132   | 0    | 145     | 62     | 100.1.140.2:biz-internet-100.1.150.1:biz-internet |\n| pEdge4-ISR4331-2 | 100.1.140.2     | 100.1.150.2      | biz-internet | biz-internet | 132   | 0    | 146     | 70     | 100.1.140.2:biz-internet-100.1.150.2:biz-internet |\n| pEdge4-ISR4331-2 | 100.1.140.2     | 100.1.111.1      | biz-internet | biz-internet | 132   | 0    | 148     | 65     | 100.1.140.2:biz-internet-100.1.111.1:biz-internet |\n| pEdge4-ISR4331-2 | 100.1.140.2     | 100.1.150.1      | mpls         | mpls         | 132   | 0    | 30      | 3      | 100.1.140.2:mpls-100.1.150.1:mpls                 |\n| pEdge4-ISR4331-2 | 100.1.140.2     | 100.1.150.2      | mpls         | mpls         | 133   | 0    | 30      | 3      | 100.1.140.2:mpls-100.1.150.2:mpls                 |\n+------------------+-----------------+------------------+--------------+--------------+-------+------+---------+--------+---------------------------------------------------+\n```\n\nVerifying app-route data from 4 days ago:\n```\n% sdwan --verbose show statistics app-route --days 4 --reachable --regex 'pEdge[3-4]' \nINFO: Starting show statistics: vManage URL: \"https://10.122.41.140\"\nINFO: Query timestamp: 2021-04-26 15:36:12 UTC\nINFO: Retrieving application-aware route statistics from 2 devices\n*** Application-aware route statistics ***\n+===========================================================================================================================================================================+\n| Device           | Local System Ip | Remote System Ip | Local Color  | Remote Color | Total | Loss | Latency | Jitter | Name                                              |\n+===========================================================================================================================================================================+\n| pEdge3-ISR4331-1 | 100.1.140.1     | 100.1.150.2      | biz-internet | biz-internet | 133   | 0    | 59      | 6      | 100.1.140.1:biz-internet-100.1.150.2:biz-internet |\n| pEdge3-ISR4331-1 | 100.1.140.1     | 100.1.111.1      | biz-internet | biz-internet | 133   | 0    | 60      | 6      | 100.1.140.1:biz-internet-100.1.111.1:biz-internet |\n| pEdge3-ISR4331-1 | 100.1.140.1     | 100.1.150.1      | biz-internet | biz-internet | 132   | 0    | 59      | 6      | 100.1.140.1:biz-internet-100.1.150.1:biz-internet |\n| pEdge3-ISR4331-1 | 100.1.140.1     | 100.1.150.1      | mpls         | mpls         | 133   | 0    | 30      | 3      | 100.1.140.1:mpls-100.1.150.1:mpls                 |\n| pEdge3-ISR4331-1 | 100.1.140.1     | 100.1.150.2      | mpls         | mpls         | 132   | 0    | 30      | 3      | 100.1.140.1:mpls-100.1.150.2:mpls                 |\n+------------------+-----------------+------------------+--------------+--------------+-------+------+---------+--------+---------------------------------------------------+\n| pEdge4-ISR4331-2 | 100.1.140.2     | 100.1.111.1      | biz-internet | biz-internet | 133   | 0    | 60      | 7      | 100.1.140.2:biz-internet-100.1.111.1:biz-internet |\n| pEdge4-ISR4331-2 | 100.1.140.2     | 100.1.150.2      | biz-internet | biz-internet | 132   | 0    | 60      | 7      | 100.1.140.2:biz-internet-100.1.150.2:biz-internet |\n| pEdge4-ISR4331-2 | 100.1.140.2     | 100.1.150.1      | biz-internet | biz-internet | 133   | 0    | 60      | 6      | 100.1.140.2:biz-internet-100.1.150.1:biz-internet |\n| pEdge4-ISR4331-2 | 100.1.140.2     | 100.1.150.1      | mpls         | mpls         | 133   | 0    | 30      | 3      | 100.1.140.2:mpls-100.1.150.1:mpls                 |\n| pEdge4-ISR4331-2 | 100.1.140.2     | 100.1.150.2      | mpls         | mpls         | 133   | 0    | 30      | 3      | 100.1.140.2:mpls-100.1.150.2:mpls                 |\n+------------------+-----------------+------------------+--------------+--------------+-------+------+---------+--------+---------------------------------------------------+\nINFO: Task completed successfully\n```\n\nChecking vManage alarms:\n```\n% sdwan --verbose show alarms --days 1\nINFO: Show alarms task: vManage URL: \"https://198.18.1.10\"\nINFO: Records query: 2022-02-16 18:05:20 UTC -> 2022-02-17 19:05:20 UTC\n+================================================================================================================================================================+\n| Date & Time             | Devices    | Severity | Type                      | Message                                                                 | Active |\n+================================================================================================================================================================+\n| 2022-02-17 19:02:49 UTC | BR1-CEDGE1 | Critical | utd-ips-alert             | APP-DETECT DNS request for Dynamic Internet Technology domain dfgvx.com | True   |\n| 2022-02-17 19:02:34 UTC | BR1-CEDGE1 | Critical | utd-ips-alert             | APP-DETECT DNS request for Dynamic Internet Technology domain dfgvx.com | True   |\n| 2022-02-17 19:02:19 UTC | BR1-CEDGE1 | Critical | utd-ips-alert             | APP-DETECT DNS request for Dynamic Internet Technology domain dfgvx.com | True   |\n| 2022-02-17 19:00:33 UTC | BR1-CEDGE1 | Critical | utd-file-reputation-alert | UTD file reputation alert                                               | True   |\n| 2022-02-17 19:00:07 UTC | vManage    | Minor    | cpu-usage                 | System CPU usage is back to normal level (below 60%)                    | False  |\n| 2022-02-17 19:00:03 UTC | BR1-CEDGE1 | Critical | utd-file-reputation-alert | UTD file reputation alert                                               | True   |\n| 2022-02-17 19:00:03 UTC | BR1-CEDGE1 | Critical | utd-file-reputation-alert | UTD file reputation alert                                               | True   |\n| 2022-02-17 19:00:03 UTC | vManage    | Medium   | cpu-usage                 | System CPU usage is above 60%                                           | False  |\n| 2022-02-17 18:50:08 UTC | vManage    | Minor    | cpu-usage                 | System CPU usage is back to normal level (below 60%)                    | False  |\n| 2022-02-17 18:50:03 UTC | vManage    | Medium   | cpu-usage                 | System CPU usage is above 60%                                           | False  |\n+-------------------------+------------+----------+---------------------------+-------------------------------------------------------------------------+--------+\nINFO: Task completed successfully\n```\n\n### Renaming configuration items\n\nThe transform task allows copying or renaming configuration items, including templates with attachments, activated policies and their dependencies.\n```\n% sdwan --verbose transform -h       \nusage: sdwan transform [-h] {rename,copy,recipe} ...\n\nSastre-Pro - Automation Tools for Cisco SD-WAN Powered by Viptela\n\nTransform task:\n\noptional arguments:\n  -h, --help            show this help message and exit\n\ntransform options:\n  {rename,copy,recipe}\n    rename              rename configuration items\n    copy                copy configuration items\n    recipe              transform using custom recipe\n```\n\nTransform can read from a live vManage or from a backup directory (when --workdir is specified). It always save the processed items to the provided output directory. Then restore/attach tasks can be used to push those changes to vManage.\n\nNaming the new or renamed items can be done in a couple of ways:\n- Name template: A name_regex expression defines how to build the new name based on the old name. This method is available via CLI or custom recipe.\n- Name map: A 1-1 mapping from old name to new name is defined. This method is only available when using custom recipes.\n- Name map + name template: When both name map and name template are defined, name map lookup is done first. Only if no match is found on name map, name template processing is done.\n\nRenaming a feature-template using name template via transform rename:\n- Rename Logging_Template_cEdge to Logging_Template_v01\n```\n% sdwan list config template_feature --include '^Logging'\n+=====================================================================================================+\n| Name                   | ID                                   | Tag              | Type             |\n+=====================================================================================================+\n| Logging_Template_cEdge | 1613ce4c-d098-4a24-8192-ef77d27dd0c4 | template_feature | feature template |\n+------------------------+--------------------------------------+------------------+------------------+\n\n% sdwan --verbose transform rename template_feature --regex '^Logging' '{name (Logging_Template)_cEdge}_v01' cleaned_configs\nINFO: Transform task: vManage URL: \"https://198.18.1.10\" -> Local output dir: \"cleaned_configs\"\nINFO: Saved vManage server information\nINFO: Inspecting policy_list items\nINFO: Inspecting policy_profile items\nINFO: Inspecting policy_definition items\nINFO: Inspecting policy_customapp items\nINFO: Inspecting policy_voice items\nINFO: Inspecting policy_security items\nINFO: Inspecting policy_vedge items\nINFO: Inspecting policy_vsmart items\nINFO: Inspecting template_feature items\nINFO: Matched feature template Logging_Template_cEdge\nINFO: Replacing feature template: Logging_Template_cEdge -> Logging_Template_v01\nINFO: Inspecting template_device items\nINFO: Task completed successfully\n```\n\nPush changes to vManage using the restore task:\n- Note that --update option is used. This is so device template changes are detected and updated accordingly, with template reattach triggered as needed.\n```\n% sdwan --verbose restore all --update --workdir cleaned_configs                         \nINFO: Restore task: Local workdir: \"cleaned_configs\" -> vManage URL: \"https://198.18.1.10\"\nINFO: Loading existing items from target vManage\nINFO: Identifying items to be pushed\nINFO: Inspecting template_device items\nINFO: Inspecting template_feature items\nINFO: Inspecting policy_vsmart items\nINFO: Inspecting policy_vedge items\nINFO: Inspecting policy_security items\nINFO: Inspecting policy_voice items\nINFO: Inspecting policy_customapp items\nINFO: Inspecting policy_definition items\nINFO: Inspecting policy_profile items\nINFO: Inspecting policy_list items\nINFO: Pushing items to vManage\nINFO: Done: Create feature template Logging_Template_v01\nINFO: Updating device template BranchType1Template-cEdge requires reattach\nINFO: Template attach: BranchType1Template-cEdge (BR1-CEDGE2, BR1-CEDGE1)\nINFO: Reattaching templates\nINFO: Waiting...\nINFO: Waiting...\nINFO: Waiting...\nINFO: Waiting...\nINFO: Completed BranchType1Template-cEdge\nINFO: Completed reattaching templates\nINFO: Done: Update device template BranchType1Template-cEdge\nINFO: Task completed successfully\n```\n\nRenaming multiple feature-templates using name template and name map via transform recipe:\n- Using a custom recipe (defined in a YAML file or provided as a JSON string), allows more flexibility for defining which items are selected and how the new items should be named.\n```\n% cat recipe.yaml                                                          \n---\ntag: template_feature\n\nname_template:\n  regex: \"^All-\"\n  name_regex: \"{name ^All-(.+)}\"\n\nname_map:\n  DC1-VPN10-Interface-Template: DC-VPN10-Interface_v01\n  DC1-VPN20-Interface-Template: DC-VPN20-Interface_v01\n...\n\n% sdwan --verbose transform recipe --from-file recipe.yaml test-transform\nINFO: Transform task: vManage URL: \"https://198.18.1.10\" -> Local output dir: \"test-transform\"\n<< snip >>\nINFO: Matched feature template All-VPN0-TEMPLATE_cEdge\nINFO: Replacing feature template: All-VPN0-TEMPLATE_cEdge -> VPN0-TEMPLATE_cEdge\nINFO: Inspecting template_device items\nINFO: Task completed successfully\n```\n\nPush changes to vManage using the restore task:\n```\n% sdwan --verbose restore all --workdir test-transform --update             \nINFO: Restore task: Local workdir: \"test-transform\" -> vManage URL: \"https://198.18.1.10\"\n<< snip >>\nINFO: Task completed successfully\n```\n\n\n## Notes\n\n### Regular Expressions\n\nIt is recommended to always use single quotes when specifying a regular expression to --regex option:\n```\nsdwan --verbose restore all --regex 'VPN1'\n```\n     \nThis is to prevent the shell from interpreting special characters that could be part of the pattern provided.\n\nMatching done by --regex is un-anchored. That is, unless anchor marks are provided (e.g. ^ or $), the specified pattern matches if present anywhere in the string. In other words, this is a search function.\n\nThe regular expression syntax supported is described in https://docs.python.org/3/library/re.html\n\n#### Behavior of --regex and --not-regex:\n- --regex is used to select items to include (i.e. perform task operation)\n- --not-regex is used to define items not to include. That is, select all items, except the ones matching --not-regex.\n- When --regex match on multiple fields (e.g. item name, item ID), an item is selected if the item name OR item ID match the regular expression provided.\n- With --not-regex, when it matches on multiple fields (e.g. item name, item ID), all items are selected, except the ones where item name OR item ID match the regular expression.\n\n### Template name manipulation via name-regex\nMultiple Sastre tasks utilize name-regex for name manipulation:\n- Migrate task --name option accepts a name-regex.\n- Transform copy/rename tasks have a `<name-regex>` mandatory parameter. \n- Transform recipe task allow `name_regex` under `name_template` section of the recipe YAML file. \n- The 'list transform' task also take a `<name-regex>` parameter. This task was designed to facilitate testing of those expressions.\n\nA name-regex is a template for creating a new name based on segments of an original name.\n\nThe following rules apply:\n- Occurrences of {name} are replaced with the original item name.\n- Sections of the original item name can be captured by providing a regular expression in the format: {name &lt;regex&gt;}. This regular expression must contain one or more capturing groups, which define segments of the original name to \"copy\". Segments matching each capturing group are concatenated and \"pasted\" to the {name} position.\n- If the regular expression does not match, {name &lt;regex&gt;} is replaced with an empty string.\n\nExample:\n```\nConsider the template name \"G_Branch_184_Single_cE4451-X_2xWAN_DHCP_L2_v01\". \nIn order to get the migrated name as \"G_Branch_201_Single_cE4451-X_2xWAN_DHCP_L2_v01\", one can use --name '{name (G_.+)_184_.+}_201_{name G.+_184_(.+)}'.\n\n% sdwan list transform template_device --regex 'G_Branch_184_Single_cE4451' --workdir sastre_cx_golden_repo '{name (G_.+)_184_.+}_201_{name G.+_184_(.+)}'\n+===================================================================================================================================================================+\n| Name                                                          | Transformed                                                   | Tag             | Type            |\n+===================================================================================================================================================================+\n| G_Branch_184_Single_cE4451-X_2xWAN_Static_2xSLAN_Trunk_L2_v01 | G_Branch_201_Single_cE4451-X_2xWAN_Static_2xSLAN_Trunk_L2_v01 | template_device | device template |\n| G_Branch_184_Single_cE4451-X_2xWAN_DHCP_L2_v01                | G_Branch_201_Single_cE4451-X_2xWAN_DHCP_L2_v01                | template_device | device template |\n+---------------------------------------------------------------+---------------------------------------------------------------+-----------------+-----------------+\n```\n\n### Logs\n\nSastre logs messages to the terminal and to log files (under the logs/ directory).\n\nDebug-level and higher severity messages are always saved to the log files.\n\nThe --verbose flag controls the severity of messages printed to the terminal. If --verbose is not specified, only warning-level and higher messages are logged. When --verbose is specified, informational-level and higher messages are printed. \n\n### Restore behavior\n\nBy default, restore will skip items with the same name. If an existing item on vManage has the same name as an item in the backup this item is skipped from restore.\n\nAny references/dependencies on that item are properly updated. For instance, if a feature template is not pushed to vManage because an item with the same name is already present, device templates being pushed will now point to the feature template which is already on vManage.\n\n**Restore with --update:**\n\nAdding the --update option to restore modifies this behavior. In this case, Sastre will update existing items containing the same name as in the backup, but only if their content is different.\n\nWhen an existing vManage item is modified, device templates may need to be reattached or vSmart policies may need to be re-activated. This is handled as follows:\n- Updating items associated with an active vSmart policy may require this policy to be re-activated. In this case, Sastre will request the policy reactivate automatically.\n- On updates to master templates (e.g. device template) containing attached devices, Sastre will re-attach the device templates.\n- On Updates to child templates (e.g. feature template) associated with master templates containing attached devices, Sastre will re-attach the affected master template(s).\n- In all re-attach cases, Sastre will use the existing attachment values on vManage to feed the attach request.\n\nThe implication is that if modified templates define new variables re-attach will fail, because not all variables would have values assigned. In this case, the recommended procedure is to detach the master template (e.g. using detach task), re-run \"restore --update\", then re-attach the device-template from vManage, where one would be able to supply any missing variable values.\n\n**Factory default items:**\n\nIf a factory-default item in the backup is a dependency (referenced by other items) that is missing on the target vManage, it is converted to a non-default item and pushed to vManage. \n\nA WARNING message is displayed when this condition happens. The user may want to review the corresponding templates/policies and update them to reference newer versions or equivalent factory-defaults that may be available on vManage. \n\n## Installing\n\nSastre requires Python 3.8 or newer. This can be verified by pasting the following to a terminal window:\n```\n% python3 -c \"import sys;assert sys.version_info>(3,8)\" && echo \"ALL GOOD\"\n```\n\nIf 'ALL GOOD' is printed it means Python requirements are met. If not, download and install the latest 3.x version at Python.org (https://www.python.org/downloads/).\n\nThe recommended way to install Sastre is via pip. For development purposes, Sastre can be installed from the GitHub repository. Both methods are described in this section.\n\n### PIP install in a virtual environment (recommended)\n\nCreate a directory to store the virtual environment and runtime files:\n```\n% mkdir sastre\n% cd sastre\n```\n\nCreate virtual environment:\n```\n% python3 -m venv venv\n```\n    \nActivate virtual environment:\n```\n% source venv/bin/activate\n(venv) %\n```\n- Note that the prompt is updated with the virtual environment name (venv), indicating that the virtual environment is active.\n    \nUpgrade initial virtual environment packages:\n```\n(venv) % pip install --upgrade pip setuptools\n```\n\nInstall Sastre:\n```\n(venv) % pip install --upgrade cisco-sdwan\n```\n    \nVerify that Sastre can run:\n```\n(venv) % sdwan --version\n```\n\nNotes:\n- The virtual environment is deactivated by typing 'deactivate' at the command prompt.\n- Before running Sastre, make sure to activate the virtual environment back again (source venv/bin/activate).\n\n### PIP install\n\nWith this option you will likely need to run the pip commands as sudo.\n\nInstall Sastre:\n```\n% python3 -m pip install --upgrade cisco-sdwan\n```\n    \nVerify that Sastre can run:\n```\n% sdwan --version\n```\n\n### GitHub install\n\nClone from the GitHub repository:\n```\n% git clone https://github.com/CiscoDevNet/sastre\n```\n\nMove to the clone directory:\n```\n% cd sastre\n```\n\nCreate virtual environment:\n```\n% python3 -m venv venv\n```\n    \nActivate virtual environment:\n```\n% source venv/bin/activate\n(venv) %\n```\n- Note that the prompt is updated with the virtual environment name (venv), indicating that the virtual environment is active.\n\nUpgrade initial virtual environment packages:\n```\n(venv) % pip install --upgrade pip setuptools\n```\n\nInstall required Python packages:\n```\n(venv) % pip install -r requirements.txt\n```\n\nVerify that Sastre can run:\n```\n(venv) % python3 sdwan.py --version\n```\n\n### Docker install\n\nFirst, proceed with the [GitHub install](#GitHub-install) outlined above.\n\nEnsure you are within the directory cloned from GitHub:\n```\n% cd sastre\n```\n\nThen proceed as follows to build the docker container:\n```\n% docker build -t sastre .\nSending build context to Docker daemon    220MB\nStep 1/12 : ARG http_proxy\nStep 2/12 : ARG https_proxy\nStep 3/12 : ARG no_proxy\nStep 4/12 : FROM python:3.9-alpine\n ---> 77a605933afb\n<snip>\n```\n\nCreate host directory to be mounted into the container:\n```\nmkdir sastre-volume\n```\n\nStart the docker container:\n```\ndocker run -it --rm --hostname sastre \\\n --mount type=bind,source=\"$(pwd)\"/sastre-volume,target=/shared-data \\\n sastre:latest\n\nusage: sdwan [-h] [-a <vmanage-ip>] [-u <user>] [-p <password>] [--tenant <tenant>] [--port <port>] [--timeout <timeout>] [--verbose] [--version] <task> ...\n\nSastre - Automation Tools for Cisco SD-WAN Powered by Viptela\n\npositional arguments:\n  <task>                task to be performed (backup, restore, delete, migrate)\n  <arguments>           task parameters, if any\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a <vmanage-ip>, --address <vmanage-ip>\n                        vManage IP address, can also be defined via VMANAGE_IP environment variable. If neither is provided user is prompted for the address.\n  -u <user>, --user <user>\n                        username, can also be defined via VMANAGE_USER environment variable. If neither is provided user is prompted for username.\n  -p <password>, --password <password>\n                        password, can also be defined via VMANAGE_PASSWORD environment variable. If neither is provided user is prompted for password.\n  --tenant <tenant>     tenant name, when using provider accounts in multi-tenant deployments.\n  --port <port>         vManage port number, can also be defined via VMANAGE_PORT environment variable (default: 443)\n  --timeout <timeout>   REST API timeout (default: 300)\n  --verbose             increase output verbosity\n  --version             show program's version number and exit\nsastre:/shared-data#\n\nsastre:/shared-data# sdwan --version\nSastre Version 1.11. Catalog: 63 configuration items, 12 realtime items.\n\nsastre:/shared-data#\n```\n\nNotes:\n- When set, host proxy environment variables (http_proxy, https_proxy and no_proxy) are used during the build and execution of the container.\n- The container has a /shared-data volume.\n- Sastre data/ and logs/ directories are created under /shared-data.\n- A sample dcloud-lab.sh is copied to /shared-data/rc if no /shared-data/rc directory is present.\n- Directory structure:\n    - /shared-data/data - Used as the vManage backup data repository\n    - /shared-data/logs - Where the logs are saved\n    - /shared-data/rc - Used to store 'rc' files defining environment variables used by Sastre: VMANAGE_IP, VMANAGE_USER, etc.\n- The suggested docker run command above bind-mounts the /shared-data volume, i.e. it is mapped to a host system directory. This facilitates transferring of data to/from the container (e.g. vManage backups). The host directory is relative to the location where the docker run command is executed.\n- Docker run will spin-up the container and open an interactive session to it using the ash shell. Sdwan commands (e.g. sdwan backup all, etc.) can be executed at this point. Typing 'exit' will leave the ash shell, stop and remove the container. Everything under data, rc and logs is persisted to the corresponding host system directories.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "cisco,network,sastre,sdwan,viptela",
    "license": "MIT License  Copyright (c) 2019 Cisco Systems, Inc. and/or its affiliates  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cisco-sdwan",
    "package_url": "https://pypi.org/project/cisco-sdwan/",
    "platform": null,
    "project_url": "https://pypi.org/project/cisco-sdwan/",
    "project_urls": {
      "Bug Tracker": "https://github.com/CiscoDevNet/sastre/issues",
      "Homepage": "https://github.com/CiscoDevNet/sastre"
    },
    "release_url": "https://pypi.org/project/cisco-sdwan/1.21.1/",
    "requires_dist": [
      "pydantic",
      "pyyaml",
      "requests"
    ],
    "requires_python": ">=3.8",
    "summary": "Cisco-SDWAN Automation Toolset",
    "version": "1.21.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17337142,
  "releases": {
    "0.33": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8656bbcce41d9a14b645c8474f701e300f96e234e4bd9a53d5b10f4637c8d5a8",
          "md5": "6f594e942a70d17be817075a328fd75b",
          "sha256": "b667f606dc8f5ec2377472987c44977ae5e57228cc8d6d4320c440296c3cfb9e"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-0.33-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f594e942a70d17be817075a328fd75b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35238,
        "upload_time": "2019-12-07T21:29:55",
        "upload_time_iso_8601": "2019-12-07T21:29:55.616006Z",
        "url": "https://files.pythonhosted.org/packages/86/56/bbcce41d9a14b645c8474f701e300f96e234e4bd9a53d5b10f4637c8d5a8/cisco_sdwan-0.33-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "obsolete"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a2701d4b17aa40190458fa87e49d110705056a170a2fc0ba27a296d759d966e",
          "md5": "06eba889649d7427c9c44e57ecb3e559",
          "sha256": "3244be14421c04be1cfedd06e5295f03932be088c77f3f4814defe0370deb973"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-0.33.tar.gz",
        "has_sig": false,
        "md5_digest": "06eba889649d7427c9c44e57ecb3e559",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 38155,
        "upload_time": "2019-12-07T21:29:58",
        "upload_time_iso_8601": "2019-12-07T21:29:58.099679Z",
        "url": "https://files.pythonhosted.org/packages/3a/27/01d4b17aa40190458fa87e49d110705056a170a2fc0ba27a296d759d966e/cisco-sdwan-0.33.tar.gz",
        "yanked": true,
        "yanked_reason": "obsolete"
      }
    ],
    "0.34": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5fcf1eb90edf6ce11869fee579b7bd8307e87f0721e7cca6b842d8203396f95",
          "md5": "3b1f53f10cb3ba1b3254d808cceea23d",
          "sha256": "85f19e065e9c1698d47615eadcb8ed1a2ca6beca8997f37a0e20192f7f2c46aa"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-0.34-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b1f53f10cb3ba1b3254d808cceea23d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 36648,
        "upload_time": "2020-01-09T14:58:44",
        "upload_time_iso_8601": "2020-01-09T14:58:44.989080Z",
        "url": "https://files.pythonhosted.org/packages/d5/fc/f1eb90edf6ce11869fee579b7bd8307e87f0721e7cca6b842d8203396f95/cisco_sdwan-0.34-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "obsolete"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5046882cbeb2e20cc49a8730e40fb5b3520eda0fe83bf1b6794aa411cbf977e",
          "md5": "9586ad4989a5fc8e2692726b5c7e280b",
          "sha256": "a6ee9032ce7b653d09fd4ada6dde4c991fc4a3da6fa165e43d36ea3e95d23cf8"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-0.34.tar.gz",
        "has_sig": false,
        "md5_digest": "9586ad4989a5fc8e2692726b5c7e280b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 39687,
        "upload_time": "2020-01-09T14:58:46",
        "upload_time_iso_8601": "2020-01-09T14:58:46.714692Z",
        "url": "https://files.pythonhosted.org/packages/c5/04/6882cbeb2e20cc49a8730e40fb5b3520eda0fe83bf1b6794aa411cbf977e/cisco-sdwan-0.34.tar.gz",
        "yanked": true,
        "yanked_reason": "obsolete"
      }
    ],
    "0.35": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efeb9355534047a07f94113b90e3fe196081553651ed6c46f75e955b431adf3e",
          "md5": "569b8b562559e4ce0f938090b577fa19",
          "sha256": "4a3319fe76d53d93e0eaebe31e78c74916121e54efbb21d8f98cba4a5b39c4ee"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-0.35-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "569b8b562559e4ce0f938090b577fa19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39857,
        "upload_time": "2020-03-04T14:22:25",
        "upload_time_iso_8601": "2020-03-04T14:22:25.026045Z",
        "url": "https://files.pythonhosted.org/packages/ef/eb/9355534047a07f94113b90e3fe196081553651ed6c46f75e955b431adf3e/cisco_sdwan-0.35-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "obsolete"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cf8f5ff46c4645825d7ef69d79474fd84fd39f7236e3dfddc2fc2ae076d8f1a",
          "md5": "b045e81c7e1567d154b283599951f580",
          "sha256": "764a4d2f7c92113ab63597fa1baa82a4bf4aa08189bdcbc11cc12e06fc9c0382"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-0.35.tar.gz",
        "has_sig": false,
        "md5_digest": "b045e81c7e1567d154b283599951f580",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48089,
        "upload_time": "2020-03-04T14:22:26",
        "upload_time_iso_8601": "2020-03-04T14:22:26.092899Z",
        "url": "https://files.pythonhosted.org/packages/5c/f8/f5ff46c4645825d7ef69d79474fd84fd39f7236e3dfddc2fc2ae076d8f1a/cisco-sdwan-0.35.tar.gz",
        "yanked": true,
        "yanked_reason": "obsolete"
      }
    ],
    "0.36": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7245c7c7a7b8e4890c1acdf2e50f7bf8ff8c7417fc167fa0cfc290f7db767a8c",
          "md5": "bbc1f5dbadc01107563da5cc5b9eefcf",
          "sha256": "ec4264f7f963e8eab50d74e0de231094615716453f08eaec86b70b277bee96a6"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-0.36-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbc1f5dbadc01107563da5cc5b9eefcf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41236,
        "upload_time": "2020-04-10T03:31:13",
        "upload_time_iso_8601": "2020-04-10T03:31:13.006935Z",
        "url": "https://files.pythonhosted.org/packages/72/45/c7c7a7b8e4890c1acdf2e50f7bf8ff8c7417fc167fa0cfc290f7db767a8c/cisco_sdwan-0.36-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "obsolete"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3c55660491c3f509da3b11f0e8ae3673febe31fdc00a96862136a0f9966ead4",
          "md5": "2ca5f513bb9c3b0bddd43c5ea1e84f0b",
          "sha256": "12be9e369399e974f0ec0f88a579e024f7f4f291b4f9cd5620ac572945e849df"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-0.36.tar.gz",
        "has_sig": false,
        "md5_digest": "2ca5f513bb9c3b0bddd43c5ea1e84f0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49837,
        "upload_time": "2020-04-10T03:31:15",
        "upload_time_iso_8601": "2020-04-10T03:31:15.176136Z",
        "url": "https://files.pythonhosted.org/packages/e3/c5/5660491c3f509da3b11f0e8ae3673febe31fdc00a96862136a0f9966ead4/cisco-sdwan-0.36.tar.gz",
        "yanked": true,
        "yanked_reason": "obsolete"
      }
    ],
    "0.37": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60bf21c6bafb92838664ab003aecef9a7b0fc4f25856aba12e436925f4079b1f",
          "md5": "868be639c8ec28c2db1ba37c95d512af",
          "sha256": "833da850670bca397e8c47241e260a018f437ad0a1bb75d8996127a5faa04793"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-0.37-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "868be639c8ec28c2db1ba37c95d512af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41236,
        "upload_time": "2020-04-22T03:11:17",
        "upload_time_iso_8601": "2020-04-22T03:11:17.493952Z",
        "url": "https://files.pythonhosted.org/packages/60/bf/21c6bafb92838664ab003aecef9a7b0fc4f25856aba12e436925f4079b1f/cisco_sdwan-0.37-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "obsolete"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "006499689465c0db0df32fe9d855c3fd9d9a0a93a9e4f7e0300e7daa7d347b7e",
          "md5": "f6c3298860f1eaf134e4caf1a0e44922",
          "sha256": "a39b74ebbd843889b70d58c07ab03460760e4594281500bb57392a01acaabeea"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-0.37.tar.gz",
        "has_sig": false,
        "md5_digest": "f6c3298860f1eaf134e4caf1a0e44922",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49850,
        "upload_time": "2020-04-22T03:11:19",
        "upload_time_iso_8601": "2020-04-22T03:11:19.956452Z",
        "url": "https://files.pythonhosted.org/packages/00/64/99689465c0db0df32fe9d855c3fd9d9a0a93a9e4f7e0300e7daa7d347b7e/cisco-sdwan-0.37.tar.gz",
        "yanked": true,
        "yanked_reason": "obsolete"
      }
    ],
    "1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8737293855a8c88852497931d0daf2c593942c552b7594ca596045396656afb1",
          "md5": "7b82a20e7b31960e4e8a2c4f0d6dda96",
          "sha256": "ff6975c88d713fadd1aea075beee1fbfed18cce4514fdb1ebd32e3293080ca4e"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b82a20e7b31960e4e8a2c4f0d6dda96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 62343,
        "upload_time": "2020-11-03T03:25:14",
        "upload_time_iso_8601": "2020-11-03T03:25:14.094449Z",
        "url": "https://files.pythonhosted.org/packages/87/37/293855a8c88852497931d0daf2c593942c552b7594ca596045396656afb1/cisco_sdwan-1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17347061e8be29f237dd8d4872bb808ba65fbba506e6f6876f2a88d239ec610a",
          "md5": "f78288c4945f6093dda8387d24d8e420",
          "sha256": "21f925e4cab757cd38de613772b63cf8458c4abc3cef9829c9d67a1548129146"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "f78288c4945f6093dda8387d24d8e420",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 74145,
        "upload_time": "2020-11-03T03:25:19",
        "upload_time_iso_8601": "2020-11-03T03:25:19.712646Z",
        "url": "https://files.pythonhosted.org/packages/17/34/7061e8be29f237dd8d4872bb808ba65fbba506e6f6876f2a88d239ec610a/cisco-sdwan-1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61e6319f0a4fa2d7a505b8677c732b165f880769feaa2963d50f8a60c6cc53d3",
          "md5": "258a7facf93be13f255bbcb304e8438a",
          "sha256": "8931b0046036b7760cf5a9b53649dd88cf38e99299b3c462f80b276f482de4f7"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "258a7facf93be13f255bbcb304e8438a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 63390,
        "upload_time": "2020-11-25T22:22:05",
        "upload_time_iso_8601": "2020-11-25T22:22:05.965098Z",
        "url": "https://files.pythonhosted.org/packages/61/e6/319f0a4fa2d7a505b8677c732b165f880769feaa2963d50f8a60c6cc53d3/cisco_sdwan-1.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb4874e83ff116c2e91adcbd1db3e5439ce052fbe467befca94d5ea8976b67c",
          "md5": "282b6fd8cf62623a56887da1490f37e8",
          "sha256": "92508da2f9f2bf5011a642663a150556968db9ebc5d7251566f8a616d079aeae"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "282b6fd8cf62623a56887da1490f37e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 75899,
        "upload_time": "2020-11-25T22:22:10",
        "upload_time_iso_8601": "2020-11-25T22:22:10.555623Z",
        "url": "https://files.pythonhosted.org/packages/ae/b4/874e83ff116c2e91adcbd1db3e5439ce052fbe467befca94d5ea8976b67c/cisco-sdwan-1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2a60182b2fc74ff0a0a1e7b16d822d5c327547b279c433fe633e5f78148835e",
          "md5": "ed11ca9c6aa0359cfea03648762d52a4",
          "sha256": "2ffdf3d9e967440ccf7598fafb9ed51ed846e99108562236ae969fc3f45336f1"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed11ca9c6aa0359cfea03648762d52a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 65366,
        "upload_time": "2021-03-10T22:42:34",
        "upload_time_iso_8601": "2021-03-10T22:42:34.726570Z",
        "url": "https://files.pythonhosted.org/packages/c2/a6/0182b2fc74ff0a0a1e7b16d822d5c327547b279c433fe633e5f78148835e/cisco_sdwan-1.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "327b118e099d0e2b7725ee257eb825416cb0eb9be0a29b61a5d6f19032f641bc",
          "md5": "d6160e0e232155a49b75cf8715d94a30",
          "sha256": "874f7198a7bedd1fc360e9f8073d3bc577934203fa01c7755da89ddf89679dc8"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "d6160e0e232155a49b75cf8715d94a30",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 78817,
        "upload_time": "2021-03-10T22:42:37",
        "upload_time_iso_8601": "2021-03-10T22:42:37.490706Z",
        "url": "https://files.pythonhosted.org/packages/32/7b/118e099d0e2b7725ee257eb825416cb0eb9be0a29b61a5d6f19032f641bc/cisco-sdwan-1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8e62b6eb9064a49fcbde87a7af50da3d654655f7286441b33a4fc604c534f84",
          "md5": "afd22619147d394b9e26481a3cd0fdf7",
          "sha256": "533880064ee65d779d48e149acd5bd58e52f1b3e15e4f3f10420bd5aa82b2179"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afd22619147d394b9e26481a3cd0fdf7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 80448,
        "upload_time": "2021-05-01T17:38:42",
        "upload_time_iso_8601": "2021-05-01T17:38:42.002807Z",
        "url": "https://files.pythonhosted.org/packages/e8/e6/2b6eb9064a49fcbde87a7af50da3d654655f7286441b33a4fc604c534f84/cisco_sdwan-1.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc4d73e3200179db698141b3cba8bc5997334c791b08c31176ae2e1fd5270c8d",
          "md5": "6e34fcd2c23aa741196ff10be7130cbb",
          "sha256": "b8b92df5bca7698c2eb80d1602bd7a9471d4f1019230cdda2cdad1dbbd2c2843"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "6e34fcd2c23aa741196ff10be7130cbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 86316,
        "upload_time": "2021-05-01T17:38:45",
        "upload_time_iso_8601": "2021-05-01T17:38:45.038790Z",
        "url": "https://files.pythonhosted.org/packages/cc/4d/73e3200179db698141b3cba8bc5997334c791b08c31176ae2e1fd5270c8d/cisco-sdwan-1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "243a1766155d986f78131a5a5fdf5e7682cfade4fad0a56c62cac57bb438197e",
          "md5": "1451efa02ba7230168641672f4dd59ee",
          "sha256": "696b820fc68d98563d389fb280774099fbbd1298014a9dc36dd2ec2db3320221"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1451efa02ba7230168641672f4dd59ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 81358,
        "upload_time": "2021-07-14T00:53:47",
        "upload_time_iso_8601": "2021-07-14T00:53:47.299373Z",
        "url": "https://files.pythonhosted.org/packages/24/3a/1766155d986f78131a5a5fdf5e7682cfade4fad0a56c62cac57bb438197e/cisco_sdwan-1.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6a0ad3ac0605996483d9fc894fc4e9d53e5bad559e9e8a5e16b96f673af94a9",
          "md5": "015fb4de5d092d1e71422e4b1a4fef2a",
          "sha256": "782aface7ca901a7adc15508438ac5d14a893cb7233fc0e48801fffe32eba166"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "015fb4de5d092d1e71422e4b1a4fef2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 87581,
        "upload_time": "2021-07-14T00:53:48",
        "upload_time_iso_8601": "2021-07-14T00:53:48.934780Z",
        "url": "https://files.pythonhosted.org/packages/c6/a0/ad3ac0605996483d9fc894fc4e9d53e5bad559e9e8a5e16b96f673af94a9/cisco-sdwan-1.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20bee0d84b1d1bb75e3cf8c25fd739830b612609fd10d2d09d0c8d00366d0dc8",
          "md5": "78281f02a240d72f0b45bb4e7d9341f9",
          "sha256": "aa0ef231f402b64e470676edcc3375012e7ca2c01b9d1082c29144bea0ee1e3c"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78281f02a240d72f0b45bb4e7d9341f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 85419,
        "upload_time": "2021-09-28T03:37:17",
        "upload_time_iso_8601": "2021-09-28T03:37:17.874409Z",
        "url": "https://files.pythonhosted.org/packages/20/be/e0d84b1d1bb75e3cf8c25fd739830b612609fd10d2d09d0c8d00366d0dc8/cisco_sdwan-1.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af68f3ee576282577518ff3102094a32d1e7ef2b96a61a0648df2605c18a1c1b",
          "md5": "0e91096779724c49590b1c170217449f",
          "sha256": "a8305b828f4efc0db35496242ebaf03c6f582879215dacddf0c17cd9212a1b2d"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "0e91096779724c49590b1c170217449f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 91936,
        "upload_time": "2021-09-28T03:37:20",
        "upload_time_iso_8601": "2021-09-28T03:37:20.485391Z",
        "url": "https://files.pythonhosted.org/packages/af/68/f3ee576282577518ff3102094a32d1e7ef2b96a61a0648df2605c18a1c1b/cisco-sdwan-1.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.16.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e81aac1c8be7a3ec4e04bd2e5c6ac173c8c44889c8a6f6f7a2d6405e09a3424",
          "md5": "c6c304f3c7d63737a0a13de37cb01c8d",
          "sha256": "1b86753806a6e5dc909ccbd3b25942fcf21d94c7970a0e6a4f41cb323032b19b"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.16.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6c304f3c7d63737a0a13de37cb01c8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 87815,
        "upload_time": "2021-10-01T16:43:10",
        "upload_time_iso_8601": "2021-10-01T16:43:10.708503Z",
        "url": "https://files.pythonhosted.org/packages/6e/81/aac1c8be7a3ec4e04bd2e5c6ac173c8c44889c8a6f6f7a2d6405e09a3424/cisco_sdwan-1.16.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1becf77736c51297db67e253b77784ccace94e874bb4024960dfdb1e21d6816",
          "md5": "617dc83601a8dd5c89b9da1c85fbc816",
          "sha256": "21f2c4f1fd134755b23640a6ad706f98cbd8dd1f9419a2652bcab633e43d54f5"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.16.2.tar.gz",
        "has_sig": false,
        "md5_digest": "617dc83601a8dd5c89b9da1c85fbc816",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 93368,
        "upload_time": "2021-10-01T16:43:14",
        "upload_time_iso_8601": "2021-10-01T16:43:14.241402Z",
        "url": "https://files.pythonhosted.org/packages/d1/be/cf77736c51297db67e253b77784ccace94e874bb4024960dfdb1e21d6816/cisco-sdwan-1.16.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.16.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40cffa3473e5e119dcea44e9cd03f6c93d28cd631ac5192b30e9faa13db8b40f",
          "md5": "9d76b8cab9f1d4844406d84f96cd29fb",
          "sha256": "7f9cf640a85ea8a0a322ae849c431c535b50c348c831133e3b9aa31b0426a1d5"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.16.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d76b8cab9f1d4844406d84f96cd29fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 80723,
        "upload_time": "2021-10-20T02:31:11",
        "upload_time_iso_8601": "2021-10-20T02:31:11.432434Z",
        "url": "https://files.pythonhosted.org/packages/40/cf/fa3473e5e119dcea44e9cd03f6c93d28cd631ac5192b30e9faa13db8b40f/cisco_sdwan-1.16.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1977b268baee4c660f8ed5eafb749aa1b302ee71ec63a549cfdf725c31c73689",
          "md5": "a679440de301e36247a5f3c1e961b3c3",
          "sha256": "5f955cbe5b5a34e0e25898e7d31b43a94ab291fd08465b373eaa7edfc4521143"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.16.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a679440de301e36247a5f3c1e961b3c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 93210,
        "upload_time": "2021-10-20T02:31:13",
        "upload_time_iso_8601": "2021-10-20T02:31:13.379293Z",
        "url": "https://files.pythonhosted.org/packages/19/77/b268baee4c660f8ed5eafb749aa1b302ee71ec63a549cfdf725c31c73689/cisco-sdwan-1.16.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.16.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b30e15a53e256e34f7cda20501c2e115105981eff96d4f8793087318052afc6f",
          "md5": "1d2d21f0b811d64c6aaac2b6560bd22b",
          "sha256": "c69645cd1b5236c4d923fbd973ccdfd0bfeaf94f9504b8ff614aa3c45307ad7e"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.16.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d2d21f0b811d64c6aaac2b6560bd22b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 81778,
        "upload_time": "2021-11-12T00:36:14",
        "upload_time_iso_8601": "2021-11-12T00:36:14.439582Z",
        "url": "https://files.pythonhosted.org/packages/b3/0e/15a53e256e34f7cda20501c2e115105981eff96d4f8793087318052afc6f/cisco_sdwan-1.16.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88ab2d989146430b00786a289676ee414036c9a918098e26d12ff6673fa38c68",
          "md5": "0921890a4814df1dee3cbb23726c9e39",
          "sha256": "a4835579e6b8c7776a945bd3758fe20af38975c9f9038baac7d28e5dff437573"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.16.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0921890a4814df1dee3cbb23726c9e39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 94026,
        "upload_time": "2021-11-12T00:36:17",
        "upload_time_iso_8601": "2021-11-12T00:36:17.548329Z",
        "url": "https://files.pythonhosted.org/packages/88/ab/2d989146430b00786a289676ee414036c9a918098e26d12ff6673fa38c68/cisco-sdwan-1.16.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.16.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cceb01f2043f902d299d84abc743a67b8c27448b938b0e9d826843ab9060692",
          "md5": "e78a4064eeeb319e3a3b70183d86f4df",
          "sha256": "07b4b6ece494624885aed9b394870af2edfdc3f0e50c33f3e44ea77da891debf"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.16.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e78a4064eeeb319e3a3b70183d86f4df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 82171,
        "upload_time": "2021-11-26T20:28:28",
        "upload_time_iso_8601": "2021-11-26T20:28:28.991108Z",
        "url": "https://files.pythonhosted.org/packages/0c/ce/b01f2043f902d299d84abc743a67b8c27448b938b0e9d826843ab9060692/cisco_sdwan-1.16.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "846e7af8e0f4e1059fc1a9ddc4583a3af502b0343a3788fd7847e829677daf17",
          "md5": "3c8d1e002e585fdc6ef8bf3ebb2f283c",
          "sha256": "e5fead58920c6838d0c4c433821209117d7db3894c11e0804432f82f385cc952"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.16.5.tar.gz",
        "has_sig": false,
        "md5_digest": "3c8d1e002e585fdc6ef8bf3ebb2f283c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 94366,
        "upload_time": "2021-11-26T20:28:30",
        "upload_time_iso_8601": "2021-11-26T20:28:30.880897Z",
        "url": "https://files.pythonhosted.org/packages/84/6e/7af8e0f4e1059fc1a9ddc4583a3af502b0343a3788fd7847e829677daf17/cisco-sdwan-1.16.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.16.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5a9fecbc51e69643efdb1f309e4d19225bd6241cec5aca214b9cbd4df8cafe8",
          "md5": "bfbcfa4f89b00373295d7f01d915ae3f",
          "sha256": "0a10780df02cb7bdcabe130c838240eccb33080e63adc3471081b52df73688c7"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.16.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfbcfa4f89b00373295d7f01d915ae3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 82274,
        "upload_time": "2021-12-07T19:44:28",
        "upload_time_iso_8601": "2021-12-07T19:44:28.810680Z",
        "url": "https://files.pythonhosted.org/packages/d5/a9/fecbc51e69643efdb1f309e4d19225bd6241cec5aca214b9cbd4df8cafe8/cisco_sdwan-1.16.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5258f9ede5f7cf2da58331f3e22ce99739300551be08684446473d9cfea59c8a",
          "md5": "f00980728b5dd90c09af32cf13572e21",
          "sha256": "6b4583f100104e5b900d37fa88ad8ff2d26cd87b5111f1ebeec3021b53d51b6f"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.16.7.tar.gz",
        "has_sig": false,
        "md5_digest": "f00980728b5dd90c09af32cf13572e21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 94473,
        "upload_time": "2021-12-07T19:44:31",
        "upload_time_iso_8601": "2021-12-07T19:44:31.226022Z",
        "url": "https://files.pythonhosted.org/packages/52/58/f9ede5f7cf2da58331f3e22ce99739300551be08684446473d9cfea59c8a/cisco-sdwan-1.16.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.16.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2b3a304de1d7c057e8140443d578dcdb5296987948b63f4fce61ae6b8f47eef",
          "md5": "c6c9f4ddd49faba90bc1337cabc3b0d0",
          "sha256": "731f7b43f3b6f55035585633f7213b82460c8624303154f1fc83805892dfecdb"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.16.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6c9f4ddd49faba90bc1337cabc3b0d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 81925,
        "upload_time": "2021-12-14T16:48:19",
        "upload_time_iso_8601": "2021-12-14T16:48:19.915380Z",
        "url": "https://files.pythonhosted.org/packages/a2/b3/a304de1d7c057e8140443d578dcdb5296987948b63f4fce61ae6b8f47eef/cisco_sdwan-1.16.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3585d34c63dfc03287b893fe7349ebe49785515b30824aeadb7276016a4e9be2",
          "md5": "673b69e15351123b1e76b4f9110f5329",
          "sha256": "ad2e46d6c74b1519ed707dfe4596dc8975222f8ec5f6014e9fa48d4398abb3dc"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.16.8.tar.gz",
        "has_sig": false,
        "md5_digest": "673b69e15351123b1e76b4f9110f5329",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 94052,
        "upload_time": "2021-12-14T16:48:21",
        "upload_time_iso_8601": "2021-12-14T16:48:21.562026Z",
        "url": "https://files.pythonhosted.org/packages/35/85/d34c63dfc03287b893fe7349ebe49785515b30824aeadb7276016a4e9be2/cisco-sdwan-1.16.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81ed3647a16e3baa3b21ac0fadf0282abc1d93b52be4b10c3120c5fe69c1c96f",
          "md5": "2a27aea9249142bb2da1c4f2555d6d81",
          "sha256": "37d5851856355b3ad1734baaa492dde5fe262592fe00663cbe6307daea51c02f"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a27aea9249142bb2da1c4f2555d6d81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 89621,
        "upload_time": "2022-02-18T00:29:22",
        "upload_time_iso_8601": "2022-02-18T00:29:22.162692Z",
        "url": "https://files.pythonhosted.org/packages/81/ed/3647a16e3baa3b21ac0fadf0282abc1d93b52be4b10c3120c5fe69c1c96f/cisco_sdwan-1.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb98fcbdcc34c69ff97d2cf4929b299c3df0ce42641969c12e7dfcdbe21c472b",
          "md5": "b6891425d78f6758058b40cd26b7c64d",
          "sha256": "4c6eda1d828a97eaf667ba50ca9d603da6602fb2a86e74ef5697ffd9e1470ec6"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.17.tar.gz",
        "has_sig": false,
        "md5_digest": "b6891425d78f6758058b40cd26b7c64d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 103147,
        "upload_time": "2022-02-18T00:29:24",
        "upload_time_iso_8601": "2022-02-18T00:29:24.887366Z",
        "url": "https://files.pythonhosted.org/packages/eb/98/fcbdcc34c69ff97d2cf4929b299c3df0ce42641969c12e7dfcdbe21c472b/cisco-sdwan-1.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90f2b6dc4401ccfc4ea2182acde3715694e7b395beaf9edbb78db0b6d89636be",
          "md5": "3ec93f2be93b8fc4926cdaa2e43a756d",
          "sha256": "7ff7d4525a3206ec11ba6a049e0a1a4ef123a6ccfa843b6004d58414a08e23dc"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ec93f2be93b8fc4926cdaa2e43a756d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 91408,
        "upload_time": "2022-03-28T22:53:48",
        "upload_time_iso_8601": "2022-03-28T22:53:48.887956Z",
        "url": "https://files.pythonhosted.org/packages/90/f2/b6dc4401ccfc4ea2182acde3715694e7b395beaf9edbb78db0b6d89636be/cisco_sdwan-1.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "438cfc8cf6f5574040f961d1df2b43133984b5ae9f5ab40b62c18baa557de53c",
          "md5": "3cfa621083dc967ed792885f5bd528bf",
          "sha256": "5b82ed357da1569f8643271be07f00fbb3a3ee4ad325e1f5256e9225a4330c1a"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.18.tar.gz",
        "has_sig": false,
        "md5_digest": "3cfa621083dc967ed792885f5bd528bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 107196,
        "upload_time": "2022-03-28T22:53:51",
        "upload_time_iso_8601": "2022-03-28T22:53:51.281100Z",
        "url": "https://files.pythonhosted.org/packages/43/8c/fc8cf6f5574040f961d1df2b43133984b5ae9f5ab40b62c18baa557de53c/cisco-sdwan-1.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.18.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7df07c6d8e49798f0e24642c0cb6aebfea0d731dcd5047e8fad056ba03c30e5e",
          "md5": "4bee19fa20c1f4a9330ca379f9f394ae",
          "sha256": "7bf840e9e7814f5042bd382f11e2d2a38394fafa0e8faabc4d4c84f67e61447a"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.18.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4bee19fa20c1f4a9330ca379f9f394ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 91683,
        "upload_time": "2022-04-12T02:01:34",
        "upload_time_iso_8601": "2022-04-12T02:01:34.040167Z",
        "url": "https://files.pythonhosted.org/packages/7d/f0/7c6d8e49798f0e24642c0cb6aebfea0d731dcd5047e8fad056ba03c30e5e/cisco_sdwan-1.18.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f2c3d3a1ee703d51bd6cdffe3f6f9fd1d2008e9b715b076c47bb345c69934ea",
          "md5": "d631d26253b65c0033a44ce0758101c5",
          "sha256": "6ce0b24a017f97ca58e89e4f231d3e9ae90be572a1d00b7bda3ba7644dcfa581"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.18.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d631d26253b65c0033a44ce0758101c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 107710,
        "upload_time": "2022-04-12T02:01:36",
        "upload_time_iso_8601": "2022-04-12T02:01:36.671154Z",
        "url": "https://files.pythonhosted.org/packages/5f/2c/3d3a1ee703d51bd6cdffe3f6f9fd1d2008e9b715b076c47bb345c69934ea/cisco-sdwan-1.18.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.18.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "139c7e768805b30908b19d0468f84813991a8a2f5eae4fea0e22b9ebfc6f0cf7",
          "md5": "7912f897db8c65cc2f8f2137b6628a3c",
          "sha256": "58bf201b43eb509e4c7bc43d0702326f0c0a625f1e7a98bf064d7c755c2111d3"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.18.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7912f897db8c65cc2f8f2137b6628a3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 92046,
        "upload_time": "2022-04-13T21:20:34",
        "upload_time_iso_8601": "2022-04-13T21:20:34.582375Z",
        "url": "https://files.pythonhosted.org/packages/13/9c/7e768805b30908b19d0468f84813991a8a2f5eae4fea0e22b9ebfc6f0cf7/cisco_sdwan-1.18.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12a4ec17f6fdd877017cfa95be10ce9ee5f31104a830eb5b6b61a0242748f505",
          "md5": "b531fcb7f2d8ac7f3e56608db82d99c3",
          "sha256": "ae7f3dc440c9914cad653956b97c03279c7ca85c3792178424897733ba32b275"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.18.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b531fcb7f2d8ac7f3e56608db82d99c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 108540,
        "upload_time": "2022-04-13T21:20:37",
        "upload_time_iso_8601": "2022-04-13T21:20:37.189729Z",
        "url": "https://files.pythonhosted.org/packages/12/a4/ec17f6fdd877017cfa95be10ce9ee5f31104a830eb5b6b61a0242748f505/cisco-sdwan-1.18.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.18.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0db92c91cf9f7840026b734c499ae3bf7d8d5bb6c5820fbac883c5ff690850a4",
          "md5": "aaffe869c27348fd19b979b3e84e9f5d",
          "sha256": "897567bd0759b0ec233f1c46ba0f2fa5756d8ada19d5d5350e0c4f232dac951d"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.18.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aaffe869c27348fd19b979b3e84e9f5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 92019,
        "upload_time": "2022-04-21T14:36:48",
        "upload_time_iso_8601": "2022-04-21T14:36:48.518172Z",
        "url": "https://files.pythonhosted.org/packages/0d/b9/2c91cf9f7840026b734c499ae3bf7d8d5bb6c5820fbac883c5ff690850a4/cisco_sdwan-1.18.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bc326737b46ddf5669d474098e3b6463addb0cc88c5107da8325dc38c4f5499",
          "md5": "7f7f72d4fb87ef4ed9e1329ced383994",
          "sha256": "38998f3207af7d4a11aa8bd2cc860d189fd28644bb16909c93dbff630752df96"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.18.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7f7f72d4fb87ef4ed9e1329ced383994",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 108382,
        "upload_time": "2022-04-21T14:36:53",
        "upload_time_iso_8601": "2022-04-21T14:36:53.622631Z",
        "url": "https://files.pythonhosted.org/packages/8b/c3/26737b46ddf5669d474098e3b6463addb0cc88c5107da8325dc38c4f5499/cisco-sdwan-1.18.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.18.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a90bf651e25d271c3286678648496096a7a1ef19eacc69abb6b77e0cb77e85e5",
          "md5": "5df7e8522e8e6b68486539f7f61650d3",
          "sha256": "3e5f0522e56fdfc56a0acc738d0e897e5d3c9f214bf8dbabcd9ed8321429d027"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.18.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5df7e8522e8e6b68486539f7f61650d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 92014,
        "upload_time": "2022-07-12T19:04:58",
        "upload_time_iso_8601": "2022-07-12T19:04:58.502902Z",
        "url": "https://files.pythonhosted.org/packages/a9/0b/f651e25d271c3286678648496096a7a1ef19eacc69abb6b77e0cb77e85e5/cisco_sdwan-1.18.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9ed449f58bb7390e70d24086b529a628cc8d9db133e9b3b6c7f87c2bbdc4427",
          "md5": "4260f18ddc7dfc7c0a094d00bb497bd1",
          "sha256": "9dfc7394a75e9c0724febdd322c85a845069dac05b46cbe47f6ebafc2c8e0c6a"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.18.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4260f18ddc7dfc7c0a094d00bb497bd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 108387,
        "upload_time": "2022-07-12T19:05:06",
        "upload_time_iso_8601": "2022-07-12T19:05:06.926627Z",
        "url": "https://files.pythonhosted.org/packages/f9/ed/449f58bb7390e70d24086b529a628cc8d9db133e9b3b6c7f87c2bbdc4427/cisco-sdwan-1.18.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34059f62a7e4a3ec298006d4a971f1aed6481a85120560717477d5d2e020e542",
          "md5": "bbd943a9c3f288333a9c11fe5b0dde96",
          "sha256": "882104901f84959c7acca8a38558de066da80fd8d1c33e8b511f161457fc018b"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.19-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bbd943a9c3f288333a9c11fe5b0dde96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 101045,
        "upload_time": "2022-08-16T19:20:11",
        "upload_time_iso_8601": "2022-08-16T19:20:11.692117Z",
        "url": "https://files.pythonhosted.org/packages/34/05/9f62a7e4a3ec298006d4a971f1aed6481a85120560717477d5d2e020e542/cisco_sdwan-1.19-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc49cfc98905d3df2dca3523c18908806b62a05d585f631825ef2a887ebf027b",
          "md5": "07c5ce8c78f9cb4bb5f8db7bd6582998",
          "sha256": "9e63d29ebc7145354a655e37e4db0052cba4e0c8823e5765b8aea324057f80cd"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.19.tar.gz",
        "has_sig": false,
        "md5_digest": "07c5ce8c78f9cb4bb5f8db7bd6582998",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 117405,
        "upload_time": "2022-08-16T19:20:14",
        "upload_time_iso_8601": "2022-08-16T19:20:14.044457Z",
        "url": "https://files.pythonhosted.org/packages/fc/49/cfc98905d3df2dca3523c18908806b62a05d585f631825ef2a887ebf027b/cisco-sdwan-1.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2d0289ac4e1eced7d809393c43b64974493a4ad55e5eb3ee2e7040bc38e5558",
          "md5": "d636205f72f62f547cdbd96119f814b5",
          "sha256": "9cb5e962ec71ac01ae97da2ef7cfa57e9c4b0f2483addb8ad0c7547dc101508f"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d636205f72f62f547cdbd96119f814b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 60597,
        "upload_time": "2020-06-23T01:24:21",
        "upload_time_iso_8601": "2020-06-23T01:24:21.278237Z",
        "url": "https://files.pythonhosted.org/packages/f2/d0/289ac4e1eced7d809393c43b64974493a4ad55e5eb3ee2e7040bc38e5558/cisco_sdwan-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a060c2cf32a6c2a5b7598be278f211408999c8fe4b169da73fe22aef8d5b2a1",
          "md5": "0cf6a66f917c9580979211b0049803d8",
          "sha256": "db199fa510875869700d715910e0f734d9fa61934d94a062d0d750b769b6b0a6"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0cf6a66f917c9580979211b0049803d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69252,
        "upload_time": "2020-06-23T01:24:22",
        "upload_time_iso_8601": "2020-06-23T01:24:22.385424Z",
        "url": "https://files.pythonhosted.org/packages/3a/06/0c2cf32a6c2a5b7598be278f211408999c8fe4b169da73fe22aef8d5b2a1/cisco-sdwan-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ef987609a31a8103ca14f4658e875c01104f812790e9424a314401d94987b68",
          "md5": "70b5eb455d11b27bc487a4c477b74b41",
          "sha256": "e097e29afa69d19f0cac1774b650ce76113b522279a3229fadf6a9903bd506f5"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.20-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70b5eb455d11b27bc487a4c477b74b41",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 104810,
        "upload_time": "2022-11-11T04:21:16",
        "upload_time_iso_8601": "2022-11-11T04:21:16.378218Z",
        "url": "https://files.pythonhosted.org/packages/1e/f9/87609a31a8103ca14f4658e875c01104f812790e9424a314401d94987b68/cisco_sdwan-1.20-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f1c14de28e4014fe1b3be11508bbd40c3a4f1ee3f5528ad1d70d5c18ba03a24",
          "md5": "d17ee78e21dccc1bd2c01b8251a0d8e1",
          "sha256": "fdbfce73df89dc8dceb289b18065a6165513a014846975cecc073aa07d731300"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.20.tar.gz",
        "has_sig": false,
        "md5_digest": "d17ee78e21dccc1bd2c01b8251a0d8e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 103759,
        "upload_time": "2022-11-11T04:21:19",
        "upload_time_iso_8601": "2022-11-11T04:21:19.178164Z",
        "url": "https://files.pythonhosted.org/packages/6f/1c/14de28e4014fe1b3be11508bbd40c3a4f1ee3f5528ad1d70d5c18ba03a24/cisco_sdwan-1.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.20.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ea113dd73472218c41453c7c1ae6c932bf3835bd3a0126d57e14c99f3ecb2a1",
          "md5": "ac3c9100b45a132a22c71415eab23f24",
          "sha256": "90d9c7fbf31fbcdf8bc068010cf30cf8452e9aa0f26ab0c0a764ab11bf9b99a6"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.20.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac3c9100b45a132a22c71415eab23f24",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 104190,
        "upload_time": "2022-11-11T04:28:59",
        "upload_time_iso_8601": "2022-11-11T04:28:59.625051Z",
        "url": "https://files.pythonhosted.org/packages/6e/a1/13dd73472218c41453c7c1ae6c932bf3835bd3a0126d57e14c99f3ecb2a1/cisco_sdwan-1.20.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dfa78553bff9695c29fc790beb38ce6f0f2ea6331db5a94003c1a3461a01083",
          "md5": "04089c45cef2fcf9b7576015af82b74e",
          "sha256": "f6cb7b7ac1debe2e2ba0b0db6a9cd343386d381c41fc1cab5b5638df5a2ade33"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.20.1.tar.gz",
        "has_sig": false,
        "md5_digest": "04089c45cef2fcf9b7576015af82b74e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 103145,
        "upload_time": "2022-11-11T04:29:01",
        "upload_time_iso_8601": "2022-11-11T04:29:01.797066Z",
        "url": "https://files.pythonhosted.org/packages/3d/fa/78553bff9695c29fc790beb38ce6f0f2ea6331db5a94003c1a3461a01083/cisco_sdwan-1.20.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f98d0245983e9196df48fc4e407354fcf1e02863b96709e49728c6ecd1fbaa8",
          "md5": "eced84f4c5bce56b627ebe97c9a56f5b",
          "sha256": "699e0bc5bb95a2306a21916c85398b73faa38731bd0b6df85142aee792f86d13"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.21-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eced84f4c5bce56b627ebe97c9a56f5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 106202,
        "upload_time": "2022-12-19T22:06:01",
        "upload_time_iso_8601": "2022-12-19T22:06:01.414625Z",
        "url": "https://files.pythonhosted.org/packages/4f/98/d0245983e9196df48fc4e407354fcf1e02863b96709e49728c6ecd1fbaa8/cisco_sdwan-1.21-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c3d10020d4cc4d8a6bde4adb440a638e646e1f2804098e8f124492cb8e4882a",
          "md5": "965321e89c4accbd3cff1a6e4df8aef9",
          "sha256": "db2461bd2893c2b74140e8aaf23a7ae93687b96f86e65f7964d722a15c9bc278"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.21.tar.gz",
        "has_sig": false,
        "md5_digest": "965321e89c4accbd3cff1a6e4df8aef9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 105136,
        "upload_time": "2022-12-19T22:06:04",
        "upload_time_iso_8601": "2022-12-19T22:06:04.649743Z",
        "url": "https://files.pythonhosted.org/packages/6c/3d/10020d4cc4d8a6bde4adb440a638e646e1f2804098e8f124492cb8e4882a/cisco_sdwan-1.21.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.21.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d787687350e40e9ec34f79c5801228faa1b8e31c6728b37bf7c02f2e1709be7d",
          "md5": "fc99ef29e140bb3def5dab5b325a2a7c",
          "sha256": "35717949460e5ce576696cce4de1cd4c89f21a08d3878fa10ff0602d800098da"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.21.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc99ef29e140bb3def5dab5b325a2a7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 106506,
        "upload_time": "2023-03-17T16:44:14",
        "upload_time_iso_8601": "2023-03-17T16:44:14.759459Z",
        "url": "https://files.pythonhosted.org/packages/d7/87/687350e40e9ec34f79c5801228faa1b8e31c6728b37bf7c02f2e1709be7d/cisco_sdwan-1.21.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ffc77fe7a3846b362b94662f49f07fb38bd16aa9d02fc2203e0bb8953c08bba",
          "md5": "bbceec7988b98188140b5d8dd8b096f3",
          "sha256": "d54197a90c7aa70eb86cdcd4da5319ef9425a0787e7eed80bd2025d2c89873e0"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.21.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bbceec7988b98188140b5d8dd8b096f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 105458,
        "upload_time": "2023-03-17T16:44:18",
        "upload_time_iso_8601": "2023-03-17T16:44:18.982816Z",
        "url": "https://files.pythonhosted.org/packages/4f/fc/77fe7a3846b362b94662f49f07fb38bd16aa9d02fc2203e0bb8953c08bba/cisco_sdwan-1.21.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dfe8fc05c4f2e9f5311f2b7c43c121967be985cb8fdc5138100d65eac099499",
          "md5": "2c7a20fb815e0419ede262143ae1eed6",
          "sha256": "ded72cf1592a4509a88aa2f0169ed3ef27e489a1acb140de77e6624ebb15e2a9"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c7a20fb815e0419ede262143ae1eed6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 60741,
        "upload_time": "2020-07-24T01:57:11",
        "upload_time_iso_8601": "2020-07-24T01:57:11.670118Z",
        "url": "https://files.pythonhosted.org/packages/5d/fe/8fc05c4f2e9f5311f2b7c43c121967be985cb8fdc5138100d65eac099499/cisco_sdwan-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d11cf4974a0d1b2728667d9de761fe133e31e00bd48a06d1be455c614dcdb00d",
          "md5": "c49e752d2bca9aec2ebd4e5376bc84b2",
          "sha256": "6364ecc04c893b0195cc5801af3d019425b864afeec477851bf4b2b423c5c016"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c49e752d2bca9aec2ebd4e5376bc84b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69409,
        "upload_time": "2020-07-24T01:57:15",
        "upload_time_iso_8601": "2020-07-24T01:57:15.493470Z",
        "url": "https://files.pythonhosted.org/packages/d1/1c/f4974a0d1b2728667d9de761fe133e31e00bd48a06d1be455c614dcdb00d/cisco-sdwan-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0e9b1cbd18e992adbaa8bf74d6fc05e5f013f39f2348dbfd50dd7baef667fd2",
          "md5": "fddc08bccb3c6279a595c9d8f27c59aa",
          "sha256": "53f8cdbda14d178cd6208b215acbe640b0b7ebb293bf4698cf7e1b7a475cdc12"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fddc08bccb3c6279a595c9d8f27c59aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 61412,
        "upload_time": "2020-08-12T18:36:17",
        "upload_time_iso_8601": "2020-08-12T18:36:17.220079Z",
        "url": "https://files.pythonhosted.org/packages/c0/e9/b1cbd18e992adbaa8bf74d6fc05e5f013f39f2348dbfd50dd7baef667fd2/cisco_sdwan-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30eb939c4d08b25d19bf5fc30394bdf33a59a1c4e3b6af982dad9531aaf5922e",
          "md5": "2560df14db8aa728d0082a857edf6ce2",
          "sha256": "59bb274c17ff9e27b7266aaeb26f3abba81b083b2589bb37ef837e3d4ecd15e5"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2560df14db8aa728d0082a857edf6ce2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 70121,
        "upload_time": "2020-08-12T18:36:21",
        "upload_time_iso_8601": "2020-08-12T18:36:21.542841Z",
        "url": "https://files.pythonhosted.org/packages/30/eb/939c4d08b25d19bf5fc30394bdf33a59a1c4e3b6af982dad9531aaf5922e/cisco-sdwan-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a41c217656c452c5e0a123267bc87b8204df59f1c8d0593a88569957fc486a6c",
          "md5": "b96d18c9ceac63aae02599ebce369b80",
          "sha256": "7abbdd70b1c666500613dc7a91dacba0bc73009b1eb3ae9dae789d14c10ee566"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b96d18c9ceac63aae02599ebce369b80",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 64222,
        "upload_time": "2020-09-03T04:13:02",
        "upload_time_iso_8601": "2020-09-03T04:13:02.599578Z",
        "url": "https://files.pythonhosted.org/packages/a4/1c/217656c452c5e0a123267bc87b8204df59f1c8d0593a88569957fc486a6c/cisco_sdwan-1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47654b211359fb5e8dea8a3aecb0f6d72e123d96aa792875fa23c384a433cfe7",
          "md5": "91cfb806cfa533ee456f87e2e6bd16f1",
          "sha256": "828e52cc1ab91d242ced39eef5656ff2121c6fc4f55f8decf7ca4f45d2825f9f"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "91cfb806cfa533ee456f87e2e6bd16f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 72848,
        "upload_time": "2020-09-03T04:13:04",
        "upload_time_iso_8601": "2020-09-03T04:13:04.048155Z",
        "url": "https://files.pythonhosted.org/packages/47/65/4b211359fb5e8dea8a3aecb0f6d72e123d96aa792875fa23c384a433cfe7/cisco-sdwan-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "677ab2a9cb7ce9f45fb672bcf87e4b020ac2b8d9cff513119a060e77d2cce59e",
          "md5": "5792c0e8165bb4a3e42c944dc8bfd7c2",
          "sha256": "862414b97eed9b47778f6a2a7923829a742796cdd7b207e8b647df5c7656fba8"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5792c0e8165bb4a3e42c944dc8bfd7c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 61858,
        "upload_time": "2020-10-09T19:32:50",
        "upload_time_iso_8601": "2020-10-09T19:32:50.569574Z",
        "url": "https://files.pythonhosted.org/packages/67/7a/b2a9cb7ce9f45fb672bcf87e4b020ac2b8d9cff513119a060e77d2cce59e/cisco_sdwan-1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddb03c6d029fa198b8938d73cb230e55160393f6920204483f036e2258c68877",
          "md5": "a0ec2ff209a0ad6979ff201e23a5e4cf",
          "sha256": "9e056df86805f7f3900e63ef86cd872bfcb1b01c942120b8a03b6e2d399613b7"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "a0ec2ff209a0ad6979ff201e23a5e4cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 73392,
        "upload_time": "2020-10-09T19:32:54",
        "upload_time_iso_8601": "2020-10-09T19:32:54.721918Z",
        "url": "https://files.pythonhosted.org/packages/dd/b0/3c6d029fa198b8938d73cb230e55160393f6920204483f036e2258c68877/cisco-sdwan-1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4943df94b408f8ec5bbabba84fddc4d8018792c4b33c5877d88dc3d39e0858fa",
          "md5": "4eb7c5f1a5c94da440a526068f1268cf",
          "sha256": "b0bc49fa180164e74f2cded0ee43b1f5ed58475cc89b935b2110738f397a7b72"
        },
        "downloads": -1,
        "filename": "cisco_sdwan-1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4eb7c5f1a5c94da440a526068f1268cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 61966,
        "upload_time": "2020-10-14T02:36:03",
        "upload_time_iso_8601": "2020-10-14T02:36:03.078072Z",
        "url": "https://files.pythonhosted.org/packages/49/43/df94b408f8ec5bbabba84fddc4d8018792c4b33c5877d88dc3d39e0858fa/cisco_sdwan-1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94e4ba2da02a7680b117d4fc7d34e62f5b4d5a264aa10bcb4e4542a328e55a1f",
          "md5": "668168f0c66e7d1ca2c926c0b5f9d8d8",
          "sha256": "e5435eb83791b59b5d5c8fb5d4f5a645deb39ab0893593d00a7c6663562d1dd8"
        },
        "downloads": -1,
        "filename": "cisco-sdwan-1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "668168f0c66e7d1ca2c926c0b5f9d8d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 73445,
        "upload_time": "2020-10-14T02:36:07",
        "upload_time_iso_8601": "2020-10-14T02:36:07.306702Z",
        "url": "https://files.pythonhosted.org/packages/94/e4/ba2da02a7680b117d4fc7d34e62f5b4d5a264aa10bcb4e4542a328e55a1f/cisco-sdwan-1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d787687350e40e9ec34f79c5801228faa1b8e31c6728b37bf7c02f2e1709be7d",
        "md5": "fc99ef29e140bb3def5dab5b325a2a7c",
        "sha256": "35717949460e5ce576696cce4de1cd4c89f21a08d3878fa10ff0602d800098da"
      },
      "downloads": -1,
      "filename": "cisco_sdwan-1.21.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fc99ef29e140bb3def5dab5b325a2a7c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 106506,
      "upload_time": "2023-03-17T16:44:14",
      "upload_time_iso_8601": "2023-03-17T16:44:14.759459Z",
      "url": "https://files.pythonhosted.org/packages/d7/87/687350e40e9ec34f79c5801228faa1b8e31c6728b37bf7c02f2e1709be7d/cisco_sdwan-1.21.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4ffc77fe7a3846b362b94662f49f07fb38bd16aa9d02fc2203e0bb8953c08bba",
        "md5": "bbceec7988b98188140b5d8dd8b096f3",
        "sha256": "d54197a90c7aa70eb86cdcd4da5319ef9425a0787e7eed80bd2025d2c89873e0"
      },
      "downloads": -1,
      "filename": "cisco_sdwan-1.21.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bbceec7988b98188140b5d8dd8b096f3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 105458,
      "upload_time": "2023-03-17T16:44:18",
      "upload_time_iso_8601": "2023-03-17T16:44:18.982816Z",
      "url": "https://files.pythonhosted.org/packages/4f/fc/77fe7a3846b362b94662f49f07fb38bd16aa9d02fc2203e0bb8953c08bba/cisco_sdwan-1.21.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}