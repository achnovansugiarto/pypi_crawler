{
  "info": {
    "author": "v1ll4n",
    "author_email": "v1ll4n@villanch.top",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# scouter\n定义一群类似 Python 内置数据结构的一群数据结构，数据结构发生变化的时候，发生回调。\n\n同时 scouter 还包含了一个易于配置的装饰器模式的 FSM，可以支持 SOP 与 OOP 的结合。\n\n## 安装方法：\n\n```bash\npip install scouter\n```\n\n或者 `easy_install`\n\n或者下载源代码:\n\n```bash\ncd scouter\npython setup.py install\n```\n\n## 使用方法：\n\n### SVar 使用回调函数监视变量\n\n```python\n\nfrom scouter import SVar\n\ndef callback(now, orig):\n    print 'Orig:{} Now:{}'.format(orig, now)\n\nvar = SVar(4, callback)\nvar.value = 5\n```\n\n对于一个 SVar 对象，在定义的时候，可以添加一个回调函数，这个回调函数只接受两个参数：  \n\n* 第一个参数为当前新的值\n* 第二个参数为原来的值\n\n### SList 使用回调函数监视列表结构\n\n```python\n\nfrom scouter import SList\n\ndef print_cb(obj, index):\n    print obj, index\n\ndef print_new(_new, orig):\n    print 'new:{} orig:{}'.format(_new, orig)\n\n_list = SList(value=['aaaaaaaa',2,3,4,5],\n              add_new_item_callback=print_cb,\n              del_new_item_callback=print_cb,\n              new_list_value_callback=print_new)\n\n_list.append('asdf')\n_list.pop(0)\n\nfor i in _list:\n    print i\n\nassert 4 == _list[2]\n\ndel _list[2]\n\n_list.value = [1,2,3,4,5,]\n```\n\n对于一个 SList 对象，在定义的时候，可以添加三个回调函数，这三个回调函数的参数都有两个参数：\n\n* 对于 add_new_item_callback 来说，第一个参数是添加的新值，第二个参数是索引\n* 对于 del_new_item_callback 来说，第一个参数是被删除的值，第二个参数是索引\n* 对于 new_list_value_callback 来说，第一个参数是现在的新值，第二个参数是之前的 value\n\n```python\n\nfrom scouter import SDict\n\ndef print_kv(key, value):\n    print 'key:{} value:{}'.format(key, value)\n\ndef print_new(new, orig):\n    print 'new:{}, orig:{}'.format(new, orig)\n\n_dict = SDict({1:2,'key':'value'},\n              new_kv_callback=print_kv,\n              del_kv_callback=print_kv,\n              new_value_callback=print_new)\n\n_dict['key'] = 'hhhhhhhhhvalue1'\n_dict['key1'] = 'hhhhhhhhhvalue12'\ndel _dict[1]\n\n\n_dict.value = {5:4}\n```\n\n基本同上，只是对于 new_kv_callback/del_kv_callback 来说两个参数分别为 key 和 value。\n\n### SOP FSM\n\n更加容易定义更加容易使用的 FSM。\n\n```python\n下面是测试用例中的例子\n\ndef test_fsm(self):\n    \"\"\"\"\"\"\n    state_START = 'start'\n    state_RUNNING = 'running'\n    state_END = 'end'\n\n    class FSMDemo(FSMBase):\n\n        _fsm = FSM()\n\n        #----------------------------------------------------------------------\n        def config(self):\n            \"\"\"\"\"\"\n            self._fsm.preset_all_states(state_END, state_RUNNING, state_START)\n            self._fsm.set_start(state_START)\n            self._fsm.set_end(state_END)\n\n\n        @_fsm.transfer(orig=state_START, dest=state_RUNNING)\n        def action_run(self):\n            \"\"\"\"\"\"\n            print('Run!')\n\n        @_fsm.onstate(state_RUNNING, state_START)\n        def say_tired(self):\n            \"\"\"\"\"\"\n            print('I am tired')\n            self.action_stop()\n\n        @_fsm.transfer(orig=state_RUNNING, dest=state_END)\n        def action_stop(self):\n            \"\"\"\"\"\"\n            print('Stop working!')\n\n\n    s = FSMDemo()\n    print(s.state)\n    assert s.state == state_START\n    s.action_run()\n    assert s.state == state_RUNNING\n    s.say_tired()\n    self.assertRaises(FSMError, callableObj=s.say_tired)\n```\n\n关键点在定义一个类变量为 FSM 对象，然后在 config 中配置这个 FSM 对象的预设状态和起始状态，然后定义回调函数通过修饰调用，如果需要限制某一个方法只能在某个特殊状态下使用，需要使用 onstate 这个特殊修饰器修饰。当然，onstate 的参数为你想执行你的这个放在所在的状态：比如你想让你的方法执行在 run/waiting/watching 中，你就需要 `@_fsm.onstate(run, waiting, watching)` 。当你执行 `@_fsm.transfer` 修饰过的方法的时候，状态转换被直接执行\n\n当然，FSM 和 FSMBase 都有一个 state 属性来标记当前的状态。\n\n#### 另一种 FSM 的用法（action 驱动）\n\n使用动作驱动的 FSM 也是非常有必要的。修饰器使用 FSM 适合实例作为一个单例。\n\n```python\n\nstate_START = 'start'\nstate_END = 'end'\nstate_INITINT = 'initing'\nstate_WORKING = 'working'\n_all_states = [state_END,\n               state_INITINT,\n               state_START,\n               state_WORKING]\n\ns = FSM(state_START, state_END, _all_states)\n\n#\n# 注册行为\n#\ns.create_action(action_name='initing', orig=state_START,\n                  dest=state_INITINT)\nprint('-'*50)\nprint s.state\n\n#\n# 确认初始状态\n#\nself.assertTrue(s.state == state_START)\n\n#\n# 调用行为导致 状态变化\n#\ns.action('initing')\nassert s.state == state_INITINT\nprint('-'*50)\n```\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/VillanCh/scouter",
    "keywords": "",
    "license": "BSD 2-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scouter",
    "package_url": "https://pypi.org/project/scouter/",
    "platform": "",
    "project_url": "https://pypi.org/project/scouter/",
    "project_urls": {
      "Homepage": "https://github.com/VillanCh/scouter"
    },
    "release_url": "https://pypi.org/project/scouter/0.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Watching Data with Callback!",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2953953,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "399c4c68f5dde2dff73e93350e34720ca16c4b2d2331207770e752ad6ca0ce6a",
          "md5": "e305c93ed92aafa6fe07d7ff9dd21723",
          "sha256": "8598cae16138b0df550f700013f7fd8f3162bbe112456f12e1830713856300c0"
        },
        "downloads": -1,
        "filename": "scouter-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e305c93ed92aafa6fe07d7ff9dd21723",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3388,
        "upload_time": "2017-05-24T09:45:01",
        "upload_time_iso_8601": "2017-05-24T09:45:01.225565Z",
        "url": "https://files.pythonhosted.org/packages/39/9c/4c68f5dde2dff73e93350e34720ca16c4b2d2331207770e752ad6ca0ce6a/scouter-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "132edca401a6c790cbca1ba9768469434419e1c0298ae63feac0e00127ad4a40",
          "md5": "3a372735adcf21b2f953d1d5fe2d871f",
          "sha256": "3cd85dc5c3bf845beb745f36b5074ab666d967530af88df2bee3f4865a25d78c"
        },
        "downloads": -1,
        "filename": "scouter-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3a372735adcf21b2f953d1d5fe2d871f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3370,
        "upload_time": "2017-05-28T09:33:35",
        "upload_time_iso_8601": "2017-05-28T09:33:35.574999Z",
        "url": "https://files.pythonhosted.org/packages/13/2e/dca401a6c790cbca1ba9768469434419e1c0298ae63feac0e00127ad4a40/scouter-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cebf05f222be73e7e0de2f557c46158c15159c816d1d5fd05f5e9645595f45b",
          "md5": "432656dd8d3e77294030b9222fb746d3",
          "sha256": "49d24ebcc653dfb2581a1caf3b15404751ad59c18a62439062b137b69a75095c"
        },
        "downloads": -1,
        "filename": "scouter-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "432656dd8d3e77294030b9222fb746d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4878,
        "upload_time": "2017-06-01T15:17:33",
        "upload_time_iso_8601": "2017-06-01T15:17:33.825373Z",
        "url": "https://files.pythonhosted.org/packages/3c/eb/f05f222be73e7e0de2f557c46158c15159c816d1d5fd05f5e9645595f45b/scouter-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a80d958d01518352c9bdc1879c2f75b8614d4fbb7b4d5cd0f05f637eb15cc62c",
          "md5": "15cf83f88f701f719bf099a0a6084049",
          "sha256": "12f728650ceb8e2507d0f7ae3e63492d54af139ae6b2f4f3dbfe735fd1f6e22d"
        },
        "downloads": -1,
        "filename": "scouter-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "15cf83f88f701f719bf099a0a6084049",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5347,
        "upload_time": "2017-06-16T08:13:24",
        "upload_time_iso_8601": "2017-06-16T08:13:24.767915Z",
        "url": "https://files.pythonhosted.org/packages/a8/0d/958d01518352c9bdc1879c2f75b8614d4fbb7b4d5cd0f05f637eb15cc62c/scouter-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a80d958d01518352c9bdc1879c2f75b8614d4fbb7b4d5cd0f05f637eb15cc62c",
        "md5": "15cf83f88f701f719bf099a0a6084049",
        "sha256": "12f728650ceb8e2507d0f7ae3e63492d54af139ae6b2f4f3dbfe735fd1f6e22d"
      },
      "downloads": -1,
      "filename": "scouter-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "15cf83f88f701f719bf099a0a6084049",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5347,
      "upload_time": "2017-06-16T08:13:24",
      "upload_time_iso_8601": "2017-06-16T08:13:24.767915Z",
      "url": "https://files.pythonhosted.org/packages/a8/0d/958d01518352c9bdc1879c2f75b8614d4fbb7b4d5cd0f05f637eb15cc62c/scouter-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}