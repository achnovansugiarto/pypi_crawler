{
  "info": {
    "author": "Yonghang Wang",
    "author_email": "wyhang@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License"
    ],
    "description": "### [doc on github.io](https://walkerever.github.io/) \n\n\n## dbx\n\n`dbx` is the command line tool included in py-dbx package.  It was named sretools-dbx as you can see in below examples until fully updated.\n\n you run `dbx` or `python -mdbx` other than `sretools-dbx` in the past. \n \n - [Installation](#installation)\n - [args](#dbx-sretools-dbx)\n - [work with db2/postgresql/mysql and more](#tests-with-db2-postgresql-and-mysql)\n - [export data](#export-to-jsonyaml-or-html)\n - [plugin](#use-plugin-for-sql-shortcut)\n\n-----\n \n \n## Installation\n`pip install py-dbx`\n\nrun with `python -mdbx` or just `dbx`\n\n\n## dbx (sretools-dbx) \nsretools-dbx is a generic database client using JDBC.  It's not designed to replace any current factory client but to provide people who work under terminals a new way to access their data with better console output, and ablility to export as JSON, YAML or HTML tables.  \nIt's at command level which means it's open to full bash access and one can always utilize his or her expertis on unix tools.\n\n```bash\n$ sretools-dbx -h\nusage: sretools-dbx [-h] [-J JAR] [-u USER] [-p PASSWORD] [-D DRIVER] [-U URL] [-C] [-Q SQL] [-w MAXWIDTH] [-F FORMAT] [-v] [-X]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -J JAR, --jar JAR     jdbc driver jar file\n  -u USER, --user USER  user. default as current unix user.\n  -p PASSWORD, --password PASSWORD\n                        password. ENV[\"dbx_mypwd\"]\n  -D DRIVER, --driver DRIVER\n                        jdbc driver name\n  -U URL, --url URL     jdbc url or connection string\n  -C, --connect         force connect as server\n  -Q SQL, --sql SQL     sql statement to run\n  -w MAXWIDTH, --maxwidth MAXWIDTH\n                        maxwidth of column\n  -F FORMAT, --outformat FORMAT\n                        json,yaml,csv,html\n  -v, --pivot           pivot the view\n  -X, --debug           debug mode\n```\n\n## Tests with DB2, Postgresql and MySQL\n\n###  connect to database (-C)\nuser/passwod can be specifed in URL/connection string. or explicitly specified. \nif not specified, dbx will try to use current unix user; as to password, it will check environment variable dbx_password then will prompt. \nin case ssl being used and not password needed, use 'dummy' for password.\n\n```bash\n$ # all in connection string\n$ sretools-dbx -J ~/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U \"jdbc:mysql://localhost:3306/mysql?user=yonghang&password=password&allowPublicKeyRetrieval=true&useSSL=false\" -C\n# DBXServer 972045@/home/yonghang/.cache/sretools/.dbx.971825\n$ ps -ef | grep dbx | grep -v grep\nyonghang  972045       1 21 10:24 pts/1    00:00:01 /usr/bin/python3 /usr/local/bin/sretools-dbx -J /home/yonghang/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U jdbc:mysql://localhost:3306/mysql?user=yonghang&password=password&allowPublicKeyRetrieval=true&useSSL=false -C\n\n$ # or\n$ sretools-dbx -J ~/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U \"jdbc:mysql://localhost:3306/mysql?allowPublicKeyRetrieval=true&useSSL=false\" -u yonghang -p password -C\n# DBXServer 972146@/home/yonghang/.cache/sretools/.dbx.971825\n$ ps -ef | grep dbx | grep -v grep\nyonghang  972146       1 88 10:24 pts/1    00:00:01 /usr/bin/python3 /usr/local/bin/sretools-dbx -J /home/yonghang/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U jdbc:mysql://localhost:3306/mysql?allowPublicKeyRetrieval=true&useSSL=false -u yonghang -p password -C\n\n\n$ # or\n$ export dbx_password=password\n$ sretools-dbx -J ~/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U \"jdbc:mysql://localhost:3306/mysql?allowPublicKeyRetrieval=true&useSSL=false\" -u yonghang -C\n# DBXServer 972374@/home/yonghang/.cache/sretools/.dbx.971825\n$ ps -ef | grep dbx | grep -v grep\nyonghang  972374       1 32 10:25 pts/1    00:00:01 /usr/bin/python3 /usr/local/bin/sretools-dbx -J /home/yonghang/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U jdbc:mysql://localhost:3306/mysql?allowPublicKeyRetrieval=true&useSSL=false -u yonghang -C\n```\n\n###  disconnect against database \nsend \"\\q\" will cause disconnection from the database.\nnote, dbx can get the SQL to run with -Q or from unix pipe.\n```bash\n$ ps -ef | grep dbx | grep -v grep\nyonghang  972374       1  0 10:25 pts/1    00:00:01 /usr/bin/python3 /usr/local/bin/sretools-dbx -J /home/yonghang/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U jdbc:mysql://localhost:3306/mysql?allowPublicKeyRetrieval=true&useSSL=false -u yonghang -C\n$ sretools-dbx -Q \"\\q\"\n$ ps -ef | grep dbx | grep -v grep\n\n$ # or\n$ ps -ef | grep dbx | grep -v grep\nyonghang  973586       1 89 10:31 pts/1    00:00:01 /usr/bin/python3 /usr/local/bin/sretools-dbx -J /home/yonghang/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U jdbc:mysql://localhost:3306/mysql?allowPublicKeyRetrieval=true&useSSL=false -u yonghang -C\n$ echo \"\\q\" | sretools-dbx\n$ ps -ef | grep dbx | grep -v grep\n$ \n```\n\n### Query database \nuse mysql as example\n```bash\n$ sretools-dbx -J /home/yonghang/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U 'jdbc:mysql://localhost:3306/mysql?user=yonghang&password=password&allowPublicKeyRetrieval=true&useSSL=false' -C\n# DBXServer 974814@/home/yonghang/.cache/sretools/.dbx.971825\n$ echo \"select user,host,Select_priv,Insert_priv,Update_priv,Delete_priv,Create_priv,Create_priv,Drop_priv from mysql.user limit 2\" | sretools-dbx \nuser     host Select_priv Insert_priv Update_priv Delete_priv Create_priv Create_priv Drop_priv\n-----------------------------------------------------------------------------------------------\nroot     %    Y           Y           Y           Y           Y           Y           Y\nyonghang %    Y           Y           Y           Y           Y           Y           Y\n$ # for very wide table, it's easier to pivot the result with -v\n$ echo \"select user,host,Select_priv,Insert_priv,Update_priv,Delete_priv,Create_priv,Create_priv,Drop_priv from mysql.user limit 2\" | sretools-dbx  -v\nuser        : root\nhost        : %\nSelect_priv : Y\nInsert_priv : Y\nUpdate_priv : Y\nDelete_priv : Y\nCreate_priv : Y\nCreate_priv : Y\nDrop_priv   : Y\n--\nuser        : yonghang\nhost        : %\nSelect_priv : Y\nInsert_priv : Y\nUpdate_priv : Y\nDelete_priv : Y\nCreate_priv : Y\nCreate_priv : Y\nDrop_priv   : Y\n$ \n$ echo \"select table_schema,table_name,view_definition from information_schema.views limit 2\" | sretools-dbx\nTABLE_SCHEMA TABLE_NAME                    VIEW_DEFINITION\nnsys          version                       select '2.1.1' AS `sys_version`,version() AS `mysql_version`\nsys          innodb_buffer_stats_by_schema select if((locate('.',`ibp`.`TABLE_NAME`) = 0),'InnoDB System',replace(substring_index(`ibp`.`TABLE_NAME`,'.',1),'`','')) AS `object_schema`,format_bytes(sum(if((`ibp`.`COMPRESSED_SIZE` = 0),16384,`ibp`.`COMPRESSED_SIZE`))) AS `allocated`,format_bytes(sum(`ibp`.`DATA_SIZE`)) AS `data`,count(`ibp`.`PAGE_NUMBER`) AS `pages`,count(if((`ibp`.`IS_HASHED` = 'YES'),1,NULL)) AS `pages_hashed`,count(if((`ibp`.`IS_OLD` = 'YES'),1,NULL)) AS `pages_old`,round((sum(`ibp`.`NUMBER_RECORDS`) / count(distinct `ibp`.`INDEX_NAME`)),0) AS `rows_cached` from `information_schema`.`INNODB_BUFFER_PAGE` `ibp` where (`ibp`.`TABLE_NAME` is not null) group by `object_schema` order by sum(if((`ibp`.`COMPRESSED_SIZE` = 0),16384,`ibp`.`COMPRESSED_SIZE`)) desc\n$ \n$ # limit max col width to 80 for better look\n$ echo \"select table_schema,table_name,view_definition from information_schema.views limit 2\" | sretools-dbx -w80\nTABLE_SCHEMA TABLE_NAME                    VIEW_DEFINITION\n---------------------------------------------------------------------------------------------------------------------------\nsys          version                       select '2.1.1' AS `sys_version`,version() AS `mysql_version`\nsys          innodb_buffer_stats_by_schema select if((locate('.',`ibp`.`TABLE_NAME`) = 0),'InnoDB System',replace(substring\n                                           _index(`ibp`.`TABLE_NAME`,'.',1),'`','')) AS `object_schema`,format_bytes(sum(if\n                                           ((`ibp`.`COMPRESSED_SIZE` = 0),16384,`ibp`.`COMPRESSED_SIZE`))) AS `allocated`,f\n                                           ormat_bytes(sum(`ibp`.`DATA_SIZE`)) AS `data`,count(`ibp`.`PAGE_NUMBER`) AS `pag\n                                           es`,count(if((`ibp`.`IS_HASHED` = 'YES'),1,NULL)) AS `pages_hashed`,count(if((`i\n                                           bp`.`IS_OLD` = 'YES'),1,NULL)) AS `pages_old`,round((sum(`ibp`.`NUMBER_RECORDS`)\n                                   / count(distinct `ibp`.`INDEX_NAME`)),0) AS `rows_cached` from `information_sch\n                                           ema`.`INNODB_BUFFER_PAGE` `ibp` where (`ibp`.`TABLE_NAME` is not null) group by\n                                           `object_schema` order by sum(if((`ibp`.`COMPRESSED_SIZE` = 0),16384,`ibp`.`COMPR\n                                           ESSED_SIZE`)) desc\n```\n\n\nin mysql, the view definition text is kind of '1 line' text which is not good for reading.  most likely we may have line breaks there.\nbelow let's look at another example for the formatting part. the new example is with ibm-db2.\n\n```bash\n$ sretools-dbx -J /home/yonghang/jdbc/db2jcc4.jar -D com.ibm.db2.jcc.DB2Driver -U \"jdbc:db2://localhost:50000/sample:user=db2inst1;password=db2inst1;\" -C\n# DBXServer 978653@/home/yonghang/.cache/sretools/.dbx.971825\n$ \n$ echo \"select viewschema,viewname,varchar(text) as text from syscat.views fetch first 1 rows only with ur\" | sretools-dbx \nVIEWSCHEMA VIEWNAME          TEXT\n-------------------------------------------------------------------------------------------------------\nSYSIBM     CHECK_CONSTRAINTS CREATE OR REPLACE VIEW SYSIBM.CHECK_CONSTRAINTS\n                             (CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, CHECK_CLAUSE)\n                             AS SELECT\n                             CAST(CURRENT SERVER AS VARCHAR(128)), TBCREATOR,\n                             CAST(NAME AS VARCHAR(128)), TEXT\n                             FROM SYSIBM.SYSCHECKS\n                             WHERE TYPE='C'\n                             UNION ALL\n                             SELECT CAST(CURRENT SERVER AS VARCHAR(128)), TBCREATOR,\n                             CAST(CONCAT(RTRIM(CONCAT(CHAR(CTIME), CHAR(FID) ) ),\n                             RTRIM(CHAR(COLNO)) ) AS VARCHAR(128) ),\n                             CAST(CONCAT(CONCAT('CHECK (', C.NAME), ' IS NOT NULL)') AS CLOB(64K) )\n                             FROM SYSIBM.SYSCOLUMNS C, SYSIBM.SYSTABLES T\n                             WHERE C.TBCREATOR = T.CREATOR AND C.TBNAME = T.NAME AND TYPE IN('U', 'T')\n                             AND NULLS ='N'\n\n```\n## export to JSON,YAML or HTML\n```bash\n$ echo \"select viewschema,viewname,varchar(text) as text from syscat.views fetch first 1 rows only with ur\" | sretools-dbx  -Fjson\n[\n  {\n    \"VIEWSCHEMA\": \"SYSIBM  \",\n    \"VIEWNAME\": \"CHECK_CONSTRAINTS\",\n    \"TEXT\": \"CREATE OR REPLACE VIEW SYSIBM.CHECK_CONSTRAINTS \\n(CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, CHECK_CLAUSE) \\nAS SELECT \\nCAST(CURRENT SERVER AS VARCHAR(128)), TBCREATOR, \\nCAST(NAME AS VARCHAR(128)), TEXT \\nFROM SYSIBM.SYSCHECKS \\nWHERE TYPE='C' \\nUNION ALL \\nSELECT CAST(CURRENT SERVER AS VARCHAR(128)), TBCREATOR, \\nCAST(CONCAT(RTRIM(CONCAT(CHAR(CTIME), CHAR(FID) ) ), \\nRTRIM(CHAR(COLNO)) ) AS VARCHAR(128) ), \\nCAST(CONCAT(CONCAT('CHECK (', C.NAME), ' IS NOT NULL)') AS CLOB(64K) ) \\nFROM SYSIBM.SYSCOLUMNS C, SYSIBM.SYSTABLES T \\nWHERE C.TBCREATOR = T.CREATOR AND C.TBNAME = T.NAME AND TYPE IN('U', 'T') \\nAND NULLS ='N'\\n\"\n  }\n] \n$ echo \"select viewschema,viewname,varchar(text) as text from syscat.views fetch first 1 rows only with ur\" | sretools-dbx  -Fyaml\n- TEXT: \"CREATE OR REPLACE VIEW SYSIBM.CHECK_CONSTRAINTS \\n(CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA,\\\n    \\ CONSTRAINT_NAME, CHECK_CLAUSE) \\nAS SELECT \\nCAST(CURRENT SERVER AS VARCHAR(128)),\\\n    \\ TBCREATOR, \\nCAST(NAME AS VARCHAR(128)), TEXT \\nFROM SYSIBM.SYSCHECKS \\nWHERE\\\n    \\ TYPE='C' \\nUNION ALL \\nSELECT CAST(CURRENT SERVER AS VARCHAR(128)), TBCREATOR,\\\n    \\ \\nCAST(CONCAT(RTRIM(CONCAT(CHAR(CTIME), CHAR(FID) ) ), \\nRTRIM(CHAR(COLNO))\\\n    \\ ) AS VARCHAR(128) ), \\nCAST(CONCAT(CONCAT('CHECK (', C.NAME), ' IS NOT NULL)')\\\n    \\ AS CLOB(64K) ) \\nFROM SYSIBM.SYSCOLUMNS C, SYSIBM.SYSTABLES T \\nWHERE C.TBCREATOR\\\n    \\ = T.CREATOR AND C.TBNAME = T.NAME AND TYPE IN('U', 'T') \\nAND NULLS ='N'\\n\"\n  VIEWNAME: CHECK_CONSTRAINTS\n  VIEWSCHEMA: 'SYSIBM  '\n$ \n$ \n$ echo \"select viewschema,viewname,varchar(text) as text from syscat.views fetch first 1 rows only with ur\" | sretools-dbx  -Fhtml\n<table border=1 style=\"border-collapse:collapse;\">\n<tr>\n<td><b>VIEWSCHEMA</b></td>\n<td><b>VIEWNAME</b></td>\n<td><b>TEXT</b></td>\n</tr>\n<tr>\n<td>SYSIBM  </td>\n<td>CHECK_CONSTRAINTS</td>\n<td>CREATE OR REPLACE VIEW SYSIBM.CHECK_CONSTRAINTS <br>(CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME, CHECK_CLAUSE) <br>AS SELECT <br>CAST(CURRENT SERVER AS VARCHAR(128)), TBCREATOR, <br>CAST(NAME AS VARCHAR(128)), TEXT <br>FROM SYSIBM.SYSCHECKS <br>WHERE TYPE='C' <br>UNION ALL <br>SELECT CAST(CURRENT SERVER AS VARCHAR(128)), TBCREATOR, <br>CAST(CONCAT(RTRIM(CONCAT(CHAR(CTIME), CHAR(FID) ) ), <br>RTRIM(CHAR(COLNO)) ) AS VARCHAR(128) ), <br>CAST(CONCAT(CONCAT('CHECK (', C.NAME), ' IS NOT NULL)') AS CLOB(64K) ) <br>FROM SYSIBM.SYSCOLUMNS C, SYSIBM.SYSTABLES T <br>WHERE C.TBCREATOR = T.CREATOR AND C.TBNAME = T.NAME AND TYPE IN('U', 'T') <br>AND NULLS ='N'<br></td>\n</tr>\n```\n\n## use plugin for sql shortcut\nplugin is YAML file including queries.  I made a random example from some SQL from internet as below.\n\ngenerated YAML file,\n```yaml\nmysql:\n  db:\n    usage: '\n\n      SELECT s.schema_name,\n\n      CONCAT(IFNULL(ROUND((SUM(t.data_length)+SUM(t.index_length))/1024/1024,2),0.00),\"Mb\")\n      total_size,\n\n      CONCAT(IFNULL(ROUND(((SUM(t.data_length)+SUM(t.index_length))-SUM(t.data_free))/1024/1024,2),0.00),\"Mb\")\n      data_used,\n\n      CONCAT(IFNULL(ROUND(SUM(data_free)/1024/1024,2),0.00),\"Mb\") data_free,\n\n      IFNULL(ROUND((((SUM(t.data_length)+SUM(t.index_length))-SUM(t.data_free))/((SUM(t.data_length)+SUM(t.index_length)))*100),2),0)\n      pct_used\n\n      FROM INFORMATION_SCHEMA.SCHEMATA s, INFORMATION_SCHEMA.TABLES t\n\n      WHERE s.schema_name = t.table_schema\n\n      GROUP BY s.schema_name\n\n      ORDER BY total_size DESC\n\n      '\n  perf: {}\n  tablespace:\n    usage: '\n\n      SELECT s.schema_name, table_name,\n\n      CONCAT(IFNULL(ROUND((SUM(t.data_length)+SUM(t.index_length))/1024/1024,2),0.00),\"Mb\")\n      total_size,\n\n      CONCAT(IFNULL(ROUND(((SUM(t.data_length)+SUM(t.index_length))-SUM(t.data_free))/1024/1024,2),0.00),\"Mb\")\n      data_used,\n\n      CONCAT(IFNULL(ROUND(SUM(data_free)/1024/1024,2),0.00),\"Mb\") data_free,\n\n      IFNULL(ROUND((((SUM(t.data_length)+SUM(t.index_length))-SUM(t.data_free))/((SUM(t.data_length)+SUM(t.index_length)))*100),2),0)\n      pct_used\n\n      FROM INFORMATION_SCHEMA.SCHEMATA s, INFORMATION_SCHEMA.TABLES t\n\n      WHERE s.schema_name = t.table_schema\n\n      GROUP BY s.schema_name, table_name\n\n      ORDER BY total_size DESC\n\n      '\n  user: select user,host from mysql.user\n```\n\nthen load the YAML plugin with -P. This can be loaded when starting the connection then all following connections can use the commands defined.  Or you can specify the plugin for each run -- this also means you can use differnt plugins.\n\n```bash\n\n$ sretools-dbx  -J ~/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U \"jdbc:mysql://localhost:3306/mysql?user=yonghang&password=password&allowPublicK\neyRetrieval=true&useSSL=false\" -C\n# DBXServer 1071685@/home/yonghang/.cache/sretools/.dbx.1065306\n$ echo \"\\mysql.user\" | ./dbx.py   -P test/test.plugin.yaml\nuser             host\n--------------------------\nroot             %\nyonghang         %\nmysql.infoschema localhost\nmysql.session    localhost\nmysql.sys        localhost\nroot             localhost\n$ sretools-dbx  -P test/test.plugin.yaml  -J ~/jdbc/mariadb-java-client-2.7.1.jar -D org.mariadb.jdbc.Driver -U \"jdbc:mysql://localhost:3306/mysql?user=yonghang&pass\nword=password&allowPublicKeyRetrieval=true&useSSL=false\" -C\n# DBXServer 1071773@/home/yonghang/.cache/sretools/.dbx.1065306\n$ \n$ echo \"\\mysql.user\" | ./dbx.py  \nuser             host\n--------------------------\nroot             %\nyonghang         %\nmysql.infoschema localhost\nmysql.session    localhost\nmysql.sys        localhost\nroot             localhost\n$ \n$ echo \"\\mysql.db.usage\" | ./dbx.py  \nSCHEMA_NAME        total_size data_used data_free pct_used\n----------------------------------------------------------\nmysql              7.70Mb     -120.30Mb 128.00Mb  -1561.66\nsys                0.02Mb     0.02Mb    0.00Mb    100.0\nsample             0.02Mb     0.02Mb    0.00Mb    100.0\ninformation_schema 0.00Mb     0.00Mb    0.00Mb    0.0\nperformance_schema 0.00Mb     0.00Mb    0.00Mb    0.0\n$ \n$ echo \"\\mysql.tablespace.usage\" | ./dbx.py  \nSCHEMA_NAME        TABLE_NAME                                           total_size data_used data_free pct_used\n---------------------------------------------------------------------------------------------------------------\nmysql              time_zone_transition                                 4.52Mb     0.52Mb    4.00Mb    11.42\nmysql              help_topic                                           1.61Mb     -2.39Mb   4.00Mb    -148.54\nmysql              time_zone_transition_type                            0.44Mb     -3.56Mb   4.00Mb    -814.29\nmysql              time_zone_name                                       0.25Mb     -3.75Mb   4.00Mb    -1500.0\nmysql              help_keyword                                         0.23Mb     -3.77Mb   4.00Mb    -1606.67\nmysql              help_relation                                        0.08Mb     -3.92Mb   4.00Mb    -5020.0\nmysql              time_zone                                            0.08Mb     -3.92Mb   4.00Mb    -5020.0\nmysql              global_grants                                        0.05Mb     -3.95Mb   4.00Mb    -8433.33\nmysql              db                                                   0.03Mb     -3.97Mb   4.00Mb    -12700.0\nmysql              help_category                                        0.03Mb     -3.97Mb   4.00Mb    -12700.0\nmysql              procs_priv                                           0.03Mb     -3.97Mb   4.00Mb    -12700.0\nmysql              proxies_priv                                         0.03Mb     -3.97Mb   4.00Mb    -12700.0\nmysql              tables_priv                                          0.03Mb     -3.97Mb   4.00Mb    -12700.0\nmysql              columns_priv                                         0.02Mb     -3.98Mb   4.00Mb    -25500.0\nmysql              component                                            0.02Mb     -3.98Mb   4.00Mb    -25500.0\nmysql              default_roles                                        0.02Mb     -3.98Mb   4.00Mb    -25500.0\nmysql              engine_cost                                          0.02Mb     -3.98Mb   4.00Mb    -25500.0\nmysql              func                                                 0.02Mb     -3.98Mb   4.00Mb    -25500.0\nmysql              gtid_executed                                        0.02Mb     -3.98Mb   4.00Mb    -25500.0\nmysql              innodb_index_stats                                   0.02Mb     -3.98Mb   4.00Mb    -25500.0\nmysql              innodb_table_stats                                   0.02Mb     -3.98Mb   4.00Mb    -25500.0\nmysql              password_history                                     0.02Mb     -3.98Mb   4.00Mb    -25500.0\n......\nperformance_schema session_connect_attrs                                0.00Mb     0.00Mb    0.00Mb    0.0\nperformance_schema session_status                                       0.00Mb     0.00Mb    0.00Mb    0.0\nperformance_schema session_variables                                    0.00Mb     0.00Mb    0.00Mb    0.0\nperformance_schema setup_actors                                         0.00Mb     0.00Mb    0.00Mb    0.0\nperformance_schema setup_consumers                                      0.00Mb     0.00Mb    0.00Mb    0.0\n$ \n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/laowangv5/py-dbx",
    "keywords": "jdbc,dbx",
    "license": "Apache 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-dbx",
    "package_url": "https://pypi.org/project/py-dbx/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-dbx/",
    "project_urls": {
      "Homepage": "https://github.com/laowangv5/py-dbx"
    },
    "release_url": "https://pypi.org/project/py-dbx/1.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "make jdbc calls in command line",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12799721,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b656fbc3bc4f3c9efc29e8b87fe35c83a85e0bdc65f9770ffa22af7dd77a3197",
          "md5": "36d94509540f8f49ec8ed7682b8c4ba1",
          "sha256": "ab6814c975ea000577cdc7faf6538f220bce9b3d49ac5d7e6d287809310925e4"
        },
        "downloads": -1,
        "filename": "py-dbx-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "36d94509540f8f49ec8ed7682b8c4ba1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2818,
        "upload_time": "2022-02-06T01:33:31",
        "upload_time_iso_8601": "2022-02-06T01:33:31.953293Z",
        "url": "https://files.pythonhosted.org/packages/b6/56/fbc3bc4f3c9efc29e8b87fe35c83a85e0bdc65f9770ffa22af7dd77a3197/py-dbx-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "100135119999159f85a9aa2b8ed1b1b7bf7ea31c84f0d1717d7b8e1d95e769cb",
          "md5": "004823030883fbbc2eefd0b36bfd28cc",
          "sha256": "e9353e0fc5008136f075e7c939bc3acdc50d894e089ae95d2cc24c06ac4fdcd6"
        },
        "downloads": -1,
        "filename": "py-dbx-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "004823030883fbbc2eefd0b36bfd28cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2839,
        "upload_time": "2022-02-06T02:19:39",
        "upload_time_iso_8601": "2022-02-06T02:19:39.283947Z",
        "url": "https://files.pythonhosted.org/packages/10/01/35119999159f85a9aa2b8ed1b1b7bf7ea31c84f0d1717d7b8e1d95e769cb/py-dbx-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "487c684309da2e2f72dd94f0d9923e0aa62bf0b3487d995f09bb2b01c6fd2ded",
          "md5": "19a3da2613346d8b6a84581c848a020c",
          "sha256": "6a8064957a97a885b6d2a813bb8243191e869a638482471efbc2837e4f8155da"
        },
        "downloads": -1,
        "filename": "py-dbx-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "19a3da2613346d8b6a84581c848a020c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8607,
        "upload_time": "2021-06-30T02:24:27",
        "upload_time_iso_8601": "2021-06-30T02:24:27.976900Z",
        "url": "https://files.pythonhosted.org/packages/48/7c/684309da2e2f72dd94f0d9923e0aa62bf0b3487d995f09bb2b01c6fd2ded/py-dbx-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b988c3042990e966b1ac037efba1232aef1bf23a5dc946754b4be65d39342e7",
          "md5": "dba73e4e4f1ba6f5e6942fb087d78952",
          "sha256": "9072b01c0d4713f51c214932ea56b9ae16c8b8ab468cbce117e85cda8ad3eb56"
        },
        "downloads": -1,
        "filename": "py-dbx-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dba73e4e4f1ba6f5e6942fb087d78952",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5272,
        "upload_time": "2021-07-02T17:54:21",
        "upload_time_iso_8601": "2021-07-02T17:54:21.420129Z",
        "url": "https://files.pythonhosted.org/packages/4b/98/8c3042990e966b1ac037efba1232aef1bf23a5dc946754b4be65d39342e7/py-dbx-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ffb48c312a37b22e6af1d644f229887aaf1a98cfe71370d58d3d5bbe3b2c64b",
          "md5": "d9dfa515cd7764a222c404b78c2a82c4",
          "sha256": "6d9739b6d85bfb235e3b7223f20cab82ea8d1bd3364b9ff30a5742965f86366a"
        },
        "downloads": -1,
        "filename": "py-dbx-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d9dfa515cd7764a222c404b78c2a82c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14443,
        "upload_time": "2021-07-05T19:39:00",
        "upload_time_iso_8601": "2021-07-05T19:39:00.591313Z",
        "url": "https://files.pythonhosted.org/packages/2f/fb/48c312a37b22e6af1d644f229887aaf1a98cfe71370d58d3d5bbe3b2c64b/py-dbx-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e9e061fe67f9c5572fe29fd25abdaed0181bf158ba54c8efda27f089c48c468",
          "md5": "bc3398207c5ee2f8bfe227c1bb305d42",
          "sha256": "2f8b36b7cab4a177917c8c5b0ebb77dad70768d4df60f03d6b4a49082596d348"
        },
        "downloads": -1,
        "filename": "py-dbx-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bc3398207c5ee2f8bfe227c1bb305d42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14022,
        "upload_time": "2021-10-11T22:56:49",
        "upload_time_iso_8601": "2021-10-11T22:56:49.669060Z",
        "url": "https://files.pythonhosted.org/packages/7e/9e/061fe67f9c5572fe29fd25abdaed0181bf158ba54c8efda27f089c48c468/py-dbx-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db1d8e222a87a38c3fd66b5cba6d29e79b493beaea8d1b80c563ec6bcaf3bdae",
          "md5": "246fc2b172b1597365db8def7096447d",
          "sha256": "f2ff4d81362a896ed8f8560d85b572e09fabce17e6f1b45c7c98f885cfe7346a"
        },
        "downloads": -1,
        "filename": "py-dbx-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "246fc2b172b1597365db8def7096447d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14033,
        "upload_time": "2021-10-11T22:59:30",
        "upload_time_iso_8601": "2021-10-11T22:59:30.908978Z",
        "url": "https://files.pythonhosted.org/packages/db/1d/8e222a87a38c3fd66b5cba6d29e79b493beaea8d1b80c563ec6bcaf3bdae/py-dbx-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f32938f89ac0f2831d2187988f628f75adc2e3e0ec885a27aa80738c6ca579d7",
          "md5": "d6377278b27c0f43583ecfe2b6ba6210",
          "sha256": "b31d19521b1ce70e12792bd4e5294d71807b50231598c5a8d144aab04d245b8b"
        },
        "downloads": -1,
        "filename": "py-dbx-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d6377278b27c0f43583ecfe2b6ba6210",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14022,
        "upload_time": "2021-10-11T23:08:24",
        "upload_time_iso_8601": "2021-10-11T23:08:24.573497Z",
        "url": "https://files.pythonhosted.org/packages/f3/29/38f89ac0f2831d2187988f628f75adc2e3e0ec885a27aa80738c6ca579d7/py-dbx-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f32938f89ac0f2831d2187988f628f75adc2e3e0ec885a27aa80738c6ca579d7",
        "md5": "d6377278b27c0f43583ecfe2b6ba6210",
        "sha256": "b31d19521b1ce70e12792bd4e5294d71807b50231598c5a8d144aab04d245b8b"
      },
      "downloads": -1,
      "filename": "py-dbx-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "d6377278b27c0f43583ecfe2b6ba6210",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14022,
      "upload_time": "2021-10-11T23:08:24",
      "upload_time_iso_8601": "2021-10-11T23:08:24.573497Z",
      "url": "https://files.pythonhosted.org/packages/f3/29/38f89ac0f2831d2187988f628f75adc2e3e0ec885a27aa80738c6ca579d7/py-dbx-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}