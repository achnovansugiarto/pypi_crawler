{
  "info": {
    "author": "University of Kentucky",
    "author_email": "stephen.parsons@uky.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "========\n ink-id\n========\n\n``inkid`` is a Python package and collection of scripts for identifying ink in volumetric CT data using machine learning.\n\nRequirements\n============\n\nPython >=3.8 is required.\n\nInstallation\n============\n\n.. code-block:: bash\n\n    $ git clone https://code.cs.uky.edu/seales-research/ink-id.git && cd ink-id  # From code.cs server\n    $ git clone https://gitlab.com/educelab/ink-id.git && cd ink-id # From gitlab.com\n\n    $ python -m venv .venv              # Create a virtual environment\n    $ . .venv/bin/activate              # Activate the environment\n    (.venv) $ pip install -U pip        # Upgrade pip\n    (.venv) $ pip install -e .          # Install ink-id and dependencies\n    (.venv) $ deactivate                # When finished, deactivate the environment\n\nCython modules are automatically built during the installation.\nAfter changes to Cython files (``.pyx`` and ``.pxd``), those modules must be rebuilt:\n\n.. code-block:: bash\n\n    $ python setup.py build_ext --inplace\n\nUsage\n=====\n\nThe package can be used as a Python library:\n\n.. code-block:: python\n\n   import inkid\n\n   params = inkid.ops.json_schema('dataSource0.1')\n   regions = inkid.data.Dataset(['./training_dataset.txt'])\n\nA script is also included for running a training job and/or generating prediction images:\n\n::\n\n   $ inkid-train-and-predict\n   usage: inkid-train-and-predict [options]\n\nExamples\n--------\n\nSLURM Jobs\n^^^^^^^^^^\n\nThis code is often used in Singularity containers, run as SLURM jobs on a compute cluster.\nFor documentation of this usage, see ``singularity/inkid.def``.\n\nK-Fold Cross Validation (and Prediction)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n``inkid/scripts/train_and_predict.py``typically takes a dataset files as input and trains on the specified training\nregions, validates on the validation regions, and predicts on the prediction regions. However if the\n``--cross-validate-on`` argument is passed, the behavior is slightly different. The nth training source will be removed\nfrom the training set and added to the validation and prediction sets. Example:\n\n.. code-block:: bash\n\n   $ inkid-train-and-predict --training-set ~/data/dri-datasets-drive/LunateSigma/grid-2x5.txt \\\n        --cross-validate-on 7 \\\n        --final-prediction-on-all \\\n        --output ~/data/LunateSigmaGridTest00\n\nIt is possible to schedule all of these jobs with one command if using SLURM's ``sbatch``. Example:\n\n.. code-block:: bash\n\n   $ ./submit_with_summary.sh sbatch -p P4V12_SKY32M192_L --time=1-00:00:00 --mem=187G --array=0-1 submit.sh \\\n        --training-set /pscratch/seales_uksr/dri-datasets-drive/Dummy/DummyTest.volpkg/working/DummyTest_1x2Grid.txt \\\n        --subvolume-shape-voxels 48 48 48 \\\n        --final-prediction-on-all \\\n        --prediction-grid-spacing 2 \\\n        --label-type rgb_values \\\n        --subvolume-shape-microns 300 20 20 \\\n        --output /pscratch/seales_uksr/dri-experiments-drive/inkid/results/DummyTest/check_gpu/03\n\nAfter performing a run for each value of ``--cross-validate-on``, each will have created a subdirectory of output.\n\nGenerating Summary Images\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThere is a script ``inkid/scripts/misc/create_summary_images.py`` that takes the parent output directory and will\ngenerate various output images combining the cross-validation results. Example:\n\n.. code-block:: bash\n\n   $ python inkid/scripts/misc/add_k_fold_prediction_images.py ~/data/out/carbon_phantom_col1_test/\n\nGrid Training\n^^^^^^^^^^^^^\n\nWhen working with only one surface PPM, it is often desirable to split that single region into a grid to be used with\nk-fold cross-validation. There is a script to automatically create the grid dataset file:\n\n.. code-block:: bash\n\n   $ python inkid/scripts/split_region_into_grid.py ~/data/dri-datasets-drive/Dummy/DummyTest.volpkg/working/DummyTest.json 1 2\n\nThen use this dataset for standard k-fold cross validation and prediction.\n\nMiscellaneous\n^^^^^^^^^^^^^\n\nThere is a dummy test dataset in the DRI Datasets Drive that is meant to be a small volume to quickly validate\ntraining and prediction code. If something major has been broken such as dimensions in the neural network model, this\nwill make that clear without having to wait for large volumes to load. Example:\n\n.. code-block:: bash\n\n   $ ./submit_with_summary.sh sbatch -p P4V12_SKY32M192_L --time=1-00:00:00 --mem=150G submit.sh \\\n        --training-set $PSCRATCH/seales_uksr/dri-datasets-drive/Dummy/DummyTest.volpkg/working/DummyTest_grid1x2.txt \\\n        --subvolume-shape-voxels 48 2 2 \\\n        --final-prediction-on-all \\\n        --prediction-grid-spacing 2 \\\n        --label-type rgb_values \\\n        --cross-validate-on 0 \\\n        --output ~/temp/test00\n\nTexture a region using an existing trained model (important parts: ``--model`` and ``--skip-training``:\n\n.. code-block:: bash\n\n   $ ./submit_with_summary.sh sbatch -p P4V12_SKY32M192_L --time=1-00:00:00 --mem=187G submit.sh \\\n        --training-set $PSCRATCH/seales_uksr/dri-datasets-drive/MorganM910/MS910.volpkg/working/segmentation/quire.json \\\n        --prediction-set $PSCRATCH/seales_uksr/dri-datasets-drive/MorganM910/MS910.volpkg/working/segmentation/p60.json \\\n        --subvolume-shape 48 48 48 \\\n        --final-prediction-on-all \\\n        --prediction-grid-spacing 8 \\\n        --label-type rgb_values \\\n        --skip-training \\\n        --model $PSCRATCH/seales_uksr/dri-experiments-drive/inkid/results/MS910/p60/initial/09/2021-02-08_09.15.07/checkpoints/checkpoint_0_175000.pt \\\n        --output $PSCRATCH/seales_uksr/dri-experiments-drive/inkid/results/MS910/p60/fromSavedWeights/02\n\nContributing\n============\n\nWhen contributing to this repository, please first discuss the change you wish to make via issue, email, or another method with the owners of this repository.\n\nWe follow the git branching model described `here <http://nvie.com/posts/a-successful-git-branching-model/>`_\nand document code based on the `Google Python Style Guide standards <https://google.github.io/styleguide/pyguide.html?showone=Comments#Comments>`_.\n\nLicense\n=======\n\nThis package is licensed under the GNU General Public License (GPLv3) - see ``LICENSE`` for details.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/educelab/ink-id",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "inkid",
    "package_url": "https://pypi.org/project/inkid/",
    "platform": "",
    "project_url": "https://pypi.org/project/inkid/",
    "project_urls": {
      "Homepage": "https://gitlab.com/educelab/ink-id"
    },
    "release_url": "https://pypi.org/project/inkid/0.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Identify ink via machine learning",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11386736,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "955b2bb96e414a9e01947acb7b271ef241658f90d7aede6157ccf895bb9d5de8",
          "md5": "e3053df91f11fc7c904483d6438107e0",
          "sha256": "ba8ae4b6ab37abc0c779c5522631c8412b480c57d875035386cec631622c9ab2"
        },
        "downloads": -1,
        "filename": "inkid-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e3053df91f11fc7c904483d6438107e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 284935,
        "upload_time": "2021-09-03T20:03:09",
        "upload_time_iso_8601": "2021-09-03T20:03:09.254447Z",
        "url": "https://files.pythonhosted.org/packages/95/5b/2bb96e414a9e01947acb7b271ef241658f90d7aede6157ccf895bb9d5de8/inkid-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d833af03733c5564dbf8305747bff75cad806a8f77156704d63ad5ed5edeb67",
          "md5": "1b7e8660ca6e7de31e0f29af30e0e8dd",
          "sha256": "e35f64c326b615ac49689a3a024c42d1411d601665583c8afa133a8e1ba16040"
        },
        "downloads": -1,
        "filename": "inkid-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1b7e8660ca6e7de31e0f29af30e0e8dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 285711,
        "upload_time": "2021-09-03T20:11:23",
        "upload_time_iso_8601": "2021-09-03T20:11:23.686914Z",
        "url": "https://files.pythonhosted.org/packages/4d/83/3af03733c5564dbf8305747bff75cad806a8f77156704d63ad5ed5edeb67/inkid-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00153ee1b11463a9ecb66244b90549db6f819b513987a0f49a4c8957c9b9e105",
          "md5": "a7d043e37ec671314416a095363b492a",
          "sha256": "3a81c0cac1fa35944abd70c73a4810f139162c6e2cd155133c892130b7336358"
        },
        "downloads": -1,
        "filename": "inkid-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a7d043e37ec671314416a095363b492a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 285713,
        "upload_time": "2021-09-03T21:11:53",
        "upload_time_iso_8601": "2021-09-03T21:11:53.718782Z",
        "url": "https://files.pythonhosted.org/packages/00/15/3ee1b11463a9ecb66244b90549db6f819b513987a0f49a4c8957c9b9e105/inkid-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63a148b83267c7635abc67c73007641c7c36e3b960017a17887dd998174b45d0",
          "md5": "6e88a0fc3e40b60b31b46673ed3c01c3",
          "sha256": "ac10ad7323199ab9704ef0c7c1a653760c5122ed6f8c8be211871412b91aac67"
        },
        "downloads": -1,
        "filename": "inkid-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "6e88a0fc3e40b60b31b46673ed3c01c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 285704,
        "upload_time": "2021-09-07T16:17:25",
        "upload_time_iso_8601": "2021-09-07T16:17:25.291099Z",
        "url": "https://files.pythonhosted.org/packages/63/a1/48b83267c7635abc67c73007641c7c36e3b960017a17887dd998174b45d0/inkid-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63a148b83267c7635abc67c73007641c7c36e3b960017a17887dd998174b45d0",
        "md5": "6e88a0fc3e40b60b31b46673ed3c01c3",
        "sha256": "ac10ad7323199ab9704ef0c7c1a653760c5122ed6f8c8be211871412b91aac67"
      },
      "downloads": -1,
      "filename": "inkid-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "6e88a0fc3e40b60b31b46673ed3c01c3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 285704,
      "upload_time": "2021-09-07T16:17:25",
      "upload_time_iso_8601": "2021-09-07T16:17:25.291099Z",
      "url": "https://files.pythonhosted.org/packages/63/a1/48b83267c7635abc67c73007641c7c36e3b960017a17887dd998174b45d0/inkid-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}