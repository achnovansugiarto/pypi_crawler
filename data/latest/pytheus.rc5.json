{
  "info": {
    "author": "",
    "author_email": "Llandy Riveron Del Risco <llandy3d@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "<img src=\"https://user-images.githubusercontent.com/16627175/185823115-b33905c3-f389-40e1-b830-2197889a936a.png\" height=\"400\">\n\n# pytheus\n\nplaying with metrics\n\n---\n\nExperimenting with a different way of creating prometheus metrics in python:\n- support for default labels value ✅\n- partial labels value (built in an incremental way) ✅\n- multiple multiprocess support:\n  - mmap file based (wip ⚠️)\n  - redis backend ✅\n- customizable registry support ✅\n- registry prefix support ✅\n\n---\n\n**Install**\n\n```\npip install pytheus\n```\n\nOptionally if you want to use the Redis backend you will need the redis library:\n```python\npip install redis\n# or\npip install pytheus[redis]\n```\n\n---\n\n**Partial labels support:**\n\n```python\nfrom pytheus.metrics import Counter\n\n# without labels\nmy_metric = Counter('metric_name', 'desc')\nmy_metric.inc()  # example for counter\n\n# with labels\nmy_metric = Counter('metric_name', 'desc', required_labels=['req1', 'req2'])\n\nmy_metric.labels({'req1': '1', 'req2': '2'}).inc()  # you can pass all the labels at once\npartial_my_metric = my_metric.labels({'req1': '1'})  # a cacheable object with one of the required labels already set\nobservable_my_metric = partial_my_metric.labels({'req2': '2'})  # finish setting the remaining values before observing\nobservable_my_metric.inc()\n\n```\n\n---\n\n**Default labels support:**\n\n```python\nfrom pytheus.metrics import Counter\n\n# with default labels\nmy_metric = Counter('metric_name', 'desc', required_labels=['req1', 'req2'], default_labels={'req2': 'me_set!'})\n\nmy_metric.labels({'req1': '1'}).inc()  # as we have req2 as a default label we only need to set the remaining labels for observing\nmy_metric.labels({'req1': '1', 'req2': '2'})  # you can still override default labels!\n\n```\n\n---\n\n**Exposing metrics:**\n\nYou can use the `generate_metrics` function from `pytheus.exposition` to generate the metrics and serve them as an endpoint with your favourite web framework.\n\nAlternatively you can use the `make_wsgi_app` function that creates a simple wsgi app to serve the metrics.\n\n---\n\n## Quickstart / Example\n\nThe `example.py` file starts a flask application with three endpoints:\n  - `/`: just returns a phrase while observing the time taken for the request to complete\n  -  `/slow`: same as before but will sleep so that values will only end up in higher buckets\n  -  `/metrics`: the endpoint used by prometheus to scrape the metrics\n\nIt uses two histograms, one without labels, and one with labels required and a default label that makes it observable.\nTo expose the metrics the `generate_metrics()` function is used.\nnote: the example file is using the redis backend but you can try without and set up prometheus yourself.\n\n### Redis version\n\nFor the redis version you can just clone the repository and run `docker-compose up` to start both redis and prometheus scraping on localhost:8080.\nThen you can start the local server with `python example.py`. (flask is required for it to work)\n\nNow you can visit the described endpoints and by visiting `localhost:9090` you can query prometheus, for example by looking for all the slow requests buckets: `page_visits_latency_seconds_labeled_bucket{speed=\"slow\"}`\n\n<img width=\"1693\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16627175/206577287-06bf89c3-7ab6-4a70-b14c-415be32ea890.png\">\n\n### Default version\n\nFor the default single process version you can create your python server like this:\n\n```python\nimport time\nfrom flask import Flask\nfrom pytheus.metrics import Histogram\nfrom pytheus.exposition import generate_metrics\n\napp = Flask(__name__)\n\nhistogram = Histogram('page_visits_latency_seconds', 'used for testing')\n\n# this is the endpoint that prometheus will use to scrape the metrics\n@app.route('/metrics')\ndef metrics():\n    return generate_metrics()\n\n@app.route('/')\ndef home():\n    with histogram.time():\n        return 'hello world!'\n\n@app.route('/slow')\ndef slow():\n    with histogram.time():\n        time.sleep(3)\n        return 'hello world! from slow!'\n\napp.run(host='0.0.0.0', port=8080)\n```\n\nand if you have prometheus installed configure it to scrape on localhost:8080 or you can still use the included `docker-compose.yml` file.\n\n---\n\n## Metric types\n\n### Counter\n\nThe Counter is a metric that only increases and can resets to 0. (For example if a service restart, it will start again from zero)\n\n```python\nfrom pytheus.metrics import Counter\n\ncounter = Counter(name=\"my_counter\", description=\"My description\")\n\n# increase by 1\ncounter.inc()\n\n# increase by x\ncounter.inc(7)\n\n# it is possible to count exceptions\nwith counter.count_exceptions():\n    raise ValueError  # increases counter by 1\n    \n# you can specify which exceptions to watch for\nwith counter.count_exceptions((IndexError, ValueError)):\n    raise ValueError. # increases counter by 1\n\n# it is possible to use the counter as a decorator as a shortcut to count exceptions\n@counter\ndef test():\n    raise ValueError  # increases counter by 1 when called\n\n# specifying which exceptions to look for also works with the decorator\n@counter(exceptions=(IndexError, ValueError))\ndef test():\n    raise ValueError  # increases counter by 1 when called\n```\n\n---\n\n### Gauge\n\nThe Gauge can increase and decrease its value. It is also possible to set a specific value.\n\n```python\nfrom pytheus.metrics import Gauge\n\ngauge = Gauge(name=\"my_gauge\", description=\"My description\")\n\n# increase by 1\ngauge.inc()\n\n# increase by x\ngauge.inc(7)\n\n# decrease by 1\ngauge.dec()\n\n# set a specific value\ngauge.set(7)\n\n# set to current unix timestamp\ngauge.set_to_current_time()\n\n# it is possible to track progress so that when entered increases the value by 1, and when exited decreases it\nwith gauge.track_inprogress():\n    do_something()\n    \n# you can also time a piece of code, will set the duration in seconds to value when exited\nwith gauge.time():\n    do_something()\n\n# tracking time can also be done as a decorator\n@gauge\ndef do_something():\n    ...\n```\n\n---\n\n### Histogram\n\nA histogram samples observations (usually things like request durations or response sizes) and counts them in configurable buckets. It also provides a sum of all observed values. ([taken from prometheus docs](https://prometheus.io/docs/concepts/metric_types/#histogram))\n\n```python\nfrom pytheus.metrics import Histogram\n\nhistogram = Histogram(name=\"my_histogram\", description=\"My description\")\n# by default it will have the following buckets: (.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10)\n# note: the +Inf bucket will be added automatically, this is float('inf') in python\n\n# create a histogram specifying buckets\nhistogram = Histogram(name=\"my_histogram\", description=\"My description\", buckets=(0.2, 1, 3))\n\n# observe a value\nhistogram.observe(0.4)\n    \n# you can also time a piece of code, will set the duration in seconds to value when exited\nwith histogram.time():\n    do_something()\n\n# tracking time can also be done as a decorator\n@histogram\ndef do_something():\n    ...\n```\n\n\n## How to use different backends\n\nThings work out of the box, using the SingleProcessBackend:\n\n```python\nfrom pytheus.metrics import Counter\n\ncounter = Counter(\n    name=\"my_metric\",\n    description=\"My description\",\n    required_labels=[\"label_a\", \"label_b\"],\n)\nprint(counter._metric_value_backend.__class__)\n# <class 'pytheus.backends.SingleProcessBackend'>\nprint(counter._metric_value_backend.config)\n# {}\n```\n\nYou can define environment configuration to have different defaults, using two environment variables:\n\n```bash\nexport PYTHEUS_BACKEND_CLASS=\"pytheus.backends.MultipleProcessFileBackend\"\nexport PYTHEUS_BACKEND_CONFIG=\"./config.json\"\n```\n\nNow, create the config file, `./config.json`:\n\n```json\n{\n  \"pytheus_file_directory\": \"./\"\n}\n```\n\nNow we can try the same snippet as above:\n\n```python\nfrom pytheus.metrics import Counter\n\ncounter = Counter(\n    name=\"my_metric\",\n    description=\"My description\",\n    required_labels=[\"label_a\", \"label_b\"],\n)\nprint(counter._metric_value_backend.__class__)\n# <class 'pytheus.backends.MultipleProcessFileBackend'>\nprint(counter._metric_value_backend.config)\n# {'pytheus_file_directory': \"./\"}\n```\n\nYou can also pass the values directly in Python, which would take precedence over the environment\nsetup we have just described:\n\n```python\n\nfrom pytheus.metrics import Counter\nfrom pytheus.backends import MultipleProcessRedisBackend, load_backend\n\nload_backend(\n    backend_class=MultipleProcessRedisBackend,\n    backend_config={\n      \"host\": \"127.0.0.1\",\n      \"port\":  6379\n    }\n)\n# Notice that if you simply call load_backend(), it would reload config from the environment.\n\n# load_backend() is called automatically at package import, that's why we didn't need to call it\n# directly in the previous example\n\ncounter = Counter(\n    name=\"my_metric\",\n    description=\"My description\",\n    required_labels=[\"label_a\", \"label_b\"],\n)\nprint(counter._metric_value_backend.__class__)\n# <class 'pytheus.backends.MultipleProcessRedisBackend'>\nprint(counter._metric_value_backend.config)\n# {'host': '127.0.0.1', 'port': 6379}\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytheus",
    "package_url": "https://pypi.org/project/pytheus/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytheus/",
    "project_urls": {
      "repository": "https://github.com/Llandy3d/pytheus"
    },
    "release_url": "https://pypi.org/project/pytheus/0.0.4/",
    "requires_dist": [
      "redis (>=4.0.0) ; extra == 'redis'",
      "pytest (>=7.0.0) ; extra == 'test'"
    ],
    "requires_python": ">=3.10",
    "summary": "playing with metrics",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16042466,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "163c6a793736fa799e49f58207c3e5b547cd8247a92ad6541fef788b3571d68f",
          "md5": "c82dd7fc7e921a943aff19dbe02d8b88",
          "sha256": "3f0ac7269202e4b430382544829abc100b46674399d7b28af44f3e67d97ca2cb"
        },
        "downloads": -1,
        "filename": "pytheus-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c82dd7fc7e921a943aff19dbe02d8b88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 1290,
        "upload_time": "2022-07-09T17:49:45",
        "upload_time_iso_8601": "2022-07-09T17:49:45.626220Z",
        "url": "https://files.pythonhosted.org/packages/16/3c/6a793736fa799e49f58207c3e5b547cd8247a92ad6541fef788b3571d68f/pytheus-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e6046173cd4dc3707e984447f371d2cc7a550c49db2871af791dc8df5498242",
          "md5": "f6a692329d38d87d93d6f7969b6d45c9",
          "sha256": "00a9763e268b4112b6bdfc199b2ace830927a65fdd45d2b09c662c4b0c065eb8"
        },
        "downloads": -1,
        "filename": "pytheus-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f6a692329d38d87d93d6f7969b6d45c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1159,
        "upload_time": "2022-07-09T17:49:48",
        "upload_time_iso_8601": "2022-07-09T17:49:48.176789Z",
        "url": "https://files.pythonhosted.org/packages/0e/60/46173cd4dc3707e984447f371d2cc7a550c49db2871af791dc8df5498242/pytheus-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c696946ce9e63aa87fe3c9887b9670fac8fd9649e5068b48efdc03b57e6dab64",
          "md5": "01b5837d2342f25be2dcf9a5c759da2a",
          "sha256": "03e72a391f335e450d0982213ff81db1ec90220fabb6068d7fffeecb4b4932e7"
        },
        "downloads": -1,
        "filename": "pytheus-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01b5837d2342f25be2dcf9a5c759da2a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 8550,
        "upload_time": "2022-08-22T02:24:39",
        "upload_time_iso_8601": "2022-08-22T02:24:39.497864Z",
        "url": "https://files.pythonhosted.org/packages/c6/96/946ce9e63aa87fe3c9887b9670fac8fd9649e5068b48efdc03b57e6dab64/pytheus-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dcfc004d927394a71319756ecb6285ae0697c185a3009727037c582cca2cff0",
          "md5": "7939c21f29ee5d7f9fd942fcd8e4d90c",
          "sha256": "86b9f35d874e10f9ec36bcb8f1e58232ac0513996558cea9c313aa0058b6653e"
        },
        "downloads": -1,
        "filename": "pytheus-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7939c21f29ee5d7f9fd942fcd8e4d90c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 8485,
        "upload_time": "2022-08-22T02:24:41",
        "upload_time_iso_8601": "2022-08-22T02:24:41.286864Z",
        "url": "https://files.pythonhosted.org/packages/1d/cf/c004d927394a71319756ecb6285ae0697c185a3009727037c582cca2cff0/pytheus-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dd36c0bd410846221812e49e4e3343c23bd6a440bf21711d111cd981a20b29a",
          "md5": "e4209a1664a2b592cf7f6ec0adf0ad4d",
          "sha256": "8b2e53439e11a1159e65ab738123e22df67cd9ee44806ae60a39ba6592924c77"
        },
        "downloads": -1,
        "filename": "pytheus-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4209a1664a2b592cf7f6ec0adf0ad4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 8637,
        "upload_time": "2022-08-23T13:08:12",
        "upload_time_iso_8601": "2022-08-23T13:08:12.360358Z",
        "url": "https://files.pythonhosted.org/packages/4d/d3/6c0bd410846221812e49e4e3343c23bd6a440bf21711d111cd981a20b29a/pytheus-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbded3e3162103b016e90f4ca713a87e34b5ab0f68e15bdbfe8b2df8476b7a15",
          "md5": "500bff5f77707180b9d2848e68e57658",
          "sha256": "20e2da686f7b7a2fcb9613ad5d1b3f2280a3b09820cacdd90a33380389805628"
        },
        "downloads": -1,
        "filename": "pytheus-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "500bff5f77707180b9d2848e68e57658",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 8696,
        "upload_time": "2022-08-23T13:08:14",
        "upload_time_iso_8601": "2022-08-23T13:08:14.436896Z",
        "url": "https://files.pythonhosted.org/packages/db/de/d3e3162103b016e90f4ca713a87e34b5ab0f68e15bdbfe8b2df8476b7a15/pytheus-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cc0262154b985ad485b13a7d69bef723dec071964505ac6f434bcebedeca0aa",
          "md5": "a59e7370eb8fb46971ca897d56899438",
          "sha256": "7899687c0d0ab5547950398c49dd3b9933a28c13771e617c1f1ff7aa1534d8a0"
        },
        "downloads": -1,
        "filename": "pytheus-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a59e7370eb8fb46971ca897d56899438",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16203,
        "upload_time": "2022-12-08T21:47:53",
        "upload_time_iso_8601": "2022-12-08T21:47:53.101107Z",
        "url": "https://files.pythonhosted.org/packages/6c/c0/262154b985ad485b13a7d69bef723dec071964505ac6f434bcebedeca0aa/pytheus-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ff8216454fc1e22fd7bba8e88b45d6fe896a09b25e728ecf4da2c09bdf5aed4",
          "md5": "b7a9fda59d03dec7b2aca500b95026a4",
          "sha256": "07d86eaeac53e36da8a6bf40427b2e7f571ea0f255fda0e8281f6122da6584d1"
        },
        "downloads": -1,
        "filename": "pytheus-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b7a9fda59d03dec7b2aca500b95026a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 16285,
        "upload_time": "2022-12-08T21:47:55",
        "upload_time_iso_8601": "2022-12-08T21:47:55.703954Z",
        "url": "https://files.pythonhosted.org/packages/5f/f8/216454fc1e22fd7bba8e88b45d6fe896a09b25e728ecf4da2c09bdf5aed4/pytheus-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bd4a0fdc84e92a343d1d1061453d96450cad0e96e28061e918eb3f54dc2a093",
          "md5": "c2f86b46bb213984462568d1f5f42574",
          "sha256": "f7521ba6fe190171b5a31270837a28aade93e35b1901fa274a75ef21ef53e79f"
        },
        "downloads": -1,
        "filename": "pytheus-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2f86b46bb213984462568d1f5f42574",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 17347,
        "upload_time": "2022-12-09T01:01:03",
        "upload_time_iso_8601": "2022-12-09T01:01:03.099363Z",
        "url": "https://files.pythonhosted.org/packages/0b/d4/a0fdc84e92a343d1d1061453d96450cad0e96e28061e918eb3f54dc2a093/pytheus-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e717b998d12029dc27675fc8404ce7a1aeed9b6a7c08f87e204a693354b0967b",
          "md5": "a851fdcbd918fdcc17a39df6fc6d50ac",
          "sha256": "a7fa76c2ec8fc98b33c547d4f146333dd7ea2dfa954b8aebf0f411b9a4c8ec0d"
        },
        "downloads": -1,
        "filename": "pytheus-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a851fdcbd918fdcc17a39df6fc6d50ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 18317,
        "upload_time": "2022-12-09T01:01:05",
        "upload_time_iso_8601": "2022-12-09T01:01:05.219359Z",
        "url": "https://files.pythonhosted.org/packages/e7/17/b998d12029dc27675fc8404ce7a1aeed9b6a7c08f87e204a693354b0967b/pytheus-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bd4a0fdc84e92a343d1d1061453d96450cad0e96e28061e918eb3f54dc2a093",
        "md5": "c2f86b46bb213984462568d1f5f42574",
        "sha256": "f7521ba6fe190171b5a31270837a28aade93e35b1901fa274a75ef21ef53e79f"
      },
      "downloads": -1,
      "filename": "pytheus-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c2f86b46bb213984462568d1f5f42574",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 17347,
      "upload_time": "2022-12-09T01:01:03",
      "upload_time_iso_8601": "2022-12-09T01:01:03.099363Z",
      "url": "https://files.pythonhosted.org/packages/0b/d4/a0fdc84e92a343d1d1061453d96450cad0e96e28061e918eb3f54dc2a093/pytheus-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e717b998d12029dc27675fc8404ce7a1aeed9b6a7c08f87e204a693354b0967b",
        "md5": "a851fdcbd918fdcc17a39df6fc6d50ac",
        "sha256": "a7fa76c2ec8fc98b33c547d4f146333dd7ea2dfa954b8aebf0f411b9a4c8ec0d"
      },
      "downloads": -1,
      "filename": "pytheus-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "a851fdcbd918fdcc17a39df6fc6d50ac",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 18317,
      "upload_time": "2022-12-09T01:01:05",
      "upload_time_iso_8601": "2022-12-09T01:01:05.219359Z",
      "url": "https://files.pythonhosted.org/packages/e7/17/b998d12029dc27675fc8404ce7a1aeed9b6a7c08f87e204a693354b0967b/pytheus-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}