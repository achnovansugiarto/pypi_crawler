{
  "info": {
    "author": "Rick van Rein (ARPA2 developer)",
    "author_email": "rick@openfortress.nl",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# README for ARPA2 WSGI middleware\n\n> *WSGI enables middleware, which is a perfect place\n> for enforcing ARPA2 Identities, ranging from\n> authentication to authorisation through access control.*\n\n**Background links:**\n\n  * [InternetWide Identity Design](http://internetwide.org/tag/identity.html)\n  * [ARPA2 Identity](http://donai.arpa2.net) (formerly known as DoNAI)\n    supports\n    [many forms](http://internetwide.org/blog/2015/04/23/id-3-idforms.html)\n    and\n    [several tricks](http://internetwide.org/blog/2015/04/24/id-4-tricks.html)\n  * [ARPA2 Selector](http://donai.arpa2.net/selector.html)\n  * [Access Control](http://donai.arpa2.net/acl.html)\n    with\n    [efficient implementation](http://donai.arpa2.net/acl-impl.html)\n    and a design for\n    [backend protocols](http://idp.arpa2.net/diameter.html).\n\n\n## HTTP SASL handled with WSGI SASL\n\nMost protocols that require authentication make use of the SASL\nprotocol.  Maybe it is better to say that SASL is a kind of\ntunnel that passes through a protocol to exchange authentication\nin a flexible manner.  Most importantly, the mechanisms can be\nplugged into software independent of the protocol that uses SASL\nand one infrastructure can be shared by all the protocols.\n\nHTTP has not had SASL implemented.  We have\n[specified HTTP SASL](https://tools.ietf.org/html/draft-vanrein-httpauth-sasl-00)\nto fix that, and stop the ongoing need for authentication systems\nbuilt into the (rather insecure) JavaScript namespace.\nWe are implementing it with a few Java demonstrations, as well\nas a\n[browser extension](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions)\nwith\n[native messaging](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Native_messaging)\nso we may reuse desktop credentials from a trusted application\noutside the browser.  Yes, that includes one's Kerberos login\nand yes, it enables the use of\n[pseudonyms during realm crossover](http://internetwide.org/blog/2015/04/22/id-2-byoid.html).\n\nWe are hoping to develop a Python WSGI component for the server side.\nIt would sit between the web server and WSGI application, and\ndetect 401 or 407 responses, annotate them with SASL authentication\noption and hope to find a browser that responds to the option of\nSASL authentication.\n\n**Current status:** There is no reasonable support for server-side\nSASL at this moment.  We have asked others to help out with this.\n\n\n## HTTP User handled with WSGI User\n\nAuthentication users are client identities.  Most protocols also recognise\na user on the server side, but HTTP does not.  And if it does, it is\nsupposed to be the same as the client identity, which is thereby forced to\nfall under the server's realm.  We see the resuls everywhere; the web asks\nyou to create an account on many sites you visit.  This is not practical.\n\nWe therefore proposed an extension to HTTP that explicitly indicates the\nUser as part of the resource name space identification on the server or,\nin URI terms, of the authority.  If we move towards peer-to-peer HTTP\nservice, this is going to be\n[helpful for routing requests](https://github.com/tlswg/draft-ietf-tls-esni/issues/206),\nperhaps in combination with encrypted portions in the initial TLS messages.\n\nThis extension to HTTP is straightforward, and it has been implemented\nfor WSGI in the `WSGI_User` class.  This reads the `User` header,\nremoves `%`-escapes, applies a syntax check that defaults to the\n[NAI syntax](https://tools.ietf.org/html/rfc7542#section-2.2)\nwith a default-on option to also allow empty strings, and if it\nmatches, passes the value in a `LOCAL_USER` environment variable\nand will signal the impact on caching by adding a `Vary: User`\nresponse header.\n\nBy default, WSGI-User implements backward compatibility with two\nolder habits:\n\n  * Basic authentication with a username and empty password\n  * Local server convention for `/~username` paths\n\nBoth are a bit cluttered in comparison to the `User` header.\nBasic authentication conflates client and server identities and\ninvalidates intermediate caching; local server conventions do not\npermit inferencing in clients or by their human users (and makes\nthem resort to inconsistent, deductive reasoning).\n\n**Current status:** The code performs well in our test programs.\nPlease try it live and report to us!\n\n\n## Bring Your Own IDentity\n\nWe are considering a BYOID mechanism based on Diameter servers\nhosted under domain names.  This is not a web-only technology,\nso we are not limited to HTTP and can make a choice for a more\ndedicated technology.\n\nDiameter is the sequel to RADIUS; its security is better so it\ncan be used for such realm crossover purposes; indeed, there\nare SRV records in DNS for this kind of purpose.  Diameter's\nsupport for bulk interactions and routing of requests and\nresponses has also improved.  Finally, it is easier to extend\nwith notions such as SASL fields.\n\nWith this in mind, a server receiving a client identity\n`john@example.com` can lookup the Diameter server for `example.com`\nand relay SASL traffic to the realm.  It does not need any local\ncredentials to allow for this to work; all it needs to do is use\nTLS for trust in the link to the backend Diameter server.\n\n\nThis is not the only way in which we think BYOID can be achieved.\nIt will me much more powerful once we get our projects for\nKerberos going:\n[Impromptu Realm Crossover (KXOVER)](http://realm-xover.arpa2.net/kerberos.html)\nand\n[TLS-KDH](http://tls-kdh.arpa2.net).\nThe advantage of these mechanisms is that a crossover relation\nis made between realms, not just for individual queries of\nindividual users.  This makes it extremely efficient for bulk\nuse, but it will also take longer to get established.  It is\nuseful though; TLS-KDH authenticates thousands of times faster\nthan tradition public-key certificates, and it resists\nquantum computers; KXOVER currently cannot match that last point,\nbut will develop in that direction too.\nSASL is the short-term solution that can integrate seemlessly\nwith this same approach.\n\n\n## ARPA2 Access Control\n\nThe ACL setup that we envision is flexible, generic and fast.  More\nimportantly, it is suitable for realm crossover uses.\n\nWe are\n[building libraries](https://github.com/arpa2/libarpa2service)\nto support the general evaluation of this model, along with\n[change subscription](http://steamworks.arpa2.net/pulley.html)\nto keep dependents informed.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arpa2/wsgi-middleware",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "arpa2.wsgi",
    "package_url": "https://pypi.org/project/arpa2.wsgi/",
    "platform": "",
    "project_url": "https://pypi.org/project/arpa2.wsgi/",
    "project_urls": {
      "Homepage": "https://github.com/arpa2/wsgi-middleware"
    },
    "release_url": "https://pypi.org/project/arpa2.wsgi/0.5.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "WSGI Middleware to \"Bring Your Own IDentity\" to a web server",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6619078,
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7187fe38499da24d4bfcd04d301aa20a03af35bfdf379e8b739069b8a726af2a",
          "md5": "14280dee12778613f3f10de5a37573e9",
          "sha256": "9810e5c3835ed86e11e23a91bb2f7408c47ce88a1de9bc8b47a7632adda14428"
        },
        "downloads": -1,
        "filename": "arpa2.wsgi-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "14280dee12778613f3f10de5a37573e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4296,
        "upload_time": "2020-02-12T21:17:41",
        "upload_time_iso_8601": "2020-02-12T21:17:41.961458Z",
        "url": "https://files.pythonhosted.org/packages/71/87/fe38499da24d4bfcd04d301aa20a03af35bfdf379e8b739069b8a726af2a/arpa2.wsgi-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e9eb7e4f9bf19dc52b9c79f9f79560e63b8de1fa0e3a0b0720ab0d8002bb21d",
          "md5": "0e80559401e973c0b7e8da135b3c7e4f",
          "sha256": "b204b7d7f2eea1de5411c0bed91b9943824930b70b21e62615e356dfb7ec68d1"
        },
        "downloads": -1,
        "filename": "arpa2.wsgi-0.4.1.macosx-10.14-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "0e80559401e973c0b7e8da135b3c7e4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16664,
        "upload_time": "2020-02-12T21:29:08",
        "upload_time_iso_8601": "2020-02-12T21:29:08.842686Z",
        "url": "https://files.pythonhosted.org/packages/8e/9e/b7e4f9bf19dc52b9c79f9f79560e63b8de1fa0e3a0b0720ab0d8002bb21d/arpa2.wsgi-0.4.1.macosx-10.14-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a31f89077db92d7f64a6f3efccd050a8448b3636176948c8cb9bd06e897f9f56",
          "md5": "c4f66cb2333ccdc5e0d97b3ca3692d2b",
          "sha256": "3309d14ac8994516e2bcbfc27778a1a0112f9637f32c706fb1be36958e8d5ba7"
        },
        "downloads": -1,
        "filename": "arpa2.wsgi-0.4.2.macosx-10.14-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "c4f66cb2333ccdc5e0d97b3ca3692d2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16663,
        "upload_time": "2020-02-12T21:29:56",
        "upload_time_iso_8601": "2020-02-12T21:29:56.400703Z",
        "url": "https://files.pythonhosted.org/packages/a3/1f/89077db92d7f64a6f3efccd050a8448b3636176948c8cb9bd06e897f9f56/arpa2.wsgi-0.4.2.macosx-10.14-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fb187e0c145ffaa7857f9118272f877751ec8052f319284a0e0b63a819d03b0",
          "md5": "0e319315a16ccb1f39dd63197b54cc50",
          "sha256": "14ae66d5a4640d0c0824b133df3d757611c6edaa6e495c7b5b1d666570052217"
        },
        "downloads": -1,
        "filename": "arpa2.wsgi-0.5.macosx-10.14-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "0e319315a16ccb1f39dd63197b54cc50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16659,
        "upload_time": "2020-02-12T21:30:32",
        "upload_time_iso_8601": "2020-02-12T21:30:32.599759Z",
        "url": "https://files.pythonhosted.org/packages/2f/b1/87e0c145ffaa7857f9118272f877751ec8052f319284a0e0b63a819d03b0/arpa2.wsgi-0.5.macosx-10.14-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0920bc19e5419baa257416dde750b0710e8adb458aeb904356574c05846653c5",
          "md5": "7486e4f7beb7783c533d7d3f8e47a4fb",
          "sha256": "0bdd10e345c2770b8ac54b961ee13145174e248dae07808e310d557f2e2902da"
        },
        "downloads": -1,
        "filename": "arpa2.wsgi-0.5.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "7486e4f7beb7783c533d7d3f8e47a4fb",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 21765,
        "upload_time": "2020-02-12T22:04:06",
        "upload_time_iso_8601": "2020-02-12T22:04:06.136360Z",
        "url": "https://files.pythonhosted.org/packages/09/20/bc19e5419baa257416dde750b0710e8adb458aeb904356574c05846653c5/arpa2.wsgi-0.5.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0eda99699049b30a0bf18d588bc1acbd0041d4df26e788e15db0b5584724b72",
          "md5": "b96a37aabbabf7c8b06206307a12aa5d",
          "sha256": "425aa8ffed77cd25c9d6a4733f5d894c765326e227dcd9800346da2e7625932c"
        },
        "downloads": -1,
        "filename": "arpa2.wsgi-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b96a37aabbabf7c8b06206307a12aa5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14037,
        "upload_time": "2020-02-12T22:04:04",
        "upload_time_iso_8601": "2020-02-12T22:04:04.206047Z",
        "url": "https://files.pythonhosted.org/packages/a0/ed/a99699049b30a0bf18d588bc1acbd0041d4df26e788e15db0b5584724b72/arpa2.wsgi-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1b62032ec1903889a2ec438d0239ee0498fce474e53875d56c5e6c79e561fa4",
          "md5": "07e4ee28b483d90bf3b0efbf45ea3fb9",
          "sha256": "5e594eb5e01dc60a56e5fba8fefdaa8d970c70bbfc8bfab348c9a0a34daf4cb9"
        },
        "downloads": -1,
        "filename": "arpa2.wsgi-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "07e4ee28b483d90bf3b0efbf45ea3fb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4300,
        "upload_time": "2020-02-12T22:04:07",
        "upload_time_iso_8601": "2020-02-12T22:04:07.256985Z",
        "url": "https://files.pythonhosted.org/packages/d1/b6/2032ec1903889a2ec438d0239ee0498fce474e53875d56c5e6c79e561fa4/arpa2.wsgi-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0920bc19e5419baa257416dde750b0710e8adb458aeb904356574c05846653c5",
        "md5": "7486e4f7beb7783c533d7d3f8e47a4fb",
        "sha256": "0bdd10e345c2770b8ac54b961ee13145174e248dae07808e310d557f2e2902da"
      },
      "downloads": -1,
      "filename": "arpa2.wsgi-0.5.1-py3.7.egg",
      "has_sig": false,
      "md5_digest": "7486e4f7beb7783c533d7d3f8e47a4fb",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": null,
      "size": 21765,
      "upload_time": "2020-02-12T22:04:06",
      "upload_time_iso_8601": "2020-02-12T22:04:06.136360Z",
      "url": "https://files.pythonhosted.org/packages/09/20/bc19e5419baa257416dde750b0710e8adb458aeb904356574c05846653c5/arpa2.wsgi-0.5.1-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0eda99699049b30a0bf18d588bc1acbd0041d4df26e788e15db0b5584724b72",
        "md5": "b96a37aabbabf7c8b06206307a12aa5d",
        "sha256": "425aa8ffed77cd25c9d6a4733f5d894c765326e227dcd9800346da2e7625932c"
      },
      "downloads": -1,
      "filename": "arpa2.wsgi-0.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b96a37aabbabf7c8b06206307a12aa5d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14037,
      "upload_time": "2020-02-12T22:04:04",
      "upload_time_iso_8601": "2020-02-12T22:04:04.206047Z",
      "url": "https://files.pythonhosted.org/packages/a0/ed/a99699049b30a0bf18d588bc1acbd0041d4df26e788e15db0b5584724b72/arpa2.wsgi-0.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1b62032ec1903889a2ec438d0239ee0498fce474e53875d56c5e6c79e561fa4",
        "md5": "07e4ee28b483d90bf3b0efbf45ea3fb9",
        "sha256": "5e594eb5e01dc60a56e5fba8fefdaa8d970c70bbfc8bfab348c9a0a34daf4cb9"
      },
      "downloads": -1,
      "filename": "arpa2.wsgi-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "07e4ee28b483d90bf3b0efbf45ea3fb9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4300,
      "upload_time": "2020-02-12T22:04:07",
      "upload_time_iso_8601": "2020-02-12T22:04:07.256985Z",
      "url": "https://files.pythonhosted.org/packages/d1/b6/2032ec1903889a2ec438d0239ee0498fce474e53875d56c5e6c79e561fa4/arpa2.wsgi-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}