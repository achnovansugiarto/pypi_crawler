{
  "info": {
    "author": "Andrew Gibbs-Bravo",
    "author_email": "andrewgbravo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "<div id=\"top\"></div>\n\n<!-- PROJECT LOGO -->\n<br />\n<div align=\"center\">\n  <a href=\"https://github.com/gibbsbravo/DataDelta\">\n    <img src=\"https://github.com/gibbsbravo/DataDelta/blob/master/images/DataDeltaLogo.png?raw=true\" alt=\"Logo\" width=\"200\" height=\"200\">\n  </a>\n  <p align=\"center\" style=\"font-weight: bold; font-style:italic\">\n    The best Python package for comparing two dataframes\n    <br />\n    <a href=\"https://github.com/gibbsbravo/DataDelta\"><strong>Explore the docs »</strong></a>\n    <br />\n    \n  </p>\n</div>\n\n<!-- TABLE OF CONTENTS -->\n<details>\n  <summary>Table of Contents</summary>\n  <ol>\n    <li>\n      <a href=\"#about-the-project\">About The Project</a>\n    </li>\n    <li>\n      <a href=\"#getting-started\">Getting Started</a>\n      <ul>\n        <li><a href=\"#dependencies\">Dependencies</a></li>\n        <li><a href=\"#installation\">Installation</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#usage-examples\">Usage Examples</a></li>\n    <li><a href=\"#contributing\">Contributing</a></li>\n    <li><a href=\"#example-html-report-output\">Example HTML Report Output</a></li>\n    <li><a href=\"#license\">License</a></li>\n    <li><a href=\"#contact\">Contact</a></li>\n  </ol>\n</details>\n\n<!-- ABOUT THE PROJECT -->\n\n## About The Project\n\nDataDelta is a very useful Python package for easily comparing two pandas dataframes for use in data analysis, data engineering, and tracking table changes across time.\n\nDataDelta generates a <a href=\"#example-html-report-output\">report</a> as both a Python dict and HTML file that summarizes the key changes between two dataframes through completing a series of tests (that can also be selected individually). The Python report is intended for use as part of a DevOps / DataOps pipeline for testing to ensure table changes are expected.\n\n<a href=\"https://github.com/gibbsbravo/DataDelta/issues\">Report Bug</a>\n·\n<a href=\"https://github.com/gibbsbravo/DataDelta/issues\">Request Feature</a>\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- GETTING STARTED -->\n\n## Getting Started\n\nDataDelta is easy to install through pip or feel free to clone locally to make changes.\n\n### Dependencies\n\nDataDelta has very few dependencies:\n\n- <a href='https://pandas.pydata.org/'>pandas</a>: _a fast, powerful, flexible and easy to use open source data analysis and manipulation tool_ - DataDelta is built on for comparing dataframes\n- <a href='https://numpy.org/'>numpy</a>: _The fundamental package for scientific computing with Python_ - used for transformations and calculations\n- <a href='https://jinja.palletsprojects.com/en/3.0.x/'>jinja2</a>: _a fast, expressive, extensible templating engine_ - used to generate the HTML report\n- <a href='https://docs.pytest.org/en/6.2.x/'>pytest</a> (optional): _a mature full-featured Python testing tool that helps you write better programs_ - used for testing\n\n### Installation\n\n- Install using Pip through PyPI:\n  ```sh\n  pip install datadelta\n  ```\n\nOR\n\n- Clone the repo locally:\n  ```sh\n  git clone https://github.com/gibbsbravo/DataDelta.git\n  ```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- USAGE EXAMPLES -->\n\n## Usage Examples\n\n- Quick starter code to get summary dataframe changes report:\n\n  ```sh\n  import pandas as pd\n  import datadelta as delta\n\n  old_df = pd.read_csv('MainTestData_old_df.csv') # Add your old dataframe here\n  new_df = pd.read_csv('MainTestData_new_df.csv') # Add your new dataframe here\n  primary_key = 'A' # Set the primary key\n  column_subset = None # Specify the subset of columns of interest or leave None to compare all columns\n\n  # The consolidated_report dictionary will contain the summary changes\n  consolidated_report, record_changes_comparison_df = delta.create_consolidated_report(\n      old_df, new_df, primary_key, column_subset)\n\n  # This will create a report named datadelta_html_report.html in the current working directory containing the summary changes\n  delta.export_html_report(consolidated_report, record_changes_comparison_df,\n                        export_file_name='datadelta_html_report.html',\n                        overwrite_existing_file=False)\n  ```\n\n- Get dataframe summary:\n\n  ```sh\n    import pandas as pd\n    import datadelta as delta\n\n    new_df = pd.read_csv('MainTestData_new_df.csv') # Add your new dataframe here\n\n    # Returns a report summarizing the key attributes and values of a dataframe\n    summary_report = delta.get_df_summary(\n      input_df=new_df, primary_key=primary_key, column_subset=column_subset, max_cols=15)\n  ```\n\n- Get record count changes report:\n\n  ```sh\n    old_df = pd.read_csv('MainTestData_old_df.csv') # Add your old dataframe here\n    new_df = pd.read_csv('MainTestData_new_df.csv') # Add your new dataframe here\n    primary_key = 'A' # Set the primary key\n    column_subset = None # Specify the subset of columns of interest or leave None to compare all columns\n\n    # Returns a report summarizing any changes to the number of records (and composition) between two dataframes\n    record_count_change_report = delta.check_record_count(\n      old_df, new_df, primary_key)\n  ```\n\nOther functions include:\n\n- check_column_names: Returns a report summarizing any changes to column names between two dataframes\n- check_datatypes: Returns a report summarizing any columns with different datatypes\n- check_chg_in_values: Returns a report summarizing any records with changes in values\n- get_records_in_both_tables: Returns the records found in both dataframes\n- get_record_changes_comparison_df: Returns a dataframe comparing any records with changes in values by column\n- export_html_report: Exports an html report of the differences between two dataframes\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- CONTRIBUTING -->\n\n## Contributing\n\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag \"enhancement\".\nDon't forget to give the project a star! Thanks again!\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- Example Report -->\n\n## Example HTML Report Output\n\n![Report Screenshot][report-screenshot]\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- LICENSE -->\n\n## License\n\nDistributed under the GNU General Public License v3 (GPLV3) License. See `LICENSE.txt` for more information.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- CONTACT -->\n\n## Contact\n\nAndrew Gibbs-Bravo - andrewgbravo@gmail.com\n\nProject Link: [https://github.com/gibbsbravo/DataDelta](https://github.com/gibbsbravo/DataDelta)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- MARKDOWN LINKS & IMAGES -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n\n[contributors-shield]: https://img.shields.io/github/contributors/gibbsbravo/DataDelta.svg?style=for-the-badge\n[contributors-url]: https://github.com/gibbsbravo/DataDelta/graphs/contributors\n[forks-shield]: https://img.shields.io/github/forks/gibbsbravo/DataDelta.svg?style=for-the-badge\n[forks-url]: https://github.com/gibbsbravo/DataDelta/network/members\n[stars-shield]: https://img.shields.io/github/stars/gibbsbravo/DataDelta.svg?style=for-the-badge\n[stars-url]: https://github.com/gibbsbravo/DataDelta/stargazers\n[issues-shield]: https://img.shields.io/github/issues/gibbsbravo/DataDelta.svg?style=for-the-badge\n[issues-url]: https://github.com/gibbsbravo/DataDelta/issues\n[license-shield]: https://img.shields.io/github/license/gibbsbravo/DataDelta.svg?style=for-the-badge\n[license-url]: https://github.com/gibbsbravo/DataDelta/blob/master/LICENSE.txt\n[linkedin-shield]: https://img.shields.io/badge/-LinkedIn-black.svg?style=for-the-badge&logo=linkedin&colorB=555\n[report-screenshot]: https://github.com/gibbsbravo/DataDelta/blob/master/images/DatasetComparisonReport.png?raw=true\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gibbsbravo/DataDelta",
    "keywords": "python,dataops,devops,data,data analysis",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datadelta",
    "package_url": "https://pypi.org/project/datadelta/",
    "platform": "",
    "project_url": "https://pypi.org/project/datadelta/",
    "project_urls": {
      "Homepage": "https://github.com/gibbsbravo/DataDelta"
    },
    "release_url": "https://pypi.org/project/datadelta/0.0.2/",
    "requires_dist": [
      "pandas (>=1.0.0)",
      "numpy",
      "jinja2",
      "pytest ; extra == 'dev'",
      "check-manifest ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "The best Python package for comparing two dataframes",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12434899,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc08b63cb037082488bf93b73581e5f7c10d1944beb700305fb7f0bd5bf019c1",
          "md5": "0f42a2c1f9f11ff33c7f17b8de62a9b6",
          "sha256": "f4094d6099b4e3ba0fa055121b77964dc8bbd5055e1779092ebd4a8d9b57fa33"
        },
        "downloads": -1,
        "filename": "datadelta-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f42a2c1f9f11ff33c7f17b8de62a9b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34178,
        "upload_time": "2021-12-22T17:48:43",
        "upload_time_iso_8601": "2021-12-22T17:48:43.292313Z",
        "url": "https://files.pythonhosted.org/packages/fc/08/b63cb037082488bf93b73581e5f7c10d1944beb700305fb7f0bd5bf019c1/datadelta-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c94c0e561277ac3b2afc4e0c4dc9b30c015b7d14633744efb88449d0d832a14",
          "md5": "d7afb3872503e3b52f222b55064e8015",
          "sha256": "6dc98673c2354c94238dd40d714dbaf3a975c69cf9b1a93eda4de2ec22dca713"
        },
        "downloads": -1,
        "filename": "datadelta-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d7afb3872503e3b52f222b55064e8015",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 293265,
        "upload_time": "2021-12-22T17:48:45",
        "upload_time_iso_8601": "2021-12-22T17:48:45.644119Z",
        "url": "https://files.pythonhosted.org/packages/4c/94/c0e561277ac3b2afc4e0c4dc9b30c015b7d14633744efb88449d0d832a14/datadelta-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c048a800c80548a7bfb416d2f99cc9f2725f5e9c4e63c2568f50f7a8b4300436",
          "md5": "b1472b9b2f36d0267247e1800f154f68",
          "sha256": "3ce225b842fcd7fa83188d9cc029c121a3f2976ac3f37b32514819d2f4226255"
        },
        "downloads": -1,
        "filename": "datadelta-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1472b9b2f36d0267247e1800f154f68",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34699,
        "upload_time": "2021-12-29T21:44:32",
        "upload_time_iso_8601": "2021-12-29T21:44:32.391463Z",
        "url": "https://files.pythonhosted.org/packages/c0/48/a800c80548a7bfb416d2f99cc9f2725f5e9c4e63c2568f50f7a8b4300436/datadelta-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fa9ba52a38bd173bd7e966469b83ddd4e9fd824cf58713f965f7b7f8c7dc688",
          "md5": "43df38669f9c479b5583ab4a59a31932",
          "sha256": "afc6e92af9dd18933fa8695fe067d405b7b9fee728dd57851babc923b908d003"
        },
        "downloads": -1,
        "filename": "datadelta-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "43df38669f9c479b5583ab4a59a31932",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 293802,
        "upload_time": "2021-12-29T21:44:34",
        "upload_time_iso_8601": "2021-12-29T21:44:34.105893Z",
        "url": "https://files.pythonhosted.org/packages/9f/a9/ba52a38bd173bd7e966469b83ddd4e9fd824cf58713f965f7b7f8c7dc688/datadelta-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c048a800c80548a7bfb416d2f99cc9f2725f5e9c4e63c2568f50f7a8b4300436",
        "md5": "b1472b9b2f36d0267247e1800f154f68",
        "sha256": "3ce225b842fcd7fa83188d9cc029c121a3f2976ac3f37b32514819d2f4226255"
      },
      "downloads": -1,
      "filename": "datadelta-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1472b9b2f36d0267247e1800f154f68",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 34699,
      "upload_time": "2021-12-29T21:44:32",
      "upload_time_iso_8601": "2021-12-29T21:44:32.391463Z",
      "url": "https://files.pythonhosted.org/packages/c0/48/a800c80548a7bfb416d2f99cc9f2725f5e9c4e63c2568f50f7a8b4300436/datadelta-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9fa9ba52a38bd173bd7e966469b83ddd4e9fd824cf58713f965f7b7f8c7dc688",
        "md5": "43df38669f9c479b5583ab4a59a31932",
        "sha256": "afc6e92af9dd18933fa8695fe067d405b7b9fee728dd57851babc923b908d003"
      },
      "downloads": -1,
      "filename": "datadelta-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "43df38669f9c479b5583ab4a59a31932",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 293802,
      "upload_time": "2021-12-29T21:44:34",
      "upload_time_iso_8601": "2021-12-29T21:44:34.105893Z",
      "url": "https://files.pythonhosted.org/packages/9f/a9/ba52a38bd173bd7e966469b83ddd4e9fd824cf58713f965f7b7f8c7dc688/datadelta-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}