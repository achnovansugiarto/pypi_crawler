{
  "info": {
    "author": "Uria Mor, Rafael Valdes Mas, Yotam Cohen, Haim Avron",
    "author_email": "uriamo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# mprod_package\n\n[![Build and test](https://github.com/UriaMorP/mprod_package/actions/workflows/build.yaml/badge.svg)](https://github.com/UriaMorP/mprod_package/actions/workflows/build.yaml)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mprod-package)\n[![Documentation Status](https://readthedocs.org/projects/mprod-package/badge/?version=latest)](https://mprod-package.readthedocs.io/en/latest/?badge=latest)\n![Conda](https://img.shields.io/conda/dn/conda-forge/mprod-package?label=downloads%28conda-forge%29)\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/mprod-package.svg)](https://anaconda.org/conda-forge/mprod-package)\n[![Pypi Downloads](https://img.shields.io/pypi/dm/mprod-package.svg?label=Pypi%20downloads)](\nhttps://pypi.org/project/mprod-package/)\n\n\nSoftware implementation for tensor-tensor m-product framework [[1]](#1).\nThe library currently contains tubal QR and tSVDM decompositions, and the TCAM method for dimensionality reduction.\n\n\n<p align=\"center\">\n  <img width=\"80%\",height=\"80%\",  src=\"https://user-images.githubusercontent.com/16097812/143407367-36c30aa4-da1f-4a8b-93db-470114486064.png\" />\n</p>\n\n## Installation \n\n### Conda\nThe `mprod-package` is hosted in [conda-forge](https://conda-forge.org/) channel. \n\n```\nconda install -c conda-forge mprod-package\n```\n\n### pip\n```\npip install mprod-package \n```\nSee `mprod-package`s [pypi entry](https://pypi.org/project/mprod-package/)\n\n### From source \n\n* Make sure that all dependencies listed in `requirements.txt` file are installed . \n* Clone the repository, then from the package directory, run\n```\npip install -e .\n```\n\nThe dependencies in `requirements.txt` are stated with exact versions used for locally test `mprod-package`, these packages were obtained from conda-forge channel.\n\n```python\nimport pandas as pd\n\nfile_path = \"https://raw.githubusercontent.com/UriaMorP/\" \\\n            \"tcam_analysis_notebooks/main/Schirmer2018/Schirmer2018.tsv\"\n\ndata_table = pd.read_csv(file_path, index_col=[0,1], sep=\"\\t\"\n                       , dtype={'Week':int})\ndata_table = data_table.loc[:,data_table.median() > 1e-7]\ndata_table.rename(columns= {k:f\"Fature_{e+1}\" for e,k in enumerate(data_table.columns)}, inplace=True) \ndata_table.shape\n\n%matplotlib inline\n```\n\n## How to use `TCAM`\n\nGiven with a `pandas.DataFrame` of the data as below, with 2-level index, where the first level as subject identifier (mouse, human, image) and the second level of the index denotes sample repetition identity, in this case - the week during experiment, in which the sample was collected.\n\n\n```python\ndisplay(data_table.iloc[:2,:2].round(3))\n\n```\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Fature_1</th>\n      <th>Fature_2</th>\n    </tr>\n    <tr>\n      <th>SubjectID</th>\n      <th>Week</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">P_10343</th>\n      <th>0</th>\n      <td>0.001</td>\n      <td>0.023</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.020</td>\n      <td>0.000</td>\n    </tr>\n  </tbody>\n</table>\n\n\n### Shape the data into tensor\n\nWe use the `table2tensor` helper function to transform a 2-level (multi)-indexed `pandas.DataFrame` into a 3rd order tensor. \n\n\n```python\nfrom mprod import table2tensor\ndata_tensor, map1, map3 =  table2tensor(data_table)\n```\n\nTo inspect `table2tensor` operation, we use the resulting *\\\"mode mappings\\\"*; `map1` and `map3`  associating each line in the input table to it's coordinates in the resulting tensor.\nIn the following example, we use the mappings to extract the tensor coordinates corresponding to subject P\\_7218's sample from week 52\n\n\n```python\n(data_tensor[map1['P_7218'],:, map3[52]] == data_table.loc[('P_7218',52)].values).all() # True\n```\n\n### Applying `TCAM`\n\n```python\nfrom mprod.dimensionality_reduction import TCAM\n\ntca = TCAM()\ntca_trans = tca.fit_transform(data_tensor)\n```\n\nAnd that's all there is to it... Really!\n\nNote how similar the code above to what we would have written if we were to apply scikit-lean's `PCA` to the initial tabular data:\n\n\n```python\nfrom sklearn.decomposition import PCA\n\npca = PCA()\npca_trans = pca.fit_transform(data_table)\n```\n\nThe similarity between `TCAM`s interface to that of scikit-learn's `PCA` is not coincidental.\nWe did our best in order to make `TCAM` as familiar as possible, and allow for high compatibility of `TCAM` with the existing Python ML framework.\n\n### Accessing properties of the transformation\n\n\n```python\ntca_loadings = tca.mode2_loadings  # Obtain TCAM loadings\npca_loadings = pca.components_     # Obtain PCA loadings\n\ntca_var = tca.explained_variance_ratio_*100 # % explained variation per TCA factor\npca_var = pca.explained_variance_ratio_*100 # % explained variation per TCA factor\n\ntca_df = pd.DataFrame(tca_trans)   # Cast TCA scores to dataframe\ntca_df.rename(index = dict(map(reversed, map1.items()))\n              , inplace = True)    # use the inverse of map1 to denote each row \n                                   # of the TCAM scores with it's subject ID\n    \npca_df = pd.DataFrame(pca_trans)   # Cast PCA scores to dataframe\npca_df.index = data_table.index    # anotate PC scores with sample names\n```\n\n\n\n\n\n## References\n<a id=\"1\">[1]</a> \nMisha E. Kilmer, Lior Horesh, Haim Avron, and Elizabeth Newman.  Tensor-tensor algebra for optimal representation and compression of multiway data. Proceedings of the National Academy of Sciences, 118(28):e2015851118, jul 2021.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/UriaMorP/mprod_package",
    "keywords": "Tensor,multi way,omics,longitudinal,factorization,analysis,TCA,TCAM,PCA,M product,tensor tensor product,tSVD,tSVDM,tensor decomposition",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mprod-package",
    "package_url": "https://pypi.org/project/mprod-package/",
    "platform": null,
    "project_url": "https://pypi.org/project/mprod-package/",
    "project_urls": {
      "Homepage": "https://github.com/UriaMorP/mprod_package"
    },
    "release_url": "https://pypi.org/project/mprod-package/0.0.4a1/",
    "requires_dist": null,
    "requires_python": ">=3.6.8",
    "summary": "Software implementation for tensor-tensor m-product framework",
    "version": "0.0.4a1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14478919,
  "releases": {
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3ee88456260acc6b4306c3cd471bd0dc7f5fee088ba4e5f5a085e0195a0be19",
          "md5": "99ce01f46289c60928cead7b4be8d24a",
          "sha256": "c14591d7e96f8690c96246f544de3471399ff2b41c92f3ce05181477fbe13a98"
        },
        "downloads": -1,
        "filename": "mprod_package-0.0.1a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "99ce01f46289c60928cead7b4be8d24a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.8",
        "size": 13828,
        "upload_time": "2021-11-26T19:05:53",
        "upload_time_iso_8601": "2021-11-26T19:05:53.465623Z",
        "url": "https://files.pythonhosted.org/packages/d3/ee/88456260acc6b4306c3cd471bd0dc7f5fee088ba4e5f5a085e0195a0be19/mprod_package-0.0.1a1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "faulty setup"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ecbe7baa7f1bb7e3864cc303ff18440aeca7ae04e0435e9f080e0c2a51f9afa",
          "md5": "8ae9c8b96e8b93c5f035893730a4062e",
          "sha256": "7b2c969d98bb8e266f168a9ac5ceaba80127d87890162eb0f5f4f48c3f5eace7"
        },
        "downloads": -1,
        "filename": "mprod-package-0.0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "8ae9c8b96e8b93c5f035893730a4062e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.8",
        "size": 10478,
        "upload_time": "2021-11-26T19:05:54",
        "upload_time_iso_8601": "2021-11-26T19:05:54.954813Z",
        "url": "https://files.pythonhosted.org/packages/0e/cb/e7baa7f1bb7e3864cc303ff18440aeca7ae04e0435e9f080e0c2a51f9afa/mprod-package-0.0.1a1.tar.gz",
        "yanked": true,
        "yanked_reason": "faulty setup"
      }
    ],
    "0.0.2a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1433f3c63f2f3271085f33fe13dd7278a8dd81d5b655c9f3a2eef96fd28a6edc",
          "md5": "37c0fc8b61bf065a2c2b305ddc3fba37",
          "sha256": "287556791ee2895c16cd41a72ddd1ce239af7fb31f13ad8c58fd3f8c8f6ac29f"
        },
        "downloads": -1,
        "filename": "mprod_package-0.0.2a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37c0fc8b61bf065a2c2b305ddc3fba37",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.8",
        "size": 25512,
        "upload_time": "2021-12-01T18:21:44",
        "upload_time_iso_8601": "2021-12-01T18:21:44.701971Z",
        "url": "https://files.pythonhosted.org/packages/14/33/f3c63f2f3271085f33fe13dd7278a8dd81d5b655c9f3a2eef96fd28a6edc/mprod_package-0.0.2a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b90f3742983620df6ad7f0107362b0c145007470e5afb38a5eafc92e1962330",
          "md5": "ae540754a9ea1174bba9282a66b16163",
          "sha256": "d8484dcda0db5826adea2f626dc266c8a8e115e2517ef0b378e3761e890993e9"
        },
        "downloads": -1,
        "filename": "mprod-package-0.0.2a1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae540754a9ea1174bba9282a66b16163",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.8",
        "size": 18194,
        "upload_time": "2021-12-01T18:21:46",
        "upload_time_iso_8601": "2021-12-01T18:21:46.920950Z",
        "url": "https://files.pythonhosted.org/packages/9b/90/f3742983620df6ad7f0107362b0c145007470e5afb38a5eafc92e1962330/mprod-package-0.0.2a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b30ff80a176113ed77ed69901ee77438784232e0eae676514328c5ccae7c9c1d",
          "md5": "805a6dc8e13cb20f32740d9660ef9dba",
          "sha256": "7d4951db0655644d43f9ca1737d14e96e7944ba9cd71ba75139a63d3fc5f3d65"
        },
        "downloads": -1,
        "filename": "mprod_package-0.0.3a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "805a6dc8e13cb20f32740d9660ef9dba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.8",
        "size": 27642,
        "upload_time": "2021-12-28T20:10:56",
        "upload_time_iso_8601": "2021-12-28T20:10:56.064215Z",
        "url": "https://files.pythonhosted.org/packages/b3/0f/f80a176113ed77ed69901ee77438784232e0eae676514328c5ccae7c9c1d/mprod_package-0.0.3a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6978572e9919a0623fb1cb1b0b26951991ef3c3f968efb0a56a9850ca84b24cf",
          "md5": "6c05e9b5768d595beef330deab6a3bcd",
          "sha256": "4e3374fd95c4776f173380b0a6acb5b16c68b942114758cb74798dc693089d00"
        },
        "downloads": -1,
        "filename": "mprod-package-0.0.3a1.tar.gz",
        "has_sig": false,
        "md5_digest": "6c05e9b5768d595beef330deab6a3bcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.8",
        "size": 21911,
        "upload_time": "2021-12-28T20:10:58",
        "upload_time_iso_8601": "2021-12-28T20:10:58.374909Z",
        "url": "https://files.pythonhosted.org/packages/69/78/572e9919a0623fb1cb1b0b26951991ef3c3f968efb0a56a9850ca84b24cf/mprod-package-0.0.3a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77120dffaa4221a32c66229d0298f3377c7bd43fad529acebafad176e7cf4642",
          "md5": "79a292d2d2ca2c8c2f5bb89e80590d44",
          "sha256": "eebdb337642714ef13bc19a4e524612bf3dfc4b0712398ab5a2a417bf8d88364"
        },
        "downloads": -1,
        "filename": "mprod-package-0.0.4a1.tar.gz",
        "has_sig": false,
        "md5_digest": "79a292d2d2ca2c8c2f5bb89e80590d44",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.8",
        "size": 21946,
        "upload_time": "2022-07-19T08:33:39",
        "upload_time_iso_8601": "2022-07-19T08:33:39.555575Z",
        "url": "https://files.pythonhosted.org/packages/77/12/0dffaa4221a32c66229d0298f3377c7bd43fad529acebafad176e7cf4642/mprod-package-0.0.4a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77120dffaa4221a32c66229d0298f3377c7bd43fad529acebafad176e7cf4642",
        "md5": "79a292d2d2ca2c8c2f5bb89e80590d44",
        "sha256": "eebdb337642714ef13bc19a4e524612bf3dfc4b0712398ab5a2a417bf8d88364"
      },
      "downloads": -1,
      "filename": "mprod-package-0.0.4a1.tar.gz",
      "has_sig": false,
      "md5_digest": "79a292d2d2ca2c8c2f5bb89e80590d44",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.8",
      "size": 21946,
      "upload_time": "2022-07-19T08:33:39",
      "upload_time_iso_8601": "2022-07-19T08:33:39.555575Z",
      "url": "https://files.pythonhosted.org/packages/77/12/0dffaa4221a32c66229d0298f3377c7bd43fad529acebafad176e7cf4642/mprod-package-0.0.4a1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}