{
  "info": {
    "author": "Renato Fabbri",
    "author_email": "renato.fabbri@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Religion",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Topic :: Artistic Software",
      "Topic :: Documentation",
      "Topic :: Documentation :: Sphinx",
      "Topic :: Education",
      "Topic :: Education :: Computer Aided Instruction (CAI)",
      "Topic :: Education :: Testing",
      "Topic :: Games/Entertainment",
      "Topic :: Multimedia",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Multimedia :: Graphics :: Editors",
      "Topic :: Multimedia :: Graphics :: Presentation",
      "Topic :: Multimedia :: Graphics :: Viewers",
      "Topic :: Multimedia :: Sound/Audio :: Sound Synthesis",
      "Topic :: Multimedia :: Sound/Audio :: Speech",
      "Topic :: Other/Nonlisted Topic",
      "Topic :: Printing",
      "Topic :: Religion",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Text Editors",
      "Topic :: Text Editors :: Documentation",
      "Topic :: Text Editors :: Integrated Development Environments (IDE)",
      "Topic :: Text Editors :: Text Processing",
      "Topic :: Text Editors :: Word Processors",
      "Topic :: Text Processing",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: Fonts",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Linguistic",
      "Topic :: Utilities"
    ],
    "description": "## Python and Vim utilities for the Toki Pona minimalist conlang\n\nThis repository holds both:\n- the tokipona Python package (with tools to deal with Toki Pona); and\n- the tokipona Vim plugin (mainly with syntax file and some advanced capabilities for coloring\n\nThey might be used and installed independently,\nalthough:\n- the Python package, among other things, synthesizes the Vim syntax files;\n- the Vim plugin, among other things, is proposed to also bring the\n  tokipona Python package into the Vim editor.\n\n### Table of Contents\nItems / Sections / Headers:\n  * [Overall description and installation](#overall-description-and-installation)\n    + [Of the tokipona Python package](#of-the-tokipona-python-package)\n  * [Usage example of the Python package](#usage-example-of-the-python-package)\n    + [Of the tokipona Vim plugin](#of-the-tokipona-vim-plugin)\n      - [Screenshots of the syntax highlighting (in Vim)](#screenshots-of-the-syntax-highlighting--in-vim-)\n  * [deployment](#deployment)\n    + [of Python package to PyPI](#of-python-package-to-pypi)\n    + [of the Vim plugin to vim.org](#of-the-vim-plugin-to-vimorg)\n  * [TODO:](#todo-)\n  * [Further notes](#further-notes)\n  * [Most important links](#most-important-links)\n\n### Overall description and installation\nFor the Python package and the Vim plugin.\n\n#### Of the tokipona Python package\nThis package contains routines to:\n- analyze the official Toki Pona vocabulary\n- synthesize phrases. sentences, paragraphs, short stories and poems in Toki Pona\n- the achievement of (very preliminary) Toki Pona wordnets\n- synthesize Vim syntax files for the Toki Pona language\n- maybe something more\n\nSuch facilities are implemented in accordance with the [Toki Pona article],\nof which the Latex and PDF files are in the article/ directory\nof this repository (ttm/tokipona).\n\nInstall with:\n\n    $ pip install tokipona\nor\n\n    $ python setup.py tokipona\n\nFor customization ease, hacking and debugging, clone the repository and install with 'pip3 install -e':\n\n    $ git clone https://github.com/ttm/tokipona.git\n    $ pip3 install -e <path_to_repo>\n\nThis install method is especially useful when reloading the modified module in subsequent runs.\n\n### Usage example of the Python package\n\n\n```python\n# to import changes made in local package files,\n# e.g. if installed with pip3 install -e ~/repos/tokipona/\nimport sys\nkeys=tuple(sys.modules.keys())\nfor key in keys:\n    if \"tokipona\" in key:\n        del sys.modules[key]\n\n### Basic usage\nimport tokipona as t\n\n### the main functionalities are:\n\n# 1 - make a syntax highlighting file for Vim\nsh = t.syntax()\n\n# 2 - analyze the official Toki Pona vocabulary\nst = t.stats()\n\n# 3 - obtain (very preliminary) Toki Pona wordnet synsets\nwn = t.wordnet()\n\n# 4 - synthesize texts in Toki Pona\nsy = t.synthesis()\n\nprint( sy.createParagraph() )\nprint( sy.createPhrase() )\nprint( sy.createPoem() )\nprint( sy.createSentence() )\n\n# sh, st, wn, sy have objects related to each of the\n# functions as further described in this README.\n\n# 5 - further routines and variables in utils:\nv, c = t.utils.vowels, t.utils.consonants\nstr_ = \"TP vowels are: {}; TP consonants are: {}\".format(v, c)\nprint(str_)\n\npossible_words = t.utils.allTokiPonaPossibleWords(n=2)\nprint(\"all possible words with two syllables given the TP rules are {}\".format(possible_words))\n\n##############################################\n### check files in tokipona/\n# for many other functionalities and convenient variables.\n\n# Tweak at will.\n##############################################\n\n```\n\n\n#### Of the tokipona Vim plugin\nTo avoid redundancy upkeep, please visit\nthe [Toki Pona Vim plugin] page for an overview of the\nimplemented facilities.\n\nTo install it by hand, one might copy:\n- the plugin/ directory to ~/.vim/plugin/\n- the syntax/ directory to ~/.vim/syntax/\n\nor clone the repository to a directory in your :echo &runtimepath.\nFor example:\n\n  $ git clone https://github.com/ttm/tokipona ~/.vim/\n\nIf you change the syntax file,\na file with highlighted text (in Toki Pona)\nwill have the highlighting updated upon\nreload (:e<CR> in Vim).\nFor more information in using the plugin,\nsee the vim.org page for the [Toki Pona Vim plugin].\n\nAlso, check the [Toki Pona article] because it is a carefully built\ndocument that contextualizes and describes the routines available\nin this repository.\n\n##### Screenshots of the syntax highlighting (in Vim)\n\nA simple text:\n![Toki Pona text highlighted in Vim](https://imgur.com/xTLGVjE.jpg)\n\nSome texts with another color scheme:\n![Some Toki Pona texts highlighted in Vim](https://imgur.com/6OGc5bT.jpg)\n\nAnd yet in another color scheme:\n![Some Toki Pona texts highlighted in Vim (in a dfferent color scheme)](https://imgur.com/fj4hQkt.jpg)\n\nAnd an HTML export (through :TOhtml Vim command)\nof the syntax coloring:\n![And an HTML export (through :TOhtml Vim command) of the syntax coloring:](https://imgur.com/v7a3hME.jpg)\n\n### deployment\n\n#### of Python package to PyPI\nThis package Ñ–s delivered by running:\n  $ python3 setup.py sdist\n  $ python3 setup.py bdist\\_wheel\n  $ twine upload dist/\n\nMaybe use \"python setup.py sdist upload -r pypi\" ?\n\n#### of the Vim plugin to vim.org\nFor making the Vimball for sharing this plugins and derivatives,\ncheck the instructions in file ./tokiponaVimballInfo.txt\n\n### TODO:\nFor now:\n- check issues in this repository\n- check the vim.org page for the [Toki Pona Vim plugin].\n\n### Further notes\nThis Python package is intended to help in answering these (types of) questions:\n- What are the most usual letters, in the beginning and end,and sequences of letters?\n- What is the distribution of word sizes, smallest and largest words?\n- What is the basic statistics obtained if one scrapes toki pona sites?\n\n### Most important links\n\n[Toki Pona article]: https://arxiv.org/abs/1712.09359\n[Toki Pona Vim plugin]: https://vim.sourceforge.io/scripts/script.php?script_id=5656\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ttm/tokipona",
    "keywords": "toki pona,linguistics,conlang,constructed language,planned language,wordnet,toki pona wordnet,syntax highlighting,vocabulary,vocabulary analysis,text synthesis,artificial poems,color schemes,color,Vim,vim,vi,Vi,physics,synthesis,psychophysics,symmetry,toolbox,art,artistic creation,synthesizer,PCM,audio,sound,multimedia,speech,singing,speech synthesis,numpy,sonic art",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tokipona",
    "package_url": "https://pypi.org/project/tokipona/",
    "platform": "",
    "project_url": "https://pypi.org/project/tokipona/",
    "project_urls": {
      "Homepage": "https://github.com/ttm/tokipona"
    },
    "release_url": "https://pypi.org/project/tokipona/0.1b0/",
    "requires_dist": [
      "numpy",
      "scipy",
      "nltk",
      "percolation"
    ],
    "requires_python": "",
    "summary": "A package for dealing with toki pona: vim syntax highlighting, tokipona wordnets, analysis of the vocabulary, synthesis of texts",
    "version": "0.1b0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3575469,
  "releases": {
    "0.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1509e1f9bbebe4f09165eb169480ecc37022f8621de130b72f06a3f055c5d3a7",
          "md5": "13686637396c1e29b877a19dac5ec8bf",
          "sha256": "23f95cfb86bbfe50ef3295b3db334e0dde6f0002afb43cc0109e2be1c9d583fd"
        },
        "downloads": -1,
        "filename": "tokipona-0.1b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13686637396c1e29b877a19dac5ec8bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21515,
        "upload_time": "2018-02-12T16:37:54",
        "upload_time_iso_8601": "2018-02-12T16:37:54.086885Z",
        "url": "https://files.pythonhosted.org/packages/15/09/e1f9bbebe4f09165eb169480ecc37022f8621de130b72f06a3f055c5d3a7/tokipona-0.1b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3945a59ec07a83bf108066be8d461570479580e598d2159a29e949b605290e87",
          "md5": "3b28b4012c97bd6500d0a135533be6fd",
          "sha256": "48593f639e1425f94113eb0befb9541b6966b830b38bfed5ec77aae016e3e211"
        },
        "downloads": -1,
        "filename": "tokipona-0.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "3b28b4012c97bd6500d0a135533be6fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14931,
        "upload_time": "2018-02-12T16:37:56",
        "upload_time_iso_8601": "2018-02-12T16:37:56.527584Z",
        "url": "https://files.pythonhosted.org/packages/39/45/a59ec07a83bf108066be8d461570479580e598d2159a29e949b605290e87/tokipona-0.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1509e1f9bbebe4f09165eb169480ecc37022f8621de130b72f06a3f055c5d3a7",
        "md5": "13686637396c1e29b877a19dac5ec8bf",
        "sha256": "23f95cfb86bbfe50ef3295b3db334e0dde6f0002afb43cc0109e2be1c9d583fd"
      },
      "downloads": -1,
      "filename": "tokipona-0.1b0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "13686637396c1e29b877a19dac5ec8bf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21515,
      "upload_time": "2018-02-12T16:37:54",
      "upload_time_iso_8601": "2018-02-12T16:37:54.086885Z",
      "url": "https://files.pythonhosted.org/packages/15/09/e1f9bbebe4f09165eb169480ecc37022f8621de130b72f06a3f055c5d3a7/tokipona-0.1b0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3945a59ec07a83bf108066be8d461570479580e598d2159a29e949b605290e87",
        "md5": "3b28b4012c97bd6500d0a135533be6fd",
        "sha256": "48593f639e1425f94113eb0befb9541b6966b830b38bfed5ec77aae016e3e211"
      },
      "downloads": -1,
      "filename": "tokipona-0.1b0.tar.gz",
      "has_sig": false,
      "md5_digest": "3b28b4012c97bd6500d0a135533be6fd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14931,
      "upload_time": "2018-02-12T16:37:56",
      "upload_time_iso_8601": "2018-02-12T16:37:56.527584Z",
      "url": "https://files.pythonhosted.org/packages/39/45/a59ec07a83bf108066be8d461570479580e598d2159a29e949b605290e87/tokipona-0.1b0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}