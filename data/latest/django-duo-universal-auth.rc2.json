{
  "info": {
    "author": "Adam Angle",
    "author_email": "contact@adamangle.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# django-duo-universal-auth\n\nA lightweight middleware application that adds a layer on top of any number of existing authentication backends, enabling 2FA with the user's Duo account using the [Universal Prompt](https://guide.duo.com/universal-prompt) after signing in with your Django application.\n\n**Note:** In order to interface this middleware with Duo, you must create a new [Duo Web SDK](https://duo.com/docs/duoweb) application from within your organization's Duo Admin Portal and enable the \"Show new Universal Prompt\" setting. You will acquire a Client ID, Client Secret, and API Hostname, of which you will include in your `settings.py` file in the format listed below. It is strongly recommended not to hardcode these values in the settings file itself.\n\nFrom [Duo's documentation for protecting applications](https://duo.com/docs/protecting-applications):\n > **Treat your Secret key or Client ID like a password**\nThe security of your Duo application is tied to the security of your Secret key (skey) or Client secret (client_secret). Secure it as you would any sensitive credential. Don't share it with unauthorized individuals or email it to anyone under any circumstances!\n\n## Installation\n\nTo install the middleware application, use the following `pip` command (or equivalent for your package manager application):\n\n```sh\npip install django-duo-universal-auth\n```\n\n### Sample Configuration (in your `settings.py` file)\n\nFirst, add the package to your `INSTALLED_APPS` list variable:\n\n```python\nINSTALLED_APPS = [\n    # ...\n    'duo_universal_auth', # Add this!\n]\n```\n\nNext, add the path for the middleware application to the `MIDDLEWARE` list variable:\n\n```python\nMIDDLEWARE = [\n    # ...\n    'duo_universal_auth.middleware.DuoUniversalAuthMiddleware', # Add this!\n]\n```\n\nThen, add a new `DUO_UNIVERSAL_AUTH` configuration variable:\n\n```python\nDUO_UNIVERSAL_AUTH = {\n    'MAIN': {\n        'DUO_HOST': '<api_hostname>',\n        'CLIENT_ID': '<client_id>',\n        'CLIENT_SECRET': '<client_secret>',\n        'AUTH_BACKENDS': [\n            'django.contrib.auth.backends.ModelBackend',\n        ],\n        'FAIL_ACTION': 'CLOSED'\n    }\n}\n```\n\n## Duo API Callback Setup\n\n**Note:** This step allows the application to communicate with Duo. If the view is not registered, the application will raise a `NoReverseMatch` error upon starting the Duo authentication flow.\n\nTo create the callback for the API to communicate with, you must add an entry to your `urlpatterns` variable from within your application's `urls.py` file (with any prepending path you choose):\n\n```python\nfrom django.urls import path, include\n\nurlpatterns = [\n    # ...\n    path('duo/', include('duo_universal_auth.urls')), # Add this!\n]\n```\n\n## Configuration Docs\n\nConfigurations for each Duo application are specified within individual dictionary objects inside a parent `DUO_UNIVERSAL_AUTH` dictionary each containing the following values:\n\n#### `DUO_HOST`\n##### Required: True\n\nRepresents the API Hostname for your organization's Duo API.\n```python\n'DUO_HOST': 'api-XXXXXXX.duosecurity.com'\n```\n\n#### `CLIENT_ID`\n##### Required: True\n\nRepresents the Client ID for your application registered from within the Duo Admin Portal.\n```python\n'CLIENT_ID': 'DIXXXXXXXXXXXXXXXXXX'\n```\n\n#### `CLIENT_SECRET`\n##### Required: True\n\nRepresents the Client Secret for your application registered from within the Duo Admin Portal.\n```python\n'CLIENT_SECRET': 'deadbeefdeadbeefdeadbeefdeadbeefdeadbeef'\n```\n\n#### `AUTH_BACKENDS`\n##### Required: True\n\nA list of authentication backends that the middleware will work with for the specific application. The Duo authentication middleware will only execute upon a successful authentication result from one of these backends.\n```python\n'AUTH_BACKENDS': [\n    'django.contrib.auth.backends.ModelBackend',\n]\n```\n\n#### `FAIL_ACTION`\n##### Required: False (Default: `'CLOSED'`)\n\nHow the middleware should respond should the Duo authentication server be unavailable (from failing the preliminary health check).\n\n - `'CLOSED'`: Log out the user and return to the login page, disallowing any authentication while Duo servers are unavailable.\n - `'OPEN'`: Temporarily bypass Duo authentication until the Duo servers become available upon a future authentication attempt.\n```python\n'FAIL_ACTION': 'CLOSED'\n```\n\n#### `USERNAME_REMAP_FUNCTION`\n##### Required: False\n\nAn optional one-argument function that takes in the current Django [`HttpRequest`](https://docs.djangoproject.com/en/4.0/ref/request-response/#httprequest-objects) object and returns the current authenticated user's username to send for Duo authentication. If unspecified, the username from [`HttpRequest.user`](https://docs.djangoproject.com/en/4.0/ref/request-response/#django.http.HttpRequest.user) will be used.\n\n```python\n'USERNAME_REMAP_FUNCTION': lambda r: r.user.username  # Mimics default behavior\n```\n\n## Post-Authentication Redirect\nOnce successfully authenticated with Duo, the middleware will automatically redirect the user to the path specified in the `DUO_NEXT_URL` session variable, falling back to the `LOGIN_REDIRECT_URL` settings variable if it is not present. This value is automatically assigned in the middleware before redirecting to Duo.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AdamAngle/django-duo-universal-auth",
    "keywords": "",
    "license": "BSD 3-clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-duo-universal-auth",
    "package_url": "https://pypi.org/project/django-duo-universal-auth/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-duo-universal-auth/",
    "project_urls": {
      "Homepage": "https://github.com/AdamAngle/django-duo-universal-auth"
    },
    "release_url": "https://pypi.org/project/django-duo-universal-auth/0.2.0/",
    "requires_dist": [
      "duo-universal"
    ],
    "requires_python": "",
    "summary": "A simple Django middleware for Duo Universal 2-factor authentication.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12531863,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14b0e1d3264f0ab8c219e693b0c72ecad464e2d84f274de11d533fee0acc999b",
          "md5": "5e1f47453a3e4aec3ad87c6dbcc17baf",
          "sha256": "c900712e99b08c18648fedf8ab18bb56e23954347281fbd15f14f5ddc64b4505"
        },
        "downloads": -1,
        "filename": "django-duo-universal-auth-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5e1f47453a3e4aec3ad87c6dbcc17baf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6717,
        "upload_time": "2021-12-25T19:44:42",
        "upload_time_iso_8601": "2021-12-25T19:44:42.930949Z",
        "url": "https://files.pythonhosted.org/packages/14/b0/e1d3264f0ab8c219e693b0c72ecad464e2d84f274de11d533fee0acc999b/django-duo-universal-auth-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d60aae73c6d4d1ae349d441b23631e0c420e72f3506d4bf95d190568d56d849",
          "md5": "8e80e3aea495f727bb2e6448329db9f9",
          "sha256": "45326fb1905ba85e554b0d2f6ac9e87a145750791727c11744e44e00ef6a37d4"
        },
        "downloads": -1,
        "filename": "django_duo_universal_auth-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8e80e3aea495f727bb2e6448329db9f9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8103,
        "upload_time": "2022-01-10T19:26:21",
        "upload_time_iso_8601": "2022-01-10T19:26:21.490168Z",
        "url": "https://files.pythonhosted.org/packages/5d/60/aae73c6d4d1ae349d441b23631e0c420e72f3506d4bf95d190568d56d849/django_duo_universal_auth-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8839228808ee0148edc24ee81493aefd84bab66eb2c19ae82111ac64a8b3fb0f",
          "md5": "32c8d6b3c782377f8093959c86e2d688",
          "sha256": "23a0ef9cd9a57cb274ed7f19ccb36d2dd63820f14961b8f8a59a58f048e36569"
        },
        "downloads": -1,
        "filename": "django-duo-universal-auth-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "32c8d6b3c782377f8093959c86e2d688",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7205,
        "upload_time": "2022-01-10T19:26:23",
        "upload_time_iso_8601": "2022-01-10T19:26:23.273017Z",
        "url": "https://files.pythonhosted.org/packages/88/39/228808ee0148edc24ee81493aefd84bab66eb2c19ae82111ac64a8b3fb0f/django-duo-universal-auth-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d60aae73c6d4d1ae349d441b23631e0c420e72f3506d4bf95d190568d56d849",
        "md5": "8e80e3aea495f727bb2e6448329db9f9",
        "sha256": "45326fb1905ba85e554b0d2f6ac9e87a145750791727c11744e44e00ef6a37d4"
      },
      "downloads": -1,
      "filename": "django_duo_universal_auth-0.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8e80e3aea495f727bb2e6448329db9f9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 8103,
      "upload_time": "2022-01-10T19:26:21",
      "upload_time_iso_8601": "2022-01-10T19:26:21.490168Z",
      "url": "https://files.pythonhosted.org/packages/5d/60/aae73c6d4d1ae349d441b23631e0c420e72f3506d4bf95d190568d56d849/django_duo_universal_auth-0.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8839228808ee0148edc24ee81493aefd84bab66eb2c19ae82111ac64a8b3fb0f",
        "md5": "32c8d6b3c782377f8093959c86e2d688",
        "sha256": "23a0ef9cd9a57cb274ed7f19ccb36d2dd63820f14961b8f8a59a58f048e36569"
      },
      "downloads": -1,
      "filename": "django-duo-universal-auth-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "32c8d6b3c782377f8093959c86e2d688",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7205,
      "upload_time": "2022-01-10T19:26:23",
      "upload_time_iso_8601": "2022-01-10T19:26:23.273017Z",
      "url": "https://files.pythonhosted.org/packages/88/39/228808ee0148edc24ee81493aefd84bab66eb2c19ae82111ac64a8b3fb0f/django-duo-universal-auth-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}