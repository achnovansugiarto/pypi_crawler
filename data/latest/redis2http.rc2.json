{
  "info": {
    "author": "Yaroslav Polyakov",
    "author_email": "yaroslaff@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "# redis2http\n\nRedis2http takes request data from redis and performs HTTP request.\nMostly used to implement web-hook calls\n\n## Why not requests.get/requests.post ?\nMost likely you want main program to run fast and spend very short time on calling hook. HTTP requests are not good for it - it may fail or be slow for many reasons. On other hand, LPUSH operation with local redis is always very quick and very reliable.\n\nredis2http is good if a) You do not need to wait for HTTP request completion b) You do not need to get any reply from request \n\n## Install\n\n~~~\npip3 install redis2http\n~~~\n\nIf you want to start on boot (as root or sudo):\n~~~\ncp /usr/local/redis2http/redis2http.service /etc/systemd/system/\nsystemctl daemon-reload\nsystemctl enable redis2http\nsystemctl start redis2http\n~~~\n\n## Usage for CLI\nCLI is not main purpose for redis2http, but it's good for testing. Examples:\n\nTo start as service in foreground (for debugging), just run `redis2http.py` (not options required).\n\n\nTo send request via redis (for debugging):\n~~~\nredis2http.py --send GET https://google.com/\n~~~\n\nAfter this (in less then second), you can see result in redis2http service output. If redis2http runs as systemd service, then `sudo journalctl -u redis2http`.\n\n## Usage from Python or from whatever (via redis)\n\nPut JSON-encoded data structure to `http_requests_queue` list (or use `-q` for other key name). Python example:\n~~~python\ndata = {\n    'method': 'GET',\n    'url': 'https://example.com/hook',\n    'payload': None\n}\nrequest = json.dumps(data)\nredis_connection.sadd('http_requests_queue', request)\n~~~\n\n## Set vs List\nredis2http may use queue as redis object of type `set` or type `list`. You may specify type as `--type` CLI option. Default is `set`.\n\nIf you will use set and submit same data twice, only one HTTP request will be performed. If you will use list, both requests will be performed.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yaroslaff/redis2http",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "redis2http",
    "package_url": "https://pypi.org/project/redis2http/",
    "platform": "",
    "project_url": "https://pypi.org/project/redis2http/",
    "project_urls": {
      "Homepage": "https://github.com/yaroslaff/redis2http"
    },
    "release_url": "https://pypi.org/project/redis2http/0.0.2/",
    "requires_dist": [
      "redis",
      "requests"
    ],
    "requires_python": ">=3",
    "summary": "Simple HTTP client which takes request data from redis",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11563489,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c5143206c2f55071d393890f7c4db8270425f62c0f884ae93e415a6a2c0792c",
          "md5": "f4c06a1e315d0781ceeffc0deff1ade4",
          "sha256": "a606663c937e66d1b325004390d2e0775e46b1c94ec2580bb6aca3fa3d1de50e"
        },
        "downloads": -1,
        "filename": "redis2http-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4c06a1e315d0781ceeffc0deff1ade4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 4559,
        "upload_time": "2021-08-25T17:48:11",
        "upload_time_iso_8601": "2021-08-25T17:48:11.418467Z",
        "url": "https://files.pythonhosted.org/packages/8c/51/43206c2f55071d393890f7c4db8270425f62c0f884ae93e415a6a2c0792c/redis2http-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af535708b90c84965503a85735af2bcd0e7fbd2440847a0480b1825390284f5c",
          "md5": "0f8ea26d62805883c7e961366c122b18",
          "sha256": "3e89db2d06178db5d6b17bf5b765bf7cf0aef1cf38288a73aeca9d731a6e5ce9"
        },
        "downloads": -1,
        "filename": "redis2http-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f8ea26d62805883c7e961366c122b18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 5044,
        "upload_time": "2021-09-27T19:39:20",
        "upload_time_iso_8601": "2021-09-27T19:39:20.046903Z",
        "url": "https://files.pythonhosted.org/packages/af/53/5708b90c84965503a85735af2bcd0e7fbd2440847a0480b1825390284f5c/redis2http-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af535708b90c84965503a85735af2bcd0e7fbd2440847a0480b1825390284f5c",
        "md5": "0f8ea26d62805883c7e961366c122b18",
        "sha256": "3e89db2d06178db5d6b17bf5b765bf7cf0aef1cf38288a73aeca9d731a6e5ce9"
      },
      "downloads": -1,
      "filename": "redis2http-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0f8ea26d62805883c7e961366c122b18",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 5044,
      "upload_time": "2021-09-27T19:39:20",
      "upload_time_iso_8601": "2021-09-27T19:39:20.046903Z",
      "url": "https://files.pythonhosted.org/packages/af/53/5708b90c84965503a85735af2bcd0e7fbd2440847a0480b1825390284f5c/redis2http-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}