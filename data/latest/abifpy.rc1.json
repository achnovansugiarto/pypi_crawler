{
  "info": {
    "author": "Wibowo Arindrarto",
    "author_email": "bow@bow.web.id",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "======\nABIFPY\n======\n\n-----------------------------------------------------------\nPython module for reading ABI Sanger sequencing trace files\n-----------------------------------------------------------\n\nabifpy is a python module that extracts sequence and various other data from\nApplied Biosystem's, Inc. format (ABI) file. The module is python3-compatible\nand was written based on the `official spec`_ released by Applied Biosystems.\n\nA modified version of this module has been merged into the `Biopython \nproject`_, available from version 1.58 onwards. If you already have Biopython\nversion >=1.58, there is no need to use abifpy. Despite that, I am keeping \nthe module available as a stand-alone for personal reasons :).\n\nabifpy provides the following items:\n\n*class* Trace(in_file)\n    Class representing the trace file ``in_file``.\n\nTrace object attributes and methods\n===================================\n\nseq\n    String of base-called nucleotide sequence stored in the file.\n\nqual\n    String of phred quality characters of the base-called sequence.\n\nqual_val\n    List of phred quality values of the base-called sequence.\n\nid\n    String of the sequence file name.\n\nname\n    String of the sample name entered prior to sequencing.\n\ntrim(sequence[, cutoff=0.05])        \n    Returns a trimmed sequence using Richard Mott's algorithm (used in phred)\n    with the probability cutoff of 0.05. Can be used on ``seq``, ``qual``, and\n    ``qual_val``.\n    \nget_data(key)\n    Returns metadata stored in the file, accepts keys from ``tags`` (see below).\n\nexport([out_file=\"\", fmt='fasta'])       \n    Writes a fasta (``fmt='fasta'``), qual (``fmt='qual'``), or \n    fastq (``fmt='fastq'``) file from the trace file. Default format is ``fasta``.\n\nclose()\n    Closes the Trace file object.\n\nseq_remove_ambig(seq)\n    Replaces extra ambigous base characters (K, Y, W, M, R, S) with 'N'. Accepts ``seq``\n    for input.\n\nEXTRACT\n    Dictionary for determining which metadata are extracted.\n\ndata\n    Dictionary that contains the file metadata. The keys are values of ``EXTRACT``.\n\ntags\n    Dictionary of tags with values of data directory class instance. Keys are tag name and \n    tag number, concatenated. Use ``get_data()`` to access values in each ``tags`` entry.\n\nUsage\n=====\n\n::\n\n    $ python\n    >>> from abifpy import Trace\n    >>> yummy = Trace('tests/3730.ab1')\n\nOr if you want to perform base trimming directly::\n    \n    >>> yummy = Trace('tests/3730.ab1', trimming=True)\n\nSequence can be accessed with the ``seq`` attribute. Other attributes of note\nare ``qual`` for phred quality characters, ``qual_val`` for phred quality values,\n``id`` for sequencing trace file name, and ``name`` for the sample name::\n\n    >>> yummy.seq\n    'GGGCGAGCKYYAYATTTTGGCAAGAATTGAGCTCT...\n    >>> yummy.qual\n    '5$%%%\\'%%!!!\\'!+5;726@>A=3824DESHSS...\n    >>> yummy.qual_val\n    [20, 3, 4, 4, 4, 6, 4, 4, 0, 0, 0, 6, 0, 10, 20, 26, 22, 17, 21...\n    >>> yummy.id\n    '3730'\n    >>> yummy.name\n    '226032_C-ME-18_pCAGseqF'\n\nIf trimming was not performed when instantiating, you can still do it afterwards::\n    \n    >>> yummy.trim(yummy.seq)\n\nThe quality values itself can be trimmed as well::\n\n    >>> yummy.trim(yummy.qual)\n\nViewing the trace file metadata is easy. Use the values from ``EXTRACT``\nas the keys in ``data``::\n\n    >>> yummy.data['well']\n    'B9'\n    >>> yummy.data['model']\n    '3730'\n    >>> yummy.data['run start date']\n    datetime.date(2009, 12, 12)\n\nmetadata not contained in ``data`` can be viewed using ``get_data()``\nwith one of the keys in ``tags`` as the argument, e.g.::\n\n    >>> yummy.get_data('PTYP1')\n    '96-well'\n\nFor more info on the meaning of these tags and the file metadata, consult the `official spec`_. \n\nInstallation\n============\n\n* ``pip install abifpy``, or\n\n* Add the abifpy directory to your ``$PYTHONPATH`` (in ``.bashrc`` to make it persistent)\n\nLicense\n=======\n\nabifpy is licensed under the MIT License.\n\nCopyright (c) 2011 by Wibowo Arindrarto <bow@bow.web.id>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n.. _official spec: http://www.appliedbiosystems.com/support/software_community/ABIF_File_Format.pdf\n.. _Biopython project: http://biopython.org/wiki/Biopython",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/bow/abifpy/",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "abifpy",
    "package_url": "https://pypi.org/project/abifpy/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/abifpy/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/bow/abifpy/"
    },
    "release_url": "https://pypi.org/project/abifpy/0.9/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "abifpy is a module for reading ABI Sanger sequencing trace files.",
    "version": "0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 731592,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "096d3771d292d04cccbd9f09fd58e2e6c4dfbcf3caed7a9573bea2e7edc3d50a",
          "md5": "98af4a85565ba2631b67a8cae5672ecf",
          "sha256": "268bf2ae57a99c41bf6fde38d27fcd8d4bf01105afb7eed749d7557e953fbcac"
        },
        "downloads": -1,
        "filename": "abifpy-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "98af4a85565ba2631b67a8cae5672ecf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7381,
        "upload_time": "2012-02-17T16:14:30",
        "upload_time_iso_8601": "2012-02-17T16:14:30.102275Z",
        "url": "https://files.pythonhosted.org/packages/09/6d/3771d292d04cccbd9f09fd58e2e6c4dfbcf3caed7a9573bea2e7edc3d50a/abifpy-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "096d3771d292d04cccbd9f09fd58e2e6c4dfbcf3caed7a9573bea2e7edc3d50a",
        "md5": "98af4a85565ba2631b67a8cae5672ecf",
        "sha256": "268bf2ae57a99c41bf6fde38d27fcd8d4bf01105afb7eed749d7557e953fbcac"
      },
      "downloads": -1,
      "filename": "abifpy-0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "98af4a85565ba2631b67a8cae5672ecf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7381,
      "upload_time": "2012-02-17T16:14:30",
      "upload_time_iso_8601": "2012-02-17T16:14:30.102275Z",
      "url": "https://files.pythonhosted.org/packages/09/6d/3771d292d04cccbd9f09fd58e2e6c4dfbcf3caed7a9573bea2e7edc3d50a/abifpy-0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}