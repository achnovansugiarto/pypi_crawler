{
  "info": {
    "author": "Peter Pentchev",
    "author_email": "roam@ringlet.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: DFSG approved",
      "License :: Freely Distributable",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# An incremental decoder of bytes into characters and lines\n\n## The DecodeAccumulator class\n\nThe `DecodeAccumulator` class implements an incremental decoder: an object\nthat may be fed bytes (one or several at a time) as they are e.g. read\nfrom a network stream or a subprocess's output, and that adds to a result\nstring as soon as enough bytes have been accumulated to produce a character\nin the specified encoding.\n\nNote that `DecodeAccumulator` objects are immutable value objects:\nthe `add()` method does not modify its invocant, but returns a new\n`DecodeAccumulator` object instead.\n\nSample usage:\n\n    while True:\n        bb = subprocess.stdout.read(1024)\n        if len(bb) == 0:\n            break\n        acc = acc.add(bb)\n        assert(not acc.done)\n        if acc.splitter.lines:\n            # at least one full line was produced\n            (acc, lines) = acc.pop_lines()\n            print('\\n'.join(lines)\n\n    if acc.buf:\n        print('Leftover bytes left in the buffer!', file=sys.stderr)\n\n    if acc.splitter.buf:\n        print('Incomplete line: ' + acc.splitter.buf)\n\n    final = acc.add(None)\n    assert(final.splitter.buf == '')\n    assert(final.splitter.done)\n    assert(final.done)\n    if acc.splitter.buf:\n        assert(len(final.splitter.lines) == len(acc.splitter.lines) + 1)\n\n## The splitter classes: UniversalNewlines, FixedEOLSplitter, NullSplitter\n\nThe `decode_acc.newlines` module provides three classes that may be used to\nsplit a text string into lines in different ways.  The `UniversalNewlines`\nclass does its best to simulate the \"universal newlines\" behavior of `file`\nobjects.  The `FixedEOLSplitter` class uses a specified string as a line\nterminator to split on.  The `NullSplitter` class does not do any splitting.\n\nSample usage:\n\n    spl = newlines.UniversalNewlines()\n    for char in input_string:\n        spl = spl.add(char)\n    spl.add(None)\n\n    for (idx, line) in enumerate(spl.lines):\n        print('line {idx}: {line}'.format(idx=idx, line=line))\n\n## The UTF-8 environment setup functions: detect\\_utf8\\_locale(), get\\_utf8\\_env()\n\nThe `decode_acc.util` module provides two functions that are useful for\nsetting up an environment in which to run child processes.\n\nThe `detect_utf8_locale()` function runs the external `locale` command to\nobtain a list of the supported locale names, and then picks a suitable one to\nuse so that programs are more likely to output valid UTF-8 characters and\nlanguage-neutral messages. It prefers the `C` base locale, but if neither\n`C.UTF-8` nor `C.utf8` is available, it will fall back to a list of other\nlocale names that are likely to be present on the system.\n\nThe `get_utf8_env()` function invokes `detect_utf8_locale()` and then returns\na dictionary similar to `os.environ`, but with `LC_ALL` set to the obtained\nlocale name and `LANGUAGE` set to an empty string so that recent versions of\nthe gettext library do not choose a different language to output messages in.\nIf a dictionary is passed as the `env` parameter, `get_utf8_env()` uses it as\na base instead of the value of `os.environ`.\n\n## The configuration classes: Config, ConfigProc\n\nThe `decode_acc.util` module also provides two dataclasses that may be used as\nbase classes for program configuration data, usually runtime settings\nobtained from command-line options. Their main purpose, however, or rather\nthe main purpose of the `ConfigProc` class, is to provide automated\ndetection of the UTF-8 locale to use and supply helper methods similar to\nthe functions and classes provided by the `subprocess` module for\nstarting child processes in an UTF-8 environment.\n\nThe `Config` class has a single field, the `verbose` boolean flag.\nIt also provides the `diag()` method that will check the `verbose` flag and\noutput the specified message to the standard error stream (in order not to\nintersperse program output and diagnostic messages on the standard output\nstream) if requested.\n\nThe `ConfigProc` class extends the `Config` class with three methods,\n`check_call()`, `check_output()`, and `Popen()`, that accept exactly\nthe same arguments as the corresponding symbols from the `subprocess` module,\nbut provide default values for some of them. In particular:\n\n- `env` uses the environment returned by `get_utf8_env()`\n\n- `encoding` uses the string returned by `detect_utf8_locale()`\n\n- `shell` is set to `False` unless specified\n\nSample usage:\n\n    import dataclasses\n\n    from decode_acc import util as d_util\n\n    @dataclasses.dataclass(frozen=True)\n    class Config(d_util.ConfigProc):\n        \"\"\"Runtime configuration for the hello program.\"\"\"\n\n        target: str\n\n\n    ...\n    cfg = Config(target=\"world\", verbose=True)\n    ...\n    cfg.diag(f\"About to greet {cfg.target}\")\n    cfg.check_call([\"printf\", \"--\", \"Hello, %s!\\\\n\", cfg.target])\n\n\n## License and copyright\n\n    Copyright (c) 2018 - 2020  Peter Pentchev <roam@ringlet.net>\n    All rights reserved.\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n    1. Redistributions of source code must retain the above copyright\n       notice, this list of conditions and the following disclaimer.\n    2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n    ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n    DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n    OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n    HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n    OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/ppentchev/decode-acc/",
    "keywords": "",
    "license": "BSD-2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "decode-acc",
    "package_url": "https://pypi.org/project/decode-acc/",
    "platform": "",
    "project_url": "https://pypi.org/project/decode-acc/",
    "project_urls": {
      "Homepage": "https://gitlab.com/ppentchev/decode-acc/"
    },
    "release_url": "https://pypi.org/project/decode-acc/1.1.1/",
    "requires_dist": [
      "dataclasses ; python_version < \"3.7\""
    ],
    "requires_python": ">= 3.6",
    "summary": "Incrementally decode bytes into strings and lines",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8074499,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "196783adb9e4fdb13d90e5e3eb5d62b6a126f8188a2600bfd79375a8040f483d",
          "md5": "2ca0d27594e7c45f72cf01cde983df29",
          "sha256": "24bd17908aa33eb754d87918eab238a834a2010549ec34944f88ef2036d45a18"
        },
        "downloads": -1,
        "filename": "decode_acc-0.1.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ca0d27594e7c45f72cf01cde983df29",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 9519,
        "upload_time": "2018-09-30T21:04:30",
        "upload_time_iso_8601": "2018-09-30T21:04:30.612175Z",
        "url": "https://files.pythonhosted.org/packages/19/67/83adb9e4fdb13d90e5e3eb5d62b6a126f8188a2600bfd79375a8040f483d/decode_acc-0.1.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d2830393c81a64189bd63bcd5566267b8ec3dca9252fd83336fd707ee7d7b12",
          "md5": "5a16a2696f8a60e03af6f4dac253c653",
          "sha256": "4aad594b6dab1ddf5ed41d3dd22bdb4aa45aac320939a83b32db9cb8f3873b0f"
        },
        "downloads": -1,
        "filename": "decode_acc-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a16a2696f8a60e03af6f4dac253c653",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9519,
        "upload_time": "2018-09-30T21:09:40",
        "upload_time_iso_8601": "2018-09-30T21:09:40.731990Z",
        "url": "https://files.pythonhosted.org/packages/1d/28/30393c81a64189bd63bcd5566267b8ec3dca9252fd83336fd707ee7d7b12/decode_acc-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64187d3c6257f481f6b0fe75672d1371803f5fdcc59817d77e402ae091e2af71",
          "md5": "055474c8bbfa7e026f56aea4728c50c6",
          "sha256": "a9d1c01bfc5787281c46167b110e2021d10b3c41ae63654c922b5f4f5e3108f5"
        },
        "downloads": -1,
        "filename": "decode-acc-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "055474c8bbfa7e026f56aea4728c50c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5781,
        "upload_time": "2018-09-30T21:04:31",
        "upload_time_iso_8601": "2018-09-30T21:04:31.820628Z",
        "url": "https://files.pythonhosted.org/packages/64/18/7d3c6257f481f6b0fe75672d1371803f5fdcc59817d77e402ae091e2af71/decode-acc-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea64f4a58bc5fdbae125c2ee779760ca8be90be5a13d5f7b5f79d5c88696ec05",
          "md5": "375f44751b863a8d897f4e648542e3f4",
          "sha256": "7bf5ccfb92e385a99478e498ee0f12004166ca2bf521bcdfef9480c8696c14a0"
        },
        "downloads": -1,
        "filename": "decode_acc-0.1.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "375f44751b863a8d897f4e648542e3f4",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 9562,
        "upload_time": "2018-09-30T21:21:53",
        "upload_time_iso_8601": "2018-09-30T21:21:53.421328Z",
        "url": "https://files.pythonhosted.org/packages/ea/64/f4a58bc5fdbae125c2ee779760ca8be90be5a13d5f7b5f79d5c88696ec05/decode_acc-0.1.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "082172ce5be6687f12f0d86630519ff9ae6ac9ad7f699c733ff1226a0b959458",
          "md5": "6d223439322f458e3337bf871c782fd5",
          "sha256": "7c67e1ce8ef07c530c1fe49007ebccabc585a5f257c396a7dc3a650c3f4f5149"
        },
        "downloads": -1,
        "filename": "decode_acc-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d223439322f458e3337bf871c782fd5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9561,
        "upload_time": "2018-09-30T21:21:54",
        "upload_time_iso_8601": "2018-09-30T21:21:54.833499Z",
        "url": "https://files.pythonhosted.org/packages/08/21/72ce5be6687f12f0d86630519ff9ae6ac9ad7f699c733ff1226a0b959458/decode_acc-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dd9f41f905035e646362d46123a385297f2471fbaeaae50ca63bc82d3136e6e",
          "md5": "e38371e209e96870e16a20c6ef6a7ea0",
          "sha256": "da683536724b2cb1b4daf150d3acde3184a49bb6dbcc07f222c5623fd2299d74"
        },
        "downloads": -1,
        "filename": "decode-acc-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e38371e209e96870e16a20c6ef6a7ea0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5882,
        "upload_time": "2018-09-30T21:21:56",
        "upload_time_iso_8601": "2018-09-30T21:21:56.284649Z",
        "url": "https://files.pythonhosted.org/packages/6d/d9/f41f905035e646362d46123a385297f2471fbaeaae50ca63bc82d3136e6e/decode-acc-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d20946b7dbe7e1f2b117a35d81e214448080f5cdda588f0b0478dd9210803494",
          "md5": "86de59350d3afcfd134a59fa44dc52a0",
          "sha256": "52834deda628340a44e1292e6eaa533abb3850693b2857ccf992538358527b37"
        },
        "downloads": -1,
        "filename": "decode_acc-1.0.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "86de59350d3afcfd134a59fa44dc52a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14465,
        "upload_time": "2018-10-20T12:32:25",
        "upload_time_iso_8601": "2018-10-20T12:32:25.982951Z",
        "url": "https://files.pythonhosted.org/packages/d2/09/46b7dbe7e1f2b117a35d81e214448080f5cdda588f0b0478dd9210803494/decode_acc-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "004196269771998196b50e87cd4139f522ec6f01d9fac0a02f36ad3af2e5a9c0",
          "md5": "f43893bfce66430674972838b428a45c",
          "sha256": "47a89e2ba3184f668656de8b25141003375ad7154b1fc8d646b3980745ae1397"
        },
        "downloads": -1,
        "filename": "decode-acc-1.0.0.tar.gz",
        "has_sig": true,
        "md5_digest": "f43893bfce66430674972838b428a45c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8280,
        "upload_time": "2018-10-20T12:32:28",
        "upload_time_iso_8601": "2018-10-20T12:32:28.270074Z",
        "url": "https://files.pythonhosted.org/packages/00/41/96269771998196b50e87cd4139f522ec6f01d9fac0a02f36ad3af2e5a9c0/decode-acc-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b823f5f9e1b77a3f9676dffab8b81b3a6eb23a0cae14c1d3921f9bca37139df",
          "md5": "4397a0ef779e2d21d9c9cbc684ea0ecd",
          "sha256": "1a4385cc5bbe12c9a694d91e99067ea91b082464dad52f960694437fe87409e2"
        },
        "downloads": -1,
        "filename": "decode_acc-1.1.0-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "4397a0ef779e2d21d9c9cbc684ea0ecd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.6",
        "size": 11407,
        "upload_time": "2020-08-29T20:20:01",
        "upload_time_iso_8601": "2020-08-29T20:20:01.470771Z",
        "url": "https://files.pythonhosted.org/packages/8b/82/3f5f9e1b77a3f9676dffab8b81b3a6eb23a0cae14c1d3921f9bca37139df/decode_acc-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56f584c2963cb4fdc26c7f63daadd9374eb89fcf1241c1f9d419c03763b1950f",
          "md5": "d888ebaba011f9a725f0c7f5234bd926",
          "sha256": "2f25b54ac40b3cf03353cc3a3733463a44d47c2f022df02cefd8c6d7d54a31fd"
        },
        "downloads": -1,
        "filename": "decode-acc-1.1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "d888ebaba011f9a725f0c7f5234bd926",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 14795,
        "upload_time": "2020-08-29T20:20:03",
        "upload_time_iso_8601": "2020-08-29T20:20:03.148293Z",
        "url": "https://files.pythonhosted.org/packages/56/f5/84c2963cb4fdc26c7f63daadd9374eb89fcf1241c1f9d419c03763b1950f/decode-acc-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e530b451fb0884ea251229116b55d31ec91ba45f1188e34ede6bfae66b1a826",
          "md5": "242065b0045fca87e0a29e235a671697",
          "sha256": "10ec4cbbc3b2a814f496fc4bbb6b6021d63726ca7882fbdff38fced6efd733df"
        },
        "downloads": -1,
        "filename": "decode_acc-1.1.1-py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "242065b0045fca87e0a29e235a671697",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.6",
        "size": 12545,
        "upload_time": "2020-08-31T05:46:18",
        "upload_time_iso_8601": "2020-08-31T05:46:18.961121Z",
        "url": "https://files.pythonhosted.org/packages/1e/53/0b451fb0884ea251229116b55d31ec91ba45f1188e34ede6bfae66b1a826/decode_acc-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "754da3281eb9bd7aed49472adacf908f6103d2737946f38ec6ca0bc3a23c8097",
          "md5": "3ecf16094a6559320c0437d116552c0a",
          "sha256": "bb1cfed70eb5153cc24e6ee49d7b056e6aa52aff0d022aefdffd23126fc381b3"
        },
        "downloads": -1,
        "filename": "decode-acc-1.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "3ecf16094a6559320c0437d116552c0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 17171,
        "upload_time": "2020-08-31T05:46:20",
        "upload_time_iso_8601": "2020-08-31T05:46:20.444194Z",
        "url": "https://files.pythonhosted.org/packages/75/4d/a3281eb9bd7aed49472adacf908f6103d2737946f38ec6ca0bc3a23c8097/decode-acc-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e530b451fb0884ea251229116b55d31ec91ba45f1188e34ede6bfae66b1a826",
        "md5": "242065b0045fca87e0a29e235a671697",
        "sha256": "10ec4cbbc3b2a814f496fc4bbb6b6021d63726ca7882fbdff38fced6efd733df"
      },
      "downloads": -1,
      "filename": "decode_acc-1.1.1-py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "242065b0045fca87e0a29e235a671697",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">= 3.6",
      "size": 12545,
      "upload_time": "2020-08-31T05:46:18",
      "upload_time_iso_8601": "2020-08-31T05:46:18.961121Z",
      "url": "https://files.pythonhosted.org/packages/1e/53/0b451fb0884ea251229116b55d31ec91ba45f1188e34ede6bfae66b1a826/decode_acc-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "754da3281eb9bd7aed49472adacf908f6103d2737946f38ec6ca0bc3a23c8097",
        "md5": "3ecf16094a6559320c0437d116552c0a",
        "sha256": "bb1cfed70eb5153cc24e6ee49d7b056e6aa52aff0d022aefdffd23126fc381b3"
      },
      "downloads": -1,
      "filename": "decode-acc-1.1.1.tar.gz",
      "has_sig": true,
      "md5_digest": "3ecf16094a6559320c0437d116552c0a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.6",
      "size": 17171,
      "upload_time": "2020-08-31T05:46:20",
      "upload_time_iso_8601": "2020-08-31T05:46:20.444194Z",
      "url": "https://files.pythonhosted.org/packages/75/4d/a3281eb9bd7aed49472adacf908f6103d2737946f38ec6ca0bc3a23c8097/decode-acc-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}