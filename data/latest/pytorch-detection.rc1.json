{
  "info": {
    "author": "Hoang Phuong",
    "author_email": "hphuongdhsp@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Retinaface\n\nA simple package of face detection\n\nThis package is built on top of the [Retinaface](https://github.com/biubug6/Pytorch_Retinaface)\n\n\n\n\n- [More about Retinaface](#more-about-Retinaface)\n\n- [Installation](#installation)\n\n- [Usage](#Usage)\n\n- [How to do a python package ](#How to do a python package)\n\n\n\n## More about Retinaface\n\nRetinaface is the State-of-the-art for Face Detection on WIDER Face. There are two versions of retinaface: MobileNet Backend and Resnet Backend. The model using MobileNet as backbone has only 1.7M, the other model with Resnet backbone has ~30m. Here is the performance on the FDDB dataset: \n\n| FDDB(pytorch) | performance |\n|:-|:-:|\n| Mobilenet0.25 | 98.64% |\n| Resnet50 | 99.22% |\n\n<p align=\"center\"><img src=\"./imgs/FDDB.png\" width=\"640\"\\></p>\n\n----\n\n## Installation\n\n```\n$ pip install pytorch-detection\n\n```\n\n----\n\n## Usage\n\n```python\n\nfrom retinaface import RetinafaceDetector\nimport cv2 as cv\n\n\n### Mobinet backbone \ndetector  = RetinafaceDetector(net='mnet').detect_faces\nimg  = cv.imread('./imgs/DSC_8221.jpg')\nbounding_boxes, landmarks = detector(img)\nprint(bounding_boxes)\n\n### Resnet backbone \ndetector  = RetinafaceDetector(net='mnet').detect_faces\nimg  = cv.imread('./imgs/DSC_8221.jpg')\nbounding_boxes, landmarks = detector(img)\nprint(bounding_boxes)\n\n```\n\n#### Result \n\n<p align=\"center\"><img src=\"./imgs/detect_DSC_8221.jpg\" width=\"150\"\\></p>\n\n## How to make a python package \n\nTo create this project locally, create the following file structure:\n\n\n```Shell\nretinaface\n    ├── retinaface\n    │      ├── __init__.py\n    ├── LICENSE\n    ├── README.md\n    ├── setup.py\n    ├── setup.py\n    ├── requirements.txt\n\n```\n\n#### Creating setup.py\n\nsetup.py is the build script for setuptools. It tells setuptools about your package\n\n```python\n\nimport setuptools\n\nsetuptools.setup(\n    name=\"Pytorch-detection\", # Replace with your own username\n    version=\"0.0.1\",\n    author=\"Hoang Phuong\",\n    author_email=\"hphuongdhsp@gmail.com\",\n    license='MIT',\n    description = \"A simple example package for face detection\",\n    long_description = long_description,\n    long_description_content_type=\"text/markdown\",\n    url=\"https://github.com/hphuongdhsp/retinaface\",\n    packages=setuptools.find_packages(),\n    classifiers=[\n        \"Programming Language :: Python :: 3\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: OS Independent\",\n    ],\n    keywords='face detection, retinaface',\n    install_requires=open('requirements.txt').readlines(),\n    python_requires='>=3.6',\n)\n\n```\n#### Creating README.md\n\n#### Creating a LICENSE\n\n#### Generating distribution archives\n\nInstall **setuptools** and **wheel**\n\n```\n$ pip install --user --upgrade setuptools wheel\n\n```\nmake distribution files:\n\n```\npython3 setup.py sdist bdist_wheel\n```\n\nThat command genetate two files in the **dist** directory:  \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hphuongdhsp/retinaface",
    "keywords": "face detection,retinaface",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Pytorch-detection",
    "package_url": "https://pypi.org/project/Pytorch-detection/",
    "platform": "",
    "project_url": "https://pypi.org/project/Pytorch-detection/",
    "project_urls": {
      "Homepage": "https://github.com/hphuongdhsp/retinaface"
    },
    "release_url": "https://pypi.org/project/Pytorch-detection/0.0.1/",
    "requires_dist": [
      "albumentations",
      "numpy",
      "pillow",
      "torch",
      "torchvision"
    ],
    "requires_python": ">=3.6",
    "summary": "A small example package for face recognition",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8763520,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8267208e0b348dfe2d7cd54bdf02bfb04be6ece79023cf4160c36119b9a1808",
          "md5": "0b5888e918698118b784935c9ca6d8de",
          "sha256": "d1e774d72a149420f674c8af2bd1e658811c4b4fb412d4b5e73ab5b0911382ab"
        },
        "downloads": -1,
        "filename": "Pytorch_detection-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b5888e918698118b784935c9ca6d8de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20492,
        "upload_time": "2020-11-27T14:44:33",
        "upload_time_iso_8601": "2020-11-27T14:44:33.456467Z",
        "url": "https://files.pythonhosted.org/packages/b8/26/7208e0b348dfe2d7cd54bdf02bfb04be6ece79023cf4160c36119b9a1808/Pytorch_detection-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e078c114676d9260900eee90b70b0eeb88b722c8cf6056d9de971b393d426591",
          "md5": "27e61b7c48ce7389a29eba25d35f7486",
          "sha256": "2abbe9b33e1abb49cc1e66a96733ad837ebbba5757076bc9d6e35970b74183f7"
        },
        "downloads": -1,
        "filename": "Pytorch-detection-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "27e61b7c48ce7389a29eba25d35f7486",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15903,
        "upload_time": "2020-11-27T14:44:34",
        "upload_time_iso_8601": "2020-11-27T14:44:34.903206Z",
        "url": "https://files.pythonhosted.org/packages/e0/78/c114676d9260900eee90b70b0eeb88b722c8cf6056d9de971b393d426591/Pytorch-detection-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8267208e0b348dfe2d7cd54bdf02bfb04be6ece79023cf4160c36119b9a1808",
        "md5": "0b5888e918698118b784935c9ca6d8de",
        "sha256": "d1e774d72a149420f674c8af2bd1e658811c4b4fb412d4b5e73ab5b0911382ab"
      },
      "downloads": -1,
      "filename": "Pytorch_detection-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b5888e918698118b784935c9ca6d8de",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20492,
      "upload_time": "2020-11-27T14:44:33",
      "upload_time_iso_8601": "2020-11-27T14:44:33.456467Z",
      "url": "https://files.pythonhosted.org/packages/b8/26/7208e0b348dfe2d7cd54bdf02bfb04be6ece79023cf4160c36119b9a1808/Pytorch_detection-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e078c114676d9260900eee90b70b0eeb88b722c8cf6056d9de971b393d426591",
        "md5": "27e61b7c48ce7389a29eba25d35f7486",
        "sha256": "2abbe9b33e1abb49cc1e66a96733ad837ebbba5757076bc9d6e35970b74183f7"
      },
      "downloads": -1,
      "filename": "Pytorch-detection-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "27e61b7c48ce7389a29eba25d35f7486",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15903,
      "upload_time": "2020-11-27T14:44:34",
      "upload_time_iso_8601": "2020-11-27T14:44:34.903206Z",
      "url": "https://files.pythonhosted.org/packages/e0/78/c114676d9260900eee90b70b0eeb88b722c8cf6056d9de971b393d426591/Pytorch-detection-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}