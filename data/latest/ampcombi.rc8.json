{
  "info": {
    "author": "Anan Ibrahim, Louisa Perelo",
    "author_email": "ananhamido@hotmail.com, louperelo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "# AMPcombi : AntiMicrobial Peptides parsing and functional classification tool\n\n<img src=\"https://raw.githubusercontent.com/Darcy220606/AMPcombi/main/docs/amp-combi-logo.png\" width=\"620\" height=\"200\" />\n\nThis tool parses the results of antimicrobial peptide (AMP) prediction tools into a single table and aligns the hits against a reference AMP database for functional classifications.\n\nFor parsing: AMPcombi is developed to parse the output of these **AMP prediction tools**:\n \n| Tool | Version | Link |\n| ------------- | ------------- | ------------- |\n| Ampir  | 1.1.0  | https://github.com/Legana/ampir |\n| AMPlify  | 1.0.3  | https://github.com/bcgsc/AMPlify |\n| Macrel  | 1.1.0  | https://github.com/BigDataBiology/macrel |\n| HMMsearch  | 3.3.2  | https://github.com/EddyRivasLab/hmmer |\n| EnsembleAMPpred  | - | https://pubmed.ncbi.nlm.nih.gov/33494403/ |\n| NeuBI  | -  | https://github.com/nafizh/NeuBI |\n\nFor classification: AMPcombi is developed to offer functional annotation of the detected AMPs by alignment to an **AMP reference databases**, for e.g.,:\n\n| Tool | Version | Link |\n| ------------- | ------------- | ------------- |\n| DRAMP  | 3.0 | https://github.com/CPU-DRAMP/DRAMP-3.0 |\n\nAlignment to the reference database is done using [diamond blastp v.2.0.15](https://www.nature.com/articles/s41592-021-01101-x)\n\n======================\n## Installation\n======================\n\nTo install AMPcombi:\n\nAdd dependencies of the tool; `python` > 3.0, `biopython`, `pandas` and `diamond`.\nInstallation can be done using:\n\n - pip installation\n```\npip install AMPcombi\n```\n - git repository\n ```\n git clone https://github.com/Darcy220606/AMPcombi.git\n ```\n - conda\n```\nconda env create -f ampcombi/environment.yml\n```\nor\n```\n conda install -c bioconda AMPcombi\n```\n\n======================\n## Usage:\n======================\n\nThere are two basic commands to run AMPcombi:\n\n1. Using `--amp_results`\n```console\nampcombi \\\n--amp_results path/to/my/result_folder/ \\\n--faa path/to/sample_faa_files/\n```\n\nHere the head folder containing output files has to be given. AMPcombi finds and summarizes the output files from different tools, if the folder is structured  and named as: `/result_folder/toolsubdir/samplesubdir/sample.tool.filetype`. \n - Note that the filetype ending might vary and can be specified with `--tooldict`, if it is different from the default. When passing a dictionary via command line, this has to be done as a string with single quotes `' '` and the dictionary keys and items with double quotes `\" \"`. i.e. `'{\"key1\":\"item1\", \"key2\":\"item2\"}'`\n- Note that `--sample_list` can also be given if only specfic samples are needed from the driectory.\n\nThe path to the folder containing the respective protein fasta files has to be provided with `--faa`. The files have to be named with `<samplename>.faa`.\n\nStructure of the results folder:\n\n```console\namp_results/\n├── tool_1/\n|   ├── sample_1/\n|   |   └── sample_1.tool_1.tsv\n|   └── sample_2/\n|   |   └── sample_2.tool_1.tsv\n├── tool_2/\n|   ├── sample_1/\n|   |   └── sample_1.tool_2.txt\n|   └── sample_2/\n|   |   └── sample_2.tool_2.txt\n├── tool_3/\n    ├── sample_1/\n    |   └── sample_1.tool_3.predict\n    └── sample_2/\n        └── sample_2.tool_3.predict\n```\n\n2. Using `--path_list` and `--sample_list`\n\n```console\nampcombi \\\n--path_list path_to_sample_1_tool_1.csv path_to_sample_1_tool_1.csv \\\n--path_list path_to_sample_2_tool_1.csv path_to_sample_2_tool_1.csv \\\n--sample_list sample_1 sample_2 \\\n--faa path/to/sample_faa_files/\n```\n\nHere the paths to the output-files to be summarized can be given by `--path_list` for each sample. Together with this option a list of sample-names has to be supplied.\nEither the path to the folder containing the respective protein fasta files has to be provided with `--faa` or, in case of only one sample, the path to the corresponding `.faa` file. The files have to be named with `<samplename>.faa`.\n\n\n### Input options:\n| command | definition | default | example |\n| ------------- | ------------- | ------------- | ------------- |\n| --amp_results | path to the folder containing different tool's output files | ./test_files/ | ../amp_results/ |\n| --sample_list  | list of samples' names | - | sample_1 sample_2 |\n| --path_list  | list of paths to output files | - | path_to_sample_1_tool_1.csv path_to_sample_1_tool_1.csv |\n| --cutoff  | probability cutoff to filter AMPs | 0 | 0.5 |\n| --faa  | path to the folder containing the samples`.faa` files or, in case of only one sample, the path to the corresponding `.faa` file. Filenames have to contain the corresponding sample-name, i.e. sample_1.faa | ./test_faa/ | ./faa_files/|\n| --tooldict | dictionary of AMP-tools and their respective output file endings | '{\"ampir\":\"ampir.tsv\", \"amplify\":\"amplify.tsv\", \"macrel\":\"macrel.tsv\", \"hmmer_hmmsearch\":\"hmmsearch.txt\", \"ensembleamppred\":\"ensembleamppred.txt\"}' | - |\n| --amp_database | path to the folder containing the reference database files: (1) a fasta file with <.fasta> file extension and (2) the corresponding table with with functional and taxonomic classifications in <.tsv> file extension | [DRAMP 'general amps'](http://dramp.cpu-bioinfor.org/downloads/) database | ./amp_ref_database/ |\n| --complete_summary | concatenates all samples' summarized tables into one and generates both 'csv' and interactive 'html' files | False | True |\n| --log  | print messages into log file instead of stdout | False | True |\n| --threads  | adjust the number of threads required for DIAMOND alignemnt depending on the computing resources available  | 4 | 32 |\n| --version  | print the version number into stdout | - | 0.1.4 |\n\n - Note: The fasta file corresponding to the AMP database should not contain any characters other than ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']\n  - Note: The reference database table should be tab delimited.\n\n### Output:\nThe output will be written into your working directory, containing the following files and folders:\n```console\n<pwd>/\n├── amp_ref_database/\n|   ├── amp_ref.dmnd\n|   ├── general_amps_<DATE>_clean.fasta\n|   └── general_amps_<DATE>.tsv\n├── sample_1/\n|   ├── sample_1_amp.faa\n|   ├── sample_1_ampcombi.csv\n|   └── sample_1_diamond_matches.txt\n├── sample_2/\n|   ├── sample_2_amp.faa\n|   ├── sample_2_ampcombi.csv\n|   └── sample_2_diamond_matches.txt\n├── AMPcombi_summary.csv\n├── AMPcombi_summary.html\n└── ampcombi.log\n```\n\n======================\n## Contribution:\n======================\n\nAMPcombi is a tool developed for parsing results from published AMP prediction tools. We therefore welcome fellow contributors who would like to add new AMP prediction tools results for parsing and alignment.\n\n### Adding a new tool to AMPcombi\nIn `ampcombi/reformat_tables.py`\n- add a new tool function to read the output to a pandas dataframe and return two columns named `contig_id` and `prob_<toolname>`\n- add the new function to the `read_path` function\n\n\nIn `ampcombi/main.py`\n- add your default `tool:tool.fileending` to the default of `--tooldict`\n\n\n======================\n\n\n**Authors**: @louperelo and @darcy220606\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/AMPcombi/",
    "keywords": "Proteomics,Antimicrobial peptides,DiamondStandardization,Formatting,Functional annotation",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "AMPcombi",
    "package_url": "https://pypi.org/project/AMPcombi/",
    "platform": null,
    "project_url": "https://pypi.org/project/AMPcombi/",
    "project_urls": {
      "Homepage": "http://pypi.python.org/pypi/AMPcombi/"
    },
    "release_url": "https://pypi.org/project/AMPcombi/0.1.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A parsing tool for AMP tools.",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15643293,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f15529f300d3e8121600c9426bbcd9121f95e11429e64e6b49460fe54499e95",
          "md5": "3bd611c71dfe671f9b48b26c147052d4",
          "sha256": "3c8b53ddf5daea55b7950a601200cce68f84656ae5aa47449c4fa2bcbb4e23f9"
        },
        "downloads": -1,
        "filename": "AMPcombi-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3bd611c71dfe671f9b48b26c147052d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14697,
        "upload_time": "2022-10-06T14:57:41",
        "upload_time_iso_8601": "2022-10-06T14:57:41.140930Z",
        "url": "https://files.pythonhosted.org/packages/5f/15/529f300d3e8121600c9426bbcd9121f95e11429e64e6b49460fe54499e95/AMPcombi-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72c8a33af61ad956af6f21825aebd1acad4e774fd33677241c9628cd500bf043",
          "md5": "ac178a3f3726090fe429eac89ea7a242",
          "sha256": "48059628a6cc80050cb310d0267f8e4336063968c27e5afdf922ce39a2b5c7eb"
        },
        "downloads": -1,
        "filename": "AMPcombi-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ac178a3f3726090fe429eac89ea7a242",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13486,
        "upload_time": "2022-10-07T10:28:49",
        "upload_time_iso_8601": "2022-10-07T10:28:49.614982Z",
        "url": "https://files.pythonhosted.org/packages/72/c8/a33af61ad956af6f21825aebd1acad4e774fd33677241c9628cd500bf043/AMPcombi-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c0fd4ac9fc6170ca9bc02ec9b28fb4b40bfca014bb32a4555c391d32c88ba5d",
          "md5": "7da69851ba4c42e43e871d9d8eae2435",
          "sha256": "c0ef92ecb9c477374a56aa1cfec3361b21a5f7534a7b60daf1624222de595af6"
        },
        "downloads": -1,
        "filename": "AMPcombi-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7da69851ba4c42e43e871d9d8eae2435",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13479,
        "upload_time": "2022-10-07T11:06:42",
        "upload_time_iso_8601": "2022-10-07T11:06:42.844429Z",
        "url": "https://files.pythonhosted.org/packages/5c/0f/d4ac9fc6170ca9bc02ec9b28fb4b40bfca014bb32a4555c391d32c88ba5d/AMPcombi-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5e91162b85af3aed6d303ee01006041995b67321bf979af1b188d38408e7976",
          "md5": "1cf56dc1ed62d6c756af9c837af04227",
          "sha256": "5c2f2efa5ab9eec1f67f1e8f0c36f6ae2804e4936b2f8593eaba925c646f75ec"
        },
        "downloads": -1,
        "filename": "AMPcombi-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1cf56dc1ed62d6c756af9c837af04227",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13599,
        "upload_time": "2022-10-07T14:29:03",
        "upload_time_iso_8601": "2022-10-07T14:29:03.557570Z",
        "url": "https://files.pythonhosted.org/packages/d5/e9/1162b85af3aed6d303ee01006041995b67321bf979af1b188d38408e7976/AMPcombi-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f5b27fabaf64a3f4b3692b91355051e71379e4d1993a62ec190f2d6a2c0d490",
          "md5": "cab767f59486ce5dca5576db9d9bef59",
          "sha256": "34cda9120574be48e993437fe4f8390b8a45bea8337286c45d2fb5d02ba5ddfc"
        },
        "downloads": -1,
        "filename": "AMPcombi-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cab767f59486ce5dca5576db9d9bef59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14744,
        "upload_time": "2022-10-18T08:42:15",
        "upload_time_iso_8601": "2022-10-18T08:42:15.264767Z",
        "url": "https://files.pythonhosted.org/packages/2f/5b/27fabaf64a3f4b3692b91355051e71379e4d1993a62ec190f2d6a2c0d490/AMPcombi-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84952f07176dfafb90884aeb858979286e245a96220d3f83a3e3d61c136cb0ef",
          "md5": "f2b461469598cf6b27bb823f089a6f60",
          "sha256": "44a9211919f37c11d03e14019f86b54db44c6dce403ea237131f9741c90b2a5c"
        },
        "downloads": -1,
        "filename": "AMPcombi-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f2b461469598cf6b27bb823f089a6f60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13304,
        "upload_time": "2022-10-27T10:38:53",
        "upload_time_iso_8601": "2022-10-27T10:38:53.030628Z",
        "url": "https://files.pythonhosted.org/packages/84/95/2f07176dfafb90884aeb858979286e245a96220d3f83a3e3d61c136cb0ef/AMPcombi-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d27e8b52d3811fc043e2a991a85704c54ae0d43a02a28f93a485025a5b7b1f8a",
          "md5": "54dc00f3b63cfe18dad97810b9cd2b18",
          "sha256": "2d17aa92aa2268aec830477bbc2ee8bcf757827292d511f9cc4ac5b375614075"
        },
        "downloads": -1,
        "filename": "AMPcombi-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "54dc00f3b63cfe18dad97810b9cd2b18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15400,
        "upload_time": "2022-11-02T09:39:49",
        "upload_time_iso_8601": "2022-11-02T09:39:49.791299Z",
        "url": "https://files.pythonhosted.org/packages/d2/7e/8b52d3811fc043e2a991a85704c54ae0d43a02a28f93a485025a5b7b1f8a/AMPcombi-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fca50ddcd2c41ee80a1d5a685c27ab6deb6122be9871740eb794c18c0f3f4a2",
          "md5": "88e4a58431fce0158523e6b6bcdab3cd",
          "sha256": "a73ab40cc80670f403aa629d1c1d7318ce21cc952618fdc1eba0ef667fae3578"
        },
        "downloads": -1,
        "filename": "AMPcombi-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "88e4a58431fce0158523e6b6bcdab3cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15042,
        "upload_time": "2022-11-03T15:33:40",
        "upload_time_iso_8601": "2022-11-03T15:33:40.145370Z",
        "url": "https://files.pythonhosted.org/packages/0f/ca/50ddcd2c41ee80a1d5a685c27ab6deb6122be9871740eb794c18c0f3f4a2/AMPcombi-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0fca50ddcd2c41ee80a1d5a685c27ab6deb6122be9871740eb794c18c0f3f4a2",
        "md5": "88e4a58431fce0158523e6b6bcdab3cd",
        "sha256": "a73ab40cc80670f403aa629d1c1d7318ce21cc952618fdc1eba0ef667fae3578"
      },
      "downloads": -1,
      "filename": "AMPcombi-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "88e4a58431fce0158523e6b6bcdab3cd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15042,
      "upload_time": "2022-11-03T15:33:40",
      "upload_time_iso_8601": "2022-11-03T15:33:40.145370Z",
      "url": "https://files.pythonhosted.org/packages/0f/ca/50ddcd2c41ee80a1d5a685c27ab6deb6122be9871740eb794c18c0f3f4a2/AMPcombi-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}