{
  "info": {
    "author": "",
    "author_email": "Ali Hakim Taskiran <alihakimxyz@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# EL-SPICE\n### Efficient Language - Simulation Program with Integrated Circuit Emphasis\n\n    pip install elspice\n\nEL-Spice is [efficient-language](https://quantumgravityresearch.org/portfolio/principle-of-efficient-language/) based analog electronic circuit simulator. The simulated circuit is created from an expression, then required mathematical operations are applied. Overall, simulation is done. \nThe lingual expression is a geometric code, describes an edge connected to points, which component lies in the edge and what is SI unit magnitude associated with the component. For example:\n\n    (0,0) (0,1) R 5M;\nThis means that a 5 MΩ resistor is connected between points (0,0) and (0,1). Points are not necessarily 2D, it can be in any dimension. Each identifier follows each other by a space. Each component follows the other by a semicolon(**;**)\n\n    (0,0) (0,1) I 2m;(0,1) (1,1) R 1K;(1,1) (0,0) R 2K;\n   This time, a current source of 2mA is connected with two resistors; one them is 1KΩ, other is 2KΩ. Wires don't have any parameter.\n   \n\n    (0,0) (0,1) -;\n  In summary, all components and usage scheme is listed below:\n  \n\n    (0,0) (0,1) -;\n    (0,0) (0,1) V 5;\n    (0,0) (0,1) I 2.3m;\n    (0,0) (0,1) R 3.3M;\n    (0,0) (0,1) C 4.7p;\n    (0,0) (0,1) L 3.4u;\n### RLC Circuit(ω=10<sup>7</sup>)\n\n    (1,0) (1,1) V 5;(1,1) (0,1) C 2n;\n    (0,1) (0,0) L 5u;(1,0) (0,0) R 5;\n\n### Usage\n 1. Firstly define your circuit with <code>circ = elspice.Circuit(D)</code> where D is number of dimensions.\n 2. Create a string of circuit expression with the efficient language and AC frequency. If the circuit is DC, then just write 0 or nothing, it is default to 0. `circ.decode(string_of_circuit, frequency)`\n 3. Get node voltages by calling `circ.nodes()`\n 4. You can export each node voltage `circ.node_voltages()`. It returns an array and a dictionary describes that which index of array is which node.\n\nOverall\n\n    import elspice\n    circ=circ = elspice.Circuit(D)\n    \n    string_of_circuit=\"\"\"(1,0) (1,1) V 5;(1,1) (0,1) C 2n;\n    (0,1) (0,0) L 5u;(1,0) (0,0) R 5;\"\"\"\n    \n    circ.decode(string_of_circuit, 1591549.430)\n    circ.nodes()\nOutput\n\n    Node Voltages:\n    (1, 0): 0V 0°\n    (1, 1): 5.0 V  -1.3232932312128532e-46 °\n    (0, 1): 50.24937807687795 V  84.28940752087149 °\n    (0, 0): 4.999999999999999 V  6.616466159068361e-07 °\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GNU GENERAL PUBLIC LICENSE ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "elspice",
    "package_url": "https://pypi.org/project/elspice/",
    "platform": null,
    "project_url": "https://pypi.org/project/elspice/",
    "project_urls": {
      "Bug Tracker": "https://github.com/alihakimtaskiran/elspice/issues",
      "Homepage": "https://github.com/alihakimtaskiran/elspice"
    },
    "release_url": "https://pypi.org/project/elspice/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Efficient Language - Simulation Program with Integrated Circuit Emphasis",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16894073,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1d291a3f8470d3753e617da3592d7df8388890f9c80d497c8c7db6632097052",
          "md5": "e9503b60a85d3c09438de56cd381b60b",
          "sha256": "4642a936d2c7e3092b4650e3d756c0bad0ca1c070693e18ac8b07d00c0712ee2"
        },
        "downloads": -1,
        "filename": "elspice-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9503b60a85d3c09438de56cd381b60b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4629,
        "upload_time": "2023-02-16T22:13:32",
        "upload_time_iso_8601": "2023-02-16T22:13:32.567702Z",
        "url": "https://files.pythonhosted.org/packages/a1/d2/91a3f8470d3753e617da3592d7df8388890f9c80d497c8c7db6632097052/elspice-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "632b528e25f0f92a13b407ffdd1ea87b1af9502340d85836c83dedd00dea0a3c",
          "md5": "0c8eaa51b3d3205d840d272e84e8143c",
          "sha256": "5a725ad877c1b5b787501650c1038932a55036cf9eeb1c6db4771556bffdb085"
        },
        "downloads": -1,
        "filename": "elspice-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0c8eaa51b3d3205d840d272e84e8143c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4387,
        "upload_time": "2023-02-16T22:13:34",
        "upload_time_iso_8601": "2023-02-16T22:13:34.272563Z",
        "url": "https://files.pythonhosted.org/packages/63/2b/528e25f0f92a13b407ffdd1ea87b1af9502340d85836c83dedd00dea0a3c/elspice-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1d291a3f8470d3753e617da3592d7df8388890f9c80d497c8c7db6632097052",
        "md5": "e9503b60a85d3c09438de56cd381b60b",
        "sha256": "4642a936d2c7e3092b4650e3d756c0bad0ca1c070693e18ac8b07d00c0712ee2"
      },
      "downloads": -1,
      "filename": "elspice-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e9503b60a85d3c09438de56cd381b60b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4629,
      "upload_time": "2023-02-16T22:13:32",
      "upload_time_iso_8601": "2023-02-16T22:13:32.567702Z",
      "url": "https://files.pythonhosted.org/packages/a1/d2/91a3f8470d3753e617da3592d7df8388890f9c80d497c8c7db6632097052/elspice-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "632b528e25f0f92a13b407ffdd1ea87b1af9502340d85836c83dedd00dea0a3c",
        "md5": "0c8eaa51b3d3205d840d272e84e8143c",
        "sha256": "5a725ad877c1b5b787501650c1038932a55036cf9eeb1c6db4771556bffdb085"
      },
      "downloads": -1,
      "filename": "elspice-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0c8eaa51b3d3205d840d272e84e8143c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4387,
      "upload_time": "2023-02-16T22:13:34",
      "upload_time_iso_8601": "2023-02-16T22:13:34.272563Z",
      "url": "https://files.pythonhosted.org/packages/63/2b/528e25f0f92a13b407ffdd1ea87b1af9502340d85836c83dedd00dea0a3c/elspice-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}