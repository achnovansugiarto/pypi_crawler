{
  "info": {
    "author": "Thomas Kemmer",
    "author_email": "tkemmer@computer.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "cachetools\n========================================================================\n\n.. image:: https://img.shields.io/pypi/v/cachetools\n   :target: https://pypi.org/project/cachetools/\n   :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/readthedocs/cachetools\n   :target: https://cachetools.readthedocs.io/\n   :alt: Documentation build status\n\n.. image:: https://img.shields.io/github/workflow/status/tkem/cachetools/CI\n   :target: https://github.com/tkem/cachetools/actions/workflows/ci.yml\n   :alt: CI build status\n\n.. image:: https://img.shields.io/codecov/c/github/tkem/cachetools/master.svg\n   :target: https://codecov.io/gh/tkem/cachetools\n   :alt: Test coverage\n\n.. image:: https://img.shields.io/github/license/tkem/cachetools\n   :target: https://raw.github.com/tkem/cachetools/master/LICENSE\n   :alt: License\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n   :target: https://github.com/psf/black\n   :alt: Code style: black\n\nThis module provides various memoizing collections and decorators,\nincluding variants of the Python Standard Library's `@lru_cache`_\nfunction decorator.\n\n.. code-block:: python\n\n   from cachetools import cached, LRUCache, TTLCache\n\n   # speed up calculating Fibonacci numbers with dynamic programming\n   @cached(cache={})\n   def fib(n):\n       return n if n < 2 else fib(n - 1) + fib(n - 2)\n\n   # cache least recently used Python Enhancement Proposals\n   @cached(cache=LRUCache(maxsize=32))\n   def get_pep(num):\n       url = 'http://www.python.org/dev/peps/pep-%04d/' % num\n       with urllib.request.urlopen(url) as s:\n           return s.read()\n\n   # cache weather data for no longer than ten minutes\n   @cached(cache=TTLCache(maxsize=1024, ttl=600))\n   def get_weather(place):\n       return owm.weather_at_place(place).get_weather()\n\nFor the purpose of this module, a *cache* is a mutable_ mapping_ of a\nfixed maximum size.  When the cache is full, i.e. by adding another\nitem the cache would exceed its maximum size, the cache must choose\nwhich item(s) to discard based on a suitable `cache algorithm`_.  In\ngeneral, a cache's size is the total size of its items, and an item's\nsize is a property or function of its value, e.g. the result of\n``sys.getsizeof(value)``.  For the trivial but common case that each\nitem counts as ``1``, a cache's size is equal to the number of its\nitems, or ``len(cache)``.\n\nMultiple cache classes based on different caching algorithms are\nimplemented, and decorators for easily memoizing function and method\ncalls are provided, too.\n\n\nInstallation\n------------------------------------------------------------------------\n\ncachetools is available from PyPI_ and can be installed by running::\n\n  pip install cachetools\n\nTyping stubs for this package are provided by typeshed_ and can be\ninstalled by running::\n\n  pip install types-cachetools\n\n\nProject Resources\n------------------------------------------------------------------------\n\n- `Documentation`_\n- `Issue tracker`_\n- `Source code`_\n- `Change log`_\n\n\nLicense\n------------------------------------------------------------------------\n\nCopyright (c) 2014-2021 Thomas Kemmer.\n\nLicensed under the `MIT License`_.\n\n\n.. _@lru_cache: https://docs.python.org/3/library/functools.html#functools.lru_cache\n.. _mutable: https://docs.python.org/dev/glossary.html#term-mutable\n.. _mapping: https://docs.python.org/dev/glossary.html#term-mapping\n.. _cache algorithm: https://en.wikipedia.org/wiki/Cache_algorithms\n\n.. _PyPI: https://pypi.org/project/cachetools/\n.. _typeshed: https://github.com/python/typeshed/\n.. _Documentation: https://cachetools.readthedocs.io/\n.. _Issue tracker: https://github.com/tkem/cachetools/issues/\n.. _Source code: https://github.com/tkem/cachetools/\n.. _Change log: https://github.com/tkem/cachetools/blob/master/CHANGELOG.rst\n.. _MIT License: https://raw.github.com/tkem/cachetools/master/LICENSE",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tkem/cachetools/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cachetools-chrisglass",
    "package_url": "https://pypi.org/project/cachetools-chrisglass/",
    "platform": "",
    "project_url": "https://pypi.org/project/cachetools-chrisglass/",
    "project_urls": {
      "Homepage": "https://github.com/tkem/cachetools/"
    },
    "release_url": "https://pypi.org/project/cachetools-chrisglass/4.2.4.1/",
    "requires_dist": null,
    "requires_python": "~=3.5",
    "summary": "Extensible memoizing collections and decorators",
    "version": "4.2.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11916033,
  "releases": {
    "4.2.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb5fb1f87a1b195d582f64c24ff348291533b7908779b727e168e0267691bac5",
          "md5": "40a0e7d07ef69fff0d4bc0748149da2c",
          "sha256": "f7f1191b8ea4b9af57c1430de6ca53dc3cc3fdc5cbe57d453f58ecca0f9e0b1e"
        },
        "downloads": -1,
        "filename": "cachetools-chrisglass-4.2.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "40a0e7d07ef69fff0d4bc0748149da2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.5",
        "size": 26675,
        "upload_time": "2021-11-03T15:53:09",
        "upload_time_iso_8601": "2021-11-03T15:53:09.947397Z",
        "url": "https://files.pythonhosted.org/packages/fb/5f/b1f87a1b195d582f64c24ff348291533b7908779b727e168e0267691bac5/cachetools-chrisglass-4.2.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb5fb1f87a1b195d582f64c24ff348291533b7908779b727e168e0267691bac5",
        "md5": "40a0e7d07ef69fff0d4bc0748149da2c",
        "sha256": "f7f1191b8ea4b9af57c1430de6ca53dc3cc3fdc5cbe57d453f58ecca0f9e0b1e"
      },
      "downloads": -1,
      "filename": "cachetools-chrisglass-4.2.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "40a0e7d07ef69fff0d4bc0748149da2c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.5",
      "size": 26675,
      "upload_time": "2021-11-03T15:53:09",
      "upload_time_iso_8601": "2021-11-03T15:53:09.947397Z",
      "url": "https://files.pythonhosted.org/packages/fb/5f/b1f87a1b195d582f64c24ff348291533b7908779b727e168e0267691bac5/cachetools-chrisglass-4.2.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}