{
  "info": {
    "author": "Colin Bouchard",
    "author_email": "colin.bouchard.gestion@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# CleanFill\nClearFill is a python library you can use to fill NaN value in a matrix using various predictions techniques. This is useful in the context of collaborative filtering. It can be used to predict items rating in the context of recommendation engine. This code will fill NaN (Not A Number) with some predicted value according to the desired method of prediction. \n\nAlot of time, part of the data is left unfilled. This is frustating as sometime you are force to dump alot of data because of missing values. But if you use a library like CleanFill, you can avoid having to remove this potentially useful data.\n\nIt's a simple data transformation tool.\n\n# How it works\nClearFill take in a numpy array matrix containing NaN and fill them with estimated value. For a demonstration simply look at test.py\n\n# Available prediction methode for filling data\n- Linear regression\n- Nearest value\n- Slope One (Fastest)\n- Weighted Slope One\n- Bipolar Slope One\n- Means\n\n# Available filling tools\n- NaNtoZero\n- ZeroToNaN\n\n# Installation\npip install CleanFill\n\n# Depedencies\nYou'll need numpy, scipy and pandas installed in your venv to run this library.\n\n# Exemple for NaN as value with numpy array\n```\nimport numpy as np\nfrom cleanfill import fill\n\n\n\nnan = np.NaN\nmy_data = np.array([[7, nan, 8, 7],\n                    [6, 5, nan, 2],\n                    [nan, 2, 2, 5],\n                    [1, 3, 4, 1],\n                    [2, nan, 2, 1]])\n\n\nprint(fill.linear(my_data))\nprint(fill.nearest(my_data))\nprint(fill.slope_one(my_data))\nprint(fill.weighted_slope_one(my_data))\nprint(fill.bipolar_slope_one(my_data))\nprint(fill.means(my_data)\n```\n\n# Exemple for 0 as value\n```\nimport numpy as np\nfrom cleanfill import fill\n\n\nmy_data2 = np.array([[7, 0, 8, 7],\n                    [6, 5, 0, 2],\n                    [0, 2, 2, 5],\n                    [1, 3, 4, 1],\n                    [2, 0, 2, 1]])\n\n\nmy_data2 = CleanFill.ZeroToNaN(my_data2)\n\nprint(fill.linear(my_data2))\nprint(fill.nearest(my_data))\nprint(fill.slope_one(my_data2))\nprint(fill.weighted_slope_one(my_data2))\nprint(fill.bipolar_slope_one(my_data2))\nprint(fill.means(my_data2))\n```\n\n# Exemple for NaN as value with pandas dataframe\n```\nimport numpy as np\nimport pandas as pd\nfrom cleanfill import fill\n\nd={'name': ['hello', 'mello', 'yellow', 'pink'],\n   'number': [6., 4., np.nan, 8.],\n   'number2': [7., np.nan, 9., 9.],\n   'number3': [np.nan, 5., 9., 10.],\n   'number4': [8., np.nan, 7., 5.],\n   'number5': [8., 6., np.nan, 5.],\n   'number6': [3., 6., 9., np.nan],\n   'number7': [np.nan, 2., 10., 1.],\n   'number7': [2., 10., np.nan, 3.],\n   'number7': [1., 2., 3., np.nan],\n   'number7': [8., np.nan, 9., 9.]\n   }\n\ndf=pd.DataFrame(data=d)\n\nprint(fill.linear(df))\nprint(fill.nearest(df))\nprint(fill.slope_one(df))\nprint(fill.weighted_slope_one(df))\nprint(fill.bipolar_slope_one(df))\nprint(fill.means(df))\n```\n\n# Exemple for 0 as value with pandas dataframe\n```\nimport numpy as np\nimport pandas as pd\nfrom cleanfill import fill\n\nd={'name': ['hello', 'mello', 'yellow', 'pink'],\n   'number': [6., 4., 0, 8.],\n   'number2': [7., 0, 9., 9.],\n   'number3': [0, 5., 9., 10.],\n   'number4': [8., 0, 7., 5.],\n   'number5': [8., 6., 0, 5.],\n   'number6': [3., 6., 9., 0],\n   'number7': [0, 2., 10., 1.],\n   'number7': [2., 10., 0, 3.],\n   'number7': [1., 2., 3., 0],\n   'number7': [8., 0, 9., 9.]\n   }\n\ndf=pd.DataFrame(data=d)\n\ndf=fill.ZeroToNaN(df)\n\nprint(fill.linear(df))\nprint(fill.nearest(df))\nprint(fill.slope_one(df))\nprint(fill.weighted_slope_one(df))\nprint(fill.bipolar_slope_one(df))\nprint(fill.means(df))\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CryptoAdvised/cleanfill",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cleanfill",
    "package_url": "https://pypi.org/project/cleanfill/",
    "platform": null,
    "project_url": "https://pypi.org/project/cleanfill/",
    "project_urls": {
      "Homepage": "https://github.com/CryptoAdvised/cleanfill"
    },
    "release_url": "https://pypi.org/project/cleanfill/0.1.8/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "It serve to fill NaN value in numpy array or in pandas dataframe using various prediction algorithmes.",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15557897,
  "releases": {
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4626a09db65f3799c686e7e2d727a0c9812a9494f88e257c1eda6c14483ee64",
          "md5": "58e7abc9cf2f2b2bd0922ce35f1d1605",
          "sha256": "6cdc620f1f6e96de94c7901f7e2cf8bc58e977c670d1bfb4e1324fe9b3e7b6d8"
        },
        "downloads": -1,
        "filename": "cleanfill-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58e7abc9cf2f2b2bd0922ce35f1d1605",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5936,
        "upload_time": "2022-10-27T16:36:36",
        "upload_time_iso_8601": "2022-10-27T16:36:36.571869Z",
        "url": "https://files.pythonhosted.org/packages/b4/62/6a09db65f3799c686e7e2d727a0c9812a9494f88e257c1eda6c14483ee64/cleanfill-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe25130e79a54e5818f12cbcb8c13e0ca054c698d6f320c5eefa851452fdf726",
          "md5": "014e17f692aa7f8e65c56c9e6ae62a29",
          "sha256": "44861e1a2db9d086d00c13b3aeb22292deeaf7b302b2888194f2e7cfab750310"
        },
        "downloads": -1,
        "filename": "cleanfill-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "014e17f692aa7f8e65c56c9e6ae62a29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7159,
        "upload_time": "2022-10-27T16:36:39",
        "upload_time_iso_8601": "2022-10-27T16:36:39.215981Z",
        "url": "https://files.pythonhosted.org/packages/fe/25/130e79a54e5818f12cbcb8c13e0ca054c698d6f320c5eefa851452fdf726/cleanfill-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4626a09db65f3799c686e7e2d727a0c9812a9494f88e257c1eda6c14483ee64",
        "md5": "58e7abc9cf2f2b2bd0922ce35f1d1605",
        "sha256": "6cdc620f1f6e96de94c7901f7e2cf8bc58e977c670d1bfb4e1324fe9b3e7b6d8"
      },
      "downloads": -1,
      "filename": "cleanfill-0.1.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "58e7abc9cf2f2b2bd0922ce35f1d1605",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5936,
      "upload_time": "2022-10-27T16:36:36",
      "upload_time_iso_8601": "2022-10-27T16:36:36.571869Z",
      "url": "https://files.pythonhosted.org/packages/b4/62/6a09db65f3799c686e7e2d727a0c9812a9494f88e257c1eda6c14483ee64/cleanfill-0.1.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe25130e79a54e5818f12cbcb8c13e0ca054c698d6f320c5eefa851452fdf726",
        "md5": "014e17f692aa7f8e65c56c9e6ae62a29",
        "sha256": "44861e1a2db9d086d00c13b3aeb22292deeaf7b302b2888194f2e7cfab750310"
      },
      "downloads": -1,
      "filename": "cleanfill-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "014e17f692aa7f8e65c56c9e6ae62a29",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7159,
      "upload_time": "2022-10-27T16:36:39",
      "upload_time_iso_8601": "2022-10-27T16:36:39.215981Z",
      "url": "https://files.pythonhosted.org/packages/fe/25/130e79a54e5818f12cbcb8c13e0ca054c698d6f320c5eefa851452fdf726/cleanfill-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}