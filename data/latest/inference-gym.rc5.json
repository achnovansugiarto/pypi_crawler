{
  "info": {
    "author": "Google LLC",
    "author_email": "no-reply@google.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Inference Gym\n\n## Overview\n\nThe Inference Gym is the place to exercise inference methods to help make them\nfaster, leaner and more robust. The goal of the Inference Gym is to provide\na set of probabilistic inference problems with a standardized interface, making\nit easy to test new inference techniques across a variety of challenging tasks.\n\nCurrently it provides a repository of probabilistic models that can be used to\nbenchmark (the computational and statistical performance of) inference\nalgorithms. Probabilistic models are implemented as subclasses of the\n[`Model`][model] class, which minimally provides the following faculties:\n\n- A description of the shapes and dtypes of the parameters of the model.\n- Event space bijectors which map from the unconstrained real space, to the\n  support of the model's associated density.\n- Ability to compute the log un-normalized density at a certain parameter\n  setting.\n- Name of the model.\n- Sample transformations, which when applied to samples from the model's density\n  represent quantities with a useful interpretation.\n\nEach model can additionally provide:\n\n- Ground truth quantities associated with each sample transformation. This can\n  include mean, variance and other statistics. If these are estimated via\n  Monte-Carlo methods, a standard error is also provided. This can be used to\n  verify the algorithm's level of bias.\n\n## Getting started\n\nCheck out the [tutorial].\n\n## Usage\n\n```bash\npip install tfp-nightly inference_gym\n# Install at least one the folowing\npip install tf-nightly  # For the TensorFlow backend.\npip install jax jaxlib  # For the JAX backend.\n# Install to support external datasets\npip install tfds-nightly\n```\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom inference_gym import using_tensorflow as\ninference_gym\n\nmodel = inference_gym.targets.GermanCreditNumericLogisticRegression()\n\nsamples = inference_method(\n  model.unnormalized_log_prob,\n  model.default_event_space_bijector,\n  model.event_shape,\n  model.dtype)\n\nplt.figure()\nplt.suptitle(str(model))  # 'German Credit Numeric Logistic Regression'\nfor i, (name, sample_transformation) in enumerate(\n    model.sample_transformations.items()):\n  transformed_samples = sample_transformation(samples)\n  bias_sq = tf.square(\n      tf.reduce_mean(transformed_samples, 0) -\n      sample_transformation.ground_truth_mean)\n  ess = compute_ess(  # E.g. tfp.mcmc.effective_sample_size if using MCMC.\n      transformed_samples,\n      tf.square(sample_transformation.ground_truth_standard_deviation))\n  plt.subplot(len(model.sample_transformations), 2, 2 * i + 1)\n  plt.title('{} bias^2'.format(sample_transformation))  # e.g. 'Identity bias^2'\n  plt.bar(np.arange(bias_sq.shape[-1]), bias_sq)\n  plt.subplot(len(model.sample_transformations), 2, 2 * i + 2)\n  plt.title('{} ess'.format(sample_transformation))\n  plt.bar(np.arange(ess.shape[-1]), ess)\n```\n\nAlso, see [`VectorModel`][vector_model] which can be used to simplify the\ninterface requirements for the inference method.\n\n\n## What makes for a good Inference Gym Model?\n\nA good model should ideally do one or more of these:\n\n- Help build intuition (usually 1D or 2D for ease of visualization)\n- Represent a generally important application of Bayesian inference\n- Pose a challenge for inference, e.g.\n  - high dimensionality\n  - poor or pathological conditioning\n  - mixing continuous and discrete latents\n  - multimodality\n  - non-identifiability\n  - expensive gradients\n\nNaturally, a model shouldn’t have all of those properties so users can more\neasily do experiments to tease out which complication has what effect on the\ninference procedure. This isn’t an exhaustive list.\n\n## Making changes\n\n### Adding a new model\n\nIt's easiest to mimic an existing example. Here's a small table to help you\nfind an example. If your model isn't described well by these possibilities,\nfeel free to ask for help.\n\n| Bayesian Model? | Real dataset? | Analytic Ground Truth? | Stan Implementation? | Multiple RVs? | Example Model                                                            |\n|-----------------|---------------|------------------------|----------------------|---------------|--------------------------------------------------------------------------|\n| Yes             | Real          | No                     | Yes                  | Yes           | [`GermanCreditNumericSparseLogicRegression`][sparse_logistic_regression] |\n| Yes             | Real          | No                     | Yes                  | No            | [`GermanCreditLogicRegression`][logistic_regression]                     |\n| Yes             | Synthetic     | No                     | Yes                  | Yes           | [`SyntheticItemResponseTheory`][irt]                                     |\n| No              | None          | Yes                    | No                   | No            | [`IllConditionedGaussian`][gaussian]                                     |\n\nA Bayesian model in the table above refers to models whose density over the\nparameters is computed using the product of a prior and a likelihood function\n(i.e. using Bayes' theorem). These models should inherit from the\n[`BayesianModel`][bayesian_model] class, as it provides some utilities for such\nmodels.\n\nCurrently we have a little tooling to help use `cmdstanpy` to generate ground\ntruth values (in the correct format) for models without analytic ground truth.\nUsing this requires adding a model implementation inside the\n[`inference_gym/tools/stan`][ground_truth_dir]\ndirectory.\n\nNew (and existing) models should follow the [Model Contract][contract].\n\n### Adding a new real dataset\n\nWe strongly encourage you to add your dataset to TensorFlow Datasets first.\nThen, you can follow the example of the `German Credit (numeric)` dataset used\nin the `GermanCreditLogicRegression`.\n\n### Adding a new synthetic dataset\n\nFollow the example of the [`SyntheticItemResponseTheory`][irt] model.\n\n### Generating ground truth files.\n\nSee [`inference_gym/tools/get_ground_truth.py`][get_ground_truth].\n\n[model]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/inference_gym/targets/model.py\n[get_ground_truth]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/inference_gym/tools/get_ground_truth.py\n[ground_truth_dir]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/inference_gym/tools/stan\n[bayesian_model]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/inference_gym/targets/bayesian_model.py\n[sparse_logistic_regression]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/inference_gym/targets/sparse_logistic_regression.py\n[logistic_regression]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/inference_gym/targets/logistic_regression.py\n[irt]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/inference_gym/targets/item_response_theory.py\n[gaussian]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/inference_gym/targets/ill_conditioned_gaussian.py\n[vector_model]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/inference_gym/targets/vector_model.py\n[tutorial]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/notebooks/inference_gym_tutorial.ipynb\n[contract]: https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym/model_contract.md\n\n### Citing Inference Gym\n\nTo cite the Inference Gym:\n\n```none\n@software{inferencegym2020,\n  author = {Pavel Sountsov and Alexey Radul and contributors},\n  title = {Inference Gym},\n  url = {https://pypi.org/project/inference_gym},\n  version = {0.0.4},\n  year = {2020},\n}\n```\n\nMake sure to update the `version` attribute to match the actual version you're\nusing.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym",
    "keywords": "tensorflow jax probability statistics bayesian machine learning",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "inference-gym",
    "package_url": "https://pypi.org/project/inference-gym/",
    "platform": "",
    "project_url": "https://pypi.org/project/inference-gym/",
    "project_urls": {
      "Homepage": "https://github.com/tensorflow/probability/tree/master/spinoffs/inference_gym"
    },
    "release_url": "https://pypi.org/project/inference-gym/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "The Inference Gym is the place to exercise inference methods to help make them faster, leaner and more robust.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9208003,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4234641d2d850d0267d76bbfff941faad50bab9371df7c9c6ede1dfe0916db33",
          "md5": "48e23af23e4aa72e896f2357007df9a4",
          "sha256": "3bff87b7ca0e1c10be7f8a51b5e6d6c016bb5b315b2b56e4b3702174046951e3"
        },
        "downloads": -1,
        "filename": "inference_gym-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "48e23af23e4aa72e896f2357007df9a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6131,
        "upload_time": "2020-08-27T19:34:25",
        "upload_time_iso_8601": "2020-08-27T19:34:25.539659Z",
        "url": "https://files.pythonhosted.org/packages/42/34/641d2d850d0267d76bbfff941faad50bab9371df7c9c6ede1dfe0916db33/inference_gym-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da07cae7c26ad05ef818d71e655bc33dbae03b6fb871b29838dde636c9dcd612",
          "md5": "b42a04bf2fe64157f94e5993ca25be38",
          "sha256": "14e279ad0141d2cc3c6c0cf7fd1d414b1f08712f7e7c9377505c8fe6bc099079"
        },
        "downloads": -1,
        "filename": "inference_gym-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b42a04bf2fe64157f94e5993ca25be38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 1356,
        "upload_time": "2020-08-27T19:34:28",
        "upload_time_iso_8601": "2020-08-27T19:34:28.112042Z",
        "url": "https://files.pythonhosted.org/packages/da/07/cae7c26ad05ef818d71e655bc33dbae03b6fb871b29838dde636c9dcd612/inference_gym-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6db4a48337c82b8f988b8d44ca19394bf0faf40e0e2850c2f4703312b3c2a9d4",
          "md5": "11ee287cc79cd0fe583916f9f86dbd2d",
          "sha256": "c978c8a265f849ad71f09e8e74bf7404c3160d5f04570634b1b1467633265785"
        },
        "downloads": -1,
        "filename": "inference_gym-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11ee287cc79cd0fe583916f9f86dbd2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 255243,
        "upload_time": "2020-09-03T23:11:14",
        "upload_time_iso_8601": "2020-09-03T23:11:14.241323Z",
        "url": "https://files.pythonhosted.org/packages/6d/b4/a48337c82b8f988b8d44ca19394bf0faf40e0e2850c2f4703312b3c2a9d4/inference_gym-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64c852550bb0d4d8d65f24fab0457595afacd0b7c0ad853fd299211faa483ffa",
          "md5": "245c53d1cf22d4d081f077e4dc1c2c67",
          "sha256": "10b40b3e43e66086af5d0416ac2bd1006d70b7a74cd683d8634b816b2b956d9d"
        },
        "downloads": -1,
        "filename": "inference_gym-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "245c53d1cf22d4d081f077e4dc1c2c67",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 285831,
        "upload_time": "2020-10-22T04:09:02",
        "upload_time_iso_8601": "2020-10-22T04:09:02.234064Z",
        "url": "https://files.pythonhosted.org/packages/64/c8/52550bb0d4d8d65f24fab0457595afacd0b7c0ad853fd299211faa483ffa/inference_gym-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32f31bb40f69067614e38808e5acc59d4074e3134857f688fc136da30c03ab8b",
          "md5": "0a18186b440b98206a5872f8b068d4fb",
          "sha256": "716516cd0f371b9de1ffc6092f6ad783316938ea0ebb759bee95a01fc68a7a6f"
        },
        "downloads": -1,
        "filename": "inference_gym-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a18186b440b98206a5872f8b068d4fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 286011,
        "upload_time": "2020-10-24T03:02:59",
        "upload_time_iso_8601": "2020-10-24T03:02:59.872184Z",
        "url": "https://files.pythonhosted.org/packages/32/f3/1bb40f69067614e38808e5acc59d4074e3134857f688fc136da30c03ab8b/inference_gym-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4aa69531d7b35e2e4753108498421410a7205dedbd5dd38541e8b43dee992594",
          "md5": "a64d5253d97f14a2bab94b36d927d016",
          "sha256": "6e98bf201f0fb8b3c82a84e398179597fe171af13fcb21bc598c4da8d72bbaf1"
        },
        "downloads": -1,
        "filename": "inference_gym-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a64d5253d97f14a2bab94b36d927d016",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 290430,
        "upload_time": "2021-01-23T00:22:49",
        "upload_time_iso_8601": "2021-01-23T00:22:49.940189Z",
        "url": "https://files.pythonhosted.org/packages/4a/a6/9531d7b35e2e4753108498421410a7205dedbd5dd38541e8b43dee992594/inference_gym-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4aa69531d7b35e2e4753108498421410a7205dedbd5dd38541e8b43dee992594",
        "md5": "a64d5253d97f14a2bab94b36d927d016",
        "sha256": "6e98bf201f0fb8b3c82a84e398179597fe171af13fcb21bc598c4da8d72bbaf1"
      },
      "downloads": -1,
      "filename": "inference_gym-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a64d5253d97f14a2bab94b36d927d016",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 290430,
      "upload_time": "2021-01-23T00:22:49",
      "upload_time_iso_8601": "2021-01-23T00:22:49.940189Z",
      "url": "https://files.pythonhosted.org/packages/4a/a6/9531d7b35e2e4753108498421410a7205dedbd5dd38541e8b43dee992594/inference_gym-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}