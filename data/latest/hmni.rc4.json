{
  "info": {
    "author": "Christopher Thornton",
    "author_email": "christopher_thornton@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "<p align=\"center\">\n  <img src=\"https://github.com/Christopher-Thornton/hmni/blob/master/nametag.png?raw=true\" alt=\"logo\" />\n</p>\n\n# HMNI\n\n![GitHub](https://img.shields.io/github/license/Christopher-Thornton/hmni)\n![PyPI](https://img.shields.io/pypi/v/hmni)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/hmni)\n[![Documentation Status](https://readthedocs.org/projects/hmni/badge/?version=latest)](https://hmni.readthedocs.io/en/latest/?badge=latest)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/hmni)\n![GitHub repo size](https://img.shields.io/github/repo-size/Christopher-Thornton/hmni)\n\nFuzzy name matching with machine learning. Perform common fuzzy name matching tasks including similarity scoring, record linkage, deduplication and normalization.\n\nHMNI is trained on an internationally-transliterated Latin firstname dataset, where precision is afforded priority.\n\n|    Model    |  Accuracy | Precision |   Recall  |  F1-Score \n|-------------|-----------|-----------|-----------|-----------\n| HMNI-Latin  | 0.9393    | 0.9255    | 0.7548    | 0.8315    \n\nFor an introduction to the methodology and research behind HMNI, please refer to my [blog post](https://towardsdatascience.com/fuzzy-name-matching-with-machine-learning-f09895dce7b4).\n\n## Requirements\n### Python 3.5–3.8\n-  tensorflow\n-  scikit-learn\n-  fuzzywuzzy\n-  abydos\n-  unidecode\n\n## QUICK USAGE GUIDE\n## Installation\nUsing PIP via PyPI\n```bash\npip install hmni\n```\n#### Initialize a Matcher Object\n```python\nimport hmni\nmatcher = hmni.Matcher(model='latin')\n```\n#### Single Pair Similarity\n```python\nmatcher.similarity('Alan', 'Al')\n# 0.6838303319889133\n\nmatcher.similarity('Alan', 'Al', prob=False)\n# 1\n\nmatcher.similarity('Alan Turing', 'Al Turing', surname_first=False)\n# 0.6838303319889133\n```\n#### Record Linkage\n```python\nimport pandas as pd\n\ndf1 = pd.DataFrame({'name': ['Al', 'Mark', 'James', 'Harold']})\ndf2 = pd.DataFrame({'name': ['Mark', 'Alan', 'James', 'Harold']})\n\nmerged = matcher.fuzzymerge(df1, df2, how='left', on='name')\n```\n#### Name Deduplication and Normalization\n```python\nnames_list = ['Alan', 'Al', 'Al', 'James']\n\nmatcher.dedupe(names_list, keep='longest')\n# ['Alan', 'James']\n\nmatcher.dedupe(names_list, keep='frequent')\n# ['Al, 'James']\n\nmatcher.dedupe(names_list, keep='longest', replace=True)\n# ['Alan, 'Alan', 'Alan', 'James']\n```\n## Matcher Parameters\n> **hmni.Matcher**(model='latin', prefilter=True, allow_alt_surname=True, allow_initials=True, allow_missing_components=True)\n* **model** *(str)* -- HMNI statistical model (latin by default)\n* **prefilter** *(bool)* -- Should the matcher prefilter unlikely candidates (True by default)\n* **allow_alt_surname** *(bool)* -- Should the matcher consider phonetic matching surnames *e.g. Smith, Schmidt* (True by default)\n* **allow_initials** *(bool)* -- Should the matcher consider names with initials (True by default)\n* **allow_missing_components** *(bool)* -- Should the matcher consider names with missing components (True by default)\n\n## Matcher Methods\n> **similarity**(name_a, name_b, prob=True, surname_first=False)\n* **name_a** *(str)* -- First name for comparison\n* **name_b** *(str)* -- Second name for comparison\n* **prob** *(bool)* -- If True return a predicted probability, else binary class label\n* **threshold** *(float)* -- Prediction probability threshold for positive match (0.5 by default)\n* **surname_first** *(bool)* -- If name strings start with surname (False by default)\n\n> **fuzzymerge**(df1, df2, how='inner', on=None, left_on=None, right_on=None, indicator=False, limit=1, threshold=0.5, allow_exact_matches=True, surname_first=False)\n* **df1** *(pandas DataFrame or named Series)* -- First/Left object to merge with\n* **df2** *(pandas DataFrame or named Series)* -- Second/Right object to merge with\n* **how** *(str)* -- Type of merge to be performed\n    * `inner` (default): Use intersection of keys from both frames, similar to a SQL inner join; preserve the order of the left keys\n    * `left`: Use only keys from left frame, similar to a SQL left outer join; preserve key order\n    * `right`: Use only keys from right frame, similar to a SQL right outer join; preserve key order\n    * `outer`: Use union of keys from both frames, similar to a SQL full outer join; sort keys lexicographically\n* **on** *(label or list)* -- Column or index level names to join on. These must be found in both DataFrames\n* **left_on** *(label or list)* -- Column or index level names to join on in the left DataFrame\n* **right_on** *(label or list)* -- Column or index level names to join on in the right DataFrame\n* **indicator** *(bool)* -- If True, adds a column to output DataFrame called “_merge” with information on the source of each row (False by default)\n* **limit** *(int)* -- Top number of name matches to consider (1 by default)     \n* **threshold** *(float)* -- Prediction probability threshold for positive match (0.5 by default)       \n* **allow_exact_matches** *(bool)* -- If True allow merging on exact name matches, else do not consider exact matches (True by default)\n* **surname_first** *(bool)* -- If name strings start with surname (False by default)\n\n> **dedupe**(names, threshold=0.5, keep='longest', reverse=True, limit=3, replace=False, surname_first=False)\n* **names** *(list)* -- List of names to dedupe\n* **threshold** *(float)* -- Prediction probability threshold for positive match (0.5 by default)\n* **keep** *(str)* -- Specifies method for keeping one of multiple alternative names \n    * `longest` (default): Keeps longest name\n    * `frequent`: Keeps most frequent name in names list\n* **reverse** *(bool)* -- If True will sort matches descending order, else ascending (True by default)\n* **limit** *(int)* -- Top number of name matches to consider (3 by default)\n* **replace** *(bool)* -- If True return normalized name list, else return deduplicated name list (False by default) \n* **surname_first** *(bool)* -- If name strings start with surname (False by default)\n\n> **assign_similarity**(name_a, name_b, score)\n* **name_a** *(str)* -- First name for similarity score assignment\n* **name_b** *(str)* -- Second name for similarity score assignment\n* **score** *(float)* -- Assigned similarity score for pair of names\n\n## Contributing\nPull requests are welcome. \nFor developers wishing to build a model using Latin or non-Latin writing systems (Chinese, Cyrillic, Arabic), \njupyter notebooks are shared in the `dev` folder to build models using similar methods. \n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/Christopher-Thornton/hmni/archive/v0.1.8.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Christopher-Thornton/hmni",
    "keywords": "fuzzy-matching,natural-language-processing,nlp,machine-learning,data-science,python,artificial-intelligence,ai",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hmni",
    "package_url": "https://pypi.org/project/hmni/",
    "platform": "",
    "project_url": "https://pypi.org/project/hmni/",
    "project_urls": {
      "Download": "https://github.com/Christopher-Thornton/hmni/archive/v0.1.8.zip",
      "Homepage": "https://github.com/Christopher-Thornton/hmni"
    },
    "release_url": "https://pypi.org/project/hmni/0.1.8/",
    "requires_dist": [
      "tensorflow",
      "pandas (>=0.25)",
      "numpy",
      "unidecode",
      "fuzzywuzzy",
      "abydos (==0.5.0)",
      "scikit-learn",
      "joblib"
    ],
    "requires_python": "",
    "summary": "Fuzzy Name Matching with Machine Learning",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8178995,
  "releases": {
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd8c3f8102d161b4e77fa6e3c6b5476e8097f66b288a6b4ee6593cb647b1fa7f",
          "md5": "081931e6340d9f3322fd6c72e9e55cf1",
          "sha256": "301af461a993f2f16e69d8915a0ab70fce2b95ac7787a2df69cecd6e35ede901"
        },
        "downloads": -1,
        "filename": "hmni-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "081931e6340d9f3322fd6c72e9e55cf1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22187761,
        "upload_time": "2020-08-19T18:38:41",
        "upload_time_iso_8601": "2020-08-19T18:38:41.918556Z",
        "url": "https://files.pythonhosted.org/packages/bd/8c/3f8102d161b4e77fa6e3c6b5476e8097f66b288a6b4ee6593cb647b1fa7f/hmni-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12ecbc7955b189d7ed55085f2e10a372c68d2e37af735e787647997bb0946c4a",
          "md5": "220f56400c97423e5f328cb8e2f627c5",
          "sha256": "6913e1e5807763ff2c99864bc8e304555cf298da0cae90f37e28679560acb5c8"
        },
        "downloads": -1,
        "filename": "hmni-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "220f56400c97423e5f328cb8e2f627c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22186967,
        "upload_time": "2020-08-19T18:38:47",
        "upload_time_iso_8601": "2020-08-19T18:38:47.212387Z",
        "url": "https://files.pythonhosted.org/packages/12/ec/bc7955b189d7ed55085f2e10a372c68d2e37af735e787647997bb0946c4a/hmni-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3372f60db723d4c9a5fc145f955b4d1571131c7827d62df1d6ee9ece1a7ef3b",
          "md5": "0dfd4d05690ac94b94302412e91304bd",
          "sha256": "29d494b1e028ae3ed0c23f17a13c3188c383c997a2666ae1f08cd06805681177"
        },
        "downloads": -1,
        "filename": "hmni-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dfd4d05690ac94b94302412e91304bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22187733,
        "upload_time": "2020-08-27T03:46:12",
        "upload_time_iso_8601": "2020-08-27T03:46:12.272888Z",
        "url": "https://files.pythonhosted.org/packages/d3/37/2f60db723d4c9a5fc145f955b4d1571131c7827d62df1d6ee9ece1a7ef3b/hmni-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b0e8cbff99778617f28101ce87b02675a575385d5f3ddaf097b3bcb67c50ad1",
          "md5": "3d825208f0592c1d2075162bd0241c4b",
          "sha256": "112e4af83a5d4364b0f6d3b12450c7c2f1b623bbd8376e319821424af65c9f24"
        },
        "downloads": -1,
        "filename": "hmni-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "3d825208f0592c1d2075162bd0241c4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22186928,
        "upload_time": "2020-08-27T03:46:19",
        "upload_time_iso_8601": "2020-08-27T03:46:19.060920Z",
        "url": "https://files.pythonhosted.org/packages/6b/0e/8cbff99778617f28101ce87b02675a575385d5f3ddaf097b3bcb67c50ad1/hmni-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7abb5134cf6251ab28c24c1289c376de85a2bdac0eeef8d703127e71bfeab78e",
          "md5": "192ed6bbe8af8d1d04767cd5ee1fe5db",
          "sha256": "a81be48b7b5fa9f215d0faa8f7526a6540ddedb43bb4bb5db1b1f68f3d4518e5"
        },
        "downloads": -1,
        "filename": "hmni-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "192ed6bbe8af8d1d04767cd5ee1fe5db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22188798,
        "upload_time": "2020-09-11T03:44:04",
        "upload_time_iso_8601": "2020-09-11T03:44:04.853025Z",
        "url": "https://files.pythonhosted.org/packages/7a/bb/5134cf6251ab28c24c1289c376de85a2bdac0eeef8d703127e71bfeab78e/hmni-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5c1adc35186154175d744902c8543eecaf0fd78e888e86145f3824461d20eda",
          "md5": "0b392c11bd0d71717ba4932c2ce93c0d",
          "sha256": "c92e44d278cb58d25836e3c4e9815f292342e99602bd297abfe3da4b9fa22284"
        },
        "downloads": -1,
        "filename": "hmni-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "0b392c11bd0d71717ba4932c2ce93c0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22188228,
        "upload_time": "2020-09-11T03:44:11",
        "upload_time_iso_8601": "2020-09-11T03:44:11.635123Z",
        "url": "https://files.pythonhosted.org/packages/c5/c1/adc35186154175d744902c8543eecaf0fd78e888e86145f3824461d20eda/hmni-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6010ef662c2d9d01f2fc5b13c0a779259b12b3b916bcde6686841496bcd665a4",
          "md5": "0928b37676cc7a061114a37ba30f45ca",
          "sha256": "f262fa842b0d7a6c7e1b5ae643c32e9ac9f61e33e79c7bab1396b7e5ef8aac36"
        },
        "downloads": -1,
        "filename": "hmni-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0928b37676cc7a061114a37ba30f45ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22189171,
        "upload_time": "2020-09-14T05:27:30",
        "upload_time_iso_8601": "2020-09-14T05:27:30.991272Z",
        "url": "https://files.pythonhosted.org/packages/60/10/ef662c2d9d01f2fc5b13c0a779259b12b3b916bcde6686841496bcd665a4/hmni-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b860c5b4406c666ad73feef5d8dab012f04a6e4f1a31eeab60b32f530cb4fb7",
          "md5": "290e9969eab1fa04649507ed026d4cca",
          "sha256": "7d2d339c6848a509ac5bf99b6f925e1eee4cd858bec1d8233c87f375d9ed0063"
        },
        "downloads": -1,
        "filename": "hmni-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "290e9969eab1fa04649507ed026d4cca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22188710,
        "upload_time": "2020-09-14T05:27:36",
        "upload_time_iso_8601": "2020-09-14T05:27:36.323599Z",
        "url": "https://files.pythonhosted.org/packages/9b/86/0c5b4406c666ad73feef5d8dab012f04a6e4f1a31eeab60b32f530cb4fb7/hmni-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6010ef662c2d9d01f2fc5b13c0a779259b12b3b916bcde6686841496bcd665a4",
        "md5": "0928b37676cc7a061114a37ba30f45ca",
        "sha256": "f262fa842b0d7a6c7e1b5ae643c32e9ac9f61e33e79c7bab1396b7e5ef8aac36"
      },
      "downloads": -1,
      "filename": "hmni-0.1.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0928b37676cc7a061114a37ba30f45ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22189171,
      "upload_time": "2020-09-14T05:27:30",
      "upload_time_iso_8601": "2020-09-14T05:27:30.991272Z",
      "url": "https://files.pythonhosted.org/packages/60/10/ef662c2d9d01f2fc5b13c0a779259b12b3b916bcde6686841496bcd665a4/hmni-0.1.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b860c5b4406c666ad73feef5d8dab012f04a6e4f1a31eeab60b32f530cb4fb7",
        "md5": "290e9969eab1fa04649507ed026d4cca",
        "sha256": "7d2d339c6848a509ac5bf99b6f925e1eee4cd858bec1d8233c87f375d9ed0063"
      },
      "downloads": -1,
      "filename": "hmni-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "290e9969eab1fa04649507ed026d4cca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22188710,
      "upload_time": "2020-09-14T05:27:36",
      "upload_time_iso_8601": "2020-09-14T05:27:36.323599Z",
      "url": "https://files.pythonhosted.org/packages/9b/86/0c5b4406c666ad73feef5d8dab012f04a6e4f1a31eeab60b32f530cb4fb7/hmni-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}