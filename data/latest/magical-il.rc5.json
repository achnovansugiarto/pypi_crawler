{
  "info": {
    "author": "Sam Toyer",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Multitask Assessment of Generalisation in Imitative Control Algorithms (MAGICAL)\n\n[![PyPI package](https://badge.fury.io/py/magical-il.svg)](https://badge.fury.io/py/magical-il)\n[![CircleCI pipelines](https://circleci.com/gh/qxcv/magical.svg?style=svg)](https://app.circleci.com/pipelines/github/qxcv/magical)\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/qxcv/magical/blob/pyglet1.5/demo-notebook.ipynb)\n\n## A Benchmark Suite for Robust imitation Learning\n\nMAGICAL is a benchmark suite to evaluate the generalisation capabilities of\nimitation learning algorithms. Rather than using the same setting for training\nand testing, MAGICAL provides one set of \"training\" environments where\ndemonstrations are observed, and another, distinct set of \"testing\" environments\nwhich each vary in different ways. MAGICAL is a multitask suite, and we refer to\nthe training environment for a given task as the \"demo variant\", and the testing\nenvironments for task as \"test variants\". This structure makes it possible to\nevaluate how well an imitation learning (or reward learning) algorithm is able\nto generalise the intent behind a set of demonstrations to a substantially\ndifferent setting.\n\n![demonstration variant of one environment presented alongside three labelled test variants](images/lead.png)\n\nThe different tasks that comprise the MAGICAL suite each require similar skills,\nsuch as manipulation of 2D blocks, perception of shape and colour, relational\nreasoning, and so on. This makes it possible, in principle, to use multi-task\nand meta-IL algorithms that allow for transfer of skills between tasks, and\n(hopefully) extrapolation of demonstrator intent across the different variants\nfor each task.\n\n## Installing and using MAGICAL\n\nYou can install MAGICAL using `pip`:\n\n```sh\npip install magical-il\n```\n\nIf you have an X server and input device, you can try controlling the robot in\none of the environments:\n\n```sh\npython -m magical --env-name FindDupe-Demo-v0\n```\n\nUse the arrow keys to move, space bar to close the grippers, and `R` key to\nreset the environment.\n\nAt an API level, MAGICAL tasks and variants are just Gym environments. Once\nyou've installed MAGICAL, you can use the Gym environments as follows:\n\n```python\nimport gym\nimport magical\n\n# magical.register_envs() must be called before making any Gym envs\nmagical.register_envs()\n\n# creating a demo variant for one task\nenv = gym.make('FindDupe-Demo-v0')\nenv.reset()\nenv.render(mode='human')\nenv.close()\n\n# We can also make the test variant of the same environment, or add a\n# preprocessor to the environment. In this case, we are creating a\n# TestShape variant of the original environment, and applying the\n# LoRes4E preprocessor to observations. LoRes4E stacks four\n# egocentric frames together and downsamples them to 96x96.\nenv = gym.make('FindDupe-TestShape-LoRes4E-v0')\ninit_obs = env.reset()\nprint('Observation type:', type(obs))  # np.ndarray\nprint('Observation shape:', obs.shape)  # (96, 96, 3)\nenv.close()\n```\n\nIn general, Gym environment names for MAGICAL take the form\n`<task-name>-<variant>[-<preprocessor]-v0`, where the final preprocessor name is\noptional. For instance,`FindDupe-Demo-v0`, `MoveToCorner-Demo-LoResStack-v0` and\n`ClusterColour-TestAll-v0` are all available Gym environments. Keep reading to\nsee a list of all available tasks and variants, as well as all the builtin\nobservation preprocessors that ship with MAGICAL.\n\nNote that the reference demonstration data for MAGICAL is *not* included in the\nPyPI package. Rather, it is packaged as [another Github\nrepository](https://github.com/qxcv/magical-data/). See the \"Using pre-recorded\ndemonstrations\" section below for instructions on using this data.\n\n## Tasks and variants\n\nHere are the available tasks, along with a picture of the initial state of the\ndemo variant:\n\n| | Task |\n| :---: | --- |\n| ![movetocorner task](images/static-movetocorner-demo-v0.png) | **MoveToCorner:** Robot must push a block from the bottom right corner to the top left. Does not support Layout and CountPlus variants. |\n| ![movetoregion task](images/static-movetoregion-demo-v0.png) | **MoveToRegion:** Move into the goal region and stay there. Does not support Shape and CountPlus variants. |\n| ![matchregions task](images/static-matchregions-demo-v0.png) | **MatchRegions:** Fill the goal region with all blocks of the same colour as the goal region. |\n| ![makeline task](images/static-makeline-demo-v0.png) | **MakeLine:** Arrange all blocks into a line. |\n| ![finddupe task](images/static-finddupe-demo-v0.png) | **FindDupe:** The goal region starts with one block inside it. The robot must find a duplicate of the block, and push it inside the goal region too. |\n| ![fixcolour task](images/static-fixcolour-demo-v0.png) | **FixColour:** There are several goal regions, each containing one block. One goal region has a block which doesn't match the regions colour. That block should be pushed out of its region, while keeping all other colours the same. |\n| ![clustercolour task](images/static-clustercolour-demo-v0.png) | **ClusterColour:** Sort the blocks into spatially separated clusters of uniform colour. |\n| ![clustershape task](images/static-clustershape-demo-v0.png) | **ClusterShape:** Sort the blocks into spatially separated clusters of uniform shape. |\n\nEach task can be instantiated in one of several _variants_, each of which\nchanges one or more aspects of the environment to evaluate combinatorial\ngeneralisation:\n\n- **Demo:** the default variant in which all demonstrations are observed.\n  Initial states of the demo variants for each task are pictured above.\n- **Jitter:** the rotations and orientations of all objects, and the size of\n  goal regions, is jittered by up to 5% of the maximum range.\n- **Layout:** positions and rotations of all objects are completely randomised.\n- **Colour:** colours of blocks and goal reginos are randomised, subject to\n  task-specific constraints (e.g. that there should always be at least one block\n  of each colour in ClusterColour).\n- **Shape:** shapes of pushable blocks are randomised, again subject to\n  task-specific constraints.\n- **CountPlus:** the layout, colour, shape, and _number_ of objects is\n  randomised.\n- **Dynamics:** mass and friction of objects is randomsied.\n- **All:** all applicable randomisations are applied.\n\nExcept where listsed in the task table above, all tasks support all variants.\n\n## Preprocessors\n\nThe default observation type is a `dict` containing two keys, `ego` and `allo`,\ncorresponding to egocentric and allocentric views of the environment,\nrespectively. The values of this dictionary are 384×384 RGB images with the the\ncorresponding view. If you don't want to work with a dict of views for single\ntime steps, then you can also get observation spaces by appending one of the\nfollowing preprocessor names to the env name:\n\n- `-LoResStack`: rather than showing only one image of the environment, values\n  of the observation dict will contain the four most recent frames, concatenated\n  along the channels axis. Additionally, observations will be resized to 96×96\n  pixels.\n- `-LoRes4E`: rather than having a dict observation space, observations will now\n  be 96×96×12 numpy arrays containing only the four most recent egocentric\n  views, stacked along the channels axis.\n- `-LoRes4A`: like `-LoRes4E`, but with allocentric views instead of egocentric\n  views.\n- `-LoRes3EA`: like `-LoRes4E`, but contains the three most recent egocentric\n  views concatenated with the most recent allocentric view. Useful for\n  maintaining full observability of the workspace while retaining the\n  ease-of-learning afforded by an egocentric perspective.\n- `LoResCHW4E`: like `-LoRes4E`, but transposes observations to be\n  channels-first (i.e. the Torch default).\n\nThe complete list of preprocessors is defined in\n`magical.benchmarks.DEFAULT_PREPROC_ENTRY_POINT_WRAPPERS`.\n\n## Using pre-recorded demonstrations\n\nWe distribute [reference\ndemonstrations](https://github.com/qxcv/magical-data.git) for use with the\nMAGICAL benchmark. To download the demonstrations, use\n`magical.reference_demos`:\n\n```python\nimport magical\nmagical.try_download_demos(dest=\"demos\")\n```\n\nNow the `demos` directory will contain a set of demonstration trajectories as\ncompressed pickles, like so:\n\n```\ndemos\n├── cluster-colour\n│   ├── demo-ClusterColour-Demo-v0-000.pkl.gz\n│   ├── demo-ClusterColour-Demo-v0-001.pkl.gz\n│   ├── demo-ClusterColour-Demo-v0-002.pkl.gz\n│   ├── …\n│   └── demo-ClusterColour-Demo-v0-024.pkl.gz\n├── cluster-shape\n│   ├── demo-ClusterShape-Demo-v0-000.pkl.gz\n│   └── …\n├── find-dupe\n│   ├── demo-FindDupe-Demo-v0-000.pkl.gz\n│   └── …\n├── fix-colour\n│   ├── demo-FixColour-Demo-v0-000.pkl.gz\n│   └── …\n├── make-line\n│   ├── demo-MakeLine-Demo-v0-000.pkl.gz\n│   └── …\n├── match-regions\n│   ├── demo-MatchRegions-Demo-v0-000.pkl.gz\n│   └── …\n├── move-to-corner\n│   ├── demo-MoveToCorner-Demo-v0-000.pkl.gz\n│   └── …\n├── move-to-region\n│   ├── demo-MoveToRegion-Demo-v0-000.pkl.gz\n└── └── …\n```\n\nTo load these files, you can use `magical.load_demos`:\n\n```python\nimport magical, glob\ndemo_trajs = list(magical.load_demos(glob.glob(\"demos/move-to-corner/demo-*.pkl.gz\")))\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/qxcv/magical/",
    "keywords": "",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "magical-il",
    "package_url": "https://pypi.org/project/magical-il/",
    "platform": "",
    "project_url": "https://pypi.org/project/magical-il/",
    "project_urls": {
      "Homepage": "https://github.com/qxcv/magical/"
    },
    "release_url": "https://pypi.org/project/magical-il/0.0.1a4/",
    "requires_dist": [
      "pymunk (~=5.6.0)",
      "pyglet (==1.5.*)",
      "gym (==0.17.*)",
      "Click (>=7.0)",
      "numpy (>=1.17.4)",
      "cloudpickle (>=1.2.2)",
      "statsmodels (>=0.10.2)",
      "requests (==2.*,>=2.20.0)",
      "opencv-python-headless (==4.*)",
      "pytest (~=6.1.2) ; extra == 'dev'",
      "pytest-xdist (~=2.1.0) ; extra == 'dev'",
      "isort (~=5.0) ; extra == 'dev'",
      "yapf (~=0.30.0) ; extra == 'dev'",
      "flake8 (~=3.8.3) ; extra == 'dev'",
      "autoflake (~=1.4) ; extra == 'dev'",
      "pytest-flake8 (~=1.0.6) ; extra == 'dev'",
      "pytest-isort (~=1.2.0) ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "MAGICAL is a benchmark suite for robust imitation learning",
    "version": "0.0.1a4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8784686,
  "releases": {
    "0.0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bc5872cf73f5999036da7c13e19fe140908e0a2bf1f159afa8e470444029e4c",
          "md5": "8cfa6c9a59246637f8bec1faba335321",
          "sha256": "ef4fb808e1a9d98bcd937d4c95a77e85671b7a04b11a65de331a8e2c22f35451"
        },
        "downloads": -1,
        "filename": "magical_il-0.0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cfa6c9a59246637f8bec1faba335321",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 71360,
        "upload_time": "2020-10-21T04:34:25",
        "upload_time_iso_8601": "2020-10-21T04:34:25.060973Z",
        "url": "https://files.pythonhosted.org/packages/2b/c5/872cf73f5999036da7c13e19fe140908e0a2bf1f159afa8e470444029e4c/magical_il-0.0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eace7988b20097d63cabeee4005f16fe807dfd9761713756e580935ac9b2aec7",
          "md5": "e899084c7d4d659155d083fada4c834a",
          "sha256": "c429ce33e418eacd595974c0eebf9c66e1ff0358041edaaad78f7bd97b463360"
        },
        "downloads": -1,
        "filename": "magical-il-0.0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "e899084c7d4d659155d083fada4c834a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 61019,
        "upload_time": "2020-10-21T04:34:27",
        "upload_time_iso_8601": "2020-10-21T04:34:27.473953Z",
        "url": "https://files.pythonhosted.org/packages/ea/ce/7988b20097d63cabeee4005f16fe807dfd9761713756e580935ac9b2aec7/magical-il-0.0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dbb4e922b58f16d265995879a0ca2c54a1202fc724fff5487b5fc3156a6f858",
          "md5": "b9c72a8d82b1198c539a4337812ab026",
          "sha256": "7f1e1cf78463b85c2e50e8b6dd28ff94e92e97343618d500452567b332924d52"
        },
        "downloads": -1,
        "filename": "magical_il-0.0.1a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9c72a8d82b1198c539a4337812ab026",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 77113,
        "upload_time": "2020-11-03T06:22:55",
        "upload_time_iso_8601": "2020-11-03T06:22:55.312403Z",
        "url": "https://files.pythonhosted.org/packages/3d/bb/4e922b58f16d265995879a0ca2c54a1202fc724fff5487b5fc3156a6f858/magical_il-0.0.1a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81aa4fcf0b3e1bd247dcc47a7cc3ca7a75161da0e33e0d7469d01ad0130ad03a",
          "md5": "e28e14352b72c8c2196f2753a27435a7",
          "sha256": "c5bd6b762e98a2960ccfe393c302ffa8ccfe4072f9a4cda11d5d5845d81a8c2e"
        },
        "downloads": -1,
        "filename": "magical-il-0.0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "e28e14352b72c8c2196f2753a27435a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 67961,
        "upload_time": "2020-11-03T06:22:56",
        "upload_time_iso_8601": "2020-11-03T06:22:56.666954Z",
        "url": "https://files.pythonhosted.org/packages/81/aa/4fcf0b3e1bd247dcc47a7cc3ca7a75161da0e33e0d7469d01ad0130ad03a/magical-il-0.0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70ed7bc6c65901c1fc78f4d7da2b3078557e994f3a635d9b1e4623038eea9442",
          "md5": "1bba5a370ecfa7d35088b672c15b9790",
          "sha256": "c3f6e5196416fe98440290b77981cc9e6e59aaf59b011636fa0091467dbb32f4"
        },
        "downloads": -1,
        "filename": "magical_il-0.0.1a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bba5a370ecfa7d35088b672c15b9790",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 77402,
        "upload_time": "2020-11-23T18:32:38",
        "upload_time_iso_8601": "2020-11-23T18:32:38.506578Z",
        "url": "https://files.pythonhosted.org/packages/70/ed/7bc6c65901c1fc78f4d7da2b3078557e994f3a635d9b1e4623038eea9442/magical_il-0.0.1a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5381c0d117a9a3f92fbaaf6b5779bd7c4cbb27072ff8338b3177bcf10e94da7c",
          "md5": "eea9c701239c1ba3a4d1f58cf0796041",
          "sha256": "5e8713f4f0c36f7d34c7828043589826201d6a28212fc14b64173e0d26aa3078"
        },
        "downloads": -1,
        "filename": "magical-il-0.0.1a2.tar.gz",
        "has_sig": false,
        "md5_digest": "eea9c701239c1ba3a4d1f58cf0796041",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 68201,
        "upload_time": "2020-11-23T18:32:40",
        "upload_time_iso_8601": "2020-11-23T18:32:40.104699Z",
        "url": "https://files.pythonhosted.org/packages/53/81/c0d117a9a3f92fbaaf6b5779bd7c4cbb27072ff8338b3177bcf10e94da7c/magical-il-0.0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "790aee46d110304321f04003f6f64bf4e6a55e9becd567a2531dc2e616377f63",
          "md5": "2ca5296226ca13782f0eb91e0213e26e",
          "sha256": "219045faf7d0a7a554fc3149aeea233846d5af03d5c629f1f97185f704a807e8"
        },
        "downloads": -1,
        "filename": "magical_il-0.0.1a3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ca5296226ca13782f0eb91e0213e26e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 77681,
        "upload_time": "2020-11-28T23:05:54",
        "upload_time_iso_8601": "2020-11-28T23:05:54.128135Z",
        "url": "https://files.pythonhosted.org/packages/79/0a/ee46d110304321f04003f6f64bf4e6a55e9becd567a2531dc2e616377f63/magical_il-0.0.1a3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "325a10305a0338f162b795cbfe00047132b3d1c0094815ebcc9256385b087f87",
          "md5": "4c79ff1da6b58f3dfa5fafdb7f8ea4f0",
          "sha256": "66574c22da8389d92e0b75b97f66d92a57011027fea237131b8fa0b99792a60d"
        },
        "downloads": -1,
        "filename": "magical-il-0.0.1a3.tar.gz",
        "has_sig": false,
        "md5_digest": "4c79ff1da6b58f3dfa5fafdb7f8ea4f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69408,
        "upload_time": "2020-11-28T23:05:55",
        "upload_time_iso_8601": "2020-11-28T23:05:55.578730Z",
        "url": "https://files.pythonhosted.org/packages/32/5a/10305a0338f162b795cbfe00047132b3d1c0094815ebcc9256385b087f87/magical-il-0.0.1a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90db0d56c4be30f133df8fae4faa1e2107c66bb58dc13d50f42e5f81d6c46e60",
          "md5": "f94de91f4e1342d787872125ee76cf35",
          "sha256": "eb005d4a4b9e48263d604c4df1dfabfde560d49dc849d488f6d104c37a5c1787"
        },
        "downloads": -1,
        "filename": "magical_il-0.0.1a4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f94de91f4e1342d787872125ee76cf35",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 77682,
        "upload_time": "2020-12-01T00:59:43",
        "upload_time_iso_8601": "2020-12-01T00:59:43.729631Z",
        "url": "https://files.pythonhosted.org/packages/90/db/0d56c4be30f133df8fae4faa1e2107c66bb58dc13d50f42e5f81d6c46e60/magical_il-0.0.1a4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33039b782d419c280b23a6bde5dca2ea3653fe8a2db07c6844aab967406427e0",
          "md5": "970d33ec69d1c21656ceb7129d830cfc",
          "sha256": "b81c5d1390bc4fddb18e5cb352e2b3490a90d41eeb163c62fde9b5f7606ae5cb"
        },
        "downloads": -1,
        "filename": "magical-il-0.0.1a4.tar.gz",
        "has_sig": false,
        "md5_digest": "970d33ec69d1c21656ceb7129d830cfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 69431,
        "upload_time": "2020-12-01T00:59:44",
        "upload_time_iso_8601": "2020-12-01T00:59:44.837192Z",
        "url": "https://files.pythonhosted.org/packages/33/03/9b782d419c280b23a6bde5dca2ea3653fe8a2db07c6844aab967406427e0/magical-il-0.0.1a4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "90db0d56c4be30f133df8fae4faa1e2107c66bb58dc13d50f42e5f81d6c46e60",
        "md5": "f94de91f4e1342d787872125ee76cf35",
        "sha256": "eb005d4a4b9e48263d604c4df1dfabfde560d49dc849d488f6d104c37a5c1787"
      },
      "downloads": -1,
      "filename": "magical_il-0.0.1a4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f94de91f4e1342d787872125ee76cf35",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 77682,
      "upload_time": "2020-12-01T00:59:43",
      "upload_time_iso_8601": "2020-12-01T00:59:43.729631Z",
      "url": "https://files.pythonhosted.org/packages/90/db/0d56c4be30f133df8fae4faa1e2107c66bb58dc13d50f42e5f81d6c46e60/magical_il-0.0.1a4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33039b782d419c280b23a6bde5dca2ea3653fe8a2db07c6844aab967406427e0",
        "md5": "970d33ec69d1c21656ceb7129d830cfc",
        "sha256": "b81c5d1390bc4fddb18e5cb352e2b3490a90d41eeb163c62fde9b5f7606ae5cb"
      },
      "downloads": -1,
      "filename": "magical-il-0.0.1a4.tar.gz",
      "has_sig": false,
      "md5_digest": "970d33ec69d1c21656ceb7129d830cfc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 69431,
      "upload_time": "2020-12-01T00:59:44",
      "upload_time_iso_8601": "2020-12-01T00:59:44.837192Z",
      "url": "https://files.pythonhosted.org/packages/33/03/9b782d419c280b23a6bde5dca2ea3653fe8a2db07c6844aab967406427e0/magical-il-0.0.1a4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}