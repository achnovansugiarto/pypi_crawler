{
  "info": {
    "author": "Qualita Seguranca e Saude Ocupacional",
    "author_email": "lab.ti@qualitamais.com.br",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5"
    ],
    "description": "# LIBeSocial\n\nBiblioteca em Python para lidar com os processos do [eSocial](https://www.gov.br/esocial/pt-br):\n\n- Validação dos XML's dos eventos;\n- Comunicação com o Webservices do eSocial para envio e consulta de lotes;\n- Assinatura dos XML's (e conexão com o webservices) com certificado tipo `A1`.\n\nApesar desta biblioteca ter sido desenvolvida para lidar especialmente com os eventos de SST (Saúde e Segurança do Trabalho), nada impede que ela possa ser utilizada para enviar/validar quaisquer dos eventos disponíveis no projeto eSocial.\n\nNo momento só é possível utilizar assinaturas do tipo `A1` em arquivos no formato `PKCS#12` (geralmente arquivos com extensão `.pfx` ou `.p12`).\n\n# Instalação\n\nPyPi:\n```\npip install libesocial\n```\n\nA versão mais recente diretamente do repositório:\n\n```\npip install https://github.com/qualitaocupacional/libesocial/archive/main.zip\n```\n\nOu você pode clonar este repositório:\n```\ngit clone https://github.com/qualitaocupacional/libesocial\n```\n\nEntrar na pasta do repositório recém clonado:\n```\n> cd libesocial\n> python setup.py install\n```\n# Uso básico\n\n**Montando um Lote e transmitindo para o eSocial**\n\n```python\nimport esocial.xml\nimport esocial.client\n\nide_empregador = {\n    'tpInsc': 1,\n    'nrInsc': '12345678901234' # CNPJ/CPF completo (com 14/11 dígitos)\n}\n\nide_transmissor = {\n    'tpInsc': 1,\n    'nrInsc': '43210987654321' # CNPJ/CPF completo (com 14/11 dígitos)\n}\n\nesocial_ws = esocial.client.WSClient(\n    pfx_file='caminho/para/o/arquivo/certificado/A1',\n    pfx_passw='senha do arquivo de certificado',\n    employer_id=ide_empregador,\n    # Se o transmissor é o próprio empregador, não precisa informar o \"sender_id\"\n    sender_id=ide_transmissor,\n)\n\nevento1_grupo1 = esocial.xml.load_fromfile('evento1.xml')\nevento2_grupo1 = esocial.xml.load_fromfile('evento2.xml')\n\n# Adicionando eventos ao lote. O evento já vai ser assinado usando o certificado fornecido e validado contra o XSD do evento\n# Se gen_event_id == True, o Id do evento é gerado pela lib (default = False)\nevento1_id, evento1_assinado = esocial_ws.add_event(evento1_grupo1, gen_event_id=True)\nevento2_id, evento2_assinado = esocial_ws.add_event(evento2_grupo1, gen_event_id=True)\n\nresult, batch_xml = esocial_ws.send(group_id=1)\n\n# result vai ser um Element object\n# <Element {http://www.esocial.gov.br/schema/lote/eventos/envio/retornoEnvio/v1_1_0}eSocial at 0x>\nprint(esocial.xml.dump_tostring(result, xml_declaration=False, pretty_print=True))\n\n# batch_xml vai ser um Element object com o XML de envio de lote\n# <Element {http://www.esocial.gov.br/schema/lote/eventos/envio/v1_1_1}eSocial at 0x>\nprint(esocial.xml.dump_tostring(batch_xml, xml_declaration=False, pretty_print=True))\n```\n\n**Consultando o resultado do processamento de um Lote**\n\n```python\nimport esocial.xml\nimport esocial.client\n\nide_empregador = {\n    'tpInsc': 1,\n    'nrInsc': '12345678901234' # CNPJ/CPF completo (com 14/11 dígitos)\n}\n\nide_transmissor = {\n    'tpInsc': 1,\n    'nrInsc': '43210987654321' # CNPJ/CPF completo (com 14/11 dígitos)\n}\n\nesocial_ws = esocial.client.WSClient(\n    pfx_file='caminho/para/o/arquivo/certificado/A1',\n    pfx_passw='senha do arquivo de certificado',\n    employer_id=ide_empregador,\n    # Se o transmissor é o próprio empregador, não precisa informar o \"sender_id\"\n    sender_id=ide_transmissor,\n)\n\n# De posse do número do protocolo de envio\nresponse = esocial_ws.retrieve('1.2.202109.0000000000000000001')\n\n# response vai ser um Element object\n#<Element {http://www.esocial.gov.br/schema/lote/eventos/envio/retornoProcessamento/v1_3_0}eSocial at 0x>\nprint(esocial.xml.dump_tostring(result, xml_declaration=False, pretty_print=True))\n```\n\nPara obter algumas informações relevantes da resposta, use o método **decode_response(response)**:\n\n```python\nimport esocial.xml\nimport json\n\nresponse_decoded = esocial.xml.decode_response(response)\n\nprint(json.dumps(response_decoded.toDict(), indent=4))\n```\n**Exemplo de Saída**\n\n```json\n{\n    \"status\": {\n        \"ocorrencias\": [],\n        \"cdResposta\": \"201\",\n        \"descResposta\": \"Lote processado com sucesso.\"\n    },\n    \"lote\": {\n        \"dhRecepcao\": \"2021-10-04T11:45:44.16\",\n        \"versaoAplicativoRecepcao\": \"0.1.105\",\n        \"protocoloEnvio\": \"1.1.202110.0000000000011111111\"\n    },\n    \"eventos\": [\n        {\n            \"id\": \"ID1123456780000002021100411454300001\",\n            \"processamento\": {\n                \"ocorrencias\": [],\n                \"cdResposta\": \"201\",\n                \"descResposta\": \"Sucesso.\",\n                \"versaoAppProcessamento\": \"13.3.1\",\n                \"dhProcessamento\": \"2021-10-04T11:45:50.923\"\n            },\n            \"recibo\": {\n                \"nrRecibo\": \"1.1.0000000000111111111\",\n                \"hash\": \"GeGBSm+RjCxk53xh1oLQ22FDIR2Je3SQ6emcYGDm0Bo=\"\n            }\n        },\n        {\n            \"id\": \"ID1123456780000002021100411454300002\",\n            \"processamento\": {\n                \"ocorrencias\": [],\n                \"cdResposta\": \"201\",\n                \"descResposta\": \"Sucesso.\",\n                \"versaoAppProcessamento\": \"13.3.1\",\n                \"dhProcessamento\": \"2021-10-04T11:45:51.56\"\n            },\n            \"recibo\": {\n                \"nrRecibo\": \"1.1.0000000000111111112\",\n                \"hash\": \"EqjMGQU5vPfT1qu24HIO/yn06DrLwA5IFJKP04mNedE=\"\n            }\n        },\n        {\n            \"id\": \"ID1123456780000002021100411454300003\",\n            \"processamento\": {\n                \"ocorrencias\": [],\n                \"cdResposta\": \"201\",\n                \"descResposta\": \"Sucesso.\",\n                \"versaoAppProcessamento\": \"13.3.1\",\n                \"dhProcessamento\": \"2021-10-04T11:45:52.243\"\n            },\n            \"recibo\": {\n                \"nrRecibo\": \"1.2.0000000000111111113\",\n                \"hash\": \"Lf9tQsGezML23RmWQYQg4Y+qzwn9BDAtyfyGiMfadfE=\"\n            }\n        },\n        {\n            \"id\": \"ID1123456780000002021100411454300004\",\n            \"processamento\": {\n                \"ocorrencias\": [],\n                \"cdResposta\": \"201\",\n                \"descResposta\": \"Sucesso.\",\n                \"versaoAppProcessamento\": \"13.3.1\",\n                \"dhProcessamento\": \"2021-10-04T11:45:52.9\"\n            },\n            \"recibo\": {\n                \"nrRecibo\": \"1.1.0000000000111111114\",\n                \"hash\": \"zp8AJYm0uOoNTW+2oQEitCm0f6tIK8LbxqT8+Jel4rg=\"\n            }\n        }\n    ]\n}\n```\n\nO retorno vai ser um objeto do tipo [**DotMap**](https://github.com/drgrib/dotmap), que pode ser acessado assim:\n```python\nprint(response_decoded.status.cdResposta, '-', response_decoded.status.descResposta)\nfor evt in response_decoded.eventos:\n    print('ID:', evt.id)\n    print('Recibo:', evt.recibo.nrRecibo)\n    print('-'*10)\n\n```\n\nPor padrão, o webservice de envio/consulta de lotes é o de \"**Produção Restrita**\", para enviar para o ambiente de \"**Produção Empresas**\", onde as coisas são para valer:\n\n```python\nimport esocial.client\n\nesocial_ws = esocial.client.WSClient(\n    pfx_file='caminho/para/o/arquivo/certificado/A1',\n    pfx_passw='senha do arquivo de certificado',\n    employer_id=ide_empregador,\n    sender_id=ide_empregador,\n    target='production'\n)\n\n# OU usar os códigos do atributo \"tpAmb\", de acordo com a documentação:\n# 1 = Produção\n# 2 = Produção Restrita\n\nesocial_ws = esocial.client.WSClient(\n    pfx_file='caminho/para/o/arquivo/certificado/A1',\n    pfx_passw='senha do arquivo de certificado',\n    employer_id=ide_empregador,\n    sender_id=ide_empregador,\n    target=1\n)\n\n...\n\n```\n\n**Assinando um evento**\n\nSe por algum motivo você precisar assinar algum arquivo XML separadamente, pode usar as funções utilitárias da LIBeSocial. Lembrando que o método \"**add_event(xml_element)**\" já faz a assinatura do evento antes de adicioná-lo ao lote.\n\n```python\nimport esocial.xml\nimport esocial.utils\n\ncert_data = esocial.utils.pkcs12_data('my_cert_file.pfx', 'my password')\nevt2220 = esocial.xml.load_fromfile('S2220.xml')\n\n# Assina o XML com os algoritmos descritos na documentação do eSocial\nevt2220_signed = esocial.xml.sign(evt2220, cert_data)\n\n```\n\n**Validando um evento**\n\n```python\nimport esocial.xml\n\nevt2220 = esocial.xml.load_fromfile('S2220.xml')\ntry:\n    esocial.xml.XMLValidate(evt2220).validate()\nexcept esocial.xml.XMLValidateError as e:\n    print('O XML do evento S-2220 é inválido!')\n    print(e)\n    for err in e.errors:\n        print(' ->', err)\n```\nou\n```python\nimport esocial.xml\n\nevt2220 = esocial.xml.load_fromfile('S2220.xml')\nxmlschema = esocial.xml.XMLValidate(evt2220)\nif xmlschema.isvalid():\n    print('XML do evento é válido! :-D.')\nelse:\n    print('O XML do evento S-2220 é inválido!')\n    print(str(xmlschema.last_error))\n```\n\n# Certificados do ICP-Brasil no lado cliente\n\nDe acordo com o [manual do desenvolvedor do eSocial, versão 1.10](https://www.gov.br/esocial/pt-br/documentacao-tecnica/manuais/manualorientacaodesenvolvedoresocialv1-10.pdf) (página 114), é necessário instalar a cadeia de certificação do eSocial para poder utilizar os *Webservices*. Que são:\n\n**Raiz**\n\n**[AC - Primeiro Nível](http://acraiz.icpbrasil.gov.br/credenciadas/RFB/v2/p/AC_Secretaria_da_Receita_Federal_do_Brasil_v3.crt)**\n\n**[AC - Segundo Nível](http://acraiz.icpbrasil.gov.br/credenciadas/RFB/v2/Autoridade_Certificadora_do_SERPRO_RFB_SSL.crt)**\n\nPrimeiro, o manual está desatualizado, sendo que os servidores do eSocial estão utilizando a versão 10 do certificado **Raiz** do ICP-Brasil:\n\n[Raiz v10](http://acraiz.icpbrasil.gov.br/credenciadas/RAIZ/ICP-Brasilv10.crt)\n\nSegundo, utilizando a **LIBeSocial** não há necessidade de instalar nenhum desses certificados na máquina que vai enviar os eventos. Os respectivos certificados já estão \"agrupados\" no arquivo \"**serpro_full_chain.pem**\" na pasta **certs** que acompanha a **LIBeSocial**.\n\nEntretando, certificados expiram e/ou são trocados. Se necessário, para criar um novo arquivo com a cadeia de certificados novos, após baixar os devidos arquivos `.crt` (que devem estar no formato *PEM*), é só concatenar os arquivos em um único. Exemplo em Linux/Unix:\n\n```\n$ cat ICP-Brasilv10.crt AC_Secretaria_da_Receita_Federal_do_Brasil_v3.crt Autoridade_Certificadora_do_SERPRO_RFB_SSL.crt > novo_arquivo_certificados.pem\n```\n\nE informar esse arquivo ao instanciar o cliente *esocial*:\n\n```python\nimport esocial.client\n\nesocial_ws = esocial.client.WSClient(\n    pfx_file='caminho/para/o/arquivo/certificado/A1',\n    pfx_passw='senha do arquivo de certificado',\n    employer_id=ide_empregador,\n    target='production',\n    ca_file='/caminho/para/novo_arquivo_certificados.pem',\n)\n\n...\n\n```\n\n# Rodando os testes unitários\n\nInstalar a `pytest` (ver `requirements-dev.txt`).\n\nNa raíz do projeto, executar:\n\n```\n$ pytest\n```\n\n# Licença\n\nA LIBeSocial é um projeto de código aberto, desenvolvido pelo departamento de\nPesquisa e Desenvolvimento e Tecnologia da Informação da [Qualitá Segurança e Saúde Ocupacional](https://qualitamais.com.br)\ne está licenciada pela [Apache License 2.0](http://www.apache.org/licenses/LICENSE-2.0).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/qualitaocupacional/libesocial",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "libesocial",
    "package_url": "https://pypi.org/project/libesocial/",
    "platform": null,
    "project_url": "https://pypi.org/project/libesocial/",
    "project_urls": {
      "Homepage": "https://github.com/qualitaocupacional/libesocial"
    },
    "release_url": "https://pypi.org/project/libesocial/0.1.0/",
    "requires_dist": [
      "dotmap (>=1.3.24)",
      "lxml (>=4.6.3)",
      "pyOpenSSL (>=22.1.0)",
      "requests (>=2.26.0)",
      "signxml (>=3.1.0)",
      "six (>=1.11.0)",
      "zeep (>=4.1.0)"
    ],
    "requires_python": "",
    "summary": "Biblioteca para uso com o eSocial",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16797364,
  "releases": {
    "0.0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77320e714da89d47f132ff6f1d142e0093a0da192188ea586d96ea2271617ff9",
          "md5": "e5042d13a0fcb93030a8a8efe558fb1f",
          "sha256": "1d8d94e5a46548ebf5df4d394796e3c994b9b549b85efc01e72e5f99a0f8641c"
        },
        "downloads": -1,
        "filename": "libesocial-0.0.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "e5042d13a0fcb93030a8a8efe558fb1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 112835,
        "upload_time": "2018-05-23T19:05:35",
        "upload_time_iso_8601": "2018-05-23T19:05:35.892391Z",
        "url": "https://files.pythonhosted.org/packages/77/32/0e714da89d47f132ff6f1d142e0093a0da192188ea586d96ea2271617ff9/libesocial-0.0.1.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ddfebfd955abd53f8522a54c3c480e9120b2afa4b7e757f872d3d5490ae45e3",
          "md5": "7b9c9dbd4fd88eef3a26638bc65027c0",
          "sha256": "01949c09496cc8b3f6cd5dbe543bd573399c5cdc9fcf26fc7232c93d56446ea4"
        },
        "downloads": -1,
        "filename": "libesocial-0.0.1rc1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b9c9dbd4fd88eef3a26638bc65027c0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 171566,
        "upload_time": "2018-09-20T02:31:07",
        "upload_time_iso_8601": "2018-09-20T02:31:07.287767Z",
        "url": "https://files.pythonhosted.org/packages/4d/df/ebfd955abd53f8522a54c3c480e9120b2afa4b7e757f872d3d5490ae45e3/libesocial-0.0.1rc1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fe1174ac444dfa46930088335b12e3eab48c67949855c2149262f9cc11ffe93",
          "md5": "405d80d4185213f35ad4c5eb9ca6a3e5",
          "sha256": "5881198a5fb835ca82bd2df2f071561db5d5307fd051aff94eec1c651d7a43b5"
        },
        "downloads": -1,
        "filename": "libesocial-0.0.1rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "405d80d4185213f35ad4c5eb9ca6a3e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 116558,
        "upload_time": "2018-09-20T02:31:09",
        "upload_time_iso_8601": "2018-09-20T02:31:09.681797Z",
        "url": "https://files.pythonhosted.org/packages/3f/e1/174ac444dfa46930088335b12e3eab48c67949855c2149262f9cc11ffe93/libesocial-0.0.1rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8e8ee1d9d9bb765ad4116b9212568a61babe59cbc0a416c1471c9fadd68b7f8",
          "md5": "b2b68394dc411c5811f957ea32859085",
          "sha256": "6fae0d69cf1dee45e255f8cb1017049c6ac6768c694112e9a368fda93e29cbc3"
        },
        "downloads": -1,
        "filename": "libesocial-0.0.1rc2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2b68394dc411c5811f957ea32859085",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 327755,
        "upload_time": "2021-09-14T17:46:45",
        "upload_time_iso_8601": "2021-09-14T17:46:45.319226Z",
        "url": "https://files.pythonhosted.org/packages/a8/e8/ee1d9d9bb765ad4116b9212568a61babe59cbc0a416c1471c9fadd68b7f8/libesocial-0.0.1rc2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04705da0386d2519d21ac664a525bc54db0394eefc5a19a67297999c81579671",
          "md5": "3c914e142220257b19ced361b8ec9f7b",
          "sha256": "d7ac2437ae82affc289c983c372f504b6c8eeb13c0db7cd2a13f260ae641521b"
        },
        "downloads": -1,
        "filename": "libesocial-0.0.1rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "3c914e142220257b19ced361b8ec9f7b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 228646,
        "upload_time": "2021-09-14T17:46:47",
        "upload_time_iso_8601": "2021-09-14T17:46:47.187960Z",
        "url": "https://files.pythonhosted.org/packages/04/70/5da0386d2519d21ac664a525bc54db0394eefc5a19a67297999c81579671/libesocial-0.0.1rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f78c7e34cff78c0a41e77d2ab8a215cf3d8f9c53813d30adc23571eddff0a871",
          "md5": "5b4aab9c07fe5555b184bfefcd7981f6",
          "sha256": "c7c847a406494233ede0dcd98e1a97f4027a20af533240f746762636a126a2c9"
        },
        "downloads": -1,
        "filename": "libesocial-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b4aab9c07fe5555b184bfefcd7981f6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 523529,
        "upload_time": "2023-02-10T19:22:46",
        "upload_time_iso_8601": "2023-02-10T19:22:46.600021Z",
        "url": "https://files.pythonhosted.org/packages/f7/8c/7e34cff78c0a41e77d2ab8a215cf3d8f9c53813d30adc23571eddff0a871/libesocial-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f126b6fef18ea081f84caa3c0d54da3d97d2e9c47c874ca1ffd1be6709baaca",
          "md5": "bf87ee91450bd537cc51502ddd1c867d",
          "sha256": "36443f7541d3a3a3af0dd2736d29e6b23c798cc61ce74bae64b4a40dd0bd024a"
        },
        "downloads": -1,
        "filename": "libesocial-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bf87ee91450bd537cc51502ddd1c867d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 376382,
        "upload_time": "2023-02-10T19:22:49",
        "upload_time_iso_8601": "2023-02-10T19:22:49.436396Z",
        "url": "https://files.pythonhosted.org/packages/2f/12/6b6fef18ea081f84caa3c0d54da3d97d2e9c47c874ca1ffd1be6709baaca/libesocial-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f78c7e34cff78c0a41e77d2ab8a215cf3d8f9c53813d30adc23571eddff0a871",
        "md5": "5b4aab9c07fe5555b184bfefcd7981f6",
        "sha256": "c7c847a406494233ede0dcd98e1a97f4027a20af533240f746762636a126a2c9"
      },
      "downloads": -1,
      "filename": "libesocial-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5b4aab9c07fe5555b184bfefcd7981f6",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 523529,
      "upload_time": "2023-02-10T19:22:46",
      "upload_time_iso_8601": "2023-02-10T19:22:46.600021Z",
      "url": "https://files.pythonhosted.org/packages/f7/8c/7e34cff78c0a41e77d2ab8a215cf3d8f9c53813d30adc23571eddff0a871/libesocial-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f126b6fef18ea081f84caa3c0d54da3d97d2e9c47c874ca1ffd1be6709baaca",
        "md5": "bf87ee91450bd537cc51502ddd1c867d",
        "sha256": "36443f7541d3a3a3af0dd2736d29e6b23c798cc61ce74bae64b4a40dd0bd024a"
      },
      "downloads": -1,
      "filename": "libesocial-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bf87ee91450bd537cc51502ddd1c867d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 376382,
      "upload_time": "2023-02-10T19:22:49",
      "upload_time_iso_8601": "2023-02-10T19:22:49.436396Z",
      "url": "https://files.pythonhosted.org/packages/2f/12/6b6fef18ea081f84caa3c0d54da3d97d2e9c47c874ca1ffd1be6709baaca/libesocial-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}