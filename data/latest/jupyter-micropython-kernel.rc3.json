{
  "info": {
    "author": "Julian Todd, Tony DiCola",
    "author_email": "julian@goatchurch.org.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Jupyter MicroPython Kernel\n\nJupyter kernel to interact with a MicroPython ESP8266 or ESP32 over its serial REPL.  \n\nAlso with capabilities to work through the WEBREPL (available on ESP8266 only), \ndo Ctrl-C, transfer files and esptools flashing (useful for deployment).\nSee https://github.com/goatchurchprime/jupyter_micropython_developer_notebooks \nfor examples.\n\n## Installation\n\nFirst install Jupyter: http://jupyter.org/install.html (the Python3 version).\n**They strongly recommended you use the [Anaconda Distribution](https://www.anaconda.com/download/)**\n\nThen clone this repository to a directory using TortoiseGIT or with the shell command (ie on a command line):\n\n    git clone https://github.com/goatchurchprime/jupyter_micropython_kernel.git\n\nInstall this library (in editable mode) into Python3 using the shell command:\n\n    pip install -e jupyter_micropython_kernel\n\nThis creates a small file pointing to this directory in the python/../site-packages \ndirectory, and makes it possible to \"git update\" the library later as it gets improved.\n(Things can go wrong here, and you might need \"pip3\" or \"sudo pip\" if you have \nnumerous different versions of python installed\n\n\nInstall the kernel into jupyter itself using the shell command:\n\n    python -m jupyter_micropython_kernel.install\n\n(This creates the small file \".local/share/jupyter/kernels/micropython/kernel.json\" \nthat jupyter uses to reference it's kernels\n\nTo find out where your kernelspecs are stored, you can type:\n\n    jupyter kernelspec list\n\n\n## Running\n\nNow run Jupyter notebooks:\n\n    jupyter notebook\n\nIn the notebook click the New notebook button in the upper right, you should see your\nMicroPython kernel display name listed.  \n\nThe first cell will need to be something like:\n\n    %serialconnect\n    \nor something that matches the serial port and baudrate that \nyou connect to your MicroPython/ESP8266 with.\n\nYou should now be able to execute MicroPython commands \nby running the cells.\n\n'''On Windows it can sometimes be difficult to find the Serial (COM-port) \nand the right driver.  This is not unique to the jupyter_micropython_kernel\nand is a function of the USB chip that is on the breakout board containing \nyour ESP32/ESP8266.  Find the USB connection in the Device list to see what driver \nit needs or look for instructions from the supplier of the board.'''\n\nThere is a micropythondemo.ipynb file in the directory you could \nlook at with some of the features shown.\n\nIf a cell is taking too long to interrupt, it may respond \nto a \"Kernel\" -> \"Interrupt\" command. \n\nAlternatively hit Escape and then 'i' twice.\n\nTo upload the contents of a cell to a file, write: \n    %sendtofile yourfilename.py \n    \nas the first line of the cell\n\nTo do a soft reboot (when you need to clear out the modules \nand recover some memory) type:\n    %reboot\n\nNote: Restarting the kernel does not actually reboot the device.  \nAlso, pressing the reset button will probably mess things up, because \nthis interface relies on the ctrl-A non-echoing paste mode to do its stuff.\n\nYou can list all the functions with:\n    %lsmagic\n\n\n## Debugging\n\nFor reference, the notebooks here might be useful:\n  https://github.com/goatchurchprime/jupyter_micropython_developer_notebooks\n\nThe system works by finding and connecting to a serial line and\nthen issuing the enter paste mode command Ctrl-A (hex 0x01)\n\nIn this mode blocks of to-be-executed text are ended with a Ctrl-D\n(hex 0x04).\n\nThe response that comes back begins with an \"OK\" followed by the \nactual program response, followed by Ctrl-D, followed by any \nerror messages, followed by a second Ctrl-D, followed by a '>'.\n\nYou can implement this interface (for debugging purposes) to find out \nhow it's snarling up beginning with:\n \"%serialconnect --raw\"\nand then doing\n %writebytes -b \"sometext\"\nand \n %readbytes\n \n## Background\n\nThis had been proposed as an enhancement to webrepl with the idea of a jupyter-like \ninterface to webrepl rather than their faithful emulation of a command line: https://github.com/micropython/webrepl/issues/32\n\nMy first implementation operated a spawned-process asyncronous sub-kernel that handled the serial connection. \nAscync technology requires the whole program to work this way, or none of it.  \nSo my next iteration was going to do it using standard python threads to handle the blocking \nof the serial connections.  \n\nHowever, further review proved that this was unnecessarily complex if you consider the whole \nkernel itself to be operating asyncronously with the front end notebook UI.  In particular, \nif the notebook can independently issue Ctrl-C KeyboardInterrupt signals into the kernel, there is no longer \na need to worry about what happens when it hangs waiting for input from a serial connection.  \n\nOther known projects that have implemented a Jupyter Micropython kernel are:\n* https://github.com/adafruit/jupyter_micropython_kernel\n* https://github.com/willingc/circuitpython_kernel\n* https://github.com/TDAbboud/mpkernel\n* https://github.com/takluyver/ubit_kernel\n* https://github.com/jneines/nodemcu_kernel\n* https://github.com/zsquareplusc/mpy-repl-tool\n\nIn my defence, this is not an effect of not-invented-here syndrome; I did not discover most of these \nother projects until I had mostly written this one.  \n\nI do think that for robustness it is important to expose the full processes \nof making connections.  For my purposes this is more robust and contains debugging (of the \nserial connections) capability through its %lsmagic functions.\n\nOther known projects to have made Jupyter-like or secondary interfaces to Micropython:\n* https://github.com/nickzoic/mpy-webpad\n* https://github.com/BetaRavener/uPyLoader\n\nThe general approach of all of these is to make use of the Ctrl-A \npaste mode with its Ctrl-D end of message signals.  \nThe problem with this mode is it was actually designed for \nautomatic testing rather than supporting an interactive REPL (Read Execute Print Loop) system\n(citation required), so there can be reliability issues to do with \naccidentally escaping from this mode or not being able to detect the state \nof being in it.  \n\nFor example, you can't safely do a Ctrl-B to leave the paste mode and then a \nCtrl-A to re-enter paste mode cleanly, because a Ctrl-B in the non-paste mode \nwill reboot the device.  \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/goatchurchprime/jupyter_micropython_kernel",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jupyter_micropython_kernel",
    "package_url": "https://pypi.org/project/jupyter_micropython_kernel/",
    "platform": "",
    "project_url": "https://pypi.org/project/jupyter_micropython_kernel/",
    "project_urls": {
      "Homepage": "https://github.com/goatchurchprime/jupyter_micropython_kernel"
    },
    "release_url": "https://pypi.org/project/jupyter_micropython_kernel/0.1.3.2/",
    "requires_dist": [
      "pyserial>=3.4",
      "websocket-client>=0.44"
    ],
    "requires_python": ">=3.0",
    "summary": "Jupyter kernel to interact with a MicroPython ESP8266 or ESP32 over its serial REPL.",
    "version": "0.1.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8066017,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53865e534e013acac15d83c5b68d657b5cbc2be08bb7fc05861a35ac1b09f528",
          "md5": "49b50da9a0d670dbf948f1617bc1218c",
          "sha256": "07669d19aca920fb09489d75209803e0822734163ef878142b936be25573a5ab"
        },
        "downloads": -1,
        "filename": "jupyter_micropython_kernel-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49b50da9a0d670dbf948f1617bc1218c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 17828,
        "upload_time": "2020-08-29T06:13:14",
        "upload_time_iso_8601": "2020-08-29T06:13:14.845206Z",
        "url": "https://files.pythonhosted.org/packages/53/86/5e534e013acac15d83c5b68d657b5cbc2be08bb7fc05861a35ac1b09f528/jupyter_micropython_kernel-0.1.3-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Wrong website in pyproject.yml"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be3d9beb64957dd76aaf0fd2e4d80ae91a6517a569080a225c632d3e38fe8266",
          "md5": "6bd68748a8fce5d77b6975b9c121aec2",
          "sha256": "298d710351c440030f11fd97ad52bb2c70da79f12f106112aecb375933cb328c"
        },
        "downloads": -1,
        "filename": "jupyter_micropython_kernel-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6bd68748a8fce5d77b6975b9c121aec2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 26014,
        "upload_time": "2020-08-29T06:13:32",
        "upload_time_iso_8601": "2020-08-29T06:13:32.955674Z",
        "url": "https://files.pythonhosted.org/packages/be/3d/9beb64957dd76aaf0fd2e4d80ae91a6517a569080a225c632d3e38fe8266/jupyter_micropython_kernel-0.1.3.tar.gz",
        "yanked": true,
        "yanked_reason": "Wrong website in pyproject.yml"
      }
    ],
    "0.1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26f66bba643e49170d15a9500f8e191c2c43475c669316ab8252fe3507ead184",
          "md5": "514162a1f3d9c498b17bd6d9c424907f",
          "sha256": "7d5e8f44790578126868b1150af985c4e9a657389d1484abf20a00745f961505"
        },
        "downloads": -1,
        "filename": "jupyter_micropython_kernel-0.1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "514162a1f3d9c498b17bd6d9c424907f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 17842,
        "upload_time": "2020-08-29T06:20:29",
        "upload_time_iso_8601": "2020-08-29T06:20:29.477611Z",
        "url": "https://files.pythonhosted.org/packages/26/f6/6bba643e49170d15a9500f8e191c2c43475c669316ab8252fe3507ead184/jupyter_micropython_kernel-0.1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9fcf874671c136eae9254f8539a25d77577b3cdf768f7b0517bb9889d977f79",
          "md5": "cef648fc07eb421effc2cc28501f530d",
          "sha256": "2637302b6e66a90454e1540283d46f73ce8b3dee659f037ee2260e846cc4e0f5"
        },
        "downloads": -1,
        "filename": "jupyter_micropython_kernel-0.1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cef648fc07eb421effc2cc28501f530d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 26008,
        "upload_time": "2020-08-29T06:20:35",
        "upload_time_iso_8601": "2020-08-29T06:20:35.022780Z",
        "url": "https://files.pythonhosted.org/packages/d9/fc/f874671c136eae9254f8539a25d77577b3cdf768f7b0517bb9889d977f79/jupyter_micropython_kernel-0.1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e197ea20faf1045a9698e0109a14c48584225352364207cd20d7cd477ef55b66",
          "md5": "5bd422a48d23de2eac85e97a53bce5ad",
          "sha256": "a188853fd03c08827e6e7fd7975a89f2b73c7c04a110d787a83ceae9683b1527"
        },
        "downloads": -1,
        "filename": "jupyter_micropython_kernel-0.1.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bd422a48d23de2eac85e97a53bce5ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 20530,
        "upload_time": "2020-08-29T06:23:14",
        "upload_time_iso_8601": "2020-08-29T06:23:14.416657Z",
        "url": "https://files.pythonhosted.org/packages/e1/97/ea20faf1045a9698e0109a14c48584225352364207cd20d7cd477ef55b66/jupyter_micropython_kernel-0.1.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d09b7abba3825394785ede94f6b17e83b25f654eeb5876f5890caa90a697f9f9",
          "md5": "047d32899c8870147703e5ddc885aad6",
          "sha256": "62a5b9ae1e1d80f29159af59ab0553144b734cd1364b104baa6c63b8b45df571"
        },
        "downloads": -1,
        "filename": "jupyter_micropython_kernel-0.1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "047d32899c8870147703e5ddc885aad6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 26009,
        "upload_time": "2020-08-29T06:23:36",
        "upload_time_iso_8601": "2020-08-29T06:23:36.849929Z",
        "url": "https://files.pythonhosted.org/packages/d0/9b/7abba3825394785ede94f6b17e83b25f654eeb5876f5890caa90a697f9f9/jupyter_micropython_kernel-0.1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e197ea20faf1045a9698e0109a14c48584225352364207cd20d7cd477ef55b66",
        "md5": "5bd422a48d23de2eac85e97a53bce5ad",
        "sha256": "a188853fd03c08827e6e7fd7975a89f2b73c7c04a110d787a83ceae9683b1527"
      },
      "downloads": -1,
      "filename": "jupyter_micropython_kernel-0.1.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5bd422a48d23de2eac85e97a53bce5ad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 20530,
      "upload_time": "2020-08-29T06:23:14",
      "upload_time_iso_8601": "2020-08-29T06:23:14.416657Z",
      "url": "https://files.pythonhosted.org/packages/e1/97/ea20faf1045a9698e0109a14c48584225352364207cd20d7cd477ef55b66/jupyter_micropython_kernel-0.1.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d09b7abba3825394785ede94f6b17e83b25f654eeb5876f5890caa90a697f9f9",
        "md5": "047d32899c8870147703e5ddc885aad6",
        "sha256": "62a5b9ae1e1d80f29159af59ab0553144b734cd1364b104baa6c63b8b45df571"
      },
      "downloads": -1,
      "filename": "jupyter_micropython_kernel-0.1.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "047d32899c8870147703e5ddc885aad6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 26009,
      "upload_time": "2020-08-29T06:23:36",
      "upload_time_iso_8601": "2020-08-29T06:23:36.849929Z",
      "url": "https://files.pythonhosted.org/packages/d0/9b/7abba3825394785ede94f6b17e83b25f654eeb5876f5890caa90a697f9f9/jupyter_micropython_kernel-0.1.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}