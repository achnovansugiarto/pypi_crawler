{
  "info": {
    "author": "WolfBolin",
    "author_email": "mailto@wolfbolin.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n# BiliUtil\n\n![Windows](https://img.shields.io/badge/Windows-support-green.svg)\n![Linux](https://img.shields.io/badge/Linux-testing-orange.svg)\n![License](https://img.shields.io/badge/License-MPL_2.0-orange.svg)\n![Python](https://img.shields.io/badge/Python-3.8-blue.svg)\n![Version](https://img.shields.io/badge/Version-2.x-blueviolet.svg)\n\nBilibili.com（B站）数据下载工具包。若您在使用过程中发现BUG或有可以改进之处，欢迎提交[Issue](https://github.com/wolfbolin/BiliUtil/issues)或邮件（mailto@wolfbolin.com）与我联系。如果觉得还不错，欢迎Star和Fork支持一下（两百个Star冲鸭）。\n\n特别提醒：鉴于B站快速的发展，目前代码包中仍在使用一些新版中废弃的接口，如果某日B站关闭了旧接口服务，可能会导致本函数包不可用（虽然已经找到了新的获取方式，但是懒得改代码了，非Json接口获取成本++）\n\n\n\n> 特性\n>\n> * 用户与频道内视频批量下载\n> * 支持360P至4K全部画质下载\n> * 开放灵活详细的API编程接口\n>* 多链接分块下载与自动合成\n\n\n\n常见问题请参考[Q&A](#qa)  | BUG修复请参考[更新日志](#update) | 新的疑问请参考[反馈列表](https://github.com/wolfbolin/BiliUtil/issues)\n\n\n\n###### TOC\n\n一、[安装方式](#install)\n\n二、[使用样式](#example)\n\n三、[接口文档](#document)\n\n四、[Q&A](#qa)\n\n五、[关于BiliUtil](#about)\n\n六、[更新日志](#update)\n\n\n\n\n\n## 一、安装方式<span id=\"install\"/>\n\n本工具包采用pip方式发布，并需要调用本地aria2c与ffmpeg插件，工具包启动前将根据环境变量检查环境是否可用，当环境中缺少相关插件时，部分类将不会导入。\n\n*Step 1*: 使用pip安装\n\n```shell\npip install BiliUtil\n```\n\n*Step 2*: 安装Aria2c插件\n\n插件官网：<https://aria2.github.io/>\n\n*Step 3:* 安装FFmpeg插件\n\n插件官网：<https://ffmpeg.org/>\n\n\n\n## 二、使用示例<span id=\"example\"/>\n\n获取视频信息并下载视频\n\n```python\nimport BiliUtil\nfrom cookie import cookie_info\n\nif __name__ == '__main__':\n    # DNA视频下载\n    album = BiliUtil.Album(\"170001\")\n    # album = BiliUtil.Album(\"av170001\")\n    # album = BiliUtil.Album(\"BV17x411w7KC\")\n    # album.set_album(\"456025297\")\n    # album.set_album(\"av456025297\")\n    # album.set_album(\"BV17x411w7KC\")\n    # album.set_by_url(\"https://www.bilibili.com/video/av170001\")\n    # album.set_by_url(\"https://www.bilibili.com/video/BV17x411w7KC\")\n\n    # 4K视频下载测试\n    # album = BiliUtil.Album(\"BV1QV411R7d1\")\n\n    album_info = album.sync()\n    print(album_info)\n\n    video_list = album.get_video_list()\n    print(video_list)\n    for video in video_list:\n        video.sync(cookie=cookie_info)\n        task = BiliUtil.Task(video, 'D:/BiliUtil', album.aid)\n        task.start()\n```\n\n获取用户信息并下载所有视频\n\n```python\nimport BiliUtil\nif __name__ == '__main__':\n    cookie = \"SESSDATA=abcd68fd...\"\n    cache = \"D:/BiliUtil\"\n\n    user = BiliUtil.User(20165629) # 他发的太多了，建议换个人尝试\n    # user.set_user(user)\n    # user.set_by_url(\"https://space.bilibili.com/20165629\")\n    user_info = user.sync()\n    print(user_info)\n\n    fetcher = BiliUtil.Fetcher(user)\n    av_list = fetcher.fetch_all(cookie, BiliUtil.Config.SET_AS_NAME)\n    print(av_list)\n\n    positive_list, negative_list = fetcher.load_exist(cache)\n    print(positive_list)\n    print(negative_list)\n\n    task_id = fetcher.load_task(cache, positive_list, cache)\n    download_list = fetcher.pull_all()\n    print('完成{}个视频下载：{}'.format(len(download_list), download_list))\n\n```\n\n\n\n高配版示例程序请见[example3.py](https://github.com/wolfbolin/BiliUtil/blob/master/example3.py)和[example4.py](https://github.com/wolfbolin/BiliUtil/blob/master/example3.py)，其中example4.py是我个人自测自用程序，涉及大多数使用场景，可靠性与适用性MAX\n\n\n\n## 三、接口文档<span id=\"document\"/>\n\n在第四章[Q&A](#四QA)中将讲解常见问题与逻辑结构，如有需要请移步第四章，那里可能有你想问的。本章仅讲解工具包的使用方法，简单粗暴便于理解。\n\n### 0、数据字典与基础函数\n\n## 常量与含义<span id=\"config\"/>\n\n常量中包含了文件命名方式的定义，画质信息的定义，全局代理设置的定义等内容。\n\n| 常量             | 值                               | 含义            |\n| ---------------- | -------------------------------- | --------------- |\n| 命名方式         |                                  |                 |\n| SET_AS_NAME      | 1                                | 以视频名称命名  |\n| SET_AS_CODE      | 2                                | 以对象编号命名  |\n| SET_AS_PAGE      | 3                                | 以分P文件命名   |\n| 网络代理         |                                  |                 |\n| HTTP_PROXY       | 例http://user:pass@1.2.3.4:5678  | HTTP代理设置    |\n| HTTPS_PROXY      | 例https://user:pass@1.2.3.4:5678 | HTTPS代理设置   |\n| 视频画质         |                                  |                 |\n| Quality.V360P    | ('16', '流畅 360P')              | 360P            |\n| Quality.V480P    | ('32', '清晰 480P')              | 480P            |\n| Quality.V720P    | ('64', '高清 720P')              | 720P（登录）    |\n| Quality.V720P60  | ('74', '高清 720P60')            | 720P60（会员）  |\n| Quality.V1080P   | ('80', '高清 1080P')             | 1080P（登录）   |\n| Quality.V1080Px  | ('112', '高清 1080P+')           | 1080P+（会员）  |\n| Quality.V1080P60 | ('116', '高清 1080P60')          | 1080P60（会员） |\n| Quality.V4K      | ('120', '超清 4K')               | 4K（会员）      |\n|                  |                                  |                 |\n\n\n\n## 基础函数功能\n\n### BiliUtil.Util.av2bv(av)\n\n该函数可将形如`av170001`，`170001`的av号转化为形如`BV17x411w7KC`的新编码方式\n\n> 编码转换算法代码参考来源：https://blog.csdn.net/jkddf9h8xd9j646x798t/article/details/105124465\n\n### BiliUtil.Util.bv2av(bv)\n\n该函数可将形如`BV17x411w7KC`的bv号转化为形如`170001`的旧编码方式\n\n> 编码转换算法代码参考来源：https://blog.csdn.net/jkddf9h8xd9j646x798t/article/details/105124465\n\n### BiliUtil.Util.to_bv(av)\n\n该函数可识别av、bv号并都转化为bv号的编码形式\n\n### BiliUtil.Util.to_av(av)\n\n该函数可识别av、bv号并都转化为av号的编码形式\n\n\n\n### 1、用户类（BiliUtil.User）<span id=\"userclass\"/>\n\n#### 1.1、`__init__(uid=None)`\n\n你可以为每一个用户声明一个对象实例，在声明时你可以指定用户uid或在同步数据前设定用户uid。\n\n``` python\nuser = BiliUtil.User('20165629')\n```\n\n每个实例中将包含以下成员变量，你可以在[`sync()`](#user-sync)操作后读取这些信息。\n\n| 成员变   | 变量含义            |\n| -------- | ------------------- |\n| uid      | 用户uid             |\n| name     | 用户昵称            |\n| birthday | 用户生日            |\n| title    | 用户身份            |\n| face     | 用户头像            |\n| time     | 创号时间（可能为0） |\n| level    | 用户级别            |\n| sex      | 用户性别            |\n| sign     | 用户签名            |\n| vip      | 大会员              |\n|          |                     |\n\n#### 1.2、`set_user(uid)`\n\n你可以使用该函数设定用户uid或重新指定用户uid。该操作不会重置成员变量。\n\n```python\nuser.set_user('20165629')\n```\n\n#### 1.3、`set_by_url(url)`\n\n你可以通过该函数以url解析的方式指定对象的用户uid。该操作不会重置成员变量。\n\n```python\nuser.set_by_url('https://space.bilibili.com/20165629?from=search')\n```\n\n#### 1.4、`sync(cookie=None)`<span id=\"user-sync\"/>\n\n你可用通过该操作更新对象的成员变量，如果你感觉信息不够丰满，请与开发者联系。\n\n```python\nuser_info = user.sync(cookie='SESSDATA=abcd68fd...')\n```\n\n#### 1.5、`get_channel_list(cookie=None)`\n\n你可以通过该操作获取用户公开的全部频道，返回值中将储存本工具包中[频道类](#channelclass)的对象。\n\n```python\nchannel_list = user.get_channel_list(cookie='SESSDATA=abcd68fd...')\n```\n\n#### 1.6、`get_album_list(cookie=None)`\n\n你可以通过该操作获取用户公开的全部视频，返回值中将储存本工具包中[稿件类](#albumclass)的对象。\n\n```python\nget_album_list(cookie='SESSDATA=abcd68fd...')\n```\n\n\n\n### 2、频道类（BiliUtil.Channel）<span id=\"channelclass\"/>\n\n#### 2.1、`__init__(uid=None, cid=None)`\n\n你可以为每一个用户声明一个对象实例，在声明时你可以指定用户uid、频道cid或在同步数据前设定用户uid、频道cid。\n\n```python\nchannel = BiliUtil.Channel(uid='20165629', cid='9108')\n```\n\n每个实例中将包含以下成员变量，你可以在[`get_album_list()`](#channel-get_album_list)操作后读取这些信息。\n\n\n| 成员变量   | 变量含义           | 默认值 |\n| ---------- | ------------------ | ------ |\n| uid        | 用户uid            | None   |\n| cid        | 频道cid            | None   |\n| name       | 频道名称           | None   |\n| cover      | 频道封面           | None   |\n| count      | 频道内稿件数量     | None   |\n|            |                    |        |\n\n#### 2.2、`set_channel(uid, cid)`\n\n你可以使用该函数设定频道cid或重新指定频道cid，同时必须指定频道对应用户uid。该操作不会重置成员变量。\n\n```python\nchannel.set_channel('20165629', '9108')\n```\n\n#### 2.3、`set_by_url(url)`\n\n你可以通过该函数以url解析的方式指定对象的用户uid和频道cid。该操作不会重置成员变量。\n\n```python\nchannel.set_by_url('https://space.bilibili.com/20165629/channel/detail?cid=9108')\n```\n\n#### 2.4、`get_album_list(cookie=None)`<span id=\"channel-get_album_list\"/>\n\n你可用通过该操作获取该频道中的全部稿件对象，返回值中将储存本工具包中[稿件类](#albumclass)的对象。\n\n```python\nchannel_info = channel.get_album_list(cookie='SESSDATA=abcd68fd...')\n```\n\n\n\n### 3、稿件类（BiliUtil.Album）<span id=\"alnbumclass\"/>\n\n#### 3.1、`__init__(aid=None)`\n\n你可以为每一个稿件声明一个对象实例，在声明时你可以指定稿件aid（av号），或者同步数据前设定稿件aid（av号）。关于稿件与视频的区别请参考[Q&A](#qa)加强对名词的理解。\n\n```python\nalbum = BiliUtil.Album('3947271')\n```\n\n每个实例中将包含以下成员变量，你可以在[`sync()`](#album-sync)操作后读取这些信息。\n\n| 成员变量 | 变量含义        | 默认值 |\n| -------- | --------------- | ------ |\n| aid      | 稿件aid（av号） | None   |\n| num      | 包含视频数量    | None   |\n| type     | 分区名称        | None   |\n| cover    | 封面链接        | None   |\n| name     | 视频名称        | None   |\n| time     | 发布时间        | None   |\n| desc     | 稿件描述        | None   |\n| view     | 观看人数        | None   |\n| danmu    | 弹幕数量        | None   |\n| reply    | 回复数量        | None   |\n| favorite | 收藏数量        | None   |\n| coin     | 硬币数量        | None   |\n| share    | 分享数量        | None   |\n| like     | 点赞数量        | None   |\n| cid_list | 视频cid编号列表 | None   |\n|          |                 |        |\n\n#### 3.2、`set_album(aid)`\n\n你可以使用该函数设定稿件aid或重新指定稿件aid，该操作不会重置成员变量。\n\n```python\nalbum.set_user('3947271')\n```\n\n#### 3.3、`set_by_url(url)`\n\n你可以通过该函数以url解析的方式指定对象的稿件aid，该操作不会重置成员变量。\n\n```python\nalbum.set_by_url('https://www.bilibili.com/video/av3947271')\n```\n\n#### 3.4、`album_name(name_pattern=Util.Config.SET_AS_CODE)`\n\n你可以通过该操作获取标准化的稿件名称，同时你可以通过参数的方式生成不同命名方式的名称\n\n```python\nalbum_name = album.album_name()\n```\n\n#### 3.5、`sync(cookie=None)`<span id=\"album-sync\"/>\n\n你可用通过该操作更新对象的成员变量，如果你感觉信息不够丰满，请与开发者联系。\n\n```python\nalbum_info = album.sync(cookie='SESSDATA=abcd68fd...')\n```\n\n#### 3.6、`get_video_list(cookie=None)`<span id=\"album-get_video_list\"/>\n\n你可以通过该操作获取每个稿件中的视频对象，返回值中将储存本工具包中视频类的对象。\n\n```python\nget_video_list(cookie='SESSDATA=abcd68fd...')\n```\n\n### 4、视频类（BiliUtil.Video）<span id=\"videoclass\"/>\n\n#### 4.1、`__init__(aid=None, cid=None)`\n\n不建议使用者自行创建视频对象，请使用稿件类的[`get_video_list()`](#album-get_video_list)操作获取视频类对象实例列表。\n\n每个实例中将包含以下成员变量，你可以在[`sync()`](#video-sync)操作后读取这些信息。\n\n| 成员变量 | 变量含义            | 默认值 |\n| -------- | ------------------- | ------ |\n| album      | 稿件对象     | None   |\n| cid      | 视频cid             | None   |\n| name     | 视频名称（分P名称） | None   |\n| page     | 视频编号（分P序号） | None   |\n| quality  | 视频画质            | None   |\n| length   | 视频长度            | None   |\n| format   | 视频格式            | None   |\n| height   | 视频高度            | None   |\n| width    | 视频宽度            | None   |\n| level    | 视频版本            | None   |\n| video    | 视频链接            | list() |\n| audio    | 视频链接            | list() |\n|          |                     |        |\n\n#### 4.2、`video_name(name_pattern=Util.Config.SET_AS_CODE)`\n\n你可以通过该操作获取标准化的视频名称，同时你可以通过参数的方式生成不同命名方式的名称\n\n```\nvideo_name = video.video_name(Util.Config.SET_AS_PAGE)\n```\n\n#### 4.3、`sync(cookie=None， quality=None)`<span id=\"video-sync\"/>\n\n你可用通过该操作更新对象的成员变量，如果你感觉信息不够丰满，请与开发者联系。\n\n你可以在同步视频信息时选择需要获取的视频画质，如果不指定，将默认按照可获取到的最高画质获取信息。\n\n最高画质的获取与传入的Cookie信息有密切联系，有关Cookie与画质的关系请查阅[Q&A](#qa)\n\n```python\nvideo_info = video.sync(\n    cookie='SESSDATA=abcd68fd...', \n    quailty=BiliUtil.Config.Quality.V1080P\n)\n```\n\n## 5、抓取器（BiliUtil.Fetcher）<span id=\"fetcherclass\"/>\n\n该类的设计是针对有批量下载视频需求而设计，避免使用者自行完成所有下载流程的编写。请关注该类的使用流程与使用示例，奇怪的使用方式可能会触发不知道什么情况的BUG。\n\n#### 5.1、`__init__(obj)`\n\n你可以使用用户类或频道类来初始化一个抓取器对象实例，不建议开发者操作实例中的对象数据。\n\n#### 5.2、`fetch_all(cookie=None, name_pattern=SET_AS_CODE, quality=None)`\n\n请在初始化之后使用该函数获取对象名下所有的视频列表，并储存在对象内部变量中，为后续操作提供数据。\n\n当初始化对象为用户类时，将自动获取用户名下的所有视频。当初始化对象为频道类时，将自动获取该频道中的所有视频。当文件命名[命名方式](#config)为以名字命名时(`SET_AS_NAME`)，程序将自动调用视频对象的`sync()`函数获取该视频的名称。你还可以传入视频质量的枚举以调整视频的最高质量，若无该参数则按照最高视频质量下载。\n\n#### 5.3、`load_exist(ouput)`\n\n你可以使用该函数加载输出目录中已经存在的视频列表，返回值分为乐观策略和悲观策略。在乐观策略状态下稿件实例有存在视频即认为存在， 在悲观策略状态下稿件实例所有视频都存在才认为存在。\n\n该函数的设计是为了避免在视频下载时程序重复下载视频浪费流量与时间，也避免过多请求被官方风控。\n\n#### 5.4、`load_task(output, exclude=None, v_filter=None)`\n\n该函数可以帮助你在抓取器对象中生成一个任务列表，在任务列表中主要包含了任务类对象实例。\n\n该函数提供了两个可选参数\n\n* exclude：排除列表，当视频av号命中该列表中av号时，将自动跳过不创建下载任务。\n* v_filter：过滤器，当稿件中的视频命中了过滤器的过滤条件时，将不创建下载任务。\n\n#### 5.5、`pull_all(show_process=True, no_repeat=True)`\n\n在一切都准备好之后，你可以调用该函数完成视频的批量下载，程序将自动调用每一个任务实例中的[`start()`函数](#taskstart)开始，函数的两个参数也将透传给任务对象。\n\n\n\n### 6、任务类（BiliUtil.Task）<span id=\"tasklass\"/>\n\n#### 6.1、`__init__(video, output, name, cover=None)`\n\n在初始化任务类时，需要传入一个视频对象，输出文件夹路径，封面链接与视频命名。如果你觉得非常麻烦，请使用抓取器自动生成单个视频的下载任务。\n\n#### 6.2、`start(show_process=True, no_repeat=True)`<span id=\"taskstart\"/>\n\n该函数将启动任务的下载流程，程序将按照实例化对象时的参数调用Aria2c完成视频与封面的下载。\n\n关于在视频下载流程中会发生什么，请参考[Q&A](#qa)中关于视频下载的相关解释。\n\n函数提供两个可选参数\n\n* show_process：是否显示下载进度，通过该参数可以控制是否显示Aria2c和FFmpeg工作流程的信息。\n* no_repeat：是否重复下载，通过该参数可以控制遇到已存在视频是否跳过下载流程。\n\n\n\n### 7、过滤器（BiliUtil.Filter）\n\n#### 7.1、`__init__(quality=None, length=None, height=None, width=None, page=None, ratio=None)`\n\n你可以初始化一个过滤器对象用于过滤批量下载过程中不符合条件的视频（部分参数仅针对新类型的视频有效）\n\n该函数提供了多个可选参数\n\n* quality：视频画质，请传入一个包含预制[画质](#config)类型的数组。（例：[BiliUtil.Config.Quality.V1080P,\n                 BiliUtil.Config.Quality.V1080Px]）\n* length：视频时长，请传入一个闭区间作为视频时长的判断标准（秒为单位）。（例：[40, 600]）\n* height：视频高度，请传入一个闭区间作为视频高度的判断标准（px为单位）。（例：[720, 1080]）\n* weight：视频宽度，请传入一个闭区间作为视频宽度的判断标准（px为单位）。（例：[720, 1080]）\n* page：视频分P，请传入一个由数组组成的数组作为分P的判读依据（下标1开始）。（例：[1,  2]）\n* ratio：视频比例，请传入一个闭区间作为视频比例的判断标准（比例->宽/高）。（例：[1, 2]）\n\n#### 7.2、set_xxx()\n\n你也可以使用set加对应参数名修改对象实例中的参数信息。\n\n\n\n## 四、Q&A<span id=\"qa\"/>\n\n### 开发进度与缺陷\n\n目前已完成开发的模块\n\n* 用户信息获取与视频列表拉取\n* 频道信息获取与视频列表拉取\n* 稿件信息获取与视频列表拉取\n* 视频信息获取\n* 任务列表生成器\n* 视频列表过滤器\n* 已存视频检查器\n* 新版多P视频下载与合成\n* 旧版单视频下载与转换\n* 4K120FPS视频下载兼容\n* BV与AV编码转换\n\n目前尚存在缺陷的功能\n\n* 旧版分段视频下载与合成\n\n期望或将要开发的功能\n\n* 多线程视频信息获取\n* 视频弹幕获取与保存\n* 视频评论获取与保存\n* 远程视频缓存server\n\n### 下载流程简单说明\n\n使用者在下载的过程中一般遵循一下步骤：初始化对象-->获取视频对象-->创建任务-->开始下载\n\n在创建任务的过程中，程序将处理视频的储存位置与下载后视频名称的问题，并将不同层级的对象统一转化为任务，将任务作为下载的最小单元，方便编程与管理。\n\n在下载过程中，程序将主要处理文件夹的建立，封面的下载、音画下载与音画合并。其中在核心的下载过程中，程序将根据情况自动采用多线程多连接的下载方式，并且减少分片大小，相比于v1.x的速度有大幅提高，不再会产生挂机一晚也下载不到视频的情况。\n\n### 暂不支持的功能整理\n\n* [Issue#16](https://github.com/wolfbolin/BiliUtil/issues/16)：列举分区下所有视频\n* [Issue#17](https://github.com/wolfbolin/BiliUtil/issues/17)：番剧的下载（版权与权限限制\n\n### Cookie信息的获取与使用\n\n- cookie信息不影响除视频画质外其他信息的获取。\n- 通过cookie信息，你可以在下载视频的时候获取到更高清的视频数据，也可以手动指定视频清晰度。\n\n- 设定cookie信息时，类似于`_uuid=B45CF1AB-xxx; LIVE_BUVID=AUTO76154xxx; SESSDATA=abcd68fd%2C1123761144%2C38d97xyz`的cookie信息也是可以被识别的。也可以传入字典类型的cookie信息，但是cookie信息中必须包含`SESSDATA`字段，该字段是提升视频质量的关键点。\n- 不同的身份信息视频质量上限表：\n  - 未登录--->480P\n  - 已登录--->1080P\n  - 大会员--->1080P60FPS / 1080P+ / 4K120FPS\n\n  - 关键的cookie存在与发往`*.bilibili.com`域下，发往其他域的请求中不包含该信息。至于如何在浏览器中获取Cookie，请移步：[如何在浏览器中获取Cookie](http://baidux.tinoy.cn/?q=%E5%A6%82%E4%BD%95%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E8%8E%B7%E5%8F%96Cookie)\n\n### 什么是稿件Album和视频Video有什么区别？\n\n首先说明这个\"Album\"在此不翻译为“唱片;专辑”，这个\"Album\"是指包含了多个视频的一个集合，在B站页面中显示为“稿件”，代表了用户的一次投稿发布。\n\n众所周知许多Up会上传多P，多P就对应了多个视频，因此一个av号可能会对应多个视频。所以在文档中我们不能再使用“视频”这个词汇来表达一个av号所对应的资源，因此便采用了“稿件”这个词汇来表达。\n\n### 什么是uid、cid、aid？\n\n我们需要为每一个资源做一个标记，官方也是这么做的。如果你真的经常使用B站，那么你一定知道UID为2的 **碧诗**和av号，本工具包沿用了B站的编号体系，不仅仅是用户与稿件，每一个频道与视频都是有他们自己的编号的。\n\n### set_by_url有什么要求？\n\n当我们打开了用户或视频时，URL中就已经包含了我们生成对象所需要的信息。在声明对象实例时，我们可以利用这些信息，由于不是使用正则进行匹配的，因此你可以随心所欲的拷贝URL，包括带有参数的URL都是可以接受的。但是，请确保传入的URL是与对象类型相匹配的，否则可能会导致程序运行异常。\n\n### 为什么要用到FFmpeg？\n\n在B站更新了数据下发形式后，你所观看的每一个视频都由纯视频和纯音频的形式下发，因此我们在下载之后需要使用工具将这些数据封装在一起。工具的使用方法我已经封装在代码中，默认会在视频下载结束后完成合并渲染。\n\n### 新旧视频版本的区别\n\n目前视频的版本主要分为两种，由程序内部自动判断。对于旧版视频，因为在下载前无法获取视频的具体参数，因此不可使用过滤器中的部分功能，而且旧版视频音画是在同一个视频容器中，因此无需合并数据，但同时旧版视频仅支持单链接下载，没有多服务器下发的能力。视频的下载速度可能会受到影响。\n\n### 画质分级与最高下载画质\n\n根据B站的限制，拥有不同身份的用户能够看到的视频数据有所不同，因此在下载视频时应尽量使用有大会员的用户身份进行下载。否则，即使你在程序中指定的是v1080Px也无法获取到该画质的视频。毕竟这个工具包不是搞大会员破解的。\n\n### BV与AV号\n\n在本工具包开发直出还没有BV号的概念，所有代码中对于一个稿件的唯一性判断都已AV号为准，因此在兼容BV号的过程中，工具包在所有可能输入BV号的入口都添加了BV=>AV转换的函数。该转换函数仅依赖本地计算即可完成，无需网络调用，不影响下载流程与性能。但是如果您需要对代码进行Debug，需要注意的是在工具包内部的函数调用与网络访问都是以AV号进行的。\n\n\n\n**其他未尽适宜请提[Issue](https://github.com/wolfbolin/BiliUtil/issues)**\n\n\n\n## 五、关于BiliUtil<span id=\"about\"/>\n\n这个包中还有很多未完成的细节，还有一些想实现的功能未完成。\n欢迎有兴趣的小伙伴一次参与，反馈BUG，更新代码，提供方案，我们共同完善它。\n\n你可以联系我：mailto@wolfbolin.com\n\n**声明：该代码库内容仅供学习参考，请勿用于商业目的**\n\n\n\n## 六、更新日志<span id=\"update\"/>\n\n### v0.2.3\n\n修复\n\n* [Issue #37](https://github.com/wolfbolin/BiliUtil/issues/37) 提出的音频下载问题\n\n新增\n\n* AV号、BV号转换函数与内嵌识别\n* [Issue #37](https://github.com/wolfbolin/BiliUtil/issues/37) 最高4K120FPS视频下载支持\n\n计划\n\n* 多线程数据获取函数\n* 多段视频获取方案实现\n* （以上两个部分我在实现过程中不稳定概率高，难以达到发布的水平，请多包涵）\n\n### v0.2.2\n\n修复\n\n* [Issue #24](https://github.com/wolfbolin/BiliUtil/issues/24) [PR #25](https://github.com/wolfbolin/BiliUtil/pull/25)缓存视频允许以分P名称命名视频\n* [driverCzn](https://github.com/driverCzn) 提出的BUG，解决旧版视频下载一半后无法自动断点续传的检测策略问题\n\n优化\n\n* 代码结构与语法优化\n\n缺陷\n\n* [driverCzn](https://github.com/driverCzn) 提出但尚未解决的“旧版长视频分段下载”问题\n\n### v0.2.1\n\n修复\n\n* [Issue #14](https://github.com/wolfbolin/BiliUtil/issues/14) API调整导致视频链接获取错误的BUG\n* [Commit 351b07](https://github.com/wolfbolin/BiliUtil/commit/351b072100998e0b845da336a10b854710e10847) 修复视频画质设置中，先有鸡还是先有蛋的问题\n* 删除部分开发无关的文件\n\n### v0.2.0\n\n新版发布\n\n- 简化代码结构与文档长度，简化使用方式\n- cookie直接透传至，管理cookie更方面\n- 多连接小分片并行下载，提高下载成功率与速度\n- 支持根据视频属性、视频分P过滤无需下载的视频\n- 支持设定下载代理地址，让流量走一些神奇的通道\n\n### v0.1.10\n\n修复\n\n- 修复了上一个版本在Linux平台上还是不能下载的Bug\n- 修正了实例中的一些BUG\n- 修正了文档锚定的错误写法\n\n### v0.1.9\n\n修复\n\n- 修复了在Linux平台上相对路径错误导致的无法下载问题\n- 添加了批量下载Up主的代码实例，在examples文件夹中。\n\n### v0.1.8\n\n修复\n\n- 修复了严重的翻页BUG（之前版本get_all_video_info获取用户视频最多30个，程序出现了一些偏差）\n\n### v0.1.7\n\n修复\n\n- get_xxx_info函数中vars函数运行异常\n- 修改数据拷贝方式，防止数据被篡改\n- 修改对象初始化方式，防止二次创建对象时异常\n- 修正若干数据获取逻辑BUG\n\n### v0.1.6\n\n修复\n\n- 修复exclude_list列表使用BUG\n\n新增\n\n- 为频道与用户对象添加获取已下载视频的AV号列表。\n- 为稿件对象添加判断视频是否已下载的访问接口\n\n### v0.1.5\n\n新增\n\n- 为频道与用户对象添加获取AV号列表函数。\n- 允许在批量下载视频时，通过添加排除列表，过滤部分视频的下载。\n- 为多个函数添加合适的响应值。\n\n### v0.1.4\n\n解决ffmpeg合成阶段程序卡死。由于pipe size的大小限制，导致程序在收到超过64kb的输出时，程序会卡死不动。修改process.wait()为process.communicate()以解决该问题。\n\n### v0.1.3\n\n操作失误导致pip中v0.1.2版本被删除，将以v0.1.3版本发布。建议更新至最新版本后再使用。\n\n### v0.1.2\n\n修改：\n\n- 修复了`ffmpeg`环境检测不通过的BUG，因为使用了错误的语法。\n- 移除了对powershell的支持，未来将在linux环境中测试。\n- 修复了使用`aria2c`时的错误语法，解决自定义输出路径报错。\n- 修改路径获取方案，相对路径传入后，将以绝对路径进行计算。\n\n### v0.1.1\n\n新增：\n\n- 音视频合并函数\n- 音视频批量合并代码示例\n\n修改：\n\n- 删除部分无意义的`(=・ω・=)`输出\n- 调整aria2与ffmpeg环境检测机制\n\n### v0.0.1\n\nBiliUtil已经过基础测试，正式发布第一个版本，若要直接使用，请使用pip进行安装。\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wolfbolin/BiliUtil",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BiliUtil",
    "package_url": "https://pypi.org/project/BiliUtil/",
    "platform": "",
    "project_url": "https://pypi.org/project/BiliUtil/",
    "project_urls": {
      "Homepage": "https://github.com/wolfbolin/BiliUtil"
    },
    "release_url": "https://pypi.org/project/BiliUtil/0.2.3/",
    "requires_dist": [
      "requests",
      "fake-useragent"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Bilibili.com（B站）视频下载工具",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7511461,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5d3fc0c9ce4bb3436ca273d2ddac79262ca28dbb917831fc105e24b045ecfe8",
          "md5": "d22c43b7f1728c9a9bf4450e45488d0b",
          "sha256": "7fb1ad0acfac401a635d5507c4e319244fdae7d5cdc32fb5cc46affd04ef6f9b"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d22c43b7f1728c9a9bf4450e45488d0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 15776,
        "upload_time": "2019-02-26T09:35:49",
        "upload_time_iso_8601": "2019-02-26T09:35:49.717039Z",
        "url": "https://files.pythonhosted.org/packages/e5/d3/fc0c9ce4bb3436ca273d2ddac79262ca28dbb917831fc105e24b045ecfe8/BiliUtil-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60267d867ebf677e7b855a5e4d1761ab76cc72330dceb667d41c0f0942c3b925",
          "md5": "f62da186ff15a30008846391b640a0bd",
          "sha256": "eb452011f51b482dc501314bd6be5084b9dc0608c74fa1540c25714077b613a9"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f62da186ff15a30008846391b640a0bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 13985,
        "upload_time": "2019-02-26T09:35:52",
        "upload_time_iso_8601": "2019-02-26T09:35:52.048371Z",
        "url": "https://files.pythonhosted.org/packages/60/26/7d867ebf677e7b855a5e4d1761ab76cc72330dceb667d41c0f0942c3b925/BiliUtil-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0cd075570f34ceb81d9af8cae31a8f951a0e69b601b8542a12e96d1cdd95c9f",
          "md5": "76372b737a3b48ff276988e845ec3d3c",
          "sha256": "4bb7ac5e0cb83e760287e1b86059d53edd633638021e8a951458d8a7fa845d4f"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76372b737a3b48ff276988e845ec3d3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 17059,
        "upload_time": "2019-02-27T19:41:03",
        "upload_time_iso_8601": "2019-02-27T19:41:03.047271Z",
        "url": "https://files.pythonhosted.org/packages/c0/cd/075570f34ceb81d9af8cae31a8f951a0e69b601b8542a12e96d1cdd95c9f/BiliUtil-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05b45b9eba3aed1677700955a8754c3d274a303f60c990ccf6a284f0235d8d99",
          "md5": "00317dbcefafed08cc994851945879c9",
          "sha256": "fa6a780586072eee0448332d1d1072be6136b3b30e12e99de2258be0a846c063"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "00317dbcefafed08cc994851945879c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 19128,
        "upload_time": "2019-02-27T19:41:04",
        "upload_time_iso_8601": "2019-02-27T19:41:04.506667Z",
        "url": "https://files.pythonhosted.org/packages/05/b4/5b9eba3aed1677700955a8754c3d274a303f60c990ccf6a284f0235d8d99/BiliUtil-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c996e9a000c280fc02fa3a4211fb95909fa5c77536ee4da11e80c604c99e4453",
          "md5": "e15c0a14cde6bfecbc213bedf3c15ad2",
          "sha256": "a7a54af671bfc773763c637a5c7060b6894fb7798fc4fc30c626cede857d939a"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e15c0a14cde6bfecbc213bedf3c15ad2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 19008,
        "upload_time": "2019-06-04T15:14:58",
        "upload_time_iso_8601": "2019-06-04T15:14:58.622033Z",
        "url": "https://files.pythonhosted.org/packages/c9/96/e9a000c280fc02fa3a4211fb95909fa5c77536ee4da11e80c604c99e4453/BiliUtil-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d67f0208aa8b2071fe8b8b389e88615266a63cb74d60dc38903fa4eff1075aa5",
          "md5": "0be33583daad7df2315308f31ad66d33",
          "sha256": "3d8ec1fcbe6ee42e22111988dc069e0ef6164fda02649408458a76efaed468be"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "0be33583daad7df2315308f31ad66d33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 23777,
        "upload_time": "2019-06-04T15:15:00",
        "upload_time_iso_8601": "2019-06-04T15:15:00.948301Z",
        "url": "https://files.pythonhosted.org/packages/d6/7f/0208aa8b2071fe8b8b389e88615266a63cb74d60dc38903fa4eff1075aa5/BiliUtil-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b15ba200e63f75d1df0f5faecab0b19d621d9785e9b88f19552bdf4fe704a9f7",
          "md5": "37fed9e51b1fd3e0300c2804f8c4f131",
          "sha256": "15971fec606ab9553c80d60f254dbcd39e466d81734434fbdac25776163a9d06"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37fed9e51b1fd3e0300c2804f8c4f131",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 18657,
        "upload_time": "2019-05-16T18:00:54",
        "upload_time_iso_8601": "2019-05-16T18:00:54.933347Z",
        "url": "https://files.pythonhosted.org/packages/b1/5b/a200e63f75d1df0f5faecab0b19d621d9785e9b88f19552bdf4fe704a9f7/BiliUtil-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2895df8141030a851afaeea2f92657fc2fc5ccf60dc49bbe62966a6047824e3f",
          "md5": "adb073441d691157eff74aeac18995a7",
          "sha256": "e47f7dd68190d9701228c51d249a216768dfc20295d0ab573576bfa5004e175b"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "adb073441d691157eff74aeac18995a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 22838,
        "upload_time": "2019-05-16T18:00:56",
        "upload_time_iso_8601": "2019-05-16T18:00:56.866049Z",
        "url": "https://files.pythonhosted.org/packages/28/95/df8141030a851afaeea2f92657fc2fc5ccf60dc49bbe62966a6047824e3f/BiliUtil-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70f5504d68b4aa9380708d836bb2c24bdbd7a4b9483a22bf8ea7dec0bbb520b5",
          "md5": "8d79d130d8319da103ea90ed59d72cc0",
          "sha256": "90e2c6590fe38e5bb9f62347b6437c9c8ab9e46decce7e2f4da33bdf3660f562"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d79d130d8319da103ea90ed59d72cc0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 18931,
        "upload_time": "2019-06-04T14:38:19",
        "upload_time_iso_8601": "2019-06-04T14:38:19.907017Z",
        "url": "https://files.pythonhosted.org/packages/70/f5/504d68b4aa9380708d836bb2c24bdbd7a4b9483a22bf8ea7dec0bbb520b5/BiliUtil-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d29b39b2a8c8ef63fc83c9d3e696f44073e030dcb022d4174b0185ca6b2c184f",
          "md5": "f897ca3a97b401ebe846916bad26c61b",
          "sha256": "a6976d2338ff771621c9ae263a5d93d3c3fea8786c015a8c0e5ed3d43f4cb547"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "f897ca3a97b401ebe846916bad26c61b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 23516,
        "upload_time": "2019-06-04T14:38:21",
        "upload_time_iso_8601": "2019-06-04T14:38:21.598139Z",
        "url": "https://files.pythonhosted.org/packages/d2/9b/39b2a8c8ef63fc83c9d3e696f44073e030dcb022d4174b0185ca6b2c184f/BiliUtil-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a090f575a9fec3f8a16927b89041e51dd1f22fd58b2faaad28a3937a2b4af5fa",
          "md5": "70694fbec2b760c7504e913b190de218",
          "sha256": "992429e6dbb0f20fb77401d6b696fa26978b73ae12c14fc3f25368f3a27136e2"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70694fbec2b760c7504e913b190de218",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 21463,
        "upload_time": "2019-08-11T10:12:17",
        "upload_time_iso_8601": "2019-08-11T10:12:17.264784Z",
        "url": "https://files.pythonhosted.org/packages/a0/90/f575a9fec3f8a16927b89041e51dd1f22fd58b2faaad28a3937a2b4af5fa/BiliUtil-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13dc934ebc6cad504af980988633765fdd08a6a1affe38f2eb49dbae195b7deb",
          "md5": "8e9565bb0095193e540184ca7259bbf6",
          "sha256": "0345dd00594b9e1fb2e5519f24e20a0f49c1f25ec07fd83229c28c3d5fb2c991"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e9565bb0095193e540184ca7259bbf6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 27500,
        "upload_time": "2019-08-11T10:12:19",
        "upload_time_iso_8601": "2019-08-11T10:12:19.589099Z",
        "url": "https://files.pythonhosted.org/packages/13/dc/934ebc6cad504af980988633765fdd08a6a1affe38f2eb49dbae195b7deb/BiliUtil-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e544c59861454042156175143ef6aea555d12662a97cec1aa2bb27ebc6c0d6cd",
          "md5": "2b64d7df9b74005c7c2834f28218d53f",
          "sha256": "b249d6435d4f28ce83d4e009b4378e27d4c18d4dd73b30acc1fcd7cb84061c28"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b64d7df9b74005c7c2834f28218d53f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 21869,
        "upload_time": "2019-10-15T05:13:35",
        "upload_time_iso_8601": "2019-10-15T05:13:35.635405Z",
        "url": "https://files.pythonhosted.org/packages/e5/44/c59861454042156175143ef6aea555d12662a97cec1aa2bb27ebc6c0d6cd/BiliUtil-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb1cb396f7636ce400834ab9e513e303d04155a63f924bcff25397430ce12e11",
          "md5": "afdcf9a225386a7cc8a3f6a1bf2946b5",
          "sha256": "56aafa0c5fffc1951a2f84b6efa3cedf7cac1f50e3db77f90e4f49e4a4c16c2c"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "afdcf9a225386a7cc8a3f6a1bf2946b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 29050,
        "upload_time": "2019-10-15T05:13:38",
        "upload_time_iso_8601": "2019-10-15T05:13:38.709222Z",
        "url": "https://files.pythonhosted.org/packages/fb/1c/b396f7636ce400834ab9e513e303d04155a63f924bcff25397430ce12e11/BiliUtil-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70196a202a1a725b4500c6429ec89c61387d09831035b300a34a1e0e83526477",
          "md5": "796b3e969fa51bc2a1e7273ac373b296",
          "sha256": "8719242caa1a8572711b93ed24d74e264c3ce8961159264b6a40ceccb41be240"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "796b3e969fa51bc2a1e7273ac373b296",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 22646,
        "upload_time": "2019-11-30T10:27:44",
        "upload_time_iso_8601": "2019-11-30T10:27:44.865672Z",
        "url": "https://files.pythonhosted.org/packages/70/19/6a202a1a725b4500c6429ec89c61387d09831035b300a34a1e0e83526477/BiliUtil-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54cdf790b323cd7808b31667a0ce6dcf4a1e6420e7c208ef80813aba828ffbfc",
          "md5": "e05b41b46aeb3eb5cd8b9048720e9abf",
          "sha256": "f60015b0c5aaf903c1553f31b18275f445c21f822084aa687f40c9ff79b61e81"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e05b41b46aeb3eb5cd8b9048720e9abf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 30035,
        "upload_time": "2019-11-30T10:27:47",
        "upload_time_iso_8601": "2019-11-30T10:27:47.463462Z",
        "url": "https://files.pythonhosted.org/packages/54/cd/f790b323cd7808b31667a0ce6dcf4a1e6420e7c208ef80813aba828ffbfc/BiliUtil-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e1818ce4150d2ee74b747a8f4b1955cd28b7c514f48087c579d7aa1f728eaed",
          "md5": "afef33094d1b4119d4d02b5d7b394b07",
          "sha256": "af3ae4f4434861e3059a07dbdfb0649f6a84c0832705168aed4ec0bca94b5245"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afef33094d1b4119d4d02b5d7b394b07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 24165,
        "upload_time": "2020-06-19T03:00:49",
        "upload_time_iso_8601": "2020-06-19T03:00:49.447127Z",
        "url": "https://files.pythonhosted.org/packages/6e/18/18ce4150d2ee74b747a8f4b1955cd28b7c514f48087c579d7aa1f728eaed/BiliUtil-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53ceabb946acd6b7101d7650092060cd968ffec4ea9903418965a891e741ff4b",
          "md5": "4b3a0dd5d9f3b523b8a7a34fa2f78370",
          "sha256": "3be17f46ef5c09127c4661050a22a681abaa26e6458257e27a1f14330ef9110f"
        },
        "downloads": -1,
        "filename": "BiliUtil-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4b3a0dd5d9f3b523b8a7a34fa2f78370",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 40177,
        "upload_time": "2020-06-19T03:00:51",
        "upload_time_iso_8601": "2020-06-19T03:00:51.476258Z",
        "url": "https://files.pythonhosted.org/packages/53/ce/abb946acd6b7101d7650092060cd968ffec4ea9903418965a891e741ff4b/BiliUtil-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6e1818ce4150d2ee74b747a8f4b1955cd28b7c514f48087c579d7aa1f728eaed",
        "md5": "afef33094d1b4119d4d02b5d7b394b07",
        "sha256": "af3ae4f4434861e3059a07dbdfb0649f6a84c0832705168aed4ec0bca94b5245"
      },
      "downloads": -1,
      "filename": "BiliUtil-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "afef33094d1b4119d4d02b5d7b394b07",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 24165,
      "upload_time": "2020-06-19T03:00:49",
      "upload_time_iso_8601": "2020-06-19T03:00:49.447127Z",
      "url": "https://files.pythonhosted.org/packages/6e/18/18ce4150d2ee74b747a8f4b1955cd28b7c514f48087c579d7aa1f728eaed/BiliUtil-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53ceabb946acd6b7101d7650092060cd968ffec4ea9903418965a891e741ff4b",
        "md5": "4b3a0dd5d9f3b523b8a7a34fa2f78370",
        "sha256": "3be17f46ef5c09127c4661050a22a681abaa26e6458257e27a1f14330ef9110f"
      },
      "downloads": -1,
      "filename": "BiliUtil-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4b3a0dd5d9f3b523b8a7a34fa2f78370",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 40177,
      "upload_time": "2020-06-19T03:00:51",
      "upload_time_iso_8601": "2020-06-19T03:00:51.476258Z",
      "url": "https://files.pythonhosted.org/packages/53/ce/abb946acd6b7101d7650092060cd968ffec4ea9903418965a891e741ff4b/BiliUtil-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}