{
  "info": {
    "author": "",
    "author_email": "Wickerlab dev team <luke.x.chang@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![PyPI](https://img.shields.io/pypi/v/memento-ml)](https://pypi.org/project/memento-ml/)\n![Python versions](https://img.shields.io/pypi/pyversions/memento-ml)\n\n# Memento\n\nMemento is a Python library for running computationally expensive experiments.\n\nIf you need to run a large number of time-consuming experiments Memento can help:\n\n- Structure your configuration\n- Parallelize experiments across CPUs\n- Save and restore results\n- Checkpoint in-progress experiments\n- Send notifications when experiments fail or finish\n\n## Getting Started\n\n### Install\n\n```bash\npip install memento-ml\n```\n\n### The Configuration Matrix\n\nThe core of Memento is a configuration `matrix` that describes the list of experiments you\nwant Memento to run. This must contain a key `parameters` which is itself a dict, this describes\neach paramter you want to vary for your experiments and their values.\n\nAs an example let's say you wanted to test a few simple linear classifiers on a number of\nimage recognition datasets. You might write something like this:\n\n> Don't worry if you're not working on machine learning, this is just an example.\n\n```python\nmatrix = {\n  \"parameters\": {\n    \"model\": [\n      sklearn.svm.SVC,\n      sklearn.linear_model.Perceptron,\n      sklearn.linear_model.LogisticRegression\n    ],\n    \"dataset\": [\"imagenet\", \"mnist\", \"cifar10\", \"quickdraw\"]\n  }\n}\n```\n\nMemento would then generate 12 configurations by taking the _cartesian product_ of the\nparameters.\n\nFrequently you might also want to set some global configuration values, such as a regularization\nparameter or potentially even change your preprocessing pipeline. In this case Memento also\naccepts a \"settings\" key. These settings apply to all experiments and can be accessed from the\nconfiguration list as well as individual configurations.\n\n```python\nmatrix = {\n  \"parameters\": ...,\n  \"settings\": {\n    \"regularization\": 1e-1,\n    \"preprocessing\": make_preprocessing_pipeline()\n  }\n}\n```\n\nYou can also exclude specific parameter configurations. Returning to our machine learning\nexample, if you know SVCs perform poorly on cifar10 you might decide to skip that\nexperiment entirely. This is done with the \"exclude\" key:\n\n```python\nmatrix = {\n  \"parameters\": ...,\n  \"exclude\": [\n    {\"model\": sklearn.svm.SVC, \"dataset\": \"cifar10\"}\n  ]\n}\n```\n\n### Running an experiment\n\nAlong with a configuration matrix you need some code to run your experiments. This can be any\n`Callable` such as a function, lambda, class, or class method.\n\n```python\nfrom memento import Memento, Config, Context\n\ndef experiment(context: Context, config: Config):\n  classifier = config.model()\n  dataset = fetch_dataset(config.dataset)\n\n  classifier.fit(*dataset)\n\n  return classifier\n\nMemento(experiment).run(matrix)\n```\n\nYou can also perform a dry run to check you've gotten the matrix correct.\n\n```python\nMemento(experiment).run(matrix, dry_run=True)\n```\n\n```python\nRunning configurations:\n  {'model': sklearn.svm.SVC, 'dataset': 'imagenet'}\n  {'model': sklearn.svm.SVC, 'dataset': 'mnist'}\n  {'model': sklearn.svm.SVC, 'dataset': 'cifar10'}\n  {'model': sklearn.svm.SVC, 'dataset': 'quickdraw'}\n  {'model': sklearn.linear_model.Perceptron, 'dataset': 'imagenet'}\n  ...\nExiting due to dry run\n```\n\n## Code demo\n\n- Code demo can be found [here](demo).\n- `Memento` does not depend on `scikit-learn`. The `scikit-learn` and `jupyterlab` packages are required to run the demo (`./demo/*`).\n\n```bash\npip install scikit-learn jupyterlab\n```\n\n## Developing\n\n### Install as local package in Editable mode\n\n```bash\npip install -e .\n\n```\n\n### Install development dependencies\n\n```bash\npip install memento-ml[dev]\n```\n\n### Tests\n\n```bash\npytest\n```\n\nAlternatively to only run a subset of tests that haven't been marked as time consuming/slow you can use:\n\n```bash\npytest -m \"not slow\"\n```\n\n### Linters\n\n```bash\npylint memento\n```\n\n### Format code\n\n```bash\nblack .\n```\n\n### Build Documentation\n\n```bash\nsphinx-apidoc -o docs memento -f\nsphinx-build -W -b html docs docs/_build\n```\n\n### Bump up version\n\n```bash\n# The `--dry` flag is for testing only. Remove `--dry` to update the version number.\n# Use `minor` instead of `patch` for feature updates.\nbumpver update --patch --dry\n```\n\n### Run CI locally\n\nInstall [act](https://github.com/nektos/act), then:\n\n```bash\nact\n```\n\n## Roadmap\n\n- Finish HPC support\n- Improve result serialisation\n- Production testing & fleshed-out integration test suite\n\n## Contributors\n\n- [Zac Pullar-Strecker](https://github.com/zacps)\n- [Feras Albaroudi](https://github.com/NeedsSoySauce)\n- [Liam Scott-Russell](https://github.com/Liam-Scott-Russell)\n- [Joshua de Wet](https://github.com/Dewera)\n- [Nipun Jasti](https://github.com/watefeenex)\n- [James Lamberton](https://github.com/JamesLamberton)\n- [Joerg Wicker](https://github.com/joergwicker)\n- [Xinglong (Luke) Chang](https://github.com/changx03)\n\n## License\n\nMemento is licensed under the [3-Clause BSD License](https://opensource.org/licenses/BSD-3-Clause) license.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "experiment,parallel,sklearn,machine learning",
    "license": "BSD 3-Clause License  Copyright (c) 2023, wickerlab  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "memento-ml",
    "package_url": "https://pypi.org/project/memento-ml/",
    "platform": null,
    "project_url": "https://pypi.org/project/memento-ml/",
    "project_urls": {
      "Homepage": "https://github.com/wickerlab/memento"
    },
    "release_url": "https://pypi.org/project/memento-ml/1.0.2/",
    "requires_dist": [
      "cloudpickle (<2,>=1.6.0)",
      "networkx (<3,>=2.5.1)",
      "pandas (<2,>=1.3.5)",
      "pandas-stubs",
      "black ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "bumpver ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pip-tools ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "Sphinx ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "aiosmtpd ; extra == 'dev'",
      "scikit-learn ; extra == 'dev'"
    ],
    "requires_python": "<3.10,>=3.7",
    "summary": "A Python library for running computationally expensive experiments",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17118631,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f72fef526efe7d2ab7eeabbfaa8b83f71d85643429283173b1458092124d34c",
          "md5": "d28db9af7628c18916b66e1499a377d4",
          "sha256": "9128ee5534ffc6b71c54ba3ae7fb202ff22d867cdbfec51a6395872c511b8e48"
        },
        "downloads": -1,
        "filename": "memento_ml-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d28db9af7628c18916b66e1499a377d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.10,>=3.7",
        "size": 20577,
        "upload_time": "2023-03-01T16:18:28",
        "upload_time_iso_8601": "2023-03-01T16:18:28.324592Z",
        "url": "https://files.pythonhosted.org/packages/9f/72/fef526efe7d2ab7eeabbfaa8b83f71d85643429283173b1458092124d34c/memento_ml-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfaa3ba524ee616cbca4a25269f86e79c32f5ae659f5841a57401c445d969c67",
          "md5": "4176c41be5ad486060aea7ce3e373fbf",
          "sha256": "b58147dafb82497c2eaf81ed989e95292465c1c7d0e74d660ec4c27e0819801c"
        },
        "downloads": -1,
        "filename": "memento-ml-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4176c41be5ad486060aea7ce3e373fbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.10,>=3.7",
        "size": 27060,
        "upload_time": "2023-03-01T16:18:30",
        "upload_time_iso_8601": "2023-03-01T16:18:30.904968Z",
        "url": "https://files.pythonhosted.org/packages/df/aa/3ba524ee616cbca4a25269f86e79c32f5ae659f5841a57401c445d969c67/memento-ml-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5b83fbeb4383245027149be879f8bdef6aa641c5b1ec1d959376659cbfa158e",
          "md5": "56a331a2e8374474370de7b4c89d398d",
          "sha256": "3a8f1527ea820a7ab8239ccd4f87a62988842491bd50f113c831c6ed5e0d4d5a"
        },
        "downloads": -1,
        "filename": "memento_ml-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56a331a2e8374474370de7b4c89d398d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.10,>=3.7",
        "size": 20653,
        "upload_time": "2023-03-01T16:35:16",
        "upload_time_iso_8601": "2023-03-01T16:35:16.581391Z",
        "url": "https://files.pythonhosted.org/packages/e5/b8/3fbeb4383245027149be879f8bdef6aa641c5b1ec1d959376659cbfa158e/memento_ml-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff1ec9c8c067588727ee788cd01c3b8225b9fb4ad14d2db685a1a39cd64c5816",
          "md5": "624815cb17a759bc58946dd32a77b3fb",
          "sha256": "028ced1996fa799047eabc60d0a86012cc11da8980b9d45f199067b096d4b167"
        },
        "downloads": -1,
        "filename": "memento-ml-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "624815cb17a759bc58946dd32a77b3fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.10,>=3.7",
        "size": 27264,
        "upload_time": "2023-03-01T16:35:19",
        "upload_time_iso_8601": "2023-03-01T16:35:19.269501Z",
        "url": "https://files.pythonhosted.org/packages/ff/1e/c9c8c067588727ee788cd01c3b8225b9fb4ad14d2db685a1a39cd64c5816/memento-ml-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1452b79baad2d90f097da26b8089a67e94ea195a45a658d21c428b8399aeedd",
          "md5": "4420be00cccf9e9e0f57d6a18f72c652",
          "sha256": "d1ac5122850b75cc1d48f54df9a6fc90fe6652613f552e2e52af3a094e93d6e1"
        },
        "downloads": -1,
        "filename": "memento_ml-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4420be00cccf9e9e0f57d6a18f72c652",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.10,>=3.7",
        "size": 20552,
        "upload_time": "2023-03-01T22:17:21",
        "upload_time_iso_8601": "2023-03-01T22:17:21.752631Z",
        "url": "https://files.pythonhosted.org/packages/a1/45/2b79baad2d90f097da26b8089a67e94ea195a45a658d21c428b8399aeedd/memento_ml-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb07663cac7bc2030a188eaf263cd0e88182a9d4a36dd8825fff6aca20538de1",
          "md5": "15511ee38fdf3398251ece6b8d04355f",
          "sha256": "92eb34ba1ddda00c98491c14b441e81a067379b228c463b070f3e52acc0c420d"
        },
        "downloads": -1,
        "filename": "memento-ml-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "15511ee38fdf3398251ece6b8d04355f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.10,>=3.7",
        "size": 26061,
        "upload_time": "2023-03-01T22:17:24",
        "upload_time_iso_8601": "2023-03-01T22:17:24.145151Z",
        "url": "https://files.pythonhosted.org/packages/eb/07/663cac7bc2030a188eaf263cd0e88182a9d4a36dd8825fff6aca20538de1/memento-ml-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1452b79baad2d90f097da26b8089a67e94ea195a45a658d21c428b8399aeedd",
        "md5": "4420be00cccf9e9e0f57d6a18f72c652",
        "sha256": "d1ac5122850b75cc1d48f54df9a6fc90fe6652613f552e2e52af3a094e93d6e1"
      },
      "downloads": -1,
      "filename": "memento_ml-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4420be00cccf9e9e0f57d6a18f72c652",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<3.10,>=3.7",
      "size": 20552,
      "upload_time": "2023-03-01T22:17:21",
      "upload_time_iso_8601": "2023-03-01T22:17:21.752631Z",
      "url": "https://files.pythonhosted.org/packages/a1/45/2b79baad2d90f097da26b8089a67e94ea195a45a658d21c428b8399aeedd/memento_ml-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb07663cac7bc2030a188eaf263cd0e88182a9d4a36dd8825fff6aca20538de1",
        "md5": "15511ee38fdf3398251ece6b8d04355f",
        "sha256": "92eb34ba1ddda00c98491c14b441e81a067379b228c463b070f3e52acc0c420d"
      },
      "downloads": -1,
      "filename": "memento-ml-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "15511ee38fdf3398251ece6b8d04355f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<3.10,>=3.7",
      "size": 26061,
      "upload_time": "2023-03-01T22:17:24",
      "upload_time_iso_8601": "2023-03-01T22:17:24.145151Z",
      "url": "https://files.pythonhosted.org/packages/eb/07/663cac7bc2030a188eaf263cd0e88182a9d4a36dd8825fff6aca20538de1/memento-ml-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}