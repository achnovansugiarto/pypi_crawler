{
  "info": {
    "author": "Lawrence Hudson",
    "author_email": "quicklizard@googlemail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "pyzbar\n======\n\n.. image:: https://img.shields.io/badge/python-3.5%2C%203.6%2C%203.7%2C%203.8%2C%203.9-blue.svg\n    :target: https://github.com/dferens/pyzbar\n\n.. image:: https://badge.fury.io/py/pyzbar.svg\n    :target: https://pypi.python.org/pypi/pyzbar-x\n\n.. image:: https://travis-ci.org/dferens/pyzbar.svg?branch=master\n    :target: https://travis-ci.org/dferens/pyzbar\n\n.. image:: https://coveralls.io/repos/github/dferens/pyzbar/badge.svg?branch=master\n    :target: https://coveralls.io/github/dferens/pyzbar?branch=master\n\nRead one-dimensional barcodes and QR codes from Python 3 using the\n`zbar <http://zbar.sourceforge.net/>`__ library.\n\n-  Pure python\n-  Works with PIL / Pillow images, OpenCV / numpy ``ndarray``\\ s, and raw bytes\n-  Decodes locations of barcodes\n-  No dependencies, other than the zbar library itself\n-  Tested on Python Python 3.5 to 3.9\n\nThe older `zbar <https://sourceforge.net/p/zbar/code/ci/default/tree/python/>`__\npackage is stuck in Python 2.x-land.\nThe `zbarlight <https://github.com/Polyconseil/zbarlight/>`__ package does not\nprovide support for Windows and depends upon Pillow.\n\nInstallation\n------------\n\nThe ``zbar`` ``DLL``\\ s are included with the Windows Python wheels.\nOn other operating systems, you will need to install the ``zbar`` shared\nlibrary.\n\nMac OS X:\n\n::\n\n   brew install zbar\n\nLinux:\n\n::\n\n   sudo apt-get install libzbar0\n\nInstall this Python wrapper:\n\n::\n\n   pip install pyzbar-x\n\nExample usage\n-------------\n\nThe ``decode`` function accepts instances of ``PIL.Image``.\n\n::\n\n   >>> from pyzbar.pyzbar import decode\n   >>> from PIL import Image\n   >>> decode(Image.open('pyzbar/tests/code128.png'))\n   [\n       Decoded(\n           data=b'Foramenifera', type='CODE128',\n           rect=Rect(left=37, top=550, width=324, height=76),\n           polygon=[\n               Point(x=37, y=551), Point(x=37, y=625), Point(x=361, y=626),\n               Point(x=361, y=550)\n           ],\n           orientation=<ZBarOrientation.UP: 0>,\n           quality=77,\n       )\n       Decoded(\n           data=b'Rana temporaria', type='CODE128',\n           rect=Rect(left=4, top=0, width=390, height=76),\n           polygon=[\n               Point(x=4, y=1), Point(x=4, y=75), Point(x=394, y=76),\n               Point(x=394, y=0)\n           ],\n           orientation=<ZBarOrientation.UP: 0>,\n           quality=77,\n       )\n   ]\n\nIt also accepts instances of ``numpy.ndarray``, which might come from loading\nimages using `OpenCV <http://opencv.org/>`__.\n\n::\n\n   >>> import cv2\n   >>> decode(cv2.imread('pyzbar/tests/code128.png'))\n   [\n       Decoded(\n           data=b'Foramenifera', type='CODE128',\n           rect=Rect(left=37, top=550, width=324, height=76),\n           polygon=[\n               Point(x=37, y=551), Point(x=37, y=625), Point(x=361, y=626),\n               Point(x=361, y=550)\n           ],\n           orientation=<ZBarOrientation.UP: 0>,\n           quality=77,\n       )\n       Decoded(\n           data=b'Rana temporaria', type='CODE128',\n           rect=Rect(left=4, top=0, width=390, height=76),\n           polygon=[\n               Point(x=4, y=1), Point(x=4, y=75), Point(x=394, y=76),\n               Point(x=394, y=0)\n           ],\n           orientation=<ZBarOrientation.UP: 0>,\n           quality=77,\n       )\n   ]\n\nYou can also provide a tuple ``(pixels, width, height)``, where the image data\nis eight bits-per-pixel.\n\n::\n\n   >>> image = cv2.imread('pyzbar/tests/code128.png')\n   >>> height, width = image.shape[:2]\n\n   >>> # 8 bpp by considering just the blue channel\n   >>> decode((image[:, :, 0].astype('uint8').tobytes(), width, height))\n   [\n       Decoded(\n           data=b'Foramenifera', type='CODE128',\n           rect=Rect(left=37, top=550, width=324, height=76),\n           polygon=[\n               Point(x=37, y=551), Point(x=37, y=625), Point(x=361, y=626),\n               Point(x=361, y=550)\n           ],\n           orientation=<ZBarOrientation.UP: 0>,\n           quality=77,\n       )\n       Decoded(\n           data=b'Rana temporaria', type='CODE128',\n           rect=Rect(left=4, top=0, width=390, height=76),\n           polygon=[\n               Point(x=4, y=1), Point(x=4, y=75), Point(x=394, y=76),\n               Point(x=394, y=0)\n           ],\n           orientation=<ZBarOrientation.UP: 0>,\n           quality=77,\n       )\n   ]\n\n   >>> # 8 bpp by converting image to greyscale\n   >>> grey = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n   >>> decode((grey.tobytes(), width, height))\n   [\n       Decoded(\n           data=b'Foramenifera', type='CODE128',\n           rect=Rect(left=37, top=550, width=324, height=76),\n           polygon=[\n               Point(x=37, y=551), Point(x=37, y=625), Point(x=361, y=626),\n               Point(x=361, y=550)\n           ],\n           orientation=<ZBarOrientation.UP: 0>,\n           quality=77,\n       )\n       Decoded(\n           data=b'Rana temporaria', type='CODE128',\n           rect=Rect(left=4, top=0, width=390, height=76),\n           polygon=[\n               Point(x=4, y=1), Point(x=4, y=75), Point(x=394, y=76),\n               Point(x=394, y=0)\n           ],\n           orientation=<ZBarOrientation.UP: 0>,\n           quality=77,\n       )\n   ]\n\n   >>> # If you don't provide 8 bpp\n   >>> decode((image.tobytes(), width, height))\n   Traceback (most recent call last):\n     File \"<stdin>\", line 1, in <module>\n     File \"/Users/lawh/projects/pyzbar/pyzbar/pyzbar.py\", line 102, in decode\n       raise PyZbarError('Unsupported bits-per-pixel [{0}]'.format(bpp))\n   pyzbar.pyzbar_error.PyZbarError: Unsupported bits-per-pixel [24]\n\nThe default behaviour is to decode all symbol types. You can look for just your\nsymbol types\n\n::\n\n   >>> from pyzbar.pyzbar import ZBarSymbol\n   >>> # Look for just qrcode\n   >>> decode(Image.open('pyzbar/tests/qrcode.png'), symbols=[ZBarSymbol.QRCODE])\n   [\n       Decoded(\n           data=b'Thalassiodracon', type='QRCODE',\n           rect=Rect(left=27, top=27, width=145, height=145),\n           polygon=[\n               Point(x=27, y=27), Point(x=27, y=172), Point(x=172, y=172),\n               Point(x=172, y=27)\n           ],\n           orientation=<ZBarOrientation.UP: 0>,\n           quality=1,\n       )\n   ]\n\n\n   >>> # If we look for just code128, the qrcodes in the image will not be detected\n   >>> decode(Image.open('pyzbar/tests/qrcode.png'), symbols=[ZBarSymbol.CODE128])\n   []\n\nBounding boxes and polygons\n---------------------------\n\nThe blue and pink boxes show ``rect`` and ``polygon``, respectively, for\nbarcodes in ``pyzbar/tests/qrcode.png`` (see\n`bounding_box_and_polygon.py <https://github.com/dferens/pyzbar/blob/master/bounding_box_and_polygon.py>`__).\n\n.. figure:: https://github.com/dferens/pyzbar/raw/master/bounding_box_and_polygon.png\n   :alt: Two barcodes with bounding boxes and polygons\n\nWindows error message\n---------------------\n\nIf you see an ugly ``ImportError`` when importing ``pyzbar`` on Windows\nyou will most likely need the `Visual C++ Redistributable Packages for Visual\nStudio 2013\n<https://www.microsoft.com/en-US/download/details.aspx?id=40784>`__.\nInstall ``vcredist_x64.exe`` if using 64-bit Python, ``vcredist_x86.exe`` if\nusing 32-bit Python.\n\nContributors\n------------\n\n-  Alex (@globophobe) - first implementation of barcode locations\n\nLicense\n-------\n\n``pyzbar`` is distributed under the MIT license (see ``LICENCE.txt``).\nThe ``zbar`` shared library is distributed under the GNU Lesser General\nPublic License, version 2.1 (see ``zbar-LICENCE.txt``).\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dferens/pyzbar/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyzbar-x",
    "package_url": "https://pypi.org/project/pyzbar-x/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyzbar-x/",
    "project_urls": {
      "Homepage": "https://github.com/dferens/pyzbar/"
    },
    "release_url": "https://pypi.org/project/pyzbar-x/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Read one-dimensional barcodes and QR codes from Python 3.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8514139,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca7faf5432e4ccdd66388088f2e7ae2da17bb2253bca5cce871c76d3e3fe02d8",
          "md5": "80a808428d1cee801b548b9ffbbe6f7b",
          "sha256": "f16e88f214406591599e2755c2bc51d47d3439093d6d2ca0f11b131bcf9cc70b"
        },
        "downloads": -1,
        "filename": "pyzbar_x-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80a808428d1cee801b548b9ffbbe6f7b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 38402,
        "upload_time": "2020-10-16T17:13:54",
        "upload_time_iso_8601": "2020-10-16T17:13:54.215844Z",
        "url": "https://files.pythonhosted.org/packages/ca/7f/af5432e4ccdd66388088f2e7ae2da17bb2253bca5cce871c76d3e3fe02d8/pyzbar_x-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09f66aec353b0ee0288256766dfdaa7152020a1fd05907026361b48517e7d613",
          "md5": "f57fe2025a9bd0b9f50e8bdf538fece9",
          "sha256": "3e6f69fc233b7fc699ad080b026696c48d9b7037a660011eaed82e5a63b1b6ca"
        },
        "downloads": -1,
        "filename": "pyzbar_x-0.2.0-py2.py3-none-win32.whl",
        "has_sig": false,
        "md5_digest": "f57fe2025a9bd0b9f50e8bdf538fece9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 38406,
        "upload_time": "2020-10-16T17:13:57",
        "upload_time_iso_8601": "2020-10-16T17:13:57.330305Z",
        "url": "https://files.pythonhosted.org/packages/09/f6/6aec353b0ee0288256766dfdaa7152020a1fd05907026361b48517e7d613/pyzbar_x-0.2.0-py2.py3-none-win32.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4e9c99dd5d47ef2d26c3c2333843d22de82aa3e5f859a015982e00056432003",
          "md5": "d6e991e24b1efab9fdbc2f9a29554dce",
          "sha256": "ac35235656aafe1bc21463c34496ce2f2aed161720fe0ff89047dd77de0433bb"
        },
        "downloads": -1,
        "filename": "pyzbar_x-0.2.0-py2.py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "d6e991e24b1efab9fdbc2f9a29554dce",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 38410,
        "upload_time": "2020-10-16T17:13:59",
        "upload_time_iso_8601": "2020-10-16T17:13:59.514863Z",
        "url": "https://files.pythonhosted.org/packages/b4/e9/c99dd5d47ef2d26c3c2333843d22de82aa3e5f859a015982e00056432003/pyzbar_x-0.2.0-py2.py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f28d1ab542ca6a56334c010f7ac4b85d431339bc0d8ee8cbba86099449b59a49",
          "md5": "9823192d50091d6860f5c2f117631131",
          "sha256": "94f786f5bd22b5a91303c0e414edb7de58ed8f92ba847298d90d67d4073a6688"
        },
        "downloads": -1,
        "filename": "pyzbar_x-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9823192d50091d6860f5c2f117631131",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26821,
        "upload_time": "2020-10-27T16:12:07",
        "upload_time_iso_8601": "2020-10-27T16:12:07.658780Z",
        "url": "https://files.pythonhosted.org/packages/f2/8d/1ab542ca6a56334c010f7ac4b85d431339bc0d8ee8cbba86099449b59a49/pyzbar_x-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bffa476e0adad393c6e28a5056dffb88711a8e03f6b866a92b240e3186689b52",
          "md5": "f42cf350cc77c28252cbeb1a4cbb151a",
          "sha256": "6eda2f05046e84b71166ff1c85bb65f4491ae37dd4dbdafcbcd151d1821a0960"
        },
        "downloads": -1,
        "filename": "pyzbar_x-0.2.1-py2.py3-none-win32.whl",
        "has_sig": false,
        "md5_digest": "f42cf350cc77c28252cbeb1a4cbb151a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 804890,
        "upload_time": "2020-10-27T16:12:10",
        "upload_time_iso_8601": "2020-10-27T16:12:10.155161Z",
        "url": "https://files.pythonhosted.org/packages/bf/fa/476e0adad393c6e28a5056dffb88711a8e03f6b866a92b240e3186689b52/pyzbar_x-0.2.1-py2.py3-none-win32.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8aa7464a21464dfb0c718e8b7ec6dbb5e59abba498c41d048022a9bd30b8cccd",
          "md5": "c586f89418ca88c0db1512873c16f79d",
          "sha256": "bafba142cf2f80b0931298ffe57c3c7c06dbbdf2c51a41534ec605c5cd378679"
        },
        "downloads": -1,
        "filename": "pyzbar_x-0.2.1-py2.py3-none-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "c586f89418ca88c0db1512873c16f79d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 811624,
        "upload_time": "2020-10-27T16:12:11",
        "upload_time_iso_8601": "2020-10-27T16:12:11.998781Z",
        "url": "https://files.pythonhosted.org/packages/8a/a7/464a21464dfb0c718e8b7ec6dbb5e59abba498c41d048022a9bd30b8cccd/pyzbar_x-0.2.1-py2.py3-none-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f28d1ab542ca6a56334c010f7ac4b85d431339bc0d8ee8cbba86099449b59a49",
        "md5": "9823192d50091d6860f5c2f117631131",
        "sha256": "94f786f5bd22b5a91303c0e414edb7de58ed8f92ba847298d90d67d4073a6688"
      },
      "downloads": -1,
      "filename": "pyzbar_x-0.2.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9823192d50091d6860f5c2f117631131",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 26821,
      "upload_time": "2020-10-27T16:12:07",
      "upload_time_iso_8601": "2020-10-27T16:12:07.658780Z",
      "url": "https://files.pythonhosted.org/packages/f2/8d/1ab542ca6a56334c010f7ac4b85d431339bc0d8ee8cbba86099449b59a49/pyzbar_x-0.2.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bffa476e0adad393c6e28a5056dffb88711a8e03f6b866a92b240e3186689b52",
        "md5": "f42cf350cc77c28252cbeb1a4cbb151a",
        "sha256": "6eda2f05046e84b71166ff1c85bb65f4491ae37dd4dbdafcbcd151d1821a0960"
      },
      "downloads": -1,
      "filename": "pyzbar_x-0.2.1-py2.py3-none-win32.whl",
      "has_sig": false,
      "md5_digest": "f42cf350cc77c28252cbeb1a4cbb151a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 804890,
      "upload_time": "2020-10-27T16:12:10",
      "upload_time_iso_8601": "2020-10-27T16:12:10.155161Z",
      "url": "https://files.pythonhosted.org/packages/bf/fa/476e0adad393c6e28a5056dffb88711a8e03f6b866a92b240e3186689b52/pyzbar_x-0.2.1-py2.py3-none-win32.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8aa7464a21464dfb0c718e8b7ec6dbb5e59abba498c41d048022a9bd30b8cccd",
        "md5": "c586f89418ca88c0db1512873c16f79d",
        "sha256": "bafba142cf2f80b0931298ffe57c3c7c06dbbdf2c51a41534ec605c5cd378679"
      },
      "downloads": -1,
      "filename": "pyzbar_x-0.2.1-py2.py3-none-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "c586f89418ca88c0db1512873c16f79d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 811624,
      "upload_time": "2020-10-27T16:12:11",
      "upload_time_iso_8601": "2020-10-27T16:12:11.998781Z",
      "url": "https://files.pythonhosted.org/packages/8a/a7/464a21464dfb0c718e8b7ec6dbb5e59abba498c41d048022a9bd30b8cccd/pyzbar_x-0.2.1-py2.py3-none-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}