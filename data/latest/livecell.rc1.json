{
  "info": {
    "author": null,
    "author_email": "Ke Ni <ken67@pitt.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "\n# livecell-tracker\n[![Supported Python versions](https://img.shields.io/badge/python-3.8%7C3.9%7C3.10-blue)](https://python.org)\n[![Development Status](https://img.shields.io/badge/status-pre--alpha-yellow)](https://en.wikipedia.org/wiki/Software_release_life_cycle#Pre-alpha)\n\nLivecell-tracker is a pure python framework for extracting (segmenting and tracking) sinlge cell trajectories from long live-cell imaging data, and then computing as well as analyzing single cell features in latent space.\n\n**This is a placeholder for livecell-tracker future releases. Currently this repo showcases a basic use case to segment images, track cells with opencv/SORT/btrack and generate cell features in our CX-A label-free dataset.   \nThe majority of our analysis methods/notebooks are in `https://github.com/xing-lab-pitt/xing-vimentin-dic-pipeline` maintained by Xing lab, and being added to this repo. Please check later in Nov. 2022 for a complete version with our manuscript.**\n## Installation\n\n**Pytorch**  \nPlease refer to [Pytorch Official Website](https://pytorch.org/get-started/locally) to receive most recent installation instructions. Here we simply provide two examples used in our cases.  \n\nInstall via pip:  \n`conda install pytorch torchvision -c pytorch`  \n\nOn our 2080Ti/3090 workstations and CUDA 11.7:  \n`conda install pytorch torchvision torchaudio pytorch-cuda=11.7 -c pytorch -c nvidia`\n\ncheck if you are using cuda (refer to pytorch docs for TPU or other devices):\n`torch.cuda.is_available(), torch.cuda.current_device(), torch.cuda.device_count()`\n\n**General package requirements**  \n`pip install -r requirements.txt`\n\n**Detectron2**  \n\nPlease refer to latest detectron2 documentation to install detectron2 for segmentation if you cannot build from source with the following commands.  \n\nPrebuilt (Easier and preferred by us):  \nhttps://detectron2.readthedocs.io/en/latest/tutorials/install.html#install-pre-built-detectron2-linux-only\n\nBuild from source:  \nhttps://detectron2.readthedocs.io/en/latest/tutorials/install.html#build-detectron2-from-source\n\n```\ngit clone https://github.com/facebookresearch/detectron2.git\npython -m pip install -e detectron2\n```\n\n**{avi, mp4} movie generation**\n`conda install -c conda-forge ffmpeg`\n\n\n## Expected input/output for each submodule\n\n**Note**  \nIf you already have satisfying segmentation models or segmentation results, you may skip **Annotation** and **Segmentation** part below.\n### Annotation\ninput: raw image files\nAfter annotating imaging datasets, you should have json files in COCO format ready for segmentation training. \n\n#### Labelme\nApply labelme to your datasets following our annotation protocol. \n#### Convert labelme json to COCO format. \nA fixed version of labelme2coco implementation is included in our package. Please refer to our tutorial on how to convert your labelme json to COCO format.  \nFor CVAT, please export the annotation results as COCO, as shown in our annotation protocol.\n\n### Segmentation\nSegmentation has two phase. If you already have pytorch or tensorflow models trained on your dataset, you may skip training phase.\n\n### training phase\ninput: COCO json files\n\noutput: pytorch model (.pth file)\n\n### prediction phase\ninput: raw images, a trained machine-learning based model  \noutputs: SingleCellStatic json outputs\n\n### Track\ninput: SingleCellStatic\n- contour\n- bounding box\n\noutput: SingleCellTrajectoryColletion\n- holding a collection of singleCellTrajectory each containing single cell time-lapse data\n- trajectory-wise feature can be calculated after track stage or at trajectory stage.\n\n### Trajectory\ninput: SingleCellTrajectoryColletion\n\noutput: \n\n\n### Visualizer\ntrack.movie: generate_single_trajectory_movie()\n\nvisualizer: viz_traj, viz_traj_collection\n\n{Documentation placeholder} [Move to docs/ and auto generate by readthedocs]\n\n### Analyze trajectories based on specific research topics\n\n\n## SingleCellStatic  \nclass designed to hold all information about a single cell at some timepoint  \n**attributes**\n- time point\n- id (optional)\n- contour coordinates\n- cell bounding box\n- img crop (lazy)\n- feature map \n- original img (reference/pointer)\n\n## SingleCellTrajectory\n- timeframe_set\n\n## SingleCellTrajectoryCollection",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "livecell",
    "package_url": "https://pypi.org/project/livecell/",
    "platform": null,
    "project_url": "https://pypi.org/project/livecell/",
    "project_urls": {
      "documentation": "https://github.com/xing-lab-pitt/LiveCellTracker-dev",
      "homepage": "https://github.com/xing-lab-pitt/LiveCellTracker-dev",
      "repository": "https://github.com/xing-lab-pitt/LiveCellTracker-dev"
    },
    "release_url": "https://pypi.org/project/livecell/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "live-cell analysis package including instance segmentation and tracker",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17370702,
  "releases": {
    "0.0.2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "9688328e5313f05c6baca301dc48309b7b8caa4d9daca82959eae8052fd99aca",
          "md5": "ddd18decfbcc819d62d034b369575c37",
          "sha256": "09306d2e2d00702555cd19d6454cd9751ae6a7d4c0803ab9faf110828caa7576"
        },
        "downloads": -1,
        "filename": "livecell-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddd18decfbcc819d62d034b369575c37",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 286694,
        "upload_time": "2023-03-20T23:08:44",
        "upload_time_iso_8601": "2023-03-20T23:08:44.212548Z",
        "url": "https://files.pythonhosted.org/packages/96/88/328e5313f05c6baca301dc48309b7b8caa4d9daca82959eae8052fd99aca/livecell-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "bbb7ae34d58311d8adef1cedfb97ba4f52ebf19c46907f66fac1e297bfada6e2",
          "md5": "f44e657296cfdc1d61a916e1a5eff9fb",
          "sha256": "6f383ba699efac2ce3dab984ea3aeae40a27b589d537915c3283d9c27e7cc12c"
        },
        "downloads": -1,
        "filename": "livecell-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f44e657296cfdc1d61a916e1a5eff9fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 79757407,
        "upload_time": "2023-03-20T23:08:55",
        "upload_time_iso_8601": "2023-03-20T23:08:55.408537Z",
        "url": "https://files.pythonhosted.org/packages/bb/b7/ae34d58311d8adef1cedfb97ba4f52ebf19c46907f66fac1e297bfada6e2/livecell-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "9688328e5313f05c6baca301dc48309b7b8caa4d9daca82959eae8052fd99aca",
        "md5": "ddd18decfbcc819d62d034b369575c37",
        "sha256": "09306d2e2d00702555cd19d6454cd9751ae6a7d4c0803ab9faf110828caa7576"
      },
      "downloads": -1,
      "filename": "livecell-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ddd18decfbcc819d62d034b369575c37",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 286694,
      "upload_time": "2023-03-20T23:08:44",
      "upload_time_iso_8601": "2023-03-20T23:08:44.212548Z",
      "url": "https://files.pythonhosted.org/packages/96/88/328e5313f05c6baca301dc48309b7b8caa4d9daca82959eae8052fd99aca/livecell-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "bbb7ae34d58311d8adef1cedfb97ba4f52ebf19c46907f66fac1e297bfada6e2",
        "md5": "f44e657296cfdc1d61a916e1a5eff9fb",
        "sha256": "6f383ba699efac2ce3dab984ea3aeae40a27b589d537915c3283d9c27e7cc12c"
      },
      "downloads": -1,
      "filename": "livecell-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f44e657296cfdc1d61a916e1a5eff9fb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 79757407,
      "upload_time": "2023-03-20T23:08:55",
      "upload_time_iso_8601": "2023-03-20T23:08:55.408537Z",
      "url": "https://files.pythonhosted.org/packages/bb/b7/ae34d58311d8adef1cedfb97ba4f52ebf19c46907f66fac1e297bfada6e2/livecell-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}