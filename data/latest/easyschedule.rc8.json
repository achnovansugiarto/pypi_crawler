{
  "info": {
    "author": "Joshua Jamison",
    "author_email": "joshjamison1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![](./docs/images/logo3.png)\n\n<h3>An asynchronus scheduler for python tasks, which uses Cron schedules for precise scheduling recurring tasks</h3>\n\n[![Documentation Status](https://readthedocs.org/projects/easyschedule/badge/?version=latest)](https://easyschedule.readthedocs.io/en/latest/?badge=latest) [![PyPI version](https://badge.fury.io/py/easyschedule.svg)](https://pypi.org/project/easyschedule/)\n#\n\n## Documenation\n[https://easyschedule.readthedocs.io/en/latest/](https://easyschedule.readthedocs.io/en/latest/)\n\n#\n\n## Get Started\n```bash\npip install easyschedule\n```\n\n```python\nimport asyncio\nfrom easyschedule import EasyScheduler\n\nscheduler = EasyScheduler()\n\ndefault_args = {'args': [1, 2, 3]}\nweekday_every_minute = '* * * * MON-FRI'\n\n@scheduler(schedule=weekday_every_minute, default_args=default_args)\ndef weekday_stuff(a, b, c):\n    print(f\"a {a} b: {b} c {c}\")\n\n@scheduler.delayed_start(delay_in_seconds=30)\nasync def delay_startup():\n    print(f\"## startup task - started ##\")\n    await asyncio.sleep(10)\n    print(f\"## startup task - ended ##\")\n\n@scheduler.shutdown()\nasync def shutdown():\n    print(f\"## shutdown task - started ##\")\n    await asyncio.sleep(10)\n    print(f\"## shutdown task - ended ##\")\n\n@scheduler.once(date_string='2022-03-12 16:18:03')\nasync def next_year():\n    print(f\"That was a long year\")\n\nasync def main():\n    # start scheduler\n    sched = asyncio.create_task(scheduler.start())\n    await asyncio.sleep(10)\n\n    # dynamicly schedule task\n    wk_end_args = {'kwargs': {'count': 5}}\n    weekend = '30 17-23,0-5 * * SAT,SUN'\n\n    def weekend_stuff(count: int):\n        for _ in range(count):\n            weekday_stuff(3,4,5)\n            weekday_stuff(5,6,7)\n\n    scheduler.schedule(\n        weekend_stuff, \n        schedule=weekend,\n        default_args=wk_end_args\n    )\n    await sched\n\nasyncio.run(main())\n```\n```bash\n03-13 09:09:25 EasyScheduler WARNING  weekday_stuff next_run_time: 2021-03-15 00:01:00.143645\n03-13 09:09:25 EasyScheduler WARNING  single task delay_startup scheduled to run at 2021-03-13 09:09:55.143337 in 30.0 s\n03-13 09:09:25 EasyScheduler WARNING  single task next_year scheduled to run at 2022-03-12 16:18:03 in 31475317.856636 s\n03-13 09:09:35 EasyScheduler WARNING  weekend_stuff next_run_time: 2021-03-13 17:31:00.152428\n03-13 09:09:48 EasyScheduler WARNING  shutdown task shutdown triggered at 2021-03-13 09:09:48.937516\n## shutdown task - started ##\n## shutdown task - ended ##\nTraceback (most recent call last):\n  File \"test.py\", line 50, in <module>\n    asyncio.run(main())\nKeyboardInterrupt\n```\n## Cron syntax Compatability\n\nEasySchedule is capable of parsing most cron schedule syntax\n\n#\n## Monthly\nFirst of month at 11:00 PM\n```bash\n0 23 1 * *\n```\n#\n\n## Daily\nEvery 2 Hours\n```bash\n0 */2 * *\n```\n#\n\n## Weekends Only \nEvery Hour Between 5:30 PM  - 5:30 AM ##\n```bash\n30 17-23,0-5 * * SAT,SUN\n```\n## Cron Generator\nAn easy & interactive way to build a cron schedule is available via <em>[crontab.guru](https://crontab.guru/) </em>\n\n### Note: unsupported syntax (currently)\n```bash\n@(non-standard) \n@hourly\n@daily \n@anually\n```\n\n#\n## Scheduluing Single Tasks\nEasySchedule is complete with single task scheduling\n\n### Usage with 'once' decorator\n```python\nfrom datetime import datetime, timedelta\n\nnext_year = datetime.now() + timedelta(days=365)\n\n@scheduler.once(date=next_year)\nasync def future_task():\n    ## future work\n    pass\n\n# current month: 2021-03-13 00:00:00\n@scheduler.once(date_string='2021-04-13 00:00:00')\nasync def run_at_date():\n    ## future work\n    pass\n\n# current month: 2021-03-13 00:00:00\n@scheduler.once(delta=timedelta(days=3))\nasync def run_after_delta():\n    ## future work\n    pass\n\nnow_args={'kwargs': {'work': \"Lots of work\"}}\n\n@scheduler.once(now=True, default_args=now_args)\nasync def run_now(work):\n    ## future work\n    print(f\"starting {work}\")\n    pass\n```\n#\n## Schedule a task at or near application startup\n```python\nnotify = {\n    'kwargs': { 'emails': ['admin@company.org'] }\n    }\n\n@scheduler.delayed_start(delay_in_seconds=30, default_args=notify)\nasync def notify_online(emails: str):\n    message = f\"server is operational\"\n    await send_emails(message, emails)\n    #something else\n\nasync def get_data():\n    return await requests.get('http://data-source')\n\n@scheduler.startup()\nasync def update_database():\n    data = await get_data()\n    await db.update(data)\n    #something else\n```\n#\n## Schedule a task to run at application shutdown\n```python\nnotify = {\n    'kwargs': { 'emails': ['admin@company.org'] }\n    }\n\n@scheduler.shutdown(default_args=notify)\nasync def notify_shutdown(emails: str):\n    message = f\"server is shutting down\"\n    await send_emails(message, emails)\n    #something else?\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/codemation/easyschedule",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easyschedule",
    "package_url": "https://pypi.org/project/easyschedule/",
    "platform": "",
    "project_url": "https://pypi.org/project/easyschedule/",
    "project_urls": {
      "Homepage": "https://github.com/codemation/easyschedule"
    },
    "release_url": "https://pypi.org/project/easyschedule/0.107/",
    "requires_dist": null,
    "requires_python": ">=3.7, <4",
    "summary": "Easily schedule single or recurring sync/async tasks",
    "version": "0.107",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10199481,
  "releases": {
    "0.100": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b92816a1b91744c9cf9ac6595569e962c19e5b1d96376b4bcd88fa3e39098d99",
          "md5": "392ad8245527ec4dfe36aaa5244b3cfa",
          "sha256": "4ff5e15f0481343d560744750e5c8e8c0ce4ad57736408f675a2a75a56f02c45"
        },
        "downloads": -1,
        "filename": "easyschedule-0.100-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "392ad8245527ec4dfe36aaa5244b3cfa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 5991,
        "upload_time": "2021-03-12T23:58:41",
        "upload_time_iso_8601": "2021-03-12T23:58:41.458844Z",
        "url": "https://files.pythonhosted.org/packages/b9/28/16a1b91744c9cf9ac6595569e962c19e5b1d96376b4bcd88fa3e39098d99/easyschedule-0.100-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.101": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "410d4ef12b48b5296b04131c11bc7857d0aad48e4fd3cb2e25e94861d427c59d",
          "md5": "f9962f35074fbc2cb9931c2129f5148e",
          "sha256": "aa0cfe8d942f1a333ba0e3c3821daca2de1c661973dd43e45d9fbbfed259295e"
        },
        "downloads": -1,
        "filename": "easyschedule-0.101-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9962f35074fbc2cb9931c2129f5148e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 6030,
        "upload_time": "2021-03-13T08:01:39",
        "upload_time_iso_8601": "2021-03-13T08:01:39.942069Z",
        "url": "https://files.pythonhosted.org/packages/41/0d/4ef12b48b5296b04131c11bc7857d0aad48e4fd3cb2e25e94861d427c59d/easyschedule-0.101-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.102": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc1c63b5e8412fe190c2bc94a50094b336d03ceca038a57d081494bb4357a134",
          "md5": "ff3bb3f674b80e6ea30f6dbf0adf0da2",
          "sha256": "68a9eab95708750d1355762e9f9d602d26a5251e6dd99337a722ded1e4641532"
        },
        "downloads": -1,
        "filename": "easyschedule-0.102-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff3bb3f674b80e6ea30f6dbf0adf0da2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 6328,
        "upload_time": "2021-03-13T08:14:06",
        "upload_time_iso_8601": "2021-03-13T08:14:06.391853Z",
        "url": "https://files.pythonhosted.org/packages/fc/1c/63b5e8412fe190c2bc94a50094b336d03ceca038a57d081494bb4357a134/easyschedule-0.102-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.103": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "610dc7bba94707a1dc31581fe316af97a00181f4203f675f175ded982ab4a6b9",
          "md5": "de3e4b31b4fb1c00a23b59cb1b7d022a",
          "sha256": "5ba4c4418942705dbec23289069aabc4f0e496f7e8d75ef0881c0c80d192e138"
        },
        "downloads": -1,
        "filename": "easyschedule-0.103-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de3e4b31b4fb1c00a23b59cb1b7d022a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 6325,
        "upload_time": "2021-03-13T08:18:55",
        "upload_time_iso_8601": "2021-03-13T08:18:55.641361Z",
        "url": "https://files.pythonhosted.org/packages/61/0d/c7bba94707a1dc31581fe316af97a00181f4203f675f175ded982ab4a6b9/easyschedule-0.103-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.104": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c523bda62d7d6ff03f464c9dd3b790d5f9e285c9e5893c827aee81a50d4d7d5",
          "md5": "c8601fdd60514f00e17ab298cda42345",
          "sha256": "9a4f22c766b304143866c27cde0fe11a9b99e880fc7d3cf0f84c2a2bb4db5cd0"
        },
        "downloads": -1,
        "filename": "easyschedule-0.104-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8601fdd60514f00e17ab298cda42345",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 6525,
        "upload_time": "2021-03-22T14:59:22",
        "upload_time_iso_8601": "2021-03-22T14:59:22.911065Z",
        "url": "https://files.pythonhosted.org/packages/3c/52/3bda62d7d6ff03f464c9dd3b790d5f9e285c9e5893c827aee81a50d4d7d5/easyschedule-0.104-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.105": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8e03c12856231767ecb82a5c62e4aee09174a7509ed68b1abf13f3165db0d99",
          "md5": "70e84755cce9b3a5418ceeb4096a1d0b",
          "sha256": "2adce5e019bf1d70f34cfcc2a7a76e42abde6d7d43ca0693ffba92ff299e0ac9"
        },
        "downloads": -1,
        "filename": "easyschedule-0.105-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70e84755cce9b3a5418ceeb4096a1d0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 7430,
        "upload_time": "2021-04-13T19:30:43",
        "upload_time_iso_8601": "2021-04-13T19:30:43.757308Z",
        "url": "https://files.pythonhosted.org/packages/b8/e0/3c12856231767ecb82a5c62e4aee09174a7509ed68b1abf13f3165db0d99/easyschedule-0.105-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.106": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "266243a3eb6e10954d331d221a88ee6179460c9c3ffee324f3bb6a043b9de73b",
          "md5": "07734579f9607b41f15bb56b1d285db0",
          "sha256": "1bc4fe2298f4f129a4d34572f6b8216fa9c2eef1b5eb006d136614cbd3a3833c"
        },
        "downloads": -1,
        "filename": "easyschedule-0.106-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07734579f9607b41f15bb56b1d285db0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 7438,
        "upload_time": "2021-04-19T19:28:15",
        "upload_time_iso_8601": "2021-04-19T19:28:15.886973Z",
        "url": "https://files.pythonhosted.org/packages/26/62/43a3eb6e10954d331d221a88ee6179460c9c3ffee324f3bb6a043b9de73b/easyschedule-0.106-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.107": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f49c0d147bc5d9c73332d3465d860abfcef89c7e02ea32196d08af5a9aaf49a",
          "md5": "069f4cea71c57fcafd295d8c401f9410",
          "sha256": "480d52106c25666ce62923510e2c6a331bc3ad4331270bd2d6cc4bd691dca798"
        },
        "downloads": -1,
        "filename": "easyschedule-0.107-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "069f4cea71c57fcafd295d8c401f9410",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 7471,
        "upload_time": "2021-04-28T19:59:18",
        "upload_time_iso_8601": "2021-04-28T19:59:18.266950Z",
        "url": "https://files.pythonhosted.org/packages/2f/49/c0d147bc5d9c73332d3465d860abfcef89c7e02ea32196d08af5a9aaf49a/easyschedule-0.107-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f49c0d147bc5d9c73332d3465d860abfcef89c7e02ea32196d08af5a9aaf49a",
        "md5": "069f4cea71c57fcafd295d8c401f9410",
        "sha256": "480d52106c25666ce62923510e2c6a331bc3ad4331270bd2d6cc4bd691dca798"
      },
      "downloads": -1,
      "filename": "easyschedule-0.107-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "069f4cea71c57fcafd295d8c401f9410",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 7471,
      "upload_time": "2021-04-28T19:59:18",
      "upload_time_iso_8601": "2021-04-28T19:59:18.266950Z",
      "url": "https://files.pythonhosted.org/packages/2f/49/c0d147bc5d9c73332d3465d860abfcef89c7e02ea32196d08af5a9aaf49a/easyschedule-0.107-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}