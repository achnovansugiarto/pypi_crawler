{
  "info": {
    "author": "Emilien Klein",
    "author_email": "emilien@klein.st",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# billingflatfile\nGenerate the required fixed width format files from delimited files extracts for EMR billing purposes\n\n\n[![Latest release on GitHub](https://img.shields.io/github/v/release/e2jk/billingflatfile)](https://github.com/e2jk/billingflatfile/releases/latest)\n[![Latest release on PyPI](https://img.shields.io/pypi/v/billingflatfile)](https://pypi.org/project/billingflatfile/)\n[![Build Status](https://travis-ci.com/e2jk/billingflatfile.svg?branch=master)](https://travis-ci.com/e2jk/billingflatfile)\n[![codecov](https://codecov.io/gh/e2jk/billingflatfile/branch/master/graph/badge.svg)](https://codecov.io/gh/e2jk/billingflatfile)\n[![GitHub last commit](https://img.shields.io/github/last-commit/e2jk/billingflatfile.svg)](https://github.com/e2jk/billingflatfile/commits/master)\n[![License](https://img.shields.io/github/license/e2jk/billingflatfile)](../../tree/master/LICENSE)\n\nHow to run the program\n======================\n\nHow to install the program\n--------------------------\n\nFor Linux and Windows, download the latest version from [here](https://github.com/e2jk/billingflatfile/releases/latest) (look under the \"Assets\" section) and run it on your system, no need to install anything else.\n\nThe program can also be installed from the Python Package Index:\n\n```\npip install billingflatfile\n```\n\nOr it can be downloaded and ran directly from the [Docker Hub](https://hub.docker.com/r/e2jk/billingflatfile):\n\n```\ndocker run --rm e2jk/billingflatfile [add parameters here]\n```\n\nSee below [how to install from source](#how-to-install-from-source).\n\nConfiguration file\n------------------\n\nIn order for the program to know how to transform your delimited file into a fixed-width file, you will need to provide a configuration file describing the length and type of values expected for your output file.\n\nAn example configuration file can be found at\n[`tests/sample_files/configuration1.xlsx`](../../tree/master/tests/sample_files/configuration1.xlsx)\n\nA configuration file is a simple Excel `.xlsx` file in which each row represents a single field expected in the output file (the fixed-width file), and at least these 3 column headers, i.e. the first line in your Excel file:\n\n* Length\n* Output format\n* Skip field\n\nThe **Length** value is self-explanatory: it represents how long the field will be in the generated fixed-width file. If the value in the input file is shorter than this defined length, it will be padded with `0`s or spaces, depending on the type of Output format (see next section).\n\nThe **Output format** defines how the input value must be treated and transformed. The following values are supported:\n* `Integer`\n  * A numeric value that gets padded with `0`s added to the left\n  * Example: \"`123`\" becomes \"`000123`\" if a length of 6 is defined\n* `Decimal`\n  * Decimal numbers get sent as \"cents\" instead of \"dollars\", rounded to the nearest cent. (yeah, weird explanation -- better have a look at the example...). Also padded with `0`s added to the left.\n  * Example: \"`123.458`\" becomes \"`00012346`\" if a length of 8 is defined\n* `Keep numeric`\n  * strips all non-numeric characters from an input value and treats the remaining value as `Integer`\n  * Example: \"`1-2.3a`\" becomes \"`000123`\" if a length of 6 is defined\n\n* Date\n  * A date to be converted from one format to another. The input value can be sent with either Day or Month as first element or as ISO format YYYYMMDD, and with a slash, dash, dot or no separator. When there is a separator defined, the day and month can omit the leading 0, if need be. See at the top of the [`test_main.py` file](https://github.com/e2jk/delimited2fixedwidth/blob/master/tests/test_main.py#L37) for the full list of supported codes.\n  * Examples:\n    * \"`21/06/2020`\" becomes \"`20200621`\" with a format of `Date (DD/MM/YYYY to YYYYMMDD)` and a length of 8\n    * \"`6-21-2020`\" becomes \"`20200621`\" with a format of `Date (MM-DD-YYYY to YYYYMMDD)` and a length of 8\n    * \"`21062020`\" becomes \"`20200621`\" with a format of `Date (DDMMYYYY to YYYYMMDD)` and a length of 8\n    * \"`6.21.2020`\" becomes \"`21/06/2020`\" with a format of `Date (MM.DD.YYYY to DD/MM/YYYY)` and a length of 10\n* `Time`\n  * A time sent as hour:minutes (with or without colon in the input data) will be sent out without the colon\n  * Example: \"`20:06`\" becomes \"`2006`\" if a length of 4 is defined\n* `Text`\n  * The value gets sent without format changes (such as those outlined above for date and time), with spaces added at the end, on the right of the string\n  * Example: \"`Hello`\" becomes \"<code>Hello&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>\" if a length of 10 is defined\n\nFinally, setting the value of the **Skip field** column to \"`True`\" allows to send a field as blank in the output file, respecting the field size and padding type: `0`s or spaces depending on the defined output format.\n\n\nRunning the program\n-------------------\n\nOpen a Command Line window `cmd` and indicate your input file name and configuration file to use. You will also need to indicate a number of arguments needed to generate the metadata file, such as the Application ID and the Run ID.\nYou can additionally indicate if your input file uses a specific field separator (default is `,`), textual field wrapper (default is `\"`), if you want to skip a specific number of header or footer files from your input file, a description for this billing run and the type of billing.\n\nSee the [Program help information](#program-help-information) section below for details on how to populate these arguments.\n\nAn example run of the program could look like this:\n\n```\nbillingflatfile.exe --input data\\input_file.txt --config data\\configuration_file.xlsx --application-id AB --run-id 456 --skip-header 1 --skip-footer 1 --delimiter \"^\" --run-description \"Nice description\" --billing-type \"H\"\n```\n\nOr it can be ran from the [Docker Hub](https://hub.docker.com/r/e2jk/billingflatfile):\n\n```\ndocker run --rm e2jk/billingflatfile [add parameters here]\n```\n\nIf you've installed the program following [how to install from source](#how-to-install-from-source), you can run the program with `pipenv run python billingflatfile.py`.\n\nProgram help information\n------------------------\n```\nusage: billingflatfile.py [-h] [--version] (-i INPUT | -id INPUT_DIRECTORY) [-ie INPUT_ENCODING] [-od OUTPUT_DIRECTORY] [-m] -c CONFIG\n                          [-dl DELIMITER] [-q QUOTECHAR] [-sh SKIP_HEADER] [-sf SKIP_FOOTER] [-l LOCALE] [-t TRUNCATE] [-dv DIVERT] [-x] -a\n                          APPLICATION_ID [-ds RUN_DESCRIPTION] [-b BILLING_TYPE] [-r RUN_ID] [-rf RUN_ID_FILE] [-fv FILE_VERSION]\n                          [-dr DATE_REPORT] [-txt] [-d] [-v]\n\nGenerate the required fixed width format files from delimited files extracts for EMR billing purposes\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -i INPUT, --input INPUT\n                        Specify the input file\n  -id INPUT_DIRECTORY, --input-directory INPUT_DIRECTORY\n                        Specify the input directory from which to process input files\n  -ie INPUT_ENCODING, --input-encoding INPUT_ENCODING\n                        Specify the encoding of the input files (default: 'utf-8')\n  -od OUTPUT_DIRECTORY, --output-directory OUTPUT_DIRECTORY\n                        The directory in which to create the output files\n  -m, --move-input-files\n                        Move the input files to the output directory after processing. Must be used in conjunction with the `--output-\n                        directory` argument.\n  -c CONFIG, --config CONFIG\n                        Specify the configuration file\n  -dl DELIMITER, --delimiter DELIMITER\n                        The field delimiter used in the input file (default ,)\n  -q QUOTECHAR, --quotechar QUOTECHAR\n                        The character used to wrap textual fields in the input file (default \")\n  -sh SKIP_HEADER, --skip-header SKIP_HEADER\n                        The number of header lines to skip (default 0)\n  -sf SKIP_FOOTER, --skip-footer SKIP_FOOTER\n                        The number of footer lines to skip (default 0)\n  -l LOCALE, --locale LOCALE\n                        Change the locale, useful to handle decimal separators\n  -t TRUNCATE, --truncate TRUNCATE\n                        Comma-delimited list of field numbers for which the output will be truncated at the maximum line length, should the\n                        input value be longer than the maximum defined field length. If not set, a field that is too long will cause the\n                        script to stop with an error.\n  -dv DIVERT, --divert DIVERT\n                        Diverts to a separate file the content from rows containing a specific value at a specific place. The format of this\n                        parameter is \"<field number>,<value to divert on>\" (without quotes). This parameter can be repeated several times to\n                        support different values or different fields. The diverted content will be saved to a file whose name will be the\n                        output filename with \"_diverted\" added before the file extension.\n  -x, --overwrite-files\n                        Allow to overwrite the output files\n  -a APPLICATION_ID, --application-id APPLICATION_ID\n                        The application ID. From the vendor specs: the first character will be filled with the first letter of the site that\n                        is to be invoiced, and the second character will be filled with a significant letter to describe the application.\n                        Must be unique for the receiving application to accept the files. Max 2 characters.\n  -ds RUN_DESCRIPTION, --run-description RUN_DESCRIPTION\n                        The description for this run. Free text, max 30 characters.\n  -b BILLING_TYPE, --billing-type BILLING_TYPE\n                        The billing type. Must be 'H' (internal billing), 'E' (external billing) or ' ' (both external and internal billing,\n                        or undetermined). Max 1 character.\n  -r RUN_ID, --run-id RUN_ID\n                        The ID for this run. Must be unique for each run for the receiving application to accept it. Numeric value between 0\n                        and 9999, max 4 characters.\n  -rf RUN_ID_FILE, --run-id-file RUN_ID_FILE\n                        Point to a file from which to retrieve the ID for this run. After processing, the Run ID + 1 is saved to this file,\n                        allowing for automated recurring runs (for instance associated with the `--input-directory` and `--move-input-files`\n                        arguments). Can be used in conjunction with the `--run-id` argument to seed the initial value of the Run ID.\n  -fv FILE_VERSION, --file-version FILE_VERSION\n                        The version of the output file to be generated. Only 'V1.11' is currently supported. Max 8 characters.\n  -dr DATE_REPORT, --date-report DATE_REPORT\n                        The column number of a Date column to report on in the metadata file. Numeric value between 0 and 99999.\n  -txt, --txt-extension\n                        Add a .txt extension to the output files' names.\n  -d, --debug           Print lots of debugging statements\n  -v, --verbose         Be verbose\n```\n\nDevelopment information\n=======================\n\nHow to install from source\n--------------------------\n\n### Create the environment:\n```bash\ncd devel/billingflatfile/\npython3 -m pip install --user pipenv\npipenv install\n```\n\nIf you want to develop the script, replace that last command by `pipenv install --dev`\n\n### Activate the virtual environment:\n```bash\ncd devel/billingflatfile/\npipenv shell\n```\n\nYou can also run the script using `pipenv run billingflatfile.py` instead of `python3 billingflatfile.py` without having to set up a subshell (which has some problems in Windows, with the history not being accessible with the up arrow)\n\n### When done:\n```bash\nexit\n```\n\n### Update the dependencies:\n```bash\npipenv update\n```\n\n### Install a new dependency\n```bash\npipenv install <package_name> [--dev]\n```\n\nBuilding the executable\n-----------------------\n\nRun the following command in your virtual environment:\n\n```\npipenv run pyinstaller --onefile billingflatfile.py\n```\n\nThe executable that gets created in the `dist` folder can then be uploaded to Github as a new release.\n\nPackaging the source and publishing to the Python Package Index\n---------------------------------------------------------------\n\nFollow the instructions mentioned [here](https://packaging.python.org/tutorials/packaging-projects/#generating-distribution-archives), namely:\n\n```\npipenv lock -r > requirements-no-dev.txt\npipenv run python setup.py sdist bdist_wheel\npipx run twine upload dist/*\n```\n\nCreate the Docker image and publish it to Docker Hub\n----------------------------------------------------\n\nRun:\n\n* `docker build -t e2jk/billingflatfile:latest -t e2jk/billingflatfile:<version> --rm .` to build the Docker image.\n* `docker run --rm e2jk/billingflatfile:<version>` to test the Docker image locally.\n* `docker push e2jk/billingflatfile:latest` and `docker push e2jk/billingflatfile:<version>` to push the Docker image to Docker Hub.\n\n\nChangelog\n=========\n\nThese are the changes brought in each versions:\n\nv1.0.6 (2021-07-09)\n===================\nNon-breaking changes:\n---------------------\n* Fix package published on PyPI\n\nv1.0.5 (2020-11-21)\n===================\nBreaking changes:\n-----------------\n* `--output_directory` is now mandatory, don't create a default output directory in data/<today's date>\n* Upper limit for the `--run-id` argument down from 99999 to 9999\n\nNon-breaking changes:\n---------------------\n* Process all the files in a directory as multiple input files through the new arguments `--input-directory` and `--output-directory`\n* New `--move-input-files` argument to move the input files to the output directory after processing\n* New `--run-id-file` arguments to read and save the next Run ID. Allows for automated recurring runs, for instance associated with the `--input-directory` and `--move-input-files` arguments\n* New `--input-encoding` argument to specify the encoding of the input files, defaults to 'utf-8'\n\nv1.0.4 (2020-11-02)\n===================\nBreaking changes:\n-----------------\n* Date and Time fields now default/pad to 0's instead of spaces\n\nNon-breaking changes:\n---------------------\n* New `--txt-extension` argument to add a `.txt` extension to the output files' names.\n* The program can now be ran in a Docker container: https://hub.docker.com/r/e2jk/billingflatfile\n\nv1.0.3 (2020-09-30)\n===================\nNon-breaking changes:\n---------------------\n* New `--truncate` argument to specify which fields can be cut when the input value is longer than the defined maximum field length\n* New `--locale` argument, in case a different Decimal separator is used\n* Fix: Spaces or empty string accepted as valid Integer and Decimal values (interpreted as 0)\n* Support a large number of new date formats. See at the top of the [`test_main.py` file](https://github.com/e2jk/delimited2fixedwidth/blob/master/tests/test_main.py#L37) for the full list of supported codes. Some examples:\n  * `Date (DD/MM/YYYY to DD/MM/YYYY)`\n  * `Date (YYYYMMDD to DD.MM.YYYY)`\n  * `Date (MM.DD.YYYY to YYYYMMDD)`\n  * `Date (YYYYMMDD to MM-DD-YYYY)`\n* New format `Keep numeric` that strips all non-numeric characters from an input value\n* New `--divert` argument to divert to a separate file the content from rows containing specific values\n\nv1.0.2 (2020-09-16)\n===================\nNon-breaking changes:\n---------------------\n* Support for new date formats:\n  * `Date (DD-MM-YYYY to YYYYMMDD)`\n  * `Date (MM-DD-YYYY to YYYYMMDD)`\n  * `Date (DD.MM.YYYY to YYYYMMDD)`\n  * `Date (MM.DD.YYYY to YYYYMMDD)`\n  * `Date (DDMMYYYY to YYYYMMDD)`\n  * `Date (MMDDYYYY to YYYYMMDD)`\n\nv1.0.1 (2020-09-16)\n===================\nOther changes:\n--------------\n* Reduce the number of dependencies\n\nv1.0.0 (2020-09-14)\n===================\nNon-breaking changes:\n---------------------\n* New `--date-report` argument\n\nOther changes:\n--------------\n* Changes to the development toolchain and test suite\n\nv0.0.1-alpha (2020-09-10)\n=========================\n* Initial release\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/e2jk/billingflatfile",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "billingflatfile",
    "package_url": "https://pypi.org/project/billingflatfile/",
    "platform": "",
    "project_url": "https://pypi.org/project/billingflatfile/",
    "project_urls": {
      "Homepage": "https://github.com/e2jk/billingflatfile"
    },
    "release_url": "https://pypi.org/project/billingflatfile/1.0.6/",
    "requires_dist": [
      "delimited2fixedwidth (==1.0.11)",
      "et-xmlfile (==1.1.0) ; python_version >= \"3.6\"",
      "openpyxl (==3.0.7) ; python_version >= \"3.6\""
    ],
    "requires_python": ">=3.6",
    "summary": "Generate the required fixed width format files from delimited files extracts for EMR billing purposes",
    "version": "1.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10870202,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fee878b850a962c4de29109fe417ddf04251f447f1b6687a1916f42a72af9498",
          "md5": "83082f7068965ae45b8a2b1da39ceec8",
          "sha256": "78902af01187a0da21f448af72561d5b27ebe1a02bdc1962f287d1ff8a94a91b"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83082f7068965ae45b8a2b1da39ceec8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8868,
        "upload_time": "2020-09-16T11:44:49",
        "upload_time_iso_8601": "2020-09-16T11:44:49.467405Z",
        "url": "https://files.pythonhosted.org/packages/fe/e8/78b850a962c4de29109fe417ddf04251f447f1b6687a1916f42a72af9498/billingflatfile-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c66a9585a57a88bb1060ef3e5d4eccb98035c9a513f4b7eb743f1b3d8814056",
          "md5": "dc2c27f8a92e9a25487510cf8fde5452",
          "sha256": "216511aa5c9390b66aa94a8bbd270a4a11ba80e1cf795f41c6b4641b0fe71d62"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc2c27f8a92e9a25487510cf8fde5452",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8513,
        "upload_time": "2020-09-16T11:44:52",
        "upload_time_iso_8601": "2020-09-16T11:44:52.162778Z",
        "url": "https://files.pythonhosted.org/packages/2c/66/a9585a57a88bb1060ef3e5d4eccb98035c9a513f4b7eb743f1b3d8814056/billingflatfile-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71524cfd1594f495322ef038731336f8e9fefa2ffe1572bf8d991dd43cabdede",
          "md5": "c15335a9950e592f9eb09b9b2d48ed16",
          "sha256": "836d9d9d214e70070f718ebe6d203a88e4bb9150c30b3299890fa01b58bf92bc"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c15335a9950e592f9eb09b9b2d48ed16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9006,
        "upload_time": "2020-09-16T21:28:27",
        "upload_time_iso_8601": "2020-09-16T21:28:27.955932Z",
        "url": "https://files.pythonhosted.org/packages/71/52/4cfd1594f495322ef038731336f8e9fefa2ffe1572bf8d991dd43cabdede/billingflatfile-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b78c4199940858011edbd2d0db6b72d5cbc3070a311334b58b7e51888d40c388",
          "md5": "804d6a18fbafdad7ff8d76a745be7108",
          "sha256": "26e77b390c1ffec4235084417c85a7e43b349861564f07355d6513e190051833"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "804d6a18fbafdad7ff8d76a745be7108",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8700,
        "upload_time": "2020-09-16T21:28:29",
        "upload_time_iso_8601": "2020-09-16T21:28:29.292943Z",
        "url": "https://files.pythonhosted.org/packages/b7/8c/4199940858011edbd2d0db6b72d5cbc3070a311334b58b7e51888d40c388/billingflatfile-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66e1d21d295a76d00105a2fa64e9bdf99f023b7ef21ee486b1beb040174cb9f8",
          "md5": "0677fe7a992633e31083c43ec7c04f5e",
          "sha256": "da5ca1d62b280c9a5c2bc336f4317e508320175402d77417d8815156bb11fe17"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0677fe7a992633e31083c43ec7c04f5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9731,
        "upload_time": "2020-09-30T21:53:36",
        "upload_time_iso_8601": "2020-09-30T21:53:36.382375Z",
        "url": "https://files.pythonhosted.org/packages/66/e1/d21d295a76d00105a2fa64e9bdf99f023b7ef21ee486b1beb040174cb9f8/billingflatfile-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93001ea0ccedf3e70758deb0a95f5bdd46dfecfe540ec4826d7077dc9d026607",
          "md5": "67f212e4b294311f921b21a0bdbfa229",
          "sha256": "d8b66fe5d87c09fdd599fcaa108376282ad2af42d5eddd31ac6b88b6fa49bd6e"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "67f212e4b294311f921b21a0bdbfa229",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10633,
        "upload_time": "2020-09-30T21:53:37",
        "upload_time_iso_8601": "2020-09-30T21:53:37.635265Z",
        "url": "https://files.pythonhosted.org/packages/93/00/1ea0ccedf3e70758deb0a95f5bdd46dfecfe540ec4826d7077dc9d026607/billingflatfile-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adcf57efdd3c394c4380543fdad8b5f7b9e98958819b71644ab881e007c927b5",
          "md5": "1d572bad8c3fff513c3a2fd759ca54e9",
          "sha256": "39e5f1d00780070f86fdeb51bbf31ef6f8c76e5c4a9af441a941ac442ffbd8e2"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d572bad8c3fff513c3a2fd759ca54e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10027,
        "upload_time": "2020-11-01T23:44:24",
        "upload_time_iso_8601": "2020-11-01T23:44:24.254963Z",
        "url": "https://files.pythonhosted.org/packages/ad/cf/57efdd3c394c4380543fdad8b5f7b9e98958819b71644ab881e007c927b5/billingflatfile-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dd181b732c0069305ea52c4233ddd442a081266409a1dfa122772fd50a52908",
          "md5": "86624ce2cb37f2bb9569ceb51177feb3",
          "sha256": "5fee1c202109e040ea35828c583b4af8a560be733e032e1b21d59195867157d1"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "86624ce2cb37f2bb9569ceb51177feb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11163,
        "upload_time": "2020-11-01T23:44:25",
        "upload_time_iso_8601": "2020-11-01T23:44:25.662960Z",
        "url": "https://files.pythonhosted.org/packages/6d/d1/81b732c0069305ea52c4233ddd442a081266409a1dfa122772fd50a52908/billingflatfile-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b9dce9ef28677438bae39808a0a8182b27260e971c0202edb8116b4b1cf88a8",
          "md5": "2eeacb807e5a942b44dbd959040207e3",
          "sha256": "401724bbf41de9a99684947fa0e34ec6a6efd6bcac8b09ba331ed50f73998069"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2eeacb807e5a942b44dbd959040207e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11202,
        "upload_time": "2020-11-21T20:42:17",
        "upload_time_iso_8601": "2020-11-21T20:42:17.111678Z",
        "url": "https://files.pythonhosted.org/packages/2b/9d/ce9ef28677438bae39808a0a8182b27260e971c0202edb8116b4b1cf88a8/billingflatfile-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f734d098e1b47ef3e1ea2a14c730146b64b4545d01c08c9e286950b19a4abd6",
          "md5": "22f1faad4dd5f82d6ffa6292acc8c672",
          "sha256": "b50c278e799d39ff93c1be0002f36de1f35351685b427fa647bb9ae87e1c9bc8"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "22f1faad4dd5f82d6ffa6292acc8c672",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12402,
        "upload_time": "2020-11-21T20:42:18",
        "upload_time_iso_8601": "2020-11-21T20:42:18.232001Z",
        "url": "https://files.pythonhosted.org/packages/4f/73/4d098e1b47ef3e1ea2a14c730146b64b4545d01c08c9e286950b19a4abd6/billingflatfile-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "060bcf4b1c548ffd2d0141027a9842f1e05059b13a6da63464cdc22d1468be5e",
          "md5": "f1e48ac80ec07fece1ac790d015ca279",
          "sha256": "71a6c0274458c11cf8834b23fbf74520b14b26f76ef3b17a5f4ff03adeb774e1"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1e48ac80ec07fece1ac790d015ca279",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11133,
        "upload_time": "2021-07-09T22:30:07",
        "upload_time_iso_8601": "2021-07-09T22:30:07.637717Z",
        "url": "https://files.pythonhosted.org/packages/06/0b/cf4b1c548ffd2d0141027a9842f1e05059b13a6da63464cdc22d1468be5e/billingflatfile-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1bc07142557be49f27ab76c3c08da795d4b13775bf0eaea1734dfeb3d8ac0dc",
          "md5": "e5aa13c639515a10619f592efd745fe3",
          "sha256": "fad769ba70637ab12a9f031f86ede40e4c08eafc5c605f3a3cbad165ea9025f7"
        },
        "downloads": -1,
        "filename": "billingflatfile-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e5aa13c639515a10619f592efd745fe3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12364,
        "upload_time": "2021-07-09T22:30:10",
        "upload_time_iso_8601": "2021-07-09T22:30:10.086784Z",
        "url": "https://files.pythonhosted.org/packages/f1/bc/07142557be49f27ab76c3c08da795d4b13775bf0eaea1734dfeb3d8ac0dc/billingflatfile-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "060bcf4b1c548ffd2d0141027a9842f1e05059b13a6da63464cdc22d1468be5e",
        "md5": "f1e48ac80ec07fece1ac790d015ca279",
        "sha256": "71a6c0274458c11cf8834b23fbf74520b14b26f76ef3b17a5f4ff03adeb774e1"
      },
      "downloads": -1,
      "filename": "billingflatfile-1.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f1e48ac80ec07fece1ac790d015ca279",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11133,
      "upload_time": "2021-07-09T22:30:07",
      "upload_time_iso_8601": "2021-07-09T22:30:07.637717Z",
      "url": "https://files.pythonhosted.org/packages/06/0b/cf4b1c548ffd2d0141027a9842f1e05059b13a6da63464cdc22d1468be5e/billingflatfile-1.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1bc07142557be49f27ab76c3c08da795d4b13775bf0eaea1734dfeb3d8ac0dc",
        "md5": "e5aa13c639515a10619f592efd745fe3",
        "sha256": "fad769ba70637ab12a9f031f86ede40e4c08eafc5c605f3a3cbad165ea9025f7"
      },
      "downloads": -1,
      "filename": "billingflatfile-1.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "e5aa13c639515a10619f592efd745fe3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12364,
      "upload_time": "2021-07-09T22:30:10",
      "upload_time_iso_8601": "2021-07-09T22:30:10.086784Z",
      "url": "https://files.pythonhosted.org/packages/f1/bc/07142557be49f27ab76c3c08da795d4b13775bf0eaea1734dfeb3d8ac0dc/billingflatfile-1.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}