{
  "info": {
    "author": "John Garrett",
    "author_email": "garrettj403@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "Waveguide\n=========\n\n*Calculate the various properties of rectangular waveguides*\n\nFor example:\n- Cutoff frequency\n- Phase constant\n- Attenuation constant due to conductor and/or dielectric loss\n\nExample 1: Properties of a WR-90 Waveguide\n------------------------------------------\n\nWR-90 waveguide:\n```python\nimport numpy as np \nimport scipy.constants as sc\nimport matplotlib.pyplot as plt\nfrom waveguide import phase_constant, attenuation_constant\n\n# WR-90 waveguide dimensions\na, b = 0.9 * sc.inch, 0.45 * sc.inch\n\n# Conductivity of waveguide walls, S/m\ncond = 2e7\n\n# Frequency sweep\nfreq = np.linspace(7, 13, 100) * sc.giga\n```\n\nPhase constant:\n```python\nbeta = phase_constant(freq, a, b, cond=cond)\n\nplt.figure()\nplt.plot(freq/1e9, beta)\nplt.ylabel(r\"Phase constant, $\\beta$ (rad/m)\")\nplt.xlabel(\"Frequency (GHz)\")\nplt.xlim([7, 13])\n```\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/garrettj403/Waveguide/main/examples/results/simple-waveguide-phase-constant.png\" width=\"500\">\n</p>\n\nAttenuation constant:\n```python\nalpha = attenuation_constant(freq, a, b, cond=cond)\n\nplt.figure()\nplt.plot(freq/1e9, alpha)\nplt.ylabel(r\"Attenuation constant, $\\alpha$ (Np/m)\")\nplt.xlabel(\"Frequency (GHz)\")\nplt.xlim([7, 13])\n```\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/garrettj403/Waveguide/main/examples/results/simple-waveguide-attenuation-constant.png\" width=\"500\">\n</p>\n\nExample 2: Cutoff Frequencies\n-----------------------------\n\n```python\nimport numpy as np\nimport scipy.constants as sc\nfrom waveguide import cutoff_frequency\n\n# Waveguide sizes to analyze (EIA designations)\nwr_sizes = np.array([28, 22.4, 18.8, 14.8, 12.2, 10, 6.5, 5.1, 4.3, 3.4, 2.8])\n\n# Calculate cutoff frequencies\nf_center = np.empty_like(wr_sizes)\nf1 = np.empty_like(wr_sizes)\nf2 = np.empty_like(wr_sizes)\nfor i, _wr in np.ndenumerate(wr_sizes):\n    a = _wr * 10 * sc.mil  # waveguide width\n    f1[i] = cutoff_frequency(a, a/2, m=1, n=0) * 1.25  # TE10\n    f2[i] = cutoff_frequency(a, a/2, m=2, n=0) * 0.95  # TE20\n    f_center[i] = (f1[i] + f2[i]) / 2\n\n# Plot    \nfig, ax = plt.subplots(figsize=(12,12))\nax.loglog(wr_sizes, f_center/1e9, 'ko')\nax.errorbar(wr_sizes, f_center/1e9, yerr=[(f_center-f1)/1e9, -(f_center-f2)/1e9], c='k', fmt='o', ls='--', capsize=5, capthick=2)\nax.set_xlabel(\"\\nEIA waveguide designation (\\\"WR-\\\")\")\nax.set_ylabel(\"Frequency range (GHz)\")\nax.set_ylim([20, 500])\nax.grid(which='both')\nplt.yticks(ticks=[20, 30, 40, 50, 60, 70, 80, 90, 100, 200, 300, 400, 500], \n\t       labels=[20, 30, 40, 50, 60, 70, 80, 90, 100, 200, 300, 400, 500])\nax.set_xticks(ticks=wr_sizes, minor=False)\nax.set_xticks(ticks=[], minor=True)\nplt.xticks(ticks=wr_sizes, labels=wr_sizes, rotation=90)\n\n```\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/garrettj403/Waveguide/main/examples/results/waveguide-loss-cutoff-frequency.png\" width=\"500\">\n</p>\n\nExample 3: Alumina-Filled WR-28 Waveguide\n-----------------------------------------\n\nWR-28 waveguide filled with 1 inch long alumina slug:\n```python\nimport numpy as np \nimport scipy.constants as sc\nimport matplotlib.pyplot as plt \n\nimport waveguide as wg\n\n# WR-28 waveguide dimensions\na, b = 0.28 * sc.inch, 0.14 * sc.inch\n\n# Conductivity of waveguide walls, S/m\ncond = 1.8e7\n\n# Frequency sweep\nfreq = np.linspace(22, 42, 401) * sc.giga\n\n# Relativity permittivity\ner = 9.3\n\n# Alumina length, m\nlength = 1 * sc.inch\n\n# Section lengths\ntotal_length = 1.7 * sc.inch\nlength1 = (total_length - length) / 2\nlength2 = length\nlength3 = length1\n\n# S-parameters\n_, _, s21, _ = wg.dielectric_sparam(freq, a, b, er, 0, cond, length1, length2, length3)\n\nfig, ax = plt.subplots()\nax.plot(freq/1e9, 20*np.log10(np.abs(s21)))\nplt.ylabel(r\"$S_{21}$ magnitude (dB)\")\nplt.xlabel(\"Frequency (GHz)\")\nplt.xlim([22, 42])\n```\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/garrettj403/Waveguide/main/examples/results/alumina-filled-waveguide-sparam.png\" width=\"500\">\n</p>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/garrettj403/Waveguide/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "waveguide",
    "package_url": "https://pypi.org/project/waveguide/",
    "platform": "any",
    "project_url": "https://pypi.org/project/waveguide/",
    "project_urls": {
      "Changelog": "https://github.com/garrettj403/Waveguide/blob/master/CHANGES.md",
      "Homepage": "https://github.com/garrettj403/Waveguide/",
      "Issue Tracker": "https://github.com/garrettj403/Waveguide/issues"
    },
    "release_url": "https://pypi.org/project/waveguide/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Calculate the properties of rectangular waveguides",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10737188,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3553602a333537ddd764ccd425cee638639c5d6e6f3100bedc140066f007e537",
          "md5": "558058aee2b6170ddaf0570de91d2f46",
          "sha256": "26fdcfcced7721684033c9af09bf40c74df7340f7fc3f92eb515b2a1589d9b87"
        },
        "downloads": -1,
        "filename": "waveguide-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "558058aee2b6170ddaf0570de91d2f46",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3906,
        "upload_time": "2021-01-27T03:42:12",
        "upload_time_iso_8601": "2021-01-27T03:42:12.336183Z",
        "url": "https://files.pythonhosted.org/packages/35/53/602a333537ddd764ccd425cee638639c5d6e6f3100bedc140066f007e537/waveguide-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24313cb6eba77cc83e47b3303139e2f9fe9a296339e1166fb9e3767d530a81c9",
          "md5": "64708a425388a2d35b7415e3d43c82ba",
          "sha256": "4f51cf81b92ef88ba97a47667651c29cd754226f0e628bbffc3802e321e08867"
        },
        "downloads": -1,
        "filename": "waveguide-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "64708a425388a2d35b7415e3d43c82ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1844,
        "upload_time": "2021-03-04T21:20:19",
        "upload_time_iso_8601": "2021-03-04T21:20:19.948871Z",
        "url": "https://files.pythonhosted.org/packages/24/31/3cb6eba77cc83e47b3303139e2f9fe9a296339e1166fb9e3767d530a81c9/waveguide-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5faf649c766cecda25dde271de4a6e5f904a9010270e1c0c42a505e16ce49c06",
          "md5": "87b2db8c37af55170df2779911081f11",
          "sha256": "8df98fcc8e77fc4a3ceaae1c517d580f74f1deed8296541472a971f2de10a284"
        },
        "downloads": -1,
        "filename": "waveguide-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "87b2db8c37af55170df2779911081f11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3944,
        "upload_time": "2021-06-24T21:33:03",
        "upload_time_iso_8601": "2021-06-24T21:33:03.910800Z",
        "url": "https://files.pythonhosted.org/packages/5f/af/649c766cecda25dde271de4a6e5f904a9010270e1c0c42a505e16ce49c06/waveguide-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5faf649c766cecda25dde271de4a6e5f904a9010270e1c0c42a505e16ce49c06",
        "md5": "87b2db8c37af55170df2779911081f11",
        "sha256": "8df98fcc8e77fc4a3ceaae1c517d580f74f1deed8296541472a971f2de10a284"
      },
      "downloads": -1,
      "filename": "waveguide-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "87b2db8c37af55170df2779911081f11",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3944,
      "upload_time": "2021-06-24T21:33:03",
      "upload_time_iso_8601": "2021-06-24T21:33:03.910800Z",
      "url": "https://files.pythonhosted.org/packages/5f/af/649c766cecda25dde271de4a6e5f904a9010270e1c0c42a505e16ce49c06/waveguide-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}