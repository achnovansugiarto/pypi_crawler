{
  "info": {
    "author": "Data Science SWAT",
    "author_email": "UnitDataScienceSwat@avito.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=======\nPulemet\n=======\n\nExecute coroutines with limitations. Take a look at following examples. \n\nUniform and steady execution\n============================\n\nLet's imagine we have some service. We want to get something like 10k results from that server.\nWhile we don't want to cost trouble target server we can use Pulemet with `rps` parameter.\nIt will run just `rps` requests per second. And we won't damage server. \nAlso, we may need to use `pool_size` parameter if server doesn't answer fast enough.\nThat parameter will prevent creating new connections above the limit if current still working.\n\n.. code-block:: python\n\n import asyncio\n\n    from pulemet import Pulemet\n\n\n    async def http_request(t: float = 0):\n        \"\"\"Let's say we go somewhere by http here.\"\"\"\n        await asyncio.sleep(t)\n        return 1\n\n\n    async def sum_results(coros):\n        s = 0\n        for elem in asyncio.as_completed(coros):\n            s += await elem\n\n        return s\n\n\n    pulemet = Pulemet(rps=1, pool_size=20)\n    coroutines = pulemet.process([http_request() for _ in range(10)])\n\n    result = asyncio.get_event_loop().run_until_complete(sum_results(coroutines))\n\nFunctions and retries\n=====================\n\nYou can run some async function with list of arguments and catch certain exceptions and even try call it again(few times).\nAll of these in following example.\n\n.. code-block:: python\n\n    import asyncio\n\n    from pulemet import Pulemet\n\n\n    async def func(ind):\n        await asyncio.sleep(0.001)\n        if ind % 2 == 0:\n            raise ValueError\n        return ind\n\n\n    def main():\n        pulemet = Pulemet(rps=10)\n\n        coros_pulemet = pulemet.process_funcs(\n            coro_func=func,\n            coros_kwargs=({'ind': i} for i in range(0, 20)),\n            exceptions=(ValueError,),\n            exceptions_max=5,\n        )\n        coroutines = asyncio.gather(*coros_pulemet, return_exceptions=True)\n\n        asyncio.get_event_loop().run_until_complete(coroutines)\n\n\n    if __name__ == '__main__':\n    main()\n\n\nProgress Bar Integration\n========================\n\nThat example explain how you can see execution progress this tqdm.\n\n.. code-block:: python\n\n    import asyncio\n\n    from tqdm.auto import tqdm\n\n    from pulemet import Pulemet\n\n\n    async def target(t: float = 0):\n        await asyncio.sleep(t)\n        return 1\n\n\n    async def sum_results(coros):\n        s = 0\n        for elem in asyncio.as_completed(coros):\n            s += await elem\n\n        return s\n\n\n    pulemet = Pulemet(rps=1, pbar=tqdm)\n    coroutines = pulemet.process([target() for _ in range(10)])\n\n    result = asyncio.get_event_loop().run_until_complete(sum_results(coroutines))\n\nYou will see something like that.\n\n.. code-block:: sh\n\n    Total: 0it [00:00, ?it/s]\n    Per second: 0it [00:00, ?it/s]\n\n    Total:   0%|          | 0/10 [00:00<?, ?it/s]\n    Total:  20%|██        | 2/10 [00:01<00:04,  1.99it/s]\n    Total:  30%|███       | 3/10 [00:02<00:04,  1.40it/s]\n    Total:  40%|████      | 4/10 [00:03<00:04,  1.22it/s]\n    Total:  50%|█████     | 5/10 [00:04<00:04,  1.13it/s]\n    Total:  60%|██████    | 6/10 [00:05<00:03,  1.08it/s]\n    Total:  70%|███████   | 7/10 [00:06<00:02,  1.05it/s]\n    Total:  80%|████████  | 8/10 [00:07<00:01,  1.04it/s]\n    Total:  90%|█████████ | 9/10 [00:08<00:00,  1.02it/s]\n    Total: 100%|██████████| 10/10 [00:09<00:00,  1.02it/s]",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/avito-tech/pulemet/archive/refs/heads/main.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/avito-tech/pulemet",
    "keywords": "rps,coroutines",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pulemet",
    "package_url": "https://pypi.org/project/pulemet/",
    "platform": "",
    "project_url": "https://pypi.org/project/pulemet/",
    "project_urls": {
      "Download": "https://github.com/avito-tech/pulemet/archive/refs/heads/main.zip",
      "Homepage": "https://github.com/avito-tech/pulemet"
    },
    "release_url": "https://pypi.org/project/pulemet/1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Manage coroutine execution speed",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12102073,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89275ecc45f33f23e5b993ec2e934a929c001e94584577df000ead001c68c98f",
          "md5": "0d0f80196f38dffb2bab1eedbfe834de",
          "sha256": "7cc866e5761f14a276eb0bde98299f1db31a45c22a8241cdaa982377ba1455ac"
        },
        "downloads": -1,
        "filename": "pulemet-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0d0f80196f38dffb2bab1eedbfe834de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4784,
        "upload_time": "2021-11-23T12:32:24",
        "upload_time_iso_8601": "2021-11-23T12:32:24.788363Z",
        "url": "https://files.pythonhosted.org/packages/89/27/5ecc45f33f23e5b993ec2e934a929c001e94584577df000ead001c68c98f/pulemet-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1a": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e504f5eda900cd22dfe185f1e753f550bc13e0efc4b4fd8b46d65f0bfd3df0fe",
          "md5": "ae3a522b6a2cc15ebc35c791838fc10d",
          "sha256": "9940def469b30e6f8807a54ee06f79382639ab8184b482a544749cb278029e85"
        },
        "downloads": -1,
        "filename": "pulemet-1.0.1a.tar.gz",
        "has_sig": false,
        "md5_digest": "ae3a522b6a2cc15ebc35c791838fc10d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4775,
        "upload_time": "2021-11-23T12:07:06",
        "upload_time_iso_8601": "2021-11-23T12:07:06.226874Z",
        "url": "https://files.pythonhosted.org/packages/e5/04/f5eda900cd22dfe185f1e753f550bc13e0efc4b4fd8b46d65f0bfd3df0fe/pulemet-1.0.1a.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50d7aab8ba8fd251138407557286ab078d451c77de1c551d0df9da10815b2710",
          "md5": "f874790ba8e9efa6399f522e25bc3ec2",
          "sha256": "b1bc47d4eabe704bf446d47f144cf05525f8e4b1b4a6b54f2791da40908f118e"
        },
        "downloads": -1,
        "filename": "pulemet-1.0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "f874790ba8e9efa6399f522e25bc3ec2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4783,
        "upload_time": "2021-11-23T12:24:53",
        "upload_time_iso_8601": "2021-11-23T12:24:53.765777Z",
        "url": "https://files.pythonhosted.org/packages/50/d7/aab8ba8fd251138407557286ab078d451c77de1c551d0df9da10815b2710/pulemet-1.0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f71e9920ae37e0d87a99b24460a463f6ea1f39ca335a6209100448ec0ed1fc96",
          "md5": "727b2ea0b1d736699767a95e8a5766da",
          "sha256": "3b1014ae34710d44fca6274dcdf6a1c19e82db4149bc5b7129b290bbd2c741d5"
        },
        "downloads": -1,
        "filename": "pulemet-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "727b2ea0b1d736699767a95e8a5766da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4767,
        "upload_time": "2021-11-23T13:13:12",
        "upload_time_iso_8601": "2021-11-23T13:13:12.641980Z",
        "url": "https://files.pythonhosted.org/packages/f7/1e/9920ae37e0d87a99b24460a463f6ea1f39ca335a6209100448ec0ed1fc96/pulemet-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0a": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29a268dcafe5869fe4668bd7e61033a5ea36ec3bd51ac6a1b00d2f8ddabe843a",
          "md5": "7e493f0c472283942f130b8df70dba34",
          "sha256": "323e8127fae3975b3676397954196e631ee2ebc473c60a91e60b5821fe7048d1"
        },
        "downloads": -1,
        "filename": "pulemet-1.2.0a.tar.gz",
        "has_sig": false,
        "md5_digest": "7e493f0c472283942f130b8df70dba34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4769,
        "upload_time": "2021-11-23T13:04:37",
        "upload_time_iso_8601": "2021-11-23T13:04:37.147143Z",
        "url": "https://files.pythonhosted.org/packages/29/a2/68dcafe5869fe4668bd7e61033a5ea36ec3bd51ac6a1b00d2f8ddabe843a/pulemet-1.2.0a.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f71e9920ae37e0d87a99b24460a463f6ea1f39ca335a6209100448ec0ed1fc96",
        "md5": "727b2ea0b1d736699767a95e8a5766da",
        "sha256": "3b1014ae34710d44fca6274dcdf6a1c19e82db4149bc5b7129b290bbd2c741d5"
      },
      "downloads": -1,
      "filename": "pulemet-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "727b2ea0b1d736699767a95e8a5766da",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4767,
      "upload_time": "2021-11-23T13:13:12",
      "upload_time_iso_8601": "2021-11-23T13:13:12.641980Z",
      "url": "https://files.pythonhosted.org/packages/f7/1e/9920ae37e0d87a99b24460a463f6ea1f39ca335a6209100448ec0ed1fc96/pulemet-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}