{
  "info": {
    "author": "Jorge Mario Cruz-Duarte",
    "author_email": "jorge.cruz@tec.mx",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# customhys\n\n<div>\n    <img align=\"left\" alt=\"Module Dependency Diagram\" src=\"https://raw.githubusercontent.com/jcrvz/customhys/master/docfiles/chm_logo.png\" title=\"Customhys logo\" width=\"25%\"/>\n</div>\n<div align=\"justify\"> \n    <b>Customising optimisation metaheuristics via hyper-heuristic search</b> (CUSTOMHyS). This framework provides tools for solving, but not limited to, continuous optimisation problems using a hyper-heuristic approach for customising metaheuristics. Such an approach is powered by a strategy based on Simulated Annealing. Also, several search operators serve as building blocks for tailoring metaheuristics. They were extracted from ten well-known metaheuristics in the literature.\n</div>\n\nDetailed information about this framework can be found in [[1, 2]](#references). Plus, the code for each module is well-documented.\n\n\n### üõ† Requirements:\n\n| Package                                            | Version (>=) |\n|----------------------------------------------------|--------------|\n| [Python](https://github.com/conda-forge/miniforge) | 3.8          |\n| [NumPy](https://numpy.org)                         | 1.22.0       |\n| [SciPy](https://scipy.org)                         | 1.5.0        |\n| [matplotlib](https://matplotlib.org)               | 3.2.2        |\n| [tqdm](https://tqdm.github.io)                     | 4.47.0       |\n| [pandas](https://pandas.pydata.org)                | 1.5.3        |\n| [scikit-learn](https://scikit-learn.org/stable/)   | 1.2.2        |\n| [TensorFlow](https://www.tensorflow.org)*          | 2.8.0        |\n\n*For Mac M1/M2, one may need to install TensorFlow via `conda` such as:\n```shell\nconda install -c apple tensorflow-deps\n```\nFurther information can be found at [Install TensorFlow on Mac M1/M2 with GPU support](https://medium.com/mlearning-ai/install-tensorflow-on-mac-m1-m2-with-gpu-support-c404c6cfb580) by D. Ganzaroli.\n\n## üß∞ Modules\n\nThe modules that comprise this framework depend on some basic Python packages, as well as they liaise each other. The module dependency diagram is presented as follows:\n\n![Module Dependency Diagram](https://github.com/jcrvz/customhys/blob/master/docfiles/dependency_diagram.png?raw=true)\n\n**NOTE:** Each module is briefly described below. If you require further information, please check the corresponding source code.\n\n### ü§Ø Problems (benchmark functions)\n\nThis module includes several benchmark functions as classes to be solved by using optimisation techniques. The class structure is based on Keita Tomochika's repository [optimization-evaluation](https://github.com/keit0222/optimization-evaluation).\n\nSource: [``benchmark_func.py``](customhys/benchmark_func.py)\n\n### üëØ‚Äç‚ôÇÔ∏è Population\n\nThis module contains the class Population. A Population object corresponds to a set of agents or individuals within a problem domain. These agents themselves do not explore the function landscape, but they know when to update the position according to a selection procedure.\n\nSource: [``population.py``](customhys/population.py)\n\n### ü¶æ Search Operators (low-level heuristics)\n\nThis module has a collection of search operators (simple heuristics) extracted from several well-known metaheuristics in the literature. Such operators work over a population, i.e., modify the individuals' positions. \n\nSource: [``operators.py``](customhys/operators.py)\n\n### ü§ñ Metaheuristic (mid-level heuristic)\n\nThis module contains the Metaheuristic class. A metaheuristic object implements a set of search operators to guide a population in a search procedure within an optimisation problem.\n\nSource: [``metaheuristic.py``](customhys/metaheuristic.py)\n\n### üëΩ Hyper-heuristic (high-level heuristic)\n\nThis module contains the Hyperheuristic class. Similar to the Metaheuristic class, but in this case, a collection of search operators is required. A hyper-heuristic object searches within the heuristic space to find the sequence that builds the best metaheuristic for a specific problem.\n\nSource: [``hyperheuristic.py``](customhys/hyperheuristic.py)\n\n### üè≠ Experiment\n\nThis module contains the Experiment class.  An experiment object can run several hyper-heuristic procedures for a list of optimisation problems.\n\nSource: [``experiment.py``](customhys/experiment.py)\n\n### üóúÔ∏è Tools\n\nThis module contains several functions and methods utilised by many modules in this package.\n\nSource: [``tools.py``](customhys/tools.py)\n\n### üß† Machine Learning\n\nThis module contains the implementation of Machine Learning models which can power a hyper-heuristic model from this framework. In particular, it is implemented a wrapper for a Neural Network model from Tensorflow. Also, contains auxiliar data structures which process sample of sequences to generate training data for Machine Learning models.\n\nSource: [``machine_learning.py``](customhys/machine_learning.py)\n\n### üíæ Data Structure\n\nThe experiments are saved in JSON files. The data structure of a saved file follows a particular scheme described below.\n\n<details>\n<summary> Expand structure </summary>\n<p>\n\n```\ndata_frame = {dict: N}\n|-- 'problem' = {list: N}\n|  |-- 0 = {str}\n:  :\n|-- 'dimensions' = {list: N}\n|  |-- 0 = {int}\n:  :\n|-- 'results' = {list: N}\n|  |-- 0 = {dict: 6}\n|  |  |-- 'iteration' = {list: M}   \n|  |  |  |-- 0 = {int}\n:  :  :  :\n|  |  |-- 'time' = {list: M}\n|  |  |  |-- 0 = {float}\n:  :  :  :\n|  |  |-- 'performance' = {list: M}\n|  |  |  |-- 0 = {float}\n:  :  :  :\n|  |  |-- 'encoded_solution' = {list: M}\n|  |  |  |-- 0 = {int}\n:  :  :  :\n|  |  |-- 'solution' = {list: M}\n|  |  |  |-- 0 = {list: C}\n|  |  |  |  |-- 0 = {list: 3}\n|  |  |  |  |  |-- search_operator_structure\n:  :  :  :  :  :\n|  |  |-- 'details' = {list: M}\n|  |  |  |-- 0 = {dict: 4}\n|  |  |  |  |-- 'fitness' = {list: R}\n|  |  |  |  |  |-- 0 = {float}\n:  :  :  :  :  :\n|  |  |  |  |-- 'positions' = {list: R}\n|  |  |  |  |  |-- 0 = {list: D}\n|  |  |  |  |  |  |-- 0 = {float}\n:  :  :  :  :  :  :\n|  |  |  |  |-- 'historical' = {list: R}\n|  |  |  |  |  |-- 0 = {dict: 5}\n|  |  |  |  |  |  |-- 'fitness' = {list: I}\n|  |  |  |  |  |  |  |-- 0 = {float}\n:  :  :  :  :  :  :  :\n|  |  |  |  |  |  |-- 'positions' = {list: I}\n|  |  |  |  |  |  |  |-- 0 = {list: D}\n|  |  |  |  |  |  |  |  |-- 0 = {float}\n:  :  :  :  :  :  :  :  :\n|  |  |  |  |  |  |-- 'centroid' = {list: I}\n|  |  |  |  |  |  |  |-- 0 = {list: D}\n|  |  |  |  |  |  |  |  |-- 0 = {float}\n:  :  :  :  :  :  :  :  :\n|  |  |  |  |  |  |-- 'radius' = {list: I}\n|  |  |  |  |  |  |  |-- 0 = {float}\n:  :  :  :  :  :  :  :\n|  |  |  |  |  |  |-- 'stagnation' = {list: I}\n|  |  |  |  |  |  |  |-- 0 = {int}\n:  :  :  :  :  :  :  :\n|  |  |  |  |-- 'statistics' = {dict: 10}\n|  |  |  |  |  |-- 'nob' = {int}\n|  |  |  |  |  |-- 'Min' = {float}\n|  |  |  |  |  |-- 'Max' = {float}\n|  |  |  |  |  |-- 'Avg' = {float}\n|  |  |  |  |  |-- 'Std' = {float}\n|  |  |  |  |  |-- 'Skw' = {float}\n|  |  |  |  |  |-- 'Kur' = {float}\n|  |  |  |  |  |-- 'IQR' = {float}\n|  |  |  |  |  |-- 'Med' = {float}\n|  |  |  |  |  |-- 'MAD' = {float}\n:  :  :  :  :  :\n```\nwhere:\n- ```N``` is the number of files within data_files folder\n- ```M``` is the number of hyper-heuristic iterations (metaheuristic candidates)\n- ```C``` is the number of search operators in the metaheuristic (cardinality)\n- ```P``` is the number of control parameters for each search operator\n- ```R``` is the number of repetitions performed for each metaheuristic candidate\n- ```D``` is the dimensionality of the problem tackled by the metaheuristic candidate\n- ```I``` is the number of iterations performed by the metaheuristic candidate\n- ```search_operator_structure``` corresponds to ```[operator_name = {str}, control_parameters = {dict: P}, selector = {str}]```\n</p>\n</details>\n\n## üèóÔ∏è Work-in-Progress\n\nThe following modules are available, but they may do not work. They are currently under developing.\n\n### üå°Ô∏è Characterisation\n\nThis module intends to provide metrics for characterising the benchmark functions.\n\nSource: [``characterisation.py``](customhys/characterisation.py)\n\n### üìä Visualisation\n\nThis module intends to provide several tools for plotting results from the experiments.\n\nSource: [``visualisation.py``](customhys/visualisation.py)\n\n## Sponsors\n\n<a href=\"https://tec.mx/en\" target=\"_blank\"><img src=\"https://github.com/jcrvz/customhys/raw/master/docfiles/logoTEC_full.png\" width=\"250\"></a>\n<a href=\"http://www.cas.cn/\" target=\"_blank\"><img src=\"https://github.com/jcrvz/customhys/raw/master/docfiles/cas_logo.png\" width=\"250\"></a>\n<a href=\"https://www.gob.mx/conacyt\" target=\"_blank\"><img src=\"https://github.com/jcrvz/customhys/raw/master/docfiles/conacyt-logo.png\" width=\"250\"></a>\n\n## References\n\n1. [J. M. Cruz-Duarte, I. Amaya, J. C. Ortiz-Bayliss, H. Terashima-Mar√≠n, and Y. Shi, CUSTOMHyS: Customising Optimisation Metaheuristics via Hyper-heuristic Search, SoftwareX, vol. 12, p. 100628, 2020.](https://www.sciencedirect.com/science/article/pii/S2352711020303411)\n1. [J. M. Cruz-Duarte, I. Amaya, J. C. Ortiz-Bayliss, S. E. Conant-Pablos, H. Terashima-Mar√≠n, H., and Y. Shi. _Hyper-Heuristics to Customise Metaheuristics for Continuous Optimisation_, *Swarm and Evolutionary Computation*, 100935.](https://doi.org/10.1016/j.swevo.2021.100935)\n1. [J. M. Cruz-Duarte, I. Amaya, J. C. Ortiz-Bayliss, S. E. Connat-Pablos, and H. Terashima-Mar√≠n, A Primary Study on Hyper-Heuristics to Customise Metaheuristics for Continuous Optimisation. CEC'2020.](docfiles/SearchOperators_CEC.pdf)\n1. [J. M. Cruz-Duarte, J. C. Ortiz-Bayliss, I. Amaya, Y. Shi, H. Terashima-Mar√≠n, and N. Pillay, Towards a Generalised Metaheuristic Model for Continuous Optimisation Problems, Mathematics, vol. 8, no. 11, p. 2046, Nov. 2020.](https://www.mdpi.com/2227-7390/8/11/2046)\n1. [J. M. Cruz-Duarte, J. C. Ortiz-Bayliss, I. Amaya, and N. Pillay, _Global Optimisation through Hyper-Heuristics: Unfolding Population-Based Metaheuristics_, *Appl. Sci.*, vol. 11, no. 12, p. 5620, 2021.](http://dx.doi.org/10.3390/app11125620)\n1. [J. M. Cruz-Duarte, I. Amaya, J. C. Ortiz-Bayliss, N. Pillay. Automated Design of Unfolded Metaheuristics and the Effect of Population Size. 2021 IEEE Congress on Evolutionary Computation (CEC), 1155‚Äì1162, 2021.](https://doi.org/10.1109/CEC45853.2021.9504879)\n1. [J. M. Tapia-Avitia, J. M. Cruz-Duarte, I. Amaya, J. C. Ortiz-Bayliss, H. Terashima-Marin, and N. Pillay. _A Primary Study on Hyper-Heuristics Powered by Artificial Neural Networks for Customising Population-based Metaheuristics in Continuous Optimisation Problems_, 2022 IEEE Congress on Evolutionary Computation (CEC), 2022.](https://doi.org/10.1109/CEC55065.2022.9870275)\n1. [J. M. Cruz-Duarte, I. Amaya, J. C. Ortiz-Bayliss, N. Pillay. _A Transfer Learning Hyper-heuristic Approach for Automatic Tailoring of Unfolded Population-based Metaheuristics_, 2022 IEEE Congress on Evolutionary Computation (CEC), 2022.](https://doi.org/10.1109/CEC55065.2022.9870426)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jcrvz/customhys",
    "keywords": "metaheuristics,hyper-heuristic,optimization,automatic design,global optimization,evolutionary computation,bio-inspired,algorithm design",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "customhys",
    "package_url": "https://pypi.org/project/customhys/",
    "platform": null,
    "project_url": "https://pypi.org/project/customhys/",
    "project_urls": {
      "Homepage": "https://github.com/jcrvz/customhys"
    },
    "release_url": "https://pypi.org/project/customhys/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "This framework provides tools for solving, but not limited to, continuous optimisation problems using a hyper-heuristic approach for customising metaheuristics.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17294221,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c7c72111c7b010de14e5fb06d9a39ccf68e9dd0ab1d219c964f750a1463fcce",
          "md5": "ce77eeb25f833a689c2af3e4cf0de5cc",
          "sha256": "ce727f175cdb0ef4f70e388da8aa79ebb0806b86c02b763eb4ac9d6732eb9895"
        },
        "downloads": -1,
        "filename": "customhys-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce77eeb25f833a689c2af3e4cf0de5cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 53650,
        "upload_time": "2022-03-25T16:01:00",
        "upload_time_iso_8601": "2022-03-25T16:01:00.896461Z",
        "url": "https://files.pythonhosted.org/packages/8c/7c/72111c7b010de14e5fb06d9a39ccf68e9dd0ab1d219c964f750a1463fcce/customhys-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b90e22f77cdd5fd789511a7c8d0c4262f84def415c700a60a8d49721eb250e9b",
          "md5": "cd226958d61a64fe33557c32a0cbd746",
          "sha256": "a5dc7e4cd462d0b2942a1fca48faf08ebdd46707a90a842749934dfebf68a593"
        },
        "downloads": -1,
        "filename": "customhys-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cd226958d61a64fe33557c32a0cbd746",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 50982,
        "upload_time": "2022-03-25T16:01:02",
        "upload_time_iso_8601": "2022-03-25T16:01:02.740397Z",
        "url": "https://files.pythonhosted.org/packages/b9/0e/22f77cdd5fd789511a7c8d0c4262f84def415c700a60a8d49721eb250e9b/customhys-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06d1a0ae3f764acd76814c4e7acf2f634395daf6c79eac99f042e9947c91bb24",
          "md5": "c8c525ed55f2911435a50d6d0a81d379",
          "sha256": "35c44a6e05b7f9fb72c5012b7bc71876504488758891dc7f4870a107aea966ea"
        },
        "downloads": -1,
        "filename": "customhys-1.0.1.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8c525ed55f2911435a50d6d0a81d379",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 193452,
        "upload_time": "2022-03-25T21:14:52",
        "upload_time_iso_8601": "2022-03-25T21:14:52.384381Z",
        "url": "https://files.pythonhosted.org/packages/06/d1/a0ae3f764acd76814c4e7acf2f634395daf6c79eac99f042e9947c91bb24/customhys-1.0.1.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cfa85f04cd66ace1a0e4e0b875146803f6bf6d03ee7dccfce35e6c34588bfc3",
          "md5": "f763c9ca639f827c4b4a29f73fd428d6",
          "sha256": "af8da80b4f4d6f048a2a48cfbc7cd1fac3e15a8e7c53ef18e72057295cc3d341"
        },
        "downloads": -1,
        "filename": "customhys-1.0.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "f763c9ca639f827c4b4a29f73fd428d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5159873,
        "upload_time": "2022-03-25T21:14:54",
        "upload_time_iso_8601": "2022-03-25T21:14:54.117736Z",
        "url": "https://files.pythonhosted.org/packages/2c/fa/85f04cd66ace1a0e4e0b875146803f6bf6d03ee7dccfce35e6c34588bfc3/customhys-1.0.1.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5717034a6757b82e8a57b0d29303cb33b10866cf1f8cc5f770d1aa0422584a46",
          "md5": "7e7d0dcf986a312f1dd1c103f9bb621a",
          "sha256": "09fac237af38219c225564c0e307ccb4a69939cb7b78d101ca0917a7778a9e6c"
        },
        "downloads": -1,
        "filename": "customhys-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e7d0dcf986a312f1dd1c103f9bb621a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 212902,
        "upload_time": "2023-03-14T20:57:32",
        "upload_time_iso_8601": "2023-03-14T20:57:32.576495Z",
        "url": "https://files.pythonhosted.org/packages/57/17/034a6757b82e8a57b0d29303cb33b10866cf1f8cc5f770d1aa0422584a46/customhys-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce1868bd7463ed599dfa3c859534d24f098c07f3b8c8e6a7185ec6f493f5254e",
          "md5": "d9dd6049d67dcd7faea756e481700f9a",
          "sha256": "bc3a258fd6bf11afdbda4a8956e3d9edc5fe8d160a58f5f77aaa4b21a47cfa55"
        },
        "downloads": -1,
        "filename": "customhys-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d9dd6049d67dcd7faea756e481700f9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5179899,
        "upload_time": "2023-03-14T20:57:34",
        "upload_time_iso_8601": "2023-03-14T20:57:34.744843Z",
        "url": "https://files.pythonhosted.org/packages/ce/18/68bd7463ed599dfa3c859534d24f098c07f3b8c8e6a7185ec6f493f5254e/customhys-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5717034a6757b82e8a57b0d29303cb33b10866cf1f8cc5f770d1aa0422584a46",
        "md5": "7e7d0dcf986a312f1dd1c103f9bb621a",
        "sha256": "09fac237af38219c225564c0e307ccb4a69939cb7b78d101ca0917a7778a9e6c"
      },
      "downloads": -1,
      "filename": "customhys-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7e7d0dcf986a312f1dd1c103f9bb621a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 212902,
      "upload_time": "2023-03-14T20:57:32",
      "upload_time_iso_8601": "2023-03-14T20:57:32.576495Z",
      "url": "https://files.pythonhosted.org/packages/57/17/034a6757b82e8a57b0d29303cb33b10866cf1f8cc5f770d1aa0422584a46/customhys-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce1868bd7463ed599dfa3c859534d24f098c07f3b8c8e6a7185ec6f493f5254e",
        "md5": "d9dd6049d67dcd7faea756e481700f9a",
        "sha256": "bc3a258fd6bf11afdbda4a8956e3d9edc5fe8d160a58f5f77aaa4b21a47cfa55"
      },
      "downloads": -1,
      "filename": "customhys-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d9dd6049d67dcd7faea756e481700f9a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 5179899,
      "upload_time": "2023-03-14T20:57:34",
      "upload_time_iso_8601": "2023-03-14T20:57:34.744843Z",
      "url": "https://files.pythonhosted.org/packages/ce/18/68bd7463ed599dfa3c859534d24f098c07f3b8c8e6a7185ec6f493f5254e/customhys-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}