{
  "info": {
    "author": "ME Martinez-Sanchez",
    "author_email": "mar.esther23+wibblywobbly@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# WibblyWobbly\n\nPython library to create equivalence dictionaries between a set of texts and a catalog using FuzzyWuzzy.\n\nIt is a common nightmare for data scientist, your human users captured the data according to a \"catalog\" but it is full of mistakes. WibblyWobbly automates the task of automatically matching the data to a catalog while allowing for manual review of suspicious cases and rejecting bad matches.\n\n## Requirements\n\n-  Python 3 or higher\n-  the fuzz\n-  python-Levenshtein (optional)\n-  unidecode\n-  pandas\n\n#Instalation\n\nUsing PIP via PyPI\n\n``\npip install wibblywobbly\n``\n\nWibblyWobbly extends hefuzz, it is recomended to install python-Levenshtein too\n\n``\npip install thefuzz\npip install python-Levenshtein\n``\n\n## Usage\n\n### Match data to a catalog\n\nImport wibblywobbly and load your data and catalog as list. If you are using pandas use `.to_list()`.\n\n``\nimport wibblywobbly as ww\ncatalog = [\"Mouse\", \"Cat\", \"Dog\", \"Human\"]\ndata = [\"mice\",  \"CAT \", \"doggo\", \"PERSON\", 999]\n``\n\n\nWibblyWobbly compares the data to the catalog and returns the most likely options and a similarity score. If it cannot find a good match it will return the original data.\n\nIt automaticaly accepts the catalog options that have a higher similarity score than `thr_accept` and rejects those that have a lower score than `thr_reject`. This treshold values can be adjusted depending in the data quality. It ignores non-string values.\n\nBy default it returns a pandas dataframe that can be saved as a csv or excel file `.to_excel()`.\n\n\n\n``\nww.map_list_to_catalog(data, catalog, thr_accept=95, thr_reject=40)\n``\n\n|   | Data  | Option1 | Score1 | Option2 | Score2 | Option3 | Score3 |\n|---|-------|---------|--------|---------|--------|---------|--------|\n| 0 | CAT   | Cat     | 100    | None    | NaN    | None    | NaN    |\n| 1 | doggo | Dog     | 90     | Mouse   | 20.0   | Human   | 0.0    |\n| 2 | mice  | Mouse   | 44     | Cat     | 29.0   | Human   | 22.0   |\n| 3 | PERSON | PERSON | 0      | None    | NaN    | None    | NaN    |\n| 4 | 999   | 999     | 0      | None    | NaN    | None    | NaN    |\n\n\n\nWibblyWobbly can also return a dictionary with the best options. This dictionary can be used to clean a pandas dataframe with `.replace()` and `.map()`.\n\n``\nww.map_list_to_catalog(data, catalog, output_format=\"dictionary\")\n``\n> {'mice': 'mice', 999: 999, 'doggo': 'Dog', 'PERSON': 'PERSON', 'CAT ': 'Cat'}\n\n\n\nIt is possible set a `reject_value`.\n\n``\nww.map_list_to_catalog(data, catalog, output_format=\"dictionary\", reject_value='Other')\n``\n> {'mice': 'Other', 999: 999, 'doggo': 'Dog', 'PERSON': 'Other', 'CAT ': 'Cat'}\n\n\n\nWibblyWobbly can also raise warnings of the suspicious values to facilitate visual inspection.\n\n``\nww.map_list_to_catalog(data, catalog, output_format=\"dictionary\", \n                           thr_accept=95, thr_reject=40,  warnings=True)\n``\n\n> WOBBLY: mice\n>     \tOptions: Mouse (44), Cat (29), Human (22)\n>     WOBBLY: doggo\n>     \tOptions: Dog (90), Mouse (20), Human (0)\n> \n> {'mice': 'Mouse', 999: 999, 'doggo': 'Dog', 'PERSON': 'PERSON', 'CAT ': 'Cat'}\n\n\n## Versions\n--------\n\n-  0.2.0\n   - Now uses thefuzz\n   - Rough clustering algorithm\n   - Hierarchical dictionaries\n   - Happy New Year!\n\n-  0.1.0\n   -  We are online!\n   -  Basic operations to match list to catalogs\n\nThanks\n------\n\nThe [thefuzz](https://github.com/seatgeek/thefuzz/) team, you are amazing!\n\n[Syats](https://github.com/syats/) for helping with the hierarchical code.\n\n\n\n--------------------------------------------\n\n<p align=\"right\"> You see, most people think that time is a strict progression of cause to effect, but actually, from a non-linear, non-subjective point of view, itâ€™s more like a big ball of... Wibbly-Wobbly... Timey-Wimey... stuff. </p>\n<p align=\"right\">The Doctor</p>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mar-esther23/WibblyWobbly/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wibblywobbly",
    "package_url": "https://pypi.org/project/wibblywobbly/",
    "platform": "",
    "project_url": "https://pypi.org/project/wibblywobbly/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mar-esther23/WibblyWobbly/issues",
      "Homepage": "https://github.com/mar-esther23/WibblyWobbly/"
    },
    "release_url": "https://pypi.org/project/wibblywobbly/0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python library to create equivalence dictionaries between a set of texts and a catalog using Levenshtein distance.",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12451261,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4563ffc01c6c51adb3a7ddf42b15036d94b38422413be94215e69f7a65c2231a",
          "md5": "a5387f609663ebeee370310f05720ccd",
          "sha256": "7a16a1ada36aa2821415f45c1b10f1934c3f0cdaa4baa30ab602886cddf39a90"
        },
        "downloads": -1,
        "filename": "wibblywobbly-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a5387f609663ebeee370310f05720ccd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4452,
        "upload_time": "2020-03-06T19:53:23",
        "upload_time_iso_8601": "2020-03-06T19:53:23.654682Z",
        "url": "https://files.pythonhosted.org/packages/45/63/ffc01c6c51adb3a7ddf42b15036d94b38422413be94215e69f7a65c2231a/wibblywobbly-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "016e4380786128bbfbe3cbfe50f7b5998b3e5840c3fcf3b95a26d3bc43fbb2e4",
          "md5": "d69c4173a9915b64c915455ef25f4bf5",
          "sha256": "c7960eaf038f8414e8174868808321a9965063bbcdae0fbcdba5f0a7b5389bec"
        },
        "downloads": -1,
        "filename": "wibblywobbly-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d69c4173a9915b64c915455ef25f4bf5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13801,
        "upload_time": "2022-01-01T05:44:09",
        "upload_time_iso_8601": "2022-01-01T05:44:09.819400Z",
        "url": "https://files.pythonhosted.org/packages/01/6e/4380786128bbfbe3cbfe50f7b5998b3e5840c3fcf3b95a26d3bc43fbb2e4/wibblywobbly-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d65c7e0e1d57e52c4cb241fdc99ac2f6cc4c24d2015a3702d2f667864985eabb",
          "md5": "a4b2a37ce21472e67d20f45af3246600",
          "sha256": "3e7c1be113402b71992e77f98589db1ab4862b9b68e12d8ab7908194c4ebafae"
        },
        "downloads": -1,
        "filename": "wibblywobbly-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a4b2a37ce21472e67d20f45af3246600",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13182,
        "upload_time": "2022-01-01T05:44:11",
        "upload_time_iso_8601": "2022-01-01T05:44:11.553685Z",
        "url": "https://files.pythonhosted.org/packages/d6/5c/7e0e1d57e52c4cb241fdc99ac2f6cc4c24d2015a3702d2f667864985eabb/wibblywobbly-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "016e4380786128bbfbe3cbfe50f7b5998b3e5840c3fcf3b95a26d3bc43fbb2e4",
        "md5": "d69c4173a9915b64c915455ef25f4bf5",
        "sha256": "c7960eaf038f8414e8174868808321a9965063bbcdae0fbcdba5f0a7b5389bec"
      },
      "downloads": -1,
      "filename": "wibblywobbly-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d69c4173a9915b64c915455ef25f4bf5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13801,
      "upload_time": "2022-01-01T05:44:09",
      "upload_time_iso_8601": "2022-01-01T05:44:09.819400Z",
      "url": "https://files.pythonhosted.org/packages/01/6e/4380786128bbfbe3cbfe50f7b5998b3e5840c3fcf3b95a26d3bc43fbb2e4/wibblywobbly-0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d65c7e0e1d57e52c4cb241fdc99ac2f6cc4c24d2015a3702d2f667864985eabb",
        "md5": "a4b2a37ce21472e67d20f45af3246600",
        "sha256": "3e7c1be113402b71992e77f98589db1ab4862b9b68e12d8ab7908194c4ebafae"
      },
      "downloads": -1,
      "filename": "wibblywobbly-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a4b2a37ce21472e67d20f45af3246600",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13182,
      "upload_time": "2022-01-01T05:44:11",
      "upload_time_iso_8601": "2022-01-01T05:44:11.553685Z",
      "url": "https://files.pythonhosted.org/packages/d6/5c/7e0e1d57e52c4cb241fdc99ac2f6cc4c24d2015a3702d2f667864985eabb/wibblywobbly-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}