{
  "info": {
    "author": "",
    "author_email": "Easton Potokar <contagon6@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Borg -> MQTT\nSend borgbackup updates over MQTT, including support for Home Assistant MQTT autodiscovery. Sensors include\n\n- Total/unique chunks\n- (Un)compressed size\n- Depuplicated (Un)compressed size\n- Total number of backups\n- Most recent backup\n\n![](images/ha_example.png)\n\n# Installation\nInstall on any system as python library using\n```bash\npip install borg2mqtt\n```\nWhatever system it is installed on will need the ssh keys for your backup locations.\n\n# Configuration\nborg2mqtt reads MQTT and repository information from a configuration yaml file. An example configuration file can be generated by running\n```bash\nborg2mqtt -c path/config.yml generate\n```\nIf portion `path/config.yml` is left off, borg2mqtt defaults to saving/looking for the configuration file at `$HOME/.config/borg2mqtt/config.yml`.\n\nThe configuration file is mostly self-explanatory and looks as follows:\n```yaml\n# -------------- Sample configuration file -------------- #\n# These are the default MQTT values - none are required\nmqtt:\n  host: localhost\n  port: 1883\n  user: \"\"\n  password: \"\"\n\n# Put in as many repositories as desired\nrepos:\n    # Required\n  - repo: user@address:/path/to/backup\n    # Optional, defaults to the same as repo if not specified\n    # This will be used to make entity_ids in HA\n    name: Local Data\n    # Optional\n    key: \"\"\n    # Optional, choose one of kB, MB, GB, TB. Defaults to GB.\n    units: GB\n```\n\n# Usage\nTo send the Home Assistant MQTT auto-discovery message, run\n```bash\nborg2mqtt setup\n```\n\nThen to update sensor information run\n```bash\nborg2mqtt update\n```\nThis can be included in a cron job, borgmatic, etc to send updates as needed. As this is a \"local push\" option, it should be more efficient than any local polling option that could be included in Home Assistant.\n\nAdditionally, a single repository can be updated through it's name found in the configuration file by\n```bash\nborg2mqtt update -n \"My Repo\"\n```\n\n# Additional Options\nAll options can always be shown by using flag `--help`. Additionally, varying levels of verbose output can be included through `-vvv`, put before the command type.\n\n# Contributing\nAll pull requests are more than welcome. Please usse the pre-commit hooks to verify your code before making a pull request. If any bugs are found, feel free to open an issue with your verbose output (`-vvv`) included.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "borg,mqtt,hass",
    "license": "",
    "maintainer": "",
    "maintainer_email": "Easton Potokar <contagon6@gmail.com>",
    "name": "borg2mqtt",
    "package_url": "https://pypi.org/project/borg2mqtt/",
    "platform": null,
    "project_url": "https://pypi.org/project/borg2mqtt/",
    "project_urls": {
      "Bug Reports": "https://github.com/contagon/borg2mqtt/issues",
      "Homepage": "https://github.com/contagon/borg2mqtt",
      "Source": "https://github.com/contagon/borg2mqtt"
    },
    "release_url": "https://pypi.org/project/borg2mqtt/0.1.1/",
    "requires_dist": [
      "paho-mqtt",
      "platformdirs",
      "python-slugify",
      "pyyaml",
      "check-manifest ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "Send borg backup updates over MQTT",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17068391,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c909b40839a7207227717dafecab7b33bacf60f5d363f7f36caf30d5a8b66814",
          "md5": "e9771da2fd7b9fd8165c3c471a82def9",
          "sha256": "b2c96772de9582655b233a79763235a9eb164c2b21d528fafdc8c6036dcc2765"
        },
        "downloads": -1,
        "filename": "borg2mqtt-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9771da2fd7b9fd8165c3c471a82def9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7710,
        "upload_time": "2023-02-27T14:57:39",
        "upload_time_iso_8601": "2023-02-27T14:57:39.656213Z",
        "url": "https://files.pythonhosted.org/packages/c9/09/b40839a7207227717dafecab7b33bacf60f5d363f7f36caf30d5a8b66814/borg2mqtt-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49cff7406c16e7d8643ae9481011d6de2aa8e7cd1cbe4d0e5ca2d4c33c16f3ff",
          "md5": "b02ab0d28d544a65851499b2c0b71c12",
          "sha256": "b6e41c9a7e3a0f5c5234613277ad8fe860015349e7423fe8038902145d987265"
        },
        "downloads": -1,
        "filename": "borg2mqtt-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b02ab0d28d544a65851499b2c0b71c12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7591,
        "upload_time": "2023-02-27T14:57:41",
        "upload_time_iso_8601": "2023-02-27T14:57:41.670418Z",
        "url": "https://files.pythonhosted.org/packages/49/cf/f7406c16e7d8643ae9481011d6de2aa8e7cd1cbe4d0e5ca2d4c33c16f3ff/borg2mqtt-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c909b40839a7207227717dafecab7b33bacf60f5d363f7f36caf30d5a8b66814",
        "md5": "e9771da2fd7b9fd8165c3c471a82def9",
        "sha256": "b2c96772de9582655b233a79763235a9eb164c2b21d528fafdc8c6036dcc2765"
      },
      "downloads": -1,
      "filename": "borg2mqtt-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e9771da2fd7b9fd8165c3c471a82def9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7710,
      "upload_time": "2023-02-27T14:57:39",
      "upload_time_iso_8601": "2023-02-27T14:57:39.656213Z",
      "url": "https://files.pythonhosted.org/packages/c9/09/b40839a7207227717dafecab7b33bacf60f5d363f7f36caf30d5a8b66814/borg2mqtt-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49cff7406c16e7d8643ae9481011d6de2aa8e7cd1cbe4d0e5ca2d4c33c16f3ff",
        "md5": "b02ab0d28d544a65851499b2c0b71c12",
        "sha256": "b6e41c9a7e3a0f5c5234613277ad8fe860015349e7423fe8038902145d987265"
      },
      "downloads": -1,
      "filename": "borg2mqtt-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b02ab0d28d544a65851499b2c0b71c12",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7591,
      "upload_time": "2023-02-27T14:57:41",
      "upload_time_iso_8601": "2023-02-27T14:57:41.670418Z",
      "url": "https://files.pythonhosted.org/packages/49/cf/f7406c16e7d8643ae9481011d6de2aa8e7cd1cbe4d0e5ca2d4c33c16f3ff/borg2mqtt-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}