{
  "info": {
    "author": "kyzas",
    "author_email": "kyznano@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<img src='https://img.shields.io/pypi/l/plazy.svg'> <img src='https://codecov.io/gh/kyzas/plazy/branch/master/graph/badge.svg'> <img src='https://img.shields.io/pypi/pyversions/plazy.svg'> <img src='https://img.shields.io/pypi/v/plazy.svg'> <img src='https://img.shields.io/pypi/dm/plazy.svg'> <img src='https://img.shields.io/badge/code%20style-black-000000.svg'> <img src='https://readthedocs.org/projects/plazy/badge/?version=latest&style=plastic'>\n\n# plazy\nUtilities for lazy Python developers\n\n```\npip install plazy\n```\n\n# Index\n\n- [Coding](#coding)\n  - [plazy.random_string(size=6, digit=True, lower=True, upper=True)](#random_string)  \n  - [plazy.setattr_from_dict(obj, kv, override=True)](#setattr_from_dict)\n  - [@plazy.auto_assign](#auto_assign)\n  - [@plazy.auto_assign_strict](#auto_assign_strict)\n  - [@plazy.cloneable](#cloneable)\n  - [plazy.tic(&#42;names)](#tic)\n  - [plazy.toc(&#42;names, default=0)](#toc)\n  - [plazy.ts2dt(ts, format=\"%Y/%m/%d %H:%M:%S.%f\")](#ts2dt)\n  - [plazy.dt2ts(dt, format=\"%Y/%m/%d %H:%M:%S.%f\")](#dt2ts)\n- [Data](#data)\n  - [plazy.b64encode(value, pretty=False)](#b64encode)\n  - [plazy.b64decode(value)](#b64decode)\n  - [plazy.is_number(s)](#is_number)\n  - [plazy.unique(seq, sort=False, reverse=False)](#unique)\n- [File](#file)\n  - [plazy.read_txt(path, line_func=None, skip_empty_line=False)](#read_txt)\n  - [plazy.write_txt(path, lines, mode=\"w\", cat_str=\"\\n\")](#write_txt)\n  - [plazy.list_files(root, filter_func=None, is_include_root=False)](#list_files)\n\n# PLAZY FEATURES\n\n## Coding\n\n### random_string\n\nPlazy version: 0.1.2+\n\nGenerate random string.\n\n**plazy.random_string(**\n\n- size: length of random string. Default: 6\n- digit: random string may contains digits. Default: True\n- lower: random string may contains lowercases. Default: True\n- upper: random string may contains uppercases. Default: True\n\n**)**\n\n``` python\nimport plazy\n\nif __name__ == \"__main__\":\n    rstring = plazy.random_string() # iVr3FY\n    rstring = plazy.random_string(upper=False) # mzvn7b\n    rstring = plazy.random_string(size=8) # XqVDuu5R\n    rstring = plazy.random_string(size=6, digit=True, lower=False, upper=False) # 763099\n    rstring = plazy.random_string(size=6, digit=False, lower=True, upper=False) # djzcch\n    rstring = plazy.random_string(size=6, digit=False, lower=False, upper=True) # BGBMQN\n```\n\n[:link: Back to Index](#index)\n\n### setattr_from_dict\n\nPlazy version: 0.1.4+\n\nDynamically set object attributes from dictionary at runtime\n\n**plazy.setattr_from_dict(**\n\n- **obj**: object\n- **kv**: dictionary of new attributes. Eg: {\"name\": \"Peter\", \"age\": 14}\n- override: override old attribute(s). Default: True\n\n**)**\n\n``` python\nimport plazy\n\n# Our custom class\nclass Person(object):\n    def __init__(self, name):\n        self.name = name\n\nif __name__ == \"__main__\":\n    p1 = Person(name=\"plazy\") # init a Person object\n    plazy.setattr_from_dict(obj=p1, kv={\n        \"name\": \"yzalp\",\n        \"age\": 28,\n    })\n    print(p1.name) # \"yzalp\"\n    print(p1.age)  # 28\n\n    # set \"override\" to False\n    p2 = Person(name=\"plazy\") # init a Person object\n    plazy.setattr_from_dict(obj=p2,\n                            override=False,\n                            kv={\n                                \"name\": \"yzalp\",\n                                \"age\": 28,\n                            })\n    print(p1.name) # \"plazy\" <- no overriding the pre-existed attribute due to \"override=False\"\n    print(p1.age)  # 28\n\n```\n\n[:link: Back to Index](#index)\n\n### auto_assign\n\nPlazy version: 0.1.5+\n\nAssign attributes of class with the passed arguments automatically.\n\n\n\n**@plazy.auto_assign**\n\n``` python\nimport plazy\n\nclass Cat(object):\n    @plazy.auto_assign\n    def __init__(self, name, owner='Kyzas'):\n        # no variable assignment needed\n        pass\n\n    def get_age(self):\n        return self.age if hasattr(self, \"age\") else None\n\n    def get_type(self):\n        return self.type if hasattr(self, \"type\") else None\n\nif __name__ == \"__main__\":\n    mydict = {\"type\": \"pet\"}\n    my_cat = Cat('Kittie', age=10, **mydict) # \"age\" and \"type\" is unexpected arguments\n    print(my_cat.name)          # Kittie\n    print(my_cat.owner)         # Kyzas\n    print(my_cat.get_age())     # 10\n    print(my_cat.get_type())    # pet\n```\n\n[:link: Back to Index](#index)\n\n### auto_assign_strict\n\nPlazy version: 0.1.5+\n\nAssign attributes of class with the passed arguments automatically, strictly check the parameters passed to the function.\n\n**@plazy.auto_assign_strict**\n\n``` python\nimport plazy\n\nclass Cat(object):\n    @plazy.auto_assign_strict\n    def __init__(self, name, owner='Kyzas'):\n        pass\n\nif __name__ == \"__main__\":\n    my_cat = Cat('Kittie', 'Minh')\n    print(my_cat.name)      # Kittie\n    print(my_cat.owner)     # Minh\n    his_cat = Cat('Lulu', 'Peter', 'Mary')  # TypeError\n    her_cat = Cat('Kittie', age=10)         # TypeError\n```\n\n[:link: Back to Index](#index)\n\n### cloneable\n\nPlazy version: 0.1.5+\n\nMark constructor of class as being cloneable. Method \"clone\" is used to clone a new instance, its arguments are the same with the constructor.\n\n**@plazy.cloneable**\n\n``` python\nimport plazy\n\nclass Cat(object):\n    @plazy.cloneable\n    def __init__(self, name, owner='Kyzas'):\n        self.name = name\n        self.owner = owner\n        pass\n\n    def get_info(self):\n        return {\"name\": self.name, \"owner\": self.owner}\n\nclass Dog(object):\n    # combine auto_assign and cloneable decorators\n    @plazy.cloneable\n    @plazy.auto_assign\n    def __init__(self, name, owner='Kyzas'):\n        pass\n\n    def get_info(self):\n        result = {\"name\": self.name, \"owner\": self.owner}\n        if hasattr(self, \"age\"):\n            result[\"age\"] = self.age\n        else:\n            result[\"age\"] = -1\n        return result\n\nif __name__ == \"__main__\":\n    cat_template = Cat('<Cat Name>', '<Owner Name>')\n    his_cat = cat_template.clone('Lulu', 'Peter')\n    her_cat = cat_template.clone(name='Jessie')\n    print(his_cat.get_info()) # {'name': 'Lulu', 'owner': 'Peter'}\n    print(her_cat.get_info()) # {'name': 'Jessie', 'owner': '<Owner Name>'}\n\n    dog_template = Dog(name=\"<Dog Name>\", owner=\"<Owner Name>\", age=10) # age=10 by default\n    his_dog = dog_template.clone(owner='James')\n    her_dog = dog_template.clone(name=\"Husky\", owner=\"Bella\", age=5, note=\"Super Cute\")\n    print(his_dog.get_info()) # {'name': '<Dog Name>', 'owner': 'James', 'age': 10}\n    print(her_dog.get_info()) # {'name': 'Husky', 'owner': 'Bella', 'age': 5}\n    print(her_dog.note)       # Super Cute\n```\n\n[:link: Back to Index](#index)\n\n### tic\n\nPlazy version: 0.1.5+\n\nStart timer\n\n**plazy.tic(**\n\n- **&#42;names**: name (list)\n\n**)**\n\n``` python\nimport plazy\n\ndef foo():\n    total = 0\n    for _ in range(100000):\n        total += 1\n    return total\n\nif __name__ == \"__main__\":\n    plazy.tic()                 # T1\n    plazy.tic(\"B\")              # T2\n    plazy.tic(\"C\", \"D\", \"E\")    # T3\n    foo()\n    dt1 = plazy.toc()           # elapsed time since T1\n    dt2 = plazy.toc(\"B\")        # elapsed time since T2\n    dt3 = plazy.toc(\"C\", \"D\")   # elapsed time since T3\n    foo()\n    dt4 = plazy.toc(\"E\")        # elapsed time since T3\n    dt5 = plazy.toc(\"B\")        # elapsed time since T2\n    print(dt1)                  # 0.009924173355102539\n    print(dt2)                  # 0.009925603866577148\n    print(dt3)                  # [0.00992727279663086, 0.00992727279663086]\n    print(dt4)                  # 0.020497798919677734\n    print(dt5)                  # 0.020506620407104492\n```\n\n[:link: Back to Index](#index)\n\n### toc\n\nPlazy version: 0.1.5+\n\nGet elapsed time(s) by name(s)\n\n**plazy.toc(**\n\n- **&#42;names**: name (list)\n- **default**: default value if name not found. Default: 0\n\n**)**\n\n``` python\nimport plazy\n\ndef foo():\n    total = 0\n    for _ in range(100000):\n        total += 1\n    return total\n\nif __name__ == \"__main__\":\n    plazy.tic()\n    foo()\n    elapsed_seconds = plazy.toc()                   # 0.0098724365234375\n    elapsed_invalid = plazy.toc(\"B\", default=-1)    # -1 (name \"B\" does not exist, return default value)\n```\n\n[:link: Back to Index](#index)\n\n### ts2dt\n\nPlazy version: 0.1.5+\n\nConvert timestamp to datetime string\n\n**plazy.ts2dt(**\n\n- **ts**: timestamp string\n- **format**: datetime format. Default: \"%Y/%m/%d %H:%M:%S.%f\"\n\n**)**\n\n``` python\nimport time\nimport plazy\n\nif __name__ == \"__main__\":\n    res = plazy.ts2dt(time.time()) # 2021/08/28 08:48:05.451271\n```\n\n[:link: Back to Index](#index)\n\n### dt2ts\n\nPlazy version: 0.1.5+\n\nConvert datetime object / datetime string to timestamp\n\n**plazy.dt2ts(**\n\n- **dt**: datetime object or datetime string\n- **format**: datetime format. Default: \"%Y/%m/%d %H:%M:%S.%f\"\n\n**)**\n\n``` python\nimport time\nimport plazy\n\nif __name__ == \"__main__\":\n    res = plazy.dt2ts(\"2021/08/28 08:48:05.451271\") # 1630140485.451271\n    print(res)\n```\n\n[:link: Back to Index](#index)\n\n## Data\n\n### b64encode\n\n### b64decode\n\nPlazy version: 0.1.3+\n\nBase64 encode and decode for string.\n\n**plazy.b64encode(**\n\n- **value**: value to encode base64\n- pretty: remove \"=\" character at the end after encoding. Default: False\n\n**)**\n\n**plazy.b64decode(**\n\n- **value**: encoded base64 value to decode\n\n**)**\n\n``` python\nimport plazy\n\nif __name__ == \"__main__\":\n    encoded_val = plazy.b64encode('plazy') # cGxhenk=\n    encoded_val = plazy.b64encode('plazy', pretty=True) # cGxhenk => Note: this string cannot be decoded!\n    original_val = plazy.b64decode('cGxhenk=') # plazy\n```\n\n[:link: Back to Index](#index)\n\n### is_number\n\nPlazy version: 0.1.4+\n\nCheck whether string is a number\n\n**plazy.is_number(**\n\n- **s**: string to check\n\n**)**\n\n``` python\nimport plazy\n\nif __name__ == \"__main__\":\n    is_number = plazy.is_number(\"1\")         # True\n    is_number = plazy.is_number(\"0.234\")     # True\n    is_number = plazy.is_number(\"-0.234\")    # True\n    is_number = plazy.is_number(\"1e3\")       # True\n    is_number = plazy.is_number(\"plazy\")     # False\n    is_number = plazy.is_number(\"1.23k9\")    # False\n    is_number = plazy.is_number(\"x.3253254\") # False\n```\n\n[:link: Back to Index](#index)\n\n### unique\n\nPlazy version: 0.1.3+\n\nTurn list or tuple into unique list/tuple, keep order or sort the list/tuple.\n\n**plazy.unique(**\n\n- **seq**: sequence to process. Eg: [1, 3, 1, 2], (2, 5, 5, 1, 2), ...\n- sort: Sort result. Default: False\n- reverse: Reverse result. Default: False\n\n**)**\n\n``` python\nimport plazy\n\nif __name__ == \"__main__\":\n    unique_t = plazy.unique(seq=(7, 3, 5, 3, 3, 7, 9)) # -> (7, 3, 5, 9)  \n    unique_l = plazy.unique(seq=[7, 3, 5, 3, 3, 7, 9]) # -> [7, 3, 5, 9]\n    unique_rt = plazy.unique(seq=(7, 3, 5, 3, 3, 7, 9), sort=True, reverse=True) # -> (9, 7, 5, 3)\n```\n\n[:link: Back to Index](#index)\n\n## File\n\n### read_txt\n\nPlazy version: ~~0.1.2+~~, 0.1.4+\n\n~~Read lines of text file, eliminate redundant characters of each line, skip the empty lines.~~\n\nRead lines of text file as a list.\n\n**plazy.read_txt(**\n\n- **path**: path to text file\n- line_func: function to process each line. Default: None\n- skip_empty_line: skip empty line. Default: False\n\n**)**\n\n``` python\nimport plazy\n\nif __name__ == \"__main__\":\n    lines = plazy.read_txt(path='/home/video-list.txt')\n    print(lines) # ['<line#1>', '<line#2>', '<line#3>', ...]\n\n    # strip every text line, remove empty line in the list:\n    lines = plazy.read_txt(\n        path='/home/video-list.txt',\n        line_func=lambda x : x.strip(),\n        skip_empty_line=True\n    )\n\n    # -------------------------------\n    # deprecated @ Plazy v0.1.2\n    # lines = plazy.read_txt(path='/home/video-list.txt', strip=True)\n    # print(lines) # ['<line#1>', '<line#2>', '<line#3>', ...]\n    # lines = plazy.read_txt(path='/home/video-list.txt', strip=False) # no stripping\n```\n\n[:link: Back to Index](#index)\n\n### write_txt\n\nPlazy version: 0.1.4+\n\nWrite text file.\n\n**plazy.write_txt(**\n\n- **path**: path to text file\n- **lines**: lines to write\n- mode: write mode. Default: \"w\"\n- cat_str: concat string between lines. Default: \"\\n\" (new line character)\n\n**)**\n\n``` python\nimport os\nimport plazy\n\nif __name__ == \"__main__\":\n    path = '/home/plazy.txt'\n    lines = [\n        \"hello\",\n        \"world\",\n    ]\n    plazy.write_txt(path=path, lines=lines)\n    assert os.path.isfile(path)\n```\n\n[:link: Back to Index](#index)\n\n### list_files\n\nPlazy version: 0.1.1+\n\nList files recursively in directory.\n\n**plazy.list_files(**\n\n- root: directory to traverse files. Default: \"./\" (current directory)\n- filter_func: filter function to apply. Default: None\n- is_include_root: include root directory path in the result. Default: False\n\n**)**\n\n``` python\nimport plazy\n\nif __name__ == \"__main__\":\n    files = plazy.list_files(root='images',\n                            filter_func=lambda x : True if x.endswith('.jpg') else False,\n                            is_include_root=False)\n    print(files) # ['1.jpg', '2.jpg', '_sub_/4.jpg']\n```\n\n[:link: Back to Index](#index)\n\n# CONTRIBUTING\n\n* Step 1. Fork on **dev** branch.\n* Step 2. Install **pre-commit** on the local dev environment.\n\n```\npip install pre-commit\npre-commit install\n```\n\n* Step 3. Write test case(s) for the new feature or the bug.\n* Step 4. Write code to pass the tests.\n* Step 5. Make sure that the new code passes all the pre-commmit conditions.\n\n```\npre-commit run -a\n```\n\n* Step 6. Create pull request.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/kyzas/plazy/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kyzas/plazy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "kyzas",
    "maintainer_email": "kyznano@gmail.com",
    "name": "plazy",
    "package_url": "https://pypi.org/project/plazy/",
    "platform": "",
    "project_url": "https://pypi.org/project/plazy/",
    "project_urls": {
      "Download": "https://github.com/kyzas/plazy/tarball/master",
      "Homepage": "https://github.com/kyzas/plazy"
    },
    "release_url": "https://pypi.org/project/plazy/0.1.5/",
    "requires_dist": null,
    "requires_python": "<4,>=3.5",
    "summary": "Utilities for lazy Python developers",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11302517,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1956773679c7526075bb6eb786bc6d1631c76e8e4a1fe9223431ceea36bd7a34",
          "md5": "f466732a827b34863b4fafa8f39c9dac",
          "sha256": "0b666abee2e496603d0f01156bb4de11f417a16c9b5385258c52973991e16ab5"
        },
        "downloads": -1,
        "filename": "plazy-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f466732a827b34863b4fafa8f39c9dac",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,",
        "size": 3585,
        "upload_time": "2019-11-24T17:36:57",
        "upload_time_iso_8601": "2019-11-24T17:36:57.781882Z",
        "url": "https://files.pythonhosted.org/packages/19/56/773679c7526075bb6eb786bc6d1631c76e8e4a1fe9223431ceea36bd7a34/plazy-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97404e32aa05fc51482c53f5e0418f85c4eec9c1a36b0029feb42a67768b38bf",
          "md5": "f80343b577a036b19971c108e9a9c546",
          "sha256": "cb5afd249b81336562ea9d8cc546c5106bebbbc76a54b36a042faa1e2b34b4a4"
        },
        "downloads": -1,
        "filename": "plazy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f80343b577a036b19971c108e9a9c546",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,",
        "size": 2753,
        "upload_time": "2019-11-24T17:36:59",
        "upload_time_iso_8601": "2019-11-24T17:36:59.865145Z",
        "url": "https://files.pythonhosted.org/packages/97/40/4e32aa05fc51482c53f5e0418f85c4eec9c1a36b0029feb42a67768b38bf/plazy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6121d662b0895568d610dc1fd206d5dec9026c32dc12e905f75559121a07f640",
          "md5": "18d22ac69bd04163580443cebdf4499e",
          "sha256": "8410f7cc98873861b7684b03602750ed24c23d807703568477e839395b44b75a"
        },
        "downloads": -1,
        "filename": "plazy-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18d22ac69bd04163580443cebdf4499e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,",
        "size": 4022,
        "upload_time": "2019-12-12T04:01:08",
        "upload_time_iso_8601": "2019-12-12T04:01:08.800971Z",
        "url": "https://files.pythonhosted.org/packages/61/21/d662b0895568d610dc1fd206d5dec9026c32dc12e905f75559121a07f640/plazy-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcf218f6e5c0021e9092c7486db0b3cf8702b342e3f705a410d69c7655789db0",
          "md5": "d99b2812b01f9f6214c8f2e9670ecb57",
          "sha256": "b4dc67bdb4d54b562d0abd41c4bec6cc9a372b6c8c132ac82f47a64a858a913e"
        },
        "downloads": -1,
        "filename": "plazy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d99b2812b01f9f6214c8f2e9670ecb57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,",
        "size": 3216,
        "upload_time": "2019-12-12T04:01:09",
        "upload_time_iso_8601": "2019-12-12T04:01:09.970051Z",
        "url": "https://files.pythonhosted.org/packages/bc/f2/18f6e5c0021e9092c7486db0b3cf8702b342e3f705a410d69c7655789db0/plazy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec3b6468d3569190f996d12af51f180f2af27494e540f5278b71db4ffff3d604",
          "md5": "3f40065c7687d676d1886115ca5250fb",
          "sha256": "e4c33f2a8d939173806970f88653d3653210e9e309389cb2cb4ce9bc89511b63"
        },
        "downloads": -1,
        "filename": "plazy-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f40065c7687d676d1886115ca5250fb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,",
        "size": 4642,
        "upload_time": "2020-01-29T17:27:53",
        "upload_time_iso_8601": "2020-01-29T17:27:53.801351Z",
        "url": "https://files.pythonhosted.org/packages/ec/3b/6468d3569190f996d12af51f180f2af27494e540f5278b71db4ffff3d604/plazy-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a13eb183dbdc7aea37a47870a5050c039710a43321d2116c6f6dc00e2107ddd0",
          "md5": "50a913cfcdd47c5e74e012d15ecf50b4",
          "sha256": "3fc178011536f09d402fc3f250061814604fc0a508f2ed2fcf0c7bd9ba1410ed"
        },
        "downloads": -1,
        "filename": "plazy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "50a913cfcdd47c5e74e012d15ecf50b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,",
        "size": 3783,
        "upload_time": "2020-01-29T17:27:55",
        "upload_time_iso_8601": "2020-01-29T17:27:55.348835Z",
        "url": "https://files.pythonhosted.org/packages/a1/3e/b183dbdc7aea37a47870a5050c039710a43321d2116c6f6dc00e2107ddd0/plazy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "921b973e8a7125fadb0e2a6cbec3a2c6a1fd7a3d0176944e85509da622ee7f51",
          "md5": "fd83c39721c9bbb56594d037f8524bbe",
          "sha256": "9842970913f0773b55e30dc28c0e4b0335fb325cb1d391b4f2f3b084d2ded2d5"
        },
        "downloads": -1,
        "filename": "plazy-0.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd83c39721c9bbb56594d037f8524bbe",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,",
        "size": 5106,
        "upload_time": "2020-02-15T18:12:59",
        "upload_time_iso_8601": "2020-02-15T18:12:59.281018Z",
        "url": "https://files.pythonhosted.org/packages/92/1b/973e8a7125fadb0e2a6cbec3a2c6a1fd7a3d0176944e85509da622ee7f51/plazy-0.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02f7678e091cd65247b1142af1d891b6eb3da39ec642f652fc8e1ceb8ffb1e3e",
          "md5": "b2631caca8248c2dadd277ba5261b8d8",
          "sha256": "9f695708395c304b9cfb48774a912b800b9342ecd3be776e80f35d0f641c9836"
        },
        "downloads": -1,
        "filename": "plazy-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b2631caca8248c2dadd277ba5261b8d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,",
        "size": 4364,
        "upload_time": "2020-02-15T18:13:00",
        "upload_time_iso_8601": "2020-02-15T18:13:00.473076Z",
        "url": "https://files.pythonhosted.org/packages/02/f7/678e091cd65247b1142af1d891b6eb3da39ec642f652fc8e1ceb8ffb1e3e/plazy-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "353c2c170f84b14895ac5f6d1ffd1791e8be8319d986da75b2a7bce864bd484c",
          "md5": "4b8442708d3769b5ecb4c23f36403d23",
          "sha256": "3fb9a292061041cd4b26da3799742a5302f0ab6ad9c345998ab3463bcf5165b1"
        },
        "downloads": -1,
        "filename": "plazy-0.1.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b8442708d3769b5ecb4c23f36403d23",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,",
        "size": 5133,
        "upload_time": "2020-02-15T18:59:07",
        "upload_time_iso_8601": "2020-02-15T18:59:07.258779Z",
        "url": "https://files.pythonhosted.org/packages/35/3c/2c170f84b14895ac5f6d1ffd1791e8be8319d986da75b2a7bce864bd484c/plazy-0.1.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2134fbc529769cd01a3253b9450975a9af7e66a24f4f2df9e95a223349368dbb",
          "md5": "154da49a398a669215d13ace677336a8",
          "sha256": "f49c0bba0c908ece77a80e04eaefe56e635ed5d500cf56f34b39e14fc7e86c75"
        },
        "downloads": -1,
        "filename": "plazy-0.1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "154da49a398a669215d13ace677336a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,",
        "size": 4378,
        "upload_time": "2020-02-15T18:59:08",
        "upload_time_iso_8601": "2020-02-15T18:59:08.430408Z",
        "url": "https://files.pythonhosted.org/packages/21/34/fbc529769cd01a3253b9450975a9af7e66a24f4f2df9e95a223349368dbb/plazy-0.1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75a52cfd6df7cd22b436526a91f00585954ec8325aa28f6a82c75608aae2e573",
          "md5": "313b6518e1155c73695de718ac762b70",
          "sha256": "a27090c36704d66c5a25ddc508f455f22f031517669dc9007471b3968c7a6254"
        },
        "downloads": -1,
        "filename": "plazy-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "313b6518e1155c73695de718ac762b70",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,<4,>=2.7",
        "size": 7194,
        "upload_time": "2021-08-24T12:14:36",
        "upload_time_iso_8601": "2021-08-24T12:14:36.943326Z",
        "url": "https://files.pythonhosted.org/packages/75/a5/2cfd6df7cd22b436526a91f00585954ec8325aa28f6a82c75608aae2e573/plazy-0.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2470e465b8266c21986c88461aaea78fab53f75265224cafab9e6c21e36e261a",
          "md5": "339982b51e08bbd26ffbd8adfed6f878",
          "sha256": "1de9845e43914c4bd23707e9ce285ba62fd087bb97d22f32b60a69d08d59ccd0"
        },
        "downloads": -1,
        "filename": "plazy-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "339982b51e08bbd26ffbd8adfed6f878",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,<4,>=2.7",
        "size": 8450,
        "upload_time": "2021-08-24T12:14:39",
        "upload_time_iso_8601": "2021-08-24T12:14:39.376443Z",
        "url": "https://files.pythonhosted.org/packages/24/70/e465b8266c21986c88461aaea78fab53f75265224cafab9e6c21e36e261a/plazy-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ba9e289a561717f89517c77910736a0256108289b4b966dcdc27b9aa4c18189",
          "md5": "28bf894a424f2e1379db2ae747d065ba",
          "sha256": "fd1bd0bc81fe18089ce23826a6a2300e46375fd4ca7e96c9cbc9fc069830f422"
        },
        "downloads": -1,
        "filename": "plazy-0.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28bf894a424f2e1379db2ae747d065ba",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "<4,>=3.5",
        "size": 12852,
        "upload_time": "2021-08-28T15:15:43",
        "upload_time_iso_8601": "2021-08-28T15:15:43.630597Z",
        "url": "https://files.pythonhosted.org/packages/5b/a9/e289a561717f89517c77910736a0256108289b4b966dcdc27b9aa4c18189/plazy-0.1.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5669774edfbe1b6ac5e4ad8bdf2eea22ee2b2210780ebc0410d7ad38a6c15f5",
          "md5": "71c7d6c90f50b2f6442631cecf65e501",
          "sha256": "82bafdd3a8fa98b52312e9f6d14139093684597ac1981860919d2ce169b0a715"
        },
        "downloads": -1,
        "filename": "plazy-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "71c7d6c90f50b2f6442631cecf65e501",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.5",
        "size": 14362,
        "upload_time": "2021-08-28T15:15:45",
        "upload_time_iso_8601": "2021-08-28T15:15:45.488229Z",
        "url": "https://files.pythonhosted.org/packages/c5/66/9774edfbe1b6ac5e4ad8bdf2eea22ee2b2210780ebc0410d7ad38a6c15f5/plazy-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ba9e289a561717f89517c77910736a0256108289b4b966dcdc27b9aa4c18189",
        "md5": "28bf894a424f2e1379db2ae747d065ba",
        "sha256": "fd1bd0bc81fe18089ce23826a6a2300e46375fd4ca7e96c9cbc9fc069830f422"
      },
      "downloads": -1,
      "filename": "plazy-0.1.5-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "28bf894a424f2e1379db2ae747d065ba",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": "<4,>=3.5",
      "size": 12852,
      "upload_time": "2021-08-28T15:15:43",
      "upload_time_iso_8601": "2021-08-28T15:15:43.630597Z",
      "url": "https://files.pythonhosted.org/packages/5b/a9/e289a561717f89517c77910736a0256108289b4b966dcdc27b9aa4c18189/plazy-0.1.5-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5669774edfbe1b6ac5e4ad8bdf2eea22ee2b2210780ebc0410d7ad38a6c15f5",
        "md5": "71c7d6c90f50b2f6442631cecf65e501",
        "sha256": "82bafdd3a8fa98b52312e9f6d14139093684597ac1981860919d2ce169b0a715"
      },
      "downloads": -1,
      "filename": "plazy-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "71c7d6c90f50b2f6442631cecf65e501",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<4,>=3.5",
      "size": 14362,
      "upload_time": "2021-08-28T15:15:45",
      "upload_time_iso_8601": "2021-08-28T15:15:45.488229Z",
      "url": "https://files.pythonhosted.org/packages/c5/66/9774edfbe1b6ac5e4ad8bdf2eea22ee2b2210780ebc0410d7ad38a6c15f5/plazy-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}