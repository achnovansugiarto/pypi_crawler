{
  "info": {
    "author": "",
    "author_email": "Nico Schl√∂mer <nico.schloemer@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://github.com/nschloe/meshplex\"><img alt=\"meshplex\" src=\"https://raw.githubusercontent.com/meshpro/meshplex/assets/meshplex-logo.svg\" width=\"60%\"></a>\n  <p align=\"center\">Fast tools for simplex meshes.</p>\n</p>\n\n[![PyPi Version](https://img.shields.io/pypi/v/meshplex.svg?style=flat-square)](https://pypi.org/project/meshplex/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/meshplex.svg?style=flat-square)](https://pypi.org/project/meshplex/)\n[![GitHub stars](https://img.shields.io/github/stars/nschloe/meshplex.svg?style=flat-square&logo=github&label=Stars&logoColor=white)](https://github.com/nschloe/meshplex)\n[![PyPi downloads](https://img.shields.io/pypi/dm/meshplex.svg?style=flat-square)](https://pypistats.org/packages/meshplex)\n\n[![Discord](https://img.shields.io/static/v1?logo=discord&label=chat&message=on%20discord&color=7289da&style=flat-square)](https://discord.gg/hnTJ5MRX2Y)\n\nCompute all sorts of interesting points, areas, and volumes in simplex (triangle,\ntetrahedral, n-simplex) meshes of any dimension, with a focus on efficiency. Useful in\nmany contexts, e.g., finite-element and finite-volume computations.\n\nmeshplex is used in [optimesh](https://github.com/nschloe/optimesh) and\n[pyfvm](https://github.com/nschloe/pyfvm).\n\n### Installation\n\nInstall meshzoo [from PyPI](https://pypi.org/project/meshzoo/) with\n\n```\npip install meshzoo\n```\n\nFor full usage of meshplex, you require a license. Licenses for personal and\nacademic use can be purchased\n[here](https://buy.stripe.com/5kA3eV8t8af83iE9AE). For more info, see\n[here](https://github.com/meshpro).\n\n### Quickstart\n\nmeshplex can compute the following data:\n\n```python\nimport meshplex\n\n# create a simple Mesh instance\npoints = [[0.0, 0.0], [1.0, 0.0], [0.0, 1.0]]\ncells = [[0, 1, 2]]\nmesh = meshplex.Mesh(points, cells)\n# or read it from a file\n# mesh = meshplex.read(\"pacman.vtk\")\n\n# triangle volumes, heights\nprint(mesh.cell_volumes)\nprint(mesh.signed_cell_volumes)\nprint(mesh.cell_heights)\n\n# circumcenters, centroids, incenters\nprint(mesh.cell_circumcenters)\nprint(mesh.cell_centroids)\nprint(mesh.cell_incenters)\n\n# circumradius, inradius, cell quality\nprint(mesh.cell_circumradius)\nprint(mesh.cell_inradius)\nprint(mesh.q_radius_ratio)  # d * inradius / circumradius (min 0, max 1)\n\n# control volumes, centroids\nprint(mesh.control_volumes)\nprint(mesh.control_volume_centroids)\n\n# covolume/edge length ratios\nprint(mesh.ce_ratios)\n\n# count Delaunay violations\nprint(mesh.num_delaunay_violations)\n\n# removes some cells\nmesh.remove_cells([0])\n```\n\nFor triangular meshes (`MeshTri`), meshplex also has some mesh manipulation routines:\n\n<!--pytest.mark.skip-->\n\n```python\nmesh.show()  # show the mesh\nmesh.angles  # compute angles\nmesh.flip_until_delaunay()  # flips edges until the mesh is Delaunay\n```\n\nFor a documentation of all classes and functions, see\n[readthedocs](https://meshplex.readthedocs.io/).\n\n(For mesh creation, check out\n[this list](https://github.com/nschloe/awesome-scientific-computing#meshing)).\n\n### Plotting\n\n#### Triangles\n\n<img src=\"https://raw.githubusercontent.com/meshpro/meshplex/assets/pacman.png\" width=\"30%\">\n\n<!--pytest.mark.skip-->\n\n```python\nimport meshplex\n\nmesh = meshplex.read(\"pacman.vtk\")\nmesh.show(\n    # show_coedges=True,\n    # control_volume_centroid_color=None,\n    # mesh_color=\"k\",\n    # nondelaunay_edge_color=None,\n    # boundary_edge_color=None,\n    # comesh_color=(0.8, 0.8, 0.8),\n    show_axes=False,\n)\n```\n\n#### Tetrahedra\n\n<img src=\"https://raw.githubusercontent.com/meshpro/meshplex/assets/tetra.png\" width=\"30%\">\n\n<!--pytest.mark.skip-->\n\n```python\nimport numpy as np\nimport meshplex\n\n# Generate tetrahedron\npoints = np.array(\n    [\n        [1.0, 0.0, -1.0 / np.sqrt(8)],\n        [-0.5, +np.sqrt(3.0) / 2.0, -1.0 / np.sqrt(8)],\n        [-0.5, -np.sqrt(3.0) / 2.0, -1.0 / np.sqrt(8)],\n        [0.0, 0.0, np.sqrt(2.0) - 1.0 / np.sqrt(8)],\n    ]\n) / np.sqrt(3.0)\ncells = [[0, 1, 2, 3]]\n\n# Create mesh object\nmesh = meshplex.MeshTetra(points, cells)\n\n# Plot cell 0 with control volume boundaries\nmesh.show_cell(\n    0,\n    # barycenter_rgba=(1, 0, 0, 1.0),\n    # circumcenter_rgba=(0.1, 0.1, 0.1, 1.0),\n    # circumsphere_rgba=(0, 1, 0, 1.0),\n    # incenter_rgba=(1, 0, 1, 1.0),\n    # insphere_rgba=(1, 0, 1, 1.0),\n    # face_circumcenter_rgba=(0, 0, 1, 1.0),\n    control_volume_boundaries_rgba=(1.0, 0.0, 0.0, 1.0),\n    line_width=3.0,\n)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meshplex",
    "package_url": "https://pypi.org/project/meshplex/",
    "platform": null,
    "project_url": "https://pypi.org/project/meshplex/",
    "project_urls": {
      "Homepage": "https://github.com/meshpro/meshplex",
      "Issues": "https://github.com/meshpro/meshplex/issues"
    },
    "release_url": "https://pypi.org/project/meshplex/0.19.1/",
    "requires_dist": [
      "x21 (>=0.4.10,<0.5.0)",
      "meshio (<6,>=4)",
      "numpy (>=1.20.0)",
      "npx (>=0.0.7)",
      "python-license-manager (>=0.2.0)",
      "matplotlib ; extra == 'all'",
      "scipy ; extra == 'all'",
      "vtk ; extra == 'all'",
      "matplotlib ; extra == 'plot'",
      "vtk ; extra == 'plot'"
    ],
    "requires_python": ">=3.7",
    "summary": "Fast tools for simplex meshes",
    "version": "0.19.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17165818,
  "releases": {
    "0.19.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd932143f83b060619d4d48b30b90018d61feed2b8a94f85438fe076ff6169c2",
          "md5": "f84eb521b5f993ebc5e409e3d95863cb",
          "sha256": "3de0d917621934047b25976cd825168816ea99f3c00fea08f54fd1e26cfd8200"
        },
        "downloads": -1,
        "filename": "meshplex-0.19.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f84eb521b5f993ebc5e409e3d95863cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57136,
        "upload_time": "2023-03-05T18:06:13",
        "upload_time_iso_8601": "2023-03-05T18:06:13.277957Z",
        "url": "https://files.pythonhosted.org/packages/dd/93/2143f83b060619d4d48b30b90018d61feed2b8a94f85438fe076ff6169c2/meshplex-0.19.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd932143f83b060619d4d48b30b90018d61feed2b8a94f85438fe076ff6169c2",
        "md5": "f84eb521b5f993ebc5e409e3d95863cb",
        "sha256": "3de0d917621934047b25976cd825168816ea99f3c00fea08f54fd1e26cfd8200"
      },
      "downloads": -1,
      "filename": "meshplex-0.19.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f84eb521b5f993ebc5e409e3d95863cb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 57136,
      "upload_time": "2023-03-05T18:06:13",
      "upload_time_iso_8601": "2023-03-05T18:06:13.277957Z",
      "url": "https://files.pythonhosted.org/packages/dd/93/2143f83b060619d4d48b30b90018d61feed2b8a94f85438fe076ff6169c2/meshplex-0.19.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}