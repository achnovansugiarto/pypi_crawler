{
  "info": {
    "author": "Ubiq Security, Inc.",
    "author_email": "support@ubiqsecurity.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Security",
      "Topic :: Security :: Cryptography",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Format Preserving Encryption in Python\n\nAn implementation of the NIST-approved FF1 algorithm in Python.\n\nThis implementation conforms (as best as possible) to\n[Draft SP 800-38G Rev. 1][800-38g1]. The implementation passes all tests\nspecified by NIST in their Cryptographic Standards and Guidelines\n[examples for FF1][ff1-examples]\n\n\n## Documentation\n\nSee the [Python API docs](https://dev.ubiqsecurity.com/docs/api).\n\n## Installation\n\n#### Using the package manager:\nYou may want to make sure you are running the latest version of pip3 by\nfirst executing\n```sh\n$ pip3 install --upgrade pip\n```\n\nYou don't need this source code unless you want to modify the package. If you just want to use the package, install from PyPi using pip3, a package manager for Python3.\n\n```sh\n$ pip3 install --upgrade ubiq_security_fpe\n```\n\n\n#### Installing from source:\nFrom within the cloned git repository directory, Install from source with:\n\n\n```\n$ cd ubiq-fpe-python\n$ pip3 install -r requirements.txt\n$ python3 setup.py install\n```\nYou may need to run the python3 commands above using sudo.\n\n# Testing\n\nTo run the tests:\n\n```sh\n$ python3 -m unittest  ubiq_security_fpe/*test.py -v\n```\n\n\n### Requirements\n\n-   Python 3.5+\n\n\n### About alphabets and the radix parameter\n\nThe interfaces operate on strings, and the radix parameter determines which\ncharacters are valid within those strings, i.e. the alphabet. For example, if\nyour radix is 10, then the alphabet for your plain text consists of the\ncharacters in the string \"0123456789\". If your radix is 16, then the\nalphabet is the characters in the string \"0123456789abcdef\".\n\nMore concretely, if you want to encrypt, say, a 16 digit number grouped into\n4 groups of 4 using a `-` as a delimiter as in `0123-4567-8901-2345`, then you\nwould need a radix of at least 11, and you would need to translate the `-`\ncharacter to an `a` (as that is the value that follows `9`) prior to the\nencryption. Conversely, you would need to translate an `a` to a `-` after\ndecryption.\n\nThis mapping of user inputs to alphabets defined by the radix is not performed\nby the library and must be done prior to calling the encrypt and after calling\nthe decrypt functions.\n\nA radix of up to 36 is supported, and the alphabet for a radix of 36 is\n\"0123456789abcdefghijklmnopqrstuvwxyz\".\n\n### Tweaks\n\nTweaks are very much like Initialization Vectors (IVs) in \"traditional\"\nencryption algorithms. For FF1, the minimun and maximum allowed lengths of\nthe tweak may be specified by the user, and any tweak length between those\nvalues may be used.\n\n### Plain/ciphertext input lengths\n\nFor FF1, the minimum length is determined by the inequality:\n- radix<sup>minlen</sup> >= 1000000\n\nor:\n- minlen >= 6 / log<sub>10</sub> radix\n\nThus, the minimum length is determined by the radix and is automatically\ncalculated from it.\n\nFor FF1, the maximum input length is\n- 2<sup>32</sup>\n\n## Examples\n\nThe [unit test code](ff1_test.py) provides the best\nand simplest example of how to use the interfaces.\n\n### FF1\n```python\n    /*\n     * @key is a byte array whose length must be 16, 24, or 32\n     * @twk is an optional byte array that can be used for the FF1 context\n     * @twk_min_len is a constraint that can be applied for the tweak during\n     *      the encrypt or decrypt calls\n     * @twk_max_len is a constraint that can be applied for the tweak during\n     *      the encrypt or decrypt calls\n     * @radix is the radix for the text string\n     * @alpha is the character set to use when perfoming the FPE encryption\n     */\n\n    ctx = ff1.Context(bytes(key), bytes(twk), twk_min_len, twk_max_len, radix, alpha)\n\n    /*\n     * @pt is the plain text string where the characters correspond to the \n     *     alpha character set and the radix value\n     * @tweak is an optional byte array that will override the twk value\n     *     supplied in the Context function.  If supplied it must be constrained to\n     *     the twk_min_len and twk_max_len values\n     */\n\n\n    ct = ctx.Encrypt(pt, tweak)\n    out = ctx.Decrypt(ct, tweak)\n```\n\n\n\n[dashboard]:https://dashboard.ubiqsecurity.com/\n[credentials]:https://dev.ubiqsecurity.com/docs/how-to-create-api-keys\n[800-38g1]:https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-38Gr1-draft.pdf\n[ff1-examples]:https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/FF1samples.pdf\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/ubiqsecurity/ubiq-fpe-python",
    "keywords": "",
    "license": "Free To Use But Restricted",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ubiq-security-fpe",
    "package_url": "https://pypi.org/project/ubiq-security-fpe/",
    "platform": null,
    "project_url": "https://pypi.org/project/ubiq-security-fpe/",
    "project_urls": {
      "Homepage": "https://gitlab.com/ubiqsecurity/ubiq-fpe-python"
    },
    "release_url": "https://pypi.org/project/ubiq-security-fpe/1.0.1/",
    "requires_dist": [
      "swig",
      "M2Crypto"
    ],
    "requires_python": ">=3.5",
    "summary": "Python client library for format preserving encryption",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17374704,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db297af9a00440a1fbe6193ebbb5943f742b541e3e42b648fbe3918654f2dfbf",
          "md5": "1d96b3640777ec389d806645c9b895ee",
          "sha256": "3c012c4eb835b7d5ddfa5673641f83943bc621be55db4b32d59e9d8fa346bc51"
        },
        "downloads": -1,
        "filename": "ubiq_security_fpe-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d96b3640777ec389d806645c9b895ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7886,
        "upload_time": "2023-03-21T07:06:27",
        "upload_time_iso_8601": "2023-03-21T07:06:27.920215Z",
        "url": "https://files.pythonhosted.org/packages/db/29/7af9a00440a1fbe6193ebbb5943f742b541e3e42b648fbe3918654f2dfbf/ubiq_security_fpe-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "642a9e215a5a3aa23d1e8b54f133445830cc9f53d61e6a398b983d946dfc3d9a",
          "md5": "129548c4271d5cf5b50fd9eda7ba1a47",
          "sha256": "30a70ff1caf607d45760db3b00d03bb80a95231f536b0b0cba46f8d5a8a0429c"
        },
        "downloads": -1,
        "filename": "ubiq-security-fpe-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "129548c4271d5cf5b50fd9eda7ba1a47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8570,
        "upload_time": "2023-03-21T07:06:30",
        "upload_time_iso_8601": "2023-03-21T07:06:30.580325Z",
        "url": "https://files.pythonhosted.org/packages/64/2a/9e215a5a3aa23d1e8b54f133445830cc9f53d61e6a398b983d946dfc3d9a/ubiq-security-fpe-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db297af9a00440a1fbe6193ebbb5943f742b541e3e42b648fbe3918654f2dfbf",
        "md5": "1d96b3640777ec389d806645c9b895ee",
        "sha256": "3c012c4eb835b7d5ddfa5673641f83943bc621be55db4b32d59e9d8fa346bc51"
      },
      "downloads": -1,
      "filename": "ubiq_security_fpe-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d96b3640777ec389d806645c9b895ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 7886,
      "upload_time": "2023-03-21T07:06:27",
      "upload_time_iso_8601": "2023-03-21T07:06:27.920215Z",
      "url": "https://files.pythonhosted.org/packages/db/29/7af9a00440a1fbe6193ebbb5943f742b541e3e42b648fbe3918654f2dfbf/ubiq_security_fpe-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "642a9e215a5a3aa23d1e8b54f133445830cc9f53d61e6a398b983d946dfc3d9a",
        "md5": "129548c4271d5cf5b50fd9eda7ba1a47",
        "sha256": "30a70ff1caf607d45760db3b00d03bb80a95231f536b0b0cba46f8d5a8a0429c"
      },
      "downloads": -1,
      "filename": "ubiq-security-fpe-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "129548c4271d5cf5b50fd9eda7ba1a47",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 8570,
      "upload_time": "2023-03-21T07:06:30",
      "upload_time_iso_8601": "2023-03-21T07:06:30.580325Z",
      "url": "https://files.pythonhosted.org/packages/64/2a/9e215a5a3aa23d1e8b54f133445830cc9f53d61e6a398b983d946dfc3d9a/ubiq-security-fpe-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}