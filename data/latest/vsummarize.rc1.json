{
  "info": {
    "author": "Lucas Ou-Yang",
    "author_email": "lucasyangpersonal@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Pythonic Video summarization\n----------------------------\n\nSick of nlp text summarization? Presenting: **video summarization**!\n\nWe take advantage of youtube's comment timestamp video references to generate\na summarized + shorter video from any youtube video.\n\nA glance:\n---------\n\n.. code-block:: pycon\n\n    >>> import vsummarize\n\n    >>> data = vsummarize.summarize('http://youtube.com/watch?v=...', output='shorter.mp4')\n\nAfter this command, the physical summarized ``.mp4`` is now in the output path \nyou provided. We return some meta data incase you need it.\n\nTimestamps from youtube comments are included and are important b/c our \nalgorithm generates summaries via the comments and their timestamps.\n\n.. code-block:: pycon\n\n    >>> print data.hot_clips\n    [('0:12', '0:16'), ..., ('12:31', '13:01')]\n\n    >>> print data.timestamps \n    ['0:12', '0:12', '0:14', ..., '12:31']\n\n    >>> print data.duration # in seconds\n    65 \n\nA demo:\n-------\n\nI tested this software on a 1 hour long Obama speech.\n\nOriginal video (59 minutes): http://www.youtube.com/watch?v=hed1nP9X7pI\n\nSummarized video (3:30 minutes): http://www.youtube.com/watch?v=aDYDN9lsSHg\n\nA lot of the time, (even in my product www.shorten.tv), \nyou just want a list of hot video clips instead of physically summarizing\na video into a new ``.mp4`` because of the resource consumption.\n\nTo do this, simply ignore the output video file parameter.\n\n.. code-block:: pycon\n\n    >>> data = vsummarize.summarize('http://youtube.com/watch?v=...')\n\n    >>> print data.hot_clips\n    [('0:12', '0:16'), ..., ('12:31', '13:01')]\n\n\nThe physical, summarized ``.mp4`` has NOT been generated. We just\nretrieved a set of meta data of what would have happened if we did\nsummarize it.\n\nTo actually generate a summary, we use **ffmpeg + moviepy**\nalong with the above ``.hot_clips`` video sequences to stitch together the video.\n\nFeatures\n--------\n\n- ``.mp4`` video summarization\n- youtube comments timestamp extraction\n- youtube video hot timestamp extraction\n- youtube video hot sub-clip extraction\n\nGet it now\n----------\n\nBecause I use both OSX and Ubuntu, I have clear instructions on setting\nup this project in both platforms. However, I can't guarantee\nanything for the other platforms besides give installation advice.\n\nWe use ``moviepy``, the python video manipulation library, which in turn depends \non the ``ffmpeg`` library.\n\nBe sure you have `pip <http://www.pip-installer.org/>`_.\n\nThe installation instructions are as follows:\n\n**OSX**:\n\n::\n\n    $ brew install ffmpeg\n\n\n**Ubuntu**:\n\n::\n\n    $ curl -O http://ffmpeg.gusari.org/static/64bit/ffmpeg.static.64bit.2014-02-28.tar.gz\n    $ tar -zxvf ffmpeg.static.64bit.2014-02-28.tar.gz \n    $ sudo mv ffmpeg ffprobe /usr/local/bin/.\n    $ rm ffmpeg.static.64bit.2014-02-28.tar.gz \n\n\nAnd lastly, don't forget to install ``vSummarize`` itself!\n\n::\n\n    $ pip install vsummarize\n\n\n**This app uses the google gdata api**. I have a file named ``settings.py`` which contains\nmy personal api keys. I've removed that file from this repo for obvious\nreasons but i've included a file called ``rename_to_settings.py`` which has two api key\nvalues for you to cleanly fill out. Also, please rename that file to ``settings.py`` after\nyou are finished!\n\n\nWarning\n-------\n\nBecause this is such a resource intensive task & lib (especially if you are\nactually using the summarized ``.mp4`` generation feature), you may notice on a few\nvideos the ``.mp4`` generation fail due to an *OS memory exception*. This means\nthat you don't have the RAM for ``ffmpeg`` to fork processes to subchunk out your video.\n\n\nLicense\n-------\n\nAuthored and maintained by `Lucas Ou-Yang`_.\nShoutout to `Zulko`_ for helping code and giving advice to \nsome parts of this project.\n\nWe use `moviepy`_ and `ffmpeg`_ for video manipulation.\nWe also use google's youtube api.\nPlease feel free to `email & contact me`_ if you run into issues or just would like\nto talk about the future of this library!\n\n.. _`Lucas Ou-Yang`: http://codelucas.com\n.. _`email & contact me`: mailto:lucasyangpersonal@gmail.com\n.. _`moviepy`: https://github.com/Zulko/moviepy \n.. _`ffmpeg`: http://www.ffmpeg.org/ \n.. _`Zulko`: https://github.com/Zulko\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/codelucas/vsummarize",
    "keywords": null,
    "license": "UNKNOWN",
    "maintainer": null,
    "maintainer_email": null,
    "name": "vsummarize",
    "package_url": "https://pypi.org/project/vsummarize/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/vsummarize/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/codelucas/vsummarize"
    },
    "release_url": "https://pypi.org/project/vsummarize/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Python video summarization.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2106606,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dfc800be29747a31ee35fb85c413f8c424de06847c08e86c194e49e7eace890",
          "md5": "b2f49f8be0cb7829fe5e2c91bb424550",
          "sha256": "a8f73892bb14a995a0690252d6d733d00e7f29063550aa30c705de5026e391cd"
        },
        "downloads": -1,
        "filename": "vsummarize-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b2f49f8be0cb7829fe5e2c91bb424550",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 206068,
        "upload_time": "2016-05-09T14:50:00",
        "upload_time_iso_8601": "2016-05-09T14:50:00.458614Z",
        "url": "https://files.pythonhosted.org/packages/3d/fc/800be29747a31ee35fb85c413f8c424de06847c08e86c194e49e7eace890/vsummarize-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3dfc800be29747a31ee35fb85c413f8c424de06847c08e86c194e49e7eace890",
        "md5": "b2f49f8be0cb7829fe5e2c91bb424550",
        "sha256": "a8f73892bb14a995a0690252d6d733d00e7f29063550aa30c705de5026e391cd"
      },
      "downloads": -1,
      "filename": "vsummarize-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b2f49f8be0cb7829fe5e2c91bb424550",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 206068,
      "upload_time": "2016-05-09T14:50:00",
      "upload_time_iso_8601": "2016-05-09T14:50:00.458614Z",
      "url": "https://files.pythonhosted.org/packages/3d/fc/800be29747a31ee35fb85c413f8c424de06847c08e86c194e49e7eace890/vsummarize-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}