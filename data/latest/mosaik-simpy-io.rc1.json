{
  "info": {
    "author": "mosaik",
    "author_email": "mosaik@offis.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: System :: Networking"
    ],
    "description": "mosaik-simpy-io\n===============\n\n*mosaik-simpy-io* is a fork of simpy.io_ to fix some problems for the use of simpy.io together with mosaik_.\n\n.. _simpy.io: https://gitlab.com/team-simpy/simpy.io\n.. _mosaik: https://mosaik.offis.de\n\nVersion: 0.2.4\n\nLicense: MIT\n\nsimpy.io\n--------\n\n*simpy.io* is an asynchronous networking library based on SimPy_. The nature\nof networking is thoroughly event-based (messages can for example be thought of\nas events). *simpy.io* marries the solid event system of SimPy_ with\nasynchronous input and output.\n\nIt provides several degrees of abstraction (raw sockets, packets and\nrequest-reply messages), supports various back-ends ((e)poll, select, asyncore,\nvirtual) and lets you use different socket types, like TCP, SSL-encrypted,\nsimulated). Furthermore protocols like HTTP, WebSockets and an extensible RPC\ninterface are also supported.\n\n.. _SimPy: http://simpy.readthedocs.org\n\nCurrent status\n--------------\n\nsimpy.io is currently in the early alpha phase of development. There is no\nguarantee for API stability (modules will almost certainly be renamed before\nthe 1.0 release) and simpy.io may break on your system. Sadly, there isn't any\ndocumentation available as of now (apart from the examples and tests).\n\nThe state of the individual modules is as follows:\n\n* sockets: stable *alpha*\n* packets: stable *alpha*\n* message: stable *alpha*\n* http: *draft*\n* websockets: *draft*\n* rpc: *draft*\n\n\nInstallation\n------------\n\nsimpy.io requires Python between 3.5 and 3.9 and SimPy 3. You can install it from via pip:\n\n.. sourcecode:: bash\n\n    $ pip install mosaik-simpy-io\n\nExamples\n--------\n\nThe following three examples demonstrate simpy.io's levels of abstraction:\n\nSocket level\n^^^^^^^^^^^^\n\nWhen working directly with simpy.io sockets, you can try to *read* and *write*\na specified number of bytes from or to a socket (note that there is no\nguarantee from the OS that all data will be received or transmitted):\n\n.. sourcecode:: python\n\n    >>> from simpy.io import select as backend\n    >>>\n    >>> def server(env, addr):\n    ...     server_sock = backend.TCPSocket.server(env, addr)\n    ...     sock = yield server_sock.accept()\n    ...     data = yield sock.read(4)\n    ...     print(data.decode())\n    ...     yield sock.write('cya'.encode())\n    >>>\n    >>> def client(env, addr):\n    ...     sock = backend.TCPSocket.connection(env, addr)\n    ...     yield sock.write('ohai'.encode())\n    ...     data = yield sock.read(3)\n    ...     print(data.decode())\n    >>>\n    >>> addr = ('127.0.0.1', 5555)\n    >>> env = backend.Environment()\n    >>> srv = env.process(server(env, addr))\n    >>> cli = env.process(client(env, addr))\n    >>> env.run(until=cli)\n    ohai\n    cya\n\n\nPacket level\n^^^^^^^^^^^^\n\nsimpy.io packets alleviate the limitation of raw sockets and allow you to read\nand write complete packets. These can either be bytes (if you use ``Packet``)\nor (unicode) strings (if you use ``PacketUTF8``):\n\n.. sourcecode:: python\n\n    >>> from simpy.io import select as backend\n    >>> from simpy.io.packet import Packet\n    >>>\n    >>> def server(env, addr):\n    ...     server_sock = backend.TCPSocket.server(env, addr)\n    ...     sock = yield server_sock.accept()\n    ...     packet = Packet(sock)\n    ...     data = yield packet.read()\n    ...     print(data.decode())\n    ...     yield packet.write('cya'.encode())\n    >>>\n    >>> def client(env, addr):\n    ...     packet = Packet(backend.TCPSocket.connection(env, addr))\n    ...     yield packet.write('ohai'.encode())\n    ...     data = yield packet.read()\n    ...     print(data.decode())\n    >>>\n    >>> addr = ('127.0.0.1', 5556)\n    >>> env = backend.Environment()\n    >>> srv = env.process(server(env, addr))\n    >>> cli = env.process(client(env, addr))\n    >>> env.run(until=cli)\n    ohai\n    cya\n\n\nMessage level\n^^^^^^^^^^^^^\n\nThe message level adds message counters that allow you to asynchronously send\nmessages (even concurrently) and maps replies to their proper requests.\nFurthermore, you can specify (de)serializers (by default, *JSON* is used) and\nreplies can signal success/failure:\n\n.. sourcecode:: python\n\n    >>> from simpy.io import select as backend\n    >>> from simpy.io.packet import PacketUTF8\n    >>> from simpy.io.message import Message\n    >>>\n    >>> def server(env, addr):\n    ...     server_sock = backend.TCPSocket.server(env, addr)\n    ...     sock = yield server_sock.accept()\n    ...     message = Message(env, PacketUTF8(sock))\n    ...     request = yield message.recv()\n    ...     print(request.content)\n    ...     yield request.succeed('cya')\n    >>>\n    >>> def client(env, addr):\n    ...     message = Message(env, PacketUTF8(\n    ...             backend.TCPSocket.connection(env, addr)))\n    ...     reply = yield message.send('ohai')\n    ...     print(reply)\n    >>>\n    >>> addr = ('127.0.0.1', 5557)\n    >>> env = backend.Environment()\n    >>> srv = env.process(server(env, addr))\n    >>> cli = env.process(client(env, addr))\n    >>> env.run(until=cli)\n    ohai\n    cya\n\nHelp & Contact\n--------------\n\nBugs should be posted on our `issue tracker`__ here on GitLab.\n\n__ https://gitlab.com/mosaik/tools/simpy.io/-/issues/new\n\n\nChangelog\n=========\n\n\n0.2.4 - 2022-05-12\n------------------\n\n- [FIX] Fix for external event simulations in realtime\n- [FIX] Renamed async.py to asnycio.py to fix problem with import of async, which is a keyword since Python 3.5\n- [FIX] Constrain simpy version to <4.0.0 due to incompatibility\n- [CHANGE] python 3.5, 3.6, 3.7, 3.8 and 3.9 are currently supported, python <=3.4 not anymore.\n\n\nAuthors\n=======\n\nmosaik-simpy-io is a fork of simpy.io, which was developed by Ontje Lünsdorf and Stefan Scherfke.\n\nThe authors of mosaik-simpy-io are Annika Ofenloch and Jan Sören Schwarz.\n\n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/mosaik/tools/simpy.io",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mosaik-simpy-io",
    "package_url": "https://pypi.org/project/mosaik-simpy-io/",
    "platform": null,
    "project_url": "https://pypi.org/project/mosaik-simpy-io/",
    "project_urls": {
      "Homepage": "https://gitlab.com/mosaik/tools/simpy.io"
    },
    "release_url": "https://pypi.org/project/mosaik-simpy-io/0.2.4/",
    "requires_dist": [
      "SimPy (<4.0,>=3.0.9)"
    ],
    "requires_python": "",
    "summary": "Asynchronous networking based on SimPy.",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13794541,
  "releases": {
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "617144206b2e94b2fdf15792dedc95a3662fee6858b07a8d2024d683a8159b1d",
          "md5": "19175659d5bed4f7f9dc19af44a368d6",
          "sha256": "9a55cf5057ef85f764f948d0a1b1cb2a6224e626952dd7500bb42bba98cf3e41"
        },
        "downloads": -1,
        "filename": "mosaik_simpy_io-0.2.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19175659d5bed4f7f9dc19af44a368d6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 71898,
        "upload_time": "2022-05-12T13:28:50",
        "upload_time_iso_8601": "2022-05-12T13:28:50.874693Z",
        "url": "https://files.pythonhosted.org/packages/61/71/44206b2e94b2fdf15792dedc95a3662fee6858b07a8d2024d683a8159b1d/mosaik_simpy_io-0.2.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7142e924ee0d13accdd4f2cdb8145280afebea8c7794c63d5d420c983e9a8143",
          "md5": "c7a204c526e9b8305dbb780983675505",
          "sha256": "6b10d6e81ec3e0f87f95b46b16ce4ebcad195963c1a75d182aedfcf67ac0e20a"
        },
        "downloads": -1,
        "filename": "mosaik-simpy-io-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c7a204c526e9b8305dbb780983675505",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47977,
        "upload_time": "2022-05-12T13:28:52",
        "upload_time_iso_8601": "2022-05-12T13:28:52.510950Z",
        "url": "https://files.pythonhosted.org/packages/71/42/e924ee0d13accdd4f2cdb8145280afebea8c7794c63d5d420c983e9a8143/mosaik-simpy-io-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "617144206b2e94b2fdf15792dedc95a3662fee6858b07a8d2024d683a8159b1d",
        "md5": "19175659d5bed4f7f9dc19af44a368d6",
        "sha256": "9a55cf5057ef85f764f948d0a1b1cb2a6224e626952dd7500bb42bba98cf3e41"
      },
      "downloads": -1,
      "filename": "mosaik_simpy_io-0.2.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "19175659d5bed4f7f9dc19af44a368d6",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 71898,
      "upload_time": "2022-05-12T13:28:50",
      "upload_time_iso_8601": "2022-05-12T13:28:50.874693Z",
      "url": "https://files.pythonhosted.org/packages/61/71/44206b2e94b2fdf15792dedc95a3662fee6858b07a8d2024d683a8159b1d/mosaik_simpy_io-0.2.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7142e924ee0d13accdd4f2cdb8145280afebea8c7794c63d5d420c983e9a8143",
        "md5": "c7a204c526e9b8305dbb780983675505",
        "sha256": "6b10d6e81ec3e0f87f95b46b16ce4ebcad195963c1a75d182aedfcf67ac0e20a"
      },
      "downloads": -1,
      "filename": "mosaik-simpy-io-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "c7a204c526e9b8305dbb780983675505",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 47977,
      "upload_time": "2022-05-12T13:28:52",
      "upload_time_iso_8601": "2022-05-12T13:28:52.510950Z",
      "url": "https://files.pythonhosted.org/packages/71/42/e924ee0d13accdd4f2cdb8145280afebea8c7794c63d5d420c983e9a8143/mosaik-simpy-io-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}