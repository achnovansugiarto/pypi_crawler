{
  "info": {
    "author": "guangqiang.lu",
    "author_email": "gqianglu@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# automl-engine\r\n\r\n\r\nGet best models with only **3** lines of code no matter what type of data with **automl-engine**.\r\n\r\nHow to create machine learning and deep learning models with just a few lines of code by just provide data, then framework will get best trained models based on the data we have? We don't need to care about `Data Loading`, `Feature Engineering`, `Model Training`, `Model Selection`, `Model Evaluation` and `Model Sink`, even `RESTful` with best trained model. \r\n\r\nNow **automl-engine** comes in to show power!\r\n\r\nThis repository is based on **scikit-learn** and **TensorFlow** to create both machine learning models and nueral network models with **3** lines of code by just providing `file` or `sklearn` training style, if there is a test file will be nicer to evaluate trained model without any bias.\r\n\r\nHappy to accounce:\r\n\r\nBoth **classification** and **regression** problems are supported!\r\n\r\n## Installation\r\n\r\n\r\nIt's highly recommended that to create a **virtual environment** to install `automl-engine` as this will be at least of affect for root user path.\r\n\r\n#### Linux\r\n\r\n1. Install virtual env: `sudo apt-get install python3-venv`\r\n2. Create virtual env folder: `python3 -m venv your_env_name`\r\n3. activate your virtual env: `source your_env_name/bin/activate`\r\n4. Install `automl-engine` package: `pip install automl-engine`\r\n\r\n\r\n#### Windows\r\n\r\n1. Install virtual env: `python -m pip install virtualenv`\r\n2. Create virtual env folder: `python -m venv your_env_name`\r\n3. activate your virtual env: `.\\your_env_name\\Scripts\\activate`\r\n4. Install `automl-engine` package: `pip install automl-engine`\r\n\r\n\r\n## Getting started\r\n\r\n\r\n### Classification\r\n\r\n\r\nSample code to use `automl-engine` package by using `Titanic` dataset from Kaggle competion, as this dataset contain different kinds of data types also contain some missing values with different threasholds.\r\n\r\n```python\r\nfrom automl.estimator import ClassificationAutoML, FileLoad\r\n\r\nfile_load = FileLoad(file_name=\"train.csv\", file_path = r\"C:\\auto_ml\\test\", label_name='Survived')\r\nauto_est = ClassificationAutoML()\r\nauto_est.fit(file_load=file_load, val_split=0.2)\r\n```\r\n\r\nThat's it all you need to get best models based on your dataset!\r\n\r\nIf you need to get model prediction based on best trained model, that's easy just call `predict` function based on test data file like bellow code.\r\n\r\n```python\r\n# Get prediction based on best trained models\r\nfile_load_test = FileLoad(file_name=\"test.csv\", file_path = r\"C:\\auto_ml\\test\")\r\n\r\npred = auto_est.predict(file_load=file_load_test)\r\n```\r\n\r\nThen we could get whole trained models' evaluation score for each trained model score, we could get best trained model based on validation score if we would love to use trained model for production, one important thing is that these models are stored in local server, we could use them any time with RESTFul API calls.\r\n![Evalution result](https://github.com/lugq1990/automl-engine/blob/master/static_files/diff_model_score.png?raw=true)\r\n    \r\n#### Cloud file support\r\n\r\n\r\nIf we want to use GCP cloud storage as a data source for train and test data, what needed is just get the service account file with proper authority, last is just provide with parameter: `service_account_name` and file local path: `service_account_file_path` to `FileLoad` object, then training will start automatically.\r\n\r\n```python\r\nfile_name=\"train.csv\"\r\nfile_path = \"gs://bucket_name\"\r\nservice_account_name = \"service_account.json\"\r\nservice_account_file_path = r\"C:\\auto_ml\\test\"\r\n\r\nfile_load = FileLoad(file_name, file_path, label_name='Survived', \r\n    service_account_file_name=service_account_name, service_account_file_path=service_account_file_path)\r\n\r\nauto_est = ClassificationAutoML()\r\nauto_est.fit(file_load=file_load)\r\n```\r\n\r\n#### sklearn style\r\n\r\n\r\nIf we have data `in memory`, we could also use memory objects to train, test and predict with `auto_ml` object, just like `scikit-learn`.\r\n\r\n```python\r\nfrom sklearn.datasets import load_iris\r\nfrom sklearn.model_selection import train_test_split\r\n\r\nx, y = load_iris(return_X_y=True)\r\nxtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=.2)\r\n\r\nauto_est = ClassificationAutoML()\r\nauto_est.fit(xtrain, ytrain)\r\n\r\nscore = auto_est.score(xtest, ytest)\r\npred = auto_est.predict(xtest)\r\nprob = auto_est.predict_proba(xtest)\r\n```\r\n\r\n### Regression\r\n\r\nFull functionality for both `classification` and `regression` is same, so the only difference is to change imported class from `ClassificationAutoML` to `RegressionAutoML` just like snippet code\r\n\r\n```python\r\nfrom automl.estimator import FileLoad, RegressionAutoML\r\n\r\nfile_load = FileLoad(file_name=\"train.csv\", file_path = r\"C:\\auto_ml\\test\", label_name=\"label\")\r\n# Just change this class\r\nauto_est = RegressionAutoML()\r\nauto_est.fit(file_load=file_load, val_split=0.2)\r\n```\r\n\r\n## Key features\r\n\r\n - `machine learning` and `neural network models` are supported.\r\n - `Automatically data pre-processing` with missing, unstable, categorical various data types.\r\n - `Ensemble logic` to combine models to build more powerful models.\r\n - `Nueral network models search` with `kerastunner` to find best hyper-parameter for specific type of algorithm.\r\n - `Cloud files` are supported like: `Cloud storage` for GCP or local files.\r\n - `Logging` different processing information into one date file for future reference.\r\n - `Processing monitoring` for each algorithm training status.\r\n - `RESTful API` for API call to get prediction based on best trained model.\r\n\r\n\r\n## Algorithms supported\r\n\r\nCurrent supported algorithms:\r\n - Logistic Regression\r\n - Support vector machine\r\n - Gradient boosting tree\r\n - Random forest\r\n - Decision Tree\r\n - Adaboost Tree\r\n - K-neighbors\r\n - XGBoost\r\n - LightGBM\r\n - Deep nueral network\r\n\r\nAlso supported with `Ensemble` logic to combine different models to build more powerful model by adding model diversity:\r\n - Voting\r\n - Stacking\r\n\r\nFor raw data file, will try with some common pre-procesing steps to create dataset for algorithms, currently some pre-processing algorithms are supported:\r\n - Imputation with statistic analysis for continuous and categorical columns, also support with KNN imputaion\r\n - Standarize\r\n - Normalize \r\n - OneHot Encoding\r\n - MinMax\r\n - PCA\r\n - Feature selection with variance or LinearRegression or ExtraTree\r\n\r\n\r\n## Insights\r\n\r\nInsight for logics of `automl-engine`:\r\n    \r\n1. Load data from file or memory for both training and testinig with class `FileLoad`, support with GCP's `GCS` files as source file.\r\n2. Build processing pipeline object based on data.\r\n    \r\n    (1). `Imputation` for both categorical and numerical data with different logic, if data missing column is over a threshold, will delete that column. Support with algorithm `KNNImputer` to impute data or `SimpleImputer` to fill missing data.\r\n    \r\n    (2). `OneHot Encoding` for categorical columns and add created columns into original data.\r\n    \r\n    (3). `Standardize` data to avoid data range, also benefit for some algorithms like `SVM` etc.\r\n    \r\n    (4). `MinMax` data to keep data into a 0-1 range.\r\n    \r\n    (5). `FeatureSelection` to keep features with a default threshold or using algorithm with `ExtraTree` or `LinearRegreesion` to select features.\r\n    \r\n    (6). `PCA` to reduce dimenssion if feature variance over a threshold and just keep satisfied features.\r\n\r\n3. Build a `Singleton` backend object to do file or data related functions.\r\n4. Build training pipeline to instant each algorithm with a `factory` class based on pre-defined used algorithms.\r\n5. Build a `SearchModel` class for each algorithm to find best parameters based on `RandomSearch` or `GridSearch`.\r\n6. Pre-processing pipeline `fit` and `tranform`, save trained pipeline into disk for future use.\r\n7. Start `training` with training pipeline with processed data with doing parameters search to find `best parameter's model`, also combined with Neural network search to find best neural models. If need `validation` will use some data to do validation that will reduce training data size, or could use trainded `auto_ml` object to do validation will also be fine.\r\n8. Use `Ensemble` logic to do `voting` or `stacking` to combine trained models as a new more diverse model based on best trained model.\r\n9.  `Evaluate` each trained models based on validation data and return a ditionary with `training model name`, `training score` and `validation score`.\r\n10.  Support to `export trained models into a pre-defined folder` that we want.\r\n11.  Support `RESTful API` call based on best trained model based on `test score`.\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lugq1990/automl-engine",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "automl-engine",
    "package_url": "https://pypi.org/project/automl-engine/",
    "platform": "any",
    "project_url": "https://pypi.org/project/automl-engine/",
    "project_urls": {
      "Homepage": "https://github.com/lugq1990/automl-engine"
    },
    "release_url": "https://pypi.org/project/automl-engine/0.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "3 lines of code for automate machine learning for classification and regression.",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11207321,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "442734df321a5db98cd0e82e77dc0739c488bbbfffd7ceaf4b2ca95c1ab6c10c",
          "md5": "6d12be4c825932dc4851ec2936aa4d4d",
          "sha256": "73631d73b75533353971f02e61ba53c3ea3afe6f88471233e782fe80bf5b1f3f"
        },
        "downloads": -1,
        "filename": "automl-engine-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6d12be4c825932dc4851ec2936aa4d4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18850,
        "upload_time": "2021-08-17T01:51:04",
        "upload_time_iso_8601": "2021-08-17T01:51:04.943992Z",
        "url": "https://files.pythonhosted.org/packages/44/27/34df321a5db98cd0e82e77dc0739c488bbbfffd7ceaf4b2ca95c1ab6c10c/automl-engine-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25776bb520ac64b385df6c2065a0cc9675a32cfdeb2b4339b217033011a115ed",
          "md5": "66174cdc0db15b251d552a56f4615f02",
          "sha256": "66e71aef6314cb0502b6d135a9e1efe077dafe771b57e020cb6425766209a38e"
        },
        "downloads": -1,
        "filename": "automl-engine-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "66174cdc0db15b251d552a56f4615f02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47260,
        "upload_time": "2021-08-17T04:25:15",
        "upload_time_iso_8601": "2021-08-17T04:25:15.531293Z",
        "url": "https://files.pythonhosted.org/packages/25/77/6bb520ac64b385df6c2065a0cc9675a32cfdeb2b4339b217033011a115ed/automl-engine-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0849cfee54b288b460ca44cc9f576159505816a84756518783ad79ee75e95ea7",
          "md5": "7ab3e184fffd97724e90a021548ce43d",
          "sha256": "1fbf62c27e7f5768b352111c8e22ddfd66ddac8b0889edd66915a428feb57d33"
        },
        "downloads": -1,
        "filename": "automl-engine-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7ab3e184fffd97724e90a021548ce43d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46963,
        "upload_time": "2021-08-17T09:39:05",
        "upload_time_iso_8601": "2021-08-17T09:39:05.066765Z",
        "url": "https://files.pythonhosted.org/packages/08/49/cfee54b288b460ca44cc9f576159505816a84756518783ad79ee75e95ea7/automl-engine-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27682010e8594705a1a597201114c62aa25ecbb054e2dffd7a475fc6d44a032c",
          "md5": "88cb4005e30658c960f0db9947fff316",
          "sha256": "a8f10c53db6bb0978808ecd7b740ede366f8b360e408abffbb0ca97f093e0d1a"
        },
        "downloads": -1,
        "filename": "automl-engine-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "88cb4005e30658c960f0db9947fff316",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46945,
        "upload_time": "2021-08-17T09:43:21",
        "upload_time_iso_8601": "2021-08-17T09:43:21.057229Z",
        "url": "https://files.pythonhosted.org/packages/27/68/2010e8594705a1a597201114c62aa25ecbb054e2dffd7a475fc6d44a032c/automl-engine-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a996abcb2976b60242075ddb2b876760335fb23572f98f8abe27c86c0c3ba967",
          "md5": "eaafd98e940754ab8388beb7d5ad402e",
          "sha256": "a33396c91eb10ffa639ce1e275443f9288e2a5bacfab0d4b199874d4a405f27a"
        },
        "downloads": -1,
        "filename": "automl-engine-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "eaafd98e940754ab8388beb7d5ad402e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 56463,
        "upload_time": "2021-08-17T10:01:30",
        "upload_time_iso_8601": "2021-08-17T10:01:30.042650Z",
        "url": "https://files.pythonhosted.org/packages/a9/96/abcb2976b60242075ddb2b876760335fb23572f98f8abe27c86c0c3ba967/automl-engine-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "976e8cefdc08cd8ea7380be86c015b6f6b3b4ce9d52a2b35de8ab2f64805de8d",
          "md5": "b7b4aa4ff91cee2d3ce0764fede7f39c",
          "sha256": "170adb218c61d89c9f65b39c14b90e9be58b45cbecfdef08e8e411b9f9e5a76c"
        },
        "downloads": -1,
        "filename": "automl-engine-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b7b4aa4ff91cee2d3ce0764fede7f39c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 57161,
        "upload_time": "2021-08-18T01:44:26",
        "upload_time_iso_8601": "2021-08-18T01:44:26.592106Z",
        "url": "https://files.pythonhosted.org/packages/97/6e/8cefdc08cd8ea7380be86c015b6f6b3b4ce9d52a2b35de8ab2f64805de8d/automl-engine-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "976e8cefdc08cd8ea7380be86c015b6f6b3b4ce9d52a2b35de8ab2f64805de8d",
        "md5": "b7b4aa4ff91cee2d3ce0764fede7f39c",
        "sha256": "170adb218c61d89c9f65b39c14b90e9be58b45cbecfdef08e8e411b9f9e5a76c"
      },
      "downloads": -1,
      "filename": "automl-engine-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "b7b4aa4ff91cee2d3ce0764fede7f39c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 57161,
      "upload_time": "2021-08-18T01:44:26",
      "upload_time_iso_8601": "2021-08-18T01:44:26.592106Z",
      "url": "https://files.pythonhosted.org/packages/97/6e/8cefdc08cd8ea7380be86c015b6f6b3b4ce9d52a2b35de8ab2f64805de8d/automl-engine-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}