{
  "info": {
    "author": "bfzs",
    "author_email": "ydf0509@sohu.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "## 1. pip install nb_filelock\n\n基于代码所在机器的跨进程 跨解释器的文件互斥锁。兼容windwos和linux\n\nfilelock,which can run on linux and windwos.\n\n## 文件锁的功能意义\n```\n此文件锁并不是为了解决多个python程序写入同一个txt文件的问题(当然顺便也解决了这个问题)，\n而是借助文件锁这种中间件介质(类比redis分布式锁使用redis做中间件介质)，\n从而实现当前机器无论启动多少次脚本，只有一个脚本能获得锁从而执行锁里面的代码块。\n```\n\n## 各种锁的能力影响范围大小\n\n锁的能力范围大小是  多线程锁  <  多进程锁  <  文件锁  <  redis分布式锁。\n\n```\n线程锁只能确保单一进程的不同线程只有一个线程能获得锁从而执行代码块\n\n多进程锁针对不同进程，但有个前提是，进程必须是这么饿启动的，\n例如 a.py 文件，在a.py文件里面的代码需要引用muliprossing包的Process(target=func).start()来启动多进程\n如果是把 a.py反复手动运行两次，而不是用了muliprossing包来一次性启动的，两次a.py的进程完全毫不相关，\n这种不同的脚本进程彼此没法知道另一个进程里面的变量，此时需要引入一种中间介质，每个脚本都去读取这个中间件介质来获得锁才可以，\n可以使用redis分布式锁，但这种比较烦需要安装一个redis，没安装redis的环境代码就无法运行了。所以就是要开发一种文件锁，不需要安装中间件。\n\n文件锁, 影响范围是当前机器，能够跨不同批次的启动脚本的解释器，确保代码里面只有一个地方能获得文件锁，从而执行代码块。\n比如希望在当前机器只能同时运行某一个代码块，完全豪不相关的两次启动xx.py，没有办法使用进程锁，\n压根就不是使用multiprossing包同时启动的多个子进程而是手动两次运行了python xx.py，\n好的方式是使用redis分布式锁，可以保证所有机器只提示一个获得锁，但如果没安装redis切要保证当前机器只有一个能执行代码块，就需要这个。\n\n\nredis分布式锁，能影响的范围最强力最广泛，不进能够跨本机的解释器，还能跨机器，可以确保几百台电脑只有一个地方能获得锁从而执行代码块，但要安装redis。\n```\n\n\n### 测试例子。\n\n```\n把下面的python文件复制到一个文件中叫test.py,然后重复启动两次 python test.py，\n当第一个脚本还没执行完代码块时候，另一个脚本会等待第一个脚本执行完成代码块的语句才会开始print hi。\n```\n\n```python\nimport nb_log\nimport time\nfrom nb_filelock import FileLock\n\nprint('wait filelock')\nwith FileLock('testx.lock'):\n    print('hi')\n    time.sleep(20)\n    print('hello')\n```\n\n### 实现代码\n```python\nimport os\nimport abc\n\nif os.name == 'nt':\n    import win32con, win32file, pywintypes\n\n    LOCK_EX = win32con.LOCKFILE_EXCLUSIVE_LOCK\n    LOCK_SH = 0  # The default value\n    LOCK_NB = win32con.LOCKFILE_FAIL_IMMEDIATELY\n    _overlapped = pywintypes.OVERLAPPED()  # noqa\nelse:\n    import fcntl\n\n\nclass BaseLock(metaclass=abc.ABCMeta):\n    def __init__(self, lock_file_path: str):\n        self.f = open(lock_file_path, 'a')\n\n    @abc.abstractmethod\n    def __enter__(self):\n        raise NotImplemented\n\n    @abc.abstractmethod\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        raise NotImplemented\n\n\nclass WindwosFileLock(BaseLock):\n    def __enter__(self):\n        hfile = win32file._get_osfhandle(self.f.fileno())\n        win32file.LockFileEx(hfile, LOCK_EX, 0, 0xffff0000, _overlapped)\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        hfile = win32file._get_osfhandle(self.f.fileno())\n        win32file.UnlockFileEx(hfile, 0, 0xffff0000, _overlapped)\n\n\nclass LinuxFileLock(BaseLock):\n    def __enter__(self):\n        fcntl.flock(self.f, fcntl.LOCK_EX)\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        fcntl.flock(self.f, fcntl.LOCK_UN)\n\n\nFileLock = WindwosFileLock if os.name == 'nt' else LinuxFileLock\n\nif __name__ == '__main__':\n    \"\"\" 把这个脚本连续反复启动多个可以测试文件锁，只有获得文件锁，代码块才能执行\"\"\"\n    import nb_log\n    import time\n\n    print('等待获得锁')\n    with FileLock('testx.lock'):\n        print('hi')\n        time.sleep(20)\n        print('hello')\n    \n\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "filelock,multiprocessing lock",
    "license": "BSD License",
    "maintainer": "ydf",
    "maintainer_email": "ydf0509@sohu.com",
    "name": "nb-filelock",
    "package_url": "https://pypi.org/project/nb-filelock/",
    "platform": "all",
    "project_url": "https://pypi.org/project/nb-filelock/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/nb-filelock/0.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "filelock ,it can run on linux and windows",
    "version": "0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9229668,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36314d58d4ea81fabd5e0bf453d7f3a9fdbdc26aecd780abdb81d712130f8269",
          "md5": "174b8680bfb2d04abafbda5e4d9700ea",
          "sha256": "ab25c3568844779f90b3f6daba1abc3ca8114a501ace13649732f52f5e7f9f35"
        },
        "downloads": -1,
        "filename": "nb_filelock-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "174b8680bfb2d04abafbda5e4d9700ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2525,
        "upload_time": "2021-01-25T12:20:10",
        "upload_time_iso_8601": "2021-01-25T12:20:10.065171Z",
        "url": "https://files.pythonhosted.org/packages/36/31/4d58d4ea81fabd5e0bf453d7f3a9fdbdc26aecd780abdb81d712130f8269/nb_filelock-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "654bceccaa111e4cf3ef1b8350bb01e616cfa9adc77b0ed68b05414623735089",
          "md5": "3c33b02b957a7d0a4cfd8bb1abbf6638",
          "sha256": "02c1f3ee5bd45386b2a05eaadea2e2124cfd145df8f292bb45ac40d128c08d13"
        },
        "downloads": -1,
        "filename": "nb_filelock-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3c33b02b957a7d0a4cfd8bb1abbf6638",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2800,
        "upload_time": "2021-01-25T12:25:41",
        "upload_time_iso_8601": "2021-01-25T12:25:41.675604Z",
        "url": "https://files.pythonhosted.org/packages/65/4b/ceccaa111e4cf3ef1b8350bb01e616cfa9adc77b0ed68b05414623735089/nb_filelock-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54111e286dd8d13906d341ac03c99e46532583912fae6014e9c1a761ca30c2e4",
          "md5": "d4800182ea6fbec090a2477d9b55977b",
          "sha256": "ed2066fd4fce7e0e3ff5273f97a55170fdf574f448de134f4081470154ccd03b"
        },
        "downloads": -1,
        "filename": "nb_filelock-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d4800182ea6fbec090a2477d9b55977b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3129,
        "upload_time": "2021-01-25T12:32:17",
        "upload_time_iso_8601": "2021-01-25T12:32:17.399535Z",
        "url": "https://files.pythonhosted.org/packages/54/11/1e286dd8d13906d341ac03c99e46532583912fae6014e9c1a761ca30c2e4/nb_filelock-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bcd72bf06ac967fac4b8aa861638c08778afa8aa75bd7cfbfc8c7120ebdeadb",
          "md5": "1b41feff7f27aa397100eba4c0e528d4",
          "sha256": "19d7c1c8002619f8aa23b0ac480cb83da9bd8b2074bef2b26915eb6b2c28720c"
        },
        "downloads": -1,
        "filename": "nb_filelock-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "1b41feff7f27aa397100eba4c0e528d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3723,
        "upload_time": "2021-01-25T12:39:19",
        "upload_time_iso_8601": "2021-01-25T12:39:19.205066Z",
        "url": "https://files.pythonhosted.org/packages/7b/cd/72bf06ac967fac4b8aa861638c08778afa8aa75bd7cfbfc8c7120ebdeadb/nb_filelock-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83cd4813664127f2b303aa7c83f160b04ca3c0129534f947a29b8e129ab65d82",
          "md5": "4ead900fd6d3019ec6783d1ffeb888be",
          "sha256": "d715c15ff7b3c9cc8dbbda084c169dc717380955b458a0e60c784c6caf20e74f"
        },
        "downloads": -1,
        "filename": "nb_filelock-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4ead900fd6d3019ec6783d1ffeb888be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4635,
        "upload_time": "2021-01-26T02:07:46",
        "upload_time_iso_8601": "2021-01-26T02:07:46.554202Z",
        "url": "https://files.pythonhosted.org/packages/83/cd/4813664127f2b303aa7c83f160b04ca3c0129534f947a29b8e129ab65d82/nb_filelock-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f64aa966ba91c6568275b60d3c28a61fe8d8a3d5baa27cbd55caf25e6e34c4a2",
          "md5": "a2bdd32e085df8474cdde793c5cf88c1",
          "sha256": "d30833f80ba2128a358f53c37bd6306c4105292d2f5f5c7dedc2fb3eb06fdc31"
        },
        "downloads": -1,
        "filename": "nb_filelock-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a2bdd32e085df8474cdde793c5cf88c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4640,
        "upload_time": "2021-01-26T02:13:15",
        "upload_time_iso_8601": "2021-01-26T02:13:15.193182Z",
        "url": "https://files.pythonhosted.org/packages/f6/4a/a966ba91c6568275b60d3c28a61fe8d8a3d5baa27cbd55caf25e6e34c4a2/nb_filelock-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa0be5f93e20275764c0800cbd95f0b723ef0a560660499e955c62f9f0606a4a",
          "md5": "493acd99fdeb6196a3201cce5e002a37",
          "sha256": "9ba6676375a3720eb540f74931f2eaebadca766989a1e752e3c5da8d3318a65c"
        },
        "downloads": -1,
        "filename": "nb_filelock-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "493acd99fdeb6196a3201cce5e002a37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4756,
        "upload_time": "2021-01-26T02:19:03",
        "upload_time_iso_8601": "2021-01-26T02:19:03.063454Z",
        "url": "https://files.pythonhosted.org/packages/aa/0b/e5f93e20275764c0800cbd95f0b723ef0a560660499e955c62f9f0606a4a/nb_filelock-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa0be5f93e20275764c0800cbd95f0b723ef0a560660499e955c62f9f0606a4a",
        "md5": "493acd99fdeb6196a3201cce5e002a37",
        "sha256": "9ba6676375a3720eb540f74931f2eaebadca766989a1e752e3c5da8d3318a65c"
      },
      "downloads": -1,
      "filename": "nb_filelock-0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "493acd99fdeb6196a3201cce5e002a37",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4756,
      "upload_time": "2021-01-26T02:19:03",
      "upload_time_iso_8601": "2021-01-26T02:19:03.063454Z",
      "url": "https://files.pythonhosted.org/packages/aa/0b/e5f93e20275764c0800cbd95f0b723ef0a560660499e955c62f9f0606a4a/nb_filelock-0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}