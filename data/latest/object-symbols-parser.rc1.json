{
  "info": {
    "author": "Simon Hobbs",
    "author_email": "simon.hobbs@electrooptical.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# object_symbols_parser\nCommand line tool that reads object file symbol table, generate a sorted spreadsheet with the entries. Intended for embedded development where memory and code space needs to be optimized.\n\n## Usage\n### Object File\nThis is particularly useful if you cannot compile a binary due to the code space being exceeded.\n```{bash}\nobject_symbols_parser.py -f src/FileSystem.o -f src/cpp_config.o -f src/main.o -o /tmp/out.xlsx\n```\n\n### ELF/AXF File\n```{bash}\nobject_symbols_parser.py -f project.axf -o /tmp/out.xlsx\n```\n\n## Output\nGenerates a Pandas dataframe and saves it to a spreadsheet. By default the results are sorted as you're most likely looking for the largest entry in the symbols table.\n\n![image](https://user-images.githubusercontent.com/20601769/194420394-d0aa33bb-4d2e-4a5e-919e-f1de119a62b0.png)\n\n## Requirements\n+ click\n+ pandas\n+ GNU Bintools\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/snhobbs/object_symbols_parser",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "object-symbols-parser",
    "package_url": "https://pypi.org/project/object-symbols-parser/",
    "platform": null,
    "project_url": "https://pypi.org/project/object-symbols-parser/",
    "project_urls": {
      "Homepage": "https://github.com/snhobbs/object_symbols_parser"
    },
    "release_url": "https://pypi.org/project/object-symbols-parser/0.1.0/",
    "requires_dist": [
      "pandas",
      "cxxfilt",
      "click"
    ],
    "requires_python": ">=3.6",
    "summary": "Object symbol table wrangler. Useful for finding static memory and code size usage in embedded systems.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15532267,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dcee121103cf2f7ea4f4f894b96365b9a7140ba51fefa91244fa77efc7661cf",
          "md5": "5b78270e0fe96f40a71c199fa7cdbbec",
          "sha256": "67a8b66179f3c97bb56fef5160a292e2739fd5599bb332ebf5c4f20d2b57b786"
        },
        "downloads": -1,
        "filename": "object_symbols_parser-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b78270e0fe96f40a71c199fa7cdbbec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4636,
        "upload_time": "2022-10-26T04:52:31",
        "upload_time_iso_8601": "2022-10-26T04:52:31.561390Z",
        "url": "https://files.pythonhosted.org/packages/6d/ce/e121103cf2f7ea4f4f894b96365b9a7140ba51fefa91244fa77efc7661cf/object_symbols_parser-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6dcee121103cf2f7ea4f4f894b96365b9a7140ba51fefa91244fa77efc7661cf",
        "md5": "5b78270e0fe96f40a71c199fa7cdbbec",
        "sha256": "67a8b66179f3c97bb56fef5160a292e2739fd5599bb332ebf5c4f20d2b57b786"
      },
      "downloads": -1,
      "filename": "object_symbols_parser-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5b78270e0fe96f40a71c199fa7cdbbec",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4636,
      "upload_time": "2022-10-26T04:52:31",
      "upload_time_iso_8601": "2022-10-26T04:52:31.561390Z",
      "url": "https://files.pythonhosted.org/packages/6d/ce/e121103cf2f7ea4f4f894b96365b9a7140ba51fefa91244fa77efc7661cf/object_symbols_parser-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}