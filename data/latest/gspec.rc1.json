{
  "info": {
    "author": "Chris Walther Andersen",
    "author_email": "christian.walther.andersen@rsyd.dk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# gspec\nPython tool for working with gamma spectroscopy data\n\n![Tests](https://github.com/cwand/gspec/actions/workflows/tests.yml/badge.svg)\n\n## Installation\ngpsc is most easily installed with pip:\n```text\npip install gspec\n```\n\n## Usage\nThe central class in the gspec package is the `gspectrum` class:\n\n```text\nimport gspec\n\nspec = gspec.gspectrum()\n```\n\n### Variables\nThe `gspectrum` object will contain a few variables, that can be changed at will:\n\n```text\nfrom datetime import date\n\nspec.energy_units = 'eV'            # Default: 'keV'\nspec.count_time = 30.0              # Default: 0.0\nspec.count_time_units = 'min'       # Default: 's'\nspec.meas_date = date(2021,11,20)   # Default: date(1970,1,1)\n```\nThese variables are used when plotting a spectrum or when adding and subtracting spectra.\n\n### Adding data\nOne can add data to a `gspectrum` object manually\n```text\nspec.set_counts(152, 673.1) # Sets the number of counts at 152eV to 673.1\n```\nOne can also create a spectrum object with pre-loaded data in a numpy-array:\n```text\nimport numpy as np\n\nn = np.array([[10, 231.0], [11, 232.2], [12, 0.0], [13, 2.0]])\nspec = gspec.import_numpy(n)\n```\n\n### Getting data\nTo get the total counts, or the total count-rate, in a certain energy window of the spectrum:\n```text\ntotal_counts = spec.get_counts([32,33,78])    # Gets the sum of counts in the three bins (not necessarily continuous)\ntotal_rate = spec.get_rate(range(45,50))      # Gets the total count rate  in the window between 45eV and 49eV (inclusive).\n```\nThe count rate is simply computed as the total counts divided by the count_time variable.\n\n### Adding and subtracting spectra\nSpectra can be added (e.g. in case of multiple detectors) or subtracted (e.g. in case of background subtraction)\n```text\nbkg = np.array([[10, 13.0], [11, 13.1]]])\nspec2 = gspec.import_numpy(bkg, count_time=30.0, count_time_units='min', energy_units='eV')\nspec2.meas_date = date(2021,11,20) \nspec.add_spectrum(spec2, factor=-1.0, force=False)   # force=False is default and can be ignored here\n```\nThis will subtract `spec2` from `spec` (in place). The `spec2` object will be unchanged. The `factor=-1.0` changes the addition to subtraction and can be any real number.\nIf the count times or time units are not equal, one will have to set `force=True` to enforce the addition.\n\n### Saving and loading spectra\nThe spectrum can be saved in a text file:\n```text\nspec.print_txt('spectrum.txt', force=False)  # Set force=True to overwrite exisiting files with the same name\n```\n\nTo load the spectrum later:\n```text\nspec3 = gspec.import_txt('spectrum.txt')\n```\n\n### Plotting\nThe spectrum can be plotted in a figure (this will block execution of the program)\n```text\ngspec.plot(spec, spectrum_string=\"Some title\", windows=[[20, 22], [30, 35]], bkg=spec2, bkg_string=\"Some background\", title=\"Figure title\")\n```\nAll input arguments after the first one are optional.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cwand/gspec",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gspec",
    "package_url": "https://pypi.org/project/gspec/",
    "platform": null,
    "project_url": "https://pypi.org/project/gspec/",
    "project_urls": {
      "Bug Tracker": "https://github.com/cwand/gspec/issues",
      "Homepage": "https://github.com/cwand/gspec"
    },
    "release_url": "https://pypi.org/project/gspec/1.0.1/",
    "requires_dist": [
      "numpy (>=1.21)",
      "scipy (>=1.7)",
      "matplotlib (>=3.3)",
      "pydicom (>=2.2)",
      "pytest (>=6.0) ; extra == 'testing'",
      "pytest-cov (>=2.0) ; extra == 'testing'",
      "mypy (>=0.910) ; extra == 'testing'",
      "flake8 (>=3.9) ; extra == 'testing'",
      "tox (>=3.24) ; extra == 'testing'"
    ],
    "requires_python": ">=3.8",
    "summary": "Gamma spectroscopy tools",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13385799,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b44f1d429c96a3efe916c9213c58f70ebd8f41f6f81d7c9b6856c9d5eb5f7bc3",
          "md5": "af0396a7f9fe82e561b86aed54091325",
          "sha256": "e8744fb15f46dd4dba9b6296b2d743c7bfe677b7feca4142a5606696533f33b1"
        },
        "downloads": -1,
        "filename": "gspec-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af0396a7f9fe82e561b86aed54091325",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 7109,
        "upload_time": "2022-04-02T19:33:23",
        "upload_time_iso_8601": "2022-04-02T19:33:23.765532Z",
        "url": "https://files.pythonhosted.org/packages/b4/4f/1d429c96a3efe916c9213c58f70ebd8f41f6f81d7c9b6856c9d5eb5f7bc3/gspec-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b549b20201d1bfb662eb1da76e023bf2fba104edd9e9bc2ddf44d8533f07fa6",
          "md5": "dfb04b9d2bd1272411909f4b1d6fd7e1",
          "sha256": "57834f853cd6f26119887d6c0dd4bd0b166c780d64df462ad7172a6e662db23f"
        },
        "downloads": -1,
        "filename": "gspec-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dfb04b9d2bd1272411909f4b1d6fd7e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 8257,
        "upload_time": "2022-04-02T19:33:25",
        "upload_time_iso_8601": "2022-04-02T19:33:25.706104Z",
        "url": "https://files.pythonhosted.org/packages/6b/54/9b20201d1bfb662eb1da76e023bf2fba104edd9e9bc2ddf44d8533f07fa6/gspec-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b44f1d429c96a3efe916c9213c58f70ebd8f41f6f81d7c9b6856c9d5eb5f7bc3",
        "md5": "af0396a7f9fe82e561b86aed54091325",
        "sha256": "e8744fb15f46dd4dba9b6296b2d743c7bfe677b7feca4142a5606696533f33b1"
      },
      "downloads": -1,
      "filename": "gspec-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "af0396a7f9fe82e561b86aed54091325",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 7109,
      "upload_time": "2022-04-02T19:33:23",
      "upload_time_iso_8601": "2022-04-02T19:33:23.765532Z",
      "url": "https://files.pythonhosted.org/packages/b4/4f/1d429c96a3efe916c9213c58f70ebd8f41f6f81d7c9b6856c9d5eb5f7bc3/gspec-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b549b20201d1bfb662eb1da76e023bf2fba104edd9e9bc2ddf44d8533f07fa6",
        "md5": "dfb04b9d2bd1272411909f4b1d6fd7e1",
        "sha256": "57834f853cd6f26119887d6c0dd4bd0b166c780d64df462ad7172a6e662db23f"
      },
      "downloads": -1,
      "filename": "gspec-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dfb04b9d2bd1272411909f4b1d6fd7e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 8257,
      "upload_time": "2022-04-02T19:33:25",
      "upload_time_iso_8601": "2022-04-02T19:33:25.706104Z",
      "url": "https://files.pythonhosted.org/packages/6b/54/9b20201d1bfb662eb1da76e023bf2fba104edd9e9bc2ddf44d8533f07fa6/gspec-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}