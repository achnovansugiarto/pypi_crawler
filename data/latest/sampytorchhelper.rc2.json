{
  "info": {
    "author": "Soilihi Abderemane",
    "author_email": "Abderemane500@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SamPytorchHelper\nA Pytorch package that can be used directly with pytorch and tensorboard to simplify the training process while\nimproving the code readability. One no longer needs to explicitly write the training loop, saving the model and upload\nthe training information to tensorboard.\n\n## Installation\nFirstly, we need to install all the required libraries within the `requirements.txt` file. One way to do that is by \npip installing the libraries using this command:  \n```commandline\npip install -r ./requirements.txt\n```\nSecondly, install the `SamPytorchHelper` package from PyPI: \n```commandline\npip install SamPytorchHelper\n```\nWhen it is done, we can import the class form the package by:\n```python\nfrom SamPytorchHelper.TorchHelper import TorchHelperClass\n```\n the `TorchHelper` module contains the `TorchHelperClass` that is used to train the network. \n\n## TorchHelperClass description \nTorchHelperClass contains mainly 4 attributes and 2 methods. \n1. **Attributes**\n    ```python\n    class TorchHelperClass:\n        def __init__(self, model, loss_function, optimizer, comment='')\n    ```\n   At initialization, the class should receive 4 arguments: the network, the loss function, the optimizer, and a comment \nstring. The `comment` should contain the information needed when the trained model will be saved \nand when it will be displayed in tensorboard. It provides an extra-information to model for better identification. \nthe `comment` string may include the hyperparameter values such as epoch, lr, batch, etc. \n\n2. **Methods** \n\n     The TorchHelperClass has mainly 2 methods: \n   * *train_model:* \n     ```python\n     def train_model(self, train_dataloader, val_dataloader, num_epoch=50, iter_print=100):\n        \"\"\"\n        :param train_dataloader: training set\n        :param val_dataloader: validation set\n        :param num_epoch: the total number of epochs. default = 50\n        :param iter_print: indicate when to print the loss after how many iteration. default = 100\n        :return: current trained model\n        \"\"\"\n     ```\n   * *save_model:*:\n     ```python\n     def save_model(self, path):\n        \"\"\"\n        :param path: folder where to save the model\n        :return: None\n        \"\"\"\n     ````\n## Example\nA complete example implementation  can be found in `test` folder:\n* `data folder`: contains the FashionMNIST dataset downloaded using `torchvision`\n* `runs folder`: contains the information used by tensorboard. \n* `trained_models folder`: it has the trained model saved after training using the `save_model` method.\n* `test.py`: it used to test the 'TorchHelperClass', most importantly, it shows the steps on how we can use the package \nmore efficiently to train our network:\n  ```python\n    ...\n    # hyper-parameters\n    parameters = dict(\n        lr=[0.01, 0.001],\n        batch=[32, 64, 128],\n        shuffle=[True],\n        epochs=[10, 20],\n        momentum=[0.9]\n    )\n    ...\n    param_values = [v for v in parameters.values()]\n    for id, (lr, batch, shuffle, epochs, momentum) in enumerate(product(*param_values)):\n        print(\"Current Hyperparams id:\", id+1)\n        train_dataloader = DataLoader(train_data, batch_size=batch, shuffle=shuffle)\n        test_dataloader = DataLoader(test_data, batch_size=batch, shuffle=False)\n\n        net = Network()\n\n        criterion = nn.CrossEntropyLoss()\n        optimizer = torch.optim.SGD(net.parameters(), lr=lr, momentum=momentum)\n\n        comment = f' epch={epochs} lr={lr} bch={batch}'\n        helper = TorchHelperClass(model=net, loss_function=criterion, optimizer=optimizer, comment=comment)\n        helper.train_model(train_dataloader, test_dataloader, epochs, 1000)\n        helper.save_model('trained_models')\n        print()\n    ...\n  ```\nThe `parameters` is dict containing all the different value of each hyper-parameters.\nIt is used for network hyper-parameters tuning where each parameter can have one or a list of values.  \n\n## Results after running test.py\n\n### From the Terminal\n![terminal](./test/pic/terminal.jpg)\n\n### From Tensorboard \n![tensorboard](./test/pic/tensorboard.png)\n\n![loss](./test/pic/loss.png) ![training](./test/pic/training.png) ![validation](./test/pic/validation.png\n)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sams500/SamPytorchHelper",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "SamPytorchHelper",
    "package_url": "https://pypi.org/project/SamPytorchHelper/",
    "platform": "",
    "project_url": "https://pypi.org/project/SamPytorchHelper/",
    "project_urls": {
      "Bug Tracker": "https://github.com/sams500/SamPytorchHelper/issues",
      "Homepage": "https://github.com/sams500/SamPytorchHelper"
    },
    "release_url": "https://pypi.org/project/SamPytorchHelper/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Make pytorch implementation easy, so that one can focus on what is really important!!!!",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11539053,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23b2d9dd4efaba124bf1d663b6a94058b7ec106215e57622e88091e0035f4002",
          "md5": "072ea72228006fc81b12d69a307035cb",
          "sha256": "fbc23aa348d82ff1e5a4e2eddac5bb34c5824687473e661525f6507772cd097f"
        },
        "downloads": -1,
        "filename": "SamPytorchHelper-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "072ea72228006fc81b12d69a307035cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5480,
        "upload_time": "2021-09-22T06:53:37",
        "upload_time_iso_8601": "2021-09-22T06:53:37.400169Z",
        "url": "https://files.pythonhosted.org/packages/23/b2/d9dd4efaba124bf1d663b6a94058b7ec106215e57622e88091e0035f4002/SamPytorchHelper-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fe6fb7fcc7da3e4ac479690268bf3eae80cd2931317cb9466bf44a80bca2c02",
          "md5": "fb39ce821097be93461285aa762dc9ad",
          "sha256": "d7a68bfd37d5e49a505834a50821c3f9b5669fa50af23e480b13bed33a028205"
        },
        "downloads": -1,
        "filename": "SamPytorchHelper-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fb39ce821097be93461285aa762dc9ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5703,
        "upload_time": "2021-09-22T06:53:38",
        "upload_time_iso_8601": "2021-09-22T06:53:38.954136Z",
        "url": "https://files.pythonhosted.org/packages/2f/e6/fb7fcc7da3e4ac479690268bf3eae80cd2931317cb9466bf44a80bca2c02/SamPytorchHelper-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10d69ce08ac1460cbc0a9e89b29012eec3157ae5a357de91bf288fadd2779a9f",
          "md5": "4c4c13e5cf0bb69b80beb1123d484954",
          "sha256": "2b38eba5bc1cc2eac0e0f77b110922f74cd6f2a316fe9b68ca6040295e59949f"
        },
        "downloads": -1,
        "filename": "SamPytorchHelper-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c4c13e5cf0bb69b80beb1123d484954",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5474,
        "upload_time": "2021-09-24T12:21:40",
        "upload_time_iso_8601": "2021-09-24T12:21:40.180096Z",
        "url": "https://files.pythonhosted.org/packages/10/d6/9ce08ac1460cbc0a9e89b29012eec3157ae5a357de91bf288fadd2779a9f/SamPytorchHelper-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f792c7e7b0b8d121bf750eff7703e6bdc99fd1cd6783db20dfd7e47c08b98904",
          "md5": "437245f1587c6638153f6bfc79ce5ae0",
          "sha256": "c089c09ff27e7b88a363d9c638b2f2369175742f332d388f7b1b04c2d61b0588"
        },
        "downloads": -1,
        "filename": "SamPytorchHelper-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "437245f1587c6638153f6bfc79ce5ae0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5693,
        "upload_time": "2021-09-24T12:21:41",
        "upload_time_iso_8601": "2021-09-24T12:21:41.637681Z",
        "url": "https://files.pythonhosted.org/packages/f7/92/c7e7b0b8d121bf750eff7703e6bdc99fd1cd6783db20dfd7e47c08b98904/SamPytorchHelper-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10d69ce08ac1460cbc0a9e89b29012eec3157ae5a357de91bf288fadd2779a9f",
        "md5": "4c4c13e5cf0bb69b80beb1123d484954",
        "sha256": "2b38eba5bc1cc2eac0e0f77b110922f74cd6f2a316fe9b68ca6040295e59949f"
      },
      "downloads": -1,
      "filename": "SamPytorchHelper-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4c4c13e5cf0bb69b80beb1123d484954",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5474,
      "upload_time": "2021-09-24T12:21:40",
      "upload_time_iso_8601": "2021-09-24T12:21:40.180096Z",
      "url": "https://files.pythonhosted.org/packages/10/d6/9ce08ac1460cbc0a9e89b29012eec3157ae5a357de91bf288fadd2779a9f/SamPytorchHelper-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f792c7e7b0b8d121bf750eff7703e6bdc99fd1cd6783db20dfd7e47c08b98904",
        "md5": "437245f1587c6638153f6bfc79ce5ae0",
        "sha256": "c089c09ff27e7b88a363d9c638b2f2369175742f332d388f7b1b04c2d61b0588"
      },
      "downloads": -1,
      "filename": "SamPytorchHelper-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "437245f1587c6638153f6bfc79ce5ae0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5693,
      "upload_time": "2021-09-24T12:21:41",
      "upload_time_iso_8601": "2021-09-24T12:21:41.637681Z",
      "url": "https://files.pythonhosted.org/packages/f7/92/c7e7b0b8d121bf750eff7703e6bdc99fd1cd6783db20dfd7e47c08b98904/SamPytorchHelper-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}