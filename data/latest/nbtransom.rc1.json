{
  "info": {
    "author": "Paco Nathan",
    "author_email": "ceteri@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Jupyter",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Human Machine Interfaces",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "Active Learning with Jupyter Notebooks\n======================================\n\nThis is a Python 3 library to read/write cells programmatically in\n`Jupyter notebooks <https://jupyter.org/>`_ which anticipates upcoming\n`collaborative <https://groups.google.com/forum/#!topic/jupyter/r7QSObF5YSg>`_\nfeatures in Jupyter.\n\nWe use this at `O'Reilly Media <https://www.oreilly.com/>`_ for\nnotebooks used to manage machine learning pipelines.\nThat is to say, *machines and people collaborate on documents*, \nimplementing a \"human-in-the-loop\" design pattern:\n\n-  people adjust hyperparameters for the ML pipelines\n-  machines write structured \"logs\" during ML modeling/evaluation\n-  people run ``jupyter notebook`` via SSH tunnel for remote access\n\nFor more info about use cases for this library and *active learning* \nin general, see the `JupyterCon 2017 <https://jupytercon.com/>`_ talk\n`Humans in the loop <https://conferences.oreilly.com/jupyter/jup-ny/public/schedule/detail/60058>`_\n\n\nExample Usage\n-------------\n\nThe following script generates a Jupyter notebook in the ``test.ipynb``\nfile, then runs it:\n\n::\n\n    python test.py\n    jupyter notebook\n\nThen launch the ``test.ipynb`` notebook and from the ``Cells`` menu\nselect ``Run All`` to view results.\n\nNB: whenever you use the ``put_df()`` function to store data as a \n`Pandas dataframe <https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html>`_\nbe sure to include ``import pandas as pd`` at some earlier point in\nthe notebook.\n\n\nDependencies and Installation\n-----------------------------\n\nThis code has dependencies on:\n\n-  `nbformat <https://github.com/jupyter/nbformat>`_\n-  `pandas <https://pandas.pydata.org/>`_\n\nTo install from `PyPi <https://pypi.python.org/pypi/nbtransom>`_:\n\n::\n\n    pip install nbtransom\n\n\nTo install from this Git repo:\n\n::\n\n    git clone https://github.com/ceteri/nbtransom.git\n    cd nbtransom\n    pip install -r requirements.txt\n\n\nKudos\n-----\n\n`@htmartin <https://github.com/htmartin>`_\n`@esztiorm <https://github.com/esztiorm>`_\n`@fperez <https://github.com/fperez>`_\n`@odewahn <https://github.com/odewahn>`_\n\n\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/ceteri/nbtransom",
    "keywords": "human-in-the-loop,active learning,collaborative documents,jupyter notebook,pipelines,machine learning",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nbtransom",
    "package_url": "https://pypi.org/project/nbtransom/",
    "platform": "",
    "project_url": "https://pypi.org/project/nbtransom/",
    "project_urls": {
      "Homepage": "http://github.com/ceteri/nbtransom"
    },
    "release_url": "https://pypi.org/project/nbtransom/1.0.1/",
    "requires_dist": [
      "nbformat",
      "pandas"
    ],
    "requires_python": "",
    "summary": "Machines and people collaborating together through Jupyter notebooks.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2977809,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b21879bae38ff8aa2c5ac8cf96bdccad0eb372678870e279237df6d3bb6b2daa",
          "md5": "317d0dc4e8ae35322f3d26c7baf84ebe",
          "sha256": "6db18297e18064fc8c4e79c42d8433dd409a81a84323e21d15a346519c739964"
        },
        "downloads": -1,
        "filename": "nbtransom-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "317d0dc4e8ae35322f3d26c7baf84ebe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6193,
        "upload_time": "2017-06-25T18:03:22",
        "upload_time_iso_8601": "2017-06-25T18:03:22.810266Z",
        "url": "https://files.pythonhosted.org/packages/b2/18/79bae38ff8aa2c5ac8cf96bdccad0eb372678870e279237df6d3bb6b2daa/nbtransom-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73afa1bd16162caf5d0c384ae39b9b65bd64a3a8da3e9efbab7bb983a938d38e",
          "md5": "decc2b74c01f517fb558bca975b4268a",
          "sha256": "271e4a1f071d43ebc16d3d4d4ed242ef27506bc7d620b119ce9cefba9570c51b"
        },
        "downloads": -1,
        "filename": "nbtransom-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "decc2b74c01f517fb558bca975b4268a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4197,
        "upload_time": "2017-06-25T18:03:23",
        "upload_time_iso_8601": "2017-06-25T18:03:23.974375Z",
        "url": "https://files.pythonhosted.org/packages/73/af/a1bd16162caf5d0c384ae39b9b65bd64a3a8da3e9efbab7bb983a938d38e/nbtransom-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b21879bae38ff8aa2c5ac8cf96bdccad0eb372678870e279237df6d3bb6b2daa",
        "md5": "317d0dc4e8ae35322f3d26c7baf84ebe",
        "sha256": "6db18297e18064fc8c4e79c42d8433dd409a81a84323e21d15a346519c739964"
      },
      "downloads": -1,
      "filename": "nbtransom-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "317d0dc4e8ae35322f3d26c7baf84ebe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6193,
      "upload_time": "2017-06-25T18:03:22",
      "upload_time_iso_8601": "2017-06-25T18:03:22.810266Z",
      "url": "https://files.pythonhosted.org/packages/b2/18/79bae38ff8aa2c5ac8cf96bdccad0eb372678870e279237df6d3bb6b2daa/nbtransom-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73afa1bd16162caf5d0c384ae39b9b65bd64a3a8da3e9efbab7bb983a938d38e",
        "md5": "decc2b74c01f517fb558bca975b4268a",
        "sha256": "271e4a1f071d43ebc16d3d4d4ed242ef27506bc7d620b119ce9cefba9570c51b"
      },
      "downloads": -1,
      "filename": "nbtransom-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "decc2b74c01f517fb558bca975b4268a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4197,
      "upload_time": "2017-06-25T18:03:23",
      "upload_time_iso_8601": "2017-06-25T18:03:23.974375Z",
      "url": "https://files.pythonhosted.org/packages/73/af/a1bd16162caf5d0c384ae39b9b65bd64a3a8da3e9efbab7bb983a938d38e/nbtransom-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}