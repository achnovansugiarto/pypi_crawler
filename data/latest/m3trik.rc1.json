{
  "info": {
    "author": "Ryan Simpson",
    "author_email": "m3trik@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "###### \\*A Python3/PySide2 marking menu style toolkit for Maya, 3ds Max, and Blender.\r\n\r\n*personal project. work in progress..*\r\n\r\n## Design:\r\n\r\n###### \r\n\r\n*This is a dynamic and modular marking menu style ui, with a QStackedWidget at it's core. The switchboard module provides convenience methods that allow quick and easy lookups when getting/setting relevant ui and widget data across modules.*\r\n\r\n![alt text](https://raw.githubusercontent.com/m3trik/tentacle/master/docs/toolkit_demo.gif) \\*Example re-opening the last scene, renaming a material, and selecting geometry by that material.\r\n\r\n## \r\n\r\n---\r\n\r\n## Structure:\r\n\r\n![alt text](https://raw.githubusercontent.com/m3trik/tentacle/master/docs/dependancy_graph.jpg)\r\n\r\n#### tcl:\r\n\r\n###### *handles main gui construction.*\r\n\r\n#### childEvents:\r\n\r\n###### *event handling for child widgets.*\r\n\r\n#### overlay:\r\n\r\n###### *tracks cursor position and ui hierarchy to generate paint events that overlay the main widget.*\r\n\r\n#### switchboard:\r\n\r\n###### *loads dynamic ui and any custom widgets and contains convenience methods for interacting with the ui.*\r\n\r\n#### slots:\r\n\r\n###### *parent class housing methods that are inherited across all app specific slot class modules.*\r\n\r\n## \r\n\r\n---\r\n\r\n## Installation:\r\n\r\n###### \r\n\r\nFor Maya: add these lines to a startup script:\r\n\r\n```\r\nsys.path.append('your path to /tentacle') --append the dir containing 'append_to_path.py' to the python path.\r\nimport append_to_path as ap\r\nap.appendPaths('maya', verbose=0)\r\n```\r\n\r\nand to launch the menu, add a macro to a hotkey like the following:\r\n\r\n```\r\n\tdef hk_tentacle_show():\r\n\t\t'''Display the tentacle marking menu.\r\n\t\t'''\r\n\t\tif 'tcl' not in globals():\r\n\t\t\tfrom tcl_maya import Tcl_maya\r\n\t\t\tglobal tcl\r\n\t\t\ttcl = Tcl_maya(key_show='Key_F12', profile=False)\r\n\r\n\t\ttcl.sendKeyPressEvent(tcl.key_show)\r\n```\r\n\r\nFor 3ds Max: add these lines to a startup script:\r\n\r\n```\r\npython.Init() --initalize python\r\npython.Execute(\"import sys; sys.path.append('your path to /tentacle')\") --append the dir containing 'append_to_path.py' to the python path.\r\npython.Execute(\"import append_to_path as ap; ap.appendPaths('max', verbose=0)\")\r\n```\r\n\r\nand to launch the menu, add a macro to a hotkey like the following:\r\n\r\n```\r\nmacroScript main_max\r\ncategory: \"_macros.ui\"\r\nsilentErrors: false\r\nautoUndoEnabled: false\r\n(\r\n\tpython.Execute \"if 'tcl' not in globals(): from tcl_max import Tcl_max; global tcl; tcl = Tcl_max(key_show='Key_Z')\" --create an instance.\r\n\tpython.Execute \"tcl.sendKeyPressEvent(tcl.key_show);\" --show the instance.\r\n)\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/m3trik/tentacle",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "m3trik",
    "package_url": "https://pypi.org/project/m3trik/",
    "platform": null,
    "project_url": "https://pypi.org/project/m3trik/",
    "project_urls": {
      "Homepage": "https://github.com/m3trik/tentacle"
    },
    "release_url": "https://pypi.org/project/m3trik/0.501/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python3/PySide2 marking menu style toolkit for Maya, 3ds Max, and Blender.",
    "version": "0.501",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15673970,
  "releases": {
    "0.501": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7a069bef0d7a15d64644ca51bec4634a6fff613489d61f26741e93727e58966",
          "md5": "ddee7731b8d82301903545a3c4905b8e",
          "sha256": "ca7d66de0c8397a9331c9032e476f522dbab3528921d6ab1dc99e48b28a87a09"
        },
        "downloads": -1,
        "filename": "m3trik-0.501-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddee7731b8d82301903545a3c4905b8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 441653,
        "upload_time": "2022-11-06T12:08:44",
        "upload_time_iso_8601": "2022-11-06T12:08:44.358967Z",
        "url": "https://files.pythonhosted.org/packages/d7/a0/69bef0d7a15d64644ca51bec4634a6fff613489d61f26741e93727e58966/m3trik-0.501-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7a069bef0d7a15d64644ca51bec4634a6fff613489d61f26741e93727e58966",
        "md5": "ddee7731b8d82301903545a3c4905b8e",
        "sha256": "ca7d66de0c8397a9331c9032e476f522dbab3528921d6ab1dc99e48b28a87a09"
      },
      "downloads": -1,
      "filename": "m3trik-0.501-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ddee7731b8d82301903545a3c4905b8e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 441653,
      "upload_time": "2022-11-06T12:08:44",
      "upload_time_iso_8601": "2022-11-06T12:08:44.358967Z",
      "url": "https://files.pythonhosted.org/packages/d7/a0/69bef0d7a15d64644ca51bec4634a6fff613489d61f26741e93727e58966/m3trik-0.501-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}