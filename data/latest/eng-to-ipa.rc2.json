{
  "info": {
    "author": "['mphilli', 'Mitchellpkt', 'CanadianCommander', 'timvancann']",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "### English to IPA (eng_to_ipa)\n\n\nThis Python program utilizes the Carnegie-Mellon University Pronouncing Dictionary to convert English text into the [International Phonetic Alphabet](https://en.wikipedia.org/wiki/International_Phonetic_Alphabet).\n\n\nThe `convert` function is used to take English text and convert it to IPA, like so:\n\n```Python\n>>> import eng_to_ipa as ipa\n>>> ipa.convert(\"The quick brown fox jumped over the lazy dog.\")\n'ðə kwɪk braʊn fɑks ʤəmpt ˈoʊvər ðə ˈleɪzi dɔg.'\n``` \n\nNote that words that cannot be found in the CMU dictionary are simply reprinted with an asterisk.\n\n#### `convert` parameters\n\n* **text** : *string* - The input string of English text to be converted to IPA notation.\n\n* **keep_punct** : *boolean, optional (default=True)* - Determines whether or not the punctuation marks from the input string\nshould be retained or not.\n\n* **retrieve_all** : *boolean, optional (default=False)* - Given that some words might have more than one transcription,\nthis parameter determines whether or not a list of all possible combinations of transcriptions should be returned (True)\n or just the string of one transcription (False).\n \n* **stress_marks** : *string, optional (default='both')* - Determines whether or not the primary and secondary stress \nmarkings (ˈ, ˌ) should be retained. Understood arguments are:\n   * \"primary\" - retains primary stress only \n   * \"secondary\" - retains secondary stress only\n   * \"both\" - to keep both primary and secondary stress markers. \n   \n* **mode** : *string, optional (default='sql')* - Accepts \"sql\" or \"json\", depending on which version of the database you'd like to use.\n As another option for JSON users, simply use the function `jonvert` instead of `convert`. \n   \nThe `ipa_list` function returns a list of each word as a list of all its possible transcriptions. It has all the same\noptional `stress_marks` and `keep_punct` parameters as `convert`.\n```Python\n>>> ipa.ipa_list(\"The record was expensive.\")\n[['ði', 'ðə'], ['rəˈkɔrd', 'rɪˈkɔrd', 'ˈrɛkərd'], ['wɑz'], ['ɪkˈspɛnsɪv.']]\n```\n\nThe `isin_cmu` function takes a word (or list of words) and checks if it is in the CMU pronouncing dictionary (returns \n`True` or `False`). If a list of words is provided, then `True` will only be returned if *every* provided word is in the dictionary.\n\n```Python\n>>> ipa.isin_cmu(\"The dentist opened a new practice.\")\nTrue\n>>> ipa.isin_cmu(\"emoji\")\nFalse\n```\n\nThe `get_rhymes` function returns a list of rhymes for a word or set of words. \n```Python\n>>> ipa.get_rhymes(\"rhyming function\")\n[['climbing', 'diming', 'liming', 'priming', 'timing'], ['compunction', 'conjunction', 'dysfunction', 'injunction', 'junction', 'malfunction']]\n```\n*Use the `jhymes` function instead to force usage of the JSON database.*\n   \nThe `syllable_count` function returns an integer, corresponding to the number of syllables in a word. Returns a list of \nsyllable counts if more than one word is provided in the input string.\n\n```Python\n>>> ipa.syllable_count(\"computer programming\")\n[3, 3]\n```\n\nFor another Python package that offers support for rhyming and syllable counts (as well as other cool things), see [pronouncingpy](https://github.com/aparrish/pronouncingpy).\n\nNote: I'd like to make this project easily available/installable from pip, but I don't know how. Looking for help!\n\n\n### Release\n\nversion: 0.0.2\n\n#### How to release\n```bash\npip install setuptools wheel twine\npython setup.py sdist\npython -m twine upload --repository  testpypi dist/*\npython -m twine upload --repository  pypi dist/*\nrm -rf dist *.egg-info MANIFEST\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eng-to-ipa",
    "package_url": "https://pypi.org/project/eng-to-ipa/",
    "platform": "",
    "project_url": "https://pypi.org/project/eng-to-ipa/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/eng-to-ipa/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "take English text and convert it to IPA",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7037487,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdf6c36ccd1b8cf5ec286f6f516b135f30953db49c0f618f1eedc455afd890d6",
          "md5": "c731cebebee003a68e44a79db811ddd5",
          "sha256": "1d2e008a6fd3676cbe902d08cc8c8f228d13e476a514fcc8442c3d43b88fc9e2"
        },
        "downloads": -1,
        "filename": "eng_to_ipa-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c731cebebee003a68e44a79db811ddd5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2807939,
        "upload_time": "2020-01-08T07:04:50",
        "upload_time_iso_8601": "2020-01-08T07:04:50.477792Z",
        "url": "https://files.pythonhosted.org/packages/fd/f6/c36ccd1b8cf5ec286f6f516b135f30953db49c0f618f1eedc455afd890d6/eng_to_ipa-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "623d8656290e2d537ef66e984a04e903d1a0028ea01524e9dd89e45bb165bc7b",
          "md5": "3da63d20d3966d0cf6f94c9aab2d6fbd",
          "sha256": "0e4fac8370b0ffeaf696193e971b3ff9bd3762e4d153c6d0d280147887e008b1"
        },
        "downloads": -1,
        "filename": "eng_to_ipa-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3da63d20d3966d0cf6f94c9aab2d6fbd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2808070,
        "upload_time": "2020-04-17T05:02:07",
        "upload_time_iso_8601": "2020-04-17T05:02:07.852903Z",
        "url": "https://files.pythonhosted.org/packages/62/3d/8656290e2d537ef66e984a04e903d1a0028ea01524e9dd89e45bb165bc7b/eng_to_ipa-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "623d8656290e2d537ef66e984a04e903d1a0028ea01524e9dd89e45bb165bc7b",
        "md5": "3da63d20d3966d0cf6f94c9aab2d6fbd",
        "sha256": "0e4fac8370b0ffeaf696193e971b3ff9bd3762e4d153c6d0d280147887e008b1"
      },
      "downloads": -1,
      "filename": "eng_to_ipa-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3da63d20d3966d0cf6f94c9aab2d6fbd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2808070,
      "upload_time": "2020-04-17T05:02:07",
      "upload_time_iso_8601": "2020-04-17T05:02:07.852903Z",
      "url": "https://files.pythonhosted.org/packages/62/3d/8656290e2d537ef66e984a04e903d1a0028ea01524e9dd89e45bb165bc7b/eng_to_ipa-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}