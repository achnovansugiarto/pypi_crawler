{
  "info": {
    "author": "Michael Chow",
    "author_email": "mc_al_github@fastmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "tidytext-py\n===========\n\nHandy text processing in python, using pandas DataFrames.\n\nThis library is a python port of the [R package tidytext](https://github.com/juliasilge/tidytext). \n\nInstall\n-------\n\n```\npip install tidytext\n```\n\nThis will also install the nltk package.\nHowever, you will need to download additional resources to use tidytext, using the code below.\n\n```python\nnltk.download(\"punkt\")\n```\n\nFunctions implemented\n---------------------\n\n* bind_tfidf\n* unnest_tokens\n\nExamples\n--------\n\n### unnest_tokens\n\n\n```python\nimport pandas as pd\n\npd.set_option(\"display.max_rows\", 6)\n\nzen = \"\"\"\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\n\"\"\"\n\nzen_split = zen.splitlines()\n\n\ndf = pd.DataFrame({\n    \"zen\": zen_split,\n    \"line\": list(range(len(zen_split)))\n})\n\ndf\n```\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>zen</th>\n      <th>line</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td></td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>The Zen of Python, by Tim Peters</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td></td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>If the implementation is hard to explain, it's a bad idea.</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>If the implementation is easy to explain, it may be a good idea.</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Namespaces are one honking great idea -- let's do more of those!</td>\n      <td>21</td>\n    </tr>\n  </tbody>\n</table>\n<p>22 rows × 2 columns</p>\n\n\n\n\n```python\nfrom tidytext import unnest_tokens\n\nunnest_tokens(df, \"word\", \"zen\")\n```\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>line</th>\n      <th>word</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>the</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>zen</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>21</td>\n      <td>more</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>21</td>\n      <td>of</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>21</td>\n      <td>those</td>\n    </tr>\n  </tbody>\n</table>\n<p>145 rows × 2 columns</p>\n\n\n\n### bind_tf_idf\n\n\n```python\nfrom tidytext import unnest_tokens, bind_tf_idf \nfrom siuba import _, count, arrange\n\n(df\n  >> unnest_tokens(_.word, _.zen)\n  >> count(_.line, _.word)\n  >> bind_tf_idf(_.word, _.line, _.n)\n  >> arrange(-_.tf_idf)\n)\n```\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>line</th>\n      <th>word</th>\n      <th>n</th>\n      <th>tf</th>\n      <th>idf</th>\n      <th>tf_idf</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>37</th>\n      <td>9</td>\n      <td>counts</td>\n      <td>1</td>\n      <td>0.500000</td>\n      <td>2.995732</td>\n      <td>1.497866</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>9</td>\n      <td>readability</td>\n      <td>1</td>\n      <td>0.500000</td>\n      <td>2.995732</td>\n      <td>1.497866</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>13</td>\n      <td>explicitly</td>\n      <td>1</td>\n      <td>0.333333</td>\n      <td>2.995732</td>\n      <td>0.998577</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>18</td>\n      <td>is</td>\n      <td>1</td>\n      <td>0.125000</td>\n      <td>0.693147</td>\n      <td>0.086643</td>\n    </tr>\n    <tr>\n      <th>112</th>\n      <td>19</td>\n      <td>is</td>\n      <td>1</td>\n      <td>0.090909</td>\n      <td>0.693147</td>\n      <td>0.063013</td>\n    </tr>\n    <tr>\n      <th>124</th>\n      <td>20</td>\n      <td>is</td>\n      <td>1</td>\n      <td>0.076923</td>\n      <td>0.693147</td>\n      <td>0.053319</td>\n    </tr>\n  </tbody>\n</table>\n<p>140 rows × 6 columns</p>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/machow/tidytuesday-py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tidytext",
    "package_url": "https://pypi.org/project/tidytext/",
    "platform": "",
    "project_url": "https://pypi.org/project/tidytext/",
    "project_urls": {
      "Homepage": "https://github.com/machow/tidytuesday-py"
    },
    "release_url": "https://pypi.org/project/tidytext/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Text processing with pandas DataFrames.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7961535,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c10c07991d5b50a105d37242d616ebfe4d8e03f5fc13bb5b0c671778a4f2925d",
          "md5": "34f6afe28eb9b5e29dac906c4167a2f8",
          "sha256": "a17cf0b3878b95552e3017dc55f0c9304347f0253f9d90d71f7803e7dcafe404"
        },
        "downloads": -1,
        "filename": "tidytext-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "34f6afe28eb9b5e29dac906c4167a2f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4300,
        "upload_time": "2020-08-14T16:45:04",
        "upload_time_iso_8601": "2020-08-14T16:45:04.342686Z",
        "url": "https://files.pythonhosted.org/packages/c1/0c/07991d5b50a105d37242d616ebfe4d8e03f5fc13bb5b0c671778a4f2925d/tidytext-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c10c07991d5b50a105d37242d616ebfe4d8e03f5fc13bb5b0c671778a4f2925d",
        "md5": "34f6afe28eb9b5e29dac906c4167a2f8",
        "sha256": "a17cf0b3878b95552e3017dc55f0c9304347f0253f9d90d71f7803e7dcafe404"
      },
      "downloads": -1,
      "filename": "tidytext-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "34f6afe28eb9b5e29dac906c4167a2f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4300,
      "upload_time": "2020-08-14T16:45:04",
      "upload_time_iso_8601": "2020-08-14T16:45:04.342686Z",
      "url": "https://files.pythonhosted.org/packages/c1/0c/07991d5b50a105d37242d616ebfe4d8e03f5fc13bb5b0c671778a4f2925d/tidytext-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}