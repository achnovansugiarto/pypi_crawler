{
  "info": {
    "author": "Natalia Zambrana Prado",
    "author_email": "natalia.zambrana-prado@ias.u-psud.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Relative FIP bias diagnostics using linear combinations of spectral lines\n\nThe `fiplcr` Python package allows to perform FIP bias maps measurements on the \nsolar corona from UV intensity maps. It calculates an optimal linear combination\nof the spectral lines in order to obtain an accurate FIP bias map.   \nThe proof of concept for this module is published in \n[Zambrana Prado & Buchlin, 2019](<https://doi.org/10.1051/0004-6361/201834735> \"Measuring relative abundances in the solar corona with optimised linear combinations of spectral lines\"). \nIn order to apply the Linear Combination Ratio (LCR) method one must follow \n4 steps:  \n* Selection of the spectral lines  \n* Computation of the contribution functions\n* Determination of the optimal linear combinations\n* Determination of the relative FIP bias from the observations\n\nThe 1st step must be done on a case by case basis taking into account the \nlines available in your observation. We suggest you follow the criteria stated \nin Sec. 3.3.1 of Zambrana Prado & Buchlin, 2019.  \nThe 2nd step is done by the `specline` module of the `fiplcr` module.  \nThe 3rd step corresponds to the `linear_combination` module.  \nFinally the 4th step can be done using the `fip_map` function.\n\nDo not forget to define all required variables in the `config.py` file in order \nto perform all calculations.\n\n## Installation\n\n`fiplcr` uses [ChiantiPy](https://github.com/chianti-atomic/ChiantiPy) and the\nChianti database.\nBefore installing `fiplcr`, follow the [ChiantiPy installation\ninstructions](https://github.com/chianti-atomic/ChiantiPy#installation).\nIn particular, make sure to set the `$XUVTOP` environment variable in your\n`.bashrc`.\n\nYou can then install `fiplcr` by running the following commands in your\nterminal:\n\n```python\ngit clone https://git.ias.u-psud.fr/nzambran/fiplcr.git\npip install fiplcr/\n```\n\n(If you have limited permission, you can install it locally with `pip install\nfiplcr/ --user`.)\n\nThe `fiplcr` module is now installed on your system.\nYou can safely remove the `fiplcr/` repository that was created.\n\n\n## Quick start examples\n\n### Exploring linear combinations and comparing them to a simple 2-line ratio\n\nIn order to check if your linear combinations are suited for relative FIP bias\ndetermination, you can compare their performance to that of a simple two-line \nratio.  \nThis can be done following the same method presented in Sec. 4 of\n[Zambrana Prado & Buchlin, 2019](<https://doi.org/10.1051/0004-6361/201834735> \"Measuring relative abundances in the solar corona with optimised linear combinations of spectral lines\").\n\n\nUsing a DEM cube (stored in examples/em_example/em_example.npz) we will synthetize \nradiance maps for the selected spectral lines one wishes to test out. The test \ncase consists in using uniform abundances to compute these radiance maps. The \ntest is considered successful for a given FIP bias determination method if the \noutput relative FIP bias mapis consistent with the input elemental abundance \nmaps, both in uniformity and in value.\n\nPutting yourself in the directory `examples/em_example` you can run the em_test.py \nfile and you will retrieve two LinearComb objects: \n* The variable `ll`, containing the lines you wish to test out with their \ncorresponding synthetic radiance maps and the obtained relative FIP bias map.\n* The variable `ll_2_lines`, containing the lines for the simple two-line ratio\nwith their corresponding synthetic radiance maps and the obtained relative \nFIP bias map.\n\nThe test has four main steps, detailed below:\n1.  We derive a DEM cube from the AIA observation. This is for the sole purpose \nof producing synthetic radiances, for which we  have  control  over  all  parameters,  \nwhile  the  DEMs  are representative of different real solar regions.\n2.  Using CHIANTI for the contribution functions and the derived  DEMs,  we  calculate  \nthe  synthetic  radiances.  We  assume different uniform abundances for different \nelements.\n3.  We determine the optimal linear combination coefficients for the LCR method, and \nthe coefficients for the two-line ratio method we are comparing it to.\n4.  We use these coefficients to retrieve the FIP bias in each pixel. If the selected \nlines are suitable for FIP bias determination, the retrieved FIP bias map should be \nuniform.\n\n\n## FULL DESCRIPTION OF EACH MODULE\n\n*Notes:*\n\nIf you have trouble using matplotlib and ChiantiPy and you get this kind of \nerror:\n\"RuntimeError: LaTeX was not able to process the following string:\"\nyou will need to install an additional package by running\n\n`sudo apt install dvipng texlive-latex-extra texlive-fonts-recommended`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.ias.u-psud.fr/nzambran/fiplcr",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fiplcr",
    "package_url": "https://pypi.org/project/fiplcr/",
    "platform": "",
    "project_url": "https://pypi.org/project/fiplcr/",
    "project_urls": {
      "Homepage": "https://git.ias.u-psud.fr/nzambran/fiplcr"
    },
    "release_url": "https://pypi.org/project/fiplcr/1.0/",
    "requires_dist": [
      "ChiantiPy (>=0.11.0)",
      "astropy (>=3.0)",
      "matplotlib (>=2.0)",
      "numpy (>=1.15)",
      "scipy (>=1.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Relative FIP bias diagnostics using linear combinations of spectral lines",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10576050,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90d9471a788d1ef072d792e1239455606255648a5be12dab64bb2f0e5151239f",
          "md5": "3add0471311e46e2800b535d914bc6fe",
          "sha256": "8f88335e47a12b1ec30d58af2ceb1ace042d2bfcb082c09c5ad52f1b6900b2e6"
        },
        "downloads": -1,
        "filename": "fiplcr-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3add0471311e46e2800b535d914bc6fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 36758,
        "upload_time": "2021-06-07T09:56:21",
        "upload_time_iso_8601": "2021-06-07T09:56:21.948442Z",
        "url": "https://files.pythonhosted.org/packages/90/d9/471a788d1ef072d792e1239455606255648a5be12dab64bb2f0e5151239f/fiplcr-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dca5a522889ec77108977fb97aa54275986ab091f6b0e2577d0f90576183c0a4",
          "md5": "05e1b3f600308f9b073e198bed3cfce3",
          "sha256": "498844c9ded2aac4ca368bf845ddfd6ab7a8c6cd3398c199670b94b1b1d868f8"
        },
        "downloads": -1,
        "filename": "fiplcr-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05e1b3f600308f9b073e198bed3cfce3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 30498712,
        "upload_time": "2021-06-07T09:56:27",
        "upload_time_iso_8601": "2021-06-07T09:56:27.086893Z",
        "url": "https://files.pythonhosted.org/packages/dc/a5/a522889ec77108977fb97aa54275986ab091f6b0e2577d0f90576183c0a4/fiplcr-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "90d9471a788d1ef072d792e1239455606255648a5be12dab64bb2f0e5151239f",
        "md5": "3add0471311e46e2800b535d914bc6fe",
        "sha256": "8f88335e47a12b1ec30d58af2ceb1ace042d2bfcb082c09c5ad52f1b6900b2e6"
      },
      "downloads": -1,
      "filename": "fiplcr-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3add0471311e46e2800b535d914bc6fe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 36758,
      "upload_time": "2021-06-07T09:56:21",
      "upload_time_iso_8601": "2021-06-07T09:56:21.948442Z",
      "url": "https://files.pythonhosted.org/packages/90/d9/471a788d1ef072d792e1239455606255648a5be12dab64bb2f0e5151239f/fiplcr-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dca5a522889ec77108977fb97aa54275986ab091f6b0e2577d0f90576183c0a4",
        "md5": "05e1b3f600308f9b073e198bed3cfce3",
        "sha256": "498844c9ded2aac4ca368bf845ddfd6ab7a8c6cd3398c199670b94b1b1d868f8"
      },
      "downloads": -1,
      "filename": "fiplcr-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "05e1b3f600308f9b073e198bed3cfce3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 30498712,
      "upload_time": "2021-06-07T09:56:27",
      "upload_time_iso_8601": "2021-06-07T09:56:27.086893Z",
      "url": "https://files.pythonhosted.org/packages/dc/a5/a522889ec77108977fb97aa54275986ab091f6b0e2577d0f90576183c0a4/fiplcr-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}