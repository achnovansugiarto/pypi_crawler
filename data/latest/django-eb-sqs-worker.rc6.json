{
  "info": {
    "author": "Alexey Strelkov",
    "author_email": "datagreed@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![Tests](https://github.com/DataGreed/django-eb-sqs-worker/workflows/Tests/badge.svg)](https://github.com/DataGreed/django-eb-sqs-worker/actions?query=workflow%3ATests)\n[![PyPI version](https://badge.fury.io/py/django-eb-sqs-worker.svg)](https://badge.fury.io/py/django-eb-sqs-worker)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n# django-eb-sqs-worker\n\nDjango Background Tasks for Amazon Elastic Beanstalk.\n\nCreated by Alexey \"DataGreed\" Strelkov.\n\n## Overview\n\n_django-eb-sqs-worker_ lets you handle background jobs on \n[Elastic Beanstalk Worker Environment](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html) \nsent via SQS and provides methods to send tasks to worker.\n\nYou can use the same Django codebase for both your Web Tier and Worker Tier environments and send tasks \nfrom Web environment to Worker environment. Amazon fully manages autoscaling for you. \n\nTasks are sent via [Amazon Simple Queue Service](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/welcome.html) \nand are delivered to your worker with [Elastic Beanstalk's SQS daemon](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html#worker-daemon). \nPeriodic tasks are also supported. \n\nHere's the diagram of how tasks move through the system, tasks movement is represented by arrows:\n\n![](./docs/img/ebsqs_diag.png)\n\n## Installation\n\nInstall using pip (only python3.x+ is supported):\n\n```\npip install django-eb-sqs-worker\n```\n\nAdd `eb_sqs_worker` to `settings.INSTALLED_APPS`:\n```python\nINSTALLED_APPS = [\n    # ...\n    \"eb_sqs_worker\",\n]\n```\n\nAdd `localhost` to `settings.ALLOWED_HOSTS` so SQS Daemon can post tasks from \nthe queue to your worker:\n```python\nALLOWED_HOSTS = [\n    # ...\n    \"localhost\",\n]\n```\n\n\nUpdate your `settings.py` for both Worker and Web EB environments:\n```python\n# region where your elastic beanstalk environments are deployed, e.g. \"us-west-1\"\nAWS_EB_DEFAULT_REGION = \"your default region\"    \n# your aws access key id\nAWS_ACCESS_KEY_ID = \"insert your key id here\"\n# your aws access key \nAWS_SECRET_ACCESS_KEY = \"insert your key here\"\n# queue name to use - queues that don't exist will be created automatically\nAWS_EB_DEFAULT_QUEUE_NAME = \"any_queue_name_to_use\"\n```\n\nIn the settings file for your **Web** tier environment add the following setting \n(this is important due to possible security problems if you don't set this):\n```python\n# never set to True on Web environment. Use True only on Worker env and local development env\nAWS_EB_HANDLE_SQS_TASKS=False   \n```\n\nIn the setting files used by your **Worker** environments add the following setting:\n```python\n# never set to True on Web environment. Use True only on Worker env and local development env\nAWS_EB_HANDLE_SQS_TASKS=True\n```\n\nAdd eb-sqs-worker urls to your project's main `urls.py` module:\n```python\n# urls.py\n\nurlpatterns = [\n    # your url patterns\n    # ... \n]\n\nfrom eb_sqs_worker.urls import urlpatterns as eb_sqs_urlpatterns\nurlpatterns += eb_sqs_urlpatterns\n```\n\nNavigate to your Worker environment in Elastic Beanstalk Web console, then go to _Configuration > Worker_\nand set HTTP path to `/sqs/`.\n\nYou should also select the queue to use here corresponding to your `AWS_EB_DEFAULT_QUEUE_NAME` \nor, if you prefer to use the autogenerated one, you can copy its name and set as your `AWS_EB_DEFAULT_QUEUE_NAME`.\nIf you don't see your `AWS_EB_DEFAULT_QUEUE_NAME` here, try sending first task to it (see *\"Queueing tasks\"* section)\nand it will be automatically created for you (you may need to reload the page for it to appear here). \n\nApply changes. \n\n\n\n## Usage\n\n### Simple way\n\n#### Defining Background Tasks\n\nTo define a job create a function decorated by `task` decorator:\n\n```python\nfrom eb_sqs_worker.decorators import task\n@task\ndef some_task(**kwargs):\n    # define your task here\n    print(f\"The decorated test task is being run with kwargs {kwargs} and will echo them back\")\n\n    return kwargs\n``` \n\nMake sure the module with your tasks is imported so they will register correctly. \n\nThe best practice is to do it as soon as django loads, e.g. in your app's `models.py` or in corresponding `AppConfig`. \n\n#### Queueing tasks\n\nIf the task was defined using `@task` decorator, you can send it to background queue like this:\n\n```python\n# sends the task to SQS queue where it will be automatically picked up and executed by worker\nsome_task(foo=\"bar\")    \n```\n\nYou can set `settings.AWS_EB_RUN_TASKS_LOCALLY` to `True` in development â€“ this will force all tasks to execute\nlocally in sync mode without sending them to the queue. This is useful for testing.\n\nIf you need to execute the function synchronously just one time somewhere in your code without changing this setting, \nyou can do it like this: \n\n```python\n# runs the task function synchronously without sending it to the queue and returns result\nresult = some_task.execute(foo=\"bar\")   \n```\n\n**Note:** don't supply positional arguments to the task, always use keyword arguments.\n\n#### Periodic tasks\n\nPeriodic tasks are defined the same way as regular task, but it's better to supply a custom name for them:\n\n```python\nfrom eb_sqs_worker.decorators import task\n@task(task_name=\"some_periodic_task\")\ndef periodic_task():\n    # define your periodic task here\n    print(f\"Periodic test task is being run \")\n\n    return True\n``` \n\nAdd `cron.yaml` to the root of the project:\n\n```yaml\nversion: 1\ncron:\n - name: \"some_periodic_task\"\n   url: \"/sqs/\"\n   schedule: \"0 23 * * *\"\n```\n\nDeploy your project to elastic beanstalk and your task will run every day at 23:00. \n\nRefer to [the documentation](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html#worker-periodictasks) for more info on periodic tasks.\n\n**Note**: periodic tasks don't support arguments passing\n\n\n`#TODO describe` (add link to https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html#worker-periodictasks), explain configuration\n\n\n### Advanced way\n\n#### Defining Background Tasks\n\n`#TODO describe`\n#### Queueing tasks\n`#TODO describe`\n\n\n#### Periodic tasks\n\n`#TODO describe`\n\n### Interface reference\n\n## @task decorator\n\n`#TODO: add info on arguments`\n\n## send_task\n\n`#TODO: add info on arguments`\n\n## Settings\n\n### AWS_EB_HANDLE_SQS_TASKS\nIf set to `True`, tasks will be accepted and handled on this instance. If set to `False`, the URL for handling \ntasks will return 404. Defaults to `False`.\n\n**Important:** set this to `True` _only_ on your [Worker environment](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features-managing-env-tiers.html)\n\n### AWS_EB_ENABLED_TASKS\nDictionary of enabled tasks. Routes task names to actual task methods.\n\nIf you register your tasks using the `task` decorator, you don't need to worry about this setting at all,\nit will be set automatically by the decorator. \n\nE.g.:\n\n```python\nAWS_EB_ENABLED_TASKS = {\n    # name used in serialization   # path to actual method that does the job\n    \"accounts_confirmation_email\": \"accounts.tasks.send_confirmation_email\",\n    \"analytics_track_event\": \"analytics.tasks.track_event\"\n}\n``` \n\n### AWS_EB_DEFAULT_REGION\n\nDefault Elastic Beanstalk Region. Use the one that your app id deployed in. \n\n### AWS_EB_DEFAULT_QUEUE_NAME\n\nName of the queue used by default. If the queue with specified name does not exist, it will be created\nautomatically when the first task is queued.\n\n### AWS_ACCESS_KEY_ID\n\nAmazon Access Key Id, refer to [the docs](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys)\n\n### AWS_SECRET_ACCESS_KEY\n\nAmazon Secret Access Key, refer to [the docs](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys)\n\n### AWS_EB_RUN_TASKS_LOCALLY\n\nIf set to true, all tasks will be run locally and synchronnously instead of being sent to SQS Queue. Defaults to `False`\n\n### AWS_EB_ALERT_WHEN_TASK_EXECUTES_LONGER_THAN_SECONDS\n\nSet this to the maximum number of seconds the job (not periodic, use `AWS_EB_ALERT_WHEN_PERIODIC_TASK_EXECUTES_LONGER_THAN_SECONDS` for periodic jobs) is supposed to run. If the job finishes requires more time to finish\nADMINS will be notified by email.\n\n### AWS_EB_ALERT_WHEN_PERIODIC_TASK_EXECUTES_LONGER_THAN_SECONDS\n\nSame as `AWS_EB_ALERT_WHEN_TASK_EXECUTES_LONGER_THAN_SECONDS` but for periodic jobs, since sometimes they need a separate threshold.\n\n## Security\n\nAlways set `AWS_EB_HANDLE_SpipQS_TASKS=False` on Web Tier Environment so the tasks could not be spoofed! \nWeb Tier environments are typically used for hosting publici websites and can be accessed by anoyone on the Internet, \nmeaning that anyone can send any jobs to your site if you leave this option on on Web environment.\n\nWorker environments can only be accessed internally, e.g. via SQS Daemon that POSTs, so `AWS_EB_HANDLE_SQS_TASKS=True` \nshould be set only on worker environments.\n\nUse [Elastic Beanstalk Environment properties](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environments-cfg-softwaresettings.html#environments-cfg-softwaresettings-console) \nto supply different setting files for Web and Worker environments. See also: [docs on designating the Django settings](https://docs.djangoproject.com/en/3.0/topics/settings/#designating-the-settings)\n\n## Tips\n\n`#TODO`\n\n### Accessing Web Tier Database from Worker\n\nYou will probably want your worker environment to have access to the same database as your web tier environment.\n\nAssuming you have a web tier environment and a worker environment with the same Django apps deployed \n(if you don't have a worker environment, yet, you can create it using `eb create -t worker <environment name>`)\nand the web tier environment has an \n[attached database](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.managing.db.html) \nset up via Elastic Beanstalk with database connection settings populated from environmantal variables, \ndo the following:\n\n1. Open Elastic Beanstalk Web Console \n2. Navigate to your Web Tier environment > Configuration > Database\n3. Copy database connection settings. Note that the database password will not be shown here. If you don't remember it, \nyou can connect to the Web environment using `eb ssh` and getting it using `cat /opt/python/current/env`\n4. Navigate to your Worker environment >  Configuration > Software > Edit\n5. Add environmental variables for DB connection that you've copied (`RDS_PORT`,`RDS_PASSWORD`,`RDS_USERNAME`, \n`RDS_DB_NAME`, `RDS_HOSTNAME`) and hit \"Apply\"\n6. Navigate to your Worker environment >  Configuration > Instances > Edit\n7. Add security group corresponding to your Web Tier environment and hit \"Apply\", confirm changes.\n8. Re-deploy the application using `eb deploy` to make sure that everything works as expected.\n\n### Delay abstraction\n\n`#TODO`\n\n### Using different cron files for different environments\n\n`#TODO`\n\n## Testing\n\n### Synchronous mode\n\nWhen developing on local machine it might be a good idea to set `AWS_EB_RUN_TASKS_LOCALLY=True`, so all the tasks \nthat should normally be sent to queue will be executed locally on the same machine in sync mode. This lets you test\nyour actual task methods in integration tests.\n\n### Testing django-eb-sqs-worker itself\n\nClone the repository.\n\n```\ngit clone https://github.com/DataGreed/django-eb-sqs-worker.git\n```\n\nInstall requirements (use python virtual environment)\n```\ncd django-eb-sqs-worker\npip install -r requirements.txt\n```\n\nRun tests\n```\nsh test.sh\n```\n\n\n## Contributing\n\nIf you would like to contribute, please make a Pull Request with the description of changes and add tests to cover\nthese changes.\n\nFeel free to open issues if you have any problems or questions with this package.\n\n\n# TODOs\n\n- take advantage of the new [environment link feature](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-links.html)\n- add pickle serialization\n- finish readme\n- parse GET-parameters for periodic tasks? \n\n---\nSearch tags \n\nDjango Elastic Beanstalk Worker Web Tier Asynchronous celery async django-q Jobs Background Tasks SQS \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DataGreed/django-eb-sqs-worker/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-eb-sqs-worker",
    "package_url": "https://pypi.org/project/django-eb-sqs-worker/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-eb-sqs-worker/",
    "project_urls": {
      "Homepage": "https://github.com/DataGreed/django-eb-sqs-worker/"
    },
    "release_url": "https://pypi.org/project/django-eb-sqs-worker/0.5.0/",
    "requires_dist": [
      "boto3 (>=1.10.28)",
      "botocore (>=1.17.5)",
      "Django (>=2.2)",
      "docutils (>=0.15.2)",
      "jmespath (>=0.10.0)",
      "python-dateutil (>=2.8.1)",
      "pytz (>=2020.1)",
      "s3transfer (>=0.3.3)",
      "six (>=1.15.0)",
      "urllib3 (>=1.25.9)"
    ],
    "requires_python": ">=3.6",
    "summary": "Django Background Tasks for Amazon Elastic Beanstalk",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8255550,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "695ac35cbdd207c102373692d93be1fcda8507bf8264a04d8a1de41ca295337d",
          "md5": "4e2ba23120946065d94c6933bc78c956",
          "sha256": "4546956008d1390161ce7982e7c302f4585f071d8c0303bd4f3a24283929b3f4"
        },
        "downloads": -1,
        "filename": "django-eb-sqs-worker-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4e2ba23120946065d94c6933bc78c956",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13410,
        "upload_time": "2020-06-18T03:50:26",
        "upload_time_iso_8601": "2020-06-18T03:50:26.630013Z",
        "url": "https://files.pythonhosted.org/packages/69/5a/c35cbdd207c102373692d93be1fcda8507bf8264a04d8a1de41ca295337d/django-eb-sqs-worker-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": "requirements problem"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f318a5c9c1108f3e98c574b08f2e326663525b814c77fc3d060993ae334cabb7",
          "md5": "aeb0cafc6cdd6f3e77e2ffbb9a61a64c",
          "sha256": "cbb27d4101ded29197a178b30c9b577d49c5a1af2cafe98befbc20f3a52d872d"
        },
        "downloads": -1,
        "filename": "django_eb_sqs_worker-0.2.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "aeb0cafc6cdd6f3e77e2ffbb9a61a64c",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 23814,
        "upload_time": "2020-06-22T20:48:04",
        "upload_time_iso_8601": "2020-06-22T20:48:04.264030Z",
        "url": "https://files.pythonhosted.org/packages/f3/18/a5c9c1108f3e98c574b08f2e326663525b814c77fc3d060993ae334cabb7/django_eb_sqs_worker-0.2.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bad018fbd8c605704915150c46af99e054c4ec4626c0a802a92e3137f47bc332",
          "md5": "f7dfd8cf4e665382fdd869ff614ea177",
          "sha256": "18dda00d12e59bfe294aded709358f56b6b7c9087628b38c6013b2018f38172d"
        },
        "downloads": -1,
        "filename": "django_eb_sqs_worker-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7dfd8cf4e665382fdd869ff614ea177",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14561,
        "upload_time": "2020-06-23T19:46:32",
        "upload_time_iso_8601": "2020-06-23T19:46:32.024937Z",
        "url": "https://files.pythonhosted.org/packages/ba/d0/18fbd8c605704915150c46af99e054c4ec4626c0a802a92e3137f47bc332/django_eb_sqs_worker-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4235538366feafb5b4807ee479393c07f785b73643755ef879a04d21369da5d6",
          "md5": "04714cab8bd448a89537613bd128c153",
          "sha256": "2dab837d8b195790acb72de5fda3a68e4bfb0c825dfbeecc575cae44dd291cde"
        },
        "downloads": -1,
        "filename": "django-eb-sqs-worker-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "04714cab8bd448a89537613bd128c153",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11467,
        "upload_time": "2020-06-23T19:46:33",
        "upload_time_iso_8601": "2020-06-23T19:46:33.497419Z",
        "url": "https://files.pythonhosted.org/packages/42/35/538366feafb5b4807ee479393c07f785b73643755ef879a04d21369da5d6/django-eb-sqs-worker-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f58d9877fe52be1fa39715728ae082971830a796b2cd236e76b5f04940180562",
          "md5": "9e1cb2f428849ec7fd80450bec832c8f",
          "sha256": "79c9cb701c4f6fbc9630c68d5cdba79afd4cabfac6a3bd3566670a3046b194ff"
        },
        "downloads": -1,
        "filename": "django_eb_sqs_worker-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e1cb2f428849ec7fd80450bec832c8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14777,
        "upload_time": "2020-09-16T23:12:56",
        "upload_time_iso_8601": "2020-09-16T23:12:56.863810Z",
        "url": "https://files.pythonhosted.org/packages/f5/8d/9877fe52be1fa39715728ae082971830a796b2cd236e76b5f04940180562/django_eb_sqs_worker-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f571aa9768485f1f092993867e45146b7142f8b70dce39d9d50aaa11e50f92c0",
          "md5": "85e21d749efbaae7d65e9e0941ac41c7",
          "sha256": "540e552b9a536d7bb3ab465ef2afb77ff3ab170788c66050072d574d2c6cb952"
        },
        "downloads": -1,
        "filename": "django-eb-sqs-worker-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "85e21d749efbaae7d65e9e0941ac41c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11773,
        "upload_time": "2020-09-16T23:12:58",
        "upload_time_iso_8601": "2020-09-16T23:12:58.839160Z",
        "url": "https://files.pythonhosted.org/packages/f5/71/aa9768485f1f092993867e45146b7142f8b70dce39d9d50aaa11e50f92c0/django-eb-sqs-worker-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7dcb4cbd16aa04bb99a03927aacb741ab0c0fce8a60b28b7c376ecb35070b572",
          "md5": "01f6bcacfa2dce6b7b2ef6cfe209184f",
          "sha256": "75a906dae5b654cd7e0091aefc8e1a3fafd702bbbcb0d3ddc246d808b01c8549"
        },
        "downloads": -1,
        "filename": "django_eb_sqs_worker-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01f6bcacfa2dce6b7b2ef6cfe209184f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15272,
        "upload_time": "2020-09-21T21:36:37",
        "upload_time_iso_8601": "2020-09-21T21:36:37.480858Z",
        "url": "https://files.pythonhosted.org/packages/7d/cb/4cbd16aa04bb99a03927aacb741ab0c0fce8a60b28b7c376ecb35070b572/django_eb_sqs_worker-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b3e27ad233ba5a92024d7d39ac2d29a6495d3f7127140be877fe6dfce1c9bbc",
          "md5": "009502edc3fc093a7e361fa30c2dcae4",
          "sha256": "d4e2666196232eda416ac05a47c0ccbff8bc83c151f8dfc8d7de6111e0ade6b3"
        },
        "downloads": -1,
        "filename": "django-eb-sqs-worker-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "009502edc3fc093a7e361fa30c2dcae4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12900,
        "upload_time": "2020-09-21T21:36:42",
        "upload_time_iso_8601": "2020-09-21T21:36:42.848953Z",
        "url": "https://files.pythonhosted.org/packages/4b/3e/27ad233ba5a92024d7d39ac2d29a6495d3f7127140be877fe6dfce1c9bbc/django-eb-sqs-worker-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bc869961888fe56477d9210e54cfe340ebe44552dda90fe92975aef4f129703",
          "md5": "5c719f5229e0dfe1f75cd572725477d1",
          "sha256": "f9ae3e576d76406ed542fe1aaf7201729756a9bc8933def539374f1495fbd466"
        },
        "downloads": -1,
        "filename": "django_eb_sqs_worker-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c719f5229e0dfe1f75cd572725477d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15401,
        "upload_time": "2020-09-23T19:51:41",
        "upload_time_iso_8601": "2020-09-23T19:51:41.370776Z",
        "url": "https://files.pythonhosted.org/packages/1b/c8/69961888fe56477d9210e54cfe340ebe44552dda90fe92975aef4f129703/django_eb_sqs_worker-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7e7ff9af1ddc6ddc4e0a7ca676fe484a47f166aa51c5adce63c293e05198431",
          "md5": "cfb69ac21c4f96c1ca8768e0ddf80ee1",
          "sha256": "d43b03c734b175d1d739f16163c9afbb41916e79f6323f6f790ed11ec4dd7b5b"
        },
        "downloads": -1,
        "filename": "django-eb-sqs-worker-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cfb69ac21c4f96c1ca8768e0ddf80ee1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14154,
        "upload_time": "2020-09-23T19:51:43",
        "upload_time_iso_8601": "2020-09-23T19:51:43.602787Z",
        "url": "https://files.pythonhosted.org/packages/e7/e7/ff9af1ddc6ddc4e0a7ca676fe484a47f166aa51c5adce63c293e05198431/django-eb-sqs-worker-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1bc869961888fe56477d9210e54cfe340ebe44552dda90fe92975aef4f129703",
        "md5": "5c719f5229e0dfe1f75cd572725477d1",
        "sha256": "f9ae3e576d76406ed542fe1aaf7201729756a9bc8933def539374f1495fbd466"
      },
      "downloads": -1,
      "filename": "django_eb_sqs_worker-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5c719f5229e0dfe1f75cd572725477d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15401,
      "upload_time": "2020-09-23T19:51:41",
      "upload_time_iso_8601": "2020-09-23T19:51:41.370776Z",
      "url": "https://files.pythonhosted.org/packages/1b/c8/69961888fe56477d9210e54cfe340ebe44552dda90fe92975aef4f129703/django_eb_sqs_worker-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7e7ff9af1ddc6ddc4e0a7ca676fe484a47f166aa51c5adce63c293e05198431",
        "md5": "cfb69ac21c4f96c1ca8768e0ddf80ee1",
        "sha256": "d43b03c734b175d1d739f16163c9afbb41916e79f6323f6f790ed11ec4dd7b5b"
      },
      "downloads": -1,
      "filename": "django-eb-sqs-worker-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cfb69ac21c4f96c1ca8768e0ddf80ee1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14154,
      "upload_time": "2020-09-23T19:51:43",
      "upload_time_iso_8601": "2020-09-23T19:51:43.602787Z",
      "url": "https://files.pythonhosted.org/packages/e7/e7/ff9af1ddc6ddc4e0a7ca676fe484a47f166aa51c5adce63c293e05198431/django-eb-sqs-worker-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}