{
  "info": {
    "author": "",
    "author_email": "angely-dev <contact@brindereseau.fr>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![python](https://img.shields.io/badge/python-3.7+-success.svg)](https://www.python.org/downloads/release/python-370)\n[![pypi](https://img.shields.io/badge/pypi-published-success.svg)](https://pypi.org/project/diffplus)\n[![license](https://img.shields.io/badge/license-MIT-success.svg)](https://opensource.org/licenses/MIT)\n\n* [What is DiffPlus?](#what-is-diffplus)\n  * [What for?](#what-for)\n  * [Problem](#problem)\n  * [Proposed solution](#proposed-solution)\n* [HOWTO](#howto)\n  * [Install](#install)\n  * [Indented config to dict](#indented-config-to-dict)\n  * [Sanitizing](#sanitizing)\n  * [Incremental diff](#incremental-diff)\n  * [Diff using a third-party module](#diff-using-a-third-party-module) (optional)\n* [Known limitations](#known-limitations)\n  * [Only additions, no deletions](#only-additions-no-deletions)\n  * [Code-like config](#code-like-config)\n  * [One character for indentation](#one-character-for-indentation)\n* [Does DiffPlus reinvent the wheel?](#does-diffplus-reinvent-the-wheel)\n\n# What is DiffPlus?\n\nA lightweight module to help in the comparison of config files. **In particular, it computes an incremental diff between two indented config files whilst respecting the scope of the indented blocks (aka contextual diff).**\n\nThe module leverages the *n*-ary tree data structure to achieve such a diff. Taking about a hundred lines of code, it only relies on Python builtins and has no extra dependencies.\n\n## What for?\n\nThe whole point of DiffPlus is to compare config files **before running them in production.**\n\nBasically, we'd like to merge `A` config file (the candidate config, partial or full) into another `B` config file (the running config). The next section states the problem and gives an insight of what we expect from the module.\n\n## Problem\n\nSay we have two indented configs:\n\n<table>\n <thead>\n  <tr>\n   <th>Config A (to merge into B)</th>\n   <th>Config B</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td>\n\n```\n!\nno ip domain lookup\n!\ninterface FastEthernet0/0\n no shutdown\n!\ninterface FastEthernet0/0.10\n description LAN\n encapsulation dot1Q 10\n ip address 192.168.1.254 255.255.255.0\n!\nrouter bgp 64512\n neighbor 172.16.0.1 remote-as 100\n !\n address-family ipv4\n  neighbor 172.16.0.1 activate\n  neighbor 172.16.0.1 allowas-in 1\n  neighbor 172.16.0.1 prefix-list IN in\n  neighbor 172.16.0.1 prefix-list OUT out\n  network 192.168.1.0 mask 255.255.255.0\n!\n```\n   </td>\n   <td>\n\n```\n!\nhostname R1\n!\ninterface FastEthernet0/0\n description LAN\n no ip address\n shutdown\n duplex auto\n speed auto\n!\nrouter bgp 64512\n neighbor 172.16.0.1 remote-as 100\n !\n address-family ipv4\n  neighbor 172.16.0.1 activate\n  neighbor 172.16.0.1 prefix-list IN in\n  neighbor 172.16.0.1 prefix-list OUT out\n!\nip prefix-list IN seq 5 permit 192.168.2.0/24\nip prefix-list OUT seq 5 permit 192.168.1.0/24\n!\n```\n   </td>\n  </tr>\n </tbody>\n</table>\n\n*The example shows Cisco configs but it applies to any indented config (NOT necessarily network-related).*\n\n**Some items of `A` are missing in `B`. How to find them?**\n\n* We are only looking for new items to be added in `B` — it is called an **incremental diff**\n* The comparison must respect the indented blocks scope — it is called a **contextual diff**\n\n> A line-by-line diff will not help here since `A` is typically a partial config to merge into a full one being `B`.\n\nWe humans are able to compute that diff with ease because we visually identify blocks and items (though we make mistakes, sometimes). After some effort, we'd end up with the following result in mind:\n\n```diff\n# items of A to be added in B (to be computed by diffplus)\n\n+no ip domain lookup\n interface FastEthernet0/0\n+ no shutdown\n+interface FastEthernet0/0.10\n+ description LAN\n+ encapsulation dot1Q 10\n+ ip address 192.168.1.254 255.255.255.0\n router bgp 64512\n  address-family ipv4\n+  neighbor 172.16.0.1 allowas-in 1\n+  network 192.168.1.0 mask 255.255.255.0\n```\n\n> As stated above, this is an incremental diff: **there are only additions (hence the module name),** no deletions.\n\nAs simple as it seems, such a diff is not so trivial for an algorithm.\n\n## Proposed solution\n\n1. Convert each config to an *n*-ary tree\n2. Do a deep comparison of the *n*-ary trees\n\nThe *n*-ary tree data structure will help: to represent how nested the items are, to do the match between blocks.\n\nBecause we deal with config files, **each line is unique per indented block.** Therefore, no need for a list of nodes (allowing for duplicates). We can directly use raw nested dicts as *n*-ary trees, keys being the lines.\n\nThe deep comparison can then be achieved with either a dedicated third-party module or the lightweight [IncrementalDiff](#incremental-diff) helper embedded in this module.\n\n# HOWTO\n\n## Install\n\nDiffPlus is available on [PyPI](https://pypi.org/project/diffplus):\n\n```sh\npip install diffplus\n```\n\n## Indented config to dict\n\nThe `to_dict()` method converts an indented config to an *n*-ary tree:\n\n```py\nfrom diffplus import IndentedConfig\nfrom json import dumps\n\nconfigA = open('configA.txt').read() # or it may be a string\nconfigB = open('configB.txt').read() # or it may be a string\n\nconfigA = IndentedConfig(configA, comment_char='!', sanitize=True)\nconfigB = IndentedConfig(configB, comment_char='!', sanitize=True)\n\nprint(dumps(configA.to_dict(), indent=2))\nprint(dumps(configB.to_dict(), indent=2))\n```\n\nOutput:\n\n\n<table>\n <thead>\n  <tr>\n   <th>Config A (to merge into B)</th>\n   <th>Config B</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td>\n\n```json\n{\n  \"no ip domain lookup\": {},\n  \"interface FastEthernet0/0\": {\n    \"no shutdown\": {}\n  },\n  \"interface FastEthernet0/0.10\": {\n    \"description LAN\": {},\n    \"encapsulation dot1Q 10\": {},\n    \"ip address 192.168.1.254 255.255.255.0\": {}\n  },\n  \"router bgp 64512\": {\n    \"neighbor 172.16.0.1 remote-as 100\": {},\n    \"address-family ipv4\": {\n      \"neighbor 172.16.0.1 activate\": {},\n      \"neighbor 172.16.0.1 allowas-in 1\": {},\n      \"neighbor 172.16.0.1 prefix-list IN in\": {},\n      \"neighbor 172.16.0.1 prefix-list OUT out\": {},\n      \"network 192.168.1.0 mask 255.255.255.0\": {}\n    }\n  }\n}\n```\n   </td>\n   <td>\n\n```json\n{\n  \"hostname R1\": {},\n  \"interface FastEthernet0/0\": {\n    \"description LAN\": {},\n    \"no ip address\": {},\n    \"shutdown\": {},\n    \"duplex auto\": {},\n    \"speed auto\": {}\n  },\n  \"router bgp 64512\": {\n    \"neighbor 172.16.0.1 remote-as 100\": {},\n    \"address-family ipv4\": {\n      \"neighbor 172.16.0.1 activate\": {},\n      \"neighbor 172.16.0.1 prefix-list IN in\": {},\n      \"neighbor 172.16.0.1 prefix-list OUT out\": {}\n    }\n  },\n  \"ip prefix-list IN seq 5 permit 192.168.2.0/24\": {},\n  \"ip prefix-list OUT seq 5 permit 192.168.1.0/24\": {}\n}\n```\n   </td>\n  </tr>\n </tbody>\n</table>\n\n*There is no list but only dicts. Each item may have child items. The nesting level is NOT limited.*\n\nAt this point, you are free to compare the dicts the way you want. However, to that end, you may be interested in existing modules like [DeepDiff](https://github.com/seperman/deepdiff) or the lightweight [IncrementalDiff](#incremental-diff) helper embedded in this module.\n\n**ℹ Depending on your config format, both `indent_char` and `comment_char` can be set at init:**\n\n```py\nIndentedConfig(config, comment_char='#', indent_char=' ') # default values (e.g., for Huawei)\nIndentedConfig(config, comment_char='!')                  # '!' as comment_char (e.g., for Cisco)\nIndentedConfig(config, indent_char='\\t')                  # tab as indent_char\nIndentedConfig(config, sanitize=True)                     # see next section\n```\n\n## Sanitizing\n\nYour config may:\n\n* have trailing spaces\n* have blank lines\n* contain comments\n* not be correctly indented\n\nThe `sanitize()` method has been made to address this. The last point especially would break the tree conversion. The other ones would make some parts of the diff irrelevant.\n\n```py\nfrom diffplus import IndentedConfig\n\nconfig = \"\"\"\n   # a global command badly indented\n   sysname PE\n#\ninterface GigabitEthernet0/0/1\n   # badly indented as well\n   description my-super-description\n ip address 1.1.1.1 255.255.255.0\n#\n\"\"\"\n\nconfig = IndentedConfig(config, comment_char='#')\nprint(config)\nconfig.sanitize()\nprint(config)\n```\n\n<table>\n <thead>\n  <tr>\n   <th>Print before sanitizing ❌</th>\n   <th>Print after sanitizing ✔</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td>\n\n```sh\n \n   # a global command badly indented\n   sysname PE\n#\ninterface GigabitEthernet0/0/1\n   # badly indented as well\n   description my-super-description\n ip address 1.1.1.1 255.255.255.0\n#\n```\n   </td>\n   <td>\n\n```sh\nsysname PE\ninterface GigabitEthernet0/0/1\n description my-super-description\n ip address 1.1.1.1 255.255.255.0\n```\n   </td>\n  </tr>\n </tbody>\n</table>\n\n**ℹ It is recommended to always `sanitize` at init:**\n\n```py\nconfig = IndentedConfig(config, sanitize=True)\n```\n\n## Incremental diff\n\n### Diff only\n\nTo compute the diff just as introduced in the [#problem](#problem) section:\n\n```py\nfrom diffplus import IndentedConfig, IncrementalDiff\n\nconfigA = open('configA.txt').read()\nconfigB = open('configB.txt').read()\n\nconfigA = IndentedConfig(configA, comment_char='!', sanitize=True)\nconfigB = IndentedConfig(configB, comment_char='!', sanitize=True)\ndiff = IncrementalDiff(configA, configB)\n\nprint(diff)\n```\n\nOutput:\n\n```diff\n# items of A to be added in B (computed by IncrementalDiff)\n\n+no ip domain lookup\n interface FastEthernet0/0\n+ no shutdown\n+interface FastEthernet0/0.10\n+ description LAN\n+ encapsulation dot1Q 10\n+ ip address 192.168.1.254 255.255.255.0\n router bgp 64512\n  address-family ipv4\n+  neighbor 172.16.0.1 allowas-in 1\n+  network 192.168.1.0 mask 255.255.255.0\n```\n\n### Merging\n\nAlternatively, we can merge `A` into `B`. It is useful to get a preview of the full config before applying it:\n\n```py\nfrom diffplus import IndentedConfig, IncrementalDiff\n\nconfigA = open('configA.txt').read()\nconfigB = open('configB.txt').read()\n\nconfigA = IndentedConfig(configA, comment_char='!', sanitize=True)\nconfigB = IndentedConfig(configB, comment_char='!', sanitize=True)\ndiff = IncrementalDiff(configA, configB, merge=True)\n\nprint(diff)\n```\n\nOutput:\n\n```diff\n# items of A merged into B (computed by IncrementalDiff)\n\n hostname R1\n interface FastEthernet0/0\n  description LAN\n  no ip address\n  shutdown\n  duplex auto\n  speed auto\n+ no shutdown\n router bgp 64512\n  neighbor 172.16.0.1 remote-as 100\n  address-family ipv4\n   neighbor 172.16.0.1 activate\n   neighbor 172.16.0.1 prefix-list IN in\n   neighbor 172.16.0.1 prefix-list OUT out\n+  neighbor 172.16.0.1 allowas-in 1\n+  network 192.168.1.0 mask 255.255.255.0\n ip prefix-list IN seq 5 permit 192.168.2.0/24\n ip prefix-list OUT seq 5 permit 192.168.1.0/24\n+no ip domain lookup\n+interface FastEthernet0/0.10\n+ description LAN\n+ encapsulation dot1Q 10\n+ ip address 192.168.1.254 255.255.255.0\n```\n\n### Colored diff\n\nThis option is useful to better visualize the changes in the diff:\n\n```py\nfrom diffplus import IndentedConfig, IncrementalDiff\n\nconfigA = open('configA.txt').read()\nconfigB = open('configB.txt').read()\n\nconfigA = IndentedConfig(configA, comment_char='!', sanitize=True)\nconfigB = IndentedConfig(configB, comment_char='!', sanitize=True)\ndiff = IncrementalDiff(configA, configB, merge=True, colored=True)\n\nprint(diff)\n```\n\nOutput:\n\n<table>\n <thead>\n  <tr>\n   <th>Not colored</th>\n   <th>Colored</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td>\n   \n   ![](https://user-images.githubusercontent.com/4362224/224107670-49fa98e3-dbb7-441f-824d-d8d9b62bf79e.png)\n   </td>\n   <td>\n\n   ![](https://user-images.githubusercontent.com/4362224/224107684-33f0d0b7-38c0-4e54-9a16-8f3a7b836c63.png)\n   </td>\n  </tr>\n </tbody>\n</table>\n\nColorization is done through ANSI escape sequences: `\\033[32m` for green color and `\\033[m` for reset color.\n\n### Under the hood\n\nThe incremental diff is computed recursively as a dict you can access (if needed) through the `to_dict()` method:\n\n```py\ndiff = IncrementalDiff(configA, configB, merge=False) # or merge=True\nprint(dumps(diff.to_dict(), indent=2))\n```\n\nOutput:\n\n```json\n{\n  \"+no ip domain lookup\": {},\n  \"interface FastEthernet0/0\": {\n    \"+no shutdown\": {}\n  },\n  \"+interface FastEthernet0/0.10\": {\n    \"description LAN\": {},\n    \"encapsulation dot1Q 10\": {},\n    \"ip address 192.168.1.254 255.255.255.0\": {}\n  },\n  \"router bgp 64512\": {\n    \"address-family ipv4\": {\n      \"+neighbor 172.16.0.1 allowas-in 1\": {},\n      \"+network 192.168.1.0 mask 255.255.255.0\": {}\n    }\n  }\n}\n```\n\nNew items are marked with a `+` so that they can be pretty rendered recursively via the `__str__()` special method:\n\n```py\nprint(diff)\nprint(str(diff)) # equivalent\nprint(diff.__str__()) # equivalent\n```\n\n## Diff using a third-party module\n\nConverting `IndentedConfig` to dict allows for deep comparison using existing modules like [DeepDiff](https://github.com/seperman/deepdiff). This way, you are not stuck with the rather simplistic [IncrementalDiff](#incremental-diff) helper.\n\n```py\nfrom diffplus import IndentedConfig\nfrom deepdiff import DeepDiff\n\nconfigA = open('configA.txt').read()\nconfigB = open('configB.txt').read()\n\nconfigA = IndentedConfig(configA, comment_char='!', sanitize=True)\nconfigB = IndentedConfig(configB, comment_char='!', sanitize=True)\ndiff = DeepDiff(configB.to_dict(), configA.to_dict())\n\nfor item_added in diff['dictionary_item_added']:\n    print(item_added)\n```\n\nOutput:\n\n```py\nroot['no ip domain lookup']\nroot['interface FastEthernet0/0.10']\nroot['interface FastEthernet0/0']['no shutdown']\nroot['router bgp 64512']['address-family ipv4']['neighbor 172.16.0.1 allowas-in 1']\nroot['router bgp 64512']['address-family ipv4']['network 192.168.1.0 mask 255.255.255.0']\n```\n\nBut third-party modules are generally heavier (since they offer more features) and may not do exactly what you want. For example, the above output does not include (on purpose) the children of missing items, e.g., `interface FastEthernet0/0.10` is missing from `B` **as well as its children yet NOT displayed:**\n\n```sh\ninterface FastEthernet0/0.10 # displayed in above output as root['interface FastEthernet0/0.10']\n description LAN                        # not displayed in above output\n encapsulation dot1Q 10                 # not displayed in above output\n ip address 192.168.1.254 255.255.255.0 # not displayed in above output\n```\n\n# Known limitations\n\n## Only additions, no deletions\n\nBecause DiffPlus focuses on merging a config into another one—and not just doing a line-by-line diff—deletions aren't as easy as additions to compute. **How to know that an item of `A` will affect another one in `B`?**\n\nLet's take an example in a network context:\n\n```diff\n# computed by diffplus (only additions)\n\n interface FastEthernet0/0\n  description Some interface\n+ no description\n  ip address 10.0.0.1 255.255.255.0\n  ip address 10.0.0.2 255.255.255.0 secondary\n  ip address 10.0.0.3 255.255.255.0 secondary\n+ no ip address 10.0.0.3 255.255.255.0 secondary\n+ ip address 10.0.0.4 255.255.255.0 secondary\n  speed 10\n+ speed 100\n```\n\nSome of the new items will negate or change existing ones. So we'd like a smarter diff:\n\n```diff\n# NOT computed by diffplus (additions and deletions)\n\n interface FastEthernet0/0\n- description Some interface\n  ip address 10.0.0.1 255.255.255.0\n  ip address 10.0.0.2 255.255.255.0 secondary\n- ip address 10.0.0.3 255.255.255.0 secondary\n+ ip address 10.0.0.4 255.255.255.0 secondary\n- speed 10\n+ speed 100\n```\n\nWe humans are able to compute that diff because we visually identify items and are familiar with the config logic. From an algorithmic point of view, however, it is challenging. Not only it depends on the config grammar and syntax (i.e., what are considered keywords and values) but also on the semantic (e.g., adding an item won't necessarily replace a similar one as it is the case for `secondary` addresses).\n\nThe **closest string match approach** using an helper like [`difflib.get_close_matches()`](https://docs.python.org/3/library/difflib.html#difflib.get_close_matches) is an interesting lead, yet not 100% accurate and it would have over-complexified the module.\n\n## Code-like config\n\nBy essence, DiffPlus is not suited for code diff. Each line is assumed to be unique per indented block. Therefore, the tree conversion won't work well with algorithms as they have statements which repeat in the code.\n\nLet's take an example with pseudocode:\n\n```sh\n# algo.txt\n\nif some_expression then\n first_if_content\nelse\n first_else_content\nfi\nif anoter_expression then\n second_if_content\nelse\n second_else_content\nfi\n```\n\nTree conversion:\n\n```py\nfrom diffplus import IndentedConfig\nfrom json import dumps\n\nalgo = open('algo.txt').read()\nalgo = IndentedConfig(algo)\n\nprint(dumps(algo.to_dict(), indent=4))\n```\n\nOutput:\n\n```json\n{\n    \"if some_expression then\": {\n        \"first_if_content\": {}\n    },\n    \"else\": {\n        \"second_else_content\": {}\n    },\n    \"fi\": {},\n    \"if anoter_expression then\": {\n        \"second_if_content\": {}\n    }\n}\n```\n\nInconsistencies:\n\n* There is only one `fi` instead of twos.\n* Likewise, the first `else` has been overwritten by the second one at the same indentation level.\n\nThis is in accordance with how the module works: it has been designed for config diff, not code diff.\n\n## One character for indentation\n\nFor now, DiffPlus does not support multiple characters as indentation symbol:\n\n```py\nIndentedConfig(config, indent_char='  ')   # 2 spaces (NOT supported)\nIndentedConfig(config, indent_char='    ') # 4 spaces (NOT supported)\nIndentedConfig(config, indent_char='\\t')   # tab char (supported)\n```\n\nThe first two lines will raise an error:\n\n```sh\nValueError: \"indent_char\" must be a char, not an str\n```\n\n*The same limitation applies for `comment_char`.*\n\nA future version may support it if the module gains interest in the community.\n\n# Does DiffPlus reinvent the wheel?\n\nI didn't find a suitable module providing such an incremental and contextual diff simply based on an indented config (NOT necessarily Cisco-based or network-based for the sake of genericity).\n\n* [difflib](https://docs.python.org/3/library/difflib.html) (Python builtin) does a line-by-line diff\n* [DeepDiff](https://github.com/seperman/deepdiff) compares dicts but does not convert an indented text to dict\n* [ConfigTree](https://github.com/Cottonwood-Technology/ConfigTree) only supports YAML and JSON formats\n* [anytree](https://github.com/c0fec0de/anytree) drops the support of the indented text format\n* [diffios](https://github.com/robphoenix/diffios) only supports Cisco format and it is not clear what it does exactly (variable parsing or diff?)\n* [shconfparser](https://github.com/network-tools/shconfparser) (probably the closest one) only supports Cisco format and does not offer diff features\n* [conf_diff](https://developer.cisco.com/codeexchange/github/repo/muhammad-rafi/conf_diff) does a line-by-line diff\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "diffplus",
    "package_url": "https://pypi.org/project/diffplus/",
    "platform": null,
    "project_url": "https://pypi.org/project/diffplus/",
    "project_urls": {
      "Bug Tracker": "https://github.com/angely-dev/diffplus/issues",
      "Homepage": "https://github.com/angely-dev/diffplus"
    },
    "release_url": "https://pypi.org/project/diffplus/1.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Incremental and contextual diff between two indented configs",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17227692,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dbf2098bb54d1630a6fbca2f767727cf705b2499ee5116355056d5ea13fba2e",
          "md5": "b18832fe74d4086b564915ce6e082c65",
          "sha256": "aad314ac642f872b95a9df33c758688dff7550d8314cf0e1a184781d5eb8624a"
        },
        "downloads": -1,
        "filename": "diffplus-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b18832fe74d4086b564915ce6e082c65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7932,
        "upload_time": "2023-02-28T19:39:08",
        "upload_time_iso_8601": "2023-02-28T19:39:08.641458Z",
        "url": "https://files.pythonhosted.org/packages/8d/bf/2098bb54d1630a6fbca2f767727cf705b2499ee5116355056d5ea13fba2e/diffplus-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5001dadef0f9c89fbbfe337e5d318458c267b07d724f35eb4e335fae4e18b934",
          "md5": "7c3a71781bace73b272febd4b3f7330f",
          "sha256": "2827ba03f8aeabe6918d53f2e889c357b07b4121468966ccc0f27964cd59b96f"
        },
        "downloads": -1,
        "filename": "diffplus-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7c3a71781bace73b272febd4b3f7330f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7783,
        "upload_time": "2023-02-28T19:39:10",
        "upload_time_iso_8601": "2023-02-28T19:39:10.754011Z",
        "url": "https://files.pythonhosted.org/packages/50/01/dadef0f9c89fbbfe337e5d318458c267b07d724f35eb4e335fae4e18b934/diffplus-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "722688508108045121569b174aa95cdc9f5284c6e28020c1f689b3284b7e5ba7",
          "md5": "e73e5d88786f51aecaec91ab19467fbd",
          "sha256": "e1db5fc947b76d9ef381560ef2c9d134d256c4adab1f18e06c2fe875ab427c5f"
        },
        "downloads": -1,
        "filename": "diffplus-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e73e5d88786f51aecaec91ab19467fbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8424,
        "upload_time": "2023-03-04T17:43:56",
        "upload_time_iso_8601": "2023-03-04T17:43:56.978362Z",
        "url": "https://files.pythonhosted.org/packages/72/26/88508108045121569b174aa95cdc9f5284c6e28020c1f689b3284b7e5ba7/diffplus-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73b3cf7d772f570daf0556f410bc2cc9cf731f5ae25d42ed99b5d63cac2c2356",
          "md5": "06922b7df433d5ddeee2dc46a2f5907a",
          "sha256": "56aafd5dea62a1e4be6244ecead42be46a01d65790c74170b5a060c927406559"
        },
        "downloads": -1,
        "filename": "diffplus-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "06922b7df433d5ddeee2dc46a2f5907a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8386,
        "upload_time": "2023-03-04T17:43:58",
        "upload_time_iso_8601": "2023-03-04T17:43:58.774653Z",
        "url": "https://files.pythonhosted.org/packages/73/b3/cf7d772f570daf0556f410bc2cc9cf731f5ae25d42ed99b5d63cac2c2356/diffplus-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a0060d33d6023be8fb28844d62c89c1938bb38a752ad981a9f876c069227d3e",
          "md5": "c2114759219df5c0b3b45cc05c669028",
          "sha256": "1c01453f36b7f9d2c845e0aab6b31a544a3922503c4d17d4ac2971e1db8ddb35"
        },
        "downloads": -1,
        "filename": "diffplus-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2114759219df5c0b3b45cc05c669028",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9527,
        "upload_time": "2023-03-07T21:40:43",
        "upload_time_iso_8601": "2023-03-07T21:40:43.937752Z",
        "url": "https://files.pythonhosted.org/packages/2a/00/60d33d6023be8fb28844d62c89c1938bb38a752ad981a9f876c069227d3e/diffplus-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f32e0398468b59014ce480c4b40c11215aeaae1863bd2338550093ce1246c09",
          "md5": "4ab97e57d5957566796df08aaebadb85",
          "sha256": "918fdd2b8a58598ea573af7be2a68dba662bdcec76eadec856ba9d994cf68da3"
        },
        "downloads": -1,
        "filename": "diffplus-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ab97e57d5957566796df08aaebadb85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9535,
        "upload_time": "2023-03-07T21:40:45",
        "upload_time_iso_8601": "2023-03-07T21:40:45.823475Z",
        "url": "https://files.pythonhosted.org/packages/0f/32/e0398468b59014ce480c4b40c11215aeaae1863bd2338550093ce1246c09/diffplus-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d9c43122eb5efeeac6707c3e6c1c33f5fe89420452623394ce242c776df492b",
          "md5": "f100c0022792e0ae6e92f6e590cbf11e",
          "sha256": "6c1e34dfba26c2e7861bf2da3d4d9f05fa9c6b87dcca97d3f9e1b8e2e8928837"
        },
        "downloads": -1,
        "filename": "diffplus-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f100c0022792e0ae6e92f6e590cbf11e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9676,
        "upload_time": "2023-03-09T18:01:04",
        "upload_time_iso_8601": "2023-03-09T18:01:04.864013Z",
        "url": "https://files.pythonhosted.org/packages/1d/9c/43122eb5efeeac6707c3e6c1c33f5fe89420452623394ce242c776df492b/diffplus-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4925b258c465c837933a45589d7fecb23e055c38ae129b504a247bdee141d5bc",
          "md5": "3ae91ed7bb7eb49f3025de576e5aee9b",
          "sha256": "8e4e0398083b3a5c24cf532699172b717d8ba246b50ee43bdf46ea74c7593bc6"
        },
        "downloads": -1,
        "filename": "diffplus-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ae91ed7bb7eb49f3025de576e5aee9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9705,
        "upload_time": "2023-03-09T18:01:06",
        "upload_time_iso_8601": "2023-03-09T18:01:06.198729Z",
        "url": "https://files.pythonhosted.org/packages/49/25/b258c465c837933a45589d7fecb23e055c38ae129b504a247bdee141d5bc/diffplus-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d9c43122eb5efeeac6707c3e6c1c33f5fe89420452623394ce242c776df492b",
        "md5": "f100c0022792e0ae6e92f6e590cbf11e",
        "sha256": "6c1e34dfba26c2e7861bf2da3d4d9f05fa9c6b87dcca97d3f9e1b8e2e8928837"
      },
      "downloads": -1,
      "filename": "diffplus-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f100c0022792e0ae6e92f6e590cbf11e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9676,
      "upload_time": "2023-03-09T18:01:04",
      "upload_time_iso_8601": "2023-03-09T18:01:04.864013Z",
      "url": "https://files.pythonhosted.org/packages/1d/9c/43122eb5efeeac6707c3e6c1c33f5fe89420452623394ce242c776df492b/diffplus-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4925b258c465c837933a45589d7fecb23e055c38ae129b504a247bdee141d5bc",
        "md5": "3ae91ed7bb7eb49f3025de576e5aee9b",
        "sha256": "8e4e0398083b3a5c24cf532699172b717d8ba246b50ee43bdf46ea74c7593bc6"
      },
      "downloads": -1,
      "filename": "diffplus-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3ae91ed7bb7eb49f3025de576e5aee9b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9705,
      "upload_time": "2023-03-09T18:01:06",
      "upload_time_iso_8601": "2023-03-09T18:01:06.198729Z",
      "url": "https://files.pythonhosted.org/packages/49/25/b258c465c837933a45589d7fecb23e055c38ae129b504a247bdee141d5bc/diffplus-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}