{
  "info": {
    "author": "Otto Fowler",
    "author_email": "ottobackwards@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# dotifi\n\n![Tests](https://github.com/palindromicity/dotifi/workflows/Tests/badge.svg?branch=master) [![PyPI version](https://badge.fury.io/py/dotifi.svg)](https://badge.fury.io/py/dotifi) [![Downloads](https://pepy.tech/badge/dotifi)](https://pepy.tech/project/dotifi) [![Downloads](https://pepy.tech/badge/dotifi/month)](https://pepy.tech/project/dotifi/month) [![Downloads](https://pepy.tech/badge/dotifi/week)](https://pepy.tech/project/dotifi/week)\n\nA utility to generate [DOT](https://graphviz.org/doc/info/lang.html) files and images based on [graphviz](https://graphviz.org/documentation/) from the canvas of an [Apache NiFi](https://nifi.apache.org) instance.\n\ndotifi supports\n- connecting to Apache Nifi using [nipyapi](https://nipyapi.readthedocs.io/en/latest/index.html) in the background and generating a graph from the canvas items\n    - Process Groups\n    - Remote Process Groups\n    - Input and Output Ports\n    - Processors\n    - Connections\n- creating [DOT]() files using [Graphviz](https://graphviz.org) and [pygraphviz](http://pygraphviz.github.io/documentation/pygraphviz-1.5/index.html)\n- creating a graphic file in Graphviz supported formats\n- starting with an existing dot file as opposed to building from a live NiFi instance\n- starting from a specific process group\n- controlling the depth of recursion\n- supplying DOT files as templates for configuring\n    - the root graph ( and all children)\n    - Any process group by ID\n- supplying name value pairs ( in yaml configuration file) to override and set [attributes](https://graphviz.gitlab.io/_pages/doc/info/attrs.html)\n    - Processors by id\n    - Remote Process Groups by id\n- ssl, certificates, and auth-tokens\n\n## Install\n\n```bash\n>pip install dotifi\n```\n> with python 3 as your default\n>\n### Sample output\n\n`DOT`\n```\nstrict digraph \"nifi flow\" {\n\tgraph [compound=true,\n\t\tlabel=\"nifi flow\",\n\t\toutputorder=edgesfirst,\n\t\trankdir=LR,\n\t\tratio=1.0\n\t];\n\tnode [fixedsize=false,\n\t\tfontsize=8,\n\t\tlabel=\"\\N\",\n\t\tshape=rectangle,\n\t\tstyle=filled\n\t];\n\tedge [color=\"#1100FF\",\n\t\tstyle=\"setlinewidth(2)\"\n\t];\n\tsubgraph cluster_root_1 {\n\t\tgraph [id=\"351b1dbc-0172-1000-056d-ec78a003b493\",\n\t\t\tlabel=root_1\n\t\t];\n\t\tsubgraph cluster_remote_target {\n\t\t\tgraph [id=\"65f57b35-0172-1000-d805-dec5391bee7e\",\n\t\t\t\tlabel=remote_target\n\t\t\t];\n\t\t\t\"65f5b8db-0172-1000-407f-93e85d1d9f94\"\t[id=\"65f5b8db-0172-1000-407f-93e85d1d9f94\",\n\t\t\t\tlabel=\"Input 1 : INPUT_PORT\",\n\t\t\t\tpos=\"-768.000000,-768.000000\"];\n\t\t\t\"65f629b8-0172-1000-4ced-efa192c35536\"\t[id=\"65f629b8-0172-1000-4ced-efa192c35536\",\n\t\t\t\tlabel=\"log_remote_attributes : LogAttribute\",\n\t\t\t\tpos=\"-344.000000,-344.000000\"];\n\t\t\t\"65f5b8db-0172-1000-407f-93e85d1d9f94\" -> \"65f629b8-0172-1000-4ced-efa192c35536\"\t[label=\"Input to Processor\"];\n\t\t}\n\t\tsubgraph cluster_root_1_1 {\n\t\t\tgraph [id=\"351dbb56-0172-1000-21fa-a4af9fc0dbb1\",\n\t\t\t\tlabel=root_1_1\n\t\t\t];\n\t\t\tsubgraph \"cluster_NiFi Flow\" {\n\t\t\t\tgraph [color=blue,\n\t\t\t\t\tfontcolor=white,\n\t\t\t\t\tid=\"65f8c7d5-0172-1000-a916-0e5562295e08\",\n\t\t\t\t\tlabel=\"http://localhost:8080/nifi : Remote Process Group\",\n\t\t\t\t\tstyle=filled\n\t\t\t\t];\n\t\t\t\t\"37b065f7-232b-30b9-a282-3ea28f75a2a2\"\t[id=\"37b065f7-232b-30b9-a282-3ea28f75a2a2\",\n\t\t\t\t\tlabel=\"Input 1 : INPUT_PORT\"];\n\t\t\t}\n\t\t\t\"b268f335-2a91-44e8-b567-c676c292fd55\"\t[id=\"b268f335-2a91-44e8-b567-c676c292fd55\",\n\t\t\t\tlabel=\"Reformat Date Column : ReplaceText\",\n\t\t\t\tpos=\"1259.009165,1259.009165\"];\n\t\t\t\"25b139c3-db89-4272-59c3-774ce58f0973\"\t[id=\"25b139c3-db89-4272-59c3-774ce58f0973\",\n\t\t\t\tlabel=\"No-Op Termination : UpdateAttribute\",\n\t\t\t\tpos=\"1265.009165,1265.009165\"];\n\t\t\t\"b268f335-2a91-44e8-b567-c676c292fd55\" -> \"25b139c3-db89-4272-59c3-774ce58f0973\"\t[label=success];\n\t\t\t\"b268f335-2a91-44e8-b567-c676c292fd55\" -> \"37b065f7-232b-30b9-a282-3ea28f75a2a2\"\t[label=success];\n\t\t\t\"67626c71-910a-4342-627d-e38cfcbcb924\"\t[id=\"67626c71-910a-4342-627d-e38cfcbcb924\",\n\t\t\t\tlabel=\"Set CSV Content : ReplaceText\",\n\t\t\t\tpos=\"408.000000,408.000000\"];\n\t\t\t\"67626c71-910a-4342-627d-e38cfcbcb924\" -> \"b268f335-2a91-44e8-b567-c676c292fd55\"\t[label=success];\n\t\t\t\"bc3ad300-c93c-430b-fc94-3a32c3020f53\"\t[id=\"bc3ad300-c93c-430b-fc94-3a32c3020f53\",\n\t\t\t\tlabel=\"Generate Empty File : GenerateFlowFile\",\n\t\t\t\tpos=\"356.009165,356.009165\"];\n\t\t\t\"bc3ad300-c93c-430b-fc94-3a32c3020f53\" -> \"67626c71-910a-4342-627d-e38cfcbcb924\"\t[label=success];\n\t\t}\n\t\t\"719d5fb9-cd96-4491-fe7c-e81b3f3bb555\"\t[id=\"719d5fb9-cd96-4491-fe7c-e81b3f3bb555\",\n\t\t\tlabel=\"q=nifi : UpdateAttribute\",\n\t\t\tpos=\"1242.304169,1242.304169\"];\n\t\t\"e829b880-ef17-432a-7c5c-1e3ecdcd690d\"\t[id=\"e829b880-ef17-432a-7c5c-1e3ecdcd690d\",\n\t\t\tlabel=\"Search Google : InvokeHTTP\",\n\t\t\tpos=\"1245.295837,1245.295837\"];\n\t\t\"719d5fb9-cd96-4491-fe7c-e81b3f3bb555\" -> \"e829b880-ef17-432a-7c5c-1e3ecdcd690d\"\t[label=success];\n\t\t\"f96be8b1-78b2-42f2-6ba5-2579f4f6c411\"\t[id=\"f96be8b1-78b2-42f2-6ba5-2579f4f6c411\",\n\t\t\tlabel=\"Source : GenerateFlowFile\",\n\t\t\tpos=\"425.000000,425.000000\"];\n\t\t\"f96be8b1-78b2-42f2-6ba5-2579f4f6c411\" -> \"719d5fb9-cd96-4491-fe7c-e81b3f3bb555\"\t[label=success];\n\t\t\"83ca901a-efe0-4d97-dbca-5c557cefbe6f\"\t[id=\"83ca901a-efe0-4d97-dbca-5c557cefbe6f\",\n\t\t\tlabel=\"HashContent : HashContent\",\n\t\t\tpos=\"1264.422387,1264.422387\"];\n\t\t\"ffcc8819-75f5-4811-e906-434e71a31f26\"\t[id=\"ffcc8819-75f5-4811-e906-434e71a31f26\",\n\t\t\tlabel=\"Route On Status Code : RouteOnAttribute\",\n\t\t\tpos=\"1242.078949,1242.078949\"];\n\t\t\"ffcc8819-75f5-4811-e906-434e71a31f26\" -> \"83ca901a-efe0-4d97-dbca-5c557cefbe6f\"\t[label=200];\n\t\t\"e829b880-ef17-432a-7c5c-1e3ecdcd690d\" -> \"ffcc8819-75f5-4811-e906-434e71a31f26\"\t[label=Original];\n\t\t\"e829b880-ef17-432a-7c5c-1e3ecdcd690d\" -> \"e829b880-ef17-432a-7c5c-1e3ecdcd690d\"\t[label=Retry];\n\t}\n}\n\n```\n`PNG`\n![nifi-canvas.png](sample_output/nifi-canvas.png)\n### poetry\n\ndotifi is maintained using [poetry](https://python-poetry.org/docs/) for dependency management and packaging.\n\n### Getting started for development\n- Install [Graphviz](https://graphviz.org)\n- Clone, fork, or download the [source](https://github.com/palindromicity/dotifi)\n- Install [poetry](https://python-poetry.org/docs/)\n- If required setup [pyenv](https://github.com/pyenv/pyenv) or your preference to get a python 3.8 environment, as poetry will use whatever the current python is.\n    - for example setup pyenv local to the project directory\n- In the source route directory run `poetry install`, this will install all the dependencies\n- Run `peotry run pytest -v` to run the tests and ensure things are working\n- Run `poetry build` then `poetry install` then `poetry run dotifi` with any options to run\n\n#### Setting up [Jetbrains PyCharm](https://www.jetbrains.com/pycharm/) with your virtual python environment\n- see [this reddit answer](https://www.reddit.com/r/pycharm/comments/elga2z/using_pycharm_for_poetrybased_projects/fn1ix60?utm_source=share&utm_medium=web2x)\n\n## Configuration\ndotifi uses [confuse](https://confuse.readthedocs.io/en/latest/) for it's configuration management.\ndotifi will take most of its configuration:\n\n - from commandline parameters\n - from a yaml configuration file specified with the --with-conf-file parameter\n - some combination of the two\n\nIf a configuration file _is_ present, and some configuration value is set both from the commandline and in the configuration,\nthen the commandline is treated as an override for the configuration file.\n\nString values in the configuration file may be entered as shell environment variables, such as $PATH.  Variables are expanded using\n[os.path.expandvars](https://docs.python.org/3/library/os.path.html#os.path.expandvars).\n\n\n```bash\nusage: dotifi [-h] [--with-existing-dot-file WITH_EXISTING_DOT_FILE]\n              [--with-conf-file WITH_CONF_FILE]\n              [--output-dot-file OUTPUT_DOT_FILE]\n              [--output-graphviz-format {canon,cmap,cmapx,cmapx_np,dia,dot,fig,gd,gd2,gif,hpgl,imap,imap_np,ismap,jpe,jpeg,jpg,mif,mp,pcl,pdf,pic,plain,plain-ext,png,ps,ps2,svg,svgz,vml,vmlz,vrml,vtx,wbmp,xdot,xlib}]\n              [--output-graphviz-program {neato,dot,twopi,circo,fdp,nop}]\n              [--output-graphviz-file OUTPUT_GRAPHVIZ_FILE]\n              [--start-at-pg START_AT_PG] [--depth DEPTH]\n              [--nifi-url NIFI_URL] [--using-ssl] [--using-user-pw]\n              [--ca-file CA_FILE] [--client-cert-file CLIENT_CERT_FILE]\n              [--client-key-file CLIENT_KEY_FILE]\n              [--client-key-password CLIENT_KEY_PASSWORD]\n              [--auth-token AUTH_TOKEN]\n              [--auth-token-api-field AUTH_TOKEN_API_FIELD]\n              [--nifi-username NIFI_USERNAME]\n              [--nifi-user-password NIFI_USER_PASSWORD] [--verbose]\n              [--generate-mock-data] [--mock-data-file MOCK_DATA_FILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --with-existing-dot-file WITH_EXISTING_DOT_FILE, -w WITH_EXISTING_DOT_FILE\n                        Output will be based on an existing DOT graph\n                        definition as opposed to being built from NiFi\n  --with-conf-file WITH_CONF_FILE, -c WITH_CONF_FILE\n                        Path to the .yaml file with the configuration. All\n                        options can be set in the configuration, with\n  --output-dot-file OUTPUT_DOT_FILE, -o OUTPUT_DOT_FILE\n                        Path to the gv file to store the dot results to.\n  --output-graphviz-format {canon,cmap,cmapx,cmapx_np,dia,dot,fig,gd,gd2,gif,hpgl,imap,imap_np,ismap,jpe,jpeg,jpg,mif,mp,pcl,pdf,pic,plain,plain-ext,png,ps,ps2,svg,svgz,vml,vmlz,vrml,vtx,wbmp,xdot,xlib}, -f {canon,cmap,cmapx,cmapx_np,dia,dot,fig,gd,gd2,gif,hpgl,imap,imap_np,ismap,jpe,jpeg,jpg,mif,mp,pcl,pdf,pic,plain,plain-ext,png,ps,ps2,svg,svgz,vml,vmlz,vrml,vtx,wbmp,xdot,xlib}\n                        The format of the graphviz generated file. Formats\n                        (not all may be available on every system depending on\n                        how Graphviz was built)\n  --output-graphviz-program {neato,dot,twopi,circo,fdp,nop}\n                        Graphviz layout method to use.\n  --output-graphviz-file OUTPUT_GRAPHVIZ_FILE, -g OUTPUT_GRAPHVIZ_FILE\n                        Path to the graphical file to store the graphviz\n                        results to. Results will be saved with the extension\n                        of the --output-graphviz-format option\n  --start-at-pg START_AT_PG, -s START_AT_PG\n                        The id of the process group to start at. This will be\n                        a uuid. When set the output will start with this\n                        process and it's descendents based on the depth\n                        setting\n  --depth DEPTH, -d DEPTH\n                        The depth to descend to within nested process groups.\n                        Note that the top level canvas is the root process\n                        group. As such a depth of 0 will only output items in\n                        the root canvas and not any process groups it\n                        contains. A value of -1 means unlimited.\n  --nifi-url NIFI_URL, -n NIFI_URL\n                        The url of the NiFi instance to connect to. This is\n                        used if --with-existing is not set.\n  --using-ssl           Flag, when specified it signals that the NiFi\n                        connection requires SSL\n  --using-user-pw       Flag, when specified it signals that the NiFi\n                        connection requires a username and password\n  --ca-file CA_FILE     A PEM file containing certs for the root CA(s) for the\n                        NiFi server\n  --client-cert-file CLIENT_CERT_FILE\n                        A PEM file containing the public certificates for the\n                        user / client identity\n  --client-key-file CLIENT_KEY_FILE\n                        An encrypted (password -protected PEM file containing\n                        the client's secret key\n  --client-key-password CLIENT_KEY_PASSWORD\n                        The password to decrypt the client_key_file\n  --auth-token AUTH_TOKEN\n                        Authorization token string\n  --auth-token-api-field AUTH_TOKEN_API_FIELD\n                        the api_key field name to set the token to. Defaults\n                        to 'tokenAuth'\n  --nifi-username NIFI_USERNAME\n                        The NiFi user name\n  --nifi-user-password NIFI_USER_PASSWORD\n                        The NiFi user password\n  --verbose, -v         Sets the logging level to verbose\n  --generate-mock-data  Generates mock data\n  --mock-data-file MOCK_DATA_FILE\n                        When --generate-mock-data is specified, it will be\n                        written to this file\n```\n\nA sample of the yaml configuration is [here](configurations/sample.yaml)\n\n```yaml\n# All string values in this configuration may be replaced using\n# environmental variables in the form of $VARIABLENAME\n#\n# the version of this configuration\nconfiguration_version : 1\n\n\n#  Flag to set logging to verbose ( debugging level )\nverbose:\n#  Path to an existing DOT graph definition as opposed to being built from NiFi\nwith_existing_dot_file:\n# Path to the dot file to store the dot results to\noutput_dot_file:\n\n#  The format of the graphviz generated file. Formats (not all may be available on every system\n#  depending on how Graphviz was built\n#  \"canon\", \"cmap\", \"cmapx\", \"cmapx_np\", \"dia\", \"dot\", \"fig\", \"gd\", \"gd2\", \"gif\",\n#  \"hpgl\", \"imap\", \"imap_np\", \"ismap\", \"jpe\", \"jpeg\", \"jpg\", \"mif\", \"mp\", \"pcl\", \"pdf\",\n#  \"pic\", \"plain\", \"plain_ext\", \"png\", \"ps\", \"ps2\", \"svg\", \"svgz\", \"vml\", \"vmlz\", \"vrml\",\n#  \"vtx\", \"wbmp\", \"xdot\", \"xlib\"\noutput_graphviz_format:\n\n#  The Graphviz layout to use\n# ‘neato’|’dot’|’twopi’|’circo’|’fdp’|’nop'\noutput_graphviz_program:\n\n#  Path to the dot file to store the graphviz results to. Results will be saved with the extension\n#  output_graphviz_format option\noutput_graphviz_file:\n\n#  The id of the process group to start at.  This will be a uuid.  When set the output will start\n#  with this process and it's decedents based on the depth setting\nstart_at_pg:\n\n#  The depth to descend to within nested process groups.  Note that the top level canvas\n#  is the root process group.  As such a depth of 0 will only output items in the root canvas and\n#  not any process groups it contains.  A value of _1 means unlimited\ndepth:\n\n# The url of the nifi instance to connect to.  This is used if with_existing is not set\nnifi_url:\n\n# Flag, when specified it signals that the NiFi connection requires SSL\nusing_ssl:\n\n# Flag, when specified it signals that the NiFi connection requires a username and password\nusing_user_pw:\n\n# A PEM file containing certs for the root CA(s) for the NiFi serve\nca_file:\n\n# A PEM file containing the public certificates for the user / client identity\nclient_cert_file:\n\n# An encrypted (password _protected PEM file containing the client's secret key\nclient_key_file:\n\n# The password to decrypt the client_key_file\nclient_key_password:\n\n# The NiFi user name\nnifi_user_name:\n\n# The NiFi user password\nnifi_user_password:\n\n# Options for the entire graph\ngraph:\n    # Path to a dot file that contains top level graph definition that sets the properties\n    # and attributes at a graph level\n    # see https://graphviz.org/documentation/ for information on the dot language\n    template: bar.dot\n# Options for specific process groups, by id\nprocess_groups:\n    # the uuid id of the process group\n    351b1dbc-0172-1000-056d-ec78a003b493:\n        # Path to a dot file the contains the graph definition that sets the properties\n        # and attributes at a graph level for this process group and it's descendents\n        template: foo.dot\n# Options for specific remote process groups, by id\n# these values will override or mix in with the defaults\nremote_process_groups:\n    # the uuid of the remote process group\n    35199793-0172-1000-02ea-52da1888a03d:\n        # NODE attributes\n        # see https://graphviz.gitlab.io/_pages/doc/info/attrs.html\n        color: grey\n# Options for specific processors, by id\nprocessors:\n    # the uuid of the processor\n    351b1dbc-0172-1000-056d-ec78a003b49:\n        # NODE attributes\n        # see https://graphviz.gitlab.io/_pages/doc/info/attrs.html\n        color: blue\n```\n\n> command line parameters that are described as `flags` need only be specified without a value to be set to `True`.\n> YAML configuration values however need to be explicitly set to `True` or `False`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/palindromicity/dotifi",
    "keywords": "nifi,graphviz,pygraphvis,nipyapi",
    "license": "Apache-2.0",
    "maintainer": "palindromicity",
    "maintainer_email": "github.palindromicity@gmail.com",
    "name": "dotifi",
    "package_url": "https://pypi.org/project/dotifi/",
    "platform": "",
    "project_url": "https://pypi.org/project/dotifi/",
    "project_urls": {
      "Homepage": "https://github.com/palindromicity/dotifi",
      "Repository": "https://github.com/palindromicity/dotifi",
      "issues": "https://github.com/palindromicity/dotifi/issues"
    },
    "release_url": "https://pypi.org/project/dotifi/0.2.1/",
    "requires_dist": [
      "pygraphviz (>=1.5,<2.0)",
      "nipyapi (>=0.14.3,<0.15.0)",
      "pyyaml (>=5.3.1,<6.0.0)",
      "confuse (>=1.1.0,<2.0.0)",
      "jsonpickle (>=1.4.1,<2.0.0)",
      "wheel (>=0.34.2,<0.35.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Generate DOT files and images from Apache Nifi Flows",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8183397,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d9be00c53d2c2059d2a545c302e63f3519e0933b6a2f5692511339b0b54c0ff",
          "md5": "c426addffe4f7dd21dcb29382f7c417d",
          "sha256": "14b7c9e94bb6cccff5800921e043c8168ae2db0e331ef0f44941dd4ca6d13180"
        },
        "downloads": -1,
        "filename": "dotifi-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c426addffe4f7dd21dcb29382f7c417d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 20641,
        "upload_time": "2020-06-13T18:05:43",
        "upload_time_iso_8601": "2020-06-13T18:05:43.894891Z",
        "url": "https://files.pythonhosted.org/packages/5d/9b/e00c53d2c2059d2a545c302e63f3519e0933b6a2f5692511339b0b54c0ff/dotifi-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2d8b938929dcb47d256be726356c1b0fd4823c225aeae981a4a1834ee399247",
          "md5": "39bcaf671370e431e72b2b3c08a2c115",
          "sha256": "59b9ee8b0cea49bdab2e4061ae6abea4895d185ccf4a04769c7dfc1cfdd221a5"
        },
        "downloads": -1,
        "filename": "dotifi-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "39bcaf671370e431e72b2b3c08a2c115",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 22291,
        "upload_time": "2020-06-13T18:05:46",
        "upload_time_iso_8601": "2020-06-13T18:05:46.217088Z",
        "url": "https://files.pythonhosted.org/packages/e2/d8/b938929dcb47d256be726356c1b0fd4823c225aeae981a4a1834ee399247/dotifi-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8efcd9418f58d499462161ad950cd72fff016ad1669da40779443837d5b67ec7",
          "md5": "659b3945fe4535f9b14ec3455d0ef797",
          "sha256": "7062a2f7bc701c1f92e9814134aea1b8ccd7eaa2a213fd1bda9464b6aa9f6a10"
        },
        "downloads": -1,
        "filename": "dotifi-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "659b3945fe4535f9b14ec3455d0ef797",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 20682,
        "upload_time": "2020-06-13T18:41:23",
        "upload_time_iso_8601": "2020-06-13T18:41:23.848582Z",
        "url": "https://files.pythonhosted.org/packages/8e/fc/d9418f58d499462161ad950cd72fff016ad1669da40779443837d5b67ec7/dotifi-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "241f3082317e1b9cab410a8f7e28c46b4bf970e7a912b110eedc60d2779c1c56",
          "md5": "2f1b070353ca61d85aa72fe9f1fe98f1",
          "sha256": "3d195a97c5565a77a24ecafd5a7c516a05c8370faea212b8ca2ecfc00cb69853"
        },
        "downloads": -1,
        "filename": "dotifi-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2f1b070353ca61d85aa72fe9f1fe98f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 22300,
        "upload_time": "2020-06-13T18:41:25",
        "upload_time_iso_8601": "2020-06-13T18:41:25.266208Z",
        "url": "https://files.pythonhosted.org/packages/24/1f/3082317e1b9cab410a8f7e28c46b4bf970e7a912b110eedc60d2779c1c56/dotifi-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c6cfbc34e100ca3926e4e8cd2aa83b54e743e02c913bde02512f8cbea0cc312",
          "md5": "a0ce9206cc523afce316a8df6e4b5791",
          "sha256": "ea0a07ca1429e35b3700c6bcee9ffa5f6897975c7394f057ca7bd3923109a14a"
        },
        "downloads": -1,
        "filename": "dotifi-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0ce9206cc523afce316a8df6e4b5791",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 20767,
        "upload_time": "2020-06-15T18:15:29",
        "upload_time_iso_8601": "2020-06-15T18:15:29.520457Z",
        "url": "https://files.pythonhosted.org/packages/0c/6c/fbc34e100ca3926e4e8cd2aa83b54e743e02c913bde02512f8cbea0cc312/dotifi-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04027ec024fc377116950eb6303ee41f0e4b92dc7c4537c36050c8a74361655b",
          "md5": "f66f4390d6acec5fdd95762b88b9c19a",
          "sha256": "962745df36e9a30d7f848b9002d85b6cd6b5637ed7991752020bd3a56562795d"
        },
        "downloads": -1,
        "filename": "dotifi-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f66f4390d6acec5fdd95762b88b9c19a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 22410,
        "upload_time": "2020-06-15T18:15:30",
        "upload_time_iso_8601": "2020-06-15T18:15:30.759581Z",
        "url": "https://files.pythonhosted.org/packages/04/02/7ec024fc377116950eb6303ee41f0e4b92dc7c4537c36050c8a74361655b/dotifi-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb9d650bab1b6006cb52ead0aaf7b213f08648fecf88dc6534c7b08c0e9bee94",
          "md5": "e8e1ae730c3cb374623cf4e7c5f2cf12",
          "sha256": "bbaee57563165f08b49117c017d3b3c0b9d92561a559aa03b400b0aca7b0fe17"
        },
        "downloads": -1,
        "filename": "dotifi-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8e1ae730c3cb374623cf4e7c5f2cf12",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 21005,
        "upload_time": "2020-09-11T21:12:28",
        "upload_time_iso_8601": "2020-09-11T21:12:28.746805Z",
        "url": "https://files.pythonhosted.org/packages/eb/9d/650bab1b6006cb52ead0aaf7b213f08648fecf88dc6534c7b08c0e9bee94/dotifi-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e596e8a5168aa3f25967d5810bee5e795728c3e26fd5fe5249651567f07a201",
          "md5": "0f2db99eb5349e588409be74dec5e073",
          "sha256": "a23cca02027499997b9a08b58bd6dbbe3c890d25cd871669bebd338ce7f38981"
        },
        "downloads": -1,
        "filename": "dotifi-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0f2db99eb5349e588409be74dec5e073",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 22989,
        "upload_time": "2020-09-11T21:12:30",
        "upload_time_iso_8601": "2020-09-11T21:12:30.035391Z",
        "url": "https://files.pythonhosted.org/packages/7e/59/6e8a5168aa3f25967d5810bee5e795728c3e26fd5fe5249651567f07a201/dotifi-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "239bc3c375e84a0618e81b0c01e838366b1b2361ce42b48884670dd21b78bd9f",
          "md5": "edaa3f92967bbedaef09e9172c2c8ba2",
          "sha256": "3355271a34ae456d2ca3ca85f56de735c70fbd3fe140486e0660cd8f5da0e3ac"
        },
        "downloads": -1,
        "filename": "dotifi-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edaa3f92967bbedaef09e9172c2c8ba2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 21347,
        "upload_time": "2020-09-14T15:41:14",
        "upload_time_iso_8601": "2020-09-14T15:41:14.374618Z",
        "url": "https://files.pythonhosted.org/packages/23/9b/c3c375e84a0618e81b0c01e838366b1b2361ce42b48884670dd21b78bd9f/dotifi-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a72aca310aa3ec4590e0a619715599889e0f1d5c0ef8d594a46f15cb5bcaeafe",
          "md5": "085252dfbecbe1967387c2d8892e36c6",
          "sha256": "7df7a62ffe3461551acfa7ad152eeaef04cd7d003f5a248cf5823f07059cb578"
        },
        "downloads": -1,
        "filename": "dotifi-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "085252dfbecbe1967387c2d8892e36c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 23522,
        "upload_time": "2020-09-14T15:41:16",
        "upload_time_iso_8601": "2020-09-14T15:41:16.011256Z",
        "url": "https://files.pythonhosted.org/packages/a7/2a/ca310aa3ec4590e0a619715599889e0f1d5c0ef8d594a46f15cb5bcaeafe/dotifi-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0844cde21630b2c2f5759a8cf31fd736095b5035dbf50e66b8678bb816a5195b",
          "md5": "a9cc7b739bd36f31caf43bb3708a3633",
          "sha256": "ce68af8f2a4789f21c33540415a02951cbcdfe967846cdb31eedd42112c3d401"
        },
        "downloads": -1,
        "filename": "dotifi-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9cc7b739bd36f31caf43bb3708a3633",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 21334,
        "upload_time": "2020-09-14T17:08:20",
        "upload_time_iso_8601": "2020-09-14T17:08:20.974781Z",
        "url": "https://files.pythonhosted.org/packages/08/44/cde21630b2c2f5759a8cf31fd736095b5035dbf50e66b8678bb816a5195b/dotifi-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24927dd3fefd1e7dd2487dc450d2474409fcc411d4e95413af4399e8f54be3fe",
          "md5": "14ed19fd7b1be632f32040fda1165d33",
          "sha256": "7728c476182695b9737ad63a03b05b1febecb22360e5c0ddd765a6d87d6cbfb4"
        },
        "downloads": -1,
        "filename": "dotifi-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14ed19fd7b1be632f32040fda1165d33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 23510,
        "upload_time": "2020-09-14T17:08:22",
        "upload_time_iso_8601": "2020-09-14T17:08:22.442857Z",
        "url": "https://files.pythonhosted.org/packages/24/92/7dd3fefd1e7dd2487dc450d2474409fcc411d4e95413af4399e8f54be3fe/dotifi-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0844cde21630b2c2f5759a8cf31fd736095b5035dbf50e66b8678bb816a5195b",
        "md5": "a9cc7b739bd36f31caf43bb3708a3633",
        "sha256": "ce68af8f2a4789f21c33540415a02951cbcdfe967846cdb31eedd42112c3d401"
      },
      "downloads": -1,
      "filename": "dotifi-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a9cc7b739bd36f31caf43bb3708a3633",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 21334,
      "upload_time": "2020-09-14T17:08:20",
      "upload_time_iso_8601": "2020-09-14T17:08:20.974781Z",
      "url": "https://files.pythonhosted.org/packages/08/44/cde21630b2c2f5759a8cf31fd736095b5035dbf50e66b8678bb816a5195b/dotifi-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24927dd3fefd1e7dd2487dc450d2474409fcc411d4e95413af4399e8f54be3fe",
        "md5": "14ed19fd7b1be632f32040fda1165d33",
        "sha256": "7728c476182695b9737ad63a03b05b1febecb22360e5c0ddd765a6d87d6cbfb4"
      },
      "downloads": -1,
      "filename": "dotifi-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "14ed19fd7b1be632f32040fda1165d33",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 23510,
      "upload_time": "2020-09-14T17:08:22",
      "upload_time_iso_8601": "2020-09-14T17:08:22.442857Z",
      "url": "https://files.pythonhosted.org/packages/24/92/7dd3fefd1e7dd2487dc450d2474409fcc411d4e95413af4399e8f54be3fe/dotifi-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}