{
  "info": {
    "author": "IBM Corp",
    "author_email": "daniel.ryszka@pl.ibm.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# AI Lifecycle CLI\nCLI allows to export and import assets from Watson Machine Learning service on Cloud Pack for Data and move them between different spaces.\nIt also allows to manage your WML resources such as spaces, assets and deployments.\nIn general, CLI performs import/export jobs in respective APIs and poll the status of the job, until it's completed (regardless of status).\nWe are supporting scenarios, where we can export assets from WML installed on either CPD version 2.5 or 3.0 and import them back to WML installed on CPD version 3.0. During the export, we can choose if either we'd like to export all assets, all assets of given type or just selected assets.\n\n## How to install\n```bash\n    pip install ai-lifecycle-cli -U\n```\n\n## How to run CLI\n\n### Example\n```\nai-lifecycle-cli export --url=https://<CP4D_HOST> --user=<CP4D_USER> --pass=<CP4D_PASS> --output_dir=./ --export_json_file=./sources.json\n```\n```\nai-lifecycle-cli import --url=https://<CP4D_HOST> --user=<CP4D_USER> --pass=<CP4D_PASS> --input_file=./archive.zip --import_timeout=1200\n```\n\n### Export\nYou can export assets only from Watson Machine Learning service on CP4D in versions:\n- 2.5.0\n- 3.0.0\n\nUsage of `export` command is shown here:\n```\nusage: ai-lifecycle-cli export [-h] --url CPD_URL --user CPD_USER --pass\n                               CPD_PASS --output_dir OUTPUT_DIR\n                               --export_json_file EXPORT_JSON_FILE\n                               [--archive_all] [--export_version {2.5,3.0}]\n                               [--export_timeout EXPORT_TIMEOUT]\n                               [--temp_dir TEMP_DIR]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --url CPD_URL         URL to CP4D\n  --user CPD_USER       Username used for CP4D login\n  --pass CPD_PASS       Password used for CP4D login\n  --output_dir OUTPUT_DIR\n                        Directory, where exported content should be saved\n  --export_json_file EXPORT_JSON_FILE\n                        JSON file, specifying which assets to export from\n                        which projects/spaces\n  --archive_all         Archive all exported content into single ZIP archive\n  --export_version {2.5,3.0}\n                        Version of exported environment - if not provided,\n                        it'll be auto-detected\n  --export_timeout EXPORT_TIMEOUT\n                        Set timeout for export job in seconds\n  --temp_dir TEMP_DIR   Directory for temporary files\n```\n\n#### List of supported assets\n\nList with supported assets for export with their respective names in API:\n- Models: `wml_model`\n- Python Functions: `wml_function`\n- Pipelines: `wml_pipeline`\n- Model Definitions: `wml_model_definitions`\n- Experiments: `wml_experiment`\n- Python Scripts: `script`\n- Shiny Apps: `shiny_asset`\n\n#### How to specify, which assets do you want to export\nFlag `--export_json_file EXPORT_JSON_FILE` is responsible for passing the file with specification of which aasets should be exported from which spaces in source environment.\nSyntax of such file looks like this:\n```\n{\n  \"space\": [\n    {\n      \"guid\": \"<space_guid_1>\"\n    },\n    ...\n    {\n      \"guid\": \"<space_guid_2>\",\n      \"assets\": {\n        \"<asset_type_1>\": \"all\",\n        \"<asset_type_2>\": [\"asset_guid_1\", ...]\n      }\n    },\n    ...\n  ]\n}\n```\nYou need to provivde JSON file with key named `space` - under this key you specify array of space items, which can be defined in few ways:\n1. To specify that you want to export all assets from given space (i.e. `<space_guid_1>`), space item in array would look like this:\n```\n  {\n    \"guid\": \"<space_guid_1>\"\n  }\n```\n2. To specify that you want to export all assets of given type (i.e. `<asset_type_1>` from given space (i.e. `<space_guid_2>`), space item in array would look like this:\n```\n  {\n    \"guid\": \"<space_guid_2>\",\n    \"assets\": {\n      \"<asset_type_1>\": \"all\"\n    }\n  }\n```\n3. To specify that you want to export specified assets (i.e. `\"asset_guid_1\"` and `\"asset_guid_2\"` of given type (i.e. `<asset_type_2>` from given space (i.e. `<space_guid_3>`), space item in array would look like this:\n```\n  {\n    \"guid\": \"<space_guid_3>\",\n    \"assets\": {\n      \"<asset_type_2>\": [\"asset_guid_1\", \"asset_guid_2\"]\n    }\n  }\n```\n\nSample files to use for `--export_json_file` are under `samples` directory.\n\n### Import\nYou can import assets only to Watson Machine Learning service on CP4D in versions:\n- 3.0.0\n\nUsage of `import` command is shown here:\n```\nusage: ai-lifecycle-cli import [-h] --url CPD_URL --user CPD_USER --pass\n                               CPD_PASS --input_file INPUT_FILE\n                               [--import_version {2.5,3.0}]\n                               [--import_name IMPORT_NAME]\n                               [--import_desc IMPORT_DESC]\n                               [--import_timeout IMPORT_TIMEOUT]\n                               [--temp_dir TEMP_DIR]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --url CPD_URL         URL to CP4D (default: None)\n  --user CPD_USER       Username used for CP4D login (default: None)\n  --pass CPD_PASS       Password used for CP4D login (default: None)\n  --input_file INPUT_FILE\n                        Path to exported archive file to be imported (default:\n                        None)\n  --import_version {2.5,3.0}\n                        Version of imported environment - if not provided,\n                        it'll be auto-detected (default: 3.0)\n  --import_name IMPORT_NAME\n                        Name of created container (e.g. space) during import\n                        (default: None)\n  --import_desc IMPORT_DESC\n                        Description of created container (e.g. space) during\n                        import (default: None)\n  --import_timeout IMPORT_TIMEOUT\n                        Set timeout for export job in seconds (default: 600)\n  --temp_dir TEMP_DIR   Directory for temporary files (default: /var/tmp/ai-\n                        lifecycle-cli)\n```\n\n### Managing WML resources\nAI Lifecycle CLI also supports simple management for WML assets and deployments.\nIn sections below, there's a list of supported commands for WML asset and deployment management.\nTo get more information on the commands, use `-h/--help` flag with the command.\n\n#### Assets\nYou can perform the following operations:\n- `asset list` - list all assets persisted in the deployment space\n\n#### Deployments\nYou can perform the following operations:\n- `deployment list` - list all deployments persisted in the deployment space\n- `deployment create` - create new deployment in the deployment space\n- `deployment delete` - delete deployment from the deployment space\n\n#### Spaces\nYou can perform the following operations:\n- `space list` - list all deployment spaces\n- `space delete` - delete deployment space\n\n#### Deployment jobs\nYou can perform the following operations:\n- `deployment-job list` - list all deployment jobs in the deployment space\n- `deployment-job create` - create new deployment job in the deployment space\n- `deployment-job cancel` - cancel running deployment job in the deployment space\n\n## Notes & Limitations\n\nSupporting for now only:\n- export from CP4D version 2.5 and 3.0\n- import to CP4D version 3.0\n\nFlag `--export-timeout` is not applicable for exports from CP4D version 2.5.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.ibm.com/cloud/machine-learning",
    "keywords": "watson-machine-learning,watson-studio,ibm-watson",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ai-lifecycle-cli",
    "package_url": "https://pypi.org/project/ai-lifecycle-cli/",
    "platform": "",
    "project_url": "https://pypi.org/project/ai-lifecycle-cli/",
    "project_urls": {
      "Homepage": "https://www.ibm.com/cloud/machine-learning"
    },
    "release_url": "https://pypi.org/project/ai-lifecycle-cli/1.0.0/",
    "requires_dist": [
      "urllib3 (==1.25.8)",
      "jmespath (==0.9.4)",
      "requests (==2.22.0)",
      "flatten-dict (==0.2.0)",
      "PyGithub (==1.46)",
      "PyJWT (==1.7.1)"
    ],
    "requires_python": ">=3.5",
    "summary": "CLI library for importing, exporting and managing IBM Watson Machine Learning assets.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7533348,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be7f4629cf4327eaec20d93e92ac4394946c04c1e086dc4c5847be0b415f976a",
          "md5": "caa0e78c2518a9b3cab3df9216f8a313",
          "sha256": "97b380a222134da0f958b5d9b16076a57b9354363466aa177561027c3d1d9687"
        },
        "downloads": -1,
        "filename": "ai_lifecycle_cli-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "caa0e78c2518a9b3cab3df9216f8a313",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 41306,
        "upload_time": "2020-06-22T11:05:15",
        "upload_time_iso_8601": "2020-06-22T11:05:15.164525Z",
        "url": "https://files.pythonhosted.org/packages/be/7f/4629cf4327eaec20d93e92ac4394946c04c1e086dc4c5847be0b415f976a/ai_lifecycle_cli-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7dfd306d525e62abe3d5f0c8e29ecfb031ed51653a390f0210e0d2d5bc71c90",
          "md5": "0757858a835bf06ed53f27f2b364b39d",
          "sha256": "bf3755f8537258859021fdf9a3cfa22be52533043aa49f15b00f41226cdd6700"
        },
        "downloads": -1,
        "filename": "ai-lifecycle-cli-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0757858a835bf06ed53f27f2b364b39d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 27536,
        "upload_time": "2020-06-22T11:05:17",
        "upload_time_iso_8601": "2020-06-22T11:05:17.571645Z",
        "url": "https://files.pythonhosted.org/packages/c7/df/d306d525e62abe3d5f0c8e29ecfb031ed51653a390f0210e0d2d5bc71c90/ai-lifecycle-cli-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be7f4629cf4327eaec20d93e92ac4394946c04c1e086dc4c5847be0b415f976a",
        "md5": "caa0e78c2518a9b3cab3df9216f8a313",
        "sha256": "97b380a222134da0f958b5d9b16076a57b9354363466aa177561027c3d1d9687"
      },
      "downloads": -1,
      "filename": "ai_lifecycle_cli-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "caa0e78c2518a9b3cab3df9216f8a313",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 41306,
      "upload_time": "2020-06-22T11:05:15",
      "upload_time_iso_8601": "2020-06-22T11:05:15.164525Z",
      "url": "https://files.pythonhosted.org/packages/be/7f/4629cf4327eaec20d93e92ac4394946c04c1e086dc4c5847be0b415f976a/ai_lifecycle_cli-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7dfd306d525e62abe3d5f0c8e29ecfb031ed51653a390f0210e0d2d5bc71c90",
        "md5": "0757858a835bf06ed53f27f2b364b39d",
        "sha256": "bf3755f8537258859021fdf9a3cfa22be52533043aa49f15b00f41226cdd6700"
      },
      "downloads": -1,
      "filename": "ai-lifecycle-cli-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0757858a835bf06ed53f27f2b364b39d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 27536,
      "upload_time": "2020-06-22T11:05:17",
      "upload_time_iso_8601": "2020-06-22T11:05:17.571645Z",
      "url": "https://files.pythonhosted.org/packages/c7/df/d306d525e62abe3d5f0c8e29ecfb031ed51653a390f0210e0d2d5bc71c90/ai-lifecycle-cli-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}