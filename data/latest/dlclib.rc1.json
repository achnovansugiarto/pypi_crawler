{
  "info": {
    "author": "Keisuke Sehara",
    "author_email": "keisuke.sehara@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# python-dlclib\n\nA wrapper of DeepLabCut for its ease of use.\n\n`dlclib` is supposed to work with almost all single-camera setups of all DLC versions.\n\n## Installation\n\nIt is better building your DeepLabCut environment first, before running:\n\n```bash\n$ pip install dlclib\n```\n\n## Classes\n\n### `dlclib.estimate.TFSession`\n\nA thin wrapper over the DeepLabCut inference network based on TensorFlow.\n\n- `session = TFSession.from_config(cfg)` will return a `TFSession` object\n  using the specified `config.yaml` file of the DeepLabCut project.\n- `session.get_pose(image)` will return a `numpy.ndarray` corresponding to the estimation.\n  for a batch-processing network, use a list of images, or a 4-D uint8 array\n  whose axis 0 correspond to indexes of images.\n- `session.open_writer(path)` opens a CSVWriter at the specified path (see below).\n\n### `dlclib.posture.PostureMapper`\n\nA utility class that maps the output of `TFSession` to a dictionary.\nNote that the current implementation:\n\n- does not care anything about conversion speed.\n- currently only supports non-batch models.\n\n- `mapper = PostureMapper.from_config(cfg)` will return a `PostureMapper` object\n  using the specified `config.yaml` file of the DeepLabCut project.\n- `posedict = mapper.map(pose)` receives the output of `TFSession.get_pose()`,\n  and returns a dictionary. `posedict[part]` is a named tuple that has `x`, `y` and `prob` attributes.\n\n### `dlclib.writer.CSVWriter`\n\nA simple class for writing the estimation into a CSV file.\nThis class _does_ support batch-processing networks.\n\n- `writer = session.open_writer(path)` from a `TFSession` object initializes the writer\n  associated with the inference session.\n- For every video frame, you can call `writer.push(frame)`. It automatically calls\n  `TFSession.get_pose()` internally, and writes its outputs into the file.\n- Calling `writer.flush()` will flush the pended video frames (in case of batch modes;\n  it does not wait for more frames and runs `get_pose()` to writes the estimation).\n- Calling `writer.close()` will flush its internal buffer, close the file and invalidates itself.\n  You can keep using the originating `TFSession` object.\n\nThis class supports the context-manager model, so you can write:\n\n```python\nwith session.open_writer(path) as out:\n    for frame in video_frames:\n        out.push(frame)\n```\n\n## License\n\n2020-2021 Keisuke Sehara, the MIT License",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gwappa/python-dlclib",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dlclib",
    "package_url": "https://pypi.org/project/dlclib/",
    "platform": "",
    "project_url": "https://pypi.org/project/dlclib/",
    "project_urls": {
      "Homepage": "https://github.com/gwappa/python-dlclib"
    },
    "release_url": "https://pypi.org/project/dlclib/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "a wrapper of DeepLabCut for its ease of use.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9210384,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fab8bf4a535b623e4220fe17a1db3cefd51c43a169c6ba7f2166e3d8609bb7f",
          "md5": "e4671417ee203294d87fe33086f1347c",
          "sha256": "947e8ca9fe55124e3e75746a6db66d04480ccb9e3a676be617a8fac8f101aaee"
        },
        "downloads": -1,
        "filename": "dlclib-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e4671417ee203294d87fe33086f1347c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7245,
        "upload_time": "2021-01-23T12:18:16",
        "upload_time_iso_8601": "2021-01-23T12:18:16.774946Z",
        "url": "https://files.pythonhosted.org/packages/4f/ab/8bf4a535b623e4220fe17a1db3cefd51c43a169c6ba7f2166e3d8609bb7f/dlclib-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4fab8bf4a535b623e4220fe17a1db3cefd51c43a169c6ba7f2166e3d8609bb7f",
        "md5": "e4671417ee203294d87fe33086f1347c",
        "sha256": "947e8ca9fe55124e3e75746a6db66d04480ccb9e3a676be617a8fac8f101aaee"
      },
      "downloads": -1,
      "filename": "dlclib-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e4671417ee203294d87fe33086f1347c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7245,
      "upload_time": "2021-01-23T12:18:16",
      "upload_time_iso_8601": "2021-01-23T12:18:16.774946Z",
      "url": "https://files.pythonhosted.org/packages/4f/ab/8bf4a535b623e4220fe17a1db3cefd51c43a169c6ba7f2166e3d8609bb7f/dlclib-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}