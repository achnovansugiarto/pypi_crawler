{
  "info": {
    "author": "Otsuhachi",
    "author_email": "agequodagis.tufuiegoeris@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "- [概要](#概要)\r\n  - [インストール](#インストール)\r\n  - [使い方](#使い方)\r\n  - [メソッド一覧](#メソッド一覧)\r\n  - [Q\\&A](#qa)\r\n\r\n\r\n# 概要\r\n\r\nこのライブラリはjson形式の設定ファイルの読み書きを補助するための基底クラスです。  \r\n`BaseCM`クラスを継承し、`__defaults__`, `<attributes>`を定義するだけで必要な操作を行えるようになります。  \r\n\r\n~~現在~~違うセクションに同じキーを持つような設定ファイルには対応していません。  \r\n**対応しないことに決定しました。**([理由はこちら](#なぜ異なるセクションで同名キーを持てないようにしましたか？))  \r\n\r\nこのライブラリは以下の環境で作成されています。\r\n`Windows10(64bit)`, `Python3.11.1`\r\n\r\n```python\r\n# 違うセクションに同じキーを持つ例\r\n{\r\n    'app': {'name': 'Hello'},\r\n    'default': {'name': 'Python'}\r\n}\r\n```\r\n\r\n## インストール\r\n\r\nインストール\r\n\r\n`pip install otsucfgmng`\r\n\r\nアップデート\r\n\r\n`pip install -U otsucfgmng`\r\n\r\nアンインストール\r\n\r\n`pip uninstall otsucfgmng`\r\n\r\n## 使い方\r\n\r\n1. `otuvalidator`をインポートし、必要なバリデータ、コンバータを使用できるようにする\r\n   - 自作クラスなどを使用したい場合には[OtsuValidator](https://github.com/Otsuhachi/OtsuValidator#%E7%B6%99%E6%89%BF%E8%A6%8F%E5%89%87)や実際のコードを参考に定義する([参考例](#自作クラスを使用する場合に必要なバリデータとコンバータをどう用意すればいいですか？))\r\n1. `otsucfgmng`をインポートし、`BaseCM`を使用できるようにする\r\n1. `BaseCM`を継承したクラスを定義する\r\n   1. 属性`__defaults__`に辞書形式で利用する属性名とその初期値を与える\r\n   1. `__hidden_options__`で隠しオプションを設定する (必要に応じて)\r\n   1. `__defaults__`で宣言した属性名に1.で用意したコンバータを与える\r\n1. 設定ファイルのパスを与えてインスタンスを作成する\r\n1. インスタンスの属性を書き換えて編集を行う\r\n1. `save_cm`を呼び出せば設定ファイルが出力される\r\n\r\n<!-- omit in toc -->\r\n### 実行例-設定ファイル管理クラス\r\n\r\n<!-- no toc -->\r\n- [作成](#作成-設定ファイル管理クラス)\r\n- [読み込み](#読み込み-設定ファイル管理クラス)\r\n\r\n<!-- omit in toc -->\r\n### 作成-設定ファイル管理クラス\r\n\r\n\r\n[実行例](#実行例-設定ファイル管理クラス)に戻る  \r\n\r\n`cfg.json`という設定ファイルを作成していきます。\r\n\r\n```python\r\n\r\n# 1.\r\nfrom otsuvalidator import CBool, CInt, CPath, CString\r\n\r\n# 2.\r\nfrom otsucfgmng import BaseCM\r\n\r\n\r\n# 3.\r\nclass ConfigurationManager(BaseCM):\r\n    # 3.1.\r\n    __defaults__ = {\r\n        'app': {\r\n            'library': 'SampleLibrary.dll',\r\n            'scripts': 'SampleScripts.scrpt',\r\n            'title': 'Sample Program',\r\n            'fullscreen': False\r\n        },\r\n        'audio': {\r\n            'bgm': 100,\r\n            'bgs': 100,\r\n            'se': 100,\r\n            'me': 85\r\n        }\r\n    }\r\n\r\n    # 3.3.\r\n    library = CPath('dll')\r\n    scripts = CPath('scrpt')\r\n    title = CString(1, checker=str.istitle)\r\n    fullscreen = CBool()\r\n    bgm = CInt(0, 100)\r\n    bgs = CInt(0, 100)\r\n    se = CInt(0, 100)\r\n    me = CInt(0, 100)\r\n\r\n\r\n# 4.\r\ncm = ConfigurationManager('cfg.json')\r\n\r\n# 5.\r\ncm.bgm = 99\r\ncm.bgs = 50\r\n\r\n# 6.\r\ncm.save_cm()\r\n```\r\n\r\n上記の処理で作成された`cfg.json`の中身は以下の通りです。  \r\n\r\n```json\r\n\r\n{\r\n    \"app\": {},\r\n    \"audio\": {\r\n        \"bgm\": 99,\r\n        \"bgs\": 50\r\n    }\r\n}\r\n```\r\n\r\n<!-- omit in toc -->\r\n### 読み込み-設定ファイル管理クラス\r\n[実行例](#実行例-設定ファイル管理クラス)に戻る  \r\n\r\n正しい形式で出力された設定ファイルをインスタンスの生成時に与えると自動で設定を読み込みます。\r\n\r\n```python\r\n\r\nfrom otsuvalidator import CBool, CInt, CPath, CString\r\n\r\nfrom otsucfgmng import BaseCM\r\n\r\n\r\nclass ConfigurationManager(BaseCM):\r\n    __defaults__ = {\r\n        'app': {\r\n            'library': 'SampleLibrary.dll',\r\n            'scripts': 'SampleScripts.scrpt',\r\n            'title': 'Sample Program',\r\n            'fullscreen': False\r\n        },\r\n        'audio': {\r\n            'bgm': 100,\r\n            'bgs': 100,\r\n            'se': 100,\r\n            'me': 85\r\n        }\r\n    }\r\n    library = CPath('dll')\r\n    scripts = CPath('scrpt')\r\n    title = CString(1, checker=str.istitle)\r\n    fullscreen = CBool()\r\n    bgm = CInt(0, 100)\r\n    bgs = CInt(0, 100)\r\n    se = CInt(0, 100)\r\n    me = CInt(0, 100)\r\n\r\n# コンテキストマネージャを使用すると自動でsave_cmされます。\r\nwith ConfigurationManager('cfg.json') as cm:\r\n    print(cm.user_cm())\r\n    cm.fullscreen = 'yes'\r\n    print(cm.user_cm())\r\n```\r\n\r\n```python\r\n### 出力は以下のようになります ###\r\n{'app': {}, 'audio': {'bgs': 50, 'bgm': 99}}\r\n{'app': {'fullscreen': True}, 'audio': {'bgs': 50, 'bgm': 99}}\r\n```\r\n\r\n\r\n上記の処理で作成された`cfg.json`の中身は以下の通りです。  \r\n\r\n\r\n```json\r\n\r\n{\r\n    \"app\": {\r\n        \"fullscreen\": true\r\n    },\r\n    \"audio\": {\r\n        \"bgs\": 50,\r\n        \"bgm\": 99\r\n    }\r\n}\r\n```\r\n\r\n<!-- omit in toc -->\r\n### 隠しオプション\r\n\r\n[先ほどのコード](#読み込み-設定ファイル管理クラス)に隠しオプションを追加します。  \r\n方法はシンプルで、`__hidden_options__`に対象の属性名のタプルを渡すだけです。  \r\n今回は`fullscreen`と`me`属性を隠しオプションにしてみます。\r\n\r\n\r\n```python\r\n\r\nfrom otsuvalidator import CBool, CInt, CPath, CString\r\n\r\nfrom otsucfgmng import BaseCM\r\n\r\n\r\nclass ConfigurationManager(BaseCM):\r\n    __defaults__ = {\r\n        'app': {\r\n            'library': 'SampleLibrary.dll',\r\n            'scripts': 'SampleScripts.scrpt',\r\n            'title': 'Sample Program',\r\n            'fullscreen': False\r\n        },\r\n        'audio': {\r\n            'bgm': 100,\r\n            'bgs': 100,\r\n            'se': 100,\r\n            'me': 85\r\n        }\r\n    }\r\n    __hidden_options__ = ('fullscreen', 'me')  # この行を追加\r\n    library = CPath('dll')\r\n    scripts = CPath('scrpt')\r\n    title = CString(1, checker=str.istitle)\r\n    fullscreen = CBool()\r\n    bgm = CInt(0, 100)\r\n    bgs = CInt(0, 100)\r\n    se = CInt(0, 100)\r\n    me = CInt(0, 100)\r\n\r\n\r\nwith ConfigurationManager('cfg.json') as cm:\r\n    print(cm.cfg_to_str_cm(True))\r\n\r\n```\r\n\r\n出力\r\n\r\n```json\r\n\r\n{\r\n    \"defaults\": {\r\n        \"app\": {\r\n            \"fullscreen\": false,\r\n            \"library\": \"SampleLibrary.dll\",\r\n            \"scripts\": \"SampleScripts.scrpt\",\r\n            \"title\": \"Sample Program\"\r\n        },\r\n        \"audio\": {\r\n            \"bgm\": 100,\r\n            \"bgs\": 100,\r\n            \"se\": 100\r\n        }\r\n    },\r\n    \"user\": {\r\n        \"app\": {\r\n            \"fullscreen\": true\r\n        },\r\n        \"audio\": {\r\n            \"bgm\": 99,\r\n            \"bgs\": 50\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n`cfg.json`は[ここ](#読み込み-設定ファイル管理クラス)で作成されたものが存在する前提になります。  \r\n隠しオプションに設定した`me`は表示されていませんが、`fullscreen`は表示されていることがわかるかと思います。  \r\nこれは`fullscreen`が変更可能であることを知っている場合には隠す意味がないからです。\r\n\r\n\r\n## メソッド一覧\r\n\r\n`argparse`や`GUI`などで設定項目を編集するための補助を想定しています。  \r\n`show`コマンドを作成して`cfg_to_str_cm`を制御するなど、自身のUIに合うように紐づけて使ってください。\r\n\r\n名前|概要|戻り値|戻り値型\r\n:--:|:--|:--:|:--:\r\ncfg_to_str_cm|設定を`json.dumps`して返す<br>`all`を`True`にしている場合は標準設定も表示される<br>ユーザが変更していない`__hidden_options__`は表示されない<br>ユーザに設定を見せる場合にはこのメソッドを使って出力する|設定|str\r\nload_cm|設定ファイルを読み込む<br>`__init__`から勝手に呼び出されるので、基本的に使用する必要はない||None\r\nsave_cm|現在の設定を書き出す<br>コンテキストマネージャを使用していれば勝手に呼び出される||None\r\nreset_cm|各属性を初期値に戻す||None\r\ndefaults_cm|`__defaults__`のコピーを返す|初期設定|dict\r\nuser_cm|ユーザが変更した属性の辞書を返す|変更された設定|dict\r\nkey_place_cm|各属性がどのセクションに属するかを記録した辞書を返す<br>ユーザにアクセスを許すと`__hidden_options__`が意味をなくす|属性の所属先|dict\r\nattributes_cm|設定項目の一覧を返す<br>ユーザにアクセスを許すと`__hidden_options__`が意味をなくす|設定項目の一覧|set\r\n\r\n\r\n\r\n## Q&A\r\n\r\n以下の説明で`cm`が登場した場合、ユーザが定義した設定ファイル管理クラスのインスタンスだと解釈してください。\r\n\r\n- [なぜ異なるセクションで同名キーを持てないようにしましたか？](#なぜ異なるセクションで同名キーを持てないようにしましたか？)\r\n- [自作クラスを使用する場合に必要なバリデータとコンバータをどう用意すればいいですか？](#自作クラスを使用する場合に必要なバリデータとコンバータをどう用意すればいいですか？)\r\n\r\n\r\n\r\n<!-- omit in toc -->\r\n### なぜ異なるセクションで同名キーを持てないようにしましたか？\r\n\r\n1. 残念ながらライブラリ作成者の技術的な面も大きいです。\r\n1. 後述する理由を克服、緩和する方法が追加、あるいは理解できれば異なるセクションでの同名キーを持てるようになる可能性も**なくはないです**。\r\n\r\nロガーの設定ファイルなど、異なるセクションで同名キーを持ちたい状況はありますが、それに対応する場合、アクセスが複雑になりすぎる恐れがあります。  \r\n\r\n例えば、現在の属性へのアクセス`cm.<key>`に加えて、辞書を持つキーを`Section`クラスとして変換すれば`cm.<section>.<key>`, `cm.<sectionA>.<sectionB>.~.<key>`というように管理することは技術的に可能になります。\r\n\r\nしかしそうなると、[実行例](#実行例)で使用したような構造の設定ではアクセスが煩雑になるデメリットもあります。  \r\n`cm.fullscreen`でアクセスしていたものが`cm.app.fullscreen`となる等。  \r\nまた、動的にクラスを生成する都合上、コード入力支援が受けられず、ヒューマンエラーのリスクも上がってしまいます。\r\n\r\n<!-- omit in toc -->\r\n### 自作クラスを使用する場合に必要なバリデータとコンバータをどう用意すればいいですか？\r\n\r\n1. `otsuvalidator.bases`から`Converter`, `Validator`をインポートし、使用できるようにする\r\n   1. その他必要なライブラリをインポート\r\n1. 自作クラスを定義する\r\n   1. 好きなようにクラスを設計する (`__eq__`メソッドを定義していない場合`__hidden_options__`が正常に機能しない場合があります)\r\n   1. `__str__`か`to_json`メソッドを定義する\r\n1. 自作クラスに対応した`Validator`を定義する(以下そのValidatorを`VMyClass`とする)\r\n1. `VMyClass`と`Converter`を継承した`CMyClass`を定義する\r\n1. [使い方](#使い方)どおり\r\n\r\n\r\n<!-- omit in toc -->\r\n#### 実行例-自作クラスの使用\r\n\r\n<!-- no toc -->\r\n- [作成](#作成-自作クラスの使用)\r\n- [読み込み](#読み込み-自作クラスの使用)\r\n\r\n\r\n<!-- omit in toc -->\r\n##### 作成-自作クラスの使用\r\n\r\n[実行例](#実行例-自作クラスの使用)に戻る  \r\n\r\n`my_company.json`という設定ファイルを作成していきます。  \r\n\r\n`ConfigurationManager`では`json.dump`できない属性は`otsucfgmng.funcs.support_json_dump`関数で変換を試みます(※独自に指定しない限り)  \r\nこの関数では`to_json`を持つクラスを`cls.to_json`で、それ以外のクラスを`str(cls)`で変換します。  \r\nなので、`cls.to_json`で返る値を`cls`に復元できるような`Converter`を定義すれば読み込み時に復元されます。\r\n\r\n```python\r\n\r\n# 1. & 1.1.\r\nfrom typing import Any\r\n\r\nfrom otsuvalidator import CNoneable\r\nfrom otsuvalidator.bases import Converter, Validator\r\n\r\nfrom otsucfgmng import BaseCM\r\n\r\n\r\n# 2.\r\nclass Person:\r\n    # 2.1.\r\n    def __init__(self, name: str, age: int, gender: str):\r\n        self.name = name\r\n        self.age = age\r\n        self.gender = gender\r\n\r\n    def show_profile(self):\r\n        print(self)\r\n\r\n    # 2.2.\r\n    def __str__(self) -> str:\r\n        data = (\r\n            ('名前', self.name),\r\n            ('年齢', self.age),\r\n            ('性', self.gender),\r\n        )\r\n        prof = []\r\n        for k, v in data:\r\n            prof.append(f'{k}\\t: {v}')\r\n        prof = '\\n'.join(prof)\r\n        return prof\r\n\r\n    def to_json(self) -> dict:\r\n        data = {'name': self.name, 'age': self.age, 'gender': self.gender}\r\n        return data\r\n\r\n\r\n# 3.\r\nclass VPerson(Validator):\r\n    def validate(self, value: Any) -> Person:\r\n        if type(value) is not Person:\r\n            msg = self.ERRMSG('Person型である必要があります', value)\r\n            raise TypeError(msg)\r\n        return value\r\n\r\n\r\n# 4.\r\nclass CPerson(VPerson, Converter):\r\n    def validate(self, value: Any) -> Person:\r\n        if type(value) is not Person:\r\n            try:\r\n                if isinstance(value, dict):\r\n                    value = Person(**value)\r\n                else:\r\n                    raise TypeError\r\n            except:\r\n                msg = self.ERRMSG('Person型として扱える必要があります。', value)\r\n                raise TypeError(msg)\r\n        return super().validate(value)\r\n\r\n    def super_validate(self, value: Any) -> Person:\r\n        return super().super_validate(value)\r\n\r\n\r\n# 5.\r\nclass ConfigurationManager(BaseCM):\r\n    __defaults__ = {\r\n        'president': Person('山田太郎', 28, '男'),\r\n        'employee': {\r\n            'director': Person('部長花子', 28, '女'),\r\n            'manager': Person('課長夢', 28, '女'),\r\n            'chief': Person('係長次郎', 28, '男')\r\n        }\r\n    }\r\n    president = CPerson()\r\n    director = CNoneable(CPerson())\r\n    manager = CNoneable(CPerson())\r\n    chief = CNoneable(CPerson())\r\n\r\n\r\nwith ConfigurationManager('my_company.json') as cm:\r\n    cm.president = Person('乙八', 28, '男')\r\n    cm.director = Person('部長夢', 28, '女')\r\n    cm.manager = None\r\n    cm.chief = None\r\n```\r\n\r\n上記の処理で作成された`my_company.json`の中身は以下の通りです。  \r\n\r\n\r\n```json\r\n\r\n{\r\n    \"employee\": {\r\n        \"chief\": null,\r\n        \"manager\": null,\r\n        \"director\": {\r\n            \"name\": \"部長夢\",\r\n            \"age\": 28,\r\n            \"gender\": \"女\"\r\n        }\r\n    },\r\n    \"president\": {\r\n        \"name\": \"乙八\",\r\n        \"age\": 28,\r\n        \"gender\": \"男\"\r\n    }\r\n}\r\n```\r\n\r\n定義通り`Person`クラスは`person.to_json`を通して辞書形式に変換されていることがわかります。\r\n\r\n<!-- omit in toc -->\r\n##### 読み込み-自作クラスの使用\r\n\r\n[実行例](#実行例-自作クラスの使用)に戻る  \r\n\r\n```python\r\n\r\n# 1. & 1.1.\r\nfrom typing import Any\r\n\r\nfrom otsuvalidator import CNoneable\r\nfrom otsuvalidator.bases import Converter, Validator\r\n\r\nfrom otsucfgmng import BaseCM\r\n\r\n\r\n# 2.\r\nclass Person:\r\n    # 2.1.\r\n    def __init__(self, name: str, age: int, gender: str):\r\n        self.name = name\r\n        self.age = age\r\n        self.gender = gender\r\n\r\n    def show_profile(self):\r\n        print(self)\r\n\r\n    # 2.2.\r\n    def __str__(self) -> str:\r\n        data = (\r\n            ('名前', self.name),\r\n            ('年齢', self.age),\r\n            ('性', self.gender),\r\n        )\r\n        prof = []\r\n        for k, v in data:\r\n            prof.append(f'{k}\\t: {v}')\r\n        prof = '\\n'.join(prof)\r\n        return prof\r\n\r\n    def to_json(self) -> dict:\r\n        data = {'name': self.name, 'age': self.age, 'gender': self.gender}\r\n        return data\r\n\r\n\r\n# 3.\r\nclass VPerson(Validator):\r\n    def validate(self, value: Any) -> Person:\r\n        if type(value) is not Person:\r\n            msg = self.ERRMSG('Person型である必要があります', value)\r\n            raise TypeError(msg)\r\n        return value\r\n\r\n\r\n# 4.\r\nclass CPerson(VPerson, Converter):\r\n    def validate(self, value: Any) -> Person:\r\n        if type(value) is not Person:\r\n            try:\r\n                if isinstance(value, dict):\r\n                    value = Person(**value)\r\n                else:\r\n                    raise TypeError\r\n            except:\r\n                msg = self.ERRMSG('Person型として扱える必要があります。', value)\r\n                raise TypeError(msg)\r\n        return super().validate(value)\r\n\r\n    def super_validate(self, value: Any) -> Person:\r\n        return super().super_validate(value)\r\n\r\n\r\n# 5.\r\nclass ConfigurationManager(BaseCM):\r\n    __defaults__ = {\r\n        'president': Person('山田太郎', 28, '男'),\r\n        'employee': {\r\n            'director': Person('部長花子', 28, '女'),\r\n            'manager': Person('課長夢', 28, '女'),\r\n            'chief': Person('係長次郎', 28, '男')\r\n        }\r\n    }\r\n    president = CPerson()\r\n    director = CNoneable(CPerson())\r\n    manager = CNoneable(CPerson())\r\n    chief = CNoneable(CPerson())\r\n\r\n\r\nwith ConfigurationManager('my_company.json') as cm:\r\n    for i, key in enumerate(('president', 'director', 'manager', 'chief')):\r\n        if i:\r\n            print('-' * 75)\r\n        print(f'{key}\\n{getattr(cm,key)}')\r\n\r\n```\r\n\r\n```console\r\n\r\n### 出力は以下のようになります ###\r\npresident\r\n名前    : 乙八\r\n年齢    : 28\r\n性      : 男\r\n---------------------------------------------------------------------------\r\ndirector\r\n名前    : 部長夢\r\n年齢    : 28\r\n性      : 女\r\n---------------------------------------------------------------------------\r\nmanager\r\nNone\r\n---------------------------------------------------------------------------\r\nchief\r\nNone\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Otsuhachi/OtsuConfigurationManager.git",
    "keywords": "Python ConfigurationManager Configure json",
    "license": "MIT License  Copyright (c) 2021 Otsuhachi  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "otsucfgmng",
    "package_url": "https://pypi.org/project/otsucfgmng/",
    "platform": null,
    "project_url": "https://pypi.org/project/otsucfgmng/",
    "project_urls": {
      "Homepage": "https://github.com/Otsuhachi/OtsuConfigurationManager.git"
    },
    "release_url": "https://pypi.org/project/otsucfgmng/1.3.2.311/",
    "requires_dist": [
      "otsuvalidator",
      "otsutil"
    ],
    "requires_python": ">=3.11",
    "summary": "設定ファイルを扱うクラスを生成するライブラリです。",
    "version": "1.3.2.311",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16506662,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb44c6bf2a1c428e23cf2fba382ea1635e51d9173a1a90379c3db5ae26919bbe",
          "md5": "913165a333ab599529012476825632f8",
          "sha256": "5e9a3f6a1ba49044061876529fb973485542aa72bf675633ee21da98c963955f"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "913165a333ab599529012476825632f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7812,
        "upload_time": "2021-09-12T17:19:11",
        "upload_time_iso_8601": "2021-09-12T17:19:11.786121Z",
        "url": "https://files.pythonhosted.org/packages/bb/44/c6bf2a1c428e23cf2fba382ea1635e51d9173a1a90379c3db5ae26919bbe/otsucfgmng-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ea23f60a7704df81d553783a915012b4d7644c2d6927b1346ef95a5b99b7338",
          "md5": "9d8d202e8a09bf9d1d9a2f86db965103",
          "sha256": "3cc3be18bf5ef8202385d4847d4dbcb35e5727474e9c40f19b0c55cb4b4f77ff"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d8d202e8a09bf9d1d9a2f86db965103",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10290,
        "upload_time": "2021-09-15T00:17:12",
        "upload_time_iso_8601": "2021-09-15T00:17:12.744941Z",
        "url": "https://files.pythonhosted.org/packages/4e/a2/3f60a7704df81d553783a915012b4d7644c2d6927b1346ef95a5b99b7338/otsucfgmng-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ac920aba9d324f61156df2d7297bc19aa61dabeda6c6e6a29c7c7384717601b",
          "md5": "aa6d1f5dda3eac1495c47bf9213180c8",
          "sha256": "8b5ea0e4a6ba555014c256f5c1c88f5da838e19b6a77864de4c02f262524f2c4"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa6d1f5dda3eac1495c47bf9213180c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11709,
        "upload_time": "2021-09-21T22:33:12",
        "upload_time_iso_8601": "2021-09-21T22:33:12.576288Z",
        "url": "https://files.pythonhosted.org/packages/2a/c9/20aba9d324f61156df2d7297bc19aa61dabeda6c6e6a29c7c7384717601b/otsucfgmng-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d35c81fb8273fb6739912122dd798beacb70ca4c4a8137ba9eecc95b91af4ab",
          "md5": "1a6210ad63c691d02cd3c24d33b43a4c",
          "sha256": "23620f3c63cb3e2e5194e222e370cf50684b4ab618a18849b6b9f793ab9c0313"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a6210ad63c691d02cd3c24d33b43a4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11711,
        "upload_time": "2021-09-22T18:32:23",
        "upload_time_iso_8601": "2021-09-22T18:32:23.221496Z",
        "url": "https://files.pythonhosted.org/packages/8d/35/c81fb8273fb6739912122dd798beacb70ca4c4a8137ba9eecc95b91af4ab/otsucfgmng-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65e82ef27bd5f675a57f96e72cd4ac50262a114fbd4e81cbecfaa898ebeb13e9",
          "md5": "98a3e796549a2e1ad887fb08f16cd58d",
          "sha256": "dfb9207f30c722044e4dc0e27e8e0008f32343af253362d4367e8bc8696a6874"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98a3e796549a2e1ad887fb08f16cd58d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11793,
        "upload_time": "2021-09-22T19:00:05",
        "upload_time_iso_8601": "2021-09-22T19:00:05.916334Z",
        "url": "https://files.pythonhosted.org/packages/65/e8/2ef27bd5f675a57f96e72cd4ac50262a114fbd4e81cbecfaa898ebeb13e9/otsucfgmng-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0.37": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "919ef642f96f8d8f42af088dd6876a62444449a185d0957774c9666db288f7d0",
          "md5": "080f9fbbac06485113ea59b6f4f6606a",
          "sha256": "5868fa8bc5ac01946ccaa4dd7ce066cd0f06f301dee50b668dacfb3d62c9cfbd"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.3.0.37-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "080f9fbbac06485113ea59b6f4f6606a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12307,
        "upload_time": "2023-01-15T02:09:40",
        "upload_time_iso_8601": "2023-01-15T02:09:40.013378Z",
        "url": "https://files.pythonhosted.org/packages/91/9e/f642f96f8d8f42af088dd6876a62444449a185d0957774c9666db288f7d0/otsucfgmng-1.3.0.37-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5ad3ebff6fd149e91a39735e123e2a138b1ebe07196a30c5322617f676a0533",
          "md5": "a3943b8034d1cac71cb48900963df411",
          "sha256": "3da9807712ed631981f0d66770a2c6238c42105af49baa1bb8a30115d92df551"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.3.0.37.tar.gz",
        "has_sig": false,
        "md5_digest": "a3943b8034d1cac71cb48900963df411",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15529,
        "upload_time": "2023-01-15T02:09:42",
        "upload_time_iso_8601": "2023-01-15T02:09:42.435989Z",
        "url": "https://files.pythonhosted.org/packages/a5/ad/3ebff6fd149e91a39735e123e2a138b1ebe07196a30c5322617f676a0533/otsucfgmng-1.3.0.37.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1.311": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19dc8a376f6a76cfe0fb45153605dad6a303c1ae0665a372174c1af5c43593ba",
          "md5": "977e46b7315dc8d68ebefa6cad0b06bd",
          "sha256": "14079b9e30a3ad570bb4cb89c4822080c7a0ecb374b0fa1690176bde7be0fcc7"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.3.1.311-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "977e46b7315dc8d68ebefa6cad0b06bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.11",
        "size": 12299,
        "upload_time": "2023-01-15T02:11:57",
        "upload_time_iso_8601": "2023-01-15T02:11:57.501630Z",
        "url": "https://files.pythonhosted.org/packages/19/dc/8a376f6a76cfe0fb45153605dad6a303c1ae0665a372174c1af5c43593ba/otsucfgmng-1.3.1.311-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6eb35b828836157d3aa7c5c8d5e4e230b3b50a27f9b7e4028cfd1816ab964450",
          "md5": "656bfa12109739e02ced4e5a0842d6fc",
          "sha256": "af81df593cbb3e4c1727a280426fac76a66556724dc78474361fabc7370a1668"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.3.1.311.tar.gz",
        "has_sig": false,
        "md5_digest": "656bfa12109739e02ced4e5a0842d6fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.11",
        "size": 15513,
        "upload_time": "2023-01-15T02:11:59",
        "upload_time_iso_8601": "2023-01-15T02:11:59.716208Z",
        "url": "https://files.pythonhosted.org/packages/6e/b3/5b828836157d3aa7c5c8d5e4e230b3b50a27f9b7e4028cfd1816ab964450/otsucfgmng-1.3.1.311.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2.311": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "795c19e7d3255018a5c96cdcac5b47bbca9a80a70245992ac520e54b4908cba0",
          "md5": "e585d4de23488d06ae5310c01abc27eb",
          "sha256": "a09f7e0b3503dc5f193026974f9f2e513debc877c85b1d4b378332ad53391363"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.3.2.311-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e585d4de23488d06ae5310c01abc27eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.11",
        "size": 12307,
        "upload_time": "2023-01-20T22:09:25",
        "upload_time_iso_8601": "2023-01-20T22:09:25.030823Z",
        "url": "https://files.pythonhosted.org/packages/79/5c/19e7d3255018a5c96cdcac5b47bbca9a80a70245992ac520e54b4908cba0/otsucfgmng-1.3.2.311-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1099f696a9a1bc042276258d3d14a4fa07af4d1f903377cc9fc8929199dd215",
          "md5": "04a1bd2c67e9521dafe7c6c0b17d22e2",
          "sha256": "80b7b6bd5e54b798aef23c0b6a7057c307601cf6b5fc3e90962584262eaefa12"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.3.2.311.tar.gz",
        "has_sig": false,
        "md5_digest": "04a1bd2c67e9521dafe7c6c0b17d22e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.11",
        "size": 15555,
        "upload_time": "2023-01-20T22:09:26",
        "upload_time_iso_8601": "2023-01-20T22:09:26.815265Z",
        "url": "https://files.pythonhosted.org/packages/f1/09/9f696a9a1bc042276258d3d14a4fa07af4d1f903377cc9fc8929199dd215/otsucfgmng-1.3.2.311.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2.37": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ab3366e0fc886e123d54bb48e4b571885cf9ad4dc832c25ec4ceb6fa4443e8c",
          "md5": "b83bb1abfcd7459fecd743bc7a44a047",
          "sha256": "9aced4e0c8f3914af10957ea92678fa642368ac47277d833bceb76c1e541af33"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.3.2.37-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b83bb1abfcd7459fecd743bc7a44a047",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12317,
        "upload_time": "2023-01-20T22:11:12",
        "upload_time_iso_8601": "2023-01-20T22:11:12.469432Z",
        "url": "https://files.pythonhosted.org/packages/4a/b3/366e0fc886e123d54bb48e4b571885cf9ad4dc832c25ec4ceb6fa4443e8c/otsucfgmng-1.3.2.37-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88e1c6d0ba8576216044e5bb955fce3d015a00d29b7a2bb0493452ea925a5779",
          "md5": "3647fa6a5677dcf7d7ab854d8a488ee5",
          "sha256": "8e5f5e38758dbd1e1755b928f9e9e617586a39ba29cf9d982088ac393fd9263c"
        },
        "downloads": -1,
        "filename": "otsucfgmng-1.3.2.37.tar.gz",
        "has_sig": false,
        "md5_digest": "3647fa6a5677dcf7d7ab854d8a488ee5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15537,
        "upload_time": "2023-01-20T22:11:14",
        "upload_time_iso_8601": "2023-01-20T22:11:14.752772Z",
        "url": "https://files.pythonhosted.org/packages/88/e1/c6d0ba8576216044e5bb955fce3d015a00d29b7a2bb0493452ea925a5779/otsucfgmng-1.3.2.37.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "795c19e7d3255018a5c96cdcac5b47bbca9a80a70245992ac520e54b4908cba0",
        "md5": "e585d4de23488d06ae5310c01abc27eb",
        "sha256": "a09f7e0b3503dc5f193026974f9f2e513debc877c85b1d4b378332ad53391363"
      },
      "downloads": -1,
      "filename": "otsucfgmng-1.3.2.311-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e585d4de23488d06ae5310c01abc27eb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.11",
      "size": 12307,
      "upload_time": "2023-01-20T22:09:25",
      "upload_time_iso_8601": "2023-01-20T22:09:25.030823Z",
      "url": "https://files.pythonhosted.org/packages/79/5c/19e7d3255018a5c96cdcac5b47bbca9a80a70245992ac520e54b4908cba0/otsucfgmng-1.3.2.311-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f1099f696a9a1bc042276258d3d14a4fa07af4d1f903377cc9fc8929199dd215",
        "md5": "04a1bd2c67e9521dafe7c6c0b17d22e2",
        "sha256": "80b7b6bd5e54b798aef23c0b6a7057c307601cf6b5fc3e90962584262eaefa12"
      },
      "downloads": -1,
      "filename": "otsucfgmng-1.3.2.311.tar.gz",
      "has_sig": false,
      "md5_digest": "04a1bd2c67e9521dafe7c6c0b17d22e2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.11",
      "size": 15555,
      "upload_time": "2023-01-20T22:09:26",
      "upload_time_iso_8601": "2023-01-20T22:09:26.815265Z",
      "url": "https://files.pythonhosted.org/packages/f1/09/9f696a9a1bc042276258d3d14a4fa07af4d1f903377cc9fc8929199dd215/otsucfgmng-1.3.2.311.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}