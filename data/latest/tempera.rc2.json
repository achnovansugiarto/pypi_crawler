{
  "info": {
    "author": "Brendan Krueger",
    "author_email": "atleasticanbe@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Tempera\n\n## Description\n\nCreate temperature objects which return their value in a set 'global' unit scale - either Celsius, Fahrenheit, or Kelvin - using the method <b>getTemperature()</b>. When the Global temperature scale is changed, all temperature objects are returned in that scale.\n\nI created this module to easily convert multiple temperatures displayed on a GUI when a user selects a different scale. I imagine it could be useful any time one has multiple persistant temperatures that need to undergo unit conversion at will.\n\n## Using this Module\n\nThe Global temperature scale can be set with the method <b>self.setGlobalScale()</b>. All Temperature objects will return in this scale with <b>self.getTemperature()</b>. \n\nSet or return from a specific scale using <b>self.c</b> for Celsius, <b>self.f</b> for Fahrenheit, and <b>self.k</b> for Kelvin.\n\n### Local Scales\n\nIf you want a specific Temperature object to return <b>self.getTemperature()</b> in a different scale regardless of the current global scale, use <b>self.setLocalScale()</b>. Can return to using global scale with <b>self.setLocalScale(False)</b> or <b>self.useGlobalScale()</b>.\n\n### Rounding\n\nSet the number of decimal places with the <b>decimal_place</b> keyword argument:\n```python\nfrom tempera import Temperature\n\ntemp1 = Temperature(12, decimal_place=2)\n```\nOr with <b>self.setDecimalPlace(int)</b>, where <i>int</i> is an integer. The default decimal place is 2. Setting to <i>None</i> will always return a rounded integer.\n\n### Intervals\n\nTemperature objects can also represent intervals instead of actual temperatures with the keyword argument <b>isinterval=True</b>. For example, if you wanted to represent an interval of 3 celsius units:\n```python\ntemp_interval = Temperature(3, isinterval=True)\n\nprint(temp1.C + temp_interval.C)  # Adds 3 celsius to temp1 and prints\n```\n\n## How it functions\n\nThe temperature is stored internally in Celsius. All setting and getting of the temperature in different scales is a conversion from this 'private' celsius attribute. This attribute is not rounded. Any rounding is done when <b>getTemperature()</b> (or a similar method) is called, so setting a decimal place does not affect the internally stored temperature.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Hyperdimensionals/tempera",
    "keywords": "temperature conversion celsius fahrenheit kelvin centigrade climate control",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tempera",
    "package_url": "https://pypi.org/project/tempera/",
    "platform": "",
    "project_url": "https://pypi.org/project/tempera/",
    "project_urls": {
      "Donate": "https://www.paypal.com/donate?hosted_button_id=3C7CBND5MJ5RE",
      "Homepage": "https://github.com/Hyperdimensionals/tempera",
      "Source": "https://github.com/Hyperdimensionals/tempera"
    },
    "release_url": "https://pypi.org/project/tempera/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Convert and return temperature objects in set global scale.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8714144,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73563a17b21bf6c9469b4275e86bf7b8350c8da77772ca3fcbb46a2b89f3b0e0",
          "md5": "b0677b2d0b025d432f1fcebde63b0f4b",
          "sha256": "26b094d6109ccc129c33aa0562659411bf6c6427f61cce29d7c0b217c3311f0c"
        },
        "downloads": -1,
        "filename": "tempera-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b0677b2d0b025d432f1fcebde63b0f4b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6517,
        "upload_time": "2020-11-18T23:48:06",
        "upload_time_iso_8601": "2020-11-18T23:48:06.240416Z",
        "url": "https://files.pythonhosted.org/packages/73/56/3a17b21bf6c9469b4275e86bf7b8350c8da77772ca3fcbb46a2b89f3b0e0/tempera-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d09e2d86de5d2871ebca7adba3072a9d4833b02660f9fe9ad194cee05e142cb",
          "md5": "77fe5e3b8c16965e24e408353572e6bf",
          "sha256": "7f43806152f751dbf1a3eb966003f35781f62797fa0ef1b9f4112f4f38fe7443"
        },
        "downloads": -1,
        "filename": "tempera-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "77fe5e3b8c16965e24e408353572e6bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4944,
        "upload_time": "2020-11-18T23:48:07",
        "upload_time_iso_8601": "2020-11-18T23:48:07.334205Z",
        "url": "https://files.pythonhosted.org/packages/9d/09/e2d86de5d2871ebca7adba3072a9d4833b02660f9fe9ad194cee05e142cb/tempera-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf129548c423e989e9a05f776b0449efdec139d7450342d20067bceb3f49b14d",
          "md5": "cc6674f9741b660af6ff63b8f56850e3",
          "sha256": "627a5f140734d13411174b72f458c6aebf4c9b8822088cfd7e8926239c67e556"
        },
        "downloads": -1,
        "filename": "tempera-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc6674f9741b660af6ff63b8f56850e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6710,
        "upload_time": "2020-11-21T06:30:15",
        "upload_time_iso_8601": "2020-11-21T06:30:15.748151Z",
        "url": "https://files.pythonhosted.org/packages/bf/12/9548c423e989e9a05f776b0449efdec139d7450342d20067bceb3f49b14d/tempera-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72b49f52c488bd66c4d600a048846917510b3458a76fd5ae7c79ac1b16fe5d28",
          "md5": "ccff5fff1ba1094c84a0efad94d04693",
          "sha256": "9d6b3c52c3ae051e2fe09499b701420bf89dda5c81fa91b70ec355a256c1e924"
        },
        "downloads": -1,
        "filename": "tempera-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ccff5fff1ba1094c84a0efad94d04693",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5129,
        "upload_time": "2020-11-21T06:30:17",
        "upload_time_iso_8601": "2020-11-21T06:30:17.561199Z",
        "url": "https://files.pythonhosted.org/packages/72/b4/9f52c488bd66c4d600a048846917510b3458a76fd5ae7c79ac1b16fe5d28/tempera-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf129548c423e989e9a05f776b0449efdec139d7450342d20067bceb3f49b14d",
        "md5": "cc6674f9741b660af6ff63b8f56850e3",
        "sha256": "627a5f140734d13411174b72f458c6aebf4c9b8822088cfd7e8926239c67e556"
      },
      "downloads": -1,
      "filename": "tempera-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cc6674f9741b660af6ff63b8f56850e3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6710,
      "upload_time": "2020-11-21T06:30:15",
      "upload_time_iso_8601": "2020-11-21T06:30:15.748151Z",
      "url": "https://files.pythonhosted.org/packages/bf/12/9548c423e989e9a05f776b0449efdec139d7450342d20067bceb3f49b14d/tempera-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "72b49f52c488bd66c4d600a048846917510b3458a76fd5ae7c79ac1b16fe5d28",
        "md5": "ccff5fff1ba1094c84a0efad94d04693",
        "sha256": "9d6b3c52c3ae051e2fe09499b701420bf89dda5c81fa91b70ec355a256c1e924"
      },
      "downloads": -1,
      "filename": "tempera-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ccff5fff1ba1094c84a0efad94d04693",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5129,
      "upload_time": "2020-11-21T06:30:17",
      "upload_time_iso_8601": "2020-11-21T06:30:17.561199Z",
      "url": "https://files.pythonhosted.org/packages/72/b4/9f52c488bd66c4d600a048846917510b3458a76fd5ae7c79ac1b16fe5d28/tempera-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}