{
  "info": {
    "author": "Felipe Espinoza",
    "author_email": "github-contact@espinoza.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "The Versioneer\n==============\n\n* like a rocketeer, but for versions!\n* https://github.com/python-versioneer/python-versioneer\n* Brian Warner\n* License: Public Domain\n* Compatible with: Python 3.6, 3.7, 3.8, 3.9 and pypy3\n* [![Latest Version][pypi-image]][pypi-url]\n\nThis is a tool for managing a recorded version number in distutils-based\npython projects. The goal is to remove the tedious and error-prone \"update\nthe embedded version string\" step from your release process. Making a new\nrelease should be as easy as recording a new tag in your version-control\nsystem, and maybe making new tarballs.\n\n## Modified version\n\nThis version was modified to add the pep440-inc style, automatically\nincrementing the minor version\n\n## Quick Install\n\n* `pip install versioneer` to somewhere in your $PATH\n* add a `[versioneer]` section to your setup.cfg (see [Install](INSTALL.md))\n* run `versioneer install` in your source tree, commit the results\n* Verify version information with `python setup.py version`\n\n## Version Identifiers\n\nSource trees come from a variety of places:\n\n* a version-control system checkout (mostly used by developers)\n* a nightly tarball, produced by build automation\n* a snapshot tarball, produced by a web-based VCS browser, like github's\n  \"tarball from tag\" feature\n* a release tarball, produced by \"setup.py sdist\", distributed through PyPI\n\nWithin each source tree, the version identifier (either a string or a number,\nthis tool is format-agnostic) can come from a variety of places:\n\n* ask the VCS tool itself, e.g. \"git describe\" (for checkouts), which knows\n  about recent \"tags\" and an absolute revision-id\n* the name of the directory into which the tarball was unpacked\n* an expanded VCS keyword ($Id$, etc)\n* a `_version.py` created by some earlier build step\n\nFor released software, the version identifier is closely related to a VCS\ntag. Some projects use tag names that include more than just the version\nstring (e.g. \"myproject-1.2\" instead of just \"1.2\"), in which case the tool\nneeds to strip the tag prefix to extract the version identifier. For\nunreleased software (between tags), the version identifier should provide\nenough information to help developers recreate the same tree, while also\ngiving them an idea of roughly how old the tree is (after version 1.2, before\nversion 1.3). Many VCS systems can report a description that captures this,\nfor example `git describe --tags --dirty --always` reports things like\n\"0.7-1-g574ab98-dirty\" to indicate that the checkout is one revision past the\n0.7 tag, has a unique revision id of \"574ab98\", and is \"dirty\" (it has\nuncommitted changes).\n\nThe version identifier is used for multiple purposes:\n\n* to allow the module to self-identify its version: `myproject.__version__`\n* to choose a name and prefix for a 'setup.py sdist' tarball\n\n## Theory of Operation\n\nVersioneer works by adding a special `_version.py` file into your source\ntree, where your `__init__.py` can import it. This `_version.py` knows how to\ndynamically ask the VCS tool for version information at import time.\n\n`_version.py` also contains `$Revision$` markers, and the installation\nprocess marks `_version.py` to have this marker rewritten with a tag name\nduring the `git archive` command. As a result, generated tarballs will\ncontain enough information to get the proper version.\n\nTo allow `setup.py` to compute a version too, a `versioneer.py` is added to\nthe top level of your source tree, next to `setup.py` and the `setup.cfg`\nthat configures it. This overrides several distutils/setuptools commands to\ncompute the version when invoked, and changes `setup.py build` and `setup.py\nsdist` to replace `_version.py` with a small static file that contains just\nthe generated version data.\n\n## Installation\n\nSee [INSTALL.md](./INSTALL.md) for detailed installation instructions.\n\n## Version-String Flavors\n\nCode which uses Versioneer can learn about its version string at runtime by\nimporting `_version` from your main `__init__.py` file and running the\n`get_versions()` function. From the \"outside\" (e.g. in `setup.py`), you can\nimport the top-level `versioneer.py` and run `get_versions()`.\n\nBoth functions return a dictionary with different flavors of version\ninformation:\n\n* `['version']`: A condensed version string, rendered using the selected\n  style. This is the most commonly used value for the project's version\n  string. The default \"pep440\" style yields strings like `0.11`,\n  `0.11+2.g1076c97`, or `0.11+2.g1076c97.dirty`. See the \"Styles\" section\n  below for alternative styles.\n\n* `['full-revisionid']`: detailed revision identifier. For Git, this is the\n  full SHA1 commit id, e.g. \"1076c978a8d3cfc70f408fe5974aa6c092c949ac\".\n\n* `['date']`: Date and time of the latest `HEAD` commit. For Git, it is the\n  commit date in ISO 8601 format. This will be None if the date is not\n  available.\n\n* `['dirty']`: a boolean, True if the tree has uncommitted changes. Note that\n  this is only accurate if run in a VCS checkout, otherwise it is likely to\n  be False or None\n\n* `['error']`: if the version string could not be computed, this will be set\n  to a string describing the problem, otherwise it will be None. It may be\n  useful to throw an exception in setup.py if this is set, to avoid e.g.\n  creating tarballs with a version string of \"unknown\".\n\nSome variants are more useful than others. Including `full-revisionid` in a\nbug report should allow developers to reconstruct the exact code being tested\n(or indicate the presence of local changes that should be shared with the\ndevelopers). `version` is suitable for display in an \"about\" box or a CLI\n`--version` output: it can be easily compared against release notes and lists\nof bugs fixed in various releases.\n\nThe installer adds the following text to your `__init__.py` to place a basic\nversion in `YOURPROJECT.__version__`:\n\n    from ._version import get_versions\n    __version__ = get_versions()['version']\n    del get_versions\n\n## Styles\n\nThe setup.cfg `style=` configuration controls how the VCS information is\nrendered into a version string.\n\nThe default style, \"pep440\", produces a PEP440-compliant string, equal to the\nun-prefixed tag name for actual releases, and containing an additional \"local\nversion\" section with more detail for in-between builds. For Git, this is\nTAG[+DISTANCE.gHEX[.dirty]] , using information from `git describe --tags\n--dirty --always`. For example \"0.11+2.g1076c97.dirty\" indicates that the\ntree is like the \"1076c97\" commit but has uncommitted changes (\".dirty\"), and\nthat this commit is two revisions (\"+2\") beyond the \"0.11\" tag. For released\nsoftware (exactly equal to a known tag), the identifier will only contain the\nstripped tag, e.g. \"0.11\".\n\nOther styles are available. See [details.md](details.md) in the Versioneer\nsource tree for descriptions.\n\n## Debugging\n\nVersioneer tries to avoid fatal errors: if something goes wrong, it will tend\nto return a version of \"0+unknown\". To investigate the problem, run `setup.py\nversion`, which will run the version-lookup code in a verbose mode, and will\ndisplay the full contents of `get_versions()` (including the `error` string,\nwhich may help identify what went wrong).\n\n## Known Limitations\n\nSome situations are known to cause problems for Versioneer. This details the\nmost significant ones. More can be found on Github\n[issues page](https://github.com/python-versioneer/python-versioneer/issues).\n\n### Subprojects\n\nVersioneer has limited support for source trees in which `setup.py` is not in\nthe root directory (e.g. `setup.py` and `.git/` are *not* siblings). The are\ntwo common reasons why `setup.py` might not be in the root:\n\n* Source trees which contain multiple subprojects, such as\n  [Buildbot](https://github.com/buildbot/buildbot), which contains both\n  \"master\" and \"slave\" subprojects, each with their own `setup.py`,\n  `setup.cfg`, and `tox.ini`. Projects like these produce multiple PyPI\n  distributions (and upload multiple independently-installable tarballs).\n* Source trees whose main purpose is to contain a C library, but which also\n  provide bindings to Python (and perhaps other languages) in subdirectories.\n\nVersioneer will look for `.git` in parent directories, and most operations\nshould get the right version string. However `pip` and `setuptools` have bugs\nand implementation details which frequently cause `pip install .` from a\nsubproject directory to fail to find a correct version string (so it usually\ndefaults to `0+unknown`).\n\n`pip install --editable .` should work correctly. `setup.py install` might\nwork too.\n\nPip-8.1.1 is known to have this problem, but hopefully it will get fixed in\nsome later version.\n\n[Bug #38](https://github.com/python-versioneer/python-versioneer/issues/38) is tracking\nthis issue. The discussion in\n[PR #61](https://github.com/python-versioneer/python-versioneer/pull/61) describes the\nissue from the Versioneer side in more detail.\n[pip PR#3176](https://github.com/pypa/pip/pull/3176) and\n[pip PR#3615](https://github.com/pypa/pip/pull/3615) contain work to improve\npip to let Versioneer work correctly.\n\nVersioneer-0.16 and earlier only looked for a `.git` directory next to the\n`setup.cfg`, so subprojects were completely unsupported with those releases.\n\n### Editable installs with setuptools <= 18.5\n\n`setup.py develop` and `pip install --editable .` allow you to install a\nproject into a virtualenv once, then continue editing the source code (and\ntest) without re-installing after every change.\n\n\"Entry-point scripts\" (`setup(entry_points={\"console_scripts\": ..})`) are a\nconvenient way to specify executable scripts that should be installed along\nwith the python package.\n\nThese both work as expected when using modern setuptools. When using\nsetuptools-18.5 or earlier, however, certain operations will cause\n`pkg_resources.DistributionNotFound` errors when running the entrypoint\nscript, which must be resolved by re-installing the package. This happens\nwhen the install happens with one version, then the egg_info data is\nregenerated while a different version is checked out. Many setup.py commands\ncause egg_info to be rebuilt (including `sdist`, `wheel`, and installing into\na different virtualenv), so this can be surprising.\n\n[Bug #83](https://github.com/python-versioneer/python-versioneer/issues/83) describes\nthis one, but upgrading to a newer version of setuptools should probably\nresolve it.\n\n\n## Updating Versioneer\n\nTo upgrade your project to a new release of Versioneer, do the following:\n\n* install the new Versioneer (`pip install -U versioneer` or equivalent)\n* edit `setup.cfg`, if necessary, to include any new configuration settings\n  indicated by the release notes. See [UPGRADING](./UPGRADING.md) for details.\n* re-run `versioneer install` in your source tree, to replace\n  `SRC/_version.py`\n* commit any changed files\n\n## Future Directions\n\nThis tool is designed to make it easily extended to other version-control\nsystems: all VCS-specific components are in separate directories like\nsrc/git/ . The top-level `versioneer.py` script is assembled from these\ncomponents by running make-versioneer.py . In the future, make-versioneer.py\nwill take a VCS name as an argument, and will construct a version of\n`versioneer.py` that is specific to the given VCS. It might also take the\nconfiguration arguments that are currently provided manually during\ninstallation by editing setup.py . Alternatively, it might go the other\ndirection and include code from all supported VCS systems, reducing the\nnumber of intermediate scripts.\n\n## Similar projects\n\n* [setuptools_scm](https://github.com/pypa/setuptools_scm/) - a non-vendored build-time\n  dependency\n* [minver](https://github.com/jbweston/miniver) - a lightweight reimplementation of\n  versioneer\n\n## License\n\nTo make Versioneer easier to embed, all its code is dedicated to the public\ndomain. The `_version.py` that it creates is also in the public domain.\nSpecifically, both are released under the Creative Commons \"Public Domain\nDedication\" license (CC0-1.0), as described in\nhttps://creativecommons.org/publicdomain/zero/1.0/ .\n\n[pypi-image]: https://img.shields.io/pypi/v/fdns-versioneer.svg\n[pypi-url]: https://pypi.python.org/pypi/fdns-versioneer/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fdns/python-versioneer",
    "keywords": "",
    "license": "public domain",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fdns-versioneer",
    "package_url": "https://pypi.org/project/fdns-versioneer/",
    "platform": "",
    "project_url": "https://pypi.org/project/fdns-versioneer/",
    "project_urls": {
      "Homepage": "https://github.com/fdns/python-versioneer"
    },
    "release_url": "https://pypi.org/project/fdns-versioneer/0.20.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Easy VCS-based management of project version strings",
    "version": "0.20.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9286835,
  "releases": {
    "0.18.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a92f8626035a9021b3dcf9b4f068e0336a8709c38790b403c18611a9118ca6b",
          "md5": "ac5dbaa67e53123d2a0e8f16ae83b1d1",
          "sha256": "7e711115f8741e4eb50a41aa9832c5bc2c4cd0ebe87e75ba0f38c51d439de9d4"
        },
        "downloads": -1,
        "filename": "fdns_versioneer-0.18.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac5dbaa67e53123d2a0e8f16ae83b1d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33798,
        "upload_time": "2021-02-01T15:23:22",
        "upload_time_iso_8601": "2021-02-01T15:23:22.949637Z",
        "url": "https://files.pythonhosted.org/packages/3a/92/f8626035a9021b3dcf9b4f068e0336a8709c38790b403c18611a9118ca6b/fdns_versioneer-0.18.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bac92fffdafef733de4267380fa9cb299fe0687496c638e723bf9cf047c98da8",
          "md5": "d71693fd440c18176ef42d7b471d9f60",
          "sha256": "ae4d8ee5361b51e607e7457e7ea4815904159e1602e6d08fa330d7ef8771c2cd"
        },
        "downloads": -1,
        "filename": "fdns-versioneer-0.18.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d71693fd440c18176ef42d7b471d9f60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42021,
        "upload_time": "2021-02-01T15:23:25",
        "upload_time_iso_8601": "2021-02-01T15:23:25.410327Z",
        "url": "https://files.pythonhosted.org/packages/ba/c9/2fffdafef733de4267380fa9cb299fe0687496c638e723bf9cf047c98da8/fdns-versioneer-0.18.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.18.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fb12d7a0538ad43c561d3d51bc6f0a44aa569aa1fd7cd90c6a4a48c7a1afb85",
          "md5": "5c8fe047f440ef707889dd1c39ce88ad",
          "sha256": "f779f9f2e79d0c6322f62461992cd34501ba5ca66accd3a86b5d5cd820a0f97f"
        },
        "downloads": -1,
        "filename": "fdns_versioneer-0.18.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c8fe047f440ef707889dd1c39ce88ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 33764,
        "upload_time": "2021-02-01T15:29:01",
        "upload_time_iso_8601": "2021-02-01T15:29:01.500755Z",
        "url": "https://files.pythonhosted.org/packages/7f/b1/2d7a0538ad43c561d3d51bc6f0a44aa569aa1fd7cd90c6a4a48c7a1afb85/fdns_versioneer-0.18.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ab1282c540bd946fdf7d8c2ed46dba9b0d35ead6864a0f0d871dd6fad7faa09",
          "md5": "aa1568f23b5d1f33799920811aacb26c",
          "sha256": "f2e7a2a88d919020fa93d922aa424e5ea52c1835bf510a51444320625265a5a2"
        },
        "downloads": -1,
        "filename": "fdns-versioneer-0.18.2.tar.gz",
        "has_sig": false,
        "md5_digest": "aa1568f23b5d1f33799920811aacb26c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41963,
        "upload_time": "2021-02-01T15:29:04",
        "upload_time_iso_8601": "2021-02-01T15:29:04.972124Z",
        "url": "https://files.pythonhosted.org/packages/6a/b1/282c540bd946fdf7d8c2ed46dba9b0d35ead6864a0f0d871dd6fad7faa09/fdns-versioneer-0.18.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.20.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "613089c56b0af913d3203bb4d7ac37597fad64359d5e0fd5cd72269b912363bc",
          "md5": "fcb7cce5b7993017666874239a59a7cb",
          "sha256": "1dc843e1336e9e79563550d70857a03b282c5af346c932a61142d3ebe0788334"
        },
        "downloads": -1,
        "filename": "fdns_versioneer-0.20.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcb7cce5b7993017666874239a59a7cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39514,
        "upload_time": "2021-02-01T14:55:50",
        "upload_time_iso_8601": "2021-02-01T14:55:50.466046Z",
        "url": "https://files.pythonhosted.org/packages/61/30/89c56b0af913d3203bb4d7ac37597fad64359d5e0fd5cd72269b912363bc/fdns_versioneer-0.20.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "667eed384442015d8617c398e892152a54870498d00be00aa9f81b65038bdcae",
          "md5": "9868aaf36a6a80886dd9c7092d8ece6b",
          "sha256": "c01ac0f309a2f07a85fdeff83388049db8cf8b3968ca57cf8bf6528aefd33200"
        },
        "downloads": -1,
        "filename": "fdns-versioneer-0.20.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9868aaf36a6a80886dd9c7092d8ece6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48091,
        "upload_time": "2021-02-01T14:55:52",
        "upload_time_iso_8601": "2021-02-01T14:55:52.412837Z",
        "url": "https://files.pythonhosted.org/packages/66/7e/ed384442015d8617c398e892152a54870498d00be00aa9f81b65038bdcae/fdns-versioneer-0.20.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.20.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "362ba67857ab4c078a1e9ba59c48357fa1e47990b330217685bb5bcac38dec50",
          "md5": "0b93cf5d11bce50ce9623aa4d757d811",
          "sha256": "734b9f7ee8b911830071d188348ea93597ee747855b7a6e4d866de098644e66b"
        },
        "downloads": -1,
        "filename": "fdns_versioneer-0.20.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b93cf5d11bce50ce9623aa4d757d811",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39503,
        "upload_time": "2021-02-01T14:58:10",
        "upload_time_iso_8601": "2021-02-01T14:58:10.133814Z",
        "url": "https://files.pythonhosted.org/packages/36/2b/a67857ab4c078a1e9ba59c48357fa1e47990b330217685bb5bcac38dec50/fdns_versioneer-0.20.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea60801cefd5d072dacd64f96b542a303d7a8bba18c131aa79d3c160120e931d",
          "md5": "0b0ca31b0aad6fdb45900f81962ea63c",
          "sha256": "80407e04435b46872de6dd80d0bb147a5bc41402643b09b00857b53c05e5bc00"
        },
        "downloads": -1,
        "filename": "fdns-versioneer-0.20.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0b0ca31b0aad6fdb45900f81962ea63c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48082,
        "upload_time": "2021-02-01T14:58:12",
        "upload_time_iso_8601": "2021-02-01T14:58:12.085197Z",
        "url": "https://files.pythonhosted.org/packages/ea/60/801cefd5d072dacd64f96b542a303d7a8bba18c131aa79d3c160120e931d/fdns-versioneer-0.20.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "362ba67857ab4c078a1e9ba59c48357fa1e47990b330217685bb5bcac38dec50",
        "md5": "0b93cf5d11bce50ce9623aa4d757d811",
        "sha256": "734b9f7ee8b911830071d188348ea93597ee747855b7a6e4d866de098644e66b"
      },
      "downloads": -1,
      "filename": "fdns_versioneer-0.20.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b93cf5d11bce50ce9623aa4d757d811",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 39503,
      "upload_time": "2021-02-01T14:58:10",
      "upload_time_iso_8601": "2021-02-01T14:58:10.133814Z",
      "url": "https://files.pythonhosted.org/packages/36/2b/a67857ab4c078a1e9ba59c48357fa1e47990b330217685bb5bcac38dec50/fdns_versioneer-0.20.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea60801cefd5d072dacd64f96b542a303d7a8bba18c131aa79d3c160120e931d",
        "md5": "0b0ca31b0aad6fdb45900f81962ea63c",
        "sha256": "80407e04435b46872de6dd80d0bb147a5bc41402643b09b00857b53c05e5bc00"
      },
      "downloads": -1,
      "filename": "fdns-versioneer-0.20.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0b0ca31b0aad6fdb45900f81962ea63c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 48082,
      "upload_time": "2021-02-01T14:58:12",
      "upload_time_iso_8601": "2021-02-01T14:58:12.085197Z",
      "url": "https://files.pythonhosted.org/packages/ea/60/801cefd5d072dacd64f96b542a303d7a8bba18c131aa79d3c160120e931d/fdns-versioneer-0.20.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}