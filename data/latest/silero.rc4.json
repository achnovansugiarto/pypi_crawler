{
  "info": {
    "author": "Silero Team",
    "author_email": "hello@silero.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Sound/Audio",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": " [![Mailing list : test](http://img.shields.io/badge/Email-gray.svg?style=for-the-badge&logo=gmail)](mailto:hello@silero.ai) [![Mailing list : test](http://img.shields.io/badge/Telegram-blue.svg?style=for-the-badge&logo=telegram)](https://t.me/silero_speech) [![License: CC BY-NC 4.0](https://img.shields.io/badge/License-CC%20BY--NC%204.0-lightgrey.svg?style=for-the-badge)](https://github.com/snakers4/silero-models/blob/master/LICENSE)\n\n[![Donations](https://opencollective.com/open_stt/tiers/donation/badge.svg?label=donations&color=brightgreen)](https://opencollective.com/open_stt)\n[![Backers](https://opencollective.com/open_stt/tiers/backer/badge.svg?label=backers&color=brightgreen)](https://opencollective.com/open_stt)\n[![Sponsors](https://opencollective.com/open_stt/tiers/sponsor/badge.svg?label=sponsors&color=brightgreen)](https://opencollective.com/open_stt)\n\n[![Build and Deploy to PyPI](https://github.com/snakers4/silero-models/actions/workflows/build_deploy.yml/badge.svg)](https://github.com/snakers4/silero-models/actions/workflows/build_deploy.yml) [![PyPI version](https://badge.fury.io/py/silero.svg)](https://badge.fury.io/py/silero)\n\n![header](https://user-images.githubusercontent.com/12515440/89997349-b3523080-dc94-11ea-9906-ca2e8bc50535.png)\n\n- [Silero Models](#silero-models)\n  - [Installation and Basics](#installation-and-basics)\n  - [Speech-To-Text](#speech-to-text)\n    - [Dependencies](#dependencies)\n    - [PyTorch](#pytorch)\n    - [ONNX](#onnx)\n    - [TensorFlow](#tensorflow)\n  - [Text-To-Speech](#text-to-speech)\n    - [Models and Speakers](#models-and-speakers)\n    - [Dependencies](#dependencies-1)\n    - [PyTorch](#pytorch-1)\n    - [Standalone Use](#standalone-use)\n    - [SSML](#SSML)\n    - [Indic languages](#indic-languages)\n  - [Text-Enhancement](#text-enhancement)\n    - [Dependencies](#dependencies-2)\n    - [Standalone Use](#standalone-use-1)\n  - [FAQ](#faq)\n    - [Wiki](#wiki)\n    - [Performance and Quality](#performance-and-quality)\n    - [Adding new Languages](#adding-new-languages)\n  - [Contact](#contact)\n    - [Get in Touch](#get-in-touch)\n    - [Commercial Inquiries](#commercial-inquiries)\n  - [Citations](#citations)\n  - [Further reading](#further-reading)\n    - [English](#english)\n    - [Chinese](#chinese)\n    - [Russian](#russian)\n  - [Donations](#donations)\n\n# Silero Models\n\nSilero Models: pre-trained enterprise-grade STT / TTS models and benchmarks.\n\nEnterprise-grade STT made refreshingly simple (seriously, see [benchmarks](https://github.com/snakers4/silero-models/wiki/Quality-Benchmarks)).\nWe provide quality comparable to Google's STT (and sometimes even better) and we are not Google.\n\nAs a bonus:\n\n- No Kaldi;\n- No compilation;\n- No 20-step instructions;\n\nAlso we have published TTS models that satisfy the following criteria:\n\n- One-line usage;\n- A large library of voices;\n- A fully end-to-end pipeline;\n- Naturally sounding speech;\n- No GPU or training required;\n- Minimalism and lack of dependencies;\n- Faster than real-time on one CPU thread (!!!);\n- Support for 16kHz and 8kHz out of the box;\n\nAlso we have published a model for text repunctuation and recapitalization that:\n\n- Inserts capital letters and basic punctuation marks (dot, comma, hyphen, question mark, exclamation mark, dash for Russian);\n- Works for 4 languages (Russian, English, German, Spanish) and can be extended;\n- By design is domain agnostic and is not based on any hard-coded rules;\n- Has non-trivial metrics and succeeds in the task of improving text readability;\n\n## Installation and Basics\n\nYou can basically use our models in 3 flavours:\n\n- Via PyTorch Hub: `torch.hub.load()`;\n- Via pip:  `pip install silero` and then `import silero`;\n- Via caching the required models and utils manually and modifying if necessary;\n\nModels are downloaded on demand both by pip and PyTorch Hub. If you need caching, do it manually or via invoking a necessary model once (it will be downloaded to a cache folder). Please see these [docs](https://pytorch.org/docs/stable/hub.html#loading-models-from-hub) for more information.\n\nPyTorch Hub and pip package are based on the same code. Hence all examples, historically based on `torch.hub.load` can be used with a pip-package via this basic change:\n\n```python3\n# before\ntorch.hub.load(repo_or_dir='snakers4/silero-models',\n               model='silero_stt',  # or silero_tts or silero_te\n               **kwargs)\n\n# after\nfrom silero import silero_stt, silero_tts, silero_te\nsilero_stt(**kwargs)\n```\n\n## Speech-To-Text\n\nAll of the provided models are listed in the [models.yml](https://github.com/snakers4/silero-models/blob/master/models.yml) file.\nAny meta-data and newer versions will be added there.\n\n![Screenshot_1](https://user-images.githubusercontent.com/36505480/132320823-f0c5b774-44f7-4375-9c46-3acbcc548b76.png)\n\nCurrently we provide the following checkpoints:\n\n|                     | PyTorch            | ONNX               | Quantization       | Quality                                                                         | Colab                                                                                                                                                                    |\n| ------------------- | ------------------ | ------------------ | ------------------ | ------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| English (`en_v6`)   | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | [link](https://github.com/snakers4/silero-models/wiki/Quality-Benchmarks#en-v6) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb) |\n| English (`en_v5`)   | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | [link](https://github.com/snakers4/silero-models/wiki/Quality-Benchmarks#en-v5) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb) |\n| German (`de_v4`)    | :heavy_check_mark: | :heavy_check_mark: | :hourglass:        | [link](https://github.com/snakers4/silero-models/wiki/Quality-Benchmarks#de-v4) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb) |\n| English (`en_v3`)   | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | [link](https://github.com/snakers4/silero-models/wiki/Quality-Benchmarks#en-v3) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb) |\n| German (`de_v3`)    | :heavy_check_mark: | :hourglass:        | :hourglass:        | [link](https://github.com/snakers4/silero-models/wiki/Quality-Benchmarks#de-v3) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb) |\n| German (`de_v1`)    | :heavy_check_mark: | :heavy_check_mark: | :hourglass:        | [link](https://github.com/snakers4/silero-models/wiki/Quality-Benchmarks#de-v1) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb) |\n| Spanish (`es_v1`)   | :heavy_check_mark: | :heavy_check_mark: | :hourglass:        | [link](https://github.com/snakers4/silero-models/wiki/Quality-Benchmarks#es-v1) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb) |\n| Ukrainian (`ua_v3`) | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | N/A                                                                             | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb) |\n\nModel flavours:\n\n|                   | jit                | jit                | jit                | jit                | jit_q              | jit_q              | onnx               | onnx               | onnx               | onnx               |\n| ----------------- | ------------------ | ------------------ | ------------------ | ------------------ | ------------------ | ------------------ | ------------------ | ------------------ | ------------------ | ------------------ |\n|                   | xsmall             | small              | large              | xlarge             | xsmall             | small              | xsmall             | small              | large              | xlarge             |\n| English `en_v6`   |                    | :heavy_check_mark: |                    | :heavy_check_mark: |                    | :heavy_check_mark: |                    | :heavy_check_mark: |                    | :heavy_check_mark: |\n| English `en_v5`   |                    | :heavy_check_mark: |                    | :heavy_check_mark: |                    | :heavy_check_mark: |                    | :heavy_check_mark: |                    | :heavy_check_mark: |\n| English `en_v4_0` |                    |                    | :heavy_check_mark: |                    |                    |                    |                    |                    | :heavy_check_mark: |                    |\n| English `en_v3`   | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |                    | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: |                    |\n| German `de_v4`    |                    |                    | :heavy_check_mark: |                    |                    |                    |                    |                    | :heavy_check_mark: |                    |\n| German `de_v3`    |                    |                    | :heavy_check_mark: |                    |                    |                    |                    |                    |                    |                    |\n| German `de_v1`    |                    | :heavy_check_mark: |                    |                    |                    |                    | :heavy_check_mark: |                    |                    |                    |\n| Spanish `es_v1`   |                    | :heavy_check_mark: |                    |                    |                    |                    | :heavy_check_mark: |                    |                    |                    |\n| Ukrainian `ua_v3` |                    | :heavy_check_mark: |                    |                    | :heavy_check_mark: |                    | :heavy_check_mark: |                    |                    |                    |\n\n### Dependencies\n\n- All examples:\n  - `torch`, 1.8+ (used to clone the repo in tf and onnx examples), breaking changes for version older than 1.6\n  - `torchaudio`, latest version bound to PyTorch should work\n  - `omegaconf`, latest just should work\n- Additional for ONNX examples:\n  - `onnx`, latest just should work\n  - `onnxruntime`, latest just should work\n- Additional for TensorFlow examples:\n  - `tensorflow`, latest just should work\n  - `tensorflow_hub`, latest just should work\n\nPlease see the provided Colab for details for each example below. All examples are maintained to work with the latest major packaged versions of the installed libraries.\n\n### PyTorch\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb)\n\n[![Open on Torch Hub](https://img.shields.io/badge/Torch-Hub-red?logo=pytorch&style=for-the-badge)](https://pytorch.org/hub/snakers4_silero-models_stt/)\n\n```python\nimport torch\nimport zipfile\nimport torchaudio\nfrom glob import glob\n\ndevice = torch.device('cpu')  # gpu also works, but our models are fast enough for CPU\nmodel, decoder, utils = torch.hub.load(repo_or_dir='snakers4/silero-models',\n                                       model='silero_stt',\n                                       language='en', # also available 'de', 'es'\n                                       device=device)\n(read_batch, split_into_batches,\n read_audio, prepare_model_input) = utils  # see function signature for details\n\n# download a single file, any format compatible with TorchAudio\ntorch.hub.download_url_to_file('https://opus-codec.org/static/examples/samples/speech_orig.wav',\n                               dst ='speech_orig.wav', progress=True)\ntest_files = glob('speech_orig.wav')\nbatches = split_into_batches(test_files, batch_size=10)\ninput = prepare_model_input(read_batch(batches[0]),\n                            device=device)\n\noutput = model(input)\nfor example in output:\n    print(decoder(example.cpu()))\n```\n\n### ONNX\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb)\n\nYou can run our model everywhere, where you can import the ONNX model or run ONNX runtime.\n\n```python\nimport onnx\nimport torch\nimport onnxruntime\nfrom omegaconf import OmegaConf\n\nlanguage = 'en' # also available 'de', 'es'\n\n# load provided utils\n_, decoder, utils = torch.hub.load(repo_or_dir='snakers4/silero-models', model='silero_stt', language=language)\n(read_batch, split_into_batches,\n read_audio, prepare_model_input) = utils\n\n# see available models\ntorch.hub.download_url_to_file('https://raw.githubusercontent.com/snakers4/silero-models/master/models.yml', 'models.yml')\nmodels = OmegaConf.load('models.yml')\navailable_languages = list(models.stt_models.keys())\nassert language in available_languages\n\n# load the actual ONNX model\ntorch.hub.download_url_to_file(models.stt_models.en.latest.onnx, 'model.onnx', progress=True)\nonnx_model = onnx.load('model.onnx')\nonnx.checker.check_model(onnx_model)\nort_session = onnxruntime.InferenceSession('model.onnx')\n\n# download a single file, any format compatible with TorchAudio\ntorch.hub.download_url_to_file('https://opus-codec.org/static/examples/samples/speech_orig.wav', dst ='speech_orig.wav', progress=True)\ntest_files = ['speech_orig.wav']\nbatches = split_into_batches(test_files, batch_size=10)\ninput = prepare_model_input(read_batch(batches[0]))\n\n# actual onnx inference and decoding\nonnx_input = input.detach().cpu().numpy()\nort_inputs = {'input': onnx_input}\nort_outs = ort_session.run(None, ort_inputs)\ndecoded = decoder(torch.Tensor(ort_outs[0])[0])\nprint(decoded)\n```\n\n### TensorFlow\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples.ipynb)\n\n**SavedModel example**\n\n```python\nimport os\nimport torch\nimport subprocess\nimport tensorflow as tf\nimport tensorflow_hub as tf_hub\nfrom omegaconf import OmegaConf\n\nlanguage = 'en' # also available 'de', 'es'\n\n# load provided utils using torch.hub for brevity\n_, decoder, utils = torch.hub.load(repo_or_dir='snakers4/silero-models', model='silero_stt', language=language)\n(read_batch, split_into_batches,\n read_audio, prepare_model_input) = utils\n\n# see available models\ntorch.hub.download_url_to_file('https://raw.githubusercontent.com/snakers4/silero-models/master/models.yml', 'models.yml')\nmodels = OmegaConf.load('models.yml')\navailable_languages = list(models.stt_models.keys())\nassert language in available_languages\n\n# load the actual tf model\ntorch.hub.download_url_to_file(models.stt_models.en.latest.tf, 'tf_model.tar.gz')\nsubprocess.run('rm -rf tf_model && mkdir tf_model && tar xzfv tf_model.tar.gz -C tf_model',  shell=True, check=True)\ntf_model = tf.saved_model.load('tf_model')\n\n# download a single file, any format compatible with TorchAudio\ntorch.hub.download_url_to_file('https://opus-codec.org/static/examples/samples/speech_orig.wav', dst ='speech_orig.wav', progress=True)\ntest_files = ['speech_orig.wav']\nbatches = split_into_batches(test_files, batch_size=10)\ninput = prepare_model_input(read_batch(batches[0]))\n\n# tf inference\nres = tf_model.signatures[\"serving_default\"](tf.constant(input.numpy()))['output_0']\nprint(decoder(torch.Tensor(res.numpy())[0]))\n```\n\n## Text-To-Speech\n\n### Models and Speakers\n\nAll of the provided models are listed in the [models.yml](https://github.com/snakers4/silero-models/blob/master/models.yml) file. Any meta-data and newer versions will be added there.\n\n#### V3\n\nV3 models support [SSML](https://github.com/snakers4/silero-models/wiki/SSML). Also see Colab examples for main SSML tag usage.\n\n| ID       | Speakers |Auto-stress | Language                           | SR              | Colab                                                                                                                                                                        |\n| ------------- | ----------- | ----------- |---------------------------------- | --------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `v3_1_ru`    | `aidar`, `baya`, `kseniya`, `xenia`, `eugene`, `random` | yes  | `ru` (Russian)   | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| `v3_en`    | `en_0`, `en_1`, ..., `en_117`, `random`                   | no   | `en` (English)   | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| `v3_en_indic`   | `tamil_female`, ..., `assamese_male`, `random`       | no   | `en` (English)   | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| `v3_de`    | `eva_k`, ..., `karlsson`, `random`                        | no   | `de` (German)    | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| `v3_es`    | `es_0`, `es_1`, `es_2`, `random`                          | no   | `es` (Spanish)   | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| `v3_fr`    | `fr_0`, ..., `fr_5`, `random`                             | no   | `fr` (French)    | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| `v3_tt`    | `dilyara`                                                 | no   | `tt` (Tatar)     | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| `v3_ua`    | `mykyta`, `random`                                        | no   | `ua` (Ukrainian) | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| `v3_uz`    | `dilnavoz`                                                | no   | `uz` (Uzbek)     | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| `v3_xal`   | `erdni`, `delghir`, `random`                              | no   | `xal` (Kalmyk)   | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| [`v3_indic`](#indic-languages)   | `hindi_male`, `hindi_female`, ..., `random`             | no   | `indic` [(Hindi, Telugu, ...)](#indic-languages)   | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n| `ru_v3`    | `aidar`, `baya`, `kseniya`, `xenia`, `random`             | yes  | `ru` (Russian)   | `8000`, `24000`, `48000` | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb) |\n\n\n### Dependencies\n\nBasic dependencies for colab examples:\n\n- `torch`, 1.10+;\n- `torchaudio`, latest version bound to PyTorch should work (required only because models are hosted together with STT, not required for work);\n- `omegaconf`,  latest (can be removed as well, if you do not load all of the configs);\n\n### PyTorch\n\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_tts.ipynb)\n\n[![Open on Torch Hub](https://img.shields.io/badge/Torch-Hub-red?logo=pytorch&style=for-the-badge)](https://pytorch.org/hub/snakers4_silero-models_tts/)\n\n```python\n# V3\nimport torch\n\nlanguage = 'ru'\nmodel_id = 'v3_1_ru'\nsample_rate = 48000\nspeaker = 'xenia'\ndevice = torch.device('cpu')\n\nmodel, example_text = torch.hub.load(repo_or_dir='snakers4/silero-models',\n                                     model='silero_tts',\n                                     language=language,\n                                     speaker=model_id)\nmodel.to(device)  # gpu or cpu\n\naudio = model.apply_tts(text=example_text,\n                        speaker=speaker,\n                        sample_rate=sample_rate)\n```\n\n### Standalone Use\n\n- Standalone usage just requires PyTorch 1.10+ and python standard library;\n- Please see the detailed examples in Colab;\n\n```python\n# V3\nimport os\nimport torch\n\ndevice = torch.device('cpu')\ntorch.set_num_threads(4)\nlocal_file = 'model.pt'\n\nif not os.path.isfile(local_file):\n    torch.hub.download_url_to_file('https://models.silero.ai/models/tts/ru/v3_1_ru.pt',\n                                   local_file)  \n\nmodel = torch.package.PackageImporter(local_file).load_pickle(\"tts_models\", \"model\")\nmodel.to(device)\n\nexample_text = 'В недрах тундры выдры в г+етрах т+ырят в вёдра ядра кедров.'\nsample_rate = 48000\nspeaker='baya'\n\naudio_paths = model.save_wav(text=example_text,\n                             speaker=speaker,\n                             sample_rate=sample_rate)\n```\n\n### SSML\n\nCheck out our [TTS Wiki page.](https://github.com/snakers4/silero-models/wiki/SSML)\n\n### Indic languages\n\n#### Example\n(!!!) All input sentences should be romanized to ISO format using [`aksharamukha` tool](https://aksharamukha.appspot.com/python). An example for `hindi`:\n\n```python\n# V3\nimport torch\nfrom aksharamukha import transliterate\n\n# Loading model\nmodel, example_text = torch.hub.load(repo_or_dir='snakers4/silero-models',\n                                     model='silero_tts',\n                                     language='indic',\n                                     speaker='v3_indic')\n\norig_text = \"प्रसिद्द कबीर अध्येता, पुरुषोत्तम अग्रवाल का यह शोध आलेख, उस रामानंद की खोज करता है\"\nroman_text = transliterate.process('Devanagari', 'ISO', orig_text)\nprint(roman_text)\n\naudio = model.apply_tts(roman_text,\n                        speaker='hindi_male')\n```\n\n#### Supported languages\n\n| Language | Speakers | Romanization function\n-- | -- | --\nhindi      | `hindi_female`, `hindi_male`             | `transliterate.process('Devanagari', 'ISO', orig_text)`\nmalayalam  | `malayalam_female`, `malayalam_male`     |`transliterate.process('Malayalam', 'ISO', orig_text)`\nmanipuri   | `manipuri_female`                        |`transliterate.process('Bengali', 'ISO', orig_text)`\nbengali    | `bengali_female`, `bengali_male`         | `transliterate.process('Bengali', 'ISO', orig_text)`\nrajasthani | `rajasthani_female`, `rajasthani_female` | `transliterate.process('Devanagari', 'ISO', orig_text)`\ntamil      | `tamil_female`, `tamil_male`             |`transliterate.process('Tamil', 'ISO', orig_text, pre_options=['TamilTranscribe'])`\ntelugu     | `telugu_female`, `telugu_male`           | `transliterate.process('Telugu', 'ISO', orig_text)`\ngujarati   | `gujarati_female`, `gujarati_male`       | `transliterate.process('Gujarati', 'ISO', orig_text)`\nkannada    | `kannada_female`, `kannada_male`         |`transliterate.process('Kannada', 'ISO', orig_text)`\n\n\n## Text-Enhancement\n\n| Languages | Quantization  | Quality | Colab |\n| --------- | ------------- | ------- | ----- |\n| 'en', 'de', 'ru', 'es' | :heavy_check_mark: | [link](https://github.com/snakers4/silero-models/wiki/Quality-Benchmarks#te-models) | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_te.ipynb) |\n\n### Dependencies\n\nBasic dependencies for colab examples:\n\n- `torch`, 1.9+;\n- `pyyaml`, but it's installed with torch itself\n\n### Standalone Use\n\n- Standalone usage just requires PyTorch 1.9+ and python standard library;\n- Please see the detailed examples in [Colab](https://colab.research.google.com/github/snakers4/silero-models/blob/master/examples_te.ipynb);\n\n```python\nimport torch\n\nmodel, example_texts, languages, punct, apply_te = torch.hub.load(repo_or_dir='snakers4/silero-models',\n                                                                  model='silero_te')\n\ninput_text = input('Enter input text\\n')\napply_te(input_text, lan='en')\n```\n\n## FAQ\n\n### Wiki\n\nAlso check out our [wiki](https://github.com/snakers4/silero-models/wiki).\n\n### Performance and Quality\n\nPlease refer to this wiki sections:\n\n- [Quality Benchmarks](https://github.com/snakers4/silero-models/wiki/Quality-Benchmarks)\n- [Performance Benchmarks](https://github.com/snakers4/silero-models/wiki/Performance-Benchmarks)\n\n### Adding new Languages\n\nPlease refer [here](https://github.com/snakers4/silero-models/wiki/Adding-New-Languages).\n\n## Contact\n\n### Get in Touch\n\nTry our models, create an [issue](https://github.com/snakers4/silero-models/issues/new), join our [chat](https://t.me/silero_speech), [email](mailto:hello@silero.ai) us, read our [news](https://t.me/silero_news).\n\n### Commercial Inquiries\n\nPlease see our [wiki](https://github.com/snakers4/silero-models/wiki) and [tiers](https://github.com/snakers4/silero-models/wiki/Licensing-and-Tiers) for relevant information and [email](mailto:hello@silero.ai) us.\n\n## Citations\n\n```bibtex\n@misc{Silero Models,\n  author = {Silero Team},\n  title = {Silero Models: pre-trained enterprise-grade STT / TTS models and benchmarks},\n  year = {2021},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/snakers4/silero-models}},\n  commit = {insert_some_commit_here},\n  email = {hello@silero.ai}\n}\n```\n\n## Further reading\n\n### English\n\n- STT:\n  - Towards an Imagenet Moment For Speech-To-Text - [link](https://thegradient.pub/towards-an-imagenet-moment-for-speech-to-text/)\n  - A Speech-To-Text Practitioners Criticisms of Industry and Academia - [link](https://thegradient.pub/a-speech-to-text-practitioners-criticisms-of-industry-and-academia/)\n  - Modern Google-level STT Models Released - [link](https://habr.com/ru/post/519562/)\n\n- TTS:\n  - Our new public speech synthesis in super-high quality, 10x faster and more stable - [link](https://habr.com/ru/post/660571/) \n  - High-Quality Text-to-Speech Made Accessible, Simple and Fast - [link](https://habr.com/ru/post/549482/)\n\n- VAD:\n  - One Voice Detector to Rule Them All - [link](https://thegradient.pub/one-voice-detector-to-rule-them-all/)\n  - Modern Portable Voice Activity Detector Released - [link](https://habr.com/ru/post/537276/)\n\n- Text Enhancement:\n  - We have published a model for text repunctuation and recapitalization for four languages - [link](https://habr.com/ru/post/581960/) \n\n### Chinese\n\n- STT:\n  - 迈向语音识别领域的 ImageNet 时刻 - [link](https://www.infoq.cn/article/4u58WcFCs0RdpoXev1E2)\n  - 语音领域学术界和工业界的七宗罪 - [link](https://www.infoq.cn/article/lEe6GCRjF1CNToVITvNw)\n\n### Russian\n\n- STT\n  - Наши сервисы для бесплатного распознавания речи стали лучше и удобнее - [link](https://habr.com/ru/post/654227/) \n  - Telegram-бот Silero бесплатно переводит речь в текст - [link](https://habr.com/ru/post/591563/)\n  - Бесплатное распознавание речи для всех желающих - [link](https://habr.com/ru/post/587512/)\n  - Последние обновления моделей распознавания речи из Silero Models - [link](https://habr.com/ru/post/577630/) \n  - Сжимаем трансформеры: простые, универсальные и прикладные способы cделать их компактными и быстрыми - [link](https://habr.com/ru/post/563778/)\n  - Ультимативное сравнение систем распознавания речи: Ashmanov, Google, Sber, Silero, Tinkoff, Yandex - [link](https://habr.com/ru/post/559640/)\n  - Мы опубликовали современные STT модели сравнимые по качеству с Google - [link](https://habr.com/ru/post/519564/)\n  - Понижаем барьеры на вход в распознавание речи - [link](https://habr.com/ru/post/494006/)\n  - Огромный открытый датасет русской речи версия 1.0 - [link](https://habr.com/ru/post/474462/)\n  - Насколько Быстрой Можно Сделать Систему STT? - [link](https://habr.com/ru/post/531524/)\n  - Наша система Speech-To-Text - [link](https://www.silero.ai/tag/our-speech-to-text/)\n  - Speech To Text - [link](https://www.silero.ai/tag/speech-to-text/)\n\n- TTS:\n  - Теперь наш синтез на 20 языках - [link](https://habr.com/ru/post/669910/) \n  - Теперь наш публичный синтез в супер-высоком качестве, в 10 раз быстрее и без детских болячек - [link](https://habr.com/ru/post/660565/) \n  - Синтезируем голос бабушки, дедушки и Ленина + новости нашего публичного синтеза - [link](https://habr.com/ru/post/584750/) \n  - Мы сделали наш публичный синтез речи еще лучше - [link](https://habr.com/ru/post/563484/)\n  - Мы Опубликовали Качественный, Простой, Доступный и Быстрый Синтез Речи - [link](https://habr.com/ru/post/549480/)\n\n- VAD:\n  - А ты используешь VAD? Что это такое и зачем он нужен - [link](https://habr.com/ru/post/594745/)\n  - Модели для Детекции Речи, Чисел и Распознавания Языков - [link](https://www.silero.ai/vad-lang-classifier-number-detector/)\n  - Мы опубликовали современный Voice Activity Detector и не только -[link](https://habr.com/ru/post/537274/)\n\n- Text Enhancement:\n  - Восстановление знаков пунктуации и заглавных букв — теперь и на длинных текстах - [link](https://habr.com/ru/post/594565/)    \n  - Мы опубликовали модель, расставляющую знаки препинания и заглавные буквы в тексте на четырех языках - [link](https://habr.com/ru/post/581946/)\n\n## Donations\n\nPlease use the \"sponsor\" button.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/snakers4/silero-models",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "silero",
    "package_url": "https://pypi.org/project/silero/",
    "platform": null,
    "project_url": "https://pypi.org/project/silero/",
    "project_urls": {
      "Bug Tracker": "https://github.com/snakers4/silero-models/issues",
      "Homepage": "https://github.com/snakers4/silero-models"
    },
    "release_url": "https://pypi.org/project/silero/0.4.1/",
    "requires_dist": [
      "torch (>=1.10.0)",
      "torchaudio (>=0.10.0)",
      "omegaconf (>=2.1.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Silero Models: pre-trained enterprise-grade STT / TTS models and benchmarks.",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14108302,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "733147d1b5db96cae2378e4047c2e65d7fdaa1b746ad3564de660c116a78f26c",
          "md5": "31f045632a5d6af907acb9a774d28063",
          "sha256": "7471bc7ea5b28350df7ec372fd081fdf70e31616ace3cf250f53f0332a1e2a68"
        },
        "downloads": -1,
        "filename": "silero-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31f045632a5d6af907acb9a774d28063",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 24334,
        "upload_time": "2022-02-28T11:09:15",
        "upload_time_iso_8601": "2022-02-28T11:09:15.271670Z",
        "url": "https://files.pythonhosted.org/packages/73/31/47d1b5db96cae2378e4047c2e65d7fdaa1b746ad3564de660c116a78f26c/silero-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86e82ae7863928b1fbd1eaa84aaf2b2f00d62a6702ab30c701acf09548d61579",
          "md5": "25691866ccb32a4789c6fe5e68ef00c1",
          "sha256": "962cebca08f8ddaaaea93e1569a394d79346b2a5aba3dd4005636c2eddd0898d"
        },
        "downloads": -1,
        "filename": "silero-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "25691866ccb32a4789c6fe5e68ef00c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29974,
        "upload_time": "2022-02-28T11:09:17",
        "upload_time_iso_8601": "2022-02-28T11:09:17.332566Z",
        "url": "https://files.pythonhosted.org/packages/86/e8/2ae7863928b1fbd1eaa84aaf2b2f00d62a6702ab30c701acf09548d61579/silero-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "730f2e4e3446b0375d97e1d165acbd04b51678e3ded3e745c634f4fcc0c7ccb2",
          "md5": "ce8322067c9edb1598383a58d0c5155f",
          "sha256": "b87b41581ed1bd4b12190aea28baf7af0d354b79fced84ce2e7bac2bea258c74"
        },
        "downloads": -1,
        "filename": "silero-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce8322067c9edb1598383a58d0c5155f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19657,
        "upload_time": "2022-05-23T16:38:16",
        "upload_time_iso_8601": "2022-05-23T16:38:16.450087Z",
        "url": "https://files.pythonhosted.org/packages/73/0f/2e4e3446b0375d97e1d165acbd04b51678e3ded3e745c634f4fcc0c7ccb2/silero-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91885b348f46b70c6c30e3dc1668acc67c10882a40bcf378bf45511b8f82d0af",
          "md5": "d28cc2e891fe41a9bf8a8f0342f3e750",
          "sha256": "392f8beb4e6acbd193c9c6c00cf7c624ac20ce98d6e63313b3c6ebce50ec1fbc"
        },
        "downloads": -1,
        "filename": "silero-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d28cc2e891fe41a9bf8a8f0342f3e750",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31703,
        "upload_time": "2022-05-23T16:38:17",
        "upload_time_iso_8601": "2022-05-23T16:38:17.827104Z",
        "url": "https://files.pythonhosted.org/packages/91/88/5b348f46b70c6c30e3dc1668acc67c10882a40bcf378bf45511b8f82d0af/silero-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "975d1ac991868b6fe1866c6f23a190c376b349ae6cb2031b2a98956c0c67b63c",
          "md5": "33f97a4b9846af1c0fa5e69ff36e4c4b",
          "sha256": "bcc374420dbfaff822174e07624d1f3e0f7f3d72eb42138d42de06b27c30713f"
        },
        "downloads": -1,
        "filename": "silero-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33f97a4b9846af1c0fa5e69ff36e4c4b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20255,
        "upload_time": "2022-06-06T18:33:49",
        "upload_time_iso_8601": "2022-06-06T18:33:49.030458Z",
        "url": "https://files.pythonhosted.org/packages/97/5d/1ac991868b6fe1866c6f23a190c376b349ae6cb2031b2a98956c0c67b63c/silero-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04c225d5869378dbac6524d07ecbb8dba622cab6c96ffd4ac954d1ce04572c44",
          "md5": "0417c181d4e0c300a577bd160ed430e9",
          "sha256": "2e99f95e97924a6b7df9744aa8beb1650ca6cabfcbbc451d59db0bb37cca108c"
        },
        "downloads": -1,
        "filename": "silero-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0417c181d4e0c300a577bd160ed430e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 33606,
        "upload_time": "2022-06-06T18:33:51",
        "upload_time_iso_8601": "2022-06-06T18:33:51.019736Z",
        "url": "https://files.pythonhosted.org/packages/04/c2/25d5869378dbac6524d07ecbb8dba622cab6c96ffd4ac954d1ce04572c44/silero-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b63f2fc95d8b023d769c818dc6102ac642b95277e3dc459fdcf4e0628b14b1c8",
          "md5": "5ad4229417b8039171d0dadaddc5a6ac",
          "sha256": "d87776a4737e253ca11c4b336784842b954415204da601b128bbebcf02a10458"
        },
        "downloads": -1,
        "filename": "silero-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ad4229417b8039171d0dadaddc5a6ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20261,
        "upload_time": "2022-06-12T18:35:49",
        "upload_time_iso_8601": "2022-06-12T18:35:49.537497Z",
        "url": "https://files.pythonhosted.org/packages/b6/3f/2fc95d8b023d769c818dc6102ac642b95277e3dc459fdcf4e0628b14b1c8/silero-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79720021b2a03c45207ff128816602a5be80a7a0fcce0ffcf39e0638ce33fd4f",
          "md5": "fed389d6107eb35a7f6961745b14608f",
          "sha256": "11a71a26a2d6827e6979d8a683a6112dcf76c34a648d025719343ce244ab6ed0"
        },
        "downloads": -1,
        "filename": "silero-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fed389d6107eb35a7f6961745b14608f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 33608,
        "upload_time": "2022-06-12T18:35:51",
        "upload_time_iso_8601": "2022-06-12T18:35:51.406163Z",
        "url": "https://files.pythonhosted.org/packages/79/72/0021b2a03c45207ff128816602a5be80a7a0fcce0ffcf39e0638ce33fd4f/silero-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b63f2fc95d8b023d769c818dc6102ac642b95277e3dc459fdcf4e0628b14b1c8",
        "md5": "5ad4229417b8039171d0dadaddc5a6ac",
        "sha256": "d87776a4737e253ca11c4b336784842b954415204da601b128bbebcf02a10458"
      },
      "downloads": -1,
      "filename": "silero-0.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5ad4229417b8039171d0dadaddc5a6ac",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 20261,
      "upload_time": "2022-06-12T18:35:49",
      "upload_time_iso_8601": "2022-06-12T18:35:49.537497Z",
      "url": "https://files.pythonhosted.org/packages/b6/3f/2fc95d8b023d769c818dc6102ac642b95277e3dc459fdcf4e0628b14b1c8/silero-0.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79720021b2a03c45207ff128816602a5be80a7a0fcce0ffcf39e0638ce33fd4f",
        "md5": "fed389d6107eb35a7f6961745b14608f",
        "sha256": "11a71a26a2d6827e6979d8a683a6112dcf76c34a648d025719343ce244ab6ed0"
      },
      "downloads": -1,
      "filename": "silero-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fed389d6107eb35a7f6961745b14608f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 33608,
      "upload_time": "2022-06-12T18:35:51",
      "upload_time_iso_8601": "2022-06-12T18:35:51.406163Z",
      "url": "https://files.pythonhosted.org/packages/79/72/0021b2a03c45207ff128816602a5be80a7a0fcce0ffcf39e0638ce33fd4f/silero-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}