{
  "info": {
    "author": "TUM Department of Electrical and Computer Engineering - Chair of Electronic Design Automation",
    "author_email": "philipp.van-kempen@tum.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# ML on MCU\n\n[![pypi package](https://badge.fury.io/py/mlonmcu.svg)](https://pypi.org/project/mlonmcu)\n[![readthedocs](https://readthedocs.org/projects/mlonmcu/badge/?version=latest)](https://mlonmcu.readthedocs.io/en/latest/?version=latest)\n![covergae](https://byob.yarr.is/tum-ei-eda/mlonmcu/coverage)\n[![GitHub license](https://img.shields.io/github/license/tum-ei-eda/mlonmcu.svg)](https://github.com/tum-ei-eda/mlonmcu/blob/main/LICENSE)\n\n[![cicd workflow](https://github.com/tum-ei-eda/mlonmcu/actions/workflows/cicd.yml/badge.svg)](https://github.com/tum-ei-eda/mlonmcu/actions/workflows/cicd.yml)\n[![demo workflow](https://github.com/tum-ei-eda/mlonmcu/actions/workflows/demo.yml/badge.svg)](https://github.com/tum-ei-eda/mlonmcu/actions/workflows/demo.yml)\n[![container workflow](https://github.com/tum-ei-eda/mlonmcu/actions/workflows/container.yml/badge.svg)](https://github.com/tum-ei-eda/mlonmcu/actions/workflows/container.yml)\n[![bench workflow](https://github.com/tum-ei-eda/mlonmcu/actions/workflows/bench.yml/badge.svg)](https://github.com/tum-ei-eda/mlonmcu/actions/workflows/bench.yml)\n\nThis project contains research code related to the deployment of inference or learning applications on tiny micro-controllers.\n\n\n* Free software: Apache License, Version 2.0\n* Python Package: [https://pypi.org/project/mlonmcu/](https://pypi.org/project/mlonmcu/)\n* Documentation: [https://mlonmcu.readthedocs.io](https://mlonmcu.readthedocs.io) or [https://tum-ei-eda.github.io/mlonmcu/](https://tum-ei-eda.github.io/mlonmcu/)\n\n\n## Features\n\n- Highly configurable python package\n- Automatic resolution and installation of dependencies\n- Supporting a large combination of frameworks/backends/targets/features:\n  - Frameworks (Backenss): TFLite Micro, MircoTVM\n  - Targets: Host (x86), ETISS (Pulpino)\n  - Features: Autotuning (WIP), Debugging\n- Build-in parallel processing of large number of benchmarks\n- Isolated enironments (not interfering with other installations)\n- Command Line and Python Development Interfaces\n- WIP: Docker images to get started quickly\n- Extensive documentation on usage and code details\n- CI/CD integration and high PyTest coverage\n\n## Getting started\n\n### Prerequisites\n\n#### Ubuntu/Debian\n\nFirst, a set of APT packages needs to be installed:\n\n```\n# Python related\nsudo apt install python3-pip python3-venv\n\n# MLonMCU related\nsudo apt install libboost-system-dev libboost-filesystem-dev libboost-program-options-dev graphviz doxygen libtinfo-dev zlib1g-dev texinfo unzip device-tree-compiler tree g++\n\n# Optional (depending on configuration)\nsudo apt install ninja-build\n```\n\nAlso make sure that your default Python is at least v3.7. If the `python` command is not available in your shell or points Python v2.7 check out `python-is-python3`.\n\n**Warning:** It seems like the ETISS tool fails to compile if if find a version of LLVM 11 on your system which does not include Clang 11. The best workaround for now is to (if possible) remove those tools from your system: `sudo apt remove llvm-11* clang-11*` (See issue #1)\n\nMake sure to use a fresh virtual Python environment in the following steps.\n\n##### Install Release from PyPI\n\n**Warning:** As the PyPI package is not always up to date, it is currently recommented to use a self-build version of the package (as explained in the next section)\n\nTo use the PIP package, run the following: `pip install mlonmcu` (Add `--user` if you are not using a virtual environment)\n\n\n#### Build Package manually\n\nFirst, install all relevant dependencies:\n\n```\npython -m venv .venv  # Feel free to choose a different directory or use a conda environment\n\n# Run this whenever your have updated the repository\nsource .venv/bin/activate\npip install -r requirements.txt\n\n**Warning:** It is recommended to have at least version 3.20 of CMake installed for full compatibility!\n\n# Only if you want to use the provided python notebooks, as explained in  ./ipynb/README.md\npip install -r ipynb/requirements.txt\n\n# Optional (only for development)\npip install -r requirements_dev.txt\npip install -r docs/requirements.txt\n```\n\nThen you should be able to install the `mlonmcu` python package like this\n\n```\n# Optionally remove an older version first: pip uninstall mlonmcu\n\nmake install  # Alternative: python setup.py install\n```\n\n#### Docker (Any other OS)\n\nSee [`./docker/README.md`](htps://github.com/tum-ei-eda/mlonmcu/blob/main/docker/README.md) for more details.\n\nThis repository ships three different types of docker images based on Debian:\n\n- A minimal one with preinstalled software dependencies and python packages\n\n  Feel free to use this one if you do not want to install anything (except Docker) on your main sytem to work with mlonmcu\n- A medium one which already has the `mlonmcu` python package installed\n\n  Recommended and the easiest to use. (Especially when using `docker-compose` to mount shared directories etc.)\n\n- A very large one with an already initialized and installed\n\n  Mainly used for triggering automated benchmarks without spending too much time on downloading/compiling heavy dependencies over and over again.\n\n### Usage\n\nIs is recommended to checkout the provided [Demo Jupyter Notebook](https://github.com/tum-ei-eda/mlonmcu/blob/main/ipynb/Demo.ipynb) as it contains a end-to-end example which should help to understand the main concepts and methodology of the tool. The following paragraphs can be seen as a TL;DL version of the information in that Demo notebook.\n\n#### Using the command line\n\nTODO\n\n#### Using the Python API\n\nTODO\n\nWhile some tools and features of this project work out of the box, some of them require setting up an environment where additional dependencies are installed.\n\nBy default, this environment would be created intactively using the `mlonmcu init` command.\n\nTo use the created environment in a python program, a `MlonMcuContext` needs to be created as follows:\n\n```\nimport mlonmcu.context\n\nwith mlonmcu.context.MlonMcuContext() as context:\n    pass\n```\n\nThe following table shows which parts of `mlonmcu` require such an context as a prerequisite:\n\n### Important terms\n\n- Context\n- Environment\n- Run\n- Backend\n- Feature\n- Target\n- (Flow)\n- Framework\n- Frontend\n- Task\n\nTODO\n## Development\n\nMake sure to first install the additonal set of development Python packages into your virtual environment:\n\n```\npip install -r requirements_dev.txt  # Building distributions and running tests\npip install -r docs/requirements.txt  # For working with the documentation\n```\n\nUnit test and integration test are defined in the `tests/` directory and can be triggered using `make test` or `pytest tests/`\n\nCoverage can be determined by running `make coverage`. The latest coverage report (HTML) for the default branch can also be found as an artifact of the CI/CD workflow.\n\nDocumentation is mainly generated automatically from doctrings (triggered via `make html`). It is also possible to include markdown files from the repo into the `.rst` files found in the [`docs/`](./docs/) directory. There is a GitHub workflow which publishes the documentation for the default branch to our [GitHub Pages](https://tum-ei-eda.github.io/mlonmcu).\n\nRegarding coding style, it is recommended to run `black` before every commit. The default line length should be given in the `setup.cfg` file.\n\n### Future Work\n\n- [ ] Finish beta version `v0.1.0`\n- [ ] Open Source Release\n  - [ ] Make repository public\n  - [ ] Release python package\n  - [ ] Publish docs automatically to https://readthedocs.org\n\n## Credits\n\nThis is a research project proposed by the Chair of Design Automation of the Technical University of Munich.\n\n### Developers\n\n- Rafael Stahl (TUM) [@rafzi]\n\n  - Wrote initial version of the MLonMCU project\n\n- Philipp van Kempen (TUM) [@PhilippvK]\n\n  - Came up with MLonMCU Python package\n\n\n### Other\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template. However most of the templates was manually changed to be in Markdown instead of reStructuredText.\n\n- **Cookiecutter:** https://github.com/audreyr/cookiecutter\n- **`audreyr/cookiecutter-pypackage`:** https://github.com/audreyr/cookiecutter-pypackage\n\n\n# History\n\n## 0.1.0 (2021-11-12)\n\n* First closed-source release.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tum-ei-eda/mlonmcu",
    "keywords": "mlonmcu",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mlonmcu",
    "package_url": "https://pypi.org/project/mlonmcu/",
    "platform": null,
    "project_url": "https://pypi.org/project/mlonmcu/",
    "project_urls": {
      "Homepage": "https://github.com/tum-ei-eda/mlonmcu"
    },
    "release_url": "https://pypi.org/project/mlonmcu/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "This project contains research code related to the deployment of inferenceor learning applications on tiny micro-controllers.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16485260,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c48f7db374381e75cef687661831db04c134155795b2338d3f691e3dd8797f1",
          "md5": "fa8409405dc3ca913d6cd6be77f4bfd8",
          "sha256": "7308a5adf7e8b3a9d0990a244e2a9147594b56b21568beb5759bde693c0f4cb1"
        },
        "downloads": -1,
        "filename": "mlonmcu-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa8409405dc3ca913d6cd6be77f4bfd8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 203247,
        "upload_time": "2022-03-07T10:33:37",
        "upload_time_iso_8601": "2022-03-07T10:33:37.254295Z",
        "url": "https://files.pythonhosted.org/packages/0c/48/f7db374381e75cef687661831db04c134155795b2338d3f691e3dd8797f1/mlonmcu-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6020664c1ff79895420a1a8cba046af52d011ab4bf5756d019449f07b4a0343",
          "md5": "4150f71c05d10b57184f578e0c26194c",
          "sha256": "82d4db954dc3aa04fc4736abdff5a439627797f9c60214c747cfe4c2085af0d5"
        },
        "downloads": -1,
        "filename": "mlonmcu-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4150f71c05d10b57184f578e0c26194c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 129454,
        "upload_time": "2022-03-04T09:11:46",
        "upload_time_iso_8601": "2022-03-04T09:11:46.535059Z",
        "url": "https://files.pythonhosted.org/packages/a6/02/0664c1ff79895420a1a8cba046af52d011ab4bf5756d019449f07b4a0343/mlonmcu-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71e7bcb79906532ffa7a63944c20974ef218f84b1161517b85ad4feb93491e6e",
          "md5": "711da42fbcb84b888e7c2c6a61bc30b8",
          "sha256": "f4f6a3b50f7cf81fe2de60dc42defbf449bd651bedd6ecfeda1adc81e5a2fa97"
        },
        "downloads": -1,
        "filename": "mlonmcu-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "711da42fbcb84b888e7c2c6a61bc30b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 225105,
        "upload_time": "2022-03-07T14:54:03",
        "upload_time_iso_8601": "2022-03-07T14:54:03.604506Z",
        "url": "https://files.pythonhosted.org/packages/71/e7/bcb79906532ffa7a63944c20974ef218f84b1161517b85ad4feb93491e6e/mlonmcu-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57cee3d891325710e5d3a4e5215c95d8592bb23ce839a877efef02d81215e022",
          "md5": "e4f736112430500b87172a06d30f897e",
          "sha256": "e87593bceeceb69725b34724580873b8cd6909331e15a4f348c8cf0b08003592"
        },
        "downloads": -1,
        "filename": "mlonmcu-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e4f736112430500b87172a06d30f897e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 145997,
        "upload_time": "2022-03-07T14:54:05",
        "upload_time_iso_8601": "2022-03-07T14:54:05.328690Z",
        "url": "https://files.pythonhosted.org/packages/57/ce/e3d891325710e5d3a4e5215c95d8592bb23ce839a877efef02d81215e022/mlonmcu-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "843e4ff315e6252c92879764a8dca6125e76c72c7d5a0134579ce83e21580a04",
          "md5": "b342287c7a16354fa0805729c49c4a26",
          "sha256": "e3d489dd69c2f9f26c97c8ec1a3a88963dc774692e48acc812a07b60679327b8"
        },
        "downloads": -1,
        "filename": "mlonmcu-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b342287c7a16354fa0805729c49c4a26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 361694,
        "upload_time": "2022-06-27T10:14:28",
        "upload_time_iso_8601": "2022-06-27T10:14:28.789662Z",
        "url": "https://files.pythonhosted.org/packages/84/3e/4ff315e6252c92879764a8dca6125e76c72c7d5a0134579ce83e21580a04/mlonmcu-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85c816e37376c0f0a5bea20eead92aa7e184c38d1bdee6fa7dc9b42f4f677c93",
          "md5": "0ac15cfc6e996ddc0ebdb27c2eb6fcda",
          "sha256": "00a85c18681041db454f8285838c129c983c3b8435425cfbb5664c4af6922d60"
        },
        "downloads": -1,
        "filename": "mlonmcu-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ac15cfc6e996ddc0ebdb27c2eb6fcda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 227448,
        "upload_time": "2022-06-27T10:14:40",
        "upload_time_iso_8601": "2022-06-27T10:14:40.355437Z",
        "url": "https://files.pythonhosted.org/packages/85/c8/16e37376c0f0a5bea20eead92aa7e184c38d1bdee6fa7dc9b42f4f677c93/mlonmcu-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78c78c0d95c44992aa81a7d998cf46a9d7b762604c28848cc48d22e2a6512ede",
          "md5": "5813b66cd4af8245c09226c99b020dc9",
          "sha256": "8bf25dd37ee2d2c13d821c19f92b374cc2fc9e007a372b25e8f33b37e8ab0e9a"
        },
        "downloads": -1,
        "filename": "mlonmcu-0.3.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5813b66cd4af8245c09226c99b020dc9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 517550,
        "upload_time": "2023-01-19T09:16:09",
        "upload_time_iso_8601": "2023-01-19T09:16:09.818671Z",
        "url": "https://files.pythonhosted.org/packages/78/c7/8c0d95c44992aa81a7d998cf46a9d7b762604c28848cc48d22e2a6512ede/mlonmcu-0.3.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5729db69489278b0d32f347da0d140492f4acf17b42e084e17af77e013802fb",
          "md5": "9340e22d0cb62febdc3a0f9a3a1ec872",
          "sha256": "9965d38cc9b3832ec06a27a772698b4482c842109b31993dca006ee02938b10e"
        },
        "downloads": -1,
        "filename": "mlonmcu-0.3.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "9340e22d0cb62febdc3a0f9a3a1ec872",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 315538,
        "upload_time": "2023-01-19T09:16:11",
        "upload_time_iso_8601": "2023-01-19T09:16:11.618863Z",
        "url": "https://files.pythonhosted.org/packages/f5/72/9db69489278b0d32f347da0d140492f4acf17b42e084e17af77e013802fb/mlonmcu-0.3.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "843e4ff315e6252c92879764a8dca6125e76c72c7d5a0134579ce83e21580a04",
        "md5": "b342287c7a16354fa0805729c49c4a26",
        "sha256": "e3d489dd69c2f9f26c97c8ec1a3a88963dc774692e48acc812a07b60679327b8"
      },
      "downloads": -1,
      "filename": "mlonmcu-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b342287c7a16354fa0805729c49c4a26",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 361694,
      "upload_time": "2022-06-27T10:14:28",
      "upload_time_iso_8601": "2022-06-27T10:14:28.789662Z",
      "url": "https://files.pythonhosted.org/packages/84/3e/4ff315e6252c92879764a8dca6125e76c72c7d5a0134579ce83e21580a04/mlonmcu-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85c816e37376c0f0a5bea20eead92aa7e184c38d1bdee6fa7dc9b42f4f677c93",
        "md5": "0ac15cfc6e996ddc0ebdb27c2eb6fcda",
        "sha256": "00a85c18681041db454f8285838c129c983c3b8435425cfbb5664c4af6922d60"
      },
      "downloads": -1,
      "filename": "mlonmcu-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0ac15cfc6e996ddc0ebdb27c2eb6fcda",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 227448,
      "upload_time": "2022-06-27T10:14:40",
      "upload_time_iso_8601": "2022-06-27T10:14:40.355437Z",
      "url": "https://files.pythonhosted.org/packages/85/c8/16e37376c0f0a5bea20eead92aa7e184c38d1bdee6fa7dc9b42f4f677c93/mlonmcu-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}