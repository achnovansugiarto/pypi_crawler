{
  "info": {
    "author": "Samuel López Saura",
    "author_email": "samuellopezsaura@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PDF TOOLBOX\n\nThis package is designed to be used as an extensible library.\n\n> PDF TOOLBOX allows extracting, parsing, structuring and storing\n  text from PDFs.\n\nThis package emerges as the solution to a challenge in which I\nhad to obtain and store clinical data but can be used for any other purpose.\n\n## Package installation\n\nDownload and install this package.\nTo install this package you should run:\n\n```bash\npython3 setup.py install\n```\n\n## Extracting PDF Text\n\nPDF TOOLBOX it is designed to read PDFs from multiple sources.\n\nThe `pdf.readers.filereader` module implements the reading of PDFs stored as files.\nTo read PDFs stored in memory, in a rabbitmq or in another data source,\nit is necessary to create your own implementation that respects the\ninterface defined in `pdf.domain.pdfreader`.\n\n#### Example usage\n\nRetrieving text from a PDF file:\n\n```python\nfrom pdf_toolbox.pdf.readers.filereader import FilePDFReader\n\npdf_reader = FilePDFReader(\"inputs/report.pdf\")\n\npdf_text = pdf_reader.extract_text()\n```\n\n## Parsing PDF Text\n\nPDF text can have as parsers as PDF types are in the world.\n\nThe provided parser parses the PDF text of the challenge.\nThe provided parser obtains the text of a specific clinical\nPDF and returns its information structured in a dictionary.\n\n#### Example usage:\n```python\nfrom pdf_toolbox.text_extraction.report_parsers.challenge_parser import ChallengeParser\n\nchallenge_parser = ChallengeParser(pdf_text)\npdf_data = challenge_parser.parse()\n```\n\nYou can define your own parser for other PDF types by implementing the\n`ReportParser` interface located in `text_extraction.domain.report_parser`.\n\n## Storing PDF parsed data\n\n### Creating an identifier for the report\n\nBefore saving the report data we should have defined an identifier for it. This package has a shortcut for it.\n\nThe method `create_id` returns a new uuid version 4 identifier.\n\n#### Example usage\n\n```python\nfrom pdf_toolbox.shared.utils import create_id\n\nreport_id = create_id()\n```\n\n### Saving report data\n\nThe use of a JSON file as a storage backend is implemented in this package. \n\n#### Example usage\n\n```python\nfrom pdf_toolbox.report_storage.storages.json_storage import JSONStorage\n\njson_storage = JSONStorage(\"demo.json\")\njson_storage.save(pdf_data, report_id)\n```\n\nAny type of backend can be implemented without losing compatibility with the rest of the code. Every storage backend must implement the interface `report_storage.domain.storage.Storage`.\n\n## Running tests\n\nTo run the tests of this package you must install dev_requirements.txt and\nrun pytest inside pdf_toolbox folder.\n\n```bash \npip install -r dev_requirements.txt\ncd pdf_toolbox\npytest\n```\n\n## LICENSE MIT\n\nCopyright 2022 Samuel López Saura\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pdf-toolbox",
    "package_url": "https://pypi.org/project/pdf-toolbox/",
    "platform": null,
    "project_url": "https://pypi.org/project/pdf-toolbox/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pdf-toolbox/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package to extract and store data from PDFs",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13164144,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0833bc15fc9ed5a27f60bdd19d6f70b95db856fe47eff8d1f244c81d3e0cc94",
          "md5": "883d2764d365076358abba954c962812",
          "sha256": "c9894b42a5a83af8809bcda88b189e91d10843963330b07d7895432350320a35"
        },
        "downloads": -1,
        "filename": "pdf_toolbox-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "883d2764d365076358abba954c962812",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7855,
        "upload_time": "2022-03-13T20:05:35",
        "upload_time_iso_8601": "2022-03-13T20:05:35.025023Z",
        "url": "https://files.pythonhosted.org/packages/e0/83/3bc15fc9ed5a27f60bdd19d6f70b95db856fe47eff8d1f244c81d3e0cc94/pdf_toolbox-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e0833bc15fc9ed5a27f60bdd19d6f70b95db856fe47eff8d1f244c81d3e0cc94",
        "md5": "883d2764d365076358abba954c962812",
        "sha256": "c9894b42a5a83af8809bcda88b189e91d10843963330b07d7895432350320a35"
      },
      "downloads": -1,
      "filename": "pdf_toolbox-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "883d2764d365076358abba954c962812",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7855,
      "upload_time": "2022-03-13T20:05:35",
      "upload_time_iso_8601": "2022-03-13T20:05:35.025023Z",
      "url": "https://files.pythonhosted.org/packages/e0/83/3bc15fc9ed5a27f60bdd19d6f70b95db856fe47eff8d1f244c81d3e0cc94/pdf_toolbox-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}