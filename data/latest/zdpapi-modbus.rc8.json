{
  "info": {
    "author": "张大鹏",
    "author_email": "lxgzhw@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# zdpapi_modbus\npython版modbus协议快速开发工具库\n\n安装方式\n```shell\npip install zdpapi_modbus\n```\n\n## 一、快速入门\n\n### 1.1 实例1：读写数据\n\n#### 1.1.1 slave读写master数据\n```python\nfrom zdpapi_modbus import  cst, modbus_tcp\nimport time\nimport random\n\n# 创建一个TCP服务\nserver = modbus_tcp.TcpServer()\n# 启动server\nserver.start()\n# 添加一个slave\nslave_id = 1\nslave_1 = server.add_slave(slave_id)\n# 添加一个block\nblock_name = \"0\"\nslave_1.add_block(block_name, cst.HOLDING_REGISTERS, 0, 100)\n\n\n# 不断的写入数据\nwhile True:\n    # 写入数据\n    slave = server.get_slave(slave_id)\n    address = 0\n    values = [random.randint(0, 100) for _ in range(6)]\n    slave.set_values(block_name, address, values)\n    values = slave.get_values(block_name, address, len(values))\n    print(\"slave上的values是：\", values)\n    # 读取数据\n    slave = server.get_slave(slave_id)\n    address = 10\n    values = slave.get_values(block_name, address, len(values))\n    print(\"slave接收到server传过来的数据：\", values)\n    time.sleep(1)\n```\n\n#### 1.1.2 master从slave读数据\n```python\nfrom zdpapi_modbus import cst, modbus_tcp\nimport time\nimport random\n\nmaster = modbus_tcp.TcpMaster()\nmaster.set_timeout(5.0)\nslave_id = 1\n\nwhile True:\n    # 读取数据\n    values = master.execute(slave_id, cst.READ_HOLDING_REGISTERS, 0, 6)\n    print(\"values:\", values)\n    # 写入数据\n    address = 10\n    values = [random.randint(10, 20) for _ in range(6)]\n    master.execute(slave_id, cst.WRITE_MULTIPLE_REGISTERS, address, output_value=values)\n    # 1s执行一次\n    time.sleep(1)\n```\n\n### 1.2 使用钩子\n\n#### 1.2.1 slave\n```python\nimport sys\nfrom zdpapi_modbus import cst, modbus_tcp, utils\nimport logging\n\n\ndef main():\n    logger = utils.create_logger(name=\"console\", record_format=\"%(message)s\")\n\n    try:\n        # 创建一个TCP服务\n        server = modbus_tcp.TcpServer()\n        logger.info(\"running...\")\n        logger.info(\"enter 'quit' for closing the server\")\n        # 启动server\n        server.start()\n        # 添加一个slave\n        slave_1 = server.add_slave(1)\n        # 添加一个block\n        slave_1.add_block('0', cst.HOLDING_REGISTERS, 0, 100)\n        while True:\n            cmd = sys.stdin.readline()\n            args = cmd.split(' ')\n            # 退出\n            if cmd.find('quit') == 0:\n                sys.stdout.write('bye-bye\\r\\n')\n                break\n            # 添加slave\n            elif args[0] == 'add_slave':\n                slave_id = int(args[1])\n                server.add_slave(slave_id)\n                sys.stdout.write('done: slave %d added\\r\\n' % slave_id)\n            # 添加block\n            elif args[0] == 'add_block':\n                slave_id = int(args[1])\n                name = args[2]\n                block_type = int(args[3])\n                starting_address = int(args[4])\n                length = int(args[5])\n                slave = server.get_slave(slave_id)\n                slave.add_block(name, block_type, starting_address, length)\n                sys.stdout.write('done: block %s added\\r\\n' % name)\n            # 写入数据\n            elif args[0] == 'set_values':\n                slave_id = int(args[1])\n                name = args[2]\n                address = int(args[3])\n                values = []\n                for val in args[4:]:\n                    values.append(int(val))\n                slave = server.get_slave(slave_id)\n                slave.set_values(name, address, values)\n                values = slave.get_values(name, address, len(values))\n                sys.stdout.write('done: values written: %s\\r\\n' % str(values))\n            # 读取数据\n            elif args[0] == 'get_values':\n                slave_id = int(args[1])\n                name = args[2]\n                address = int(args[3])\n                length = int(args[4])\n                slave = server.get_slave(slave_id)\n                values = slave.get_values(name, address, length)\n                sys.stdout.write('done: values read: %s\\r\\n' % str(values))\n            else:\n                sys.stdout.write(\"unknown command %s\\r\\n\" % args[0])\n    finally:\n        server.stop()\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n#### 1.2.2 master\n```python\nfrom __future__ import print_function\n\nfrom zdpapi_modbus import cst, modbus_tcp, hooks, utils, modbus\nimport logging\n\n\ndef main():\n    \"\"\"main\"\"\"\n    logger = utils.create_logger(\"console\", level=logging.DEBUG)\n    # 读取数据之后的回调\n    def on_after_recv(data):\n        master, bytes_data = data\n        logger.info(bytes_data)\n    # 注册回调\n    hooks.install_hook('modbus.Master.after_recv', on_after_recv)\n\n    try:\n        # 连接之前的回调\n        def on_before_connect(args):\n            master = args[0]\n            logger.debug(\"on_before_connect {0} {1}\".format(master._host, master._port))\n        # 注册回调\n        hooks.install_hook(\"modbus_tcp.TcpMaster.before_connect\", on_before_connect)\n        # 读取数据之后的回调\n        def on_after_recv(args):\n            response = args[1]\n            logger.debug(\"on_after_recv {0} bytes received\".format(len(response)))\n        hooks.install_hook(\"modbus_tcp.TcpMaster.after_recv\", on_after_recv)\n\n        # 连接到slave\n        master = modbus_tcp.TcpMaster()\n        master.set_timeout(5.0)\n        logger.info(\"connected\")\n        # 读取数据\n        logger.info(master.execute(1, cst.READ_HOLDING_REGISTERS, 0, 3))\n\n        # logger.info(master.execute(1, cst.READ_HOLDING_REGISTERS, 0, 2, data_format='f'))\n\n        # Read and write floats\n        # master.execute(1, cst.WRITE_MULTIPLE_REGISTERS, starting_address=0, output_value=[3.14], data_format='>f')\n        # logger.info(master.execute(1, cst.READ_HOLDING_REGISTERS, 0, 2, data_format='>f'))\n\n        # send some queries\n        # logger.info(master.execute(1, cst.READ_COILS, 0, 10))\n        # logger.info(master.execute(1, cst.READ_DISCRETE_INPUTS, 0, 8))\n        # logger.info(master.execute(1, cst.READ_INPUT_REGISTERS, 100, 3))\n        # logger.info(master.execute(1, cst.READ_HOLDING_REGISTERS, 100, 12))\n        # logger.info(master.execute(1, cst.WRITE_SINGLE_COIL, 7, output_value=1))\n        # logger.info(master.execute(1, cst.WRITE_SINGLE_REGISTER, 100, output_value=54))\n        # logger.info(master.execute(1, cst.WRITE_MULTIPLE_COILS, 0, output_value=[1, 1, 0, 1, 1, 0, 1, 1]))\n        # logger.info(master.execute(1, cst.WRITE_MULTIPLE_REGISTERS, 100, output_value=xrange(12)))\n\n    except modbus.ModbusError as exc:\n        logger.error(\"%s- Code=%d\", exc, exc.get_exception_code())\n\n\nif __name__ == \"__main__\":\n    main()\n```\n\n### 1.3 批量写入和批量读取modbus\n\n### 1.3.1 slave\n```python\n\"\"\"\n按照1秒钟传递100台机组的数据，1台机组25个变量\n\"\"\"\n\nfrom zdpapi_modbus import cst, modbus_tcp, rand_float, trans_float_to_int\nimport time\n\n# 创建一个TCP服务\nserver = modbus_tcp.TcpServer()\n\n# 启动server\nserver.start()\n\n# 添加一个slave\nslave_id = 1\nslave_1 = server.add_slave(slave_id)\n\n# 添加一个block\nblock_name = \"0\"\nslave_1.add_block(block_name, cst.HOLDING_REGISTERS, 0, 3000)\n\n# 单台风机的数据\nvariables = [\n    \"机舱X方向振动\",\n    \"机舱Y方向振动\",\n    \"限功率运行状态\",\n    \"电网有功功率\",\n    \"有功功率\",\n    \"风轮转速\",\n    \"环境温度\",\n    \"瞬时风向\",\n    \"瞬时风速\",\n    \"工作模式\",\n    \"测试写入主控变量1\",\n    \"1#风向仪瞬时风向\",\n    \"2#风向仪瞬时风向\",\n    \"机舱外风向\",\n    \"偏航方位角\",\n    \"测试（高频数据）1\",\n    \"测试（高频数据）2\",\n    \"测试（高频数据）3\",\n    \"测试（高频数据）4\",\n    \"测试（高频数据）5\",\n    \"测试（高频数据）6\",\n    \"测试（高频数据）7\",\n    \"测试（高频数据）8\",\n    \"测试（高频数据）9\",\n    \"测试（高频数据）10\",\n]\n\n# 分两个slave传，一个传50台风机\n# 生成数据\ndata = []\naddress = 0\nfor i in range(1, 51):\n    for j in range(1, len(variables)+1):\n        control = {}\n        control[\"device_id\"] = i\n        control[\"cname\"] = variables[j-1]\n        control[\"name\"] = f\"v{i}_{j}\"\n        address += 2\n        control[\"address\"] = address\n        control[\"length\"] = 2\n        control[\"func\"] = 3\n        control[\"type\"] = \"F\"\n        data.append(control)\n\n# 生成随机数\ndata_float = [rand_float(0, 100) for _ in data]\n\n# 不断的写入数据\nwhile True:\n    # 生成数据\n\n    # 写入数据\n    slave = server.get_slave(slave_id)  # slave\n    address = 0\n\n    values = trans_float_to_int(data_float)\n    value_length = len(values)\n    print(\"要传输的数据个数：\", value_length)\n    index = 0\n    while True:\n        slave.set_values(block_name, index, values[index:index + 100])\n        \n        # 最后一次传输\n        value_length -= 100\n        if value_length <= 100:\n            slave.set_values(block_name, index, values[index:])\n            break\n        \n        # 每次传100个数\n        index += 100\n\n    time.sleep(1)\n```\n\n### 1.3.2 master\n```python\n\"\"\"\n从服务端获取100台机组的数据，每台机组有25个变量\n\"\"\"\nfrom zdpapi_modbus import cst, modbus_tcp, trans_int_to_float\nimport time\nimport random\n\nmaster = modbus_tcp.TcpMaster()\nmaster.set_timeout(5.0)\nslave_id = 1\n\n\n# 单台风机的数据\nvariables = [\n    \"机舱X方向振动\",\n    \"机舱Y方向振动\",\n    \"限功率运行状态\",\n    \"电网有功功率\",\n    \"有功功率\",\n    \"风轮转速\",\n    \"环境温度\",\n    \"瞬时风向\",\n    \"瞬时风速\",\n    \"工作模式\",\n    \"测试写入主控变量1\",\n    \"1#风向仪瞬时风向\",\n    \"2#风向仪瞬时风向\",\n    \"机舱外风向\",\n    \"偏航方位角\",\n    \"测试（高频数据）1\",\n    \"测试（高频数据）2\",\n    \"测试（高频数据）3\",\n    \"测试（高频数据）4\",\n    \"测试（高频数据）5\",\n    \"测试（高频数据）6\",\n    \"测试（高频数据）7\",\n    \"测试（高频数据）8\",\n    \"测试（高频数据）9\",\n    \"测试（高频数据）10\",\n]\n\n# 分两个slave传，一个传50台风机\n# 生成数据\ndata = []\naddress = 0\nfor i in range(1, 51):\n    for j in range(1, len(variables)+1):\n        control = {}\n        control[\"device_id\"] = i\n        control[\"cname\"] = variables[j-1]\n        control[\"name\"] = f\"v{i}_{j}\"\n        address += 2\n        control[\"address\"] = address\n        control[\"length\"] = 2\n        control[\"func\"] = 3\n        control[\"type\"] = \"F\"\n        data.append(control)\n\nwhile True:\n    # 读取数据\n    data = []\n    data_length = 2500  # 要取出2500个数\n    index = 0\n    while True:\n        # 每次取出100个数\n        length = 100\n        values = master.execute(\n            slave_id, cst.READ_HOLDING_REGISTERS, index, length)\n        data.extend(values)\n\n        # 最后一次取\n        data_length -= 100\n        if data_length <= 100:\n            values = master.execute(\n                slave_id, cst.READ_HOLDING_REGISTERS, index, data_length)\n            data.extend(values)\n            break\n\n        index += 100\n\n    # print(\"data:\", data, len(data))\n\n    # 解析为真实的数组\n    result = trans_int_to_float(data, keep_num=2)\n    print(\"最终结果：\", result, len(result))\n\n    # 1s执行一次\n    time.sleep(1)\n```\n\n### 1.4 使用Slave和Master类\n#### 1.4.1 slave\n```python\n\"\"\"\n按照1秒钟传递100台机组的数据，1台机组25个变量\n\"\"\"\n\nfrom zdpapi_modbus import Slave, rand_float\n\nslave = Slave()\nslave.add_slave(1)\nslave.add_block(1, \"0\", 3)\n\n# 单台风机的数据\nvariables = [\n    \"机舱X方向振动\",\n    \"机舱Y方向振动\",\n    \"限功率运行状态\",\n    \"电网有功功率\",\n    \"有功功率\",\n    \"风轮转速\",\n    \"环境温度\",\n    \"瞬时风向\",\n    \"瞬时风速\",\n    \"工作模式\",\n    \"测试写入主控变量1\",\n    \"1#风向仪瞬时风向\",\n    \"2#风向仪瞬时风向\",\n    \"机舱外风向\",\n    \"偏航方位角\",\n    \"测试（高频数据）1\",\n    \"测试（高频数据）2\",\n    \"测试（高频数据）3\",\n    \"测试（高频数据）4\",\n    \"测试（高频数据）5\",\n    \"测试（高频数据）6\",\n    \"测试（高频数据）7\",\n    \"测试（高频数据）8\",\n    \"测试（高频数据）9\",\n    \"测试（高频数据）10\",\n]\n\n# 分两个slave传，一个传50台风机\n# 生成数据\ndata = []\naddress = 0\nfor i in range(1, 51):\n    for j in range(1, len(variables)+1):\n        control = {}\n        control[\"device_id\"] = i\n        control[\"cname\"] = variables[j-1]\n        control[\"name\"] = f\"v{i}_{j}\"\n        address += 2\n        control[\"address\"] = address\n        control[\"length\"] = 2\n        control[\"func\"] = 3\n        control[\"type\"] = \"F\"\n        data.append(control)\n\n# 生成随机数\ndata_float = [rand_float(0, 100) for _ in data]\nslave.run(1, \"0\", data_float, random_data=True)\n```\n\n#### 1.4.2 master\n```python\n\"\"\"\n从服务端获取100台机组的数据，每台机组有25个变量\n\"\"\"\nfrom zdpapi_modbus import Master\n\nmaster = Master()\nslave_id = 1\n\n\n# 单台风机的数据\nvariables = [\n    \"机舱X方向振动\",\n    \"机舱Y方向振动\",\n    \"限功率运行状态\",\n    \"电网有功功率\",\n    \"有功功率\",\n    \"风轮转速\",\n    \"环境温度\",\n    \"瞬时风向\",\n    \"瞬时风速\",\n    \"工作模式\",\n    \"测试写入主控变量1\",\n    \"1#风向仪瞬时风向\",\n    \"2#风向仪瞬时风向\",\n    \"机舱外风向\",\n    \"偏航方位角\",\n    \"测试（高频数据）1\",\n    \"测试（高频数据）2\",\n    \"测试（高频数据）3\",\n    \"测试（高频数据）4\",\n    \"测试（高频数据）5\",\n    \"测试（高频数据）6\",\n    \"测试（高频数据）7\",\n    \"测试（高频数据）8\",\n    \"测试（高频数据）9\",\n    \"测试（高频数据）10\",\n]\n\n# 分两个slave传，一个传50台风机\n# 生成数据\ndata = []\naddress = 0\nfor i in range(1, 51):\n    for j in range(1, len(variables)+1):\n        control = {}\n        control[\"device_id\"] = i\n        control[\"cname\"] = variables[j-1]\n        control[\"name\"] = f\"v{i}_{j}\"\n        address += 2\n        control[\"address\"] = address\n        control[\"length\"] = 2\n        control[\"func\"] = 3\n        control[\"type\"] = \"F\"\n        data.append(control)\n\nmaster.run_read_many_float(slave_id, 2500, console=True)\n```\n\n\n## 二、数据的打包和解包\n\n### 2.1 基本使用\n```python\nfrom zdpapi_modbus import *\n\ndata = [11, 22, 33]\n# 测试打包\nprint(\"============================================测试打包=====================================================\")\nprint(pack_byte(data))\nprint(pack_int(data))\nprint(pack_long(data))\nprint(pack_float(data))\nprint(pack_double(data))\nprint(\"============================================测试完毕=====================================================\\n\\n\")\n\n# 测试解包\nprint(\"============================================测试解包=====================================================\")\nprint(unpack_byte(len(data), pack_byte(data)))\nprint(unpack_int(len(data), pack_int(data)))\nprint(unpack_long(len(data), pack_long(data)))\nprint(unpack_float(len(data), pack_float(data)))\nprint(unpack_double(len(data), pack_double(data)))\nprint(\"============================================测试完毕=====================================================\\n\\n\")\n```\n\n### 2.2 数据类型转换\n```python\nfrom zdpapi_modbus import *\n\ndata = [11.11, 22.22, 33.33]\n\n# 将浮点数转换为整数，再将整数还原为浮点数\nprint(trans_float_to_int(data))\nprint(trans_int_to_float(trans_float_to_int(data)))\n```\n\n## 三、生成随机数\n\n### 3.1 生成随机浮点数\n```python\nfrom zdpapi_modbus import *\n\ndata = [rand_float(0, 100) for _ in range(50)]\nprint(data)\n\n# 将浮点数转换为整数，再将整数还原为浮点数\nprint(trans_float_to_int(data))\nprint(trans_int_to_float(trans_float_to_int(data), keep_num=6))\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zhangdapeng520/zdpapi_modbus",
    "keywords": "zdpapi,modbus,zhangdapeng",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zdpapi-modbus",
    "package_url": "https://pypi.org/project/zdpapi-modbus/",
    "platform": "",
    "project_url": "https://pypi.org/project/zdpapi-modbus/",
    "project_urls": {
      "Documentation": "https://github.com/zhangdapeng520/zdpapi_modbus",
      "Homepage": "https://github.com/zhangdapeng520/zdpapi_modbus",
      "Repository": "https://github.com/zhangdapeng520/zdpapi_modbus"
    },
    "release_url": "https://pypi.org/project/zdpapi-modbus/1.7.1/",
    "requires_dist": [
      "aioredis[hiredis] (>=2.0.0,<3.0.0)",
      "redis (>=4.0.2,<5.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "python版modbus协议快速开发工具库",
    "version": "1.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12615783,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b929138674b0e594086761ef8840c0092ae3ff962d003fde1ab89392c7be45d6",
          "md5": "64261a975a8d160ebed75a4bd5de5905",
          "sha256": "dc5473c0d999b62ce45e9b7ec2af8b342fed8bd993ad31ab35632b3ff9331361"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "64261a975a8d160ebed75a4bd5de5905",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 31843,
        "upload_time": "2021-12-11T03:49:20",
        "upload_time_iso_8601": "2021-12-11T03:49:20.211777Z",
        "url": "https://files.pythonhosted.org/packages/b9/29/138674b0e594086761ef8840c0092ae3ff962d003fde1ab89392c7be45d6/zdpapi_modbus-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b584e6c85bdda40d0d2fc20df64d72c97afb270f3dae38ba3b5d50efe36dbb1e",
          "md5": "1766e166e3e56561b9ed602c8d4754fa",
          "sha256": "2c5fdf1a3f3f3077faf4cb743cc1ab38ce0f1f5ff2395e637ba7f7749ac2bc66"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1766e166e3e56561b9ed602c8d4754fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 28252,
        "upload_time": "2021-12-11T03:49:22",
        "upload_time_iso_8601": "2021-12-11T03:49:22.095702Z",
        "url": "https://files.pythonhosted.org/packages/b5/84/e6c85bdda40d0d2fc20df64d72c97afb270f3dae38ba3b5d50efe36dbb1e/zdpapi_modbus-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d70474996a1991694faffe37ae12e20ef7b268d668ce9057fb03defa2d7ffb7",
          "md5": "35918f960c08ab37e5cc227e8a1350ca",
          "sha256": "f919ac741b0f78fb5dc16221bf2c159f9692450cb8d5872dccdb28da8e2199ed"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35918f960c08ab37e5cc227e8a1350ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 34198,
        "upload_time": "2021-12-11T06:03:54",
        "upload_time_iso_8601": "2021-12-11T06:03:54.792716Z",
        "url": "https://files.pythonhosted.org/packages/5d/70/474996a1991694faffe37ae12e20ef7b268d668ce9057fb03defa2d7ffb7/zdpapi_modbus-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d77c31059396851d45bfa8638c79b7be73879133282e7c03092f6e1bdc23d8c",
          "md5": "59250d9e0771152c5030bcc00ad5f20f",
          "sha256": "c287df96adb291bfba0c62139e17aabd63e15e0689aab71ae93c11e7846c4418"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "59250d9e0771152c5030bcc00ad5f20f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 32179,
        "upload_time": "2021-12-11T06:03:57",
        "upload_time_iso_8601": "2021-12-11T06:03:57.032811Z",
        "url": "https://files.pythonhosted.org/packages/2d/77/c31059396851d45bfa8638c79b7be73879133282e7c03092f6e1bdc23d8c/zdpapi_modbus-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b567e25841a35013c7135acb83043cf185e10d335579a827069785f9642322f1",
          "md5": "1fbb53f5a70a1de872258fdaca2fea3e",
          "sha256": "8a1b330725bdc571e8290b0a830b2044e525ff604958114d4b35ce7ed03ff5dc"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1fbb53f5a70a1de872258fdaca2fea3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 36320,
        "upload_time": "2021-12-11T09:10:44",
        "upload_time_iso_8601": "2021-12-11T09:10:44.859649Z",
        "url": "https://files.pythonhosted.org/packages/b5/67/e25841a35013c7135acb83043cf185e10d335579a827069785f9642322f1/zdpapi_modbus-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7823d0dc7e2b3b453afef0f3e696a3867f394100260a91df4cce7449d322995d",
          "md5": "4ef79d5493b729df357c927845cbc4d6",
          "sha256": "ffc8ba37144e7d63f68b2b35f755b914c560de6e4cd1b9ce3aedc64c3dabb2cb"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ef79d5493b729df357c927845cbc4d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 33680,
        "upload_time": "2021-12-11T09:10:46",
        "upload_time_iso_8601": "2021-12-11T09:10:46.519190Z",
        "url": "https://files.pythonhosted.org/packages/78/23/d0dc7e2b3b453afef0f3e696a3867f394100260a91df4cce7449d322995d/zdpapi_modbus-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9375f5709e35ea01b1a9889e34b816712a04e03de2990f1de929cd039f50ae86",
          "md5": "e78674ddf39cd34ac7020bd3cc52f471",
          "sha256": "d6bc1d349c463e5c9c0bd0def431e0e1f84421fe5f2a58e002b436fcec0c3e81"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e78674ddf39cd34ac7020bd3cc52f471",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 39709,
        "upload_time": "2021-12-17T01:54:22",
        "upload_time_iso_8601": "2021-12-17T01:54:22.726579Z",
        "url": "https://files.pythonhosted.org/packages/93/75/f5709e35ea01b1a9889e34b816712a04e03de2990f1de929cd039f50ae86/zdpapi_modbus-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5bb531fd9aaef114a2e98631741f157247d0d8dc911257ef1fdeef98f4dad98",
          "md5": "861bfaa2dff3fcf992a21ed70556e9d0",
          "sha256": "295e1b9f862cf7f14826d40cea4b6a7a99253eaa4fd835fc1a239fd2f38339d8"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "861bfaa2dff3fcf992a21ed70556e9d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 36421,
        "upload_time": "2021-12-17T01:54:25",
        "upload_time_iso_8601": "2021-12-17T01:54:25.097339Z",
        "url": "https://files.pythonhosted.org/packages/b5/bb/531fd9aaef114a2e98631741f157247d0d8dc911257ef1fdeef98f4dad98/zdpapi_modbus-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "724725715de26db9eb874c6ba28ef69cf2c390c4b943a95d6278a6d1aaed4484",
          "md5": "08305a6198f8cc63842f76f7e96cf5c9",
          "sha256": "85fafbe81d3ffc1fdf18a9917de09283da87f03865d73750af8c3fe2534f6437"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08305a6198f8cc63842f76f7e96cf5c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 39775,
        "upload_time": "2021-12-17T02:53:50",
        "upload_time_iso_8601": "2021-12-17T02:53:50.196893Z",
        "url": "https://files.pythonhosted.org/packages/72/47/25715de26db9eb874c6ba28ef69cf2c390c4b943a95d6278a6d1aaed4484/zdpapi_modbus-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79a86cb46afdf20e753585bc6f30e8fcd0e73b7880bbce015b1846eec5732c58",
          "md5": "015b8f4b574ef156108a5ba867c2db24",
          "sha256": "581702967cd67f2e68cd43730d830d47afdf33248caf8c076420839154cf198d"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "015b8f4b574ef156108a5ba867c2db24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 36496,
        "upload_time": "2021-12-17T02:53:52",
        "upload_time_iso_8601": "2021-12-17T02:53:52.476886Z",
        "url": "https://files.pythonhosted.org/packages/79/a8/6cb46afdf20e753585bc6f30e8fcd0e73b7880bbce015b1846eec5732c58/zdpapi_modbus-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1ddcf3fd0fc2774cdfc83d62c2600564e687a8d479cbe5da93de9164618f1f2",
          "md5": "3d5e72ffbbaca68bb687eeb3f0c49748",
          "sha256": "40498c552e411a5b04a56bc475553f1093f9a317ecf28f5dd265f992dde1f1d7"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d5e72ffbbaca68bb687eeb3f0c49748",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 40885,
        "upload_time": "2021-12-17T07:01:44",
        "upload_time_iso_8601": "2021-12-17T07:01:44.645664Z",
        "url": "https://files.pythonhosted.org/packages/b1/dd/cf3fd0fc2774cdfc83d62c2600564e687a8d479cbe5da93de9164618f1f2/zdpapi_modbus-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92a74366653bdff57d7174107bfb434afc3e440a2aa4660462350e866b40938e",
          "md5": "6a7c658e2f80d245ed512a81b12100aa",
          "sha256": "54fcda61a5f810462fc51b2ea91b0456126bad631e5d6df7f5c4c3dbe2456d4d"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6a7c658e2f80d245ed512a81b12100aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 37256,
        "upload_time": "2021-12-17T07:01:47",
        "upload_time_iso_8601": "2021-12-17T07:01:47.716466Z",
        "url": "https://files.pythonhosted.org/packages/92/a7/4366653bdff57d7174107bfb434afc3e440a2aa4660462350e866b40938e/zdpapi_modbus-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eca1ab64581b43401e5fffd0e529a8c86988bb71a790933de918d6556927784b",
          "md5": "3a1ffa2728259ce52f30c9995968f695",
          "sha256": "27a32b8bab70732221791c102b0d34a85fadb867c301d5a1e437ce7fa5e7e741"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a1ffa2728259ce52f30c9995968f695",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 42115,
        "upload_time": "2021-12-27T03:18:15",
        "upload_time_iso_8601": "2021-12-27T03:18:15.326362Z",
        "url": "https://files.pythonhosted.org/packages/ec/a1/ab64581b43401e5fffd0e529a8c86988bb71a790933de918d6556927784b/zdpapi_modbus-1.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cddd42843ad7fde817713a743b985afce5359bbe14f1b48f3dab606f24bdbd1",
          "md5": "9cf7353f5bb0e06edccac729813a3788",
          "sha256": "646d21c04a720c035c69db150d57e9de2f0338cfa08b178f8bbe46ea49c428e7"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9cf7353f5bb0e06edccac729813a3788",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 37599,
        "upload_time": "2021-12-27T03:18:17",
        "upload_time_iso_8601": "2021-12-27T03:18:17.529490Z",
        "url": "https://files.pythonhosted.org/packages/2c/dd/d42843ad7fde817713a743b985afce5359bbe14f1b48f3dab606f24bdbd1/zdpapi_modbus-1.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40fe592803527a7ed7eaae959f368aa6a776c218d793630a7e7a7d51351d0087",
          "md5": "7ca596f19d904cd68a97a290d6a36f9b",
          "sha256": "0d20e6fde412ff65434832bb5073633a2e4d38a2b8f8e44e4d51916ddd532485"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ca596f19d904cd68a97a290d6a36f9b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 42588,
        "upload_time": "2022-01-19T06:01:36",
        "upload_time_iso_8601": "2022-01-19T06:01:36.537923Z",
        "url": "https://files.pythonhosted.org/packages/40/fe/592803527a7ed7eaae959f368aa6a776c218d793630a7e7a7d51351d0087/zdpapi_modbus-1.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fd647690495a77430c150b2b8d1cb48afeb9b40686f7c360d3181376872f29f",
          "md5": "d58ecda4290532604edc045dbe5721d8",
          "sha256": "6ec3100acd77bda3d9a4abf8faa69627c5e27a99563415e37e674dd62d1eae1b"
        },
        "downloads": -1,
        "filename": "zdpapi_modbus-1.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d58ecda4290532604edc045dbe5721d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 58162,
        "upload_time": "2022-01-19T06:01:39",
        "upload_time_iso_8601": "2022-01-19T06:01:39.028603Z",
        "url": "https://files.pythonhosted.org/packages/9f/d6/47690495a77430c150b2b8d1cb48afeb9b40686f7c360d3181376872f29f/zdpapi_modbus-1.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40fe592803527a7ed7eaae959f368aa6a776c218d793630a7e7a7d51351d0087",
        "md5": "7ca596f19d904cd68a97a290d6a36f9b",
        "sha256": "0d20e6fde412ff65434832bb5073633a2e4d38a2b8f8e44e4d51916ddd532485"
      },
      "downloads": -1,
      "filename": "zdpapi_modbus-1.7.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7ca596f19d904cd68a97a290d6a36f9b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 42588,
      "upload_time": "2022-01-19T06:01:36",
      "upload_time_iso_8601": "2022-01-19T06:01:36.537923Z",
      "url": "https://files.pythonhosted.org/packages/40/fe/592803527a7ed7eaae959f368aa6a776c218d793630a7e7a7d51351d0087/zdpapi_modbus-1.7.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9fd647690495a77430c150b2b8d1cb48afeb9b40686f7c360d3181376872f29f",
        "md5": "d58ecda4290532604edc045dbe5721d8",
        "sha256": "6ec3100acd77bda3d9a4abf8faa69627c5e27a99563415e37e674dd62d1eae1b"
      },
      "downloads": -1,
      "filename": "zdpapi_modbus-1.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d58ecda4290532604edc045dbe5721d8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 58162,
      "upload_time": "2022-01-19T06:01:39",
      "upload_time_iso_8601": "2022-01-19T06:01:39.028603Z",
      "url": "https://files.pythonhosted.org/packages/9f/d6/47690495a77430c150b2b8d1cb48afeb9b40686f7c360d3181376872f29f/zdpapi_modbus-1.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}