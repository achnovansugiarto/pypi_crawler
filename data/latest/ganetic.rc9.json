{
  "info": {
    "author": "Geo Jolly",
    "author_email": "geojollyc@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# GANetic\n\nA collection of highly customizable GANs implemented in PyTorch.\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [DCGAN](#dcgan)\n  - [SRGAN](#srgan)\n  - [Pix2Pix](#pix2pix)\n  - [Conditional GANs](#conditional-gans)\n  - [CycleGAN](#cyclegan)\n- [Citations](#citations)\n\n## Installation\n\nStable version:\n\n```bash\npip install ganetic\n```\n\nLatest version:\n\n```bash\npip install git+https://github.com/kingjuno/ganetic.git\n```\n\n## Usage\n\n### DCGAN\n\n```python\nimport torch\n\nfrom ganetic.dcgan import Discriminator, Generator\n\nnetG = Generator(\n    nz=100,  # length of latent vector\n    nc=3,    # number of channels in the training images.\n    ngf=64,  # size of feature maps in generator\n)\nnetD = Discriminator(\n    nc=3,    # number of channels in the training images.\n    ndf=64,  # size of feature maps in discriminator\n)\n\nnoise = torch.randn(1, 100)\nfake_img = netG(noise)\nprediction = netD(fake_img)\n```\n\n### SRGAN\n\n```python\nimport torch\n\nfrom ganetic.srgan import Generator, Discriminator\n\nimg = torch.randn(1, 3, 64, 64)\ngen = Generator(\n    scale_factor=4, # scale factor for super resolution\n    nci=3,          # number of channels in input image\n    nco=3,          # number of channels in output image\n    ngf=64,         # number of filters in the generator\n    no_of_residual_blocks=5\n)\ndisc = Discriminator(\n    input_shape=(3, 256, 256),\n    ndf=64,              # number of filters in the discriminator\n    negative_slope=0.2,  # negative slope of leaky relu\n)\n\nHR_img = gen(img)\npred = disc(HR_img)\n```\n\n### Pix2Pix\n\n```python\nimport torch\n\nfrom ganetic.pix2pix import Discriminator, Generator\n\nimg = torch.randn(1, 3, 256, 256)\ngen = Generator(\n    nci=3,  # number of channels in input image\n    nco=3,  # number of channels in output image\n    ngf=64  # number of filters in the generator\n)\n\ndisc = Discriminator(\n    nci=3,  # number of channels in input image\n    ndf=64  # number of filters in the discriminator\n)\n\nfake = gen(img)\npred = disc(img, fake)\n```\n\n### Conditional GANs\n\n```python\nimport torch\n\nfrom ganetic.cgan import Discriminator, Generator\n\ngen = Generator(\n    n_classes=10,\n    nz=100,\n    nc=3,\n    ngf=64,\n    out_size=64,\n    activation='relu',\n    last_activation='tanh'\n)\ndisc = Discriminator(\n    n_classes=10,\n    nc=3,\n    ndf=64,\n    in_size=64,\n    activation='LeakyReLU',\n    last_activation='sigmoid'\n)\n\nz = torch.randn(64, 100)\nlabel = torch.LongTensor(64).random_(0, 10)\n\nprint(gen(z, label).shape)\nprint(disc(gen(z, label), label).shape)\n```\n\n### CycleGAN\n\n```python\nimport torch\n\nfrom ganetic.cyclegan import Discriminator, Generator\n\nimg = torch.randn(1, 3, 128, 128)\n\ngen = Generator(\n    nci=3,\n    nco=3,\n    ngf=64,\n    no_of_residual_blocks=9,\n    activation=torch.nn.ReLU(True),\n    last_activation=torch.nn.Tanh(),\n)\nprint(gen(img).shape)\ndisc = Discriminator(\n    nci=3,\n    ndf=64,\n    no_of_layers=3,\n    activation=torch.nn.ReLU(True),\n    last_activation=torch.nn.Sigmoid(),\n)\nprint(disc(img).shape)\n```\n\n## Citations\n\n```bibtex\n@article{radford2015unsupervised,\n  title={Unsupervised representation learning with deep convolutional generative adversarial networks},\n  author={Radford, Alec and Metz, Luke and Chintala, Soumith},\n  journal={arXiv preprint arXiv:1511.06434},\n  year={2015}\n}\n```\n\n```bibtex\n@inproceedings{ledig2017photo,\n  title={Photo-realistic single image super-resolution using a generative adversarial network},\n  author={Ledig, Christian and Theis, Lucas and Husz{\\'a}r, Ferenc and Caballero, Jose and Cunningham, Andrew and Acosta, Alejandro and Aitken, Andrew and Tejani, Alykhan and Totz, Johannes and Wang, Zehan and others},\n  booktitle={Proceedings of the IEEE conference on computer vision and pattern recognition},\n  pages={4681--4690},\n  year={2017}\n}\n```\n\n```bibtex\n@inproceedings{isola2017image,\n  title={Image-to-image translation with conditional adversarial networks},\n  author={Isola, Phillip and Zhu, Jun-Yan and Zhou, Tinghui and Efros, Alexei A},\n  booktitle={Proceedings of the IEEE conference on computer vision and pattern recognition},\n  pages={1125--1134},\n  year={2017}\n}\n```\n\n```bibtex\n@article{mirza2014conditional,\n  title={Conditional generative adversarial nets},\n  author={Mirza, Mehdi and Osindero, Simon},\n  journal={arXiv preprint arXiv:1411.1784},\n  year={2014}\n}\n```\n\n```bibtex\n@inproceedings{zhu2017unpaired,\n  title={Unpaired image-to-image translation using cycle-consistent adversarial networks},\n  author={Zhu, Jun-Yan and Park, Taesung and Isola, Phillip and Efros, Alexei A},\n  booktitle={Proceedings of the IEEE international conference on computer vision},\n  pages={2223--2232},\n  year={2017}\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kingjuno/GANetic",
    "keywords": "GAN,Generative Adversarial Networks,Deep Learning,PyTorch,GANetic,Generative Artificial Intelligence",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GANetic",
    "package_url": "https://pypi.org/project/GANetic/",
    "platform": null,
    "project_url": "https://pypi.org/project/GANetic/",
    "project_urls": {
      "Homepage": "https://github.com/kingjuno/GANetic"
    },
    "release_url": "https://pypi.org/project/GANetic/0.0.11/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Collection of GANs - PyTorch",
    "version": "0.0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17162258,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b68b0283e8d50c8501534f0129870e1edf4b2248b588de9cefcff734be857de7",
          "md5": "a3c62d0efee2223197fefd0cffe0e7fd",
          "sha256": "a6d49890df8824011ebc5a5813520eb93a215c184815323aa1516b3315f05bdf"
        },
        "downloads": -1,
        "filename": "GANetic-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a3c62d0efee2223197fefd0cffe0e7fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3111,
        "upload_time": "2023-02-08T15:06:22",
        "upload_time_iso_8601": "2023-02-08T15:06:22.011259Z",
        "url": "https://files.pythonhosted.org/packages/b6/8b/0283e8d50c8501534f0129870e1edf4b2248b588de9cefcff734be857de7/GANetic-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce49a6d953cfa906dd69fc0bf1a12d2f2efe19ae0d18b7b9d46ce203c268bbf8",
          "md5": "d955d61b39a72144b4ee667571776894",
          "sha256": "45d3f39bf4d7f4e8d4d604a9dc282da078d5064d7bf89d3bb0c8c364a205bd8e"
        },
        "downloads": -1,
        "filename": "GANetic-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "d955d61b39a72144b4ee667571776894",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8569,
        "upload_time": "2023-03-05T07:16:41",
        "upload_time_iso_8601": "2023-03-05T07:16:41.807349Z",
        "url": "https://files.pythonhosted.org/packages/ce/49/a6d953cfa906dd69fc0bf1a12d2f2efe19ae0d18b7b9d46ce203c268bbf8/GANetic-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a200d23e0b02de4b24d1152a06a620957fc4fc9e3bfc5d75f868ca144937f39c",
          "md5": "674d601af0e4dc9c883015db3c50789d",
          "sha256": "849f7156a27a4820956aa0f8b3d5ed3058512d3e18118f78faf958ec96e0cc23"
        },
        "downloads": -1,
        "filename": "GANetic-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "674d601af0e4dc9c883015db3c50789d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8600,
        "upload_time": "2023-03-05T07:42:47",
        "upload_time_iso_8601": "2023-03-05T07:42:47.679994Z",
        "url": "https://files.pythonhosted.org/packages/a2/00/d23e0b02de4b24d1152a06a620957fc4fc9e3bfc5d75f868ca144937f39c/GANetic-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59cc9e9659d50b30e6b8ae43929fa6f93aad8d849a39e5470f9e66ee364d034c",
          "md5": "6dd1c59305070bc61b876217dcb0e807",
          "sha256": "52924e19d8cc6fea4d3da654ff4fd37a1384264306efb769ada2e57a14a84454"
        },
        "downloads": -1,
        "filename": "GANetic-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6dd1c59305070bc61b876217dcb0e807",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4598,
        "upload_time": "2023-02-08T15:30:49",
        "upload_time_iso_8601": "2023-02-08T15:30:49.720582Z",
        "url": "https://files.pythonhosted.org/packages/59/cc/9e9659d50b30e6b8ae43929fa6f93aad8d849a39e5470f9e66ee364d034c/GANetic-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfaf6a97c1e253a93e495a45f5170a23ebeda4f84c1138e4f164b476eb98dd91",
          "md5": "6bc470c89cc17f4a525c64db2d0712c6",
          "sha256": "7b30a80d44cc759a5dd8f8901484613e1f2298b5fd06d5919b45b9f2109eadd2"
        },
        "downloads": -1,
        "filename": "GANetic-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6bc470c89cc17f4a525c64db2d0712c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6149,
        "upload_time": "2023-02-12T06:27:20",
        "upload_time_iso_8601": "2023-02-12T06:27:20.365504Z",
        "url": "https://files.pythonhosted.org/packages/cf/af/6a97c1e253a93e495a45f5170a23ebeda4f84c1138e4f164b476eb98dd91/GANetic-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f62ef46e5b09e1a18aaea9390fee45c03a52bda141b607bfbc4298a0a2ff004",
          "md5": "baf049db944df6842fcd6766f4aef49b",
          "sha256": "50e6f7141d6cbde3e1e27718114fae080e806d06432b22b73ce9cf6405ff020b"
        },
        "downloads": -1,
        "filename": "GANetic-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "baf049db944df6842fcd6766f4aef49b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8405,
        "upload_time": "2023-03-04T08:49:57",
        "upload_time_iso_8601": "2023-03-04T08:49:57.828295Z",
        "url": "https://files.pythonhosted.org/packages/5f/62/ef46e5b09e1a18aaea9390fee45c03a52bda141b607bfbc4298a0a2ff004/GANetic-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b942246893d446163d30d3a5428675fe9b548bb8b8b4e94282b87b46e1c5a31",
          "md5": "71cf48fa4372832b1f17b964e7d684b6",
          "sha256": "14a459992427a0925498be5e4a32eeeb077b4691cd38d1dc540cab3587ec016d"
        },
        "downloads": -1,
        "filename": "GANetic-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "71cf48fa4372832b1f17b964e7d684b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8395,
        "upload_time": "2023-03-04T08:57:24",
        "upload_time_iso_8601": "2023-03-04T08:57:24.819626Z",
        "url": "https://files.pythonhosted.org/packages/9b/94/2246893d446163d30d3a5428675fe9b548bb8b8b4e94282b87b46e1c5a31/GANetic-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b8e5a23cf82b4f069c90a1a183856437e0a83b37731d472c2189b7bfe0f1cc6",
          "md5": "658bc1a2a06cb5a9e849a25e49e8228f",
          "sha256": "ca76cc51ffafa0f0d6ded4369cf18bfeea61693c8fefb4945da238d4e90f67ab"
        },
        "downloads": -1,
        "filename": "GANetic-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "658bc1a2a06cb5a9e849a25e49e8228f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8703,
        "upload_time": "2023-03-04T09:12:13",
        "upload_time_iso_8601": "2023-03-04T09:12:13.974297Z",
        "url": "https://files.pythonhosted.org/packages/9b/8e/5a23cf82b4f069c90a1a183856437e0a83b37731d472c2189b7bfe0f1cc6/GANetic-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cf891e6d372cd2ab0f3b024188ced1c11100ac7d5be0167f6445e3529e7de8e",
          "md5": "335708debf86d4a30a71ff215e84c794",
          "sha256": "96db513ed245da9509ad05176d097551052d200d6963b9b01094103ca3ceda89"
        },
        "downloads": -1,
        "filename": "GANetic-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "335708debf86d4a30a71ff215e84c794",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8700,
        "upload_time": "2023-03-05T05:43:18",
        "upload_time_iso_8601": "2023-03-05T05:43:18.579270Z",
        "url": "https://files.pythonhosted.org/packages/9c/f8/91e6d372cd2ab0f3b024188ced1c11100ac7d5be0167f6445e3529e7de8e/GANetic-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a200d23e0b02de4b24d1152a06a620957fc4fc9e3bfc5d75f868ca144937f39c",
        "md5": "674d601af0e4dc9c883015db3c50789d",
        "sha256": "849f7156a27a4820956aa0f8b3d5ed3058512d3e18118f78faf958ec96e0cc23"
      },
      "downloads": -1,
      "filename": "GANetic-0.0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "674d601af0e4dc9c883015db3c50789d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8600,
      "upload_time": "2023-03-05T07:42:47",
      "upload_time_iso_8601": "2023-03-05T07:42:47.679994Z",
      "url": "https://files.pythonhosted.org/packages/a2/00/d23e0b02de4b24d1152a06a620957fc4fc9e3bfc5d75f868ca144937f39c/GANetic-0.0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}