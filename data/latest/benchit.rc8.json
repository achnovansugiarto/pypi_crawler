{
  "info": {
    "author": "Divakar Roy",
    "author_email": "droygatech@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: System :: Benchmark"
    ],
    "description": "benchit (BENCHmark IT!)\n=======================\n\n|Py-Versions| |Py-LatestVersion| |GitHub-Releases| |PyPI-Downloads|  |GitHub-License|\n\n\nTools to benchmark Python solutions on runtime performance and visualize. Based on ``timeit``, it primarily aims to functionally simulate the `timeit <https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-timeit>`__ behaviour and hence the name! This facilitates benchmarking on multiple datasets and solutions.\n\n\nDocumentation\n-------------\n\n|Docs|\n\n\nInstallation\n------------\n\nLatest PyPI stable release :\n\n.. code:: sh\n\n    pip install benchit\n\n\nPull latest development release on GitHub and install in the current directory :\n\n.. code:: sh\n\n    pip install -e git+https://github.com/droyed/benchit.git@master#egg=benchit\n\n\nGetting started\n^^^^^^^^^^^^^^^\n\nConsider a setup to compare NumPy ufuncs - `sum <https://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html>`__, `prod <https://docs.scipy.org/doc/numpy/reference/generated/numpy.prod.html>`__, `max <https://docs.scipy.org/doc/numpy/reference/generated/numpy.amax.html>`__ on arrays varying in their sizes. To keep it simple, let's consider ``1D`` arrays. Thus, we would have :\n\n.. code-block:: python\n\n    >>> import numpy as np\n    >>> funcs = [np.sum,np.prod,np.max]\n    >>> inputs = [np.random.rand(i) for i in 10**np.arange(5)]\n\n    >>> import benchit\n    >>> t = benchit.timings(funcs, inputs)\n\nIt's a *dataframe-like* object and as such we can plot it. It automatically adds in specs into the title area to convey all of available benchmarking info :\n\n.. code-block:: python\n\n    >>> t.plot(logy=True, logx=True)\n\n|readme_1_timings|\n\nMultiple arguments\n^^^^^^^^^^^^^^^^^^\n\nLet's consider a setup where functions accept more than one argument. Let's take the case of computing `euclidean distances <https://en.wikipedia.org/wiki/Euclidean_distance>`__ between two ``2D`` arrays. We will feed in arrays with varying number of rows and 3 columns to represent data in ``3D`` Cartesian coordinate system and benchmark two commonly used functions in Python.\n\n.. code-block:: python\n\n    >>> from sklearn.metrics.pairwise import pairwise_distances\n    >>> from scipy.spatial.distance import cdist\n    >>> fns = [cdist, pairwise_distances]\n\n    >>> import numpy as np\n    >>> in_ = {n:[np.random.rand(n,3), np.random.rand(n,3)] for n in [10,100,500,1000,4000]}\n    >>> t = benchit.timings(fns, in_, multivar=True, input_name='Array-length')\n    >>> t.plot(logx=True)\n\n|readme_2_timings|\n\nMultiple arguments with groupings\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe will extend the previous example to make the second argument a variable too and study the trend as we vary the number of columns, resulting in subplots.\n\n.. code-block:: python\n\n    # Get benchmarking object (dataframe-like) and plot results\n    >>> R = np.random.rand\n    >>> in_ = {(n,W):[R(n,W), R(n,W)] for n in [10, 100, 500, 1000] for W in [3, 20, 50, 100]}\n    >>> t = benchit.timings(fns, in_, multivar=True, input_name=['nrows', 'ncols'])\n    >>> t.plot(logx=True, sp_ncols=2, sp_argID=0, sp_sharey='g')\n\nFor plotting, we are using number of rows as the x-axis base.\n\n|readme_3_timings|\n\nUse ``sp_argID=1`` to switch-over to use number of cols as the x-axis base instead.\n\n\nSingle argument with groupings\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nLet's manufacture a simple forward-filling scheme based on indices of `True` values in a boolean-array :\n\n.. code-block:: python\n\n    # Functions\n    def repeat(b):\n        idx = np.flatnonzero(np.r_[b,True])\n        return np.repeat(idx[:-1], np.diff(idx))\n    \n    def maxaccum(b):\n        return np.maximum.accumulate(np.where(b,np.arange(len(b)), 0))\n        \n    in_ = {(n,sf): np.random.rand(n)<(100-sf)/100. for n in [100,1000,10000,100000,1000000] for sf in [20, 40, 60, 80, 90, 95]}\n    t = benchit.timings([repeat, maxaccum], in_, input_name=['Array-length','Sparseness %'])\n    t.plot(logx=True, sp_ncols=2, save='singlegrp_id0_ffillmask_timings.png')\n\n|readme_4_timings|\n\nQuick Tips\n----------\n\n**1. Plotting on notebooks?**\n\nUse ``benchit.setparams(environ='notebook')`` before plotting. Check out `sample notebook run <https://github.com/droyed/benchit/blob/master/docs/source/PlotDemo-NotebookEnv.ipynb>`__.\n\n**2. Get a quick glance into the benchmarking trend before the actual one**\n\nUse ``benchit.setparams(rep=1)`` before plotting. Then, use ``benchit.setparams()`` for a proper benchmarking.\n\n**3. Get a quicker glance into plot layout and vague benchmarking trend before the actual one**\n\nUse ``benchit.setparams(timeout=1e-5, rep=1)`` before plotting. Then, use ``benchit.setparams()`` for a proper benchmarking.\n\n**4.  Working with multi-variable datasets to study trend w.r.t. each argument?**\n\nUse nested loops to set-up input datasets as shown earlier. More information is available in documentation.\n\nAs a general rule, it's advisable to work on Python ``3.6`` or newer for better plotting experience.\n\n\n.. |Docs| image:: https://readthedocs.org/projects/benchit/badge/?version=latest\n    :target: https://benchit.readthedocs.io/en/latest/?badge=latest\n\n.. |GitHub-License| image:: https://img.shields.io/github/license/droyed/benchit\n   :target: https://github.com/droyed/benchit/blob/master/LICENSE\n\n.. |GitHub-Releases| image:: https://img.shields.io/github/v/release/droyed/benchit\n   :target: https://github.com/droyed/benchit/releases/latest\n\n.. |PyPI-Downloads| image:: https://img.shields.io/pypi/dm/benchit.svg?label=pypi%20downloads&logo=PyPI&logoColor=white\n   :target: https://pypi.org/project/benchit\n\n.. |Py-LatestVersion| image:: https://img.shields.io/pypi/v/benchit.svg\n   :target: https://pypi.org/project/benchit\n\n.. |Py-Versions| image:: https://img.shields.io/pypi/pyversions/benchit.svg?logo=python&logoColor=white\n   :target: https://pypi.org/project/benchit\n\n.. |readme_1_timings| image:: https://raw.githubusercontent.com/droyed/benchit/master/docs/source/readme_1_timings.png\n.. |readme_2_timings| image:: https://raw.githubusercontent.com/droyed/benchit/master/docs/source/readme_2_timings.png\n.. |readme_3_timings| image:: https://raw.githubusercontent.com/droyed/benchit/master/docs/source/multigrp_id0_euclidean_timings_readme.png\n.. |readme_4_timings| image:: https://raw.githubusercontent.com/droyed/benchit/master/docs/source/singlegrp_id0_ffillmask_timings.png",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/droyed/benchit",
    "keywords": "benchmarking performance timing timeit",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "benchit",
    "package_url": "https://pypi.org/project/benchit/",
    "platform": "any",
    "project_url": "https://pypi.org/project/benchit/",
    "project_urls": {
      "Homepage": "https://github.com/droyed/benchit"
    },
    "release_url": "https://pypi.org/project/benchit/0.0.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Benchmarking tools for Python",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10556722,
  "releases": {
    "0.0.0": [],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "311719b9e4211e2d25040f90cbde5eff1aa6325dd15940f47f3c6e8b19572214",
          "md5": "79dc2a1ff07e81f5e13a11f1a3207290",
          "sha256": "ab4dbc56ece2c5f56d8ff90b47e7e942627b86a276410b9ed726a0363552f8de"
        },
        "downloads": -1,
        "filename": "benchit-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "79dc2a1ff07e81f5e13a11f1a3207290",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9499,
        "upload_time": "2020-04-15T22:27:33",
        "upload_time_iso_8601": "2020-04-15T22:27:33.547503Z",
        "url": "https://files.pythonhosted.org/packages/31/17/19b9e4211e2d25040f90cbde5eff1aa6325dd15940f47f3c6e8b19572214/benchit-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "127630d11c41bd007766d991baffd448c2db2ce642a9f444e934e27e4d13d88a",
          "md5": "cf86d12529c90716e16d67e594e9904a",
          "sha256": "efb6398dcfc6d3737a7e5113641329e2e9595aaaaa2195ae798192fb37cf6e94"
        },
        "downloads": -1,
        "filename": "benchit-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cf86d12529c90716e16d67e594e9904a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11015,
        "upload_time": "2020-05-19T17:54:06",
        "upload_time_iso_8601": "2020-05-19T17:54:06.150288Z",
        "url": "https://files.pythonhosted.org/packages/12/76/30d11c41bd007766d991baffd448c2db2ce642a9f444e934e27e4d13d88a/benchit-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8041d13d11ba7895758ac0d886ffa76101fd549d933a25aa6545cb287b16ee7e",
          "md5": "e7e54d03972defc24601b2ea2023a8a2",
          "sha256": "48072ffb52eb1a34ed7398d449c0819100f9af54f5f231bef1a6421c5e7d9cf1"
        },
        "downloads": -1,
        "filename": "benchit-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e7e54d03972defc24601b2ea2023a8a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11668,
        "upload_time": "2020-07-05T07:50:50",
        "upload_time_iso_8601": "2020-07-05T07:50:50.345034Z",
        "url": "https://files.pythonhosted.org/packages/80/41/d13d11ba7895758ac0d886ffa76101fd549d933a25aa6545cb287b16ee7e/benchit-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed542c96a6aeafb62acd4e4fe141097ec1b47e2e4838cfd06e61ce32b55000f6",
          "md5": "05f3ed3e8c805995f55d46971a844a8e",
          "sha256": "0cb43017e2c6a3cfac8edecb9df723f0f980051230dd4d973a5d5295efde35c7"
        },
        "downloads": -1,
        "filename": "benchit-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "05f3ed3e8c805995f55d46971a844a8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12788,
        "upload_time": "2020-08-06T19:18:19",
        "upload_time_iso_8601": "2020-08-06T19:18:19.823162Z",
        "url": "https://files.pythonhosted.org/packages/ed/54/2c96a6aeafb62acd4e4fe141097ec1b47e2e4838cfd06e61ce32b55000f6/benchit-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dd82c9ef2be42a80a54faa7fee12ae04424a05e3fb981d1485a6226e37a927d",
          "md5": "7828804f1a358d7ffe2493ddbbbb2f0d",
          "sha256": "6a321a5f93d956a57ec78874cd36de13daa6776e0ba2c0617a8b6d460a2f1a2e"
        },
        "downloads": -1,
        "filename": "benchit-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7828804f1a358d7ffe2493ddbbbb2f0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16812,
        "upload_time": "2020-10-15T18:11:01",
        "upload_time_iso_8601": "2020-10-15T18:11:01.618791Z",
        "url": "https://files.pythonhosted.org/packages/0d/d8/2c9ef2be42a80a54faa7fee12ae04424a05e3fb981d1485a6226e37a927d/benchit-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b24dc982d32eb77fed1b62c8f1ddb5932ed28d8a6397e0f2a65f0f2e6ddf40c2",
          "md5": "900d3895c448a221c43fb434b431cce9",
          "sha256": "fb8ec1db2a8c39767ce7523884ce192c953ae64a9e12ab964438f5bff7bf7dfd"
        },
        "downloads": -1,
        "filename": "benchit-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "900d3895c448a221c43fb434b431cce9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17182,
        "upload_time": "2021-06-04T09:48:51",
        "upload_time_iso_8601": "2021-06-04T09:48:51.332042Z",
        "url": "https://files.pythonhosted.org/packages/b2/4d/c982d32eb77fed1b62c8f1ddb5932ed28d8a6397e0f2a65f0f2e6ddf40c2/benchit-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c168b89f431f242e4b88cc0a6da772ca67c51446dcc844ebb827276d19e5d37a",
          "md5": "a083492b8ce4736d9d6669633ce48d35",
          "sha256": "554f31f2f9fb624b1bb4cf6f96c14c8b52378f712962862bafdf60eb777927a0"
        },
        "downloads": -1,
        "filename": "benchit-0.0.6rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "a083492b8ce4736d9d6669633ce48d35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17187,
        "upload_time": "2021-06-04T09:30:51",
        "upload_time_iso_8601": "2021-06-04T09:30:51.649900Z",
        "url": "https://files.pythonhosted.org/packages/c1/68/b89f431f242e4b88cc0a6da772ca67c51446dcc844ebb827276d19e5d37a/benchit-0.0.6rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b24dc982d32eb77fed1b62c8f1ddb5932ed28d8a6397e0f2a65f0f2e6ddf40c2",
        "md5": "900d3895c448a221c43fb434b431cce9",
        "sha256": "fb8ec1db2a8c39767ce7523884ce192c953ae64a9e12ab964438f5bff7bf7dfd"
      },
      "downloads": -1,
      "filename": "benchit-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "900d3895c448a221c43fb434b431cce9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17182,
      "upload_time": "2021-06-04T09:48:51",
      "upload_time_iso_8601": "2021-06-04T09:48:51.332042Z",
      "url": "https://files.pythonhosted.org/packages/b2/4d/c982d32eb77fed1b62c8f1ddb5932ed28d8a6397e0f2a65f0f2e6ddf40c2/benchit-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}