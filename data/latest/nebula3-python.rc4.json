{
  "info": {
    "author": "vesoft-inc",
    "author_email": "info@vesoft.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# nebula-python\n\nThis repository holds the official Python API for NebulaGraph.\n\n## Before you start\n\nBefore you start, please read this section to choose the right branch for you. The compatibility between the API and NebulaGraph service can be found in [How to choose nebula-python](##How-to-choose-nebula-python). The current master branch is compatible with NebulaGraph 3.3.\n\n## The directory structure\n\n```text\n|--nebula-python\n    |\n    |-- nebula3                               // client code\n    |   |-- fbthrift                          // the fbthrift lib code\n    |   |-- common           \n    |   |-- data           \n    |   |-- graph           \n    |   |-- meta           \n    |   |-- net                               // the net code for graph client\n    |   |-- storage           \n    |   |-- Config.py                         // the pool config\n    |   |__ Exception.py                      // the define exception\n    |           \n    |-- examples\n    |   |-- GraphClientMultiThreadExample.py  // the multi thread example\n    |   |-- GraphClientSimpleExample.py       // the simple example\n    |   |__ ScanVertexEdgeExample.py                   \n    |\n    |-- tests                                 // the test code\n    |                      \n    |-- setup.py                              // used to install or package\n    |                      \n    |__ README.md                             // the introduction of nebula3-python\n\n```\n\n## How to get nebula3-python\n\n### Option one: install with pip\n\n```python\n# for v3.x\npip install nebula3-python==$version\n# for v2.x\npip install nebula2-python==$version\n```\n\n### Option two: install from the source code\n\n- Clone from GitHub\n\n```bash\ngit clone https://github.com/vesoft-inc/nebula-python.git\ncd nebula-python\n```\n\n- Install\n\n```python\npip install .\n```\n\n## Quick example to use graph-client to connect graphd\n\n```python\nfrom nebula3.gclient.net import ConnectionPool\nfrom nebula3.Config import Config\n\n# define a config\nconfig = Config()\nconfig.max_connection_pool_size = 10\n# init connection pool\nconnection_pool = ConnectionPool()\n# if the given servers are ok, return true, else return false\nok = connection_pool.init([('127.0.0.1', 9669)], config)\n\n# option 1 control the connection release yourself\n# get session from the pool\nsession = connection_pool.get_session('root', 'nebula')\n\n# select space\nsession.execute('USE nba')\n\n# show tags\nresult = session.execute('SHOW TAGS')\nprint(result)\n\n# release session\nsession.release()\n\n# option 2 with session_context, session will be released automatically\nwith connection_pool.session_context('root', 'nebula') as session:\n    session.execute('USE nba')\n    result = session.execute('SHOW TAGS')\n    print(result)\n\n# close the pool\nconnection_pool.close()\n```\n\n## Example of using session pool\n```\nThere are some limitations while using the session pool:\n\n1. There MUST be an existing space in the DB before initializing the session pool.\n2. Each session pool is corresponding to a single USER and a single Space. This is to ensure that the user's access control is consistent. i.g. The same user may have different access privileges in different spaces. If you need to run queries in different spaces, you may have multiple session pools.\n3. Every time when sessinPool.execute() is called, the session will execute the query in the space set in the session pool config.\n4. Commands that alter passwords or drop users should NOT be executed via session pool.\n```\nsee /example/SessinPoolExample.py\n## Quick example to fetch result to dataframe\n\n```python\nfrom nebula3.gclient.net import ConnectionPool\nfrom nebula3.Config import Config\nimport pandas as pd\nfrom typing import Dict\nfrom nebula3.data.ResultSet import ResultSet\n\ndef result_to_df(result: ResultSet) -> pd.DataFrame:\n    \"\"\"\n    build list for each column, and transform to dataframe\n    \"\"\"\n    assert result.is_succeeded()\n    columns = result.keys()\n    d: Dict[str, list] = {}\n    for col_num in range(result.col_size()):\n        col_name = columns[col_num]\n        col_list = result.column_values(col_name)\n        d[col_name] = [x.cast() for x in col_list]\n    return pd.DataFrame.from_dict(d, columns=columns)\n\n# define a config\nconfig = Config()\n\n# init connection pool\nconnection_pool = ConnectionPool()\n\n# if the given servers are ok, return true, else return false\nok = connection_pool.init([('127.0.0.1', 9669)], config)\n\n# option 2 with session_context, session will be released automatically\nwith connection_pool.session_context('root', 'nebula') as session:\n    session.execute('USE <your graph space>')\n    result = session.execute('<your query>')\n    df = result_to_df(result)\n    print(df)\n\n# close the pool\nconnection_pool.close()\n\n```\n\n## Quick example to use storage-client to scan vertex and edge\n\nYou should make sure the scan client can connect to the address of storage which see from `SHOW HOSTS` \n\n```python\nfrom nebula3.mclient import MetaCache, HostAddr\nfrom nebula3.sclient.GraphStorageClient import GraphStorageClient\n\n# the metad servers's address\nmeta_cache = MetaCache([('172.28.1.1', 9559),\n                        ('172.28.1.2', 9559),\n                        ('172.28.1.3', 9559)],\n                       50000)\n\n# option 1 metad usually discover the storage address automatically\ngraph_storage_client = GraphStorageClient(meta_cache)\n\n# option 2 manually specify the storage address\nstorage_addrs = [HostAddr(host='172.28.1.4', port=9779),\n                 HostAddr(host='172.28.1.5', port=9779),\n                 HostAddr(host='172.28.1.6', port=9779)]\ngraph_storage_client = GraphStorageClient(meta_cache, storage_addrs)\n\nresp = graph_storage_client.scan_vertex(\n        space_name='ScanSpace',\n        tag_name='person')\nwhile resp.has_next():\n    result = resp.next()\n    for vertex_data in result:\n        print(vertex_data)\n        \nresp = graph_storage_client.scan_edge(\n    space_name='ScanSpace',\n    edge_name='friend')\nwhile resp.has_next():\n    result = resp.next()\n    for edge_data in result:\n        print(edge_data)\n```\n\n## How to choose nebula-python\n\n| Nebula-Python Version | NebulaGraph Version |\n|---|---|\n| 1.0  | 1.x |\n| 2.0.0  | 2.0.0/2.0.1 |\n| 2.5.0  | 2.5.0 |\n| 2.6.0  | 2.6.0/2.6.1 |\n| 3.0.0  | 3.0.0 |\n| 3.1.0  | 3.1.0 |\n| 3.3.0  | 3.3.0 |\n| master  | master |\n\n## How to contribute to nebula-python\n\n[Fork](https://github.com/vesoft-inc/nebula-python/fork) this repo, then clone it locally\n(be sure to replace the `{username}` in the repo URL below with your GitHub username):\n```\ngit clone https://github.com/{username}/nebula-python.git\ncd nebula-python\n```\n\nInstall the package in the editable mode, then install all the dev dependencies:\n```\npip install -e .\npip install -r requirements/dev.txt\n```\n\nMake sure the Nebula server in running, then run the tests with pytest:\n```\npytest\n```\nUsing the default formatter with [black](https://github.com/psf/black).\n\nPlease run `make fmt` to format python code before submitting.\n\nSee [How to contribute](https://github.com/vesoft-inc/nebula-community/blob/master/Contributors/how-to-contribute.md) for the general process of contributing to Nebula projects.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vesoft-inc/nebula-python",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nebula3-python",
    "package_url": "https://pypi.org/project/nebula3-python/",
    "platform": "3.6, 3.7",
    "project_url": "https://pypi.org/project/nebula3-python/",
    "project_urls": {
      "Homepage": "https://github.com/vesoft-inc/nebula-python"
    },
    "release_url": "https://pypi.org/project/nebula3-python/3.4.0/",
    "requires_dist": [
      "httplib2 (>=0.20.0)",
      "future (>=0.18.0)",
      "six (>=1.16.0)",
      "pytz (>=2021.1)"
    ],
    "requires_python": "",
    "summary": "Python client for NebulaGraph V3.4",
    "version": "3.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16723553,
  "releases": {
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d1f9ccbbb890b728f4be9c73c31a47162d29adcf3ccef4c89c31b4937528c61",
          "md5": "22f9efe178b7084954c6026becb63704",
          "sha256": "8b94f977270f0a094abcd15de7acbca09dcb98166be1a90b6f30b4031954f114"
        },
        "downloads": -1,
        "filename": "nebula3_python-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22f9efe178b7084954c6026becb63704",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 303419,
        "upload_time": "2022-02-15T09:45:50",
        "upload_time_iso_8601": "2022-02-15T09:45:50.981790Z",
        "url": "https://files.pythonhosted.org/packages/0d/1f/9ccbbb890b728f4be9c73c31a47162d29adcf3ccef4c89c31b4937528c61/nebula3_python-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a783fa7a90a1e7ad1b2d35853d06d91f854e6f2ce286c33f17013b6c6c12902",
          "md5": "9a83289b10ba51ea06c567abbc901600",
          "sha256": "376476de7cc3bf7ec6c920f72b5b5b1321a36d9990855c9288475fa31e755a21"
        },
        "downloads": -1,
        "filename": "nebula3-python-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9a83289b10ba51ea06c567abbc901600",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 257211,
        "upload_time": "2022-02-15T09:45:52",
        "upload_time_iso_8601": "2022-02-15T09:45:52.764917Z",
        "url": "https://files.pythonhosted.org/packages/3a/78/3fa7a90a1e7ad1b2d35853d06d91f854e6f2ce286c33f17013b6c6c12902/nebula3-python-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fa8b42a4a57248c4ee47832ca6d0ab52f978523372d5de9bb103d07329c8ece",
          "md5": "03d0b4c6b0baec9850a51a8eb3ad6fc2",
          "sha256": "861cc84f97e56c34a364a6fc27af3bcd60d9399dab9c80574d483b567fc1f6fa"
        },
        "downloads": -1,
        "filename": "nebula3_python-3.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03d0b4c6b0baec9850a51a8eb3ad6fc2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 302396,
        "upload_time": "2022-04-25T10:59:46",
        "upload_time_iso_8601": "2022-04-25T10:59:46.636687Z",
        "url": "https://files.pythonhosted.org/packages/0f/a8/b42a4a57248c4ee47832ca6d0ab52f978523372d5de9bb103d07329c8ece/nebula3_python-3.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7eb2d5c5146d1be7f522f8e7440ddf70e023e76ed640f347b8e0a75ca1aeb8df",
          "md5": "c10114f21d7959380069e2b5bdab047f",
          "sha256": "0e213e370ffb055ea022cf82d02fd0927c45fa54e11dd5da97df40db4a36d236"
        },
        "downloads": -1,
        "filename": "nebula3-python-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c10114f21d7959380069e2b5bdab047f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 256456,
        "upload_time": "2022-04-25T10:59:48",
        "upload_time_iso_8601": "2022-04-25T10:59:48.268659Z",
        "url": "https://files.pythonhosted.org/packages/7e/b2/d5c5146d1be7f522f8e7440ddf70e023e76ed640f347b8e0a75ca1aeb8df/nebula3-python-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d235ff389698ed82a8d91a386094e7b344cea33370980aa80d6aa3fd546a4a3",
          "md5": "ea5fd4ff28b93023484632171736c652",
          "sha256": "9b1fc7c9fae48b0467572b2fb05f06f0412527c894c25ca4cb42521ad5b97fcf"
        },
        "downloads": -1,
        "filename": "nebula3_python-3.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea5fd4ff28b93023484632171736c652",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 308127,
        "upload_time": "2022-10-31T09:57:00",
        "upload_time_iso_8601": "2022-10-31T09:57:00.482170Z",
        "url": "https://files.pythonhosted.org/packages/1d/23/5ff389698ed82a8d91a386094e7b344cea33370980aa80d6aa3fd546a4a3/nebula3_python-3.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78875a45fc477a802d808f99378888ebb96890eb0e5734e664f97f9fb25ec605",
          "md5": "91aead54ae7c0c5e8179ff2a04e29871",
          "sha256": "78e12f6a07c817f884b6e43733ee78e4d27756abfb6487fe5f89c217591f4e4d"
        },
        "downloads": -1,
        "filename": "nebula3-python-3.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "91aead54ae7c0c5e8179ff2a04e29871",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 261155,
        "upload_time": "2022-10-31T09:57:02",
        "upload_time_iso_8601": "2022-10-31T09:57:02.379542Z",
        "url": "https://files.pythonhosted.org/packages/78/87/5a45fc477a802d808f99378888ebb96890eb0e5734e664f97f9fb25ec605/nebula3-python-3.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acbc23396a5d394801ec8a1cfb2eed6643ded878d77c9242fd097c4a4a5d3489",
          "md5": "e125ed61e691fdfe570b04add2bff150",
          "sha256": "d9d94c6a41712875e6ec866907de0789057f860e64f547f87d9f199439759dd6"
        },
        "downloads": -1,
        "filename": "nebula3_python-3.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e125ed61e691fdfe570b04add2bff150",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 312418,
        "upload_time": "2023-02-07T07:32:30",
        "upload_time_iso_8601": "2023-02-07T07:32:30.313326Z",
        "url": "https://files.pythonhosted.org/packages/ac/bc/23396a5d394801ec8a1cfb2eed6643ded878d77c9242fd097c4a4a5d3489/nebula3_python-3.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e2f3f942deb4a5da23c0cabeac954ec6a224ee6e21d0f8e35845164dce65b79",
          "md5": "c4d4d4c3b58cc4f1b8beaeee98a10549",
          "sha256": "47bd8b1b4bb2c2f0e5122bc147926cb50578a66841acf6a743cae4d0362c9eaa"
        },
        "downloads": -1,
        "filename": "nebula3-python-3.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c4d4d4c3b58cc4f1b8beaeee98a10549",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 265662,
        "upload_time": "2023-02-07T07:32:31",
        "upload_time_iso_8601": "2023-02-07T07:32:31.999168Z",
        "url": "https://files.pythonhosted.org/packages/9e/2f/3f942deb4a5da23c0cabeac954ec6a224ee6e21d0f8e35845164dce65b79/nebula3-python-3.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "acbc23396a5d394801ec8a1cfb2eed6643ded878d77c9242fd097c4a4a5d3489",
        "md5": "e125ed61e691fdfe570b04add2bff150",
        "sha256": "d9d94c6a41712875e6ec866907de0789057f860e64f547f87d9f199439759dd6"
      },
      "downloads": -1,
      "filename": "nebula3_python-3.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e125ed61e691fdfe570b04add2bff150",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 312418,
      "upload_time": "2023-02-07T07:32:30",
      "upload_time_iso_8601": "2023-02-07T07:32:30.313326Z",
      "url": "https://files.pythonhosted.org/packages/ac/bc/23396a5d394801ec8a1cfb2eed6643ded878d77c9242fd097c4a4a5d3489/nebula3_python-3.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e2f3f942deb4a5da23c0cabeac954ec6a224ee6e21d0f8e35845164dce65b79",
        "md5": "c4d4d4c3b58cc4f1b8beaeee98a10549",
        "sha256": "47bd8b1b4bb2c2f0e5122bc147926cb50578a66841acf6a743cae4d0362c9eaa"
      },
      "downloads": -1,
      "filename": "nebula3-python-3.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c4d4d4c3b58cc4f1b8beaeee98a10549",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 265662,
      "upload_time": "2023-02-07T07:32:31",
      "upload_time_iso_8601": "2023-02-07T07:32:31.999168Z",
      "url": "https://files.pythonhosted.org/packages/9e/2f/3f942deb4a5da23c0cabeac954ec6a224ee6e21d0f8e35845164dce65b79/nebula3-python-3.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}