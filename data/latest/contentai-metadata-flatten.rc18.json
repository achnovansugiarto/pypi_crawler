{
  "info": {
    "author": "Eric Zavesky",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "metadata-flatten-extractor\n==========================\n\nA method to flatten generated JSON data into timed CSV events in support\nof analytic workflows within the `ContentAI\nPlatform <https://www.contentai.io>`__, published as the extractor\n``dsai_metadata_flatten``.   There is also a \n`pypi package <https://pypi.org/project/contentai-metadata-flatten/>`__ \nof this package published for easy incorporation in other projects.\n\n1. `Getting Started <#getting-started>`__\n2. `Execution <#execution-and-deployment>`__\n3. `Testing <#testing>`__\n4. `Future Development <#future-development>`__\n5. `Changes <#changes>`__\n\nGetting Started\n===============\n\n| This library is used as a `single-run executable <#contentai-standalone>`__.\n| Runtime parameters can be passed for processing that configure the\n  returned results and can be examined in more detail in the\n  `main <main.py>`__ script.\n\n**NOTE: Not all flattening functions will respect/obey properties\ndefined here.**\n\n-  ``force_overwrite`` - *(bool)* - force existing files to be\n   overwritten (*default=False*)\n-  ``compressed`` - *(bool)* - compress output CSVs instead of raw write\n   (*default=True*, e.g. append ‘.gz’)\n-  ``all_frames`` - *(bool)* - for video-based events, log all instances\n   in box or just the center (*default=False*)\n- ``time_offset`` - *(int)* - when merging events for an asset split into \n   multiple parts, time in seconds (*default=0*); negative numbers will \n   cause a truncation (skip) of events happening before the zero time \n   mark *(added v0.7.1)*\n- ``time_offset_source`` - *(str)* - check for this one-line file path with \n   number of seconds offset according to `time_offset` rules; *(added v1.4.0)*\n-  ``verbose`` - *(bool)* - verbose input/output configuration printing\n   (*default=False*)\n-  ``extractor`` - *(string)* - specify one extractor to flatten,\n   skipping nested module import (*default=all*, e.g. ``dsai_metadata``)\n-  ``generator`` - *(string)* - cify one generator for output,\n   skipping nested module import (``*``=all, empty=none), e.g. ``flattened_csv``)\n\n\nGenerators\n==========\n\nCSV Schema (CSV)\n----------------\n\nOne output of this flattening will be a set of CSV files if the ``flattened_csv``\nis enabled as a generator.  One file is created for each discovered/input parser/extractor. \nThe standard schema for these CSV files has the following fields.\n\n-  ``time_begin`` = time in seconds of event start\n-  ``time_end`` = time in seconds of end (may be equal to time_start if\n   instantaneous)\n-  ``time_event`` = exact time in seconds (may be equal to time_start if\n   instantaneous)\n-  ``source_event`` = source media for event to add granularity for\n   event inpact (e.g. face, video, audio, speech, image, ocr, script)\n-  ``tag`` = simple text word or phrase\n-  ``tag_type`` = descriptor for type of tag; e.g. tag=concept/label/emotion, keyword=special word,\n   shot=segment, transcript=text, moderation=moderation, word=text/speech word, person=face or skeleton,\n   phrase=long utterance, face=face emotion/properties, identity=face or speaker recognition, \n   scene=semantic scenes/commercials/commercial_lead, brand=product or logo mention, emotion=visual or audio sentiment/emotion\n-  ``score`` = confidence/probability\n-  ``details`` = possible bounding box or other long-form (JSON-encoded)\n   details\n-  ``extractor`` = name of extractor for insight\n\n\nExample Programmatic Use\n------------------------\n\nWhile this library is primarily used as an extractor in ContentAI, it can \nbe programmatically called within another extractor to simplify incoming \ndata into a simple list for analysis.  Several of these examples are available\nas code examples in the testing scripts.\n\n1. This dictionary-based call example will parse output of the `azure_videoindexer` \n   and return it as a dictionary only (do not generate CSV or JSON output).\n\n.. code:: python\n\n   from contentai_metadata_flatten.main import flatten\n\n   dict_result = flatten({\"path_content\": \"content/jobs\", \"extractor\": \"azure_videoindexer\",\n                          \"generator\": \"\", \"verbose\": True, \"path_result\": \".\", args=[])\n\n\n2. This argument call example will parse all extractor outputs and generate a CSV.\n\n.. code:: python\n\n   from contentai_metadata_flatten.main import flatten\n\n   dict_result = flatten(args=[\"--path_content\", \"content/jobs/example.mp4\", \n                               \"--generator\", \"flattened_csv\", \"--path_result\": \"content/flattened\")\n\n3. This low-level access to a parser allows more control over which file or directory\n   is parsed by the library and no generators are called.  This call example is the same as\n   the first example except that it returns a `DataFrame` instead of a dictionary and may \n   be slightly faster.\n\n.. code:: python\n\n   from contentai_metadata_flatten import parsers\n   import logging\n\n   logger = logging.getLogger()\n   logger.setLevel(logging.INFO)\n\n   list_parser = parsers.get_by_name(\"azure_videoindexer\")\n   parser_instance = list_parser[0]['obj'](\"content/jobs\", logger=logger)\n   config_default = parser_instance.default_config()\n   result_df = parser_instance.parse(config_default)\n\n4. Another low-level access to parsers for only certain tag types.  This call example allows\n   the parsing of only certain tag types (below only those of type `identity` and `face`).\n\n.. code:: python\n\n   from contentai_metadata_flatten import parsers\n   import logging\n\n   logger = logging.getLogger()\n   logger.setLevel(logging.INFO)\n\n   list_parser = parsers.get_by_type([\"face\", \"identity\"])\n   for parser_obj in list_parser:\n      parser_instance = parser_obj['obj'](\"content/jobs\", logger=logger)\n      config_default = parser_instance.default_config()\n      result_df = parser_instance.parse(config_default)\n\n\nReturn Value\n------------\n\nThe main function `main.py::flatten` now returns a richer dictionary (*v1.3.0*).\nFor programatic callers of the function the dictionary object contains a \n`data` property (all of the flattened data as a list) and a `generated` property \nwhich contains a list of nested dictionaries indicating generated outptu (if enabled).\nAn example output below demonstrates the flattened results as well as two enabled generators.\n\n.. code:: shell\n\n   {'data': [\n      {'tag': 'Clock', 'time_begin': 0, 'time_end': 1, 'time_event': 0, 'score': 0.08157, 'details': '{\"model\": \"/m/01x3z\"}', 'source_event': 'audio', 'tag_type': 'tag', 'extractor': 'example_extractor'}, \n      {'tag': 'Sine wave', 'time_begin': 0, 'time_end': 1, 'time_event': 0, 'score': 0.07586, 'details': '{\"model\": \"/m/01v_m0\"}', 'source_event': 'audio', 'tag_type': 'tag', 'extractor': 'example_extractor'}, \n      {'tag': 'Tick-tock', 'time_begin': 0, 'time_end': 1, 'time_event': 0, 'score': 0.07297, 'details': '{\"model\": \"/m/07qjznl\"}', 'source_event': 'audio', 'tag_type': 'tag', 'extractor': 'example_extractor'}, \n      ... ]\n   'generated': [\n      {'generator': 'flattened_csv', 'path': 'testme/example_extractor.csv.gz'}, \n      {'generator': 'wbTimeTaggedMetadata', 'path': 'testme/wbTimeTaggedMetadata.json.gz'}] \n   }\n\nExecution and Deployment\n========================\n\nThis package is meant to be run as a one-off processing tool that\naggregates the insights of other extractors.\n\ncommand-line standalone\n-----------------------\n\nRun the code as if it is an extractor. In this mode, configure a few\nenvironment variables to let the code know where to look for content.\n\nOne can also run the command-line with a single argument as input and\noptionally ad runtime configuration (see `runtime\nvariables <#getting-started>`__) as part of the ``EXTRACTOR_METADATA``\nvariable as JSON.\n\n.. code:: shell\n\n   EXTRACTOR_METADATA='{\"compressed\":true}'\n\nLocally Run on Results\n~~~~~~~~~~~~~~~~~~~~~~\n\nFor utility, the above line has been wrapped in the bash script\n``run_local.sh``.\n\n.. code:: shell\n\n   EXTRACTOR_METADATA='$3' EXTRACTOR_NAME=metadata-flatten EXTRACTOR_JOB_ID=1 \\\n       EXTRACTOR_CONTENT_PATH=$1 EXTRACTOR_CONTENT_URL=file://$1 EXTRACTOR_RESULT_PATH=`pwd`/results/$2 \\\n       python -u main.py\n\nThis allows a simplified command-line specification of a run\nconfiguration, which also allows the passage of metadata into a\nconfiguration.\n\n*Normal result generation into compressed CSVs (with overwrite).*\n\n.. code:: shell\n\n   ./run_local.sh data/wHaT3ver1t1s results/\n\n*Result generation with environment variables and integration of results\nfrom a file that was split at an offset of three hours.*\n\n.. code:: shell\n\n   ./run_local.sh results/1XMDAz9w8T1JFEKHRuNunQhRWL1/ results/ '{\"force_overwrite\":false,\"time_offset\":10800}'\n\n*Result generation from a single extractor, with its nested directory\nexplicitly specified. (added v0.6.1)*\n\n.. code:: shell\n\n   ./run_local.sh results/dsai_metadata results/ '{\"extractor\":\"dsai_metadata\"}'\n\nLocal Runs with Timing Offsets\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe script ``run_local.sh`` also searches for a text file called\n``timing.txt`` in each source directory. If found, it will offset all\nresults by the specified number of seconds before saving them to disk.\nAlso, negative numbers will cause a truncation (skip) of events\nhappening before the zero time mark. *(added v0.7.1)*\n\nThis capability may be useful if you have to manually split a file into\nmultiple smaller files at a pre-determined time offset (e.g. three hours\n-> 10800 in ``timing.txt``). *(added v0.5.2)*\n\n.. code:: shell\n\n   echo \"10800\" > 1XMDAz9w8T1JFEKHRuNunQhRWL1/timing.txt\n   ./run_local.sh results/1XMDAz9w8T1JFEKHRuNunQhRWL1/ results/\n\nAfterwards, new results can be added arbitrarily and the script can be\nrerun in the same directory to accomodate different timing offsets.\n\n*Example demonstrating integration of multiple output directories.*\n\n.. code:: shell\n\n   find results -type d  -d 1 | xargs -I {} ./run_local.sh {} results/\n\nContentAI\n---------\n\nDeployment\n~~~~~~~~~~\n\nDeployment is easy and follows standard ContentAI steps.\n\n.. code:: shell\n\n   contentai deploy --cpu 256 --memory 512 metadata-flatten\n   Deploying...\n   writing workflow.dot\n   done\n\nAlternatively, you can pass an image name to reduce rebuilding a docker\ninstance.\n\n.. code:: shell\n\n   docker build -t metadata-deploy\n   contentai deploy metadata-flatten --cpu 256 --memory 512 -i metadata-deploy\n\nLocally Downloading Results\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can locally download data from a specific job for this extractor to\ndirectly analyze.\n\n.. code:: shell\n\n   contentai data wHaT3ver1t1s --dir data\n\nRun as an Extractor\n~~~~~~~~~~~~~~~~~~~\n\n.. code:: shell\n\n   contentai run https://bucket/video.mp4  -w 'digraph { aws_rekognition_video_celebs -> metadata_flatten}'\n\n   JOB ID:     1Tfb1vPPqTQ0lVD1JDPUilB8QNr\n   CONTENT:    s3://bucket/video.mp4\n   STATE:      complete\n   START:      Fri Feb 15 04:38:05 PM (6 minutes ago)\n   UPDATED:    1 minute ago\n   END:        Fri Feb 15 04:43:04 PM (1 minute ago)\n   DURATION:   4 minutes \n\n   EXTRACTORS\n\n   my_extractor\n\n   TASK      STATE      START           DURATION\n   724a493   complete   5 minutes ago   1 minute \n\nOr run it via the docker image…\n\n::\n\n   docker run --rm  -v `pwd`/:/x -e EXTRACTOR_CONTENT_PATH=/x/file.mp3 -e EXTRACTOR_RESULT_PATH=/x/result2 <docker_image>\n\nView Extractor Logs (stdout)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: shell\n\n   contentai logs -f <my_extractor>\n   my_extractor Fri Nov 15 04:39:22 PM writing some data\n   Job complete in 4m58.265737799s\n\nTesting\n=======\n\nTesting is included via tox.  To launch testing for the entire package, just run `tox` at the command line. \nTesting can also be run for a specific file within the package by setting the evironment variable `TOX_ARGS`.\n\n.. code:: shell\n\n   TOX_ARG=test_basic.py tox \n\n\n\nFuture Development\n==================\n\n-  the remaining known extractors...  ``openpose``, ``dsai_tmstext_classifier_extractor``, \n    ``dsai_vinyl_sound_ai``, ``dsai_name_entity_extractor``, \n    ``aws_rekognition_video_segments``\n-  integration of viewership insights\n-  creation of sentiment and mood-based insights (which tags most\n   co-occur here?)\n\nChanges\n=======\n\nA method to flatten generated JSON data into timed CSV events in support\nof analytic workflows within the `ContentAI Platform <https://www.contentai.io>`__.\n\n1.4\n---\n\n1.4.0\n~~~~~\n- fix for timing offsets; don't overwrite any output if timing offset indicator\n\n1.4.1\n~~~~~\n- add new `dsai_ads_detector` parser for predictive ad locations\n\n\n1.3\n---\n\n1.3.3\n~~~~~\n- minor fix for `azure_videoindexer` parsing, now first video shot can *not* contain a keyframe ? \n\n\n1.3.2\n~~~~~\n- minor fix for `gcp_videointelligence_text_detection` parsing\n\n1.3.1\n~~~~~\n- fix for no-output generators\n- fix complete output for returned dictionary of data\n- add richer documentation for library/api usage\n\n1.3.0\n~~~~~\n- update output of main parse function to return a dict instead of file listing\n- modify generator specification to allow ALL (``*`` **default**) or NONE for outputs\n\n\n1.2\n---\n\n1.2.2\n~~~~~\n- add parsers for `gcp_videointelligence_text_detection`, `comskip_json`, `ibm_max_audio_classifier`, \n   `gcp_videointelligence_object_tracking`, `gcp_videointelligence_people_detection`\n- improve testing to iterate over known set of data in testing dir\n- fix generator/parser retrieve for whole name matches, not partials\n- add documentation for new types, explicitly call out `person` tag_type\n- update the `dsai_activity_emotions` parser to return tag type `emotion` (matching that of other AWS, Azure parsers)\n\n1.2.1\n~~~~~\n- update `azure_videoindexer` for `tag_type` in detected brands (was speech, now video)\n\n1.2.0\n~~~~~\n- add unit-testing to package build\n- add command-line / parser input as complement to contentai-driven ENV variables\n- fix bugs around specification of result path or specific generator\n\n1.1\n---\n\n1.1.8\n~~~~~\n- fix issue about constant reference\n- fix `run_local.sh` script for extra run param config\n- fix querying for local files in non-contentai environments (regression since 1.1.0)\n\n1.1.7\n~~~~~\n- inclusion of other constants for compatibility with other packages\n- refactor/rename of parser classes to mandate a filename output prefix (e.g. ``flatten_``)\n- add ``dsai_activity_emotions`` parser (a clone of ``dsai_activity_classifier``)\n\n1.1.6\n~~~~~\n- remove applications, fork to new `metatata-database` source, to be posted\n  at a `pypi database package <https://pypi.org/project/contentai-metadata-database>`__\n\n1.1.4\n~~~~~\n- name update for ``dsai_moderation_image`` extractor\n\n1.1.3\n~~~~~\n- hotfix for build distribution\n- fix for content creation in streamlit/browsing app\n\n1.1.2\n~~~~~\n- deployed extractor (docker fix) for updated namespace\n\n\n1.1.1\n~~~~~\n- docs update, testing fixes, version bump for publication\n\n1.1.0\n~~~~~\n- rename to ``contentai-metadata-flatten`` and publish to pypi as a package!\n\n\n1.0\n---\n\n1.0.2\n~~~~~\n- update documentation for `Metadata Browser <app_browser>`__ and `Inventory Discovery <app_inventory>`__ app\n\n1.0.1\n~~~~~\n- add ability to parse input CSVs but not segment into shot\n- move to a single NLP library (spacy) for applications, using large model (with vectors)\n\n1.0.0\n~~~~~\n- add new `dash/plotly <https://dash.plotly.com/>`__ driven quality check application\n\n0.9\n---\n\n0.9.9\n~~~~~\n- update to optimize the pull of asset keys\n\n0.9.7\n~~~~~\n\n- upgrade to use new `contentai extractor package <https://pypi.org/project/contentaiextractor/>`__\n- update parser logic for safer key and data retrieval\n\n\n0.9.6\n~~~~~\n\n- upgrade to use new `contentai extractor package <https://pypi.org/project/contentaiextractor/>`__\n- update parser logic for safer key and data retrieval\n\n\n0.9.6\n~~~~~\n- small tweaks/normalization of rounding factor for extractors\n- correct emotion souce type for azure\n- refactor app location for primary streamlit browser\n  - fix mode discovery for modules with specific UX interface\n- update file listing to show data bundle files as well\n- refactor utilities script for reuse in other apps\n\n\n0.9.5\n~~~~~\n\n- update to parse new version of `dsai_places`\n- add new parser for `detectron2` extractor\n\n0.9.4\n~~~~~\n\n- add static file serving to streamlit app, inspired by this `streamlit issue discussion <https://github.com/streamlit/streamlit/issues/400>`_\n- modify some pages to point to downloadable tables (with button click)\n- create new download page/mode that lists the generated and source files\n- minor refactor of app's docker image for better caching in local creation and testing\n\n\n0.9.3\n~~~~~\n\n- add ``dsai_moderation_text`` parser, update ``dsai_moderation`` parser for version robustness\n  - add min threshold (*0.05*) to both moderation detectors\n\n\n0.9.2\n~~~~~\n\n- add recursion to file-based discovery method for processed assets\n  - unify read of JSON and text files with internalaized function call in extractor base class\n- fix some extractors to use single name reference ``self.EXTRACTOR``\n\n0.9.1\n~~~~~\n\n- fix transcript parsing in ``azure_videoindexer`` component\n- add speaker differentiation as an identity block in ``azure_videoindexer`` (similar to ``aws_transcribe``)\n\n\n0.9.0\n~~~~~\n\n- add timeline viewing to the ``event_table`` mode of streamlit app\n\n\n\n0.8\n---\n\n0.8.9\n~~~~~\n\n- fixes to main streamlit app for partial extractors (e.g. missing identity, sparse brand)\n\n0.8.8\n~~~~~\n\n- add parser for ``dsai_moderation``\n\n\n0.8.7\n~~~~~\n\n- add parser for ``dsai_activity_classifier``\n- fix bug for faulty rejection of ``flatten_aws_transcribe`` results\n\n0.8.6\n~~~~~\n\n- add parsers for ``pyscenedetect``, ``dsai_sceneboundary``, ``aws_transcribe``, ``yolo3``, ``aws_rekognition_video_text_detect``\n- add speaker identity (from speech) to ``gcp_videointelligence_speech_transcription``\n- add ``type`` field (maps to ``tag_type``) to output generated by ``wbTimeTaggedTmetadata`` generator\n  - add hashing against data (e.g. ``box``) within JSON metadata generator\n\n\n0.8.5\n~~~~~\n\n- add parsers for ``dsai_yt8m`` (youtube8M or mediapipe)\n\n\n0.8.4\n~~~~~\n\n- add parsers for ``dsai_activity_slowfast`` (activity) and ``dsai_places`` (scene/settings)\n- add *source_type* sub-field to ``event_table`` browsing mode\n\n\n0.8.3\n~~~~~\n\n- add ``manifest`` option to application for multiple assets\n- fix app docker file for placement/generation of code with a specific user ID\n- fix CI/CD integration for auto launch\n- fix app explorer bugs (derive 'words' from transcript/keywords if none)\n\n\n0.8.2\n~~~~~\n\n- hotfix for missing data in ``dsai_metadata`` parser\n\n\n0.8.2\n~~~~~\n\n- slight refactor of how parsers are discovered, to allow search by name or type (for use as package)\n- fix package import for contentai local file\n- switch *tag_type* of ``ocr`` to ``transcript`` and ``ocr`` for *source_type* (``azure_videoindexer``)\n\n\n0.8.1\n~~~~~\n\n- adding music parser ``dsai_musicnn`` for different audio regions\n\n\n0.8.0\n~~~~~\n\n- convert to package for other modules to install\n- switch document to RST from MD\n- add primitive testing capabilities (to be filled)\n\n\n0.7\n---\n\n0.7.1\n~~~~~\n\n-  added truncation/trim of events before zero mark if time offset is\n   negative\n-  re-brand extractor as ``dsai_metadata_flatten`` for ownership\n   consistency\n\n0.7.0\n~~~~~\n\n-  create new set of generator class objects for varying output\n   generator\n-  add new ``generator`` input for limiting output to a single type\n\n\n0.6\n---\n\n0.6.2\n~~~~~\n\n-  rename ``rekognition_face_collection`` to\n   ``aws_rekognition_face_collection`` for consistency\n\n\n0.6.1\n~~~~~\n\n-  split documentation and changes\n-  add new ``cae_metadata`` type of parser\n-  modify ``source_type`` of detected faces in ``azure_videoindexer`` to\n   ``face``\n-  modify to add new ``extractor`` input for limit to scanning (skips\n   sub-dir check)\n\n0.6.0\n~~~~~\n\n-  adding CI/CD script for `gitlab <https://gitlab.com>`__\n-  validate usage as a flattening service\n-  modify ``source_type`` for ``aws_rekognition_video_celebs`` to\n   ``face``\n\n0.5\n---\n\n\n0.5.4\n~~~~~\n\n-  adding ``face_attributes`` visualization mode for exploration of face\n   data\n-  fix face processing to split out to ``tag_type`` as ``face`` with\n   richer subtags\n\n0.5.3\n~~~~~\n\n-  add labeling component to application (for video/image inspection)\n-  fix shot duration computeation in application (do not overwrite\n   original event duration)\n-  add text-search for scanning named entities, words from transcript\n\n\n0.5.2\n~~~~~\n\n-  fix bugs in ``gcp_videointelligence_logo_recognition`` (timing) and\n   ``aws_rekognition_video_faces`` (face emotions)\n-  add new detection of ``timing.txt`` for integration of multiple\n   results and their potential time offsets\n-  added ``verbose`` flag to input of main parser\n-  rename ``rekognition_face_collection`` for consistency with other\n   parsers\n\n\n0.5.1\n~~~~~\n\n-  split app modules into different visualization modes (``overview``,\n   ``event_table``, ``brand_expansion``)\n\n   -  ``brand_expansion`` uses kNN search to expand from shots with\n      brands to similar shots and returns those brands\n   -  ``event_table`` allows specific exploration of identity\n      (e.g. celebrities) and brands witih image/video playback\n   -  **NOTE** The new application requires ``scikit-learn`` to perform\n      live indexing of features\n\n-  dramatically improved frame targeting (time offset) for event\n   instances (video) in application\n\n\n0.5.0\n~~~~~\n\n-  split main function into sepearate auto-discovered modules\n-  add new user collection detection parser\n   ``rekognition_face_collection`` (custom face collections)\n\n\n0.4\n---\n\n\n0.4.5\n~~~~~\n\n-  fixes for gcp moderation flattening\n-  fixes for app rendering (switch most graphs to scatter plot)\n-  make all charts interactive again\n-  fix for time zone/browser challenge in rendering\n\n\n0.4.4\n~~~~~\n\n-  fixes for ``azure_videoindexer`` parser\n-  add sentiment and emotion summary\n-  rework graph generation and add bran/entity search capability\n\n\n0.4.3\n~~~~~\n\n-  add new ``azure_videoindexer`` parser\n-  switch flattened reference from ``logo`` to ``brand``; ``explicit``\n   to ``moderation``\n-  add parsing library ``pytimeparse`` for simpler ingest\n-  fix bug to delete old data bundle if reference files are available\n\n\n0.4.2\n~~~~~\n\n-  add new ``time_offset`` parameter to environment/run configuration\n-  fix bug for reusing/rewriting existing files\n-  add output prefix ``flatten_`` to all generated CSVs to avoid\n   collision with other extractor input\n\n\n0.4.1\n~~~~~\n\n-  fix docker image for nlp tasks, fix stop word aggregation\n\n\n0.4.0\n~~~~~\n\n-  adding video playback (and image preview) via inline command-line\n   execution of ffmpeg in application\n-  create new Dockerfile.app for all-in-one explorer app creation\n\n\n0.3\n---\n\n\n0.3.2\n~~~~~\n\n-  argument input capabilities for exploration app\n-  sort histograms in exploration app by count not alphabet\n\n\n0.3.1\n~~~~~\n\n-  browsing bugfixes for exploration application\n\n\n0.3.0\n~~~~~\n\n-  added new `streamlit <https://www.streamlit.io/>`__ code for `data\n   explorer interface <app>`__\n\n   -  be sure to install extra packages if using this app and starting\n      from scratch (e.g. new flattened files)\n   -  if you’re working from a cached model, you can also drop it in\n      from a friend\n\n\n0.2\n---\n\n\n0.2.1\n~~~~~\n\n-  schema change for verb/action consistency ``time_start`` ->\n   ``time_begin``\n-  add additional row field ``tag_type`` to describe type of tag (see\n   `generated-insights <#generated-insights>`__)\n-  add processing type ``gcp_videointelligence_logo_recognition``\n-  allow compression as a requirement/input for generated files\n   (``compressed`` as input)\n\n0.2.0\n~~~~~\n\n-  add initial package, requirements, docker image\n-  add basic readme for usage example\n-  processes types ``gcp_videointelligence_label``,\n   ``gcp_videointelligence_shot_change``,\n   ``gcp_videointelligence_explicit_content``,\n   ``gcp_videointelligence_speech_transcription``,\n   ``aws_rekognition_video_content_moderation``,\n   ``aws_rekognition_video_celebs``, ``aws_rekognition_video_labels``,\n   ``aws_rekognition_video_faces``,\n   ``aws_rekognition_video_person_tracking``,\n\n\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.research.att.com/turnercode/metadata-flatten-extractor",
    "keywords": "",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "contentai-metadata-flatten",
    "package_url": "https://pypi.org/project/contentai-metadata-flatten/",
    "platform": "",
    "project_url": "https://pypi.org/project/contentai-metadata-flatten/",
    "project_urls": {
      "Homepage": "https://gitlab.research.att.com/turnercode/metadata-flatten-extractor"
    },
    "release_url": "https://pypi.org/project/contentai-metadata-flatten/1.4.1/",
    "requires_dist": [
      "pandas",
      "numexpr",
      "pytimeparse",
      "contentaiextractor (>=1.0.4)"
    ],
    "requires_python": ">=3.6",
    "summary": "ContentAI Metadata Flattening Service",
    "version": "1.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9990506,
  "releases": {
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a780eb5fcdd5526085219de3fb7076631d9911d184f73c758c326228dae5f422",
          "md5": "70fd80a2118a46684b8d64942b87622b",
          "sha256": "deb1855be70591068f966eabaad1e6ba9832cf3a0d4ea23d21465ab017841d5f"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-0.5.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70fd80a2118a46684b8d64942b87622b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 90792,
        "upload_time": "2020-08-06T03:49:43",
        "upload_time_iso_8601": "2020-08-06T03:49:43.702888Z",
        "url": "https://files.pythonhosted.org/packages/a7/80/eb5fcdd5526085219de3fb7076631d9911d184f73c758c326228dae5f422/contentai_metadata_flatten-0.5.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9904f62793e6ec83dd8c5496aa4341bc2e35b190da1d05a4dd60523bcfd6b164",
          "md5": "972470a9fde182a8208dfb71ceaa71e9",
          "sha256": "2568576a07d5e6249d431b5a109f83fb6c9dee8585af10a39b85f54fa6f47ab8"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "972470a9fde182a8208dfb71ceaa71e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42422,
        "upload_time": "2020-08-06T03:49:45",
        "upload_time_iso_8601": "2020-08-06T03:49:45.236880Z",
        "url": "https://files.pythonhosted.org/packages/99/04/f62793e6ec83dd8c5496aa4341bc2e35b190da1d05a4dd60523bcfd6b164/contentai_metadata_flatten-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32836d4d3fe7f96826fb3a186f8541a61956df36cf81a8a5d774da92836c6789",
          "md5": "5199bf42c74d4be8b140d59e92332700",
          "sha256": "66b62bee04a96e915f0c7ea41475d1ef382febe322e16a3c06cbb8b561a2d474"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5199bf42c74d4be8b140d59e92332700",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 78983,
        "upload_time": "2020-08-07T13:05:35",
        "upload_time_iso_8601": "2020-08-07T13:05:35.758393Z",
        "url": "https://files.pythonhosted.org/packages/32/83/6d4d3fe7f96826fb3a186f8541a61956df36cf81a8a5d774da92836c6789/contentai_metadata_flatten-1.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f969452880258e4d76b9ed5fa2e25435551f07f0831ee78f99bcd4a86c2c592",
          "md5": "befa82ebad3edd3c6bb31d305568ad9e",
          "sha256": "686901563f755492ed433be3c413e5d7a145d858bd9a097aa085896cca4fffb6"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "befa82ebad3edd3c6bb31d305568ad9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 183253,
        "upload_time": "2020-08-07T13:05:37",
        "upload_time_iso_8601": "2020-08-07T13:05:37.347613Z",
        "url": "https://files.pythonhosted.org/packages/2f/96/9452880258e4d76b9ed5fa2e25435551f07f0831ee78f99bcd4a86c2c592/contentai_metadata_flatten-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ecc7bd67f9d5f33389826f35084001245c998715d493a62b498dcccee3c230c",
          "md5": "e0c45952a8bdf1736134d8485bf8bd09",
          "sha256": "94f2ade53ecf42b03b4ae75b2de97d46625f2dedd4c6a4aec06a77b030464a65"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0c45952a8bdf1736134d8485bf8bd09",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 79013,
        "upload_time": "2020-08-07T16:27:31",
        "upload_time_iso_8601": "2020-08-07T16:27:31.199778Z",
        "url": "https://files.pythonhosted.org/packages/8e/cc/7bd67f9d5f33389826f35084001245c998715d493a62b498dcccee3c230c/contentai_metadata_flatten-1.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9a94bbca23eebd52f4f08b9f89dc554bcea771fd3a3161b65f13a05d4a998ce",
          "md5": "5fa875ad5ea3564348dcbf1cd56d054f",
          "sha256": "b5578bd7d6d5587b892bc6e9bb07bdf8be8563ada29c39cd1cd98cae83110b5f"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5fa875ad5ea3564348dcbf1cd56d054f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 183305,
        "upload_time": "2020-08-07T16:27:32",
        "upload_time_iso_8601": "2020-08-07T16:27:32.816304Z",
        "url": "https://files.pythonhosted.org/packages/a9/a9/4bbca23eebd52f4f08b9f89dc554bcea771fd3a3161b65f13a05d4a998ce/contentai_metadata_flatten-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf68eb4db9fff6e5c188a87edd11cc88b808d27ad3bc0d2153e576f5fcce56b7",
          "md5": "5e70b35bc10cacf58c64ce1c359e44b8",
          "sha256": "b366195453a3d73dda43edd0bf12df8afb8545edb42f8b282224d817e392d144"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e70b35bc10cacf58c64ce1c359e44b8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 79043,
        "upload_time": "2020-08-08T12:02:58",
        "upload_time_iso_8601": "2020-08-08T12:02:58.018931Z",
        "url": "https://files.pythonhosted.org/packages/bf/68/eb4db9fff6e5c188a87edd11cc88b808d27ad3bc0d2153e576f5fcce56b7/contentai_metadata_flatten-1.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b959245b41caa6543e743533fff742cafad220b6678e7ccd331dc2de443082c0",
          "md5": "f1f66ae5ffa0ad9c196edbc1a475df12",
          "sha256": "75f2b7ce434bf1855a2a17a2bb00e454d0a36175a417ec14df3000147a633e34"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f1f66ae5ffa0ad9c196edbc1a475df12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 183452,
        "upload_time": "2020-08-08T12:02:59",
        "upload_time_iso_8601": "2020-08-08T12:02:59.238082Z",
        "url": "https://files.pythonhosted.org/packages/b9/59/245b41caa6543e743533fff742cafad220b6678e7ccd331dc2de443082c0/contentai_metadata_flatten-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39c3e38d4e13e6b9a93f7a2db25df2909396984f3a0cff1c80a73b870f18c3eb",
          "md5": "1bba56252586fd1b6a15d729696d1ece",
          "sha256": "0a2c7ad94cb08a27344c8b05bf27f04aa3ecd2d574aa7734761534b49502ef08"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bba56252586fd1b6a15d729696d1ece",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 79061,
        "upload_time": "2020-08-11T11:59:30",
        "upload_time_iso_8601": "2020-08-11T11:59:30.634298Z",
        "url": "https://files.pythonhosted.org/packages/39/c3/e38d4e13e6b9a93f7a2db25df2909396984f3a0cff1c80a73b870f18c3eb/contentai_metadata_flatten-1.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "469e4b452e19f6cdcb80436bb384e3667246c59bd432f1295851b8d7e377c29b",
          "md5": "923a733fa7f4f44ece01a87c03d456ba",
          "sha256": "f5adf40e27e3acb8beb260a963ab1d84b7070db84e8f867288190e1ecc072214"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "923a733fa7f4f44ece01a87c03d456ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 183523,
        "upload_time": "2020-08-11T11:59:32",
        "upload_time_iso_8601": "2020-08-11T11:59:32.221741Z",
        "url": "https://files.pythonhosted.org/packages/46/9e/4b452e19f6cdcb80436bb384e3667246c59bd432f1295851b8d7e377c29b/contentai_metadata_flatten-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c63f531fdcc09bcc5e0e14a5ab952214989971d57687cc4257e67c36143e79c",
          "md5": "df04e84756d2dbf2f29c2b3c9d7e1baf",
          "sha256": "7f391da717e482948b5f672be27b30c88cd7c806e6d37c973b4d801b34b7fcad"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df04e84756d2dbf2f29c2b3c9d7e1baf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 79153,
        "upload_time": "2020-08-14T12:22:37",
        "upload_time_iso_8601": "2020-08-14T12:22:37.887615Z",
        "url": "https://files.pythonhosted.org/packages/8c/63/f531fdcc09bcc5e0e14a5ab952214989971d57687cc4257e67c36143e79c/contentai_metadata_flatten-1.1.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ce554eb2c697950fc3009ff12b73ff933e6316653a96a0f73f9e3b1941c9335",
          "md5": "6f33a437d8650eb42fbbfefecd7d843a",
          "sha256": "c3f5aab82372edf73904a50928c1033a685bd7cc536862e30761c872090f181f"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6f33a437d8650eb42fbbfefecd7d843a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 183745,
        "upload_time": "2020-08-14T12:22:39",
        "upload_time_iso_8601": "2020-08-14T12:22:39.504237Z",
        "url": "https://files.pythonhosted.org/packages/3c/e5/54eb2c697950fc3009ff12b73ff933e6316653a96a0f73f9e3b1941c9335/contentai_metadata_flatten-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56cba6724d864090fea7da6d2014293023d1b733591f14b2b4be71cba58a2499",
          "md5": "dced72fc60546de46fd6154d4c415235",
          "sha256": "ccd61dce8a93c01585df03a01157a56ff66c5e5b7ed0611c07a5a3a3e2bbcf19"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dced72fc60546de46fd6154d4c415235",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 79185,
        "upload_time": "2020-08-17T18:23:56",
        "upload_time_iso_8601": "2020-08-17T18:23:56.347346Z",
        "url": "https://files.pythonhosted.org/packages/56/cb/a6724d864090fea7da6d2014293023d1b733591f14b2b4be71cba58a2499/contentai_metadata_flatten-1.1.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b3ee549712d8536df30bbb72217d62dab9681c557921d4d607cdc81df5f3737",
          "md5": "a1cf36b9f6ade88deaec64df6c55d6ab",
          "sha256": "9ba385a7e9dad8a7a02a4dff7778bb5a9a035011f8b3af125da1cddc28049d55"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a1cf36b9f6ade88deaec64df6c55d6ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 178983,
        "upload_time": "2020-08-17T18:23:57",
        "upload_time_iso_8601": "2020-08-17T18:23:57.577337Z",
        "url": "https://files.pythonhosted.org/packages/5b/3e/e549712d8536df30bbb72217d62dab9681c557921d4d607cdc81df5f3737/contentai_metadata_flatten-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20b3cf193d0a5bb2481dc8d59ac3b227d56d97134cbe817abd17f10e96d5804c",
          "md5": "05168997ebd3056d4d24bf060ddaa996",
          "sha256": "c5040d0bbdfa9a8c5abb956fbeaa336720dd3296c2e89689c9e961ab32b5e43a"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05168997ebd3056d4d24bf060ddaa996",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 79782,
        "upload_time": "2020-08-19T16:47:48",
        "upload_time_iso_8601": "2020-08-19T16:47:48.269612Z",
        "url": "https://files.pythonhosted.org/packages/20/b3/cf193d0a5bb2481dc8d59ac3b227d56d97134cbe817abd17f10e96d5804c/contentai_metadata_flatten-1.1.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfd8a42fd97fb478979aa1b23fd2236ed487341bc413b6aa4a953b8c8c63e883",
          "md5": "ead10b13581cb43b566bcabd98d95dbf",
          "sha256": "f78ecf6067d282bcfa9223ab96e4c8459ac3ba2fb71710c5789ebbe3b4b24de3"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ead10b13581cb43b566bcabd98d95dbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48226,
        "upload_time": "2020-08-19T16:47:49",
        "upload_time_iso_8601": "2020-08-19T16:47:49.969446Z",
        "url": "https://files.pythonhosted.org/packages/df/d8/a42fd97fb478979aa1b23fd2236ed487341bc413b6aa4a953b8c8c63e883/contentai_metadata_flatten-1.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aab1b534b8d6864d2b6df112a0902509df2311f2a716e11d533a09fe1cc6289f",
          "md5": "279271aa8d2898a108764202473c1d61",
          "sha256": "9bec174f2780b37a506da3c2370d392511c88e94d3ae8573b67fa0ada39a71e2"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "279271aa8d2898a108764202473c1d61",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 79880,
        "upload_time": "2020-08-20T21:03:35",
        "upload_time_iso_8601": "2020-08-20T21:03:35.199249Z",
        "url": "https://files.pythonhosted.org/packages/aa/b1/b534b8d6864d2b6df112a0902509df2311f2a716e11d533a09fe1cc6289f/contentai_metadata_flatten-1.1.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c187f2278d5319a1140bf2f1fc612106ee977a84715dbc3ba636213989be79a3",
          "md5": "2497e9c9262307f2162a7828a123b26a",
          "sha256": "2062747ed443c57fc760dbc5b11d6e16ae284915b0a9a6062e386085d1109a46"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "2497e9c9262307f2162a7828a123b26a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 48483,
        "upload_time": "2020-08-20T21:03:36",
        "upload_time_iso_8601": "2020-08-20T21:03:36.581635Z",
        "url": "https://files.pythonhosted.org/packages/c1/87/f2278d5319a1140bf2f1fc612106ee977a84715dbc3ba636213989be79a3/contentai_metadata_flatten-1.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b38c0c8ac9ed9ed37b3512858ee3bb92bc89cfdcd65c05fe7e12686ca7c64ad3",
          "md5": "15815a2ee4c537db7a91abc821b190f3",
          "sha256": "c6ac0f32a80edbd80176108143dfd531facdc4e3053464517c0a987873d0fe7f"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15815a2ee4c537db7a91abc821b190f3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 81160,
        "upload_time": "2020-08-21T14:44:06",
        "upload_time_iso_8601": "2020-08-21T14:44:06.839175Z",
        "url": "https://files.pythonhosted.org/packages/b3/8c/0c8ac9ed9ed37b3512858ee3bb92bc89cfdcd65c05fe7e12686ca7c64ad3/contentai_metadata_flatten-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a91754c2dc5748293ea518b7b700ec074570a73bf3ae5e58677801c324cf95fc",
          "md5": "e375bdd150ca657435fab0f4cef274ec",
          "sha256": "495f1d23211a9be9ddeb3f13ba78f5378673b5e108855a7354f0509680ff2817"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e375bdd150ca657435fab0f4cef274ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49612,
        "upload_time": "2020-08-21T14:44:08",
        "upload_time_iso_8601": "2020-08-21T14:44:08.495158Z",
        "url": "https://files.pythonhosted.org/packages/a9/17/54c2dc5748293ea518b7b700ec074570a73bf3ae5e58677801c324cf95fc/contentai_metadata_flatten-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d5558c1936fdd8b4e4ed4ab144e52c29e206269a8c4a95b9a5c53d720ff7fc3",
          "md5": "6f938d2a4d9385f7e4cf6a9be29bf541",
          "sha256": "3606ec03f1c74ee5b39fe8d773f7727c0a294ad55fbf91946a1b6f398cbd885c"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f938d2a4d9385f7e4cf6a9be29bf541",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 81201,
        "upload_time": "2020-10-09T22:09:18",
        "upload_time_iso_8601": "2020-10-09T22:09:18.936682Z",
        "url": "https://files.pythonhosted.org/packages/4d/55/58c1936fdd8b4e4ed4ab144e52c29e206269a8c4a95b9a5c53d720ff7fc3/contentai_metadata_flatten-1.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afbb28e246f4e57e0342e607005352beff10ae667bf5ddc007ecd45e95f78a4f",
          "md5": "05d62e8a5807e38576559320638692c0",
          "sha256": "bda6ad07bafa52a8bcc17760352397b84bff0465e4a6e6758a05a05d6ff57683"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "05d62e8a5807e38576559320638692c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 49738,
        "upload_time": "2020-10-09T22:09:20",
        "upload_time_iso_8601": "2020-10-09T22:09:20.762164Z",
        "url": "https://files.pythonhosted.org/packages/af/bb/28e246f4e57e0342e607005352beff10ae667bf5ddc007ecd45e95f78a4f/contentai_metadata_flatten-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0adfbf8c3cce2e99333969850220d919a8031afb48b92b23f465e3815742a378",
          "md5": "8d328528b8bdce3e99413103b1ba7675",
          "sha256": "96b52ff9471bbb69be307d5fcd0675ab6f89251feb955ba34a8f135bfe1bf304"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d328528b8bdce3e99413103b1ba7675",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 92035,
        "upload_time": "2020-12-29T18:06:17",
        "upload_time_iso_8601": "2020-12-29T18:06:17.545137Z",
        "url": "https://files.pythonhosted.org/packages/0a/df/bf8c3cce2e99333969850220d919a8031afb48b92b23f465e3815742a378/contentai_metadata_flatten-1.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f61467f074e2baf0a3141efa768fae7d79012e4d83e854ca66c76ca2067bb2d",
          "md5": "6ea0addfe7f60a211d32f366e528c2c0",
          "sha256": "03c5d4eb9f2bd2e023ad51e5d992b9da971a3df9b36deaae111fd219140857e3"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6ea0addfe7f60a211d32f366e528c2c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 53517,
        "upload_time": "2020-12-29T18:06:18",
        "upload_time_iso_8601": "2020-12-29T18:06:18.931882Z",
        "url": "https://files.pythonhosted.org/packages/0f/61/467f074e2baf0a3141efa768fae7d79012e4d83e854ca66c76ca2067bb2d/contentai_metadata_flatten-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "679a1df4aa8e5f19b6a265e25fcf8dc17ba07ce19b99611432f1671698c2e5b3",
          "md5": "075123de13144c11bb95b9b346450cbc",
          "sha256": "50128043b67551127a6208ed4d21561442eea439f318846ce54f77148612b505"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "075123de13144c11bb95b9b346450cbc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 92544,
        "upload_time": "2021-01-03T14:59:07",
        "upload_time_iso_8601": "2021-01-03T14:59:07.127062Z",
        "url": "https://files.pythonhosted.org/packages/67/9a/1df4aa8e5f19b6a265e25fcf8dc17ba07ce19b99611432f1671698c2e5b3/contentai_metadata_flatten-1.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e789ffdadf661035c464d99411a3be5818d8eea7c1af52dbc32f483becdf4c27",
          "md5": "b227cd73fc6853b9196cfe8402aade21",
          "sha256": "2639bed95a3be85d2f50c671fba87cca623e86ffba7d99f398289b13a5d8e9ce"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b227cd73fc6853b9196cfe8402aade21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 54661,
        "upload_time": "2021-01-03T14:59:08",
        "upload_time_iso_8601": "2021-01-03T14:59:08.552498Z",
        "url": "https://files.pythonhosted.org/packages/e7/89/ffdadf661035c464d99411a3be5818d8eea7c1af52dbc32f483becdf4c27/contentai_metadata_flatten-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae31c60a5ba4b118db2ce05700c1949f39bf22309f78f104e286c247ef443317",
          "md5": "94c93ac1d731d9583cd317a2ba49e4d9",
          "sha256": "d0267bfe9a62ade15a84a697c8535e891af2335644109878365e79d0904a9817"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94c93ac1d731d9583cd317a2ba49e4d9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 93334,
        "upload_time": "2021-01-04T11:40:54",
        "upload_time_iso_8601": "2021-01-04T11:40:54.992670Z",
        "url": "https://files.pythonhosted.org/packages/ae/31/c60a5ba4b118db2ce05700c1949f39bf22309f78f104e286c247ef443317/contentai_metadata_flatten-1.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c05f71e866bc4a8638d1952cab44f6373a6d92df624e8d9967d0ff64c0c8567f",
          "md5": "99d40aded729bc3aa0b81cc5aee0b85d",
          "sha256": "76e1c4742e97c19b4424ced33538cf5c444b61aef604521389b9827d119688e9"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "99d40aded729bc3aa0b81cc5aee0b85d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 56987,
        "upload_time": "2021-01-04T11:40:56",
        "upload_time_iso_8601": "2021-01-04T11:40:56.449178Z",
        "url": "https://files.pythonhosted.org/packages/c0/5f/71e866bc4a8638d1952cab44f6373a6d92df624e8d9967d0ff64c0c8567f/contentai_metadata_flatten-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62dfae065354316e32119adbf68b136a879b49d62900d9a7b9a2b6a2a84a452d",
          "md5": "ddae5a2281065d108422e33c49234ad6",
          "sha256": "d06904bce1216f5a851bab518e128fe86242680d67c95ff3d6b0393636fd79eb"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.3.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddae5a2281065d108422e33c49234ad6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 93386,
        "upload_time": "2021-01-26T12:21:34",
        "upload_time_iso_8601": "2021-01-26T12:21:34.963011Z",
        "url": "https://files.pythonhosted.org/packages/62/df/ae065354316e32119adbf68b136a879b49d62900d9a7b9a2b6a2a84a452d/contentai_metadata_flatten-1.3.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8e1a1ebf5956a723e1d49b9bf90b9467d20f1a2111631e9a97b87a0b4e9a9dd",
          "md5": "63015d4497421a39580346c76bea4382",
          "sha256": "18d100e170198a44e7da618845b2e63dec424d44b1023d9ce755f3dd40a5379f"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "63015d4497421a39580346c76bea4382",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 57091,
        "upload_time": "2021-01-26T12:21:36",
        "upload_time_iso_8601": "2021-01-26T12:21:36.777172Z",
        "url": "https://files.pythonhosted.org/packages/b8/e1/a1ebf5956a723e1d49b9bf90b9467d20f1a2111631e9a97b87a0b4e9a9dd/contentai_metadata_flatten-1.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5be3095c630c750bb9a25d31a19e8a1d52745a04e573cefba5a5bef653b1cb46",
          "md5": "6359b8669726e9d6baf0bf3280fa5996",
          "sha256": "ab221510327fd0be8fd567c5a836d0c433fe97f73bcbe372308580d71ae7d2ac"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.3.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6359b8669726e9d6baf0bf3280fa5996",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 93428,
        "upload_time": "2021-02-12T21:18:04",
        "upload_time_iso_8601": "2021-02-12T21:18:04.933048Z",
        "url": "https://files.pythonhosted.org/packages/5b/e3/095c630c750bb9a25d31a19e8a1d52745a04e573cefba5a5bef653b1cb46/contentai_metadata_flatten-1.3.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c93f0176f48618b45c84875a28509dcb94a7d1200b9bd997f4c37ae5f505f40e",
          "md5": "cd6a76c55c1a5904f86a3f3dafb8cfe5",
          "sha256": "bde2cb596952e5e8c8593fe0c5d7037035681474fc8c10e9f3166c516d130720"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cd6a76c55c1a5904f86a3f3dafb8cfe5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 57180,
        "upload_time": "2021-02-12T21:18:06",
        "upload_time_iso_8601": "2021-02-12T21:18:06.419988Z",
        "url": "https://files.pythonhosted.org/packages/c9/3f/0176f48618b45c84875a28509dcb94a7d1200b9bd997f4c37ae5f505f40e/contentai_metadata_flatten-1.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b83dccc4e1b107fb0068990dddf796b8b10807892920dbd6a6cd38c9e7e837cc",
          "md5": "befa3d0f05e66a0ed2e29a7d178d7ab0",
          "sha256": "78ebb67d74d6ad9f1b9023f8d0695ca2956a1fac7f93cac89df41d0ea3e868ff"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "befa3d0f05e66a0ed2e29a7d178d7ab0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 93692,
        "upload_time": "2021-02-19T16:28:15",
        "upload_time_iso_8601": "2021-02-19T16:28:15.806035Z",
        "url": "https://files.pythonhosted.org/packages/b8/3d/ccc4e1b107fb0068990dddf796b8b10807892920dbd6a6cd38c9e7e837cc/contentai_metadata_flatten-1.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b166230cc993cfd20532155e3d54b631c6e12d902f5a2c714d09c172dd84a58e",
          "md5": "aef4a2733dba8bce72735e9319ca16d3",
          "sha256": "094cb96a4bcdcd305ff19ed65526ce15179073f5679bdd6eee2db707e1bd8b11"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aef4a2733dba8bce72735e9319ca16d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 57820,
        "upload_time": "2021-02-19T16:28:17",
        "upload_time_iso_8601": "2021-02-19T16:28:17.384113Z",
        "url": "https://files.pythonhosted.org/packages/b1/66/230cc993cfd20532155e3d54b631c6e12d902f5a2c714d09c172dd84a58e/contentai_metadata_flatten-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c4cc8d375df89c8abd05804d4ae64febd85ee28f3b88ffec61b194eb3dbd115",
          "md5": "6dc0f8545dae1c03e46fa868d0422bf8",
          "sha256": "7ffe9c3554d46c6c70f2d9a41c489193f9302b7db57d6d4f449c78af87ac9a5e"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.4.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6dc0f8545dae1c03e46fa868d0422bf8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 95170,
        "upload_time": "2021-04-06T22:02:04",
        "upload_time_iso_8601": "2021-04-06T22:02:04.257573Z",
        "url": "https://files.pythonhosted.org/packages/3c/4c/c8d375df89c8abd05804d4ae64febd85ee28f3b88ffec61b194eb3dbd115/contentai_metadata_flatten-1.4.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb9b3a4f7a90772e3defa7c33fab568c94b66b9d4583aa1566a58638556794a1",
          "md5": "4e77bdb28c5ec4acf648f061f322f97e",
          "sha256": "60eb0094e290dc3da9bb6c50a220ba2efa77a73431f3588f7f1767942176f010"
        },
        "downloads": -1,
        "filename": "contentai_metadata_flatten-1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e77bdb28c5ec4acf648f061f322f97e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 58218,
        "upload_time": "2021-04-06T22:02:06",
        "upload_time_iso_8601": "2021-04-06T22:02:06.128309Z",
        "url": "https://files.pythonhosted.org/packages/bb/9b/3a4f7a90772e3defa7c33fab568c94b66b9d4583aa1566a58638556794a1/contentai_metadata_flatten-1.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c4cc8d375df89c8abd05804d4ae64febd85ee28f3b88ffec61b194eb3dbd115",
        "md5": "6dc0f8545dae1c03e46fa868d0422bf8",
        "sha256": "7ffe9c3554d46c6c70f2d9a41c489193f9302b7db57d6d4f449c78af87ac9a5e"
      },
      "downloads": -1,
      "filename": "contentai_metadata_flatten-1.4.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6dc0f8545dae1c03e46fa868d0422bf8",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 95170,
      "upload_time": "2021-04-06T22:02:04",
      "upload_time_iso_8601": "2021-04-06T22:02:04.257573Z",
      "url": "https://files.pythonhosted.org/packages/3c/4c/c8d375df89c8abd05804d4ae64febd85ee28f3b88ffec61b194eb3dbd115/contentai_metadata_flatten-1.4.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb9b3a4f7a90772e3defa7c33fab568c94b66b9d4583aa1566a58638556794a1",
        "md5": "4e77bdb28c5ec4acf648f061f322f97e",
        "sha256": "60eb0094e290dc3da9bb6c50a220ba2efa77a73431f3588f7f1767942176f010"
      },
      "downloads": -1,
      "filename": "contentai_metadata_flatten-1.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4e77bdb28c5ec4acf648f061f322f97e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 58218,
      "upload_time": "2021-04-06T22:02:06",
      "upload_time_iso_8601": "2021-04-06T22:02:06.128309Z",
      "url": "https://files.pythonhosted.org/packages/bb/9b/3a4f7a90772e3defa7c33fab568c94b66b9d4583aa1566a58638556794a1/contentai_metadata_flatten-1.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}