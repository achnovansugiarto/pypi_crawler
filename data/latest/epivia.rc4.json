{
  "info": {
    "author": "Wenliang Wang",
    "author_email": "wangwl.me@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Description of epiVIA\nVector Integration Analysis with epigenomic assays.\n\n### (1) Identify Chimeric reads from bam file\n\nEpiVIA parses each read and identifies the chimeric fragments, which are further classified into three different categories based on how the read pair is aligned to the combined reference genome: (1) “pair-chimeric” are the fragments with one read mapped to the host genome and the other mapped to the provirus (or vector) genome; (2) “host-chimeric” are the fragments that both ends mapped to the host genome, with a small soft-clipped fragment at one end which can exactly match the start or end of LTR sequence of provirus; (3) “viral-chimeric” are the fragments that are properly pair mapped to either end of the provirus genome, with a soft-clipped fragment at the end which can be mapped to the host genome with a non-zero mapping quality. Since the real chimeric fragment won’t be soft-clipped at 3’ end of 5’ LTR and 5’ end of 3’ LTR, while these cases can present in the alignment results, we corrected the aligned position for these fragments. \n\n### (2) Identify integration site with chimeric reads\n\nAlthough there is pair rescue during the alignment of BWA, we still found some pair-chimeric fragments which have soft-clipped ends from the other genome. Hence, we intend to identify the integration site with the soft-clipped read. If the read mapped to host genome is a soft-clipped alignment, we can determine the precise integration site if the clipped oligonucleotide exactly match either end of the LTR of provirus. In the other case, if the viral read that is aligned to the end of LTR is soft-clipped, we try to search the clipped fragment in the context of up or down 200 bp where the host read aligned, and an exact match can tell us the precise integration site. For host-chimeric and viral-chimeric fragments, we identify the integration site while classifying these fragments. These integration sites are further annotated with genes, transposable elements and enhancer annotation from UCSC genome browser database.\n\n\n## Install\n\n### dependencies\n\nMake sure UCSC \"bigBedToBed\" tool is in your PATH\n\n### install with pip\n> pip install epiVIA\n\n### intall from github page\n> git clone https://github.com/wangwl/epiVIA\n>\n> cd epiVIA\n>\n> python setup.py install\n\n\n## Output\nThis pipeline has multiple output files for the downstream analysis of integration sites, cells with integration sites and with proviral reads. The following tables are detailed descriptions of the output files and their file formats.\n\n### Result files\n| filename                 | description                                                          |\n| ------------------------ |:-------------------------------------------------------------------- |\n| Integration_sites.list   | Identified integration sites                                         |\n| barcode_integration.list | Ingretation sites sorted by cell barcoeds                            |\n| Cell_summary.txt         | Number of chimeric and viral reads in each cell                      |\n| Vector_coverage.csv      | Coverage of viral reads at each positioin along the proviral genome  |\n\n#### Integration_sites.list\n\n| Column name  |  Description                                                                                    |\n| ------------ | ----------------------------------------------------------------------------------------------- |\n| Genome       | Reference genome version (eg: hg19, hg38, mm9, mm10)                                            |\n| Chrom        | Chromosome of the integration site                                                              |\n| ChrStart     | Start position in host genome where the chimeric reads aligned, or the integration site         |\n| ChrEnd       | End Position in host genome where the chimeric reads aligned, or the integration site           |\n| VectorStart  | Start posision in proviral genome where the chimeric reads aligned                              |\n| VectorEnd    | End position in proviral genome where the chimeric reads aligned                                |\n| LTR          | The chimeric reads is from 5' LTR or 3' LTR                                                     |\n| InsertOri    | Integration orietation of the proviral genome based on the reference sequence                   |\n| InsertGene   | The annotated gene at the integration site of the host genome                                   |\n| GeneOri      | Orientation of the gene                                                                         |\n| ExonIntron   | The integration is in intron or exon region of the gene                                         |\n| Enhancer     | Enhancer or Promoter information at the integration site                                        |\n| Elite        | If the integration site locates in an enhancer based on UCSC annotation, whether it's Elite     |\n| TEFamily     | Family of transposable elements annotation at the integration site                              |\n| TEClass      | Class of transposable elements annotation at the integration site                               |\n| CellNumber   | Number of cells have this integration site                                                      |\n| CellBarcodes | Cell barcodes that have this integration site                                                   |\n| ReadInCell   | Number of reads in each cell that support this integration site                                 |\n| ReadNumber   | Total number of reads that support this integration site                                        |\n| Quality      | The quality of the integration site, adapted from the mapping quality of BWA                    |\n\n#### barcode_integration.list\nEach cell that have integration sites. If a cell have multiple integration sites, \".1\", \".2\", \".3\", ..., were appended to the cell barcode.\n\n| Column name  |  Description                                                                                    |\n| ------------ | ----------------------------------------------------------------------------------------------- |\n| CellBarcode  | Cell Barcode of the cell                                                                        |\n| Chrom        | Chromosome of the integration site                                                              |\n| ChrStart     | Start position in host genome where the chimeric reads aligned, or the integration site         |\n| ChrEnd       | End Position in host genome where the chimeric reads aligned, or the integration site           |\n| VectorStart  | Start posision in proviral genome where the chimeric reads aligned                              |\n| VectorEnd    | End position in proviral genome where the chimeric reads aligned                                |\n| InsertGene   | The annotated gene at the integration site of the host genome                                   |\n| ExonIntron   | The integration is in intron or exon region of the gene                                         |\n| Enhancer     | Enhancer or Promoter information at the integration site                                        |\n| TEFamily     | Family of transposable elements annotation at the integration site                              |\n| TEClass      | Class of transposable elements annotation at the integration site                               |\n| Quality      | The quality of the integration site, adapted from the mapping quality of BWA                    |\n\n#### Cell_summary.txt\n\n| Column name  |  Description                                                                                    |\n| ------------ | ----------------------------------------------------------------------------------------------- |\n| CellBarcode  | Cell Barcode of the cell                                                                        |\n| ChimeraSum   | Total number of chimeric reads from the cell                                                    |\n| Pair         | Number of 'Pair' chimeric reads (case a) from the cell                                          |\n| HostRead     | Number of 'HostRead' chimeric reads (case b) from the cell                                      |\n| VectorRead   | Number of 'VectorRead' chimeric reads (case c) from the cell                                    |\n| integration  | Number of integration sites in the cell                                                         |\n| VectorSum    | Total number of reads from the integrated proviral genome                                       |\n| noLTR        | Number of proviral reads that is not from LTR regions                                           |\n| LTR          | Number of proviral reads that is from LTR regions                                               |\n\n\n\n### Temporary files\n\nepiVIA has options of \"--candidate_bam\" and \"--chimera\" for writing the bam records used for identifying chimeric reads and those that are classified as chimeric between host genome and viral genome.\n\n\n## Example\n\n> epiVIA --Vector data/p746.fa --ltr5_start 17 --ltr5_end 693 --ltr3_start 9149  --ltr3_end  9825 --HostIndex GRCh38 --Host2bit hg38.2bit --tempdir . --chimera_bam chimera.bam --gbdb http://hgdownload.soe.ucsc.edu/gbdb/ test/data/candidate.bam .\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wangwl/epiVIA",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "epiVIA",
    "package_url": "https://pypi.org/project/epiVIA/",
    "platform": "",
    "project_url": "https://pypi.org/project/epiVIA/",
    "project_urls": {
      "Homepage": "https://github.com/wangwl/epiVIA"
    },
    "release_url": "https://pypi.org/project/epiVIA/1.1.2/",
    "requires_dist": [
      "pysam",
      "pandas",
      "biopython",
      "requests",
      "pybedtools"
    ],
    "requires_python": "",
    "summary": "Virial Integration Analysis with epigenetic data",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8149488,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2505adb997dc00b1740d7af83af4c380e455543169df6c2bd80cdf17cef2c3b",
          "md5": "d6a847c76062ff56d438ed765e76e550",
          "sha256": "61fc101f120b8216d2df326f7aa69f2a9865c8a1412b4b60286f055a7e894e67"
        },
        "downloads": -1,
        "filename": "epiVIA-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6a847c76062ff56d438ed765e76e550",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1512,
        "upload_time": "2019-08-13T21:35:36",
        "upload_time_iso_8601": "2019-08-13T21:35:36.650895Z",
        "url": "https://files.pythonhosted.org/packages/a2/50/5adb997dc00b1740d7af83af4c380e455543169df6c2bd80cdf17cef2c3b/epiVIA-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34366b14238d1ac1b9dbbf3214017bfbd9f77eb354ca57ed9902c46c20d13841",
          "md5": "55d5e41fa47ce3a428821c5d5e0e31ad",
          "sha256": "7c414030ea207d32aa5ba0c7c50d6e83b44b59ae07b566602c46c961f2873626"
        },
        "downloads": -1,
        "filename": "epiVIA-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "55d5e41fa47ce3a428821c5d5e0e31ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1224,
        "upload_time": "2019-08-13T21:35:38",
        "upload_time_iso_8601": "2019-08-13T21:35:38.751308Z",
        "url": "https://files.pythonhosted.org/packages/34/36/6b14238d1ac1b9dbbf3214017bfbd9f77eb354ca57ed9902c46c20d13841/epiVIA-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bc4e9c106a5fa5f99f722b705feef89035d6017feedc523903bc2c295eb4945",
          "md5": "ccd97113007582d79e27b63dbc44db70",
          "sha256": "45c57de52366b6d06d7dcc3eb2fbc0dd63865f04b14133519cea755389443369"
        },
        "downloads": -1,
        "filename": "epiVIA-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ccd97113007582d79e27b63dbc44db70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1492,
        "upload_time": "2019-08-13T22:56:36",
        "upload_time_iso_8601": "2019-08-13T22:56:36.609700Z",
        "url": "https://files.pythonhosted.org/packages/7b/c4/e9c106a5fa5f99f722b705feef89035d6017feedc523903bc2c295eb4945/epiVIA-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a96d25d6d5f3607f028c309431aa2e68e71d4d9b700542e9d377a12a9155e3bf",
          "md5": "46f42e8bc374bb8d14f429468e03811a",
          "sha256": "36eb8b52c229faca5ce54172c6f341fe68aaa4aafc30dc41399e61da2e864a10"
        },
        "downloads": -1,
        "filename": "epiVIA-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "46f42e8bc374bb8d14f429468e03811a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1179,
        "upload_time": "2019-08-13T22:56:37",
        "upload_time_iso_8601": "2019-08-13T22:56:37.548432Z",
        "url": "https://files.pythonhosted.org/packages/a9/6d/25d6d5f3607f028c309431aa2e68e71d4d9b700542e9d377a12a9155e3bf/epiVIA-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8fc8c84af3a0e7f1aeb8e332a3ff251d9ef271b1a67f80008235aae05b931e01",
          "md5": "2b00a113c58b59d1233c1782a6d9ee8f",
          "sha256": "51834b972613499c3d429aad2783dd8f759f0dff24bfab59a3fd1db6f227956d"
        },
        "downloads": -1,
        "filename": "epiVIA-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b00a113c58b59d1233c1782a6d9ee8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1491,
        "upload_time": "2019-08-13T22:29:18",
        "upload_time_iso_8601": "2019-08-13T22:29:18.267219Z",
        "url": "https://files.pythonhosted.org/packages/8f/c8/c84af3a0e7f1aeb8e332a3ff251d9ef271b1a67f80008235aae05b931e01/epiVIA-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6294524bb8384cace7e17d7b72f18beb557665a7719802c089149f0b0f7ef4a1",
          "md5": "08767a0121bbf122993a9c8087fa50d6",
          "sha256": "de1c4648330c0de73ce256aff5f4f55a9787c9d06d85e835399660cc29df952c"
        },
        "downloads": -1,
        "filename": "epiVIA-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "08767a0121bbf122993a9c8087fa50d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1180,
        "upload_time": "2019-08-13T22:29:19",
        "upload_time_iso_8601": "2019-08-13T22:29:19.541853Z",
        "url": "https://files.pythonhosted.org/packages/62/94/524bb8384cace7e17d7b72f18beb557665a7719802c089149f0b0f7ef4a1/epiVIA-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe383fe696c1a32adc29ebf97bc489d9a18b450211b7303b845818bab07988ea",
          "md5": "8ef0ffb959e8e32be7feff3ce0399e68",
          "sha256": "094b6c96a34576f270c02e7b99ef315065853d164f40490fb239e61bd93ee7b6"
        },
        "downloads": -1,
        "filename": "epiVIA-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ef0ffb959e8e32be7feff3ce0399e68",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19771,
        "upload_time": "2020-09-09T21:41:01",
        "upload_time_iso_8601": "2020-09-09T21:41:01.113562Z",
        "url": "https://files.pythonhosted.org/packages/fe/38/3fe696c1a32adc29ebf97bc489d9a18b450211b7303b845818bab07988ea/epiVIA-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "522c74d1bbb4914ff1f8c5d7724cb7c0b44df94e3593aef6d25f36c3b6f7b30f",
          "md5": "e0717e3033c4a078be330ef3df68f17e",
          "sha256": "91850fcbe51a48e49becff852fbfefd0735ac4ef8f48c785f9ab1d9e45af2495"
        },
        "downloads": -1,
        "filename": "epiVIA-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e0717e3033c4a078be330ef3df68f17e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19776,
        "upload_time": "2020-09-09T21:41:02",
        "upload_time_iso_8601": "2020-09-09T21:41:02.122413Z",
        "url": "https://files.pythonhosted.org/packages/52/2c/74d1bbb4914ff1f8c5d7724cb7c0b44df94e3593aef6d25f36c3b6f7b30f/epiVIA-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe383fe696c1a32adc29ebf97bc489d9a18b450211b7303b845818bab07988ea",
        "md5": "8ef0ffb959e8e32be7feff3ce0399e68",
        "sha256": "094b6c96a34576f270c02e7b99ef315065853d164f40490fb239e61bd93ee7b6"
      },
      "downloads": -1,
      "filename": "epiVIA-1.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8ef0ffb959e8e32be7feff3ce0399e68",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19771,
      "upload_time": "2020-09-09T21:41:01",
      "upload_time_iso_8601": "2020-09-09T21:41:01.113562Z",
      "url": "https://files.pythonhosted.org/packages/fe/38/3fe696c1a32adc29ebf97bc489d9a18b450211b7303b845818bab07988ea/epiVIA-1.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "522c74d1bbb4914ff1f8c5d7724cb7c0b44df94e3593aef6d25f36c3b6f7b30f",
        "md5": "e0717e3033c4a078be330ef3df68f17e",
        "sha256": "91850fcbe51a48e49becff852fbfefd0735ac4ef8f48c785f9ab1d9e45af2495"
      },
      "downloads": -1,
      "filename": "epiVIA-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "e0717e3033c4a078be330ef3df68f17e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19776,
      "upload_time": "2020-09-09T21:41:02",
      "upload_time_iso_8601": "2020-09-09T21:41:02.122413Z",
      "url": "https://files.pythonhosted.org/packages/52/2c/74d1bbb4914ff1f8c5d7724cb7c0b44df94e3593aef6d25f36c3b6f7b30f/epiVIA-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}