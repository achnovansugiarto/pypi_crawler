{
  "info": {
    "author": "Daniel R. Armstrong",
    "author_email": "Armstrong.daniel.robert@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "<!--\n\n#################################################\n### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###\n#################################################\n# file to edit: index.ipynb\n# command to build the docs after a change: nbdev_build_docs\n\n-->\n\n# MED2NLP\n\n> MED(Minimum Effective Dose) is our philosophy(Tao Da MED), with a simple goal of making NLP as easy and effectual as possible.\n\n\n## Background\n\nDeep learning for NLP has rapidly undergone some amazing advancements over the last few years and there are a wide array of amazing resources out there. This project is an attempt to extrapolate and simply the work of many of the smartest data scientist industry. As an active member of the fast.ai community most of this project is based on the works of member of the fast.ai community and their blog posts. Some of the most notable resources used were: \n* Keita Kurita's article [A Tutorial to Fine-Tuning BERT with Fast AI](https://mlexplained.com/2019/05/13/a-tutorial-to-fine-tuning-bert-with-fast-ai/) \n* Dev Sharma's article [Using RoBERTa with Fastai for NLP](https://medium.com/analytics-vidhya/using-roberta-with-fastai-for-nlp-7ed3fed21f6c) \n\n* Thilina Rajapakse article [Simple Transformers â€” Multi-Class Text Classification with BERT, RoBERTa, XLNet, XLM, and DistilBERT](https://medium.com/swlh/simple-transformers-multi-class-text-classification-with-bert-roberta-xlnet-xlm-and-8b585000ce3a)\n\n## Getting started\n\nSince we are going to be taking advantage of some the SOTA deep learning libraries and project you are going to need to install [Fastai]() and [ðŸ¤—Transformers]() and I would also highly recommend that you use [anaconda](https://www.anaconda.com/distribution/) to set up a virtual environment. \n\n## Basic system setup\n( Anaconda / Text_editor / git )\n\n- add steps/requirements\n\n### 1.xx setup - virtual environment\nTo set up your virtual environment you will open your terminal and enter the following commands:\n\n1.1 - **Create a conda environment**  with python version 3.7, and the name **_med2conda_**  \n> ```conda create -n med2conda python=3.7``` \n\n1.2 - **Activate your conda environment**: _(Now you can add to the conda environment, it should show (**med2conda**) in the command line_\n  > ```conda activate med2conda```\n\n1.3 - Add **cuda toolkit** to your conda env (in this case it is cudatoolkit=10.0) [check here](TODO) for alternative\n> ```conda install pytorch cudatoolkit=10.0 -c pytorch``` \n\n1.4 - Add **pytorch** and **fastai** to your conda env\n> ```conda install -c pytorch -c fastai fastai```\n\n1.5 - Add **transformers** to your conda env\n> ```conda install -c conda-forge transformers```\n\n1.6 - Add **jupyter notebooks** to your conda env \n> ```conda install jupyter notebook``` \n\n1.6b Some people need it to tell conda which notebook to use\n> ```conda install nb_conda ```   \n\n1.7 - When you are done using the med2nlp library you will want to exit your conda env with:\n> ```conda deactivate```\n\n`pip install med2nlp`\n\n## Assumptions\n\nYour data is in a dataframe\n\n>The best way to simplify your life is format your data into a standard format so that can use your tools in a consistent manner. This is a fairly common practice is is used a lot in pipelines, some people refer to it as tidy data. As a starting point I am going to assume that your data is in a dataframe(pandas,rapid,etc.).\n\nTODO - add more assumptions\n\n## How to use\n\nWhen you want to use the med2nlp library you are going to start your med2conda env from the terminal with: \n> ```conda activate med2conda```  \n\nMake sure you are in the med2nlp folder then start a jupyter notebook with: > ```jupyter notebook```  \n\nget your data into a dataframe \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Daniel-R_Armstrong/med2nlp",
    "keywords": "NLP,Deep Learning,Fastai,Pytorch,BERT,RoBERTa,XLNet,XLM,DistilBERT,ABSA,",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "med2nlp",
    "package_url": "https://pypi.org/project/med2nlp/",
    "platform": "",
    "project_url": "https://pypi.org/project/med2nlp/",
    "project_urls": {
      "Homepage": "https://github.com/Daniel-R_Armstrong/med2nlp"
    },
    "release_url": "https://pypi.org/project/med2nlp/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "MED(Minimum Effective Dose) to NLP",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6397835,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1615a2c335ef1c460b5c15004a35bbc986d654739a4b4740f9088901648ac94",
          "md5": "bd0a28e316ab1a56ca9e891cc8ce240e",
          "sha256": "0ff6018bcf3063e822a37cb3d02387f8e71711b498b12b908d03a265f1c4d843"
        },
        "downloads": -1,
        "filename": "med2nlp-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd0a28e316ab1a56ca9e891cc8ce240e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8188,
        "upload_time": "2020-01-05T11:43:41",
        "upload_time_iso_8601": "2020-01-05T11:43:41.179401Z",
        "url": "https://files.pythonhosted.org/packages/d1/61/5a2c335ef1c460b5c15004a35bbc986d654739a4b4740f9088901648ac94/med2nlp-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd73de50ec4c0d65fa134c89e508f6cc9c649f8038e5e6ed6a27c537ddab13d7",
          "md5": "a19a11890c8983de30a05e01041082bf",
          "sha256": "e643ed00ef30f0ffbfbe154a80c79318704f3b60404deac4f9db8eea97a1ea30"
        },
        "downloads": -1,
        "filename": "med2nlp-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a19a11890c8983de30a05e01041082bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4050,
        "upload_time": "2020-01-05T11:43:43",
        "upload_time_iso_8601": "2020-01-05T11:43:43.301455Z",
        "url": "https://files.pythonhosted.org/packages/bd/73/de50ec4c0d65fa134c89e508f6cc9c649f8038e5e6ed6a27c537ddab13d7/med2nlp-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1615a2c335ef1c460b5c15004a35bbc986d654739a4b4740f9088901648ac94",
        "md5": "bd0a28e316ab1a56ca9e891cc8ce240e",
        "sha256": "0ff6018bcf3063e822a37cb3d02387f8e71711b498b12b908d03a265f1c4d843"
      },
      "downloads": -1,
      "filename": "med2nlp-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bd0a28e316ab1a56ca9e891cc8ce240e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8188,
      "upload_time": "2020-01-05T11:43:41",
      "upload_time_iso_8601": "2020-01-05T11:43:41.179401Z",
      "url": "https://files.pythonhosted.org/packages/d1/61/5a2c335ef1c460b5c15004a35bbc986d654739a4b4740f9088901648ac94/med2nlp-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd73de50ec4c0d65fa134c89e508f6cc9c649f8038e5e6ed6a27c537ddab13d7",
        "md5": "a19a11890c8983de30a05e01041082bf",
        "sha256": "e643ed00ef30f0ffbfbe154a80c79318704f3b60404deac4f9db8eea97a1ea30"
      },
      "downloads": -1,
      "filename": "med2nlp-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a19a11890c8983de30a05e01041082bf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4050,
      "upload_time": "2020-01-05T11:43:43",
      "upload_time_iso_8601": "2020-01-05T11:43:43.301455Z",
      "url": "https://files.pythonhosted.org/packages/bd/73/de50ec4c0d65fa134c89e508f6cc9c649f8038e5e6ed6a27c537ddab13d7/med2nlp-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}