{
  "info": {
    "author": "Siphalor",
    "author_email": "info@siphalor.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Version Control :: Git"
    ],
    "description": "\n# GIUP - Git Interactive Update and Publish\n\n[![PyPI][pypi-image]][pypi-link]\n\n  [pypi-image]: https://img.shields.io/pypi/v/giup.svg\n  [pypi-link]: https://pypi.python.org/pypi/giup\n\nAllows to interactively perform hierarchical merges and run publishing commands in between.\n\nWhen commands fail the user is given the chance to intervene by rerunning the current command, just continuing, running a custom shell command or stopping the project, or the current merge path.\n\n## Example Workflow\nExample workflow from one of my Minecraft modding projects:\n\n`.giup:`\n```json\n{\n    \"merge-paths\": [\n        \"1.16\",\n        \"1.16->1.15->1.14\",\n        \"1.16->1.17\"\n    ],\n    \"commands\": [\n        {\n            \"title\": \"Cleanup build directories\",\n            \"run\": \"rm -rf build .gradle\",\n            \"nt\": \"rmdir /S /Q build & rmdir /S /Q .gradle\"\n        },\n        {\n            \"title\": \"Build and publish\",\n            \"run\": \"./gradlew publish\",\n            \"nt\": \"gradlew publish\"\n        },\n        \"git push\"\n    ]\n}\n```\n\nThis consecutively merges:\n\n1. `1.16` to `1.15`\n2. `1.15` to `1.14`\n3. `1.16` to `1.17`\n\nAfter each merge GIUP cleans up, builds, publishes and pushes the code.\n\n## Getting Started\nTo install this project run `pip install giup`. \n\nTo use this for your project create a `.giup` file (as described below) in your project root and run `giup`.\n\n## Project Specification\nBy default, the project specification will be read from the `.giup` file in the working directory. The specification should be defined in JSON and uses the following keys:\n\n### `merge-paths`\nHere you can specify certain merge hierarchies. You can either specify a hierarchy as a string delimited by arrows (`->`) or as an array with all branches (`[\"1.16\",\"1.15\",\"1.14\"]`).\n\nSpecifying a single branch will just switch to that branch and run the commands.\n\n### `commands`\nIn this array commands are specified.\nCommands are specified as an object or a string, which is a short form for an object with the `run` key.\n\nThe `run` entry should contain a string that will be run as a shell command. You can define overrides for Windows (`nt`) and POSIX (`posix`) shells.\n\nThe `title`entry is a string that optionally gets displayed when the command is run. If not defined, the command itself will be displayed before execution.\n\nThe `ignore-errors` entry is an optional boolean telling GIUP whether unsuccessful runs of the command should be treated as errors (on by default). This is useful e.g. when trying to delete a file with `rmdir` which might not exist.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Siphalor/giup",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GIUP",
    "package_url": "https://pypi.org/project/GIUP/",
    "platform": "",
    "project_url": "https://pypi.org/project/GIUP/",
    "project_urls": {
      "Homepage": "https://github.com/Siphalor/giup",
      "Issues": "https://github.com/Siphalor/giup/issues",
      "Source": "https://github.com/Siphalor/giup"
    },
    "release_url": "https://pypi.org/project/GIUP/1.0.0/",
    "requires_dist": [
      "colorama",
      "termcolor",
      "argparse"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Interactively and hierarchically perform git merges across branches and run commands in between.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9280700,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55e9eb346c8b8c24eab31b1dba9a6eaa6e54e69d1445e7bbaed1b8edfc4d06a9",
          "md5": "98f8437bbea3b869e47aed6c1e8ede4e",
          "sha256": "443f4086a04919fd06fb26c7eaf699348bd24199a855b83fae7ba76e94b5b343"
        },
        "downloads": -1,
        "filename": "GIUP-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98f8437bbea3b869e47aed6c1e8ede4e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 13921,
        "upload_time": "2021-01-31T22:57:50",
        "upload_time_iso_8601": "2021-01-31T22:57:50.868588Z",
        "url": "https://files.pythonhosted.org/packages/55/e9/eb346c8b8c24eab31b1dba9a6eaa6e54e69d1445e7bbaed1b8edfc4d06a9/GIUP-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23ea7755b6731b3831c2a96b7419c4d7b5273f532e91ae505db72ebab1c33829",
          "md5": "f6ebfc382559af3fcd6f73344563f4b8",
          "sha256": "25c657c4b8ba842d9470b95ec2ab947bf93719098e84cfdfd41c3565afdd6e5f"
        },
        "downloads": -1,
        "filename": "GIUP-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f6ebfc382559af3fcd6f73344563f4b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 11839,
        "upload_time": "2021-01-31T22:57:51",
        "upload_time_iso_8601": "2021-01-31T22:57:51.744824Z",
        "url": "https://files.pythonhosted.org/packages/23/ea/7755b6731b3831c2a96b7419c4d7b5273f532e91ae505db72ebab1c33829/GIUP-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecdccb10b65f2d3e06d168485d152a2a4d3e430473a63a249012f74a57f8dc22",
          "md5": "c6fefd0ef0c931fae4292908e3562b34",
          "sha256": "2c726e824f6cbb87d3353b2f78829265ca37c4653d54e95eaafa637cc9806bfe"
        },
        "downloads": -1,
        "filename": "GIUP-1.0.0rc0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6fefd0ef0c931fae4292908e3562b34",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 13593,
        "upload_time": "2021-01-26T16:12:04",
        "upload_time_iso_8601": "2021-01-26T16:12:04.101104Z",
        "url": "https://files.pythonhosted.org/packages/ec/dc/cb10b65f2d3e06d168485d152a2a4d3e430473a63a249012f74a57f8dc22/GIUP-1.0.0rc0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebd75104ee822b3d0a63622a5ca86f8b432a24bf4350396c5df3a371cf3fffa5",
          "md5": "01ac8b4bad156639c789e4e91530c754",
          "sha256": "92941222c1fd61640e3785e48c2398e63a958d0e4258e250ef171532a8cc143b"
        },
        "downloads": -1,
        "filename": "GIUP-1.0.0rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "01ac8b4bad156639c789e4e91530c754",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 11458,
        "upload_time": "2021-01-26T16:12:05",
        "upload_time_iso_8601": "2021-01-26T16:12:05.382075Z",
        "url": "https://files.pythonhosted.org/packages/eb/d7/5104ee822b3d0a63622a5ca86f8b432a24bf4350396c5df3a371cf3fffa5/GIUP-1.0.0rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55e9eb346c8b8c24eab31b1dba9a6eaa6e54e69d1445e7bbaed1b8edfc4d06a9",
        "md5": "98f8437bbea3b869e47aed6c1e8ede4e",
        "sha256": "443f4086a04919fd06fb26c7eaf699348bd24199a855b83fae7ba76e94b5b343"
      },
      "downloads": -1,
      "filename": "GIUP-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "98f8437bbea3b869e47aed6c1e8ede4e",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 13921,
      "upload_time": "2021-01-31T22:57:50",
      "upload_time_iso_8601": "2021-01-31T22:57:50.868588Z",
      "url": "https://files.pythonhosted.org/packages/55/e9/eb346c8b8c24eab31b1dba9a6eaa6e54e69d1445e7bbaed1b8edfc4d06a9/GIUP-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23ea7755b6731b3831c2a96b7419c4d7b5273f532e91ae505db72ebab1c33829",
        "md5": "f6ebfc382559af3fcd6f73344563f4b8",
        "sha256": "25c657c4b8ba842d9470b95ec2ab947bf93719098e84cfdfd41c3565afdd6e5f"
      },
      "downloads": -1,
      "filename": "GIUP-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f6ebfc382559af3fcd6f73344563f4b8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 11839,
      "upload_time": "2021-01-31T22:57:51",
      "upload_time_iso_8601": "2021-01-31T22:57:51.744824Z",
      "url": "https://files.pythonhosted.org/packages/23/ea/7755b6731b3831c2a96b7419c4d7b5273f532e91ae505db72ebab1c33829/GIUP-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}