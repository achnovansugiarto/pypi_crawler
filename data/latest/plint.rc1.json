{
  "info": {
    "author": "Antoine Amarilli",
    "author_email": "a3nm@a3nm.net",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "plint -- a French poetry validator\nCopyright (C) 2011-2019 by Antoine Amarilli\nRepository URL: https://gitlab.com/a3nm/plint\n\n== 0. Licence ==\n\nThis program is free software: you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation, version 3.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program (see file \"COPYING\").  If not, see <http://www.gnu.org/licenses/>.\n\nbottle.py is a third-party file, its license is in file LICENSE_bottle.\n\ntest/boileau and test/andromaque are from Wikisource and test/baudelaire and\ntest/mithridate are from Project Gutenberg. Both of them are in the public\ndomain.\n\n== 1. Features ==\n\nplint is a tool to check French poetry. Specifically, it validates metric,\nrhymes and rhyme genres against an unexpressive template language. It features a\ncommand-line interface, an IRC wrapper (for use with irctk) and a web interface.\nIt depends on haspirater <https://gitlab.com/a3nm/haspirater> and frhyme\n<https://gitlab.com/a3nm/frhyme>, and the web interface requires CherryPy.\n\nThe full documentation of plint's features is available in views/about.html.\n\n== 2. Getting started ==\n\nThis section provides a quick summary of how to get started with setting up and\nusing plint. If these instructions do not work for you, please let me know.\n\n0. Basic setup\n\nMake sure that you have a working python3 installation and that you have unzip\n(Debian packages: python3, unzip).\n\n1. Clone the plint repository\n\nIf you haven't done so already:\n\n  git clone https://gitlab.com/a3nm/plint.git\n  cd plint\n\n2. Retrieve the dependencies\n\nIn the directory where plint has been cloned, run:\n\n  git clone https://gitlab.com/a3nm/frhyme.git\n  git clone https://gitlab.com/a3nm/haspirater.git\n\n3. Generate frhyme.json\n\nRun:\n\n  cd frhyme\n  lexique/lexique_retrieve.sh > lexique.txt\n  ./make.sh 4 lexique.txt additions > frhyme.json\n  cd ..\n\n4. Generate the occurrences file\n\nRun:\n\n  ./lexique_occurrences_retrieve.sh > data/occurrences\n\n5. Locales\n\nFor locale support, install gettext (Debian package: gettext) and run:\n\n  make\n\n6. Running plint\n\nIf you want to check a poem that consists of classical alexandrines with flat\nrhyme (like the file test/mithridate), write the contents of the poem to check\ninto a file poem.txt. Then run:\n\n  ./plint.py test/mithridate.tpl < poem.txt\n\nPlint will display the errors (if any) and exit.\n\n7. Customizing the template\n\nIf you want to customize the template of the poem, you can look at examples on\nthe online tool (https://plint.a3nm.net/fr/) or files ending in \".tpl\" in the\nsource repository. You can then write your template into a file called\ntemplate.tpl and run:\n\n  ./plint.py template.tpl < poem.txt\n\nThe file format for templates is tersely documented on\nhttps://plint.a3nm.net/en/about#template\n\n== 3. Detailed usage ==\n\nTo use the program's command-line interface, run:\n\n  ./plint.py TEMPLATE\n\nwhere TEMPLATE is the template file, and provide the poem on stdin. Errors are\nreported on stderr.\n\nTo run the web interface on port 5000, run plint_web.py. CherryPy is required\n(but the code is easy to adapt), see\nhttp://bottlepy.org/docs/dev/tutorial.html#deployment\nBeware, if you use CherryPy under Debian, simply installing python-cherrypy3\nmight not work (\"no module named cherrypy\"). In this case, you need to install\nCherryPy by hand from source (sudo python3 setup.py install).\n\nAn undocumented IRC interface for use with irctk is available (plint_irc.py).\nThe poem that it produces can be compiled to HTML automatically using something\nalong the lines of:\n\n  while true\n  do\n    inotifywait poem_file\n    # www/ should contain style.css\n    poem2html/make_poem.sh poem_file > www/poem.html\n  done\n\nTo run plint on some provided test files, you can use test.sh. However, because\nof known bugs, some errors will be reported on the test files. To run a very\nsimple test suite, run ./versetest.py; they should all pass.\n\n== 4. Training ==\n\nThe diaeresis pattern \"diaeresis.json\" is trained by calling\n\n  ./train_diaeresis.sh > data/diaeresis.json\n\nYou can also train a specific pattern for _Cyrano de Bergerac_ with:\n\n  ./train_diaeresis.sh _full ../additions_cyrano > data/diaeresis_cyrano.json\n\nThis is currently undocumented. The plint folder should contain a copy of the\nhaspirater code (possibly as a symlink) in \"haspirater/\".\n\n== 5. Updating the localization ==\n\nWhen the code is changed, to update the localization information to French, do:\n\n  cd plint\n  pygettext *.py ../plint.py\n  msgmerge -U res/messages_fr.po messages.pot\n  poedit res/messages_fr.po\n  cd ..\n  make\n\n== 6. Related work ==\n\n* http://pentametron.com/\n* http://virga.org/cvf/alexanql.php\n* http://hal.archives-ouvertes.fr/docs/00/37/73/48/PDF/1.Rythme_et_rime_de_l_alexandrin_classique_-_V_Beaudouin_2000.pdf\n* http://www.oulipo.net/docannexe/file/16251/MetreenregleRFLA-Beaudouin200405.pdf\n* http://images.math.cnrs.fr/Je-demeurai-longtemps-errant-dans.html\n* Beaudouin V. & Yvon F. (1996). \"The Metrometer : a Tool for Analysing French Verse\", Literary & Linguistic Computing, vol. 11, nÂ°1, p. 23-32.\n* http://corpus.revues.org/290\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/a3nm/plint",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "plint",
    "package_url": "https://pypi.org/project/plint/",
    "platform": "",
    "project_url": "https://pypi.org/project/plint/",
    "project_urls": {
      "Homepage": "https://gitlab.com/a3nm/plint"
    },
    "release_url": "https://pypi.org/project/plint/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "French poetry validator",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8788935,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "843f67d8fad46f27d0484429ff2a0fb0b89e8f0bb00020e26620ee7921b89b8e",
          "md5": "db64daac78a74e373cfa8c8c03a46224",
          "sha256": "772f7c6bbbdf70a33f003fd97d04b6519e0b9844308ada8633066244db726003"
        },
        "downloads": -1,
        "filename": "plint-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db64daac78a74e373cfa8c8c03a46224",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 431992,
        "upload_time": "2019-08-15T18:43:20",
        "upload_time_iso_8601": "2019-08-15T18:43:20.808508Z",
        "url": "https://files.pythonhosted.org/packages/84/3f/67d8fad46f27d0484429ff2a0fb0b89e8f0bb00020e26620ee7921b89b8e/plint-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "843f67d8fad46f27d0484429ff2a0fb0b89e8f0bb00020e26620ee7921b89b8e",
        "md5": "db64daac78a74e373cfa8c8c03a46224",
        "sha256": "772f7c6bbbdf70a33f003fd97d04b6519e0b9844308ada8633066244db726003"
      },
      "downloads": -1,
      "filename": "plint-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db64daac78a74e373cfa8c8c03a46224",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 431992,
      "upload_time": "2019-08-15T18:43:20",
      "upload_time_iso_8601": "2019-08-15T18:43:20.808508Z",
      "url": "https://files.pythonhosted.org/packages/84/3f/67d8fad46f27d0484429ff2a0fb0b89e8f0bb00020e26620ee7921b89b8e/plint-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}