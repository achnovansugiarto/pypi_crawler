{
  "info": {
    "author": "vlnk",
    "author_email": "vlnk@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Bash to Markdown Documentation\n[![builds.sr.ht status](https://builds.sr.ht/~vlnk/bmd.svg)](https://builds.sr.ht/~vlnk/bmd?)\n\n`bmd` is the dumbest documentation framework you could find on the earth !\nIt changes your bash scripts into a useful Markdown documentation.\n\n## Features\n1. It removes the `shebang` line for an aesthetic output.\n2. It removes the `#` string of your bash comments.\n\n> You should **write all your bash comments into a compliant markdown format**, and then *it will work*.\n\nAlso, we don't care about all the Markdown flavours. Choose the one for your use cases.\n\nBut, let's dissipate all doubts by seeing a compatibility table :\n\n| Flavor         | bmd |\n|----------------|-----|\n| GFM            | ✅   |\n| ExtraMark      | ✅   |\n| All the others | ✅   |\n## Getting started\n\nStart by documenting a hello world :\n\n```sh\n# hello.sh: My Hello World bash script\n# ------------------------------------\n#\n# This **hello world** comes from my *heart*.\n# See [Hello World!](https://en.wikipedia.org/wiki/%22Hello,_World!%22_program)\n# ```sh\necho \"Hello World!\"\n# ```\n```\n\nIndeed, your script code will *never* be compliant with any Markdown formats.\n\nSo, the purposed solution is to encapsulate your code in a code block with **the 3 backticks**.\nYou can specify the script langage, and you'll have a formated code rendering !\nThe drawback is : your documentation will be an *annoted* bash script.\n\nBy default, `bmd` will remove the common scripting langage comment lines but the option\n**--regex** should be used to change all others languages.\n\nYou can do the trick with a NodeJS script :\n\n```js\n// # hello.js\n// You know what I mean\n// ```js\nconsole.log('Hello World!')\n// ```\n```\n\nThis one can be changed with `./bmd.sh -r '^\\/\\/ ?' hello.js`\n## The bash way : bmd.sh\n### Installing\n\nThe bash script should be installed by using `curl`:\n\n```sh\ncurl https://git.sr.ht/~vlnk/bmd/blob/main/src/bmd.sh > bmd.sh\n./bmd.sh\n```sh\n\n### How it works ?\n\nIt is 2 `sed` commands. That's all folks.\n\n```sh\nset -e\n\nbmd () {\n  cat \"$1\" | \\\n  sed \"/^#!/d\" | \\\n  sed -r \"s/$2//\"\n}\n```\n\n### How to use it ?\n\nI suggest to do `./bmd.sh bmd.sh`, but please, follow the help :\n\n```sh\nusage () {\n  echo \"bmd - Bash to Markdown Documentation\"\n  echo \"\"\n  echo \"USAGE: ./bmd.sh [OPTIONS] INPUT\"\n  echo \"\"\n  echo \"Change the script file INPUT to a Markdown documentation.\"\n  echo \"\"\n  echo \"Options:\"\n  echo \"-r, --regex PATTERN Specify the regex PATTERN to remove [default: '^# ?'].\"\n  echo \"-h, --help          Print help.\"\n}\n\nREGEX=\"^# ?\"\nINPUT=\"\"\n\nfor i in \"$@\"; do\n  case $i in\n    -h|--help)\n      usage;\n      exit 0;;\n    -r|--regex)\n      HAS_REGEX=true;;\n    *)\n      if [ \"$HAS_REGEX\" ]; then\n        REGEX=\"$i\"\n        unset HAS_REGEX\n      else\n        INPUT=\"$i\"\n      fi;;\n  esac\ndone\n\nif [ \"$INPUT\" ]; then\n  bmd \"$INPUT\" \"$REGEX\"\nelse\n  echo \"error: missing required argument 'INPUT'\"\nfi\n```\n## The python way : bmd.py\n## Installing\n\n`bmd` is published on *PyPi* under the `bmd-py` package.\nYou should be able to install it with:\n\n```sh\npip install bmd-py\nbmd.py --help\n```sh\n\n### How it works?\n\nThe python script do the same thing as the bash one but without `sed`, it uses `regex` instead\n\n```py\nimport click\nimport regex\n\nSHEBANG_REGEX = r'^#!'\nREGEX_HELP='Specify the TEXT regex pattern to remove.'\n\n@click.command()\n@click.argument('input')\n@click.option('-r', '--regex', 'pattern', default='^# ?', show_default=True, help=REGEX_HELP)\ndef bmd(input, pattern):\n  \"\"\"Change the script file INPUT to a Markdown documentation.\"\"\"\n  with open(input) as f:\n    output = []\n\n    for line in f:\n      if not regex.match(SHEBANG_REGEX, line):\n        if regex.match(pattern, line):\n          output.append(\n            regex.sub(pattern, '', line)\n          )\n        else:\n          output.append(line)\n\n    print(''.join(output), end='')\n\nif __name__ == '__main__':\n    bmd()\n```\n## The javascript way : bmd.js\n## Installing\n\n`bmd` is published on npm under the `bmd-js` package.\nYou should be able to install it with:\n\n```sh\nnpm install bmd-js\nbmd-js --help\n```\n\n## How it works?\n\nThe javascript code is using the NodeJS API to do the same thing as others.\nIs uses the asynchronous reading of each line to do the job.\n\n```js\nconst fs = require('fs')\nconst readline = require('readline');\nconst { program } = require('commander')\n\nconst SHEBANG_REGEX = /^#!/\n\nfunction bmd (input, pattern) {\n  const output = []\n  const regex = new RegExp(pattern)\n  const rl = readline.createInterface({\n    input: fs.createReadStream(input),\n    output: process.stdout,\n    terminal: false\n  });\n\n  rl.on('line', (line) => {\n    if (!line.match(SHEBANG_REGEX)) {\n      if (line.match(regex)) {\n        output.push(\n          line.replace(regex, '')\n        )\n      } else {\n        output.push(line)\n      }\n    }\n  })\n\n  rl.on('close', () => {\n    process.stdout.write(\n      output.join('\\n') + '\\n'\n    );\n  });\n}\n\nlet input = ''\n\nprogram\n  .name('bmd.js')\n  .description('Change the script file INPUT to a Markdown documentation.')\n  .arguments('<INPUT>')\n  .action(inputArg => { input = inputArg })\n  .option('-r, --regex <PATTERN>', 'Specify the regex PATTERN to remove.', '^# ?')\n  .parse(process.argv)\n\nbmd(input, program.regex)\n```\n## Contributing\n\nDon't hesitate to submit issues in the [`bmd` tracker](https://todo.sr.ht/~vlnk/bmd).\n\n### Testing\nEach new contribution should be applied with an associated **unit test**.\nThe [`bmd CI`](https://builds.sr.ht/~vlnk/bmd) is triggered on every push with:\n\n```makefile\n.PHONY: test\ntest: install-all\n\t./tasks/test.sh\n\n```\n### Documenting\nI recommand you to use the `pre-commit` hook in order to always generate the new `README.md` file:\n\n```sh\ncd bmd\nln hooks/* .git/hooks/\n```\nBut the **README** can be generated manually by using `make doc`:\n\n```makefile\n.PHONY: doc\ndoc:\n\t./tasks/doc.sh 'README.md'\n\n```\n### Building and publishing\nCheck the supported distributions:\n+ [python](https://pypi.org/project/bmd-py)\n+ [javascript](https://www.npmjs.com/package/bmd-js)\n\nDon't forget to be logged before publishing a new `bmd` package !\n\nThe Makefile contains all recipes in order to:\n- install dependencies (bmd-py, bmd-js)\n- bundle package (bmd-py, bmd-js)\n- check package (bmd-py)\n- publish (bmd-py, bmd-js)\n\n```makefile\n.PHONY: install-py\ninstall-py:\n\tpip3 install -r requirements.txt\n\n.PHONY: build-py\nbundle-py:\n\tpython3 setup.py sdist\n\n.PHONY: check-py\ncheck-py: bundle-py\n\ttwine check dist/*\n\n.PHONY: publish-py\n publish-py: clean bundle-py\n\ttwine upload dist/*\n\n.PHONY: install-js\ninstall-js:\n\tnpm install\n\n.PHONY: bundle-js\nbundle-js:\n\tnpm pack\n\n.PHONY: publish-js\npublish-js:\n\tnpm publish\n\n.PHONY: install-all\ninstall-all: install-py install-js\n\n.PHONY: publish-all\npublish-all: publish-py publish-js\n\nclean:\n\tif [ -d 'dist' ]; then rm -rd 'dist'; fi\n\tif [ -d 'bmd_py.egg-info' ]; then rm -rd 'bmd_py.egg-info'; fi\n```\n## Foire aux Questions\n+ **Is it a joke ?** Yes, and no. I wrote this for my own usage, I hope it would be useful for your owns.\n+ **Is it tested with all the flavours ?** Of course not.\n+ **Where did you get this dumb idea ?** From the [`rustdoc`][1] tool.\n+ **Is it a meta program?** Yes, `bmd` is documented with *itself*.\n\nKISS, [@vlnk][2]\n\n[1]: https://doc.rust-lang.org/rustdoc/what-is-rustdoc.html\n[2]: https://git.sr.ht/~vlnk/",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.sr.ht/~vlnk/bmd",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bmd-py",
    "package_url": "https://pypi.org/project/bmd-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/bmd-py/",
    "project_urls": {
      "Homepage": "https://git.sr.ht/~vlnk/bmd"
    },
    "release_url": "https://pypi.org/project/bmd-py/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7.8",
    "summary": "Change scripts into Markdown documentation",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8133299,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b52b3258c92570376500c8a061328c748722a5be18f6a3b2e509480efdc9b79d",
          "md5": "09490de57ac9286ff7b1cb6e445026a9",
          "sha256": "bbfa363bcf8c8c0dd0d0627f16896d8d8e73a2bea3d3f5713090096736e71df2"
        },
        "downloads": -1,
        "filename": "bmd-py-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "09490de57ac9286ff7b1cb6e445026a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.8",
        "size": 3666,
        "upload_time": "2020-09-07T06:27:02",
        "upload_time_iso_8601": "2020-09-07T06:27:02.186984Z",
        "url": "https://files.pythonhosted.org/packages/b5/2b/3258c92570376500c8a061328c748722a5be18f6a3b2e509480efdc9b79d/bmd-py-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdf28c38f6cabc4beb0ecc137bc39306998be3f50f4a8a781e2612064e96d19f",
          "md5": "45c760b2ccb3fbc7f75882cf7b99ab48",
          "sha256": "3726b20073d751b922aefe7ec464dc8addf27cb1c266f0c10a4b123fdadc7e65"
        },
        "downloads": -1,
        "filename": "bmd-py-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45c760b2ccb3fbc7f75882cf7b99ab48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.8",
        "size": 5396,
        "upload_time": "2020-09-08T03:44:50",
        "upload_time_iso_8601": "2020-09-08T03:44:50.118966Z",
        "url": "https://files.pythonhosted.org/packages/fd/f2/8c38f6cabc4beb0ecc137bc39306998be3f50f4a8a781e2612064e96d19f/bmd-py-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fdf28c38f6cabc4beb0ecc137bc39306998be3f50f4a8a781e2612064e96d19f",
        "md5": "45c760b2ccb3fbc7f75882cf7b99ab48",
        "sha256": "3726b20073d751b922aefe7ec464dc8addf27cb1c266f0c10a4b123fdadc7e65"
      },
      "downloads": -1,
      "filename": "bmd-py-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "45c760b2ccb3fbc7f75882cf7b99ab48",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.8",
      "size": 5396,
      "upload_time": "2020-09-08T03:44:50",
      "upload_time_iso_8601": "2020-09-08T03:44:50.118966Z",
      "url": "https://files.pythonhosted.org/packages/fd/f2/8c38f6cabc4beb0ecc137bc39306998be3f50f4a8a781e2612064e96d19f/bmd-py-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}