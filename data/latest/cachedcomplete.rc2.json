{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Shells",
      "Topic :: Terminals"
    ],
    "description": "# cachedcomplete\n\nCached wrapper for python argcomplete.\n\n## Installation\n\nUse the package manager pip to install cachedcomplete.\n\n```bash\npip install cachedcomplete\nactivate-global-python-argcomplete\n```\n\n## Explanation\n\ncachedcomplete wraps argcomplete, and allows caching of its parsers\nin order to save up time.\n\ncachedcomplete re-caches every time a change was made in itself,\nor in the files specified by the user.\n\ncachedcomplete caches the parsers using pickle, which implies the parser\nmust be able to be serialized and de-serialized using pickle.\n\nWithout any interference argparse's parsers cannot be serialized using pickle,\nbecause the default type is defined within the parser's `__init__` function.\ncachedcomplete replaces the default type with an identical type that can be pickled\n(this is only done when cachedcomplete detects that the default type is still the default\nidentity function).\n\n## Usage\n\n### Normal Usage\n\nThe normal usage is the same as in argcomplete, only changing the import from argcomplete to cachedcomplete.\n\n_**Note:** The usage of `PYTHON_ARGCOMPLETE_OK` stays the same as in argcomplete_\n\n#### For Example\n\n**Using argcomplete:**\n\n```python\n# PYTHON_ARGCOMPLETE_OK\nimport argcomplete\n\n# ...\n\nargcomplete.autocomplete()\n```\n\n**Using cachedcomplete:**\n\n```python\n# PYTHON_ARGCOMPLETE_OK\nimport cachedcomplete\n\n# ...\n\ncachedcomplete.autocomplete()\n```\n\n### Usage of custom subclasses of CompletionFinder\n\nIn order to use custom CompletionFinders with cachedcomplete,\na usage of the decorator cached_completion_finder is required.\n\n#### For example\n\n**Using argcomplete:**\n\n```python\nimport argcomplete\n\nclass CustomCompletionFinder(argcomplete.CompletionFinder):\n    # ...\n\ncompletion_finder = CustomCompletionFinder()\n# Instead of argcomplete.autocomplete()\ncompletion_finder()\n```\n\n**Using cachedcomplete:**\n\n```python\nimport argcomplete\nimport cachedcomplete\n\n@cachedcomplete.cached_completion_finder\nclass CustomCompletionFinder(argcomplete.CompletionFinder):\n    # ...\n\ncompletion_finder = CustomCompletionFinder()\n# Instead of argcomplete.autocomplete()\ncompletion_finder()\n```\n\n**or:**\n\n```python\nimport argcomplete\nimport cachedcomplete\n\nclass CustomCompletionFinder(argcomplete.CompletionFinder):\n    # ...\n\ncompletion_finder = cachedcomplete.cached_completion_finder(CustomCompletionFinder)()\n# Instead of argcomplete.autocomplete()\ncompletion_finder()\n```\n\n### Specifying what files to track\n\nIn order to specify which files to track changes in,\nadd a comment with the wanted files and the prefix CACHEDCOMPLETE_HASH:\n\n```python\n# CACHEDCOMPLETE_HASH: file1.py\n```\n\nIt also allows multiple files split to multiple comments, or within one comment.\n\n```python\n# CACHEDCOMPLETE_HASH: file1.py file2.json\n# CACHEDCOMPLETE_HASH: file3.py\n# CACHEDCOMPLETE_HASH: \"file with spaces.txt\"\n```\n\nAnd also allows passing up a directory to track all the files within\n\n```python\n# CACHEDCOMPLETE_HASH: dir\n```\n\nUsing environment variables and user directories is also allowed:\n\n```python\n# CACHEDCOMPLETE_HASH: $HOME/.cache/my-cache /tmp/${USERNAME}.ini\n# CACHEDCOMPLETE_HASH: ~/.cache/my-cache ~gdm/greeter-dconf-defaults\n```\n\nPaths are relative to the calling script, not the current working directory.\n\ncachedcomplete adds an environment variable name `pwd` to allow accessing the current\nworking directory in the comments. If this variable was already set, it is **not** overwritten.\n\n```python\n# CACHEDCOMPLETE_HASH: $pwd/local-file\n```\n\n### Using custom types, completers, actions, etc...\n\nIn order to cache a parser that uses your own custom types and functions,\nthey must be defined in a separate module than the main script (that defines the parser).\n\n_**Note:** It is recommended to add these separate modules to the tracked files (As specified with `CACHEDCOMPLETE_HASH`)._\n\n**Example:**\n\n_Won't work:_\n\nIn `my_awesome_script.py`\n\n```python\n# PYTHON_ARGCOMPLETE_OK\n\nimport argparse\nimport cachedcomplete\nimport json\n\ndef json_file(arg):\n    with argparse.FileType()(arg) as f:\n        return json.load(f)\n\np = argparse.ArgumentParser()\np.add_argument('settings', type=json_file)\ncachedcomplete.autocomplete(p)\n```\n\n_Will work:_\n\nIn `my_awesome_type.py`\n\n```python\nimport json\n\ndef json_file(arg):\n    with argparse.FileType()(arg) as f:\n        return json.load(f)\n```\n\nIn `my_awesome_script.py`\n\n```python\n# PYTHON_ARGCOMPLETE_OK\n# CACHEDCOMPLETE_HASH: my_awesome_type.py\n\nimport argparse\nimport cachedcomplete\n\np = argparse.ArgumentParser()\np.add_argument('settings', type=json_file)\ncachedcomplete.autocomplete(p)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Roynecro97/cachedcomplete",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cachedcomplete",
    "package_url": "https://pypi.org/project/cachedcomplete/",
    "platform": "MacOS X",
    "project_url": "https://pypi.org/project/cachedcomplete/",
    "project_urls": {
      "Homepage": "https://github.com/Roynecro97/cachedcomplete",
      "Source Code": "https://github.com/Roynecro97/cachedcomplete"
    },
    "release_url": "https://pypi.org/project/cachedcomplete/1.0.4/",
    "requires_dist": [
      "argcomplete (>=1.11.1)"
    ],
    "requires_python": "",
    "summary": "Cached wrapper for python argcomplete",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7362891,
  "releases": {
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e2d2b764f79cf6ab9b2d4778b8e3dfaca515ba98a813f277e56f5782b68c674",
          "md5": "0ae414d13cce5ec79c5e586bb2a11cd7",
          "sha256": "c1559d107c61ca8447014bb9850840534b314a9dcc4e498c80788f29ed1b0d80"
        },
        "downloads": -1,
        "filename": "cachedcomplete-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ae414d13cce5ec79c5e586bb2a11cd7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6969,
        "upload_time": "2020-04-01T22:58:58",
        "upload_time_iso_8601": "2020-04-01T22:58:58.921116Z",
        "url": "https://files.pythonhosted.org/packages/7e/2d/2b764f79cf6ab9b2d4778b8e3dfaca515ba98a813f277e56f5782b68c674/cachedcomplete-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be82b33b9a4dce69cb1f4b6cc6d7608a89d3c64bca46f25f0c42a293e0dd7f4b",
          "md5": "f7f1d0b7606e5130ea1e15687f887c6f",
          "sha256": "cc36e7420043a8c9ed8178dbcf2939865e17297ec41bc9a7d0bbf3ef0aabe8b9"
        },
        "downloads": -1,
        "filename": "cachedcomplete-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f7f1d0b7606e5130ea1e15687f887c6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6001,
        "upload_time": "2020-04-01T22:59:00",
        "upload_time_iso_8601": "2020-04-01T22:59:00.594671Z",
        "url": "https://files.pythonhosted.org/packages/be/82/b33b9a4dce69cb1f4b6cc6d7608a89d3c64bca46f25f0c42a293e0dd7f4b/cachedcomplete-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ba0cf04a7f3d18ced741388048bc9497e43f139f16a61283ace59795574df18",
          "md5": "80c503dcc80091f68d00305aefbfb1e8",
          "sha256": "9253bab35de4cdc9e465603c2f2b398a574ea33507501ed2c662327ce870f79a"
        },
        "downloads": -1,
        "filename": "cachedcomplete-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80c503dcc80091f68d00305aefbfb1e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6967,
        "upload_time": "2020-05-31T06:42:59",
        "upload_time_iso_8601": "2020-05-31T06:42:59.201177Z",
        "url": "https://files.pythonhosted.org/packages/3b/a0/cf04a7f3d18ced741388048bc9497e43f139f16a61283ace59795574df18/cachedcomplete-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "699f95db1eb3edd3e51a6fe4bbff6312b6a3479b40369858171f1dbf388b2e43",
          "md5": "7f56367dbb82c8fdc35ec0bc58506159",
          "sha256": "104b6a20f57fa86e6af4fe94a99ad07c834c841764cffe34b3e14eb9c3f49755"
        },
        "downloads": -1,
        "filename": "cachedcomplete-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7f56367dbb82c8fdc35ec0bc58506159",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6013,
        "upload_time": "2020-05-31T06:43:00",
        "upload_time_iso_8601": "2020-05-31T06:43:00.798726Z",
        "url": "https://files.pythonhosted.org/packages/69/9f/95db1eb3edd3e51a6fe4bbff6312b6a3479b40369858171f1dbf388b2e43/cachedcomplete-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ba0cf04a7f3d18ced741388048bc9497e43f139f16a61283ace59795574df18",
        "md5": "80c503dcc80091f68d00305aefbfb1e8",
        "sha256": "9253bab35de4cdc9e465603c2f2b398a574ea33507501ed2c662327ce870f79a"
      },
      "downloads": -1,
      "filename": "cachedcomplete-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "80c503dcc80091f68d00305aefbfb1e8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6967,
      "upload_time": "2020-05-31T06:42:59",
      "upload_time_iso_8601": "2020-05-31T06:42:59.201177Z",
      "url": "https://files.pythonhosted.org/packages/3b/a0/cf04a7f3d18ced741388048bc9497e43f139f16a61283ace59795574df18/cachedcomplete-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "699f95db1eb3edd3e51a6fe4bbff6312b6a3479b40369858171f1dbf388b2e43",
        "md5": "7f56367dbb82c8fdc35ec0bc58506159",
        "sha256": "104b6a20f57fa86e6af4fe94a99ad07c834c841764cffe34b3e14eb9c3f49755"
      },
      "downloads": -1,
      "filename": "cachedcomplete-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "7f56367dbb82c8fdc35ec0bc58506159",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6013,
      "upload_time": "2020-05-31T06:43:00",
      "upload_time_iso_8601": "2020-05-31T06:43:00.798726Z",
      "url": "https://files.pythonhosted.org/packages/69/9f/95db1eb3edd3e51a6fe4bbff6312b6a3479b40369858171f1dbf388b2e43/cachedcomplete-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}