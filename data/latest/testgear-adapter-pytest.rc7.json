{
  "info": {
    "author": "Integration team",
    "author_email": "integrations@test-gear.io",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Test Gear TMS adapter for Pytest\n\n![Test Gear](https://raw.githubusercontent.com/testgear-tms/adapters-python/master/images/banner.png)\n\n## Getting Started\n\n### Installation\n\n```\npip install testgear-adapter-pytest\n```\n\n## Usage\n\n### Configuration\n\n#### File\n\n1. Create **connection_config.ini** file in the root directory of the project:\n    ```\n    [testgear]\n    URL = <url>\n    privateToken = <token>\n    projectId = <id>\n    configurationId = <id>\n    testRunId = <optional id>\n    testRunName = <optional name>\n    adapterMode = <optional>\n    certValidation = <optional boolean>\n    \n    # This section are optional. It enables debug mode.\n    [debug]\n    tmsProxy = {\"http\": \"http://localhost:8888\", \"https\": \"http://localhost:8888\"}\n    ```\n\n2. Fill parameters with your configuration, where:\n    * `URL` - location of the TMS instance\n\n    * `privateToken` - API secret key\n        1. go to the https://{DOMAIN}/user-profile profile\n        2. copy the API secret key\n\n    * `projectId` - ID of project in TMS instance.\n\n        1. create a project\n        2. open DevTools -> network\n        3. go to the project https://{DOMAIN}/projects/{PROJECT_GLOBAL_ID}/tests\n        4. GET-request project, Preview tab, copy id field\n\n    * `configurationId` - ID of configuration in TMS instance.\n\n        1. create a project\n        2. open DevTools -> network\n        3. go to the project https://{DOMAIN}/projects/{PROJECT_GLOBAL_ID}/tests\n        4. GET-request configurations, Preview tab, copy id field\n\n    * `testRunId` - id of the created test run in TMS instance. `testRunId` is optional. If it is not provided, it is\n      created automatically.\n\n    * `testRunName` - parameter for specifying the name of test run in TMS instance. `testRunName` is optional. If it is\n      not provided, it is created automatically.\n\n    * `adapterMode` - adapter mode. Default value - 0. The adapter supports following modes:\n\n        * 0 - in this mode, the adapter filters tests by test run ID and configuration ID, and sends the results to the\n          test run.\n        * 1 - in this mode, the adapter sends all results to the test run without filtering.\n        * 2 - in this mode, the adapter creates a new test run and sends results to the new test run.\n    \n    * `certValidation` - it enables/disables certificate validation. `certValidation` is optional.\n\n    * `tmsProxy` - it enables debug mode. `tmsProxy` is optional.\n\n#### ENV\n\nYou can use environment variables (environment variables take precedence over file variables):\n\n* `TMS_URL` - location of the TMS instance.\n\n* `TMS_PRIVATE_TOKEN` - API secret key.\n\n* `TMS_PROJECT_ID` - ID of a project in TMS instance.\n\n* `TMS_CONFIGURATION_ID` - ID of a configuration in TMS instance.\n\n* `TMS_ADAPTER_MODE` - adapter mode. Default value - 0.\n\n* `TMS_TEST_RUN_ID` - ID of the created test-run in TMS instance. `TMS_TEST_RUN_ID` is optional. If it is not provided,\n  it is created automatically.\n\n* `TMS_TEST_RUN_NAME` - name of the new test-run.`TMS_TEST_RUN_NAME` is optional. If it is not provided, it is created\n  automatically.\n\n* `TMS_CONFIG_FILE` - name of the configuration file. `TMS_CONFIG_FILE` is optional. If it is not provided, it is used\n  default file name.\n\n* `TMS_PROXY` - it enables debug mode. `TMS_PROXY` is optional.\n\n* `TMS_CERT_VALIDATION` - it enables/disables certificate validation. `TMS_CERT_VALIDATION` is optional.\n\n#### Command line\n\nYou also can CLI variables (CLI variables take precedence over environment variables):\n\n* `tmsUrl` - location of the TMS instance.\n\n* `tmsPrivateToken` - API secret key.\n\n* `tmsProjectId` - ID of a project in TMS instance.\n\n* `tmsConfigurationId` - ID of a configuration in TMS instance.\n\n* `tmsAdapterMode` - adapter mode. Default value - 0.\n\n* `tmsTestRunId` - ID of the created test-run in TMS instance. `tmsTestRunId` is optional. If it is not provided, it is\n  created automatically.\n\n* `tmsTestRunName` - name of the new test-run.`tmsTestRunName` is optional. If it is not provided, it is created\n  automatically.\n\n* `tmsConfigFile` - name of the configuration file. `tmsConfigFile` is optional. If it is not provided, it is used\n  default file name.\n\n* `tmsProxy` - it enables debug mode. `tmsProxy` is optional.\n\n* `tmsCertValidation` - it enables/disables certificate validation. `tmsCertValidation` is optional.\n\n#### Examples\n\nLaunch with a connection_config.ini file in the root directory of the project:\n\n```\n$ pytest --testgear\n```\n\nLaunch with command-line parameters:\n\n```\n$ pytest --testgear --tmsUrl=<url> --tmsPrivateToken=<token> --tmsProjectId=<id> --tmsConfigurationId=<id> --tmsTestRunId=<optional id> --tmsTestRunName=<optional name> --tmsProxy='{\"http\":\"http://localhost:8888\",\"https\":\"http://localhost:8888\"}' --tmsCertValidation=<optional boolean>\n```\n\nIf you want to enable debug mode then\nsee [How to enable debug logging?](https://github.com/testgear-tms/adapters-python/tree/main/testgear-python-commons)\n\n### Decorators\n\nDecorators can be used to specify information about autotest.\n\nDescription of decorators:\n\n- `testgear.workItemIds` - linking an autotest to a test case\n- `testgear.displayName` - name of the autotest in the TMS system (can be replaced with documentation strings)\n- `testgear.externalId` - ID of the autotest within the project in the TMS System\n- `testgear.title` - title in the autotest card\n- `testgear.description` - description in the autotest card\n- `testgear.labels` - tags in the work item\n- `testgear.link` - links in the autotest card\n- `testgear.step` - the designation of the step called in the body of the test or other step\n- `testgear.nameSpace` - directory in the TMS system (default - file's name of test)\n- `testgear.className` - subdirectory in the TMS system (default - class's name of test)\n\nAll decorators support the use of parameterization attributes\n\nDescription of methods:\n\n- `testgear.addLinks` - links in the autotest result\n- `testgear.addAttachments` - uploading files in the autotest result\n- `testgear.addMessage` - information about autotest in the autotest result\n- `testgear.step` - usage in the \"with\" construct to designation a step in the body of the test\n\n### Examples\n\n#### Simple test\n\n```py\nimport pytest\nimport testgear\n\n\n# Test with a minimal set of decorators\n@testgear.externalId('Simple_autotest2')\ndef test_2():\n    \"\"\"Simple autotest 2\"\"\"\n    assert oneStep()\n    assert twoStep()\n\n\n@testgear.step\ndef oneStep():\n    assert oneOneStep()\n    assert oneTwoStep()\n    return True\n\n\n@testgear.step\ndef twoStep():\n    return True\n\n\n@testgear.step('step 1.1', 'description')\ndef oneOneStep():\n    return True\n\n\n@testgear.step('step 2')\ndef oneTwoStep():\n    return True\n\n\n@testgear.externalId('Simple_test_skip')\n@testgear.displayName('Simple test skip')\n@testgear.links(url='https://dumps.example.com/module/JCP-777')\n@testgear.links(url='https://dumps.example.com/module/JCP-777',\n              title='JCP-777',\n              type=testgear.LinkType.RELATED,\n              description='Description of JCP-777')\n@pytest.mark.skipif(True, reason='Because i can')\ndef test_skip():\n    assert True\n```\n\n#### Parameterized test\n\n```py\n# Parameterized test with a full set of decorators\nfrom os.path import join, dirname\n\nimport pytest\nimport testgear\n\n\n@testgear.workItemIds(627)\n@testgear.displayName('Simple autotest 1 - {name}')\n@testgear.externalId('Simple_autotest1_{name}')\n@testgear.title('Authorization')\n@testgear.description('E2E_autotest')\n@testgear.labels('{labels}')\n@testgear.links(links=[\n    {'url': '{url}', 'type': '{link_type}', 'title': '{link_title}', 'description': '{link_desc}'},\n    {'url': '{url}', 'type': '{link_type}', 'title': '{link_title}', 'description': '{link_desc}'}\n])\n@pytest.mark.parametrize('name, labels, url, link_type, link_title, link_desc', [\n    ('param 1', ['E2E', 'test'], 'https://dumps.example.com/module/JCP-777', testgear.LinkType.DEFECT, 'JCP-777',\n     'Desc of JCP-777'),\n    ('param 2', (), 'https://dumps.example.com/module/docs', testgear.LinkType.RELATED, 'Documentation',\n     'Desc of JCP-777'),\n    ('param 3', ('E2E', 'test'), 'https://dumps.example.com/module/projects', testgear.LinkType.REQUIREMENT, 'Projects',\n     'Desc of Projects'),\n    ('param 4', {'E2E', 'test'}, 'https://dumps.example.com/module/', testgear.LinkType.BLOCKED_BY, '', ''),\n    ('param 5', 'test', 'https://dumps.example.com/module/repository', testgear.LinkType.REPOSITORY, 'Repository',\n     'Desc of Repository')\n])\ndef test_1(name, labels, url, link_type, link_title, link_desc):\n    testgear.addLinks(url='https://dumps.example.com/module/some_module_dump', title='component_dump.dmp',\n                    type=testgear.LinkType.RELATED, description='Description')\n    testgear.addLinks(url='https://dumps.example.com/module/some_module_dump')\n    testgear.addLinks(links=[\n        {'url': 'https://dumps.example.com/module/some_module_dump', 'type': testgear.LinkType.BLOCKED_BY,\n         'title': 'component_dump.dmp', 'description': 'Description'},\n        {'url': 'https://dumps.example.com/module/some_module_dump', 'type': testgear.LinkType.DEFECT},\n        {'url': 'https://dumps.example.com/module/some_module_dump', 'type': testgear.LinkType.ISSUE,\n         'title': 'component_dump.dmp'},\n        {'url': 'https://dumps.example.com/module/some_module_dump', 'type': testgear.LinkType.REQUIREMENT,\n         'title': 'component_dump.dmp', 'description': 'Description'},\n        {'url': 'https://dumps.example.com/module/some_module_dump', 'type': testgear.LinkType.REPOSITORY,\n         'description': 'Description'},\n        {'url': 'https://dumps.example.com/module/some_module_dump'}\n    ])\n    with testgear.step('Log in the system', 'system authentication'):\n        with testgear.step('Enter the login', 'login was entered'):\n            with testgear.step('Enter the password', 'password was entered'):\n                assert True\n        with testgear.step('Create a project', 'the project was created'):\n            with testgear.step('Enter the project', 'the contents of the project are displayed'):\n                assert True\n            with testgear.step('Create a test case', 'test case was created'):\n                assert True\n    with testgear.step('Attachments'):\n        testgear.addAttachments(\n            join(dirname(__file__), 'docs/text_file.txt'),\n            join(dirname(__file__), 'pictures/picture.jpg'),\n            join(dirname(__file__), 'docs/document.docx')\n        )\n        testgear.addAttachments(\n            join(dirname(__file__), 'docs/document.doc'),\n            join(dirname(__file__), 'docs/logs.log')\n        )\n        assert True\n```\n\n# Contributing\n\nYou can help to develop the project. Any contributions are **greatly appreciated**.\n\n* If you have suggestions for adding or removing projects, feel free\n  to [open an issue](https://github.com/testgear-tms/adapters-python/issues/new) to discuss it, or directly create a pull\n  request after you edit the *README.md* file with necessary changes.\n* Please make sure you check your spelling and grammar.\n* Create individual PR for each suggestion.\n* Please also read through\n  the [Code Of Conduct](https://github.com/testgear-tms/adapters-python/blob/master/CODE_OF_CONDUCT.md) before posting\n  your first idea as well.\n\n# License\n\nDistributed under the Apache-2.0 License.\nSee [LICENSE](https://github.com/testgear-tms/adapters-python/blob/master/LICENSE.md) for more information.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/testgear-tms/adapters-python/",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "testgear-adapter-pytest",
    "package_url": "https://pypi.org/project/testgear-adapter-pytest/",
    "platform": null,
    "project_url": "https://pypi.org/project/testgear-adapter-pytest/",
    "project_urls": {
      "Homepage": "https://github.com/testgear-tms/adapters-python/"
    },
    "release_url": "https://pypi.org/project/testgear-adapter-pytest/2.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Pytest adapter for Test Gear",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17522247,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4a755e912e8c6fb5ed151e1411ac6edd0d3f344620042282e7a10e92b8aba94",
          "md5": "5257c2f538de9c9dd551c7e728879707",
          "sha256": "1bbb3adb0f7beda2cead9a4bcd738f09c2bc61ceb9c74e0d1d2d979ffcb0d2ee"
        },
        "downloads": -1,
        "filename": "testgear-adapter-pytest-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5257c2f538de9c9dd551c7e728879707",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14077,
        "upload_time": "2022-01-19T00:06:28",
        "upload_time_iso_8601": "2022-01-19T00:06:28.334379Z",
        "url": "https://files.pythonhosted.org/packages/f4/a7/55e912e8c6fb5ed151e1411ac6edd0d3f344620042282e7a10e92b8aba94/testgear-adapter-pytest-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e0245146f86ad43361f37dbae87de22189d9ca3d2d75b0a902d19f7dd7c454e",
          "md5": "d123d22d048f419d762e6254d5002527",
          "sha256": "aa23b1421d239d9dbed3c868c78a6711b5ad64c43caf3618ab188d9b0fa51653"
        },
        "downloads": -1,
        "filename": "testgear-adapter-pytest-2.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "d123d22d048f419d762e6254d5002527",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9642,
        "upload_time": "2022-11-24T14:13:55",
        "upload_time_iso_8601": "2022-11-24T14:13:55.701063Z",
        "url": "https://files.pythonhosted.org/packages/4e/02/45146f86ad43361f37dbae87de22189d9ca3d2d75b0a902d19f7dd7c454e/testgear-adapter-pytest-2.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66f3eddfc8400f5bf07e2a0517ef6b64e1ad3707b638172fa072effc48fe7a6d",
          "md5": "79545f3e9d5ef74c79f05dc730b99bcb",
          "sha256": "349437fa963857a6e91973dc7666cd70b220a6676b1bd1dadd705ec9299b097b"
        },
        "downloads": -1,
        "filename": "testgear-adapter-pytest-2.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "79545f3e9d5ef74c79f05dc730b99bcb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10624,
        "upload_time": "2022-11-30T11:06:09",
        "upload_time_iso_8601": "2022-11-30T11:06:09.783748Z",
        "url": "https://files.pythonhosted.org/packages/66/f3/eddfc8400f5bf07e2a0517ef6b64e1ad3707b638172fa072effc48fe7a6d/testgear-adapter-pytest-2.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b914d79a47069cc767e4a64f24872c2faf001699fb29dc678fa411e8a897d06",
          "md5": "e8e672e1dee29dea8d333c1dffa7ecc3",
          "sha256": "8f79a41273f473b8486b9860c73e0ffaac6654db120e82cf582b93fb27c11b2d"
        },
        "downloads": -1,
        "filename": "testgear-adapter-pytest-2.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e8e672e1dee29dea8d333c1dffa7ecc3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10701,
        "upload_time": "2022-12-16T07:54:27",
        "upload_time_iso_8601": "2022-12-16T07:54:27.991532Z",
        "url": "https://files.pythonhosted.org/packages/3b/91/4d79a47069cc767e4a64f24872c2faf001699fb29dc678fa411e8a897d06/testgear-adapter-pytest-2.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1b7602586d4b6022be768066666934811b34abdc4a9360e99a1e25ad9b9537f",
          "md5": "75db53a613ee4f60441bcc5d149967f5",
          "sha256": "e64962a52f06b7582c9985640f3bf8eee0bf016805cdea39bcbf9e54a49ca534"
        },
        "downloads": -1,
        "filename": "testgear-adapter-pytest-2.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "75db53a613ee4f60441bcc5d149967f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10682,
        "upload_time": "2023-01-11T07:06:38",
        "upload_time_iso_8601": "2023-01-11T07:06:38.800059Z",
        "url": "https://files.pythonhosted.org/packages/e1/b7/602586d4b6022be768066666934811b34abdc4a9360e99a1e25ad9b9537f/testgear-adapter-pytest-2.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28e2b33a7d6bf8c0d6c268d0ae0e5ccbc03755604798aee369e9d7fdcc5f9214",
          "md5": "c1391688b2d1fdf95a5aca3a61692e9c",
          "sha256": "80941519acff924843a6398a7d28f5997a9d0f278f3c73883bcbb5ff81130de3"
        },
        "downloads": -1,
        "filename": "testgear-adapter-pytest-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c1391688b2d1fdf95a5aca3a61692e9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11264,
        "upload_time": "2023-03-22T12:48:04",
        "upload_time_iso_8601": "2023-03-22T12:48:04.951767Z",
        "url": "https://files.pythonhosted.org/packages/28/e2/b33a7d6bf8c0d6c268d0ae0e5ccbc03755604798aee369e9d7fdcc5f9214/testgear-adapter-pytest-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a9fe592f293b0a35f7afa324ae4c634ad4c32a7a508c9c838183f2d6f59c5fd",
          "md5": "d325d2f1354dc94e5dc755e7e44e67d1",
          "sha256": "50d2184346543e81882e17a5cec95c35cce76600c39c5de0127332e239a0342a"
        },
        "downloads": -1,
        "filename": "testgear-adapter-pytest-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d325d2f1354dc94e5dc755e7e44e67d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11230,
        "upload_time": "2023-03-31T06:31:39",
        "upload_time_iso_8601": "2023-03-31T06:31:39.041641Z",
        "url": "https://files.pythonhosted.org/packages/1a/9f/e592f293b0a35f7afa324ae4c634ad4c32a7a508c9c838183f2d6f59c5fd/testgear-adapter-pytest-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a9fe592f293b0a35f7afa324ae4c634ad4c32a7a508c9c838183f2d6f59c5fd",
        "md5": "d325d2f1354dc94e5dc755e7e44e67d1",
        "sha256": "50d2184346543e81882e17a5cec95c35cce76600c39c5de0127332e239a0342a"
      },
      "downloads": -1,
      "filename": "testgear-adapter-pytest-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d325d2f1354dc94e5dc755e7e44e67d1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11230,
      "upload_time": "2023-03-31T06:31:39",
      "upload_time_iso_8601": "2023-03-31T06:31:39.041641Z",
      "url": "https://files.pythonhosted.org/packages/1a/9f/e592f293b0a35f7afa324ae4c634ad4c32a7a508c9c838183f2d6f59c5fd/testgear-adapter-pytest-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}