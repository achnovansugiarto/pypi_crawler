{
  "info": {
    "author": "Nathan Nichols",
    "author_email": "Nathan.Nichols@uvm.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Graphene Tools\nA set of tools to generate the interaction of helium with uniaxially strained graphene (in the armchair direction) using optimized Lennard-Jones parameters from [Nichols et al.](https://doi.org/10.1103/PhysRevB.93.205412) and to print command line parameters for use with quantum Monte Carlo (QMC) software located at [code.delmaestro.org](https://code.delmaestro.org). Code to generate figures for 1D and 2D potential interactions included as well. Please cite the origial paper as:\n\n```text.bibtex\n@article{Nichols2016,\n  title = {Adsorption by design: Tuning atom-graphene van der Waals interactions via mechanical strain},\n  author = {Nichols, Nathan S. and Del Maestro, Adrian and Wexler, Carlos and Kotov, Valeri N.},\n  journal = {Phys. Rev. B},\n  volume = {93},\n  issue = {20},\n  pages = {205412},\n  numpages = {14},\n  year = {2016},\n  month = {May},\n  publisher = {American Physical Society},\n  doi = {10.1103/PhysRevB.93.205412},\n  url = {https://link.aps.org/doi/10.1103/PhysRevB.93.205412}\n}\n```\n\n## Installation\nYou can install Graphene Tools from [PyPI](https://pypi.org/project/graphenetools-py/):\n```\npip install graphenetools-py\n```\n\n## How to use\nSome command line tools have been included for convenience. Avaiable options are dermined by:\n```\npython -m graphenetools\n```\nFor example, to run the listed command to print the parameters corresponding to a roughtly square box commensurate with the $C_{1/3}$ phase with strain $\\delta=0.25$ and 100 adsorption sites use:\n```\npython -m gt_rs 5 --strain 0.25\n```\nor\n```\ngt_rs 5 --strain 0.25\n```\n\n## Advanced usage\nBetter usage of the Graphene Tools package can be achieved by importing the pacakge directly into your project or notebook environment using `from graphenetools import gt`. Some advanced usage cases are discussed below.\n\n### Lattice vectors\nGenerate basis, lattice, and reciprocal lattice vectors for uniaxially strained graphene.\n\n\n```python\nstrain = 0.50 # Strain value in armchair direction\nAm, An, b1, b2, gm, gn = gt.get_graphene_vectors(strain)\n```\n\n$C_{1/3}$ phase lattice vectors can be generated too!\n\n\n```python\nstrain = 0.50 # Strain value in armchair direction\nAm_c_one_third, An_c_one_third = gt.get_graphene_c_one_third_vectors(strain)\n```\n\n# Plot lattice\nPlots of the graphene lattice can be made using the `plot_graphene_lattice()` function.\n\n\n```python\n# Here we plot a funky box\nbox_dims = [-2.0,6.0,-3.0,8.0]\nstrain = 0.50\nfig, ax = gt.plot_graphene_lattice(strain,box_dims)\nfig.set_dpi(300)\n```\n\n\n![png](https://raw.githubusercontent.com/nscottnichols/graphenetools-py/main/images/graphene_lattice_funky_box.png)\n\nAdditionally, the $C_{1/3}$ phase locations can be plotted along with the graphene lattice using the `plot_graphene_lattice_with_c_one_third()` function.\n\n\n```python\n# If given a single float or int box dims is [-box_dims/2,box_dims/2,-box_dims/2,box_dims/2]\n# Here we plot the graphene lattice and C1/3 adsorption sites\nbox_dims = 10\nstrain = 0.50\nfig, ax = gt.plot_graphene_lattice_with_c_one_third(strain,box_dims)\nfig.set_dpi(300)\n```\n\n\n![png](https://raw.githubusercontent.com/nscottnichols/graphenetools-py/main/images/graphene_lattice_with_c_one_third.png)\n\n\n# Generate QMC parameters\nSimulation parameters to produce a roughly square simulation cell commensurate with the $C_{1/3}$ phase for use with QMC software hosted at [code.delmaestro.org](https://code.delmaestro.org) can be generated using the `roughly_square()` function and a plot of simulation cell generated using the `roughly_square_plot()` function.\n\n\n```python\n# Here we plot roughly square plots commensurate with the C1/3 adsorption sites and print out the relevant PIMC parameters\nstrain = 0.00\nn=2 # `(2n)^2` C1/3 adsorption sites\nfig, ax = gt.roughly_square_plot(n,strain)\ngt.roughly_square(n,strain) #print out the relevant PIMC parameters\nfig.set_dpi(300)\n```\n\n    -N 16 --Lx 14.757072880486835 --Ly 17.04\n\n\n\n![png](https://raw.githubusercontent.com/nscottnichols/graphenetools-py/main/images/roughly_square.png)\n\n\nFor non-\"roughly square\" command line parameters and plots use functions `c_one_third_commensurate_command()` and `c_one_third_commensurate_command_plot()`.\n\n\n```python\n# Here we plot a mostly rectangular plot commensurate with the C1/3 adsorption sites and print out the relevant PIMC parameters\nstrain = 0.00\nm=3\nn=1\nfig, ax = gt.c_one_third_commensurate_command_plot(m,n,strain)\ngt.c_one_third_commensurate_command(m,n,strain) #print out the relevant PIMC parameters\nfig.set_dpi(300)\n```\n\n    -N 6 --Lx 22.135609320730254 --Ly 4.26\n\n\n\n![png](https://raw.githubusercontent.com/nscottnichols/graphenetools-py/main/images/not_roughly_square.png)\n\n\n### Generate potential plots\nThe potential can also be calculated for the helium-graphene interaction using Graphene Tools. Here are some demonstrations at various strains.\n\n#### 0D potential plot (a single point)\nThe potential can be generate at a single point using the `V_64()` function. Optimized parameters to the Lennard-Jones potential are obtained using the `get_LJ_parameters()` function.\n\n\n```python\n# Get optimized Lennard-Jones parameters for certain strain\nstrain = 0.00\nconventional=True # Setting conventional to true will return the conventional parameters\nsigma, epsilon = gt.get_LJ_parameters(strain,conventional=conventional)\n_x = 0.00\n_y = 0.00\n_z = 3.00\n\n# Generate helium-graphene interaction potential for a single point\ncarbon_carbon_distance=1.42\npoisson_ratio=0.165\nk_max=10000\npotential=\"V\" # can also generate the gradient or Laplacian by setting this variable to gradVx, gradVy, gradVz, or grad2V\ngt.V_64(strain, sigma, epsilon, _x, _y, _z, carbon_carbon_distance=carbon_carbon_distance, poisson_ratio=poisson_ratio, k_max=k_max,potential=potential)\n```\n\n\n\n\n    -158.92622261112095\n\n\n\n#### 1D potential plot\nHere a 1D potential for a helium atom located above the graphene sheet is generated using the `generate_V1D()`. Note that the graphene sheets are centered on the center of the hexgonal unit (not centered on a carbon atom).\n\n\n```python\n# Generate a 1D potential along z-direction at specific (x,y) location\nstrain = 0.00\nx = 0.0\ny = 0.0\nz = gt.np.linspace(2.0,15.0,1001)\nV = gt.generate_V1D(x,y,z,strain=strain) #Using default arguments (check function for extensive list)\n\n```\n\nPlots for multiple values of strain can be generated using the `plot_V1D()` function.\n\n\n```python\nx = 0.00\ny = 0.00\nz = gt.np.linspace(2,6,1001)\ndpi = 300\nstrains = gt.np.linspace(0,.25,6)\nmplstylefile = \"./include/notebook.mplstyle\"\nfig, ax, V_array = gt.plot_V1D(x,y,z,strains=strains,mplstylefile=mplstylefile,dpi=dpi)\nfig.savefig(\"V1D_optimized_close.png\",bbox_inches=\"tight\")\n```\n\n\n![png](https://raw.githubusercontent.com/nscottnichols/graphenetools-py/main/images/V1D.png)\n\n\n##### Minimum of 1D potential\nThe minimum location and value of the potential for the different strain values can be determined using the `get_z_min()` and `get_z_mins()` functions.\n\n\n```python\n# Get minimum potential and location above graphene sheet for a single strain value\nstrain = 0.00\nz_min, V_min = gt.get_z_min(strain)\n\n# Get minimum potential and location above graphene sheet for multiple strains\nstrains = gt.np.linspace(0,.25,6)\n\nz_mins, V_mins = gt.get_z_mins(strains)\nz_mins_conventional, V_mins_conventional = gt.get_z_mins(strains,conventional=True)\n```\n\nNote the different behavior when using the optmized parameters from [Nichols et al.] compared with using the conventional parameters.\n\n\n```python\n#Plot z\nmplstylefile = 'default'\nwith gt.plt.style.context(mplstylefile):\n    fig, ax = gt.plt.subplots(dpi=300)\n    ax.plot(strains,z_mins,label=\"optimized\")\n    ax.set_prop_cycle(None)\n    ax.plot(strains,z_mins_conventional,linestyle=\":\",label=r\"conventional\")\n    ax.set_xlabel(r\"$\\mathrm{strain}\\ \\delta$\")\n    ax.set_ylabel(r\"$z_\\mathrm{min}\\ \\mathrm{[\\AA]}$\")\n    ax.legend()\n    fig.savefig(\"zmin.png\")\n```\n\n\n![png](https://raw.githubusercontent.com/nscottnichols/graphenetools-py/main/images/zmin.png)\n\n\n#### 2D potential plot\nHere a 2D potential lookup table for a helium atom located above the graphene sheet is generated over the unit cell using the `generate_V2D_uc()`.\n\n\n```python\nstrain = 0.00\nresolution = 101\nfn_prefix=\"./helium-graphene-2D-unit-cell\"\nz_min, V_min = gt.get_z_min(strain)\n\n# Generate 2D lookup table on the unit cell for \ndata = gt.generate_V2D_uc(z_min, strain=strain, resolution=resolution, fn_prefix=\"./helium-graphene-2D-unit-cell\")\n```\n\nHere is a visualization of the 2D lookup table.\n\n\n```python\nfn = \"helium-graphene-2D-unit-cell-conventional_V_strain_0.00000_z_2.63624_res_101.npz\"\ndata = gt.np.load(fn)\nmplstylefile = 'default'\nwith gt.plt.style.context(mplstylefile):\n    fig,ax = gt.plt.subplots(dpi=300)\n    ax.imshow(data[\"potential\"].T,origin=\"lower\",extent=[0,1,0,1])\n    ax.set_xlabel(r\"$\\hat{A}_m$\")\n    ax.set_ylabel(r\"$\\hat{A}_n$\")\n```\n\n\n![png](https://raw.githubusercontent.com/nscottnichols/graphenetools-py/main/images/V2D_uc.png)\n\n\nThe 2D potential interaction on the Cartesian plan is generated using the `get_V2D()` function and takes the generated 2D lookup table as a parameter. Plots of the 2D potential can be generated using `plot_V2D()` with the option to include the graphene lattice.\n\n\n```python\n# Here we generate 2D potential data on the Cartesian plane by using a generated lookup table\nbox_dims = gt.np.array([-3.0,3.0,-3.0,3.0])\nresolution = 201\nfn = \"helium-graphene-2D-unit-cell_V_strain_0.00000_z_2.52369_res_101.npz\"\nbig_V, big_xy_x, big_xy_y, extent = gt.get_V2D(fn,box_dims,resolution=resolution)\nV2D_data = (big_V, big_xy_x, big_xy_y, extent)\n\n# and plot the data we just generated\ndpi = 300\nplot_filename=\"V2D.png\" # save plot as this name\nmplstylefile = 'default'\nfig_ax = None\ngraphene_lattice = True # include the graphene lattice\ntry:\n    fig, ax, V2D_data = gt.plot_V2D(fn,box_dims,V2D_data=V2D_data,plot_filename=plot_filename,mplstylefile=mplstylefile,resolution=resolution,dpi=dpi)\nexcept:\n    fig, ax, V2D_data = gt.plot_V2D(fn,box_dims,plot_filename=plot_filename,mplstylefile=mplstylefile,resolution=resolution,dpi=dpi)\n\n```\n\n\n![png](https://raw.githubusercontent.com/nscottnichols/graphenetools-py/main/images/V2D.png)\n\n\n#### 3D potential plot (still a 2D slice)\nSimilar to the 2D methods a 3D plot of the 2D potential slice can be generated using `plot_V3D()`.\n\n\n```python\n# Here we generate 2D potential data on the Cartesian plane by using a generated lookup table\nbox_dims = gt.np.array([-3.0,3.0,-3.0,3.0])\nresolution = 201\nfn = \"helium-graphene-2D-unit-cell_V_strain_0.00000_z_2.52369_res_101.npz\"\nbig_V, big_xy_x, big_xy_y, extent = gt.get_V2D(fn,box_dims,resolution=resolution)\nV2D_data = (big_V, big_xy_x, big_xy_y, extent)\n\n# and plot the data we just generated\nfigsize = (16,9) # widescreen!\ndpi = 240 # dpi corresponds to 4K image\nplot_filename=\"V3D.png\"\nmplstylefile = 'default'\nfig_ax = None\ngraphene_lattice = True\nsurf_kwargs={\"alpha\":0.5,\"cmap\":\"viridis\"}\ntry:\n    fig, ax, V2D_data = gt.plot_V3D(fn,box_dims,plot_filename=plot_filename,V2D_data=V2D_data,mplstylefile=mplstylefile,resolution=resolution,dpi=dpi,figsize=figsize,surf_kwargs=surf_kwargs)\nexcept:\n    fig, ax, V2D_data = gt.plot_V3D(fn,box_dims,plot_filename=plot_filename,mplstylefile=mplstylefile,resolution=resolution,dpi=dpi,figsize=figsize,surf_kwargs=surf_kwargs)\n\n\n```\n\n\n![png](https://raw.githubusercontent.com/nscottnichols/graphenetools-py/main/images/V3D.png)\n\n\n### Additional usage\nSee function documentation to discover additional usage.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nscottnichols/graphenetools-py",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graphenetools-py",
    "package_url": "https://pypi.org/project/graphenetools-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/graphenetools-py/",
    "project_urls": {
      "Homepage": "https://github.com/nscottnichols/graphenetools-py"
    },
    "release_url": "https://pypi.org/project/graphenetools-py/0.10.0/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "scipy"
    ],
    "requires_python": "",
    "summary": "Tools for generating parameters for helium on uniaxially strained graphene simulations using quantum Monte Carlo software hosted at https://code.delmaestro.org and plots of the helium graphene interaction",
    "version": "0.10.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11519891,
  "releases": {
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8979c97b2071fdf082d65aaf89562b48ffb67add1053573e704874f81fcb1f58",
          "md5": "6a77aaeadfa271f6f5d245f0b9af3a8f",
          "sha256": "94168f4869d377d256ac02b16df7eb1625cc4fb246459fee43f742b85885a7a6"
        },
        "downloads": -1,
        "filename": "graphenetools_py-0.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6a77aaeadfa271f6f5d245f0b9af3a8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19224,
        "upload_time": "2021-09-22T16:50:37",
        "upload_time_iso_8601": "2021-09-22T16:50:37.560315Z",
        "url": "https://files.pythonhosted.org/packages/89/79/c97b2071fdf082d65aaf89562b48ffb67add1053573e704874f81fcb1f58/graphenetools_py-0.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bde3b0d7a491121958f8c5d5b51389ea8d0ee53dc42fa93bf3a699005b6ff43",
          "md5": "85b6f8c4448a6cf739cfacd21f0e7f83",
          "sha256": "85fdec58fe7b70d1b7ce178bde1904419a5558ed2f84e3bc506c98e13f3b314f"
        },
        "downloads": -1,
        "filename": "graphenetools-py-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "85b6f8c4448a6cf739cfacd21f0e7f83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18723,
        "upload_time": "2021-09-22T16:50:38",
        "upload_time_iso_8601": "2021-09-22T16:50:38.898711Z",
        "url": "https://files.pythonhosted.org/packages/7b/de/3b0d7a491121958f8c5d5b51389ea8d0ee53dc42fa93bf3a699005b6ff43/graphenetools-py-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a04701fd25668bba477118bf1df20bd9c1269f46f56d1d07cd00ca0e7175cf3b",
          "md5": "3d17121e9edf625c34d47cb600c7a5f3",
          "sha256": "5942708ec4f9910dc8b1e1d5a13b5d44ba67ecd60c540b92e73cf9bcd61901e6"
        },
        "downloads": -1,
        "filename": "graphenetools_py-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d17121e9edf625c34d47cb600c7a5f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19091,
        "upload_time": "2020-12-15T04:12:35",
        "upload_time_iso_8601": "2020-12-15T04:12:35.283117Z",
        "url": "https://files.pythonhosted.org/packages/a0/47/01fd25668bba477118bf1df20bd9c1269f46f56d1d07cd00ca0e7175cf3b/graphenetools_py-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc357439206562b355743e674a20c2dde99db8f67389dcaf3b0dcd7c93d2a7e0",
          "md5": "1a910241459fe2fc9a16e7767491a0c1",
          "sha256": "bb713abb113f2e239773be2c2d4cc3e1c8e0642c69754c44d87fee0c9915a05b"
        },
        "downloads": -1,
        "filename": "graphenetools-py-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1a910241459fe2fc9a16e7767491a0c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18718,
        "upload_time": "2020-12-15T04:12:36",
        "upload_time_iso_8601": "2020-12-15T04:12:36.904576Z",
        "url": "https://files.pythonhosted.org/packages/fc/35/7439206562b355743e674a20c2dde99db8f67389dcaf3b0dcd7c93d2a7e0/graphenetools-py-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41fff39aabf55382b5523717b096d8584b43177cef16cd4aefe438539543b4eb",
          "md5": "5f1c8d5dccfcd4386a37504e727eee15",
          "sha256": "fae662366a74583e9774af840a860cb54670f867cb67bdafaeeb08519dbd29be"
        },
        "downloads": -1,
        "filename": "graphenetools_py-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f1c8d5dccfcd4386a37504e727eee15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19079,
        "upload_time": "2020-12-15T04:17:31",
        "upload_time_iso_8601": "2020-12-15T04:17:31.166491Z",
        "url": "https://files.pythonhosted.org/packages/41/ff/f39aabf55382b5523717b096d8584b43177cef16cd4aefe438539543b4eb/graphenetools_py-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f94049e24467bac3ea46386954092824295e55d2d72970924f3ace005d1c7ac8",
          "md5": "15d0200b2f347b9de4e8ba884430cbbd",
          "sha256": "15ed6a0279a1d829a018c0802c186aaf396b834530ee17d2780d3af236852acc"
        },
        "downloads": -1,
        "filename": "graphenetools-py-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "15d0200b2f347b9de4e8ba884430cbbd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18711,
        "upload_time": "2020-12-15T04:17:33",
        "upload_time_iso_8601": "2020-12-15T04:17:33.059398Z",
        "url": "https://files.pythonhosted.org/packages/f9/40/49e24467bac3ea46386954092824295e55d2d72970924f3ace005d1c7ac8/graphenetools-py-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7ce83e0d2bbe95ac635ab9ab2bc1bbfd4a1a418650ee2221f05698b8c008f62",
          "md5": "c65cabb6243087af7e4c0eedcd0363ee",
          "sha256": "b9d7b2992893a3c1c5dce9bdab13cfc7fa8130ed849c58e16f2709f2002a9d18"
        },
        "downloads": -1,
        "filename": "graphenetools_py-0.9.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c65cabb6243087af7e4c0eedcd0363ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19075,
        "upload_time": "2020-12-15T04:40:23",
        "upload_time_iso_8601": "2020-12-15T04:40:23.356412Z",
        "url": "https://files.pythonhosted.org/packages/b7/ce/83e0d2bbe95ac635ab9ab2bc1bbfd4a1a418650ee2221f05698b8c008f62/graphenetools_py-0.9.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52b81103ea7d023b0a7392206fd5ac6ee25b15683dcddc3253fbdeecbb8e391c",
          "md5": "443874442fd7866bbf2b12e9c1c9e353",
          "sha256": "33e53beff29136a3a204d0e96605de2c7703c45e24263b99d9c4d5d875de5a75"
        },
        "downloads": -1,
        "filename": "graphenetools-py-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "443874442fd7866bbf2b12e9c1c9e353",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18749,
        "upload_time": "2020-12-15T04:40:24",
        "upload_time_iso_8601": "2020-12-15T04:40:24.838950Z",
        "url": "https://files.pythonhosted.org/packages/52/b8/1103ea7d023b0a7392206fd5ac6ee25b15683dcddc3253fbdeecbb8e391c/graphenetools-py-0.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1eebe461d0a84d804e18c317f46daa445da066c82af6f0f65a7056a059cb311",
          "md5": "6b165bc93c3c2686ccaf671b63d93f96",
          "sha256": "2a0c834b04a8c5b86df5c08bf47c8900950f5128a8a7a0cdaeac59e3e003b7d1"
        },
        "downloads": -1,
        "filename": "graphenetools_py-0.9.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b165bc93c3c2686ccaf671b63d93f96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19033,
        "upload_time": "2020-12-15T04:54:27",
        "upload_time_iso_8601": "2020-12-15T04:54:27.904638Z",
        "url": "https://files.pythonhosted.org/packages/d1/ee/be461d0a84d804e18c317f46daa445da066c82af6f0f65a7056a059cb311/graphenetools_py-0.9.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9dd085d2fabac12a0603ba9315b0287f2f52621ca0d80c9d6573d5d417fcd2da",
          "md5": "1b917ce9a11d4edec872302eedcc562d",
          "sha256": "03d5e9dbf4a3e5d80dc8de8868b6b7da8ce868a468efd990fefa7f5d5028c503"
        },
        "downloads": -1,
        "filename": "graphenetools-py-0.9.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1b917ce9a11d4edec872302eedcc562d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18661,
        "upload_time": "2020-12-15T04:54:29",
        "upload_time_iso_8601": "2020-12-15T04:54:29.456774Z",
        "url": "https://files.pythonhosted.org/packages/9d/d0/85d2fabac12a0603ba9315b0287f2f52621ca0d80c9d6573d5d417fcd2da/graphenetools-py-0.9.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a60c228ec31809a7dc907c22eeb7c56e14b1a3fd064ab367a341cea9e7ebd6bd",
          "md5": "f97f1e100585aa0336f9d006480ddaae",
          "sha256": "e0e510def89015c50261ffe99dd82d19d120589f0e634b01e1813f1b60e14783"
        },
        "downloads": -1,
        "filename": "graphenetools_py-0.9.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f97f1e100585aa0336f9d006480ddaae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19193,
        "upload_time": "2020-12-17T03:40:17",
        "upload_time_iso_8601": "2020-12-17T03:40:17.685885Z",
        "url": "https://files.pythonhosted.org/packages/a6/0c/228ec31809a7dc907c22eeb7c56e14b1a3fd064ab367a341cea9e7ebd6bd/graphenetools_py-0.9.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed17d5c82934a0807c3328aa45914db953c50423f86d986e581c9457bb47fb7b",
          "md5": "645e36e5dc31539d9a93e528b0ee791f",
          "sha256": "b7cb35701f773e28cb97d6d0552cde8b44020c609cc68f4387bdee724e4bcba6"
        },
        "downloads": -1,
        "filename": "graphenetools-py-0.9.6.tar.gz",
        "has_sig": false,
        "md5_digest": "645e36e5dc31539d9a93e528b0ee791f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18713,
        "upload_time": "2020-12-17T03:40:19",
        "upload_time_iso_8601": "2020-12-17T03:40:19.434774Z",
        "url": "https://files.pythonhosted.org/packages/ed/17/d5c82934a0807c3328aa45914db953c50423f86d986e581c9457bb47fb7b/graphenetools-py-0.9.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7df87833f4dabf646e80b6c708ddd24cffd18dfcbfc32ba936cd9558db354316",
          "md5": "0ff4229481bb3aaa16ad76d60ed5edde",
          "sha256": "b391e848b5426046c907e4b1c47b561b3e64c2ad503af293b2e3bdc4fb74e3e4"
        },
        "downloads": -1,
        "filename": "graphenetools_py-0.9.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ff4229481bb3aaa16ad76d60ed5edde",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19197,
        "upload_time": "2021-05-27T20:42:00",
        "upload_time_iso_8601": "2021-05-27T20:42:00.632280Z",
        "url": "https://files.pythonhosted.org/packages/7d/f8/7833f4dabf646e80b6c708ddd24cffd18dfcbfc32ba936cd9558db354316/graphenetools_py-0.9.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31e32a5c3b1f6b72ba1c00b25085520525370af5e46d81196b017f986d771dce",
          "md5": "4fdb0a611b8fcce1a7708551384d95a7",
          "sha256": "2a33300ca8462fab75000c618763e5b81813b5e97ccf1066e8d126fc76de09f3"
        },
        "downloads": -1,
        "filename": "graphenetools-py-0.9.7.tar.gz",
        "has_sig": false,
        "md5_digest": "4fdb0a611b8fcce1a7708551384d95a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18719,
        "upload_time": "2021-05-27T20:42:01",
        "upload_time_iso_8601": "2021-05-27T20:42:01.974555Z",
        "url": "https://files.pythonhosted.org/packages/31/e3/2a5c3b1f6b72ba1c00b25085520525370af5e46d81196b017f986d771dce/graphenetools-py-0.9.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8979c97b2071fdf082d65aaf89562b48ffb67add1053573e704874f81fcb1f58",
        "md5": "6a77aaeadfa271f6f5d245f0b9af3a8f",
        "sha256": "94168f4869d377d256ac02b16df7eb1625cc4fb246459fee43f742b85885a7a6"
      },
      "downloads": -1,
      "filename": "graphenetools_py-0.10.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6a77aaeadfa271f6f5d245f0b9af3a8f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19224,
      "upload_time": "2021-09-22T16:50:37",
      "upload_time_iso_8601": "2021-09-22T16:50:37.560315Z",
      "url": "https://files.pythonhosted.org/packages/89/79/c97b2071fdf082d65aaf89562b48ffb67add1053573e704874f81fcb1f58/graphenetools_py-0.10.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7bde3b0d7a491121958f8c5d5b51389ea8d0ee53dc42fa93bf3a699005b6ff43",
        "md5": "85b6f8c4448a6cf739cfacd21f0e7f83",
        "sha256": "85fdec58fe7b70d1b7ce178bde1904419a5558ed2f84e3bc506c98e13f3b314f"
      },
      "downloads": -1,
      "filename": "graphenetools-py-0.10.0.tar.gz",
      "has_sig": false,
      "md5_digest": "85b6f8c4448a6cf739cfacd21f0e7f83",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18723,
      "upload_time": "2021-09-22T16:50:38",
      "upload_time_iso_8601": "2021-09-22T16:50:38.898711Z",
      "url": "https://files.pythonhosted.org/packages/7b/de/3b0d7a491121958f8c5d5b51389ea8d0ee53dc42fa93bf3a699005b6ff43/graphenetools-py-0.10.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}