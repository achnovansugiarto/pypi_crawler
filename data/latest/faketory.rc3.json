{
  "info": {
    "author": "warevil",
    "author_email": "jg@warevil.dev",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Faketory\n\nA simple implementation of the Factory pattern, build any number of elements with random values generated by [Faker].\n\n\n## Requirements\n\n- [Python] >= 3.7\n> IMPORTANT: This library depends on [Faker]. If by any chance you have any errors, make sure you have it installed. If you're using Python < 3.7, you can adapt this library by downgrading to a version of Faker that's compatible with it, you'll have to follow `installation for devs/contributors` and either build the library or just copy `faketory` folder to your Python project's root.\n\n\n## Installation\n\n```sh\npip install faketory\n```\n\n## Installation for devs/contributors\n\n1. Clone this repository.\n2. Run `./install.sh`.\n> Note: You can build the library for distribution by simply running `poetry build`.\n\n## Quick Start\n\n1. Create `my_file.py`, then copy and paste this code:\n\n```\nfrom faketory.factory import Faketory\nfrom faketory.gens import Fake\n\n\nclass MyModel:\n    def __init__(self, age, name, email):\n        self.age = age\n        self.name = name\n        self.email = email\n\n\nclass MyFactory(Faketory):\n    age = Fake('pyint', min_value=18, max_value=120)\n    email = Fake('email')\n    name = Fake('name')\n\n    class Meta:\n        model = MyModel\n\n# () -> Builds an instance with autogenerated values\nmy_model = MyFactory()\nprint(f'My name is {my_model.name}\\n')\n\n# (age=20) -> Custom value\nmy_model_custom = MyFactory(age=20)\nprint(f'My age is {my_model_custom.age}\\n')  # 20\n\n# (_qty=9) -> Builds a list of 9 objects\nmy_models_list = MyFactory(_qty=9)\nfor index, my_mod in enumerate(my_models_list):\n    print(f'{index + 1} {my_mod.email}')\n\n```\n\n2. Run the file using `python my_file.py`.\n\n\n## Faketory\n\nBuilds 1 or more fake model instances of a Model class.\n- `_qty`: Number of fake model instances to return. Minimum value is 1.\n- `_resolver`: Function to resolve once the model instance is created. (Check Django ORM example below)\n- `_type`: Define the type of the model instance you want to return. Default: 'list', but you can have 'generator' or 'set' instead.\n- `**custom_fields`: These fields will override the Fake generated values of the Factory.\n\n\n## Tutorial\n\n1. Import Fake and Faketory:\n\n```\nfrom faketory.factory import Faketory\nfrom faketory.gens import Fake\n```\n\n2. Import your Model(s):\n\n```\nfrom my_poject.models import MyModel\n```\n\n3. Create your Factory by passing Fake generators to each field you want to pass values in your Model constructor. Also add your Model to the model attribute of the Meta class:\n\n```\nclass MyFactory(Faketory):\n    my_field = Fake('name')\n    my_other_field = Fake('text')\n\n    class Meta:\n        model = MyModel\n```\n> Note: You can pass any value to any field to your Model constructor instead of a Fake generator.\n\n4. Create your single Model instance:\n\n```\nmy_model_instance = MyFactory()\n```\n\nNow the attributes of `my_model_instance` will have randomly generated values by faker. For example, `my_field` could be 'Jon' and `my_other_field` could be 'Some text here'.\n\n## Inheritance\n\n```\nclass SampleFactory(Faketory):\n    age = Fake('pyint', min_value=18)\n    email = Fake('email')\n    name = Fake('name')\n\n    class Meta:\n        model = SampleChild\n\n```\n\nThis piece of code is equivalent to:\n\n```\nclass BaseSampleFactory(Faketory):\n    age = Fake('pyint', min_value=18)\n    email = Fake('email')\n\n    class Meta:\n        model = SampleChild\n\n\nclass SampleFactory(BaseSampleFactory):\n    name = Fake('name')\n\n```\n\n\n## FaketoryGen\n\nA Faketory can have other Faketories... But if you pass a Faketory instance, it'll be treated as a fixed value. If you want to have different values, you'll need to use a FaketoryGen.\n\n```\nfrom faketory.factory import Faketory\nfrom faketory.gens import FaketoryGen\n\n\nclass SampleChild(Sample):\n    def __init__(self, age, email, name):\n        self.age = age\n        self.email = email\n        self.name = name\n\n\nclass SampleHasChild:\n    def __init__(self, child, email):\n        self.child = child\n        self.email = email\n\n\nclass SampleFactory(Faketory):\n    age = Fake('pyint', min_value=18)\n    email = Fake('email')\n    name = Fake('name')\n\n    class Meta:\n        model = SampleChild\n\n\nclass SampleHasChildFactory(Faketory):\n    child = FaketoryGen(SampleFactory)\n    email = Fake('email')\n\n    class Meta:\n        model = SampleHasChild\n\n```\n\n\n## Django ORM example\n\nYou can pass any Django Model to `Faketory.Meta.model`, but if you want to save it to your database, make sure you pass `_resolver='save'` to your Faketory instance.\n\n```\nclass SampleDjangoFactory(Faketory):\n    email = Fake('email')\n    name = Fake('name')\n\n    class Meta:\n        model = MyDjangoModel\n\nmy_django_instance = Factory(_resolver='save')\n\n```\n\n## Fake\n\nThis class simply calls the functions you get from Faker object, so you should check their docs. Here a quick example of how you can generate a fake name:\n\n#### Faker\n\n```\nfrom faker import Faker\n\n\nfake = Faker()\n\n# Generate a name\nfirst_name = fake.name()\n\n```\n\n#### Fake\n```\nfrom faketory.gens import Fake\n\n\nfirst_name = Fake('name').generate()\n\n```\n\n#### Generate a random number\n\n```\n# Faker\nfake.pyint(min_value=18, max_value=21)\n\n# Fake\nFake('pyint', min_value=18, max_value=21).generate()\n```\n\n#### Generate unique random numbers\n\n```\n# Faker\nnumbers = set(\n    fake.unique.random_int(min=1, max=10) for i in range(10)\n)\n\n# Fake\nnumbers = set(\n    Fake('unique.random_int', min=1, max=10).generate() for i in range(10)\n)\n```\n\n\n## Creator\n\nWαя€vเℓ - <jg@warevil.dev>\n\n[Faker]: <https://pypi.org/project/Faker/>\n[Python]: <https://www.python.org/downloads/>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/warevil/faketory",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "faketory",
    "package_url": "https://pypi.org/project/faketory/",
    "platform": null,
    "project_url": "https://pypi.org/project/faketory/",
    "project_urls": {
      "Homepage": "https://github.com/warevil/faketory",
      "Repository": "https://github.com/warevil/faketory"
    },
    "release_url": "https://pypi.org/project/faketory/0.1.2/",
    "requires_dist": [
      "faker (>=15.1.1,<16.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "A very simple Factory library. Generic, but compatible with Django. Let's build together!",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15432038,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fec6ab84a723d85da21bb0a6cf40a2022dc800a27710e1754de8be9f38384c5a",
          "md5": "d6c58ac712589f15ed0160b96f829314",
          "sha256": "3b29f6b61f769a85269cf0899e0bda7b05f923a354ca04275f59acb606742817"
        },
        "downloads": -1,
        "filename": "faketory-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6c58ac712589f15ed0160b96f829314",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 5203,
        "upload_time": "2022-10-15T15:45:30",
        "upload_time_iso_8601": "2022-10-15T15:45:30.640638Z",
        "url": "https://files.pythonhosted.org/packages/fe/c6/ab84a723d85da21bb0a6cf40a2022dc800a27710e1754de8be9f38384c5a/faketory-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bda3bbf083ce88a00f4fb1aeb5cd823158c10260474ecf5c70f95909539114d5",
          "md5": "d588c3ee804ab31be140cfddb641cee8",
          "sha256": "f8f82e15fdbe567bb8f8234b56a202de247b8ebb4f9caf2d3d0e5d66fadaa692"
        },
        "downloads": -1,
        "filename": "faketory-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d588c3ee804ab31be140cfddb641cee8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4874,
        "upload_time": "2022-10-15T15:45:31",
        "upload_time_iso_8601": "2022-10-15T15:45:31.936939Z",
        "url": "https://files.pythonhosted.org/packages/bd/a3/bbf083ce88a00f4fb1aeb5cd823158c10260474ecf5c70f95909539114d5/faketory-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "193bf9fa69c811fa6a65e7b5628f75d2c8017a51e6a3fa6ce0a81e18d89d8d15",
          "md5": "93b95d5e619cf5e853acdc6104f54f44",
          "sha256": "4290a283716ff020604631ed7df3e1a79afbf7d42347c530e4d3ad0b01bc7e4a"
        },
        "downloads": -1,
        "filename": "faketory-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93b95d5e619cf5e853acdc6104f54f44",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 5456,
        "upload_time": "2022-10-16T05:17:39",
        "upload_time_iso_8601": "2022-10-16T05:17:39.867629Z",
        "url": "https://files.pythonhosted.org/packages/19/3b/f9fa69c811fa6a65e7b5628f75d2c8017a51e6a3fa6ce0a81e18d89d8d15/faketory-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccfcdd3bc95de79fd83ee507f0c1ddfeb0756ec059a15d9700f87056bd1fa3f5",
          "md5": "84d8dbf28e2e68f968b6faeba435e96a",
          "sha256": "944b21c324bef75daa83faa61fd2c81e93708d03eaaafb19a5a35650b15f5b8d"
        },
        "downloads": -1,
        "filename": "faketory-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "84d8dbf28e2e68f968b6faeba435e96a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 5234,
        "upload_time": "2022-10-16T05:17:41",
        "upload_time_iso_8601": "2022-10-16T05:17:41.238154Z",
        "url": "https://files.pythonhosted.org/packages/cc/fc/dd3bc95de79fd83ee507f0c1ddfeb0756ec059a15d9700f87056bd1fa3f5/faketory-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ced5c152c006f0ecd8c9f894b15a09f9dbce8b238e642025dff0870184d00e4",
          "md5": "3d4055ed318e91cb7882f42d3cfe3c9d",
          "sha256": "22011ac646879dcc09f9cf3c6e3c9ab1c78ef69b9532273b2d2a551436ffb19e"
        },
        "downloads": -1,
        "filename": "faketory-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d4055ed318e91cb7882f42d3cfe3c9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 5511,
        "upload_time": "2022-10-17T03:00:48",
        "upload_time_iso_8601": "2022-10-17T03:00:48.784820Z",
        "url": "https://files.pythonhosted.org/packages/0c/ed/5c152c006f0ecd8c9f894b15a09f9dbce8b238e642025dff0870184d00e4/faketory-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8a28c307012f03ac85362495b400dd0d5d56e1490b4a22ecc65e577178f3a24",
          "md5": "eb319d019f82292589a0ba47ef81dbe7",
          "sha256": "ff8a595f001d5fc55813dc4349fcb835dd4e3e54304f23b22340f770e861fe4c"
        },
        "downloads": -1,
        "filename": "faketory-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eb319d019f82292589a0ba47ef81dbe7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 5330,
        "upload_time": "2022-10-17T03:00:50",
        "upload_time_iso_8601": "2022-10-17T03:00:50.737991Z",
        "url": "https://files.pythonhosted.org/packages/d8/a2/8c307012f03ac85362495b400dd0d5d56e1490b4a22ecc65e577178f3a24/faketory-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ced5c152c006f0ecd8c9f894b15a09f9dbce8b238e642025dff0870184d00e4",
        "md5": "3d4055ed318e91cb7882f42d3cfe3c9d",
        "sha256": "22011ac646879dcc09f9cf3c6e3c9ab1c78ef69b9532273b2d2a551436ffb19e"
      },
      "downloads": -1,
      "filename": "faketory-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3d4055ed318e91cb7882f42d3cfe3c9d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 5511,
      "upload_time": "2022-10-17T03:00:48",
      "upload_time_iso_8601": "2022-10-17T03:00:48.784820Z",
      "url": "https://files.pythonhosted.org/packages/0c/ed/5c152c006f0ecd8c9f894b15a09f9dbce8b238e642025dff0870184d00e4/faketory-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d8a28c307012f03ac85362495b400dd0d5d56e1490b4a22ecc65e577178f3a24",
        "md5": "eb319d019f82292589a0ba47ef81dbe7",
        "sha256": "ff8a595f001d5fc55813dc4349fcb835dd4e3e54304f23b22340f770e861fe4c"
      },
      "downloads": -1,
      "filename": "faketory-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "eb319d019f82292589a0ba47ef81dbe7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 5330,
      "upload_time": "2022-10-17T03:00:50",
      "upload_time_iso_8601": "2022-10-17T03:00:50.737991Z",
      "url": "https://files.pythonhosted.org/packages/d8/a2/8c307012f03ac85362495b400dd0d5d56e1490b4a22ecc65e577178f3a24/faketory-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}