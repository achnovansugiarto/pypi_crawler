{
  "info": {
    "author": "Ashwin Poojary",
    "author_email": "ashwinp@fb.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# pcicrawler\n`pcicrawler` is a CLI tool to display/filter/export information about PCI or PCI\nExpress devices and their topology.\n\n## Usage\n`pcicrawler` must be run as root.\n\nThe full `--help` message is shown below.\n```bash\nUsage: pcicrawler [OPTIONS]\n\n  Tool to display/filter/export information about PCI or PCI Express\n  devices, as well as their topology.\n\n  Must run as root as it uses privileged sysfs entries.\n\nOptions:\n  -c, --class-id TEXT             Only show devices matching this PCI class ID\n                                  in hex, or one of: nvme, ethernet, raid, gpu\n  -d, --device TEXT               Only show devices matching this PCI\n                                  vendor/device ID, (syntax like\n                                  vendor:device, or vendor:, in hex)\n  -e, --express-only / --no-express-only\n                                  Only show PCIe devices\n  -j, --json / --no-json          Output in JSON format\n  -p, --include-path / --no-include-path\n                                  Include devices upstream of matched devices\n  -s, --addr TEXT                 Show device with this PCI address\n  -t, --tree / --no-tree          Output as a tree\n  -v, --verbose / --no-verbose    Show debugging output - not compatible with\n                                  JSON/tree views\n  -V, --vpd / --no-vpd            Include VPD data if present, does not\n                                  workwith --tree\n  -x, --hexify / --no-hexify      Output vendor/device/class IDs as hex\n                                  strings instead of numbers in JSON output\n  -a, --aer / --no-aer            Include PCIe Advanced Error Reporting (AER)\n                                  information when available - only provided\n                                  in JSON output\n  --help                          Show this message and exit.\n```\n\n## Examples\nThe most common use for `pcicrawler` is calling it with its `--tree` option.\n\n(run as root)\n```bash\n$ pcicrawler -t\n```\n```bash\n00:00.0 root_port\n00:1d.0 root_port, \"M.2 PCIE SSD - Boot drive SSD 0\", slot 8, device present, speed 8GT/s, width x4\n └─01:00.0 endpoint, Toshiba America Info Systems (1179), device 0116\n00:1d.4 root_port, \"MEZZ_Conn\", slot 12, device present, speed 8GT/s, width x2\n └─02:00.0 endpoint, Mellanox Technologies (15b3) MT27710 Family [ConnectX-4 Lx] (1015)\n64:02.0 root_port, \"M.2 PCIE SSD - 2nd Storage SSD 2\", slot 7, device present, speed 8GT/s, width x4\n └─65:00.0 endpoint, Samsung Electronics Co Ltd (144d), device a808\n64:03.0 root_port, \"M.2 PCIE SSD - 1st Storage SSD 1\", slot 8, device present, speed 8GT/s, width x4\n └─66:00.0 endpoint, Samsung Electronics Co Ltd (144d), device a808\n```\n\nFilter the output with the `-s` option.\n\n(run as root)\n```bash\n$ pcicrawler -s 02:00.0 -t\n```\n```bash\n00:1d.4 root_port, \"MEZZ_Conn\", slot 12, device present, speed 8GT/s, width x2\n └─02:00.0 endpoint, Mellanox Technologies (15b3) MT27710 Family [ConnectX-4 Lx] (1015)\n```\n\nFilter the output, list VPD data (if any), and put into machine-readable format (JSON).\n\n(run as root)\n```bash\n$ pcicrawler -s 02:00.0 -V -j | python -m json.tool\n```\n```bash\n{\n    \"0000:02:00.0\": {\n        \"addr\": \"0000:02:00.0\",\n        \"capable_speed\": \"8GT/s\",\n        \"capable_width\": 2,\n        \"class_id\": 131072,\n        \"cur_speed\": \"8GT/s\",\n        \"cur_width\": 2,\n        \"device_id\": 4117,\n        \"express_type\": \"endpoint\",\n        \"location\": \"MEZZ_Conn\",\n        \"path\": [\n            \"0000:02:00.0\",\n            \"0000:00:1d.4\"\n        ],\n        \"subsystem_device\": 633,\n        \"subsystem_vendor\": 5555,\n        \"target_speed\": \"8GT/s\",\n        \"vendor_id\": 5555,\n        \"vpd\": {\n            \"fields\": {\n                \"EC\": \"A2\",\n                \"PN\": \"MCX4431N-GCAN_FB\",\n                \"SN\": \"MT1751X14794\",\n                \"V0\": \"PCIeGen3 x8\",\n                \"V2\": \"MCX4431N-GCAN_FB\",\n                \"V3\": \"8427f48749ebe7118000ec0d9ad2c336\",\n                \"VA\": \"MLX:MODL=CX4431N:MN=MLNX:CSKU=V2:UUID=V3:PCI=V0\"\n            },\n            \"identifier_string\": \"CX4431N - ConnectX-4 LX QSFP28\"\n        }\n    }\n}\n```\n\n## How `pcicrawler` works\n`pcicrawler` retrieves information about a device from its resources in sysfs. For\nmore information about how devices are organized on the system, visit\nhttps://www.kernel.org/doc/Documentation/filesystems/sysfs-pci.txt.\n\n## Requirements\n`pcicrawler` requires Python3 and works with\n* CentOS Linux 7\n\n## Building `pcicrawler`\n`pcicrawler` is a Python package and a built `.whl` distribution can be made with\n```bash\npython3 setup.py bdist_wheel\n```\n\n## Installing `pcicrawler`\n`pcicrawler` is a Python package and can be installed from within the directory with\n```bash\npython3 setup.py install\n```\n\n## Contributing to `pcicrawler`\nSee the [CONTRIBUTING](CONTRIBUTING.md) file for information on how to help out.\n\n## License\n`pcicrawler` is <YOUR LICENSE HERE> licensed, as found in the [LICENSE](LICENSE) file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/facebook/pcicrawler",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pcicrawler",
    "package_url": "https://pypi.org/project/pcicrawler/",
    "platform": "",
    "project_url": "https://pypi.org/project/pcicrawler/",
    "project_urls": {
      "Homepage": "https://github.com/facebook/pcicrawler"
    },
    "release_url": "https://pypi.org/project/pcicrawler/1.0.0/",
    "requires_dist": [
      "click",
      "six"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Open source tool to display/filter/export information about PCI or PCI Express devices, as well as their topology.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9787705,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b548fd6a57275b690383e098cd00636f7ce4685ee70359fc269bb7a71ba7ef67",
          "md5": "8ce66ff871d400508a72786a9a78c1e1",
          "sha256": "f56f864a56ad6640b706b9e45e2c810a38417b045c1795449d2a62adfdd1a72c"
        },
        "downloads": -1,
        "filename": "pcicrawler-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ce66ff871d400508a72786a9a78c1e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 18257,
        "upload_time": "2021-03-11T20:13:04",
        "upload_time_iso_8601": "2021-03-11T20:13:04.879564Z",
        "url": "https://files.pythonhosted.org/packages/b5/48/fd6a57275b690383e098cd00636f7ce4685ee70359fc269bb7a71ba7ef67/pcicrawler-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb1ba9f3e04744f7673a06e8b7d57f0cc75ac7e639871b719a402b5187028328",
          "md5": "f59d8215be3e88dad28038ce6b457c31",
          "sha256": "9e6c12b10e4adc9271f7331da4b673d0cb9a6c9e48bba00cd5b7954ada1690a5"
        },
        "downloads": -1,
        "filename": "pcicrawler-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f59d8215be3e88dad28038ce6b457c31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 16723,
        "upload_time": "2021-03-11T20:13:06",
        "upload_time_iso_8601": "2021-03-11T20:13:06.129179Z",
        "url": "https://files.pythonhosted.org/packages/eb/1b/a9f3e04744f7673a06e8b7d57f0cc75ac7e639871b719a402b5187028328/pcicrawler-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b548fd6a57275b690383e098cd00636f7ce4685ee70359fc269bb7a71ba7ef67",
        "md5": "8ce66ff871d400508a72786a9a78c1e1",
        "sha256": "f56f864a56ad6640b706b9e45e2c810a38417b045c1795449d2a62adfdd1a72c"
      },
      "downloads": -1,
      "filename": "pcicrawler-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8ce66ff871d400508a72786a9a78c1e1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 18257,
      "upload_time": "2021-03-11T20:13:04",
      "upload_time_iso_8601": "2021-03-11T20:13:04.879564Z",
      "url": "https://files.pythonhosted.org/packages/b5/48/fd6a57275b690383e098cd00636f7ce4685ee70359fc269bb7a71ba7ef67/pcicrawler-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb1ba9f3e04744f7673a06e8b7d57f0cc75ac7e639871b719a402b5187028328",
        "md5": "f59d8215be3e88dad28038ce6b457c31",
        "sha256": "9e6c12b10e4adc9271f7331da4b673d0cb9a6c9e48bba00cd5b7954ada1690a5"
      },
      "downloads": -1,
      "filename": "pcicrawler-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f59d8215be3e88dad28038ce6b457c31",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 16723,
      "upload_time": "2021-03-11T20:13:06",
      "upload_time_iso_8601": "2021-03-11T20:13:06.129179Z",
      "url": "https://files.pythonhosted.org/packages/eb/1b/a9f3e04744f7673a06e8b7d57f0cc75ac7e639871b719a402b5187028328/pcicrawler-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}