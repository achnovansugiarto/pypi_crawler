{
  "info": {
    "author": "pavelgs",
    "author_email": "p6282813@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<h1> Check-Password </h1> \r\n<h2> Библиотека для быстрой проверки паролей, почт и дат на корректность </h2>\r\n\r\n***\r\n\r\n<h2>Установка</h2>\r\n\r\n    pip install check-password\r\n\r\n***\r\n\r\n\r\n<h2> check-Password | Check </h2>\r\nКласс <code> Check(lang=\"ru\") </code> позволяет проверить пароли, почты и даты на корректность ввода\r\n<h3>check-Password | Check | password </h3>\r\nМетод <code> password() -> bool | str | list </code> принимает на вход пароль и критерии проверки, возвращая True/False, str или список <br>\r\n<br>\r\nОсновной параметр: <code>password: str</code>  <br>\r\nКритерии проверки (дополнительные параметры): <br>\r\n<br>\r\n\r\n\r\n\r\n|          Название           | Тип данных  |                                                                                                                        Описание                                                                                                                        | Значение по умолчанию |\r\n|:---------------------------:|:-----------:|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:---------------------:|\r\n|      <code>result_type      |     str     |                                                                                             Тип результата, принимает одну стоку из \"bool\", \"str\", \"list\"                                                                                              |        \"bool\"         |\r\n|         <code>upper         | int or bool |                                                                                                    Наличие и/или количество букв верхнего регистра                                                                                                     |         True          |\r\n|         <code>lower         | int or bool |                                                                                                     Наличие и/или количество букв нижнего регистра                                                                                                     |         True          |\r\n|        <code>numbers        | int or bool |                                                                                                             Наличие и/или количество цифр                                                                                                              |         True          |\r\n|        <code>symbols        | int or bool |                                                                                                        Наличие и/или количество спец. символов                                                                                                         |         True          |\r\n|    <code>required_symbol    |     str     |                                                                                                   Символы, которые обязательно должны быть в пароле                                                                                                    |         None          |\r\n|      <code>min_length       |     int     |                                                                                                                Минимальная длина пароля                                                                                                                |           6           |\r\n|      <code>max_length       |     int     |                                                                                                               Максимальная длина пароля                                                                                                                |          128          |\r\n| <code>check_simple_password |   open()    | Проверка на простоту пароля, для проверки необходимо передать функцию <code>open&#40;'filename.txt'&#41;</code>, файл можно скачать по [ссылке](https://github.com/pavelglazunov/Check-Password/blob/main/common-passwords.txt \"common-passwords.txt\") |         None          |\r\n|    <code>max_similarity     |     int     |                                                                                     Коэффициент схожести пароля с паролями из указанного файла, рекомендуется 0.7                                                                                      |          0.7          |\r\n\r\n<h4> Примеры </h4>\r\n\r\n```python\r\nfrom check_password import Check\r\n\r\ncheck = Check(lang=\"ru\")\r\n\r\nprint(check.password(\"qwerty\")) # False\r\nprint(check.password(\"Q1wer@ty\")) # True\r\nprint(check.password(\"qwerty\", result_type=\"list\")) # ['В пароле должны быть символы верхнего регистра', 'В пароле должны быть цифры', 'В пароле должны быть специальные символы']\r\nprint(check.password(\"Q1wer@ty\", check_simple_password=open(\"filename.txt\"), result_type=\"list\")) # ['Пароль слишком простой']\r\nprint(check.password(\"qWERty1!\", upper=3)) # True\r\n```\r\n\r\n\r\n<h3>check-Password | Check | email </h3>\r\nМетод <code> email() -> bool | str | list </code> принимает на вход почту и критерии проверки, возвращая True/False, str или список <br>\r\n<br>\r\nОсновной параметр: <code>email: str</code>  <br>\r\nДополнительные параметр: <code>result_type: str</code> | Тип результата, принимает одну стоку из \"bool\", \"str\", \"list\"<br>\r\n\r\n<h4> Примеры </h4>\r\n\r\n```python\r\nfrom check_password import Check\r\n\r\ncheck = Check(lang=\"ru\")\r\n\r\nprint(check.email(\"ivan@gmail.com\"))  # True\r\nprint(check.email(\"-ivan-@gmail.com\"))  # False\r\nprint(check.email(\"ivan@gmail.com\", result_type=\"list\"))  # []\r\nprint(check.email(\".ivan@gmail.com\", result_type=\"list\"))  # ['Недопустимый первый или последний символ']\r\n\r\n```\r\n<br>\r\n<h3>check-Password | Check | date </h3>\r\nМетод <code> date() -> bool | str | list </code> принимает на вход пароль и критерии проверки, возвращая True/False, str или список <br>\r\n<br>\r\nОсновной параметр: <code>date: str</code>  <br>\r\nКритерии проверки (дополнительные параметры): <br>\r\n\r\n|     Название      | Тип данных |                                                    Описание                                                     |      Значение по умолчанию      |\r\n|:-----------------:|:----------:|:---------------------------------------------------------------------------------------------------------------:|:-------------------------------:|\r\n| <code>date_split  |    str     |                                                   Разделитель                                                   |                -                |\r\n| <code>date_format |    str     |           Формат даты, принимает одну строку из \"d/m/y\", \"d/y/m\", \"m/d/y\", \"m/y/d\", \"y/m/d\", \"y/d/m\"            |              d/m/y              |\r\n|  <code>min_year   |    str     |                                      Минимальная дата, в формате %d-%m-%Y                                       |           01-01-1900            |\r\n|  <code>max_year   |    str     |                                      Максимальная дата, в формате %d-%m-%Y                                      |           01-01-3000            |\r\n| <code>result_type |    str     |                          Тип результата, принимает одну стоку из \"bool\", \"str\", \"list\"                          |             \"bool\"              |\r\n\r\n<h4> Примеры </h4>\r\n\r\n```python\r\nfrom check_password import Check\r\n\r\ncheck = Check(lang=\"ru\")\r\n\r\nprint(check.date(\"01-01-2022\"))  # True\r\nprint(check.date(\"01-01-2022\", max_year=\"01-01-2021\"))  # False\r\nprint(check.date(\"01-01-2022\", min_year=\"01-01-2021\"))  # True\r\nprint(check.date(\"01-01-2022\", result_type=\"list\"))  # []\r\nprint(check.date(\"54-32-2022\", result_type=\"list\"))  # ['Неверная дата']\r\n\r\n\r\n```\r\n<br>\r\n\r\n<h2> check-Password | Generate </h2>\r\nКласс <code>Generate()</code> позволяет создавать сложные пароли с необходимыми условиями\r\n<h3>check-Password | Generate | passwords </h3>\r\nМетод <code>passwords() -> list()</code> возвращает список сложных паролей.\r\nПри необходимости можно указать условия для пароля:\r\n\r\n\r\n<br>\r\n\r\n|   Название    | Тип данных |                   Описание                    | Значение по умолчанию |\r\n|:-------------:|:----------:|:---------------------------------------------:|:---------------------:|\r\n| <code>length  |    int     |     Длина пароля, минимальное значение: 6     |          11           |\r\n|  <code>count  |    int     | Количество паролей, минимальное количество: 1 |           1           |\r\n|  <code>upper  |    bool    |            Наличие заглавных букв             |         True          |\r\n| <code>number  |    bool    |                 Наличие цифр                  |         True          |\r\n| <code>symbol  |    bool    |         Наличие специальных символов          |         True          |\r\n\r\n\r\n\r\n<h3> Пример </h3>\r\n\r\n```python\r\nfrom check_password import Generate\r\n\r\nprint(Generate().passwords())  # -> ['KieSI6:65tg']\r\nprint(Generate().passwords(length=20))  # -> ['SD_qOC~v{ip07GA5WISA']\r\nprint(Generate().passwords(count=3))  # -> ['TiaZA3:42bt', 'BaoKE7^70cj', 'JuyVO9@69zd']\r\nprint(Generate().passwords(upper=False, number=False))  # -> ['pjpawb*yj=a']\r\n\r\n```\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pavelglazunov/-check-password-",
    "keywords": "",
    "license": "Apache License, Version 2.0, see LICENSE file",
    "maintainer": "",
    "maintainer_email": "",
    "name": "check-password",
    "package_url": "https://pypi.org/project/check-password/",
    "platform": null,
    "project_url": "https://pypi.org/project/check-password/",
    "project_urls": {
      "Homepage": "https://github.com/pavelglazunov/-check-password-"
    },
    "release_url": "https://pypi.org/project/check-password/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "lib for check password, email or date for validate",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16211082,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b307b05f1479c2293fc666f843e17de073ecbe2907ed5232d0e2248a7e10917e",
          "md5": "f36be169d021470dad4214fe38a84289",
          "sha256": "3c67b28c8263af78612c4f4e3090c5fe19335021e707a3ff8a574d7cb749de4e"
        },
        "downloads": -1,
        "filename": "check-password-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f36be169d021470dad4214fe38a84289",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8360,
        "upload_time": "2022-12-25T20:28:18",
        "upload_time_iso_8601": "2022-12-25T20:28:18.534509Z",
        "url": "https://files.pythonhosted.org/packages/b3/07/b05f1479c2293fc666f843e17de073ecbe2907ed5232d0e2248a7e10917e/check-password-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c982edb4518e755900933dc56b9aa3a2efff73a1809c918a8c62bf7805568d39",
          "md5": "7375f772e48de424e07e650a4532cd2a",
          "sha256": "004a84e79a777e20c34930cd00ea7dad3a3eecbd5664a065be8b70e5cc68009b"
        },
        "downloads": -1,
        "filename": "check_password-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7375f772e48de424e07e650a4532cd2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7858,
        "upload_time": "2022-12-25T20:37:15",
        "upload_time_iso_8601": "2022-12-25T20:37:15.988140Z",
        "url": "https://files.pythonhosted.org/packages/c9/82/edb4518e755900933dc56b9aa3a2efff73a1809c918a8c62bf7805568d39/check_password-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c982edb4518e755900933dc56b9aa3a2efff73a1809c918a8c62bf7805568d39",
        "md5": "7375f772e48de424e07e650a4532cd2a",
        "sha256": "004a84e79a777e20c34930cd00ea7dad3a3eecbd5664a065be8b70e5cc68009b"
      },
      "downloads": -1,
      "filename": "check_password-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7375f772e48de424e07e650a4532cd2a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7858,
      "upload_time": "2022-12-25T20:37:15",
      "upload_time_iso_8601": "2022-12-25T20:37:15.988140Z",
      "url": "https://files.pythonhosted.org/packages/c9/82/edb4518e755900933dc56b9aa3a2efff73a1809c918a8c62bf7805568d39/check_password-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}