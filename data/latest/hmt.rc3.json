{
  "info": {
    "author": "Meeshkan Dev Team",
    "author_email": "dev@hmt.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# HMT\n\n[![CircleCI](https://circleci.com/gh/meeshkan/hmt.svg?style=shield)](https://circleci.com/gh/meeshkan/hmt)\n[![PyPI](https://img.shields.io/pypi/dm/hmt.svg)](https://pypi.org/project/hmt/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://black.readthedocs.io/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)\n\nThe HTTP Mocking Toolkit (HMT) is a tool that mocks HTTP APIs for use in sandboxes as well as for automated and exploratory testing. It uses a combination of API definitions, recorded traffic and code in order to make crafting mocks as enjoyable as possible.\n\n[Chat with us on Gitter](https://gitter.im/Meeshkan/community) to let us know about questions, problems or ideas!\n\n## What's in this document\n\n- [Installation](#installation)\n- [Getting started with HMT](#getting-started-with-hmt)\n  - [Tutorial](#tutorial)\n- [Collect recordings of API traffic](#collect-recordings-of-api-traffic)\n- [Build a HMT spec from recordings](#build-a-hmt-spec-from-recordings)\n  - [Building modes](#building-modes)\n- [Mock server traffic using a HMT spec](#mock-server-traffic-using-a-hmt-spec)\n- [Development](#development)\n  - [Getting started](#getting-started)\n  - [Tests](#tests)\n  - [Type-checking](#type-checking)\n  - [Automated builds](#automated-builds)\n  - [Publishing HMT as a PyPi package](#publishing-hmt-as-a-pypi-package)\n- [Contributing](#contributing)\n  - [Code of Conduct](#code-of-conduct)\n\n## Installation\nInstall via [pip](https://pip.pypa.io/en/stable/installing/) (requires **Python 3.6+**):\n\n```bash\npip install hmt\n```\n\nmacOS users can install HMT with [Homebrew](https://brew.sh/):\n\n```sh\nbrew tap meeshkan/tap\nbrew install hmt\n```\n\nDebian and Ubuntu users can install HMT with `apt`:\n\n```sh\necho \"deb [trusted=yes] https://dl.bintray.com/meeshkan/apt all main\" | tee -a /etc/apt/sources.list\napt-get -qq update && apt-get install hmt\n```\n\n\n## Getting started with HMT\n\nThe basic HMT flow is **collect, build and mock.**\n1. First, **collect** data from recorded server traffic and/or OpenAPI specs.\n1. Then, **build** a schema that unifies these various data sources.\n1. Finally, use this schema to create a **mock** server of an API.\n\n### Tutorial\n\nThe quickest way to get an overview of HMT is to complete our interactive tutorial. It walks you through the collect, build, and mock flow - while also covering the concepts necessary for development.\n\n_Note: This tutorial has been tested on Python 3.6, 3.7, and 3.8._\n\nAfter installing HMT, you can begin the tutorial by invoking from the command line:\n\n```bash\n$ hmt tutorial\n```\n\nOnce you've run this, you should see:\n\n```bash\n    __              __ \n   / /_  ____ ___  / /_\n  / __ \\/ __ `__ \\/ __/\n / / / / / / / / / /_\n/_/ /_/_/ /_/ /_/\\__/\n\n\nThe tutorial!!\nPress ENTER to continue...\n```\n\nIf not, it's probably our fault. Please let us know by [filing an issue on this repo](https://github.com/meeshkan/hmt/issues).\n\n## Collect recordings of API traffic\n\nLet's look at how to build a HMT spec. First, you have to **collect** recordings of server traffic and/or OpenAPI server specs.\n\nTo record API traffic, the HMT CLI provides a `record` mode that captures API traffic using a proxy.\n\n```bash\n$ hmt record\n```\n\nThis command starts HMT as a reverse proxy on the default port of `8000` and creates two directories: `logs` and `specs`. \n\nWith [curl](https://curl.haxx.se/), for example, you can use HMT as a proxy like so:\n\n```bash\n$ curl http://localhost:8000/http://api.example.com\n```\n\nBy default, the recording proxy treats the path as the target URL. It then writes a [`.jsonl`](https://jsonlines.org) file containing logs of all server traffic to the `logs` directory.  All logs are created in the [`http-types`](https://github.com/meeshkan/http-types) format. This is because HMT's `build` tool expects all recordings to be represented in a `.jsonl` file containing recordings represented in the `http-types` format.\n\nFor more information about recording, including direct file writing and kafka streaming, see the [recording documentation](./docs/RECORD.md).\n\n## Build a HMT spec from recordings\n\nUsing the HMT CLI, you can **build** an OpenAPI schema from a single `.jsonl` file, in addition to any existing OpenAPI specs that describe how your service works.\n\n```bash\n$ hmt build --input-file path/to/recordings.jsonl \n```\n\n_Note: The input file should be in [JSON Lines](http://jsonlines.org/) format and every line should be in [http-types](https://github.com/meeshkan/http-types) JSON format. For an example input file, see [recordings.jsonl](./resources/recordings.jsonl)._\n\nOptionally, you can also specify an output directory using the `--out` flag followed by the path to this directory. By default, HMT will build the new OpenAPI specifications in the `specs` directory. \n\nUse dash (`--input-file -`) to read from standard input:\n\n```bash\n$ hmt build --input-file - < recordings.jsonl\n```\n### Building modes\nYou can use a mode flag to indicate how the OpenAPI spec should be built, for example:\n\n```bash\nhmt build --input-file path/to/recordings.jsonl --mode gen\n```\n\nSupported modes are:\n* gen [default] - infer a schema from the recorded data\n* replay - replay the recorded data based on exact matching\n\nFor more information about building, including mixing together the two modes and editing the created OpenAPI schema, see the [building documentation](./docs/BUILD.md).\n\n## Mock server traffic using a HMT spec\n\nYou can use an OpenAPI spec, such as the one created with `hmt build`, to create a **mock** server using HMT.\n\n```bash\n$ hmt mock path/to/dir/\n```\n\n_Note: You can specify a path to the directory your OpenAPI spec is in or a path to one specific file._\n\nFor more information about mocking, including adding custom middleware and modifying the mocking schema JIT via an admin API, see the [mocking documentation](./docs/MOCK.md).\n\n## Development\n\nHere are some useful tips for building and running HMT from source. \n\nIf you run into any issues, please [reach out to our team on Gitter](https://gitter.im/meeshkan/community).\n\n### Getting started\n\n1. Clone this repository: `git clone https://github.com/meeshkan/hmt`\n1. Create a virtual environment: `python3 -m venv .venv && source .venv/bin/activate`\n1. Install dependencies: `pip install --upgrade -e '.[dev]'`\n1. Install [`pre-commit`](https://pre-commit.com/) hooks to automatically format code as a git hook: `pre-commit install`\n\n### Tests\n\nRun all checks:\n\n```bash\n$ python setup.py test\n```\n\n#### `pytest`\n\nRun [tests/](https://github.com/meeshkan/hmt/tree/master/tests/) with `pytest`:\n\n```bash\npytest\n# or\npython setup.py test\n```\n\nConfiguration for `pytest` is found in [pytest.ini](https://github.com/meeshkan/hmt/tree/master/pytest.ini).\n\n#### Formatting\n\nFormatting is checked by the above mentioned `python setup.py test` command.\n\nTo fix formatting:\n\n```sh\n$ python setup.py format\n```\n\n#### `flake8`\n\nRun style checks:\n\n```bash\n$ flake8 .\n```\n\n#### `pyright`\n\nYou can run type-checking by installing [pyright](https://github.com/microsoft/pyright) globally:\n\n```bash\n$ npm -i -g pyright\n```\n\nAnd then running:\n\n```bash\n$ pyright --lib\n$ # or\n$ python setup.py typecheck\n```\n\nUsing the [Pyright extension](https://marketplace.visualstudio.com/items?itemName=ms-pyright.pyright) is recommended for development in VS Code.\n\n### Automated builds\n\nConfiguration for CircleCI [build pipeline](https://app.circleci.com/pipelines/github/meeshkan/hmt) can be found in [.circleci/config.yml](./.circleci/config.yml).\n\n### Publishing HMT as a PyPi package\n\nTo publish HMT as a PyPi package, complete the following steps:\n\n1. Bump the version in [setup.py](./setup.py) if the version is the same as in the published [package](https://pypi.org/project/hmt/). Commit and push.\n1. Run `python setup.py test` to check that everything works\n1. To build and upload the package, run `python setup.py upload`. Insert PyPI credentials to upload the package to `PyPI`. The command will also run `git tag` to tag the commit as a release and push the tags to remote.\n\n> To see what the different commands do, see `Command` classes in [setup.py](https://github.com/meeshkan/hmt/tree/master/setup.py).\n\n## Contributing\n\nThanks for your interest in contributing! Please take a look at our [development guide](#development) for notes on how to develop the package locally.  A great way to start contributing is to [file an issue](https://github.com/meeshkan/hmt/issues/new/choose) or [make a pull request](https://github.com/meeshkan/hmt/pulls).\n\n### Code of Conduct\n\nPlease note that this project is governed by the [Meeshkan Community Code of Conduct](https://github.com/meeshkan/code-of-conduct). By participating, you agree to abide by its terms.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/hmt/hmt",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hmt",
    "package_url": "https://pypi.org/project/hmt/",
    "platform": "",
    "project_url": "https://pypi.org/project/hmt/",
    "project_urls": {
      "Homepage": "http://github.com/hmt/hmt"
    },
    "release_url": "https://pypi.org/project/hmt/0.3.2/",
    "requires_dist": [
      "click (==7.0)",
      "lenses",
      "pyyaml",
      "jsonschema",
      "faker",
      "requests",
      "typing-extensions",
      "openapi-typed-2 (>=0.0.4)",
      "typeguard (>=2.7.0)",
      "genson",
      "http-types (<0.1.0,>=0.0.15)",
      "faust",
      "tornado (==5.1.1)",
      "urllib3 (==1.25.6)",
      "meeshkan-daemonocle",
      "clint",
      "pyfiglet",
      "progress",
      "psutil (>=5.6.3)",
      "jsonpath-rw (>=1.4.0)",
      "dataclasses ; python_version < \"3.7\"",
      "black (==19.10b0) ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pyhamcrest ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "pytest (>=5.4.1) ; extra == 'dev'",
      "pytest-asyncio ; extra == 'dev'",
      "pytest-testmon ; extra == 'dev'",
      "pytest-tornado ; extra == 'dev'",
      "pytest-watch ; extra == 'dev'",
      "requests-mock ; extra == 'dev'",
      "setuptools ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "wheel ; extra == 'dev'"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Reverse engineer services with style",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7451146,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba1fc19509f11c5f2d0dd59ff7377cb56ac9ad0d243b70c192fb26ca37522c03",
          "md5": "f1716bd255dbe708102775300b1e214c",
          "sha256": "963317f0d52ddeb03238b3c7f4a1e65af2e47a06e44f2f5f6dca19be8adc0852"
        },
        "downloads": -1,
        "filename": "hmt-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1716bd255dbe708102775300b1e214c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 119064,
        "upload_time": "2020-05-05T11:25:58",
        "upload_time_iso_8601": "2020-05-05T11:25:58.948873Z",
        "url": "https://files.pythonhosted.org/packages/ba/1f/c19509f11c5f2d0dd59ff7377cb56ac9ad0d243b70c192fb26ca37522c03/hmt-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "130b666a638c4d1421793563827efba6ba978fc2a0f4cc53ce1903a1c09d7d20",
          "md5": "e7f1c629c6e523f0e60705c8bd45c188",
          "sha256": "f98e0e957b87b633cc5fdc790a2444ae820a06e0a960c44525c178a6daf0f3c4"
        },
        "downloads": -1,
        "filename": "hmt-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7f1c629c6e523f0e60705c8bd45c188",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 55508,
        "upload_time": "2020-05-05T11:26:02",
        "upload_time_iso_8601": "2020-05-05T11:26:02.205555Z",
        "url": "https://files.pythonhosted.org/packages/13/0b/666a638c4d1421793563827efba6ba978fc2a0f4cc53ce1903a1c09d7d20/hmt-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e699fecb819db05c864b9b515d52e2fb1b451c6e76ef7f59b419869e19cf873a",
          "md5": "70e5dd480c1be5b6a8a2fc614c4541aa",
          "sha256": "1356596eabc34baf232b73f87af8c107c6d0f173bf12360edec696a5f385ad8d"
        },
        "downloads": -1,
        "filename": "hmt-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70e5dd480c1be5b6a8a2fc614c4541aa",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 128953,
        "upload_time": "2020-05-07T09:27:33",
        "upload_time_iso_8601": "2020-05-07T09:27:33.153698Z",
        "url": "https://files.pythonhosted.org/packages/e6/99/fecb819db05c864b9b515d52e2fb1b451c6e76ef7f59b419869e19cf873a/hmt-0.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52f674a40751c6a099679aaca8aa7b4d6bf3ec6c369b74337054382e518d9e0b",
          "md5": "ebd7ab912a028f65b8fd0ea139ce0602",
          "sha256": "43d2b250ff3f27f1febe1138ea950d003d5d07f19c040e1a6d2b43eaea648656"
        },
        "downloads": -1,
        "filename": "hmt-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ebd7ab912a028f65b8fd0ea139ce0602",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 64217,
        "upload_time": "2020-05-07T09:27:34",
        "upload_time_iso_8601": "2020-05-07T09:27:34.709688Z",
        "url": "https://files.pythonhosted.org/packages/52/f6/74a40751c6a099679aaca8aa7b4d6bf3ec6c369b74337054382e518d9e0b/hmt-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cf856780044030eb6a0112dbe5be6e575731f1043ca10a652fb5d893e65bd6b",
          "md5": "282e4811b2d2d03c2b2f4259e5de20b7",
          "sha256": "cabea3294b26b83ba1de9e5d7dd444f31d123ca020f8c2561794a330f0f2c208"
        },
        "downloads": -1,
        "filename": "hmt-0.3.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "282e4811b2d2d03c2b2f4259e5de20b7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 88772,
        "upload_time": "2020-06-11T09:46:17",
        "upload_time_iso_8601": "2020-06-11T09:46:17.031993Z",
        "url": "https://files.pythonhosted.org/packages/2c/f8/56780044030eb6a0112dbe5be6e575731f1043ca10a652fb5d893e65bd6b/hmt-0.3.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "229f38ff98c1765efb4d96d8142801af686631cb11406cdbf117e983786c9d04",
          "md5": "f0e853575f10e8a2159c482e079eba48",
          "sha256": "1c7aba1a3eb5b0a3f74e07a0c1355766eab38f0deedc912798f93e50d07a7276"
        },
        "downloads": -1,
        "filename": "hmt-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f0e853575f10e8a2159c482e079eba48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 64602,
        "upload_time": "2020-06-11T09:46:18",
        "upload_time_iso_8601": "2020-06-11T09:46:18.738460Z",
        "url": "https://files.pythonhosted.org/packages/22/9f/38ff98c1765efb4d96d8142801af686631cb11406cdbf117e983786c9d04/hmt-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2cf856780044030eb6a0112dbe5be6e575731f1043ca10a652fb5d893e65bd6b",
        "md5": "282e4811b2d2d03c2b2f4259e5de20b7",
        "sha256": "cabea3294b26b83ba1de9e5d7dd444f31d123ca020f8c2561794a330f0f2c208"
      },
      "downloads": -1,
      "filename": "hmt-0.3.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "282e4811b2d2d03c2b2f4259e5de20b7",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 88772,
      "upload_time": "2020-06-11T09:46:17",
      "upload_time_iso_8601": "2020-06-11T09:46:17.031993Z",
      "url": "https://files.pythonhosted.org/packages/2c/f8/56780044030eb6a0112dbe5be6e575731f1043ca10a652fb5d893e65bd6b/hmt-0.3.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "229f38ff98c1765efb4d96d8142801af686631cb11406cdbf117e983786c9d04",
        "md5": "f0e853575f10e8a2159c482e079eba48",
        "sha256": "1c7aba1a3eb5b0a3f74e07a0c1355766eab38f0deedc912798f93e50d07a7276"
      },
      "downloads": -1,
      "filename": "hmt-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f0e853575f10e8a2159c482e079eba48",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 64602,
      "upload_time": "2020-06-11T09:46:18",
      "upload_time_iso_8601": "2020-06-11T09:46:18.738460Z",
      "url": "https://files.pythonhosted.org/packages/22/9f/38ff98c1765efb4d96d8142801af686631cb11406cdbf117e983786c9d04/hmt-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}