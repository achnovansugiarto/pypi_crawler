{
  "info": {
    "author": "Dominik Niedenzu",
    "author_email": "pyadaaah@blackward.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "License :: Other/Proprietary License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Topic :: Software Development"
    ],
    "description": "The '**EnhaaancedQueues**' library contains the '**EnhQueue**' class -\ncoming with **extended / enhanced (in particular portability) capabilities**.\n\nThe '**EnhQueue**' class is inherited from '**multiprocessing.queues.JoinableQueue**' -\nwhich after that is enhanced **to work properly on all main desktop platforms**\n('**Windows**', '**macOS**' and '**Linux**').\n\n\n<u>**Windows:**</u>\n\nWindows processes do not share memory, which means, shared objects\nhave to be 'pickled' and transmitted to the respective subprocess \nvia pipe - when given as parameters to (multiprocessing) process calls.\nThe 'EnhQueue' class has been made pickable (have a look at it's \n'__ reduce __' method).\n\n\n<u>**macOS:**</u>\n\nThe 'qsize' method of the 'multiprocessing.queues.JoinableQueue' does not\nwork under some 'macOS'es (and maybe other *nixes); it might lead to a \n'NotImplementedError'.\n\nThe 'EnhQueue' class wraps 'multiprocessing.queues.JoinableQueue' to correct\nthis aspect. The additional lock used for that might also have a positive\neffect to the reliability of the methods 'empty' and 'full'.\n\n\n<u>**Miscellaneous:**</u>\n\nShutting down an application with several processes properly is a delicate\nthing, if some of said processes crashed / got stuck. The 'EnhQueue' class\nhas been equipped with a semi-blocking 'join' method - a 'join' with a timeout.\n\nDue to the parallel nature of multiprocessing, emptying a queue reliable in\na setup, where several processes could put another element in said queue during\nor after said emptying is a delicate thing too.\n\nThe 'EnhQueue' has been equipped with a 'clear' method emptying the queue in \nthe most reliable and least blocking way possible - as known to the author yet.\nIt in particular is designed to be useful during cleaning up when shutting down \nan application properly.\n\n<br>\n\nFurther infomations and links can be found on my homepage\n[https://www.blackward.de](https://www.blackward.de)  \n\nHave Fun!\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.blackward.de",
    "keywords": "",
    "license": "Proprietary License",
    "maintainer": "Dominik Niedenzu",
    "maintainer_email": "",
    "name": "enhaaancedQueues",
    "package_url": "https://pypi.org/project/enhaaancedQueues/",
    "platform": "any platform which provides python",
    "project_url": "https://pypi.org/project/enhaaancedQueues/",
    "project_urls": {
      "Homepage": "https://www.blackward.de"
    },
    "release_url": "https://pypi.org/project/enhaaancedQueues/0.7/",
    "requires_dist": null,
    "requires_python": ">= 2.5",
    "summary": "Multiprocessing queue for cross-platform development.",
    "version": "0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13160354,
  "releases": {
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7a022a3fccb79b39d708c98b2716ff03042270b73ebd501af9e69173c3ef1e9",
          "md5": "ee736d61333c64d2abacf2df52d5c587",
          "sha256": "d4c664eec5c9202826331b13a8294fad2b6007cb3993faceb72a8888fe333f5c"
        },
        "downloads": -1,
        "filename": "enhaaancedQueues-0.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee736d61333c64d2abacf2df52d5c587",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">= 2.5",
        "size": 8348,
        "upload_time": "2022-03-13T03:16:44",
        "upload_time_iso_8601": "2022-03-13T03:16:44.545210Z",
        "url": "https://files.pythonhosted.org/packages/c7/a0/22a3fccb79b39d708c98b2716ff03042270b73ebd501af9e69173c3ef1e9/enhaaancedQueues-0.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7a022a3fccb79b39d708c98b2716ff03042270b73ebd501af9e69173c3ef1e9",
        "md5": "ee736d61333c64d2abacf2df52d5c587",
        "sha256": "d4c664eec5c9202826331b13a8294fad2b6007cb3993faceb72a8888fe333f5c"
      },
      "downloads": -1,
      "filename": "enhaaancedQueues-0.7-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee736d61333c64d2abacf2df52d5c587",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">= 2.5",
      "size": 8348,
      "upload_time": "2022-03-13T03:16:44",
      "upload_time_iso_8601": "2022-03-13T03:16:44.545210Z",
      "url": "https://files.pythonhosted.org/packages/c7/a0/22a3fccb79b39d708c98b2716ff03042270b73ebd501af9e69173c3ef1e9/enhaaancedQueues-0.7-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}