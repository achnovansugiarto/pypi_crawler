{
  "info": {
    "author": "guiferviz",
    "author_email": "guiferviz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "image::./logo/logo.png[Sisyphus silhouette]\n\n\n== Sísifo - Task runner\n\nSísifo is the Spanish form of Sisyphus, in ancient Greek: Σίσυφος. This poor\nguy was punished for his self-aggrandizing craftiness and deceitfulness by\nbeing forced to roll an immense boulder up a hill only for it to roll down\nevery time it neared the top, repeating this action for eternity. More\ninformation in https://en.wikipedia.org/wiki/Sisyphus[Wikipedia].\n\nThis poor library is doomed to an eternity of performing tasks with no other\npurpose in its pitiful and miserable life. I hope you didn't make fun of this\ninsignificant library, our existence is not much more encouraging...\n\n\n=== How does it work?\n\nEssentially, Sísifo is just a library that allows you to run tasks on a data\ncollection. Therefore, the most important classes of the library are:\n\n* `sisifo.DataCollection`. A DataCollection is like a dictionary. Use a key to\nstore/retrieve any kind of value from a data collection. The values stored in a\ndata collection are called **entities**.\n* `sisifo.Task`. A task is a class with a `run(data_collection)` method that,\nusually, modifies the entities in a data collection.\n\nLet's dive into an example. The fist step is to import the core of the library.\nIt's as simple as:\n\n[source,python]\n----\nimport sisifo\n----\n\nYou can access all the relevant classes from the core of sisifo just with one\nimport. Everything else is optional, an extension of the core.\n\nLet's create our first data collection with a couple of entities.\n\n[source,python]\n----\ndata = sisifo.DataCollection()\ndata[\"entity1\"] = 1\ndata[\"entity2\"] = 2\n----\n\nAs you can see, a data collection has the same interface as a dictionary.\nTry to use `keys()`, `items()` or `<str> in data`:\n\n[source,python]\n----\ndata.keys()  # KeysView({'entity1': 1, 'entity2': 2})\ndata.items()  # ItemsView({'entity1': 1, 'entity2': 2})\n\"entity1\" in data  # True\n\"entity3\" in data  # False\n----\n\nNothing fancy so far, uh? Just a dictionary.\n\nImagine you want to add 1 to the `entity1`. You can do something like\n`data[\"entity1\"] += 1` or we can use a `sisifo.Task` for this.\n\n[source,python]\n----\nclass AddOne(sisifo.Task):\n    def run(self, data):\n        data[\"entity1\"] += 1\n----\n\nOn the one hand we have the data (`data` variable) and, on the other hand, we\nhave an operation defined inside a class (`AddOne` class). If we want to run a\ntask over a concrete data collection we need to call the `run` method in an\nobject of the class:\n\n[source,python]\n----\ntask = AddOne()\n\nprint(data)  # {'entity1': 1, 'entity2': 2}\ntask.run(data)\nprint(data)  # {'entity1': 2, 'entity2': 2}\n----\n\nWe wrote a really specific transformation, it only works for a given entity\nname `entity1`, what if we want to reuse the task also for adding one to the\n`entity2`? Instead of using a hard-coded entity name in the run method we can\ncreate a property in the `AddOne` class.\n\n[source,python]\n----\nclass AddOne(sisifo.Task):\n    def __init__(self, entity, **kwargs):\n        super().__init__(**kwargs)  # this is needed to initialize the super\n                                    # class sisifo.Task\n        self.entity = entity\n\n    def run(self, data):\n        data[self.entity] += 1\n----\n\nNow we can reuse the same task on different entities:\n\n[source,python]\n----\ndata = sisifo.DataCollection()\ndata[\"entity1\"] = 1\ndata[\"entity2\"] = 2\n\ntask1 = AddOne(\"entity1\")\ntask2 = AddOne(\"entity2\")\n\nprint(data)  # {'entity1': 1, 'entity2': 2}\ntask1.run(data)\ntask2.run(data)\nprint(data)  # {'entity1': 2, 'entity2': 3}\n----\n\nInstead of running all tasks one by one we can use a pipeline. A pipeline is\nan extension of the core sisifo code, so we need to import the common namespace\nand create the task from there:\n\n[source,python]\n----\nimport sisifo.namespaces.common as common_tasks\n\n\ndata = sisifo.DataCollection()\ndata[\"entity1\"] = 1\ndata[\"entity2\"] = 2\n\npipe = common_tasks.Pipeline([\n    AddOne(\"entity1\"),\n    AddOne(\"entity2\"),\n])\n\nprint(data)  # {'entity1': 1, 'entity2': 2}\npipe.run(data)\nprint(data)  # {'entity1': 2, 'entity2': 3}\n----\n\nCan we easily read a definition of this pipeline from a configuration file? Yes!\nsisifo has a decorator that allows you to register a class in the sisifo task\nregister and you can easily create instances from that class using a dynamic\napproach, that is, reading the name of the class from a string instead of calling\nthe specific class, like: `sisifo.create_task(dict(task=\"AddOne\", entity=\"entity1\"))`.\nexplain concepts of namespaces... TO BE CONTINUED.\n\n\n== Can Sísifo do X?\n\nIf you have any concerns about whether or not sisifo can do anything, think\nabout the answer to this other question: *Can Python do X?*.  If you can do it\nwith Python it means it can be done using sísifo. Maybe not out-of-the-box with\nthe existing tasks, but you can do it for sure after some development.\n\nSisifo is just a way of calling functions one after another. I think the main\nadvantages of the sisifo approach is that you are some kind forced to split you\ncode in small reusable pieces of code (tasks) and you can run those tasks just\nreading from a configuration file.\n",
    "description_content_type": "text/plain",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/guiferviz/sisifo",
    "keywords": "tasks,framework,pipeline",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sisifo",
    "package_url": "https://pypi.org/project/sisifo/",
    "platform": "",
    "project_url": "https://pypi.org/project/sisifo/",
    "project_urls": {
      "Homepage": "https://github.com/guiferviz/sisifo",
      "Repository": "https://github.com/guiferviz/sisifo"
    },
    "release_url": "https://pypi.org/project/sisifo/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "Generic framework for running data pipelines",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11373071,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "662089a6e7a37af31fa215b24cfbe7e234d4c2ae1edf8ed4771e67362bbd49ec",
          "md5": "17f5d843767c5219db87b34e7a9a99a4",
          "sha256": "88b675f3d0bee01ccf2aa04f1743fe5dddfea0306f26097a3585e47f617eaba6"
        },
        "downloads": -1,
        "filename": "sisifo-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17f5d843767c5219db87b34e7a9a99a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0.0",
        "size": 10085,
        "upload_time": "2021-09-04T01:15:42",
        "upload_time_iso_8601": "2021-09-04T01:15:42.762780Z",
        "url": "https://files.pythonhosted.org/packages/66/20/89a6e7a37af31fa215b24cfbe7e234d4c2ae1edf8ed4771e67362bbd49ec/sisifo-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4cac22b0eaf3cab046495875682161006e989bdc0b229c26fc843c11f84a1f78",
          "md5": "7e1649414ba61027b28cb3195e5ea4c3",
          "sha256": "82bacba7f2f65ca9f580afa3a557aabde4bc2c3114a66f67e8a72f0897c22375"
        },
        "downloads": -1,
        "filename": "sisifo-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7e1649414ba61027b28cb3195e5ea4c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<4.0.0",
        "size": 7565,
        "upload_time": "2021-09-04T01:15:45",
        "upload_time_iso_8601": "2021-09-04T01:15:45.214788Z",
        "url": "https://files.pythonhosted.org/packages/4c/ac/22b0eaf3cab046495875682161006e989bdc0b229c26fc843c11f84a1f78/sisifo-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ef04983a3d7fe24dfd35f0eef0d2b3fc76588d547b8925426962a2b7c56e33e",
          "md5": "5180bb77841cb6342faa4c09c2a78d02",
          "sha256": "e446d732d337229e26ab702df9c4fb4f64f1126b0f384cb1b92f8f988a5d62d3"
        },
        "downloads": -1,
        "filename": "sisifo-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5180bb77841cb6342faa4c09c2a78d02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 10259,
        "upload_time": "2021-09-06T01:01:11",
        "upload_time_iso_8601": "2021-09-06T01:01:11.070721Z",
        "url": "https://files.pythonhosted.org/packages/3e/f0/4983a3d7fe24dfd35f0eef0d2b3fc76588d547b8925426962a2b7c56e33e/sisifo-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47ad27f933f2920563db9b9a9ea5ecfdf2fe2b8b631ff90dad71e47a204c45bf",
          "md5": "d11d9e9dd73f54dc47da7330ea0e82a7",
          "sha256": "9740a1bf61ff5717a02d2fe4fb6ee03aca75cda466c9f53db2164e962d8269d9"
        },
        "downloads": -1,
        "filename": "sisifo-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d11d9e9dd73f54dc47da7330ea0e82a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 9927,
        "upload_time": "2021-09-06T01:01:12",
        "upload_time_iso_8601": "2021-09-06T01:01:12.426780Z",
        "url": "https://files.pythonhosted.org/packages/47/ad/27f933f2920563db9b9a9ea5ecfdf2fe2b8b631ff90dad71e47a204c45bf/sisifo-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3ef04983a3d7fe24dfd35f0eef0d2b3fc76588d547b8925426962a2b7c56e33e",
        "md5": "5180bb77841cb6342faa4c09c2a78d02",
        "sha256": "e446d732d337229e26ab702df9c4fb4f64f1126b0f384cb1b92f8f988a5d62d3"
      },
      "downloads": -1,
      "filename": "sisifo-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5180bb77841cb6342faa4c09c2a78d02",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 10259,
      "upload_time": "2021-09-06T01:01:11",
      "upload_time_iso_8601": "2021-09-06T01:01:11.070721Z",
      "url": "https://files.pythonhosted.org/packages/3e/f0/4983a3d7fe24dfd35f0eef0d2b3fc76588d547b8925426962a2b7c56e33e/sisifo-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "47ad27f933f2920563db9b9a9ea5ecfdf2fe2b8b631ff90dad71e47a204c45bf",
        "md5": "d11d9e9dd73f54dc47da7330ea0e82a7",
        "sha256": "9740a1bf61ff5717a02d2fe4fb6ee03aca75cda466c9f53db2164e962d8269d9"
      },
      "downloads": -1,
      "filename": "sisifo-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d11d9e9dd73f54dc47da7330ea0e82a7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 9927,
      "upload_time": "2021-09-06T01:01:12",
      "upload_time_iso_8601": "2021-09-06T01:01:12.426780Z",
      "url": "https://files.pythonhosted.org/packages/47/ad/27f933f2920563db9b9a9ea5ecfdf2fe2b8b631ff90dad71e47a204c45bf/sisifo-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}