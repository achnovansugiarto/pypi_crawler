{
  "info": {
    "author": "Brent Barbachem",
    "author_email": "barbacbd@dukes.jmu.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development"
    ],
    "description": "<h1 align=\"center\">\n  <br>Cluster Criteria</br>\n</h1>\n\n<h2 align=\"center\">\n\n[![Build](https://github.com/barbacbd/ClusterCrit/actions/workflows/python-package.yml/badge.svg)](https://github.com/barbacbd/ClusterCrit/actions/workflows/python-package.yml)\n[![PyPI version fury.io](https://badge.fury.io/py/cluster-crit.svg)](https://pypi.python.org/pypi/cluster-crit/)\n\n\n## Description\n\nThe project is a python extension for the [cluster crit](https://cran.r-project.org/web/packages/clusterCrit/index.html) `R` package. The project also contains the ability to select the optimal results when running Cluster Criteria algorithms on any number of clusters.\n\n## External Dependencies\n\nThe R programming language is a dependency of this project, and it **must** be installed prior to installing this project. Please visit the [R Downloads Page](https://www.r-project.org/).\n\n\n## Internal Criteria\n\nThe function intCriteria calculates internal clustering indices. The list of all internal criteria can be found in [criteria.py](https://github.com/barbacbd/ClusterCrit/blob/main/cluster_crit/criteria.py).\n\n## External Criteria\n\nThe function extCriteria calculates external clustering indices in order to compare two partitions. The list of all external criteria can be found in [criteria.py](https://github.com/barbacbd/ClusterCrit/blob/main/cluster_crit/criteria.py).\n\n## Best Criterion\n\nGiven a vector of several clustering quality index values computed with a given criterion, the function bestCriterion returns the index of the \"best\" one in the sense of the specified criterion.\nTypically, a set of data has been clusterized several times (using different algorithms or specifying a different number of clusters) and a clustering index has been calculated each\ntime. The bestCriterion function determines which value is considered the best according to the given clustering index. For instance, if one uses the Calinski_Harabasz index, the best\nvalue is the largest one. A list of all the supported criteria can be obtained with the getCriteriaNames function. The criterion name (crit argument) is case insensitive and can be abbreviated.\n\n## Get Criteria Names\n\nGet a list of Criteria Names.\n\n- The user can return Internal vs External Criteria Names by setting the `internal` variable to `True` vs `False` respectively.\n- When retrieving Internal Criteria, the user can set `includeGCI` to `False` to skip returning any criteria with GDI-XXX as the name.\n- The user can also control the return type by setting `returnEnumerations` to `True` (return Enumerations) or `False` to return the string representations of the criteria.\n\n## Examples\n\nThe following sections are a set of brief/simple examples of this library. To setup/initialize these tests, you can use the following steps:\n\n1. Install All External Dependencies (see external dependencies above).\n2. Install `kmeans1d`: `python -m pip install kmeans1d`\n3. Create the original set of data (this is a sample taken from a large data set).\n\n```python\noriginal = [\n    -0.018, -0.03, 0.025, -0.073, -0.007, 0.052, -0.042, -0.025, -0.056, 0.005,\n    0.131, 0.059, 0.15, 0.157, 0.036, 0.096, -0.027, -0.002, 0.069, 0.099,\n    0.067, 0.101, 0.105, 0.115, 0.108, -0.036, -0.109, -0.133, -0.061, -0.045,\n    -0.058, 0.017, 0.007, -0.093, 0.077, 0.085, 0.1, -0.005, 0.009, 0.16\n]\n```\n\n**Note**: _It is advised that you convert this data when it is a 1-D data set like above_.\n\n```python\nimport numpy as np\n\noriginal = np.asarray([\n    -0.018, -0.03, 0.025, -0.073, -0.007, 0.052, -0.042, -0.025, -0.056, 0.005,\n    0.131, 0.059, 0.15, 0.157, 0.036, 0.096, -0.027, -0.002, 0.069, 0.099,\n    0.067, 0.101, 0.105, 0.115, 0.108, -0.036, -0.109, -0.133, -0.061, -0.045,\n    -0.058, 0.017, 0.007, -0.093, 0.077, 0.085, 0.1, -0.005, 0.009, 0.16\n])\noriginal = original.reshape(-1, 1)\n```\n\n4. Create a wrapper for `kmeans` so that we can generate the clusters for the above data set.\n\n```python\ndef k_means_wrapper(data_set, k):\n    matching_clusters, centroids = kmeans1dc(data_set, k)\n    # R uses values 1-N not 0-N-1, so let's update here\n    matching_clusters = [x+1 for x in matching_clusters]\n    return matching_clusters\n```\n\n5. Cluster the data using values of K = 2,3,4,5,6 ...\n\n```python\nclusters = [\n    k_means_wrapper(original, 2),\n    k_means_wrapper(original, 3),\n    k_means_wrapper(original, 4),\n    k_means_wrapper(original, 5),\n    k_means_wrapper(original, 6)\n]\n```\n\nYou should now have values similar to the following:\n\n```python\nclusters = [\n    [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2],\n    [2, 2, 2, 1, 2, 3, 1, 2, 1, 2, 3, 3, 3, 3, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 2, 2, 1, 3, 3, 3, 2, 2, 3],\n    [2, 2, 2, 1, 2, 3, 1, 2, 1, 2, 4, 3, 4, 4, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 2, 2, 1, 3, 3, 3, 2, 2, 4],\n    [2, 2, 3, 2, 3, 4, 2, 2, 2, 3, 5, 4, 5, 5, 3, 4, 2, 3, 4, 4, 4, 4, 4, 4, 4, 2, 1, 1, 2, 2, 2, 3, 3, 1, 4, 4, 4, 3, 3, 5],\n    [3, 2, 3, 2, 3, 4, 2, 2, 2, 3, 6, 4, 6, 6, 4, 5, 2, 3, 4, 5, 4, 5, 5, 5, 5, 2, 1, 1, 2, 2, 2, 3, 3, 1, 4, 5, 5, 3, 3, 6],\n]\n```\n\nThese clusters can be used as parameters to IntCriteria. Follow similar steps to produce data for ExtCriteria.\n\n\n### Internal Criteria\n\nThe following will receive the results of the clusters with the `Dunn` Criteria on cluster numbers two through six.\n\n```python\ncriteria = CriteriaInternal.Dunn\n\nvalues = []\nfor cluster in clusters:\n    output = intCriteria(original, cluster, [criteria])\n    values.append(output[criteria.name])\n```\n\n### External Criteria\n\n```python\nfrom random import randint\n\n# generate two artificial partitions\npart1 = [randint(1,3) for _ in range(150)]\npart2 = [randint(1,5) for _ in range(150)]\n\noutput = extCriteria(part1, part2, [CriteriaExternal.Czekanowski_Dice])\n```\n\n### Best Criterion\n\nContinuing with the IntCriteria example above, the following will print the index of the best cluster size given the\noutputs of the Internal Crtieria evaluation.\n\n```python\ncrit = np.asarray(values)\nprint(bestCriterion(crit, criteria.name))\n```\n\n### Get Criteria Names\n\nThe example will get all InternalCriteria, excluding `GDI-XXX` criteria, and the values will be returned as enumerations.\n\n```python\ncriteria = getCriteriaNames(True, False, True)\n```\n\nThe provided parameters are defaults, and they do **not** need to be specified. \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/barbacbd/ClusterCrit",
    "keywords": "cluster,crit,criteria,selection",
    "license": "MIT",
    "maintainer": "Brent Barbachem",
    "maintainer_email": "barbacbd@dukes.jmu.edu",
    "name": "cluster-crit",
    "package_url": "https://pypi.org/project/cluster-crit/",
    "platform": null,
    "project_url": "https://pypi.org/project/cluster-crit/",
    "project_urls": {
      "Homepage": "https://github.com/barbacbd/ClusterCrit"
    },
    "release_url": "https://pypi.org/project/cluster-crit/1.0.1/",
    "requires_dist": [
      "pandas",
      "numpy",
      "rpy2"
    ],
    "requires_python": "<4,>=3.7",
    "summary": "Calculate various internal clustering validation or quality criteria.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15271233,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59fc66afff3c1b0391b2cbdce3d0ad23a0fa717515c8abe786ea37c4e272ca02",
          "md5": "54ded28ded0f8aa280d2e9a54f2ebde6",
          "sha256": "cc89737ebcdea43c5953cc91c78b48af54081b389985df5780b1aa8b37b9af14"
        },
        "downloads": -1,
        "filename": "cluster_crit-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54ded28ded0f8aa280d2e9a54f2ebde6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4,>=3.7",
        "size": 9259,
        "upload_time": "2022-09-30T19:50:26",
        "upload_time_iso_8601": "2022-09-30T19:50:26.187359Z",
        "url": "https://files.pythonhosted.org/packages/59/fc/66afff3c1b0391b2cbdce3d0ad23a0fa717515c8abe786ea37c4e272ca02/cluster_crit-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5eed34de96b82c21eca68673bc7d0a43b5d764115e323855d3b30d1d0f37b284",
          "md5": "99c1142468377979627b4ac2d46c1ebf",
          "sha256": "a2b5c6fd92a2e00926ac3f064a0e88c45a4ca23a6a59749b64d4172387e9b2dd"
        },
        "downloads": -1,
        "filename": "cluster-crit-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "99c1142468377979627b4ac2d46c1ebf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.7",
        "size": 7220,
        "upload_time": "2022-09-30T19:50:28",
        "upload_time_iso_8601": "2022-09-30T19:50:28.752110Z",
        "url": "https://files.pythonhosted.org/packages/5e/ed/34de96b82c21eca68673bc7d0a43b5d764115e323855d3b30d1d0f37b284/cluster-crit-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5813679017c414377ca5ae658e7abc4fceecc6bfba10bb02b17adef26ea14593",
          "md5": "12c4eb8faeb9d1058d6eb1961c1d07b7",
          "sha256": "38bf8dde72245d492f056c9e5980143d5205ec5ae0b851278018f36232d33fe0"
        },
        "downloads": -1,
        "filename": "cluster_crit-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12c4eb8faeb9d1058d6eb1961c1d07b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<4,>=3.7",
        "size": 8525,
        "upload_time": "2022-09-30T20:15:41",
        "upload_time_iso_8601": "2022-09-30T20:15:41.308259Z",
        "url": "https://files.pythonhosted.org/packages/58/13/679017c414377ca5ae658e7abc4fceecc6bfba10bb02b17adef26ea14593/cluster_crit-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c78abb62da4fd1d389d5949d05e62a40a96fd5a0c52fc0477afc582c6d9f0c2d",
          "md5": "895e727803ae52f39eb57a32531d101d",
          "sha256": "0e54a2c5c49e67b744c25a22b5065eab8e553f350127c695a2ef9705f1c936dc"
        },
        "downloads": -1,
        "filename": "cluster-crit-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "895e727803ae52f39eb57a32531d101d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.7",
        "size": 7329,
        "upload_time": "2022-09-30T20:15:42",
        "upload_time_iso_8601": "2022-09-30T20:15:42.406317Z",
        "url": "https://files.pythonhosted.org/packages/c7/8a/bb62da4fd1d389d5949d05e62a40a96fd5a0c52fc0477afc582c6d9f0c2d/cluster-crit-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5813679017c414377ca5ae658e7abc4fceecc6bfba10bb02b17adef26ea14593",
        "md5": "12c4eb8faeb9d1058d6eb1961c1d07b7",
        "sha256": "38bf8dde72245d492f056c9e5980143d5205ec5ae0b851278018f36232d33fe0"
      },
      "downloads": -1,
      "filename": "cluster_crit-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "12c4eb8faeb9d1058d6eb1961c1d07b7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<4,>=3.7",
      "size": 8525,
      "upload_time": "2022-09-30T20:15:41",
      "upload_time_iso_8601": "2022-09-30T20:15:41.308259Z",
      "url": "https://files.pythonhosted.org/packages/58/13/679017c414377ca5ae658e7abc4fceecc6bfba10bb02b17adef26ea14593/cluster_crit-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c78abb62da4fd1d389d5949d05e62a40a96fd5a0c52fc0477afc582c6d9f0c2d",
        "md5": "895e727803ae52f39eb57a32531d101d",
        "sha256": "0e54a2c5c49e67b744c25a22b5065eab8e553f350127c695a2ef9705f1c936dc"
      },
      "downloads": -1,
      "filename": "cluster-crit-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "895e727803ae52f39eb57a32531d101d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<4,>=3.7",
      "size": 7329,
      "upload_time": "2022-09-30T20:15:42",
      "upload_time_iso_8601": "2022-09-30T20:15:42.406317Z",
      "url": "https://files.pythonhosted.org/packages/c7/8a/bb62da4fd1d389d5949d05e62a40a96fd5a0c52fc0477afc582c6d9f0c2d/cluster-crit-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}