{
  "info": {
    "author": "Martin Eberlein",
    "author_email": "martin.eberlein@hu-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Testing"
    ],
    "description": "[![Tests](https://github.com/martineberlein/alhazen-py/actions/workflows/test_alhazen.yml/badge.svg)](https://github.com/martineberlein/alhazen-py/actions/workflows/test_alhazen.yml)\n&nbsp;\n\n\n# alhazen-py\n\nThis repository contains a complete python implementation of the debugging tool **Alhazen**,\ninitially proposed by Kampmann et al. [[KHZ2020](https://dl.acm.org/doi/abs/10.1145/3368089.3409687)].\nWith this reimplementation we not only provide a concise and fast version of **Alhazen**,\nwe also include more machine learning models to explain the circumstances of failing programs.\n\n### How to use _Alhazen_\n\nTo illustrate _Alhazen_’s capabilities, we start with a quick motivating example. First, let us introduce our program under test: The Calculator.\n\n```python\nimport math\n\ndef arith_eval(inp) -> float:\n    return eval(\n        str(inp), {\"sqrt\": math.sqrt, \"sin\": math.sin, \"cos\": math.cos, \"tan\": math.tan}\n    )\n```\n\nThis infamous program accepts arithmetic equations, trigonometric functions and allows us to calculate the square root.\nTo help us determine faulty behavior, i.e., a crash, we implement an evaluation function\n\n```python \nfrom alhazen.oracle import OracleResult\n\ndef prop(inp: str) -> bool:\n    try:\n        arith_eval(inp)\n        return OracleResult.NO_BUG\n    except ValueError:\n        return OracleResult.BUG\n    return OracleResult.UNDEF\n``` \n\nthat takes an input file and returns whether a bug occurred during the evaluation of the mathematical equations (`BUG=True`, `NO_BUG=False`). \nWe can now test the calculator with some sample inputs:\n\n```python\ninputs = ['cos(10)', 'sqrt(28367)', 'tan(-12)', 'sqrt(-3)']\nprint([(x, prop(x)) for x in inputs])\n```\n\nThe output looks like this:\n\n```\n[('cos(10)', OracleResult.NO_BUG),\n ('sqrt(28367)', OracleResult.NO_BUG),\n ('tan(-12)', OracleResult.NO_BUG),\n ('sqrt(-3)', OracleResult.BUG)]\n```\n\nWe see that `sqrt(-3)` results in the failure of our calculator program.\nWe can now use **Alhazen** to learn the root causes of the program's failure.\n\nFirst, we need to define the input format of the calculator with a grammar:\n```python\nimport string\n\ngrammar = {\n    \"<start>\": [\"<arith_expr>\"],\n    \"<arith_expr>\": [\"<function>(<number>)\"],\n    \"<function>\": [\"sqrt\", \"sin\", \"cos\", \"tan\"],\n    \"<number>\": [\"<maybe_minus><onenine><maybe_digits>\"],\n    \"<maybe_minus>\": [\"\", \"-\"],\n    \"<onenine>\": [str(num) for num in range(1, 10)],\n    \"<digit>\": list(string.digits),\n    \"<maybe_digits>\": [\"\", \"<digits>\"],\n    \"<digits>\": [\"<digit>\", \"<digit><digits>\"],\n}\n```\n\nThen, we can call **Alhazen** with the grammar, some sample inputs, and the evaluation function (program under test).\n\n```python\nfrom alhazen import Alhazen\n\nalhazen = Alhazen(\n    initial_inputs=inputs,\n    grammar=grammar,\n    evaluation_function=prop,\n)\ntrees = alhazen.run()\n```\n\nBy default, **Alhazen** will do _10_ iterations of its refinement process.\nFinally, **Alhazen** returns the learned decision tree that describes the failure-inducing inputs.\n\nFor our calculator, the learned decision tree looks something like this:\n\n![LearnedDecisionTree](img/DecisionTree.png)\n\nWe see that the failure occurs whenever we use the _sqrt(x)_ function and the number x has a negative sign!\n\n## Project Structure\n\nIn this repository, you find:\n\n- the _reimplementation_ and [source code](./src/alhazen) of **Alhazen-py**, and\n- a complete introduction ([jupyter-notebook](./notebooks/guide)) on how to use **Alhazen-py** and how you can add your own _Learners_ and _Generators_.\n\n\n## Install, Development, Testing, Build\n\n### Install\nIf all external dependencies are available, a simple pip install alhazen-py suffices.\nWe recommend installing **alhazen-py** inside a virtual environment (virtualenv):\n\n```\npython3.10 -m venv venv\nsource venv/bin/activate\n\npip install --upgrade pip\npip install alhazen-py\n```\n\nNow, the alhazen command should be available on the command line within the virtual environment.\n\n### Development and Testing\n\nFor development, we recommend using **alhazen-py** inside a virtual environment (virtualenv).\nBy thing the following steps in a standard shell (bash), one can run the Alhazen tests:\n\n```\ngit clone https://github.com/martineberlein/alhazen-py.git\ncd alhazen-py/\n\npython3.10 -m venv venv\nsource venv/bin/activate\n\npip install --upgrade pip\n\n# Run tests\npip install -e .[dev]\npython3 -m pytest\n```\n\n### Build\n\n**alhazen-py** is build locally as follows:\n\n```\ngit clone https://github.com/martineberlein/alhazen-py.git\ncd alhazen-py/\n\npython3.10 -m venv venv\nsource venv/bin/activate\n\npip install --upgrade pip\npip install --upgrade build\npython3 -m build\n```\n\nThen, you will find the built wheel (*.whl) in the dist/ directory.\n\n## Contributors\n\nThe initial idea for writing the guide was to explain to our students at Humboldt-Universität Zu Berlin how to use _Alhazen_ to determine the failure circumstances of a program.\nThe original notebooks were a joint project with my colleague [Hoang Lam Nguyen](https://www.informatik.hu-berlin.de/en/Members/hoang-lam-nguyen) from Humboldt-Universität Zu Berlin.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/martineberlein/alhazen-py",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alhazen-py",
    "package_url": "https://pypi.org/project/alhazen-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/alhazen-py/",
    "project_urls": {
      "Bug Tracker": "https://github.com/martineberlein/alhazen-py/issues",
      "Homepage": "https://github.com/martineberlein/alhazen-py"
    },
    "release_url": "https://pypi.org/project/alhazen-py/0.0.2/",
    "requires_dist": [
      "fuzzingbook (~=1.1)",
      "isla-solver (~=1.10)",
      "islearn (>=0.2.10)",
      "shap (>=0.41)",
      "lightgbm (>=3.3.2)",
      "z3-solver (>=4.10.2.0)",
      "pandas (~=1.4.4)",
      "numpy (~=1.23.2)",
      "scikit-learn (~=1.1.2)",
      "pytest (>=7.2.0) ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "black ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Python version of the debugging tool Alhazen",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17364644,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62ed2a63d90eb224dc679ef5ca0ba667a61e949643764e60ba0332c305cce291",
          "md5": "306256dba5773de6a7d483ff1346d1b1",
          "sha256": "6b48d5810597cf066fdbc82a941c8f9ffeefb869396f35276b5467c45255cfa5"
        },
        "downloads": -1,
        "filename": "alhazen_py-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "306256dba5773de6a7d483ff1346d1b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24512,
        "upload_time": "2023-02-17T09:05:50",
        "upload_time_iso_8601": "2023-02-17T09:05:50.015293Z",
        "url": "https://files.pythonhosted.org/packages/62/ed/2a63d90eb224dc679ef5ca0ba667a61e949643764e60ba0332c305cce291/alhazen_py-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50fe69470c4e1a4f825b3ce3e328af994d0c2c14427e91bfbcad893f0350a833",
          "md5": "59480c5233d5ca1c378c7b230c41ab28",
          "sha256": "a3caaa970e92d1af2d063806c46ccbb9b1bbec541c2314cbcdf7ceb0e5987fde"
        },
        "downloads": -1,
        "filename": "alhazen-py-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "59480c5233d5ca1c378c7b230c41ab28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25473,
        "upload_time": "2023-02-17T09:05:52",
        "upload_time_iso_8601": "2023-02-17T09:05:52.198577Z",
        "url": "https://files.pythonhosted.org/packages/50/fe/69470c4e1a4f825b3ce3e328af994d0c2c14427e91bfbcad893f0350a833/alhazen-py-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "020b38c5872cf9a18d8266f2b85943b5f9eba206b8d437f29d45fac4956283ed",
          "md5": "0e79d3addc97ebace8f70e4a1eb3361d",
          "sha256": "678fe582b1b116bc23bb8432c56b100b03338a02a1760804bc1b41ef98ef1cd0"
        },
        "downloads": -1,
        "filename": "alhazen_py-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e79d3addc97ebace8f70e4a1eb3361d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27632,
        "upload_time": "2023-03-20T14:34:48",
        "upload_time_iso_8601": "2023-03-20T14:34:48.911692Z",
        "url": "https://files.pythonhosted.org/packages/02/0b/38c5872cf9a18d8266f2b85943b5f9eba206b8d437f29d45fac4956283ed/alhazen_py-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d75a3925dec903beba4711f2fec40561f8b1ba43504e9614ef7e7228036e4af4",
          "md5": "b43abed33fc70d68afb530f823307232",
          "sha256": "3be2b9188f7c9d51f32223ab9494d77f01a4be0efa23c40768c80b98153c34ca"
        },
        "downloads": -1,
        "filename": "alhazen-py-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b43abed33fc70d68afb530f823307232",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29105,
        "upload_time": "2023-03-20T14:34:51",
        "upload_time_iso_8601": "2023-03-20T14:34:51.464846Z",
        "url": "https://files.pythonhosted.org/packages/d7/5a/3925dec903beba4711f2fec40561f8b1ba43504e9614ef7e7228036e4af4/alhazen-py-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "020b38c5872cf9a18d8266f2b85943b5f9eba206b8d437f29d45fac4956283ed",
        "md5": "0e79d3addc97ebace8f70e4a1eb3361d",
        "sha256": "678fe582b1b116bc23bb8432c56b100b03338a02a1760804bc1b41ef98ef1cd0"
      },
      "downloads": -1,
      "filename": "alhazen_py-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0e79d3addc97ebace8f70e4a1eb3361d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 27632,
      "upload_time": "2023-03-20T14:34:48",
      "upload_time_iso_8601": "2023-03-20T14:34:48.911692Z",
      "url": "https://files.pythonhosted.org/packages/02/0b/38c5872cf9a18d8266f2b85943b5f9eba206b8d437f29d45fac4956283ed/alhazen_py-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d75a3925dec903beba4711f2fec40561f8b1ba43504e9614ef7e7228036e4af4",
        "md5": "b43abed33fc70d68afb530f823307232",
        "sha256": "3be2b9188f7c9d51f32223ab9494d77f01a4be0efa23c40768c80b98153c34ca"
      },
      "downloads": -1,
      "filename": "alhazen-py-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b43abed33fc70d68afb530f823307232",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29105,
      "upload_time": "2023-03-20T14:34:51",
      "upload_time_iso_8601": "2023-03-20T14:34:51.464846Z",
      "url": "https://files.pythonhosted.org/packages/d7/5a/3925dec903beba4711f2fec40561f8b1ba43504e9614ef7e7228036e4af4/alhazen-py-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}