{
  "info": {
    "author": "Workflows and Distributed Computing Group (WDC) - Barcelona Supercomputing Center (BSC)",
    "author_email": "support-compss@bsc.es",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development",
      "Topic :: System :: Distributed Computing",
      "Topic :: Utilities"
    ],
    "description": "-----------------------------------\nPyCOMPSs programming model Player\n-----------------------------------\n\nIntroduction\n============\n\nThe PyCOMPSs player (pycompss) provides a tool to use PyCOMPSs within\nlocal machines interactively through docker images. This tool has been\nimplemented on top of `PyCOMPSs programming\nmodel <http://compss.bsc.es>`__, and it is being developed by the\n`Workflows and Distributed Computing\ngroup <https://github.com/bsc-wdc>`__ of the `Barcelona Supercomputing\nCenter <https://www.bsc.es/>`__.\n\nContents\n========\n\n-  `Quickstart <#quickstart>`__\n-  `License <#license>`__\n\nQuickstart\n==========\n\nThere are two ways in which you can get started with PyCOMPSs. You can\nperform a local installation by installing the `pycompss\npackage <https://pypi.org/project/pycompss/>`__, or you can use it\nthrough our ready-to-use docker image thorugh this `pycompss-player\ntool <#Installation>`__.\n\nInstallation\n~~~~~~~~~~~~\n\nDependencies\n^^^^^^^^^^^^\n\npycompss-player currently requires:\n\n-  docker >= 17.12.0-ce\n\nInstallation steps\n^^^^^^^^^^^^^^^^^^\n\n1. Install docker (continue with step 2 if already installed)\n\n   -  pycompss-player requires **docker 17.12.0-ce** or greater.\n\n   1. Follow these instructions\n\n      -  `Docker for\n         Mac <https://store.docker.com/editions/community/docker-ce-desktop-mac>`__.\n         Or, if you prefer to use `Homebrew <https://brew.sh/>`__.\n\n      -  `Docker for\n         Ubuntu <https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce-1>`__.\n\n      -  `Docker for Arch\n         Linux <https://wiki.archlinux.org/index.php/Docker#Installation>`__.\n\n      Be aware that for some distros the docker package has been renamed\n      from ``docker`` to ``docker-ce``. Make sure you install the new\n      package.\n\n   2. Add user to docker group to run pycompss as a non-root user.\n\n      -  `Instructions <https://docs.docker.com/install/linux/linux-postinstall/>`__\n\n   3. Check that docker is correctly installed\n\n   .. code:: bash\n\n       docker --version\n       docker ps # this should be empty as no docker processes are yet running.\n\n   4. Install\n      `docker-py <https://docker-py.readthedocs.io/en/stable/>`__\n\n   .. code:: bash\n\n       python3 -m pip install docker\n\n2. Install pycompss-player:\n\n.. code:: bash\n\n    python3 -m pip install pycompss-player\n\nThis should add the pycompss-player executables (``pycompss``,\n``compss`` and ``dislib``) to your path. They can be used indiferently.\n\n**Warning:** The user executable path may not be automatically exported\ninto the ``PATH`` environment variable. So, take this into account if\ninstalled with the ``--user`` flag, since the\n``pycompss``\\ \\|\\ ``compss`` command will be unreachable until the path\nis exported into ``PATH``.\n\nUsage\n~~~~~\n\nStart ``pycompss`` in your development directory\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nInitialize the COMPSs infrastructure where your source code will be (you\ncan re-init anytime). This will allow docker to access your local code\nand run it inside the container.\n\n**Note** that the first time needs to download the docker image from the\nregistry, and it may take a while.\n\n.. code:: bash\n\n    # Without a path it operates on the current working directory.\n    pycompss init\n\n    # You can also provide a path\n    pycompss init -w /home/user/replace/path/\n\n    # Or the COMPSs docker image to use\n    pycompss init -i compss/compss:2.10\n\n    # Or both\n    pycompss init -w /home/user/replace/path/ -i compss/compss:2.10\n\nRunning applications\n^^^^^^^^^^^^^^^^^^^^\n\nFirst clone the PyCOMPSs' tutorial apps repository:\n\n.. code:: bash\n\n    git clone https://github.com/bsc-wdc/tutorial_apps.git\n\nInit the COMPSs environment in the root of the repository. The source\nfiles path are resolved from the init directory which sometimes can be\nconfusing. As a rule of thumb, initialize the library in a current\ndirectory and check the paths are correct running the file with\n``python3 path_to/file.py`` (in this case\n``python3 python/simple/src/simple.py``).\n\n.. code:: bash\n\n    cd tutorial_apps\n    pycompss init\n    pycompss run python/simple/src/simple.py 1\n\nThe log files of the execution can be found at $HOME/.COMPSs.\n\nYou can also init the COMPSs environment inside the examples folder.\nThis will mount the examples directory inside the container so you can\nexecute it without adding the path:\n\n.. code:: bash\n\n    cd python/simple/src\n    pycompss init\n    pycompss run simple.py 1\n\nRunning the COMPSs monitor\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe COMPSs monitor can be started using the ``pycompss monitor start``\ncommand. This will start the COMPSs monitoring facility which enables to\ncheck the application status while running. Once started, it will show\nthe url to open the monitor in your web browser\n(http://127.0.0.1:8080/compss-monitor)\n\n**Reminder**: Include the monitor flag in the execution before the\nbinary to be executed.\n\n.. code:: bash\n\n    cd python/simple/src\n    pycompss init\n    pycompss run --monitor=1000 -g simple.py 1\n\nIf running a notebook, just add the monitoring parameter into the COMPSs\nruntime start call.\n\nOnce finished, it is possible to stop the monitoring facility by using\nthe ``pycompss monitor stop`` command.\n\nRunning Jupyter notebooks\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nNotebooks can be run using the ``pycompss jupyter`` command. Run the\nfollowing snippet from the root of the project:\n\n.. code:: bash\n\n    cd tutorial_apps/python\n    pycompss init\n    pycompss jupyter ./notebooks\n\nAn alternative and more flexible way of starting jupyter is using the\n``pycompss run`` command in the following way:\n\n.. code:: bash\n\n    pycompss run jupyter-notebook ./notebooks --ip=0.0.0.0  --allow-root\n\nAccess your notebook by ctrl-clicking or copy pasting into the browser\nthe link shown on the CLI (e.g.\nhttp://127.0.0.1:8888/?token=TOKEN\\_VALUE).\n\nIf the notebook process is not properly closed, you might get the\nfollowing warning when trying to start jupyter notebooks again:\n\n``The port 8888 is already in use, trying another port.``\n\nTo fix it, just restart the pycompss container with ``pycompss init``.\n\nGenerating the task graph\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCOMPSs is able to produce the task graph showing the dependencies that\nhave been respected. In order to producee it, include the graph flag in\nthe execution command:\n\n.. code:: bash\n\n    cd python/simple/src\n    pycompss init\n    pycompss run --graph simple.py 1\n\nOnce the application finishes, the graph will be stored into the\n``~\\.COMPSs\\app_name_XX\\monitor\\complete_graph.dot`` file. This dot file\ncan be converted to pdf for easier visualilzation through the use of the\n``gengraph`` parameter:\n\n.. code:: bash\n\n    pycompss gengraph .COMPSs/simple.py_01/monitor/complete_graph.dot\n\nThe resulting pdf file will be stored into the\n``~\\.COMPSs\\app_name_XX\\monitor\\complete_graph.pdf`` file, that is, the\nsame folder where the dot file is.\n\nTracing applications or notebooks\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCOMPSs is able to produce tracing profiles of the application execution\nthrough the use of EXTRAE. In order to enable it, include the tracing\nflag in the execution command:\n\n.. code:: bash\n\n    cd python/simple/src\n    pycompss init\n    pycompss run --tracing simple.py 1\n\nIf running a notebook, just add the tracing parameter into the COMPSs\nruntime start call.\n\nOnce the application finishes, the trace will be stored into the\n``~\\.COMPSs\\app_name_XX\\trace`` folder. It can then be analysed with\nParaver.\n\nAdding more nodes\n^^^^^^^^^^^^^^^^^\n\n**Note**: adding more nodes is still in beta phase. Please report\nissues, suggestions, or feature requests on\n`Github <https://github.com/bsc-wdc/>`__.\n\nTo add more computing nodes, you can either let docker create more\nworkers for you or manually create and config a custom node.\n\nFor docker just issue the desired number of workers to be added. For\nexample, to add 2 docker workers:\n\n.. code:: bash\n\n    pycompss components add worker 2\n\nYou can check that both new computing nodes are up with:\n\n.. code:: bash\n\n    pycompss components list\n\nIf you want to add a custom node it needs to be reachable through ssh\nwithout user. Moreover, pycompss will try to copy the ``working_dir``\nthere, so it needs write permissions for the scp.\n\nFor example, to add the local machine as a worker node:\n\n.. code:: bash\n\n    pycompss components add worker '127.0.0.1:6'\n\n-  '127.0.0.1': is the IP used for ssh (can also be a hostname like\n   'localhost' as long as it can be resolved).\n-  '6': desired number of available computing units for the new node.\n\n**Please be aware** that ``pycompss components`` will not list your\ncustom nodes because they are not docker processes and thus it can't be\nverified if they are up and running.\n\nRemoving existing nodes\n^^^^^^^^^^^^^^^^^^^^^^^\n\n**Note**: removing nodes is still in beta phase. Please report issues,\nsuggestions, or feature requests on\n`Github <https://github.com/bsc-wdc/>`__.\n\nFor docker just issue the desired number of workers to be removed. For\nexample, to remove 2 docker workers:\n\n.. code:: bash\n\n    pycompss components remove worker 2\n\nYou can check that the workers have been removed with:\n\n.. code:: bash\n\n    pycompss components list\n\nIf you want to remove a custom node, you just need to specify its IP and\nnumber of computing units used when defined.\n\n.. code:: bash\n\n    pycompss components remove worker '127.0.0.1:6'\n\n\nStop ``pycompss``\n^^^^^^^^^^^^^^^^^\n\nThe infrastructure deployed can be easily stopped and the docker instances\nclosed with the following command:\n\n.. code:: bash\n\n    pycompss kill\n\n\nLicense\n=======\n\nApache License Version 2.0\n\n\n*******\n\nWorkflows and Distributed Computing\n\nDepartment of Computer Science\n\nBarcelona Supercomputing Center (http://www.bsc.es)",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://compss.bsc.es",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pycompss-player",
    "package_url": "https://pypi.org/project/pycompss-player/",
    "platform": "",
    "project_url": "https://pypi.org/project/pycompss-player/",
    "project_urls": {
      "Homepage": "https://compss.bsc.es"
    },
    "release_url": "https://pypi.org/project/pycompss-player/2.10.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "PyCOMPSs player",
    "version": "2.10.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12198582,
  "releases": {
    "2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2570878e135d739a2dd7e07da513c810767daa5a69f2893c0a7f3853e27a303",
          "md5": "200047da95be9072de8468c626f128ae",
          "sha256": "35fb8859f3f686abcb482c35205c1621b9121c2c303ba99bb44d45bf670807ee"
        },
        "downloads": -1,
        "filename": "pycompss-player-2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "200047da95be9072de8468c626f128ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18918,
        "upload_time": "2021-12-03T07:36:54",
        "upload_time_iso_8601": "2021-12-03T07:36:54.002619Z",
        "url": "https://files.pythonhosted.org/packages/f2/57/0878e135d739a2dd7e07da513c810767daa5a69f2893c0a7f3853e27a303/pycompss-player-2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbf05b1d3819232d13a1649a5c9a8ebf73ddb489082531e76c0e63d43f88a634",
          "md5": "1aaac3052add24430c5e48d939d14779",
          "sha256": "ccfa21be177569b75b5c8df5b42b0c8e341a6807229956153ca1e9685a5ed8b8"
        },
        "downloads": -1,
        "filename": "pycompss-player-2.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1aaac3052add24430c5e48d939d14779",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18902,
        "upload_time": "2021-12-03T07:44:08",
        "upload_time_iso_8601": "2021-12-03T07:44:08.294162Z",
        "url": "https://files.pythonhosted.org/packages/cb/f0/5b1d3819232d13a1649a5c9a8ebf73ddb489082531e76c0e63d43f88a634/pycompss-player-2.10.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97dada768a92b9b98985f04e26f067e9565b30a5a85e6ce1fc37f81cfbd62e75",
          "md5": "2ede0342a07cbc0c574bde26b69c2441",
          "sha256": "6c5bc8e5add0a3643ebfaf478af8bb01af7a31ab0ef41752ba911b90e7ab95ad"
        },
        "downloads": -1,
        "filename": "pycompss-player-2.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2ede0342a07cbc0c574bde26b69c2441",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17449,
        "upload_time": "2020-01-23T19:24:00",
        "upload_time_iso_8601": "2020-01-23T19:24:00.183126Z",
        "url": "https://files.pythonhosted.org/packages/97/da/da768a92b9b98985f04e26f067e9565b30a5a85e6ce1fc37f81cfbd62e75/pycompss-player-2.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd168e07aad72d8ee2e17f4b3f8c2169c616ec80a21ac063eddf3aee088c7bfe",
          "md5": "ffee07e9f077b3e81b6ebc31151a81a4",
          "sha256": "d2d056503626f07c2f423d1024b8802b68005e0fb3309b15a5db7401276e58a7"
        },
        "downloads": -1,
        "filename": "pycompss-player-2.6.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ffee07e9f077b3e81b6ebc31151a81a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17460,
        "upload_time": "2020-01-24T15:55:56",
        "upload_time_iso_8601": "2020-01-24T15:55:56.620096Z",
        "url": "https://files.pythonhosted.org/packages/fd/16/8e07aad72d8ee2e17f4b3f8c2169c616ec80a21ac063eddf3aee088c7bfe/pycompss-player-2.6.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa9037ff841a54dd9a1fb6e80e8fcc05a29ee520e16c4953c906af549459a61c",
          "md5": "fdbfe1878f016aed7270816299ee0b4a",
          "sha256": "a23149071deaf40204faf7d8f895586abba364378f05c4c1b34875ff296f7ad9"
        },
        "downloads": -1,
        "filename": "pycompss-player-2.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fdbfe1878f016aed7270816299ee0b4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18795,
        "upload_time": "2020-01-30T14:47:05",
        "upload_time_iso_8601": "2020-01-30T14:47:05.837133Z",
        "url": "https://files.pythonhosted.org/packages/fa/90/37ff841a54dd9a1fb6e80e8fcc05a29ee520e16c4953c906af549459a61c/pycompss-player-2.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ec37f2659f89917e0d685e41c5809ac073af47cae4312455c5f2cb6641e95ad",
          "md5": "c32ae52186c1619eb77107b2eff647fd",
          "sha256": "78f231e4a524494a1def3b187b256561721342ee35868b15b8733b0dc71bf2f4"
        },
        "downloads": -1,
        "filename": "pycompss-player-2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "c32ae52186c1619eb77107b2eff647fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18763,
        "upload_time": "2021-01-13T11:14:30",
        "upload_time_iso_8601": "2021-01-13T11:14:30.190139Z",
        "url": "https://files.pythonhosted.org/packages/0e/c3/7f2659f89917e0d685e41c5809ac073af47cae4312455c5f2cb6641e95ad/pycompss-player-2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd947661078cd5bd4bbc23b4274ab0baf02f40d7f0a5bd62b80c192e5f69b5d9",
          "md5": "119a781b909fd3db1a6036ff945af7aa",
          "sha256": "d3a327652308ab9834ab13c255f198e755832b5b59df40bff48ba624aa9eb7b8"
        },
        "downloads": -1,
        "filename": "pycompss-player-2.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "119a781b909fd3db1a6036ff945af7aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18825,
        "upload_time": "2021-01-18T10:48:19",
        "upload_time_iso_8601": "2021-01-18T10:48:19.945028Z",
        "url": "https://files.pythonhosted.org/packages/cd/94/7661078cd5bd4bbc23b4274ab0baf02f40d7f0a5bd62b80c192e5f69b5d9/pycompss-player-2.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab39740ba9ee31c23553fe6e36e3384c87b5b5736225ec58632048960e4f63b5",
          "md5": "af9db472ce6d18384aca585058f34956",
          "sha256": "e4ebf95f1de0a0205945405f04bcb035f361ba2d740f59b75f3b2ac404a526fe"
        },
        "downloads": -1,
        "filename": "pycompss-player-2.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "af9db472ce6d18384aca585058f34956",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18827,
        "upload_time": "2021-01-19T09:07:49",
        "upload_time_iso_8601": "2021-01-19T09:07:49.336451Z",
        "url": "https://files.pythonhosted.org/packages/ab/39/740ba9ee31c23553fe6e36e3384c87b5b5736225ec58632048960e4f63b5/pycompss-player-2.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.8.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b933cb6dc4c770aed8d62898ceb3c13ef10d825a5b002355fc5e76ad9c35f23",
          "md5": "fa14c4a9520a1acc5fcfb98501484229",
          "sha256": "4f673e6e3001589d8e6fe368aaf74317d7f93417430b0bb657e3edfc8519899c"
        },
        "downloads": -1,
        "filename": "pycompss-player-2.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fa14c4a9520a1acc5fcfb98501484229",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18847,
        "upload_time": "2021-04-01T10:42:14",
        "upload_time_iso_8601": "2021-04-01T10:42:14.221414Z",
        "url": "https://files.pythonhosted.org/packages/8b/93/3cb6dc4c770aed8d62898ceb3c13ef10d825a5b002355fc5e76ad9c35f23/pycompss-player-2.8.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cd2560027f6edcfe5063a7a40f7ebfb0b96136f91a001d0ea0708beb305dc4e",
          "md5": "4657395bd00070127db648b19838ce48",
          "sha256": "9414023a8da57625afc2ec627cbbc855441eca405652435269c451095dc63943"
        },
        "downloads": -1,
        "filename": "pycompss-player-2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "4657395bd00070127db648b19838ce48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18912,
        "upload_time": "2021-07-20T13:41:21",
        "upload_time_iso_8601": "2021-07-20T13:41:21.514771Z",
        "url": "https://files.pythonhosted.org/packages/7c/d2/560027f6edcfe5063a7a40f7ebfb0b96136f91a001d0ea0708beb305dc4e/pycompss-player-2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbf05b1d3819232d13a1649a5c9a8ebf73ddb489082531e76c0e63d43f88a634",
        "md5": "1aaac3052add24430c5e48d939d14779",
        "sha256": "ccfa21be177569b75b5c8df5b42b0c8e341a6807229956153ca1e9685a5ed8b8"
      },
      "downloads": -1,
      "filename": "pycompss-player-2.10.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1aaac3052add24430c5e48d939d14779",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18902,
      "upload_time": "2021-12-03T07:44:08",
      "upload_time_iso_8601": "2021-12-03T07:44:08.294162Z",
      "url": "https://files.pythonhosted.org/packages/cb/f0/5b1d3819232d13a1649a5c9a8ebf73ddb489082531e76c0e63d43f88a634/pycompss-player-2.10.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}