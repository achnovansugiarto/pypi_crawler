{
  "info": {
    "author": "Mike Kroutikov",
    "author_email": "mkroutikov@innodata.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# aqwebengine\n\nQt QWebEngine on `async` steroids:\n\n* `async` versions of methods to load URL and set page html\n* `async` versions of methods to get page content as HTML and plain text\n* `async` method to call python from JS\n* `async` method to call JS from Python\n\nUses [qasync](https://pypi.org/project/qasync/) as an engine to run PyQt/PySide2 asyncronously.\n\n## Examples\n\n```\nw = AQWebEngine()\n...\nawait w.set_html_async('<b>Hello</b>, world!')\n...\nawait w.load('https://www.example.com')\n...\nhtml = await w.to_html_async()  # get current page as HTML\n...\ntext = await w.to_plain_text()  # get current page as plain text\n...\nawait w.eval_js('function inc(x) { return x + 1; }')\nresult = await w.eval_js('inc(41)')\nassert result == 42\n...\ndef do_something(x):\n    return x + 1\nw.register_python_function('do_something', do_something)\nresult = await w.eval_js('qt.callPython(\"do_something\", 41)')\nassert result == 42\n```\n\n## Python API\n\n### `eval_js`\nAsynchronously evaluates the string argument as a JS expression.\nReturns result to the Python caller. JSError is raised if evaluation of JS expression throws an exception.\n\n### register_python_function\nRegisteres a python (sync or async) function to be callable from JS (see qt.callPython JS API below).\n\nPython function should take a single JSON-serializable parameter.\n\nArguments:\n* `function_name` - the name of the function, as seen by JS\n* `function` - python function. Can be sync or async, should take a single JSON-serializable argument.\n\n## JS API\n\n### `qt.callPython`\nCalls python host.\n\nArguments:\n* `function_name` - the name of the registered python function\n* (optional) `args` - any JSON-serializable value\n\nPython function may return JSON-serializable value, that will be returned to the JS caller.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/innodatalabs/aqwebengine",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aqwebengine",
    "package_url": "https://pypi.org/project/aqwebengine/",
    "platform": "",
    "project_url": "https://pypi.org/project/aqwebengine/",
    "project_urls": {
      "Homepage": "https://github.com/innodatalabs/aqwebengine"
    },
    "release_url": "https://pypi.org/project/aqwebengine/0.0.2/",
    "requires_dist": null,
    "requires_python": ">= 3.9",
    "summary": "Async helpers for QWebEngine",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10986482,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "221e5cd773fdbceab333a53979ca948aaec49355438f32d153fcbc2d1bff6445",
          "md5": "56d098392f4f5c7ac43829701a48287d",
          "sha256": "7c4479dc02611c107800f5743da4f03b9764e9d9d8671075f56a2751e562f6b2"
        },
        "downloads": -1,
        "filename": "aqwebengine-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56d098392f4f5c7ac43829701a48287d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.9",
        "size": 8864,
        "upload_time": "2021-07-12T17:58:27",
        "upload_time_iso_8601": "2021-07-12T17:58:27.070588Z",
        "url": "https://files.pythonhosted.org/packages/22/1e/5cd773fdbceab333a53979ca948aaec49355438f32d153fcbc2d1bff6445/aqwebengine-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70a037e6c026c70ce842d5aac398da3d9ad670904b6e8c2a8beaaf21861f22fe",
          "md5": "28c540644e67d074ebe2f3bca456bf57",
          "sha256": "ac7f7e23876a0415e1cccf4137921a50b935d32fe10051b72e4ee2c463ab00db"
        },
        "downloads": -1,
        "filename": "aqwebengine-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28c540644e67d074ebe2f3bca456bf57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.9",
        "size": 7571,
        "upload_time": "2021-07-23T12:58:46",
        "upload_time_iso_8601": "2021-07-23T12:58:46.155477Z",
        "url": "https://files.pythonhosted.org/packages/70/a0/37e6c026c70ce842d5aac398da3d9ad670904b6e8c2a8beaaf21861f22fe/aqwebengine-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70a037e6c026c70ce842d5aac398da3d9ad670904b6e8c2a8beaaf21861f22fe",
        "md5": "28c540644e67d074ebe2f3bca456bf57",
        "sha256": "ac7f7e23876a0415e1cccf4137921a50b935d32fe10051b72e4ee2c463ab00db"
      },
      "downloads": -1,
      "filename": "aqwebengine-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "28c540644e67d074ebe2f3bca456bf57",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">= 3.9",
      "size": 7571,
      "upload_time": "2021-07-23T12:58:46",
      "upload_time_iso_8601": "2021-07-23T12:58:46.155477Z",
      "url": "https://files.pythonhosted.org/packages/70/a0/37e6c026c70ce842d5aac398da3d9ad670904b6e8c2a8beaaf21861f22fe/aqwebengine-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}