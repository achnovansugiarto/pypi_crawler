{
  "info": {
    "author": "FactSet Research Systems",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![FactSet](https://raw.githubusercontent.com/factset/enterprise-sdk/main/docs/images/factset-logo.svg)](https://www.factset.com)\n\n# Exchange DataFeed Data Model client library for Python\n\n[![PyPi](https://img.shields.io/pypi/v/fds.sdk.ExchangeDataFeedDataModel)](https://pypi.org/project/fds.sdk.ExchangeDataFeedDataModel/)\n[![Apache-2 license](https://img.shields.io/badge/license-Apache2-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\nFactSetâ€™s Exchange DataFeed products provide access to consolidated real-time and delayed global exchange data. Proprietary technology normalizes over 250 global venues, 18+ million instruments, and 150+ data fields. Asset types integrated include equities, futures, options, warrants, fixed income, mutual funds, ETFs, indices, commodities, and FX rates. Innovative technology ensures reliability and provides scalability that allows clients to make requests based on a symbol list or an exchange. Reduce development time by powering proprietary and third-party applications with exchange data from a unified data model. <p>The Exchange DataFeed Data Model API provides mappings for enumerations used in our Real-Time DataFeed products and should be used in conjunction with the DataFeed Data Model documentation available for each product. <p>The initial beta version of this API is limited to include mapping tables for the product codes only.\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 1.0.0\n- Package version: 0.20.1\n- Build package: org.openapitools.codegen.languages.PythonClientCodegen\n\n## Requirements\n\n* Python >= 3.7\n\n## Installation\n\n### Poetry\n\n```shell\npoetry add fds.sdk.utils fds.sdk.ExchangeDataFeedDataModel\n```\n\n### pip\n\n```shell\npip install fds.sdk.utils fds.sdk.ExchangeDataFeedDataModel\n```\n\n## Usage\n\n1. [Generate authentication credentials](../../../../README.md#authentication).\n2. Setup Python environment.\n   1. Install and activate python 3.7+. If you're using [pyenv](https://github.com/pyenv/pyenv):\n\n      ```sh\n      pyenv install 3.9.7\n      pyenv shell 3.9.7\n      ```\n\n   2. (optional) [Install poetry](https://python-poetry.org/docs/#installation).\n3. [Install dependencies](#installation).\n4. Run the following:\n\n```python\nfrom fds.sdk.utils.authentication import ConfidentialClient\n\nimport fds.sdk.ExchangeDataFeedDataModel\nfrom fds.sdk.ExchangeDataFeedDataModel.api import fact_set_product_codes_api\nfrom fds.sdk.ExchangeDataFeedDataModel.models import *\nfrom dateutil.parser import parse as dateutil_parser\nfrom pprint import pprint\n\n# See configuration.py for a list of all supported configuration parameters.\n\n# Examples for each supported authentication method are below,\n# choose one that satisfies your use case.\n\n# (Preferred) OAuth 2.0: FactSetOAuth2\n# See https://github.com/FactSet/enterprise-sdk#oauth-20\n# for information on how to create the app-config.json file\n# See https://github.com/FactSet/enterprise-sdk-utils-python#authentication\n# for more information on using the ConfidentialClient class\nconfiguration = fds.sdk.ExchangeDataFeedDataModel.Configuration(\n    fds_oauth_client=ConfidentialClient('/path/to/app-config.json')\n)\n\n# Basic authentication: FactSetApiKey\n# See https://github.com/FactSet/enterprise-sdk#api-key\n# for information how to create an API key\n# configuration = fds.sdk.ExchangeDataFeedDataModel.Configuration(\n#     username='USERNAME-SERIAL',\n#     password='API-KEY'\n# )\n\n# Enter a context with an instance of the API client\nwith fds.sdk.ExchangeDataFeedDataModel.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = fact_set_product_codes_api.FactSetProductCodesApi(api_client)\n    format = \"json\" # str | The format of the output file.<p>**Try it Out** - All formats available</p> (optional) if omitted the server will use the default value of \"json\"\n\n    try:\n        # Request the enumeration table for FactSet product codes.\n        api_response = api_instance.get_products(format=format)\n        pprint(api_response)\n    except fds.sdk.ExchangeDataFeedDataModel.ApiException as e:\n        print(\"Exception when calling FactSetProductCodesApi->get_products: %s\\n\" % e)\n\n    # Get response, http status code and response headers\n    # try:\n    #     # Request the enumeration table for FactSet product codes.\n    #     api_response, http_status_code, response_headers = api_instance.get_products_with_http_info(format=format)\n    #     pprint(api_response)\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.ExchangeDataFeedDataModel.ApiException as e:\n    #     print(\"Exception when calling FactSetProductCodesApi->get_products: %s\\n\" % e)\n\n    # Get response asynchronous\n    # try:\n    #     # Request the enumeration table for FactSet product codes.\n    #     async_result = api_instance.get_products_async(format=format)\n    #     api_response = async_result.get()\n    #     pprint(api_response)\n    # except fds.sdk.ExchangeDataFeedDataModel.ApiException as e:\n    #     print(\"Exception when calling FactSetProductCodesApi->get_products: %s\\n\" % e)\n\n    # Get response, http status code and response headers asynchronous\n    # try:\n    #     # Request the enumeration table for FactSet product codes.\n    #     async_result = api_instance.get_products_with_http_info_async(format=format)\n    #     api_response, http_status_code, response_headers = async_result.get()\n    #     pprint(api_response)\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.ExchangeDataFeedDataModel.ApiException as e:\n    #     print(\"Exception when calling FactSetProductCodesApi->get_products: %s\\n\" % e)\n\n```\n\n### Using Pandas\n\nTo convert an API response to a Pandas DataFrame, it is necessary to transform it first to a dictionary.\n```python\nimport pandas as pd\n\nresponse_dict = api_response.to_dict()['data']\n\nsimple_json_response = pd.DataFrame(response_dict)\nnested_json_response = pd.json_normalize(response_dict)\n```\n\n### Debugging\n\nThe SDK uses the standard library [`logging`](https://docs.python.org/3/library/logging.html#module-logging) module.\n\nSetting `debug` to `True` on an instance of the `Configuration` class sets the log-level of related packages to `DEBUG` \nand enables additional logging in Pythons [HTTP Client](https://docs.python.org/3/library/http.client.html).\n\n**Note**: This prints out sensitive information (e.g. the full request and response). Use with care.\n\n```python\nimport logging\nimport fds.sdk.ExchangeDataFeedDataModel\n\nlogging.basicConfig(level=logging.DEBUG)\n\nconfiguration = fds.sdk.ExchangeDataFeedDataModel.Configuration(...)\nconfiguration.debug = True\n```\n\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://api.factset.com/RTDataModel*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*FactSetProductCodesApi* | [**get_products**](docs/FactSetProductCodesApi.md#get_products) | **GET** /products | Request the enumeration table for FactSet product codes.\n\n\n## Documentation For Models\n\n - [ErrorResponse](docs/ErrorResponse.md)\n - [RTDataModelProducts](docs/RTDataModelProducts.md)\n\n\n## Documentation For Authorization\n\n\n## FactSetApiKey\n\n- **Type**: HTTP basic authentication\n\n\n## FactSetOAuth2\n\n- **Type**: OAuth\n- **Flow**: application\n- **Authorization URL**: \n- **Scopes**: N/A\n\n\n## Notes for Large OpenAPI documents\nIf the OpenAPI document is large, imports in fds.sdk.ExchangeDataFeedDataModel.apis and fds.sdk.ExchangeDataFeedDataModel.models may fail with a\nRecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:\n\nSolution 1:\nUse specific imports for apis and models like:\n- `from fds.sdk.ExchangeDataFeedDataModel.api.default_api import DefaultApi`\n- `from fds.sdk.ExchangeDataFeedDataModel.model.pet import Pet`\n\nSolution 2:\nBefore importing the package, adjust the maximum recursion limit as shown below:\n```\nimport sys\nsys.setrecursionlimit(1500)\nimport fds.sdk.ExchangeDataFeedDataModel\nfrom fds.sdk.ExchangeDataFeedDataModel.apis import *\nfrom fds.sdk.ExchangeDataFeedDataModel.models import *\n```\n\n## Contributing\n\nPlease refer to the [contributing guide](../../../../CONTRIBUTING.md).\n\n## Copyright\n\nCopyright 2022 FactSet Research Systems Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/ExchangeDataFeedDataModel/v1",
    "keywords": "FactSet,API,SDK",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fds.sdk.ExchangeDataFeedDataModel",
    "package_url": "https://pypi.org/project/fds.sdk.ExchangeDataFeedDataModel/",
    "platform": null,
    "project_url": "https://pypi.org/project/fds.sdk.ExchangeDataFeedDataModel/",
    "project_urls": {
      "Homepage": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/ExchangeDataFeedDataModel/v1"
    },
    "release_url": "https://pypi.org/project/fds.sdk.ExchangeDataFeedDataModel/0.20.1/",
    "requires_dist": [
      "urllib3 (>=1.25.3)",
      "python-dateutil",
      "fds.sdk.utils (>=1.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Exchange DataFeed Data Model client library for Python",
    "version": "0.20.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17016729,
  "releases": {
    "0.20.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a91e3e9ea2e573ae8befc16bf8cd8836e12c84534fc58dba3ec00631927acc9b",
          "md5": "edfdd3685614ea3994d751a6467e8245",
          "sha256": "4abf8782f538516caf1f110c257270b49e064fe38e880137a31293bf86405122"
        },
        "downloads": -1,
        "filename": "fds.sdk.ExchangeDataFeedDataModel-0.20.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "edfdd3685614ea3994d751a6467e8245",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 56925,
        "upload_time": "2022-12-21T22:19:18",
        "upload_time_iso_8601": "2022-12-21T22:19:18.718366Z",
        "url": "https://files.pythonhosted.org/packages/a9/1e/3e9ea2e573ae8befc16bf8cd8836e12c84534fc58dba3ec00631927acc9b/fds.sdk.ExchangeDataFeedDataModel-0.20.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.20.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82b8e7380847c863420b21e745e984e3681dd1f1cdf0fb125921a13cad10945f",
          "md5": "aa7c34b6befdbb0efcd1fc1bf956a144",
          "sha256": "0fe11621511c74c2ec0ef17ca344659651d496475fc3b67a83f8375e647c5256"
        },
        "downloads": -1,
        "filename": "fds.sdk.ExchangeDataFeedDataModel-0.20.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa7c34b6befdbb0efcd1fc1bf956a144",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57316,
        "upload_time": "2023-02-24T17:24:41",
        "upload_time_iso_8601": "2023-02-24T17:24:41.976515Z",
        "url": "https://files.pythonhosted.org/packages/82/b8/e7380847c863420b21e745e984e3681dd1f1cdf0fb125921a13cad10945f/fds.sdk.ExchangeDataFeedDataModel-0.20.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82b8e7380847c863420b21e745e984e3681dd1f1cdf0fb125921a13cad10945f",
        "md5": "aa7c34b6befdbb0efcd1fc1bf956a144",
        "sha256": "0fe11621511c74c2ec0ef17ca344659651d496475fc3b67a83f8375e647c5256"
      },
      "downloads": -1,
      "filename": "fds.sdk.ExchangeDataFeedDataModel-0.20.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa7c34b6befdbb0efcd1fc1bf956a144",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 57316,
      "upload_time": "2023-02-24T17:24:41",
      "upload_time_iso_8601": "2023-02-24T17:24:41.976515Z",
      "url": "https://files.pythonhosted.org/packages/82/b8/e7380847c863420b21e745e984e3681dd1f1cdf0fb125921a13cad10945f/fds.sdk.ExchangeDataFeedDataModel-0.20.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}