{
  "info": {
    "author": "Christian (Nakato)",
    "author_email": "christianvelasces@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# EasyTexto\r\n\r\n![PyPI](https://img.shields.io/pypi/v/EasyTexto)\r\n![PyPI - Downloads](https://img.shields.io/pypi/dm/EasyTexto)\r\n![GitHub branch checks state](https://img.shields.io/github/checks-status/nakato156/EasyTexto/720e10ce3054f4e7ae3036c4412f332328851e1d)\r\n![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/nakato156/EasyTexto)\r\n![PyPI - License](https://img.shields.io/pypi/l/EasyTexto)\r\n\r\nEasyTexto es un paquete que permite el manejo de archivos de texto de forma sencilla. Esta herramienta provee funciones para leer archivos así como para acceder, modificar y eliminar líneas específicas.\r\n\r\n## Uso\r\n\r\n### Accediendo a  líneas\r\n```python\r\nfrom EasyTexto import EasyTexto\r\n\r\ntexto = EasyTexto('ruta_al_archivo.txt', encode=\"utf-8\") #el encode por defecto es utf-8\r\nprint(texto[1]) #los índices comienzan en 1, es lo mismo que el número de línea\r\ntexto[1] = 'Soy el reemplazo de la línea #1'\r\nprint(texto[1])\r\n```\r\n\r\nAl acceder a las líneas del archivo se devuelve un objeto de tipo `Linea`, puede hacer la conversión a `str` usando la clase. Esta clase posee los atributos `num_línea` y `texto`, puede usar esto según su contexto.\r\n\r\n- ejemplo\r\n\r\n```python\r\nprint(type(texto[1]))\r\n\r\nlínea_1 = texto[1]  # la variable será de tipo Linea\r\n\r\n#convirtiendo a str\r\nlínea_1_str = str(texto[1]) # el tipo será str\r\n\r\n#accediendo al contenido de la línea\r\ncontenido_línea_1 = texto[1].texto\r\n```\r\n\r\n### Modificando líneas\r\nTambien se permite el uso de slicing ya sea para obtener o modificar líneas\r\n\r\n```python\r\nprint(texto[:3])\r\ntexto[::2] = 'holas'\r\nprint(texto) #mostrará una vista previa del archivo\r\n```\r\n\r\n### Eliminando líneas\r\nPara eliminar líneas se provee el método `eliminar` de la clase `EasyTexto`, este método recibe un entero indicando el número de línea a eliminar o una tupla con los números de líneas a eliminar.\r\n\r\n```python\r\ntexto.eliminar(1)\r\ntexto.eliminar((1, 2))\r\nprint(texto)\r\n```\r\n\r\n### Añadiendo líneas\r\nAsí como se puede eliminar líneas también se puede añadir líneas **al final** del archivo, esto gracias al método `append`. El argumento recibido puede ser de tipo `str`, `bytes`, `list` o `tuple`.\r\n\r\n```python\r\ntexto.append('Soy una nueva línea')\r\ntexto.append(b'Soy una línea de bytes')\r\ntexto.append(('soy otra línea', 'y yo sigo despues'))\r\ntexto.append(['soy lo mismo de arriba', 'pero en forma de lista'])\r\n```\r\n\r\nEn caso una línea no puedo decodificarse se mostrará como bytes y se guardará como tal. De todas formas se recomienda validar los datos y que la codificación sea correcta\r\n\r\n## Archivo con formato de dialogo\r\nEsta herramienta provee una forma de poder manejar archivos de texto que tenga una estructura de dialogo, por ejemplo:\r\n\r\n**test.txt**\r\n```txt\r\nUno:Primera línea\r\nUno: Otra linea\r\nUno: Pregunta\r\nDos: Cual es mejor, mayonesa de pollería o la normal?\r\nDos: Si-si-no\r\nUno:En cualquier caso depende de la preparación\r\n```\r\n\r\nAl tener un archivo de este y querer realizar más operaciones, puede indicar el parámetro `tipo='dialogo'`\r\nEsto funciona para archivos con la estructura `<participante>: <dialogo>`\r\n\r\n```python\r\nfrom EasyTexto import EasyTexto\r\ndiialogo = EasyTexto('ruta_al_archivo.txt', tipo='dialogo')\r\n```\r\n\r\nSi intenta acceder o modificar líneas parecerá que no hay ningún cambio y es así. la diferencia radica en el uso de métodos `get_msg_by` y `get_msgs`. A continuación se explica el caso de uso de cada una\r\n\r\n\r\n- `get_msg_by` se usa para recopilar todas las líeas que tengan cómo autor o participate al nombre que se le pasa a la función. Ejemplo:\r\n\r\n```python\r\nmsgs = dialogo.get_msg_by('Uno') # retorna una lista con todas las líneas\r\nprint(msgs[0])\r\n```\r\n\r\n- `get_msgs` se usa para clasificar a cada participante del díalogo, esta función retorna un diccionario cuya llave corresponde al nombre del participante y como valor una lista con todas las intervenciones del participante. Ejemplo:\r\n\r\n```python\r\nmsgs = dialogo.get_msgs()\r\nprint(msgs.keys())\r\n```\r\n## Archivos de dialogo con estructura diferente\r\nSi su archivo posee una estructura diferente, es decir no tiene la estructura `<participante>: <dialogo>` puede proveer una función para la detección de las líneas.\r\n\r\nPor ejemplo, si su archivo tiene la estructura `<participante> - <dialogo>` puede crear la siguiente función:\r\n\r\n```python\r\ndef mi_funcion(linea: str) -> list:\r\n    if '-' in linea:\r\n        return linea.split('-', maxsplit=1)\r\n    return False\r\n```\r\nLa función debe retornar una lista con 2 elementos, el primero debe hacer referencia al participante y el segundo al diálogo, en caso contrario debe retornar `False`. \r\n\r\nUna vez implementada su función deberá pasarla al constructor de la clase en el parámetro `rule=su_funcion`.\r\n\r\n```python\r\nfrom EasyTexto import EasyTexto\r\n\r\ndef mi_funcion(linea: str) -> list:\r\n    if '-' in linea:\r\n        return linea.split('-', maxsplit=1)\r\n    return False\r\n\r\ndiialogo = EasyTexto('ruta_al_archivo.txt', tipo='dialogo', rule=mi_funcion)\r\n# hacer las operaciones que desee\r\n```\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nakato156/EasyTexto",
    "keywords": "file,files,text",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "EasyTexto",
    "package_url": "https://pypi.org/project/EasyTexto/",
    "platform": null,
    "project_url": "https://pypi.org/project/EasyTexto/",
    "project_urls": {
      "Homepage": "https://github.com/nakato156/EasyTexto"
    },
    "release_url": "https://pypi.org/project/EasyTexto/0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Paquete para manejar archivos de texto de forma sencilla",
    "version": "0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16831935,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0dddf57a037d80b650ea2a154688b89b9b9e4af88843d5d865a08a66305b499",
          "md5": "f467dba1e6dacd7af2bb77c489b6e99b",
          "sha256": "995213bf73876564808e16cca57a071e60d1340c89bab3796c6ef05919b3ee2a"
        },
        "downloads": -1,
        "filename": "EasyTexto-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f467dba1e6dacd7af2bb77c489b6e99b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3736,
        "upload_time": "2023-02-11T18:58:49",
        "upload_time_iso_8601": "2023-02-11T18:58:49.628180Z",
        "url": "https://files.pythonhosted.org/packages/e0/dd/df57a037d80b650ea2a154688b89b9b9e4af88843d5d865a08a66305b499/EasyTexto-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9073a0082b9ad46db1bd20984358587d100e016eede4ff59bc3ef72bf6959959",
          "md5": "2fc4c32c03ab8ea4f5c0cee4e5b2a7b8",
          "sha256": "599fda970b2f3a87a015dcf0cff633624af89d210d933b5efb082f33fe39b726"
        },
        "downloads": -1,
        "filename": "EasyTexto-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2fc4c32c03ab8ea4f5c0cee4e5b2a7b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3736,
        "upload_time": "2023-02-11T18:59:21",
        "upload_time_iso_8601": "2023-02-11T18:59:21.560893Z",
        "url": "https://files.pythonhosted.org/packages/90/73/a0082b9ad46db1bd20984358587d100e016eede4ff59bc3ef72bf6959959/EasyTexto-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04d583dce69a1d8adb93bfdc5c24dc436c977e75e82f84ebaa4d0bb3e01ad319",
          "md5": "0b916f34d859e4e977b52146d2362d45",
          "sha256": "1eeb646d87ccf2a7ee18f7ccec1d0bf97d61e243781b6c27d7c4a7eef234672f"
        },
        "downloads": -1,
        "filename": "EasyTexto-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0b916f34d859e4e977b52146d2362d45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3740,
        "upload_time": "2023-02-11T19:46:12",
        "upload_time_iso_8601": "2023-02-11T19:46:12.489402Z",
        "url": "https://files.pythonhosted.org/packages/04/d5/83dce69a1d8adb93bfdc5c24dc436c977e75e82f84ebaa4d0bb3e01ad319/EasyTexto-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d622e449018efdc0e1e55f3fcdf5a65881e75d757e2a6ccc372e680de65f5cd",
          "md5": "1bebbdb83fc97bd931d9f298f6bf129d",
          "sha256": "f7b66e71a566d39dff4e9c14cfeb55b572d87bf98886c68a8467001080eef82c"
        },
        "downloads": -1,
        "filename": "EasyTexto-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1bebbdb83fc97bd931d9f298f6bf129d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5912,
        "upload_time": "2023-02-12T21:14:38",
        "upload_time_iso_8601": "2023-02-12T21:14:38.194545Z",
        "url": "https://files.pythonhosted.org/packages/5d/62/2e449018efdc0e1e55f3fcdf5a65881e75d757e2a6ccc372e680de65f5cd/EasyTexto-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c4d9a159ce9bcbb5417896690e18e8b64335be63b0c914b6431b68bd442bd5f",
          "md5": "267601ae10e09c5f6d13022fded477f1",
          "sha256": "1248c9fb4da5ea0b5ac32af42c1b2d5d15c58652220982b1213dcb8a0c677a03"
        },
        "downloads": -1,
        "filename": "EasyTexto-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "267601ae10e09c5f6d13022fded477f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6303,
        "upload_time": "2023-02-13T03:50:51",
        "upload_time_iso_8601": "2023-02-13T03:50:51.914168Z",
        "url": "https://files.pythonhosted.org/packages/7c/4d/9a159ce9bcbb5417896690e18e8b64335be63b0c914b6431b68bd442bd5f/EasyTexto-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7c4d9a159ce9bcbb5417896690e18e8b64335be63b0c914b6431b68bd442bd5f",
        "md5": "267601ae10e09c5f6d13022fded477f1",
        "sha256": "1248c9fb4da5ea0b5ac32af42c1b2d5d15c58652220982b1213dcb8a0c677a03"
      },
      "downloads": -1,
      "filename": "EasyTexto-0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "267601ae10e09c5f6d13022fded477f1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6303,
      "upload_time": "2023-02-13T03:50:51",
      "upload_time_iso_8601": "2023-02-13T03:50:51.914168Z",
      "url": "https://files.pythonhosted.org/packages/7c/4d/9a159ce9bcbb5417896690e18e8b64335be63b0c914b6431b68bd442bd5f/EasyTexto-0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}