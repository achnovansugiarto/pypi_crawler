{
  "info": {
    "author": "Thor Whalen",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# msword\nSimple mapping view to docx (Word Doc) elements\n\n\nTo install:\t```pip install msword```\n\n\n# Examples\n\n## LocalDocxTextStore\nLocal files store returning, as values, text extracted from the documents.\nUse this when you just want the text contents of the document.\nIf you want more, you'll need to user LocalDocxStore with the appropriate content extractor\n(i.e. the obj_of_data function in a py2store.wrap_kvs wrapper).\n\nNote: Filters for valid msword extensions (.doc and .docx).\nTo NOT filter for valid extensions, use ``AllLocalFilesDocxTextStore`` instead.\n\n```python\n>>> from msword import LocalDocxTextStore, test_data_dir\n>>> import docx\n>>> s = LocalDocxTextStore(test_data_dir)\n>>> assert {'more_involved.docx', 'simple.docx'}.issubset(s)\n>>> v = s['simple.docx']\n>>> assert isinstance(v, str)\n>>> print(v)\nJust a bit of text to show that is works. Another sentence.\nThis is after a newline.\n<BLANKLINE>\nThis is after two newlines.\n```\n\n## LocalDocxStore\n\nLocal files store returning, as values, docx objects.\nNote: Filters for valid msword extensions (.doc and .docx).\nTo Note filter for valid extensions, use ``AllLocalFilesDocxStore`` instead.\n\n```python\n>>> from msword import LocalDocxStore, test_data_dir\n>>> import docx\n>>> s = LocalDocxStore(test_data_dir)\n>>> assert {'more_involved.docx', 'simple.docx'}.issubset(s)\n>>> v = s['more_involved.docx']\n>>> assert isinstance(v, docx.document.Document)\n```\n\nWhat does a ``docx.document.Document`` have to offer?\nIf you really want to get into it, see here: https://python-docx.readthedocs.io/en/latest/\n\nMeanwhile, we'll give a few examples here as an amuse-bouche.\n\n```python\n>>> ddir = lambda x: set([xx for xx in dir(x) if not xx.startswith('_')])  # to see what an object has\n>>> assert ddir(v).issuperset({\n...     'add_heading', 'add_page_break', 'add_paragraph', 'add_picture', 'add_section', 'add_table',\n...     'core_properties', 'element', 'inline_shapes', 'paragraphs', 'part',\n...     'save', 'sections', 'settings', 'styles', 'tables'\n... })\n```\n\n``paragraphs`` is where the main content is, so let's have a look at what it has.\n\n```python\n>>> len(v.paragraphs)\n21\n>>> paragraph = v.paragraphs[0]\n>>> assert ddir(paragraph).issuperset({\n...     'add_run', 'alignment', 'clear', 'insert_paragraph_before',\n...     'paragraph_format', 'part', 'runs', 'style', 'text'\n... })\n>>> paragraph.text\n'Section 1'\n>>> assert ddir(paragraph.style).issuperset({\n...     'base_style', 'builtin', 'delete', 'element', 'font', 'hidden', 'locked', 'name', 'next_paragraph_style',\n...     'paragraph_format', 'part', 'priority', 'quick_style', 'style_id', 'type', 'unhide_when_used'\n... })\n>>> paragraph.style.style_id\n'Heading1'\n>>> paragraph.style.font.color.rgb\nRGBColor(0x2f, 0x54, 0x96)\n```\n\nYou get the point...\n\nIf you're only interested in one particular aspect of the documents, you should your favorite\npy2store wrappers to get the store you really want. For example:\n\n```python\n>>> from py2store import wrap_kvs\n>>> ss = wrap_kvs(s, obj_of_data=lambda doc: [paragraph.style.style_id for paragraph in doc.paragraphs])\n>>> assert ss['more_involved.docx'] == [\n...     'Heading1', 'Normal', 'Normal', 'Heading2', 'Normal', 'Normal',\n...     'Heading1', 'Normal', 'Normal', 'Normal', 'Normal', 'Normal', 'Normal', 'Normal',\n...     'ListParagraph', 'ListParagraph', 'Normal', 'Normal', 'ListParagraph', 'ListParagraph', 'Normal'\n... ]\n```\n\nThe most common use case is probably getting text, not styles, out of a document.\nIt's so common, that we've done the wrapping for you:\nJust use the already wrapped LocalDocxTextStore store for that purpose.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thorwhalen/msword",
    "keywords": "docx,doc file,microsoft word,msword",
    "license": "apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "msword",
    "package_url": "https://pypi.org/project/msword/",
    "platform": "any",
    "project_url": "https://pypi.org/project/msword/",
    "project_urls": {
      "Homepage": "https://github.com/thorwhalen/msword"
    },
    "release_url": "https://pypi.org/project/msword/0.0.4/",
    "requires_dist": [
      "py2store",
      "python-docx"
    ],
    "requires_python": "",
    "summary": "Simple mapping view to docx (Word Doc) elements",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15355856,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c20df10fef9bfc970fed508fe2ceecce134e11ab06c6cb7655e6b75a2e09e8f",
          "md5": "ffc16d8ec4cbb2becf3fe69b79968cab",
          "sha256": "33edcbd07e0d6cd9216148cafe4bde725c3bad86feb2d36eee76988b4c49b30c"
        },
        "downloads": -1,
        "filename": "msword-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffc16d8ec4cbb2becf3fe69b79968cab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5955,
        "upload_time": "2021-01-15T22:50:13",
        "upload_time_iso_8601": "2021-01-15T22:50:13.380941Z",
        "url": "https://files.pythonhosted.org/packages/6c/20/df10fef9bfc970fed508fe2ceecce134e11ab06c6cb7655e6b75a2e09e8f/msword-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96b21ff06d0397d968b1f04629e8953c7106aa9581acb127c6912d242d9dd1ee",
          "md5": "7c24c552f6350e4db94fcea9f99f5e12",
          "sha256": "b77f3e60f45b5a4e270c5c9eb7ed1808c7fb840bd2202986fd31792a94f2695d"
        },
        "downloads": -1,
        "filename": "msword-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7c24c552f6350e4db94fcea9f99f5e12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1796,
        "upload_time": "2021-01-15T22:50:14",
        "upload_time_iso_8601": "2021-01-15T22:50:14.600415Z",
        "url": "https://files.pythonhosted.org/packages/96/b2/1ff06d0397d968b1f04629e8953c7106aa9581acb127c6912d242d9dd1ee/msword-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c1b804123096df87af496d6e8c30553252a229104b7e6f8e565be318c4611ac",
          "md5": "f7899eab6777e62faccf5d7db304da99",
          "sha256": "1a07d3b56320e6b3e4365f592a5664ba92c818368ca48ec578e15120665908f9"
        },
        "downloads": -1,
        "filename": "msword-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7899eab6777e62faccf5d7db304da99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9610,
        "upload_time": "2021-04-05T23:28:12",
        "upload_time_iso_8601": "2021-04-05T23:28:12.088537Z",
        "url": "https://files.pythonhosted.org/packages/8c/1b/804123096df87af496d6e8c30553252a229104b7e6f8e565be318c4611ac/msword-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cafe12795701d4ec92b1b4aecd44cdec33f877e10442e393cd0227520d0d67e3",
          "md5": "bac5ab2932947777d34de841eeb864a0",
          "sha256": "d5e3649f53909627c04ddf2488983e5f067fb988d5b61afac817e805bff40653"
        },
        "downloads": -1,
        "filename": "msword-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bac5ab2932947777d34de841eeb864a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4401,
        "upload_time": "2021-04-05T23:28:13",
        "upload_time_iso_8601": "2021-04-05T23:28:13.512902Z",
        "url": "https://files.pythonhosted.org/packages/ca/fe/12795701d4ec92b1b4aecd44cdec33f877e10442e393cd0227520d0d67e3/msword-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43cfe26a1491013cf877c58c5164df722c441a8669148b238e67440ad26eaf09",
          "md5": "c810cbbe3decbb28f0ba0bbf3f9dddf4",
          "sha256": "762d2303de3bbd30e19d4fad1224166f8e49a8d9e5757390934dfa226eb8e23d"
        },
        "downloads": -1,
        "filename": "msword-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c810cbbe3decbb28f0ba0bbf3f9dddf4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30813,
        "upload_time": "2022-10-10T00:41:03",
        "upload_time_iso_8601": "2022-10-10T00:41:03.207088Z",
        "url": "https://files.pythonhosted.org/packages/43/cf/e26a1491013cf877c58c5164df722c441a8669148b238e67440ad26eaf09/msword-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57111078f69aec589f9d9b311de838464e092d1335f809cd7ba53b784b485f96",
          "md5": "e9e6553dca458055348a84f3c2f2940f",
          "sha256": "d9d663bab85016240b1ad8b34dab5739f56f060b08c2ab713f3877c6b76f6f05"
        },
        "downloads": -1,
        "filename": "msword-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e9e6553dca458055348a84f3c2f2940f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32452,
        "upload_time": "2022-10-10T00:41:05",
        "upload_time_iso_8601": "2022-10-10T00:41:05.142925Z",
        "url": "https://files.pythonhosted.org/packages/57/11/1078f69aec589f9d9b311de838464e092d1335f809cd7ba53b784b485f96/msword-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43cfe26a1491013cf877c58c5164df722c441a8669148b238e67440ad26eaf09",
        "md5": "c810cbbe3decbb28f0ba0bbf3f9dddf4",
        "sha256": "762d2303de3bbd30e19d4fad1224166f8e49a8d9e5757390934dfa226eb8e23d"
      },
      "downloads": -1,
      "filename": "msword-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c810cbbe3decbb28f0ba0bbf3f9dddf4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30813,
      "upload_time": "2022-10-10T00:41:03",
      "upload_time_iso_8601": "2022-10-10T00:41:03.207088Z",
      "url": "https://files.pythonhosted.org/packages/43/cf/e26a1491013cf877c58c5164df722c441a8669148b238e67440ad26eaf09/msword-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57111078f69aec589f9d9b311de838464e092d1335f809cd7ba53b784b485f96",
        "md5": "e9e6553dca458055348a84f3c2f2940f",
        "sha256": "d9d663bab85016240b1ad8b34dab5739f56f060b08c2ab713f3877c6b76f6f05"
      },
      "downloads": -1,
      "filename": "msword-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e9e6553dca458055348a84f3c2f2940f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32452,
      "upload_time": "2022-10-10T00:41:05",
      "upload_time_iso_8601": "2022-10-10T00:41:05.142925Z",
      "url": "https://files.pythonhosted.org/packages/57/11/1078f69aec589f9d9b311de838464e092d1335f809cd7ba53b784b485f96/msword-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}