{
  "info": {
    "author": "",
    "author_email": "Chris Nelson <github@cjnaz.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Topic :: System :: Networking :: Monitoring"
    ],
    "description": "# wanstatus - Monitoring the health of the WAN connection\n\nMonitors WAN-side internet access and WAN IP address changes on a home network.  Sends email and/or text notifications for internet outages (after restored) and WAN IP changes.  The tool is highly configurable for which modem and router you may be using.  Configurations for dd-wrt and pfSense routers, and Motorola and Technicolor/Cox gateway modems are included.\n\nSupported on Python3.6+ on Linux and Windows.\n\n`wanstatus --service` enters an infinite loop, periodically checking the status of internet access and the WAN IP address.  `wanstatus` interactively checks status.\n\n- Internet access is detected by contacting an external DNS server (faster) such as the Google public DNS server at 8.8.8.8.  Alternately, web addresses may be pinged to detect internet access (slower).\n- If there is NO internet access then the outage time is captured and logged, and wanstatus enters a tight loop checking for recovery of internet access.  Once restored, wanstatus sends email and/or text notifications that internet access was lost and now restored, and how long the outage was.\n- If there IS access to the internet, then wanstatus reads and logs the modem status page (typically at 192.168.100.1).\n- wanstatus then reads the pfSense or dd-wrt router status page for the WAN IP address, and if changed then sends email and/or notification messages of the change.\n- Finally, wanstatus periodically checks with an external web page for the reported WAN IP address.  \n\n\nAll parameters are set in the `wanstatus.cfg` config file.  On each loop in service mode the config file is checked for changes, and reloaded as needed.  This allows for on-the-fly configuration changes.\n\nwanstatus may be started manually, or may be configured to start at system boot.  An example systemd unit file is included.  See systemd documentation for how to set it up.\n\n**NOTE:**  Due to as-of-yet unsolved problems with Python 3.6 and import_resources, the `--setup-user` and `--setup-site` switches are not working on Py 3.6.  Manually grab the files from the [github](https://github.com/cjnaz/wanstatus) `src/deployment_files` directory and place them in the `~\\.config\\wanstatus` directory.  These command line switches work correctly on Python 3.7+.\n\n\n<br/>\n\n---\n\n## Notable changes since prior release\nV3.0 - Converted to package format, updated to cjnfuncs 2.0\n\n<br/>\n\n---\n\n## Usage\n```\n$ wanstatus -h\nusage: wanstatus [-h] [--config-file CONFIG_FILE] [--log-file LOG_FILE]\n                 [--print-log] [--service] [--setup-user] [--setup-site] [-V]\n\nCheck internet access and WAN IP address.  Send notification/email after outage is over and\non WAN IP change.\n3.0\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --config-file CONFIG_FILE, -c CONFIG_FILE\n                        Path to the config file (Default <wanstatus.cfg)> in user/site config directory.\n  --log-file LOG_FILE, -l LOG_FILE\n                        Path to the log file.\n  --print-log, -p       Print the tail end of the log file (default last 40 lines).\n  --service             Enter endless loop for use as a systemd service.\n  --setup-user          Install starter files in user space.\n  --setup-site          Install starter files in system-wide space. Run with root prev.\n  -V, --version         Return version number and exit.\n```\n\n<br/>\n\n---\n\n## Example output\n```\n$$ wanstatus \n WARNING:  ========== wanstatus (3.0) ==========\n WARNING:  Config file </home/me/.config/wanstatus/wanstatus.cfg>\n    INFO:  Internet access:             Working          (DNS server 72.105.29.22, command run time   11.3 ms)\n    INFO:  Modem status:                Locked           (command run time 6550.7 ms)\n    INFO:  Router reported WANIP:       27.177.61.124    (command run time 2300.2 ms)\n    INFO:  Externally reported WANIP:   27.177.61.124    (command run time  350.1 ms)\n```\n\n<br/>\n\n---\n\n## Setup and Usage notes\n- Install wanstatus from PyPI (pip install wanstatus).\n- Install the initial configuration files (`wanstatus --setup-user` places files at ~/.config/wanstatus).\n- Edit/configure `wanstatus.cfg`, `creds_SMTP`, and `creds_wanstatus` as needed.\n- Run manually as `./wanstatus`, or install the systemd service.\n- When running in service mode (continuously looping) the config file may be edited and is reloaded when changed.  This allows for changing settings without having to restart the service.\n\n\n<br/>\n\n---\n\n## Customization notes\n- Logging in interactive mode goes to the console per the `ConsoleLogFormat` param in the config file.  Logging in `--service`\nmode goes to `log_wanstatus.txt` in the configuration directory. \n- Checking the modem status, checking the router reported WAN IP, and checking the external WAN IP address features are optional.  To disable, comment out `ModemStatusPage`, `RouterStatusPage`, and/or `WANIPWebpage` parameters, respectively.  If all three are disabled then only internet access checking and outage notification is still active.\n- Configuration examples are provided for dd-wrt and pfSense routers, and certain Cisco, Motorola, and Technicolor/Vantiva modems.\n- Checking for internet access can be done by either pinging internet servers (slower) or by doing connections to DNS servers (faster).  The internet access check method is selected via the  `IACheckMethod` config parameter.  Multiple target addresses may be specified as a whitespace separated list of ping addresses or DNS server addresses.  The first server in the list is tried, and if access should fail (after `nRetries` attempts) then the next server in the list is tried, and so on.\n- For developing and debugging the regular expressions for your needs, do a View Page Source in your browser and look for the specific phrase in the html that has the desired info.  I recommend https://regexr.com/ for developing your regular expressions for extracting the modem status and WAN IP address. \n- The external WAN IP check servers may not tolerate too frequent requests.  Set `ExternalWANRecheckPeriod` to a big value, such as 1 hour, to avoid being blacklisted.\n\nThe modem and router ('device') access configurations use a common set of parameters, with `xxx` replaced by `Modem` and `Router`, respectively.  Notably:\n- If logging into a device is not needed in order to access the `xxxStatusPage`, then don't specify the `xxxLoginUsernameField` parameter.\n- If login for a device is required (`xxxLoginUsernameField` specified), but a specific login page is not used then don't specify `xxxLoginPage`.  The username and password will be passed to the `xxxStatusPage`.  This method is used by pfSense routers.\n- To disable the device status check completely, don't specify (or comment out) the `xxxStatusPage` parameter (as noted above).\n- csrf security access mode is supported, such as used by pfSense routers.  This feature is enabled in the `xxxLoginAdditionalKeys`.  logging.debug statements are commented out in the code to avoid leaking login credentials.\n\nModem and Router config parameters:\n```\n    Config parameters using 'xxx' as a placeholder prefix (with examples):\n        xxxLoginPage               http://routerurl.lan/login\n            If login on a specific page is required.  Optional.  If not given then login attempt \n            at the xxxStatusPage.\n        xxxLoginRequiredText   <title>CSRF Error</title>\n            Unique text found on the page returned by the device that indicates that a login is needed.\n        xxxLoginUsernameField      usernamefld\n            Name of the username field on the login page.  Optional.  If not given then username and \n            password parameters are not used.  EG dd-wrt router doesn't need a password to access status.\n        xxx_USER\n            Login Username\n        xxxLoginPasswordField      passwordfld\n            Name of the password field on the login page.\n        xxx_PASS\n            Login Password\n        xxxLoginAdditionalKeys     login : Login, '__csrf_magic' : \"None\"\n            Any other needed keys related to login. All, including username and password, are\n            passed on all posts to the xxxLoginPage and xxxStatusPage.  \n            Csrf token parsing and updating is done if 'csrf' is found in these additional keys.\n        xxxCsrfRE                  csrfMagicToken = \"(.*)\";var\n            RE for parsing the csrf token out of pages returned from xxxLoginPage and xxxStatusPage.\n        xxxStatusPage              http://routerurl.lan/index.php\n            Page for extracting info from using the xxxStatusRE.\n        xxxStatusRE                <td.+title=\"via.dhcp\">\\s+([\\d]+\\.[\\d]+\\.[\\d]+\\.[\\d]+)\n            RE for extracting modem status or router WAN IP from the xxxRouterStatusPage.\n        xxxTimeout\n            Max time allowed for response from the device.\n```\n\n<br/>\n\n---\n\n## Version history\n- 3.0.1 230226 - Fixed inclusion of deployment_files\n- 3.0 230215 - Converted to package format, updated to cjnfuncs 2.0\n- ...\n- 0.1 201028 - New\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License  Copyright (c) 2023 Chris Nelson  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wanstatus",
    "package_url": "https://pypi.org/project/wanstatus/",
    "platform": null,
    "project_url": "https://pypi.org/project/wanstatus/",
    "project_urls": {
      "repository": "https://github.com/cjnaz/wanstatus"
    },
    "release_url": "https://pypi.org/project/wanstatus/3.0.1/",
    "requires_dist": [
      "requests",
      "cjnfuncs (>=2.0.1)",
      "importlib-metadata ; python_version < \"3.8\""
    ],
    "requires_python": ">=3.6",
    "summary": "Monitor WAN-side internet access and WAN IP address changes on a home network",
    "version": "3.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17059371,
  "releases": {
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11dda36a597d316ef9866d32901bc53c53d13387f475224887903301409e1766",
          "md5": "ed91c0e5f4106a610218167aaf230d57",
          "sha256": "30d68b338a09e395e3852f3280a1819a1e8f3748fc7a61ac70b700ddde952bb0"
        },
        "downloads": -1,
        "filename": "wanstatus-3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed91c0e5f4106a610218167aaf230d57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22135,
        "upload_time": "2023-02-19T18:24:17",
        "upload_time_iso_8601": "2023-02-19T18:24:17.935035Z",
        "url": "https://files.pythonhosted.org/packages/11/dd/a36a597d316ef9866d32901bc53c53d13387f475224887903301409e1766/wanstatus-3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3c8387202bceb519685d157ebbe592f135567bc53b1688a1c7e97536e66b70f",
          "md5": "4c2ce04e88c2d6797c4cb24e19b82537",
          "sha256": "f066ff7dfd1d1898ade230423c8f9dc4d175b9a982ea76de5176978f15424e86"
        },
        "downloads": -1,
        "filename": "wanstatus-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4c2ce04e88c2d6797c4cb24e19b82537",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20871,
        "upload_time": "2023-02-19T18:24:19",
        "upload_time_iso_8601": "2023-02-19T18:24:19.616306Z",
        "url": "https://files.pythonhosted.org/packages/c3/c8/387202bceb519685d157ebbe592f135567bc53b1688a1c7e97536e66b70f/wanstatus-3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af79e01a75ccd4a790543f8e8d413a5e6c202607a8ba12972ef04470ac7c214d",
          "md5": "848248c65259ca4b30fa5678558dcde4",
          "sha256": "f18b5a083f27af83117ba74057d675e6cee0a74d3bf41b5bd80ce04c2a276e08"
        },
        "downloads": -1,
        "filename": "wanstatus-3.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "848248c65259ca4b30fa5678558dcde4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16046,
        "upload_time": "2023-02-27T04:09:22",
        "upload_time_iso_8601": "2023-02-27T04:09:22.108505Z",
        "url": "https://files.pythonhosted.org/packages/af/79/e01a75ccd4a790543f8e8d413a5e6c202607a8ba12972ef04470ac7c214d/wanstatus-3.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63114b622fc31169014496a30d8b08e58a1f179f4d80114ae9a4ab18102cdee6",
          "md5": "48033ef11c56cfaa91ce10f610d4705a",
          "sha256": "2c425169941cd23ee9caa67926a77a04c60758d47a45d506b082f060b9e2d7cc"
        },
        "downloads": -1,
        "filename": "wanstatus-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "48033ef11c56cfaa91ce10f610d4705a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17525,
        "upload_time": "2023-02-27T04:09:23",
        "upload_time_iso_8601": "2023-02-27T04:09:23.623974Z",
        "url": "https://files.pythonhosted.org/packages/63/11/4b622fc31169014496a30d8b08e58a1f179f4d80114ae9a4ab18102cdee6/wanstatus-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af79e01a75ccd4a790543f8e8d413a5e6c202607a8ba12972ef04470ac7c214d",
        "md5": "848248c65259ca4b30fa5678558dcde4",
        "sha256": "f18b5a083f27af83117ba74057d675e6cee0a74d3bf41b5bd80ce04c2a276e08"
      },
      "downloads": -1,
      "filename": "wanstatus-3.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "848248c65259ca4b30fa5678558dcde4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16046,
      "upload_time": "2023-02-27T04:09:22",
      "upload_time_iso_8601": "2023-02-27T04:09:22.108505Z",
      "url": "https://files.pythonhosted.org/packages/af/79/e01a75ccd4a790543f8e8d413a5e6c202607a8ba12972ef04470ac7c214d/wanstatus-3.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "63114b622fc31169014496a30d8b08e58a1f179f4d80114ae9a4ab18102cdee6",
        "md5": "48033ef11c56cfaa91ce10f610d4705a",
        "sha256": "2c425169941cd23ee9caa67926a77a04c60758d47a45d506b082f060b9e2d7cc"
      },
      "downloads": -1,
      "filename": "wanstatus-3.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "48033ef11c56cfaa91ce10f610d4705a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17525,
      "upload_time": "2023-02-27T04:09:23",
      "upload_time_iso_8601": "2023-02-27T04:09:23.623974Z",
      "url": "https://files.pythonhosted.org/packages/63/11/4b622fc31169014496a30d8b08e58a1f179f4d80114ae9a4ab18102cdee6/wanstatus-3.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}