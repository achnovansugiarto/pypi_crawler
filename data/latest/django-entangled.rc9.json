{
  "info": {
    "author": "Jacob Rief",
    "author_email": "jacob.rief@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.2",
      "Framework :: Django :: 4.0",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "# django-entangled\n\nEdit JSON-Model Fields using a Standard Django Form.\n\n[![Build Status](https://travis-ci.org/jrief/django-entangled.svg?branch=master)](https://travis-ci.org/jrief/django-entangled)\n[![Coverage](https://codecov.io/github/jrief/django-entangled/coverage.svg?branch=master)](https://codecov.io/github/jrief/django-entangled?branch=master)\n[![PyPI](https://img.shields.io/pypi/pyversions/django-entangled.svg)]()\n[![PyPI version](https://img.shields.io/pypi/v/django-entangled.svg)](https://https://pypi.python.org/pypi/django-entangled)\n[![PyPI](https://img.shields.io/pypi/l/django-entangled.svg)]()\n\n\n## Use-Case\n\nA Django Model may contain fields which accept arbitrary data stored as JSON. Django itself, provides a\n[JSON field](https://docs.djangoproject.com/en/stable/ref/models/fields/#django.db.models.JSONField) to store arbitrary\nserializable data.\n\nWhen creating a form from a model, the input field associated with a JSON field, typically is a `<textarea ...></textarea>`.\nThis textarea widget is very inpracticable for editing, because it just contains a textual representation of that\nobject notation. One possibility is to use a generic [JSON editor](https://github.com/josdejong/jsoneditor),\nwhich with some JavaScript, transforms the widget into an attribute-value-pair editor. This approach however requires\nto manage the field keys ourself. It furthermore prevents us from utilizing all the nice features provided by the Django\nform framework, such as field validation, normalization of data and the usage of foreign keys.\n\nBy using **django-entangled**, one can use a Django `ModelForm`, and store all,\nor a subset of that form fields in one or more JSON fields inside of the associated model.\n\n\n## Installation\n\nSimply install this Django app, for instance by invoking:\n\n```bash\npip install django-entangled\n```\n\nThere is no need to add any configuration directives to the project's `settings.py`.\n\n\n## Example\n\nSay, we have a Django model to describe a bunch of different products. The name and the price fields are common to all\nproducts, whereas the properties can vary depending on its product type. Since we don't want to create a different\nproduct model for each product type, we use a JSON field to store these arbitrary properties.\n\n```python\nfrom django.db import models\n\nclass Product(models.Model):\n    name = models.CharField(max_length=50)\n\n    price = models.DecimalField(max_digits=5, decimal_places=2)\n\n    properties = models.JSONField()\n```\n\nIn a typical form editing view, we would create a form inheriting from\n[ModelForm](https://docs.djangoproject.com/en/stable/topics/forms/modelforms/#modelform) and refer to this model using\nthe `model` attribute in its `Meta`-class. Then the `properties`-field would show up as unstructured JSON, rendered\ninside a `<textarea ...></textarea>`. This definitely is not what we want! Instead we create a typical Django Form using\nthe alternative class `EntangledModelForm`.\n\n```python\nfrom django.contrib.auth import get_user_model\nfrom django.forms import fields, models\nfrom entangled.forms import EntangledModelForm\nfrom .models import Product\n\nclass ProductForm(EntangledModelForm):\n    color = fields.RegexField(\n        regex=r'^#[0-9a-f]{6}$',\n    )\n\n    size = fields.ChoiceField(\n        choices=[('s', \"small\"), ('m', \"medium\"), ('l', \"large\"), ('xl', \"extra large\")],\n    )\n\n    tenant = models.ModelChoiceField(\n        queryset=get_user_model().objects.filter(is_staff=True),\n    )\n\n    class Meta:\n        model = Product\n        entangled_fields = {'properties': ['color', 'size', 'tenant']}  # fields provided by this form\n        untangled_fields = ['name', 'price']  # these fields are provided by the Product model\n```\n\nIn case our form inherits from another `ModelForm`, rewrite the class declarartion as:\n\n```python\nclass ProductForm(EntangledModelFormMixin, BaseProductForm):\n    ...\n```\n\nIn addition we add a special dictionary named `entangled_fields` to our `Meta`-options. In this dictionary, the key\n(here `'properties'`) refers to the JSON-field in our model `Product`. The value (here `['color', 'size', 'tenant']`)\nis a list of named form fields, declared in our form- or base-class of thereof. This allows us to assign all standard\nDjango form fields to arbitrary JSON fields declared in our Django model. Moreover, we can even use a `ModelChoiceField`\nor a `ModelMultipleChoiceField` to refer to another model object using a\n[generic relation](https://docs.djangoproject.com/en/stable/ref/contrib/contenttypes/#generic-relations)\n\nSince in this form we also want to access the non-JSON fields from our Django model, we add a list named\n`untangled_fields` to our `Meta`-options. In this list, (here `['name', 'price']`) we refer to the non-JSON fields\nin our model `Product`. From both of these iterables, `entangled_fields` and `untangled_fields`, the parent class\n`EntangledModelForm` then builds the `Meta`-option `fields`, otherwise required. Therefore you should not\nuse `fields` to declare this list, but rather rely on `entangled_fields` and `untangled_fields`.\n\nWe can use this form in any Django form view. A typical use-case, is the built-in Django `ModelAdmin`:\n\n```python\nfrom django.contrib import admin\nfrom .models import Product\nfrom .forms import ProductForm\n\n@admin.register(Product)\nclass ProductAdmin(admin.ModelAdmin):\n    form = ProductForm\n```\n\nSince the form used by this `ModelAdmin`-class\n[can not be created dynamically](https://docs.djangoproject.com/en/stable/ref/contrib/admin/#django.contrib.admin.ModelAdmin.form),\nwe have to declare it explicitly using the `form`-attribute. This is the only change which has to be performed, in\norder to store arbitrary content inside our JSON model-fields.\n\n\n## Nested Data Structures\n\nSometimes it can be desirable to store the data in a nested hierarchy of dictionaries, rather than having all\nattribute-value-pairs in the first level of our JSON field. This can for instance be handy when merging more than one\nform, all themselves ineriting from `EntangledModelFormMixin`.\n\nSay that we have different types of products, all of which share the same base product form:\n\n```python\nfrom django.contrib.auth import get_user_model\nfrom django.forms import models\nfrom entangled.forms import EntangledModelFormMixin\nfrom .models import Product\n\nclass BaseProductForm(EntangledModelFormMixin):\n    tenant = models.ModelChoiceField(\n        queryset=get_user_model().objects.filter(is_staff=True),\n    )\n\n    class Meta:\n        model = Product\n        entangled_fields = {'properties': ['tenant']}\n        untangled_fields = ['name', 'price']\n```\n\nIn order to specialize our base product towards, say clothing, we typically would inherit from the base form\nand add some additional fields, here `color` and `size`:\n\n```python\nfrom django.forms import fields\nfrom .forms import BaseProductForm\nfrom .models import Product\n\nclass ClothingProductForm(BaseProductForm):\n    color = fields.RegexField(\n        regex=r'^#[0-9a-f]{6}$',\n    )\n\n    size = fields.ChoiceField(\n        choices=[('s', \"small\"), ('m', \"medium\"), ('l', \"large\"), ('xl', \"extra large\")],\n    )\n\n    class Meta:\n        model = Product\n        entangled_fields = {'properties': ['color', 'size']}\n        retangled_fields = {'color': 'variants.color', 'size': 'variants.size'}\n```\n\nBy adding a name mapping from our existing field names, we can group the fields `color` and `size`\ninto a sub-dictionary named `variants` inside our `properties` fields. Such a field mapping is\ndeclared through the optional Meta-option `retangled_fields`. In this dictionary, all entries are\noptional; if a field name is missing, it just maps to itself.\n\nThis mapping table can also be used to map field names to other keys inside the resulting JSON\ndatastructure. This for instance is handy to map fields containg an underscore into field-names\ncontaining instead a dash. \n\n\n## Caveats\n\nDue to the nature of JSON, indexing and thus building filters or sorting rules based on the fields content is not as\nsimple, as with standard model fields. Therefore, this approach is best suited, if the main focus is to store data,\nrather than digging through data.\n\nForeign keys are stored as `\"fieldname\": {\"model\": \"appname.modelname\", \"pk\": 1234}` in our JSON field, meaning that\nwe have no database constraints. If a target object is deleted, that foreign key points to nowhere. Therefore always\nkeep in mind, that we don't have any referential integrity and hence must write our code in a defensive manner.\n\n\n[![Twitter Follow](https://img.shields.io/twitter/follow/jacobrief?style=social)](https://twitter.com/jacobrief)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jrief/django-entangled",
    "keywords": "Django Forms,JSON",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-entangled",
    "package_url": "https://pypi.org/project/django-entangled/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/django-entangled/",
    "project_urls": {
      "Homepage": "https://github.com/jrief/django-entangled"
    },
    "release_url": "https://pypi.org/project/django-entangled/0.5.3/",
    "requires_dist": [
      "django (>=2.1)"
    ],
    "requires_python": "",
    "summary": "Edit JSON field using Django Model Form",
    "version": "0.5.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12907947,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "752e481e6fc57df7491034585b5e1a4107e1019a23915b632cf45064ba521337",
          "md5": "a6b4bb45a0ee24b55d03e6e19af05523",
          "sha256": "4cc39273655c7a64ea10ed4478fbefc0b5fabb999019b47d387d81c84765d6ce"
        },
        "downloads": -1,
        "filename": "django-entangled-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a6b4bb45a0ee24b55d03e6e19af05523",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6667,
        "upload_time": "2019-05-27T16:51:17",
        "upload_time_iso_8601": "2019-05-27T16:51:17.302065Z",
        "url": "https://files.pythonhosted.org/packages/75/2e/481e6fc57df7491034585b5e1a4107e1019a23915b632cf45064ba521337/django-entangled-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a6da2d72d85d66bb1f37a56d7fe54300d40f49ed7ca18c557d297a4f1d53357",
          "md5": "8762624dc915af216281d4fe8841fa10",
          "sha256": "f53cd88962d5b63e25fc0ada7cd2526e3e6c02e336d3cdf6517932712a281fd0"
        },
        "downloads": -1,
        "filename": "django-entangled-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8762624dc915af216281d4fe8841fa10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7852,
        "upload_time": "2019-05-29T09:34:46",
        "upload_time_iso_8601": "2019-05-29T09:34:46.493241Z",
        "url": "https://files.pythonhosted.org/packages/0a/6d/a2d72d85d66bb1f37a56d7fe54300d40f49ed7ca18c557d297a4f1d53357/django-entangled-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1560e421e059bda3e1a8c6c190e9b63d553147c53fc2cd730a6b120d1042e3f",
          "md5": "543d45d2c27e4cccd4082a451299956a",
          "sha256": "e51cb1748f30d3dc474fd32d195f051307507a3dbbe789f0fed29b80ce2e6a35"
        },
        "downloads": -1,
        "filename": "django-entangled-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "543d45d2c27e4cccd4082a451299956a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9211,
        "upload_time": "2019-06-12T13:18:46",
        "upload_time_iso_8601": "2019-06-12T13:18:46.706602Z",
        "url": "https://files.pythonhosted.org/packages/c1/56/0e421e059bda3e1a8c6c190e9b63d553147c53fc2cd730a6b120d1042e3f/django-entangled-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b54a697c81f382a8a9b49dcd83a8c626d8b28c293eddff18c1b917ee257a1b4d",
          "md5": "84d07e50d6cde84b2fef9bf34faf1394",
          "sha256": "4a86da73ec449ff910a4bb2f81051525a2e8e77622bc3d560a41a697911feb26"
        },
        "downloads": -1,
        "filename": "django-entangled-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "84d07e50d6cde84b2fef9bf34faf1394",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9754,
        "upload_time": "2020-11-21T10:57:19",
        "upload_time_iso_8601": "2020-11-21T10:57:19.206792Z",
        "url": "https://files.pythonhosted.org/packages/b5/4a/697c81f382a8a9b49dcd83a8c626d8b28c293eddff18c1b917ee257a1b4d/django-entangled-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57664f9498730df3b7449af296f8d3b89e392f0cacd0d9be139ad6b571d9c819",
          "md5": "4742aa8c48635059a49bd987bf280286",
          "sha256": "d53745809906103247dfdb24e5918c30a81de5c33f03e56f98abfb3c924586cd"
        },
        "downloads": -1,
        "filename": "django-entangled-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4742aa8c48635059a49bd987bf280286",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10932,
        "upload_time": "2020-12-03T08:11:59",
        "upload_time_iso_8601": "2020-12-03T08:11:59.976096Z",
        "url": "https://files.pythonhosted.org/packages/57/66/4f9498730df3b7449af296f8d3b89e392f0cacd0d9be139ad6b571d9c819/django-entangled-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4b87d1d683d17d40d149b003213cfd8edb7899d77f06e87110cd66eec4399f5",
          "md5": "c31949ad5151746ada588f550f1e3034",
          "sha256": "72ceb971590e5f942dde41030a74d1701d3f8f1975de52ff4f33f08ea4dec7a8"
        },
        "downloads": -1,
        "filename": "django_entangled-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c31949ad5151746ada588f550f1e3034",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13518,
        "upload_time": "2022-02-02T16:16:20",
        "upload_time_iso_8601": "2022-02-02T16:16:20.345761Z",
        "url": "https://files.pythonhosted.org/packages/f4/b8/7d1d683d17d40d149b003213cfd8edb7899d77f06e87110cd66eec4399f5/django_entangled-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6061a55020e43e1e318504a77a6828dfb459a7c531f5179866bb3c07d9e46b37",
          "md5": "eed00cf42c823738c36ad7a19011b2cd",
          "sha256": "9094878c513efe09d2d38a7d7403dee17554e8f40548428715acdb4b5e88566b"
        },
        "downloads": -1,
        "filename": "django-entangled-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "eed00cf42c823738c36ad7a19011b2cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10940,
        "upload_time": "2022-02-02T16:16:21",
        "upload_time_iso_8601": "2022-02-02T16:16:21.784803Z",
        "url": "https://files.pythonhosted.org/packages/60/61/a55020e43e1e318504a77a6828dfb459a7c531f5179866bb3c07d9e46b37/django-entangled-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a28dcfc3e951e969c51db931d771aeba3f7e913386e5281f9cf68c7957b2ae9",
          "md5": "fbb0ead8801b959de6c76bf95e4f77f2",
          "sha256": "b43e41943b73a497864e27729c08781e1ad069461d308d6071d1b358aacde0b9"
        },
        "downloads": -1,
        "filename": "django_entangled-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbb0ead8801b959de6c76bf95e4f77f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13578,
        "upload_time": "2022-02-11T20:14:05",
        "upload_time_iso_8601": "2022-02-11T20:14:05.231457Z",
        "url": "https://files.pythonhosted.org/packages/3a/28/dcfc3e951e969c51db931d771aeba3f7e913386e5281f9cf68c7957b2ae9/django_entangled-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e185cc42f1931450535c2ce0dfd2b4a6c6383cd5d3190361aa7d09478c0592ad",
          "md5": "48109fc669919e8ff137de1d93964abf",
          "sha256": "71348ce4582129e3cdc23a910c5676d4feb4f3ca58ca931d7c08642dc5e6df04"
        },
        "downloads": -1,
        "filename": "django-entangled-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "48109fc669919e8ff137de1d93964abf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10971,
        "upload_time": "2022-02-11T20:14:06",
        "upload_time_iso_8601": "2022-02-11T20:14:06.160104Z",
        "url": "https://files.pythonhosted.org/packages/e1/85/cc42f1931450535c2ce0dfd2b4a6c6383cd5d3190361aa7d09478c0592ad/django-entangled-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a70ecc034f1b7a671e1318428adb2fdb1d32ec88c8356926264a9d575a8df474",
          "md5": "37b36240ce608cbd22efa8f61dfbc94e",
          "sha256": "48be92426b11c10fb2336df48a7f69dc1608a027321067c723f4b206f603ffff"
        },
        "downloads": -1,
        "filename": "django_entangled-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "37b36240ce608cbd22efa8f61dfbc94e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13547,
        "upload_time": "2022-02-16T10:57:05",
        "upload_time_iso_8601": "2022-02-16T10:57:05.611545Z",
        "url": "https://files.pythonhosted.org/packages/a7/0e/cc034f1b7a671e1318428adb2fdb1d32ec88c8356926264a9d575a8df474/django_entangled-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5618d63526dec2b8d69a99c315a24519bfe080d5c87a1897297c7b7b9fb78131",
          "md5": "1a26bb2084789536ba6853329649bc23",
          "sha256": "a7e1993316128c493bda027847e07d0664f458b1f38f5e53ac90bc6f21f522e5"
        },
        "downloads": -1,
        "filename": "django-entangled-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1a26bb2084789536ba6853329649bc23",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10957,
        "upload_time": "2022-02-16T10:57:07",
        "upload_time_iso_8601": "2022-02-16T10:57:07.054320Z",
        "url": "https://files.pythonhosted.org/packages/56/18/d63526dec2b8d69a99c315a24519bfe080d5c87a1897297c7b7b9fb78131/django-entangled-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "057d645688ef8c808ffd2201a34969e84f6f1a68e8804b76f82d3b5dd4030965",
          "md5": "af7a2c4c70899fc1a4af6da85b66952a",
          "sha256": "fafae32d40936790cd71b9b15a1f3001a3278e7b17e6226a9bd3ccab590ea6b4"
        },
        "downloads": -1,
        "filename": "django_entangled-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af7a2c4c70899fc1a4af6da85b66952a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13641,
        "upload_time": "2022-02-16T11:43:30",
        "upload_time_iso_8601": "2022-02-16T11:43:30.416600Z",
        "url": "https://files.pythonhosted.org/packages/05/7d/645688ef8c808ffd2201a34969e84f6f1a68e8804b76f82d3b5dd4030965/django_entangled-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afa49f58323248ca886198175710a87ef6d369e1cb7553440dd462f1085a1b4b",
          "md5": "2b67a7178eea842e5a9dc1f3aa6e4720",
          "sha256": "6011bc1bfd3dfeeed1df8b9197a84cef1f810adb7f41b92f339963e181a9211d"
        },
        "downloads": -1,
        "filename": "django-entangled-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2b67a7178eea842e5a9dc1f3aa6e4720",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10991,
        "upload_time": "2022-02-16T11:43:31",
        "upload_time_iso_8601": "2022-02-16T11:43:31.745195Z",
        "url": "https://files.pythonhosted.org/packages/af/a4/9f58323248ca886198175710a87ef6d369e1cb7553440dd462f1085a1b4b/django-entangled-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "057d645688ef8c808ffd2201a34969e84f6f1a68e8804b76f82d3b5dd4030965",
        "md5": "af7a2c4c70899fc1a4af6da85b66952a",
        "sha256": "fafae32d40936790cd71b9b15a1f3001a3278e7b17e6226a9bd3ccab590ea6b4"
      },
      "downloads": -1,
      "filename": "django_entangled-0.5.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "af7a2c4c70899fc1a4af6da85b66952a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13641,
      "upload_time": "2022-02-16T11:43:30",
      "upload_time_iso_8601": "2022-02-16T11:43:30.416600Z",
      "url": "https://files.pythonhosted.org/packages/05/7d/645688ef8c808ffd2201a34969e84f6f1a68e8804b76f82d3b5dd4030965/django_entangled-0.5.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "afa49f58323248ca886198175710a87ef6d369e1cb7553440dd462f1085a1b4b",
        "md5": "2b67a7178eea842e5a9dc1f3aa6e4720",
        "sha256": "6011bc1bfd3dfeeed1df8b9197a84cef1f810adb7f41b92f339963e181a9211d"
      },
      "downloads": -1,
      "filename": "django-entangled-0.5.3.tar.gz",
      "has_sig": false,
      "md5_digest": "2b67a7178eea842e5a9dc1f3aa6e4720",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10991,
      "upload_time": "2022-02-16T11:43:31",
      "upload_time_iso_8601": "2022-02-16T11:43:31.745195Z",
      "url": "https://files.pythonhosted.org/packages/af/a4/9f58323248ca886198175710a87ef6d369e1cb7553440dd462f1085a1b4b/django-entangled-0.5.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}