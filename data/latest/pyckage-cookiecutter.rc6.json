{
  "info": {
    "author": "Zhiwei Zhang",
    "author_email": "zhiwei2017@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "Pyckage Cookiecutter\n====================\n\n.. readthedocs badge\n.. image:: https://readthedocs.org/projects/pyckage-cookiecutter/badge/?version=latest\n    :target: https://pyckage-cookiecutter.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. actions building badge\n.. image:: https://github.com/zhiwei2017/pyckage-cookiecutter/workflows/Unit%20Test%20&%20Build%20Test/badge.svg\n    :target: https://github.com/zhiwei2017/pyckage-cookiecutter/actions\n\n.. pypi version badge\n.. image:: https://img.shields.io/pypi/v/pyckage-cookiecutter.svg\n    :target: https://pypi.python.org/pypi/pyckage-cookiecutter/\n\n.. license badge\n.. image:: https://img.shields.io/pypi/l/pyckage-cookiecutter.svg\n    :target: https://pypi.python.org/pypi/pyckage-cookiecutter/\n\n.. python version badge from PyPI\n.. image:: https://img.shields.io/pypi/pyversions/pyckage-cookiecutter.svg\n    :target: https://pypi.python.org/pypi/pyckage-cookiecutter/\n    :alt: Python 3.6 | Python 3.7 | Python 3.8 | Python 3.9\n\n.. pypi format\n.. image:: https://img.shields.io/pypi/format/pyckage-cookiecutter.svg\n    :target: https://badge.fury.io/py/pyckage-cookiecutter\n\nIntroduction\n------------\n\nThis projects consist of a cookiecutter_\ntemplate that generates a full structure for a creating a PyPi standard package.\n\nWhile using this project, you will be asked to provide some inputs such as the author,\nthe name of the project, etc. As result you will obtain the\ncomplete file and folder structure to quickly start to code your package.\n\nPrerequisites\n-------------\n\nPlease install the Python package cookiecutter_ before using it::\n\n    $ pip install cookiecutter\n\nHow to Use\n----------\n\nTutorial\n++++++++\n\nLet's pretend you want to create a project called \"redditclone\".\nBy using this template based on cookiecutter_,\nyou will be able to quickly setup a buildable PyPi package.\n\nFirst, get cookiecutter_. Trust me, it's awesome::\n\n     $ pip install cookiecutter\n\nNow run it against this repo::\n\n     $ cookiecutter https://github.com/zhiwei2017/pyckage-cookiecutter\n\nYou'll be prompted for some values. Provide them, then a project will be created for you.\n\n**Warning**: After this point, change 'My Awesome Project', 'John Doe', etc to your own information.\n\nAnswer the prompts with your own desired `Prompts <https://pyckage-cookiecutter.readthedocs.io/en/latest/02_prompts.html>`_. For example::\n\n    Cloning into 'pyckage-cookiecutter'...\n    remote: Enumerating objects: 219, done.\n    remote: Counting objects: 100% (219/219), done.\n    remote: Compressing objects: 100% (123/123), done.\n    remote: Total 219 (delta 83), reused 181 (delta 69), pack-reused 0\n    Receiving objects: 100% (219/219), 41.09 KiB | 1.71 MiB/s, done.\n    Resolving deltas: 100% (83/83), done.\n    author [John Doe]: John Doe\n    email [john-doe@example.com]: john.doe@example.com\n    project_name [My Awesome Project]: Reddit Clone\n    project_slug [reddit_clone]: reddit\n    project_url [https://github.com/example_project]: https://github.com/reddit-clone\n    short_description [Behold My Awesome Project!]: A reddit clone.\n    version [0.1.0]: 0.1.0\n    Select license:\n    1 - MIT\n    2 - APACHE\n    3 - 2-Clause BSD\n    4 - 3-Clause BSD\n    5 - GPL\n    6 - None\n    Choose from 1, 2, 3, 4, 5, 6 [1]: 1\n    Select ci_tool:\n    1 - GitHub\n    2 - GitLab\n    3 - Bitbucket\n    4 - None\n    Choose from 1, 2, 3, 4 [1]: 1\n\nEnter the project and take a look around::\n\n    $ cd reddit/\n    $ ls\n\nYour repo should have the following structure::\n\n    reddit\n    ├── .github                         - github actions configurations\n    │   └── workflows\n    │       ├── test.yml                - pipelines for linting checks and testing\n    │       ├── release.yml             - pipelines for releases with tags\n    │       └── sphinx.yml              - pipelines for publishing github pages\n    ├── docs                            - sphinx documentation\n    │   ├── Makefile                    - Makefile defines terminal commands for sphinx documentation\n    │   └── source                      - documentation source folder\n    │       ├── 01_about.rst\n    │       ├── 02_installation.rst\n    │       ├── 03_usage.rst\n    │       ├── 04_source.rst\n    │       ├── 05_authors.rst\n    │       ├── 06_contributing.rst\n    │       ├── conf.py                 - sphinx configuration file\n    │       └── index.rst\n    ├── reddit\n    │   └── version.py                  - version information\n    ├── requirements                    - package dependencies\n    │   ├── base.txt                    - base dependencies\n    │   ├── doc.txt                     - documentation dependencies\n    │   └── dev.txt                     - tests dependencies\n    ├── tests                           - tests\n    │   ├── resources                   - resources used in tests\n    │   ├── conftest.py                 - fixtures in tests\n    │   └── test_version.py             - test version information.\n    ├── .gitignore\n    ├── CONTRIBUTING.rst                - contributing guidelines\n    ├── LICENSE\n    ├── Makefile                        - predefined terminal commands\n    ├── MANIFEST.in                     - commands, one per line, instructing setuptools to add or remove some set of files from the sdis\n    ├── README.rst                      - package information\n    ├── setup.cfg                       - configurations for mypy, bandit, pytest etc. Centralizing all the configurations to one place.\n    ├── setup.py                        - package installation configuration\n    └── tox.ini                         - run tests with multiple python versions\n\nIf you want to use CI/CD pipeline for uploading your package to PyPi, please check the section **CI/CD configuration**.\n\n**Note**:\n\n+ This repo is built as a wheel package and uploaded to `PyPi <https://pypi.python.org/pypi/pyckage-cookiecutter/>`_. You can install it through::\n\n    $ pip install pyckage-cookiecutter\n\n  And start generating a new project by call::\n\n    $ pyckage_cookiecutter\n\n  The rest is the same as the `Tutorial <#tutorial>`_ introduced.\n\nCI/CD Pipelines\n+++++++++++++++\n\nThe CI/CD pipelines are predefined in the generated project. Please check following sections for\nwhich steps are included and how to configure them in different platforms.\n\nGitHub Actions\n~~~~~~~~~~~~~~\n\nYou can find all the configuration files of GitHub Actions in ``.github/workflows`` folder.\n\nContent\n:::::::\n\n+-------------+----------------------------------------------+--------------------------------------------------+------------------------------------------------------------------------+\n| Config File |          Steps                               |                Trigger Rules                     | Requisite CI/CD Variables                                              |\n+=============+==============================================+==================================================+========================================================================+\n|             | mypy check                                   |                                                  |                                                                        |\n|             +----------------------------------------------+                                                  |                                                                        |\n|             | flake8 check                                 | + **Pushes** to *master/develop* branches        |                                                                        |\n|             +----------------------------------------------+                                                  |                                                                        |\n| test.yml    | bandit check                                 | + **Pull Requests** to *master/develop* branches |                                                                        |\n|             +----------------------------------------------+                                                  |                                                                        |\n|             | test with python 3.7 (Ubuntu/Mac OS/Windows) |                                                  |                                                                        |\n|             +----------------------------------------------+                                                  |                                                                        |\n|             | test with python 3.8 (Ubuntu/Mac OS/Windows) |                                                  |                                                                        |\n|             +----------------------------------------------+                                                  |                                                                        |\n|             | test with python 3.9 (Ubuntu/Mac OS/Windows) |                                                  |                                                                        |\n|             +----------------------------------------------+                                                  |                                                                        |\n|             | test with python 3.10 (Ubuntu/Mac OS/Windows)|                                                  |                                                                        |\n|             +----------------------------------------------+                                                  |                                                                        |\n|             | twine check the built package                |                                                  |                                                                        |\n+-------------+----------------------------------------------+--------------------------------------------------+------------------------------------------------------------------------+\n|             |                                              |                                                  | TWINE_USERNAME                                                         |\n| release.yml | deploy to PyPi                               | **Pushes** to tags matching *vXX.XX.XX*          +------------------------------------------------------------------------+\n|             |                                              |                                                  | TWINE_PASSWORD                                                         |\n+-------------+----------------------------------------------+--------------------------------------------------+------------------------------------------------------------------------+\n| sphinx.yml  | deploy GitHub pages                          | **Pushes** to *master* branch                    |                                                                        |\n+-------------+----------------------------------------------+--------------------------------------------------+------------------------------------------------------------------------+\n\n**Note**:\n\n+ Before publishing the GitHub pages of your project for the first time, please manually create the branch **gh-pages** via::\n\n    $ git checkout master\n    $ git checkout -b gh-pages\n    $ git push origin gh-pages\n\nSetup Steps\n:::::::::::\n\n1. Go to **Settings**.\n2. Click **Secrets** section.\n3. Click **New repository secret** button.\n4. Input the name and value of a CI/CD variable.\n\nGitLab CI\n~~~~~~~~~\n\nThe file ``.gitlab-ci.yml`` contains all the configurations for GitLab CI.\n\nContent\n:::::::\n\n+-------------+---------------------------------+--------------------------------------------------+------------------------------------------------------------------------+\n| Stages      |          Steps                  |                Trigger Rules                     | Requisite CI/CD Variables                                              |\n+=============+=================================+==================================================+========================================================================+\n|             | mypy check                      |                                                  |                                                                        |\n|             +---------------------------------+                                                  |                                                                        |\n| linting     | flake8 check                    | + **Pushes** to *master/develop* branches        |                                                                        |\n|             +---------------------------------+                                                  |                                                                        |\n|             | bandit check                    | + Any **Merge Requests**                         |                                                                        |\n+-------------+---------------------------------+                                                  +------------------------------------------------------------------------+\n|             | test with python 3.7            |                                                  |                                                                        |\n|             +---------------------------------+                                                  |                                                                        |\n| test        | test with python 3.8            |                                                  |                                                                        |\n|             +---------------------------------+                                                  |                                                                        |\n|             | test with python 3.9            |                                                  |                                                                        |\n|             +---------------------------------+                                                  |                                                                        |\n|             | test with python 3.10           |                                                  |                                                                        |\n+-------------+---------------------------------+                                                  +------------------------------------------------------------------------+\n| build       | twine check the built package   |                                                  |                                                                        |\n+-------------+---------------------------------+--------------------------------------------------+------------------------------------------------------------------------+\n|             |                                 |                                                  | TWINE_USERNAME                                                         |\n| deploy      | deploy to PyPi                  | **Pushes** to tags matching *vXX.XX.XX*          +------------------------------------------------------------------------+\n|             |                                 |                                                  | TWINE_PASSWORD                                                         |\n+-------------+---------------------------------+--------------------------------------------------+------------------------------------------------------------------------+\n\nSetup Steps\n:::::::::::\n\n1. Go to **Settings**.\n2. Click **CI/CD** section.\n3. Go to **Variables** section.\n4. Click **Add variable** button.\n5. Input the name and value of a CI/CD variable.\n\n    By default, the flag **protected** is checked, which means the added variable can only be used for protected branches/tags.\n    If you want to keep your variable protected, please add wildcards **v*** as protected tags in **Settings** -> **Repository** -> **Protected tags**.\n\n    Or you can uncheck the box to use the variable for all branches and tags.\n\nBitbucket Pipelines\n~~~~~~~~~~~~~~~~~~~\n\nThe file ``bitbucket-pipelines.yml`` contains all the configurations of Bitbucket Pipelines.\n\nContent\n:::::::\n\n+---------------------------------+--------------------------------------------------+------------------------------------------------------------------------+\n|          Steps                  |                Trigger Rules                     | Requisite CI/CD Variables                                              |\n+=================================+==================================================+========================================================================+\n| mypy check                      |                                                  |                                                                        |\n+---------------------------------+                                                  |                                                                        |\n| flake8 check                    | + **Pushes** to *master/develop* branches        |                                                                        |\n+---------------------------------+                                                  |                                                                        |\n| bandit check                    | + Any **Pull Requests**                          |                                                                        |\n+---------------------------------+                                                  |                                                                        |\n| test with python 3.7            |                                                  |                                                                        |\n+---------------------------------+                                                  |                                                                        |\n| test with python 3.8            |                                                  |                                                                        |\n+---------------------------------+                                                  |                                                                        |\n| test with python 3.9            |                                                  |                                                                        |\n+---------------------------------+                                                  |                                                                        |\n| test with python 3.10           |                                                  |                                                                        |\n+---------------------------------+                                                  |                                                                        |\n| twine check the built package   |                                                  |                                                                        |\n+---------------------------------+--------------------------------------------------+------------------------------------------------------------------------+\n|                                 |                                                  | TWINE_USERNAME                                                         |\n| deploy to PyPi                  | **Pushes** to tags matching *vXX.XX.XX*          +------------------------------------------------------------------------+\n|                                 |                                                  | TWINE_PASSWORD                                                         |\n+---------------------------------+--------------------------------------------------+------------------------------------------------------------------------+\n\nSetup Steps\n:::::::::::\n\n1. Go to **Repository settings**.\n2. Click **Repository variables**.\n3. Click **add** button.\n4. Input the name and value of a CI/CD variable.\n\n    You need to enable pipelines before adding a new variable for the first time.\n\nMakefile\n++++++++\n\n.. list-table::\n   :header-rows: 1\n\n   * - Command\n     - Description\n   * - clean\n     - Remove autogenerated folders and artifacts.\n   * - clean-pyc\n     - Remove python artifacts.\n   * - clean-build\n     - Remove build artifacts.\n   * - bandit\n     - Install and run `bandit`_ security analysis.\n   * - mypy\n     - Install and run `mypy`_ type checking.\n   * - flake8\n     - Install and run `flake8`_ linting.\n   * - install_requirements\n     - Install all the packages listed in txt files in requirements folder.\n   * - test\n     - Run tests and generate coverage report.\n   * - build_whl\n     - Build wheel package.\n\nAcknowledgements\n----------------\n\nSpecial thanks to the project `cookiecutter-pypackage <https://github.com/audreyfeldroy/cookiecutter-pypackage>`_ for the nice *CONTRIBUTING.rst* template.\n\nAuthor\n------\n\n* `Zhiwei Zhang <https://github.com/zhiwei2017>`_ - *Author* / *Maintainer* - `zhiwei2017@gmail.com <mailto:zhiwei2017@gmail.com?subject=[GitHub]Pyckage%20Cookiecutter>`_\n\n\n.. _bandit: https://bandit.readthedocs.io/en/latest/\n.. _mypy: https://github.com/python/mypy\n.. _flake8: https://gitlab.com/pycqa/flake8\n.. _pytest: https://docs.pytest.org/en/stable/\n.. _cookiecutter: https://github.com/cookiecutter/cookiecutter\n.. _pyckage-cookiecutter: https://github.com/zhiwei2017/pyckage-cookiecutter\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zhiwei2017/pyckage-cookiecutter",
    "keywords": "cookiecutter template,python37,python38,python39,python310,github-actions,gitlab-ci,bitbucket-pipelines",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyckage-cookiecutter",
    "package_url": "https://pypi.org/project/pyckage-cookiecutter/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyckage-cookiecutter/",
    "project_urls": {
      "Documentation": "https://zhiwei2017.github.io/pyckage-cookiecutter/",
      "Homepage": "https://github.com/zhiwei2017/pyckage-cookiecutter",
      "Repository": "https://github.com/zhiwei2017/pyckage-cookiecutter"
    },
    "release_url": "https://pypi.org/project/pyckage-cookiecutter/0.3.0/",
    "requires_dist": [
      "cookiecutter (>=2.1,<2.2)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "This projects consist of a cookiecutter template that generates a full structure for a creating a PyPi standard package.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15908306,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c61e76aaad4eb22d3df32d7b2c2770087c1207eb5446de4df8c1bc218013772",
          "md5": "79f18dea0e0e90da42cea650afefc0fb",
          "sha256": "6f85c5a11eee2ddcb83b64306c2f6c47585c22113790ff7682d82a5d2ffb6963"
        },
        "downloads": -1,
        "filename": "Pyckage_Cookiecutter-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79f18dea0e0e90da42cea650afefc0fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 29483,
        "upload_time": "2021-09-01T09:15:51",
        "upload_time_iso_8601": "2021-09-01T09:15:51.064820Z",
        "url": "https://files.pythonhosted.org/packages/6c/61/e76aaad4eb22d3df32d7b2c2770087c1207eb5446de4df8c1bc218013772/Pyckage_Cookiecutter-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7de87cbc9569992d95a3e60c9a491245f27f0bb2c118da31f2932ad90ffd626a",
          "md5": "0dfb2660340eebc58a7c8617220c1922",
          "sha256": "77087e3c87408b600703cdcc371f4a8b87162570cce2bba820f6479fb2dc8316"
        },
        "downloads": -1,
        "filename": "Pyckage_Cookiecutter-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dfb2660340eebc58a7c8617220c1922",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 29604,
        "upload_time": "2021-09-06T14:06:16",
        "upload_time_iso_8601": "2021-09-06T14:06:16.994179Z",
        "url": "https://files.pythonhosted.org/packages/7d/e8/7cbc9569992d95a3e60c9a491245f27f0bb2c118da31f2932ad90ffd626a/Pyckage_Cookiecutter-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce8e623d79dddae4b6ea32525376f76f15dd46462e33b30bb802358e811cbdfb",
          "md5": "13b5cb4924f4e72423f85f9539c985ce",
          "sha256": "6f65c9161b4a6d66b5c7c216a65dccf6d9b1f5e0446c3b70afb1b8d969372495"
        },
        "downloads": -1,
        "filename": "Pyckage_Cookiecutter-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13b5cb4924f4e72423f85f9539c985ce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 32469,
        "upload_time": "2021-09-07T12:24:23",
        "upload_time_iso_8601": "2021-09-07T12:24:23.003985Z",
        "url": "https://files.pythonhosted.org/packages/ce/8e/623d79dddae4b6ea32525376f76f15dd46462e33b30bb802358e811cbdfb/Pyckage_Cookiecutter-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8b25ace007464f1a92f99095fbaea18b8dff4409e24de671f37a961df3684cc",
          "md5": "2ae0bf4462e4dc1689010cba2b2b6d16",
          "sha256": "a92dc414a9cd7c21c34d9a0b209a0f5cb0f4df71b0066b4ce572b40da2e386cb"
        },
        "downloads": -1,
        "filename": "Pyckage_Cookiecutter-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ae0bf4462e4dc1689010cba2b2b6d16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 31881,
        "upload_time": "2021-09-16T20:21:02",
        "upload_time_iso_8601": "2021-09-16T20:21:02.844475Z",
        "url": "https://files.pythonhosted.org/packages/a8/b2/5ace007464f1a92f99095fbaea18b8dff4409e24de671f37a961df3684cc/Pyckage_Cookiecutter-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db93856203bee1cee986d6a960c708736554c3badf490a53dc48706e4a86b005",
          "md5": "98afc03539910deadc1ecf1e3f326162",
          "sha256": "a28b3a2ae0ba7716cd1b0e97a8791b63de9b807638016220eef6022158824c6b"
        },
        "downloads": -1,
        "filename": "Pyckage_Cookiecutter-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98afc03539910deadc1ecf1e3f326162",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 31286,
        "upload_time": "2021-12-24T13:59:53",
        "upload_time_iso_8601": "2021-12-24T13:59:53.293694Z",
        "url": "https://files.pythonhosted.org/packages/db/93/856203bee1cee986d6a960c708736554c3badf490a53dc48706e4a86b005/Pyckage_Cookiecutter-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69c8266a637496373601b531b4b506fed2d27e38a1aa927933db85ded0315afb",
          "md5": "68ec6aa41e195a68e7ca61312b4c7a8b",
          "sha256": "71f66d0ed42145c32bea0b7d3bbe1fa6a62221cd55da29f361ac95d0abb52f78"
        },
        "downloads": -1,
        "filename": "pyckage_cookiecutter-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68ec6aa41e195a68e7ca61312b4c7a8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 30875,
        "upload_time": "2022-11-28T00:46:51",
        "upload_time_iso_8601": "2022-11-28T00:46:51.741267Z",
        "url": "https://files.pythonhosted.org/packages/69/c8/266a637496373601b531b4b506fed2d27e38a1aa927933db85ded0315afb/pyckage_cookiecutter-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69c8266a637496373601b531b4b506fed2d27e38a1aa927933db85ded0315afb",
        "md5": "68ec6aa41e195a68e7ca61312b4c7a8b",
        "sha256": "71f66d0ed42145c32bea0b7d3bbe1fa6a62221cd55da29f361ac95d0abb52f78"
      },
      "downloads": -1,
      "filename": "pyckage_cookiecutter-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "68ec6aa41e195a68e7ca61312b4c7a8b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 30875,
      "upload_time": "2022-11-28T00:46:51",
      "upload_time_iso_8601": "2022-11-28T00:46:51.741267Z",
      "url": "https://files.pythonhosted.org/packages/69/c8/266a637496373601b531b4b506fed2d27e38a1aa927933db85ded0315afb/pyckage_cookiecutter-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}