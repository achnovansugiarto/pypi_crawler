{
  "info": {
    "author": "Jiancheng Yang and Xiaoyang Huang",
    "author_email": "jekyll4168@sjtu.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# ACSConv\n\nReinventing 2D Convolutions for 3D Images ([arXiv](https://arxiv.org/abs/1911.10477))\n\nIEEE Journal of Biomedical and Health Informatics (IEEE JBHI), 2021 ([DOI](http://doi.org/10.1109/JBHI.2021.3049452))\n\n**News**:\n- 2022.01.26 - ACS [ConvNeXt](acsconv/models/convnext.py) supported.\n- 2021.12.17 - torch 1.10 supported & pip installation supported.\n- 2021.4.19 - torch 1.8 supported.\n\n## Key contributions\n\n* ACS convolution aims at a **plug-and-play replacement** of standard 3D convolution, for 3D medical images.\n* ACS convolution enables **2D-to-3D transfer learning**, which consistently provides significant performance boost in our experiments.\n* Even without pretraining, ACS convolution is **comparable to or even better than** 3D convolution, with **smaller model size** and **less computation**.\n\n\n## Package Installation\n\nIf you want to use this class, you have two options:\n\nA) Install ACSConv as a standard Python package from PyPI:\n\n```bash\npip install ACSConv\n```\n\nB) Simply copy and paste it in your project;\n\n\nYou could run the `test.py` to validate the installation. (If you want to test the validity of pip installation, please move this `test.py` file outside of this git project directory, otherwise it is testing the code inside the project instead of pip installation.)\n\n## Requirements\n### PyTorch requirements\n\n```python\ntorch>=1.0.0 and torch<=1.10.0\n```\n\nYou can install it on the [official homepage](https://pytorch.org/docs/stable/index.html).\n\n### Other requirements\n\nAll libraries needed to run the included experiments (base requirements included).\n\n```python\nfire\njupyterlab\nmatplotlib\npandas\ntqdm\nsklearn\ntensorboardx\n```\n\n## Code structure\n\n* ``acsconv``\n  the core implementation of ACS convolution, including the operators, models, and 2D-to-3D/ACS model converters.\n  * ``operators``: include ACSConv, SoftACSConv and Conv2_5d.\n  * ``converters``: include converters which convert 2D models to 3d/ACS/Conv2_5d counterparts.\n  * ``models``: Native ACS models.\n* ``experiments``\n  the scripts to run experiments.\n  * ``mylib``: the lib for running the experiments.\n  * ``poc``: the scripts to run proof-of-concept experiments.\n  * ``lidc``: the scripts to run LIDC-IDRI experiments.\n\n## Convert a 2D model into 3D with a single line of code\n\n```python\nimport torch\nfrom torchvision.models import resnet18\nfrom acsconv.converters import ACSConverter\n# model_2d is a standard pytorch 2D model\nmodel_2d = resnet18(pretrained=True)\nB, C_in, H, W = (1, 3, 64, 64)\ninput_2d = torch.rand(B, C_in, H, W)\noutput_2d = model_2d(input_2d)\n\nmodel_3d = ACSConverter(model_2d)\n# once converted, model_3d is using ACSConv and capable of processing 3D volumes.\nB, C_in, D, H, W = (1, 3, 64, 64, 64)\ninput_3d = torch.rand(B, C_in, D, H, W)\noutput_3d = model_3d(input_3d)\n```\n\n## Usage of ACS operators\n\n```python\nimport torch\nfrom acsconv.operators import ACSConv, SoftACSConv\nB, C_in, D, H, W = (1, 3, 64, 64, 64)\nx = torch.rand(B, C_in, D, H, W)\n# ACSConv to process 3D volumnes\nconv = ACSConv(in_channels=3, out_channels=10, kernel_size=3, padding=1)\nout = conv(x)\n# SoftACSConv to process 3D volumnes\nconv = SoftACSConv(in_channels=3, out_channels=10, kernel_size=3, padding=1)\nout = conv(x)\n```\n\n## Usage of native ACS models\n\n```python\nimport torch\nfrom acsconv.models.acsunet import ACSUNet\nunet_3d = ACSUNet(num_classes=3)\nB, C_in, D, H, W = (1, 1, 64, 64, 64)\ninput_3d = torch.rand(B, C_in, D, H, W)\noutput_3d = unet_3d(input_3d)\n```\n\n## How to run the experiments\n\n* [Proof-of-Concept Segmentation](./experiments/poc/README.md)\n* [Lung Nodule Classification and Segmentation](./experiments/lidc/README.md)\n* ...",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/M3DV/ACSConv",
    "keywords": "",
    "license": "Apache-2.0 License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ACSConv",
    "package_url": "https://pypi.org/project/ACSConv/",
    "platform": "",
    "project_url": "https://pypi.org/project/ACSConv/",
    "project_urls": {
      "Homepage": "https://github.com/M3DV/ACSConv"
    },
    "release_url": "https://pypi.org/project/ACSConv/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "[IEEE JBHI] Reinventing 2D Convolutions for 3D Images",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12707380,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1763c6dacd9250b76074ed143a9d03648df83dbc3a2e8bca34593475f1da6e64",
          "md5": "98f593e97053664c8c0b30e9d9c5da64",
          "sha256": "6febc3a3ce4b3cf3223afd82f6f79ba6d931766685db04068de8cf2b5ae4f7ac"
        },
        "downloads": -1,
        "filename": "ACSConv-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "98f593e97053664c8c0b30e9d9c5da64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 12745,
        "upload_time": "2021-12-17T10:10:35",
        "upload_time_iso_8601": "2021-12-17T10:10:35.268182Z",
        "url": "https://files.pythonhosted.org/packages/17/63/c6dacd9250b76074ed143a9d03648df83dbc3a2e8bca34593475f1da6e64/ACSConv-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00667cc7fbcdf41c8868b9a37bad697e192a74683a1944dcf102a1db65f16217",
          "md5": "c32f70c7a45a39492e304a473b710cd0",
          "sha256": "805a8525e2574a35238c91bc68463b6171591f7d5c7862c4d4cdfdaf293177eb"
        },
        "downloads": -1,
        "filename": "ACSConv-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c32f70c7a45a39492e304a473b710cd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 15834,
        "upload_time": "2022-01-27T08:18:56",
        "upload_time_iso_8601": "2022-01-27T08:18:56.409571Z",
        "url": "https://files.pythonhosted.org/packages/00/66/7cc7fbcdf41c8868b9a37bad697e192a74683a1944dcf102a1db65f16217/ACSConv-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00667cc7fbcdf41c8868b9a37bad697e192a74683a1944dcf102a1db65f16217",
        "md5": "c32f70c7a45a39492e304a473b710cd0",
        "sha256": "805a8525e2574a35238c91bc68463b6171591f7d5c7862c4d4cdfdaf293177eb"
      },
      "downloads": -1,
      "filename": "ACSConv-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c32f70c7a45a39492e304a473b710cd0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 15834,
      "upload_time": "2022-01-27T08:18:56",
      "upload_time_iso_8601": "2022-01-27T08:18:56.409571Z",
      "url": "https://files.pythonhosted.org/packages/00/66/7cc7fbcdf41c8868b9a37bad697e192a74683a1944dcf102a1db65f16217/ACSConv-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}