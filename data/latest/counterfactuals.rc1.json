{
  "info": {
    "author": "R. Kiesel",
    "author_email": "rafael.kiesel@tuwien.ac.at",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# WhatIf\nA solver for counterfactual inference over probabilistic logic programs.\n\n`WhatIf` based on the [aspmc](https://github.com/raki123/aspmc/) library for probabilistic logic programming inference.\n\nIts main functionality is the translation of counterfactual queries to marginal queries. \n\nFor usage on Linux you may install this software as a pip package via\n```\npip install counterfactuals\n```\nExamples for command line usage are available below.\n\nIf you have any issues please contact us, or even better create an issue on GitHub.\n\nFor academic usage cite \n\n * Kiesel, R., Rückschloß, K., & Weitkämper, F. (2023, July). \"What if?\" in Probabilistic Logic Programming. In Proceedings of the 39th International Conference on Logic Programming.\n\n## Development setup\nFor developement clone via \n```\ngit clone git@github.com:raki123/counterfactuals.git\n```\n\nWe require Python >= 3.6. \n\nAll required modules are listed in `requirements.txt` and can be obtained by running\n```\npip install -r requirements.txt\n```\n\nTo use `WhatIf` as usual but have changes to the code available run\n```\npip install -e .\n```\nin the root directory of this repository.\n\n## Usage\n\nThe basic usage is\n\n```\nWhatIf [-e .] [-ds .] [-dt .] [-k .] [-v .] [-h] [<INPUT-FILES>]\n    --knowlege          -k  COMPILER    set the knowledge compiler to COMPILER:\n                                        * sharpsat-td       : uses a compilation version of sharpsat-td (default)\n                                        * d4                : uses the (slightly modified) d4 compiler. \n                                        * c2d               : uses the c2d compiler. \n                                        * miniC2D           : uses the miniC2D compiler. \n                                        * pysdd             : uses the PySDD compiler. \n    --evidence          -e  NAME,PHASE  add evidence NAME:\n                                        * the evidence is negated if PHASE is `True`.\n                                        * the evidence is not negated if PHASE is `False`.\n    --intervene         -i  NAME,PHASE  intervene on NAME:\n                                        * the intervention is negative if PHASE is `True`.\n                                        * the intervention is not negative if PHASE is `False`.\n    --query             -q  NAME        query for the probability of NAME.\n    --decos             -ds SOLVER      set the solver that computes tree decompositions to SOLVER:\n                                        * flow-cutter       : uses flow_cutter_pace17 (default)\n    --decot             -dt SECONDS     set the timeout for computing tree decompositions to SECONDS (default: 1)\n    --verbosity         -v  VERBOSITY   set the logging level to VERBOSITY:\n                                        * debug             : print everything\n                                        * info              : print as usual\n                                        * result            : only print results, warnings and errors\n                                        * warning           : only print warnings and errors\n                                        * errors            : only print errors\n    --help              -h              print this help and exit\n```\n\n### Examples\nWhen using the pip package replace `python main.py` by `WhatIf` to obtain the same result.\n#### ASP example:\n```\npython main.py -q slippery -e sprinkler,False -i sprinkler,True -k sharpsat-td\n0.5::u1.\n0.7::u2.\n0.1::u3.\n0.6::u4.\nszn_spr_sum :- u1.\nsprinkler :- szn_spr_sum, u2.\nrain :- szn_spr_sum, u3.\nrain :- \\+szn_spr_sum, u4.\nwet :- rain.\nwet :- sprinkler.\nslippery :- wet.\n```\nReads the sprinkler program from stdin and adds evidence `sprinkler` and intervention `\\+sprinkler`.\nThe query is for `slippery`. \n\nThis results in the output\n```\n[WARNING] aspmc: Query for atom true was proven true during grounding.\n[WARNING] aspmc: Including it has a negative impact on performance.\n[INFO] aspmc: Tree Decomposition #bags: 18 unfolded treewidth: 3 #vertices: 20\n[INFO] aspmc: Preprocessing disabled\n[INFO] aspmc:    Stats Compilation\n[INFO] aspmc: ------------------------------------------------------------\n[INFO] aspmc: Compilation time:         0.005887508392333984\n[INFO] aspmc: Counting time:            0.0001952648162841797\n[INFO] aspmc: ------------------------------------------------------------\n[INFO] WhatIf:    Results\n[INFO] WhatIf: ------------------------------------------------------------\n[RESULT] WhatIf: slippery:             0.09999999999999999\n```\ntelling us that the result of the counterfactual query for `slippery` is `0.1`. \n\nThe first two lines are a warning from `aspmc` that tell us that the atom `true` that we included to compute the probability of the evidence may lead to decreased performance. However, we need to include it as its probability is not `1.0` in general. \n\nThe following info lines tell us some stats about the program and the inference:\n* it has a treewidth upper bound of 3\n* aspmc's preprocessing is disabled\n* knowledge compilation took ~0.006 seconds\n* counting over the resulting circuit took ~0.0002 seconds\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "probabilistic,logic programming,counterfactual reasoning",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "counterfactuals",
    "package_url": "https://pypi.org/project/counterfactuals/",
    "platform": null,
    "project_url": "https://pypi.org/project/counterfactuals/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/counterfactuals/1.0.0/",
    "requires_dist": [
      "aspmc",
      "PySDD"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "A solver for Counterfactual Inference.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17459442,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8336d568aa57c918af8e6d8e0c4bd39e63ee401cd622c6cf32012796bfd76454",
          "md5": "0fd94e1a85035e394c74fc2b2f3af2f0",
          "sha256": "2a58271dd477c1d52942f80b564eac566f2c7f7c4de128638508690823bea6e3"
        },
        "downloads": -1,
        "filename": "counterfactuals-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0fd94e1a85035e394c74fc2b2f3af2f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 13015,
        "upload_time": "2023-03-27T10:03:18",
        "upload_time_iso_8601": "2023-03-27T10:03:18.246241Z",
        "url": "https://files.pythonhosted.org/packages/83/36/d568aa57c918af8e6d8e0c4bd39e63ee401cd622c6cf32012796bfd76454/counterfactuals-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb84025ff823275afd8ea0ccb48675b3f62741db21c4d370f699a0b9777e3c8a",
          "md5": "7d473988a41d40a1932c9fe2d82ff7d9",
          "sha256": "4e79f3cd3e99262b299bd565ff6a89f1b2bd8fc04ae076b7fc6439eecee44408"
        },
        "downloads": -1,
        "filename": "counterfactuals-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7d473988a41d40a1932c9fe2d82ff7d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 16283,
        "upload_time": "2023-03-27T10:03:20",
        "upload_time_iso_8601": "2023-03-27T10:03:20.457301Z",
        "url": "https://files.pythonhosted.org/packages/bb/84/025ff823275afd8ea0ccb48675b3f62741db21c4d370f699a0b9777e3c8a/counterfactuals-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8336d568aa57c918af8e6d8e0c4bd39e63ee401cd622c6cf32012796bfd76454",
        "md5": "0fd94e1a85035e394c74fc2b2f3af2f0",
        "sha256": "2a58271dd477c1d52942f80b564eac566f2c7f7c4de128638508690823bea6e3"
      },
      "downloads": -1,
      "filename": "counterfactuals-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0fd94e1a85035e394c74fc2b2f3af2f0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 13015,
      "upload_time": "2023-03-27T10:03:18",
      "upload_time_iso_8601": "2023-03-27T10:03:18.246241Z",
      "url": "https://files.pythonhosted.org/packages/83/36/d568aa57c918af8e6d8e0c4bd39e63ee401cd622c6cf32012796bfd76454/counterfactuals-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb84025ff823275afd8ea0ccb48675b3f62741db21c4d370f699a0b9777e3c8a",
        "md5": "7d473988a41d40a1932c9fe2d82ff7d9",
        "sha256": "4e79f3cd3e99262b299bd565ff6a89f1b2bd8fc04ae076b7fc6439eecee44408"
      },
      "downloads": -1,
      "filename": "counterfactuals-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7d473988a41d40a1932c9fe2d82ff7d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 16283,
      "upload_time": "2023-03-27T10:03:20",
      "upload_time_iso_8601": "2023-03-27T10:03:20.457301Z",
      "url": "https://files.pythonhosted.org/packages/bb/84/025ff823275afd8ea0ccb48675b3f62741db21c4d370f699a0b9777e3c8a/counterfactuals-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}