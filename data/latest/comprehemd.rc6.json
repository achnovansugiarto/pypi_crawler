{
  "info": {
    "author": "Cariad Eccleston",
    "author_email": "cariad@cariad.earth",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "# 🤔 CompreheMD\n\n**CompreheMD** is a Python package for parsing Markdown documents.\n\n- [Installation](#installation)\n- [MarkdownParser class](#markdownparser-class)\n  - [Parsing a stream](#parsing-a-stream)\n  - [Parsing chunks](#parsing-chunks)\n- [Blocks classes](#blocks-classes)\n  - [Block](#block)\n  - [CodeBlock](#codeblock)\n  - [EmptyBlock](#emptyblock)\n  - [HeadingBlock](#headingblock)\n- [Project](#project)\n  - [Contributing](#contributing)\n  - [Licence](#licence)\n  - [Author](#author)\n  - [Acknowledgements](#acknowledgements)\n\n## Installation\n\nCompreheMD requires Python 3.8 or later.\n\nInstall CompreheMD via pip:\n\n```bash\npip install comprehemd\n```\n\n## MarkdownParser class\n\n### Parsing a stream\n\n_The Markdown document parsed in this example is [example.md](https://cariad.github.io/comprehemd/example.md)._\n\nTo read an entire text stream, call `read()`. The method yields [blocks](#blocks-classes) until the stream ends.\n\n```python\nfrom comprehemd import MarkdownParser\n\nwith open(\"docs/example.md\", \"r\") as fp:\n    for block in MarkdownParser().read(fp):\n        print(block)\n```\n\n<!--edition-exec as=markdown fence=backticks host=shell range=start-->\n\n```text\nHeadingBlock (1): An Example Document\nEmptyBlock\nHeadingBlock (2): Introduction\nEmptyBlock\nBlock: This is just a short example document.\nEmptyBlock\nHeadingBlock (2): Block examples\nEmptyBlock\nBlock: Here's some backtick-fenced code:\nEmptyBlock\nCodeBlock (python): print(\"Hello, world!\")\nEmptyBlock\nBlock: Here's some tilde-fenced code:\nEmptyBlock\nCodeBlock (python): print(\"Hello, galaxy!\")\nEmptyBlock\nBlock: Here's some indented code:\nEmptyBlock\nCodeBlock (<None>): print(\"Hello, multiverse!\")\nEmptyBlock\nBlock: That's your lot!\n```\n\n<!--edition-exec range=end-->\n\n### Parsing chunks\n\nThe parser can be fed ad-hoc chunks of Markdown. The `feed()` method yields all the [blocks](#blocks-classes) that the chunk completed.\n\nAfter feeding the final chunk, you must call `close()` to flush and yield any buffered blocks.\n\n```python\nfrom comprehemd import CodeBlock, HeadingBlock, MarkdownParser\n\ndef tease(chunk: str) -> None:\n    escaped = chunk.replace(\"\\n\", \"\\\\n\")\n    for block in parser.feed(chunk):\n        print(f'After \"{escaped}\", the parser yielded:')\n        print(block)\n        print()\n    else:\n        print(f'After \"{escaped}\", the parser did not yield.')\n        print()\n\n\nparser = MarkdownParser()\n\ntease(\"# Feeding exam\")\ntease(\"ple\\n\\nThis de\")\ntease(\"monstrates chu\")\ntease(\"nked feeding.\")\n\nfor block in parser.close():\n    print(\"After closing, the parser yielded:\")\n    print(block)\n    print()\n\n```\n\n<!--edition-exec as=markdown fence=backticks host=shell range=start-->\n\n```text\nAfter \"# Feeding exam\", the parser did not yield.\n\nAfter \"ple\\n\\nThis de\", the parser yielded:\nHeadingBlock (1): Feeding example\n\nAfter \"ple\\n\\nThis de\", the parser yielded:\nEmptyBlock\n\nAfter \"ple\\n\\nThis de\", the parser did not yield.\n\nAfter \"monstrates chu\", the parser did not yield.\n\nAfter \"nked feeding.\", the parser did not yield.\n\nAfter closing, the parser yielded:\nBlock: This demonstrates chunked feeding.\n```\n\n<!--edition-exec range=end-->\n\n## Blocks classes\n\n### Block\n\nThe `Block` class is the base of all blocks.\n\n- `source` returns the original Markdown source for the block.\n- `text` returns the meaningful text representation of the block.\n\n### CodeBlock\n\nThe `CodeBlock` class represents a code block.\n\n- `language` returns the language hint if one was specified.\n- The block can be rendered back to Markdown by calling `render()`.\n\n### EmptyBlock\n\n`EmptyBlock` represents an empty line.\n\n### HeadingBlock\n\nThe `HeadingBlock` class represents a heading.\n\n- `level` returns the heading's level (i.e. 1 for the top-most heading, down to 6 for the lowest).\n\n## Project\n\n### Contributing\n\nTo contribute a bug report, enhancement or feature request, please raise an issue at [github.com/cariad/comprehemd/issues](https://github.com/cariad/comprehemd/issues).\n\nIf you want to contribute a code change, please raise an issue first so we can chat about the direction you want to take.\n\n### Licence\n\nCompreheMD is released at [github.com/cariad/comprehemd](https://github.com/cariad/comprehemd) under the MIT Licence.\n\nSee [LICENSE](https://github.com/cariad/comprehemd/blob/main/LICENSE) for more information.\n\n### Author\n\nHello! 👋 I'm **Cariad Eccleston** and I'm a freelance DevOps and backend engineer. My contact details are available on my personal wiki at [cariad.earth](https://cariad.earth).\n\nPlease consider supporting my open source projects by [sponsoring me on GitHub](https://github.com/sponsors/cariad/).\n\n### Acknowledgements\n\n- Epic ❤️ to John Gruber for developing [the original Markdown specification](https://daringfireball.net/projects/markdown/).\n- This documentation was pressed by [Edition](https://github.com/cariad/edition).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cariad/comprehemd",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "comprehemd",
    "package_url": "https://pypi.org/project/comprehemd/",
    "platform": "",
    "project_url": "https://pypi.org/project/comprehemd/",
    "project_urls": {
      "Homepage": "https://github.com/cariad/comprehemd"
    },
    "release_url": "https://pypi.org/project/comprehemd/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Markdown parser",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12167604,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71d77f47c9c1396709804765e359ee096172b7e97b3f51b08546350dd13a899d",
          "md5": "f4da9c14ee20834d6bfbd1686c77edd5",
          "sha256": "b94a874da45007b47ec75cd9e51d2f26734c376a77f0738310af9e275b3ce91e"
        },
        "downloads": -1,
        "filename": "comprehemd-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4da9c14ee20834d6bfbd1686c77edd5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13218,
        "upload_time": "2021-11-30T16:27:17",
        "upload_time_iso_8601": "2021-11-30T16:27:17.142627Z",
        "url": "https://files.pythonhosted.org/packages/71/d7/7f47c9c1396709804765e359ee096172b7e97b3f51b08546350dd13a899d/comprehemd-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "398dc341c0bd06b35bb69ca855597bf86015acc599c879f52e0cf97766ea9847",
          "md5": "3942adfd130778105a3b854c49306222",
          "sha256": "4e1163e5ac5732ce2e7dd4a4d65f9c9398921e2571f1390557b6992957c26a0c"
        },
        "downloads": -1,
        "filename": "comprehemd-1.0.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3942adfd130778105a3b854c49306222",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 2315,
        "upload_time": "2021-11-22T16:09:20",
        "upload_time_iso_8601": "2021-11-22T16:09:20.219274Z",
        "url": "https://files.pythonhosted.org/packages/39/8d/c341c0bd06b35bb69ca855597bf86015acc599c879f52e0cf97766ea9847/comprehemd-1.0.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e502e00192da4b19ed6353eac6b8a68c4ad2530a8471a98ed0d9c1ef318d8a6",
          "md5": "081bd9ad7facfbbfcc590883a529b1cc",
          "sha256": "7396010f1f1d994c2a923f3f9907eff9cac4af72134b6e9116a581ee514436ad"
        },
        "downloads": -1,
        "filename": "comprehemd-1.0.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "081bd9ad7facfbbfcc590883a529b1cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11935,
        "upload_time": "2021-11-27T09:07:02",
        "upload_time_iso_8601": "2021-11-27T09:07:02.986961Z",
        "url": "https://files.pythonhosted.org/packages/3e/50/2e00192da4b19ed6353eac6b8a68c4ad2530a8471a98ed0d9c1ef318d8a6/comprehemd-1.0.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "980378898ea50bb87c184be4a501eeb883cccfd0c3b8b264d6a54ee9502a14ce",
          "md5": "94bbfd553d37a64532bc7a2a892236c0",
          "sha256": "fb562f607be5d117c8e1912ba8079496e37e6f84960b6ebcaa9592e2d6a13f36"
        },
        "downloads": -1,
        "filename": "comprehemd-1.0.0a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94bbfd553d37a64532bc7a2a892236c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 15344,
        "upload_time": "2021-11-27T09:54:27",
        "upload_time_iso_8601": "2021-11-27T09:54:27.373172Z",
        "url": "https://files.pythonhosted.org/packages/98/03/78898ea50bb87c184be4a501eeb883cccfd0c3b8b264d6a54ee9502a14ce/comprehemd-1.0.0a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec4f533f0bdf81a1d1b3170906bf5dfc6231052dee56cc5c8519fc333c7f3a4d",
          "md5": "bab4fc197a1afc7c94b31558a7d1885e",
          "sha256": "aa618a57f4a41781162ef7ec11657da13f79d14ccda3ee3250ae1bafa1669c62"
        },
        "downloads": -1,
        "filename": "comprehemd-1.0.0a3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bab4fc197a1afc7c94b31558a7d1885e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13345,
        "upload_time": "2021-11-29T19:46:03",
        "upload_time_iso_8601": "2021-11-29T19:46:03.125045Z",
        "url": "https://files.pythonhosted.org/packages/ec/4f/533f0bdf81a1d1b3170906bf5dfc6231052dee56cc5c8519fc333c7f3a4d/comprehemd-1.0.0a3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0a4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd93bf8fbbee2b009130092373232150d373815d076c880ef946fc70ff38ef00",
          "md5": "ec10eaae8222058e8aa2fa4068f6dfcb",
          "sha256": "a4c0a4a3c3efe79cd2a5adbfe952f0eb8e547b7e6ddc82d4a5f77fcb0a18fe74"
        },
        "downloads": -1,
        "filename": "comprehemd-1.0.0a4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec10eaae8222058e8aa2fa4068f6dfcb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13165,
        "upload_time": "2021-11-30T07:53:54",
        "upload_time_iso_8601": "2021-11-30T07:53:54.000557Z",
        "url": "https://files.pythonhosted.org/packages/fd/93/bf8fbbee2b009130092373232150d373815d076c880ef946fc70ff38ef00/comprehemd-1.0.0a4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71d77f47c9c1396709804765e359ee096172b7e97b3f51b08546350dd13a899d",
        "md5": "f4da9c14ee20834d6bfbd1686c77edd5",
        "sha256": "b94a874da45007b47ec75cd9e51d2f26734c376a77f0738310af9e275b3ce91e"
      },
      "downloads": -1,
      "filename": "comprehemd-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f4da9c14ee20834d6bfbd1686c77edd5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 13218,
      "upload_time": "2021-11-30T16:27:17",
      "upload_time_iso_8601": "2021-11-30T16:27:17.142627Z",
      "url": "https://files.pythonhosted.org/packages/71/d7/7f47c9c1396709804765e359ee096172b7e97b3f51b08546350dd13a899d/comprehemd-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}