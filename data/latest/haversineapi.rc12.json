{
  "info": {
    "author": "David Edson",
    "author_email": "eddo888@tpg.com.au",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# haversine API python command line wrapper and client\n\nThis is a simple python wrapper around the excellent new haversine waypoint REST API\ncan be used from within python or from the unix command line (cygwin as well)\n\n# install\n\npip3 install --upgrade HaversineAPI\n\n\n# help\n\n```\n$ haversine.py -h\n\nusage: haversine.py [-h] {Haversine,waypoints,routes,args} ...\n\npositional arguments:\n  {Haversine,waypoints,routes,args}\n                        commands\n    Haversine           wrapper around the most excellent REST API by joao @ haversine\n                        https://haversine.com/webapi\n    waypoints           REST API for waypoints\n    routes              REST API for routes\n    args                print the values for the args\n\noptional arguments:\n  -h, --help            show this help message and exit\n```\n\n___\n\n# jupyter\n\n[Jupyter Notebook](https://jupyter.org/)\n\nif you like jupyter notebook, you can see some python examples of how to get routes and waypoints\n\n[HaversineAPI.ipynb](https://github.com/eddo888/HaversineAPI/blob/main/HaversineAPI.ipynb)\n\nthere is also a Flight Plan converter that will read an x-plane FMS file and upload it to navigraph, great for batch uploads.\n\n[Flight Plans.ipynb](https://github.com/eddo888/HaversineAPI/blob/main/Flight%20Plans.ipynb)\n\n___\n\n# waypoints\n\n```\n$ haversine.py waypoints -h\n\nusage: haversine.py waypoints [-h] [--hostname HOSTNAME] [-i]\n                              [--password PASSWORD] [--username USERNAME] [-v]\n                              {create,delete,get,list,update} ...\n\npositional arguments:\n  {create,delete,get,list,update}\n                        operations\n    create              create a single waypoint\n    delete              delete a single waypoint by id\n    get                 get a single waypoint by id, todo\n    list                return the full list of waypoints in json format\n    update              update a single waypoint\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --hostname HOSTNAME   default=https://haversine.com\n  -i, --insecure        use insecure mode for old clients with old cert trees,\n                        will remove later, developing on Pythonista\n  --password PASSWORD   obtained from credstash, AWS dynamodb and crypto keys\n  --username USERNAME   default=eddo888\n  -v, --verbose         display verbose output\n```\n\n## create\n\n```\n$ haversine.py waypoints create -h\n\nusage: haversine.py waypoints create [-h] [-e ELEVATION]\n                                     id description latitude longitude\n\npositional arguments:\n  id                    The point ID, max 7 chars\n  description           The point description, max 63 chars\n  latitude              y=DDD.DDDDDDD\n  longitude             x=DDD.DDDDDDD\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -e ELEVATION, --elevation ELEVATION\n                        EEEE.EEEE in feet, type=float\n```\n\n## example\n\n```\n$ haversine.py waypoints -u eddo888 -p $(cat ../test/.password) create 0EDDO 'Daves Waypoint' 1 -1\n{\n        \"id\": \"0EDDO\",\n        \"description\": \"Daves Waypoint\",\n        \"latitude\": 1.0,\n        \"longitude\": -1.0,\n        \"elevation\": 0.0\n}\n```\n\n## update\n\n```\n$ haversine.py waypoints update -h\n\nusage: haversine.py waypoints update [-h] [-e ELEVATION]\n                                     id description latitude longitude\n\npositional arguments:\n  id                    The point ID, max 7 chars\n  description           The point description, max 63 chars\n  latitude              y=DDD.DDDDDDD\n  longitude             x=DDD.DDDDDDD\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -e ELEVATION, --elevation ELEVATION\n                        EEEE.EEEE in feet, type=float\n```\n\n## list\n\n```\n$ haversine.py waypoints list\n\n[\n\t{\n\t\t\"id\": \"0MTB\",\n\t\t\"description\": \"Mt Blanc\",\n\t\t\"latitude\": 45.832119,\n\t\t\"longitude\": 6.865575,\n\t\t\"elevation\": 0.0\n\t},\n\t{\n\t\t\"id\": \"0A51\",\n\t\t\"description\": \"Area 51\",\n\t\t\"latitude\": 37.233333,\n\t\t\"longitude\": -115.808333,\n\t\t\"elevation\": 0.0\n\t},\n\t...\n]\n```\n\n## get\n\n```\n$ haversine.py waypoints get -h\n\nusage: haversine.py waypoints get [-h] id\n\npositional arguments:\n  id          The point ID, max 7 chars\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n## delete\n\n```\n$ haversine.py waypoints delete -h\n\nusage: haversine.py waypoints delete [-h] id\n\npositional arguments:\n  id          The point ID, max 7 chars\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n___\n\n# routes\n\n```\n$ haversine.py routes -h\n\nusage: haversine.py routes [-h] [--hostname HOSTNAME] [-i] -p\n                           PASSWORD -u USERNAME [-v]\n                           {create,delete,get,list,sample,suggest,update}\n                           ...\n\nREST API for routes\n\npositional arguments:\n  {create,delete,get,list,sample,suggest,update}\n                        operations\n    create              create a new route from a file, dict or path\n    delete              delete an existing route\n    get                 get a single route by name, reads whole list and filters\n    list                get routes, bit broken at the moment\n    sample              provide a sample route to be populated and used to create/update a route\n    suggest             find a route from the origin to the destination\n    update              update a route from a file, dict or path\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --hostname HOSTNAME   default=https://haversine.com\n  -i, --insecure        use insecure mode for old clients with old cert trees, will remove later, developing on Pythonista\n  -p PASSWORD, --password PASSWORD\n                        password at haversine.com\n  -u USERNAME, --username USERNAME\n                        username at haversine.com\n  -v, --verbose         display verbose output\n```\n\n## sample\n\n```\n$ haversine routes sample\n\n{\n\t\"name\": \"STRING (63)\\tA name for the route; it's unique key\",\n\t\"origin\": \"STRING (7)\\tThe name of the first waypoint; typically the airport's ICAO\",\n\t\"departure_runway\": \"STRING (7)\\tMay be NULL; otherwise the departire runway ID\",\n\t\"sid\": \"STRING (15)\\tMay be NULL or SID (departure) identifier\",\n\t\"path\": \"STRING\\t\\tMay be NULL or empty, the sequence of points and airways along the route excluding procedures, runways and airports\",\n\t\"destination\": \"STRING (7)\\tThe destination waypoint ID, typically the airport's ICAO\",\n\t\"star\": \"STRING (15)\\tMay be NULL or STAR(arrival) identifier\",\n\t\"approach\": \"STRING (15)\\tMay be NULL or IAP (approach) identifier\",\n\t\"arrival_runway\": \"STRING (7)\\tMay be NULL; otherwise the arrival runway ID\",\n\t\"length\": \"DOUBLE\\t\\tThe calculated route length, may be incorrect and/or not precise, ROM\",\n\t\"flight_level\": \"INT\\t\\t\\tIf specified (non NULL), the desired flight level in feet MSL, e.g. 35000 for FL350\",\n\t\"climb_descent_tas\": \"INT\\t\\t\\tIf specified (non NULL), the climb and descent speed in knots of true air speed (TAS)\",\n\t\"vertical_speed_fpm\": \"INT\\t\\t\\tIf specified (non NULL), the climb and descent vertical speed in feet per minute, e.g. 1800\",\n\t\"points \": [\n\t\t{\n\t\t\t\"id\": \"STRING (7)\\tPoint identifier\",\n\t\t\t\"type\": [\n\t\t\t\t\"one of the following;\",\n\t\t\t\t\"APT = Airport\",\n\t\t\t\t\"RW  = Runway\",\n\t\t\t\t\"ILS = ILS or localizer\",\n\t\t\t\t\"VOR = VOR navaid\",\n\t\t\t\t\"NDB = Enroute or Terminal NDB\",\n\t\t\t\t\"FIX = Enroute or Terminal Waypoint\",\n\t\t\t\t\"LOC = Locality\",\n\t\t\t\t\"CWP = Custom Waypoint\",\n\t\t\t\t\"POS = Position, a set of coordinates\"\n\t\t\t],\n\t\t\t\"latitude\": \"DOUBLE\\t\\tLatitude\",\n\t\t\t\"longitude\": \"DOUBLE\\t\\tLatitude\",\n\t\t\t\"elevation\": \"DOUBLE\\t\\tElevation in feet MSL at which to cross or NULL (if unspecified)\"\n\t\t}\n\t]\n}\n```\n\n## suggest\n\n```\n$ haversine.py routes suggest -h\n\nusage: haversine.py routes suggest [-h] [-f] [-o OUTPUT] origin destination\n\nfind a route from the origin to the destination\n\npositional arguments:\n  origin                ICAO of origin\n  destination           ICAO of destination\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f, --first           take first suggestion and convert to importable route\n  -o OUTPUT, --output OUTPUT\n                        output to file name, null for stdout\n\n```\n\n### example\n\n```\n$ haversine.py routes -u eddo888 -p $(cat ../test/.password) suggest -f YSSY YMML\n{\n        \"name\": \"YSSY-YMML\",\n        \"origin\": \"YSSY\",\n        \"destination\": \"YMML\",\n        \"path\": \"WOL H65 RAZZI Q29 LIZZI\",\n        \"length\": 0\n}\n```\n\n\n## create\n\n```\n$ haversine.py routes create -h\n\nusage: haversine.py routes create [-h] [-i INPUT] [-r ROUTE]\n                                  [-p PATH]\n\ncreate a new route from a file, dict or path\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        file with json route, or None for stdin\n  -r ROUTE, --route ROUTE\n                        dict or json as text route\n  -p PATH, --path PATH  text based route including origin and destination\n\t\t\t\t\t\t\n```\n\n### example\n\n```\n$ haversine.py routes -u eddo888 -p $(cat ../test/.password) create -p 'YSSY WOL YMML' \n{\n        \"result\": \"success\",\n        \"status_code\": 200,\n        \"description\": \"route added successfully\",\n        \"route\": {\n                \"name\": \"YSSY-YMML\",\n                \"origin\": \"YSSY\",\n                \"destination\": \"YMML\",\n                \"departure_runway\": null,\n                \"sid\": null,\n                \"path\": \"WOL\",\n                \"star\": null,\n                \"approach\": null,\n                \"arrival_runway\": null,\n                \"length\": 385.13322995229703,\n                \"flight_level\": null,\n                \"climb_descent_tas\": null,\n                \"vertical_speed_fpm\": null,\n                \"points\": [\n                        {\n                                \"id\": \"YSSY\",\n                                \"type\": \"APT\",\n                                \"latitude\": -33.946,\n                                \"longitude\": 151.17711111,\n                                \"elevation\": 21.0\n                        },\n                        {\n                                \"id\": \"WOL\",\n                                \"type\": \"NDB\",\n                                \"latitude\": -34.55793056,\n                                \"longitude\": 150.79099167,\n                                \"elevation\": null\n                        },\n                        {\n                                \"id\": \"YMML\",\n                                \"type\": \"APT\",\n                                \"latitude\": -37.67333333,\n                                \"longitude\": 144.84333333,\n                                \"elevation\": 434.0\n                        }\n                ]\n        }\n```\n\t\t\n## update\n\n```\n$ haversine.py routes update -h\n\nusage: haversine.py routes update [-h] [-i INPUT] [-r ROUTE]\n                                  [-p PATH]\n\nupdate a route from a file, dict or path\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        file with json route, or None for stdin\n  -r ROUTE, --route ROUTE\n                        dict or json as text route\n  -p PATH, --path PATH  text based route including origin and destination\n\n```\n\n## list\n\n```\n$ haversine.py routes list \n\n[\n\t{\n\t\t\"name\": \"EGLL-LFPG\",\n\t\t\"origin\": \"EGLL\",\n\t\t\"destination\": \"LFPG\",\n\t\t\"departure_runway\": \"09L\",\n\t\t\"sid\": \"MAY2K / 09L\",\n\t\t\"path\": \"MAY BIBAX\",\n\t\t\"star\": null,\n\t\t\"approach\": \"I08R / MOP6E\",\n\t\t\"arrival_runway\": \"08L\",\n\t\t\"length\": 202.3582316939304,\n\t\t\"flight_level\": 10000,\n\t\t\"climb_descent_tas\": 300,\n\t\t\"vertical_speed_fpm\": 1800,\n\t\t\"points\": [\n\t\t\t{\n\t\t\t\t\"id\": \"EGLL\",\n\t\t\t\t\"type\": \"APT\",\n\t\t\t\t\"latitude\": 51.4775,\n\t\t\t\t\"longitude\": -0.4613888888888889,\n\t\t\t\t\"elevation\": 83.0\n\t\t\t},\n\t\t\t...\n\t\t\t{\n\t\t\t\t\"id\": \"LFPG\",\n\t\t\t\t\"type\": \"APT\",\n\t\t\t\t\"latitude\": 49.00972222222222,\n\t\t\t\t\"longitude\": 2.547777777777778,\n\t\t\t\t\"elevation\": 392.0\n\t\t\t}\n\t\t]\n\t}\n]\n```\n```\n\n## delete\n\n```\n$ haversine routes delete -h\n\nusage: haversine.py routes delete [-h] name\n\npositional arguments:\n  name\n\noptional arguments:\n  -h, --help  show this help message and exit\n  \n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/eddo888/HaversineAPI/archive/1.13.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eddo888/HaversineAPI",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "HaversineAPI",
    "package_url": "https://pypi.org/project/HaversineAPI/",
    "platform": null,
    "project_url": "https://pypi.org/project/HaversineAPI/",
    "project_urls": {
      "Download": "https://github.com/eddo888/HaversineAPI/archive/1.13.tar.gz",
      "Homepage": "https://github.com/eddo888/HaversineAPI"
    },
    "release_url": "https://pypi.org/project/HaversineAPI/1.13/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "1.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13300345,
  "releases": {
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2ac07c15e21dacaed9f795f7d71ae13d8d4e78ec45270608a2ceea0dc00aa9f",
          "md5": "5ba6a1ee88d1fc3e6f3d259bd07c7e2e",
          "sha256": "8a1d3f4669994319239345bf7619eb7d8621263ec3011698774bd0ffaa291af0"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ba6a1ee88d1fc3e6f3d259bd07c7e2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4219,
        "upload_time": "2022-03-14T00:39:20",
        "upload_time_iso_8601": "2022-03-14T00:39:20.394115Z",
        "url": "https://files.pythonhosted.org/packages/d2/ac/07c15e21dacaed9f795f7d71ae13d8d4e78ec45270608a2ceea0dc00aa9f/HaversineAPI-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5d687d98de3e0cc90cd826812731787df6064a1e36be67c1a659ad43b480449",
          "md5": "911e7e8bd47e72ea748a8bb62dc4c73b",
          "sha256": "d12cc418d1affbbec71360197da51ad2ef7d915774c8ede6f7a820e162196f57"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "911e7e8bd47e72ea748a8bb62dc4c73b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6260,
        "upload_time": "2022-03-21T23:25:09",
        "upload_time_iso_8601": "2022-03-21T23:25:09.826253Z",
        "url": "https://files.pythonhosted.org/packages/f5/d6/87d98de3e0cc90cd826812731787df6064a1e36be67c1a659ad43b480449/HaversineAPI-1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "197246df460e9a30b725075074ba283cb60b1b77b94b3f91a3ae2a6fb426ac66",
          "md5": "744ff0562f6d5ee2baddd5046ef46237",
          "sha256": "350a511cff476019660b9c68b6c15609ff4b3af60d3d7c58e0d704746949224b"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "744ff0562f6d5ee2baddd5046ef46237",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6173,
        "upload_time": "2022-03-22T21:55:08",
        "upload_time_iso_8601": "2022-03-22T21:55:08.008228Z",
        "url": "https://files.pythonhosted.org/packages/19/72/46df460e9a30b725075074ba283cb60b1b77b94b3f91a3ae2a6fb426ac66/HaversineAPI-1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fb7fd9a82e9a68f73efc65e763f65262b46056339144c86d10d272eb482174b",
          "md5": "bf6368196db1ab50d0332125b7efbaad",
          "sha256": "e4bff2e10ebe04a9791c511cfa69e5deaef48fe3b564b277219801ba9a4d7f62"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "bf6368196db1ab50d0332125b7efbaad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6183,
        "upload_time": "2022-03-22T22:15:52",
        "upload_time_iso_8601": "2022-03-22T22:15:52.585750Z",
        "url": "https://files.pythonhosted.org/packages/5f/b7/fd9a82e9a68f73efc65e763f65262b46056339144c86d10d272eb482174b/HaversineAPI-1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48d2c5862c5e231fa6cbd9116c57f66ba50dbad510880d58012f05bc504ba660",
          "md5": "a3fae7e83c7054e7ecbd27a65c9722ee",
          "sha256": "10f2bbe18eb518b128827f243004b1ff400c5bfee1e452906528cfed57c31b0e"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "a3fae7e83c7054e7ecbd27a65c9722ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6964,
        "upload_time": "2022-03-26T04:54:55",
        "upload_time_iso_8601": "2022-03-26T04:54:55.340713Z",
        "url": "https://files.pythonhosted.org/packages/48/d2/c5862c5e231fa6cbd9116c57f66ba50dbad510880d58012f05bc504ba660/HaversineAPI-1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba23a07e2e1748538029b1b1b2743ecaa8e68a9612c59e0d12ee174e8fb48657",
          "md5": "49fbef861611fe1e0098ae7f441d88c4",
          "sha256": "0a2f4c980734d2aeb7a1a125c6896196969b948abb41b36a58180f1fbfa76247"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "49fbef861611fe1e0098ae7f441d88c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4330,
        "upload_time": "2022-03-16T08:29:23",
        "upload_time_iso_8601": "2022-03-16T08:29:23.228781Z",
        "url": "https://files.pythonhosted.org/packages/ba/23/a07e2e1748538029b1b1b2743ecaa8e68a9612c59e0d12ee174e8fb48657/HaversineAPI-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f502b9b8095bb38c8eaf5a374e01e4feb21d689e4561cb7c5de7f3e4bfeb09b",
          "md5": "6795ea3f6eb8357def6b71aded0eb0e0",
          "sha256": "61fe817e28d6c54ec1f3ba41ab04a0d5fcdd726caf92f3d9c7bc74e40f373c79"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6795ea3f6eb8357def6b71aded0eb0e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4328,
        "upload_time": "2022-03-16T08:30:49",
        "upload_time_iso_8601": "2022-03-16T08:30:49.442617Z",
        "url": "https://files.pythonhosted.org/packages/5f/50/2b9b8095bb38c8eaf5a374e01e4feb21d689e4561cb7c5de7f3e4bfeb09b/HaversineAPI-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "428225914c7f60c5a464f1ea22b87552213232c177f03cb5f1520cb7c85c0795",
          "md5": "e5f5d19848981abcd46627fd169e38cc",
          "sha256": "d1053a5441508c1e635e5695733f4019e7afc72657226fd9355175b021ddbeb1"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e5f5d19848981abcd46627fd169e38cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4333,
        "upload_time": "2022-03-16T09:33:13",
        "upload_time_iso_8601": "2022-03-16T09:33:13.143710Z",
        "url": "https://files.pythonhosted.org/packages/42/82/25914c7f60c5a464f1ea22b87552213232c177f03cb5f1520cb7c85c0795/HaversineAPI-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f25ef1665e1a9f6f507743b561c0ba66a517b99e1ea854d5adba201639919396",
          "md5": "ba754cc561722bc7e0a5b99b7595ecd1",
          "sha256": "830068a378aa5f2429c1595b73162c55da725729fbb13e0cc6f958581a6b34a2"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ba754cc561722bc7e0a5b99b7595ecd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5945,
        "upload_time": "2022-03-20T01:06:28",
        "upload_time_iso_8601": "2022-03-20T01:06:28.278182Z",
        "url": "https://files.pythonhosted.org/packages/f2/5e/f1665e1a9f6f507743b561c0ba66a517b99e1ea854d5adba201639919396/HaversineAPI-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fe69ad152c4205a65889bcf127f62096d4c58ab134f77898d5fb2d46cb4a6f1",
          "md5": "288df5ff8a825317ccd52dfa5d7c0796",
          "sha256": "2c7b2f42406d4b4c62acbbe89333ceae83e1c9ed10cecd1f388697d3f5895b6b"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "288df5ff8a825317ccd52dfa5d7c0796",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6068,
        "upload_time": "2022-03-20T01:14:48",
        "upload_time_iso_8601": "2022-03-20T01:14:48.726419Z",
        "url": "https://files.pythonhosted.org/packages/6f/e6/9ad152c4205a65889bcf127f62096d4c58ab134f77898d5fb2d46cb4a6f1/HaversineAPI-1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9983495b5de4ff26e1cc4ad5db450b0e8084a1a75ad18f2924a43e30e119cd4e",
          "md5": "81c96eee25123f41217a0255f741f068",
          "sha256": "47df240183e0c917dd30f33a1e28225a520a55f654a6529378f24917879725ed"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "81c96eee25123f41217a0255f741f068",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6213,
        "upload_time": "2022-03-20T23:03:15",
        "upload_time_iso_8601": "2022-03-20T23:03:15.526420Z",
        "url": "https://files.pythonhosted.org/packages/99/83/495b5de4ff26e1cc4ad5db450b0e8084a1a75ad18f2924a43e30e119cd4e/HaversineAPI-1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cead711f597607701322a2436fe7ea02d744fee66cda8d1d347f056bca1ddc90",
          "md5": "4102437ea4f11acaa5ab655fc2d931b5",
          "sha256": "403ee2bbf01ed65ba62941ba36e2c870ee96a53a2bd60ab0884a4d28b6e4edeb"
        },
        "downloads": -1,
        "filename": "HaversineAPI-1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "4102437ea4f11acaa5ab655fc2d931b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6260,
        "upload_time": "2022-03-21T23:21:25",
        "upload_time_iso_8601": "2022-03-21T23:21:25.012520Z",
        "url": "https://files.pythonhosted.org/packages/ce/ad/711f597607701322a2436fe7ea02d744fee66cda8d1d347f056bca1ddc90/HaversineAPI-1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48d2c5862c5e231fa6cbd9116c57f66ba50dbad510880d58012f05bc504ba660",
        "md5": "a3fae7e83c7054e7ecbd27a65c9722ee",
        "sha256": "10f2bbe18eb518b128827f243004b1ff400c5bfee1e452906528cfed57c31b0e"
      },
      "downloads": -1,
      "filename": "HaversineAPI-1.13.tar.gz",
      "has_sig": false,
      "md5_digest": "a3fae7e83c7054e7ecbd27a65c9722ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6964,
      "upload_time": "2022-03-26T04:54:55",
      "upload_time_iso_8601": "2022-03-26T04:54:55.340713Z",
      "url": "https://files.pythonhosted.org/packages/48/d2/c5862c5e231fa6cbd9116c57f66ba50dbad510880d58012f05bc504ba660/HaversineAPI-1.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}