{
  "info": {
    "author": "David Lougheed",
    "author_email": "david.lougheed@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# bcf_extras\n\n![Test Status](https://github.com/davidlougheed/bcf_extras/workflows/Tests/badge.svg)\n\nExtra variant file helper utilities built on top of `bcftools` and `htslib`.\n\n\n## License\n\n`bcf_extras` is licensed under GPLv3. See [the license](./LICENSE) for more \ninformation.\n\n\n## Dependencies\n\nThe package requires that `bcftools` and `htslib` are installed on your \noperating system.\n\nFor the `str` extra, `TRtools` is required as a pip dependency. This should be\nhandled automatically upon installation, but I have encountered installation \nissues before (especially when copies of `htslib` interfere with one another.)\nFeel free to file an issue to ask about this.\n\n\n## Installation\n\nOne can use pip to install either the base `bcf-extras` or `bcf-extras[str]`,\nwhich has additional dependencies and adds some more utilities related to STR\ncalling.\n\n```bash\npip install bcf-extras\n# or\npip install bcf-extras[str]\n```\n\n\n## What's Included (Base)\n\n### `copy-compress-index`\n\nCreates `.vcf.gz` files with a corresponding tabix indices from one or more \nVCFs, sorting the VCFs if necessary.\n\nFor example, the following would generate `sample-1.vcf.gz` and `sample-1.vcf.gz.tbi`:\n\n```bash\nbcf-extras copy-compress-index sample-1.vcf\n```\n\n### `add-header-lines`\n\nAdds header lines from a text file to a particular position in the VCF header.\nUseful for e.g. inserting missing `##contig` lines to a bunch of VCFs at once\n(taking advantage of this + something like GNU parallel.)\n\nFor the `##contig` lines example, inserting the contents of \n[`tests/vcfs/new_lines.txt`](tests/vcfs/new_lines.txt), we could run the \nfollowing command on [`tests/vcfs/ahl.vcf`](tests/vcfs/ahl.vcf), replacing the \nfile with a new copy:\n\n```bash\nbcf-extras add-header-lines tests/vcfs/ahl.vcf tests/vcfs/new_lines.txt\n```\n\nThere is also a flag, `--tmp-dir`, for specifying a temporary folder location\ninto which header artifacts will be placed. This is especially useful when \nrunning jobs on clusters, which may have specific locations for temporary I/O.\n\nUsing GNU parallel, we can do multiple VCFs at once, e.g.:\n\n```bash\nparallel 'bcf-extras add-header-lines {} tests/vcfs/new_lines.txt --keep-old' ::: /path/to/my/vcfs/*.vcf\n```\n\nThe `--keep-old` flag keeps the original VCFs as a copy.\n\n### `arg-join`\n\nSome bioinformatics utilities take in comma-separated file lists rather than \nthe more standard whitespace-separated lists that something like a glob \n(`*.vcf.gz`) generates.\n\nThis command can be run by itself, e.g.:\n\n```bash\nbcf-extras arg-join --sep \";\" *.vcf\n# Outputs e.g. sample1.vcf;sample2.vcf\n```\n\nIt can be used embedded in another command, e.g. with `mergeSTR`,\n[a tool for merging STR caller VCFs](https://github.com/gymreklab/TRTools)\nwhich takes as input a *comma-separated* list of files:\n\n```bash\nmergeSTR --vcfs $(bcf-extras arg-join *.vcf) --out my_merge\n```\n\nThe default separator (specified via `--sep`) is `,`.\n\n### `filter-gff3`\n\nThis command can filter a GFF3 (or similarly formatted) file and filter it\nby various columns using regular expressions.\n\nIt prints the filtered lines to `stdout`, which can then be redirected to a \nfile or piped to another process.\n\nCurrently, you can filter by the `seqid`, `source`, `type`, `strand`, and \n`phrase` columns using Python-formatted regular expressions, e.g. the \nfollowing, which filters `type` to be either `gene` or `exon` and stores that\nin a new file:\n\n```bash\nbcf-extras filter-gff3 --type '^(gene|exon)$' example.gff3 > example-genes-exons.gff3\n```\n\nFor help, run the sub-command with no arguments:\n\n```bash\nbcf-extras filter-gff3\n```\n\n### `reformat-vcf-contigs`\n\nTODO\n\n\n## What's Included (STR)\n\n### `parallel-mergeSTR`\n\n[mergeSTR](https://github.com/gymreklab/TRTools) is a tool by the Gymrek lab\nused to merge STR call VCFs. It proceeds linearly over a list of files, which\ncannot easily take advantage of multiple cores. This utility merges VCFs in a \ntree fashion to produce a final merged result, and is handy when merging 100s\nof STR call VCFs at once.\n\n```bash\nbcf-extras parallel-mergeSTR *.vcf.gz --out my_merge --ntasks 10\n```\n\nIn a dataset of 148 single-sample gangSTR call VCFs, merging with \n`parallel-mergeSTR` on 10 cores resulted in an 60% speedup versus\nrunning on a single core (~2 hours versus ~5 hours.)\n\nSpeedup is not linear with number of cores used, so it only makes sense to use\nthis if turnaround time is important and resources are available.\n\nTo not over-allocate resources on a cluster, the process can be split further\ninto first a parallelized task, and then a task which only uses one core:\n\n```bash\n# Runs on multiple cores\nbcf-extras parallel-mergeSTR *.vcf.gz --ntasks 10 --out my_merge --step1-only\n\n# Intermediate files generated by the first step will feed into the second step.\n\n# Bottlenecked single process step; the ntasks argument is still needed to \n# calculate the names of the intermediate output files (but sub-processes are \n# not spawned) - thus, the provided value must match the value above.\nbcf-extras parallel-mergeSTR --ntasks 10 --out my_merge --step2-only\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davidlougheed/bcf_extras",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bcf-extras",
    "package_url": "https://pypi.org/project/bcf-extras/",
    "platform": "",
    "project_url": "https://pypi.org/project/bcf-extras/",
    "project_urls": {
      "Homepage": "https://github.com/davidlougheed/bcf_extras"
    },
    "release_url": "https://pypi.org/project/bcf-extras/0.2.0/",
    "requires_dist": [
      "trtools ; extra == 'str'"
    ],
    "requires_python": "~=3.7",
    "summary": "A set of variant file helper utilities built on top of bcftools and htslib.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12169915,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c7b9e48aff51722e39855c6a089601c6605787bc28ab1570f5793dd304c1427",
          "md5": "5ab084b9a10beacbe359da873fe42554",
          "sha256": "e71cdc1e2a058f9fc191ecbb839a259179935c76fe6c25e986191fb48a210081"
        },
        "downloads": -1,
        "filename": "bcf_extras-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ab084b9a10beacbe359da873fe42554",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 17281,
        "upload_time": "2021-05-03T15:18:00",
        "upload_time_iso_8601": "2021-05-03T15:18:00.414556Z",
        "url": "https://files.pythonhosted.org/packages/9c/7b/9e48aff51722e39855c6a089601c6605787bc28ab1570f5793dd304c1427/bcf_extras-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf03c6f500d9e2bf7255d37364e92197ad832a8faf6ba6c36ac709d4f59d1def",
          "md5": "294d6fc77ef4bc25dc6613cb42e82f96",
          "sha256": "6d34c49ad9d3d5b0433d446921d80a14d5033ee2457a8a4d013e5a203d5ffc08"
        },
        "downloads": -1,
        "filename": "bcf_extras-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "294d6fc77ef4bc25dc6613cb42e82f96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 16491,
        "upload_time": "2021-05-03T15:18:01",
        "upload_time_iso_8601": "2021-05-03T15:18:01.833410Z",
        "url": "https://files.pythonhosted.org/packages/bf/03/c6f500d9e2bf7255d37364e92197ad832a8faf6ba6c36ac709d4f59d1def/bcf_extras-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee4163503d9b1cce684b48046635ee7a29fcb29aa006155fa33e0bc00ce87e0b",
          "md5": "1e1f709b85c55bbb818e9155f56b1502",
          "sha256": "0329dbd8787f94d2316e363cc1da031bb6ff8bb0e240299661199bfbea653314"
        },
        "downloads": -1,
        "filename": "bcf_extras-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e1f709b85c55bbb818e9155f56b1502",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 24675,
        "upload_time": "2021-11-30T20:48:45",
        "upload_time_iso_8601": "2021-11-30T20:48:45.256626Z",
        "url": "https://files.pythonhosted.org/packages/ee/41/63503d9b1cce684b48046635ee7a29fcb29aa006155fa33e0bc00ce87e0b/bcf_extras-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98a40feb9dbe80bcba058f88dfc3aa0a812703c65d44e402490ef0b76673cbd1",
          "md5": "8d3bb01b284dddc4067e7cf189445bbb",
          "sha256": "4aecbcc015d481416857313b8e8806f4b74a1d0043ab1265af514416e153bd0a"
        },
        "downloads": -1,
        "filename": "bcf_extras-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8d3bb01b284dddc4067e7cf189445bbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 27415,
        "upload_time": "2021-11-30T20:48:47",
        "upload_time_iso_8601": "2021-11-30T20:48:47.068207Z",
        "url": "https://files.pythonhosted.org/packages/98/a4/0feb9dbe80bcba058f88dfc3aa0a812703c65d44e402490ef0b76673cbd1/bcf_extras-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee4163503d9b1cce684b48046635ee7a29fcb29aa006155fa33e0bc00ce87e0b",
        "md5": "1e1f709b85c55bbb818e9155f56b1502",
        "sha256": "0329dbd8787f94d2316e363cc1da031bb6ff8bb0e240299661199bfbea653314"
      },
      "downloads": -1,
      "filename": "bcf_extras-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1e1f709b85c55bbb818e9155f56b1502",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.7",
      "size": 24675,
      "upload_time": "2021-11-30T20:48:45",
      "upload_time_iso_8601": "2021-11-30T20:48:45.256626Z",
      "url": "https://files.pythonhosted.org/packages/ee/41/63503d9b1cce684b48046635ee7a29fcb29aa006155fa33e0bc00ce87e0b/bcf_extras-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "98a40feb9dbe80bcba058f88dfc3aa0a812703c65d44e402490ef0b76673cbd1",
        "md5": "8d3bb01b284dddc4067e7cf189445bbb",
        "sha256": "4aecbcc015d481416857313b8e8806f4b74a1d0043ab1265af514416e153bd0a"
      },
      "downloads": -1,
      "filename": "bcf_extras-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8d3bb01b284dddc4067e7cf189445bbb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.7",
      "size": 27415,
      "upload_time": "2021-11-30T20:48:47",
      "upload_time_iso_8601": "2021-11-30T20:48:47.068207Z",
      "url": "https://files.pythonhosted.org/packages/98/a4/0feb9dbe80bcba058f88dfc3aa0a812703c65d44e402490ef0b76673cbd1/bcf_extras-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}