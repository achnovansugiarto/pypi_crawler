{
  "info": {
    "author": "Nick Brown",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# About\nA library of file readers for permafrost-related dataloggers. Instead of trying to make a single csv-reader that can handle any format, this treats each datalogger separately. Currently the following data types are supported:\n\n* GeoPrecision (GP5W)\n* GeoPrecision (FG2)\n* HOBO (HOBOware)\n\n# Installation\nTo install LoggerReader, follow these instructions:\n\n```bash\ngit clone https://github.com/nicholas512/LoggerRead\ncd LoggerRead\npython setup.py develop\n```\nConsider using a virtual environment, because some dependencies are installed.\n\n# Using LoggerReader\nThe object that is used to read the logger data will differ depending on what kind of instrument the data comes from. However, each reader follows the same behaviour. They all have the `.read()` method that takes the file name as an argument. You can create the reader object first and then call the `.read()` method, or just run everything on one line.\n\n```python\nReader().read(file)\n```\n**OR**\n```python\nreader = Reader()\ndata = reader.read(file)\n```\nSome datalogger types may accept or require other information in order to read the file correctly.\n\n## GeoPrecision\nGeoprecision logger format differs between the FG2 and GP5W variants. To read a GeoPrecision file, use either the FG2 or GP5W object\n### FG2\nFG2 is the newer software for GeoPrecision instruments:\n\n```python\nfrom LoggerReader.readers import FG2\nfrom pkg_resources import resource_filename\nfg2_file = resource_filename(\"LoggerReader\", \"sample_files/FG2_399.csv\")\n\n# Read an FG2 file\nFG2().read(fg2_file)\n```\n\n### GP5W\nGP5W is the older software for GeoPrecision instruments:\n\n```python\nfrom LoggerReader.readers import GP5W\nfrom pkg_resources import resource_filename\ngp5w_file = resource_filename(\"LoggerReader\", \"sample_files/GP5W_260.csv\")\n\n# To read a file, you might first create a reader object \nreader = GP5W()\nreader.read(gp5w_file)\n\n# Or instead, read the data in one line\ndata = GP5W().read(gp5w_file)\n```\n## HOBO\nBecause of the variability of HOBOWare CSV exports, the HOBO reader relies on on a HOBOProperties configuration object. This can be configured manually (most reliable) or autodetected from a file.\n\n## The HOBOProperties configuration object\n\n```python\nfrom LoggerReader.readers import HOBOProperties\nfrom pkg_resources import resource_filename\nfrom pathlib import Path\n\n# Autodetect file structure\nhobo_file = resource_filename(\"LoggerReader\", \"sample_files/hobo_1_AB_classic.csv\")\nP = HOBOProperties.autodetect(hobo_file)\nprint(P)\n\n# HOBOWare 'default' format\nprint(HOBOProperties.defaults())\n\n# HOBOWare 'classic' format\nprint(HOBOProperties.classic())\n\n# Custom format (unspecified properties are defaults)\nP = HOBOProperties(date_separator=\",\",\n                   date_format=\"YMD\",\n                   include_line_number=True,\n                   include_plot_details=False,\n                   no_quotes_or_commas=False,\n                   separate_date_time=False)\nprint(P)\nsavepath = Path(Path.home(), \"custom_hobo_properties.json\")\nP.write(savepath)  # Save to file\n\n# Read from a saved file\nQ = HOBOProperties.from_file(savepath)  # Read from a file\nprint(Q)\n```\n\n## Reading HOBO files with the HOBO object\n\n```python\nfrom LoggerReader.readers import HOBO, HOBOProperties\nfrom pathlib import Path\nfrom pkg_resources import resource_filename\n\nclassic_file = resource_filename(\"LoggerReader\", \"sample_files/hobo_1_AB_classic.csv\")\ndefaults_file = resource_filename(\"LoggerReader\", \"sample_files/hobo_1_AB_defaults.csv\")\n\n# To autodetect HOBOWare Properties:\ndata = HOBO().read(defaults_file)\n\n# To manually specify a the HOBOWare configuration, initialize the HOBO reader with a HOBOProperties object\nclassic_file = resource_filename(\"LoggerReader\", \"sample_files/hobo_1_AB_classic.csv\")\nclassic_properties = HOBOProperties.classic()\nhobo = HOBO(classic_properties)\ndata = hobo.read(classic_file)\n```\n\n# Format\nReader objects save csv data in a pandas dataframe stored as the `DATA` attribute.  Column titles are left unchanged with the exception of the datetime column which is renamed to `TIME`. It is always the first column in the dataframe.\n\nWhere possible, any metadata that is found in the file is stored in a `META` attribute.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nicholas512/LoggerRead",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "LoggerRead",
    "package_url": "https://pypi.org/project/LoggerRead/",
    "platform": "",
    "project_url": "https://pypi.org/project/LoggerRead/",
    "project_urls": {
      "Homepage": "https://github.com/nicholas512/LoggerRead"
    },
    "release_url": "https://pypi.org/project/LoggerRead/0.1.0/",
    "requires_dist": [
      "pandas"
    ],
    "requires_python": ">3.6",
    "summary": "A simple module for reading various datalogger output files",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9377902,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02617ef93c20456fb9a9ce19c6e99c35821c69896a80fa42eda95762f03ce1f6",
          "md5": "2cc3a87bf187387750423bb64c5447bf",
          "sha256": "7273b43e1dc9708e54e53c428d330f74d05a1effd5e2cad25fc8bba00b3446dd"
        },
        "downloads": -1,
        "filename": "LoggerRead-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cc3a87bf187387750423bb64c5447bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.6",
        "size": 15038,
        "upload_time": "2021-02-10T20:57:42",
        "upload_time_iso_8601": "2021-02-10T20:57:42.972876Z",
        "url": "https://files.pythonhosted.org/packages/02/61/7ef93c20456fb9a9ce19c6e99c35821c69896a80fa42eda95762f03ce1f6/LoggerRead-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "502d689cc54a98513a2ec5080a1c80a2a3f8d35e8f5272da1e51e3ae2fa7d1d6",
          "md5": "0f5006f724c1c64a41b7ed468b55541a",
          "sha256": "08a2c8a7bc622492bbbc5545028f9476500b2705b5361e9d14aa5f462c4a69d2"
        },
        "downloads": -1,
        "filename": "LoggerRead-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0f5006f724c1c64a41b7ed468b55541a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.6",
        "size": 3158,
        "upload_time": "2021-02-10T20:57:44",
        "upload_time_iso_8601": "2021-02-10T20:57:44.075091Z",
        "url": "https://files.pythonhosted.org/packages/50/2d/689cc54a98513a2ec5080a1c80a2a3f8d35e8f5272da1e51e3ae2fa7d1d6/LoggerRead-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02617ef93c20456fb9a9ce19c6e99c35821c69896a80fa42eda95762f03ce1f6",
        "md5": "2cc3a87bf187387750423bb64c5447bf",
        "sha256": "7273b43e1dc9708e54e53c428d330f74d05a1effd5e2cad25fc8bba00b3446dd"
      },
      "downloads": -1,
      "filename": "LoggerRead-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2cc3a87bf187387750423bb64c5447bf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.6",
      "size": 15038,
      "upload_time": "2021-02-10T20:57:42",
      "upload_time_iso_8601": "2021-02-10T20:57:42.972876Z",
      "url": "https://files.pythonhosted.org/packages/02/61/7ef93c20456fb9a9ce19c6e99c35821c69896a80fa42eda95762f03ce1f6/LoggerRead-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "502d689cc54a98513a2ec5080a1c80a2a3f8d35e8f5272da1e51e3ae2fa7d1d6",
        "md5": "0f5006f724c1c64a41b7ed468b55541a",
        "sha256": "08a2c8a7bc622492bbbc5545028f9476500b2705b5361e9d14aa5f462c4a69d2"
      },
      "downloads": -1,
      "filename": "LoggerRead-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0f5006f724c1c64a41b7ed468b55541a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.6",
      "size": 3158,
      "upload_time": "2021-02-10T20:57:44",
      "upload_time_iso_8601": "2021-02-10T20:57:44.075091Z",
      "url": "https://files.pythonhosted.org/packages/50/2d/689cc54a98513a2ec5080a1c80a2a3f8d35e8f5272da1e51e3ae2fa7d1d6/LoggerRead-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}