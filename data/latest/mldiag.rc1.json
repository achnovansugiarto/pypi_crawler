{
  "info": {
    "author": "Aymen SHABOU",
    "author_email": "aymen.shabou@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n![Build Status](https://github.com/AI-MEN/MLDiag/workflows/mldiag/badge.svg)\n[![Coverage Status](https://codecov.io/gh/AI-MEN/MLDiag/branch/master/graph/badge.svg)](https://codecov.io/gh/AI-MEN/MLDiag) \n[![CodeFactor](https://www.codefactor.io/repository/github/AI-MEN/MLDiag/badge)](https://www.codefactor.io/repository/github/AI-MEN/MLDiag)\n\n# MLDiag\n\nThis python library helps you diagnose machine learning models before deployment. \n\nVisit this introduction to understand about [MLDiag](https://github.com/AI-MEN/MLDiag/blob/master/blog/MLdiag.md). \n\n\n## Features\n*   Generate synthetic data with adversarial attacks to evaluate model robustness\n*   Make some interesting statistics on model behaviour\n*   Simple, easy-to-use and lightweight library. Diagnose data in 3 lines of code\n*   Plug and play to any neural network frameworks (e.g. PyTorch, TensorFlow) or standard machine learning framework (e.g. scikit-learn)\n*   Support textual, image, audio and structured data\n*   Can be added in a CI workflow\n*   Can be used in command line or python scripts\n\n\n## Quick Demo\n*   [Example of diagnosis of Text classification model](https://github.com/AI-MEN/mldiag/blob/master/examples/tf_text_classification_diag.py)\n\n## Quick start\n\n### Installation\nThe library supports python 3.7+ in linux and window platform.\n\nTo install the library:\n```bash\npip install mldiag\n```\nor install the latest version (include BETA features) from github directly\n```bash\npip install git+https://github.com/AI-MEN/mldiag.git\n```\n### Run a diagostic\n\n#### Method 1: \n\nThis method uses command lines only. \nIt requires a model running as a webservice.\nWe provide for a demo a complete example:\n\n- create a text classification model:\n```bash\npython examples/text_classification/tf_text_classification.py train --save_model_path=./mldiag\n```\na tensorflow model `model.h5` is created in the `mldiag` directory\n- Run a text classification web service:\n```bash\npython examples/text_classification/flask_text_classification_service.py  --model_path ./mldiag/model.h5\n```\na local webservice is running under `http://localhost:8080/query`\n- create the test set to diagnose the model\n```bash\npython examples/text_classification/tf_text_classification.py save_test_set --out_path=./mldiag\n```\na test set `test.npy` is saved in `mldiag`. \nIt contains a numpy array of text examples and their class labels\n- run the diagnostic application calling the web service\n```bash\npython mldiag/cli.py diagnose   --eval_set \"./mldiag/test.npy\" \n                                --config_file  \"examples/text_classification/config_text_classification.yaml\" \n                                --service_url http://localhost:8080/query\n                                --report_path \"./mldiag\"\n                                --json_field \"results\"\n```\nwhere `results` is the key used to jsonify data from the webservice (see the web service script).\n\n![MLDiag](https://github.com/AI-MEN/MLDiag/tree/master/blog/capture.jpg =300x100)\n\n#### Method 2\nThis method uses python scripts.\nit supports a number of machine learning models and data formats through wrappers.\nReady to use wrappers can be found in [mldiag/wrappers.py](https://github.com/AI-MEN/MLDiag/blob/master/mldiag/wrappers.py)\nIn the following, a complete example is proposed as demo.\n\n- create a text classification model:\n```bash\npython examples/text_classification/tf_text_classification.py train --save_model_path=./mldiag\n```\na tensorflow model `model.h5` is created in the `mldiag` directory\n- call the  python scrip (the diagnose config file is available in `examples/text_classification/config_text_classification.yaml`):\n```bash\npython examples/text_classification/tf_text_classification_diag.py run --model_path=./mldiag/model.h5 --repor_path=./mldiag\n```\n## Diagnostics\n| Diagnostic | Target | Action | Description |\n|:---:|:---:|:---:|:---:|\n|Textual| Character | OCRError | Simulate ocr error |\n\n\n\n\n## Recent Changes\n\nSee [changelog](https://github.com/AI-MEN/mldiag/blob/master/CHANGE.md) for more details.\n\n## Extension Reading\n*   [Data Augmentation library for Text](https://towardsdatascience.com/data-augmentation-library-for-text-9661736b13ff)\n*   [Does your NLP model able to prevent adversarial attack?](https://medium.com/hackernoon/does-your-nlp-model-able-to-prevent-adversarial-attack-45b5ab75129c)\n*   [How does Data Noising Help to Improve your NLP Model?](https://medium.com/towards-artificial-intelligence/how-does-data-noising-help-to-improve-your-nlp-model-480619f9fb10)\n*   [Data Augmentation library for Speech Recognition](https://towardsdatascience.com/data-augmentation-for-speech-recognition-e7c607482e78)\n*   [Data Augmentation library for Audio](https://towardsdatascience.com/data-augmentation-for-audio-76912b01fdf6)\n*   [Unsupervied Data Augmentation](https://medium.com/towards-artificial-intelligence/unsupervised-data-augmentation-6760456db143)\n*   [A Visual Survey of Data Augmentation in NLP](https://amitness.com/2020/05/data-augmentation-for-nlp/)\n\n\n## Reference\nThis library uses:\n* data (e.g. capturing from internet),\n* research (e.g. following augmenter idea), \n* model (e.g. using pre-trained model) \n\n`TODO: update sources`\nSee [data source](https://github.com/AI-MEN/MLDiag/SOURCE.md) for more details.\n\n## Citing\n\n```latex\n@misc{shabou2020mldiag,\n  title={Machine learning diagnosis},\n  author={Aymen SHABOU},\n  howpublished={https://github.com/AI-MEN/MLDiag},\n  year={2020}\n}\n```\n\n## Contributions\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AI-MEN/MLDiag/blob/master/mldiag",
    "keywords": "diagnose,machine learning,deep learning,augmenter,tensorflow,pytorch,scikit-learn",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mldiag",
    "package_url": "https://pypi.org/project/mldiag/",
    "platform": "",
    "project_url": "https://pypi.org/project/mldiag/",
    "project_urls": {
      "Homepage": "https://github.com/AI-MEN/MLDiag/blob/master/mldiag"
    },
    "release_url": "https://pypi.org/project/mldiag/0.0.1/",
    "requires_dist": [
      "tensorflow-datasets (==3.2.1)",
      "fire (==0.3.1)",
      "tensorflow (==2.0.0)",
      "tensorflow-hub (==0.9.0)",
      "nlpaug (==0.0.20)",
      "pillow (==7.2.0)",
      "plotly (==4.10.0)",
      "yattag (==1.13.2)",
      "nptyping (==1.3.0)",
      "flask (==1.1.2)",
      "pyyaml (==5.3.1)",
      "pandas (==1.1.2)",
      "requests (==2.24.0)",
      "protobuf (==3.13.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "A framework to diagnose ML models",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8338786,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be952918d90b2d366e45b3e8310bfa8cad03cd2980c771c305822276c500c718",
          "md5": "ac43094ac305f0e25a0631294802f03a",
          "sha256": "01928e01600007ab2fa5446116760b2eb17f12e8108dfc2c00038e1ed78492df"
        },
        "downloads": -1,
        "filename": "mldiag-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac43094ac305f0e25a0631294802f03a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 34996,
        "upload_time": "2020-10-04T22:06:06",
        "upload_time_iso_8601": "2020-10-04T22:06:06.695829Z",
        "url": "https://files.pythonhosted.org/packages/be/95/2918d90b2d366e45b3e8310bfa8cad03cd2980c771c305822276c500c718/mldiag-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7fec79bf679f492843bfccc78494685b47864fbbb5574ea3633eea4818a5a9c",
          "md5": "948ad15b0d363382da942a97e3620327",
          "sha256": "e6ed0290bcfe6cab779cbd1a1d37bb89233fec1c9b2be481845f90008ae547e2"
        },
        "downloads": -1,
        "filename": "mldiag-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "948ad15b0d363382da942a97e3620327",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 35074,
        "upload_time": "2020-10-04T22:06:09",
        "upload_time_iso_8601": "2020-10-04T22:06:09.061400Z",
        "url": "https://files.pythonhosted.org/packages/e7/fe/c79bf679f492843bfccc78494685b47864fbbb5574ea3633eea4818a5a9c/mldiag-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be952918d90b2d366e45b3e8310bfa8cad03cd2980c771c305822276c500c718",
        "md5": "ac43094ac305f0e25a0631294802f03a",
        "sha256": "01928e01600007ab2fa5446116760b2eb17f12e8108dfc2c00038e1ed78492df"
      },
      "downloads": -1,
      "filename": "mldiag-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ac43094ac305f0e25a0631294802f03a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 34996,
      "upload_time": "2020-10-04T22:06:06",
      "upload_time_iso_8601": "2020-10-04T22:06:06.695829Z",
      "url": "https://files.pythonhosted.org/packages/be/95/2918d90b2d366e45b3e8310bfa8cad03cd2980c771c305822276c500c718/mldiag-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e7fec79bf679f492843bfccc78494685b47864fbbb5574ea3633eea4818a5a9c",
        "md5": "948ad15b0d363382da942a97e3620327",
        "sha256": "e6ed0290bcfe6cab779cbd1a1d37bb89233fec1c9b2be481845f90008ae547e2"
      },
      "downloads": -1,
      "filename": "mldiag-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "948ad15b0d363382da942a97e3620327",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 35074,
      "upload_time": "2020-10-04T22:06:09",
      "upload_time_iso_8601": "2020-10-04T22:06:09.061400Z",
      "url": "https://files.pythonhosted.org/packages/e7/fe/c79bf679f492843bfccc78494685b47864fbbb5574ea3633eea4818a5a9c/mldiag-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}