{
  "info": {
    "author": "Thiago Santos",
    "author_email": "thiagonds@id.uff.br",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Fatiguepy Package\n\nSince version 2.3.1, the calculation of spectral moments takes considerably less time.\n\n## Available Methods\nThis package can estimate fatigue life by 6 methods in frequency domain and a method in time domain:\n\n* Rainflow\n\n* Narrow Band\n* Rice\n* Wirsching-Light\n* Tovo-Benasciutti\n* <img src=\"https://render.githubusercontent.com/render/math?math=\\alpha_{0.75}\">\n* Dirlik\n* Zhao-Baker\n\nThe package requires numpy, math and fatpack\n\n## Instalation\n\nInstall directly the package by pip:\n\n```\npip install fatiguepy\n```\n\n## Obtaining Power Spectral Density\n\nFirst, it is necessary to do the calculations of the probability moments.\nSo, you need Power Spectral Density. To test this package, a random history filtered will be used to get PSD, as seen below\n\n```python\nimport numpy as np\nfrom scipy import signal\n\nxf = 10\nfs = 1024\ndt = 1/fs\n\nx = np.arange(0, xf, dt)\n\nsignal1 = np.random.randn(len(x))\n\nnyquist = ((len(x)/max(x))/2)\n\nleft_pass  = 1.1*50/nyquist\nleft_stop  = 0.9*50/nyquist\nright_pass = 0.9*120/nyquist\nright_stop = 1.1*120/nyquist\n\n(N, Wn) = signal.buttord(wp=[left_pass, right_pass],\n            ws=[left_stop, right_stop],\n            gpass=2, gstop=30, analog=0)\n\n(b, a) = signal.butter(N, Wn, btype='band', analog=0, output='ba')\n\ny = signal.filtfilt(b, a, signal1)\n\nwindow = signal.hann(len(y), False)\n\nf, Gyy = signal.welch(y, fs, return_onesided=True, window=window, average='median')\n```\n\n## Probability Moments\n\nOnce the PSD and frequency are obtained, just use the module present in the fatiguepy package. Function moment0 to moment4 returns respective probability moment, E0 returns the expected positive zero-crossing rate, EP returns the expected peak occurrency frequency and alpha2 returns spectral width parameter.\n\n\n### Parameters\n\n<img src=\"https://render.githubusercontent.com/render/math?math=G_{yy}\"> (*ndarray*):\nPower Spectral Density or Power Spectrum of Stress History y\n\n<img src=\"https://render.githubusercontent.com/render/math?math=f\"> (*ndarray*):\narray of sample frequencies\n\n\n```python\nfrom fatiguepy import *\nmoments = prob_moment.Probability_Moment(Gyy, f)\n\nm0 = moments.momentn(0)\nm1 = moments.momentn(1)\nm2 = moments.momentn(2)\nm4 = moments.momentn(4)\nm75 = moments.momentn(0.75)\nm15 = moments.momentn(1.5)\n\nE0 = moments.E0()\nEP = moments.EP()\ngamma = moments.alphan(2)\n```\n\nSteel SAE 1015 was considered, so Python can perform the calculations.\n\n```python\nb = -0.138\nsigmaf = 1020\nA = (2**b)*sigmaf\nk = -1/b\nC = A ** k\n```\n\n## Damage\n\nThe damage intensity (Damage/unit of time) calculated by every method is given by the following equation:\n\n<p align=center>\n<img src=\"https://render.githubusercontent.com/render/math?math=\\overline{D} = \\nu_pC^{-1}\\int_0^\\infty s^k p_a(s) ds\">\n</p>\n\nWhere <img src=\"https://render.githubusercontent.com/render/math?math=p_a\"> is PDF of amplitude, k and C is material property, <img src=\"https://render.githubusercontent.com/render/math?math=\\nu_p\"> is equivalent to expected number of peaks and s is stress.\n\n## Narrow Band (NB)\n\nFor narrow band processes it is reasonable to assume that every peak coincides with a cycle and that, consequently, the amplitudes of the cycles are distributed according to a Rayleigh function.\n\nPDF returns the Probability Density Function of Narrow-Band Method, counting_cycles convert PDF in n [cycles] and loading_spectrum returns the number of cycles having amplitude higher or equal to s.\n\n### Parameters\n\n<img src=\"https://render.githubusercontent.com/render/math?math=k\"> (*float*):\nSlope of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=C\"> (*float*):\nConstant of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=G_{yy}\"> (*ndarray*):\nPower Spectral Density or Power Spectrum of Stress History y\n\n<img src=\"https://render.githubusercontent.com/render/math?math=f\"> (*ndarray*):\nArray of sample frequencies\n\n<img src=\"https://render.githubusercontent.com/render/math?math=s\"> (*ndarray*):\nArray of sample stresses\n\n\n```python\nsi = 0.0\nsf = abs(max(y)-min(y))\nds = sf/128\ns = np.arange(si, sf, ds)\n\nNB = Narrow_Band.NB(k, C, Gyy, f, xf, s)\npNB = NB.PDF()\n\nDNB = NB.Damage()\nTNB = NB.Life()\nTNBs = NB.Lifes()\n```\n\nDamage returns the Damage by NB approach, Life returns the period until failure (in cycles) and Lifeh returns the life in hours.\n\nFor the history in study, this method return the respective results:\n\n```\nDNB = 0.001030912564660966 per second\nTNB = 9.70014368123321 cycles\nTNBs = 970.014368123321 seconds\n```\n\n## Rice (RC)\n\nRice model is a mix of Rayleigh and a gaussian distribution.\n\nPDF returns the Probability Density Function of Narrow-Band Method, counting_cycles convert PDF in n [cycles] and loading_spectrum returns the number of cycles having amplitude higher or equal to s.\n\n### Parameters\n\n<img src=\"https://render.githubusercontent.com/render/math?math=k\"> (*float*):\nSlope of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=C\"> (*float*):\nConstant of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=G_{yy}\"> (*ndarray*):\nPower Spectral Density or Power Spectrum of Stress History y\n\n<img src=\"https://render.githubusercontent.com/render/math?math=f\"> (*ndarray*):\nArray of sample frequencies\n\n<img src=\"https://render.githubusercontent.com/render/math?math=s\"> (*ndarray*):\nArray of sample stresses\n\n\n```python\nsi = 0.0\nsf = abs(max(y)-min(y))\nds = sf/128\ns = np.arange(si, sf, ds)\n\nRC = Narrow_Band.RC(k, C, Gyy, f, xf, s)\npRC = RC.PDF()\n\nDRC = RC.Damage()\nTRC = RC.Life()\nTRCs = RC.Lifes()\n```\n\nFor the history in study, this method return the respective results:\n\n```\nDRC = 0.000970230261843453 per second\nTRC = 10.306831680347546 cycles\nTRCs = 1030.6831680347545 seconds\n```\n\n## Wirsching-Light (WL)\n\nTo this method, Wirsching and Light considered an width parameter to correct Narrow-Band approximation with an empirical factor. It can be done with the fatiguepy package as follows:\n\n### Parameters\n\n<img src=\"https://render.githubusercontent.com/render/math?math=k\"> (*float*):\nSlope of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=C\"> (*float*):\nConstant of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=G_{yy}\"> (*ndarray*):\nPower Spectral Density or Power Spectrum of Stress History y\n\n<img src=\"https://render.githubusercontent.com/render/math?math=f\"> (*ndarray*):\nArray of sample frequencies\n\n<img src=\"https://render.githubusercontent.com/render/math?math=s\"> (*ndarray*):\nArray of sample stresses\n\n\n```python\nsi = 0.0\nsf = abs(max(y)-min(y))\nds = sf/128\ns = np.arange(si, sf, ds)\n\nWL = Wirsching_Light.WL(k, C, Gyy, f, xf, s)\nDWL = WL.Damage()\nTWL = WL.Life()\nTWLs = WL.Lifes()\n```\nFor the history in study, this method return the respective results:\n```\nDWL = 0.00130530261843453 per second\nTWL = 7.661058714486574 cycles\nTWLs = 766.1058714486574 seconds\n```\n\n## Tovo-Benasciutti (TB)\n\nTo this method, Tovo and Benasciutti proposed an approach where the\nfatigue life is calculated as a linear combination of the upper and lower fatigue-\ndamage intensity limits. It can be done with the fatiguepy package as follows:\n\n### Parameters\n\n<img src=\"https://render.githubusercontent.com/render/math?math=k\"> (*float*):\nSlope of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=C\"> (*float*):\nConstant of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=G_{yy}\"> (*ndarray*):\nPower Spectral Density or Power Spectrum of Stress History y\n\n<img src=\"https://render.githubusercontent.com/render/math?math=f\"> (*ndarray*):\nArray of sample frequencies\n\n<img src=\"https://render.githubusercontent.com/render/math?math=s\"> (*ndarray*):\nArray of sample stresses\n\n\n```python\nsi = 0.0\nsf = abs(max(y)-min(y))\nds = sf/128\ns = np.arange(si, sf, ds)\n\nTB = Tovo_Benasciutti.TB(k, C, Gyy, f, xf, s)\npTB = TB.PDF()\n\nDTB = TB.Damage()\nTTB = TB.Life()\nTTBs = TB.Lifes()\n```\nFor the history in study, this method return the respective results:\n```\nDTB = 0.0009706076291897186 per second\nTTB = 10.302824436222686 cycles\nTTBs = 1030.282443622268 seconds\n```\n\n## <img src=\"https://render.githubusercontent.com/render/math?math=\\alpha_{0.75}\"> method (AL)\n\nThis method is a correction method based in a spectral parameter <img src=\"https://render.githubusercontent.com/render/math?math=\\alpha_{0.75}\">, and it's can be done as follows:\n\n### Parameters\n\n<img src=\"https://render.githubusercontent.com/render/math?math=k\"> (*float*):\nSlope of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=C\"> (*float*):\nConstant of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=G_{yy}\"> (*ndarray*):\nPower Spectral Density or Power Spectrum of Stress History y\n\n<img src=\"https://render.githubusercontent.com/render/math?math=f\"> (*ndarray*):\nArray of sample frequencies\n\n<img src=\"https://render.githubusercontent.com/render/math?math=xf\"> (*float*):\nObservation period\n\n<img src=\"https://render.githubusercontent.com/render/math?math=s\"> (*ndarray*):\nArray of sample stresses\n\n\n```python\nsi = 0.0\nsf = abs(max(y)-min(y))\nds = sf/128\ns = np.arange(si, sf, ds)\n\nAL = alpha075.AL(k, C, Gyy, f, xf, s)\npAL = AL.PDF()\n\nDAL = AL.Damage()\nTAL = AL.Life()\nTALs = AL.Lifes()\n```\nFor the history in study, this method return the respective results:\n```\nDAL = 0.0010114366327434396 per second\nTAL = 9.886926848670504 cycles\nTALs = 988.6926848670504 seconds\n```\n\n## Dirlik\n\nThis method has long been considered to be one of the best and has already been subject to modifications, e.g., for the inclusion of the temperature effect.\n\n### Parameters\n\n<img src=\"https://render.githubusercontent.com/render/math?math=k\"> (*float*):\nSlope of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=C\"> (*float*):\nConstant of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=G_{yy}\"> (*ndarray*):\nPower Spectral Density or Power Spectrum of Stress History y\n\n<img src=\"https://render.githubusercontent.com/render/math?math=f\"> (*ndarray*):\nArray of sample frequencies\n\n<img src=\"https://render.githubusercontent.com/render/math?math=s\"> (*ndarray*):\nArray of sample stresses\n\n\nThe functions for this method are analogous to the NB functions:\n\n```python\nsi = 0.0\nsf = abs(max(y)-min(y))\nds = sf/128\ns = np.arange(si, sf, ds)\n\nDK = Dirlik.DK(k, C, Gyy, f, xf, s)\n\nps = DK.PDF()\n\nDDK = DK.Damage()\nTDK = DK.Life()\nTDKs = DK.Lifes()\n```\nFor the history in study, this method return the respective results:\n```\nDDK = 0.000897359786515067 per second\nTDK = 11.143802241055845 cycles\nTDKs = 1114.3802241055845 seconds\n```\n\n## Zhao-Baker (ZB)\n\nThis method combined theoretical assumptions and simulation results to give the linear combination of Weibull and Rayleigh Probability Density Function.\n\n### Parameters\n\n<img src=\"https://render.githubusercontent.com/render/math?math=k\"> (*float*):\nSlope of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=C\"> (*float*):\nConstant of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=G_{yy}\"> (*ndarray*):\nPower Spectral Density or Power Spectrum of Stress History y\n\n<img src=\"https://render.githubusercontent.com/render/math?math=f\"> (*ndarray*):\nArray of sample frequencies\n\n<img src=\"https://render.githubusercontent.com/render/math?math=s\"> (*ndarray*):\nArray of sample stresses\n\n\nThe results can be obtained in the same way as the previous methods:\n\n```python\nsi = 0.0\nsf = abs(max(y)-min(y))\nds = sf/128\ns = np.arange(si, sf, ds)\n\nZB = Zhao_Baker.ZB(k, C, Gyy, w, xf, s)\npsZB = ZB.PDF()\n\nDZB = ZB.Damage()\nTZB = ZB.Life()\nTZBs = ZB.Lifes()\n```\nFor the history in study, this method return the respective results:\n```\nDZB = 0.0009079850858869257 per second\nTZB = 11.013396756657006 cycles\nTZBs = 1101.3396756657006 seconds\n```\n\n## Rainflow\n\nIf you want to calculate rainflow amplitude histogram, you can use the Rainflow module of this package.\n\n### Parameters\n\n<img src=\"https://render.githubusercontent.com/render/math?math=C\"> (*float*):\nConstant of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=k\"> (*float*):\nSlope of SN Curve\n\n<img src=\"https://render.githubusercontent.com/render/math?math=y\"> (*ndarray*):\nStress History y\n\n<img src=\"https://render.githubusercontent.com/render/math?math=x\"> (*ndarray*):\ntime\n<img src=\"https://render.githubusercontent.com/render/math?math=nbins\"> (*int*):\nnumber of bins\n\nThe results can be obtained in the same way as the previous methods:\n\n```python\nRF = Rainflow.rainflowD(C, k, y, x, nbins=70)\n\nDRF = RF.Damage()\nTRF = RF.life()\nTRFs = RF.lifes()\n```\nFor the history in study, this method return the respective results:\n```\nDRF = 0.0008962822113232534 per second\nTRF = 11.157200124764495 cycles\nTRFs = 1115.720012476449 seconds\n```\n\nYou can compare the result of the methods with counting_cycles() method, present in Narrow_Band, Rice, Dirlik and Zhao_Baker modules as seen below:\n\n```python\nimport matplotlib.pyplot as plt\n\nS, nRF, pRF = RF.rainflow_histogram()\n\nnNB = NB.counting_cycles()\nnAL = AL.counting_cycles()\nnTB = TB.counting_cycles()\nnRC = RC.counting_cycles()\nnDK = DK.counting_cycles()\nnZB = ZB.counting_cycles()\n\nplt.figure(\"Comparison in same plot\")\n#plt.title(rf\"$\\alpha_{2} = {round(gammanum, 2)}$\")\nplt.bar(S, nRF,width=round(max(S)*0.015, 1), color='white', edgecolor='black')\nplt.plot(s, nNB, linestyle=':')\nplt.plot(s, nAL, linestyle='--')\nplt.plot(s, nTB, linestyle='-.')\nplt.plot(s, nDK, linestyle='-')\nplt.plot(s, nZB, linestyle='--')\n\nplt.legend((\"Rayleigh\", r\"$\\alpha_{0.75}$\", \"Tovo-Benasciutti\", \"Dirlik\", \"Zhao-Baker\", \"Rainflow\"))\n\nplt.xlabel(r'$S_{a}$ [MPa]')\nplt.ylabel(r'n [cycles]')\nplt.grid(True)\nplt.show()\n```\n\n![Comparison between methods in frequency domain and Rainflow](image/Counting_Cycles.png)\n\nIt's possible to compare the methods with loading_spectrum as well.\n\n```python\nCC, Ss = RF.CumuCycles()\n\nCNB = NB.loading_spectrum()\nCRC = RC.loading_spectrum()\nCAL = AL.loading_spectrum()\nCTB = TB.loading_spectrum()\nCDK = DK.loading_spectrum()\nCZB = ZB.loading_spectrum()\n\nplt.figure(\"Comparison between Cumulative Cycles\")\n\nplt.semilogx(CNB, s, marker='D')\nplt.semilogx(CAL, s, marker='v')\nplt.semilogx(CTB, s, marker='*')\nplt.semilogx(CDK, s, marker='^')\nplt.semilogx(CZB, s, marker='s')\nplt.semilogx(CC, S, marker='o')\n\nplt.legend((\"Rayleigh\", r\"$\\alpha_{0.75}$\", \"Tovo-Benasciutti\", \"Dirlik\", \"Zhao-Baker\", \"Rainflow\"))\n\nplt.xlabel('Cumulated Cycles [cycles]')\nplt.ylabel(r'S$_a$ [MPa]')\n\nplt.grid(True)\nplt.show()\n```\n\n![Comparison between methods in frequency domain and Rainflow](image/Cumulative_Cycles.png)\n\n## Relative Error\n\nTo compute relative error of any method, the relative_error function, present in all modules of the fatiguepy package, must be used. \n\nThis relative error is in relation to Damage/(unit of second) when type='damage' or in relation to Life when type='cycles'.\n\nHere's an example, calculating error for Zhao-Baker Method:\n\n```python\nZB = Zhao_Baker.ZB(k, C, Gyy, w, xf, s)\npsZB = ZB.PDF()\n\nDZB = ZB.Damage()\nerr = ZB.relative_error(y, type='cycles')\n```\n\nWhen the method parameter is hidden, method=\"Rainflow\" is considered.\n\nIf you want to calculate error in relation to the experimental result, do as follows (experimental_value has to be in Damage/(unit of time or unit of life (cycles, s, h, etc))):\n\n```python\nZB = Zhao_Baker.ZB(k, C, Gyy, w, xf, s)\npsZB = ZB.PDF()\n\nDZB = ZB.Damage()\nDex = 0.00087\nerr = ZB.relative_error(y, method=\"Experimental\", experimental_value = Dex)\n```\n\nAccess https://github.com/thiagonds65/fatiguepy to view comparison images\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thiagonds65/fatiguepy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fatiguepy",
    "package_url": "https://pypi.org/project/fatiguepy/",
    "platform": "",
    "project_url": "https://pypi.org/project/fatiguepy/",
    "project_urls": {
      "Homepage": "https://github.com/thiagonds65/fatiguepy"
    },
    "release_url": "https://pypi.org/project/fatiguepy/2.3.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Package to estimate life of random fatigue history with frequency domain methods",
    "version": "2.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11291045,
  "releases": {
    "1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2122529e50a8043e9e461b8ee653e3a9cefa866ecc78f3c9753cc4a273bc1eca",
          "md5": "b8517bd60076c29bf4b7909137d7fbf2",
          "sha256": "149e0a7fedd052a54a4b431d13284b17c2eda7876ff0ee7af613f7fcc795c91b"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8517bd60076c29bf4b7909137d7fbf2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15634,
        "upload_time": "2020-06-25T00:06:26",
        "upload_time_iso_8601": "2020-06-25T00:06:26.626781Z",
        "url": "https://files.pythonhosted.org/packages/21/22/529e50a8043e9e461b8ee653e3a9cefa866ecc78f3c9753cc4a273bc1eca/fatiguepy-1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e07307d08d8caedd923b37e23030c87711bcb5048d3bb9895fa4b7a9672e663b",
          "md5": "3d8af45fc47cc6421624978d77a7d7d9",
          "sha256": "7b792a5399f920574d983ddbde027d1c3a7966a1b832abd474e7df7d0014e2f2"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "3d8af45fc47cc6421624978d77a7d7d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12795,
        "upload_time": "2020-06-25T00:06:29",
        "upload_time_iso_8601": "2020-06-25T00:06:29.258365Z",
        "url": "https://files.pythonhosted.org/packages/e0/73/07d08d8caedd923b37e23030c87711bcb5048d3bb9895fa4b7a9672e663b/fatiguepy-1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "804ef24458240a343eeec52b6844f88c226669f984e3add4e1b045838340b448",
          "md5": "05f245dcd9e6e3bedc5c2f25d3e4665b",
          "sha256": "1ef81132e69755d42ab99dc79adfbd79eb12754cd8c5d4c51a3aa782f363c0e8"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05f245dcd9e6e3bedc5c2f25d3e4665b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15651,
        "upload_time": "2020-06-25T00:12:20",
        "upload_time_iso_8601": "2020-06-25T00:12:20.727926Z",
        "url": "https://files.pythonhosted.org/packages/80/4e/f24458240a343eeec52b6844f88c226669f984e3add4e1b045838340b448/fatiguepy-1.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a63ebae487d32eb12d9940b846219362c8a22e82fddb704aa5bccfcb7fdcb56",
          "md5": "3857c054140cc48aedae93b079eef982",
          "sha256": "a27e35a33059af0ef759b3efc373f303ea6a5f730aa2ce4e98e01ef7cb5ae172"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3857c054140cc48aedae93b079eef982",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12810,
        "upload_time": "2020-06-25T00:12:23",
        "upload_time_iso_8601": "2020-06-25T00:12:23.898787Z",
        "url": "https://files.pythonhosted.org/packages/3a/63/ebae487d32eb12d9940b846219362c8a22e82fddb704aa5bccfcb7fdcb56/fatiguepy-1.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b52ee992a06ff4162190002295c3f6133136ca3f0fa68d0f2aebc7837d6bbc3",
          "md5": "46b43f74785b0beb8aa095162090a80f",
          "sha256": "bf4c79074fcfda54f0c26ddefca7e40bf3b6677515a790eee1d14704ddfb3422"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46b43f74785b0beb8aa095162090a80f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18748,
        "upload_time": "2020-08-22T18:48:57",
        "upload_time_iso_8601": "2020-08-22T18:48:57.944865Z",
        "url": "https://files.pythonhosted.org/packages/2b/52/ee992a06ff4162190002295c3f6133136ca3f0fa68d0f2aebc7837d6bbc3/fatiguepy-1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a256539f3d27368970ecf0215e8b0d518e212451b5aab0bb96a502592f897306",
          "md5": "52be2893fde46ac778b6735c4425c53f",
          "sha256": "7f99bcde1652005de6f1db476ea1f5d111b92e0e58a48532441de8f74fce0cc6"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "52be2893fde46ac778b6735c4425c53f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15408,
        "upload_time": "2020-08-22T18:49:02",
        "upload_time_iso_8601": "2020-08-22T18:49:02.497272Z",
        "url": "https://files.pythonhosted.org/packages/a2/56/539f3d27368970ecf0215e8b0d518e212451b5aab0bb96a502592f897306/fatiguepy-1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91d99f6af5d126f8e1c39f0b7657ea04e740f2f0c5a93cf295c5d46cb99dfb46",
          "md5": "bd5f2b7f75861bf7af311237c0259489",
          "sha256": "e7d339a088a5a18994dba04c88111d7c5e88cfcbe2115d882e4d763ff929de34"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd5f2b7f75861bf7af311237c0259489",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18784,
        "upload_time": "2020-08-22T20:17:44",
        "upload_time_iso_8601": "2020-08-22T20:17:44.974778Z",
        "url": "https://files.pythonhosted.org/packages/91/d9/9f6af5d126f8e1c39f0b7657ea04e740f2f0c5a93cf295c5d46cb99dfb46/fatiguepy-1.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daba63835a773776d93e5360a558ff8c2844cbead036ae1e1e137b338413a387",
          "md5": "c3c512baf3c4301e6a502a13e5843cb5",
          "sha256": "6c8e34240ef92be61916101d3054f487f8edb5db5df42f761cc1dd9617815a01"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c3c512baf3c4301e6a502a13e5843cb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15439,
        "upload_time": "2020-08-22T20:17:49",
        "upload_time_iso_8601": "2020-08-22T20:17:49.966784Z",
        "url": "https://files.pythonhosted.org/packages/da/ba/63835a773776d93e5360a558ff8c2844cbead036ae1e1e137b338413a387/fatiguepy-1.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b51be95cd5763a0131413135dfc59293062c470bc55c822d53a1a74e267dc603",
          "md5": "5b01af74ccec9cc526dec5863315ced0",
          "sha256": "b0fbf8c1ff9bd139fc8f8d50c22d14fef9eaeb1d491ca2a0a4420ed52edfe17d"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b01af74ccec9cc526dec5863315ced0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18824,
        "upload_time": "2020-10-04T22:58:27",
        "upload_time_iso_8601": "2020-10-04T22:58:27.926780Z",
        "url": "https://files.pythonhosted.org/packages/b5/1b/e95cd5763a0131413135dfc59293062c470bc55c822d53a1a74e267dc603/fatiguepy-1.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "647f5851208ada0381b651b054c01ce9e835c769f9db03585cac1f6b0078d46c",
          "md5": "e312b2be104eae3576a1f8d7fb2a82cc",
          "sha256": "5ad30849f2893754ac6f34ad1b49966e1f8714786a46963e9b9b6fd4b642967c"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e312b2be104eae3576a1f8d7fb2a82cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15458,
        "upload_time": "2020-10-04T22:58:34",
        "upload_time_iso_8601": "2020-10-04T22:58:34.275470Z",
        "url": "https://files.pythonhosted.org/packages/64/7f/5851208ada0381b651b054c01ce9e835c769f9db03585cac1f6b0078d46c/fatiguepy-1.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78b6b7662e8e235c2cffa54e6a37b71ce16238433c5ef0ca8cee80142f3cbeb8",
          "md5": "46bf8281e6c7f7034437d9fe3676d27c",
          "sha256": "f74ea2f8be3ef5840d5028ed850a04f3fdb929e2712609687f49d8dff2d3d30f"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.9.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46bf8281e6c7f7034437d9fe3676d27c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19443,
        "upload_time": "2021-05-20T01:25:53",
        "upload_time_iso_8601": "2021-05-20T01:25:53.788179Z",
        "url": "https://files.pythonhosted.org/packages/78/b6/b7662e8e235c2cffa54e6a37b71ce16238433c5ef0ca8cee80142f3cbeb8/fatiguepy-1.9.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2113959118ec80e93f1605e45201444c1b1a6f0addc934060a7d4657361deb0d",
          "md5": "8223b8c0028f28865a7283657757d06e",
          "sha256": "11f7a61e36c6918a07ba80e8aaf9f99b91a7f25a7eb8d2e1f6a626b74ee5b012"
        },
        "downloads": -1,
        "filename": "fatiguepy-1.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8223b8c0028f28865a7283657757d06e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16440,
        "upload_time": "2021-05-20T01:26:25",
        "upload_time_iso_8601": "2021-05-20T01:26:25.896726Z",
        "url": "https://files.pythonhosted.org/packages/21/13/959118ec80e93f1605e45201444c1b1a6f0addc934060a7d4657361deb0d/fatiguepy-1.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a167772a88eaadbb1cef4c30a8b75b819159726ad49283d85d37e58ca2054ef2",
          "md5": "e8df4e2ab7017257e01fd84daeb6329c",
          "sha256": "bfa7966047428b6deee345a924a4cecd0d1c15986d6011d520178c5c03a7204d"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8df4e2ab7017257e01fd84daeb6329c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19418,
        "upload_time": "2021-05-20T01:26:05",
        "upload_time_iso_8601": "2021-05-20T01:26:05.613114Z",
        "url": "https://files.pythonhosted.org/packages/a1/67/772a88eaadbb1cef4c30a8b75b819159726ad49283d85d37e58ca2054ef2/fatiguepy-2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fab2aeb4ab77603bbbf63bfaa5250d7e6315ead4b84ac529803b76fef471d992",
          "md5": "499f2b30066f7bf1e424762eca952e95",
          "sha256": "864af11a4765d2fb117a2783ca4887297ad3b3684175245a738b173b6ee11468"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "499f2b30066f7bf1e424762eca952e95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16419,
        "upload_time": "2021-05-20T01:26:34",
        "upload_time_iso_8601": "2021-05-20T01:26:34.818779Z",
        "url": "https://files.pythonhosted.org/packages/fa/b2/aeb4ab77603bbbf63bfaa5250d7e6315ead4b84ac529803b76fef471d992/fatiguepy-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37bc0060bb8f341c5ba99ee7073b65f935b74979adc5b036cd894d160c7585bd",
          "md5": "0cd21c5ac45aeccbb828198658d0f387",
          "sha256": "e71297c914fef57fd4374ae3851a91907a8f8a496c5265b98487a00752db4cfc"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0cd21c5ac45aeccbb828198658d0f387",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19293,
        "upload_time": "2021-06-14T20:46:02",
        "upload_time_iso_8601": "2021-06-14T20:46:02.252895Z",
        "url": "https://files.pythonhosted.org/packages/37/bc/0060bb8f341c5ba99ee7073b65f935b74979adc5b036cd894d160c7585bd/fatiguepy-2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2aee5985c4e693b3de64707e2e5a305c476591abb811ce051aa83e8f0ae4ea1a",
          "md5": "477365df086cde1812890c9e09f76dfa",
          "sha256": "fc6cc32fedfb0386667f6d74de3e09a8c0a54b95e37f9f6e4f53b2864955da80"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "477365df086cde1812890c9e09f76dfa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16271,
        "upload_time": "2021-06-14T20:46:13",
        "upload_time_iso_8601": "2021-06-14T20:46:13.508843Z",
        "url": "https://files.pythonhosted.org/packages/2a/ee/5985c4e693b3de64707e2e5a305c476591abb811ce051aa83e8f0ae4ea1a/fatiguepy-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10a2006c22a75fa047a907f7421c87d139bb18fc474b65abf2f3a122cb570079",
          "md5": "1e5ad0212d44d86aec68e04f13cc44e7",
          "sha256": "cb63e30b03b8b192db9c09783a4b39ee78577ec150f3fddbf336544e2217b141"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e5ad0212d44d86aec68e04f13cc44e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19434,
        "upload_time": "2021-06-17T18:34:08",
        "upload_time_iso_8601": "2021-06-17T18:34:08.022699Z",
        "url": "https://files.pythonhosted.org/packages/10/a2/006c22a75fa047a907f7421c87d139bb18fc474b65abf2f3a122cb570079/fatiguepy-2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f9d69caa24561849f199a0282f56179a26d0b5a004c0a8febaba4a4445cf208",
          "md5": "b45681b4634de4f269e6e23edd887caf",
          "sha256": "4dd9db548ef0f339a16f9be8760050fdd6010999c6973a9427cb86e7a1298e9f"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b45681b4634de4f269e6e23edd887caf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16415,
        "upload_time": "2021-06-17T18:34:19",
        "upload_time_iso_8601": "2021-06-17T18:34:19.384869Z",
        "url": "https://files.pythonhosted.org/packages/0f/9d/69caa24561849f199a0282f56179a26d0b5a004c0a8febaba4a4445cf208/fatiguepy-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeecfac2d4d8ccf0ef6af09529cf09bdc1ef5d4e461738087294ad7d99ce0d43",
          "md5": "5fdd282b84cce2e9f3e9a92526ab5f25",
          "sha256": "ca11c453d9b5ebfd0d03e593b93a0bfd2ec33c8f647d41f1c69af4fc4718994d"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fdd282b84cce2e9f3e9a92526ab5f25",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19450,
        "upload_time": "2021-06-19T17:00:50",
        "upload_time_iso_8601": "2021-06-19T17:00:50.649714Z",
        "url": "https://files.pythonhosted.org/packages/ae/ec/fac2d4d8ccf0ef6af09529cf09bdc1ef5d4e461738087294ad7d99ce0d43/fatiguepy-2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b12226123b9697173895f994aa0be44fe1d8a5bb3eb19d9742d1b53773891865",
          "md5": "d2309e5359e00d8c2b7ffe9881d34596",
          "sha256": "74432feb9f8a414fd6d549d8196cea82fe130388cb924a7e32fbe0b65d22d836"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d2309e5359e00d8c2b7ffe9881d34596",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16462,
        "upload_time": "2021-06-19T17:01:02",
        "upload_time_iso_8601": "2021-06-19T17:01:02.413112Z",
        "url": "https://files.pythonhosted.org/packages/b1/22/26123b9697173895f994aa0be44fe1d8a5bb3eb19d9742d1b53773891865/fatiguepy-2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7827394dba17e1da9c98a77ae29ccc20a2c30c72a8b17639162a23f03abb2593",
          "md5": "5407dc3db1cf6c30465468da5e10a549",
          "sha256": "73e6d5b5ca674326066778bcebdfa742f60796b459037a89468ffb48b1569145"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5407dc3db1cf6c30465468da5e10a549",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20355,
        "upload_time": "2021-08-27T01:09:11",
        "upload_time_iso_8601": "2021-08-27T01:09:11.208698Z",
        "url": "https://files.pythonhosted.org/packages/78/27/394dba17e1da9c98a77ae29ccc20a2c30c72a8b17639162a23f03abb2593/fatiguepy-2.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d04aeec6d1af06c160f13b262cfac715bfe01909b293e526cc689555b0be4e6a",
          "md5": "4e68b06cad9f0a4f19354128b6db79b1",
          "sha256": "d466c3976ced8139f357bf3f2462d1d2cfe20b83e8874dd4b4477f6085c239c0"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e68b06cad9f0a4f19354128b6db79b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16608,
        "upload_time": "2021-08-27T01:09:27",
        "upload_time_iso_8601": "2021-08-27T01:09:27.055372Z",
        "url": "https://files.pythonhosted.org/packages/d0/4a/eec6d1af06c160f13b262cfac715bfe01909b293e526cc689555b0be4e6a/fatiguepy-2.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a3b25c774101b51d4fb2335e6a5131d6a220bd54f169c7d792f4bcf682ec032",
          "md5": "2b7ec168e4e31899da8ee5dda10ab255",
          "sha256": "d24c20137ea559d8c28faed9376f81dd80605d13e62be985a8b2d106308b0e61"
        },
        "downloads": -1,
        "filename": "fatiguepy-2.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b7ec168e4e31899da8ee5dda10ab255",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19491,
        "upload_time": "2021-08-27T01:39:30",
        "upload_time_iso_8601": "2021-08-27T01:39:30.243635Z",
        "url": "https://files.pythonhosted.org/packages/4a/3b/25c774101b51d4fb2335e6a5131d6a220bd54f169c7d792f4bcf682ec032/fatiguepy-2.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a3b25c774101b51d4fb2335e6a5131d6a220bd54f169c7d792f4bcf682ec032",
        "md5": "2b7ec168e4e31899da8ee5dda10ab255",
        "sha256": "d24c20137ea559d8c28faed9376f81dd80605d13e62be985a8b2d106308b0e61"
      },
      "downloads": -1,
      "filename": "fatiguepy-2.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2b7ec168e4e31899da8ee5dda10ab255",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19491,
      "upload_time": "2021-08-27T01:39:30",
      "upload_time_iso_8601": "2021-08-27T01:39:30.243635Z",
      "url": "https://files.pythonhosted.org/packages/4a/3b/25c774101b51d4fb2335e6a5131d6a220bd54f169c7d792f4bcf682ec032/fatiguepy-2.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}