{
  "info": {
    "author": "Alin Climente",
    "author_email": "climente.alin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# HTMGEM \n\nGenerate HTML with Python (Inspired by [Mithriljs](https://mithril.js.org/)). \n\n\n`htmgem` is a collection of html tags as functions. \nThis allows you to create dinamically html pages and **html components** on the backend with python.\n\n\n## Quickstart\n\n```py\n\npip3 install htmgem\n\n```\n\nBellow you have an html boilerplate created with htmgem:\n\n```py\n\nfrom htmgem.tags import *\n\n\nhtml_string = \\\nhtml({'lang':'en'}, [\n    head([\n        meta({'charset':'UTF-8'}),\n        meta({'name':'viewport', 'content':'width=device-width, initial-scale=1.0'}),\n        link({'rel':'stylesheet', 'href':'https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.1.2/tailwind.min.css'}), \n        script({'src':'https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js', 'defer':None})\n    ]),\n\n    body([\n        h1(\"Interesting title\"),\n\n        p(\"A very long paragraph\"),\n\n        ul({\"class\": \"somediv\"}, [\n            (li, \"item1\"),\n            (li, \"item2\"),\n            (li, {\"id\": \"myid\", \"class\":\"important\"}, \"item3\"),\n        ])\n    ])\n])\n\n```\n\nThe html equivalent would look like this:\n\n```html\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.1.2/tailwind.min.css\">\n    <script src=\"https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js\" defer></script>\n</head>\n<body>\n\n    <h1>Interesting title</h1>\n\n    <p>A very long paragraph</p>\n\n    <ul class=\"somediv\">\n        <li>item1</li>\n        <li>item2</li>\n        <li id=\"myid\" class=\"important\">item3</li>\n    </ul>\n\n</body>\n</html>\n```\n\nAs you can see `html` is a function and same is the case for `body`, `p`, `ul`, `li` etc.\n\n\nEach tag function receives `attributes` and `children` as parameters. \n\nSome examples:\n\n```py\n\np(attrs={'class':'bg-gray-100', 'id':'first-paragraph'}, children=\"My paragraph\")\n#'<p class=\"bg-gray-100\" id=\"first-paragraph\">My paragraph</p>'\n\np({'class':'bg-gray-100', 'id':'first-paragraph'})\n# '<p class=\"bg-gray-100\" id=\"first-paragraph\"></p>'\n\np(\"My paragraph\")\n# '<p>My paragraph</p>'\n\np()\n# '<p></p>'\n\ndiv({'class': 'flex items-center'}, [p(f\"My paragraph{nbr}\") for nbr in range(3)])\n# '<div class=\"flex items-center\"><p>My paragraph0</p><p>My paragraph1</p><p>My paragraph2</p></div>'\nâ€‹\ndiv([p, p, p])\n# '<div><p></p><p></p><p></p></div>'\n\n\ninput_({'type':'text', 'required':None})\n# '<input type=\"text\" required></input>' \n\n```\n\n- `attrs` : is a dictionary which contains attribute name (class, id, anything) and the corresponding value;\n- `children`: can be a string or a list of other tag functions (ul, li etc);\n- `attrs` and `children` are positional and optional parameters;\n\n\n\nThis is how you can create a component:\n\n```py\ndef Link(path, content):\n\n    class_list = [\n        'bg-blue-200',\n        'p-4',\n        'cursor-pointer'\n    ]    \n\n    return a(\n        {\"href\": path, \"class\": class_list, 'style':'margin-left:2rem;'}, \n        content\n    )\n\n\nLink('/users', 'see users')\n# '<a href=\"/users\" class=\"bg-blue-200 p-4 cursor-pointer\" style=\"margin-left:2rem;\">see users</a>'\n\n```\n\nNow you can pass `Link` component in any other function tag (p, div, body etc).\n\n\nThis is how a generated list would look like:\n\n```py\n\ndata_list = [1,2,3,4] # something from your database\n\ndef DataNbrList():\n    #Whatever operations you want to do on data\n\n    htmli = []\n    for item in data_list:\n        htmli.append(li(item))\n\n    return [\n        h4(f\"Currently saved names {len(htmli)}\"),\n        ul(htmli)\n    ]\n\n\ndiv(DataNbrList())\n# '<div><h4>Currently saved names 4</h4><ul><li>1</li><li>2</li><li>3</li><li>4</li></ul></div>'\n\n```\n\n\nI quess by now you got a feel on how `htmgem` works, how you can integrate htmgem with Flask or other framework?\n\n> HTML is just text (more specifically text/html)\n\n```py\nfrom flask import Flask, request\nfrom functools import lru_cache # trick for max performance\nfrom htmgem.tags import *\n\n\napp = Flask(__name__)\n\n\n# This can be imported from another file\nLayout = lambda page_title, page_content: \\\nhtml({'lang':'en'}, [\n    head([\n        meta({'charset':'UTF-8'}),\n        meta({'name':'viewport', 'content':'width=device-width, initial-scale=1.0'}),\n        # Add Alpine js for a sprinkle of interactivity (modals, toggles etc)\n        script({'src':'https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js', 'defer':None})\n        title(page_title)\n    ]),\n\n    body(page_content)\n\n])\n\n\n@app.route(\"/\")\ndef index():  \n    return Layout(\n        page_title   = \"home page\", \n        page_content = [ #list of components or just the component\n            h1(\"The home page\"),\n            Link(path='/form-page', content=\"Go to form page\")\n        ]\n    )\n\n\nif __name__ == \"__main__\":\n    app.run(debug=True)\n\n```\n\nIn the `examples` folder you have a comparision between a list with 100_000 items generated with javascript (vannila js) and the same list generated with Python.\nOnce the js is working on creating the list the page is blocked while when the html is sent by python you can still work on the page.\nOf course, the js code can be optimized, but same is the case for Python.\n\n![](htmgem.gif)\n\n\n\n## Why?\n\n- Freedom to have data as html(`[li(item) for item in items]`);\n- No specific template syntax just python functions;\n- It's faster to sent HTML than sending JSON which is parsed later by Javascript;\n- Minimum javascript skills to create a dynamic component (no need to learn Vue, React, Angular, Svelte or other frontend framework);\n- No need to worry about the js bundle size (you just send html);\n- Better performance by decorating components with `@functools.lru_cache(maxsize=None)` or `@functools.cache`(3.9+) ([read python docs](https://docs.python.org/3/library/functools.html));\n- For interactivity js features you can use either [AlpineJs](https://github.com/alpinejs/alpine) or [LuciaJs](https://lucia.js.org/);\n- Easy Lighthouse: Performance, SEO.\n\n\n**Submit any questions/issues you have! Fell free to fork it and improve it!**\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ClimenteA/htmgem",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "htmgem",
    "package_url": "https://pypi.org/project/htmgem/",
    "platform": "",
    "project_url": "https://pypi.org/project/htmgem/",
    "project_urls": {
      "Homepage": "https://github.com/ClimenteA/htmgem"
    },
    "release_url": "https://pypi.org/project/htmgem/0.0.2/",
    "requires_dist": null,
    "requires_python": ">3.5",
    "summary": "Generate HTML with Python!",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11121597,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "013705126f65cc8575e95566471e13b8d40169eafcee2de636e3f1fb186ab56f",
          "md5": "78700884232bf5229ca8e68437d31432",
          "sha256": "8da9c1836ac17f364a316271bbf3b1b39e155aeacd46edbc24481eba7956161d"
        },
        "downloads": -1,
        "filename": "htmgem-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78700884232bf5229ca8e68437d31432",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.5",
        "size": 8124,
        "upload_time": "2021-05-04T15:42:35",
        "upload_time_iso_8601": "2021-05-04T15:42:35.143099Z",
        "url": "https://files.pythonhosted.org/packages/01/37/05126f65cc8575e95566471e13b8d40169eafcee2de636e3f1fb186ab56f/htmgem-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2aef497328f1d9b1409c96b09e1199cee87ec3d7ef5997ba3bae744c67ac5a17",
          "md5": "89965455c4cd1d022882f6746533cee8",
          "sha256": "d9413034b9b00ae48069ac3dceb387fed5f672120e5e34c2a73269bcfccbc182"
        },
        "downloads": -1,
        "filename": "htmgem-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "89965455c4cd1d022882f6746533cee8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 11147,
        "upload_time": "2021-05-04T15:42:37",
        "upload_time_iso_8601": "2021-05-04T15:42:37.207556Z",
        "url": "https://files.pythonhosted.org/packages/2a/ef/497328f1d9b1409c96b09e1199cee87ec3d7ef5997ba3bae744c67ac5a17/htmgem-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d8f01f16124ca3d0b3faf596f5d7196f65a3f080ff59e88e167f5b471d09b20",
          "md5": "1c74bf3500197e0b03f1b71596554c6c",
          "sha256": "600a62f64b0ada245f53ea7c429582b4627cd448fe585cbf8aea2a37217a3f80"
        },
        "downloads": -1,
        "filename": "htmgem-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c74bf3500197e0b03f1b71596554c6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.5",
        "size": 8132,
        "upload_time": "2021-08-08T08:54:40",
        "upload_time_iso_8601": "2021-08-08T08:54:40.004923Z",
        "url": "https://files.pythonhosted.org/packages/1d/8f/01f16124ca3d0b3faf596f5d7196f65a3f080ff59e88e167f5b471d09b20/htmgem-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbb7b1a6d4c85488aae21cc1bf3c0fc53b75a634077096cc0348ccde6d927f6d",
          "md5": "fec5429a2f6ec1eda503dc0f30291107",
          "sha256": "df194f5c92442f7d974866df809b07c326bff10a42b2f35cc023ddbc6c5187f2"
        },
        "downloads": -1,
        "filename": "htmgem-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fec5429a2f6ec1eda503dc0f30291107",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.5",
        "size": 11121,
        "upload_time": "2021-08-08T08:54:41",
        "upload_time_iso_8601": "2021-08-08T08:54:41.706811Z",
        "url": "https://files.pythonhosted.org/packages/cb/b7/b1a6d4c85488aae21cc1bf3c0fc53b75a634077096cc0348ccde6d927f6d/htmgem-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d8f01f16124ca3d0b3faf596f5d7196f65a3f080ff59e88e167f5b471d09b20",
        "md5": "1c74bf3500197e0b03f1b71596554c6c",
        "sha256": "600a62f64b0ada245f53ea7c429582b4627cd448fe585cbf8aea2a37217a3f80"
      },
      "downloads": -1,
      "filename": "htmgem-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1c74bf3500197e0b03f1b71596554c6c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.5",
      "size": 8132,
      "upload_time": "2021-08-08T08:54:40",
      "upload_time_iso_8601": "2021-08-08T08:54:40.004923Z",
      "url": "https://files.pythonhosted.org/packages/1d/8f/01f16124ca3d0b3faf596f5d7196f65a3f080ff59e88e167f5b471d09b20/htmgem-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbb7b1a6d4c85488aae21cc1bf3c0fc53b75a634077096cc0348ccde6d927f6d",
        "md5": "fec5429a2f6ec1eda503dc0f30291107",
        "sha256": "df194f5c92442f7d974866df809b07c326bff10a42b2f35cc023ddbc6c5187f2"
      },
      "downloads": -1,
      "filename": "htmgem-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "fec5429a2f6ec1eda503dc0f30291107",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.5",
      "size": 11121,
      "upload_time": "2021-08-08T08:54:41",
      "upload_time_iso_8601": "2021-08-08T08:54:41.706811Z",
      "url": "https://files.pythonhosted.org/packages/cb/b7/b1a6d4c85488aae21cc1bf3c0fc53b75a634077096cc0348ccde6d927f6d/htmgem-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}