{
  "info": {
    "author": "",
    "author_email": "Matt Manes <mattmanes@pm.me>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Pixelripper\nPackage and CLI for downloading media from a webpage. <br>\nInstall with:<br>\n<pre>\npip install pixelripper\n</pre>\n\nPixelripper contains a class called PixelRipper and a subclass called PixelRipperSelenium.<br>\nPixelRipper uses the requests library to fetch webpages and PixelRipperSelenium uses a selenium based engine to do the same.<br>\nThe selenium engine is slower and requires more resources, but is useful for webpages\nthat don't render their media content without a JavaScript engine.<br>\nIt can use either Firefox or Chrome browsers.<br>\nNote: You must have the appropriate webdriver for your machine and browser\nversion installed in order to use PixelRipperSelenium.<br>\npixelripper can be used programmatically or from the command line.<br>\n<br>\n### Programmatic usage:\n<pre>\nfrom pixelripper import PixelRipper\nfrom pathlib import Path\nripper = PixelRipper()\n# Scrape the page for image, video, and audio urls.\nripper.rip(\"https://somewebsite.com\")\n# Any content urls found will now be accessible as members of ripper.\nprint(ripper.image_urls)\nprint(ripper.video_urls)\nprint(ripper.audio_urls)\n# All the urls found on a page can be accessed through the ripper.scraper member.\nall_urls = ripper.scraper.get_links(\"all\")\n# The urls can also be filtered according to a list of extensions \n# with the filter_by_extensions function.\n# The following will return only .jpg and .mp3 file urls.\nurls = ripper.filter_by_extensions([\".jpg\", \".mp3\"])\n# The content can then be downloaded.\nripper.download_files(urls, Path.cwd()/\"somewebsite\")\n# Alternatively, everything in ripper.image_urls, ripper.video_urls, and ripper.audio_urls\n# can be downloaded with just a call to ripper.download_all()\nripper.download_all(Path.cwd()/\"somewebsite\")\n# Separate subfolders named \"images\", \"videos\", and \"audio\"\n# will be created inside the \"somewebsite\" folder when using this function.\n\n</pre>\n### Command line usage:\n<pre>\n>pixelripper -h\nusage: pixelripper [-h] [-s] [-nh] [-b BROWSER] [-o OUTPUT_PATH] [-eh [EXTRA_HEADERS ...]] url\n\npositional arguments:\n  url                   The url to scrape for media.\n\noptions:\n  -h, --help            show this help message and exit\n  -s, --selenium        Use selenium to get page content instead of requests.\n  -nh, --no_headless    Don't use headless mode when using -s/--selenium.\n  -b BROWSER, --browser BROWSER\n                        The browser to use when using -s/--selenium. Can be 'firefox' or 'chrome'. You must have the appropriate webdriver installed for your machine and browser version in order to use the selenium engine.\n  -o OUTPUT_PATH, --output_path OUTPUT_PATH\n                        Output directory to save results to. If not specified, a folder with the name of the webpage will be created in the current working directory.\n  -eh [EXTRA_HEADERS ...], --extra_headers [EXTRA_HEADERS ...]\n                        Extra headers to use when requesting files as key, value pairs. Keys and values whould be colon separated and pairs should be space separated. e.g. -eh Referer:website.com/page Host:website.com\n</pre>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "webscraping",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pixelripper",
    "package_url": "https://pypi.org/project/pixelripper/",
    "platform": null,
    "project_url": "https://pypi.org/project/pixelripper/",
    "project_urls": {
      "Documentation": "https://github.com/matt-manes/pixelripper/tree/main/docs",
      "Homepage": "https://github.com/matt-manes/pixelripper",
      "Source code": "https://github.com/matt-manes/pixelripper/tree/main/src/pixelripper"
    },
    "release_url": "https://pypi.org/project/pixelripper/0.0.1/",
    "requires_dist": [
      "bs4",
      "printbuddies",
      "pytest",
      "requests",
      "scrapetools",
      "seleniumuser",
      "whosyouragent"
    ],
    "requires_python": ">=3.10",
    "summary": "Package and CLI for downloading media from a webpage.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17404579,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26321f73925401b4791c1ed1cc6cbacd516d68124b3398bddf0a372454485ff0",
          "md5": "4f475006b7353d67f3dc18f2475c0a0f",
          "sha256": "ab2050a0e300b86584268257d0ec7e8638740c90262b5ef8932d576c2fef26c9"
        },
        "downloads": -1,
        "filename": "pixelripper-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f475006b7353d67f3dc18f2475c0a0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 7807,
        "upload_time": "2023-02-01T00:34:15",
        "upload_time_iso_8601": "2023-02-01T00:34:15.433947Z",
        "url": "https://files.pythonhosted.org/packages/26/32/1f73925401b4791c1ed1cc6cbacd516d68124b3398bddf0a372454485ff0/pixelripper-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d7ccb9d737a6dda472655caf35f5aa6724556e490d49c0799f6a20aa9633d11",
          "md5": "e9a6bb6f050b2ca0658475007906f8fe",
          "sha256": "ce1cb0e76cc3cebea34763b12f677203a0f2da50cf181e47dd892c7ef12f1478"
        },
        "downloads": -1,
        "filename": "pixelripper-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e9a6bb6f050b2ca0658475007906f8fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 57377,
        "upload_time": "2023-02-01T00:34:17",
        "upload_time_iso_8601": "2023-02-01T00:34:17.250658Z",
        "url": "https://files.pythonhosted.org/packages/8d/7c/cb9d737a6dda472655caf35f5aa6724556e490d49c0799f6a20aa9633d11/pixelripper-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f203441aaaa8dcee8feab509f4b4c486f8adb39c36b41b00c8ef479bc671250",
          "md5": "ac5af15e3cb6694152c2b0ed0114006e",
          "sha256": "aa7dd6b59fce552b162fc9147c1cb4d72b2897ef620f639d89330f4df8e7e010"
        },
        "downloads": -1,
        "filename": "pixelripper-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac5af15e3cb6694152c2b0ed0114006e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 7782,
        "upload_time": "2023-03-22T21:30:38",
        "upload_time_iso_8601": "2023-03-22T21:30:38.386956Z",
        "url": "https://files.pythonhosted.org/packages/9f/20/3441aaaa8dcee8feab509f4b4c486f8adb39c36b41b00c8ef479bc671250/pixelripper-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db32c14da54fbe9c0dd0b85f2e563478d40457f6c97d52ef12c88b62c8b175f0",
          "md5": "0b13cb0ff105214ab2bbd5513827b207",
          "sha256": "d2cce23ca51db8dcdd9c8acb7c25f7a08d128194bf1b3b296f4dd7de56dde687"
        },
        "downloads": -1,
        "filename": "pixelripper-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0b13cb0ff105214ab2bbd5513827b207",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 57356,
        "upload_time": "2023-03-22T21:30:41",
        "upload_time_iso_8601": "2023-03-22T21:30:41.095460Z",
        "url": "https://files.pythonhosted.org/packages/db/32/c14da54fbe9c0dd0b85f2e563478d40457f6c97d52ef12c88b62c8b175f0/pixelripper-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f203441aaaa8dcee8feab509f4b4c486f8adb39c36b41b00c8ef479bc671250",
        "md5": "ac5af15e3cb6694152c2b0ed0114006e",
        "sha256": "aa7dd6b59fce552b162fc9147c1cb4d72b2897ef620f639d89330f4df8e7e010"
      },
      "downloads": -1,
      "filename": "pixelripper-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ac5af15e3cb6694152c2b0ed0114006e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 7782,
      "upload_time": "2023-03-22T21:30:38",
      "upload_time_iso_8601": "2023-03-22T21:30:38.386956Z",
      "url": "https://files.pythonhosted.org/packages/9f/20/3441aaaa8dcee8feab509f4b4c486f8adb39c36b41b00c8ef479bc671250/pixelripper-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "db32c14da54fbe9c0dd0b85f2e563478d40457f6c97d52ef12c88b62c8b175f0",
        "md5": "0b13cb0ff105214ab2bbd5513827b207",
        "sha256": "d2cce23ca51db8dcdd9c8acb7c25f7a08d128194bf1b3b296f4dd7de56dde687"
      },
      "downloads": -1,
      "filename": "pixelripper-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0b13cb0ff105214ab2bbd5513827b207",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 57356,
      "upload_time": "2023-03-22T21:30:41",
      "upload_time_iso_8601": "2023-03-22T21:30:41.095460Z",
      "url": "https://files.pythonhosted.org/packages/db/32/c14da54fbe9c0dd0b85f2e563478d40457f6c97d52ef12c88b62c8b175f0/pixelripper-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}